%!PS-Adobe-2.0
%%Creator: dvips(k) 5.996 Copyright 2016 Radical Eye Software
%%Title: C:/Users/Christoph/Dropbox/GK-BSP/7. Klasse/_Gesamtdokument/_Gesamtdokument.dvi
%%CreationDate: Sat Jul 29 08:07:20 2017
%%Pages: 25
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ LMRoman8-Regular wasy10 LMMathSymbols10-Regular
%%+ LMMathItalic8-Regular LMRoman10-Regular LMMathSymbols8-Regular
%%+ MSBM10 LMMathExtension10-Regular LMRoman6-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Christoph/Dropbox/GK-BSP/7. Klasse/_Gesamtdokument/_Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.07.29:0807
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end
 
@fedspecial end
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E19B4D63AE2F4E6
D63AB1AA2B4505B142CE5DFFD9ABB276D12A99E6EC7F3B3E52F6644A25234F2E
016B5FEADE1A793C518E22FDAD8559BC551A6361B7ACE3529060B541F6E27061
5B2303FADC3AE6AB5436D0CCCA8D1CE94528AF1987AF7F1DD26252985B41005E
A0771D902AF5B28B6209CD78FACCD779FF72B5DDD4DB0D452EE6690A886BEEA9
31F9FDD3391E0E2353DC2EA171E90DE5650B3D3C777CEF27E631A9252EEA25BC
4B0F86A034F5C324FC0EADF9D03849B9CE01575003819BBD14E39722A1013593
706076D62F4C407BE252B5F31039CFF5297E3FAB7DAC397C6B87F9890C273FF8
D268877C3A3EA85DA72EFE54D294768DE021DDC1A7C76EF77C6E71FBFAA99B2B
376BD412C94EEE2A88B057773FFB718B9D650AD3AD3FB83EEDA6DD6D62A8602A
9793082246AE611F2EDC8E2F96EB664D95D1958D422A58E668ECA7EFF092AEB2
0C9A785CBEBAC7352F57C70ED2E4636596BE81D3A30F918C9EFF269C4EECE035
BB6FFA5621510CA886CF7C9901EB57D64512FB64B10B5F14F53CF3CEFFD75589
91E2863E3559AB0B98251F9119B68D9FC1549DCDB652FF0580BEDED06A439BC5
EA11D1C6EC65411B185A3B3CE69F746B0E4112CEFA37A93751BC46076F01E2D9
1BA27FAF9AB7A7F8BE0D3CF1E4E4489A47D23E91AE3911DE781EA5769B908BF3
B1FA3743AB1774489E6AC37064B5113F9334F78C17CB202849141A1F5FC0C086
DF025BD411AEDEC6DCFF2AFA682C65C411D784E143285DB6A5B53752E4AE3F36
0A382EF21A8DD920396F7F52B7D55F13AFE37590BD79E91F1F373692B89D75C0
207CDCD62B5F5AD53C8DD8710ACDB3786A919FB356CC2695CB264BCB76E959A7
4DACA2371F0ADDD8BC75281D78F9DA3A6533B99DE6891224A5614BF4EF1DD2FD
31DDEFF8E566895F2F360DDFB20C9964E1494AFE21A1960C19CB148412464401
0F3AD4B83046E8FB8D95467A22938592D7129DC0FDC4BE50D5252BC39A15B690
9A72F38FEA8A16F9C0556D9DEDB9A655EE349F0956DB6D6268C6C8A46B1F9AC6
202BEA5AD2C4142CA7D8CB954B8D0C0FBE0C88D7C77FB1097C6B36D6495916FD
69B176E7FCB4DE017D2EE6B73A28813DFB7765742E60E70E5C59047F80FC9B43
84EE6F9A1528F7E58A9CB23E3EDE4478E23922F1A25B3421F4AB7F9881955BDB
0AD3FDEE591711DB3D81E0400F776034AA7370C867BDF8F8CF36ABF1E9B1553B
C56666646FB94D3EAD77C5E883543861CC556FCA79F7379325FB25D9E62268CF
E94C0E478D68983EB006896E6616DEAF9807C23208ED4C00760FC14D44FE0BA2
BC9B866704D0B23B83EF806F9F6CFD5B8352A969A72EDF26CFAA43F084DEFF1E
8EFCF2BE0F732F55DC22ACC3195E9040B7DEC0E8B841F8C220213AEA97259581
392B9BC171B1AE1279F582D9EF051C6F35820FDCD315337BEE01107C02C8ED05
8EDDC8170187CDF780CAF45A8E0C2D394A26B50F8BE449899175D189B06D743A
93B49963136BB32D1B6B21F5ACF79771B4E47D07EA87335F94152A9A489FB0DD
86A7D46466AE0CCF90E8EEBEB0E65B1286946DDCE4E681794EF52B5CD6FDC30B
F9C6BB9A84799126F7B9830D0846736F0649DCA8FCCCB124E1FADDFAF3D59871
7C8875D901C9EFEBFE0078093EA47D0DA522E233A57A7A281D007F1F6EE3CB17
E0FDB167D05506A96636F73C6233EB98224973CD08AEE3EEA3D66C3C9791B794
2225BD45F6FE01CB6C10015841B66CD6BF4C7F83840DEBB6211CE96439F8BC22
2F59724B115086B2747C2D0BE4656E35FA02FAF5B735D68E03B1C8D5993C7675
EC58C2E9FA5104106FF1BB529C9100B1D878DC9A077D21805E89D8B0F34FD265
B61AB7EA4EABB4E952B6F2A20051ADCAA1A7755F3100E650C89539B2AF2E61A6
2B64A00691C607F854F78FF9D34A41EA24E7A2ACB665959298984C764547CA13
08B05E8F31B235AC5629ABA53712A3C99FFBE16C7053D4CD9FEEB842D2A7089F
22776519ABCB28AB770424BD3460F1373086C6E0050E94B96E0E04583E17F8EA
94F4F66C7DC21C2259A1AFCAB704A05173E4DA81C4BA809987E84774F6B4620E
F1EF52D747B9C9947F8323A5B3A43F501364019BF1DE41498CC6B6D4436BE55E
5E97328618BF64DE4BEE2CB0F263EF782C0D415934BBFDD27F19E63578110A80
79C749D8407CA5EADAED6390ABE1CBB68FA80D3BE4430E9C9FFF5747D421EEAD
0DE2514FB118396A7A9C3D50F45DA7B7AC84D80A8087EF2A58C54D8AB7580EE3
ED58AEB83B72CB9028F6DD342489D3D1F1EB2FBA7391581255CA9B40078FA52C
1DAD3514331792901E33FA374D2AE78B868B197242F5735B7335A2A07B20BF38
1D94A2EDD5B21E328A19BBF1A09B4B308A8A510FF245BEC7B3004A57E094DB56
BE871B16CFA275D9F5743FB69CF161B63A8698A10F2495328E1648A2ACA6D4B8
ABDA4D671F194C4A1DC79F2A533BD9048EA67AB4E1DD05CDD42DA117D5956FFE
7111F1E3C21218629AF962EC95FBA423CCCD94DAE6EDE99695DA8F3767EE6CA0
528232C3E4AA6AEAF8E2CA22AC03C171BB4F4BD90D4EC8361D3DF55B5BF4BE17
65CD19CAB0F920849F9E24D38A620464A7B47B4E1CEB70BC1215DD9D107AB718
101083E94631B8295834C8C3BAF1CCD316FCEDA4C090854DD806FF8CF8D4707C
3B6CBC968560E0FE7EA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4443C3
E5389AECCEE733A2DFE5343CB6D3F245E38637732F7176C9524D7CA2AB7B9C63
9CD9CC802AEDFADED006AD91FA8947D12382B17FDCEBBC82F61E5EF76E8796A2
8F237DB4313762F37D2BA852713B598990DA46A5B5AA742257B88BFA9851F59C
63C60E922CD5A9A4D384ECE7E44E4AC39C5BCCEA527FC5AB1D05A2F25214F6D7
1EAFA4F101A12BC5F2734A2EAF7B05C44A104C322503F37A5A48ABA841AF2CD7
1AF62CC0670CAE7CF1C95F0935F78C17CB202849141A1F5FC0C086DF025BD411
AA814B90684A1465FEDF4891ECFCF5CD3D6FCC75A63F10DDBD8A23FAE7826559
F9F468E6C87F3B6D90DCC6933890391397EA18BBA922286C98CEA89B9859D8E5
90A22E94E29FC181032081C0686DA62604444B04310B269840524C5F561E2CAC
2E32267C08D88992A3D6F73A5B46F66116D5EEBF32FDFC699847D069FC2A6567
1D66EB4518FC4273096C72FF867ADEC79EF58EE77CC9AEEB43F8072F1848785B
A79FCB77621175289491E7A1654F2D89A89B0D13869795A7234CF01F9C6D90FA
E6D5EFF289A9B2EE8FA612E7D275AA4EE5B6493B7A5CD7B1BB36A193F29D93F6
197061B7E0724EBD5B2D76FEAADC98EA7FD3DC8C68334076DFF12DE72E6B99AC
66A919321FFC39B4523C077AEBA832EB995E27D36EEE7386A786E482EC5ADE2B
6644C0DAA6DD5D5492CA1736A52B8B9D95AE23A9C62D80781AFE2B9E872DD99B
6618C2CD47C0830E7D9C22023BA065390AAFDBA137D3B30AE2D428B279337804
1114EBB6F83E59EC7A1AF42EE975797830468685029B26D939B4C26255E4C48B
23738C38C522905337A70F25F14603624D393D39084762F438CC5490B29471B2
C7A7A23427D12DCD08C323F8920A6BC3812322B8BF3B64173D83287C3EBE0447
0D136433372FB330C9251103E56741235F3A1BD269021D4EFC90429432FA88B4
225A1C231E942257FC3E08A242B2514C24CD74D2A6056E9B89886CC12DA45496
B732668DFC3F3B096686CA6EFBE32940D6AD53B14DC0296750D8A3D509954141
6B91533637D5D5F3365A59DE7822E1EAA6490B2CCA01A993E505B0F761967E2F
6BB300D8EE47D79E2071A5B3BB3F340BD76CDF0C8109B7080172FB96FBB203F0
B58A4ADC9B4A56C6998CE54CC109B9BE9452091EFA188BE961C4CE2159B13D1F
7F38C7734795D322D9CF120FAF88391E1B6BFBCF6B6F577ADAFB3E1FA89A5298
96328368DABEC5CF0D5884E403A1F200A5F7EBD0A7DEDA931A3F3AB2A52ADDF6
EA9B251FE7E2B6FD928FF7E51CBB67E70B290AC88D73F1BD7D258400BCE4FCAF
84CD0C31F145EDF5AD4A686AD6A561AC73507D4CBFD16D0B592E7A24A122ADD6
648E6684DF75DB8DDAE50695FD089F6A89149BC0AB88D400A11DE3EA6F0EB052
5FE1A4F802F0B55F44A7564C18D44C66DB0E519C84DC7C2404ABCAED0FAC8C87
F13F130AE58347A9986794B83227FD4117B27984A141A4B19E69598FE5F1802B
93E6208D6555416F71253007B8C2A6733FC2B2B38376ABA7407CC293D890A2BD
0ED6CB619DD55E5326877C80FFE810F076D00710C302B4E5E8AD40D6C7292CEC
CE114006FFFDF09FB92E17D06B177CC07FDE861C2BB157EC305286CE4F0681B2
FE319DBE692FC1E762CBBA5E968EDE4B8D2EC13F789CF1A4AAEB28A369B46080
F4BA19B313A27AD6323009DC44DA90B76A05860EF33BAFAA1E86BB937E35BE18
11C42D851229D0720F3477067A517A9AD63CE8E38A7420786FDB323E28DF5A07
F9BDFC39F9EAC384BA6553A452289A98F10329E0F5B602202AA52C47B14AF203
AB2CFA2F8F41D4F0EEA6797AFD660EE8E9F0994EC687C2E16E4FCD64B189E46D
2E36F80938E2A77D5064EE1865C913AA54AC09BED489459F860F97BA62BABCE8
6CF3127088FE3ADCC1EC6731A7612CA3111694728D25A665667628C2257AA317
F5BAB54EE46C97533DE11EEE3B9FE2203DC6C75B23CE842F4BA86C8DFF65A35D
632A676599386A9FDE567168EBDF245F6FD15B81A40B9F999E5E1DBFD68DA302
AF45B67613CDD0892C25D55B9DEEE859A2E5B5658803B61116532AD67AEFE0F5
3A3E147FE41504D3E851A065A3F306B9064945620F2CA01B6F452CEAD59637A1
109F3574A16CB00BED125C8F78A664EB25065A81C9009775DA55FC896D091C0A
67012886B2959FA11D215B6637907005DA0F70DE7261063D67672C8EE46B5A66
BCB6C210AF684333A64BAC551A3C5BC7CEF0E9D6C70A9F2C9E7252BE1D248AB6
9549E7E411C298A49D307A2F8499B97F2312B6455CB547B771F0F0E4877A6156
A332F6ED55AFB396E0C5AFB06E6C5B432D112E0396B01BC1A3A9396EE80A258F
FA390D92CBFA445703BACD1CB0F12CC3632AFDA9076C2B4D0CA7D89ED2FFE813
C38D36DBC927B1ADC31A3AC9695E984ECEA0E37FD9715BAD2311EB21056C4F23
EE42FCF25B6F007D2D8BFAE1FA790C5036965090789D4F09309A682485948E74
6097911FF9F693D459C15D45B4A02609393B950AAAF4BB72F99B35930AAA74A4
77AFE29B1DAD0E6BD33735C1DAE7BB7167FA243BFB37AE424572A24EFC245742
B43DE5811867A3578589A939A0B9E63F74BBA9A961D5669EA25E1A47585A4736
B1045640800B0984898282CB81A3B1BD530CA739CA4BD0183349154498A6C76F
EBEF86551BBC49E97F6C22EC02CE64CE9F9DBE52947CAF49A788D16DFF72940B
A3ECFA1C2AD0E4174917B2684EF827C341DD962958C07E573EF02AAB076B0785
97B2DE46F5A67F2DB3D3D0BBB426B6889AF3057173323B6A9E5D5C9A88629A73
A26C5E0137C208DCF1A7143359F8EE27AB1E0FC08C5CB2C644DAB026162A4997
87D099A660B6766637FD4FDECB9089DE5CC2DDB60A534461E5C023C137C45A6E
AAF5A11F36EF005402F6DAA9ABE6FAD20E8C5FD8122124B32B33E7D9023B3B8C
FB63CF6C8AF9623945511FA57B5CEBF5D03BBC3C2FAA19D4E7C58231807317CD
31FCF5231CB1CAC451E1FBE5F2A1566193E94596735801CEEFD3404FB795EC4D
0857AA5D6620C95021DF41F5B98FD64D2068C3DE2065A772019C474B05142993
3454393CF6795B119EC6803BD53A8882D82929177263931D8C1D492D391EC21D
DAFB91C39EB134F0044F75DEA0EA8472C8D348C7FDC96A1FB6D3C45809BB44D5
FFB1DAD79FCD3034F758606E5E751C2EE2B67447BBE17AE78CC5861A6F208E04
1A8BC089735A59A4A4B48ABF4B835D34179E5B5D236084CE103F56B0D0815CF2
7EEDF796390EA69439E47749CCF7812E0A4CB2D756FB0E9E4903814B08C41B38
8C76A39DD9F14D883A4CA48B1597EF3E3407BD714DEE382685556E5FC2A8BE21
0B248F50EC7289144FFC2203B2803D2029D2403889525888EA18CE93A46655A1
669114BCBC5B20BB6045BFD5AA4BA26DC69F2A27D861C35DF34D2875D4E6E83E
7854E73F44EDBADA936D3818D6731FC67E56D594B8DC3681D1762E66BB265F6C
1FCE74EBAC4EAF1F31FD2889F302A9C5496EDAFD87415C9672042C5433384490
65A454F82E6DED15B32E69064C3C3C76FB633E604B1EAD476C67F315108F0636
CB0438FF4F0CA9A2241619C4B2F00E32C603FC2A137FC9C38B57718C421391BC
4E0BDBECE4A7FC58DCC2F00B5F239B3C8ECE59A563B4BE5B7CE1DED13F0047C7
A6B6CB3DB56340DEAF4B0DBC9D59A559B2BDBAC48EAA0CF06C0E94EA6F65281C
6D23D511F2C11DDF3FAA6364C632C8D7676AE40B6E071D6710FD81A5C59D0F92
24DA14A90F1742F8F0D83E93BF9A9108594816480C7CF84A535127E14A4F8A59
7D69509DCD6128A931638A04C43BCA562C95A4E0E78CFC2B6D4481AA22D69BD9
E88E5FE0464CBD7943872C193040C8E053C3F1EE0BB0AAAB446819939C82FDFF
92CE0AE4FA23E512640BD887EB65D2F4C5B17E2E8EF88F98DA8885B49EEB3406
7BFD6D4B1CD777C88DFAC69DECF80BEC71602E0E5B7E33A8466E4A855CBD2A9F
26F1497FCBB7C1220C5FE36799601CE72DF8F2762BBACC739CE18EB82274BCFE
2E9DAD577B66232B3192CFE311441655020C16B8DBA09D43CC3D8EF78F273146
24B8A09D68D4AAC414F307488A9B054FB5B4D0A2B019B3CF1CA900A00D646806
48F8DCF47A989C23AA8A00773A68653463FAFC82D1B9423D48BACAE809E3CA5C
F0DF52B66F247ED6396F2DC0C27737DA383EE310ED0B6E1698FE681520432292
9D8632C4BD136C89169D45718A88BABD7BDD6AE2154B9227AB5D9DB4B7284FA0
E58F65127073A3D1BEDA65FE59ED0418F6CF07B28837D638BC0C253DBBD04C97
A8F65464577DDFC461E6ACEEB25CAD1B04BC333105E9D6622174BDE3AB3916E3
4B9EAF5DEFC753A8010F99E7CC878C86D863F261E8969E275792F7C38F62F5F7
40836605EDAD3970BFDD1E7200FE6F7730D33F230C2C19BAE1F9E731B65CE2E4
64DC4A73AE8610F898B23D358B9E18F720457A4AB35C68C07865063A2AFC57C6
BA9317BB643C87DD94CA2BB185BCD37C128178A0F799A71662285C527828E5E2
03F328AD955AB433987B2296E7D94570264C5098160CC644902847637FBD2E1D
A05998A9F53DE5C0151E354118C14F4D152725A5ACCD01869CCB7EB952823D22
61AA9B3F73296995CD0398C35E55C528C39ED7DAFE7AA2AAF8B31211F9F84B7C
1C08FAE5E2B107DF25DC59359DAE2A50B98AB2D2D3A6081AB5067E474E6C96B9
741D43C6631805B7A26AC1D3470F561C053A1677441EDA83014D7534582A02C6
75ECB0DE30DB42773F9426C284326BA0D4D95BC25B242C73A631A39887FC0A90
8D3DEB35D08E2EAF4EDE0C0C64A45E3F43E955D40B23937F6C11622F344353D9
8F5E79D14DB113EADAF6B2813F3E8130E33961FE59835F21DC12BA218785AF90
DA1F859CA1E22DD25F2F16ECA8E5DFD480060643AF7065F4B6413995934DF095
93D8A52B15B471F275FC0E7B73BA71016879C1CA4E377DF7D6B278242E987A35
361D6CCE041594E0396A0BE4B7F5ACF0679C37303CF8BA999FF36F22473C8A13
323B056FB9A2609B5D06C1992CE9301D0FD1816B27F872134C3318A48C273BB8
EB28A7C6F669AAB02AEF7E1B8436828581523B4D3696275DD4BB32D03DB47A99
EB8C40288B69A9E79012C9C5064D6804B4B23AD8F3F3A4EC26ED6581AFA8B6D5
AD4F28DD5B022349FE7177F7423D2A3DACEC303A032718266FC1D0E4C1A6FB9B
EADAB8EF45B36F469AF412C1A57BC2B045AC90C9ED9042AE07EEDA4D1042BE0D
B0311AAD05E48B2C312C5348F3324D271BC85F7BA746B3DC5D872699004BB702
4E8BBA9756DD3301F4C4EB5F7A46D1EF564F9D4A077B51BB5FEF54A2AA6DACF7
2875A14B47F6C762A76900B8B1525F5AA47898560ED80F8F7DDFBC965018949F
D9BF625D58059C0C2180824BAFBDE47BB46F54EDD7D7FBE6B6273547B36C6311
8A600F83AF3FEA74D1064008AAF76D2C30A86078D56EE03780803A4FF311D468
92412957016CBC6216396DB209A4BD871C0836166EF62EDAAD0DA39D75BA42B0
738C360E479BF167F0466ADB7C35DB9645617A835E69536C217F2C24C07CB510
33B4F51FBF490CC7D88879AD24953286A517B34F612C900EE0CD2C295BE1B919
A7B0A0E11E2F291F270C8B9238C813B90355ABACCAB80AFEE37A412B255DD542
E77E59C19BC4CC22C5A0C62C074F3C2FB093560B7FE9B3AAEC5118A0372E799A
F99DEB62F1FB386855F555961A4763FB068903F0EFD56598F4761FA6C4AFB18A
B8418651E2162ED90877BB4BF16337454E773DCCE965FFDE0940ACAE0C8066F3
47EE1D6DB95461595C9938581921663D3BE70F2EDCB1CDD560A14E93017099D2
4663633B06BBE0B6801ABDE24AABF7BF07C8C599F051F8181FA2DA8EB509E2B3
4B7F9FDE14522F964DCD6AA3DC26D685111103EC9A300B47BD67CC8C0C1792CE
F900D2AB0171C4832E1E9D0A0ACDEDD11FBA0EB4B5FCA60EB6C2BC70DE5DAF10
FA799160EF194087E7CB8D3BBD6FE1DC8600DA605F27C2C549CEC434910D8AEA
A207BEB7A8B227217A25770BC15E14B984A78CD1C3D6EF460281C530F4A61CB0
682887ECEE1C77C14FDF9407926A6B3467A4AD5F0D63CAB95EE8339ECECFBD03
C4D31652F4BD758B0748B26C94B356CF9FF715F820B4BBFDD5D2F1626083FB8E
F288D06B7CF5D96EDC72B7B9B4BCC12F4209B1951AF23FF68419537C467E5479
0062892C274817774286E395ADE5035CA64B2EEE6359841860CBA24C3DA9B60C
67906B55C1DECE440110E7CF77EF9E89E7CFD5C7E6C184E7BB763090F6567CAF
D946F2F4E01311B8C2BCE3F1063E50BE9DC5FFA19CBF02B8C539FB20F08257D4
0F890FC7E35E829FD970F2E2D71D2B5EE0C3F03A603A161713216AF97A22873C
FE0F9AF5A1E173349F287CBDAA4BBB6CDD4D9DD599A9597ACE2FA8F5AAE91606
BC8FB9FE50103F0106569DEB57AA3DBEF8671AACC34F3E4C8B7F07ABEA1BAEB0
8746A89FB52AEDCBBDBFCD424CA16FAA485D6A574B0D0DB516FA40888A91B043
AC246F0149F995741E08C8FF08027833484674C9ED2EE44D10C0CE6B2EEAA9BD
199B63EB7A632949FB1EE1DEFA61B5CE1F3EC416315BA99F2FD91BC4957C78DA
26931F8FA3D7DA417C906CBA73333F9E5ADDEDF02D6C97E22DC221CC2FAE8AAE
AC174E1332902441A8BB459F0DA464320B7D29D1E85ED8C4C0711EC038C4F892
A2F092A3E45B0045DD5903762540856C9581EE6076F3482F71DC6699F1001724
7D9A803AB26BFC62208105C791CD5CB09CC87F317D28A289F5FBA009CDD6A111
CD7D739BB8D026A272D28A0FDF67AD2F9B62E5EDD6FFDABAF6A0834A8A33AF73
103AA5808BFE1822703371FA7CA0471BA96CC4442A3D38E101ECCC9162D60516
8AC0319C92357DFA5DDBC71063015A8035A9BF1DA3F832114E67896323A364B8
7C8FC7CD159DC7C72517CAE1994A0A790E475C4970EEC906231708623163ED2D
B636BA33208269330C24A4E1664C52F4D7C0250D658C633D68B6FAFE895787CE
65A85C662F6F6AF2DD97D00057DF42E2959BE5E014BEC6D6B45CDBBD27A3E75A
8DED52D40A9D3BD96B969C8038FFA8C28496338CC250F9AAE45862D763AEB059
4FBD382B867F226B1658D1858CF4AE069BC8D5168A2ED64AC3538D9E7D9E0296
0F7C0D013CCE063154E006EC3DBFD915529E1892AD2AB3528E7F851C7566BA81
164918688A78CC05C8DD404ECE7B7EBABB8F8300601476CD50E2FF86B820BF29
01741B956EF2D479363371A1CFAFCDD853C2451688884D5B37EDC8DEF2EACD9C
3985BA9ACAC69EE7B7CC429E3FEDE10EEB0AA4E778FACD39FC3CFD65308862E7
206A96B530E0992F3E91EAFB51032C05E7D425158BA8B935FE3468186ECD90E2
F15FDBB395191E6C4658E38CC94E798EE0EB746B23CBA21FA29503240EF2A29E
89DE94D3869EDD3934C338E53FA772562F0C9B1B0E0E084229E55D03F4CD2CD9
9AE5AD22F3797128CDF10220801DCD81B39A96D7FDE78F3A467E537E7C6F5D14
B09DAC7C08ADAA2EF193AD1E8F143823BA37E501B80227A901B3BD549F79515D
ABE3C74E9CFF1AC27B24ECDD666E441688884D5B37EDC8DEF2EACD9C3985BA9A
CAC69EE7B61E59320793EC60AA3AF4A3F68AA5E11F657F898F58C4526D97F1F4
63EDD0A9C0118790E5780C0AC27A05B4EE2C5E079C1A8C7C2A6C659F3E1577CF
45E43DBFBB152FCA6B939B4B19E81AB04DB0132981E7111A7668EB5E73730A4F
8DDEAE3628926AA729E064DBA9F0458FE35CA01891DE0DCDDF2638D8AB7B878C
0592C934FF2AC5B65943ECE21D9AE53BE7071237DF42A1661D656C27C4864FF6
9822883FD8A0466704337D2C19DC9B35C23652C18D90B02C9E0C18A6CDDD4CE8
21FF8AD3D0959B08F66B8931D93180F66A13E86ABB9C117C0642A3443674A4D1
9A5B037FFB99B7EA1598DE4357D87CABD63E5D229BA73D9CB7FF02A992E25150
895FAC67DCCC00076D10EBBB44DF439E590EF307E3EA8CB1F23EEA357806A3D0
D706338688908A43EEAC604F0F66485615B913A00461E8A7DD2946468FA6CC0A
0612B1F5A3B18DEB2BA9A1B4B8D8EDF6B4C901B8CCF101CB6091579BD4CBBDF2
276A4F74DE4D6BB8F341FBA21301B28340387F1D4C2912B3FE793C6BC40C82F3
A7EBD957B2FCD9F26BDA3B469D678F01BBD601F46245B0AEF9E9759886568307
954003001CC236BD3016C37C9A52426C43BCC7A04E9387E3E188F2F5C21CDB95
994F56D69D6EDD440C501D46E821750FAFBA1CF306101C7D563C43EE311934FB
DE196D72A97C06E0FB54801097C1DE55B858ADBCEE99123787716EC5034C6760
403971DD61EADBDAAD82A3ED3F80BAD4BEEB39C3C16C6C9C2CE8EC07EF3E83D3
86F9DAC374E9A17AB678698D2B6F11332AAE28B05FC9F8132E8C92B729F0F68C
6EE117A1C4940A7282F9550CE6880407EE8ADBC6FBEBB247D772B3A60FAB4F76
BE0472273C6F5D2619D655C3533FF17CC7A87BF1B8EE233B5AF77E9C396B60AC
5143932D62BD7454D7C4A1913193E7C3F3F02E3B8751E078517F614A52C9CF58
B49EF17CF7E195AA7D0D01C7566243448B222D57B811EAED9BEBA52406037E2B
86C88F3E83C98EC71CB8627476F29A843B54BA0DDD6C54A36A495743B1D165EA
43C1406FC1A9E0AB1944BDDAE1FB609F621928A3A51EEF5326855766E23FD0CC
DD99E7738567501A902119B337274497FA1DC33160B2617450B1B61F32572C49
46A32BADCDAFD35B452D3B835ABC68EE4F0A91D2B720BB2C5A1C96771D6AB672
6DB5E056F1F3B6ACCD076F6733596101264C7C54A38AD1F304AFCFBDBD48AFE7
9140EB33D4106D91C21177D64B65F245F3C8B987ABBF94ABA8DB33E6BEE9EA96
87189DB76123040AAC7E20D1151E8693DA446E9ACB3F176B640F93FA574D3425
DD12DEE557D4BF8A303203260D6B6B3E6330059159C189615897A97EB497CFB3
AF806EFAA8E50F91A710D45BB0452D7895FED4BB91EE25961F3249E6694A24DA
005C84176455BA74C8A974452EC1B9463A89A504AB57C377BB062C02225DCA03
E64F37A04D91B8C0B4B022FA0CD8B0AD48BF97B97292A186233093E526F03E2A
F8328791A97E1F107FE09C53EF74CF63B5ECD7C9B0A6F6C0264048F377A11D08
F846F089623566152E7DA26D679ED4D87F89B2D3FF1A88AEC6747927D207CFCB
B8DF6A15526ACC343427EC776874244E23A62B3EA98F5ADA485A644A34CD0F70
B5ADA7DCC9E4C810044111D831971C4BA33E9FD206A7B97E69443C912FE859C6
61BC11D959929AA73D4F72AE1C9F11629C24A84C7B21AD14C38A072C6AC3B3D1
6BEE28177D4FFB07026518D6946A358899374F4A876C701772FAF0BE6B03C96A
4DD31E07BA3954B288CD9232F88633A933830B45D506DCA647E66B811F82F08D
FAE1979E9ADB992C57D7DF8ED4A626666BE886B3315158838DC59AD0A0948831
E1A3C7A5865A52C5F4D31C49B716E117FFA6428294A0207997CC824F55F98CE5
C578A52FF470E124B6A09DF444FBBF332D5EB49BE21977146C8872ECAD4D82A9
33AA00D9FB5A046D818FBA90295153CC3FF0A4FCB3B2F24C4FEBA94E1642B021
6F3FBF9475529E5DB9407FDE0D0B5DFC53926BD79B95B45483E7C3EA372CB4B0
5FAB870872933F25A823A88C7E731F647895CECD96CA4A2FB08542DE21E6F3BC
CCE3243333F02BB66EB727253F9B5E471E26008EF53B1D72088642CDFBF5CACC
3AD41CD762C6D6F48BA97C63E4670B912619A20C13063E6730387C584A20D511
AF8AB17DD10B3AAA7E18BC7AACE9AE959F7BC447AFAA79DDBAA9230C3B2CD654
ACA8A513F352B24D4885A569A8DB4D0F274488C1CEE80DE89093792E921F17F2
640490C6F31F4FE1B034F6562C37B61AF8321665A9AFAB7CBA04422CE1EE9BCE
D2F9ED18B8A26187F676169A8C35CB9F5B9A26DC0342164CB04216FDDB337471
4BF1775A6D19B68D965BD8D79124D5AFA9BD1B7B08ED7430E8D0D92FD96B367C
35B350541459C0EE14BA0A91490D1361B82E1B0B2F7D7107A377EF76DF1F1D6A
1122A18DECEE1C77C14FDF9407926A6B3467A4AD5F0D63CDC7B35AAFA8A423ED
3D482352EE710D6E40DFFD4601D4EA426DCE772F4B24C9343E42C3D897DE5327
96B42E88C13B5BECD06D47F6B05A5E7A47526378D488DE309604EC71E93E4BC9
355CD59870B8C57F2F7EEB6B877B917E057DD11336046B5DD23AF13B20408F7D
E2E0C6BB7997FAD6C76D8F8E2C75D7460CE135C4E1D0349033D576AA7DA742E8
5E9BA72134CCC83B6EF77480164AFC424539EEB8DEEBE8D06A555B642D686CB0
F0DD3CA419BC2D359B6570A4D5AE25DC5718B8A52EB4A8A622A2FA90F0CC6F10
41C74CAECABF8616AD95FD9ED3B11C918BB38D13CE6893AD2F241B5CA8B55BF2
8DBD16720BB1C42C9A90D5FA186E5A64B2BD20D4F672F0E903A875CE4A11679A
27EED16CAD30ED18B6F832E45704E5A2A51FC399E8197482D2559750B2FC2542
3470B9D3B0C902A7D952D8E55BA7DF9F1234B69484C237E2D1E2E64C0D483293
29A834F45B44FEB6FA4349A180D0B4BB20F582D459481331629711A8DE68CCAE
80B0FFF87E514ABCF5B87853A39109574DD12744AD2BDFE788A6FCB393E69BE1
7EECF31A8EDDEBE52F670153C12D459B6D919E9782026DC6A0B1C8B4B5AE2D6F
F99C5A65AF5D9F1D5A2F357435AE71B1DF46362BF3559056E31AF7320D822322
6EED52626EC063253806F30D13DC8B1A60616CB434CDE7436FBE5D67D8C42744
4311964F88706BD4BF54A5A216F2EED84DCA3C94388711AA514EF8111BD249F1
4C41BBB36ABC6291B6299555DB7E62A74F7AF17554C9818684AC2CFF3C2CB420
51BDA2FB7C6992B79CD83E40292315B0EFE711C5446E24C768AF07829359D958
5E64390C25DE13AC5F07F589B108A61F2B9B09CDFE5866948199CA27C1838AD1
25F2AAB9F2E527373DAF483D0CECDA8EF1A082C93DD016C993F210B495B3DE7C
70854B3BFF083A22D936D6340377139BA9397B57CD7CAC1B9E570FF69A6A7A1B
C4B9A2CDD13A373A18A001810E42B57078E36F74D030289125A0BA5A982B317D
8BA90F3F44F6CACB1FCE05A6CB8353490D48F5FCD8601FA561B0D9B1117596E6
FFDF4E2105605C3838D79475F488283E17D379F989E79E2A618B94D724F053A5
6FE4CD666050B4554CCED753DB52D6ADF13BBB37343980D51CDD3524F0B146BB
99BAB1D6B998639A03A4B5CBCCDFEEFC01872476101D65E487A587B913901252
5061EDF9DB348304CE2D53493AEFE8B0CA70B8BA20AD06744BAE758B478EFE5C
BBAB5138D6E4ABAE23A72E6E372DDBEE44AA952CA42668A93FC84298A559C073
4F5108CE1FB984C9C5B21CF8236154D849C83E34D061C68E37F09083C2B38C0A
2F839FD639DB0FAD861454023728391BA228211C06AA1096232D7603A06ADE57
D040875E3A7F03DC50F41C4657934151303A0733B90A29D2D4914D53B8EFF347
467DF545E945F3E231D1BB0017A92CE792F5C883A8D0A79774CF420783677F88
6641031043428217F4AF4C6D56F6CBFE383E29ACFF6841A3A9D41A7CF33A7B59
05412A63F288F85645B0DE47D1F957988C63DA36A3577710E1BF34F0A215736C
4C76625769D808103E9C54875B2146E9F849F9E4AC043A1A15AE68BD6F0FAC10
5EF2FD4C3E73C6003F3356AB44A01ECACFBFE4CAECA175260290D8B0FBA6DE7D
DD436420D7218127A814668A98FB02720B0A0688426C0C1D3743456D1CBA4A62
2EBDEA00FFFEB8C51B57F75ECFE7238BDE6BBD7453154FFDDD3322A2B0FA0C1A
B82116D999DBF4C70D9A3F8B72B95440914969A1F2D001A5D7C9A8DD9089A499
2A9C06619AA6CCBC3DD8120AE66A6A6A8862CB12A1135043A04BE41F18B2CD19
AAC871DF4CCABC332ED0FF854BE70311218D1226787AA0A3FD23E2890634946F
4B2AD5E5514CA68BB67B6D0DAD8CC299A8CB22ACF60F9474792EE1B00CE037E5
4B6EBE4A725144D8941A9671A2AABB0CCBD932A4C517BA7C024CE791E9E85821
EC8EFB624618239067AB0D70008BB2ABCF06E283F5507F6F94CF68C2588CE112
A6D2ABD44B748AFED5F42AECB986050371CE273F61F89C86DE2F31382706EA33
D769A6AE2E9D189076CCFC5BD40026EE4F33793041E83EF250D858F61AD28EA4
88D1ED74D515766E53D53A3D170218D3F3CD67D52C6CE4D2A88834CEA8080C90
A3D588D03883FEB4F3E7D363C7296984A2980195E373EAF1B7B910D3B2322449
86E26AA8396D696EBD94E6EF1F3ACA5708D5656854704294478B4C661D4A4E9F
A155F8AEC542E985D4BD95E957EE45E70BB821363368D41EF321F1FD66935B9C
91E225D0AED56107BD6F4565A426421AB1F43F6F95270FD6274540476E3BBBA9
6B3FF82F13A246D7A1708E45EA0F954AD7D03474A6A82DAF5E1ABDF8CE3C652A
8159D3255479B96DDEE53455F41AB052F11C588936C0D4CEBF509848CA84C2B3
5ECC10DE1D4A063CE605C925F841AE01B286AE295A1A0CBC029245E94EA10FFB
437FDFB1DDF2DC4B8D59F781ED48E700F5B35BA0CEC0EE57B9DD9F9AFAC453F0
1520EAD132A69E350E84241DF40DEC391901EE6BD0BB9994FCF95D431D6AE048
3414B9C10D50909123BCA3DDFA0ADC2283C623DE81693159167C12BB3DB07AF1
1F67EF792A25D4AE27807648B4302DFF36415917829F413DBF6B1AF5A3923521
AF702F2FB7382F9859D4C890589C7FFC9F6EF171A9A4FA400DB65787641CDB2B
39A9370330D258EE8515E8CBC0DA34E79D81B34454797AB7402A7E4EDAF95096
4E903405EEEAF0E94F8A4FD7D591A617EC7403730DC7FDC3F6298C4728CD096F
595E9A52B3D8AC1E8FC11E22707E26253E1AA5708EB8B2AD79C1A84009407BE4
EEA0E6E0851A59590D83B6F57428F5D92F0D318ABB61FCBEE8E8B0B00C0CD02E
91B7A7B638AD6B9A54234FE345E1F0CE798DC546A503581846F239D6F7BC4BDE
AB3579B57030F0E4B1F2BB0595786E87D240911DF09A7B362D7CBEB0CA28A1E5
98EB9F847D6DFD21EAD729CDB7B378CEDD34262B37A194EA49C428E91DDFBEAF
65EB7B28D41FC2ACFEE9D6D55AA9AB5F777E2FFF6F8BD0DDDA24F9A1F4CC349E
D95F66B71F96F259E0895B44F511485B30A84709054F39D5251058E8856D6433
253D3165DC740B8FF333791EA89B9173E5658CBE626B87CF0AF0211035F415C5
B593CA786F561E18E3F6634141A65185648E67F28A86E8AC689C1918C3BB7A66
97F6664AC6B6C1F5650255776305892A6E3A0E0B7E7D2801778F393B2383E55F
EE3E8FE1D842380D74F3C3D113DF45488C62D0F2585855BBE79443A489F38BF4
33A0EF96C16D45B427465DCB1466D62F4436EC6E98AC0D060B8CCB23F49CCC82
5175CE2A3ED377192307CF8D98A433D6F3C4B442E014E3E5A5E82E52DB5332A9
4881C58A33C57BF883777AD1B0FFD5C8C14C34C3638DB5B6BF7D54B8ED9F821B
E9EB51B17D6F00284F0663C888A76B1F9AC6202BEA5AD2C4142CA7D8CB954B8D
0C0C2BE577FECD107853612CB37BCB221B328D41B17F7A1C69828BA34A56AF16
9E5CFBC94507E6D97A1CDD7F732EF17826F94B7F4A00706240637B9CC0720467
E68E2CC3C4AC8F7C6EE6630A0705520572CEBC415C11AFDCB68E36C823563696
AA89DD0D5AFCDB99843193FB23721F1F68A2CBCF0F1A2B6EE7B37D178BD41182
ED5D3FC1E0A5B7102659A700D160D90AD529D82A2CB53C2A84C06C7996B5F0AD
863E34EACAB63284D6CA5FB5CC8695073A1FEA60B1430BA6457E39F6196B844B
8586DF247029229DDE41381342F7565112A84AB61AB2DC9709BD1B68E6772300
6AC6427F2ECCA160266B27965ED5620CD5D991A02FA65EF3AC7467289B09392F
A0E5454C2048248206A1D136AF663477775122468EB97013094E13A53F39673B
B3B8D170F09AD3C04C9EEC7C566F007B48F2292FCD28A4516DD563692969EC32
CCB65FE9498216960A09A3876B6D3EDB65BA58B1F8CF7D23CE3F199B1E265B3D
C015029A4189E4F84B2C05A17DCD8BED5A8ADC08494E5BA8B57CE52275886FB5
A3204F03427D0C1ED063F935C93FEC0118A7769B0BC5184182C32CCB460E7D37
F4F370B17999FCB96393506C7B820B1DE3CBBA01E2466D69544F402DBC7A3845
DCD1DAF1FF3C3517235BB68826A3CD82D84A59D3B708975F4DC8621660F6376D
1D7F4E298E485F8E04E92111EC8A7A7F6B5B7AA5C8B84EBAF427DDDC424C644E
29100BFD2EA8B9E3650DAC07F217589FE83159CD9478EA98F3BBAE93457FC4AD
38CB9EB8B64800FC416A66A02B46655FF34F6E500556C8D129C9DB337DD35523
721CDAE04A74E5B3BFE46C3E4A1826C609F0D22523C617FCBA88AAD7B5BEAD75
66EFE5BED447B2B13C4ED87199D2C34745DF2E81BBEFB063C3DAFA424164D7C4
1F2B16CC460BDD35D4B5D1F13577D32B095322CFF5CA3BF9C7E3AC3CD434FDE1
329B6F13497F86C1C68A8E469FD86150FDC6A9610A0667941E389A2BE93A7040
011F598385022956B44B40E57399985B2C388663EF2E668A756804439120E4C9
8223E71EE3A405E80A7B0D750BDB63C8B21DDA8B2D31F8B3F7DC030AE954470E
C508F6091FE2D4F0FA1106EFF5156E2A76111DAEA6EC2C6C1F96E0FB4282A2E7
89A2270CD0E41CC1DA09FD19A824FD237E818F856FFD810D11C2D98C3CD07C94
2610177BA2E331993DF752B5F82A0FB39595658AB429EEF5356F7CCD11E4F2FD
F367560755D8DC1A188FE10A825C38395E5CBDCED6A7D376AADD7F62E1350BCE
7E3882E49DE831B67279F1B0310A4975AEFEC1D107D02BC33E71EAB0B0409E28
9A20AF50D837491D14D4BF00414CCF3637123553491B673613542D8C6CEF1C83
DDB790450016F1A577DA7849BA314CF401C8978EDFF6876077C9F409CE22D45B
06945FC8F84B70D4F5A6CD2C23B5F430B946B8CCF7AEC4101F849712E14A1155
9D28EDEB7FB986FFBC9A35153E645C37CEDEF8C79E74C15F8C2CB8FC3228A355
2FCF7875500C3C4CADACF6A45BD8923B5DB89549315DD15B99C7729C603E8DD1
5D844ED28D820863E932F197A0A3316F3F9D917B293DDCAEE45B171F5125E4C1
B5EF7BF3D9E8ECB89C6B7E2213C6BB5DA31DFB05876A64386E8135FEE20181EC
EBFD26A758579D770399E200761F62060362DF0E62765CB57ECA2162BD29F0E9
26A1042B12A8CBAEFD1289405513A645769B4874C1B219C6BBB2A408E4CB4977
E1E410C26E09C9BB6CFFB39976981C550B22946756971CAE462E6CD62DC5A978
097354E65E813E3105A6D1AA7C644C144DB64C88CE54C39E3246C5269F8B203F
6C53CF7C698BA7F9D5543FD4E6532B552D34994227FD7BC1FF90E09D5BCD4C4F
B87316BC327ABA5D5F5FF14BFAABDB5B86ADE2BFE27697FF9C6A98C0F94E2411
023F22CD2DD9D78160B61716B044E5EB7629141E928065F100485D9F3B8B689A
F6978D929610EB3B5B3F86179CB516D72AD0671EE6AF9187E298CB7AABA58E3F
B5B4C7E86616C5E4EA90FA8A632DA2E3BC27F9476CB699295F324F6905196C46
BC83E8E043427C28A2401F5ED30A4C2578F0699622B0AE31FE4A67F8F65D579A
7115EEE9EA10B3EB5DFDEA185D6B4A80C1BFA827E4F15E623A96FA4C46794718
7C074CFD2728ECD18DDA85175E3CE67FD4A6528AC2AD25C75BFAC6256916C495
37FFC3436E0219BC258679D9680B7F2AF3D00D0A8444DAC9D6524069CD6BD140
E4A068AE41F6E540788AF492F3445549BD55F8CC975057BF45F69BAA382B442F
ECB0672AF81C8CD3FDF2E155D0471A1053DFF4CAAEF20E9785C24EF7925C088D
C898C0DA43F8D57006248E727C129FAF6A87D2951C9AF8DAF61FBB8CEA55C9B9
1EB75DC107FED57AE13BC18DEB091105129F16BD5B298C0C1B4E007C9C2A1C05
86B1F439A32B140311904E13086ABD97C5E735F069C3B10D43136404E769109A
3CECFB9FCDE895F7C8D181F4C52F3CE2C9F941C27426AFDDD307E2679B339EBE
55411D9D0784D058C1C336B45F1FF1188249A33A6E064AC1250B4C879999B04B
F7CFC2F80D75B782F24BF7ED544AE148467180DC2293FA812D81720925915ACF
CE13DBBF0464D7FAF3275BCD65869D1077E8F7637C9BA48F730C2A8CA5441A4B
7ED06EBFC5FD54391E8EADD19E252396699126A3C769848DC244DCD3F8695A01
1A3611548561CE7D6B0FF36D01D3EB5752C8F6DB1DDD04E44AD3FD17A2C6A568
54206D95098E2357AF72A2DB2E8385C7B35F69B7D06F576D7570D2B23AC52290
F3ED13B3A092119275C4A4E8E7635BE88FDA352510A73862B4ED64CD18471A49
B62240FEF22F4D8246890FE636750956765D637B7CABF7F9A593D9FF6C322891
403E83EA001C76B681675F5E4400D758C423D376E2C663D7A4663A76F0F44232
B4628BBCBE1DABC0F88441D62EF05F1FE9E7FDBFE860AF590E6F180B5759BD37
EBC7B01919AF3C96D8B886441B1B129C103CE971961454C5B7D93B58792D4F9A
CD92ED5A79AE617B77D886B36E1E0F948937517DFE1339E4C6CE0DEB62D1DAAD
58CF3E9B4693D9F1F77DF812A28813BA8D3D1300252E533DDD40E8562F6E51A3
644E3CF33A75F6433702AA29B8A5F73C8A62D733E14F62126B39BDA512017E8D
6DAAE40F42EF96920E11B601297C344851365BA25E2EB9870F9ED62B69B52672
99769AC5273B133DFDE93D5F07007A0A802BA1B793FDA17C8F3593DF46E0EA33
8DCB55368FB37E1281E412580F98F4F66C7DC21C2259DCBC688CFD5AB16724B0
AF329C8C9DDEC7AD1230772D7B1847D10F04716165783C700396AB08AF44CA95
7041C3EAA6C293E6583B366661E5A08D51CE23F376F7F35ED514F35141D63868
0F7EAB557A9633C4768B2BEA4401FD7654860D21EE522B7AB8ADDBBC339A96E3
43618275F4F1109B55327515A31DD64BBFC897E149F731509FB6B908E92C39B0
43FCD4001A71A07B1EA6AFB5242D1F83E91654125A406CA011D2A684408A1B8F
08ED5829EE25BB459F49F2D6C071AE6E936A7A8E5827A1FB92E4D17DC918A43E
5D6D89938530489CDF02E8AC32BEA5AEE7B0ABCAE8BD2AC7D6D521E9D0A70DB9
A2BCA8A15A617ACEDDE205B25DBD0D8BB48B401A0860DA7D9A1A42782A51E5AC
049C1BCF5FB93455A74C7E013AC550C78230F9DE24808643BCDBE88FCF29C984
876BEFF75AFC65947B449F21D2418D691A95FF11B58FD6F8BBDFAC9A3E1BA1D4
9D6851AE443AB405847430C138E5806B3CA35021D2F6BEFB06D72A20650D6513
EB0DFA577FA4ACF0210CE8292ED8E977570C1792AC0CF18BAF9E6FC668A57324
8CAB6877415713514C2B1A3249E83C9B3BB09C5FE38C7AC82B47FA8B772433F9
2EE844A6DC01584B8219388C5D8C263247DE143D17FD9E461046CD604D79D4F8
3161C24A1CA0B104A9C7F00013BF9997611ACD8B2253EE29D6495AF9FC57F5C1
D8EF063ADA63F3351D5E8B2A5BCCD2844809BDC1FFE3C7FCED238E4B22808263
B7D46ABD2530630BEAFBD22DCC6CAD9D6A335B2BCFA6D000A7C579EA6EFE3AD3
A22D93E1862097BC7006812003228208628F591E3F7F9B10E75CA66B200289EB
185F304BF5ED4AB523D8228AFF7DAB1B8C4A4BA57118F71AAC44BC2C685046B2
F86F4F63D7DD0FE9050A917D8F6B6B0B3B3AC6CB10A3D4356D455D62896461FB
56A22F5208086E958DE6EA7CB0D725D2245F4CAD81E8CD4B2A1B7804B8418D0C
93AC7EAA9DF793A62FC3E0C50F55A84A7B3338B2B5BE591A4A68015ABEE8D187
92D44F39EC6C46CA15FB947C4D9C05092A89F03CDE0E64DB4231848DEFA61238
DF70AA3A421603ECC1623D32353CD7684A1C37FE5390E6DE2159D712C43EC391
12935BA5FBC2D1C0F947B36ECD96CEB82DB4F150E0826E153180D394B568CF2E
21D1192D110D083804EDAB0BDB4E39C6C5BE8ED884D0BF396D7BDE86A40ED5DB
DE8B5E537B68A693ADD1C0AAB38ABAD05F87B9D8982EBA496C82416E28E04783
C751B8E2DD8F082C1C06DABB32BCFD7EADC3FA5A495E458584D0651F4644CF51
DAA8608BC3B698A22BAE29A931B0A7B542D018A730FF2D47456E33CB6D616C62
D1502A7AED40CCE32031FCFAE2737B412807F7C9E6494D049D1644A6A5FA8A32
C70F2B0FD9F9B61C3966A802421176132DF3F9D6BDE77DD5870ADEC8900D6346
957B84CDCDC48EABFF408D5DB3AE15BF6B53A9FA80CF7323CBD65472CEE0AAB8
449EFD258C8DAA3A6A5732A7CB0A03B71F578D3091C99DD2D487D033EE9A75B7
ED9E43439B6BB3550269959F55E4C6C1C1C3851FECAF5B1A043142203BA2E00B
71FB9FF3F957634501ED2FAB2017C34B7865D9B7AD5A7ACB5C30A9E79E85CB8B
F53846F45871E089EC4FDAFAE37CCCF06B3FE91D122491600FB93D0D9ED709AA
489C88E687D7A879CAF210C5FF0C985AA25729976C95AE251372FE9466410851
CF414DE5DE71CC9C37A02B448564A000E19AAE9D002087C14AC12AB21297523A
D709492A4509171B6951BA6AB6A3618EA101BDBEBE827D1D060322B226701B91
7BF3CF980657CCE5506A7AC923DC5E300B27F324BD9EF003A195663FFB3A1235
FEC42224E08E3030C5704D504C4C70D8D1ECA5A32CDF25102F155E17D360D4BF
7EA9DFABBD162B99C9A24FD756FE4A16D2FB9E14E1157CF0ABD603E733B61880
D13E8058D208D391ECA58C39215340A5C6B93AC26D6A714229942165A6E8E213
9F101BDB4E2E6650DB6CA8EF4C2CEBFBE5464EF41091FE9652670F92510ACA7A
FD71D2B3E874456992AB8727BBB1EAE737051C55625AD1F9B8F9966E65A7C94A
8FE17D3BD5D837416D3E85CD0D1AA5F35000BB2C95BA0313F66FC77F1AA11A8A
FA6B6EBA8FCA6750CB48A95CA33E36B854E2350677895DC6E31E6A6A9AE7E377
278A307BF5B4B911C17FB2929D3E12A8967364952081AC22A7A21F262068E043
BAFA2CCBCACE0875E368521C0D91F1566A4D03411CAF6FBB9734125C5E45A818
F41A007E63A3C002EB5CC07CD313A25F3A0E257751978E5B0B9CD660641698EF
9F5C3F9C1E9D28B71A246B043CE44E65F404E20D973B0468FD4F84E83950B76B
1A05B4DC730083B8857C0F15DA6C85DF863D186A011CE3665CB550EC9F17849F
0BBFD3ADFA44CC3A1D926B8736786B06895FDA6FAEA1DFE6FA7EA168F4DDC5FA
86CADAD2636F675A2C0AABAD167C697E79A5F4F65FDCB18B804D049F9D2DB185
B3191E65BC5E6063CF2C5FCE193A935E7E55567900BAE1A8A9F618F74167989F
FAB4CC1EFC88C2FD7F6D050FEFD09F4B13B50F28C3DF4271EB2229A1B1EED0B4
C8464F12117410497DDAF858486B03E3C2D41BC2A82DCA000081DF5D44A8658A
8184C137F755CB6B31076D9C6EFF5BA490DC733F3E07E3D06D4C099408EEAC01
3F85A4D1DDA132C49BB919F408209B6D42AC5F381A758934A721E00A851DD736
AE1E1636174399D9E9174DD406F83538A21097722398093CBD222B559CF79371
B1A4373E7167C7F751F55968F63A8507C386FCB705BBF46AAE7CE33D96C98F5C
63F2AF356DEBC9B82C938FA20D18544670E9BA508CD3D8330D96CD8F687E8947
B12E123AC89F962D21607E3502691CF790EB99F57B180C4BC71579F931A98667
E704A7ECE39370AF0A1337290A562AF46CE779A20CB1437E9B37D21481BB42DF
9F34C5E80B618FA651FB1521235F2E1A5A36B8759077826CC325B1E2FC8491C5
053454F89637A3099F1E6F704C5D05B3DE9003CCB87BCFC10B473C32A5DAF8C0
F963BCA758B2A02CF70A46A6784B53E843EA6A3F7747839BC4666E9F973026C4
A62303499A3D657B0AE3BDF9CD693B329D17C969753C6ACE488C99E6FE4D43BB
B5FCFF04D15783ACDB4A23756F5EF15EF4B8D2A83223A8BB74371968A4941275
74D949072838BD5DD3B94BEC96107E64F621BE09010CB6F43790A812012F96C1
AB2C7AFBFD69EB36665C7E12F29EC4BB76FA7177A2407DBE548C32954C6084FC
E9ACE3D518000A7CE1C354060462DB1C2D4F196A74403F613C3CA737B282A4DA
E8F00627ECB1C79A80D84EBEE9B8A33A421FAAD8803DC0F3978630F65EA5D663
7D5F9E3781F9B21AA9AC297D0263EA909F25CA31C33A6A466CB9B777366802EF
26B8F9251FBE08FB8C4BD04036C06AA4752B076F4D900991199885A93B0519E2
71339BEE64BBBE22AFAF5278C82CCAE5DD8BF0420343CD71129BB02C719BC570
9E95365EF1B4BA15AD718CC5E605CD6C3C5A46E851536CDDCF4ED7F82AC3089F
2C51AFB51ABAE624EF50E7F23B3A41826299E8D38E95145F61A7C343605A2CE1
64FE263406D6C601F6474014DCFDB71FA151BFD05B61C2C2B9F2109F9AF13702
68AB1F0E9E41C1E7B82193A0F5CF51A6711C038DC4EB29885A11D100A928720A
707BA004D9543A82B52CF93A1DA8D6C95F5714B2886D0A38261697EBF9ADABBE
1F5F18A3035F3B493A5A1D81CC439AD51CA05AF1ADB7FBF5919A2893BAD39B99
FEC7FDB24FFD726EAFE078FCC93E3811030C29E471B39B289B7E88A9EB85AE0A
02809707AB95C5232A86199F3D3E837136303F315A8FF54C651B8B177A6F93B4
74A6141211040EB96060B55C6F028580BADD8045BB5A801C8A2BFC379A48A55E
72A5D65DF97D448F3FC602E587E63247986CC3B29B94F238587C80FD855F1733
F50F636A4C7426584812DF5A737ADDFDA6A5FF6E1016133A1B4FAFC8294E84BB
9B34DA32B98721AAC2F00DF496288F46F21FC15112897ED6716186336BF5DFBE
BF01FD780E0983100AB715FA4B4368B1F9CF94C24746C3FDA17F2C848A471158
38262A36CB0D9D7B2192E831AB2793012576B6C7D43D95ADD0B0F69EE90459E0
0A2F7DBF72B2191F8A281E6314A368C01EDA868BC64C513BBF688CEEBE4F82E9
821D999286997489A5CB1C34B70A65BC238AF4A8E0F7466729AAF52C73F50A07
9F9FA757931F47EFFD4983A7A210F25854C4A9FCF6DEF2C5BEC067188EC4CCEA
66FF03751A4D7463C14E0432141A22A82D5D319CFD5357DDA5167E3C08C32DBE
342D42D52C383193734662065DD5653C091F9313FCD4AA59D7B64AD40E0E8B0D
19951515A6EF4DF74E556B4F5E7BE57336A0CC4F925415F9F6B65DD690FB278B
FA153A1459F6287FE5D0DAF43043794EF59D717626812B5A281B2437BBC4295C
CDAA8DE64137227F139DC4F0A60C2FC213EAC75A50B61AB8AFDE8A85854A512F
7DEB6F9E6A6A1DB9213C2142AEEA0B692ACA1E819ABF8BA0B8EB68421CF6BC41
F06633E676878C5AEE8E8516566F08BDDEF4C2488F7ADAC06BE7EA51B3F0CBBB
E1BA2B57FC143DF11A0BC06086BCF9CE411F3984B3B51AA797687145CB735F36
442C20E14598F0BFA3B6C2011B842784111021F7F402FB88A89D4370F728D86F
5DDA983EE440207E66FC0E11F95F8ADEFF72173E9A5F2AB2F62C427E5BDC0E9B
80627BA182659028839789B8E47A6158140C2CDB19AC0EA665E81EFA14E50016
CF96ECF148A8A1E8BB212C9E0137FE1365B3985DC2DA7D7E68619337185BDEC0
0CDFE6DFF45B230623DD994111A1E8B4BFF9EAB5E6E85031FA7384C9D2DD211B
4E26DD455B8C450A3845A54354AE7BE0106DB6CF97066AF9A730E2CB0E054CD9
313F951021A21A60DDB2317D3C80B1A70B71AA537516A6AE91DABAFDE4BA8F6F
2AC2615C55249640B3121AC66E9885161946F3BA2F3D1C14EC30CBF83E5729F1
C074D4F160BD07A09A3F3D68C52B226196F0E466DB8BE5C0AEEC0AD27414F8DC
4749DC919D6C50524CDA3E22965E2FA5AE2A88A610AF85E4F3CEEE61BD960958
21D9B1E85677D736726F2979EAC946F8F2859FF309B8474CE66638DFA57BFEE0
7D7347B80849C0A77BED172308291C010DDF568B51E7538210FDFC299D6968F8
AFC4BFB842BAA7BD12C51C5A9DEFCCACC58A1D725414B7F41070DCF646C5E9D3
871CD89B161E015DD6051D8D71814BE7FEE42E6D1EB7644C10A722A014371B6A
9F0880EF29384A5AAB483A5B9E87B17D39B03D2D10CCB946DF3CF00BA99FBF0F
5879F29352E7993BA391614B8FAF4972E3534FDE51A9874A785676C2EC774FC2
36D91115C81163C14366CDBF3C81F009D4C1528878E63EB87AE86DF8606145C4
C0D45AE4E98870EAED1AA2DC43E40AA823E706B59A366BC76F01E1856BF1089F
4CB6065F164A524209A05950F80E2BEF486BF613F8571A4D9FDCCAB2A7F37FE1
D8CA8072E58D0874782DE6DB6E7AA09F32E3ADD3823E61FD9B41053DB67D526B
9F4E6447311C442A2473C244D3EA9800F9797A4D3A0CBB526053ACC5C0FF6206
B2953C9350E57657B3728692186D57B74D8268BEDED04246B2492652DDD3D3E5
399AF493CEAAB36A6F25C04968AA801A46BCA9E0AE0A117574C2F610A11E46A7
5CE560AEA4C017EBF96D17302AC4384E996D072E87FBEF1A4EF1FE73D48B3ED3
EE32374C667F16ADA21CC16C2583E2E648FD2401FD0399A51A7A88E183809095
E88840F703E9BF997E8A6666919FFB4843DB29155D93CDC05BC0FE45B681C73C
50BA9A47821688F425782658BDAF63E8792D79340D223C92CC076CCC384D9581
0DA0A805C3D7EC826CC0D616F6D9A0ECB3CCE14826785042123F578404BB143E
60CF3AF17219206776B627A600BE050E645BEC59B1DB14A6EECC6AF60569FD47
2531B5BAF028A7E8655B45AA403678EE290569F2CB6BFFF49506F54C9EA5C41B
37AA1D7D57BD7C7519E3C21219B9438692C501C75C62BA84B70334512ED682D8
0E50969FB7671F3DCB141FAF5C116575B104292D29B29405A788166FC69C82E9
6C08DF83B9EBB15A897A57488534FB2CB20A8A656F45CC1A959F2AAB888219F6
137ABB006CA119833D66CEB852B4A22C88FED5EF7E03BDB2EE71D816ABD64555
DFEFE099455232455F7CD3AB54453E6A4C7B7F667C14A284047744C14EDA396E
21E278CFCD460AA15777BFBE815955AEB9C37A06947BC6D7913EFAF442F2AF22
86420A0770670AA0B84EE70F5CD9915A67092149C83069C344A81B76C874ACD4
961164DDC4A370EBBB5B3B51B3E20B45F93F99B08DB860CEB74CAA674FD601AA
8972C660BAA4F79E875C9F1C105B41F92F125E3BEB0D110399CB8EADEC096993
1EDEFA0040F718517EB2A1CA3AD1E0F026FC3AD424D46C69EA7D6BEB2766F720
27F15B498882338B830035C083BFEA13E17409EBE66A56588A320C483D7F115D
B2401981CBF58A554F43360DE43A4563ADB6628E5790AB6BB72C3AD00CA70812
58BC7BB419A9E4C5DE41541ED4F75D8FD86F44302A6E339EC90324A660411DC4
17047A8B74D9C1A3A4E22FD5FAB52B018842CB720D89D4F12B4A13B3B4891F94
43122911DD0EECC5EF8CC08898184323FA45F8753272BDC03DD2664D31499739
0C9BDC4F94EE544C1C96D8734A38806889AEACC54237F8E951AE1D80AAA5FC3B
713F6ED26A0E7A657DE220EC3F83BCBC7F8DAEBE2F8813556E1640562B8A6FF2
A3744D3BBC7F4EF4C62FFA6997C407BB8598FF5E6CA6953125F109B48E2446E4
AF11C73D52910F14BEF067F255C446A0EAD3EB490278F07B602A7FE79C2329CA
1F65E78BECDEE357256BF0A7BCABAC49BC4ED2413E58486776B00B92901C53BE
9BDD3A9DB16092B5A9B5BB3C56B554A84B515960C89EBDDDED2D74AE20D4B296
04D021B8CB1F3873555EDAAF9896D6C10980A09DB34E084C8A754E31B07EB1F7
A7A204B9909414BC31E37EDE9958FB4ECA83FC2D15B5F83F74EAFFABC289CDE6
55EC5D586D483DA69F5BC30FEFFEE1167C08592B4FCCE767F408BF166659860F
2B6F25BAC550C282E77B265156DF6B789ECECE1885C6DB22D80F626020656D5E
8EA1872BC169F92A89067E2F83D867E935B40F3FEE29A68FBAF8F95762FD3FF5
AB638EB26E8171A2820119CC673B84AC595B4E3A2CB97108A837D99A7404939F
CCF918D0FE87B41D6A918B13A1990EA3C989247B02E5DB75B1683103305C5A43
ED712E1453D5DD9CFF210FBAE9671FF1389BAC04F9EFA749624C17787974F759
3F2CC8CF006AEF8B1106D9E42E1BD57149D639E359701CF821383BB92C2F382C
0FFB9E1B5400DCF815611D1498D2FC421934DF2663935BC91CA74CA31EEC625D
8BFCCBA22989B5EF327086076DA15AF38695C3B86F3EDC61AD43FE9BC177C7DA
C8DA44B2655D8C64EAA3BEB21B1A20239265A61C11462A034CC5D3CECDF37C03
5827B86DC28D9CA4675C45994145E4498BD6037587ADE497775B2DF1F871924C
1E398EAE66EE9282A7AEC171547CD68D5F709E22D895869B2FDB50C53E3D2202
AB90556CD485A15DCFA2866D7CCA73C0F6FEA6D19D012FACEA9F2136D215BD19
ED264793B7B9003D31471081AA8ADC07DD77898F17239B13239006CE772C7310
CCC64AB48219EBD23D241CB9D6C81C4D965F85EA14F4839C4D3ADAFAD1572020
FE0AF6DB142F9D944983B19A5C42053282E1FBA49CA8962DCCDBA5432CFA5205
0EF03C0F93AFF4095A99B0939C42B4A5A20E344807E04623E5A083B06F5AFF90
8C7F0E455510C6AB9398D0660C89E1685C61048668DA51F02A15D35E1E75D365
323C29AA241F22D3762F7BB6D15422B85C36411BAB3D72DC17FA6DA648A6E954
8997F23C1C822EFA66A75E01A68758FD97C5928BB2B1D6241F67DD9942D5A2E3
4899C4095041B84028A8A466AD87CAAC0A9BE2EC2A15546434383B4276AF75FB
EE6600F25BB0813E53242B1D8E6D235E8D3CA8F72733B7F3B44F48E78519E114
A8BDC93D4004DF1AF99601FFC163B6191FC0B3D436935CC8EA8ADB348846174A
99A2367CDFA06D801B1588A55CD8FBC5B1A87DDFA2F8327642DBA85B9D06F421
C94770B315658DD5CF0EE0F8A0DC033E93B040A6121DA499CC2DD64BDF0D3B04
0717AF88B76B8D4C79C22F416580CB689CDA9BEE235D485E40A6FD2DE5B292D9
7D0335BFC690BCDC1C2BAB1D226D4929EE7C9DC63EA8F9780763E889B13FB2B5
A5540EB8FFEA273601D1E82984B8AE31AE343F37D0343D611339DDC0A9F05108
4E452CA974EC355C5CC0E8760C951B19DF8098F0D3267A4E1E7A78709D798D3E
F08DCF7715D90AFB12DB06411FB21F9CF9FEE4E81E152F9E1712A25EBCC36075
0585E50110C1D88948D2849734E5F9DD5CB5BFEA5D7E820D14B2E12BEFACB35C
87AD21C6ADA3552D0535716D2678A15F302BFC088748D16339B87792FD5D1B28
ECD396B0B80BF03735329F2297CD5FE5E9F9BD8892AB77E2857AFEC47E250043
B9CC2D84ED14B0E2890EEF49C102B4E17B21C52C9BF8CC2E15B7F374D259C822
1EF16504D11B5F35E83F0D23B374D8B086F8C5DD092FA058C822181427D0C65B
19A38E7E5C6AFFF4C00C1E197DD410D5F1996E9BB66724EBEAFB05FB869188C1
4C268C3BD17A7F6557EEE167D20A3F908749A095671A46A4D8C410705B100FF1
033BE01DFA5B6CD69F02BBA5667B7AD3375595524D22C358B73879A791E71F4B
71945D3F0043F27F1E73B67016A50541328A5F493C5E083E235B12C627CF6E0C
6109CE4ACCCBF7859AF3403565B4A26C6C28C08567BF5860D0930D75613CCA9B
4F60CA8D75878FE4BC40C0ADCB09448C46501C13BD7621152899F4B5FD24B0E8
D03EDE1D442961F8E0BE09F9F27608073B580ECB45053F0F2A618B6EF08C5FA1
0B34B1FA3CA123BAFFACB6AF74398500FB30DEF0CA6C84F5A925E134E8E4D76E
3EFAA2F49EAFDDF799D23ACB244E7EAD55FC6BCF596A5C1CF84558F4ABB1975B
FC520551C7F76124C71A6B7CEDADC8305AB679AE45CCA9167997ACDD038E74E3
0277949BD94798FF0F3074A82D0DAE2BC67ADE5730D94A9573EDCD7301868571
6619964FFA031920D4846625D4B995B7D0FCEF382799F62A9A8FF8262E8DE16E
9245C61CF8E4C92991EEE00A6D8FDAB2BF6BCE3380291D210728A231CDBE6998
EB1D036B541B55AF0B768C4A4BAC95219DA6C56D6DE146A1AB53B2A6C55E7B26
7FE3EE82086FE6CF8F2C6937B09033A4933445AEA45169E6F0C558A7C76703D9
959B426A313CF8E328439E6B8AB2B752FB05C1557719CD23C6ECE68086FF7397
934988216F05033B67E3AEF4086A72D5AE623E8661F3F085EE0663C0C8A83E49
183EF95193C98B04674B6F4CFED63E59E970D45A7C8D3E2569345023341DA764
DB623D1E0AD9399AFD686C1415FA476F658BE0138368AE2242A7F82C2151F7D4
7B0A9AFE771F4A5F8ADA3248CFBE863F189B3E4F336841E8CEE0825DBF87AEDA
7FD8FA143417A3F41A52AD8A869A1A25AF1AAFCB202750E07EAED59CEDCA3C06
60DF163D854EF6C3A694BFC4C5FAA33BAA9F24548D00E722021FAD70D99E2FCC
E6FA2197EEDEF2E95DFDB1DAE428DEA1143295B18EFD0A4F289EE8751E128D15
E31ACF330CB47A523E5D9A499C1047CAB2DB177C020699005F6C0D10D7858574
0BB798449CFDE16B8116A5787FE211379BBC3E33DF49A031282BFAE9C44EA939
D6C253F4D15F219219825BEA068392E9EC195FF439B07DA441ED1B5D45704665
D5E85622B48BEC7B2E59D35415BF8CDC08CAAB216004EF466C70EA689926907B
CFAB6B8AC894D3DE5A07441A79952846B0AD9E0146CD995D5060C9B13CA0FE12
1D17B57524F6D8E00EC8A56589D84C1E0F10AE5994B981AE7B6F030E18F7DDFF
F08068BBBE292FF30EBAF2055448995FEC91991A340389ECADBF6C28FF39B59D
88927C4912222C2092CE21E2830C861C7098C45CA201F95EA4BAEF03AE8B8F98
087BA0016331B03B13C745DBFA80FC4BCF9760EC9E6754600A0C60AC308ECB54
3EC29FDE2DE35378F9B2022321EB32C5D4BCD7B3977CC6E7120E4C4017005B66
2BB357242A9E6AF447541EA12E2B63E89FF2D7512C3E625CE2C750FB26D6CB7E
D5C2CDB884F49FD3AF11A0ACA9380919BBFED4DFC8328E94E01303F13CFFDE1F
2397BD6B4EA476E89531CB824568C48C84BA11B29BFA649B4895D746A37474F6
459EFCC1760E2C7FEA85C40DD4FD8CCE4C0A9BE9E7D6806CEACA137B27917D54
46B7A9311A78150EBECCA935FDB6ECAB83C18A03DA1BFD7296E0F4C3BC03337E
154B5F2CA3DCF75CC77F7364BB75AE207F19D4C86BFC7C979CB99DC54D3218D7
529B4671A0D4C62F4781A628E7066DE7C365D68A64D44F7A0A0A14D14FB65F5A
649EC684E44E535EC3C85EB14074F8F1240F1FDDE08BEB877CBE1B898832903C
7B9BE12F20B457502381836F64A84955F59F57D93E636C8C6110BDF7EB399129
21367EA227B7B85BB0DBD04D835E9EA402AC97429A8DE230CD0FE7CA7B74D911
38C8F7DC641DE8C83D61D4BFB90D87362574CD6EF7EC25EC956B41B538EFE8FE
DBCB096797E7C97E7D81E5228B477FDB49CF142052D3A4E4A5972A204956D533
E0A067AFE10A32F92A968617AD7C62194371B568633E7F0C15AB3D29234D15CF
BBB502CF3C1C334A78ACF8A13C15C6E6BE25984F36D1269217D71E197DEEB32F
3A80AC939951628352C692364CA6661D07787C26311F321E0659BDAAFE1EADA6
86DF87BCB520EB440F745DC81C46712D9EC9EEB6FF44CA71895020EF63CEE68B
F9B7234B15B69620D34DE28A6D5707DAACA29BF87D3D5E51B7CCF0ED3D49F3BE
ABF114F5FAFF3198FC69E0FD82A04759D4AA3123FE227E892FC875AE94402AA2
EF0CDBCCE95C6226513180FAB70166D4F4A7D8AA8BA4AA1DFA74C57552C4EAC7
33BFED8F1CDA2D49D7C5DAF1524769A132CD76775EE9B2BF4D594EC8255D6F50
F1783D39FB2685E03CE92B0C5CBFEDF9A811EA4DE19759632D9AC6C2976FB194
F70E38F90FA7F79BA4ABF7BA88676DDA7A42F7BF01921C9CC60C173DAD6386B4
685261A3B465BB76950D73289CACFC5C0192295735AD3CC570A8402B3493EE81
4A14BDC14A2BEEE045690988C52A848D07B6ECFF2F70BFBDE7C728FD6F654F64
DF12ADB371106ADCCB92615D23871F0CAEC46AB3713695FDB5266C043834D529
867E62F744E710E9113A5330E6FD9BA5490A8FD9D8845FE279E498E18A9FF84D
4EF4FEDA528DE63E03C986DAF0AB1AF4B1651980ABA7D44FC2949B6D8C6713FA
EB6DF91B2278522CB35083305EC90CD555B408FF1062D71243021C5A6324A0FA
FE6F1C06C892036B8C1FE85A4B368F7640A05864E29A7179490EBFDE2F6C150E
5B8E7CA7229B171E00F81F91ACB087542F9475C04ECF736D9BE6251C0319ED8E
AD08C2ECB0D79EE6DCADAFA48A807F91AD09D35E0EEAD2C205611697117634EE
6B35397B1FDBF2CCDA65419DACBF946FA07054F8077CD34292A6CE44218DABCB
490BB4623A072EB4C87D47F2DF13D053140C8F20EACB4FE369A3C910D3A4AC1A
5BA0B78DCFF2CDE5C0B3E5C5F3CE54BA4F2A5659E082D095160BA5CD055BDAA4
ADB83E0DBC4880AE462306C5A5D405EB484D8F1EA8330E14F345BDF6FB8F1208
EA9855BCD771589DCDB652FF0580BEE88EC51184A261CDC851ED8FD011ABF245
BACB0A3BE0A813DA9BA5DFFF977D4EDD32AB3A61FB3C8731453A6E81B7580A81
64C5C3662FB19230BD9BBA6F0C4447D64B49686D5078935FB3A9CEE3C31DC7B9
7878C6A3C12DD578F2413AA0C2095876CEDC4618B1557F93EF41DC9BF2A36C53
469003BB4EEBF43E7D80E29BAE3D5F529CA0C2E93E324FF5545DC79D8DEA697E
745F749801E0D7D461BF3EF113FA054EA3E7ABDB2A53938C95665A9B3856AA72
7238B28E1608121399F7BAE0EEFB1A46DC737AA87DDE43CFCD09C0EDFCE5AB55
1ABCE2A79BC6BBD88951445A43975F60F6BD51DCC9B8813CF765F9DF853DC6C1
1B83563C6FD3A3BAAC77B4D414DA75B08EF7512BCB3CC4EAB5C43F97C85487C0
571E7540838370BC27F35D3C23DA453EEB9F7EEFF12F75D16CBB07E11ED77E70
B19C2DAE611058754B40E32DBA80B5DC7891F2C14C5BC3D672337E2891CE3816
B7A03A288D5FF12398032A68BBFF62A986C64DF09EB1F0E01A1BD63DB9F1907C
B6486E483D100EB4D12AAEBCC36AA6887C24A42CCBB350548656985A2675AD3C
78652DFC97370126432EAB85FA049FD4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A110651C32F7372F56D5E845643350BBF6D0A6EAAC
D2586F3D71442DBEB5B1B049B691CF910A78299B8A9C0B39ED96503D55AF7610
48D41BF8E781511338BAF3A2E79B98DB9E6748C1FE829C1E574F41ED7A56E8DA
4EA2023CFC69FBCDEA39CB00C8BC5AC4B184E13F3ABA4A18487B10878E9D800F
8064BC68223CA5F86E7A9AB9BAC72FFF9546B6BB94F4426E5D273581A6D28444
44D82093FB03482F71774ADEB638DB46DCCB0C6BD2192A98CC4896B52E643BDD
07F61D79F78746C5238C5504416B1E2F271280ABB91D54CC819680322EAB72E1
250A760531BD7F2AA1DE45FC978490BB69153DA6D6161F7AFD7BEC1ABD547CBD
B6BCC20BBBB289486F6C7E238C2A7AE02B2539F6DACD88AD99A2B686FBEC34A6
F9EE29616642225A5AD8C4FBEB07FE262D75AA093A73E9E0B89695B5862C96EA
1243561331C2D9EE7B65B8214E519D57A88C79B55D644CAB29554F2E31FD6843
FF7B259AD5538BD0836F18ED0DE7F01D9BD148F8279585467B15C17D2D0C33C8
24A507CB2FB6E384BA8BAC55FAF929178B7AACAE1D371228606B58787EBCCA93
4E4F469709A6476CBF11C97862C34607A7DC2871810B501018824C0E0CFD58F9
7A957FF98D5BDA3E3E034C52405A6C2908EBEBE3E29F7C6A759857EEF72F2EC4
3A8642C108D34C4CED6F7DBE80F25D75116BBDA7CB4BBB73A61F7C685A3A9A51
8734F9E4D7E801AC7DE2E73CC759AC64F3CB8EBF8B5EB56F41B247F3F19315EF
7C24C48C184E2BC4350D72B6956D0C2F54961B34FFB476B8B54F5F249AD4F434
87F61D3712FACEC07D010DD43EF4D36C3C6BFC310B412ABDC95F0615C5BC5180
C92F0640CE6A8AF3AE7EB181C2E4C11086C530DF109AB7631B321258281DAADA
221C4D03BAA1CB2A3368AB891AA0006AFDE458F28C88624B7CD1FEC6CB09AFE1
5B7C4C75C0C00F4549D250A8D8D0B82FBBF52438CCC1953B78E7D9D431A1B5A0
4A73AF4A83C1332449D33F89196645962942DEBDD82A0C4A86F0317F943CAF80
38C03C57418377255201AE91F48B7FC6E0BEA32C7762AC27D37041D63165EB3B
E7A22843BBBC2A76EEB0E1C3F1A5DED8CBC163A406C10DEEF8375D51CA265048
A748D61C4B7C040606D6661334764F75102442574818D8E2E330E2FE5102B7F4
DF3E4FF29268D62FDDDC616ADC7E9F13E6B8A5628C9C333261C279378974A281
B8F074456303CAE324705BE0751EA813402C3D640582C972655ECB16686869E6
DA64131BED44D2F499C69EA518C750370797B96D672132C82296E416D4F3B55B
FBF76FD52217FB7A494737C74DC1BEAE9A4370CBCC6A3B60E897A2A10ACC9590
B7D182BB0BCBDA4B8FD30EBFD8E947926A7AD4A39C3E3BCC457B16FD9FA2606C
C3C0740F437DF5F1B361E2AB0102CED6B56AB56737158CF03B694FC508079D3A
31ACCEAF23100219B1CF3A1F09D967E429545A65BB9BCC05055A705CC4D79163
209A2105EAC6577EA6EB40D70A6D3A73572D79A8CBE198C9F63FFD1470AEB473
2DA147B30FA99C4C8C7BD336D401F5DBFDE3DB313266068F252FBF712D4F6AA9
CA51714523FC48BFBA1E33E36A67FD71C4DCEDF3CFB6AA5BAFC7DCCAEAA40FAA
E6D4925126349DE06E101868BED82BB51E91185394F31E2C049463AE81F753E2
F863AAF5E286731902E47CC79D75EC3262338CD13F13C659D762DB6199452CC0
3F88EA12757D52C10FF38B44A09610AFDCC3E9E0EA6D89BB91F93DEA53A676EB
142FADDFD883DC4F0C38023BDA6569691729EA004A3D96F0FBB300F4030B6606
13071727F3BA34DD98CFE4972844FBA68280761E4D48476D645F86023FE852EB
25C98058B68C3F7DE5C9E739BEFBDA9EC9C8F800F862999D20CD6BB97FA50A40
B29FC17AA00DB566B2EC94DE5934CE2EF61401B1AC09C515B31676917D11D6AA
C4F958DB61B11DAC0032A4A9BD935683E85A26C1F42BEEAD417F837272445BF8
5B73660BC2B57C89B3CFF6C85E86E42A9550DA129DC0FDC4BE50D5A5CD8DAB41
09CD47BC05EC9E0CBF809328C5737D7917AABD0AD9A87F485E0843606F7BF8F2
C0F92CCA49C489AC56BB4FAEB441E713B499545814BC2B3B2ED508A5547C4B8B
182CBE2ABB754E07D88DD634787FE1DF52B38F3EED60778915269E71DB74E889
71C070FBAE2C25A7104589EF38806E811726E41351E349B6167CA5058EE84D12
58EFC050B428623FD1E621555BBCA26C986ACA69714EE285E4183ECA0F278461
1B128DDFD3B8061FEAB76A85459C6339FB76BD776FFBE44A0D870B50D5C08E42
C27D4F909B92A16E8AE2275E83777297529C5ED2573FDF8BD7D6DAC8936854A0
E9B5873E0C43A98002905B1F09DFBD253E4F8EBA8FA68830E6BD9979FD51C835
5A7EC5C1747D467FB498E88120CCCAF6A701DAC4FE774492035D2304EC4F9083
716CA7906B80486BB5C79930F2D085E30DEBE15A07B6A046946D1BAEC088EEF1
31BE9C77E57EFDAB7374603762EAAA72B0B40EAF746A43B2DA7552C98FEA1ADB
BB93C025B00E2203899B2C287724BBB8E65FE1141502C1218C55773CA3C6DAB9
681EA8787E7960CFCAF502B7A3066310BE7A115570201F827CF41845BE0BF8AF
AE8348F559D6AD28E96669BF76C5EE35D36E883E3362E8151A38AD6FA6AEADF5
82AD81A19F11688A44032481C0698FF9E0E60C0930F7AEC84C4D7EE11BFC90EA
C5CF755173A99C3D0BF412FD30352B46B6FB6D0B977BF34FB3EA2C40A1ADAA19
182C7E3FE4F4251B1887A2C605FE1895D3045D915E59246A382A2EF44013126E
974503017108146FCA11C477865B61FF0136346A52E994D5242B0EDBF68D120B
D216209890529FBB3D24651664E84B70E52B35750A4D746C647119A3C81D1CE9
54F4F359CEE99946657FE87EFB947F6EF31DCC61CDDFC39A27718813E2CDEE9B
EE0507016F7651418558D452E73137413161CDD6645A9C7DB42FDD905FF9EE5F
A98B2F04DD744B336C400DCE97D3384AFA5C0BCEF133DD294C2AA330081B6EA8
216653BA182F7FB05BFD80CDF441BB594FE01CF3180D3C3C1F0B13A98CC0339E
144825766BC7D4CA384FCD2E9256B4C11C354D3ADB93059FC37FDDAD6C78C8A7
FD6219FC44CD0E30CF5FE94C5F95054EB0CAB8CB0BFB75B710119768A161F8C2
76614552655D1037F82FE0218C4D4CD7BEBA74BED51AFB08EB16469390FB9807
1BFB9020766AFFE943870234F365EB6EF863A8103CA6089A8A29528E45C47F09
C56AD5389C3EE8DFE85E6127D09DBF020D89506CD1270C0B3EA235BDEFE3E247
B0C655D9FF7B893CC31F7949ADAFA7FD22C8F9537DE472B6C31FC9AABE7ECAA5
701B0D2575AF8A8596254E937C142B0AC9512BCF447499C2005348B848036DC6
131C1F05FE139D653820FB3EEA998267FB51CF42EEAD7BB3CF28571C437ACDBC
56D765E2C7F61226CFC5613463DCE571BF49F20E7ADF22AE9612796DEB913805
9A4C12D608FD1228018A6DF526D5C66A9F11AEC07A100C7CCF020413C69C51E8
D0541100E3DF71D501F4BFA0AE8260E23761F29F3EF6B7AAFFB00FD028B380A7
31A931CCA7A1CD78F9CEFB9B43D1AB67E0C1B90B74C62FF8FD0FCC210E26E80E
A2C146A040FB4729A47526A644743B53CF0CD6CE4EEBB414C741759F68C2C929
2B509FC3F79A0124BA95F9FBAEAAC3B3A5CC1C9744253567A78303623728AA44
9365090D58BB4E0B099DA528E5BB6426A755DD97B90D0DF4AEC960EE3BCDED36
FEC31EAABE44B4E65AC2358864B4567F289298A69F79F6981B190F26774B50E0
D246A2676F9821158D56882769E3AF7B6C0F8F856AB15E34B7AFAD9FBEDC388D
8DDEEF29E5BA5830B9E88A403649AD203CBCAB5465F18682746D4C6A28F9D30C
71556F7C9822962D39A30A3D5D4331979C914CDACD8E52AB927C4F57377C6E95
AC3B74863596FA34250C38904577CB39ADAFC1AC17B04381C6754327FA7C65AE
AC1A2839AF94903A7EB7450AA2BCC638BCB6D2318C6E6FB8AABF70FC0CEC089B
5B2A64DC911A05B7D0FBD3BC15657FCC9D561808E50151C166892AA2415303D2
ABD61EAD6A46E042F2988E6A31D07C0EFBD835CD0C526CDF34968DEA783AAB27
AD15B45820BA2C8942FB131136588242112EA1F17FD3C2604EF52210F343C793
DEDEFB0A2B195538D4B0C6FF837473C372E70836D4C5747C4EEB85DCCE969D9A
7F061B9FA20CF2EFB32200703EF58C425B9A7D27CE0BA78897210D30DA8F7CD8
5D47409E582BDD2EB2D8D505FF764C914B4C11AEA7B23988D184F29AAC5C274F
5694862641C8ED8ADC2A7166E893618F4E1CE1CEF3D26E28BDA32D12B10ED201
A9F192758B996B3B8750FCA90CACA049EEF3CF6CF84697FEEEF16F2290BF3094
539F0406AF0030ED0D0769FFA19112C97076BFF950438DC37E9700A7BCA663C4
328967C977B430B63CE6CDFE50A651EC13D52174ED5C933E8C8525F88E6CE482
66186158BE0A5592691CD1E265DB2F523B702D4D0DBA35BE10A4F542DBD3E173
15E1E0A224FADE62569408F6ED842CA727BF331033E4F074D29DF85080F06956
1019E04A19756A102E1A32153D5C6216D9C9385A18202E78D9E7ABA944D21851
498AD5DFBBDFD2AD3A45C0FC93D273C16FDC07C095C8183E89A7FA85A0C12A52
763634899F898B819309587CAE703571A817E2A7D1FE8496B76E5248A3CC57AE
914AC32F028980AA50C18C5C8C44EE90A42542106F909E4F59803685F804B0C6
A98E5D37F963A15B1C0B736ACA11C477865B61FF0136346A52E994D5242B0ED3
7AEB62353B9A1D56DABD05371F9479BFA4CAEC5CBAAC32E2DFF165186D73C527
5BC9638D8A733D3E5905EB634982BBDBE878E238A3AD7D54A0F8D49FFBBEEA2A
08DE64815E836B7C7D1B6B6FE2F8CE38A96655B073C606ECCD8C3F2C5FF185A7
2F8B21D6486CD41A80EC051E875EAA89D64FA5F2126CCA7E93636A7CCA2158B9
9A15CD40585926E5ECB3811D95422BE5D90F0E736BB7657CF2A0A5233E11D3AA
E27591284292FB1BF22EA7654C2797659EB876A0CC35E0BD79F4A14F56FE1C18
E6232BC798A227D8F8F92AFC1924FF85BF0BD5547FBF0ACD890470AA5CB2E0D6
1ACEF149B0A7B73F2EE0136A9C23EF64210422CEE9C62889C3FB5D8D1371EDB8
5EFAE402433ED36B610862F00EE394976F0A2F4870DB0C0FCBEB6D1699049BDE
AE9A5B364AC04F853C9612C58189EBF3334336824F029CF3315CDAC8483406A1
AC1DF70188977249C809CC821BC0B7A2F8AAF27E7E115BE85D71C3003914643D
2327692E464DE4CD3E76C93397F7998AFD5A64D6903F2EF571F9A24136315988
08E0F91DBA758A23E515E9F18329599819EDBDA44E136B801A216AAE5168BF1D
DF74179AE8478DFF4DB502DBCCDBD61CA5B5E20E1CFC04C7B74A171F41A35364
E573321A926C7C3DE13338F52F2C91531C92ABA181B7CF0FF955A8DA29F11753
6ED7582733A6C86215121DCF5B0716611CCEFD11F5C5F00FCEA5EE9D46AA63FF
7D4278CC27249B1329305788A6AFBF6CAE00AA6B9DA46C51F1EFB3D014219FFB
966E070D8BE5B5CD57458FB78C6ECB6460A281A80F502523BC02292E16AA3B9C
A089F7320D1B9BA214E43E83C1FCBECD57341217FA2783DCEA90AC383E444674
6FC85E9B1D817C988AE526DA4338FB27A18C3E1F59CD6063225001812694472F
7AE07866B1F040B42849BB161F8C5058DA20F5AA785DC0E77188C18435A2E7FF
BA595F0C054E96CC44F56932D8FD589EC2438A167DD3799972464CE75AAB769D
CB32014BC32FD730F22927CBA09B8CD2167352E6BA2E96F35F1E67BC40979F9B
86E0222012DCA626F8A2147F672557FC3E08A242B2514C24CD74D2A6056E9B89
886CCCCBAE6F51A33757FD8DCEA2488E7B130462CAC1C61DDD7BD36BFA9D85C9
CB0414FA7B15EC02E8C08C8A4F789EA1A232F44B216B0A7C6B898EEEEA2EAE31
DBAA343678B35948BF6E9180221EDD0ACCA578928815D319AF73A7E10B5F523A
8B2E7812E325EA858A25C26ABBC4C25E327DFCCEAC871356DAF0CB205917DFD1
A8F1216EB4301EA62211CCB8909E9C8DEC28A6FA8042B461FB6C3A5425419977
1B7A614E53D6E49EAF8E8C75650D5793750C61F2D28FD6296AE76BEC4B0044AC
2984337F2EA913D381318ECB6383C6EBBFB2B61FE04B0B13B26BFA8A80D62E48
64239BF65B841617AD96D9D7F89ED64975DC69CF20F88E081FBADA15B871D8EE
AC0EAB134DD682DCBC9C187AD9788F635D7C1D238E43779FC2850256D81DD960
1364534E0C331CAAD340B7375427190D9ED5D06C044AC61F885A346AD0BCB540
FF5D3D13C722603FD1A9BAB8481D5ED4B852061899B5682BD0A153C50E9529CC
B01112EE116B684BA5B21D162765BF1FDA0BC109AB896DE24B0A0D57D9F4CFDC
4C1FFEF87FD2B0CA2E1A287BED88AF473AECEE97ABE431A8D1B05BCBE69CF10E
B696F21934226B6174010EE3696D11291F2E3F06359FB2DF0AD948D5F373AAE4
A4752F9BDE24042B95B58726FCFA82AF11ABD26D2D81FB0531381F8800FC7ABC
5436137CB6ECF73403915F269B7B231F5D9B1F61DF7CB03421C5F46040744911
2BDFD986A3F7EE975F79735FBDBB333D136FD72B54BDA112352814FB6FAB9134
72DAB4547A50C2C293458B1D854EB79608E52F06734E2CE9B3962B4FBFB2CED0
CD7D1C12433ED9CE0AF54C73172253EFC739D7552C51C4BBEB0896586854605D
658D8C7681595D0492047E97CECDC3FAB63FC92DE5F64B6FA36C08DA3B7FC06C
7D40B03E7F03EF36CE0390DB45EA1F0B6AA0630DCBC43B1E3BE9B7BA5722421E
932D83657C904434F3CD7B4C5C7CDE111CDFEA91C7326AC7FFC2A65A633FD028
806459C9CE8EE40DBFB9338561B425E7FB8A486E8BBD8925F744645C55EE47DE
4AA52ABD988594A7EC882C32556517E396269C90FFA27C5A51513DF558A8B499
C7B6158DA671139A282357F5CFD4CEE0BB8C7C8ED352E0A1E6DF242BC75F285A
7C4D903A367CDCB74C56BF8356F94810910AB18CEE5DD843B5FE4096F520222A
20FE01B307960B1F1030F6CC9B504E1FFFCCA352431A0D5BFCFCFAD30F97D9F6
2493B0CB7FEAFC9BAF90B7025D2E35ECC22A152A63EC110EF4B8FFD3E82A1F2D
18F3F163F77EF399A73A1B5FED7935DEC964AEDB4721F177FC89A5AB13A06261
BD660253A72E63479DBFE0FB8041A873898332B8C24FA875D3E200A018C78BE2
E930457BC33AD2FE3614781E71AB4D0073D71DC38239BC688D3F5F61CB43AE2A
53FADAA5926EA5679791D474BC0B7939D43C0AA387BDC9184255A3335FD10380
3857B8046544BF2723FF4B4331E2BC38EE8787EFC7FAF8A4D10DF88C738EBDF0
4155D92D9EC67D91F7299AAC56823CD4BE926D0EE4E8CD015DD85E4004694D39
E05F5E2AEE30F76D51A3CF5FD0316410BAC452BD8BB544B57ACF2F9FE83E3E68
109B182044F27CA200B432D886A12EF6332152F0E30D38E2B0F2F1E30D973B04
68FD4F84E83950B76B1A05B4DC730087F385C524B689F96E3FEA51EF125D16E9
073543865055A37AFD20C49BF08EF65CBC703EF6ADD2DB56EAA02A6C8649E61D
7F5B5320DB4E6C7F70B76CB486438D247D0100689A73A26C5E0137C208DCF1A7
143359F8EE27AB1E0B8333DD55B109F616080F5BF29107A418F686DD27656D1E
EBDFFF78EBD97F40F1B3C7C78221B0081DCEE066E353DCCC2B78551535EE5DA5
2B7AF5030F8AE1482313610CBFB4CADB3DB95CE2C74DB09F6C18D083A389BF57
68AD942959FF0302B3225CC885CFFC8807635C4262456DD0C12D6542D9EBA6F1
12F55563444FC3D79F4B3A2E9432F8E1948F77146199CC80880EA23BF76211CD
865BF221AF4EC556835774B08B04CBF20D471B7C228958EF19C9A18ED7B135C3
300D4E6C8B686A49D427CCD0DA4E7B07C8D2140B854F2E7C3CCABAAE3D2A8083
7BF7F8C88D26D37C4A69365579571DE66F500A75420DCB24BFEBE3ADB38A6CA5
8290D557AFA6B2F76D3C2C0D7C2FEF36D9A72D75E95EC194042007DB1738809D
C388263F3562D6BAB6320CB7B552FFB89F11EA22D02AE6333848C966B1B1E30D
A2B09FB2012717AC3CCA0F72FD3DD6E6E24621FEC52CE047DAB64EBA1EEF23FD
D6D15A5E4B14C74D3856E17C875B7531CD1BC116AC4F21FDF43764C2E9BBC3FD
8F6C02E213E218294D1063180597B8C427C9B17202A03F53B88544455AA87281
0C7948B1EC866883E78C9C909A89DB039C9E9960E315CC0D5A741134B101D1B9
61CCDDA1D8C89CF7B69B3CAC447A2D2CBE22433B7494A12D6898FB52E8D60EB8
F100DC970A6F6FF1EC5403388B6EF347797DF580DA0E0A4F13FBF20B25DFF786
1AC70BF7F778DA38E54F972D6A17B932EFECCDDE3DE2B3521F190FD862092C5D
24CE3B8037AC8FDD3EA687834689DE2FE4B7759C944FF72ECE869A601FD89830
4C6EAEF3D52B31B6CBA3D9E7EA775BBA2EC97CC91D926CC76EB3300E9B6FA5B8
477E9788C5245492BAF032951F69E716001DE419883FF01BB562BF7A8CD1C6CD
40BBB35A5685BF03CA5AA04FEDEFDF24B58001909B7B03761FF2070A0FA2CEAF
23100219B1CF3A1F09D967E429545A65BB9DA9111A6D08A31D0797C7D0DF1D6D
88ADC4FF697C5CC0F670731EC605C2C85F79D5C6DD740FA2EAE0C2119F4AEDB9
BD5451F2BAC4AF89052666E690F8ACD132C6B29910190FD862092C5D24CE3B80
37AC8FDD3EA687834689D1ABC946C2E4E79D4F3AAE440A1F525EEC2713C0767B
327F5AE99A990B727C6C7020F14175225EFEA39202B10588CB9B4E44FEFEEDCE
7B6160978ED7FF4A5199B53C9F904FB174E3C63454AFB214A8944B2299D75F55
E0414E65AD6A19F8F0894C659A61F005C6FCE1A0E970036566CBD52B4A8B1AA2
57C2DEB9689E200925D85FA23439452A82E6421B44C297B1935A3A5DE94E8681
FC6842809C1CD755943368A9554B60AA09E892F91A4B3291F21C9C651669E0D2
71F30024C0488C71FB30791F330A89ADF521505BF7D84597813143C60D3D1A51
5D52CB8732BA9FB066CFFD1C50E9BCD1885D95B60048D2EFAC8D2CC435BC0F25
C44B4AE7D581455520DA75F0AA2AD71C12CA16B7AA13D89CEE02664EA934E077
7BD01EEC83BB5674DE327954754A34A9A04FE68A437B8306B8463247F1E54DFF
D17B997EFF71C0B00B951A7570A341DBF602CED898087B72FD370FCBF53C18F7
6B79AB072E704173D21582B641515FE91E1433A56A4B1C717A38CF9C88CB71E3
781E9DD1EFDE5652E31772561D5A448F9B520EA55BFA4FC1C8FA49F5377E1680
6EDACCB60F0D8085FA97FE6D2E960552337321D82B49DE32AE60EB35A8EB1742
21DE36BBA0146AB08A3DFE98951927F9C3A83202250796C33F156EAB4EE9BB26
12B1FD223DC6C8A48B36B81681FCADD2C6095F052CEC01B7D399D097BACCF6C9
E10E5C114D067892630923CD601E96E722DB1BE432987A61FC0FC6820AA22F96
7BCB97046EA3C4A9A3A97D7C031F9E8AA24C0A18B40E952E098614C2DB3FA57D
400530CA6FA97ECC263187BFD652DC36561D27A9335BBCA18349AEF42BB9A57F
831F6379060E3650CDB2C87FA552F5999A1B5575D6CAFCB00B7BEF6E47AC23B9
20F7B535193DB8FCC1FB0DA6E544394563D24D8C87FE0F2722FBAC78768C4A89
FB6E27C2FB99B97F2312B6455CB547B771F0F0E66A2A9A030A92CEC7F3F1B26F
F6E2D1797C38DF3097789861DA2382708D050BC6A2263B7F797BD4F9FD0EF0E4
68AE9691921512F7DE93337F31701157FF310056D421E594F949B0E4980653F0
1704F8963B8BF87DC9CA5CEDEBE5D0088AAD263602357ED1BE61FD58DFA0317F
A126A715D3C293274ED2C5CAD0C162EBF98632D63BC149DC1379327ACED1EA72
9FBBF3D9C2829B9FA5A211732448B8F3125AC8AB538565E06699AE5D68759A52
096B795F2DFD666A3ED9C1AECFBC3AD200383477D05545B04A54FEA1159BA81D
2F515C46229D50F7DB0820570898CE57EB2DC4F2D4F37A3B26398A1D5AD2F84F
0E1339008A3DFF0A65F140E43A7EA149580132082317DD4A19E976C084A28CCD
E5BBCAB3731366C3B74072044D3EF2EBC1CD905BDBE9C01C812B0C32F4F09AE5
4B9C67CDBCE3F58B2E4658532D7DA349A085E560FA3A13FFD612BE78D9014A90
8651C8C8391C12719AC3EB6A7652B3689830029B200A417E9CD3E5580A9B0D04
F36C41B2F672218763100EA3EE9ECDDE8DD5AB6A6510CF16E8CAA48D18DE6EE0
20AEF0B89AE754BF7F8203F0C857CFAE8A868BC658413CB9D65DFF018B979021
09935414D50E1375DC1FA058A26A17105A2469DC27876F4035544028390706CF
1ADBB96A74355655EB64342E5FB6E18F2149FCF4C0F743AA1A1A120843D3681F
9DCB79A8474270CE46F97DD10CF6C8941D49919570F2E5F06D721403053F2058
E88858EDEE096C4034B5A2C6FEA57D50A9ECF4529BF907C09445B3E47801F2A7
157FAA847DA5E22F00136F21273615D5288ABEBB427E01E60CCE30B0F2B691E3
A8C1DD510CAC176665F9F845E184CC0594188DC4771B8904EEEBCC26570D5C83
6D34EF4DEC34F23A4282E1448187B3AA4BB9002792269E14A11BA6A5BC7DECE2
0029034C88696775902DF6CDFAE2AB99ABA68FADE90898D7F48AED17DBE9CC3F
44BB85BC31F795942D5D77E3AD79EB3B6CF717E5CD434CE1C6B388B901F937A2
99F65C3217180D4BBDAAD2E96F91B4DBF12F6C352FA5F0492B73CCD90086FDAD
B941A35FC77F7364BB75AE2083C7C66E6C13CF17915C99F16A44ED8B88CB1B25
44153A1AA8D2DAAD95397883491CB46911D35870C88509B392E1B931F0E402CF
17A63993FEC0044612E8EB5CA65ED931CC5E0FE1F28D6565F3C195C8183E89A7
FA85A0C12A52763634899F898B83763908EC0A1C9AAD283809A935DE0356C702
F538EB0C2D835A9CD11BC6D7C87ADA05A734DEE08CB62CF82CFB0166F0F1C54F
38D882DDE8DEE28A07A9E0A42143E0FC979F53C42E821C769735FB865860424E
A7F5CD9AC21C7B10986B3D714BFD49F6DBF0306CED94DE945B5A67DDD8EC188F
7FDBE2A9AD81F7002A27F2EDE3459E49C27632009CFD9CFBB246A971A093D8E5
027D67A89EB217A0AD71E56421A3B1386C8878EBDFF132070DF8A4E24787A29C
5AC9DD10D3BB974C0C92B89BF728B6BD03C5A92A87A52243943EB3E77E6CC38D
EDBB2DB8BE7778936B71AE27A5FA67289DAAF80C0F5EA7D9E67929CF4142CD52
DC6214105CFC9E95B7334F9BB9C94C9D81ACD2DA6F0CD9653A11636472F5845A
F507C8EBA6518215D75034119AF139B07DA441ED1B5D45704665D5E85622B48B
EC700AF8F765FD970E1F82C2659A38F8F63251495D697C3E0E8E7CDEB23ECBA6
03CE654F0B4CB297E3AA3E9EF091E6F7D0D07D34102A25E12F04FC9F4B80562B
21C6D0B8BE94778C7E73746B4845C1ADD96ADA56EDD51EAE4683113F66F87650
90E7AAE59D8053AE0BA8DB3BCB2AC0442D6E7DA7789B74A83724CB18C0203180
8CECB597CFFE81423BC0B3D05BCF9C2F8EA64AC3C5F7CE2DD08FA2E5253C21BF
1C0C1DD432FB523701060720730E9F51B7626597A17CCED52E42690F9808BF40
C0FF302E4E863FE458E0DDE830AE5FF2FD1A26930E14FADD837552972E4375BC
3F6F857EF419616A0D2E3D646143431C318824FC3BC21E55EF5123584D5A3508
FE86CC6FD9A1DBD506B027308CF215ECA53E73C0C347A0C47DE886A1E1F78EE1
8F3B7924E56DE4D18CDC352314CAEBF065F610B00B529D079F2291FAA610FE8C
4CCD57A7A8C9F5071193E20C5358A7495DDE0FBC9B11349A03CB50C3C6E5F571
A5469121D122E16010687CCBA357EC5C1C77239733D652E40DC6F755919054DC
900685CE73A8D5738C2BC3A5CAAFD59260886FCA15CD098A1B0611374A7A0A02
E4EB602399853AA05DC6ECC02F16174606AB2770299A4EAE74166D0EC9965C87
B89B8C1DB7526B19F7F0C20B11FDB0F0656E7ECADAF295574EBED60685F10EAE
1ED416C4346753181147EB065D30A883FD14933F4B11CC112DE73301F7F888CB
67DF1D266655E2FF6B267ACD8E1FD4B60843C4A4DEB96E4C3F6F3D70BD587BE7
BAFA3EAC91AFD9FDD8AA23A57F745E383FF8BB6DC0C752C8AE387F1D4C15E4B3
D2C887A3C469F9DC2A96B15D33FE7C565961C2A7F1CD5D80B4B11525BD2B8C3F
6F760C8245A1AD9F508AF0EABE76207E935CF4233C2614BB02993C18F5228D99
AC686A7ADBD6EA7163DD1362A8CE7A17C1064CB861BFA9277E75B0A8C76AA6C9
98C9AD482CED7C243C9688305E326F5741E280311FB6537C611BA2451F461DD5
2B51651F15E9BE11CB03C9FDCFDE3700BDDAAED61CD52A7DBF4395E223ACFF1E
E359821663C771DF990F78D69355A8C1D072E20D0E000DBE4A0656BE7F021DB8
63F63DE07FBB104CAA97C01188ABA1F0AC094030E2F0216F900EEF6D6E69E994
902A4C425BA976EABF2B11775929B1296FF602F903C70BB29D852EFCF3751A5D
80A8849721E155F887EAF14699937EC5E60FFB3A13AC9FCE3CC664E6C09D19F7
D23F8A75F6D1464A7A8025262B1C95F281E0164473AE82AA9B11484D9D6F8B66
D150591E00FCA26EC8CFB1C926563979CAD433B91341797AC8D4E9842A26D6B3
3DE375C1AB93D839DC4F2D41639E03C463B9D53DF9D649C8017386EB0C9E4399
A7AFD8703D384864AF49F4EA3FE72CC66F826A3A692434D4D3BE6ED6DABA6016
F812E8D85184C463B9F9044091F80D435E1366EDBD597C5085B9AC04EDAE551C
BE68E84519D138C233FED4D6CD32DE3F8DDD32A240FD49AEE908C7972AB2A420
AA567E0BA6781213329980CFCFB18CF7CBE6C7FA3C27329FE9A10D03889EDCDD
324E112D5BEB28766C0B807B8FF1FB8B81D0B4103EBB92A3F801177BDE9BDD61
E288E9C68A020BB9427C07939EB5649DED6075ECFF58FBACC2E7AE26BB9A0546
118C9BB6E9CA78AFB3C7D87A1C043EA301C3006F857EF419616A0D2E3D646143
431C318824FB0C49362FF7408933501D25922724867F1084DDAF1D0BF513B767
87E4A2F56EEF9FB845A2F7E97795A15160D23DE3668AA3D7DA417C906CBA8079
93A9162700BC9A16725D6510F607A4139FF20EAA6FAD50724816D76FE683810E
63BA4E40BA8E5C0A6D51ED6EBCD11B5068CACB85ABF6D9FC648CD35B1E038274
11BA7AD177E43BD16802D27FC2972286F2B152BE1F52E47D6BDD0DCD828F689C
74CE0750AD5FA10FC0E6B5F36EB62D69D698EEB767B4E9FFE73FCDAF8BD20876
DF126296187D1364EB31556C2401B79B8A2E285ACE63FCB0B137685611FDDAB2
E8FD8784FAA7132BE44229304ADC8A686D6732B0207BF2EB32EF468462CCE9D0
CEB6AFFC1DB954D41CE677D750AB42C1067EDFC2807B3CE00CC05F6CA1D87A1C
83530D8ED64611BEEC2A214EED19C0949910584F7FE49B03F896E7FCFD087089
E5CCD4368BEF556A281D166D457F08E37D782E7467A552F704EBEAF9F9AF6A64
9DD0F7E5D01633F0D869255EB21B016AFD3655F66750D3FAD23810392FFC09EF
C2864447914DF3ED2C719753BB1EED9C4359774194896CAB73A2F2ACED52AF9D
066794BEAF0EB7F06C1D428B9D34331BFA9C9A08BD09FD5054C8388DA82C3566
624F6F7CAD4242AE6C63D047AAC8EF82134EC418EA69430C0CFA1EFB2B4F9BEC
48808524500F3A6571A6EA4D65079538C1F9087E6FC665136B7ABFFE8DBF1184
D3C3AA9575819DDF023FF06A5F3B1A51AE4850C6FDD082AAF6FBB07DFB6A6227
A73AA255113DF4821BC5FB991DC6B178B121D38CE79E3AD729E30028E43296A0
548A7C64326F696544F6B1F129A854A81ED65184618E121FCB80CD031A30A0F8
7D7BAF534E49D13772304484CE3BD2A9C4955C7691B72AD442BDDAD18F30DB19
0E4D004697B5BD861801D55698E3D6ECE62CE5CC9FE34A8AAB8E3CB9409F8206
F24A189E57A0B5C178B7326860AF2A334383A1C7028DB9A3509F974F409FA0B9
5E779F2E9093E016D90FE788F6D726A04A5D06B0C05E69A239F52F5EA889627F
19006CC52D9E451DC21450FD3DBB18715AF6BAA336E150E02FB2831359FDB957
92B2E6431DD24BFFF2DB62693EDC9C5A4FA4A71EA0848A9364BA6446D5BD93EE
9AFA29111A71BCFDDA20BCD6006B0309EF0926199A60E28CFF48B79840BCB88B
39475A7E1C6815544584C34DF0E22A5EB61F0C232B03C08B27866537A9CA5F4A
B3D997E3153548794D9232AA20C29B6CF38FC8562EEA94D43B47E1F7AE890D38
03E91CE2738FABBC214C731AD70893D5FAF5B4BBEC5416501276491B79153F8D
F73808CA8940A65E5F0D1CD06A704E946B53768B5F92C841F47646E5CF24EC08
A8FA2348D271D2A84CAFAB1A979AA7E43DAAFD896177F1F70EADCF7E077FF92C
EEE279D1CD8F9B064103EEDACBDC40EB2EF6C28E91A0A1B0D7A7B0ECECEB25B1
8BCBACFAF313AC51BA6360C4F0BC34696FFE3C105348362C617D60BA3678C821
5B9F542D81152BD47EB69563510C525D05E195960D0EAEFB771050039A2F1CEB
A3DB1E042443B665E915991D932209B3F4C86295911FACB51BDAD45965CB3E4C
D451B5A1D6149A66BA1CA971CDE9629C0B16424CF3609285DAEB0115E4A8A145
939599F77990E19358425614D41218CD20852B1969CE91DB3F7B7E87BD9D405F
2E29BF660674457A70FF888A59085E68EB262A88EC25462A4A9EAFE20A956D43
50D8C90F998103A821C35734F0153950E5F72FF6A8AA6940836AB19ECB89B9DA
9A93D028D28EFCB73500DFC2F30D6C47A485B062196657C6B0CA8422DC11C6CE
AAD52991D1A9E5969D76BDE4FC976074F2D623721D38E3F361A941457847C5EC
09C01622C089AB3CB216A5C27D634731F3CA55BE5D1F91FFBA4A232B68F80792
19AA89F699A8C22C30EA308E6A5C8EEB5921F493C8F5B7691CD5C39E936ABF65
80C629A7592A909A4F89FBE2E3EEFC8BB99DF3B9CCE8FA93A71128B87293E690
C242ECD53B604B30AE8D7172F3E47139FEF1D23D2F930AF1B361E2AB0F5B11BA
428CD87225C7FF28FDCD4FB898A052A0B1A3C494AAB27E0C853EBD237F5FDBB5
82FBE603D54C4AA4887AB453337003BE0392AF8359E416849A0B2DEBEF46E3AB
2B8DE7532BD19CFDD69285BF725FB229FAC5B04008CA381E09AB94F1A9224922
B4A5C23593F8765E8124AB49FBC57F1B0A7E8F6FB6C483282DE613E28E0AB1E0
441517818CFD111E32142FFB160DB6422A5884151A4054D6076EF2F506E3DB3D
67A2D10FA038561B4D714B08BEC08EAA7D1909D5833FAB8D6671564F796B070A
2B3717577FF24B2CB8D87BFCCC85B1F91277DF1E391ED325F8383B11D57D9AF5
0EBCF7152E3715510FBF60F16750CF58F347797DF580DA0E0A4F13FBF20B25DF
F7861AC15FDBA1372D5D4D2555A2E8E23E29D8C8C5F39807B5A46FC1B70A9ACD
B172BAB4BC144943B3D3FE06E95C6B69FB006A083E8592BC01483D8DE50B9A6A
C86F872ACFC9489546968514D49014716D5975AEC37D2CCA662CFC60637C65FA
FBE78109CAB35AC2730A761CAAED96AFDADFC1FAE977B6BE8BB8B73909AA1117
B78A5506192B150BFCA046A36DFDA767967A43B3D1F3FC4F591BFE0EA1D77EFF
0602581EEEDD6C8F062E3E6783AD762482408DC1A5E5C900A43B0115F76BDB75
E9FAF644E1879C37A1E08DB03EDBCDA51187777E14F63F0C62F40BC85D30FFDA
81640FC9C58E6C4A95E1027273D38482DCFC5F6F6E64E4D57EB716ECD75C6A6C
AF0F0FB5F6A73A47FFFB9D63648979AD6DFC8C619CE8FE1EEE3B9FE2203DC6C7
5B27035ECC31BF4368E12CED705A5823BF6AC2348B46BB50393DD2B0D8A303AD
186A5DDB0595138C0E3D757E8DB9B67D98219241C0DA67E5BEC040A958B14BB3
D782151402720D5B4C77D25AE31C4A75BD8C7EB02722DA8D89430EC74AF0B255
2C97BFBD1C6C0062488763FDB07939C52A5D0D17AB4CAD27D6776A05245E5663
DB78466EFF0F8E67FEBFA63628520A97B48285DA87CED8A9520D6679CBA61BAF
3ADE6EF9B4205BC43BA3CDA488E512ED42BD142526394C5103BA4718D58F167C
B6741E06D4CE5E269D3AFCBBF060F416C0B747EC5BA54AA743154084CCBF021C
EAFA448258460E39549BC1781B89BDB53A9752A519A9BBB3CC59D3FBE6A84F1F
9521B6E05D0A0B2E0FCEADD4932A5E64E2E417C6B64D84B19F7C2D7C143E287A
BDB12AA1761639E638CE9D89C4CF0AAE1B38A2837E19E5AD8A4551A971DCF562
769FC5E4767C4CE91F8896FD3FE37FA5F235AE1BA3C6F3547FF24606651E5887
FE8CD61F46FFEAFF4A66DCCA05B42F9B762FF8905BAA1B6D15269F38A2D283BF
456D5D8BFEEBCB5B69717F22A0503101F9953D8EA3833BE27127E1C489198821
227C1ACA75B845E5D0C0F7D8416730AF4BE4FC931E965594E03272CE6647F502
4D51CD78D79C802EEABBCA93CBF968187FFA00C2E8D8E14D1017DC8428791C90
0E377B78459F629FB32E5FF3872C95854381F1D0D070EE364ED35377E1DCF455
DFB59E53117FB961AD0BDD708C34E6B895AEF03EA76FE4BDD1BECB4F085845D3
9491FEB49ACAAB78D15ECF938729214C68FFEFCAC997EC286F30AD0245F229D3
687ADCBF4D6FA08D7289D923565955106A2FFAFA8C9F636D647F334B648E11C3
659BA4FA71AB8342608C30E42BA95277382833BB9C14C6EEF11BFCEAE9139B89
256D5E8FE9B80F6DB3179657983AF5CC8F3C7EAEE084A74558304627D0C03A01
2B6CB42DBC8EEF10FC8E83696D58F0CAFCCAFABB836E9C1C7887C42265DD4193
C8618501A7FFCE13919D15CF5F00684B37087F633AB4C7B25FF2D7D54B31D2D6
96DC1E52C828A7A1155E6471DA39E1D47F152AF583CAE41F7F7FE0AA3F1F7DD9
175A2945C257765C4801FB768C6188F02FF2328F7D5B493D274CFA840BDE34CA
C6B57A04D9EAE9B90595D133E0CA2A3AF2DD6D4E50A9FA8AF67CE3FE823A4E3F
9E367C4D358692A287F5074A8C01BA5518911789F7767BD01F00D086DF326D7C
A50C1EFBB3AD48F21DC7670F524682E7CE6FB4EF66525E8F15F63E8A9F64DB78
90533FDF90C51ACDDB5CD7B1CBFAF76EE833E519C3715CFF2AC7C25F0EB8FFEA
273601D1E82984B8AE31AE343F37D03920CFB83E2DEE7642AA85B1615F9CBA1C
3C3197223C9F0D4AC9F585ACD311E1BA537EE424CCE1F22EBA8031443AC094A0
7EE8CC94D559627274D5026EA0DFDE5F67ABF5E84CC6B6717E8B794AB2DBFDDF
3A89648C906439A91CFB1AA195D9F12E03463930D05A3D71E1E9830AC1A31C2E
35BA7B396815CECCA18146C96709CFF862E8552E4FDEB7767292AAD81E5B4186
180C7D70697B73BFADE926163A5780E71276C60EAB7E25C124964778296D06C9
02559B89DA648B919EB362176B83298EE2D8B405DC67F2F888ABC36137C2137D
E0D7EBBF2323C750C674154FC6CA853B13A2D88CB67CECA9A1D3498D569DE012
062C1B959357A2A5903A5BA40F8E6CA80916037DB040BCE705D91E61D6FBF089
4C659A61F005C6FCE1A0E9700362C58C9FABCC46D24DB46E33983DE9AAEAA7DA
FD44C991F74087597F21C39DB6A2CA7C80E5410BFF7EA073A18DC2F6999DB161
EF7DB88DA4B0C592385D35F705BC2A9B1075F1B1568CE34A4F7FC812BF766372
E6F0277D8604E72E2594DF545E359F2932DB2764780688C794121E4A50AA7CD6
479A34E1B75657B41FFDB8AF1C9E3D3CE95EB410E74A1A29DC16D7FC12AA69BB
C23F9C6C4B24E6F0331C3747E378ED0C634370C3BAFFA2F1F9A03CCD801C4E1C
6911750F761F9907A438DDF4506C6ADBAE868F8E3D97C83E366A89B60E01C8D8
AAABC217C07193F92A25135331AAC542A41BAA9D9B246CDCDE58236DC29CD0BD
4C7842713E95F5CBAF73AB6456DF36FF580B2F42E21C6902705307EB16D94092
A85D8BF6BD657788322EA6A7F874F53F5EC3D5A4DFBE35B5911AC6E218ED62EA
FE23AC78C1FD52C0591102D74D3C6FDD1935694B7002E61FC34AA828BDB14CF6
B81946BBAE9D2B044B3F72DD84699E5735D7A8A57091D3709FA9D5314AD7FEBF
0797C5693895A99F6E03BF0F19D8246951FA87CA9FE08235526B59964E529D71
4203D3849619EB4D842660AEDFC5430F81C552C6AEA6BB170154C777A63D6404
15B9729D98238DF0E36467F8AE46C4A0A633D4B3F8CFBD1194BA8E3B5F981868
3EA2F04EE0AFC3AE4DFA747A1706F7FB6FCB5378D992B8498043D00CFC47D2AC
1081F1A0B01B07A92A8282B3EC6B7AB485F98415
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A2255C2C4C4D9E02626F0B4DF1B646DCBC0A6BFF
8EF29877FA968660BE139D8210CEFCD0D24E2C9976490B46BE7CBE8C1C475F88
95C6DDCECED8989E2AF9133ECE53E795B85E6800992BC331A4199A189ACFE5B8
DEB2182D7A5B4CCD3E9946F115492C8F03055C82927FFAFA6E43AB2423BC4874
E464ADB3D3F07FA22542322B7BEE5EF03A34FD5F89F09B25F78633F8D269EB8B
F7FB2277C280DD664B7470201E0B68633EB54DE3215CD1B5C3FC0318D13CF485
B3CAE0E09B8FB8BD66BF548F6A0B8DE645BE6F8F76FC287714FFAC1C08144A12
955053DAD310C9794A50B92550102D37B167BD5E13490703F1F12484B1F15B5F
FB5FEEFA7CF513353CC67592BD07E90AF594782448CA68AA7C2E85C0C29798FE
DD18D2686EFDA7DA8A66AB028E2A4170B297091D94A09A1E54617CFD9BEFD029
36F1A4BBEC7ADB81F669BC2ABB449EEBFC69F42051158C893974EA32076864E7
538F2814D56C7806D13A95784C5E65AAA365F6687F10B69C4CE78EA90DE920BF
0A48741B2F28BEC51DCD018EF4489CACA97EB26FB271265275E982C48EA84E70
C8FA4E3DDA29D587E28280F58195D30E1F1AE308C09649283A40460CA652A9B8
C55CFE904076ADC9D324D73325ACBCD573C05A6EE2AE3195A929643C73B49A7E
527D850963FDDE01152BEB530871723EA5DA6782D7DA94222281289F9A39149E
124C564CF6CC8183A0FFB18C16F39C2943C69E2E2072F3B9FC3C280F7491486C
D70B1E6E9D618528FDE3946A7E70138C53123A0AEA68C0CCE0729A6A64F1BB56
677198B4A5DA82D9D25736BDDBBE6A8DF02803A03C6AA4DB9A1DB4A640A520E4
963D7A569BA66F4A29C38EB74F2F71E57C83FE2ED4BE32D1FE6121848C8A77DA
3CFABFC3FCCD87D502CAAB48BEED6F86C111A3E96C638760BCDB6A5F3235C2D7
AF7585D1B5855E4A0244762E0D457B49B86F6E7C43347055442F4BFE60B0EA41
1C3B1EB086A4F937C8709F1DA8AAC7C5A2F31B467DC1F19C97C7BD4E8E36DEF2
69AA22439EA5532A64112AB352F597D78AA2D612256E42D0D6656433636A6644
927B7139CCDE2C3CF1B5DD3718D8BE3C28C447CE1312BDD8381DF7943EC75A3D
53277FCFA23B1739B485A124C1D891C08673CFE5FBFF3C893FEED536CE8AE071
077E610D64D9D6F4E6615832E3449D186E05F7E3D10EDAF1801C0A19B1E0B51E
6E93CDE3429C97E6AC55D7C4ABF6CD9B2A8135889CE9DB1699FA222CAAE3FDC5
234A5E04974D1CF23AEAE391CD9DF848781BF8D096819A3CB6C40855AF8563BD
0363FB4CEB509E7194ECD03E78CBB9EA9E6F3B268AC30B5A966FD8356ACD74DE
A848062988CD1DD7B9488A380BC10FE829460C495811604A2DB75B981AAF79CB
6D6CF75A4B14FA8BAAF97812D02E0F94F2F5E59914AB3DC75457F93DBCF5B625
6487E40E5E0E8940543C8F895229EEBDC2BECB24DE5AD45E6429C5AC52F4EBC6
756814EA2E0A4E3EE5CCFC42F63B1C1767A866F1590BDAD57F56A3D1B6B74B44
9FA308A03C7078933A19111F732A3EC7067054304A10DEECDB2CB9FBD8FFB440
EFF947BADE9B49DBD5055B6F21CA1E0843ADF6325874C4559974247BC2819320
BC5636F3DDB8CE1E2B1C644211425D962D7518EE06E584005E77905E5C1D9190
047741C82F74247F14594B6E6AB3F18AE7B0C76307671FF0A54D301FD66C6DB2
AB8D0D978AF6A78CF475B6A14707B662F4F6B50472664533FFFE042B95362C5B
79F9564DEE0A83BC50C33ECE2A02FAE845E50C93BAFD8FC197D0403F9A79DCCB
055CB52CA90E6F2B3838B307E977BFE6709639813F47887E738DC639181FC0AA
9B2D0E2F13060BE986CD76BEDA7416F123987382DBAC3944E3947CBC1869F870
3F5F7622332B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD39C
FCD0E8A6224BFA03E8C6D73F4B8F480327701262285C527828E5E203F328AD95
5AB433987B229534C53061C3350047FB20E3887F514B5897FDF225685D18D679
9DC141B7F6830D6771F1A3CAE655CA173FA57D400530CA6FABDCCB4325478D0C
93AC7EAA9DF7605213DEAF94C7281D9AC68D884E15ACA3BA68034F897A2FFC1E
F76FA2A69CEE7F1E9543904F1773969F65553C3469FD85B2F2F89F0E547BFBFD
F62A3E47DAA4EAD6D47F0305CCDB297C320A48A3655FAFC810CEC6F6D68ADA4F
AB5DD7F61DB94072B0AB8F1ABF62A78E43E1578DEBD2D05109DEBBCEC64AC700
4C28C4F0A5E3A003423B9958C73D306B2B4A7C67A95F8B4E737992642BD3701D
39FFAD94524A7752560FE97B8E99A12AFCCC5044D989BCAEC863BD15CAB7CE63
0194962E4183C3838D9401260A743447DF953444B29D7CB004560D0685F73E87
72FDDAB87125F419F90D165EF1C2A06A9B7500C6AD185B4115777C6BF9C24D88
653589B431FB84E4DDB650C2F783594DE6123D3142FC5C99973AF211F2A2A05F
5A756073B85FEADA4823BC1467EF2FC0E98A2BB28E5933E2F6E50D3580C547C2
54FBBBDC95998DEF2EA825E3BB2AEEACC0F30841835121B7A7D7A973F2EF67F2
795E6DD8CF55B9823AB2B15ADC328CC3AC493DE8C2F022EBFA14A2976D8E3559
B5FEDADF4E23A07F6C0E1387DD54F5C8BD071C4E9A716737B6BA413F846A887B
D1B3B89EEF73565F3D0D2D1E40E4C2811D37C9029692DF8E94F6FE39474EE13A
EEE65EC0E099C29064CBC0503FA4C89D845F91A107C8414C1648F6EBF6C8B1AA
7B2F72302AC2C6E6E9E4FD1EDCFCB8C648B2BDC18FE07B44B7E886DAB96F8B4A
BC3C584457B1565FE02E26EFAADB605C5CFE109AC7A355E2283555E10CA9070F
BB98E2337281FDEE7EC20EA060A062235F8848946BD058A0C86C794697BB0674
C1DA26CAC3FCFFE73689E2CCCAD5DE725AF6C7DE282CAA214D69B6793520439F
2991BEE6E427D4E82FADAC6C3829AFE1196FFD8D1D0F6BFAFF4F9062FDD08665
FFBDE33DB3EBD99D8110257DD0B832CB4209074A589041E903F6D89E22D34EBD
2B3C90EF5D9AF0A0DBD5145F0FAD88EB09D1BD84D00D951D4CF9252A4443EECC
AF1E56E5FF02B9070C1A92470E3AD7F1CD944E91ADBD1EFF555FF3EC5664191F
1C11943BB76D70D356FE5D145C73670D1A8F71E5C4FEE96C8D4DF87FF05432B5
165C8DDEF25DC98CBEA51FA99398860E1C252C17EE576B7ED658ABFD497DD5D4
E49663A5CA73CA347E27BC49C7DBD28DDB3AC7A78020551168A47ED789C2AD9A
B8C8FB7EA2F8C7D4D9FAB4B8DD91CB69558534CCE31AE7E157D0B060877AAEE5
14CFF0AD50200A157151F7625E63296E325E2C36D5DC45C5129C2D342CA7541A
75675EB2F1A5BF25461BB38C84D0651F4644CF51DAA8608BC3B698A22BAE29AE
3FE5C543DB648AB544E8212B3B2F97B5844022274F5EA46CF4E9D49CADFF1DC7
AD838B09A2CB6136CAE6AEA52ABA90745D527188599641549149217DF6B36367
A67BA60DB09562E82863F6C001ABEACCA36DAC81C30C11F98A77F4D100499847
E1102CC075FA1210881D95D6ECDD37B0B820176667500E58782156ED77373459
6699116573EB74FC1C83B091EA1700BD5B069BB7DEEE2BB45E7757F7BC00D85F
75BF5F32B350E2CF46BA0E8D0120BDB3E742C15DE5A8340318F907D7DB5591A7
08C83C63D6D457915A2F41B21629926169F4AEFD81BA2A880F4799EAE1C0C57C
FBC28FFFC956640872B49219FA101B88EBFA3E47EA4515043C418049903E3F36
885AD45509FC3CF7A376A608FC51751104BB96EAF8314E2322C457EC6683D385
525F118C799C34B50840604E7C248CA5BAE81E8C76C29FA3779933221D8A612A
2DFF00179C41CDD34E7015DD7198AD6EBD2BC01221F7E35F8662AEF8B6203C54
59E883141A505B275EE1333E6958254B6D96C9E54D47A12F4D299F67168AF7E6
1F19056BD1DEB7FE32A4F4E62D202CE86DDB34598B8CAED5B6DA81A6C816C747
568DD57D21AC8F8B1CD8B2BE97272017FC8176FB0988076E76EC6E8B4CA921C1
AAFC0EC3E24C38BF6D64E9C259ACF279C3272383D7526CEE1C178B1C6988F963
BB0D7534D41E675EF1BA59AA153AEFA7AA88C44F92801FAC61A4EFA2911B55BD
7DF444571A774CFABE590CD7C75BBE8B58EDC3A2C53FE35CC6B22EDC09857DBE
3019A7C60107821040CB0824EE588C4973D9A0D51FAE6E5FC9F82277403C5DCE
FC2C316D499F60E7C6C04DE9C117345C4E51748D3A5C5167780590DD9E188017
79FBC3307C0BB8A5784518676D62FF024E380036EC605313952366F3C351EFC4
33256002C59C39260DF18DDAB0BA5A40946D550B7831A2EE2670B2FC5DF8A50E
6F0C48860C52FEEFAA70B5953345568F1DA030BEF5C410DCA1D11F770EBC2E64
1196A40F44A2BD2529610091D8A9F09161A41BAC6A15727CE914A1009B2517FA
41ACD230B1E0CE76E289C42EAB07B0F60452B537A69B9EB54A68FDED4456122D
483AE830BE0C173A0D256118B0867DA2ACFA39F9F6EF1D81C607DDC242707D6B
53ED198367C7D54AC750A007498FA31E27B0F86C6D3AA81060727EDD60506506
EDE0AF44190FD947C4B9D41C4A6A03DF807F98C68F883721E6E7E6383207B054
006A409855639AB72C071CA7DBDEC1EB29885A11D100A9D443EC282E485CBCC4
8CA8861B0BAC0B3574ECAB561760E687C3BF7B72600494F60D3490DC63F40B39
F2C388F118806FAEF0361E5A30DA786E599D9055059C0C2180824BAFBDE47BB4
6F54EDD7D7FBE6B569AD9CA1AC51B9CAA30D805089E1E96AA5F1C7D8579C4D83
3DDC80D805CFE4868E62C90C06533AE6C9A73E86D96C6E3919B677C2599BAA26
96DDF00B27D9E1AA2D9A1986D83626E0D8D0C105CB6FC5F610237BB3C6E242EC
52D4D247307FDF5269B44DAAA80E7B4DAD286C0B4469A6264647AC1D5FB8AEBC
6481A94C6ED5EAD255050003F03E16A6529971CBCB06166030EEF983EF332497
5116CEE2F516B4E2977709EDBD3DB7AE516C55E742F598B2D718232DDAFB2043
F674EA73C9F043EB73E6A0511F1E28762342120515EF4AB7CD1C0D977AD77AA3
B19AADA40A0586A02109B864FE34566E17B4A1A09F9BA10DED06056B51C42FB9
B6A9C4362429C2FBCD39A24463D3E0AB8FCC9F3FD3A30F4F015CDE9893D5D66C
804F030B04D85B48DC345FC8249F699D5364BBA3E4FC59D1F7378FB3FA254230
B9826E6322C4D6231EFE10719E907FECF478FEF51DB2687D13CA64138054D591
B1C7894E2A0D724F4369326D31DC3FED9625DDBBEEADB867DDB7FF0678F202EF
8252CED93785F720E4DE92960A101294ECE75FFB72E6043F33FD3778024A3CBA
9DC490FD77F0F3AA902CB872E59AA81C0B0A6BC9DD687A18BA25D37CED0CD4E4
F0736A7C0EDA3E239C23A9BC94D2BB2581629D0C9CEDA46E01A5443002CFE126
DF21A740D9791D4FD8CFD7A635837144E85014CE922B9801C1C1939D2FCDDA6D
CCDC6E7B4B622D86519A9A42FB03DD17290E01444DE0216C35C52F0C3950222F
A43EFF75AEA3FA058494B0BCEE5A20AF99C473D1241DDDA5FDA97A2888AF5FCF
BB88F51495E5B2EECC7F07816F1CDFD16F7B82AE7FA98BF363EDEB32B1544C9B
7F8041AAC5EF16801613FCB3273DC62300B0AB0281C7CD4FBCE2B5356A2ECEE5
118D86CD0DC85A9A53BE7E1C06835390A532F3F6B1F8FF071E03D1BB27C6A591
AAF6BEBA1976526BFC9D408297302124C1A7A32D8F5976F7CA9EB64367E3161A
5B20A7DEA7A985D1C34836249AEF8ADE9F56E298AC1D7181D637A568C615AC37
91D8E50942287BC59CCADFB67B23FD0CC520310B3EF0414CB723B3506AFA56D0
24D45A9A51D740B3A96E7AB386AB4E1154350EA81C5DF203CAB41F0E6C48E170
4F311F51451DD607ACE85F8B4F4C828D7FF50D459FB6C913BB52FEF3A6D478FB
BCE3D06A8573ED0BBCF641FDA888EB1B9654C0CD0E070A900A54D9B875E95CA8
166B84CCDE9FB92FEF1C849E210276F72734DB97A902EAF9C9DBE267C618E342
EE8B5C4DA157F0B3F4ADE8D0DC6B9E205C7C32C2724172E4E8FC4B58E6CD01B5
9C73A14DBFB287B7017F6AE0F5CB1F557AEC587491B60E2834911FBD138AB934
E1A0F7FF39F7484F43E3826342C8B8BCEA7F73C3EA43CB339557002020EE213D
928E9506749E3D0594975AAEA16E8539363D7B082B6099832A468D399CB9F5A6
C00424B2B60737C546E9A01AAA148880A67E7D95E3F2042F21E131BCBE2362E1
A7F253A0ECEFC2D2E76DDFF6D7128E80DEF90FC98F020B3D5878314012CAB867
D7CF7091C7C7FE7488B914100EE2366557171F2F72AAE38C57A5F21AE59F5A0A
27925837BEE41CFA13CA06EAD9BA13FE15B781EF82A7634A3161CDD6645A9C7D
B42FDD905FF9EE5FA98B2F04D69AEFA77F8263FF6E201C09E3AD2368AB66C442
4D96039808510971A53273FC0F14AF9F539D2289A0BEA1A7A8BEB2ADF0D9950A
195F64FD3209C6D47B46B7708F855E5A0E7F579C8A4DD8D901A5B598D721639E
2A82FC866AB91B73E08A7F3F8BC5E5831303447C940325E2C4030CBDE864025D
7176A1DA12C5F127C127C759CE5E87C067C64070AF05EE7FD59641A99D3529DD
3B8224D77F85F5C1827E436663142B2DCC67B793FBB9CEE4A986A5022FC4BD5A
7555D2CDBA53678F9F95A9E825F55134182E2BB253BCDA0B89BA1436D90E1600
6762D511C7DED1303B2561A4D010A395A1BFC7A2423D1E19F32DAC41FD436DAB
7247513CACC1CB61153358E44F4754A24610486634605FB2DC8090F2CD466968
0E1BB64E75832DB17C1EB3108C53E594D933EADE2663ECCD818CD77D944EFAE6
4D32EC3EB4B6A2A82F34478E7C279D48E8716EB8782989162F1D8B304C5DC072
DBA063140C93C17F59A53BA9D9525307D93B8C0D596E1098DF42FB714969B926
2BEA8D983F0690B37189265190F092F0B6A6E00700E33089DFCC137E376D48AB
C3F5E23ED8FC35BA33F568888E01A80060E2A242EE4CA0E11E8CC506066BDFE4
72196A930F7E51B5CCE9965967502E946FB13220933FB217C7B41D721180EA88
9E1BAB998D3EE2C0BAA7AB94A0807026C3BDF61F080FAECEC86FBE4964497DF2
8C3C460D540308A4B4878181D2ECB82FBED648C292D1AAFF87AF82D8258EF1D6
096C17624E97F8035582667799D7B99A1DB2A7E90EFB9D80F96B6A10D7D5EFF8
F0EA992128AE3DA845EA4E081D63D6327DD36287EC0226663360C910CBA51D8E
FE85A10F8E11F72D917F2828CE535DA2D0F052EDF14B2739FDF13EEBD103E038
CAC430E4350E4C3DC89D7892553730E36963118A600F83AF3F1902CB9FEDC0DC
D19B1B84B187F02003C375DA26BB94765520A3577B7F8EA6A023E98ED9BDD171
A3100D4D69D8A56566C0FA3EAC58EA3DFD72AC4C6B37FEF23A47B5A4038752E7
23288E6C564AD4EE44849F4021CA494EF6C2CE64BB429C542FF8A582AC2F46B4
9774F8273B5E98BD87426D2BDDD57353577CB01877424769AD11C53BED092CD4
C17A17A440688BD0D8601006F8ECC930DEECC72781066085C13AF52E333C74DC
A40F5946D9266E07CBF681164FEAF332C19BB64216044111D831971C4BA33E9F
D206A7B97E69443C97C3E77BE3301FB1AB1AE471287800936B812CBED8EC4F3C
2BFB4A657CCE94D311F51A49326E93EBE93FC663854E5A10F279A1233DC0BFD4
8266D36F25E6CCF2C1077BCE4BD8D3E30A63243E9F7DBE231C3DE32B82A38A9B
AC3DDDC4518306F16F8D4FFAE416ADDD1143EF22050DB2B4FDEC05248E9B0C24
15CBB4E191E98FB776EBEAEE6AD93C48739C83BEDAB386C9B13FC9996591ECBE
650E4B891AC1B4759C59A2CB5645DE059368B5AFEB6756F386A4C97262724BC9
A9A578B3BC9DB5CB1B44B1BD592D46D4E132E114B22AE36B9518755CA146091A
2013ECF11A1309FA7429F55662F9A92B658455FB81B32D8ACDD62EFE4D8F7FF4
29F96DFECFD64AD6E434D3141C0E9D4C0DCAA264EA71AA8654D8BD673F79CC1D
C21BA9618981CF81AAEE413D94ADB6DC8338098846BCB32ABDF6423EC6C03F4A
6F2F81BA6E4B03157AF42FDB1FEEFD1F89F1FFF83FDB4A95D61ABACA8EE7F72E
226760023EF06CF72D76D460EF34B60223FC6170F5DD66C147D2AE745FF5F02C
C49ED6DC4918B6879A73B9D49874E01F688EF5C892966ADC9AC306D01B6E24DB
B2CFFBEF254F35662A90683655A668931A02B1E2F133686110E9F1D25C93C6DF
9E1FD89F2F8CEEB870C409ED13E78B4C9B408E6AF76CF5FE7F2BAAADC3900F14
F17E59A758BD72AA88436F30764344CCF1B9E47D39540E4B6477A00B8EF6B739
5C7F900C2AC7BDEF8FB9D4574698BC8D4E3748AE0F9ECF7515A0F23D18B36684
FFE56A55E18E0B8D3FF671F9696E5F3C75320B4A2FB4C322929A703A21EE0CF0
830F466B96EA9E36FFFA2C3875C789CFA650EA7672135029F184C1F36006E4DD
60A05F12E3C18662C3C134AD613F7FA4217D853967AF5E3659D9628533AE56E6
57366AD50CD65B27B994508E7746CC486B7BAC60E65C59498FAEDDF69890FB20
39F35A356037E4850A34D673727FFDC1C64F6ADFB046742F77DE3355AFF970CD
CEE36EFAAD437595AEFEE8F2884ED068C52FDFDC9F3D23CA188DAC0F9ACBAE77
3FC5C3E21F2284E483D15008E84A4BEE48C9FC23BDD233CEAD1916D1BE05C9D9
5D8F947BD07D6434EABE1062B23A25485048583800F6809EBBEBFB2CBC79B26D
01D8ED2B2B70E658F0C51E9765AB5BBB896C32BF27C61D987552FAA97813EE20
376D20927C4E08DB4050A744332069F3CFF233A6A2082CA4564D9A9C6CD9922E
3DF197DBCA9EA7EF270FC45C5C09ACA1CE60F7B717B9B29A54F4F4B2D472C749
09CC47C1675DC6FB9ED4EB7B061E721B992A9FC9C9E460A62C80FC2A395F3289
1BEF93D1CBBF29B5725D3B98A08FB30B03D9DF0498BE1DF5DD26AA443B6B73E8
0D855F5EBFF6A5BCEC484FADE638FD0F998FBA3EBC109882B5C0EDDCE8A5C8BD
4703E2408AAAB31DEC78FDB04D36F53B8FA747C6D9FF8DB268F0F68085BFE4DC
F0C8E75BA8EA33617F1E8ACCB5AF576674263F62D3E6D262F980CD3240CACFB3
6B9EC749246B67B0552D00C4D3114908981F51AC4E66A3F8207D40FFCAF26153
8F608C93ADF044C39BD2A560B752BE11DC28EB556402AE344855464338F161DD
40C84177B896B9F89FEDCA6F80E6E4D69A0DFF99D86DC88F11FD5EF03B19D714
FB66472621113AD7BB240DE7DFBD1F17FD7E3D050F0907E3B61B9DD252FC8B15
B56D7AEE5FCC7B91873D02EBC561CDA7D32B64D1BAEE7735FFEFA9801CD37675
39145E1191730E2CF1B8B86DAF7D7032AA640ABA79FD821ADA931C653006BF67
E0D0918F99342104B4EE5CF8C1899BB3199B31F30DDC42416A75061A2EA63080
05A0551BB232692DFD2E9CC177779879FD043775224AAE82C2CCDA4AB39A27AE
30A0B1536D76C9184F8DAECFE71DD5403DDCAB8837EB696BAC4B915CC97D8C70
12AFCFCD94D505A649104701909913270E0060FE23E1DD251BD3914D1C0CAF2F
2A8C3E8248880242AE015219DD76234EDDC8234B8620A78AD003F279A4B22246
BEF211725FC262A6078F4DA335EFA4CA54911BC802A06B3A5634537F41812A14
3B802D3951B6D9026B5D97D33027B9269EF4C058B2A02018ED03A84DBA6AB088
4C5D19951980D632181E239065E32B17AEB326540207E4A52B7559826458654C
72FBCE10721C2B313BF29892309217E4A9F987221810546F0009F98531353C9A
8EBFE7DB9C9A1595610CCB3E4E5BF0A3151004FDD30F9F772DFF813067897570
BF71ED46C0118081A739201A18E0B2B745E35D0AD8CE552712BD7DAFDE8ACA84
4DD34A2EC1F5C5C77500399584EA7E850602B6815EBC018D8D620167E75A083E
0704E9722AC912D3FA7A1F3D5558C1AC527523358DE4A06B547EB33806C4F943
CC8F1342F847ABC8991992A2A1A278B2E9A7E7C3CE68481869E5DFF942D5C63D
07B8B577D80F66EACA440D77A9179EFA625B5D07D576098471DD83E6B44824FB
1A4E23545846F99242ABD01D6955B0F8DDAC8BE19EBB36D94E529FA605325DD1
EC4A3D0035E2A57BEBDC39E7AB9B8A6C79FE207C12CF0B915E39263AA9F03B21
C1F45C87C2CCB12B58506872FD1AC6CF819110E6FEDED3E62A92EF184C7B9527
D7A22B80CB7737DE2537E7B54F5E1643E30046E876C90A77DF43E91706ADA1B5
B7C7B719C10C5A1B5B3D52CF49FF9F5B3A390C7084BA4E6E0D78AFDB692AB573
32912F05D1CD18F7FE5FA60F8F48E2604F7775BCC1B2CFBA3F7F945275CB4A46
92393F561AC3395F6D9B8AE4FFE0E51DA78219F3F938C186741CB1EC95FA7614
22D7F4DFD00C078DA169F77B32BCF9CE3782D3EE1739B003D94B108DAD33602D
146F2F5391729B51CD703B8FE781EC8A57E709E8A6CDAE9F7EB8ADF8F303A165
3E9FB661BE3B4C1BDC853394CF665F741994F2FD6C49F144628D0E233866F876
5090E7AAE59D8053AE0BA8DB3BCB2AC0442FCC7D8B2DF6A3B6681C63BCFC1413
5382469123169FEC793400C74D81D8BB0D87E54A0AD2C4C81B22BBB92154D5C7
304FFA804319305B7CBFB2AEE28CE031D2246BFEA6FC8A933BE0BC10053DFECF
68261DC400897B7D2AAB236835375E0B9E13B07B4D38BF176C177353670633F0
21F9DF1B37F90088B8DB12641ACE24FE63A6960D78E078E5C8B37D2B233E6CE5
81D09253F6D6ADFF67656DC63551191055025C731C764200BAC03D1AA472AD0A
CD3F54D2ACDBCF2730C10173C147DD9A770AD2A21749E4BE459C01D265CE34E1
F3D37687AA3B2A80FEE259DC08586B9736BABFACACD94FEE02EA7EDB7DD9DC1B
25612397FFBF6138BF547EF45B3D8111AE4E0CBFCF1D5B4E0C906A4E967263E2
34E7803297A2737C39EB7D148F457920758F04EC56FB163C13A65128994D74CA
D21F2BA381EB267629286D48D6529E15ADC93E621833FC3E90469C83F3C185BF
1E4AF89319F6B0B5F32883144D56858DB7D198F25A57BD3B18556087D7A04251
8C43DC9DC3A190BF1CF994BC1D8766A4FEFD11336E9464742FB509981641FF52
BF99C9C301B7E591CDEF451A4B2DDAC6A751FF276A310840B300B10370B58E49
634684C21B738351E04D02287D645472E49931F5C4CFDB323DBD67682CA8BA5A
F4C2FFD235E47595EB6986213CCE3FE132472DDC7AFFE4E8E530CCD921ACF0AF
D7A972250F2EA50E2A559E25CA7C9261842A53247A6E43E75057A27686746397
D816E716B7F259D4D3D6D1F0B06737D3F368BFF332A7553D23EC786EE39776EE
06BFD3C04FF933CE48AE61ED5A93DC1F2BA3A42EC1FDF11EC8385B3F737BA615
7B5E19CB00B6A5B2ABE4A8B54B457DF7CA439382D1E5941E64AFAA27CECEEFD2
8947BC07BBC931938F74E26E1F6BF509BA42EB1662963564B1A7B40E5DF8F48C
433C5CA5E4B62EBA70E63BB928977EEAD4E7CE6AF5644250CAB98456DE7105FB
8A840D893F79F3230443D11313D6EBB9337AF9CECA0E3DCCBC573BFB381C8E0B
FEB2B97BAB801D2EA9D29FF4A19A399E957A057BFE70963315AFDE3B87441346
2FBF49E654BB640E60E6A7FE5A5669900AA7162133244986E26AA8396D696EBD
94E6EF1F3ACA5708D3818A68B8C62BCC686B930D51A76E422BDF2419D6F7A55E
0EDA692386F263A75C1F6ED625B99CC9C3E03F133D98D135FBDD7DCFEF07F933
66AF7F26F35ECF8D5AA73CDCF454203496AAD69A05A3349349C965D9025A5318
E287797AD648B6017EE32386CCFD2D43283EDCAB61EB015FA879BAE54B4E5F84
D18147590E054B70E3F30CBA56E641B7F20AA6EF837F84D697ADE9561BC4D60B
B88BACC4916F7514499706F303606BBADDE473259FCCF5FC833A0D9ADB5FDF21
E5146709D0DB32D2DBF6C4CD3674C2B95DB4FFFC731CEF46F384CCABC24E7165
0FD2487C25A12FC97B2C590A835A6D3C651F84067FFEF9E72F8363D8E5116B68
4BA5B21D162765BF1FDA0BC109AB896DE4281B60773049295392D4BCA495F476
85FF21F36251BEDBB322F8192430635B74CA881353E4CE103BADA0E9759C2C6F
3ED3A26B7E8BAA8EDB383DDC0BC6740305C40DE23C0DCABC26DC1B8FA3FE14E2
B233569BFF15D65907F44A48521096B1240EDC18A069CEA1467700403A196658
731E4350DCA843AA863071A7B86715E2BF7BADF8460B3686B6EF38C81511BA8F
F4887F3EE4357A42157522769F3B3415981AF9A4CC1FEFD13FD4BAF26C1556CA
2248CE263187BFD652DC36561D27A9335BBCA18349AEF37A925C11372129C973
CFACD535CF89A430D7C3D779DBC99C5E3CEE76DF3204AEC1961F654E12385D1E
C21D1F9AEDF07F9BE1DA54BE91784B721065224C925E7F59379CCF8E7A3BC28E
2E7BF13ACA6B3BB54E58726C1DE831B7747A0D9295A2108EEA1D138B90B1C895
7CF80035672DA9CEDBAEFD14FB9E03BD6DCEB7158A8BF35603C68BD172168592
A085707414BB4E6E5ABDE1C9C4D9CB1C5B508FB1DAC84D3300202FAB280C0B6D
626B4B7BD2D7BA3B6AC1A456DAD044021E04D419C671C0EB19A35AF14E31E43C
B1633A72BC1E72A5F98414C32D7523ADFBDCD39370C87B7DE7454EA8BE0A8587
039E2A2993E8650097C6F2596885420B2B38DCACB524BE89BD37244E40CE2379
9373B747725F22F2E37F337A7BA18AA1B047CF57992A19A5650C72BCB68E1151
905BB6D6B8E96A1DA3F0E669411F15753636DD983FFF4ECC07C13FDF4389A559
822986C68DB89F3C4DA86F1EF4A2A92AFFAF3862B4ED64CD18471A49B62240FE
F22F4D8246885A8FCF5A5C4187AA81C5BA8892EF2FA9F87A6A97405E57602B94
8DED6C44828FBFBF98843FD61AAC4452EE18E06F2F33F9A307656223A0A4E5E8
73DD5728751331D96A7208DDED57631ED27445862484D58C78EDF6C2650A6A3B
205AF784DA0937C74083746CA9A8557DFC573A25155E878A85ADF68A6975BE0C
BEFCB2C3C34A650FE137F4A097F739879F1507A6001113B11FCC641D676CD127
CAF35F1F5BDD22B310B27E091728626DDDAB2F32540FBFA3EB3CC5D4AB76A783
FC932723E24E36EC2F580410E089EA9362A11AA9B3D13D06C96DDE3F4C9C56E6
C9F1B481D59B3BE653A80FE9B5F613D694EE004270B5FFF1BAC9F3954FDAA2E2
2CEEF3B0647E26F47A1BE4D3CA0B3589C136DC8767B74025EF5FAF470A272F57
F548D738C0D8BDB19447B728CB005C50AAEE736C1DE0B08E3CD045FAF374AAEB
FE99BCDFD32EB647D987E1423804454CCBB664F63C7588955BF73F38B67E1FDD
63579EE3AA4B78020A473D2EAC2F9B94FA223C45C32D38934E40372A37B19B17
E090FCC1137C613AC61B6452571F9A33E04C10AE880F202DD21BFD7CC9E5E7B2
32CD9570DED42DA92D4DA02CCE273E8AAA1E8E4017CE2EC459C89A760972073B
11F52DF100F64925BADF978576254930567A877BDBCE3A98E8EC57BE41DB5B87
B432B0CED5E681E7D26C0ACE5D566003B04D0603504C04951290F43BA455DEF6
53175E07065AAB5CFCACB826EFB41D1A7A6F59DC8AFE2D0854B8675D83F5D851
D392340AED402E9DFC0045FC42F6B1DB3CDBCD9ED005AE85DD2E917C8ED53F19
4AC51A39EF0B8CD10758E6FB302FDB8719BDEBC7711FD4180C2918E1052B07EC
4E797157B7092E55B43E757DB216BA8E4C0BAC128B7D4D61C2AA87093F0D9188
350856B40CDB9BA1AD4D40E8251B828BDBA6087CA9889B31AA8DDBF486F1A234
FDF8ADEB552B7E7E10AA577ED3D5590727FB3900B6DD28F30D56D1DE308C4992
7AE04C0CA35CA2A7BA2A55A24376D02217FB64BD239285BC326D3CAF875C31AC
92BB7183E58236D47999A1066D8D27A2581F5E8F2B5A163785EC96245A45B4ED
6B5BF9F0750DC1730272FFA817B23C61D4F14E8B989852D64623F4601D64D796
EF15C2A291A8A4132F4D574134DF09895804413E361D728DC24D8C2C25B06AE0
91DB97DCDE55F701A63B219DCB634717044A9E4EDFB6081B2F9703952C823C0E
98F59BBF3F5B187D8321A0A21D2271C7FAD646EC17D5C8DECBF1CC2B737C0219
CCBAF02A248C68FE46365EDC42A1D0107E6E2DC1FED5EDE8FC05C4A714EBFEA8
09D231E81B6D55333607CD127CA1A62547D23D19EED0D64034A01F9990EF6C92
7B65657F25C0011DCF5A74F5D7E132CCF5B2093E36A61F89CC3B6C73ED2387A1
E63212A16362960F7C42E27E04966555DBC860D42BB03EED7CD701C472CFA84B
DF4771ABB21235F26ACF6B9807513FD8AD5E1BBB62B8DDF0CD885A65F27A37E1
46CD6181C42156BFE47A05F1DEF0CCA48FAB214208284A8F508D04F5CA0BF44F
F08B39D7383D2713E2B2859B4DE22ED7C550E3EC1076149E59A402E89436B180
E0AA2FD9ECA512FC506104B21F1F1021E035ABD92E13ADF85FA7B62AFD4523DA
CCE823FEF6B7950098A3AFD46D2241832195CAC3ED574B69EEB8584D6AC888FD
FEDE4783A639A6DA91EED009C3557B0B365961300BCF82121D266C5212F5E942
1EFF8AB039048278B09BFF9FEF74304C001A138BCBBDF395F864B9CBCD02F123
52E08717923DC1E637949403A04BD29300CAF3E18DF6E1EBB29703C6EDDE44EB
F6E33C33B32A1DF271C6C5BE21FDA255E762C97E39BA35CBC79CA94ACAF1ADAC
2E209A3BF5144EBF78E6C189E5FD8C5C6C6F2A436FC2BE4814A8DDF0E2A00EEA
AA7E81FDC3BAE92596688C90521A2FAC22D4BEF5B72E5DE5CAABAF502EC1DB42
B712D612397E8624A7438FB4F21C1E352BA18B155EF5196DF2D9F60CF2E4DC5D
AA8B757553144B8CA374CC57F36864EC4FCDEF7C7C40C004B5420E3663D88480
6BFA0C33ACB43099D9A1902AB79BD79028586ED253D7C612D2FDCB554D23B26D
26AB22AC7D324B7F324BBDB6CF249DF6713313BC71EB137C86964276955F5E0E
5BB01C1AABE9C1326D655C4BF79E2EA3BCD8310EA54868087395C7F5927C637B
5E8D884F9B586D14DE20B1B61DEB19AAC32A82331A6D9F1F13DA0C2FE1DFDBFE
84A09959F7D88A0BAE7AF26BEB04550EE18CCE2AB2836BF804BC54D97E27FFF9
C4989BD5ECA24FAA6161B1FFD22A31C1FF1492EF3B3FE33C8ED03B910C9CC062
DE49A6FA97D69ED73B56EEE09CFD0D0325B2A056AD11772679933A99372297E0
52679503AEE9354A00699E36F96F5E3D3282C2BEBF40BA3A724972A227CDD061
ABCCBA7DB08B1515E83603B2AA513397B213767E1A96A31757BF97B6F06F6FDA
ECF3C86CC9724FE93DBB60ADFDF7E84159325069259214E6DA57446D77FC6492
4BDF2BE59B649259612816FA9E7AFA55F2F55F44B6707008AFB786FE7BC2E431
EE3FF1FC3E963700A48F9F903DDAFD6949B72E0B986A4BC1B47C1B7C00B8DCBC
9A90B6A857E70C7818050B3FAC8C83AFCBB37D3E9E8BA98EA3BAC7AD74EE630D
A794015358A1EA74262C4B14D40A3DAB3E1C9A3793B0F3DFC35382C433B9269F
6D5DCC66918F103F24E1BE5C95309FCCDCEC9D8E5D491E65B2E8A10B659E3C68
13083417515E3579A076E88365135E1EB7CF7614F16B0D4D72BB17EB5A08B68D
2A4046ECB0E57E3AF29119CD36F21181A14D5C2F627DF302B1356EE505946361
3DD36491F24D7C3D634B25C2CABAFBB5648FD581A704757381638820B72E020C
95878B5794A79AA5400609CD04244BD4A0631E946A7A52D144DA453F2A047562
4973CEBB4711245A93C0601F927B0742A9749F67EAA756DA75682ADF73A9B1AE
87953CAD838FD58EBEB84997F5A16633BA4BD3B6166BF5C34AB44E3A720EC9D8
FEA0A98F591DB4390525D9C503C6D4A7387E3D12DF53DAF6D9DAB70B40ACA100
CA1F569B189E58D0E803AC1A0F1AE8A813B06B6BF2A231D72EF1123C82D007A3
34366B19D0247ABF16926EF41B1814649E14B845036DC125B75419F0D21B43B6
02D89DE2E51C85B3597B78BD7C4E926E779A09F2EE7F6697E406B507D64CFF45
4BA3B8E55CBA5E62F16CA4AAD970585C6E338F5F95A83BF111B48475B2398584
6B15647ED6F765EE39E783623D14907DCBC32AC211E841D87FF88E6D400B693A
952B62312B8797A7B0D436333DC87EA6402B2E72AC24E6FCE1E569F8B52519FC
6361854DA218FA3F34513E5B0472066A19630C9E21278F42E6F940865133225B
A629AC338C2074605300D93CAB291E3491125944DAF2769C899940831B03E634
109635A92405ACE9A181B66C8F08015C295F77C90EE8B9C5299316818C5B2066
B47886FF86FD6FB14A0015E5ECB6496D58A19D4EB972FE8F7C63F0C67958FAAA
532F96EBA5DEC75A8F431CEBF76D6EB5E504D1FA6560F02A13F17B8EB838C389
92D38C8A820D032D68A2AAD8941FB7D8C5585C31DA38CB18027BEBBC9E01AA71
72A8F67A678714BD90C887E1C9DD87D44E7AA496FE37B34D462EF952CC9D5C0E
1DCCA03605D66A9924727ACFBA292FA29AAEC1BC7733E11CC8232DCAA9770223
0E07C989F0CBE9D76052D53F3ED7180052FCDC307A6380E261C56E03BBF29D65
278136B530EDAE325FAC47AD82774AB04FAD0A3F8FBEED2D338D7D1B1BDB8F44
0BDCEC2BFA63A0FD2ABC063C5AD7C99D2E8FB985B4A8246332D0291CFD94EDC0
55FE37D7D03026506C2D977074C072F84DC47B5496C03BF3DDFA1BF32D8F4B09
C982E90225F47280B1FF706DE6C5DECE198EDC7A5BED41D51E635BF0B16F4731
3008F064D6023F0B911BA290129EC8546D1CAEEF629BEFFD523939736807DA01
68BD03C2C13571B178250F237C6612368DEE66DD0C2FF671AAC709D87A54CEDD
E2D7CF169C622AE40F78FE82A644C73DCE016A56148D6BCF8FAFE46604D9E59C
6FC874CB7C3E7F1819C4D7F69BC46DF4D05A14A1F5E50FFD8A3CF15A3AD56F6F
652EA54C64C2414A6CE1C646C2D958A6F491245A7627D30D1A0DD863E8B12846
D51CDB7CBB2676C4BE55C40F2366A89977662B01ED2FEF9B75624D7CE37CEF64
780657AA546C8747D0F9E6768CA073566AD587FA3E97E3BB8437B1309493371F
BCC11280D7D355E9A4C81C480C59DDF700743A7FB1F81DDF225BCC611E6626DE
3621D3195BFF2177F64E7425B7F5CEF70A62813DCDDA21F618DC86F4DF65BDA5
ECD2A8F24548916C1715FD45436745B66082FC5B9567CA5876B77E4C4A9810BF
94FA7E0D033E338E149518B5493D7E3504AD32ADA98518DD604EFE6715F50897
F075509F64E999052BF7F7EF76DFE5D49BF413AA1A5444502CCF78BFF43B33AE
37DA1961F98EE74BC9078AA18211F33A485B41335B45E79358813FB56A0257CF
B7A262FA682525DDC31C543952E9B4B1EE6E04F3C9A019A537E4B660B655B4B1
738E6054EF748AC60133BB14A17B476221DF6B64FB40259C4D7A1BFAF5DC8440
510668D6EB946C9A3F2AFF013A28F782ED19B3E447464D7EC6760F7784FFDB1A
17A0E63A629AC4AC978FDCA24CAB0A02E60566BF9A16E4569FA54267210CC4D8
4CA4342296829A99726EBEA34CC4EA851AF4CB1A21CC3846DFC0FAAD37018CCA
129A4897876302C02AD8911CE3F317C77782FB069AA69C73E486C29D54FFEB50
44A2FE78E7BDD95906C31E33AC2E1F9EA80951E4920AA689DDB168B588B6BB49
16556446A786B66DC30FBB57A48AC15C11BE7E37B8E7ECB5B20EBAC936220E9F
AE76D0275A3F05F9C800A7DE27C68E1757EB46B022DA61FCBE66304D7F7577C1
5A74E8640D17A1F222D9EDF8ED27E2D76336C8F4BB14B80CAC8DD15CE15F134F
C1BD9E7DE8D3D8B0B9999BD6A0E991D868A85CCF093DD5B8D563A6DFEF50850E
2C7113B1118FD1A2878265C04989EA61C51677E4B516A760EB18803FFF101E83
619412E4A04566B898D3623E93BE1483D399E8320EAEFCD83FAB0C4590371D8D
777D67176233414B7442661132B7741DE8C839F0E000ABA721B4EF5C67FE5EAE
80BD00FEA5A58A205BCA73220CD5D9ED62B28C4C32D438ADB85709A27C7F6B19
E2C4114BF8AFBB6BBCBF7C0401EB6D7F98202C86A3D90B1B4E2D4AD17766A7AF
0E77298A87D6EC9FB996A19A7E8008D3980247C197E36ECD8881C06314395B78
8A41BDF660DFC6884E49026E04D95774E6B1E63BDA52BEE82A223C1ECF04C933
9887F727BFCD36F09B6DF64001B91BE87020E6C92433DFA1FA31350E1E6048F2
25687F63F6D6FD640106EC4209A4F360AFB142745A563F1D4EE12054287AA840
F97D256E0928C8B79C3A3C57BD00D4149E9FC384314FF4D2A33F635C6088941D
E5CAD72F7FF2795EC4B6E52A7491F8DE641E4DA4A575AEB7D22EF0E768E06011
44B6E3AF224B6029ED2F2A0D5809CE92ABB9872AF546AB78693C639B5AAB5D01
3CE6B3FDBA7FEAA9E0DB887740B1EEDC4406EC4C72E31F8FF5A56C41E133D67C
9F2B66E8E689B43AC6E4EAE161F04C0CDC1FE08713D31348EC4D6E0C4A35380B
F0F06B3654E826C96CEC06826043777DA06FECA4FB057F65F287C7727E09BA42
AC0DBC246C60C2018F94AAE8E4500C8C453F81AEF61BFEC11F8CDBD37BCFBA86
01C5B58843AD36397EFF700C0AA4033C922B1EEF4DC861F9E8D0E6492B9CF23D
E38C365BCAA589B9FB324B12A17EB5EAF2556824B13DADB4AC90FC38224D2029
B1BE8FB0E144F9007B56A8AE3CCC1141891F958A16F6AF63F6342AA4F79B38F8
BAA0BA1A65D1174B237F46D8792FEDA629581A6CCAF3E34D1615535222CCB015
FD653327AF1851FE8A5BEF8A7A8D703748740210FFB777AAA2FF13B532A39B7E
74691596F0F78F8EC43B7CD4D853568535B02533C338048F100C3CF0C05C0E30
F0B3C40E640856403246955D41309F39B25C5D607CF07E8D1473EFF2090EF5A8
EB2693E81D36DB6EBDBE281B51413E8E41C3E4A5637959CDB3D057E9AD47A1F6
BA22B655C2B42BCE47AA15F29C454A3779AB19A52CDB4E8032896A17B473A83B
9A99DFDDF01E6B1F89448F07ED13CE4F91ED7F08E73A5DB968883A6E34E01466
75DF670EA86EA88BCFCFC83E59AC014D4FB55480AE371254368CDDB5880CBCD7
D03733A6DF57FBC274FE9A12B667165B8292EAC86FD4874EF0B0D02BE90F7DBB
E47A336603D97A6EEFEE614584BC9F7E9767A9F5DE2E80DFB6AB433AB94FDAA2
6ABC41C8C50C16BDBDA7942886181D7AB23B27829A71437F91E43E1AFC181E67
526DE936E459715D3C287EAA34B55C87D9ABFF5ACD7F22AAC838131EADCF3F74
DB64384223EFF18F3ED4F5B1F94B866624928F44B3072920D69DF8399BFF962A
B69824436677DAB65EA865AC8A1002B809962F52DFB8DBDA315F032F42FE6542
89E0D9F2FB66146BD5EC67B77DBFBB4559C6AC5E21ACB8D0BA678E6DAE545D73
489F0EF522D68614EF86A4DD4412312CCCD8E06297A576398B0ACAA04C99BF3F
0E0271CF96D1CEDF1E2D29BB4306B5607CE31131650C17A525C2616027675E23
011F990612B109B9EBB9B23895B7B68949E8E58CF1DB4BC7B0DF6592E99AB9BC
C426DFB258FC9C8BAD79E5AD180BFC28CA3B776426D6FDA94F95F8402EC872DD
054EDC8C7A27E4579700FFA915590C8C5A147E34341E158CAA3AB1B6C5736CCF
2F24B7E24EE88FB207ACB013947A866A8ACE63BB8430F544176BFD7625B80223
C231FE14896CC19E2DB3661BA7C4C79E9AE9523AA6DBBB52E96DEC887C9364C3
60F07AB92F734AEB44C880757CB3C58FA365F105E1292E28C9C9DF608379FAB7
E5AB92E5E6CF5DD6AB6BF38DCAFF60B99601B9B1AAB7C13918584F3EE11F74E9
4769DEEEFA077D9497ED1E9795D66F5FBA5E300663BFF1B170031DE4CFE13993
682B19A771DB8C31C065D9847C2C42BD91E38DEE9D704C50D759F8AA7061CF0B
6F1D0BE190AABD1D966499293CD6B2BEB78DC39A264314352E0D54A61ADAD58D
6593F02500004E350B419E93729330D685809B51E0F04EC94801FF5F2B1B8684
1C01C0F1DE42F33B2B658C05E12BA3BA84BAA372BF1BE7295FD92EF783CBC166
60A6487579162F528F3AF42719B19B73E650FFB71DEA89FB21B0078180000AA4
286152FDF5E0414DD0BDB24F2EAE3758E7C10C97B0FED03B8CB69BD5803A1BB4
51513AB75E47E748287F83BFF72075FDC5A52E8FADC26A1B8CFDF92EE9E964BB
09EA2175B07B7B472AD7344D32041776705D9D3D343F0209B4BF6326AF5D9634
88DCC273143E753907A6AC3069202557823519C622921A615C4F1256B77B76EB
D7D924761911915BDD9535892BDFF3D4DC3CCBD05387A4D6342900526B412117
FAFB81DF8BF7A6DF123B0518A36363109FABE0C8FFCE6A4911293C18DBCFA741
FB1D545F78FCD00B02E5444A646901DB5F783C362BA3D103FAD736C5E0BE36EA
A3B3D674EB49EC63C7D8D12334582B2B198539169207292E0D848C5D9668F6CD
EE33B600BB2B4251DE61694597FD7633C4640A295FD4BD32269E82BC37B191A4
C10A5D3DF6BE8EEAB8EB53EAEDC2930F4CA107EC1335D189EAEE0327252C87A6
9990FB7734C6A0AB05406E54A837D5B09F88CAD0DBED2FBFD545F785475B6759
EA407DABA30F9D9190067339BD62377D1A153212B9BD76C023808B4976483163
8855AC2016EF05B72234DA13D860842BAEC5EB5C217FC685C06C5AE447C9961B
F75A67CF1D783EC7B15B4330A37FC9C1BF23CE45EBD209C449CFE000A0ABE41B
AB5E0DDF849609B9D0745FBC321548301404242E9A5E28527EB8A90F21F32100
D2BDDD4A8A9B603AF3EC84FEC52982D760129E17DC768D8C5B06560CD094DC05
1C46DED9BD07A0CBA6B2FA42EBD0379E5C5325CCAD771792846031E41F8E2511
E9FC98839E98ECB613FAA2D3E5CE45BFE0043F91E889F183DC3C7F20508ECCBD
48000277EC9474EA203E0B2890D204E55C3D6EF69FC60D33727DAE509FDDF82C
CAD598B54BF11E1574BAE48188D55FAF230E0CBF6B9D1F06655E0BF4058E6274
1BFDA5C6FAA3FB14E81D11C2E8E7CE46A01BD6B5F1198D1BD219CD83E633A755
6E19D3E82F9A5B1D83CA276901DA00D266FBDC967349244C62877C94F9C6D091
C559E259D2282B968CDDA8ED63036596F81508C8B9D7D6BA0BDFB13866FDEF0C
1BE93B62AC496773C697A87FA35A25883EDF8A78288DC89BBD19ECD5F0F0B0DE
11FC88BD6164595F2199BDFA3E32BECF5F0AC9F5B8989C13BE28EA3C0A3938AF
37B5140ECB30A0821B245C03C65B061AE6A53F8CBF088AD288FFABA87B081AC9
3E9887E7AE4D9A6AB0C1A9712176B964274E37B451BB95F524B19120750E6F5E
40B30FDE6D729F9DACF041CF3EFB2E9E400DE1FA57B7C290B211D124477A8FC0
7149D6A4DE44A142070ECDFF10E37AC8421894EDB35385F6FFE67434CEDD91C8
930F953F5C997211E5081EBC0A21257607A6CC5310ECA24348EB24683C581CD5
6A138AD8546425614BA068F38515F2CE6BF3596D225FEBEDA94E4D91F9E79B7E
A5CCB82F6AF6F4A08B755FB643E6B66F52B8F11545715602EA2814C9D1DD75BF
4A02A4E2C7D4C24AD339181124180169F3AC7E7A19D8565769126D2FFD3164CE
25F9A19F120360F93E7BE38AFBB5932D0760EAB6AA5B5E2BBC2F802F0033D7FD
A25658A1BBE7C843EE1AB10BB9557B4990BC70154F024B7078F9A909E96A86D0
9D7D23745F989159ED464D43AEC0EEE23F80A97BF0E2A4FD79687FBD8532DE58
41CC73C1C9F668931E631415B1249534F5EA9823AD143DF0E00CA74C59B1EE53
DFE999CD9EAFA84E1133E4E20E3390A266D443B0317B2C3FF5450EBBE1564D71
F65AF491F6D636A76FB93A34ECD36E7005A768A823AAD356ABD6256BF5EA0C17
785C65A14FEAE6DEB964868910BD0BF9DCB545EE112D274EAB4AF338EDB178D5
F811DEEB1B7B1AE95A22AAD9518E4DFEAB5DA339847235425AC5056E7AD9D673
D29ED3258C6DA4AD3060787B31EABA5D487A53150738C7E802732D4B23AD08E6
4CD0EA508DB893617833CB20DED4914D53B8EFF347467DF545E945F3E231D1BB
01D998B713822F634A96C5D1923710DB4B98B063FA07A269265A2B40B199BFA8
F44F319EC5C62B4FAA0D64D5954F0FED59AA62DA45C950FB2A40CF453081573D
E75D641771BC02622472056EEE22D6EDD5DAB7E6B675BA7070975626555CED4B
D52A3AB7C9EDB34BD90F3004562EBEE2FA0C2CC64AEFBEB3FC11638B873802BB
3D443CC998B7BFC4F3EFC6697DC53A007D5CBBC185B2EB1E06743DDB7BCD5CAF
B2F4FE7F99D1340DDBAF3572DB318770F4EF1F16B899F67865C29A9A3777EC16
5701F97ECF7C5972493587E013B119B5D98155F5F4898DBEC165B8CE312943B7
03743C02DB010EF32DE8AFFB2496B4496C207262119E30EB552DF2FDF30FD421
E60B05B105EBEB7AFA5F5349EA18A46422129CF44FF54100C80182280EE65C55
CF2C197D846CC0714E5EFFEF3409254431E35B44A1A196AA4B0CC97463939014
EBAFDA3194EF7515C19EE6252416F34452DAAA314C3979531194ACCD85A22F68
40CD43A9A873E99BF26EA05CBC51647CFF73C1E5931B7D738B10F304E9175289
9F9A3C1AA557285C883AE65E5F18BEEFD51455661E67BEC675BB4B5754D6AD1A
558A847E93232C034664E2C43DF499BE3810C38A4C513DC09A62F2A89E84964B
2B68602D92E9EFF00404DBAB892A925B3BA29EF6811BA54DBC158618BF04C375
EA3CB29A83284D3F6E0192DD8E788CEED141266BBFC3A410E571ED2FB13FB2FE
1EFFCBC719BDC2448BBFC520C3A5ADFB90C37D73638049850AD019D2BFC45ADB
A04633AB88ADBC0D35153C336C37E21E4AB23E0C092D8749B9931E0D3A054553
8ACD1141BF61925F885859B528FF99325959FC9838DCF38DEDBE1EEAB9F78D6A
AFDDB5022F7BAC9750017BBB58952CF0F5D4323AF6BB10427E8B559E4B23883C
BE78133A558079225EA73A3F83EA001C76B681675F5E4400D758C423D376E2C6
6DC02056377F0CF94C53FB691309C35E6977332CCC6E555AD93625C5D2D72093
15F9E358DC4BEB66160A8FA45141F26A830558CD47D3C668D629FD1923CC3179
61CDC170010F59376FB1AEB72D08E929E1630A7750DE134A8C64AE4E133DC1A8
FCCF41B71CF582343250BA95345003F564E9DABEAB56BC495DDF93CACEFCE5A9
5981BF8D9334CCD08D89506CACD8323BBDE8EFF318AFBA650A3F3756D6835705
FEB79025C1CA73F8E589707FB215F7E89358869631F4A535C0ED4336C1ECFC74
F3865CBD9DF7F00FBE521E7C994D1D49ECEC8ACD83D9DC1A32DA0DBBDD82BB0B
CBDA4B8FD30EBFD8E947926A7AD4A39C3E3A13AB9B1E248D02EA353EA834E1F8
6079F3BBC478D2E3CB58637A6D15736C339C5BFB43AF47577453FF94AE654DBA
C3134C59FAE8DB8EFA707B43D3EBA7D9183C5C6AE77325870A079CF9D096F0A1
4D9E002D47BECA59FF2D252B82BE243B2F59829DC3DC69FEAADC70F8D27F2C2A
8890760C34ED84FDA744D6ADF41E9586B44F3BA9829599032055B9724010E261
C16EF1A02365C9589E3A28C63E8E38D62A92755377D1274604BE610E97CDB3D7
7B63E54344F80D589438BB8AA51657E0899DBDF16C9CB1B755EC5E1B8A025449
0EB1AE1279F582DB4F67068CD2F314B4595C18B7A269186330408613A7F97897
2A6A5521E538967E51E14400CF60E50D4D344DA6306C396D61EE0167628124E3
7B614E9FD536C09F4B82022201A452ACA757DE3FFD259A2CD88293CE10EB5ABA
69DCCE0B57C28665DAE27749CCF7812E0A4C32469688DF11AD3EBAB8BD6E47B1
C3DAAB27CE660C2B354914776AA46D30DD41FAE8C9B1048D1F884A53162815E2
82F1F8B28A39687AEB89B30747378A758825ED631CC7897D81D8DB5E1BDC5FA5
472A5F702537C4EFAE92A0EC0ABD9DC217A467694AF23239F36DFEEFE9BF03AF
9D84DD2AB94847F33A3AB3757D28BB334D471A4D7A6449D75188F3F600D5FE70
576EA427E68BD958844F545060C666801C182AF99D4A8A3DEAE6FC365C968FA7
D88916E879A232B79539667BC689CB2862448FD6C0AF612CB8A2CACE0B6688CD
BD0567637ED41EAC195148EF85AE8B996ED2477421F6A82CA1E71C3E83AE4031
49E46F78BB6AC81DE809BFBCF8A569CFE3C5BBC1D88A4CBEFE5BD31C5B14B003
F38EA1D7463ED69BFD4837DE78EEB14A276935114FB4EF7EFD6D347577578F3D
711D7D6172428599B6EDBADB538FB9C678D5116F10CB2546241C5CEE426ABD0D
CB938264C58467A8B505B8590C5B69C41A8153B629608C7B147D1A561C7852DD
6D7ECB5B7E091D1B11EFF73F0B5E7A5748C8AFB5574DA84396872F925598158F
2E622588B3F477531712CA5420818C1DBDA0F2689E835B3561E12C8C6ED22B46
9D20D1D582A35856479B04CB4818209C3DEF1176C9D11C560FEBDD04F98B5CD9
A10F5407E9C9399D9DCEC1F7752B33616605D8BDB4DA819404CF556E37AFFE1C
FD4672A06DA6EE8B8FBB54F752EC93F5C403C5A91AE20F1A22BBBC1B1166547B
306AED0CAB101F8D4793C4204D7D421367224D757CECF55303D5A4663A76F0F4
4232B4628BBCBE1DABC0F88441D578E783E412E631C747480C8C7584A2043B92
60AC20E9B1FCCDC1487F1A99A59534EB6B30A28E005C374924DA57F0540CD58F
99446BE8944200571DC0BA51EF9EE46093329090DC59354FBA9F236B55542ECE
174FAE1FC098E501968631735EB5657CFDF51AD28EA488D1ED74D515766E53D5
3A3D170218D11C57D992B18FA281C6953833F37BA2E06F736A2577D1F24EEE18
4C8FA217B1E22CE08B2176D486725C8AEFB6DE773694A6CC1361E8A89E34E2F5
00E5678B5902DBFFDBFF5B71E1041E49B45D34173EC3157374BD83112C920C27
726380FBD329D29ADDF290883487CA328CF46986E143A620190406409E997AD5
336173B74330020640D524EFCC75626861C86A276802F9B5A246B9FACD0EF080
3CD83F920295CC815357A3518B5B7B994B4210C7FA210853B57CA6B10AE2BC7F
546A2EEA2E5002D7CC4520D0632C12606449ACD326A76B011D9FDD66C24C5347
A9AE1ED8DB87C535EBB201D3A1D2234CF839873494DD1198C927B73AAE3316B3
9F4DCED3B3BDDB531FC3E360EF94F705A262584626946DE012345B1033C7A1FC
619435B7E20FB9BB351278324234290489BDDD5CB8D702476A943F4FC626B2CD
5E80C7AB3BCD9188F1E36B75415CB7BF8972A022EC9A4D21CBF5516695CC2F5D
A0FE314AC38244C2625AB14F5CF73CFF589EDCD0457949F6193F49C9B47D6730
F9DF726F57C7D356C3FAAC4243C73FF9AA99FDE9B9358C7C78CE7B4EF40AE1A5
9F8803E5939BF23D50EC5BEE2FB90CBF42C31CD65564134FCACDD080DC7A3552
7CE030A6BA7DF6666C2F825406197CD6F177F606A7A9C78E6B4AEBA7F60045C6
2D3DA938D09E50A3E30F674B712A72FA61E4D7C41B245C81CE27535963ABE36C
C2C0C7204BF83B4F7349ECC5BFEEBEE0F01DC33160B2617450B1B61F32572C49
46A32BADCDAAD1FCF46E7977789B19EE83C5BC35BFC48D8CD565397881506675
B088B2B12B3DD933BD1E98CF0B949FF53A19CBB9CF685DA2C6FF9BCEDAC97B45
2B3DC1FC2879967F31CA9D0B9090BFC3F6C8EE2F7D839DB051A9725281E4AC4B
5ED7D2565B25CD13CD5083DB3CDB78AED53F98169A6D29A73C73EDF02D397E86
EB5F3C67F37D3BCAAD9D67B3CBC4B1233936CD7E585EB84CF28869ED94D35CDE
5CEF08459664F3BD235FD1F5601DABF446413DA27AAFD876E1D5EB116AD43834
E9021BF1DE3F85A4056E3C68D7B5F61318B0BEDF3633E21565943EFABF714168
AB9EDB970723CD9DBB08CE4B28C0E6F0FFF2647F18E3C3615CA7AF845DEB226D
F86483BA9A52135C3A2E737A9DC43C228782BC17554B290734AF2F7A5ED0C0A9
F051084E452C075130628DA275FD4F4A71C20FEE72EEC62B03337F0CA339511B
1EFC6AB5E1DDD1C7FF2496E89EF760DEA7211DDE6131CB50BA56163C6FEAA252
28D7B6683B6B56C8B8EF229E16DE8D008A4CCCBC317B47BE42354627EB465D1B
B8D86F09568FD192E619ABD8AB6B84FEA4A56950E3D3A581834AC67C80683875
A5A31AE2966918EE817F24045C4D2D4F7AFE8981B53F6D84C530D25FB7980DD6
E8B5A1C11402138F3DCB54A3624AADFFC21A7377FC4353EBB08AE39BC8B715A5
41515BA68D3264DF633E534B36588A4234FC70CC583D630C563D9C33FCE5BF72
27F02061A889240B2E196C3450BBDA9D018F6210E7BA3BF7313B22F08E3A8EF4
616E1DEC7474C77A194EB2B6BAEE3ACD646C1B9E0113A1C09295667F372F2176
DB8ED8FB5D968E8B8C8365DFE7896681C36A50CAA1C636BCEFAB1F635AD4656A
8411543FD8B3DB6B7ACB32CA6E48E32785F06F1773BAEB6FC8CD2EAC6F0799C9
03D18C60BBA0D879118BE4F2D2F5B4D6D5A90B188505175088F744CE04F18BBC
35AFB2BDE1E5431BEC51670EF8463D3A70CEFB2AF703CB1D43978B1B06A7EFCF
02E080AA9FD1EB28531D0D2B7C875B9ABBB7868CEA11D94D813F4D3C0B6E5655
214FF67D4FE9FE3CE74B4C6845E3E6B816B652FA4AC64669BC335BE2E08F9FAE
425761645891C62E6CFD349593E8D1217766C3C0D7EE148C9CA55C4F303FB72E
2775857EDEBD007A55BA5080DF7D40AA792E117C55B77CAC154BB6214E66744E
1EA1666E991007D323F44C5A48BA7CAB147890FEE462D586D2298E6DB6137D5E
A3761048D41BF8E781D1C617F53A74E2D3C6B4AACE4B0A794D061C547E8F1798
A64F9917FF908D97D693786FFB9BD8BF8D23D9CF65C4D61CCEAF43758D9ED918
E3DDE830AE5FF2FD1A26930E14FADD837552972E4698B9A7043AEFBC3C263A0D
E6080975E31FD7764794C8B36D54775E675EEAF84F33556BC4EAB9095EBA8072
E3538206DCA429274A3477EA4277048AA52C38D5977C6D296BC777F10054AA47
5A156096793EF104B020A30ECD347E1717AA5D4CB03B26C4A34300BFE961EAA5
204F51014203021E481DF4FC81BB0EDC41DFBEE69E3ADEE02FB01B6A5F8ADB04
4A820D972D92E62A7F1205F737B54F6215442EE5B8B29757D6AF83BA5FDA7428
CC2FE9E15A96C8FA68DE39A4C774D5443843F1A6D6B49B359920AD6B79DE7867
73EA721D7EAC88D3840A5857F8302CB8DE84D2B12927331CEA89E60AEB5BC38A
0D0CA96A511277328B7AD72AF935B63DF06C046670BF3272A4D0BE62811BBE50
8DC0A95F7F62CEB74AAB78797EB9381948B2E1E9DAB2CE7AF6787E1D8125409C
3FA734449C3B34DADF947075BE99F21CE386D703C65135BAAA46A20DEA29E3B8
C70568BE5B2D913328D2CB96CF2171FDE3F51DCAB6F67C52B7287911D3BEECF2
CB5C7C49D40D8F7CF28DC0960B055900D326C397E18D4175AC6BE1B3456541FE
B1FAEA78347962578010A84F987724653A6EBA1F30D227A123811D47A6A839BB
87F2A5E50887AA1B0D3E5ACEB5EDAEA605AF5FD21822404A3CEFB3AD50732A73
133F621717A771A7A61B450177BFA16A5F3EF9A92803843937A375FC806FDB26
AFAB3DD440DEB65C13BF0EC7D7D51982FCE45C15186244DAAAE48BC58438C618
3E0E26CBB55C1CFB942952C5F2D227B7A94085C657D1C6E7C8EA09078F78DACE
5A54C0701E385140447CB399037B4A1C57E1B23131263F844B18EA91B95602F4
65D1AD4A70C20C0E0B5A2CE1E2C033D0CB43E950E846F04FB37FDD3E11B22CBC
403257B11B4C90AD859FE1CEA28185BFB2BFECD6B74C353103969ACDBE8E8271
BA5A9A2831669C086A3590309D998BD15ECD14388C7164E96AF3E71BE046AC14
5BE61D1F70DA0DDD345E2C115CAFA68D28538C4D2A07F2F83A8E21BF92F7731B
8B087C0C1D51C663DBA72B2A6879C6F55B644838666C7B0A7B10F10DA7017B72
F57DC4971A485AF8047AE9249B2FC9743322506B1BBE7BC8CB78B21AD0FCFC25
BD95B3F8C1A49E900D441635184524E2C51E72C98545D635D327775EC86682E5
ED5A50C4FD908EF366955FB75F60ADD7C8BCCD30CF4503A25C97F1D066C4FE03
966368C9556F3F88B809C282A76AD6F3347B27755A5F9F23AB775EF86375D6BB
A2CE1180857992FE8722AFFAB74FE7F36ED2F1EACB243DDB6C5673A5BD6D0F4E
8199C82D80E83E0BC1242EF89D7602F38FCD0A3C36F5D90E217C6EC024BBCBDD
A2519088F3823665B10806DB0012B1230F54DCD8AA3CCE6DC74199B5AC793F71
77BD0B69D856CB17517DF95D8D5E51D994BACE39AC902E2005C56995F8027972
5720B9AD79FA4B7452B2C7D408B807D90F876A61EE0592365D4A01DC96667E28
96098DC756E3760294E67F166EE0323CA9B48F611CF40B5383721506C306102F
11D1147C860CD6F89370958884EE230983264C87890C9DA4E53930BBDB54CA2A
EF866BDC207FB9D6C60B234F77CE6C6B2AC1A3E7DEC936D545E9C61519A4EC10
8B439C71C6BE51A9C94D9CF8F08C6EAF9956FE2FF9AD54E05F9811643264282F
CC0CD09617237F5DDD8FEA96584B0428E367EC94AC69C92E942696B50AC2E9CC
AB8D802B28E97E3B1E097CB13153378D85500BB3E54401A90C00215EC34D0BDA
6B5DBB7EF41104127AC740E8F8BE18E2D6CEC336657782FC5D4BAE96353E2A05
960C9FB740662F386BF7342CD03BC49A6759C877321D70FBC7D43214AD67DBD0
7968732B94C64EBB700C7A01863D4DBCDBB137D712779C8ACE51DDE1FDD856FA
E2C86A1A034460819412F9A6A7431DF5AF888E3C414F73321DC5FF5E0E70CEE0
AAB8449EFD258C8DAA3A6A5732A7CB0A03B66E4C18720A9F9D707C9D341698A7
5314282E47707388721748CE9E20AE49D3FE7B47F034299F05E78BE4DBF52D66
C98F61779F5CF800B8BB49261F5BF709FC5DD04B04D5B088B31A0FEBBD75EFCB
C76F9AE5E10940A36785DE1C4A4896F091965DAFAAFEE8AB73E68516B5714AE9
0749F36BDBDFC5AAAE4AA18B106C43E65C93925D9CB8B75F8ED05E9A3E502F61
0A23D46F53870025DD58E052CA432580E70351EAE6DF43B8D0DFFAED63130FCD
F172B81135980DC44C52914F040EA59ABBA7AAF1FDCC26E18DCFE015F0FD74C9
5042B4E88B99BF90C760D537A5F601A5C3B01237449E390AE607F3790491D6FB
BD58617B4FAA8DB8D741E21EFE2B0B8A550B4264FBEB14FF75816A9556553193
E71DB3D4B0D22DFA53E1F5C1162900B5F1EF5CD03D1CBDE299B90BC0E2B108C9
6B16F9E60D3EBEFB8290C50757DD30639113DA11A98FB90364F008A13B111057
0243E025D14171FA920BEDF8462A59235F808BFBFEEEBBBCCBF5F409DFF33F62
5082A8ACB47DEF8DC04CDA49ABF2E3276FE9CBEDE5ACDEAEE539913CDAC5ABBF
5AC1AE7DBE9E3E9D166FE9AF64E93A768C43380036EC60531395D06F5F74ACFA
135C43B80FC9166D174149C257339ED30EF7CCF612AF9E67F29664007A197244
1590EB25F1BCA6A232F44B216B0A7C6B898EEEEA2EAE31DBAA3430582EA1F72C
6B470701C381E335C2364CFCEBACDD20CC91FBA0BC1A97A19D95E5289088735F
216AC14478DB996EEA57D014840F706AABDAC4575473998758CB8376824C069D
D6AA15B6DD86726F1107016FD88A03A679E33BACE568A131AFC767732BC332AF
54087065083A6524E2035A359DAEC8583B1FB0BC61C7C88FEC80FD603A27B1EB
9868937BDF57AF35408BC19004A3B8C331743EC7B423DBE878BCB669135E586D
85A70DD819842B5B970CC74AE8A08E28A3804934FFA3EF4A16931B6B46ECC527
89C75F7900EBE4A8801BBF34D10B16271C50990D0331B2DEBFA31B50103F6332
290E522C15C7428ECA723339562A07092ADCA96F853077AEF7EFBFC68DEFDB32
6C4323F499565020467A2F2E305D6C518ACF50A7743894CE9B9F43EEFD1FCCF9
1E1D1863ACA97BB3D5D11211DE4271273CF39110B40FEEF6B961452F14E5F533
045AAB661615810AF7ED7C6593BEDB64F65C63D372701994E0CECE14F76A594D
3F32391C040298C4B93FC0A77CD7BBF2244E10185F6D79C4D91D269C6E4A2F65
B0B9BEE40DA110ADA3FF7F79157204E37A4CBBCB1EC4D350716866C7406275A3
206C0B981EB6DC945854759D6D70F99CDA479A34E1B75657B4EF33A5A3A36462
826E84221BDF074597DE8540132448D7810B923B7B93F52AEB5D751B90549E59
B06AC529DA1F868CC63ED96EF6CF5119D8BDC4A139B68C1936059511BE83E221
75FD33DE7F72853149D26442237EE2121C14F116A1114838B333EF11A92EA549
0FB3CC3086401733F50F636A4C7426584812DEA1DBECD38E11AEA8AE17B02D3D
65057422BD311717E4C287B40161092DB8C5BFD39EF98F57FD30FD13579494E5
C08F592D8C939362D7875D4582E0A9B6D6504FB3AC45897B14C5DDC67F6C2037
E455BF0095264043E6D5CECC6A18A4CDD72A7E46709074225CDA47DD79881E0A
488BF3AE78C04B549FA1A623A71A8C8C76D2502BDB72A6A4536542BD5BC0BB3E
BCE2E7C56E180C73756CCDAEA90BDA269F0EF8128B32C7F3555B2CCD2A3970A8
BCAA09C1FD35F4DD33A74E38C401710919FBA7278553C3E30D3F9BFD89DD4588
EC190F4AE57854D427560208730199ED919E55257B1E0D8092C7E12F9ABF4E0D
DC23EA7A9F33A5D87B7882FD11720A14BC1BD9FFDB9365C6C3BBD518E5827F34
C20BDB05838E5A1236447A39D1009BC19B8D34151710E85532631D182973C30B
0085C6AEA060474B0B9C993BBAF0D90C87DF9CD2869CA086DDBE5411F304316B
114A1AA740567FF8D7CDC5D6220F8F3B834D7CF3D3CD7E935AA9D15EB6A459A4
C6C324F8CBEFDC81CEFE1E7EF4100132819EB6177E6DF152059FC54715439CB3
65500795122379B1581BBC75D04161232A95ED2B05C01B32EF1CAD05AB36A40A
0F822C7BBB44B4956AFF8512D795E77ACBDE9908C3FD76A2BF122D21572E18F9
A47F8CDF87E6666CB5E72F5BE5CEDEBB7E6882D804A6EEA79B7034C1128484AD
B7FA41246CE971B3F412AD4EC3D83D0BF1564C00C405693F2836F11E41C51573
5F1718E0BB5606C2C61197C0E5F91567A83487DB5308191FFB83BF0B26924A08
FC2F4C014C136F3FA76FE4BDD1BECB4F085845D39491FEB49ACAAB7A49CC34F4
A6767064EA4E5F469E48F5AD2885076AFE17EC2E37237A777F33D08DDDDDA07E
B0380EB95329B5ED24B5967EA0E4C588F40F4683C2295FC0C58D564A2A4C4576
010F59376FB1AEB72D08E929E1630A7750DE13482961D33F22F7133792FA609E
8620A65F4AAA7A8E15FCAC0377B9E3B6FCB6764227AACBD15214654422D7C880
7D22C9ADB05F3DD8F33E7DD74DE7D1F90983195F4971E32039ABD4FFCC2B756E
17AB503FDE0C3C995E7B4F93030CECCA59FA67A4D1A70A60DBB15E19968D6616
2AB8245B37EB78654FA8C6FAE137ABB5D45FE0BFEE3E3D4ADBED2EA7CF92B113
F2C5AB1C646850E95A9D9EA5D915E869C41A8F2B8CA0CF190BB8B893C1C1CF3F
BFF392E9577179F9C3C1353B559859C6B14B1960E18DAED68293C1BBBFDEDC9E
199CCB170BB7DC5A3B3CE69F746B0E42C19583F5A9962D953AF02C2FD19225D2
5382E07A0334F378EC6FFFA4998E879EAA280D8C528B77C22B572651CBC2DDA2
DC5573FF5275FE9BFE034BA22E904A0ADB04452BF5BA8160DABC41DA079DA4A7
51DF9A6109796D1CA2705924E9FF4B42159E5978724D0874215B49AC3C18EAE7
D47892830AC5E06EFC65D5751976B74A10D016429FF34CAE8A227CAB65E8F6DA
FF1885F4D4AC55BFB5312963A0252C707869C5FD40D940C1D1F972533E689EA2
E67555B93B0DE7DBA0C21520E0D199DD6301FC52F74F19AD6907126E2ACF3642
047B52D444B4407348574CCF9343ADDAF843523477DE4FB89126D9E49A374736
ACF2B4EE73B7B7AD9AB673C87D64F3285BB46264E04DB26128FBD12E7E2B7A4F
C93B33DB7F3205F9DEBE743918947336D60867C6C3727C392573F54297D889B3
30B5AE125501337D3D039A2346CF0EB3240AC4E6F6B4FF68E3B9B23F91F6E0E0
E8C6628BBC315BD5E48F1C63688BBD2EEB2E182D0FC07B9179FDABCDE8547E19
81B62D0F9E5D77C672533BABCBDC4BB8A2775FCC41B06172198B32F91D85B522
370A0E303F0B640A294A0EB9ED9E66709402E3DF23E6D151E5A26336E862A34F
09ECB1455633943766780F749B4F38ACDF219C60DF88C3076FFE1A79B26CC094
27762E6341D890FCE2268291DFC33F7A5B0E360136BAE962B35B9C73F79B9360
A3E82DC7C244A4342844866164B6F93E3C3F37B15D015E5E5959D0FCFE16A094
65FF296EE2014A7256A8D5EBD64631EAB3053BFCF354C08CC6A7890D880321DB
04EF83A20DD561FFF7E3669A83E512DE8AAE9E7E671DC58DF4B209DA703098BC
E77E3ACAACF3F9279200B0FE5416D16077621C987AC23E3B44C447ABCC47BBE8
279638A09948DD3E09CA14774200FE9C68BC47CA74C1DFA09212973BF34EF1C6
A3D41C97C214B12A1119161B0C9702E175C7B1BF1431C7FCD00A8FE46A8E8C0D
9D203F1B0C35569768A77E87DC79A5B95DB5F2BD66726A54ED682ED7038A1363
DB29BB3C3FAD6EB5F50979EFFDB403E74C9EC56991A61CF48CFC950C9A5CACCB
E3AE9A65D49FA4372EA98BE8A9B5AF831A3C2DDE10D9A91C58468214A4AA87D2
D24B15765D88BA351F5E662F1B8FB106C8CD429B75D23270A1CB75D780D8A4DE
243A4D5F0EB371297EC2710E3F20C119B542E9B915B7FCC826390B24F5D28EA3
712F1F2BC1F43411A2D0094DC15C509C19815826E60DFD2EF7D19384A5384AE1
30C2CFFCBCB2573EF279738DDF8AED1818962EA17E4096CB9423EB16A0EF4F04
C28FDD95B35FFCA7365D7C137170F9A881BD26D38BCBF23B4C7ABF28A4DC7E18
329EA5040AE70D6B22D7BC636EABEEB1B34FD6350AE24068B586C6791887E1DA
8271BD19CCE2B9E6A0CFB99146DD6350238216AD0B1AAEF2FE10222576DE1D3A
14DFDCA927A7BD2F7F821DCF4C890589B3F8AD6CE3392D6EE0B98EF8CC0C9177
E76D662F34C0D7D3CF693412EF777AF59F8DE89DD1E019DD3932B6384E55FCEA
6ED7081F2B1581FF8E2E5D4D979C3C840CF586AFA890935365041C6D094771AC
161E30178F26CA737FA1492D6FCAD229A4C295D31D951E76EE24BC9C81338A11
7FA76BAA9BD3C79EC8FD630F03DE2BA917E328ECC78E012C34339D66EB8E12D5
6E2E22072C769B611B01F10D5C72FE63BD785A34B78BAB515E932A2E94046B9E
EBAD367847F6D35E61D271FABC43E8ABE88E6BB85AAA3DBEF8671AACC3F5A2A7
EE82BBE5A34E2DD69EE271654E068F0B85D797E5C1E5FB3EBE07CB1E6B77A9A1
749B09B4D86FD3ECAB1046DA2B128524012FD279D36EADDCDF5B80344D2F92CE
A53797165DB6D46B5AB7E20B916D387A7B30E5C0151E354118C1F51DA5FAD0D8
F409252E87224EF77312DAF4D8A44C7F82F5E959095F3F1EB9A2DC0C2955B98B
FDFE2FF03F1D2F8EF1B09C08CB24154376BAA459A627BE7ABA3448BDB9544AEF
3097218799DFCCCAEB5961E8EB0946DAE1E42E5DD6EBBDE1A975643CE489A4E0
E57BBD8AB10CFA10513D693302B2FFD5A09ED3BBB481D05C69088A0EA3924AA3
1D202EFA2ED22B8DB7F9DE50E4E428FD80F5712EC507A3BA71D96FA47B5CE9CD
0B612372511CD9F69D8A6039A4B65D1A3587E7EB22B54DAA951B4DC882EA9F32
BF3E387619F5D4E9C86F6051795577E57ACE5213D96BBE4098BB478944BCEB20
E3BA77536E252F1DFA0CC90FAEC8C597253343221961B8C677F2572B511821BD
A975D87798ABDE910C42DAD491604DC468ED3BA038E717909CB6B56C62C1C0FC
E1710A8C2D01FB5AB95D269D626FC1CA2C22262D310CB473A6E55798087A2A8B
E51BA48DC68B9043740852B47DBEC72AE122EB5C32E480E03701E3FF02FABC79
A5401621672673EF3F0F636527B77AA521C155CE9AA45AFBAFD65411C68DA0E7
ACF9439C11F041A06351032597B9AFA1B3FFD80C0B064CE0129FB0E9F472B36D
31F10BC403337D9EC4B765BD8CBD7E46007C62B60CF64C71697B072DD107251E
FEEF484D5609E59E3417FED1537EDB3B980D565E0A244367B163ED05B3C423E3
96F96009F6556A865EE83420752B99A42FC1C55A3BB125798AF5345889BA2BC2
376C401B9730F08F77931D6DFA9A98C5876A213665E4CFB0C773BE7CAE466A29
CE234F7D09BE4F16A1D4F6D64F6BE292CDE0F8B23E651073C03151A80A54B3AC
7E6E6C436797AC95371B70D71E5ADF19EA269A908D084051C0C4E8AF9D810146
D1D176C43319F9F61AA5362AA876F9CAB88C3FB788C543D173B22CA22E663A1D
34AD438F283F0440C69C255FF0418579CF11336C5D871FE2C046DFE19D3CDDCE
027F1E0911D1D32CF1D8934B9F13211EBB8F9771B199CC5797687C7632A18975
88187C69621DE119BFF593DFF0533F31A57D1EC74A1ADAAB603F5332E0CF05C7
54FDB478E6E7AD38422AFAD3AF4AC018EF045138817651E1CC86E8B493367C1B
1A6791A30E71A9B679CAA918D680FFBCA65C69C851FBDA2171871C21C2541984
B98D3C0212ADE3E253C415080F1D9092F1ABF92D00808F8CF872D3E200A018C7
8BE242239BB2C3A8C196293347ED9124081E264A34849129B66933923BA97E49
48A6EAAA6AC1C3C44C66770953886A0007DF86E88A5394710C6F3C3A0CFFF461
54C40883FDDBE023D620CEE9DFE061608A315473AD64496A84BF17140E9E7C3C
6912EB43343875CF28270D6EF682312C0884582586E6E8AEA4810B23AF7CFC9F
68640B19BF9FC1D673A169130432FBE6BAB59B4B423BF38077DEFA496686BA87
B259E3DC4FF2094B444A1AF8AB50B2DA360DE194BF15D82A0A231C88E2FCC52A
E1144C152F6450BED4CE71C01748AFD3280BCC38F9FE2C343688ABC6BA7EFFC8
8CB9CE93AE8EC90FA1C0DFDF8382C4D4B1787B408387FB2738A562AA89E10E9B
B62F8D74ED0B844DA8EEF44637796F579DD5594F8CDE206AB6F1BED21B7C91B0
FA0BCB23C671A919EB41D7E8BC0B7D122083D52CDBD5256E0B91415F871ECE63
ADFC0835D3B40242AD7D07C2EF590B91DF077A265D4F6967941817EAF1C34750
E0A6B152531430DA39D06B0AE9A824DA7173DA3577FCF8B54065881016DAF9F7
8BC8ACE63A06E159043A8A7B1D3E459CAADB8F0C59FAA9AFCAAF602D9C321A0B
C7A9E1E14183893A45FA12995E7683EF432D93B4B2ECEE06788759455B16F77D
15137D3B184D56F3411716317A6EB7860BF299A2033493844EBEBE57BB0AD69C
E10461A14AFACBA8E81D271B54D5238D80A3A9950A09C6F9982F2A2D6A95266D
D6319BD88BA70782B01F071E4035597E8B51095F80848561F6AEDF33EB647AC6
056E17BF974C22B903DEC00613732F4E9AEE142484EAD198AA27BBF42EC9AE9E
DD128487D8518F86D53688971A3C84439A4FF0FD71542E9E740CAA18D07B4C14
BAA0FCD33A038BDFC51562A84428849BF3DC7A3AB12370B04CD9D929CC6EA8BD
9389494336DAA2CCEA860827E5B0FACD4CAF41D3903C9C9399F45995F3EEE7F2
7D449DB54EDC9920518A20C5ACA63514752A873B5EB6DC81FB6381D8EA71DE49
FF6D5A7E4F39119B4647ED5CF167FC470B688D7FBF324BFD3B6AA04DB6FF37BE
BA1EAC81DD5C91B731F89EA089B04AB7063E95A9AD3CD33B3CACF393F39AEA11
1C685598D9072F989BD680E46F13835259F07301A00EA4F773D4DE499B78E9C0
8D0BD3F9844EE503E77FB659219D853706E715136A323071211E4F479B715E05
4E17E064A3ABAC52E7B940B600D88C37F8B397E431C7DD1BB7CBD96F1E3CF5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 82 /R put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA852
EABAEAAADE1EFD16DA13E367A6FD05F6C5D61A321B185BD0D596400C8422C933
BF332800160813A68AFB7152EDE15009404E0B3A1A6C53FC6B2E00D9C7D7C0A0
0996CA2E86EBC4DE1B42C8D7190D1A6D2A351329AD2BA3645A8D4AB8B1559EEF
409E4CC0E016AD1FEFACF4BF01A08DA00BC8CF518C80B1DB41E503655D3E1EDB
E750593252ED64EBDDD62C2F1066C73F2BAB7B5632CDB584AA0192C5ADB2E108
05B1ABA10A396208F49D4A5309AF4760D6EA6BA44F04814B19C1750A3ADE2297
D79DF9712EE0ABBF156A53E7E865DF30637AE0D9EE28D43E638954C87A20F707
CB29DC6D485EE81FCE2489060E82FFFF543E2701320B592F7EF9AF00C4F2F12A
376EAB4A94F46B267ECDB89A932CAB84C704910B21B0C8FE22CC936FA2BCCD90
AAA2975B26589994BB2778604978D6F4FBD78D5A0EF625E6F052C9E61B1451D0
4F30899CA110EEA3637D0104ABDD4DF2CEEAEB6C939595654AA372122C3C47F6
49FD075FE30DB24EBD1C35EF855797A9B9EA8A55B6C003AB7DAB9B438A8C668F
6C29362618133E0E20F13F9438B11625AD4A145F9B8222D5A375BCD877E0260A
25AD6747CF463EFBC3E07E8DDCFD4E4FC2F4F04F812BB9767DD9217F571C975D
91DD073B1365D395064797F67CF2DD95D2D18B843C37C9D62F6EC39961D853A3
508EDF05346F1B0B98B4FF6012592344578DAB90F463E037EEBD6D1847D7E35E
182BDAAE6618BF8AE4BE383BACC4A32F8F13A2753174AF6F39DC0B9C1FC5EFBA
47DE0D3DBC88EF1EFC81120AF06D19A904A330BDBAFD57B53298F1993ABB5143
DC63BB5EB1302B81DEA62729B5D219D0D57549135BD225A3AAE36B2A404F1342
04C349E7CE1D4844253237EB276AAB097A9461371AEB01D67A0D311BAAF6EE87
4AFDFD8378EEB92443B3979D0A7EA178A2B8FB64C2A8C4288F442A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE505B8A69335E25F98573BFAC64A02542D3B835ABC68EE4F
0A1436DD48E963348F6F5650666F6BFF72D385A5FB67448213B032991B4970C5
79925CEFA92DDED5BE33EEE8275EEE83829329E11E4EB1E2E16669B21C3D36F1
FCA9535233B0BB982F75ACF33109F8AE7ADE4954D0B1E1802008B39E90FD6AD3
2DFBD4E8C89A9FA5772BD7C4CEA7C8F8272B4C34FD26058AA9E35E6DE5D8F2B1
B78BB131F06294B45300705B786BC0D0653933C657D716DCDE61AEAC6DBB9F5F
26C309EC6AA6E4BDF86680F4004C27DB20FEF95B0BE467B5B7F436B45DA8033A
3F755FBB8515426BB432CB6210B93F60C98D1DBC60E48CCFD9E1AC3BDDF3FB69
A81F2D36111B48751795F38F735C17DF38AD4FDD0C5FFB68595C9DA26DF72CCE
2D9DE1746CD44B3EBA803DD8B2F2E32BA01DF06CE7D42C9212B2B01EE474FC6E
4B7F47342D876423543604DDC5C2895A1C304D5FD05859F9D22F04286271B0B0
47E7337B66EB39E4F675D2E9820162D471EF229009DB3D390DA87529CA619E31
43BA13FC942C261D738A72D9EDF590013F0B471586972004FF6B562AAAFE1CE7
44898D4DC5D039B021155CBAF5267A1B080E257B4DB8D31D4F35327896718E64
5187E79CDD93B5E81F859A41E94A08F2EBED23BCB5EDA5480EACA609E4C5EE4A
88921D8ABDDC55A6AC76E7D03FFA2A1F4EC1E8E2EF041492ADB51EC95DF8E053
F2DBB854C4BF36A38EA3ED3F80BAD4BEEB39C3C16C6C9C2CE8EC07EF3C2E075A
2DF034C738EFD85CDBC0700EDCD7961E78694EA2F687FE6509173486DFD29E66
BADB8DF88BDDF89A2AB03992BDE555ED1D45DFA3B1458EA90D682656A0954926
D5EF93EFE5A37AEF8E4A949E991B8D603D0A387D06E55AAD409B239F1D951AA8
EFF50530221CC58CBAACA6F91607A4087C0331161C1DB4DD5AD6A8A4923F0287
483C2FCE26FC199BADBBCC0D9D193C3DCCACFD7036E2C5B7BF670E747FB3ABDB
D904B66EEC60CED2867442F5FE4456B66B280866A0E6E912344837868A257173
ED0D30EB6740DEAF4B0DBC9D59A559B2BDBAC48EAA0CF06C0E921EA8F29D3668
1AA6A43DC0E8ADA9A5995AF2F2288C9C9D055D6710F4B941C466CED65FA2F0F3
2DD032B85D6FCA5A8F428036CA56E9BC06BC8E9B3B2434876870CAAEE935599C
C49E5107C94D6D82530CFC3DF464F5CD2B4DBD8A9264B9BD3480D94EFD5105EE
20AE8BF4225C6161A1990AB2DD11ED63B0B71F8F397A34C42CB977A319459127
75A68E90C4E1CAC543E20614AA829A4BFAC52CA158173BBA763B6DAEDD53F4AF
7FBF04E6162EC217C30BBD458B7C0326B3766A9BB8F3908CDFB33D8EDEA5C8CE
7C8AE42128C6115E613F264AEDF59318B560733AACAE558F138F47DC2CABA951
F2871262DB00EE463BD0F28E11231DA6E544394563D24D8C4F6D7E38089485EC
E6BD2CB2D3CE3B3C93F9B71E1705273D713879C66F309A83170BDBFA78F4FE5F
D72EFBDC787F6567A19BB83B5117263B5156001AE75E92DB5A5FC115CF4F76B3
C8CD3391C81714A8E6174B51262AF5BC93861F0D576918F4439552E504367B50
CB58E6CAE06A3E1CB6608704F54DC7AE73C7CDE8B6339C3F1FDAF6CBF39C4077
CE07CD2701D38AB03E22139D9D2209B4EB2331FB631B71237FDE769BF6233D21
BE049D902360FED9AC6F91D633846D56C99244C66B6234688B4E4E782E721739
04DFCAA148F9AD81EDCF6735C73E00255A0D6D0BD51057E46A2C2EFDA2C64680
087F526BC39D365A41FDD52530BF03F95F9F9501D567FE36F5BACFF6883A061F
12B35D4E78D1E9F8A0F90B191DF989D48DC30502E8D4D7433D03298CB7789897
736E0DAC2BFB2884CB7385DA5E347CE9A775A71BC4C2D4AA533E9CAE9A709DE1
BB81046B6FE50E6F987D9DE864B0C3945CC7E5B31C108D631209E44FC6688D4D
94C86F2DA8F155B7EE8BE84A59F8EE9C68B68ADB32299C784D654A179699AD70
2D425C67EC29A0C0B16FBD2D0CFCAAF27C31933CED3EB3323D94580439A4CA15
69B8E4ACA32F3763F197FD9031A48184E073B642F89C4AEEFF539F339AB2D94C
2709E08C7230CB9D1DE455563CA3ADF0B5825FCBBF2552A14DDD54BE7156E1B1
26D4AE256F345422A4A5886D5AFDB9C2A2A5DD8EC2C67CA25CF9097C5589C191
39CB4FB957C61C2B98D7821F2051EC5630FDDFEEE566D3FF7B71B3B054E1121C
E9351253984692418134B3959344A3DFBF595245F57E2AED7B218624193B8DFC
4332F2074257BA837DEA0F76C6D16EE21C506380396028414BDA79AABF63F008
CAB48539193162D98E543898154EF9392F4465D20ADE3E4BD74C1CA889CF4754
CA23D08C670C95F36959451F5400BEF4EF7A4E0CC1AF776FE9461BEB40ABC077
46BCB7278396D71297A877CB19894CC6CB5AC754653C21FB61F489EDF2FC7367
82D1ACFE02A21DFECE7AEE7FD09C74DE90BC65F004F7A66B8FD3AFCC3E0D4A9D
54201C4FA586EF7C8EA2A5056281A64EA6E6E88A34925628E42D9B2BF74FB624
4BCE8261CBED0ECB0B4073475D072C13980E8A44BA9A88156CE4ACBFBC677EFB
58BC8ABC787AC94A0A5CCFD2A1A6D4767F8F8E51FD9FB21A08AF902443B1FB76
250501ECF9240F0852751B3A793E59D8AF8D44514CC68347330701F27D19D322
E8A994F15E81B7B605357F60A18B6DA6321DA5531F8145A585C5AE164C8124B9
5D18542413D24B8261CEB7F10CBC96BC1D271E37524877D923AC28DA67D3D201
04DACB9E22CA1390DAA45590B4B898152B75112C1A5F3A1EEC908D1362073917
90C3AACCBC46DFCED1CE407A45E6FA77886A3CBE63EC64F820054B30DB4EDD93
26C849D07E802F698295CA1975BAA7103592C7F10DC11E5FFF5F1A6057A99D2D
8A9F9B65E91FEE30B4F5E693F1149F6BEA5D1B72EE97DE9E30C39436F5607103
254CEF5E50FB26D87924A555CF8DB2B33FE203593AD3D2765026914932A835BD
BDAD2E118E0CE6149EDF7B95CF1534B10F9B2A46B450F9E021FC1B96706AE27B
E26D248D301F6BFCA043E1F78874E8B400D1D26803565149479CFE98CD8F2F12
BD2FF1F8EEDC16C9A28586B212076FFD743F9D923730FE951C59BADD31693177
0EEDC1CE3CBF4A05545B974F452C6A2F647B4222B41ACA5C1F8BAEA1A318E7BC
3F1523B2CB4D1DCD48600DB63872EA40AAACC493C8EBF03682EF9188DBEADA4A
AC560B7A5B606144D63CB560845DA4F691EA900D04D7D70618A82A00BEF463B3
44824F43A612E7268100A9C2B638D6B3920DE3F062CA20F5C69B2FBFC9465096
B52AA7D0408F6CBC5E2FAFF953152EDE6B0ABBF78F1A40619056A6684320BA4F
2B4C45C1BA4DCA2C0F94BDB71213976722BA4610457FCF06571A95B707839AEB
3459B85C5A9EE068791F96464B149B8ADBA790486BDD7C0452C4E1C23BB77960
DEB6DB901392221702BF214DA2F9C94E5863EA1134702F374BE4A8A1F2130DBF
AECB3B242D69E3C30C8B5D6A6E486CDF4DFF3F373B8989298783B54D520EE378
9CB36EED97F987218796CA1C3D2A585EE7E3A1BF11847210E7A3DCE9D1A400F5
3CEA8FA4BE4871D619A9238156DF26B44A516B3B300FB1A3672841AA2EDF28DE
5A786B4B1F297D49B678B28923D0677B9C33C02D017DF6F870BD46C0066E044D
244F962887BFCA1CAEE9750ECF29CC24BCEFB9F53ABA8825C28108127C16C7F2
5BFDC272F4282FA5D2B730EFCEAD0F670302578E4ADBEF40927A34AD855D44ED
14C6DF7CC31D55C58BEA4B6B92BDA363135A7C333A4B693F0BCE3277CF67A377
DEDD1327881535E20FC9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E0861476C6BDA40AA30151943B874CFB63DE5620A7A8F2CF6EA77EC
ECDED0887B6C00B24C7A463FC10FD2C2F18D67BFF9FC9E621DB4AEBA91880FDA
C1B255D3EAB46E6243AE85845FB84DC84256134A55488B1A6B00C672C13F4D70
9C289E50F5C1D8EF063ADA63F3351D5E8B2A5BCCD284480B0930FB24143DD785
1B5539E97DAEBC0C57E6CAD4465492780B560D7A64F4AACF00DD611A0D4AA2A5
9BF972145C6A25C355CF276F00AD5F5E4EEA8D2788534B0E643A05643E8A8303
8029E832F016A7F41B9B176926F360586A5C26C99195A6646B1336FDDC2FF0E4
0D5A3A2E5B7AF64A3304B9E86E1BAFC221A8165D453AEE422EFF10547CC2E44F
566E8880D7B62B55E06213C9491954D1A8509555EDD6F3AFA775472B61C784BE
8968101A50626A429AEFCD373482B35575207D2AA2476912EE771037F8D51B80
31B5BA4FA023A643AA617DC3B38D8B3697CECC8AA4F174F5B2C1124A9CC2E373
ED1F6F3EAEBD1C8C533E943977A590361A53953D75312631D6F07794B1D85325
1462B649443CE79BEBA97AE481AD4AB1DC86D8BDB89DADA55F2D1AE640852657
EBDB5BBF685EB2A4606DE426020640D534E795EF9019F887473996793F6FC92D
A11EA37B2EE094302A297311DA3110A873E6F7DF8F113DDE6AB0E182E5162DC7
0CD52C99C5542185168CA1F712BE96EE3F15292DEE4B72E4FDC197E724033F7B
B9128F40DFF15856EC96F5C3BA6E6CD5AA138B168C23814295B0BCA199FDEBF2
CC7849276A1AAA5F1598EC7A9A573A79CCD04CF98E4C6E81DE8EFBBDD3C355E7
3E38FF48F0FC3A3DF5B4891F92369E9379CE45F6CBE7E3178917EF80132FC8FF
0C7E7C01CED707EE67D626949BAA454CCF3DD58FD7DFF7B255BB8D78045C6F33
68050136CEEAB37F705812FB77CE978619015F83689687231C03FEB091AACD0C
096AC82B79642D2FFE4556EBFEAF93D8DF03EDB28EF78ADD22E0E57234DEA576
958C20FB501C223F493D8F7C9BDE274B6BADBE3D961B2CD3256C15429148A456
405A6BDE54F5FEB46FCC87C13D02E2F401F623E1E3974C2762F0E2879BD8A999
D3EEC28B6753CF2B0A48B340D026DF7FB288B5E6B4F9091DD91C817BF209088E
5F0195D5AD0ED2304EBF9EEEB057851AB47ABD1E8493A8C0122F31EE8206ECF8
DAC32B4404B7DE25DDFDAABEF06BECBF514D77BAECD0E64C5D8E1304268CD471
916500BABF07705BBE5D212F3C26EECC368D4CCA2B5A272A01912039AE2541DA
C0CC03719E9678DC05A9E3A4823F285BE53EB96BB88965DEEBC28BF8484D8BAC
E9F2A8EC2DB98F244B65934E451F1EBC44AB5CFC1CF4A031AEB25575EDCD49CC
37DE3D092D30C06702BA2E4D4E7232EF87B013DC522236FB11996DA70B4A8421
0EFEAA58A2128CAFD874C2E9E017BDE20A01468DFF4DB502DBCCDB2A3DCD2EE1
BB74AD034D64AB4D65372EDACBBDE5F6641112A6C8531276A6AE1828E5A33234
DCB31B0E430AF9C8BCFDCAFA28CA2BBF42632202884F8E774F760D66DFBF61B8
1D7A9E5980254B54BEFCAC5C08424963C4C67FCB674CDCEF3DFE5E344A7AD521
DB0FB226AAA91B74896D09EF44D2A5DEE91A32624A19EEE1B2F7CF0FBE889C6E
8FA39D28FA7C1D12D78C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C7D5EBAADEA54784EB2F949DC6ACA56422B401
F3A783BF474B9054B8BC8BFC4E8A7C1220CCFC7792A18449B1563A4462C26B1B
DFD5E9AD6E0DC11B16C4C2D844F45E4D2B75A2C904360FCB236B33EADB000346
89651E39ECD39E1A3564133C9671B4329C478509F4DF6F8293785364A5FADABE
BFD395DBC847CFC3ACCBC9D1B30C9ABFB3BBD698EEB9576115105BA730B13E56
6F44104BD1DF95D7F1298F80536F3EBA28E9A425F2541111694F34BA48019506
EEC5BC235DE87B1FF6DBD93F01F4F3989D8141816C3FAFE7F7F8D6287C0468E3
AE99C277EC2FAB34A279106A35F92D8DA29782A1875C6C8E74B0C86C0D3A623B
748585EEEFDEC03F78EE6AA916EF44A4C7131D9EB400E09CAF55F08D65A28FCA
65062E70F4703BF9C1214AD810A3E22CBBCDCC9538BB8AA51657E0899979A1E6
8C3458B69664BDA49501A37987C8D96836C8EDC6A58776AEF1D0799F33FEC6ED
F59F573E7EE66D4E03B562DFEE4836C38AB1F2B58D683AEB91505FAF8FC46399
8811CE2124971A52A5FF779385EB4DA75892243C84AEDE652572DEE1FAD268F0
4284CEC62E2341872EAA06E9F7541E748C473676A396158E522ED0AAC7A5865A
52C5F4D31C49B716E117FFA6428294A6D756792BA310AFFA57355A1CD7B73DD5
401ED76088565DB414D597D45C6E71A3C0EE7BA99B94B170F4583BD46F631635
266FC2CA5EB9736576A2D18DA69F94561E05A266E189A3F9D0EF3AD7DF43605C
B4EF2DDC20D15317738826E365EA2E5831E662E3F99243D20A43E196EB37B5B9
678729BE3572DAE3DC844BD3047F80EF4FF32B384B76574A5049D9216272F667
546E7CCD1BF599FA98E9FC6346773531445FA23A4A39E98B34DF16898E28BDBB
4E975D99697D88EC5151E7249E71038B6FC5BF776DB24668F0F4594572EAE33C
FF7FCF883E95575A8B730A57721EE9D678A759A85F77BE29B3DC3A070FB0498D
FCF4351939AEDECA3E47EE04AD709A2E36051D710DAFB9333E14C331C9742197
95B6975266138B7C516819F07C1F01EE32CDCE87348C3BF51A2646DB93A34C60
583DA3CCDBFF4F315D1FBFA4912A5ED1744D95E2567CB1C2EFFA64B2ECAD898C
76A113B8383B904D1B2694EAFAF8467A2D59170E73A25F2D504F45CAA0E02507
034F043B65E1238AC2B9950880EF29384A5AAB483A5B9E87B17D39B03D2D1401
63BA4E40BA8E5C0A6D51ED6EBCD11B5068CACB85A904949564F64A1A197E2A98
09F715609F5F30FEE7DDAAC1C1211B5F1BA6E2D1E4A45CCCBE989F253C9C00C3
8681B7286ABD0F89BDB9C4650AEA303ACE9875612DE25916753BC8C799498EA8
0CB2062F319454FD08D8EDBAD8D74DB6E9698459E3729274AA08B9E768100D8C
8EB11C4114060FADCEFDF326E2FA25F24D7F00D3673A778B833326CE8172363B
1B4AEFDFEF230B3EDE3C87CFD96F84E221798699736211C93E48CA4465B12EA0
0AF956F97BF607D65A6C8F90CDA90EB5B896B04D0FE79DD930033C7C2AC6AC24
6E5EE2764621098A7BBF8E4801DA35056CA00B0CEED0050C709C5D5EC1DFC96C
A8BC788F1DC0606723AE7FAEA04B2F67E1B256B88AE676FDC3CD9831BE77B254
972132E57A17FA24CB75FEA6380742E8106BBFF2B4E2F28C0A80FA2CD1B7B145
0CF9149C462D21871C2B71EABAC5F95D5D01187EA7029300C9E75A27E5BC8072
ADC6E6D207D6C00DF5F2109C43785B93336E939EB40A8E211E17851797154291
5D70737B3F22C6A831A9821624A9279B672D764D2F51B2393ADC71A36AC0FF19
688AAD5B945569610079DF9E96CDE8D005FC25E59B029C05A1F252DFC48E9DD4
953A244E5AE73B98F8203B2AE0A1325C44AC6F52BDDE513987D5ED51662BDADA
DD4AF7B1DEBF5A230721E51750128367A0AA72945C94960ADDCAAA1C45DBAB3B
77DFFC0F77340CB950D0E919EE30C88DB6EA541956B904DB911D009F0B209BFD
C570A978118AC0AA3361059181C4A4577018E8150705572EA95E0C8146B860B8
E47A40077DB6A434E5A5908D6105130AE25923E7EB77C0FDF5286780C3763D98
2C1200CCA4C3C1E2E75C3F360F37CCD87F4959A84F522DEAD0690379DD5578A1
56314BC78AA750E91BA9F6E43FCF67050B2A54A7606CC3C81329015CD4140C82
0B82252D028837EDD804BD0B761B8ED1E718488DE697487AA4432468CF994F92
CBD51443ED5564F721620CCB4B6F6B55ED1D99EC4B79D2F5EDEA14B7F6073461
7E269E4E9516BDC07982DEC8AD1ED4C507F8978E8ED742F73E9BD52BF79712C5
CCFD007DB1C1B65D92484271E660F7610CF4967A07793C3BDF468C457BAC7738
923689F96FA3FA86AA4C503C7CA2D05701B310E57DF90EA99D68B8B3480E8BB1
CB3572CA7C2A2C36D3D8F28B38AE222BA56673DEAC2DFDA9F9A963532B428464
7137F51242C7BEEF2D574F2F1413B4C6BED5DB369626DB03244237C980DFECC2
33D463546CF119789E53BD8A5AA2A6206FBC132F4ABF5BB7758DAAB844865AAB
D3A1FA81EB70279BA80B98251F9119BADA1F2BA3A42EC1FDF11EC8385B3F737B
A6157B5E127B5897138683452EA8A986BD2385C65246A71EE83C2EE8757F0C49
3522A4B260C55A31AA1939D028730DF8C3A407C19851D98823AC4376B8270587
E8F37215B554669F9CA83ED2AA40A2D74F451FEACD30A472CC39ACB17AF6F492
E24663E0422B21DD2A015EAB861988EA615BF622CBFC2D1CEF22898F1639376A
8639AE53AF7301691C0425A75BAF36903C96F1DF07C5ABA40A924C43A2BFEC53
6592EA879CDE6B7972F4C158FBD600C9A961BA44F2B0A5FC7CCAC95D93BD7A2C
0C646D57D1934E148831AE7C815BDCFDCECD662966EBD8DD91A04004D2AB894E
7DCC7BD80F2E8E13073B30F1173D8003DECEF9D76FDAA33B1AA9CEDCB21C2A3B
0563B5E8602903337BF4700CC8E80950D45FA840D36C6F5E775EB81169979229
0062325BD588D00D8A6A0923C5D496ECFD6D06B9A5AFC8C8C46BCFF335C364E5
8C5D1EE8EA5563D046BD8990CA3F0B2956BD268608FE3F5B12CC39C691353609
4753AA5FE332F659D0D19E4DF4B96361D35B0C05E68E1C0C20518533DA77B349
5C3417C5B47A34669D01AB55C1F205BF58BB378428AF52D3891E4B95714559BC
69D21AC4F1156404AA533533A8B0699160886FCA15CD098A1B0611374A7A0A02
E4EB602135ED0CB1CADA541EA9D47C168251145C17626EE61BDC1797A53326E3
28A8F446C41510A842D5DFFA8223B037DB8897FCF8347448BE6E53709C51019E
B4FED06363182AE28530230CDE952ACF0B77A4AE35ED74B5E419A5779F2C16AA
C5E5F9B9A5D0D40021B4D64A7FB5914F07FCE84DEAD08ADBFAD028161A01E97B
0A9DFDF088978B92B692CCF04A36225FA99B283242D511C332222FCCFECD388F
C7C1256916C49537FFC33E9E616DDC025B272C5A8208CE1CAFDAD8FBB5062803
C344D0CC32979A1EEEC60BE96ED3A7A0E86C8EB19DA903FE24988EBA6FC48DFA
1B6F240A1A5D2EC97518BF3968C515F2D6AF7A70BF2249FBA47E033D6EF4DDAC
E3569FAE662D19514D98A4606A70AE160CCCE794DC4B1771EB33E47EF014766A
31E2C50A86A39A30F903FCED1D163C9E7EBD76815B0E7D79FDC728BE96A87239
1420BFEC53355E4FCFBAF202BE4426AC123C976C6D8743F78DC7D08679C38C7E
7C399B858E660689E964FAFD82E425B65D3F8D5CE7C2A9F04C4E814AE53A9683
0841499F9FC786D3256B046F7E559C2D53FF3AAB4051ADDF7DC9BEC731AD6040
FD9B804FA1443C0B4709857AE3A36CBA05359BAA2136415FDE78634C2A303A6E
550D7779D1096790EB7D8991E2D2BB4E21A9AD458D98DBA4D248DDF9AA7BC2E5
1ADBE8D42764C7582762EB7EABD3D44DE5C2197C220A4E6C51AC3CCB3B6F4A5F
9A64768B17FECFA7C2E70A4086F25183DAA9D8861D5D9B2F44BA14C61A71691D
7B1085F9BFA5DBD78BD8DA707A0C5ED8C8CB4191E950DBCCD311A20B14B41774
ECAB00D04FA385BD310C8124BA9C6E1C9DD963F1B334031480CCB977ED5D8F37
B922515858D697A44844F2C4801151D652C1E371D57B511B52A4DB8F69D76C3B
BB41EFD024F68FF90D3CED5FFC01676FDAE623110FB41F8D38DCC0CDA6B6B837
1E23402AEFB1FCE4A337EC7644EC5BB02CFC70432170E2686EFC8E6DB6980D03
2F02ABD7031AD457CD214D05982AE778AEA1330D4DDD264FD3CE2483DC8E01E4
559A9C3DD8F6F3795F08AB34397B5323ADB0476F2EF2991878E11F38FF36D1F1
D67E0A154F2839F73242AD35C5B3A99045B99EC805E25F46A0C1D1C6DBBA1FCA
6382226C92B9537DF8C4F37383902B4E1665B7E4B0E9313749E436516518542A
B92BC063CB94BEC00228A4268B56124C0C42CCFD882CF1827DD0B979E7F89881
07CE85E9483ED66E5BB41ABF15D7DFF9AEFEF7BC9659B75D9B390B0FB0E5C3F4
CB0D2C1D1430C83390DC95F4D165C4D4E6B00BF84FBE6428597412531988959D
50F1C76496D80FBDE4CD2AFF544E59A633B5520AD35E52E60B2D8BE6DCD49E7B
623D69370F66DEDE8735D67F967F58619456F282EF53958976A09D4D8F15D141
6F2529ACC0D4990CC5130EC9F6DE383C674C24816DAE80EE6978BB44B4956AFF
8512D795E77ACBDE9908C3FD76A41397279F0DDCC564D440B4FF85F92448D420
14DF2B20F7BADA16D96BEDA842C9B8078D60E5FA106E3980191A9099EFF809D5
6C850C04A0FAA9BA4A52A17EC97639C32DDAA88849C935E90D35CAFCAE2B01FF
8AA8304BFBB2966A89ACC11E82553D3DF4A5BFF200843BEF3B3DB3C6FFC5F81D
992813950EF2F36050AC40D1C1B6B67463B18BF8680C042CA59213DB93D00B61
A17AAD92EF3CAF0D75F3911A80F453FE60FAC91C0F1C634BC8303F8893192C48
DAFE5A53E295F62ECE33E2FB8243221A2E8AB1CB8D6607ED8C313841A757C5FC
51166D8E74E342451F0BC132C5EC2CDDA3AC6C0C12D644B9FB989674111A6031
D512CB4A80E94B9F75FA7DF1AAD0F96B2F1290E8451D89987505AB9A92AD9A55
EE0636C143463EF284A9444D790A4AEBB699ADD32B4688C2AA21BE4F05093DB8
CAC07B5BA8A32224F0C87186BD352E33A39C6E994BD8680045436EF12DF26E11
6198F86D5F3AA5601708FC9D021E61F6DB9FA111CD84C513E2A42DFF6E5073FA
F13FF8DE0A78DD6E4F3E9E694D6D5649F5E6E4336D2219D23B673720372FAA07
8DC8AAB00146550EE703A14B531D52283CA4880EECE2D624A0A5EEF780CEABD8
C958BE3A49E005AF282DD75BBCA2375339927906533FC039FEB875D84471111E
11236D9752D9686B08933405DBB607CF1A04E4C2DDA646CA1EEDC05579757B7F
84CF308B047CD43A719BB5ABF69F826ECCFBC849C74259C8FFEC4ADC96CC4697
BD5993F661B75F403B0327A58E94861527D71899B75F2222EFCF4530BFC8481C
361522D9BEC6A0A706A2E965310B4681C58D18345EE64DC11A1319A075FF8715
38FF5A8726B901790B3780CD4482E347D5CADF769F347C72253690D2634811AB
5143E498FC491906217FFC0CE0BAC83406A402F3A83FCE9918EE8E8D4BBDEF36
BCED91D5B885A69861DDB635B02814BAAD9672A14E50D6AACE65C1D021714D30
4DABE2D447734862517F6503AD5899136E78065CB219C926D45163EBF6E81EF0
C38076871956C57FE64B4D449EFC540F7CAD8DDA990A4E2CAD5166656C1C2112
0E490E3CD97683EEEFCF837941C0D95E5AE87D3AB833626938F56939283DA37B
18363AB00182EE5C05CED3C6662F5AEC5B3EFAA888582591731C8053D67FAF0F
D88887EB7830EBB7FB142EE14E7C12BD59A6669D80FBF0CCA7BF4BADB8D4AE41
4A1410886EFF8D547649516F4DBAB90FC92048A0A1674F0C08108FD2BEB71CDC
97B14EE699630BC168544FC932306DF2C656423EF6A0EAD84FCD983D5BA6719D
F09FFB7D838A6B7AD79DF6478996306FF87344532D03124A873A277D0CE8C58A
E7474AAAD46FF165FE342BBCBF05B837E703278B2023F6A51865DFDE675D073F
415271514ACFA19D2B9D2E2E1212A84DA1B7F2BDD3E8ECCE1499F3925DACEC43
096859290EFF9E8D6EBF66746CDACEED55FF7A4E26CD6CCAD9FE74FC9783BAD5
DA960A1BBF958DBE1DDE280A937CFD3DBAAF1E6CF58F4100ABC87634EFEBA19B
AB5C24ECA37682004AB0973A5BD735736D9A2DBC7AFD01B46321074734DD5495
3C19A2E022CE027509679591A4253403E0EDA3B904112140552E1280DD31317A
239486A2278F06A1972597685BF59ABBF4DD5E3AA444423F9A4FF38E3B633EEA
6B165B1476641279723F476C0235F3CD2DC07F77A4F2F1599A0296DF018D291A
0D65BD272128AC756A39D903C5B59737BBD6C22E537A1985F09FDEEC4397206F
E8CEA1EF8D26E4FCB55C69418D7A4DCEF51473A036585F8DD5FC1640FCB27235
44574BE6FE1505687BC02983D703C65135BAAA46A20DEA29E3B8C70568BE5B29
5F7E4648B35B9C84FBE4B94E616C0BDDB44A1151E2C85099EB26E60B05B105EB
EB7A7476D831D2C0383F393EB0043E4C104C322503F37A5AB40178F106488328
4776717A6E854DFEC5DBF19D4E977A07A42287A2DBD42A78E4DCF3C2DDC16FD1
31C7F302A2F9FB65ECCCAD461694EE3CF8E7838601709849377A17A996F6CAE9
97608D0F03B8294E30885DC5F1A7C010EC1B86BFE8B4E0C2804FC7CD7BBE0EA1
17C5B0FEF0DC222600B4AADD0F5E3BE9CE17691278A9A4528592F32A76D068F1
BB3C6B565D27548B18341BEED641D1DB07D0DD69386DFB3D8144988E36D6D217
ED437B23DE309A360FF60CA82A8251BE5671A62FBAC09A81BDB082FA5134A367
B198BF1D5888DAC0C7168F29EA26BC23A46914E13ABBD241984CF6E0EB6B6BE8
A3BF33844A8AFC99172F71C0983C040D7519247F326AA1182A8380E74F8D4D4F
AFE246FEF66C656BAA6624D27FDEAF4B0DBC9D59A559B2BDBAC48EAA0CF06C0E
959106065D2034DDAE9C7B38F502A82A0D35F24B66D290662BC890D6A7C5C410
AFBBF859E855D21B146F7B92B8F1B4BB96AA7C31C873CC0C3EDFF7B23D8A22E7
E602AEE7480FB4E80D0BF82E819C925254830DA1CB099A6F885FFBA6DEDC6565
AD6A3725DA591572F4AAD6612EB4B633C9A04CDB15B160C3E2B285BBCFE14C06
C4901855B9B0AC9D5E5B894645DEAF72A185AE5BDD16F3039A9C1EC14F7809FC
5019810C4A106297F15E7E6E7B9E427D5C0A01E965F2ADFE1F47E8AFB7E2430F
F5C29D2907B59A86DC3A55C75248E4DB744F6E0C54E83C14066C344013EBB256
B88AE676FDC3CD9831BE77B254972132E57DBC8CBA16F6F1C7F336F597D22184
A553B7A3AE81F79D342BB436C58A28CD0FCA766ECE69CC4A60829A6261979C89
3F2968FF726EB83685DDB4D90069DB7C9F7DA8418308240ED2B4513467DD2E9F
214E625FA0CD4248B15A95DEC2180C19791C85A0DDD1DFA04D362503CB2528CF
90CAE8B0B5BF7C93F1B7E133F3CE574A44A0C8B129D53C644C5800835F4FEF95
F93FBB61F865EFA251BBF7CE1EE3929121E532C6604C059CBABE2C9A512F7954
BFF577D361A772DB0D478BCA15D3E416D06C33886AA71F27CCFE8C3CC1994503
46ADEBEFECD59D1A435C79BA92CB104882A39CB410107BBCBE4B5F3F8CF3C20A
8E023AEE95FE1B9920AE84C085461C1F5C08F4251173001AC87B085DE95B6B95
517D685A8FBEA16853877991059EA4322E7ECD5D5FEAB7B6C6A1BD4E6F8E61B2
B8C26A1EFF7D7C18431D1E90D75AE565E857D692570D2C6951438E3C9A96513E
88E545EAABCCED3515E2A2CC45D37C587DE0E1304347F2D38731EF1E8CB091F6
378297AD1336FA201628B8F3B7A1AADBF1AC3A3F1C9E8D4655DF88055DC3314D
6CF5FABC872BC9B458F9174ACD4B915F3907E6983E9BA21CC4E5196A4161E659
3F9EF18F40A665BD01F4798FC6992CDF5BB179D88092E01559F5EB30D79BED1A
F6E4A25BCCF50040393237695B92C5104BDBAAA0DBBF4E4BF9A7AE1677EEB4BB
3D29C2241E1076924CD29EB760C8F0114D19D4BA0161537A4B2E556FA89D7A3D
BC73AF1C90CBDA109F6CCC9B275F869ABF3B83B150DECAF46B650947B490DD96
671AB5498FF7A0142CFBB1A982A5CE8765E2681E64B8D84A7CD7504E58C87E82
4FD5500C5FD4773525A9E12912D6B2A265DE09B0E6F680E2D981F02DE8123781
C31E557D56A54FD3546FA9FEF2137F05F524A46A9757D94335F9AA9F42C13308
41476CD4A84360DC9B6ECB0543A5143464DF9B406DA23BE4C5134BBD646BED80
80D44243E74485FB82236248C183D835221447A44807B5D89D0FE464663AF7A1
4D53E828AB44A60E6395AF687EC88E429815282D632366044A2E891E8AF681EE
AAB72E5F3A5976316C481FA61C447704EF610A2A93B4883DA220360E10B92ABC
0E14777C9F53225C2920E3BCEE9D09CA5C60F22B07F24A26DD856A80B0405EAB
D1DD34C94719878B9D613AF0C9401D348D879F0A3EDA5BBEBF135FBDDE409931
4E3452D1C30388B88D50429B985F23EBA0C907B6CCB4A57AC0CEA9F4E7986A22
16BD56C167206626FF532DD43A3E0B767F66837663ACE221E3BBF2A45CE39B80
FB268D543A28FD414B37C42FE7710F5F10BEF207CBA3018A2E8F6AA87BB7558D
98BAC8AEF2D4837251BBBF065C283B7C7B3BD08E29DF5D3CEF127DB53383AA2F
FAC31D3058E6044EAFD2830E53165349CA83A68837067805FAB4B56970CD156D
175D27DF6EC29E90C08D7617119BDC68150065FDEA0DDF12BB3FAC62D2051CCC
C0A389D730EAD6B05AD28D4318E966895F2F360DDFB20C9964E1494AFE21A196
0C1D0D5FA41F58BC269BAC8C5CEC0CB4D39B394D5B99D46408C127444311964F
88706BD4BF54A5A216F2EED84DCC9D2B49244EB8BE2259642C943BB5E456F818
BD729B7E45197599270578EB83D558D01F09DEEB5B7798D02A7EAA86E125361E
CCC811521394472DEA699E2EDB0BC282B9CEBB6DB70C88E22549C24005F83822
1BBD4E5B2EBC96BD8711E6E10EB8C1FA2BDF08C42D510A67435DB54A4AAD9FD2
A364E65BAAFD767FC8DAFED6774B61B7E033CD8E06EE909DE8C5040FE630E1FA
FDB99DFF29348A9F9B4E1EB26741F1C32CB8F4DAAD2CF7DD33D7C384315C0DBF
DED7098DBC3F9859D49ABABF30149B32052EF341E9B17E6B882EFEDDC7E7567F
116654EF98052AFA6087441A9E97BC531F99999053013611B3230B8D462CB20A
3FD382F429B57E1C863719C70EF2C8B862EE357855AA06D0D77C48E43DDADBFE
12AA24BD66895CD2EE2EC7B054DD2BB5CC5D17CBF0E1965C0E6EA3DAA2EC5DFC
975198267FCB0D067F058809C206D19C54BC03C10FA55CD6883F0CA0AA2C44D0
E1275E30BE3FD062801BEDEB1BAE046D34D56A7A70D59AB73CA633E9DCB2D936
94EB75E58160D1E78B1920D259C0095BA4D5A0F9607E25DC3135458574F657E6
CE1CBBA31DD5B6A2A51DFB6604687AE59EB5415323D2AA1E138960E3A2FB77CE
97AC77B38AE71B6C5C3838D79475F488283E17D379F989E79E2A618C40F81289
54373F9718877DA7599DE0AFF6ABB520C27C48386AEFB764BFC86DFE3CE4A2AD
2F1014CD74242AB028544A744DB2C24EA2D2D80BABE40FEDCAF3E4DB41FA4954
FBD0721D1A90B7633CB21449E35BCDB4FB7E107CA10E7ECD8F3E0397E9EE664F
5D6AF7AADA2681AE19E241DDA1855C2DFB7F28CA33067D35107E25C31677E088
BF612BAB2409BEA0B2194F8237AB16453B9349050641786E803CA3B929414B1B
29EDB53F00CFCEF86DB4F0C153820AAFE0BFDECA8155EB4B4622944D399427F1
2309ACDD3218AB9B7BC8F7037F433A0AB962F52147208D99D341DA2C386289EB
D7CCB6319582D7B0F7571F47A662C5A0D98D4D0B88323556BC8C21388AA2B223
E95401B5524FF7D075BD8D36F3DE102AF8DC9875C222FBF9C92F23BAD4064C3A
65B38641C2ADE78C30BFC3C5B148357420FFBF31F6CDBEC9F61F64A1F45434CA
44F9720545440C323D9B5F73A28458F167602207E3F017531D8DAF15A093A348
6B2251BA5739F9B229E9C09CF9428E7A631C421C949417C2953CC1A3A3153066
2D2196FE85284B33D0B34DAD86E4A3D0F951A9357BEC5619407EEF7003976423
C4F09CAAA37CEDF28E1AF9F86BE6A1662353BD70185E4F22BC2F6FBA41D80517
257610CA9E08C0A5CB8B15C567D52C6CE4D2A88834CEA8080C90A3D588D03884
A60362F18FF86AF9B2A5B3E2A8E7AD8930C9777AD0ADAAD44D8C4734F7B7C2DE
F626285B82A143A76D5826569D054AD7D836AD02211578672376E2B3FCE63EA6
1889BA4936FEA1F9734C08FE0B84109D86437D096DC2576A204665B1D2AD8D51
60C7E9F656D93EB214E1FA04F0198A56E7B961822CD70E0674757DB73D89B69F
850B21676DAE46721C136745EEDD97DB9551B092C99FEB3435C14D552F57D49D
8D3353FC7DF3726A2A533CECDE6F5358060A3326C12523D372BEA69688A21D6E
AF601ED4810F0E54A68791DA15FF5999A8A0A26A1C469440C75A4BACA4415D1B
321583B42DE5E0F9AD77BC7E6B1A6CFBD3FA9F8CD288199C53AF6BF8905F11DC
81B354C22FAF542911A358F50893E391398AB4EC04059368E01F0739ABE38CDA
205240166D84A2C48EBA62A63C347D512DAD1E9B2C30A07B1CBD85BF493182D4
4236C93F939FFC5263B6A12C661F2A720B37C4B2DCB7F7A15864E73339C9C22D
99A3EDB89CBEC5965E246EA0675264922F9A98E6FBC4CE7EEEA6745F62F0715C
865422128A163B6C6AE0D98BE4DEAB55C637BC8752B48C0ADA0CD0C00F393D1D
07D38CD41C1542320E3F8C7C00ED5B17DE359DA187810E21A77138A120A1B773
04C21C3636EFCCF24A6425D4C7AE89C735E9BBF6582493B76EED4DFDA8409ABA
B35BB214F4D3B95FD18E974B39A53B5DCDCFD9FB21A2F8D90C40F1476A9D33DF
DC62868861B6EA02DA05D223700B79EFEEA2D9811D78900B7D347046FF9C2A9D
A7AEE1F42E318EE6A2F6F71C5CD8623B1DB3F5B933E3C7C42C5BE575FE72540F
D1991881327327B90CD5534097225899D5410D83DF6E4D672D1306407D69F633
E5C7B79CE97EFA34D32673435B0B6D8EBFB873BA8A2073CBA7DE351875F46AF2
BE0945EB11CB82077372CAF43778FC88C15FD48C6E2B9C446AF84A690F56A09A
84EBB1CED5515C36F27C2841C8C3A9D70992C1F31DC6753222850ECF459A7BED
1267E59F545E8653E95751A22DC1F207CAA1D795932F67D7AAA15C2BFDC446E8
217DC2E35350718D28AA6D2A74C614312748E0A60E83AFECFC0279ECFDE314BC
8E0FA0B61F6712A2AEE10E47046ADB1DE7FFF9453F98FF1FB034CCD345102C54
FE2208132979EF8740F922F120AA3E1CE7FA939688C11F16242C23E01471E998
3CB925EB91A29A24158569F13BCFEFBC700CF3DCC7585F89457DE4CF5D566003
B04D0603504C04951290F43BA455DEF169EED162C2AF67684B23B68282D499C3
6E95B907FF9CE81D3E18C9A4CDAC48A6AC5F13A0DA96A502BC592C6B4E0DF33F
6BF4DB1217F996539D799C1F2BA294679C8CAD338B6F0A756CA29721D6784A86
F3E68670240CACC8DA28964EB7976BDB0BA9541C3D806BFA4FB77C5EBDDCD548
2949821305F52F428048F0AAB4D1B588D2612B00A8A0CDB492B2E6977DB02BD2
5B136FB202B9A33D47AB6DB9A8DB9C099B73ACAAF2F2106069D58578B215A961
102224B1A63A6CCFFC30819D7EB2024DF4B5C25B167B82C2F9D073E5CD3EFE66
6EFBA5B908D599DBE8BF9DF3CC4EA7E1CDBDBC5A0541FF5E194CEC0F3A909C9E
8EC215585EAE240F2F3B866D14E3B196933BABCDAD9841B675FB80E1D535150A
6AB248EC5920D02B5F0678DC863D25352354B1997D3A0DEDBBB8ACB04AF33EA9
3C1AA74F990679F78802EDFFAEA1B27E2B385B6431EDB69A601544657135E49A
A6C62D9E16913710AC8B7BCC2BA9124B1992CA08DB2A33B5819982A34C49A313
FE9211657D4BBA9152E04179B5AD81C7712E8A5F2D7FF1EFFBD47454FA499488
EB3E098A4AEAF3CE1FC15922E4C38271928A0D918572D7480DBB61FB1A200665
4683A71DF52411E739B9EB9ECEA7123064ADA03DB2711DB0E843C914E2567A49
326BB19FEE02D4F50615AC4FF3F906E9D890A8213FB77BF5029C4A8FD472401B
FFEBC8BD4A7DF0884F787B9CB713822F634A96C5D1923710DB4B98B063FA07A4
C54E92045C0A486BB5871AD692296D2D69F6CF1E9FE5B952716E15A3F345F395
F32CED2CB15B87902E04E1970D7EE177C8B7C24B02BE2C38010560A3FA40B336
DE4426BF2B984DFC3BEC0A5752A5DCF73E7D2B75228E7013277CB8147327DD83
05DE0344DF203DA7C282144D38D7FB359EA8150E250037C2B71E075DFC0BDA01
637CEEE1659CE0CCBC968754048C01EC7E5C529AF8688CBB543A91726214FDE1
17584140381D43F8F39618E4F572819AB8DAF2E95DFDB1DAE428DEA1143295B1
8EFD0A4F28921FC836C781000267B864708EBC5CFE0E7B1BE554568F2A699A91
8FA6C536D97CA3805B6AF48C7C20E49586F97755443775A76C52EC37CB7FE36E
EF28B997BE41947BA8D1236C14715CC3BBE5610AAF12A03503B48F6451BC84E6
D4C2937A154FD01A8619131F6C724A435B99617515173631234074823A4A275C
3A5B3EEA755FCC82AB381767D9CF3306707631F5C6139DE66EA86054E2297F53
6095ECB55EF73B4C6F230A979EBF7C63D2F56C93D6EAA8871E7102F7491040C3
2C0313CB8CB171565D669B90D177A722852725088E187DD3349CE83F97D3A722
E1DBF9A51C6CD3EBCE191B0F1897F45E676D2D16E9493A29D785BC9EFD6A9182
A687B43D5918B4EB2A1C95BF08297297F88027568E1C088F279AFE031CE20930
C273EA5874DA16B92EE2BAACC2BC51A8ED14F7A1FA42886B5EB17AD0269E8D4C
DB7F92E030156C7AB18411EC8745F5A0F7DEFE6BA179E313C19ADFA5503C6E20
1C1C4154232157E87F75AF8CEAE50D32464FA36AEE0F3896A254B12405E8BABF
3DD73B968D7E025311BEA11FD3D09B4505A83419E74B4EEADDE0FE0B5D86C953
8B9E3260EB8149683086610616A417C37827D8AD8802F62C21D16B3B6B269245
7F457962C3723BF6E61E3C3E10DE25AE1908F8667764087727DA51CFF0E36D2F
6F445CB662BD8BCC4CDADA958EECDF403BCD3BC892094A5128E251260C8CEE4E
37A36334C742685421CE3D57B9784DE4B5CA81DCBE06694E27ADA78E407D0E67
0E2F2454556BF3881045717D98CAAB3E90B348F1657F327D698A8A222DE58623
B2BEDD3A6ABEF4BDB422FADBA84E0ACCC5040518BBF10BC09236E442E4A7B0DA
E50CAD34EE9951CFBB3E23E96C7083433EADFE1A499E88284D2FB544B7BDB637
868345AB20BD5B542A8D06A25135505C220DD1A84EE4A8E900D10E1637F4A4CD
704E8EAFC757116FE3012E01AEBF584EBCFF0D71E8F3983B031C03D0DFEE9208
993B7603C32B6E3A901BF499128ED228A0548CD9FCD5194B302D289F4A208B80
86EE57CDBA55D394AB66A7C4D3AB2CFA6445DEBC7BF5029C4A8FD472401BFFEB
C8BD4A7DF0884F7FD49CCF201E3A4AFDB7509A19756865981D6C109D9D4C40EB
7BB696C8285F78C66D154289455C5FF2D23C1A58F0C6AE69156F655E24CFBA3C
CACD2EC564AF37894ED53F707C8875D901C9EFEBFE0078093EA47D0DA522E23F
0AA8E13D9A8D6890F4E2E9F09632FDA612B34B33A9A812B7E495E6C242EA7B5C
525587613D335148791C6FB0E4ED16013D5C0DD01B294BAB96A50CB449B6497F
A6D9E0C65FB907C50FDBC4B919AF9DCFE7C822301F9D4C78EA279944B9CC67F7
AF33B63A06B6CF52D85F449B56C8055C6CB180390D43CF505B0C6D1212CCC7F3
98B49BA443BD8F0BD6F297DCD3779B48A23BA00CA211D4684B72AA70D42C495F
3A0157E54C5133C1136DE2492BC07C0972E8D523D2D201ABC2BC9C88D9709ABD
02ECED38F4E611E989F497760138814249051AAADBDEE4C99F4FF668FB56CEB9
D39AB195BE5776EB8D864CE0BC36AE063F859D069A771A5F5B55B2F7B559162C
D4C17A17A440688DB61D61C91E0D30CCA1C6F2D303F04E9793DA4587B0A780AB
603B41B8D938169C832680FEDF5BCBAEEA8FF207B053EF86B63BDB575DAE9F7E
1E55AD308CD97CA63AC88BD3F46A81723BB6B76B4C3C2E2E5B8584AD015374BB
A3892E56E11B34BAAAF9BED596E52D1AC1768E8E0A87EF2A336DE3703B6892B6
1D3C3A1220861592B2C3EB39CD2DEE0524DC5A11D6953BF80EE02E645EBB50EF
5B8F21D7474F23DE906C129679CFDC5F037D66D450FDF53D56BC300786B6BB97
81640696B74F41C7D5E32C525FA84C6C34D4E9C9A6A5AE154E1FE70D44986BC9
13F0D27B30EF5B4C766F93041FAA0DBB196B0A220B8E3A9FCA62D1D33BF414A6
130DD97211D95408F88F138D4968B839DAEB015E65845B48444847FFD8923E2A
D093B00AF012A4D8B0BC253EFACB7155F81135F30EE078434B7BE9CA4DDBF9BC
3EBCE5D8E8EB108CA188CE10DE7EA7B134857D58BCA42C273B2E43D802111363
88CE2ADB1B7390B4C12A462A476A1F590B805B34FF465AB2A6DD504A9B6C48E3
87E8B93EABBD24983CAA7C21FD1E44B7C3DB34939F11FEFB1EADA686DF87BCB5
9F4C395D341CED9DECAD531C4F68DED3488EB9ABDBCE6E73EC5A0AD42D773502
E74E71515102AEC5C04C666B0B98D0431F47F1A85B4EBAA53AA415AC887257D3
7EECC71576A752939BD09C71A04ED8A1DC5BB14E21CA654D970958EECCF947B5
60466FE939046EFE39B6B9B33D252B140142EE927CE5E605610DA098C7CA76DC
F7AAE610F4D7E477E158973A5286B29ADC5543674EA5327A63F01ED14BB1ED9A
0BAF084C7B6744904AFCC4FF4BC074370AB93855CD45405C5A10AFEEE7810D69
F2428045CD609E23CE37791362950FB749D2705D73C2CD9A14C5396873DCE474
41B413975C0BB9FB382387ABBCF9845D7927EA76255F12BBC3799D4A788768A4
6889B0D2DAC7CE9E40D84F17B6ACCD87432CA414BE98BF1F3312B4ABDCB2CF77
7595158CBABDB644AFC3FACA0305B27303AB8B016B22376C8C335B8BBA0B01A1
A562347DD12AFE72E2FA971F0B7F498FA3DA42D2FC22C27547BF62ECB5E25A0A
E928DA1E4073F2400FAF33EFDADFD1E7595AD877684D92CBA782D0086B42B6A5
E6BC7060EF0AC15FAD60D0F0903E76F0FA3A2CCFA0D159A602582854830860E0
9994BE8DB3CCA399DDE7FB9CFF56615EDBD8F12E703C6291D66ABED70CF63CDD
5FE048ED7F756273333E84F341637A1BDB292EADD055C97C874E65048F2AE84F
226220DFBA0FBA985D136415D0F0F4720570B96E62C2FC5A08BA3F694BF444F2
8DA1C82E90E4E09EB09A9740013734F63ACF54AB05DE16630664EEA896C2D83C
E85563A9EBEC3B5A1BDE88057173C034124AF537F260EB79FA98C230E7ED5D4E
509039E8A4096D7309817055B8EB3707429558C69FA1F3B656410AF16A1BFC70
12142611205589FA4C2263FAF831B150E963CF66B114853CA1BF1C54B28F3591
C1B05ACF3D46952F854962EB5F60AD32CE002FE7F15CBA8F8D641E848C5CA299
30DFDBE349FB331AE9EA757854481CD1B3B8E5EDBAE575D1DE07002E86961D20
48A927713588BB8FC5EFF52E7AE3313B8D619B84DDD8CD3878A4B306950873DE
D55F4FFC51223EDBF645427399C7CF99FCAC032AE641F01A080558CFC8D79479
C3228EB0F733C9EE13BB62935E3B1B89F452BA74CB6839FB6142970DB31BDF84
47E35F1F1D61D7971649DC9608442D234E87B1C39D7B723472ABAF30DA023468
630AF059A7DC07EFF8041298B7A6A55161589F84D291DF298C3DA60FE3CB7207
E56E71C72089F79776BF8F6EC91CF0BFDD7CF669AA5422721E3AD0D43E5141FC
64FF28F1CA6D4F1BEA1C6401819082571678E26EDFB90DA95B5899C9FE409D49
1DB422E2CF3C7A3B52C32FBAC82F0954D1DD57FEEEC115BD91491415846B1741
ABB6BDCA12EBFFD4384FC57CB4689FC0FF8FAD07DEFCD3D6459B5D9116FA780F
FE181A696FB5177116ACA8CF68AA2FDB9A09A73FCB008956FDC4CE39D277CB96
9FA09CB534581ABDDF50D5941C63845E8C5B8218F295B871B6B81AAF86F15D54
3B6F063A5F6CA7174C427D4B53EA2F8C915BD95CB67D9E25F9C4C27688B2FFF3
F799BD2D073A400E7CA0B870EE6EBF02A0707CEABD8970A066970245FA069B8B
1982F2867C7FE0E41CE5C9F3403C51E8AC4F4349A44AADDF307E84F029B39FD1
07DBA8688C0CD75EDC4A13F5C35996BC712723DFF34F9520B21A8765EBCD0BD1
C62E95F659D68F0D69B85BA188CC7486DC5EFE67A2DC0DF375C832B0315453DA
B180934F286A17F2270C0F1D1D5A0C48774E2E3E1308F919F596109D5E8D63E7
A7D6CEBA67D8A83EAFCF490DB7185AD4A9E15724EA4468506521BD15E02CB2F4
E5B602F55214DC887363A5684BC68E8477E5CC1E500A3F795462BE64AF3F05B3
E0C76AEFB69565A7B7347B45770125B5D86BBA6C4F5BF785FE50E8724E521DEA
FB89D35DDCA3297479859D89D948BE347FB9399A53FFF0065CBB51A3A16C3CB3
3BAB7FD13E263C2549247D8DF74C6863D43B0261C30C69B5879BBDC3E431A35F
75AA9F2EB2A871F588D4C90B0353B600DE2A8E1DB7A520128B320F2E0F120013
1A8B58F78C596F3C5599D86357DEDB5A5F81BC20AF0FCC1C5040E8E0A478831E
6A602104412F850A481EB75C0EF51C2921B15AD68CAD72846FB5068313E89BA1
1B9E59987A3C481BB8C9F53B99E7228ED76DAF61F3D5E2E55658FA4CE67987B3
3418E42C97FF011DCF5A74F5D7E0034A4B508A313AB9EB6E4911FC465A7F3884
C477F6A8098636EC3DC87A4D3FB3D3EA12EE51A708C6EA3EE343727CEBC52473
4E0DA2BD1A957EC40BEC5ED705F31F65999200A5452C092484FA6FAAB5FBDEA2
A2C207DAAF55A3A6EE3D37E8641DE801976EA3C2E3D326612EBF727098E7E8B7
25ECC6514500A943D03D2CF5D7821941B18FB3C1DB6A267733EEE15CDA5D8597
493D825B14C2FE7A194AABA6CAB659ADB6006EF4F9B28A39687AEB89B3074B0F
F38B1A64CDD91A97186391F351F6D14287110FCFE6179002DD5225DAD211F5C7
2F3127A60A33D311387F11324341BFDD5DED06932D5C8B83FF8F16ED7860E2AA
83343696B04902A7067C98A04F0417300A108E518514CB89BAB7D34EF99AD642
B738312FC6F300093EBC7665830E613F3886845CCAA039D56200AA2DFFAB67E3
CF8E4220DA98A860F637D9628328B147F6E84FF550D4B52EB915B75BF4187623
60F6170DD40B81280265139FD96D065D35CBF9DDF39541F43350DCB982B9E002
92B1FD449C8FF7C852F2107D912EDD2ED794B8F905D0173AA0834196EC21EF77
0A6DA77915E1CF99788508F4B80B5915486DF87663B4DE20AC05A0C65D043E03
7D7650B1C070A3DE2B9A4000BC54A946E945F184C2E98CC5A0891E7F5CA27484
BD2D8DCC14D3EB696334FC2F26D286979ACDC1096E5992D8C9FC677B94B93C05
1F16C76E391704A78FD15712A4278EF8E8584C849A9BF389B403CD6FF5F8366F
9D36FB76A3C43FF14606218CF236274FE5B883EE84FDF41236AD3C1CD23D7384
3902BCCCB3580B83DC0102166269AB6A4DF00EF1B2592E1FC306899AF4EE52EF
7C1F4F8E7782F2BE26D6DA288C9EE68A76F7D836D0AE73FA5299A6343CC9530E
B8FFEA273601D1E82984B8AE31AE343F37D03922A69D31AEEBFC1457D8B9EC05
79FB5E1F42C45330513335B523A27F53933C6B62D8AA75F2D6D1DAEE7C76886F
00CA8BB07066B3855C49CB8396EE7E475F29A5573B1701C2CDA59A6C316D1BFC
71656B6960D398E8FBE9109AFD0C1866D6836F5557F484D9733BEA25BAD1C1C0
D9CC7A36894E21A64F50AA7D53090F61EB25B9FD9BCCE8345330E7907062FB3B
A362B2AF6C697F818EA103F1723C9B76AE8021045DC09C95C9AE4B4EF735A541
4D985CC74C1A4E4E55F03CDB489351C9A869BCB90A840609275BFFE6C4F3A087
F4BE21A90DE9250E5D74823D830A3DBCF9D3B7470B94624512485C1D56003286
2BC7FC1D4D5E16B16A1777CCA3D56A827CA6E2FB8EBBA30BA2F91BB2334B0B6A
8E0F4DA4053549A930D34387A2818F261B9607D5858F3AEED8B33F6EF3BF90DE
F85DF12DF0F0EF9136F6F14AD9825F6955D045AFA9EC779E667B4ED8A08059BA
562CD582725CB76822C35F8021FEE68FE7A76A3135AE1C64D697481D0EE1EB1E
B1E13F576616FCEB9B1C1E3A8AA498866CE393B50AE387FB2956AC2E4A8A17C7
29F878B8A6B915A684CF298ADF096D86A278962BDA35CC68A1B7094108395AD7
34DFE0B80737B824C8AC23378EA0DF75BE56AF47FE703CD677D7394877C88A41
7A449A88485A0EF2349E6DC7A20B7B58072B9652D8E95CFEFCC11141B290CA0C
FB3F5559F386443D3D689570B64E63F8B6FFFBBC97BDB2525AAA28B66BCCFC78
55461372B4CF5400F4B7BCF0D9A75403F28F09714D92031E48C87D3089107839
390625BC3A6A0FFCF2880D54A722D3F6B82E80C5C78220CFA8AA193A8B82FF19
251B1D3735B67FF464CD57295728A8A3EB2CBBC2EFAF3B7F0B7478DD477AEF90
C0AAF406F898E6BC8B5AF7C649CDD908D2A09232034154E661202E74E4CCB493
A9E4A67EA6C5EC3072D8E15B0306CCC6ED06DCAAC1C1211B5F1BA6E2D1E4A45C
CCBE989F253C9D3945976FF5A8A85F9EF6C96C1307464B56036A7143F15C2ADD
7C36589B1EB8917C876D7C780E4DDD73C0C618133BCE2F53E9BF2BCB01902D82
E4EB6BC1D263A3F79FF7C1B83E7A2B47C10C95FFFF6F55524C8964CE1CA8A33B
AB84189E1C54A1054637784E413B472B6341D637ADDBA455596FD630BF9FA496
7FAD0D848DE7F7DC36D8B11171930BD44922450CBDCA75920C48D0084C774434
4E82A48F72767FF2268BED8317FAFDB532191FA35C2983E856AB01C17F7F5361
5F79D689B6B02532EBE7733697F40E99E413617E745B66E31908E90AC92E1B0C
C8FA759130F2D4EEF1FB5A606F7A211F72A3962ACB61C17DCDFE8E1E1A34912A
0C3C6E8F1AF0EFD8EF1AA67A000DF89C5644FD8CF70AB576073E0A08DAD0198C
2C9132C5045B0C5D4DF1B86B5474FE7DEB406686AB2DEA9D80742EB5E8DA7CDD
465F9991E44870A7D26DEAD5DF11BFDADC197C9354F13DDE0BB5174C4CE7CFE6
F01EA6B19E1FCC834EB2DD2C379542F7A9261EA15EEEFBD9C759E6CBA166D73E
9D1ADE3C1E4BA1EB8855BBFECA191D4B80212DEE435D82DDD7A545A4496B5648
0919654F753822663BE4938F0E30F8841589FE146D0525DF5FB31C974FC3B57B
CAB5E6E27D58BDBDF02AA83FC9C8C5076876ABF67E680D48EAD6C66F4FBC0FDE
EF00257025305004426EFCAF6C7469EFC526F59DABA970CB94B8CBACF31A8EBD
8AB6A7E2ED9DCA69DC5C39CA964621F6C5ACFFCD25915FD5318E26A3FD7C2891
7CFB4D3B4587CBF59A38C4418DC2271C5579799B6BD986A2913E3B917EDF3D43
F47C6F572544FC696BE86B702102D7FD9E0BA2EA50B07C5DA12C0BA3EF2128C3
9E8FA4E174E180BBCCB105D64D6003C95FA6C4C8F1C8EE88C508D30C7D3776A3
0D2099997349D67AA486E1BB2639E92D2AE8554B37EADB97754791FBED404A8D
B4A67494CB3C127D57E1666E49AC3B1BEE346BA151AFCBFF2AA27D41F79B11F9
C1A572AF3138503A554B0BE488307C596C0584EF81DBC5AAE796B0550FD7BCC8
4F52A8D2E421E2A0CCEB2AFA2FDD93834089E0C8B29C7757479B9E0547FA5474
AE86F40C7F6D5CF126F1DD3246737057E93011680348278ECAE780F18F8BAC37
CF295F058C57CDBCC9A2585382C9F96C896BC17428485A8CD7709942E7122157
2E7A86888C28B9A4615998E001B99E1FF8A149E106F04530708DD475DF4FDA13
B91D0B53F41B0F31EEF6E5CB36F29D511594006FF769550AD34A047DDF4DCAD4
8C79C13C76BDBDFA4D49B4FCE8F49CB09412A104C60B3DFD16499C1DDEC1876D
50D21A217D500474C66D82042A7F90731D9C008C466F1A5E8C10A3A63EFDBE4A
15FD0D0C1948BA5671FB0DC8D2140B854F2E7C3CCABAAE3D2A80837BF7F8CCC3
208211EA706917052C6C9B73C95538B7FDFF75CD364021C4FCCC7A4BAC3D34E4
26D7D9D908236037C83A720F21F6CF7E88A660686049CE34E3D38D861DBF4B44
A86975E7B36E3DCF1C4DC905B343BB72416574240E31C205E4D6E482EB873509
26910860A95DE4100D2A9BA9119A7910248F9338A58F8A83C0D8481C4B7FB4BD
0946A75982D31D9FE8EEE9CC9FB78DBF164F52F31EC79ECF18171509C8950E7D
BC216AB359087D8B27F4F7C38152D950D7ECDE7D4739935BF6BC6F9751B29443
06176F7AB22BB164F63C7588955BF73F38B67E1FDD63579EE3AA4983D22B143D
E775B9F4EBF84063066BD0B3827028E314633FE1E18A7C19FE9BA51A9EE3B8F0
6BD971FDDB944C525B5B9E07C94255F8E33BE8E1BDD9B5299035A87E137A1A6D
D528D0DF17F15FF78FCEB2CA616D526C530E142CAED9505AB06AB808EA664CA9
F1913F5649AF34F2669D14B6D779FF00A34BE6385E640BE3CDF7AC503886D83A
96997BDAE4EF14F9E60E487517C8ECCA81ED1DCF60CE5A2CF182099C4AAD383F
C67EA4612F4F154D279846DDB0E86852EC0BD581F6982995D8A72DAF160394A4
657F1FCEF8C0A06538CED27AAFE197A9967C89826CCBE5991C60773049295392
D4BCA495F47685FF21F36251BC7A2EE80A5D4CC919ACE4469031D07C171363F2
A5F9E954BA530330233066FCBA83EE6C45350AA213AD5635DB921E57E1B23131
263F844B18EA91B95602F465D1AD4A73553627402DFDC0890A4296F3E9B0D405
E9DEBF3A78861BC8D447982AE814685DDA19B52F6C77733CF3FAB7257D4E72C9
ACF7E71468888DAF2A7A1D01761D3A68F6D1FC00C1313C220BFDD7A30DEDE201
C51E84D9573C7E2BD2539B635B544499D40AA6D343664B19774783F392B3A860
6B83F77678B642E1E8A32C268DC6FE77C016E6990392FE4031F65D892B83A3FD
36EECE644F058C01144086A8CA7C0098265EDD8DCFAA7F25EC0DDF6B8AF6C5A2
650265D5C2215753A9F8B236D844566898041893C5055FF4B257A56C518348D2
7E0C312082BB785A7A71D02F4F71864E9788B3C1295FB381FFE037D9126BAEBC
883A3028D34C027E2CA2F3198B67F4070B0BF7C049F573DAE80E3AA6696E3376
99AEB3705F20CFCD667AB094E7D9B63DE13EEBA9C102C40045692EE3B52643A0
DE3E62392C86B9F997DEA662B7342EFDC90B3BCAB589A88646B932E72EADA68F
6A0DDC1BF80268E5088BDBE5E056BF2AD534519528E20DCE7AD6C93B12F24FB8
073894F452211645CA88593FD61E5A0DC97EA2E4AA2D6C07BC2973C83D081C6D
B089943F99EE41F4B708D6A5C8140FA8C65EC9AB5CFD9F86253ADB37FA874126
F2328BB5C8627A2E18F4FF69E7D7EFD553D7EF39D4BD793657A2E0B1EBCD855A
90E1E7FA2401AA0BE497CCFB11BB8D6B2A70A568C761AC308C910E1CD1EDE679
7C65836B6FA5901C144CF8B56DBB4892268FB19A5038B92846A311D5E94439F2
8A07C3D70161F0724055E78899DDF3BCC34D14196F5741730D0D69D043A9F082
9E9E648308CD835415AD36EF19F7EBF4DC7D55B6B53D57610E2DA7C3D08998B0
C789793F4F202861B6EDAEB5B8ACF9D453D30866F9A9EAAE9CC572D8FAC0587D
BBFC546E899C8CFC1031B5C80138263B8E0DA1FCC4238D71517DA16346588DC8
27204956D533E0A0670D60CBD73D1E1B9865C83FF0514718C801B23EE9D15EC3
DA1315FD6A95C3F46524C88AA4496B318283B80AC61EDF21B109D7DC8DDB8BA9
A9B9CA4954AD9069797717CC0B929BABA88F67E4E41BD77D26D98C3AE27C211C
8C4FA5132D2B427B8583BE563DE800EED4DCB43B0B1969A53C181C52D9DCD913
B45161035E63CCE8F4B450CB5D21097D7290777354D1453659DBEC366C096AE6
5B56E34A583A0288C1874BE8C3005651659EE74A875CB811177A20A894351D75
B4E769111DCA24662FF0B6783E357BF2DB29034B3007E7EE6C4B81966846D8C0
539B41792ED8CF731016C85A4E0418DDA1CF32810C68ABDAE536D95D46BCDAAF
AA5A8301F445AC3AB96389BE6CE558BCEAB29A193AACDCF5ADCBB93091FD5CA5
19B2D1DE4C1BD4E199C31D5591A61BD49F4B39909FB4D56ABDE997398E6796B2
7B93B1DBC245445D23EF52E21DB63C1313C2AB3F113FCCCA9588C7FB72643EAB
8F6D8AEAD1DB07FD8C3C0E4961E43F3E7435458B0FE5428EC243C024DFFC48EA
4479E6F02D75E2FC0A94AC3448BADA5C848722B93F3C8B5968E5E82DE931CA62
38DF599991D07DCBD8C8EA380E995D1CF13034430EDC64C56AE6B807FEA5D8EE
C15F2C96058D5FB62D083B34B01F8890C5E4C89D1F69EB7EABD3D44DE5C2197C
220A4E6C51AC3CCB3B68EA05202AB45200693D9EFD2E0110B640E38CB4A7EDCE
710E7CF7864A73195645D5071137F882C019B8B8539E7C2BC5A7FFE787387CA9
1D863A9A8C9FA8CF7BBB5FEF60E0D4C90730CFB259E348145C5C9A51773D0C75
B3EB956C82A51D243612B70B601D2DE189B29EE33528A119F9710F910B091B56
68527F34F906B836D86A0F83CD90E8FA1E7A70B5E6928526F8EA1A1D72BD2D39
8BE3C3E3CCEDEB45541CB32FF7D147CB85CD34424CE13529BC02676702354518
9BD8A3B135FE7050A6DD93D6CB6FECC0545B2F50A4280C835E316588A64A0B14
D9A6F44932C4B5CB0C0254C27B0A0F8D3ECD1B056A35C37842C492D8315C2AB8
585D9C731EB49F2FA5A5A6B5E003D704FC69D67883C8FFD1E42DFDDCFA618BBC
705E96485E6D35BA4366F8D8ECCBD1FA9E023AF7227342283FB0D175888C8F3E
82F2F6B0E45E4BE3E27CECE324917C5A99F4A3223C0A8F1C02CCB3F652A2EDF2
5D95A9456C7098D09D56230EF05F913C074EEAEBE390144ECA2EABD1ED2BB6C3
EA57479581DEF6C117C0FC3E2F617807E129EAF9B118CE10A51ED614E0C7FBC7
335681207464ABF8C4ED5B8A9BBEFF8D46AC997C8ED678DBBECEC95B1E3EB16D
D6DD67DBD91C1A57EC7ED634879371972B69D0EFAD4132CE8247838490E80AFC
BB1340C523C7E247273704AF5EFE5BFF0D7067FA57B561F745A1E86953865D45
1F5B002E2A2C498A17C7ECFFAF85013B5C541204F798245660D5745F643FE9AD
227EB88E279912B638563A1B51C0CB33BB394FCCA8483943FEFD671409BBB276
9C8ABD0E1D2BD83199205DE91F70834CD87323DEE711598377B8A1CC4E303F03
6B5AE64868FC6AEED9AF95EC8F2AEEFE4A930539C334560610DD15BFC537D546
370C27D93395AE35FFED81CF70228085BE334806070B534E0DB95151759C17AE
D59C3ABA73070F8B3C4799D6498B2F62BC765634A3252574BAFA9CA1468929A0
CF94B1182CD11BD4BEB3629DD70EB58740DCC4BA984C3010A88692D4F22EFC31
1E5DA7FF124E3C90EC49059AF265FCCC9ACB88D1A17EB9F4186E0CF93660BDBB
489FB5C5BFD22467E3B7B7EAE9B7B72B719960E30F055ADBDCB2B705E2C9124A
DE7592C0F4BCD4DF6721DE5FA28296D79766BF033B9E28D127B106318A62C295
28F54657753742042E9FC75F141860C239FD3649D4356058F46C35C1FDAFA7C0
7AFA29A63119C731B3FC8D78A9E369F922CA6454BC100094C0BBEEFFFB52CFF4
8DC639DD9A89D4B210ADBC886F598CA349BB5801C9FCFBABCF7FFCF4829B5CF5
7B88C33E151CD82DDFA79D31F0B4A0485F51334BDF5CD5EA336A96D2F6B56E6D
F1561215B3FB914BF35145019FE37A206DBC6D00C44C6FF0D374BE43AEF027BD
34EDDDE6083C6CF4B205301FE5A2F54624315981DB9E59213A11EEA0880E5F0A
FAB2498FE1D79954BD53619CA37601F93F0FBFE1D6D0CA544386D209958E82E3
9C166F9668970EB4DF7B36E865797879DD5D854A04EB3F5AF5E709F0F45E76EB
ABE1C94999A54BC260661FD4DCE55956FA278F7BFD2248A1547A381B388A32DB
B41CEED0EC58FEFD6CE8C91A7FE5AC5F81A314DC0521630E4728D08DDD753CF0
03D28415BE077393D77C96B6024A57B5AE20CA4E8A705A19FD0D47FA4B70AFBE
58AF4F2695D49DC8865BC996804532E15124C570F82A7214A884199C66B2C9ED
EC24F39DB90C3AC9AD11247C7876A4817A846A5C5042511C1A3DC6F19B4DAE1D
DF8E867B5E6B907F08AF08F2F052059FC54715439CB365500795122379B1581B
BC75D3ECD3E891BBC7CF70C073337E28400D716A714D8675A76098F440E5A3CF
DDA5A71F8DB20E14DC06904F0686479670992AAAF45866D8D63736A1E7496C76
AE7950F6A340B36912CF67F8CBDFC44617CAEAD49134E8205BC496EF870932F6
D281F0F9C45F9969A88E05652EA129755379DE1354672123916E7F4D46213FFC
9EA229D6E9E95F6D4E652D8A9517FFF5A8476EEC6D9104856CDC714254395A59
6B476771FFBBD4D26AFED71E4D3ABA38C1B20F73598AB20A52DABAF7035C8598
6DE59AD301B93AA8BAD98D19BF27F59CB0616C73AC6D0D113E9D9180496ADA94
0B6EF07098D4E97FEBA8C650810E23D6351C7E60254DA80A303950EF8E8D07AD
70A62B8B43DD7108277E567B979EB7850AB4020DE478A1737A36870CCB24CCCC
7C80BC9F306B44A7BDD35F637D616C7003024B08E52787DDCD7231B5ACFE00F9
65ADB89E171134E3BFE65437FE77B6D9B4A24FA5C433EFA2028E016C7BAEADEE
68B23D04ACA15B0FA0098083597E359F09038051C4BC551E37CACE5BDE7A2C9A
124900DD8F1732791A32ED4820FAE1051697E7A5AB01D4273EFFA969966A789F
A2F37D73408DE7311A006376660DC7C687555DF9C55AD867DA9E50CF8F52B884
A074C4C4441015E906C4412AAB326B52E97BFE4A63F8243ADF0C07C6C16AD3E3
3C17669D89F9A485ADE676ACC5E3282A3F2F35F415C5B593CA786F54A75F0C8D
10D99B443B1CB9294FD84C265B934A0857AB0F8EB1757242BE47C2EF1682A05A
CB1435C456501A6FF2E0078529DE942340A40AB1CBBCCDACF004602723123024
B9183336B45E338CBD396A3D7C0CCFFE26F87E387FB8A0146AB08A3DFE989519
27F9C3A83202250796C77E6FF327D58731A241E11468BBA16BA3494A4E80FF10
A95790374D2051B800629BE0847718ECA5DE4ACCF88B773CD15F945FD3ADC0C1
70FB5D4155B13472B51A20A7743BAACCAE08206EABF5E61E8EB6B71AA4B19F80
3786F1CCEBEDA67F83FA8F1322A68097441DA3511D8FE63636AC3ECD62EBE43B
473FEC1F76DA6C55089AF3D95E3FD462C5A8C686F4E4A3F2972382441633AB9F
4342BF1350F135FE14F2CBB58922F0503241CE88F7E280B79C9D405B17FA11AF
7D0A61C666D3D5F8C9E32673F71909501E4717F8DAC250A102E7404CA135B33D
D66F8FF40D1EA11227B51CE018B956D4E094531061EA1994E911990FF81F9259
2AD968CB3E74C7CE0C692A00E53F59B1F52FBAE31F2D969EB0B7E169D0A3EC24
C9454987D9A8FFE60FD0640159E49726B0FBBB1CD0FC0B91C99F9EA3E2D4A51D
9300E4D8EC13C0B542DB50991CB26D44DFA0957F2309D42892ED6171B0E25FC7
EA594E01E0E7CEE1D3F28C6F04D305815128532889B531170C4B10ECD0C976C1
807524DCC582B1430A73587F1FD58F0E75AE419A2BF9389394FE31586B454CCF
DE1CB0F17F31B2701321F8DA51E5A8801F32D217226E080143A8E35F88E3464A
38D1E4F53B5F3789A77B21A4B5B85EF3945AB516BE7B6C38995F3D2BEE7D6858
FD8EB114AACBAE769A5115F7BFD04D43D655952F7731CBD3FFDDAD2B1EFCD4A7
3CCE9CC54C53A802C65011720B337658E1F16E079E663932EA1F9C20CC776B37
5C6FAE55DC2FEF611B802E5B34CDD2852B1A2650F77845B4EB6B7378DFBF36AF
E522359CCE2CAF0C6E6C6DA14E3A1B45E8AECB82954502887B4732CD52D0FA91
38E7C6E4B118CC665F4B861D3766A241400EA66C948731E7908F16B9080FDDB4
E1E86D6F0ACC65A5AEC760E1F28340DF37AA75DB61EB4929AB62872DAFAEBF03
C5A286E5461354ABFA8BD2B6DBBC8AECB140BDD68FF12D643CF953FBDFF9AB4F
F7DAB21AA6B3054714571F930EC9C57B38834DF8ADB373A5B5BDB1D57F414F31
A5A1871159093178D4E8ED4F80F4AC37E8983FF251301B24A21829E7622DD2B7
FD2679D084716B4647EC18C4BB3782FD226B1369975F6276B34A7453D932AE04
BA80B10D924DC4B86318921169C7F112991FDA63181543DD640F1A5251957EFA
5E03C8ABED74AFA0510A61387291217F282513292AF1499EC23FEB1DFD5B7C33
A6DE4D9512C0FB2C41C4A87F5C1F45E5BEC496373C3FE0F42DDECBB70E7D89DC
EE471A182A205D85B6DB655F64D923D30FD513D9E19D42A419FB6AEDFD768F9E
302BEAF9644A73DE2805E2042E248A874E814B3D78F46AF4F001A3840168523B
518B1D3E9FFC5571867AE93A723618BBD0DB66BA66C0D54F9300B1A5B261A193
D64E3AEC89CE84DC97072C363198B3186005E9D570E7A1E2EB5632AF3BFDCA52
B5B29D0BD07297653D341BDAA6303FAFF112EC2D37408C77FED6B293669B9E96
83EB4C4567A7BE6F097643C97014196EF241654B81CF0C6959C077BFF8C37BE9
2A48EAD10B4729E5749A10EDBE644886443D12492C8B3FFD4B1A187D0EE152AD
FFF6FB35CB22667E746FCA5034241817B55679BFA992CA2D89B7DDC841F798F3
6053878E9BD3E2E53885A7F69B8BED66EDAD0C04252A4651CD565715F955201D
364E032B0252841BA275BA9336EA18CD8C06C2AEE48C7AB0A5CE3B28CD3E7BE5
CC509EC8F2CD4B13039B9EFC02E977ECA26E4AAFCDA82DC3CEA88BC85FCE17DF
2543DF782E20400EF003BDD644869CB51198CFD8D2ABC178CEFB03E7203A66B3
79F135F77ED189E441C17A482ED2A78BECD547D0B2CEE723BE7A480E745A68B9
99A0FC75E1B97B73C6A8A8CAB676CB4CCA7B5AE8D69A5DE29D9FF93FB135580C
214137208AABE52D84CE7B15DA91C796157A282D8B297D9E886E7AFCED5E3200
78886832914766BF66F28BFC3E674017D54CF95C7EEF27528EB88223D970ABF5
0CB98064981929EF465D4E30975D1B91486FA297D8B941B3A8B3FB114B9DE3E4
9C569AC3DE525778B2FD0FC0946257A5C4BA02E2F3B5F2FFA211C6722A627A4D
8E69F4E4E2C393803A5066E51CE51E88CBB08F4B4D6AED3F1295DB2D827CF364
CA2AC24E3BC328472F237922BDAB4CFFCDA04A7646C386EE10096DDF8F733521
D1CB0A3225EF16F9AB4C9FD569431B8226E7AB00ABDE012AF743E059CEF66D93
B147643B9C3417305B2986E18182AE0BF0E07BD32E9D1797010C7F5782A2AFCC
9A0AB4C2184BA37DC8681EDCF7FC3990ED1194375CC546C20FC3F86C7232B78F
8A662BD6FC3DA3D66EB82CFC29F322A112E0E5278C245227F2260BFB7615A3DF
EF64653DBD8CE746103DCA1A07BA3BBAB72EA73FAA46BA6071EF35E9EAEA8DDB
22C37E4E45A40E0B2DDC316314338880539DF14B75D72114DEF022CD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3D6F6BDD983146333DDA29DB81DA54F44DCF5364857E
A20DB59006F78BA077D29ABE7A537D2358B1DC13AE97ED90F7D1AE27A1CB55C2
F534E2B546BA5531AE88840CAA741A57ED1F4587A72E74AFA15F15C69046ADB1
B3B6C392AFD856716F96B850D6FF61144F6A9E51CC1B8A86A35087D4A3A37081
D7529F94493EB4739C267B8C54B3A1FC2146237C1D110D4A10112D496250647F
37A36F59299DD9529CD003AD4E0847689E519FBB2B7796420D8EEF6ECA04DF85
390E261B43A555BA97B9F30C1CDDF679DEDA691E30773C286B1BA80CF1950B4D
B1835826E276E14DD0C69117C6D60A211DA5728E51F1E2D512647277B9CE8FB1
6D00896BB88B0A87F1898C0405B118619CB1786D4976E95D7F665952CD09A9D8
687150619C0C7A674C2F0A7D0DA913CFDE9D93096041AC93C8B122A5870BD359
4BB61C6BB71FFF5A666D3AE86F26EBB7906FF0B703B5C2B4A689A6B87ECCB2CB
26DEAF251DB367DA93E6CD4180AE95381C71923EC2FCD80EE0D2A55BCA70F7E8
668BBD32639269A7B487A85885083AE809FC393347778B94D1EE5479F4EADBE7
648FEF2D2D4109BF58453703634BB327B0B42DF539EC15577221F20B93AD7AAF
C99AE3D414FF31985CD5FEB9EBF43E5C0BBABBD2622A3EDEF4C96FD8AF8D3090
AC9F0AF5A1CFB5E65B49673C73BFD3B33DDB31FED409FFF99953C73C0591B53C
BD3D2B934C277D65733295C5061ABC597FCF12002F30135A00B5F313312DE7DE
F9F458994898AAFD267FC4B53A93BF104CAA97C01188ABA1F0AC094030E2F021
6F900B4C3BC3B926DD8420D84FF4FD6D3263FB9E97AEFFFC48FED1A401EDAFBE
8A3F9F871320D840B1BFDD84BB7201BE51E7B3C0453409A7BE6F53829103F9CA
4A8AB1CC3BD0B625465AD2370DE5EFA8AC9C4C3827EB7DA724CA0CB3D7E80F0E
5BDFC56A1E99FE27A672F7B98E6C96E236238A40C17919A2682200A4D13E8C03
F4B604869BB27AF053A769F6124346CD3031BBB3DE3BB50254B24CE360D869ED
591DEC1551B0BE5FB6F78AF32CD90FA2A78E31C2C4B07FFB79982CD5D3BD43A1
5CB7EACFDBED6787A94BDE6B38446C79DDE383430888362435643C9906B52F20
851C1B331DDD533BEAE36B938C4E0278D2C99B938FC7DA28F42155F6C8C1C856
6825390030995DBF48DBC939DB010332BE7D2DB9778C2373BC8E4A791EB85460
7D62C59BD0DA9C906407AB3A0BE63CDF0CD9A4546C9325291D11D02F4C228738
9E7A3A85443D4B789F3B5925F3D0D25D5747BD521AE46E630ECDB0C8BD2D2FE9
99C343616AB3A5B2E8B2429DB222FE161C45AB766CF27384C9D2DD211B4E26DD
455B8C450A3845A54351094F396C334720113FF02B2C0E72D7F955339FA99204
A884551B8565B4A4F89708BD0DA32476CC5A9E11A88F92F56D774B6716C27881
6ED43730EE75F1CE4473166C04DF344F9F3A90FFBFA56A45438FA4A0EAF113D7
DB46F3BEFC83CCFCFFA27E13075A619DA45BCF9EF119B8850BF52FB4E46772CC
07187082110264E4B82391D35D9E066031D4383B2202DB203886107AF158F4FD
1D565441A4D5DF1451CB00F7E90CFFAE0DD64CBA7100220FD2A89D5451F351BB
ADDCD701F2901E6FFD859F1578121E81C52370272EA1DD1726A96FA3E5CCCFF9
C8A72EBF85AA092D0C73F87D5975965003F08247BB95A947EE8A64B0A04F7C72
9161CD41C2525476F0D623D69EF062AF7BE36916A6B8B8AD40412C905E0835BE
25BC010FB441B17F6F8904BC50DAB7D050352B7C2232BC0767B9FBDBA05B2AE2
010E3849D44922ECBB9984BE6712F3BEBA9D5822E3B4668C858EE192E508341E
9D084BB1E658F970A9A1673189B6919A3CBBBF7A7D6A8ABB1C2035C76B360D08
A417427F792E560D35D44A1B5491877D1377D41544D2441DCF927378B1A0E639
B6F1AF7794896C10B680E77A136A9C60983225664CDC29E035FC364DF5810494
4ADA3E9D44E674C5F39812EF05E4868C6EECB629A601477ABED6509EC0D7C05A
E84096E3BE017C7EB6DA0B466262747ACFFD9C16FE7E46FFF92E9844A94347F4
AA3B1C25CD73C9C67129FB5A0FE4911169AEA372EFFDE26BC22116ABD7D74ED2
4825E337219A98AC7577C57657D9ED9EE571618F2B774979BB2387F472D676A1
16C341B105445D0714A93D3EB0C9729EB370790C6DF04450CEE83353B3E2F49E
36DA2E57182906F717EEBCC612BC74BCC0F6BB043374673E1227EBFB906BF9E7
93B59C2BADC0A4657B422EDB7D6980CC2B4597F3C9F6D66C15837C5CAA232A9B
D71A0D652215E3D0DB1DF63A5958C1ACD62F7E9E8B8DBABC741BE609D0A2397F
C4C01D19CB10A95E6C74BD4AC5466921D54BCD2E045216CC9BF3A4C7CB161B46
4A06CA3E21E0677AC6982F4323ECC84160F7099F71C3D30A5C912E18E3493CE3
DDF264E9695E8F0483B01979E0DAB142485507AAB1529FEBCFC755D12CA29FEA
2A5EF8658E99896097EED1133143E5E7FB04D332DDDC6F8A4CA3607D25A902F2
07E1C178A37C6028F5695AC164D1B00A4C42FB1163D775A7AD3265894BE60EA2
FC6CCB0E8327DF0A698170672507CD137C8CEFFDA0C4BB10EB7923C790BF5C39
DE20927CAF67E32770970F91B28E41E0C9E62630A4919577353DFDC89936CA7D
FAB81608613E7EB26A2B9EEB4FE701780AC3C7729452414F36394176CDDB3969
A89EC08CCEECA1807935B085D7FAB8C4F1DF7A9BEF377F96A00C339C21B4D839
D7757C6B42D41AC8EB4A67168ECBDC8300DA47DF8745061FE92C4E0CE8AAFBBE
2B8BE46F0D4ADD4F4245DCD8BEF52C3876B43FC41E1F349050D4F782F99272AD
9756942209E84D7293CE5A058CE819D678E9E827DBFB3B9E539B91674DC903FA
25AE6BEDBF3C0E5BD9F5B4B4117F4266F92068189739402C7592C41F6603B90B
AB3771DBA44BCFA548A48824D6DB13F456948A56201B2BC96971A6ECC64B8E8C
1931AFCD1A77BB926A5EAF1C1AAA69907ABB5EE159CD349D7588FF9065433D2A
CA7613DD4A113540C578E858834AF7BC17BD6818E2129549C594D33B30171FF5
01920805BB098F4956975D8B9FE0E1AF8DA375D9EF10B327E0119A0D5725B802
F6417D37F00B7B7022DF2ADAB9C61B2A4B8F63893770BF0B8B974227A55EDB21
51D8CC564DD7079D28024A4A6D6CD4ACAA0029A0DA1B2BC88E2349254804ACC1
9ECBA420AFA69E14C6FF37DBDE75356021613624C16778D29F7EE39EB1279997
6CCD8A721305D313884447327C203ADC91D1CE2BC331DD338E0C9DEC9D857FF4
4F9326C35DFAD441DD8A1BFF03A34B777523CA179C2C8BB9158F81DC1B7A6ED1
664AA37D5FF9D87D0620B2D88F177E6C23C85BE7D3C1AD21E4621E4626C6B108
C9D2A0C5C9EC873DDD3FF68035F1E62FAC7A92B5FEEB8D17B24EA8DF1479936D
67F1BC4580E4A06962838EA5A05036E00D0F7631FD4785C733EAB890A676DC23
4071E50504D9A7A3C485B645C92505B5C1E7784EC4F98D27F30F4BAECACCA837
A18CE199F557DF6ABFCD5E2AA01C2A2DEF09E0BF6E5DE144E98D654DA209098D
2CAAB0B1FFFF1910ED58BBC2786E9B84D1FE1CFC5F223FA30ADFB1E25C327320
6CAB94241EC254DF3AF2AE8A090BF8B9FE102B8F764BA9BD9BAE95368EEE8CAA
0976D2778BA692071F790768ADECE8CFD941723DD47B64A61BE2E0DDA8DC2F91
56BC7E85C230D2A380C011BDAD53143A9AB732BA3C58935998B8EFE06CBDCDCE
FADE41A2B2B033602473AF13443332B7AE3689C9C0F4016343A64C848431E3A1
0E30C99E5FB8AD489ED2AECC2C76F187C01974AFDBEFAD635118643572617553
83B3A437569A41B236C5EB3E1D7D69B58A668BF268E675268BA657182A9A2AC5
C6EFD9AD0C412A96B74C3C3775E2197A407B7FC18EEA6C134F467AE9EACC709E
495B0869E2CC51D0C4358390E7BF0DF66B063D424D93F24A201D3333AAD1D5A9
F6443B901224A50A3E21532862CCD19CCC25DD66CA3FF6090FFE73D3E620579C
2CD4EF434017BD459FCF89550C98A5AC10AF6425E3F72D14BA18867889D64C65
7A31CC26F7288BF478B921EB03964A6BC41D3DB88D8A4AD4DB892B7E15A6E6EE
A0821DB3D92CB6216C12C76AA483380AE67FC3D5156217BB90129F90C40AEAA5
1B8474614FBA86FA0F0ABD99C89DF38F4B49FC9B75F732E52ED8024F5C89AC58
9C59611CAF191F0DEDE919DF9D17A2036A621D575B1CE0E452A07AC30A11B923
304C06B1A622591040047068E0B867A248920CBD95EF45F12C1A2267630EFB49
E34C037B5B5FAE3ED41D61CDEB2122E94139FADE0D1B98CB30760A39B0ED4D11
96B6284CCA5F1BC3838DC16CA2022169B1486B52F58F7EC6DEE8C48DEDBB267A
275A578FD8B551624332391F853D237229BBA0575FC89FEE3F5C8C869683631E
CF1BCD50D947EC2ABFB977FF8E2D7829FF662767B5E0C34FB5CEE6CDA0D73D08
3593DAC898B1EC7FEDC2E66C7C781DE2C6F3D793F5B9186E78641D81CA51BE89
B74773883891B0D7742C3124EA705A42FD4E7CB88EF7A051E452A3CB2340E992
6FBA7F97211BFE5ECED5808C82F36046576B4885217F13300DBB2324746FB0B9
7D57F7EF5AFB57B27C4A9223B428805E2AAB7D20F5CB1C86B879E02CBAAB4144
7865DCA2EDDDA5832569063F494C885490AAEAE7DB32204A53F6BAAE385E325D
1255CA2EB7EB0B6B369D78F681E403483EA596824204461D2FAE3C928795A690
454C9052CC3E1F7E728F69C72B90EB487393978950F401BE1C188585EB717F57
D4FE2C74D46AFD6923C729139ECEC783B8B545A2CB4A109089F41B91E6FD1264
1DAFDE9EBACB08C4A8C0BC50903669EF798C6F66A8BAAD29C4C4D8A1730E0ACD
F45B0D98255C01D51C3EA4AA497EADFCD21C74139AF2562EC926B87D97D200FF
C5273E6F0AA36A878C785D68EDAF2A75C4F91695B501A669E076915A68BB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /Box put
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890B0BBF10075D53739F7E84CEE95B40C3DB68D5
6E9847E37B7920412068C3DE2065A77281345980956AFAD312499818890B454F
5DD8C92695818BA4DAFEBCDD4D268763515CE077A64C5F3AB384A6DFD7DD9641
FCDA0A3344B3A14F82D478B4BE7BFC2822A4D67AD3FD07B11589B93842066528
1E51D954D7E6019F6921DB9B00ED303B4B8F557EAC7A0B0340A268B0DDB25B3E
BE0982129B0D3416CA5D07ADC689CAA181270B8141F9D0F60C60F156CB305E5B
E71D9A5D5FB3216BFB66284FCABF6D74564D1288EA99D3FCF6F29C3AA690A596
02C0AD2BB29A2D457C66031E5571A1454758212EB4D053F4C28FF629FA94DBF2
9677AC4B92C4DF5C7FFDE31A8F2D6F9477896C11CBA890DD464C9231B1C350E8
E8CEE17F2E0F5D10416F7D7FBC6085E9BE09E692951EA7B93A9F49CD458476E0
A380E1D122F275093ECFD398FCA6D714187CC12A2B16318F9E1D2B0E9EC134A2
C4D2674AA68D2E7EDBCCA383
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492847AE57C85675CF04BFD1410B56E616F
68C3927EA7267C0C4BBA87AA3EC7166170B80B7355E802532D38053D427DA3EC
5D297AB110438F9AA9CEDA887E63AD877E9208260AE6AF24100E2B365BF89C5B
679912C69C51E8D0541100E3DF71D501F4BFA0AE8260EA4119883BE0E2CCD156
1113CDC4983460A31A70C6614DA60CBEA3A564539DA028D46BD8A6C8E870451A
F92C3A3D555E94EA81503E0D53C0AE8AF190625DF8F48C433C5CA5E61B61960C
10E340864F2D181B835CC0F9C87C9CC0E95FB3F1824BF5ABE0DA3110FBD87806
4770B0F94B263E2C7A3D9DF14D9BE01BEF9882A1EC2C8DDA5931F895D02E4FF1
CAD0158061CC26D5256590E51541844B9AE3A861D6412B59941B7186BC31AAD8
9CC7F07EF9A36CF5C32F54ABEE8B83306227DF64A1F4E9B350DB04B85024FF0E
6FF4C8FDEECC5DF7106C24975E54928A3679928D4D84C98B3D33843CFCBD8AED
A1A74438EFDB0BD68AB2061EF46D65CA446C190A6BF6E0D8DEFA1E8EDDFB5541
473187ABC3D34172433CC652E9B2516AD0EEC9F452135D6AC8D97A90DD4C972B
69C05585BD438731D0DA714733FABC30765D6775BB68C69704D0BA5D6DE6BC5E
10342040FAE3CA1C359295C7D2967195AFD2D94BADCE1E95F17F0F95B5A683ED
8DA83806CBF2B803C94B5A135004A20823158454E29255E8846AB1AB9E444B82
AC000DE047EE32B5C7659AA3999D8CA1D3941D1FF042DCB7834420A2CB78723F
B40B625D7418A892CFEBFF58AE1CD0F128156868B917147969EF8319C216ED3D
620588A8D3D13C4737BB89F1FE17EA91AD0A119E1754916E4957C40F7642AD75
0E847F04D456B101A89F4E76E6BD785EB1F605D78CC0AB1425CEB017B47C1D40
BE68CE2BB94BFFF5120F91CB493BAD5966F870FFA6AE560AD6A82C3B0AF0C810
C12CA6C41677519886FD5CD163D6FB351E2918F4E5B5D5A27FB8E57A24EDF9D7
42EEFF2C7558A4479E25DBF75353BF0CB3E744B9009BFCB1D37E21EC06E4D7E0
2762A656C0E348FB75DA17FAFCFA53893D1ACEFD8C3EB97C9E7E5C3C5A303193
004DF6B0E2446527C65DDDF917C6C8B730247D89C817FB276D85EB671AD64DB3
4BB09368AB12D82CC4A183ED86D2841E499B785084AA21B81AF837A206A50773
FDDBF92515FD7870D5A35EA64BA957FB2F6990DCDDDF2859681D7B7D5566779F
26081CE1DCF8FCBF985B41005EA0771D928990C0BA6CB7E33875B819AEB1EFE3
7A3656C9B2060A89B3D1A0ED127FEDDC4387DDB2E10EF3FA3985EDC86947215D
585BABD246585FD44C7FFBD5B878504A44F08C38AB4A35ED5CC53EE38F810C49
4CDE233ED8AC7E692EDA8CE219D733D37296CEE1118362904F622FC22656FA58
65B5E26CAD7951FBF3D7B27121FF01DEA6F49C7A4498656B8A12ECA7752E0477
CC7F945AA8CA30ECC8B017D3365E4F2C4D6F555DAC9A6D17C263F63D55D6424C
58ACA31C6B17A617B342EC92A2FB13D4FDD77DC3A85B2508B70FEF36DD289991
A16B4097497EEB38F0274AAA1341AD3BB645B0D7F97ACB233FFA576119456D0E
E8D5F85BD47E3C79CDB4AD769ABB374D1B705D61C428B44B213057725969D808
B280BE2A969D2207BDDCAAB6AB26EFDBF7E27A57CE61292AAD6582B3A661F4D4
8AFE06644856C8C9DCCC07407A115D6D45B7DF6929B1C79277F3957EA1805B97
8529CE833B1EECAF947E67DBA704AF3F29618A894235D7DBFC1153A5F74EED26
102EEDB139492E743E82CB61CEFAC99D77B61F60FD9B0C1645E399B20090DBB6
8DFAAF4C6C1919FEFB6E3E8EBF926C2A91C5281153D5B28BEE5E71772C8921D6
9D11ACDDE095D43077D6D8E8EEF114F60F85935BDBDDA3362A11E0BF7854BF4B
BC52EAEB261E696CD413485DF93CADCED318B5FA421EF0BC594EFBA262EB2C41
4E43D8ACC9CB195D12F3B2ADBAA0D95A443F525372BDE229F13C485324C60FD1
D7DFE515B666ED51FB61F69E18AF955D6620C95021DF41F66204845581723BB6
B76B4C3C2E2E5B8584AD015374BE36AC1E08E1C53C079B8BEAA3E0F907086AA2
3BCD6FA9812375C8E8D4ADF7A319E9EAC6238093C798878E5D558B30ADAFC1AC
17B04381C6754327FA7C65AEAC1A2839A9FF799456B6E5B9BF421E82415746B3
63938E88CA325AE4BC6B36475154CACD25A07C74FEAA2928802611B4AAC8DA96
F7CA93B7288B2491380B2F4F87646F6BA42247F5B593A0787ACF533199348D11
730EFF7C25DD5ACD0221075ED47DD6FE8909C387D8F02A88FD24540AD71A0FED
2665CFCF412B99167152D35BC0E671E657EDD876C39BA0ED4E790A79D8AD6723
4A2C9360790E4981671E3F898A1157850F48A5E0F299DD9078866AC4AC771A7E
ECE3275C26835080FD2AC78DE88BF65298A8EB4181F1646B5867D0EA3446F4FA
176517141B75FA51F69D54478E279EC2855938CB532FC260FEF5CF3FE05F4F6B
1A6AC463C1D1A24E7B41EBAD57574D43E06E13690F831AC63F570D466C8DE97C
2E08CC01056475E95FB467E2F3B08917792C1DAFD35FDA10C0E14D125C730ADC
BACC2CBB9BCBB0BB982F75ACF33109F8AE7ADE4954D0B1E1802506DBDA73CFA3
DEC72E83650F240B54E88E51C065039ED16C5B958CF632FAC74FB900E04B0B13
B26BFA8A80D5663FAC4A5C3CC6895C0717E2271C6A3F722B2F6C2CCB04097EAF
EF211683EB8F6FF2306B741C9455B48094D2958B832B76458887F0FD9D971D2C
75AAA237EFCFBE0F14F797E71B0E19D074858D2BB30FEDEF6C34FAC40779F603
770BA127BD4B9E4F5EC52314B25837FD118062685FAF4391CC91AC0ABAE56089
30E599D101B7ECAFC159AC2335D6DFEDAAD93A074010C5626DD9470582E82C12
2DAC32220AEE7C75A5BAC24E9E43AD56BA6B5B915CA1A908C4180B7DDB99E3AF
5C45072D5FDE12DD81276D7304AFF3059366F293191CE257782F236FC2299F6C
60070DD031F172CB2FAA0C0BFDAD40BD3AE7D647B0FFC9298FF9481A19CA03EB
E2F1EEE59A3D6E3FC23B65AED24295DFD94966CBFB46E98286E8AB5BBCC5A8C4
31D8D7BB6D38C459ED7811962AD08A130D7781F378AEA20293910A7716341DA6
4093C33CE11E30603EAD00851CC85FB116890A7C58F795071033711947B65B0C
07BB7FE129E446F1A58F097CC13CA9BC695F782ADBE50737CE43B15AEE7EBCB9
0CE9D7EB1913D307114496116FF0087A48789461E310DE9062984F6951B5AA2E
BC98536501922114CBB2D9698493EEFA925E555E776D6916E68159716FC183FB
83834CA958EF2A4210A873E6F7DF8F113E86D87F7B364763BBA1AA81F9D7B871
D7EAAFDE0578B3E819F2D472E963C4FB539A61127D80FD783E271DBEDD8994F8
A2E9F96F4F81D178EDFD36B63A9E05D8F4BD13318C16396253CDCB9E1EE7A887
8F02E0B498DE9C1A5F110347B7B612146B59530538023BDA6569691729EA004A
3D96F0FBB300F40752DDCE278F26B5D50F9C8BBDC7B3D5D144869BE59F0BE9FB
57853D65DB474E4CEB98EAAAE80FEA3557FC29E982F4E43B182BD85FD6FF9604
20E3B5F8A1C120887EEDD7CEC677E95307847599B02E5AF54BE91F662979D0BE
A1CC2205A8493A22D252AEBA66664B2A0FA2AD5C2BFDC446E8217D3E5D67616F
A9C8D25588F1689221B896E4663DCB2823847EA18AEC15EB3464CD20830192E9
FA76A8D8C8454C7E9ABF6C0F725BC64477D228181C86BA782F4FE02493A70F60
73CE5AC25BF5C0579654DB07E4ACEA3666110AE5DED90584F99E14B24C7F8229
7BA7530C442B5E22F23C7CC8F7E46228385681473BC971AE241B38AF02B14565
A533E6707D255BB42CD9DF0629D03971CA5998C47A82E39690B59C49C936C145
CC25F858E34B6D27E13A4E773B8D621B25C8B8A3F6A927E3BA6903B35183A80E
B555699747DE2975C0D60DFF13F4B2BFF0C2D48D73A369A4A30AEF829A5B56DF
AF7E3886C50E125D3838DDC8AD6B097AFF22FA89583F307499638173A4543C6D
27822D960AC1783EFDC753B71A0900E9740FC2826ADD5FD8FA44B8F4493AEBE4
6B1A95FF11B58FD6F8C64EBAFE0814DB9D98B3A4D7C75B9BCC81BC4C7C5B4EB2
F0BB2232BA259FC908247A47D56938F3FDF31D90D46A1124E27587935F9E83CE
1430E3EACFFDCFBD4F291D8D47BF8B69F6F59CE04301BFE7C33A8371EC60CA1E
C6E086E9B7B057AA3AE9D82F4D1453B60FC1560BE2F0BDCD3C5F4602EC0964E1
E28AF026A9FD1E4BCD68D656301406C1FD474D98B7555DABFB9933BDE94E7B47
ECE15B865346D956FA91D2C2028FD64BC5AAC437310F1A7D586CC05048684AF2
7EF3C09F73527FCF94D46E085D6B51FD3EDDA3EBD21CB5B571D21A64935A7A2C
587659A74FE3CF535DD1901154F701F3FE52F9576A0FA938B0A6615694D1A837
41D4F258C06B008E5CEF86B63BDB575DAE9F7E1E55AD308CD97CA63ACEA48B66
6F2A639E1FD66B020C2CBC5CF51F32E0F85CFCD936B00928A71B769371B2366B
CDCAF59B1C2BB8D58EF2171FEBA2728C2B0985C065194465D1DA737BE911DD03
2E8B51C5A80C5C7238AB883E083EA59959A3000F6492EFD60548FC8B0996B192
D9CEEE79A7012A045FF72E042FFBF8A7CFA315D2A1B0FA5117C21FB2DE99DD2C
1C515AD8D2AF4ED82E1BF056123ED8131724F0C8DF5E8504CDA09408587DA7A9
3B760B3D6A6C9D8552BFBF3E3BEF576906C3E0A204A8F86CA2DA812DB4F23DD7
676EC3BE949F7AD05C717514E523E0440B2254E0962A81910C6EC8950DEE6B6A
9C306F2B40E28DCDBFEB8719FD1B960C1297C7925F24BD5F1D9AA016E3419AF0
E9E6D69B9452D47689B24A6535E6A04D18A0E3064F5B674211447D44706674D6
34A37B2E3DDDCF25F9748E9C7C3457F32359513A8A2AECBCAD09552AE8213873
2AF2EDD4215BBA84E5FE4C18CA96E889C36DAF2D9A65E1FCF4A665960E5A0AB6
86F9AE782F6A1AA23FD70CFE0C2768667D456D79BD93C1F87AE8E2EFEC6049BE
AD2690BDB45E16CBC88E02E471759DE406C018F9EE020A5F6C02176DF5B9AE7E
63DF2BD3F3C6CBB52E5D75AB74E830939CEF9EF8A94E89AEDFB50EC74C20E497
DF7F8B51EA86B1D6F5D713EF85B2DCCEE85F7A35F8246393C202BDD6920DABD2
DE584E5A2FA8061F68CCC3D5063D001BA3949F96D12EADD820721F4A9C360505
0501628C3994C49C54795101F25ECACC2C965491B245135F08746EA00A28484A
FEF77CB101565CED14C8ECC6DF72B8D560BEF735ED052622E6770150DDE8EAD6
7981C7F8C466F3C351EFC4332563944D9F0B39019E61F6A967212A94B65456F1
3DB459A5F8DCEC48495F00E02C48F732ACEF5D27A353C5CC3393B2C32E6E1F3C
E48BB89C85B9B0B2622B0351BC30602EBDBB815DB969781F9C6B1CEBEE69CB03
AA08FB060A2ADA681DFD540B6C1366F6AD6AFD1AB243502A86FB184B3F8407A3
7A4B011776C7A572D2FCF18871BB569C2DB5B8FC1C56823C9811B3B5ED20AD2F
E457E763F1E38A6ED91990B27A350233112B0A339366B7373CE058456E0E1460
18F693BFCD7FD07158CECA1F10A5D75C8B02FB448146ECE1F32E3F90B51313D7
430BE1825C90D88DF40E76FAEBEEF1C6D4E507FE6C285D244462E06C90DF1FA0
2FE9798974079E36D67129C17A6FCC288B9CB288231E1169551E1B859901766C
1A7C54F22342E068E261FA07D7F71FEEB9CF08C2BAD47CA484F64080B76D7947
EFF831722F16AA125501337D3D039AF45D8E99BBD874DD4429221164AAAEB4B0
BE5CE51D102BC0EC8B0E3E69D117EFF571C1B37599396DB70424C67B69A678C8
D5CDD137A9E80B4EAFFD8C81AC0484F0C03336ADBFE356DDD6B35E3BFB360146
2693C32FE5B20E2D3CCCEA810BDD12127EC21130215516C50BE417BEB7108A77
DE7108D85BAA9D005115D8D1E6F076EA41F64539056FD6F12A603AA2DCEA355E
493D7A642A63F8C286FC69F1DE5A80C4C8B98B9B20BD03520B38959380B6F051
ABBD09BD9CD5004F455D099B398EC368C55FD0BFBB72346513081DED184AE12B
B6F2A0B8B954C1931A423352ACC356032136221AC340391697A1B020389DEB88
41CB34E59B660CAF50371D6FA4D84359D5C57E07C0131287CB8A1CD7229ED655
CBB2FC2F05D180DF588DF93B6925100D074E11C6D2880420219E3FF5933ACD29
38305FB7CDEFEC635C4E3E11848D6943D5C63D07B8B577D80F66EACA440D77A9
179EFA630BBC9D924302C969561C704F60EAD3DC1DFD8ABEE459FDEC1AD8CE41
047A2A4284D7A08F95EF2F9B2355F42C0201BCB01465B2BC0429162BE040639F
2EE9C0FA967A2666CBA7AE6E3F2757EC5A6B046DCE9DB8F8CB66CC726C0EBD7E
0BB5ABE6B5DE82FF252600C67408DE17270E0A6B60951CE771C000FAB997C869
9AA219CB578D5384599625410D9DCC9FCD627C9341EE5EE7B62160EDBB0475F1
B7E81EFAF7223E9D7B39DEF7203248BB6D5ED9A55D61D2D8A66A55FFCCC8EBCE
C593DCDB97D883FC87418CC6B88C5C7E080127212E2FDEC1CCAC426117DDA7D5
07623FCE556CFAAAF11A5DEAB4A0A12E2C7221F8D06EAAD43B675E071A5052BA
0E3B73895A45C1B6C1465432765BB6FD433DB543EB9CF74C2730621336930A74
2028FB422DF59EE85D2CCF2D8DBB400361FA1F9F3854C9EA86DA22AB40A3B388
6A6C0542C01CAC614AD832E9CAAF95CA8FB8D7D6F8E6B1F1470D1BFD1C6E4F5B
3F37CCB5C6F49F964FB9EDAB8FDE5AF3B0271B0147A8E7CF22C48D74DD85E83A
3C976FE83802D4CCD92815B69D985F3B1562AEAB09969F261EAB2991CF141394
3CAF186B136B64A55AB66D790A65432FEE0369E74E2EB935991C9D7A835EB88B
C04EB2B195DE98DA506D8AF6D5EB3D2751503DE9FF66CE21FD3F18EDE6972EF5
476A0448CB709DDAF100179C41CDD34E70639018C1D94157A631DC2B95C562D9
F08098FF6D334E1EA12831EB854BE550341FD8E4CCA7D7A3E18478AD3F1F1627
C7226A19500DDC798B57B6D7B7724B92BD48CCF7CFA30A7E92FA628D056602E7
EAD96F26C67B2E10B620750E2C44E5CB9DCE747E296F7E721CE090148AAAC9F3
C2A26C00FD63316B1338F012EBCB1549844D1A9F70EE29B069A97BDE7AF2209A
9F760CD4980686D6A0CA26D77F403C06D65B7394BF1FC7D06D3CB4D93CBC1CFE
349AED0167FEB6593EECBC997193BEC0BA17470659666D3DEEB203D4F89B1D0C
9F483DEBE503150EA72F5529C6856A2ED6DEC7F70D115725622193430953F8EF
2124C64E01DE0AF5CD890470A9A5F179902CD32D6AEC688F02A7365B66797DE1
EA02281B8CC461A2C93D616618D9CA254878ECF291309CBDB0A9F287067554D4
64306A44A49AF8095E431F91B8EA9CE5EA5A6AC021E852C3A8F8B27BD5EEB828
B2BA0301AF9EF77428F5D92F0D318ABB61FCBEE8E8B0B00C0CD028FDC8D49ABA
27F0C96DFFBF5A41C82EC805FC436052C08C11F14B3AD58805DC0020DA959EF5
24B8BE47F16C08B3A3981E2644AE0718BBDC6A43328284068B2AB05CE92EF92E
2E897C1AD9E6A375D7771A6AEDB0E02641A97163CE1760E7B2BD1AB594E30D79
7581F5A0E81AB0F7ADA1991DE42B2B781312D14C0A9051B17B14FB582DDFD9FB
29BC4EB03896F32CE12BC890FE786622570A50401A5E45A38F0A186733A85239
92CBBF6DFDED8BDE4E6DDFAE37DA6564E63E4448BD86AAF678BCB0B56BFF435F
C4E4109DB382F2181EC00A0208E0451F6B0CA3360AD99CD656E25305A846700E
91F93C1653145AEC22331C2DED3F4CA87451BB8D3A8FD9FA7E1522A322816CE6
DE933CC81D83A39CCB7E05896DE7069693EFC870CB86162612B23A4316EA2278
A65E36711CE80A4360D829E3905EFB8012302610AD7CE0DC20FF7AD70ECFB5C6
2C42B8B0B295E48F873407D8ECC2D0DB427E8E9D7FCC7FE4A04027261E419451
5E87FC36485599FBC9DAC6933B8A61A1267A07C80F9ABDAD878915286731DE01
010A7C89305D2E3DA554350CB8CB8E904E7535440A065493480FDA1C5103D54C
652E1387BD302832DA3B044A853EB94D553D568AB7D8C63B4FCE2D86964B7DF3
0DB1230AA9F2676882927A517090BE92D4EDC366D10C640E2BEEA25168B07B49
F4D258D6E0B6EB6A57B74E63A3518EC7667E07BA5B2FB2D7E017CD595009E52C
CEA351BF5650FABB9895623BD4768C31E35C395C3BF67A79F8B1AC292F38AB2E
F547DA895BB5B6E1C1BAFF90F1E16665998AB7612444953E619153EBA5E4A91E
A73477B75333510D419E477E7AD9D2433C7E7C3968C89EA69B3D0DAC30D4B655
52E3867D63B89B54CE628FADB2EF290290F23E9C3698A870C13DBCE5203128A7
7567906187C92C4F2B91E12092BBFA9867B165078A64683C37CDDDA453154EF4
1FEA71E4E811982F7E0E9E9EB25202A01894C458AB9007A524E4F3BEB8947E8A
116038BEB06DC30ED8E89BBDFE4480A36CD4F92F867E6C48ACFF17E976B3DE3B
C15BA502F6F1BC4B4589AFEB2C75EA7A1E22AAA8F03A4588EFBDF346148A60B2
EF074B9F6D550FE6080A7F4735504B58E07898EB92D4F0EA71ECFB467841EDF6
F53A943B0997BE3AE95EEFC0D4F5349BF23EBFD6F7D9D4618054064D0A6D0235
ED4B346A14E08620C282FE1094CC0EA2676BA81D5448A78AE62F82E58BCB9BE0
47B377F3257BCD12030D71140AE06B4329157208E3B37B9CE3F1D0C616D951BA
702DBBF98024CB40D1DAFA83D894B657908A112B91C0E426E31761BC68186C25
AD5CE0BDA86D6C602F27D4D17370D21A96AAEB8342C2773CE38E1EC3132A28B1
5C075DA951F8E47789D55B7579A895A905D0DCE8A41DF8804A6F855C349652B0
F2EE315A2ED05A5189E0C5A31E35448577FCB0CF36C3CA5680F622117252D1D7
2A6D9D057A413F748B33FCD51D6CF5DC1E2B1CED5D9B69ABB3746877771AF7A6
0BCB4C0B890E4E8A779653C1E96E17AD82C65D792A9F4A6E1D3A4BD9F0B7E0B2
8447E741364E315E7A1E493A13C6F89B4DBC3027B3CAF2C6EF0A5000F53914FB
AD2DE5D9D36A9AA32C283B25D9E35BED54243580FCB5769FBCC991BF7A13A3A5
BE34409C002DCF2B05C095A1C272A8B534173F947839FB3654757E4DFDCE1FC1
0241AD94EB503A2D1437C4008E97C76D74AD430973E848F8454CFA132CF54473
AF0AE80410C4FBC3A45FBE3BA4418FF63CE72DAFC207F82CCD8250F4BA04D50D
9B6D7AB5280337FA5B49AA4D0AC7248E1CB5105749E30C15E1C8CA95279F0DDC
C564D440B4FF85F92448D42014DF2B22697002932576183606F932E5337D2E44
7C602C3B2862E6553F6357B54389C5E44E2817807494BDA2645D0FD91FC847E5
CE09E60F0839874318C8389E298F554671C80734ADD9140716CBF1C5624422FB
5D2B891586DBA349D378D1E3D4AF398B968C9DFB8B3383BF9817F355C5BEADA6
8AF61B53AFA57A14B7F2D4815E0733979B9FE7F396DC883022A7F459CF47F6F6
ACF7812C886C93F399DEA8D8A824044819A5F8BB070D16A44EFFBD0AD41ADC94
59C94A47A9FCC007F910998AA28D18D0C0D347BD4A22E7F602498AEB3445D8CF
8CEA7FDF03568AF44E2EE4DE7E9775B7A95B3DE028283DAA7F99A55DB028501D
5255CD776183B075036DF7634B34983FEBFFFFBB7464003CF08D8A125A27BAF0
BFB58CB89C444F4564C1ECBC4CA5AE10BB3E2B65D78732C40F1F4B6614F932F9
8837F999C10772520647FA07B7B6A0D06F3C5A9923AA703FDE1724A942B2DA26
4DF7A88FC29DC6E8BF9A9AA611233045CDA79CA11FF988ABB796B6595823707D
1A37CD0C8A8A0E062F37B10826AA7F8D15F5A74F536B4F63EE567924173736AA
0E1ED55B70BC0079CC996AC611A934830E222B06854D19E01AF0301997B8F6DF
9DA616F6D521685CB67A8D7F27643D015A4423506A9A2A9E1CFFF120534F7077
78863DBAACFDE460906281D5BA5ACCD188EDB290DA5B8055D1622C478F8FDA34
2685F858DE3F53F1CEA18D2F4891C970A04C42CF7216E5DB8CBE124D00B4AF86
4EFFAAB871ECDD9C87C2352AB057C78C12B423635C60AEE5C82C9F43A7491015
09FEB31E38C10077F1BAFD0E1F114F695F5FCDB616F45FDA682823143D7430D6
5217B609A365378685B85A9826CBA11C00F4BCC269C84754F7BB1FCB5723D669
53BD9D0A313F39A6A3DAAD30374AA19514DBD893D279F20F49DC8C5F2C43537E
DC6CF4428CD1F4516895203B8B15293B65444080B62ADDDCA6FF23229B9DB1B4
B788BE82AEBDC173307D77DF3F66505F11BF1A13100AB11746A2053E0C5E6E8E
C7D1D9B54A573BBA224E42869DDEE75801F5F379101BE0E37118C5C4CD3BDCB4
7B5C404D62BF45C7F684E59B9AA6628DE7594364F1A56F65B8FC21FEC40F4059
C2EA3DEE94D79A8FE853BD9EAF321A2AF2256EA0675264922F9A98E6FBC4C35E
7E6F40B4A6BEE3B6989C474D1843A471576D48963927A54AEF3F5D38202A50A8
3FD3C8CEBEC959F88C7AB2E251292F1C935F264BC41873E40028AA8F3DD3F0BD
70AEC3B473C5EF5EA99AA922FAA53D9D03C54706B5EBA2142EE89817433A4A9F
9F19726277ED18E144743054DEF0EE8EE1EDC4194F1012D8BB958B6940681AEA
50C11778304F60092DC6D54944FAB3AE6F055641C5D50553D115033EC0330451
8C35E55502546E62683AA3563662CBAE642FCAEB99606BC079F3230443D11313
D6EBB93420F14FDECB9089DE5CC2DDB60A534461E5C023C137C2FDAFEB3D39A3
B9FDEF15DA1F1505CDD37755796CD5FBA5E25E5E97328618BF64DE4BEE2CB0F2
63EF782C0D4C7120A3AC5C7AD5348F07AFB5F7A27C2B8D494E4EA141C166C711
C5DC5DED743A7ED41E852DC45BCA016BD8169F5A87F51AB5DDF2041BCC6827E4
5A0370F0F2D6FDBDAC994E26E01B08DA208FE08B4C78C603DB2E5ABA40C4DD94
9D10C0CE6B2EEAA9BD1E83310FB2CBF3D51FBDBAC9706CA8B4D3FD1F68A5290B
345A721122FEF6C4B721ACC874FC2BCEF49359244D0E44C3533C0356C7D6AB6B
E4CCF1C2A978C9A8DAA2BC54439B2B53ADED366BD57798F0A499C68E97E7D0CC
D7A1A6215EE09FF45F2D070A7FF5391AA9BB2001FF877045A5D34BB1847473B6
50C674E740A1D13FE57614EFCABA99498E429AF9B1DC692F852BB697E9DE42E2
782FED4B850739675FFC9C10517B0D218C2C21DC0F3BB8B3BBDDA722C42CE163
3636307C390FEA9AC4785AA1A2B368DF676011E1096709BDB6D8C9510DBF277B
31B8BF2B8673F652833072010FFE6F743B14204876579A1A5E93702D6C388DB9
A763F1BA3386E051BBC1C7FB8B5CBE3D295F38E17F77E7D5423DBE0776FA1387
D7DF0DCCFBDA67F3038091B1E0C419DB3E99A2E08D6749F21CE313BD5A879274
20ED677569C646EA23E316AEE1EC29BA8D4A7B93238FEA7AF4618DA0CE348EA9
AD3FB54CC715CB71601B9785933E3498B2EFF70B8FCDE2984F8A0763A9D322E7
93E01F2C158167C6BA509BED34E0B0DA099434D7FE9074A7C89ED4BAC0C5A0DD
EF52F121996E2483E9C4F22F89B7D68E527DFEC6C96CF09019822C2A7402CC77
A43C03ED797BAA3658B8AD58435B34B1D7D501B561D3E182D4F6E18E43FB703A
7EF38F9CEC2CB0BFFA436CB8AB9D2A83B1A441900C9DFCC0F7FF114C014E1DA8
00226FFE97D925D44DEEE670BDE0278B68EF896E2B0FE4E7F1CEA0E6ACFB570D
76D01209F22F4D026A3744BF5BA2E45C7979E01325199C2F208A02EE453F545D
C69D66B1ED95F48C420A8C664C6F732F6D1E62401C3DAB3E3D1F7E61738274F0
A80A2E23211930F1C5D7F231365BE2C51E7060E5DF213AEA97259581392B9BC1
71B1AE1279F582DA9CE6E3788194F96259F8A07ED67DCE8B5ACA00EA4C0D6EEA
27522E182DAB2869CD2C2B0F39016EB778060F30BE28C36F1608E534EA5FFF06
387DFD9185BD17E8FB9C4C5E00E1EF6358A8DF8CF7B4AF6BF074A9EF6D192C26
D1D9514847DE88FBF2D6B94F121716D1213028555F7C991CC1098D1C67406AD3
3743D470DBEC0E12B5AF108B0A14AC3F8338E1910099477D1947FD9F73121450
490158098C9B50783AF12CE3933E56B7D7F0924FD66E0C5C61A99AD5D3EB1D83
3359B4088B7941DB0DAFB6ED302977E6E628C7B107212B363F9ACEBFBE088760
48521F937A458A63396A578F0213154795DBF03B3EC438D3DFB71B016A8BB6B3
15DE7285F1C1C23877217DB6C8F2F209C4EF07C1FDF20A19AADB222DE3723168
63FA73E29895CBABEF51AFE1EB024F24F6FB7AD4B198FA774E9941C942A3DEF8
53FD48FDC9E2F2A7E638E4C5134BBD646BED8080D44243E74485FB8223624EFB
24E68D7D01B39F4C5BB7FDBD12DAE03DF457371FA0A0C5E50C20D2B4169ACB7B
7FC90ECE99FD80496C271745E0FF1754D70709127DE32FE92176B964274E37B4
50F6AC9A2548177B3196BAA257EDDD055A37FC3D5A6F2D69C3B9F084C0D81A91
2ED19C84EAAAE99801DDC5B98E854470A8956B7B47FEFF3A2D6E11BFCACD6149
A2018BDAF303AC2C71F002337E8D937DC25E40F84CD33FAD82EF2E92259BFA98
5C84CE1C990C7E6582F2649DBDBEDC1D7E34B08DEA1708E447E0C557FAD8D550
A1F61EDF70AF158765EBCD0BD1C62E95F659D68F0D69B85BA188CD220301EB5D
FC9E470CBFCCFB150AE9088E7695DF1256ED61809DF7154DE438CC9B047350D4
E144978CB3DDB03E2BD4560CFA8939B28C0A8D519A14EBE05C9E7D6230BF4976
0712640A13A2F08F4E2EE1CA76CA30478B7E62D6FE3460BC0E3DF91BF185D6F3
04722BE1AC8BC260CC0861F53349BE708C700C7A059CF84E524FB604A7254D6A
989E8435E1EFBC993E65F35BFFB3B87900F13C8421D9A324AF3AE22D205A7177
6BA4F7D9AA589EA430D93C4D73E49E2C081C02E858E799826074A3240221FA23
F4B276CC0ACEC063A11386F33EF97FEB62D9AAD1AC9131E0977A667FDCCB62BB
7A6B67548A4B9627E833A471ED6BD9A9125787095ACA9E34C45BAED9D91FF93D
A9079975C07EEA977B58FB6FA47D6FFBD7B0C78E1B9C0308C3A7AA2B86BF0EE9
423004FE6A55444F73179FF7A947482C7A2964614E118F0DD0C8D98F34111D79
F914C5D078497DE59442C9B145C14431D1C5BDF285725442FCA8A2619199A7B3
7EB212FE662BC6ABDF1EEDEC714E4092CA46499AD8F8BE7C188ADB96CD8A4694
0A28DEB1A00DFEA264BEF51D3BFD6CA2C03CF572AB5254418769E5F6D71A96FA
44206A8BF744634181BB416EADF9701707E3DF10A0620DCCFD580BBFFAEBF464
F10AB76B8E34E6FBEF295B471895F59CFF9D60316C88FF71B10431CDE14991BB
B734596379A991607836C6EA74BBC359E962D97D22F9745EB8116997922900E2
D18DB4CCE2A8C56DFF14B2136784AEDE5DEABD94FED62AC9011BDD2F8FBCAF9C
35F75840BB90DE7CBBBAEF04A63163B475A2E4DA86F5245F15CC6886B7B2C92B
73E30B51AF203E1428B73BE02F17A1EF7F9ECC8FCC2114672815161A4717D101
8828D392C555113DEF1F1071D30B72DC502339556022AEC90729A5AA2EAC9B76
1B38B6EEE8D7A6C0CF092426F9A7EC8749150CF622BFD0096899432E7DE98F0A
BF02CC1F8F9012FFF64519AC08E8808A6438FC725F924EA2CA8819C76BF619A6
CCD9B4555EBD9C92208975B86A3202B8A797C9CCD0C2CE6790EC0AB476685181
CFF65056E0A42A57AAB055CB40E4E9E7D36B66734DCE4037D20743DAE783C43E
8D90B3046343CB6C55CAD6C6BD81AA13C12CCEC280B141ECB6A16CD69AAAFA97
7B24A236113D9AD89A77321D3191D31EE5DF171BDD1826913E670CC47B481988
F181254792DD07EB024DFBBEF46B6B032A79A9C40FBFA4D456E69A280FB2D222
3F75FECD6153A04F572476988A29D6DF53F10D1E06C112600DEA9873F9D2229E
C55555B43EC690BB8AAB694E5ABC99DB23E2551235CF39CA972524532831604A
C34F79397B1BFB2BCE102C0F60A9D44BFDB89E43609FF2712CB1BC050DE2A07C
DC9A30E0EF210A2A482229F3800D646DC77257AB757F0E6E96DD1B676E471A8C
2F4561E06E532F1B2593FFEC3A65D759AAFB2348273E878D055AA0D4ABA296AD
82D4A23FB5247B3D9DD213414D57A0FDBBF84AC238BB090591A7B115D07B2290
7849C65F6BB4D04B05FD002BAA69490D6423C5ADCEACD90DA68DE35E11ACED26
CDFAEF48822C0021F4F01EEE5F36D22BDA83A528EDC4FB89AD23D5DF3C0A20E2
EC799FC03BC70A6988F23E723C1217FFBE65C9CC22D9061F20989DAD146DC861
F5C88B4FBC1BE86732E3EFD5C01936F03C32E26E9752568586AF8F68C03F7BB8
4760F8B9A15A195A0ECD0A33E8B690321E1A1C9CD0469129CA4604694D39E05F
5E2A6E41C89C1595712A7665608E25FFDEE9C1AFF879023A531B9DAFD7FCB24D
27AE433A67A2DB43B694C9CB601C5E0A8D4D0CE1BD434811087A6822091EA6E4
EF18A5FFE4E1EE543017A221E0D6852FC5195AC9C4452B1E75DCA5541F142228
B0C12EB1D560C7CF9F51E648B89926C2F4403291331B58043E7C75C919438F26
55614E7B8E44EC96CA2888B4716E01A0C77E1A3E891A8271EECC30969A16867C
C0C6DE51B9DC0BC11B473DA744A2E3A8C97BA41932DFB1C8573B7FE986CE07F0
B4C4A9F32B35D92C442C09000A975BB28C773DC2EF44CA4FB26D81AA5C3C4319
D62F52082FEF5EA02C8D632CFF3338985CB6E27025A2B2E6DA20C4EAD64156E7
DF589E4AD7A8982DEA94A04DE7279B373532151F0D3233A587D0D8AE2D334D79
9ADBE6CA53EA24BABB553554F3A1DAF7BDA405F526B2972C7475B2050C9AE0C1
AABB50163F8579821029D1A9F2572FA1FC99EB63D988EED50E08D21446B894F1
5AFF2C77E0E26F3A57D5D59402DB2E7732E7FE06C896F1D8880CC2915A0EE545
C2CCB8C86443DE00ED69C1FA67D6AFBCC175BA3C225B31EB1C2CC0B6D24932B4
BA9E38F9B12639AA9479EE07FCEEF93114B017407E46D6FB827597F6250008F6
765F383FC08B12FA2AC4C9A4CFDFCEB7119208B73FA8B6177DA7009DE4150228
4BF171E3B00D8B8640B4ABEA9B2539D9060CA9798FB025DA6CFC2069AB419160
86B8D56270383077FCA233B12925D37722A0B19789766B54CD97CDD47C95F9B7
57FCA979DC0F64EDE4919178C6D502B9E480534D970E43E93A0CBD60F0B0B50C
FCBFBA3A601BFE12A09FC60B4E8D845502C1D7790970E2155201A3EFD273A2A0
DC843097C71408FD1E8FD3CFB2D7E71B8FEE0FEE77A69FE22045289141E4EC02
26D5CEC00882AC5E87829C9E963FFA88BAD99DA00D5AE60022E7E41E25910E3F
720F656AE10A247A60974EA4A3377B0F9EC206A30C3C0A9AE33C3BDC830D9C14
98CDD4F894A9E0694F24E6D6E0C0F01EF8BBB9AF56BA90F13E31A3DC0A7CA1F8
47E96D4006E37E821ACB506E402C247699A78C96DDA031F994326E2E2EA9209B
C8852B54A0ED50B329ED72DF82CE5C1EE629F05EBBDCD230AEDA4DA049C697DA
517555F968BAF33861CD7170BEE910460F922607C5EA10866DB4632E066B442B
6B4BB3065BED39562DDB58FD70341A875013CCE43637B301CE207425A23A0C75
B1B5299A96D52848FD817B7124AE9568BD4447B2BD1ED19AE6BE3F0100BEBD7E
AC9386CB2EC997C59EBA18E25795CB30B1D10EDE420BEA756D5DFE5539C67B27
D089B13D574C8514A64D2CF421E43102EC16763EE0F5092BFF159AA7EABC6CE4
CFAED0E1A07845153B6D4F7B38E7929B5DC49A87F38B819021DAD91A16515E78
7F70CFE21F8D70819475E9E4A53BA6CD4FEAEDCF8266D724C7E2FFF41EAE2D40
4ACF6BB7EB6DC6485DDB0B7F900AAE0FDF1327BADD2D9EAEFB80EAA997EE3019
B74437373ABE6F81E7FDC53E098A177850BFE4ED282B69AAFE1BBF1E6374C1F6
537E6FE2201FBE79642401DA466B3C72A689C1A882D94872B951A6929410ED13
AD11F79CDA59E5C3AC1C8F3C53D7607FFA2D467EBF09819A28ED870E4C65AD72
6A0E384C9896ECD166801C04A02CFA5D79BE87DE6D8125514B17A8D3AB259B95
ADA9944CDEDB8CB0483DC7959E640562BA766D7606BDEF7D42E01EC26F0FCA4E
3C7BFB90BFCBFBBF212567D948F6019D47A36B4F32E2AE2F09CD2EA85DF8785D
76E4D1C8C17952E2001991E35C1F4D2C01BF10F32B29EE4E0ED03605C7A76B5F
9B90C6FF14AF457F5BA60C787EEA2C630B41FA50108D952EF12695160D4FCF50
F09162D768F0853B10726D853C07C7486F50BB7207091600392980CB3113F397
D73A1C0A75C23CB6B8408E79C7F00D978E524A7E85AA61250F2E2080660A2634
D4A4EDF0D239BD5B2E3EA9CA36792828BFFADCB21AB20FB065A1C4AA82D8AD6F
0CA12D360EBBEB36B6A36EECB13BFD3AE72E85FA84463DC6D1A37E14D9AC70A0
261E931C0F272F6E93B7255F07656AA78D2229A3AD5988857214A65A104D7A21
7DD5E3511A222C1AC0B811E890BA250381AF219EB16490B4DA4F44A5E5FF0884
03359C5D4F9B7E17AF42BB22A0CBC0D1FBA7D7963CEF2692A53425CA7CCF57F5
6D75777F663BB0DA931A452D8FEF38F2B52F0861CBE8A9827B3F1E1FD3E8C59E
D9D24CBCAF60F6B99D001304A0E056EA43F848C9FBD73A9D60F1B9F3C2063252
97FCAB933DE83D1C9F14AE568E48EBEEA06F44D580E948689A0C1449095E48EE
A03E7DEFA969168F3599265245AE0DC11FC1C1266C66953B897A165CCDFBC876
102E7FD4E7EC1D55A186FF173A4D4CFA5F77E2F30713EC2CDA4E19B33FB205F0
64F044D04A96240A6E17F35934B5F23EEA357806A3D0D706338688908A43EEAC
6048ADB80AE8DD542BF4A17E92DFB106A24EA75DC5970E5E3766592490D618EA
946DC36179A0BAA7547DDB173537C97415D1DFE06A143F52E37BA24CF207B536
42001902DAF59B7980E78DA1EDE2D3A4267FBCCE73AD12E5AEE8A80CBC91426A
3DFA41AE31516160D9AC4017A42314820974F3D7FE7E6CA71E6467CA28DF47B8
879837FB4A217A3B3D0C7887FCE9AF8A5CD10A347EC73124A4270D0D5D9C6112
033C467CA867769AC53093BA09E4626219905DBE5087EB9122DEA3F7F9DF718A
768749067BC361285B7D29A10B7C00A9BB521F96B511B79153C5E58AEFB31C40
CFB9598D42C02EC81D315AD5947A68E89CB4DC28F2BEB06A4246AE924841775A
52C38E1DD7024CB49567ACED7BAE90324FBA7A292F83C2A6FDFFC151DE57973F
EC62FEB0C99E3D9E4AAF9275C66E7B83CA8B33865EE74D2A1BF5DCCEB976C915
1056EACA04CCB427B151241CDE0976A2B18EC0B91BD7779A7578E8F324CB7A9E
A696F3081C51D1FCA38B5AF13984BB176EF560349B4E316418AA025436D2F78F
EFB2263DBEFB1898C3A2273198E0AEB0B29A27A00A61AF54FCE210E3ABCC39CD
062D15FF24744BD4EC8E2D4986B116BA1C59B654E037AEAE8CA3F6ACB3F6A962
81564D7ECD9F6107E9F07132F29E2B36E8CFC9B25EB511C4F50F9CFEAD4E3CCA
F00D7B37B1EA6BC369A8E592164E19133713B8F66F7E267D613ADAE8ECA5DE5F
2CBA74627E0DB1DE621A9F6DC008CFBFFB813C35936608E8904311E93F83C976
C0723146720FAAA6D173E24CECE38DD6B256553FDA8B7CC63C4C9E2FD5412FC0
F79FACCBA91B72D7440A7BE1390540A5E42BB2215B681B8DC03492775B2B72DA
A50008CE4A663353A1DAB82CB5667C5ECA2740832377757AFE7029A450898925
DFADAB17D591BA5E7D65FB18BC5BB7642593932C9E0DCC2C795F85EB5DD9ECC1
EB5EA612AA0CB1A9B056402EBFD659C175485B80A6C5183D4525B3629229E9C3
32C749DD58E01E041E8D15E31ACF330CB4FA31FAB46991DBF97626692D733DF9
BC52AF61F6682C0E6B47CEB1AB890B67E46D1A1097E7672C92F18FD99F32E5A1
DDD31F8FBF7121027A7B1E4A5193EC7402628572A2E4CA9FD4981E6ACD141D25
39E5A5926DBC679552892A006FC82CAB946F8F960DCE71142C8EF89C2332B0C5
5478B4E53AA6991F6EE897A838F3945AAC610664AE6E78BC4E9790A9BDAD73DF
1729F76D99B5D4C8FC778BA9ECD8E3D15E959454468E22F6F70A0942A5724D38
0B9EC53905A87D379DC465F2A065E144A4766B1E5B06F32784B19DFAB4CEA480
840C91C49CD232B25BCFDAB4DCB60B9A45EFCFECE0B87C7290FF235BED07C395
920011D6E3C39A527543BD68EFBA229B28B167355EE67872F81602FD1EF87C89
5BE22353AEAE2E0D80DF2A9207694D1F00BFC4E78EB7CED27BB14AE4D53A6FB6
3B594016933EAD3B5E99307C2DC542D0D3F861154986E47DD2F16CF7007DED67
806F970277157FF988535D116312C1C92CFB767F8CF41B12B3CB0E7DBCAF4A57
EEDC298899C0F4A59FF640AEB9BFF17691385E0F58C6A2DC4B899ACDCB3498E0
3D012983122902301AA93433C83BFE10B6C23F1C7ACA39A6117CE4DB91E197AE
348392BB05197671F52EEBB72AEBB3312AD69E6A8ACBF34C29BA98141D5A73EF
08A01ABDFFC0A1272CA91A9B072232709D681556D82BBB41E0F07B9FFB1F0CB0
83130D2950E7B9008F9B50B7E7B90F8A633B35DD41A8EFF6216A203804D66F5F
2484DEFD7FA161E4C63E394534789F88759BBB788500A25EDE3383CB75B87258
50DA66E4BE6B40950D60CC48657C15AE5ED79A0AC19059A52C3B18BB86D97B4B
4926FEE1B0E3898A99CD2C496968886EFD073E4E604E8D9AF6856EBE44A97E76
B246E37525820E723EEEF911432D1F2B3E4EA4BB1A6E7F4248DEBB90ED21C18D
756E2B27107B7CF39851579B89DA648B919EB362176B83298EE2D8B405DC67F6
CCB7DC7CC47CFBC28FFFC9566488CE8B3177BC6652106EAC07F3547006092722
7FCD7661C4B5E0C859204AB2E889544E77BDB2D35C8B74BDAB60399678A6D0B1
0FFEC54CCB3B25B8A0119E8F2748E6582BEBAF26E76A06B446B847112EB8C949
9DB2681C6132F5555050FAB6B711B2151E1CC34AC3670368299E6CC33D6C1985
703F20FB70E37AA685AA0C07AAE78FCD247BAC5CA885FC60235FDD879652B957
C1FD5D45BBD7E9F660B905F61A2B6CD76290E24953B623A6A9EDA14D78DECA47
2D281B542B703903FB61A26626F44939E3DFFA379AE17E620537139CE060706C
A4081CEDE8CE35F14595F9B5061C0CBC620D7C4AD238E0795B0AE67AF428DA63
9DA8505558E73DD01730CC62E5424896466B8F4488B448C50069D3C365799416
87BCA58137813A800BB41CAD2196F714AB9FB73D0D70683D93E2F94184FB1E0F
41CF577D1DD0F87E8E98435B4052AB30867CD546B5E0DC62E0D8095A1A876A04
9DB4EDA7F670CF057032D303D466CD687CDC89BF0E68A3E144FB336DF35BD4B3
2289F7FE8C66A6A82D7D756689BE01611E70ED5E18C5897CA59F354BD2ECF30C
6D9D233EF39CA8CB9113D9FCD0CD3CD51CDEBA3129AC42CA854862E8A3B4D032
CCC254870183DE49B240E4E9ABAFC214A260F6DF5E228670CA27F600703730FD
8BBB637FF3D36D90EFBBBF9D153DF2C04BDC1716ED61C331EDC93E63D97154CD
457EFDB6CFFD7A3CC9CCD3C78E52BABDC045C66AC62FE779B394C7BD6DF76C56
ABC4B5CD2D1B3545E79A65BC92AE5D345E94206009C79F3AB13D89860528B572
8B7942163227EE715A2BE646483DBFF42B4C55ABD3F432E2D3D9A96182E60BC6
7208FE069B6835A81DF4CFD34F44C745F6C995009C1D96763B74C57CB44140E5
8C4627A127544F8C3486A2DB7AFF01BC06F65AB100CAD205D5FB65D6B8B9BEBB
0F1937764E66F3EE3F0F3B1D3792D414E9A71A9E728CF2673BB71DAA64A990DB
24207BBD1DFC2511FD38D98B3DD56D58B072B06DC9F9BA7A16570A728F6466F1
448F36793079CBAB764EE2CA28EC95C1D54CFD50E9561DE6B014351A8DABE69F
26924F9CF2F5BBB81EB4609221DB705695E407C55AE3871787FC7785DA4202CA
456F51F99037F8B20C3E42F5F9936C75EA77ADD2447BEE0D537D62C280A5EE98
8F461813A1617B7B16E0539AEFF74FE6114BA62E6B505E0A53BB888CB6FAB0CC
154E81448BFABD6E55021D158A3ABCA15FA420DACC73EE852FA7D7521D7D4B3F
C6FE561CC9F0C150342491D2F70A52085E0121BCEF89D05E905642C9CEC1801A
57E01D85E2227F26FADA01DEA93CB1755E802488A14DDB35D2F139A9121CC74C
AB29627BB18CBFE16574766783EAF67641B7EB5645BF08D559577AB19F9A203C
296BE30B7EDCCFAA60C51A5CC857D3D0D743E86677E97483AE5CF81CF5256D76
0ABA608CB01CFDCD5113471F069CDD31E3A5AD1CB7F232462F8772842EE7060E
F0B68A5914FDF9493FBFC4DC0F61C37FAFB7770ED5396BC2C55EF3BAA5BE04CE
357D9E88C9AB6BAE68370DE50166ED933B0B79A42E5591FDF21A80897DE4461E
1123B92C57C8466F04A78FD15712A4278EFE9509136519B0A24A449B1D1D0BCD
05146CD6C9DCADDCAC1F48B8DA8EFA007DE462A81A7CE432F9B79BB5CC32234F
4A4B1860213839A951E00882296C5347F989CC751CE39BD7A489BE314FD2FED5
3BA347ED71D3876FFD141DCD23C09E4A1A5DFAA060C4EF2308157E6FE826BC40
357FDF70E7CFCE51DED5B8888358B9B28CC5478094ED73EC9892A63B15B4ADC1
953305807B04D4C1CFD28989263FA8E213617E745B66E3198898DA7C75D8C31F
E131B95F55F02AD70C133F14F0144504DDBDA3E4301129CDD845FDEA596A44AF
60C7BA6C9A2A7AF95E77BB94B17A73C1486DE0D80920859BC97BDBA58FBFBC15
A8F6814269B2D39F6EAD48DBA338B09D1D2490E866E9DFD5B99028D0E71DB7D8
16A29191433B262F1D7FA918D72051DB6CFBA44520B5B5689C87541617F1B23E
BA926E6A7AF094A1F93C3DB5D9825C6D852815962214C8B56768E60EFD2C32EC
662D9EE74C4360327003B8B12E4F5EB7A08EF1EAB3F3D37300EDC5459D66234F
251369B86525C35B5DED59FA3E2D667349666F2D2A3E9EEDB939964F8B7C21D9
37310159C46DB4032EA0C0ECB7BBC044D8B0C662A0B19CE4454BE5A21A587591
419E8DD0EDE56C5FEBBF533B74663839A56ED1F3B37DC2AF6FC77D06CD842554
AF2D4BC6436D93FFA0136F9C8156D11400CB4B28A29556CBD8710FA889852DF2
97C21F9FDD44779F59C7D839967000B722163107D5F44AC3C46E6FF193765CC3
8F71E8C4A4ACA5ABA29958F36904BA4D3157ADCC9999EE09BFEAA8ACE261620A
A9575526350A7496AFC4C99DB0E8FC1C3A40287BB362C8A667ECB55C915621FD
85B9C0740C8A88CA9AB41FF9F8AB55E3DA0295249749A94D09A74E239B8212A5
FDD260A0CDD0685AFBA27CFE51C9994FD648EE4A5E029527E917F17E5789E140
24E035D4468AE5C73036F3704B16222179BC15E60F6AAED5FB232390D7239C22
534FEE644AE96C571C22D2DAA0992C7C3BD37B2B630020F6A10FAF58DA9BA4BF
219B61E24633FE3BEAA9C02007E7D5DBCBE487890F828B110B4FABC0BC5A0319
DEFDED15243B9B5E466EB06E99203696F50C5DD44F6314CB1ADFC37C29E150F9
14D8FE7726F62DC2E6A6F1ADD85A2B273D4036D44FCC8F7AE024E79C6163F827
A7B9163574128A1553B2F2396A104AE72263F26AE6A6E5BCBDA80A08C43FB827
4826457091052728EDF29A438DCB0FA081B651167AB6EA0B1AD954420E303E0B
E12FA1345080FDA9DBAD54E57927E70BAABCE7822AE6146DF6925FDE269E8D4C
DB7F92E030156C7AB18411EC8745F5A1A06DA387DFFCF55AEA0E7CBE23CF6D92
7C59A5807D274FB37376C79B2116A9028A5D92FEA928C585DE92E03D8F742701
9DB32D4D817D360AC4E8BD973675284E1745C32119A149B80FE0359DDB6BDCD2
92EE0320B1B6AF535607CE4FF7677CEE2603269D5F288AB410ACA8C41E709459
3645150725C03B4132B7BAD95A041C66FB3752EF8C5AA3ADE9EBCA2D68481C0A
B166B28EFAA6771E058F5AD42F8494AB0B82143DFCAD1A627AF4AEFA0EC53FC7
B00CFE651528D088ABC7C8D3520C99BEAF282A69007BF678CFEBDB60C03B4C28
293307F22E57DB1089141ACDCB9456FC928DC7C21FE775FD35141F590A2F59D9
9C793923D0C0E45BA8B1928EF8F84531D5E23A66685077C3E9D9A3E8737DF126
4017A831A9289B66AEEC1C6B0C1E2BB69D265F28B2FE7C11602CB8D4C3AFAF72
544CD891E6D191182990709EE54D544E286F873B83CA675BFB2D70090253A37B
D9766C497B17D31A9343E4D6EE16D1743D89E7D165E5FC6254DF3CE17F78A284
63DD2E05AAD5F385FCB3D5DD1A52CC9A108CDD0AFED061C6428D852DB03ABAA4
A34574B33D273E1CC84B6EBBA7619F2A7DDBF3F71E9213CC9061815CF27EEDF7
963909BAF7EE88F29A7BBB02DF84B8931F065F6E7F05D1DDFA46103E4644D8C7
7E55B9E967CD78BA35652C4247985298A3C24488C9FD139D53875913C00DA81D
0A854DC265B53CD6F105943769F9D596586BDD0068ADC5395E9AFD5FAB203157
91EE8AA224F91D493099F37A9EB966D6A7B877DAFAA42EFE9FE57092FBD1B53E
755785915CA903C7CB94A865E7B124F886D8AC8881CED68C7E9ECF4FE403E13E
8FF108551912A89D32739D7B35E2A0437BEA07A125B40C2972D9A7AA725E8459
6C10CC32B7C46B5562E013705957563BA87AC3FF4FB71C9FD1897124029A86DE
C626F62516DE799F5F0A8779B372BC89FD256DF863D636D256FEAE0268BBFB8D
5E72A4F2F1599A0296DF018D291A0D65BD272128AC72D8D61492FDDAF610CC80
CD098D1E968B18EE09AF09D4E57938C4BAB2DD04B1A7097D668CEBB575FA4633
0B0C29B02B9A84DAB00C9C40F7C6953CFF071E1637F543AECBAA1E09627186E9
F40DF393CAF0F0AA8A81AB02413E7B4311BF6D56A1F0B72D203A7C5FF3017508
DF9821E12E8E2BF57A32D8575FF60CD63CFD0F284E3EA3060283EF21173F4C57
FC6C5867652E35F4E7C1C6B44B38419CACF947422E860AB9E8BE225001F0BFAE
22C80BE2639C6380899D2DF91595A4A5704B6088756F37A34F66F8A7E7056E73
207B980D125EF691E8191CE7DB029A893B2629DE6445ECAF61E1F79737D4ABDB
4756A364B8465ACA01826ED06F868DF7EE7F6839624959721D5DE13AE9B9D39B
EFB0577EE1F33FAD7716A55203274DAA43A8117C0B9DD6DF82B5C4C610882FCB
3FB67C71294019F6515215C47B8D9106E64F666D5799A8B95A8E85865BB73BDA
7CF3C2FF259A91F10FE3D43BC2A56ABB3A7DFF3DA3EAF20FD08453F7D3A3463A
BF03C400D95082E1F42DF06C8C3B0209EA4903C10D598937DE1944F7205984BB
DD588CDD10DEAA79E7BAA7E7FFA6685B008F4D0D48F5FCD8601FA561B0D9B111
7596E6FFDF4E2052E87BE2AF933CAAD62190D61C3F336C8E68585AB5F21CFCA5
8FB7107A3EB31B9A6ED3DC315663B2C3ABF5D6FCD1523D655E8E5B3226F1687C
24B318A8104371A9EDA9E62C3F87A6CAB60EA7CA027029F3492C5D335F2F1BCC
6B9475A9EC4DF7605D49FF67AAF1C332D03B3C606955A6DAF28122ECCBCC8851
7F209C939D8516182CA5F0966CCBF971FEDE25E73CF50E86142E7DA26D679ED4
D88CB7B42E0C44104D625D6D750A44C780560672575FAD646347AD6D080F6D36
7AF55383FA2532B641458E6D170C50FA64FFF61AD8E52288FA67E04EF6AF0419
F170FC8B7D0DCA5AF75C84EC1B33C8D1084B4F119AB730E1B4296A1545420E63
3F0FE9A9BEA67A724CF132253C51B9E6E27E63511004A58EFD38E7002552EBC2
22CB1270F3A107F54189426BE04FEC25758EAE969665078867B4A024FC24B16A
B6474F370F7F61C1FFFCA19ADB81F7703CE2AAB392D3FF9A746B4F6CB934801B
28AB771290DFE26F3C3E09E8ECF376B5FD186CD78DBE288797DD2DDA6AB6C3B9
B6008BC6AF14019EF7779696B3B9E032AD6D106CAECCB50C23E63DAE9CC6516D
C7A0660C42C18CA9114BA8E90E2D093FD2E01869C06576AD10965D8B35A933E5
F655F93F6FFCC0DDDB877642CEC2880A54215CBDFEBF369ED5A2A07DC1A0CE8E
1F26A25725C66534EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F8652C522B
F8E5FB4531330E02C9A8EBCD6C3AD71A1949E0B3FA6F89B8F3964C88A29A7582
BC89E89CAA58D3779CD8605E3AC1D53A8C3CDA12B9ACC8874ADEA08F12416C3B
DC9963DF09FA59FF42115CB88D0BDCBB4DB84159FBB40F7B6DB8001F8685FC95
89E4B2FE7508793EABCEF14964C82B7269DF63A7AC229A28FE5405E15862494C
A77FFACA1CE898B2FE3527B6F41E3D35D5A085CB865FA585CD0DC5CBD97109E9
E4E462E58A293CD1BC4E240D053F23395D736C4CDB79029416344153EBFF3F9E
05FCF630D603F1ACDAE17C171FDF82435EA232D3229AFCD0261C5194C996AA73
58F8DB77AFA966E4AB9B0CCA301F89A1016CD4B167B9ACA692EB09DFB0B956B4
04C74657B72A77E33B010E21AF7D1CA940090DB58920B9219284D91DA3BD4EB6
C55CDD1CE633C26771E230178C18F0C8B7C0394222492406E514A99727ED5618
E0B479F2DC6DCA8EB95C69657F8F5FF77857E5716924E5A4AF604EF014E956C0
52701E3C890D077386F4F44A46134FC25E6E0D02C68403185B07D4F59D56FE63
59BC8EA4C1DEF06FD366791067EF28F9DF1B37F90088B8DB12641ACE24FE63A6
960D7E9499D6F4FB185F653F299CF085823D5DE347D2C5F125776CF4C6213BC0
118472721B91CBA9BCA17E36183C34D8E274A70304E7F8458DFDBE7952226BB1
8F3775424486F4D2504B044A47826D5D8356EDE7486983FCC401956CFF71FF5F
B18DB4E60CB036A9B0CDA1509D95CA240DA93137B32D43431F75BBC0B7A7870C
7D19E072D901F57050DD9A7018318E2085117D416B8AA39F9989D7ED54D96190
3B3DCE393AD8E82D7ABD53281EBC76E0B79688C1467DD62CDBB4F35F7D649777
4B221B165033544CC77116B8807756FA99164500A4FF96C938775DDAFF6F38DA
8C082E9EC1CF784E07AE3970495F000C428D6BBE99009BD3F6D9FD57E25F990D
5DFF05A101DAF3BFA182C822E86B7B1CC5A228D37AED24A6B76E20BFD980910C
422AB638718FB65C4DEDEEA346D5B5D070CC2B452B837DC5B2AD473F6BCE8C5B
4270F6A9C95573E2B64373F20D95B56C7AA110B22AE36B9518755C2FAC2135E8
9AF71192EAA4CB2631D52BA0C29171B40E2BC4E567B4DC63A29B0CDFD17D822D
8D6998DC60F58E1C6B5334277F175987B571FB43F622E401D1313C1DE66264B0
22C8C8C0F4273888DE78714109C570921A6EEE839DB149751303BAD3D73E656A
A3DC26D6851111073E8CE54C4E5A1318F12E614AE73E51EF48603F4053F0BDFA
ACF2A4AD823BEF7DA8C97CC3FD6DFFB0B0526BD364CF65B106EFA7C38C621594
25D25DC90ECCD2F6E018701259A9F0B081DE344DA4F435D18244D236CA04E186
E5420F3B2A8DBE33330D2310D88D5BC9E54FD31DBEEC75234E4ABD28D403F75C
C1E5A6817B697D2C3937FE45E57BD5CE0C7AABAB4EE31FB042903DA7055AE14C
021BEDE03B5432EF7153EF62CBA836029C5E0DD4C3BBEB6DFF03CE8CB0EA1E4D
B479C26EBDBC38AA09E1D737D4E43497C593C90728B128EF335A8AB16E3C947A
011221956AE269FF01BC59792349FC25E2EB26EE41DA48C15CE91EF664C3D906
427BCFD90BE985A6F2449EA5006EE072E18D5363D80C83053B95C86E5CA00DC1
1FD9B01B6D69801CC9C8519B9DF66CD9BDEC08901AF77D2A1A7C32674465A0A1
C72231F0C4E85AD202FCAA402B05A9E0A4D4AC857169E347C32543B9A8F39405
198D2D5DD80C9C67536CF2BA6E5860692109880DE876A03E7077D3272AC10461
717337A0FCB6836AAAC0796FDC61766BF47E857A70F21F9DE31695438E1C0382
CBA8AA6A14EC1195332F1DA6A2423B3BBA0B805642BE7AF799A6DA4A3B4B3761
BA8FE749A3D3E140B4A5DC505DD8ED4D52185296CE274C11555E0489EB09D1A4
8D9339CE85E9CFCAEC3B7D5749778BC1A551F4C128F74624CBA52DCE931C32EB
0A4B61FCA9EAFF2DE8B6348106E84085330AD7A454571653574DE354697FAEA2
1D6EAF601ED4810A002410C843955AD0B93F9203462F95B302B8CFF733E19489
28E55E3F16D464B4FCA258AD32BD99B92E6E63BEC37E83798C91D104F883777A
D151211F63EF633547DD568C6F0E8B9FA93DCD660779C2C801571CE1122CA334
EA548CC9091D00612C6BB4C9191CA240C9AB781DDFDF5863780E5053AF0610A0
90DC5A21C449576BCAE7CB87B03BE13A16B0847143D195EC3D2DC127545A2FB6
5803527D52FD1CBA273957B8F8F342765B460EA23FCBD48048D8765468462B9A
ADD9F877A33AE08A7D848E5EB605608FE923BC99D34FCB2E65864B4659285593
BF3BBB6C7F17D79FDA388868FC3439F049653B2E13070BF5C7C2CB11D25D9D44
C5DFEC2A7F706EA676E3B3242F37E05CBDFED62624FB8C497B4F9E0CA92F06C6
868DBC0FE358D2A842FF6BCEC22ED9A84368F9C270976EB55890E7391D6CB99C
30F37AB9FCD6CF83378F909C8DE8DCD94F08A27C4CE90F02EA8803F3DBDA6808
EED272D50566A8650B6D09BE359831087184E41CE590F9C8EDED379907A5EDDA
D9955327100476C03B131A04FAF2FF0BCEE9022EC439A295D808662B7F771B08
E89597394FC627C1D7173E5967828D60CC8C0C1792CEF900D2AB0171C4832ADE
394345768F4A78E26D7BF1AC08BDBB8351C7F5C1C216D04C67C9370CE208AAC2
5A0EB83E60AFB9C28F406B2E1D36D1A1359A6EA4AE36DC77AE9A0FFE39D1C23F
D2E84FABD5F8F0E03C1428D5A4D85DFA7D351DBA0ADBE70EE360EF3D5BB4E841
4211B97506F9929D0829E12CD2E9B0ACF3D640A9A64FBE52ACA74853AECAB9E3
9CE5166BFF67B75CA84D17B007891D7889004B43C270B46C69E46BB6B981078A
D11628FCA4DFA62D10F04E9C256FA52B41221A099FC29029DE39F393E7D50D28
C63304BA3758C2660A5B09906DD2A1FA3458D37F8CD2E851947683E054F3B97A
93F4CEE20C43F067B52ED424CCBDC7484C84BAFF368A1616E5795EEA0619CA2E
3ABBC4E185C559EFEAD5AF1247F8BE4D6B0DE186C61E9353F6A543D5D4D7FDDD
F506F02425A26341AA5AC2DCE2E64092DCD8A43E34700A29AA88DE894EE7FD9B
7283AF109382E0FFBA9018C10AAA7547AA3E1F87CA1A348D8E14B61B5FB5E61D
C87C2FFBDAF923EC2BA3E6FD5B661DCF6CEF91828DEE8AC4FD49DCE692DF1F6A
5BF698680391CE5A3EECBCBE3D246F24276CA6FC582E9A9B3EF96EE08C8299E5
7865184F7B0295EAFA34391C81ACD1D7B5828E2E746EB8AEFF1FDE7242296EC0
8C122D5D1390188779FE5A542B43AEFBF0EB063B087347A8D421BC9BF5937E96
36ADC6B8259666CA8402BD985CAB49BB651D6FDE79EA92A7A00D78FB9DF5EFB3
79F0A21B75F349774FAFC7EBC4660C70984A0AEAE1C3AD4F130FC48F1AC941B7
C50C9D5ACDD8C6E01295A2B613539C7C8DDB7BB491068D3437ADBE66A53BE748
C4E76934D67AA367955FD6D33077E9261C6E4CABBDE97CEB9F2CD07EB064FA0A
0E441E3D514298FA7C892D566AC886D9C2D17F9C23C68D7D437150D0967F83E1
3EBBAB33588541AEEC0DE8C53F3F6957D1934E148831AE7C815BDCFDCECD6629
66EBD72FF8539279EFF90937C6FB7A0CD4F304FA2C87B8C5A978C74BDB0F03BD
752CC8DE9BE48BD895BAA9516E540C21B224EA40E4B5D943F5A6E9B06F47EEA9
AF44B95165076E6C2D7DAF8C91978C053897ABA5BB79B866DE67BE138EB583E0
646346D701249171F713A77885F8990E155C1DC6C590FF78362196128B5EC590
C2305A3BA4B31B29DCAF27042954AD5D7484716FFDE7B882CADC56552345D693
6378A7F128F18147282729BF9F5E55BA2CCFC0D97701B005B053C3F0E27D31A0
C1CDF26B64258625F4254301DBCCDBA27B33A13415BA19B37938E33EFC7118D9
CAC94359426F03AE236B9B02B7EE66A54935E16D2FD669EEAB36866911276BCA
291DC3B2BC0B428BA8234D850F25ADF96AFEBBFCC22C2AE121305FA9607A9840
CC986C1CC52629C985387B050C8B6E48244E65F7A54E14EA3DEE4621E32EE2D2
813671935200E6AABE35B01B991AE910B7DC821CFD8A6B5C78E6D3B1AA787428
233F8377E4E03E6CE9471674E5EB3E0397B877E47428737BE681B48CAFFB005A
2F5540D83B9832167F5DA7438B6511891F10E2540BA51C8595320ACD32808F85
9C0410465ED4CBC95C776157B2644B7F9879DAEC807F8B247CB59185DF30C757
55359F42F80475D3906F46BB77D83290A61A177BF71A281D8EF7F4FBDB0BFA79
40DB7C6024E8850519788F71E5B7D8D042CB8C40FAB4644CDDAA91F6F0D7106C
DA9FCA3CB6695C4BE1E0F6F82FDAAC5F5F221014E49DFB5B2E0903AF6D630DC6
F2532EFBA61D0CE72227D280CA4FCCA8483943FEFD671409BBB2769C8ABD0E1D
2A2A2E3E168EE1B0AEBB2ABAC2B90A514D97941B1255388149561AC3E73728A5
5039E4A7EA63CDDCB2C2AA2FD7B383E90225F47280B1FF706DE6C5DECE198EDC
7A5BEE096E867F79996954F36C5C090B0A18F81586A94C068509672289353980
885FE5EF054D5AE538348F537368932B8B3F2FA4335EF6B9C7A662359D8DCCE1
D2B9CAF794DC6C8D61E25B73FD1A9E54BADE8F858094DF755F2C31BC290E4335
502C2819D626576715E6B577374C6F891DEC246F6B7F065CB219C926D451E70D
A96A65C711924315AAF75EA44357ACF66D4537D9B99D8AB18BB10E252A2B1B57
6FC2C84EB0A4DEB9984D59F8BFBD471FC3204748B39BBE76D32933BFB3185C39
72FFB6923BC6955BE9ED8D0F033FB488ECF0ADD93E7E4BF05AA72EC6C869400F
05E445FE8DA647EAFED062C59ED0A1B4EE733B9A89343A3AD1D072E9FB6F4FD9
6BE01DD089C7CFC424B7A487A48EA5B567B07AA8D634C702038C75B6D75A3D72
56D18948A1809D2DBA95373E39D2ABEFE98BC898CBCF84E39CE3B141286A5994
C60855979B402CBDE57D89F6D60C6E12974DE347D8B3E4C85105D879D807F7A8
6C9D14A277369E5A7AF7CB389BC5900C4305DD3B84F3B3D95ED3FBB8E563C2CC
64E2DA3631AB809AE0F0A049DF505817CF5FCBEB7DD5871EDA1C1A7482861CFA
370CDC69EB0AFCE824D6275ABBA8F5B93733B9276BA0F8245F6845EF546CAE54
8825E979F25AB0F5CF006B7F07739EEBF8488BE13BAFFC2EBF3EA04F8F00565A
CB327B642D1FDF6BDA1F3C19B4A0FD935421F200223056560C55438755D243C5
F055EB9D6BC53301A57B4E7D438DF32AB32B6FD323FB5A0D2365604372536351
C98CC53589A13F6DBEAFAFE92CA2DE4ACADAA185F26B041334F66DC11A69D285
6F13743F0199B8121729881A5C3CD90E9BE7EAEFF1D1139D8A35EE575C794A5E
70BEF74C9E4F13E55F798B442680D5D738F7AF8988C6723C34FA7455EA3B59CD
1F702F81DF4BA63E9B2C8F74337467F377463CB0D55590B2BFEA5F730BB0E0DF
3AA1DF7CFCCC36A7FA88FA8B82A31811377C7DEFDC30C30FF3BD3F9447A98B47
A799728485E9CA9F1AEE01E3534D8BCB0511C7DC67D93FFE6E9271771B2A118D
AD33602D146F2F5391729B51CD703B8FE781E96AF3AE7F706A40F0BCD6C3905D
07EEFCACD74368BDAEBFDC9D4FE71401EE8488638D7C483D983B49B04B94CA02
D2E5EB29BEDC9314736E9046AED39FFA15066BD9089D03197D7542BC10E7F9CF
2FDDFE83B006FE1A6D13C897B695E9FC4E72341790C7D7539FCDE6B2820CDA72
422C997E5BE0E79C3CA114F998DA9CA185471B03236692E64E3B89650C7FB72B
9BAAC4E0B0CB1EE425FA28690E4DD34F92087B15A4A96B2772BAAA1468DBAED0
E162B1D45B553DF503CD6CB52C893D351566F751EC6269E9D4BD7AA1315A6913
B9819B3642F2B2CF498AFC79F31A554D8BF98B16F0F0B9FF5A0F259AC1F3BC7E
C68FD5DBEC089271453A66746E8071625E63296E325E2C303A63CA4CB72DB7A9
6366192D27CA1FE28A2B98B4F6E9EB1B3AD8E848D010FFDF7D789BBBA82F85F2
7403E1AE42CCC14EDD263EDD2A7CC63B5B731D91FEC71A9E52E33FD14670C6DD
53819E0B59A50128C43068BCD9E781B40D04FE25D1F66B684983052D11C87E87
EEA5DC720C53E9963578764C91948FCAE03F3DF316C24EC50A78B63E267EAAFA
D84E2A5708B8437577B4F07BB1BE886359F066B8FDFF0A4DF05D51709B85C9A0
A7CED679B25D1A426783620805B48A4200AAAB3385E78F28191F771E91817147
600E90E6AC7243F38582AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641F01
762A2BC22B5323164D1C34DD7EF75A885DDDE8890E3CDCB6B3E5B2E3A3F114CD
151B2B93F439EF6E900CA02FED503815316CCEC391025FFF8E6838E92AEEF0BA
3AE3EB44D3903FFD37E0BF9115CE2FE02D8A3FA89D5AE3AB3199BD45A3407A47
7D1A7D972649F1E5AAA0572656C5468F5262055B889245BB6661679F7EF91967
AF19B3D91CB56A574738360B1A6C03DB434D9AEC6AC60E6286926BE395A5D247
A11BBEBA73C5E364170E0D91C3A9326CBA84717637F4F62A76A595F3530B95CD
ACC4AEC70383147D8580979FE5FCB204DC95F10D6E5571D4EF17002691CF8BAE
0C5A3B1227620AAABEA33E8692ED1BAB4A616C1228B9B2F296281350C23CEE1D
869C4B895051F3210D69FEEDCF0B1F51A0169165768C900D0EB43C9352E8D2AA
ABE0EFDEC794A3CAF58DCAAFD9D9C202A4A34D56CC94F61D27D3FE8CBB25636F
48E6A41F205D04A802E006843A7252E1C1D2EE59202CD319D55DF84D7A0176EB
C2C213DD58D02216A81D710442253365225052ECAC86766BF29BC8AF7468EB28
FD5E0C4ED2431ABE98F843A64F41203F90C9EC733FA88082D52219253AC32A89
2E75CBE5B6409D4903CF328BFACD712EC46352ED1B976706A6AE560AD6A82C3B
0C6CF7D259576C2B7F6138C7D17CD5D1BBC93A8D6377B101A29D81A2ECEEE747
05FEE01AB1EA93615AFBFDD29B078D319B5FEADA1D290708A822BF82BD768C65
8578C0E16413907952EA5F84CE0D615824346895CBECD5922C80422A0DB1B3FE
805F33EF3FC77FBCBDC48E953937EB7A043E36E6AB7E380533EF657B80CB53CC
1DA86266CCC7831BDD947A80C428365438F169B1333FD37397281D4412B860BD
929DF992D4DC1C9D7573936FFF6BE7481A49FAEEB2946B766163289F2202C671
FE3892C7AF56500858D8179CAD73C0FECB0358A501155C5089A5FC5FF759E791
EF3D8B4211FE330AC3426AD987867C257217C859D48C1603730C59C63A87C3DE
5937D454593751EDD711F21B6DCFE6A3BBA81F69B470F52E38E750F117D369ED
2AD1A62FDE4C7CADC5C40397E16EC938E6545E874557E0814C9C8BB7B082707B
2B001120947F2328348B3A1D3B71F26F2F83281B0E9F6BDB55117AB4A025BC21
6C928B09F06332844EA9D12718D6FFBB555BF349F40C318AE9BEA6270F8BE9F7
891973B81F88B108A61F2B9B09CDFE5866948199CA27C1838AD2ED9DFF8BC53C
16D34888A41F8C3108AFD4ED24D99E1E28B4DFCF6C4E506E74E0EF1A8B852A46
41DD504C33A0C2FD300DEB28DAE235011755F81E36104CF9608B80D8E86E8DD0
E9A6A566ECEB61CF2BF6035B98EA90F559625C437D4AB70AB2B7658DF687C9A7
75D9EA3C72674A561939FD20F8985DD9F9645D2BF1C1AABA1E2AFB1682EA8409
E9FCF8ECF3AC649FD0A0C09F19E9C0302071E598DDE8D624BFD1048F27E64850
AF042F96BFFFD3B3903C60869AB2BC3855A389058F3E4A6F5A3313AC34A06DAE
5E8BBB9F43B8D8D9235ACCEB4E79BC37A36535F4C3ED8C840F1B56E8EB173B2F
166FDA22E38A447F7408BD9DC974B522530E59532C46091584E9CF7759EF3E2F
BBC0EE740CD0802E380774B94A95A7DF70A4AD4FF3A6CE3B66E429E4D75BEC57
A9011C0DD80E0C07A42DCC0E1BE4BB40B79ABB8EA9F3213E4AAE753E34A7C120
CEE6144744E50AD48FAB9A6ABA0DA27F8DF4AF87A547BAD7095BFE6125C41C0C
1D853369B8ADE0B18E8DFDE785893B5EFD6019A330C47DF4BFF453FE60FAC91C
0F1C634BC8303F88931FC54387293DEA96BC70B99CDA0699595E3D66AE110702
E8287BDAFA02FDA142C52EDB1CEFC22E44808A443685A3215FC2FBB7D9F48A6A
8C33CD0D4431A08445C93B66B995CDF077D8E4D871674F5871BFC5B5255EBDD9
4A98300417282319232BA981FDD6E3D0DC8157A389BBB3C8C2D91E42A8F3E97D
785FE19718EA4F30EEE3A578921580C7A2F06577BFFDDBAC75A69C6E7631B822
FF44806450BD02A38006E7ED0968B7255CBF9C6EC91E83583ED50B53121211D0
15B66A6D6E9877B9C2F428FAC68C9921B9F40D76E552117442D802DFA08C6C6D
334A86F23A9E6729E910DDD1927E37D9EC7800A8F8E58E63B50C60FBA08F62EA
103EFDD48C902403D7562D0400E34B585EFC4387D56C61F4891DA27CFAAE61A9
A02A2F4ED2802349FAAB0C1F21B58D8F45B17B829686C23DA952885B057B560E
9EB2460A65E6F72215C36F9953F10677AA013472BF8916009396E2F73E9E3424
2EA4B8119A315942646CAD297ACDBA4942ACAA30C05492C9A9C0A08ED002DA05
D223700B79EB97332C9611CE4C3F21137710209806D7C3E7739FF063F0E006A1
7CD69552295529C8414B6DCE99A30CA2FCF81687D70DB13A90B8B3A886423D10
A76D674334C47FBABAA71DE7E31F9952F450564F06CAB105AD6F4C749DF85C7F
4830B54665ED029C213CF3BB4A518522A5EE6D6AD2F8373278D8633BD1F7D69E
3F96B7D8265A28EE2997CD8595E0E36EF3BB34545AD5E95B6AB56072F0A343B7
9CA7B7E839907C48BB13E5227FDA302AC2C6E6E9E4FD1820A146ADD81969BB7B
6E75FE0CCA1D5EF9F69BBD6D583351528E6E2C07E9AD472351050F942D4323A5
ED11DAEAAB1ED8CB928BA33D61D0F17C1E7D2A1403C4ACB7DFDFC8DB8813888A
023B8731F38AC5186F78CE942D14E47259056F82DEF5E5DE6C520DFB49F8C9AA
C43057DEF7AD31E1E28EC8FB46BBC06BFFE286C366E1F387AE1ADB3B8C094A7C
7E0DD5F23035C5460DD417E0B3ABB83B8C0B83436E1BAD02ABB6357F0AEBDB12
2DE57127C7A5CA0B0F2720E90F88DC5E5DE8528FD3BC804279D086A64DA21CE4
6D1EE38D6003BEB288D35EB11730B5BB4072E7807746F7F0F4DF9047150B77C0
D3D6CFF7EA4B2D1108E6647FDBDD4B02934AA8027052A6550F531F1032457998
7E9D2EDE00C2D5FEC21B05F7F7092F4F0FA8EBD7AAFFFBC558F44DD2CCF16AE8
580EF426BAB3E3AD967E2F7BA348CEE0367E4017F3FDFCF57B30BA74FD09D335
CFAC0A99CF5DFBC58FFF54921223C8CF29FD208A77EFE112E8774186E598865D
5F643A4396F37130C0E4886862AE5BAFF2AF0A3A79E169E29B9D0F613CA27304
FDAC99D30C4EBB8D5A2E92BBED9D4C6AC40658DE776EA2F4C904C19B7456A886
3D691873E1865BBD069C969C69A8895757F72D61B16D0D1EAADEBA4443C417F0
7385C25DD0569DFF3B7A022DB0DA074651A971DCF562769F69443072F6183CE2
431982987DE40F6CAA77D77D764D8887280FACB98D23B0DEDE9DCF1CFA95B71B
FED621B91125B3D7C51073EF04866EDB0CD7510A3A24D7AEC6797DF87FDE9F3C
0F1320775D564B2E607BA6F4DDB4F608F629D249D6E5EC7F4FB76934844C1052
D0EBF84B6216E76BED748402D7620FAC22EA9F7640FEE72DC3CC80136672726B
3F0F65682506A167E6BC745329F3C5BC3F69C2D961646B96629018BC81125190
1EEAD393DD7E3D424C173CAB65614986C9093A28E667E65705A167812183C193
BAAD7EEB818DFCD680530873991ADEE1DC26A95DBB4FA2D09E32C4E789F88990
667F2C145DF5FC0E3670008EBBA5239D3F42AFB4E19A95C77CA8451C3FC2B340
02BA4CF80BE29F7C734B61E8C002A20F0D473A3B2BD37B09BD7BE28231EF723C
1F32AFCA9EC5D6167CE3652A76076ED2C47964CF99A7A14C21038AC21E49D81E
248C6E80E6177100EFAF443D6E0A83025363FA25217CD2855DEE23A91CDB23DF
CD6F9709F6877E3F2CD32E30CF0362FA1B5118A1C8DF419E5F18D3B2A94AAC1E
56C93DEAD0CFCDDAE759DE42DE7742C7B2C394A0F4315B7AC0456D0AF00136D3
1CD2E9CB17614D0A2DCA87F12D6FF11A4406A6825AD04831E454145934EF1027
D141234E6CA6A3A054EB9E26A53EB34C52649A42D1D698BA3A0C8BC9E84963AF
C1204D8E6AB16616DDC2056C8FD107496733A978CC240628798E3893178EBCAE
7FE131003E5E46287178C1B7FAFDC4D79B02614CB071EA97D02DA951336995D2
7C45A14A07D1BFEB10C79924C67E8185EEFEB34693A204FF3C832138A4210BA0
C633A7F9759BF94C66C6A2432164307540690E549DD0AE29AAFFB948EBF62379
F1CD3F82BE0BC149EEB3F07A2B442B13AF334F93BE67ECE4DDE11AA3604EEAA5
C9DDC225920B03CBF21B22E31D78703561502F69C961C1773E08C766D9D9EE82
66FEA36686DE8E523E9A0F1D71F5638A829DE95191E6BDA410FC44CC3C9C74F6
E8413BA60BFED89A30D106F90321040F6AA5D75E5BD8BC4032B60D9A7C17B051
C4C928B4C6D38CBCBE21F30FAF36DE0A66B08588BE301660D9B279FB4B7DB9B7
76B79F7F6FBC28D851EE55A550FC7F02367817A000ED626122DA82E555A8B02E
EC03044DF81EE2DBB3CF6070A51B7E1367D96A5C3EAC5E1DBA35AF528B4652E9
EC07606AED67B728226F45815A9F48696A324B8D1DC5D07181A1C1FA0839CC80
BA753D04C27BA1619182E35E92487D981235051BD6969FA23BFABAFE773F095B
05D4FA451FB8C35755880F962609CBC0C54E29B12196EFD0DAFC852D2E598734
CD624FA6837FB84B30F05AAD2E81DAC6D6D59DD23D91E98AD745047B45542B58
991B88EC13AE9788929A51845EED9A2DB369EF2C6B6F56A92F9F55E234903EEC
EAD0FAC3DDA83B27E1E959C17292D62193131FD3DE99FA1AF87B94043A659781
BDB74E42664F89F1AC430C79C58A762A55532BA37600DD1FD6572BED59CA003E
6E91574D70A8611B28BDBB0F4461908F45839F940F864313DA34BC7511335DA4
70C194153284E63F0C5DD4AADC04275C29B05ABA1EB5C901DEF34FB5E89390F0
06E46F2501C3ECEE2E9EB64A3BA2AC396FE69D1A39B2F909A400616406B890CF
CB7AF081B0E81B17EBF7EB0163430AEE0403EAEC9A994C1E9A4120F81D087A80
5FB973942CC8C1519AFC5383B89742BA61BE9F4D2293B12761ADD161878EDABC
4E986FBB35AB5CD73B8C9103C3C97343934920EFD17F7613CE7EE8D57C7FC23A
580FD1DB9C6010E13D05CF426598D629B2E8D7FABFFAFBAD8BA60E66F0E60401
CDBB9AD00F2148A9BA46EF961E6FB612C35BA9D7B664BEA7EABBA2C41E8AE9A9
33F67B9E8515718AD5DF319788578B5FF1577319B560566783AA05192BF3853F
60297FA0D138EE09B2C2A48E71F4BB6C0AE2489B22D44916245E6F6BA7025476
460AC3E14616874AD27F45ED5CF8120B472B2D8E697F215577BA68B143EA8EB4
FF6BDA3B469D678F01710ABD039B36A234047BF2FD49DACD4FACEF81AED94456
37D9CEF904EDEC7E12B54521340F2DB59D794836B459A9A3482EA9095EA40CC7
CEAB18FF47F036E86016D706D5F0448B6CAAE9338EFE7C5258345B777E056662
69B3512888E1A096350A9E81774B9A324B648317926AD7671F95D6E0D41394D2
3A48C25A59A01DD07E3DF4F8B26B18617BC276509D7FC2543C30D80646F48B58
3CEA21D71C407EE260148BFAFED1F2BE4D97968D0D73E68B5BEA42733CBDF442
EF4937B52F99AE25B35848FF10B39E42DA7F48F4D07EF0ADE9A86CC7D144CD41
93EBD6E52CB77C71C61912ED09F44A859CE14C79A17494C4BD2FF30BB7914860
FEDCD734206F89A0F0F4F24F779553D362910F355CDC0498CB7A22346CF15593
0605E485B42B8215846A0547171AF2C354DA4C259893F296222D0C72AE259AD5
758F3A17ABACB7776D2619A17532545690DAF24772308E3EAC86362504A872E5
4A30716F67D56355604CAA30B0E66170C2F3A0655EA208F93401CBC5DEE2073F
1E15823D2647409D23128D94F970796AA4E86A0917C4EE558A752D348F8E5104
D7F563B825D3C1F383D138AF7BB6360354AAF90BEF75C09772522BDEA334E86D
87E2E457E8370037579559ACF844A50AA2C375D10580E8C3CCCABEC8BADBD494
42D86ECA261984EFCEE5877CE1BDD115ABCE5430ECF2FAD9DBFD939BB1A1C255
6DE9369FF340015335707058663F20E677CB2A58C1E729F224EC055BF1A90BBA
7EA6AD6724C6515481AE3B2BE77D32FCA5D25C82472BC23659C338F09C5F4E9C
2A3B0B68423A3B1F16A84B5A0E61B4A9D02C1A7B2D78D4281A754A7798E6DB73
55736D607CA8EB562E7CDBA8F349B2B4E00FEF7399D71DA2A03E2825735E948B
97B5CD0B3D93C7BE1540743A35AD1E87B986B69ACCC7A2D73E6AF69B7D71C89A
37769DC973319C4730E5F8C574E0F1A6F32A83E1858A76FE43D41012660F29F5
13A4EEEFC3CD2FE26B408921F7ED675FA79931B2651E12427E8C13CF4C13095A
EF405C21C8C2ADBE3B02612360AA05C3381969673FC75DEE503F3C7F6C6F46E2
53BD0FDE48DB7E771BE399A4F22FA5FCA85D82C8379991C407402041074E3DBC
6CB7E33875B819AE1DA970043D6DB9CF6D6B690CD92352446A299DC6C2152922
E3CDD827C84C8BAFDC51758CE48A00C29534CA5889603C3A26B1205980E06A34
6D1895D70202BC9E7C88C145B472AF25FC842AE69C956AFF433F26F0441416E2
A8D7197B0F7D20ABF34625F1B686CB383B1DF50F90D7B9ECF3BE4098584217E6
2BAB65CFDA4E41DB217404C598AEE743B7EB23659D5211390F767746DD7E877E
825F63F26F18C454E03501108C0C5D8862B58EB68232250C5A1607AF6FAC7B52
84250DFC15B5E05C852E1E3BC7C677AF1919E4FB489AA0562C4005B5652571D3
6B6B3FD434FDE1329B261D6784566B98E5B319B39234BD9695CEE6CB00AA6B1A
265AB3DE65CC4FD7B12A05C28CE667BEA0445720CE12EE85F647962864F576E4
6CDE62DFBBB4C6B5DAC0B93D6A3C8253C363315DA4715B08968A304D634A9F5B
6C96A3D71DDF4FE232001165D30E95970F7E9748F099E5F1E05A32BAAA94F2EA
4A320CB26E2BD241B97ABA61ED3E270C8DB1AD865F44A6524D040AA2FEC25842
673E2F7436771E28698C37F1DF9AC35FC8A23332DA974625D118C5B9273211A1
D7664C96E6734239476CDF8114FC8F50A4D3C6ACBA3355363293FEB10D96AE06
9E93EB9F6B742574779978C70CCEE7DEBDB5F05F89F09B25F786335DC7AC6112
A0C7FB06CFB4A4A9CCC22B4178EE850BC2FF33B457E2F822B6A0ECBB8639CE11
F57541E3E68B043498CA3D391D9EA04F03ADA6262A14397E0699FBF21C4A2091
8E15AE844B0A646F6F215A49A9EDD828CD1B106629409CB29952B704E3D30A30
8D0554C0DCBE184678490993426179E3FB7070741F38089080EB8CFD960FEB10
5C31D554DDCF73612AD64EBB14C9F19F54E3B2C00C13331A2A211C735FB0551B
578770CA0C764AFFFA1981C603CD7EA9C20B69A8A8C2C7C8F2585218604D8A55
FAAA926E233767689944873C8BA5B640F109A7BF402983E93D05DD971A4A1953
075F2290415222F0A289F7E780F7069870C2464B49982A44683F001C4542411F
A4756B5A9C0DB2D8933413D4A81C273320C76E6D7E63A456A029B689480DD93C
37F3EE3F6AE7C6B11450329C72D8DA3F3E0CFD9032945031E359E109A81182DA
F374722C2C0261EBAD064899EF92FA33B436C92B726044235F68931B83B3329D
DDD0FA7F3D64A95AF0EA6CDFB20DEE9AEA3745596725686A6A30308B44C730AE
E23C5A6A85E8E731A2C3FB12617722282C5A2E15D792F53349D73BDE771E94EF
E0B4640EC908F4CC388001B134990211BA60AA8EAF79143E5ED2C4A8D53E7641
035D5320A1974371748BD7282E3CC4B30CCACBB88BD7CC4267486E7346B96004
D5550F42CA259A010834EBD58A2EB099FC8E0D5532328008BDD19A0FE2877C4B
2EFEFF81E91EAC3D35A3AAF93467B360DDD04C317053E6006948687EBB3FB3F8
0FDD4D87F6FD368C8B85DCA8AD00FFDA398659DEAFAC10BA6169B502DCC1331C
B395FC9A54F4041EF5291B0C2AEBB8450BFC9ED92F27BF8C529F97ABADFA875A
0D881C90C06DEC3B15060C55FFB9C9748EE5FCBD5B596482218BED187286C106
42DA5097B44AFB74F13954B8826B9AA7B5A0A4C18CE25DF90856E8BE0B9D9CF4
C4E1797EA25C976B6E6C473E3D6889BAD530C095F40534B49938C68AFF42D2E4
1F889DB642088E0FB0EB3C625259667C328681FA59A9367C26AA31E006754600
BEF0F6F11EB7AEABF17F24254400D87D37BE918A9A754D66F17F92176A581D43
EA2FD108A1825FEA290376DFA09BFC91DD85A1B9D4A5FB5750BFA9A6F89E7196
192FAACB98CA365B9067ADFF2A0176B0B54C6ECD8BCCEC69C66B0D365DBCF951
17CC8773205B9A675158F63440592EE4375A93F396B5ABD60841C752A408B546
0779A0F1342CC4AE6E7E6D6F0BA9D43544718A6DE115DBBAB34668B61D026FB5
B570566C162E0E440974025D7DA4C97CAFDDF543B9B10517E8A519EC66FBD95E
CBC414640CCC08859105061DC866F468F764D15E68E5DC26FF4CFFB4C7071872
7BB35EB6CA3973974691564A795AF994FB0630AE944938B069977FF451B5193F
F39018F8C5AAC7D686266F322D6952B5925621B24A6E8DFC4372F3148968CC39
4E47F7141CD7EEDB10EB7C63045E1203A798B885229D8D2759D01102DA54B953
7788A7001BE3BA283FF3652B80D57D89FA8C506EA011C39FBA05914E4EA9307A
836CD2E75CF7905BCD0123860565D8FF539CB4AF560F8F673F32A3CDB3A05A73
36BF63011B2DFBAE1B24D89C50C3C5DDC402AA4DD091435564D3016CB04EB2BD
6579FB245F495A24E781A9566FC984E728453473F51553253B2AD5D1D8E6C7EC
56EDB2827455955DA572FC9E8668AEAC4A17C1EC3AA7B0481590996F0647BDE8
18459D1E68F567BC73F9173913E969F2CD6E0B96D9268ECB09F88F39E304ED8F
3130A957F8096F226C1533C992E0EF329D08A840DABDA916CC1DA7292EE9775B
67E1671603BBE6498ADC2D1C31DFB04696E2AEF12DDF571ABDB6BFB1799AE390
BED91455B2F77131B5666F286E049E25E1948391589B431E90D4C94D18B76547
81D4F9AF74BD3372C2E702EFB8D84963893E53F750C948335E4510FE92812462
2323BD400EB58FC37B83E8C8293023F54014844753718162C6A7D29A9DCB4353
571F7D29BEBAD810F20B4DA2D74E72E724711B35FD5A005F1EF478A53F5E6960
3B38111BB6DA08661E15CD10069E76CE34126A833FE4DE6E4EA0916A268D8DA6
035DCB4353F1110E19637E8558332E9D3166FD869A89745CD713AA952952AB66
0767E082AD503D3ACC7084E0E4EDD37E44AB2CB89F6AA57AEB19EA8D601DDB00
2219532F5B1EC07B24D0A9692B72991D4FED42EF038F77F70B14471CCD880663
6945CC8074184F77E714CA2D3BA152901747A00C799EFF39CDB3A9506C1DB78E
FE76D81EA6D2515CC2D28CCA2481B95EF7E5C577857F27E6671EACCF11CB0454
671BDD68A4856D46B1B50F112D511E8E376E168B7BC85A1F6D92EF422BA73250
6238E7B043C00A066557B349125494DAD6FDC3BF315BCBC1B4C073C14DB4A351
1C0F92BB230869A41C7096AC88FADA20C5452EF0633D73C071CE02A4D7568BD3
49BA7FE29B65CD54C73E311DC12FCEDB702E704B3F3F1CF90F2EAF5AF1CA6D3B
3B36E9919E1661FCA45C09F169E0B8A1654467D18F339B4655B9613848938A8E
53506E957E398A8B1D3F1F1D7FD158E523C4127229FB74C0E1F1623C59A70ECA
1673D96E4CFC19E5F05E1636358532DE863C321C8A74C4C04BE75C519A508F5A
2957C62464DF2A2F00752BBFB4985094AD96EAAD0C108D60934BF959BAAA357D
4FB15959B8126D372BDD36942BD52F22A399EDE5BE6861924E294D0C685FED0C
7D07D20277B061B8770726A8909F965E1D793AAD14976DF253DBA8C7231CE26F
E62E0A7C4E8D33B7ADDA86A3104E218839560944DAC9AD6CB1A53EBE1BE8AE85
6D186855E9C7C045D963B946EE1AE53254FA2044DDA8E144F053F55B75BDE37D
FB5B5B3B3A755D9A9E94C5E8C766A57A8E5A0DE6237E9AC25ED173214138EDCA
8CECA4FE3430A19EF50C16D1280FE56903F64B8487BF4D9A5448CA5475D79A5F
6B99B20CDE17274B73E0C21A31B5F102500CAC7AA82E68723AD3965039495477
4D7AEC94864070EF89F5630778
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC88F86B07C1097F9C5C5673B88582CEA8CD622F9B0C79
E463DF7F2F4C6640FF3852BEB520F7B23D8A22E7E601EF9CC6D0A2E6E82E6840
65B82C6A3A6692811E2B4F57723AA3A6E27076A2F63D6CE1FBA7ACD844E732FA
02797B386F2EDCE9FF9F84EEAD17B366D678E61C6176FEC09C94B74DFC090CCC
40AE9DA65E5DA02E7A7E8A840B45B752AF11A279BA06F821525DD0F477831176
84C80B29D318260FBC314986223F9EC4DB5B0EF2EF5D424C6DA581B49C709E1E
98149FEAAB15DFE7F94977C9F4AB20F3D8C391A5FDDFDF5B67E9BC3976D5E50B
846FD2CADD6E5C3689987A6BC19336039591AE9BF280352F53526F7E07CD703C
93CDF2B76B90F055096EAE10BF6794F563F2AD650671AB36C99BBD45E7A8CE34
CB792A606A7D9EFA0F25751BDCE7740D2BC14DF0A3538EC25105BD0CA2485783
361EBC52149C5B9660C0FCC847FD80F67BB3A1F3237F7522F4084B7BC486BAD3
557C8A5956F4ED1B59F70E3721742F99F8F271B2B1EC80832C40E532FC4AC9C4
88F12D88391F3E317A31B5CF413C5AE1C0833A46996E3A4F8A4B2DE2AD885DBF
88E6114724E7ED1BB145B0F970DB565707DEA9C5DC1EAC2C92456833AF7B32DC
A305095C729785E52562098F9C1F2E43FDEBB58E4FBA7C92DA29ECC7EA25E35A
5F0F81B80C9DA0EB028B84A130FDF9F479A7F331CD1DCE4AB6E7671FB290BA88
F672B0D8FCF8D9750E681F623D7D287708E5F941A99DFB741FA95CB396CA21E2
C88A9BEE2580D3D192D3C57B888457C900E82C41305189728758241D75D2E398
9C3BD46A0E19F9B46BBAAC0AA138012F457ADC722F82DE123299DAA004ED607F
665061AF5B5E0CB55F6C6934F481E9B229A526092767640820EF69EE992179B7
74C31AB3FBAD1C6412BCB7A92B2BE3AF10DE3603914DD1B5758927CDB632F3FC
73F283BF24E20F87801685F9439324A4E18DADC58D261142B07C876E263EE9B4
92342362FD21CF40D8D26C37681F6ADE20EBA3FA90A30AE893593F0DE044DF67
E8F40227A761FECFF4A396486FC824DCF1E78CBA8606212E474676E1EA576871
C91EF99E1A64D2A3EC70F7E9E2CAFE6E6B8791C08D064096C1D4D817E396C4C2
BA7531C3F1A53833DEEA433980BCAFDBF4B778214D9CC4E0AB3314AFA236CA13
C8DC7C03636886FEF2D118985D5E781B8CEC01676770619E49B8C455E889BBF1
CBF88D00D336290176B3E0B546698B6A12F524DC97030DFD0E38A250AE8B56AA
B796E5C5CF21856CDC4A24F11A73B4172996F81144B1869E7DE5BE5457BED651
77F683B1A698CFBF444CCD1706558BB9A3980B0AED1202631204429FE7C84BFA
04443334F2AD889E4A3E230D0A9A6EAD2210E81DB036202EFB584A475E93B0E4
D44ABF891842DFE64A59F22ECF1E7F2FE531C27ABA8ACD2528353CABB3295864
21D462D8286E2203A690B1900BAEB2AA27813CF391B8279F264177238C558640
A904EBAB4A26E008332E1FB8A6F75E0E192B5AEC490A066D10993325A0EC8BA8
CE852E3CAE46210B3F2FB768CB331F47182348F3F07584BDD093D3C2B6866C63
4D07E450A2DE533175E12692B42F4BD9856CC30555FC7A42BBE2E8B698898B8C
456B76B6F1DB11A0AAAD75057442BF55853471364DDD31DC9CCB23043E51FD85
32975B7F7CD0F1D75102D7BEB12F2AF10E4BAA648B722688FF17764CBD1756F3
2763EE0A7F2B477433FB1C69B2555CCCDDDF5930A5DF08676A816FCDB0D47A63
B13E94CF0E77EFE6EFC2E2ABF6EDACBF098A54372F54D7F3CD8F339C056D245F
B7395F8E7A7B24E65B512556B21C2547351FBA08D4E3D97D99E0ABA1EBF44D79
2AAC19C9A5E1CDCD8281564806615E4AAB5EDB62C2FC35FF95CBCFBE6CB3C85D
2088E9623DD2E25F1CD83554F84888CA17948C9FB31CF86E555B4815AA6C832E
99F8F271B2B1EC80832C40E532FC4AC9C488F12F67924D31BEAAA6D87458CCF2
DF2A2ADE3A3FF13E5EB2F4A9F8DD18F1B864CE05D979576B50672EC9C304CB7F
42AC15C8B6217F03608255CCD94EFC5310812F027177E2C7440531BDB6D171A3
7BF4196D37789A3C675061FDCE319175CEF889598D8408D119042463F34FF15A
2713E627F85FE41DE52BC1E833F09CDB6293CEA46EF483D104DC0AA36BB217D2
52B3ECB892B79AAAD338563FB8CA241C9F034D62DB57104C92D86FB8FDB57699
8140FAEA8AAAB10492F99EC46139CC065C2957E7A50C176988AB62264D91708D
42DAB90326FAEF47A30CFD352BE020F29D5E5A15BF8B82D7ED015D6CE2DD0AA8
5D581F0C759345186A886D8B904E2F48837F25406FD091DED0E491C01211B9BB
C18F8AF914BEC483EDE3B32743D1E05E12EC5ED0C52569EF6C72B08BF71BEC9A
482E0E221B879F94D683DC000E7638FC9B4B5B1162D91E05153FDA48DBF16285
481B45441AC98779AAE10FEED614B034F47A2C66B86071F7C964E300A1839C53
D8150709FA2BF6337945E3982B073184B97FEF8E01FBB6CE168D672EB4CD14AB
3CA75D410572C099EEFF0362461EFB03C7D9738E03D9B569204C94E615613C9A
CF5ECA0B18885DEDF4160C487BAE2A404792873C19ED2AC488B791CFE2A54326
1194DD941E0FFEEC1D375AAF8FB57EBC28858BFF37A059777329D01AEDAFE33B
684658DD4F9BD568DF36C88A1A12217AB6AD715083B0D76DD0A9A7215DFA6658
6C799BD27180419D9759EF9C05E3FFD4736F5301646EE78285C2FE0AF08BBF04
1201287DDAAABC3EFBC785D08B0B3F9D48BDC3A25BCE79E7422F2FA8F03028B7
93A2CD321F0287BB508FA7E40F08EF6622326A04B2D37A45A80B6EA80515520F
D205C858BEB0F3ADB9B1CFE61E92FEDBF6659A71E90C2CBCCA48A76E158CAB4F
55BC06A431B8D3E076DB7CBF553E396F12CBF906FC1BE098EE5B5BF0816745F0
8CE822A3B4ACDD2DD42CB8572A2A633EBFB45CB359E22FB7CE315922F673E348
A8169D782F34C0A16262B1E7903A9092938913834A59FB6E7F35BF843FB940D3
76B05366F02A306AAB826C418335C7CB1263C8D675B85DBA3928078BDEC43C3E
831C524797987098142854C06A6D1D1F34025040E7515F121FDDE9691197F36F
6B37F90101B50D4E575BBDBAA343D3232B5B5C0119337BB50ACF8FBB2C8AE4FD
195020B2FB0850BE53569C168EB65C2E005C48B227C99A02D98FBF9A287785B3
D1090B34D144AC8372ACD27EE62C76D552798DC571B8EC8846CECF493E644B35
9ABA093B9816F1C4BB18608811231DA7B47C1782CEFF81A75CE8F7BBFA0C8EA4
28DBA3DCC8C6D41E7512ABE199C006521EEEE803C6A826980CBB8D1D93D8D719
CEF2563E071A7CE1B761D1D1102E675499E9A72B9D454EA50D627B0B1D50AF7B
18DA5B3375B4E69D33F43CB160D2C46EE92F67ED4EDC0579DA0F12B94CEE50D6
B976EC315FE8B37E12F0638352EA4E9CDA98FD7D242E24CD7C056466B29816B1
7AA95C9497A3E5EC7121B0E08E7EE7BB2AE297E4A9116BCDE392124EDA95C8BF
A196939BBF07BB11893D5520B6BA002BF22967E4384B5A54E6DF35F7D4050199
13DE213DF038C6C0BC40C1A7A4CCE94D99B6370D4D606F3342323DEEF9F5FFF2
5719F7DAB890A1EC4477B971667D19E484BAF5BB195AB2B834D39A5C52B67767
EAD0760EFF18B64467D4678F48701B6684C029B17445A2660795DD75A6A334D9
1208492EFA86EE6AE655ED5A9CD4C8CDC57A0BBCB52072E0EEA513DADD9184F9
D873D8182A3FC64D0353E2BB7DEF1B5F1F2EB435E559049E6892D2733FB4F63F
FE7F6DB3CF8C68ACB79F1FBEB1781F3B337A8780AE36928F433AAEA0F47E675C
1CC9962FD40778788904ED174E0AD2E082C8D00D04FA04AE27F05FA0A7CBDBC1
12450AD526358BFDE0CBB5539841A0A69E5E52421EB00FE3CA04FB3C492D0C46
BF58EC1A670A0DAC874D8E80811E28CF90CAE8D743A74BB5C85E09E48A96CB71
6C86D60C9395FE2FB851500C48329D407AA91BC3A286CA80954FFD059BC1BCC6
9596536A96F437E5C47FD0B36B6948F62BF5428AFDE6043B54F153A37F256CF3
B15F151A2B6DB6AAC6539B7ECCBB297274EE616773B4276B289701916275E548
397538945CCFB40F623D67810828298E06654757B7945A60DDCF0C357EBFD017
624B8602F24907457667C8967BB8AEC4FB7E954E4B9ECABDB6779B95E21D8184
3AC452D7B270F1DB9188CDD26817CE5770F4CE6EE6B18BD4D1E549C65E4CF9F4
37B957A4F6562173CE1284DAFDBABF9671332646252F8C8CAC3BE8EAD1AC11DA
BFB261989AAF73A01C416EBBDFB988EA22B5F8BC9055293B5878339F9DE0BB17
3B772B3E805EED0A7C962C94D8E256D5B4FA793FDE498CDA1B8593B5882A0835
182F583268777D49044ED9F95B247ABC3D2BFF00676358964CD236B00C5859FE
3939FF8EB78509A594261332A564B411291CD7820B8718C8DBD960636C0D2EA6
AFFD78EA9DD3BB501447BF5E06322D7B2543F988A3D0CF75B04B5CA4F26C1429
6BC714B798D93071371A29776106F94ED477616AEB6AF1121FA7863B7F6F415F
E3841FFE4CD0F63DD1BA8C5C2508B8AEE0A1DCE6215E1B2338C4B8C786FF816E
4EBE0EFFD9A2987922E0CFAC1D88B27D65DF563C7C176D356437D11F88A4C5A9
4E0DC159C8885DED6B73607409AF7AF66406612D652B8EA9AAD4718D15F79916
57A11736C8B41A22B5A04FB06CDDECCA84B806F9021A36B31F0AB5F2E2F49105
1D64CCEF0B4600A60BC4045A49F9F63C8F54E4D6357EAF660FD5771A40CE3A3D
2217E35C46FA2C0FBD7D8EF96889F154803A8A80562EE7263E135E45F9E0588C
3CC3D785F36FDFFA04BA622884DD010A01789D6605B31BD6660E6495F99614EB
568EC5F020A2363EC978339BDBA6975E9D228E45982E70F12854DD10A0F0196E
76B607C86A975007BF6EFC3BE092A741D56AC11F3B52286C6AFAE283D24702B1
BA75649DEC69A998932568821CA8D0D9CCBC64B8E242588EADC41AD228BE9083
EA93087CEBAE635770104ACE194948BECD3037E35EA8D408CCD0979ADA4C82BA
3A2B4AC962265143A086DECF3DEE5ABE3E0C5675E2D5EE6C6EAC3E24C1D8BE35
A587D92640EBC4DB8040631AD14745E7438DE0214872A813910E11474B2CB6E7
EB7F531F664104906FFC55197963BC40CA4DE597B01D6F4724F67D9508E4AC3D
FF6C120D24A5DA53DB931FDD69316375ECA503AA66CB773D59A8C68C45CDBDD5
2F5EDA82ECE1B4D54CC9FEAAB26895172DBC44732BF933A099E6E41D43AB1A99
D263CBB58D8F262B4D22C9A5708487EB94EDFE9C06F020A031CE5B5BFBE26EA5
1B95B36854190A3D19A0F502C9925DE10C69FDDF7A243D6C048E1DA65C0279EB
01F7D51C9E2232D3F16D93CBA112D960403AE74C5ACF52B951ADDDD8A4CE5152
14291DE38CFF4B285D3A5BADADC3DA8E0A77DF7894229F54AE1E2407DAB07677
58AA46FA8926B2CA19279DDD5C49B10E9AC65E28BE18C97341BA87090FA6052E
0B2BBBB579FCB0699CC0F241E69117B49DC2E13A9AC7E7BCFFCEC6DC1718D9FD
0C5C18C8193E315121EF9FEC5C4196435BF52E4726CB9A3810E046A18EFD423A
65D32FEA45020D5A35FE276D2BBDD02D0B1804227B1F17A125A0D6B28BD3DF7C
7F4A226F4D9D78DC27C8EE8F26D3456D51C8AD8225B88D288B6567E5785F620B
3EC390A35756FA660040741E7DD47ACBF0807CFA0AA31704885A32F8FE134E68
951C44723C840E4C1049DBF9B35DDF584A1D5E60E1168AD34C007CA68E74F042
3B37A5BAB682C16AF13FB5A07D82CFA63E3DAE5C225F36FD9F2946322E81F9D3
35CB1D04896A32D30392096966F5272538BBDADFDA467A0F1B7F63988AC2F6FF
DCADBA2F806213A9A005A25CE928F9F07723006F4623DD5339A6D69B42924505
87DF43D2468D765163A2591F1095766665EEA8931D81FEF0ADE72ACA8AEF1939
8D68A1EE9DA6CB92C9FD0D93A1A402BB1F3028C4AB01CC081AE6C21116E79C97
2788C565071177C48B6A4C7265CD8CD61B6DC2A534B41645FD7E0F586CBF2D2E
761C5F15EAA9219A1FCE65F30AE1BCE230A3299C69B114CEFC77D65009D9CC9B
7C64529C322DF20A5C7F43933F42BEB2E6D105BD9F2C8A67425F9A9CBB2900AA
C002C96E6C0950B44A35B5DDC6DF9A4488EFD66D90C62F76A4915CE758778906
02D4425D34F0E1B13E1D484332CF19C98FFA980923C858EEC8B04316A0F5F505
6A92C623495190A3A448842A457D7D25D524183CE8A996295925F508E5D37F48
F3127ABBA8E875EEB01C792A8895C3207035C3931D4574B925D965A43FDAEE11
75D8F753C66D91BB5335099AAD9F4224D8ADB7DCBDB84FEA11E36B1D3B0680F6
E672237601E948CB08D7DD69CF448B8F54705BC650C994D4EADF30A25ADD0287
2E3E0A7479C2407949A27E3F1C3A4F677AC60A5B7EDE9194C3C58F59AF323C4F
0786FAFF685086C9C9C74302DE8E8AE1FE56B41D3292D8EC2CEE81E472B4B76A
2A598DD4D0749BB236630474F9952AC92CF4C1193EE42231B63C13FDC15FAC8D
AE727BD7392918CC068A3DE13F219DEF546DE9097AB64CCBFE040F33C903A5B1
3630527CE2C0FD09E372A1C8EDFC54E32E4E59FFDC397E947004A9572DA045C1
CA54E782ED8591953A59FA9C723863885184931EFE1814A6D6258B63F2340BCA
1722B7700497C162611D6D89BDC9B3826859834CD17B381DEB7F2F14AE9BCE7D
8E340173AFC3266A10FED5AF9617298DEDFBB8700D468CBAB29EECE32317CB4A
ADE947CAA9803BD2A3DCC067536D08112D839B8BEE48B4055BF2CA77F7D9C46F
5843278B2BB5EECF82AE62468106621B0C0B5B516E940B653C3C15F178DAA3C1
18D0353E6BA5E8E5822C93963A27890D6F05C35D6F9A7FBD58EF48867FC46A45
C82A3C0EDBC438E6D5B43201A306D9B48E70630766EFDE38B9F987B189F7C903
CA90CC3B691C69160257328483921D735828F7227BA5D84633C0182BE37B75A1
8BAA8A24DB62A30E81CFE93DF0412986E6DBA549ACBF1B3D209F1FBA78456D61
2D833375DB683D058EA5E985BD3771C6A19357953076359FE903C9D21DED3B07
5856026D2156CF739546891F33CD817A1CF670C46E6A6C3A58FD556E2FA82CCD
ED7D0BC2CDEA49195C860F2A3842447CB3978A1A41F1EAF6B9B9EC5CD1533E1A
BBCB53A0A74C7D57BA0E3B73895A45C19B6451958E5A66177135B18EEE555272
02C4A9603E077F2F6A4D50A65642890B6BA18A69614DED449C7922B72BC7E2A2
629B8DAEA49E38365BA14E688025BA4F6EABB4C58994CBFD871440A05AE5B024
34C50E61603CF500B5D3DC09FEF6C557816057C553E5ED3C662F3E9F1C8BFFC6
4390452DF1123301B4B2095F72A95D77E188FE743FC53E7538A6CF45C221C0AE
1333882C0CCC302785165F5C52F7555DE9734A232D129CD954992C575989C869
9B25FCD64F17F600FF557484EFF09CBA961C58206672702FA50A6E9A7B3B92CA
CC866F7D4612E5FBD6ACEBB2DDBFCB5948B4B7A594F17A505CFC6629FF07A2AB
1B83EBCD30CBB1AE3B574F7B8F2813D2D5330F418F8A6CD1D19B23E66E9A5907
E1A46038D77F9439CF357C474997F142E1E35DEE6A86BF7394228125B95375FE
EDE1604D89E72E926E09D3E464668E8DE41BC9A1144CDCE0AE0FB9DF284B6C10
A4383664221A3F9DA29F1549C7E4405708FF8F2C2C2FFBB4C993C18E1C1E2A48
F6DC282C90C9AE498E3B2CABB719E0A8466DD16059CE6B245CD67C425678EAAE
52F21A26810362F0D34E6EC3A7ABBCBEC3A3139CFF49E6F1A6F7127E8F9BA4D5
AA7018C001B2EBEC3B820FF7F1AA3347A759F89756FBCBCF5E1B86C3C7963743
7BED50A3C85FBD4D5C435B7345D9400A906F59002D0EB33D105CF080B9246E21
A426C613A8AA49120D47660E77B8B501D4F5B558D21875DE9CB6E871948F123B
71E9F01C0A49D9E5C961146830294C2BC8C6E6A68935EE67DE89DB5532E95C19
6740AD9E561E230C51FFB932BA0F84A894D1CAA13627827AE0FE11F46873C478
45DF59F3C56ED2C53745103EECE0034D619171A42897491CE6E0979CCCDF39C7
E3528F0E0ADA4F319EB783DFA3A08225ECE60875906299AA2A05223C1FE46533
A290F0E0B0F7878B37C9108A98F8E857AF523484CC1A5562B6BB067BE08722DC
E6A5762E715DE608DF5F7E964FD5E34CA9DC487AA0D0FEA2036562658F39C302
5E2B13C4EEAE3D918D8F21E1030F3472157105CF6B77D1F1D2CFAA7F9FC3C1F6
03F6D99D787A0967BC15145E0873A486AFE8F8C222C33DB4EB32B8E9DC911548
F447D1A24A9526A98546C47578D213F5A02EEA1AC2E831636AF8F3171C95BFA9
832A6B8CF5A4D996620A69B4924132D3FECE263CA5FC38B3B37569D646256995
B25988482B50F8B7224BC9D60E46B2888BD2218E11B5F5DA90C73F95EF511048
0FB860682C3628F5B4D8BC7BFD791529BC8A55A2D46A56C35ED8A20DA49812F7
362C2CBC8A2400B8CFADB8A2F3C0AE6DAD18A8D94B0E6CA4AD7C79DC39B84A99
BD34029D818BA5ED27FF4FA7622915224B1256B92C2A13DBAC242C76D93B7E32
D32486C7AD4AC35AF5FE9259F0E1F9578E45576A09501FE03CC7A13BB66AFBF0
A3ACBE0707E3C47B29A9F7152E074CCB0879611F3BA30A947A1998D3CF80851C
F4953E792467A6D1C39817F9A388E769933D498BB3D4D54BDC6F07C825B74DA4
66A27244DE61A3E2D23A84C0EA98D06D3AE1497F4FB795EC4D085707ABA03CB0
1749CC077FB511E319C5CF2845598F601B1C3396E438625E5ED2A20E90C7488A
1A9E38D32295C983E9553CE3086AD3EB4986619DFDE51C2FBABFBD1CC6CA22A2
F51932AD85A44256EFADDF55898CB28889AD4B2C739373988669416719AB9169
5E9C18046A0C7ED941743FBC8FDED6B6BB3FF724A0321012D8022D6FEA59E8DF
94645BE6C42F6D1DF5D1ACB1D82C3C0D6DC88896EEAC9D3C3BB000E86AD1216E
76635C8CC1DA21B82898B612B65C5EF7C91462653A604CFA92A3C874B288D5B3
C56199F4E83FAA968D67C026172E55FEE86EA06E9AAA5B0C1A163BD583CBE321
0D354EE0C9FCB8CA45BCFFB7A6E11746DCF8B9036A073EBF6938E81863474F26
F92ED2DDF5488ED27DD7D1D600322706E820A1D14F7485394B4A1510F36C87E3
41A0CE3320FBBCD4E1B92274EF9CD742365E00F719859AC2AE5EF431530D0737
56F26B6AB8B893AA5DE4BD4040408C4B2B7A7F111378DA308999A9DFDE3B297F
02B7E27672FF965D4B950C6FE1FDBD871F7016BD4A5B576A4929876B6336D063
19E98403D62767DDBFDCFB9F8DB3ECE55FC7F1298ED015E5973054AB08336EA4
50C2CF17CA8B821508281EACB9F8AD44475729A741CE07ACC97D334FB5AE4706
D23500B38FD5C51228711AA4E9A54EE82A6E7C215D2FCD9066B913066DCB8D66
FEC329D81A7578364B35E91E76530AF5685D6AB805D846DC855215C507C7C726
FDFECE444297FDC1DC7D035561D69910C9D809E8B1A0DDEC8B0125F71383D120
4AF973932F45BAE89DB6ED97B501C4D1C9B9EA9A0B7994807858E23E8464B381
786566BC05FCB222240D68E184BCF4E72F6E6D53972F3D07271EAD3164276F9A
ED58D1A790B6BF72D097944872220EE0197FCA7B689BC607922C54A1AC86101A
A71776D63F7CD654224393581A7D03E04AF3FBC00FA82ACF1F6549A3D0FBD8F8
D5B6E140D2ED153AFDE425C3C80566
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Christoph/Dropbox/GK-BSP/7. Klasse/_Gesamtdokument/_Gesamtdokument.dvi)
@start /Fa 131[261 1[418 44[862 10[666 705 13[470 2[470
2[314 3[366 366 40[{ enclmec ReEncodeFont }10 885.568
/LMRoman8-Regular rf /Fb 205[406 406 49[{ enclmrm ReEncodeFont }2
664.176 /LMRoman6-Regular rf /Fc 188[969 969 969 969
14[969 969 30[661 661 16[{ enclmmathex ReEncodeFont }8
1106.96 /LMMathExtension10-Regular rf /Fd 234[747 21[{
 enclmec ReEncodeFont }1 1328.35 /LMRoman12-Bold rf /Fe
173[959 14[959 67[{}2 1328.35 /MSBM10 rf /Ff 242[1594
13[{ enclmmathsy ReEncodeFont }1 1594.02 /LMMathSymbols10-Regular
rf /Fg 149[261 57[255 33[470 12[261 732{ enclmmathsy ReEncodeFont }5
885.568 /LMMathSymbols8-Regular rf /Fh 165[676 7[815
6[861 6[846 12[553 9[369 45[{ enclmec ReEncodeFont }6
1106.96 /LMRoman10-Regular rf /Fi 160[909 45[606 1[606
47[{ enclmec ReEncodeFont }3 1212.12 /LMRoman10-Regular
rf /Fj 134[465 530 3[340 3[474 4[490 2[542 1[452 21[597
2[904 6[595 10[261 33[540 25[{ enclmmathit ReEncodeFont }12
885.568 /LMMathItalic8-Regular rf /Fk 143[1107 5[369
2[664 664 7[886 39[0 3[886 8[1328 7[1328 7[1033 3[1033
5[664 13[369 1033{ enclmmathsy ReEncodeFont }14 1328.35
/LMMathSymbols10-Regular rf /Fl 203[993 1[993 50[{}2
1328.35 /wasy10 rf /Fm 140[371 3[470 523 4[261 5[418
41[470 470 470 470 470 470 470 470 470 470 4[732 1[366
366 40[{ enclmrm ReEncodeFont }18 885.568 /LMRoman8-Regular
rf /Fn 139[506 513 3[650 723 4[361 5[578 1[650 3[361
1[361 29[1012 1[361 1[650 650 650 650 650 650 650 650
650 650 4[1012 1[506 506 40[{ enclmrm ReEncodeFont }24
1328.35 /LMRoman12-Regular rf /Fo 129[650 3[604 634 739
3[470 1[586 1[653 4[676 1[444 749 623 641 603 1[560 553
683 8[1079 1[758 5[838 994 1[1258 1[1107 8[988 975 2[1012
650 1012 361 19[852 13[738 9[525 15[{ enclmmathit ReEncodeFont }31
1328.35 /LMMathItalic12-Regular rf /Fp 650 2[723 5[650
17[650 31[975 73[578 686 686 939 686 723 506 513 506
686 723 650 723 1084 361 686 397 361 723 650 397 578
723 578 723 650 6[795 2[1336 975 975 939 723 957 1[885
1012 975 1192 813 1011 668 469 975 1021 849 885 993 939
921 975 1[614 4[361 650 650 650 650 650 650 650 650 650
650 1[361 434 361 2[506 506 361 5[361 3[723 723 759 27[{
 enclmec ReEncodeFont }76 1328.35 /LMRoman12-Regular
rf /Fq 9[1076 49[1625 73[956 1136 1136 1554 1136 1196
837 849 879 1[1196 1076 1196 1793 598 1136 1[598 1196
1076 658 982 1196 956 1196 1046 6[1315 5[1497 1196 1605
1[1470 2[2041 1293 1685 2[1682 1691 1353 1412 1649 2[1625
7[1076 1076 1076 1076 1076 1076 1076 1076 1076 1076 1[598
717 45[{ enclmec ReEncodeFont }52 1912.83 /LMRoman12-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1629 x Fq(K7)780
b(-)h(DR)g(-)g(1)f(\304nderungsraten)e(-)j(Thema)e(Mathematik)h(Sc)-60
b(h)g(ul-)-2331 4817 y(arb)60 b(eiten)716 b(7.)h(Klasse)p
0 TeXcolorgray -741 8124 a Fp(1.)p 0 TeXcolorgray 651
w(Die)566 b(Abbildung)f(zeigt)g(den)g(Graphen)f(der)h(F)-108
b(unktion)565 b Fo(f)707 b Fp(mit)565 b(der)g(Gleic)-36
b(h)g(ung)565 b Fo(f)142 b Fn(\()p Fo(x)p Fn(\))593 b(=)921
10116 y(0)p Fo(;)p Fn(1)p Fo(x)3321 9634 y Fm(2)3848
10116 y Fp(.)921 12661 y(Kreuze)433 b(die)h(b)36 b(eiden)433
b(A)-36 b(ussagen)433 b(an,)h(die)g(f\374r)f(die)h(gegeb)36
b(ene)433 b(F)-108 b(unktion)433 b(zutre\033end)f(sind!)p
2683 16582 22807 45 v 2683 23825 45 7244 v 3391 18638
a(Die)412 b(absolute)f(\304nderung)f(in)h(den)f(In-)3391
20630 y(terv)-72 b(allen)432 b Fn([)8 b(0;)221 b(3])433
b Fp(und)d Fn([)8 b(4;)221 b(5])433 b Fp(ist)e(gleic)-36
b(h)3391 22622 y(gro\377.)p 23080 23825 V 1 0 0 TeXcolorrgb
23788 20536 a Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 25445 23825 V 2683 23869 22807 45 v 2683
31112 45 7244 v 3391 25925 a Fp(Die)1051 b(mittlere)f(\304nderungsrate)
f(in)3391 27917 y(den)433 b(In)-36 b(terv)-72 b(allen)434
b Fn([)8 b(0;)221 b(2])435 b Fp(und)e Fn([)8 b(2;)221
b(4])435 b Fp(ist)3391 29909 y(gleic)-36 b(h.)p 23080
31112 V 25445 31112 V 2683 31157 22807 45 v 2683 38400
45 7244 v 3391 33213 a(Die)962 b(momen)-36 b(tane)960
b(\304nderungsrate)3391 35205 y(an)434 b(der)f(Stelle)h
Fo(x)369 b Fn(=)f(5)434 b Fp(hat)g(den)e(W)-108 b(ert)3391
37197 y(2,5.)p 23080 38400 V 25445 38400 V 2683 38444
22807 45 v 2683 47421 45 8977 v 3391 40500 a(Die)1101
b(momen)-36 b(tane)1099 b(\304nderungsrate)3391 42492
y(an)493 b(der)e(Stelle)i Fo(x)469 b Fn(=)f(2)493 b Fp(ist)f
(gr\366\377er)h(als)3391 44484 y(die)366 b(momen)-36
b(tane)365 b(\304nderungsrate)g(an)3391 46476 y(der)433
b(Stelle)h Fo(x)369 b Fn(=)g(6)p Fp(.)p 23080 47421 V
25445 47421 V 2683 47465 22807 45 v 2683 58237 45 10773
v 3391 49325 a(Die)435 b(Steigung)e(der)g(Sekan)-36 b(te)433
b(durc)-36 b(h)3391 51317 y(die)1543 b(Punkte)g Fo(A)p
Fn(\(3)p Fk(j)p Fo(f)142 b Fn(\(3\)\))1543 b Fp(und)3391
53309 y Fo(B)67 b Fn(\(6)p Fk(j)p Fo(f)142 b Fn(\(6\)\))441
b Fp(ist)g(gr\366\377er)h(als)f(die)g(mo-)3391 55301
y(men)-36 b(tane)557 b(\304nderungsrate)g(an)g(der)3391
57293 y(Stelle)434 b Fo(x)369 b Fn(=)g(3)p Fp(.)p 23080
58237 V 1 0 0 TeXcolorrgb 23788 53183 a Fl(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 25445 58237
V 2683 58282 22807 45 v 0 TeXcolorgray 0 TeXcolorgray
26872 42538 a
 currentpoint currentpoint translate 0.59262 0.59262 scale neg exch
neg exch translate
 26872 42538 a 26872 42538 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 257.78177 a add def
/d 0.0 a add neg def /h 204.29047 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 26872 42538
a 28447 40585 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 8 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 243.5554 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.45274
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 10 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 186.64992 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45274
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 243.5554  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 243.5554  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 186.64992  def /dT 1864679 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 186.64992
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 243.5554
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 186.64992  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 186.64992  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 243.5554  def /dT 1864679 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 186.64992
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 243.5554
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 27202 40870 a
Fm(0)27201 37721 y(1)27201 34571 y(2)27201 31422 y(3)27201
28272 y(4)27201 25122 y(5)27201 21973 y(6)28212 41931
y(0)2679 b(1)h(2)f(3)h(4)f(5)h(6)g(7)f(8)28447 40585
y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 28447 40585 a 28447 40585 a
tx@Dict begin  { 243.5554 186.64992 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 28447 40585 a 28447 40585
a
tx@Dict begin  { 5.0 6.67703 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 28447 40585 a 28077 40871 a Fo(x)28447 40585 y
tx@Dict begin  PutEnd  end
 28447
40585 a 28447 40585 a
tx@Dict begin  PutEnd  end
 28447 40585 a 28447 40585 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 28447
40585 a 28447 40585 a
tx@Dict begin  { 0.0 0.0 pop 243.5554 186.64992 exch pop } PutCoor
PutBegin  end
 28447 40585 a 28447 40585 a
tx@Dict begin  { 5.0 22.88857 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 28447
40585 a 27180 40917 a Fo(f)142 b Fn(\()p Fo(x)p Fn(\))28447
40585 y
tx@Dict begin  PutEnd  end
 28447 40585 a 28447 40585 a
tx@Dict begin  PutEnd  end
 28447 40585 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x 0 def /x1 8.560000000000006 def
/dx x1 x sub 199 div def /F@pstplot (0.1*x^(2.0))  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy  dup
1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto
} { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not {
/x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 1.2 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 28447 40585 a
tx@Dict begin  { 113.81097 56.90549 } PutCoor PutBegin  end
 28447 40585 a
-172 x Fj(f)28447 40585 y
tx@Dict begin  PutEnd  end
 28447 40585 a 55407 42538 a
currentpoint initclip moveto

55407 42538 a 26872 42538 a
 currentpoint currentpoint translate 1 0.59262 div 1 0.59262 div scale
neg exch neg exch translate
 26872 42538 a 47992 8124
a Fi(___/1)p 1 0 0 TeXcolorrgb 47260 10116 a Fh(K7)369
b(-)g(DR)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 62420 54804 45 v 0 TeXcolorgray 24746 81281 a Fp(1)p
0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fq(K7)531 b(-)h(DR)g(-)f(1002)h(Graph)f
(einer)f(F)-179 b(unktion)529 b(-)i(Thema)g(Mathematik)-2331
4515 y(Sc)-60 b(h)g(ularb)60 b(eiten)715 b(7.)i(Klasse)p
0 TeXcolorgray -741 7823 a Fp(2.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)587 b(ist)g(der)g(Graph)f(einer)h(P)-36
b(olynomfunktion)588 b Fo(f)729 b Fp(vierten)588 b(Grades)e(im)i(In)-36
b(terv)-72 b(all)921 9815 y Fn([)8 b Fk(\000)p Fn(3;)221
b(2])p Fp(.)921 12360 y(Kreuze)433 b(die)h(zutre\033ende\(n\))d(A)-36
b(ussage\(n\))433 b(an!)p 2683 16354 22807 45 v 2683
21491 45 5137 v 3391 18296 a Fo(f)576 b Fp(ist)433 b(im)h(In)-36
b(terv)-72 b(all)433 b Fn([)8 b Fk(\000)p Fn(3;)221 b
Fk(\000)p Fn(1])436 b Fp(p)36 b(ositiv)3391 20287 y(gekr\374mm)-36
b(t.)p 23080 21491 V 25445 21491 V 2683 21535 22807 45
v 2683 26671 45 5137 v 3391 23476 a Fo(f)576 b Fp(ist)434
b(im)f(In)-36 b(terv)-72 b(all)434 b Fn([)8 b Fk(\000)p
Fn(2;)221 b(0])436 b Fp(p)36 b(ositiv)3391 25468 y(gekr\374mm)-36
b(t.)p 23080 26671 V 1 0 0 TeXcolorrgb 23788 24435 a
Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
25445 26671 V 2683 26715 22807 45 v 2683 31593 45 4878
v 3391 28657 a Fo(f)518 b Fp(ist)375 b(im)h(In)-36 b(terv)-72
b(all)376 b Fn([)8 b(0;)221 b(2])377 b Fp(negativ)g(ge-)3391
30649 y(kr\374mm)-36 b(t.)p 23080 31593 V 1 0 0 TeXcolorrgb
23788 29487 a Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 25445 31593 V 2683 31638 22807 45 v 2683
38766 45 7129 v 3391 33579 a Fp(Im)434 b(In)-36 b(terv)-72
b(all)434 b Fn([)8 b Fk(\000)p Fn(3;)221 b(2])436 b Fp(\344ndert)c(sic)
-36 b(h)3391 35571 y(das)772 b(Kr\374mm)-36 b(ungsv)g(erhalten)771
b(der)3391 37563 y(F)-108 b(unktion)433 b Fo(f)576 b
Fp(mehrmals.)p 23080 38766 V 1 0 0 TeXcolorrgb 23788
35534 a Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 25445 38766 V 2683 38810 22807 45 v 2683
45938 45 7129 v 3391 40751 a Fp(Im)434 b(In)-36 b(terv)-72
b(all)434 b Fn([)8 b Fk(\000)p Fn(3;)221 b Fk(\000)p
Fn(1])436 b Fp(\344ndert)d(sic)-36 b(h)3391 42743 y(das)1289
b(Kr\374mm)-36 b(ungsv)g(erhalten)1287 b(der)3391 44735
y(F)-108 b(unktion)433 b Fo(f)142 b Fp(.)p 23080 45938
V 1 0 0 TeXcolorrgb 23788 42706 a Fl(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 25445 45938 V 2683 45982
22807 45 v 0 TeXcolorgray 0 TeXcolorgray 26871 39938
a
 currentpoint currentpoint translate 0.70587 0.70587 scale neg exch
neg exch translate
 26871 39938 a 26871 39938 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 216.43248 a add def
/d 0.0 a add neg def /h 262.07816 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 26871 39938 a 39015 22293
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -142.26372 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 106.72731 0.0 -109.70517 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -85.35823 0.0 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 102.6775 0.0 -159.40065   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 106.72731  0 -109.70517  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -109.70517
 106.72731  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-159.40065  def /maxTickline 102.6775  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 102.6775
0.0 -159.40065   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 106.72731
0.0 -109.70517 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 102.6775  0 -159.40065  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -159.40065
 102.6775  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-109.70517  def /maxTickline 106.72731  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 102.6775
0.0 -159.40065   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 106.72731
0.0 -109.70517 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 37770 19429 a Fm(1)37770 16279
y(2)37770 13129 y(3)37038 25682 y Fg(\000)p Fm(1)37038
28831 y Fg(\000)p Fm(2)37038 31981 y Fg(\000)p Fm(3)37038
35130 y Fg(\000)p Fm(4)37038 38280 y Fg(\000)p Fm(5)41930
23638 y(1)2679 b(2)h(3)-13434 b Fg(\000)p Fm(1)-4352
b Fg(\000)p Fm(2)g Fg(\000)p Fm(3)39015 22293 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 39015
22293 a 39015 22293 a
tx@Dict begin  { 106.72731 102.6775 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 39015 22293 a 39015 22293 a
tx@Dict begin  { 5.0 6.2015 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 39015
22293 a 38672 22579 a Fp(x)39015 22293 y
tx@Dict begin  PutEnd  end
 39015 22293
a 39015 22293 a
tx@Dict begin  PutEnd  end
 39015 22293 a 39015 22293 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 39015 22293
a 39015 22293 a
tx@Dict begin  { 0.0 0.0 pop 106.72731 102.6775 exch pop } PutCoor
PutBegin  end
 39015 22293 a 39015 22293 a
tx@Dict begin  { 5.0 6.2015 5.16667 2.33331 -40.  Uput UUput } PutCoor
PutBegin  end
 39015 22293
a 38672 22450 a Fp(y)39015 22293 y
tx@Dict begin  PutEnd  end
 39015 22293 a 39015
22293 a
tx@Dict begin  PutEnd  end
 39015 22293 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -3.8556976473324927 def /x1 3.751037706475264
def /dx x1 x sub 199 div def /F@pstplot (-0.24536523768700924*x^(4.0)-0.9953912860045361*x^(3.0)-0.018539049251963063*x^(2.0)+3.9815651440181443*x)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
39015 22293 a
tx@Dict begin  { 47.23383 50.87769 } PutCoor PutBegin  end
 39015 22293 a 915 x Fp(f)39015 22293 y
tx@Dict begin  PutEnd  end

39015 22293 a 50830 39938 a
currentpoint initclip moveto
 50830 39938 a 26871 39938
a
 currentpoint currentpoint translate 1 0.70587 div 1 0.70587 div scale
neg exch neg exch translate
 26871 39938 a 47992 7823 a Fi(___/1)p 1 0 0 TeXcolorrgb
47260 9815 a Fh(K7)369 b(-)g(DR)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 50121 54804 45 v 0 TeXcolorgray
24746 81281 a Fp(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fq(K7)633 b(-)g(DR)h(-)f(1003)g(Rec)-60
b(h)g(tec)g(k)634 b(-)f(Thema)g(Mathematik)f(Sc)-60 b(h)g(ularb)60
b(ei-)-2331 4515 y(ten)717 b(7.)g(Klasse)p 0 TeXcolorgray
-741 7823 a Fp(3.)p 0 TeXcolorgray 651 w(Eine)457 b(zylindrisc)-36
b(he)456 b(Blec)-36 b(hdose)457 b(mit)g(einem)f(V)-108
b(olumen)456 b(v)-36 b(on)457 b Fo(V)698 b Fn(=)408 b(1)221
b Fp(dm)36746 7341 y Fm(3)37729 7823 y Fp(soll)457 b(hergestellt)874
9815 y(w)-36 b(erden.)377 b(Die)g(H\366he)g Fo(h)f Fp(\(in)g(dm\))g
(und)g(der)g(Radius)g Fo(r)413 b Fp(\(in)376 b(dm\))g(der)g
(Grund\035\344c)-36 b(he)375 b(sollen)i(so)921 11806
y(gew)-36 b(\344hlt)459 b(w)-36 b(erden,)458 b(dass)g(zur)g
(Herstellung)g(der)g(Dose)h(m\366glic)-36 b(hst)458 b(w)-36
b(enig)459 b(Blec)-36 b(h)458 b(b)36 b(en\366tigt)874
13798 y(wird.)921 16344 y(F)-27 b(\374r)433 b(die)g(Ob)36
b(er\035\344c)-36 b(he)433 b(O)g(\(in)g(dm)17279 15862
y Fm(2)17804 16344 y Fp(\))h(dieser)f(Dose)i(gilt:)f
Fo(O)36 b Fn(\()p Fo(r)g Fn(\))369 b(=)g(2)p Fo(r)33964
15862 y Fm(2)34490 16344 y Fo(\031)343 b Fn(+)37061 15821
y Fm(2)p 37011 16034 573 45 v 37011 16802 a Fj(\031)921
18889 y Fp(Kreuze)495 b(die)h(b)36 b(eiden)494 b(ric)-36
b(h)g(tigen)495 b(Bedingungen)g(f\374r)g(die)h(optimale)g(Dose)g(mit)f
(Radius)h Fo(r)45394 19088 y Fm(0)921 20881 y Fp(und)432
b(die)i(H\366he)f Fo(h)9726 21080 y Fm(0)10686 20881
y Fp(an!)p 15040 23781 16304 45 v 15040 26999 45 3219
v 15749 25722 a Fo(O)16779 25240 y Fg(0)17089 25722 y
Fn(\()p Fo(h)18344 25921 y Fm(0)18870 25722 y Fn(\))368
b Fk(6)p Fn(=)h(0)p 28934 26999 V 31299 26999 V 15040
27043 16304 45 v 15040 30318 45 3275 v 15749 29041 a(4)p
Fo(r)16985 29240 y Fm(0)17806 29041 y Fk(\001)295 b Fo(\031)343
b Fk(\000)295 b Fn(2)h Fk(\001)f Fn(\()p Fo(r)23581 29240
y Fm(0)24107 29041 y Fn(\))24613 28559 y Fg(\000)p Fm(2)26239
29041 y Fn(=)369 b(0)p 28934 30318 V 1 0 0 TeXcolorrgb
29643 29013 a Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 31299 30318 V 15040 30362 16304 45 v 15040
33580 45 3219 v 15749 32303 a Fo(O)36 b Fn(\()p Fo(r)17871
32502 y Fm(0)18396 32303 y Fn(\))369 b(=)g(0)p 28934
33580 V 31299 33580 V 15040 33624 16304 45 v 15040 36842
45 3219 v 15749 35566 a Fo(O)16779 35083 y Fg(00)17344
35566 y Fn(\()p Fo(h)18599 35765 y Fm(0)19125 35566 y
Fn(\))g Fo(<)f Fn(0)p 28934 36842 V 31299 36842 V 15040
36887 16304 45 v 15040 40105 45 3219 v 15749 38828 a
Fo(O)16779 38346 y Fg(00)17344 38828 y Fn(\()p Fo(r)18436
39027 y Fm(0)18962 38828 y Fn(\))h Fo(>)g Fn(0)p 28934
40105 V 1 0 0 TeXcolorrgb 7775 w Fl(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 31299 40105 V 15040
40149 16304 45 v 47992 7823 a Fi(___/1)p 1 0 0 TeXcolorrgb
47260 9815 a Fh(K7)g(-)g(DR)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 44177 54804 45 v 0 TeXcolorgray
24746 81281 a Fp(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fq(K7)861 b(-)h(DR)g(-)f(1004)h(Absc)-60
b(h)g(uss)860 b(eines)g(K)-60 b(\366rp)60 b(ers)860 b(-)i(Thema)f
(Mathe-)-2331 4515 y(matik)717 b(Sc)-60 b(h)g(ularb)60
b(eiten)715 b(7.)i(Klasse)p 0 TeXcolorgray -741 7823
a Fp(4.)p 0 TeXcolorgray 651 w(Ein)550 b(K)-36 b(\366rp)36
b(er)550 b(wird)g(zum)g(Zeitpunkt)g Fo(t)567 b Fn(=)g(0)551
b Fp(senkrec)-36 b(h)g(t)549 b(nac)-36 b(h)550 b(ob)36
b(en)550 b(abgesc)-36 b(hossen.)551 b(Er)921 9815 y(b)36
b(e\034ndet)432 b(sic)-36 b(h)433 b(nac)-36 b(h)434 b
Fo(t)f Fp(Sekunden)f Fo(h)p Fn(\()p Fo(t)p Fn(\))h Fp(Meter)g(\374b)36
b(er)433 b(dem)g(Erdb)36 b(o)g(den.)921 12360 y(Ordne)432
b(den)h(angef\374hrten)g(v)-36 b(erbalen)434 b(Besc)-36
b(hreibungen)432 b(die)i(ric)-36 b(h)g(tigen)433 b(T)-108
b(erme)433 b(zu!)p 0 TeXcolorgray 0 TeXcolorgray 2683
14067 21998 45 v 24680 14067 4523 45 v 2683 18864 45
4797 v 3391 15927 a(Durc)-36 b(hsc)g(hnittsgesc)g(h)g(windigk)g(eit)389
b(in)g(den)3391 17919 y(ersten)433 b(3)h(Sekunden)p 24636
18864 V 0.9 TeXcolorgray 24680 18864 4478 4797 v 0 TeXcolorgray
1 0 0 TeXcolorrgb 26495 16923 a(F)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 29158 18864 45 4797
v 2683 18908 21998 45 v 24680 18908 4523 45 v 2683 23705
45 4797 v 3391 20768 a(Absolute)313 b(Zunahme)f(der)h(Gesc)-36
b(h)g(windig-)3391 22760 y(k)g(eit)434 b(in)g(den)f(ersen)g(3)h
(Sekunden)p 24636 23705 V 0.9 TeXcolorgray 24680 23705
4478 4797 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 26477 21764
a(E)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
29158 23705 45 4797 v 2683 23749 21998 45 v 24680 23749
4523 45 v 2683 28546 45 4797 v 3391 25609 a(Momen)-36
b(tangesc)g(h)g(windigk)g(eit)290 b(nac)-36 b(h)288 b(3)i(Se-)3391
27601 y(kunden)p 24636 28546 V 0.9 TeXcolorgray 24680
28546 4478 4797 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 26408
26605 a(A)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
29158 28546 45 4797 v 2683 28590 21998 45 v 24680 28590
4523 45 v 2683 33387 45 4797 v 3391 30450 a(En)-36 b(tfern)g(ung)288
b(v)-36 b(om)290 b(Erdb)36 b(o)g(den)288 b(nac)-36 b(h)288
b(3)h(Se-)3391 32442 y(kunden)p 24636 33387 V 0.9 TeXcolorgray
24680 33387 4478 4797 v 0 TeXcolorgray 1 0 0 TeXcolorrgb
26450 31446 a(C)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 29158 33387 45 4797 v 2683 33431 21998
45 v 24680 33431 4523 45 v 0 TeXcolorgray 0 TeXcolorgray
32367 14067 4567 45 v 36933 14067 8950 45 v 32367 17400
45 3334 v 0.92 TeXcolorgray 32411 17400 4478 3334 v 0
TeXcolorgray 34138 16248 a(A)p 36889 17400 45 3334 v
37597 16123 a Fo(h)38346 15641 y Fg(0)38657 16123 y Fn(\(3\))p
45838 17400 V 32367 17445 4567 45 v 36933 17445 8950
45 v 32367 20778 45 3334 v 0.92 TeXcolorgray 32411 20778
4478 3334 v 0 TeXcolorgray 34189 19626 a Fp(B)p 36889
20778 45 3334 v 37597 19501 a Fo(h)38346 19019 y Fg(00)38912
19501 y Fn(\(3\))295 b Fk(\000)g Fo(h)42946 19019 y Fg(00)43512
19501 y Fn(\(0\))p 45838 20778 V 32367 20822 4567 45
v 36933 20822 8950 45 v 32367 24155 45 3334 v 0.92 TeXcolorgray
32411 24155 4478 3334 v 0 TeXcolorgray 34180 23003 a
Fp(C)p 36889 24155 45 3334 v 37597 22878 a Fo(h)p Fn(\(3\))p
45838 24155 V 32367 24199 4567 45 v 36933 24199 8950
45 v 32367 27532 45 3334 v 0.92 TeXcolorgray 32411 27532
4478 3334 v 0 TeXcolorgray 34153 26380 a Fp(D)p 36889
27532 45 3334 v 37597 26255 a Fo(h)38346 25773 y Fg(00)38912
26255 y Fn(\(3\))p 45838 27532 V 32367 27576 4567 45
v 36933 27576 8950 45 v 32367 30910 45 3334 v 0.92 TeXcolorgray
32411 30910 4478 3334 v 0 TeXcolorgray 34208 29758 a
Fp(E)p 36889 30910 45 3334 v 37597 29633 a Fo(h)38346
29150 y Fg(0)38657 29633 y Fn(\(3\))g Fk(\000)g Fo(h)42691
29150 y Fg(0)43002 29633 y Fn(\(0\))p 45838 30910 V 32367
30954 4567 45 v 36933 30954 8950 45 v 32367 34586 45
3632 v 0.92 TeXcolorgray 32411 34586 4478 3632 v 0 TeXcolorgray
34226 33227 a Fp(F)p 36889 34586 45 3632 v 37730 32563
a Fj(h)p Fm(\(3\))p Fg(\000)p Fj(h)p Fm(\(0\))p 37730
32873 4221 45 v 39606 33641 a(3)p 45838 34586 45 3632
v 32367 34630 4567 45 v 36933 34630 8950 45 v 47992 7823
a Fi(___/1)p 1 0 0 TeXcolorrgb 47260 9815 a Fh(K7)369
b(-)g(DR)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 40997 54804 45 v 0 TeXcolorgray 24746 81281 a Fp(4)p
0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fq(K7)531 b(-)h(DR)g(-)f(1005)h(Graph)f
(einer)f(F)-179 b(unktion)529 b(-)i(Thema)g(Mathematik)-2331
4515 y(Sc)-60 b(h)g(ularb)60 b(eiten)715 b(7.)i(Klasse)p
0 TeXcolorgray -741 7823 a Fp(5.)p 0 TeXcolorgray 651
w(Die)566 b(Abbildung)f(zeigt)g(den)g(Graphen)f(der)h(F)-108
b(unktion)565 b Fo(f)707 b Fp(mit)565 b(der)g(Gleic)-36
b(h)g(ung)565 b Fo(f)142 b Fn(\()p Fo(x)p Fn(\))593 b(=)875
9815 y(4)296 b Fk(\000)f Fo(x)3888 9333 y Fm(2)4414 9815
y Fp(.)p 0 TeXcolorgray 0 TeXcolorgray 14413 27561 a
 currentpoint currentpoint translate 0.78032 0.78032 scale neg exch
neg exch translate

14413 27561 a 14413 27561 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 208.27385 a add def
/d 0.0 a add neg def /h 179.82153 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 14413 27561 a 25563 22522
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -28.45274 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 107.55133 0.0 -100.72252 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -85.35823 0.0 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 134.29698 0.0 -45.52455   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 107.55133  0 -100.72252  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -100.72252
 107.55133  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-45.52455  def /maxTickline 134.29698  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 134.29698
0.0 -45.52455   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 107.55133
0.0 -100.72252 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 134.29698  0 -45.52455  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -45.52455
 134.29698  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-100.72252  def /maxTickline 107.55133  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 134.29698
0.0 -45.52455   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 107.55133
0.0 -100.72252 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 24318 19658 a Fm(1)24318 16508
y(2)24318 13358 y(3)24318 10209 y(4)23586 25911 y Fg(\000)p
Fm(1)28477 23867 y(1)2680 b(2)g(3)-13435 b Fg(\000)p
Fm(1)-4351 b Fg(\000)p Fm(2)f Fg(\000)p Fm(3)25563 22522
y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 25563 22522 a 25563 22522 a
tx@Dict begin  { 107.55133 134.29698 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 25563 22522 a 25563 22522
a
tx@Dict begin  { 5.0 6.2015 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 25563 22522 a 25220 22808 a Fp(x)25563 22522 y
tx@Dict begin  PutEnd  end
 25563
22522 a 25563 22522 a
tx@Dict begin  PutEnd  end
 25563 22522 a 25563 22522 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 25563
22522 a 25563 22522 a
tx@Dict begin  { 0.0 0.0 pop 107.55133 134.29698 exch pop } PutCoor
PutBegin  end
 25563 22522 a 25563 22522 a
tx@Dict begin  { 5.0 6.2015 5.16667 2.33331 -40.  Uput UUput } PutCoor
PutBegin  end
 25563
22522 a 25220 22679 a Fp(y)25563 22522 y
tx@Dict begin  PutEnd  end
 25563 22522
a 25563 22522 a
tx@Dict begin  PutEnd  end
 25563 22522 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -3.540000000000002 def /x1 3.7800000000000007
def /dx x1 x sub 199 div def /F@pstplot (-x^(2.0)+4.0)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 1.2 SLW
0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end


@endspecial 25563 22522 a
tx@Dict begin  { 30.729 102.43004 } PutCoor PutBegin  end
 25563 22522 a 915 x Fp(f)25563
22522 y
tx@Dict begin  PutEnd  end
 25563 22522 a 37469 27561 a
currentpoint initclip moveto
 37469 27561 a 14413
27561 a
 currentpoint currentpoint translate 1 0.78032 div 1 0.78032 div scale
neg exch neg exch translate
 14413 27561 a 921 31546 a Fp(Kreuze)433 b(die)h(A)-36
b(ussage\(n\))433 b(an,)h(die)f(f\374r)h(die)f(gegeb)36
b(ene)434 b(F)-108 b(unktion)433 b(zutre\033end)f(sind!)p
1062 34578 44260 45 v 1062 39829 45 5252 v 1770 36634
a(Die)j(absolute)e(\304nderung)g(in)g(den)g(In)-36 b(terv)-72
b(allen)434 b Fn([)8 b Fk(\000)p Fn(2;)221 b Fk(\000)p
Fn(1])435 b Fp(und)e Fn([)8 b(1;)221 b(2])435 b Fp(ist)f(gleic)-36
b(h)1770 38626 y(gro\377.)p 42912 39829 V 45277 39829
V 1062 39873 44260 45 v 1062 45125 45 5252 v 1770 41930
a(Die)425 b(mittlere)f(\304nderungsrate)e(im)i(In)-36
b(terv)-72 b(all)424 b Fn([)8 b Fk(\000)p Fn(1;)221 b(1])425
b Fp(ist)f(gleic)-36 b(h)424 b(der)g(momen)-36 b(ta-)1770
43921 y(nen)433 b(\304nderungsrate)g(an)g(der)g(Stelle)h
Fo(x)369 b Fn(=)g(0)p Fp(.)p 42912 45125 V 1 0 0 TeXcolorrgb
43621 42831 a Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 45125 V 1062 45169 44260 45 v 1062
48428 45 3260 v 1770 47225 a Fp(Die)435 b(momen)-36 b(tane)433
b(\304nderungsrate)f(an)i(der)f(Stelle)g Fo(x)370 b Fn(=)e(2)434
b Fp(ist)g(negativ.)p 42912 48428 V 1 0 0 TeXcolorrgb
43621 47131 a Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 48428 V 1062 48472 44260 45 v 1062
53723 45 5252 v 1770 50528 a Fp(Die)h(momen)-36 b(tane)433
b(\304nderungsrate)f(an)i(der)f(Stelle)g Fo(x)370 b Fn(=)e
Fk(\000)p Fn(2)434 b Fp(ist)g(kleiner)g(als)g(die)1770
52520 y(momen)-36 b(tane)434 b(\304nderungsrate)e(an)h(der)g(Stelle)h
Fo(x)369 b Fn(=)g(1)p Fp(.)p 42912 53723 V 45277 53723
V 1062 53768 44260 45 v 1062 58904 45 5137 v 1770 55709
a(Die)435 b(Steigung)e(der)g(Sekan)-36 b(te)433 b(durc)-36
b(h)433 b(die)g(Punkte)g Fo(A)p Fn(\()p Fk(\000)p Fn(2)p
Fk(j)p Fn(0\))h Fp(und)f Fo(B)67 b Fn(\(1)p Fk(j)p Fn(3\))434
b Fp(ist)1770 57701 y(gr\366\377er)h(als)f(die)f(momen)-36
b(tane)434 b(\304nderungsrate)e(an)h(der)g(Stelle)h Fo(x)369
b Fn(=)g(1)p Fp(.)p 42912 58904 V 1 0 0 TeXcolorrgb 43621
56668 a Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45277 58904 V 1062 58948 44260 45 v 47992
7823 a Fi(___/1)p 1 0 0 TeXcolorrgb 47260 9815 a Fh(K7)g(-)g(DR)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
62976 54804 45 v 0 TeXcolorgray 24746 81281 a Fp(5)p
0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fq(K7)996 b(-)h(DR)f(-)g(1006)g(Eigensc)-60
b(haften)995 b(v)-60 b(on)996 b(F)-179 b(unktionen)993
b(-)j(Thema)-2331 4515 y(Mathematik)717 b(Sc)-60 b(h)g(ularb)60
b(eiten)715 b(7.)i(Klasse)p 0 TeXcolorgray -741 7823
a Fp(6.)p 0 TeXcolorgray 651 w(Eine)433 b(reelle)i(F)-108
b(unktion)432 b Fo(f)576 b Fp(ist)434 b(durc)-36 b(h)432
b(ihren)h(Graphen)f(gegeb)36 b(en.)p 0 TeXcolorgray 0
TeXcolorgray 12164 23860 a
 currentpoint currentpoint translate 0.9728 0.9728 scale neg exch neg
exch translate
 12164 23860 a 12164 23860
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 208.84302 a add def
/d 0.0 a add neg def /h 126.9987 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 12164 23860 a 23692 18123 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -39.83368 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 104.70589 0.0 -104.13713 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 19.91684 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -85.35823 0.0 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 75.17409 0.0 -51.82462   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 104.70589  0 -104.13713  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -104.13713
 104.70589  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-51.82462  def /maxTickline 75.17409  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 75.17409
0.0 -51.82462   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 104.70589
0.0 -104.13713 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 75.17409  0 -51.82462  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -51.82462
 75.17409  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-104.13713  def /maxTickline 104.70589  def /dT 1305270 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 19.91684  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 19.91684  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 75.17409
0.0 -51.82462   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 104.70589
0.0 -104.13713 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 22447 16204 a
Fm(1)22446 13999 y(2)22446 11794 y(3)21714 20567 y Fg(\000)p
Fm(1)21714 22772 y Fg(\000)p Fm(2)26606 19469 y(1)2680
b(2)f(3)-13434 b Fg(\000)p Fm(1)-4352 b Fg(\000)p Fm(2)h
Fg(\000)p Fm(3)23692 18123 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 23692 18123 a 23692 18123
a
tx@Dict begin  { 104.70589 75.17409 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 23692 18123 a 23692 18123 a
tx@Dict begin  { 5.0 6.2015 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 23692 18123 a 23349 18409
a Fp(x)23692 18123 y
tx@Dict begin  PutEnd  end
 23692 18123 a 23692 18123 a
tx@Dict begin  PutEnd  end
 23692
18123 a 23692 18123 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 23692 18123 a 23692 18123 a
tx@Dict begin  { 0.0 0.0 pop 104.70589 75.17409 exch pop } PutCoor
PutBegin  end
 23692
18123 a 23692 18123 a
tx@Dict begin  { 5.0 6.2015 5.16667 2.33331 -40.  Uput UUput } PutCoor
PutBegin  end
 23692 18123 a 23349 18280 a Fp(y)23692
18123 y
tx@Dict begin  PutEnd  end
 23692 18123 a 23692 18123 a
tx@Dict begin  PutEnd  end
 23692 18123 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -3 def /x1 3 def /dx x1 x sub 199
div def /F@pstplot (-0.2008443733879232*x^(3.0)-0.30337749355169275*x^(2.0)+1.2991556266120767*x+2.205066240327539)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
19.91684 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 19.91684 mul gt { moveto } { dup -1.e30 19.91684
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 19.91684 mul gt { moveto } {
dup -1.e30 19.91684 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 23692 18123 a
tx@Dict begin  { 54.06003 56.95001 } PutCoor PutBegin  end
 23692 18123 a
915 x Fp(f)23692 18123 y
tx@Dict begin  PutEnd  end
 23692 18123 a 35282 23860 a
currentpoint initclip moveto

35282 23860 a 12164 23860 a
 currentpoint currentpoint translate 1 0.9728 div 1 0.9728 div scale
neg exch neg exch translate
 12164 23860 a 921 27844 a
Fp(Kreuze)433 b(die)h(b)36 b(eiden)433 b(zutre\033enden)e(A)-36
b(ussagen)434 b(an!)p 5359 30803 35666 45 v 5359 34021
45 3219 v 6068 32744 a Fo(f)575 b Fp(ist)434 b(im)g(In)-36
b(terv)-72 b(all)434 b Fn(])295 b Fk(\000)h Fn(2;)221
b(2[)442 b Fp(negativ)435 b(gekr\374mm)-36 b(t.)p 38615
34021 V 40980 34021 V 5359 34065 35666 45 v 5359 37136
45 3071 v 6068 35933 a Fo(f)575 b Fp(ist)434 b(f\374r)f
Fn(1)370 b Fo(<)e(x)h(<)g Fn(3)434 b Fp(monoton)f(steigend.)p
38615 37136 V 40980 37136 V 5359 37180 35666 45 v 5359
40243 45 3064 v 6068 39040 a(Die)h(F)-108 b(unktion)433
b(hat)g(b)36 b(ei)434 b Fo(x)369 b Fn(=)f Fk(\000)p Fn(2)434
b Fp(eine)g(w)-36 b(aagrec)g(h)g(te)434 b(T)-108 b(angen)-36
b(te.)p 38615 40243 V 1 0 0 TeXcolorrgb 39324 39044 a
Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
40980 40243 V 5359 40288 35666 45 v 5359 43351 45 3064
v 6068 42148 a Fp(Ein)433 b(globales)i(Minim)-36 b(um)433
b(liegt)h(b)36 b(ei)434 b Fo(x)369 b Fn(=)g Fk(\000)p
Fn(2)p Fp(.)p 38615 43351 V 40980 43351 V 5359 43395
35666 45 v 5359 46458 45 3064 v 6068 45255 a(Ein)433
b(W)-108 b(endepunkt)432 b(liegt)i(b)36 b(ei)434 b Fo(x)369
b Fk(\031)g(\000)p Fn(0)p Fo(;)p Fn(5)p 38615 46458 V
1 0 0 TeXcolorrgb 39324 45259 a Fl(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 40980 46458 V 5359 46502
35666 45 v 47992 7823 a Fi(___/1)p 1 0 0 TeXcolorrgb
47260 9815 a Fh(K7)g(-)g(DR)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 50531 54804 45 v -2331
55832 a Fq(K7)678 b(-)h(DR)g(-)g(1007)f(Gleic)-60 b(h)g(ung)677
b(einer)h(T)-179 b(angen)-60 b(te)676 b(-)j(Thema)f(Mathe-)-2331
58854 y(matik)717 b(Sc)-60 b(h)g(ularb)60 b(eiten)715
b(7.)i(Klasse)p 0 TeXcolorgray -741 62162 a Fp(7.)p 0
TeXcolorgray 651 w(Gib)438 b(die)h(Gleic)-36 b(h)g(ung)439
b(der)f(T)-108 b(angen)-36 b(te)439 b(im)g(Punkt)g Fo(P)181
b Fn(\(0)p Fk(j)p Fn(2\))439 b Fp(des)g(Graphen)e(der)i(F)-108
b(unktion)438 b Fo(f)142 b Fp(:)921 64153 y Fo(y)417
b Fn(=)368 b(2)296 b Fk(\001)f Fo(e)5565 63671 y Fm(0)p
Fj(;)p Fm(25)p Fg(\001)p Fj(x)8518 64153 y Fp(an.)p 1 0 0
TeXcolorrgb 921 66699 a Fo(t)p Fp(:)434 b Fo(y)416 b
Fn(=)369 b(0)p Fo(;)p Fn(5)p Fo(x)296 b Fn(+)f(2)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 62162
a Fi(___/1)p 1 0 0 TeXcolorrgb 47260 64153 a Fh(K7)369
b(-)g(DR)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 70432 V 0 TeXcolorgray 24746 81281 a Fp(6)p 0 TeXcolorgray
eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fq(K7)795 b(-)h(DR)f(-)h(1008)f(2.)h
(Ableitung)d(-)i(Thema)g(Mathematik)f(Sc)-60 b(h)g(ul-)-2331
4515 y(arb)60 b(eiten)716 b(7.)h(Klasse)p 0 TeXcolorgray
-741 7823 a Fp(8.)p 0 TeXcolorgray 651 w(Eine)433 b(P)-36
b(olynomfunktion)435 b(3.)f(Grades)f Fo(f)576 b Fp(ist)433
b(durc)-36 b(h)433 b(ihren)g(Graphen)f(gegeb)36 b(en.)p
0 TeXcolorgray 0 TeXcolorgray 7667 35262 a
 currentpoint currentpoint translate 0.86923 0.86923 scale neg exch
neg exch translate
 7667 35262
a 7667 35262 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 327.20653 a add def
/d 0.0 a add neg def /h 260.62723 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 7667 35262 a 16297 17687 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -142.26372 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 249.24586 0.0 -77.96066 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -56.90549 0.0 T 12
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 101.86087 0.0 -158.76636   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 249.24586  0 -77.96066  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -77.96066
 249.24586  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-158.76636  def /maxTickline 101.86087  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 101.86087
0.0 -158.76636   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 249.24586
0.0 -77.96066 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 101.86087  0 -158.76636  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -158.76636
 101.86087  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-77.96066  def /maxTickline 249.24586  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 101.86087
0.0 -158.76636   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 249.24586
0.0 -77.96066 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
15052 14823 a Fm(1)15051 11673 y(2)15051 8524 y(3)14319
21076 y Fg(\000)p Fm(1)14319 24225 y Fg(\000)p Fm(2)14319
27375 y Fg(\000)p Fm(3)14319 30525 y Fg(\000)p Fm(4)14319
33674 y Fg(\000)p Fm(5)19211 19033 y(1)2680 b(2)f(3)h(4)f(5)h(6)g(7)f
(8)-29182 b Fg(\000)p Fm(1)-4352 b Fg(\000)p Fm(2)16297
17687 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 16297 17687 a 16297 17687 a
tx@Dict begin  { 249.24586 101.86087 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 16297 17687 a 16297
17687 a
tx@Dict begin  { 5.0 6.2015 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 16297 17687 a 15954 17973 a Fp(x)16297 17687
y
tx@Dict begin  PutEnd  end
 16297 17687 a 16297 17687 a
tx@Dict begin  PutEnd  end
 16297 17687 a 16297 17687
a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 16297 17687 a 16297 17687 a
tx@Dict begin  { 0.0 0.0 pop 249.24586 101.86087 exch pop } PutCoor
PutBegin  end
 16297 17687 a 16297 17687
a
tx@Dict begin  { 5.0 6.2015 5.16667 2.33331 -40.  Uput UUput } PutCoor
PutBegin  end
 16297 17687 a 15954 17844 a Fp(y)16297 17687 y
tx@Dict begin  PutEnd  end
 16297
17687 a 16297 17687 a
tx@Dict begin  PutEnd  end
 16297 17687 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -2.7399999999999975 def /x1 8.760000000000009
def /dx x1 x sub 199 div def /F@pstplot (0.24991550191860348*x^(3.0)-1.499155019186035*x^(2.0)-0.002027953953516223*x+3.0)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 16297 17687 a
tx@Dict begin  { 39.83366 47.23164 } PutCoor PutBegin  end
 16297 17687 a 915 x Fp(f)16297
17687 y
tx@Dict begin  PutEnd  end
 16297 17687 a 1 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -1 def /x1 5 def /dx x1 x sub 199
div def /F@pstplot (1.499493011511621*x-2.99831003837207)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 1.2 SLW
0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 43887 35262 a
currentpoint initclip moveto
 43887 35262 a 7667 35262
a
 currentpoint currentpoint translate 1 0.86923 div 1 0.86923 div scale
neg exch neg exch translate
 7667 35262 a 921 39246 a Fp(Erg\344nze)483 b(im)g(Diagramm)h(einen)e
(m\366glic)-36 b(hen)483 b(Graphen)f(der)g(2.)h(Ableitung)g(im)g(In)-36
b(terv)-72 b(all)921 41238 y Fn([)8 b Fk(\000)p Fn(1;)221
b(5])47992 7823 y Fi(___/1)p 1 0 0 TeXcolorrgb 47260
9815 a Fh(K7)369 b(-)g(DR)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 43607 54804 45 v 0 TeXcolorgray
24746 81281 a Fp(7)p 0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fq(K7)667 b(-)h(DR)g(-)f(1009)g(Eigensc)-60
b(haften)666 b(-)i(Thema)f(Mathematik)f(Sc)-60 b(h)g(ul-)-2331
4515 y(arb)60 b(eiten)716 b(7.)h(Klasse)p 0 TeXcolorgray
-741 7823 a Fp(9.)p 0 TeXcolorgray 651 w(W)-108 b(elc)-36
b(he)433 b(der)g(folgenden)h(Eigensc)-36 b(haften)434
b(tre\033en)f(f\374r)g(die)h(dargestellte)g(F)-108 b(unktion)432
b Fo(f)576 b Fp(zu?)p 0 TeXcolorgray 0 TeXcolorgray 12164
30670 a
 currentpoint currentpoint translate 0.81508 0.81508 scale neg exch
neg exch translate
 12164 30670 a 12164 30670 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 249.24586 a add def
/d 0.0 a add neg def /h 227.05275 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 12164 30670 a 13424
29347 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 8 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 237.86494 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.45274
T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 9 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 215.10266 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45274
0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 237.86494  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 237.86494  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 215.10266  def /dT 1864679 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 215.10266
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 237.86494
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 215.10266  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 215.10266  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 237.86494  def /dT 1864679 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 215.10266
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 237.86494
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 12179 29633 a Fm(0)12179 26483
y(1)12179 23334 y(2)12179 20184 y(3)12179 17034 y(4)12179
13885 y(5)12179 10735 y(6)12179 7586 y(7)13189 30693
y(0)2680 b(1)f(2)h(3)f(4)h(5)g(6)f(7)h(8)13424 29347
y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 13424 29347 a 13424 29347 a
tx@Dict begin  { 237.86494 215.10266 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 13424 29347 a 13424 29347
a
tx@Dict begin  { 5.0 6.67703 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 13424 29347 a 13054 29633 a Fo(x)13424 29347 y
tx@Dict begin  PutEnd  end
 13424
29347 a 13424 29347 a
tx@Dict begin  PutEnd  end
 13424 29347 a 13424 29347 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 13424
29347 a 13424 29347 a
tx@Dict begin  { 0.0 0.0 pop 237.86494 215.10266 exch pop } PutCoor
PutBegin  end
 13424 29347 a 13424 29347 a
tx@Dict begin  { 5.0 22.88857 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 13424
29347 a 12157 29679 a Fo(f)142 b Fn(\()p Fo(x)p Fn(\))13424
29347 y
tx@Dict begin  PutEnd  end
 13424 29347 a 13424 29347 a
tx@Dict begin  PutEnd  end
 13424 29347 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x 0 def /x1 8.360000000000003 def
/dx x1 x sub 199 div def /F@pstplot (0.05416666666666662*x^(5.0)-0.7374999999999995*x^(4.0)+3.5291666666666646*x^(3.0)-7.012499999999996*x^(2.0)+6.166666666666664*x)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 13424 29347 a
tx@Dict begin  { 66.86412 109.8276 } PutCoor PutBegin  end
 13424 29347 a
923 x Fo(f)13424 29347 y
tx@Dict begin  PutEnd  end
 13424 29347 a 39755 30670 a
currentpoint initclip moveto

39755 30670 a 12164 30670 a
 currentpoint currentpoint translate 1 0.81508 div 1 0.81508 div scale
neg exch neg exch translate
 12164 30670 a 921 34655 a
Fp(Kreuze)433 b(die)h(b)36 b(eiden)433 b(zutre\033enden)e(A)-36
b(ussagen)434 b(an!)p 13613 37613 19157 45 v 13613 40831
45 3219 v 14322 39554 a Fo(f)142 b Fn(\()p Fo(x)p Fn(\))369
b Fk(\025)g Fn(0)434 b Fp(f\374r)f(alle)i Fo(x)369 b
Fk(2)f Fn([)8 b(0;)221 b(5])p 30361 40831 V 1 0 0 TeXcolorrgb
1940 w Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
32726 40831 V 13613 40876 19157 45 v 13613 44094 45 3219
v 14322 42817 a Fo(f)15105 42335 y Fg(0)15415 42817 y
Fn(\()p Fo(x)p Fn(\))369 b Fk(\025)g Fn(0)434 b Fp(f\374r)g(alle)g
Fo(x)369 b Fk(2)g Fn([)8 b(0;)221 b(5])p 30361 44094
V 32726 44094 V 13613 44138 19157 45 v 13613 47356 45
3219 v 14322 46079 a Fo(f)15105 45597 y Fg(00)15671 46079
y Fn(\()p Fo(x)p Fn(\))368 b Fk(\025)h Fn(0)434 b Fp(f\374r)g(alle)g
Fo(x)369 b Fk(2)g Fn([)8 b(0;)221 b(5])p 30361 47356
V 32726 47356 V 13613 47401 19157 45 v 13613 50619 45
3219 v 14322 49342 a Fo(f)15105 48860 y Fg(0)15415 49342
y Fn(\(1\))369 b(=)g Fo(f)19610 48860 y Fg(0)19920 49342
y Fn(\(4\))p 30361 50619 V 1 0 0 TeXcolorrgb 9487 w Fl(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 32726
50619 V 13613 50663 19157 45 v 13613 53881 45 3219 v
14322 52604 a Fo(f)142 b Fn(\(1\))369 b(=)f Fo(f)142
b Fn(\(4\))p 30361 53881 V 32726 53881 V 13613 53925
19157 45 v 47992 7823 a Fi(___/1)p 1 0 0 TeXcolorrgb
47260 9815 a Fh(K7)369 b(-)g(DR)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 57953 54804 45 v 0 TeXcolorgray
24746 81281 a Fp(8)p 0 TeXcolorgray eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fq(K7)667 b(-)h(DR)g(-)f(1010)g(Eigensc)-60
b(haften)666 b(-)i(Thema)f(Mathematik)f(Sc)-60 b(h)g(ul-)-2331
4515 y(arb)60 b(eiten)716 b(7.)h(Klasse)p 0 TeXcolorgray
-1391 7823 a Fp(10.)p 0 TeXcolorgray 651 w(Gegen)433
b(ist)h(eine)f(A)-36 b(ussage)434 b(\374b)36 b(er)433
b(die)h(P)-36 b(olynomfunktion)434 b Fo(f)142 b Fp(.)921
11313 y(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36
b(k)g(en)358 b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357
b(Ankreuzen)g(der)h(jew)-36 b(eils)360 b(ric)-36 b(h)g(tigen)921
13305 y(Satzteile)434 b(so,)g(dass)g(eine)f(mathematisc)-36
b(h)434 b(k)-36 b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36
b(tsteh)g(t!)921 16795 y(Eine)455 b(P)-36 b(olynomfunktion)456
b Fo(f)597 b Fp(ist)455 b(in)g(einem)g(In)-36 b(terv)-72
b(all)456 b Fn([)8 b Fo(a)p Fn(;)221 b Fo(b)p Fn(])456
b Fp(genau)f(dann)p 38003 16795 3150 45 v 41625 16747
a(1)41153 16795 y Ff(\015)p 42747 16795 V 921 18787 a
Fp(,)434 b(w)-36 b(enn)p 5293 18787 V 8914 18739 a(2)8442
18787 y Ff(\015)p 10036 18787 V 3584 w Fp(gilt.)p 0 TeXcolorgray
0 TeXcolorgray 2261 20159 18899 45 v 2261 23244 45 3085
v 11385 21941 a(1)10913 21989 y Ff(\015)p 21115 23244
V 2261 23288 18899 45 v 2261 26547 45 3260 v 2969 25344
a Fp(streng)434 b(monoton)f(w)-36 b(ac)g(hsend)p 18750
26547 V 1 0 0 TeXcolorrgb 19459 25250 a Fl(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 21115 26547
V 2261 26591 18899 45 v 2261 29851 45 3260 v 2969 28647
a Fp(streng)434 b(monoton)f(fallend)p 18750 29851 V 19459
28553 a Fl(2)p 21115 29851 V 2261 29895 18899 45 v 2261
33154 45 3260 v 2969 31951 a Fp(stetig)p 18750 33154
V 19459 31857 a Fl(2)p 21115 33154 V 2261 33198 18899
45 v 0 TeXcolorgray 0 TeXcolorgray 25658 20270 19071
45 v 25658 23354 45 3085 v 34868 22052 a Fp(2)34396 22100
y Ff(\015)p 44684 23354 V 25658 23399 19071 45 v 25658
26732 45 3334 v 26366 25455 a Fo(f)142 b Fn(\()p Fo(x)p
Fn(\))369 b Fo(>)f Fn(0)434 b Fp(f\374r)g(alle)g Fo(x)369
b Fk(2)g Fn([)8 b Fo(a)p Fn(;)221 b Fo(b)p Fn(])p 42319
26732 V 43027 25397 a Fl(2)p 44684 26732 V 25658 26776
19071 45 v 25658 30109 45 3334 v 26366 28832 a Fo(f)27149
28350 y Fg(0)27460 28832 y Fn(\()p Fo(x)p Fn(\))368 b
Fo(>)h Fn(0)434 b Fp(f\374r)f(alle)i Fo(x)369 b Fk(2)f
Fn([)8 b Fo(a)p Fn(;)221 b Fo(b)p Fn(])p 42319 30109
V 1 0 0 TeXcolorrgb 43027 28775 a Fl(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 44684 30109 V 25658
30153 19071 45 v 25658 33486 45 3334 v 26366 32209 a
Fo(f)27149 31727 y Fg(00)27715 32209 y Fn(\()p Fo(x)p
Fn(\))368 b Fo(>)h Fn(0)434 b Fp(f\374r)f(alle)i Fo(x)369
b Fk(2)g Fn([)8 b Fo(a)p Fn(;)221 b Fo(b)p Fn(])p 42319
33486 V 43027 32152 a Fl(2)p 44684 33486 V 25658 33530
19071 45 v 47992 7823 a Fi(___/1)p 1 0 0 TeXcolorrgb
47260 9815 a Fh(K7)369 b(-)g(DR)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 37559 54804 45 v -2331
42860 a Fq(K7)667 b(-)h(DR)g(-)f(1011)g(Eigensc)-60 b(haften)666
b(-)i(Thema)f(Mathematik)f(Sc)-60 b(h)g(ul-)-2331 45882
y(arb)60 b(eiten)716 b(7.)h(Klasse)p 0 TeXcolorgray -1391
49190 a Fp(11.)p 0 TeXcolorgray 651 w(Beurteile)434 b(folgende)g(Sc)-36
b(hlussfolgerungen)433 b(f\374r)h(eine)f(reelle)h(F)-108
b(unktion)433 b Fo(f)142 b Fp(.)921 51735 y(Kreuze)433
b(die)h(ric)-36 b(h)g(tige)433 b(Sc)-36 b(hlussfolgerung)434
b(an!)p 1062 54694 44260 45 v 1062 57912 45 3219 v 1770
56635 a Fo(f)538 b Fp(ist)395 b(im)h(In)-36 b(terv)-72
b(all)395 b Fn([)8 b Fo(a)p Fn(;)221 b Fo(b)p Fn(])396
b Fp(monoton)g(steigend)f Fk(\))369 b Fo(f)537 b Fp(ist)396
b(in)f Fn([)8 b Fo(a)p Fn(;)221 b Fo(b)p Fn(])396 b Fp
(di\033erenzierbar)p 42912 57912 V 45277 57912 V 1062
57956 44260 45 v 1062 61174 45 3219 v 1770 59897 a Fo(f)2553
59415 y Fg(0)2864 59897 y Fn(\(3\))369 b(=)g(0)g Fk(\))g
Fo(f)576 b Fp(hat)433 b(an)h(der)f(Stelle)g Fo(x)369
b Fn(=)g(3)434 b Fp(k)-36 b(eine)434 b(T)-108 b(angen)-36
b(te)p 42912 61174 V 45277 61174 V 1062 61218 44260 45
v 1062 64437 45 3219 v 1770 63160 a Fo(f)2553 62678 y
Fg(00)3119 63160 y Fn(\(3\))369 b(=)g(0)g Fk(\))g Fo(f)576
b Fp(hat)433 b(an)h(der)f(Stelle)g Fo(x)370 b Fn(=)e(3)434
b Fp(sic)-36 b(her)433 b(eine)h(w)-36 b(aagrec)g(h)g(te)434
b(T)-108 b(angen)-36 b(te)p 42912 64437 V 45277 64437
V 1062 64481 44260 45 v 1062 67699 45 3219 v 1770 66422
a Fo(f)2553 65940 y Fg(00)3437 66422 y Fp(ist)319 b(im)f(In)-36
b(terv)-72 b(all)319 b Fn([)8 b Fo(a)p Fn(;)221 b Fo(b)p
Fn(])319 b Fp(p)36 b(ositiv)319 b Fk(\))370 b Fo(f)460
b Fp(ist)318 b(im)g(In)-36 b(terv)-72 b(all)319 b Fn([)8
b Fo(a)p Fn(;)221 b Fo(b)p Fn(])319 b Fp(monoton)f(fallend)p
42912 67699 V 45277 67699 V 1062 67743 44260 45 v 1062
70961 45 3219 v 1770 69684 a Fo(f)2553 69202 y Fg(0)2864
69684 y Fn(\(4\))418 b Fp(ist)f(nic)-36 b(h)g(t)417 b(de\034niert)f
Fk(\))370 b Fo(f)559 b Fp(ist)418 b(an)g(der)f(Stelle)g
Fo(x)370 b Fn(=)e(4)418 b Fp(nic)-36 b(h)g(t)417 b(di\033erenzierbar)p
42912 70961 V 1 0 0 TeXcolorrgb 1372 w Fl(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 70961 V 1062 71006
44260 45 v 1062 74224 45 3219 v 1770 72947 a Fo(f)576
b Fp(ist)434 b(im)f(In)-36 b(terv)-72 b(all)435 b Fn([)8
b Fo(a)p Fn(;)221 b Fo(b)p Fn(])434 b Fp(stetig)g Fk(\))369
b Fo(f)576 b Fp(ist)433 b(in)h Fn([)8 b Fo(a)p Fn(;)221
b Fo(b)p Fn(])434 b Fp(di\033erenzierbar)p 42912 74224
V 45277 74224 V 1062 74268 44260 45 v 47992 49190 a Fi(___/1)p
1 0 0 TeXcolorrgb 47260 51182 a Fh(K7)369 b(-)g(DR)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray 24746 81281 a Fp(9)p 0 TeXcolorgray eop
end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 54804 45 v -2331 6795 a Fq(K7)667
b(-)h(DR)g(-)f(1012)g(Eigensc)-60 b(haften)666 b(-)i(Thema)f
(Mathematik)f(Sc)-60 b(h)g(ul-)-2331 9817 y(arb)60 b(eiten)716
b(7.)h(Klasse)p 0 TeXcolorgray -1391 13124 a Fp(12.)p
0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(ist)h(eine)f(A)-36
b(ussage)434 b(\374b)36 b(er)433 b(reelle)h(F)-108 b(unktionen.)921
16614 y(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36
b(k)g(en)358 b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357
b(Ankreuzen)g(der)h(jew)-36 b(eils)360 b(ric)-36 b(h)g(tigen)921
18606 y(Satzteile)434 b(so,)g(dass)g(eine)f(mathematisc)-36
b(h)434 b(k)-36 b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36
b(tsteh)g(t!)921 22097 y(Eine)411 b(reelle)i(F)-108 b(unktion)410
b Fo(f)142 b Fp(:)412 b Fo(A)369 b Fk(!)h Fe(R)412 b
Fp(hei\377t)f(stetig)h(an)g(der)f(Stelle)g Fo(p)p Fp(,)h(w)-36
b(enn)p 38003 22097 3150 45 v 41625 22049 a(1)41153 22097
y Ff(\015)p 42747 22097 V 921 24089 a Fp(und)432 b(diese\(r\))p
8443 24089 V 12065 24041 a(2)11593 24089 y Ff(\015)p
13187 24089 V 3583 w Fp(.)p 0 TeXcolorgray 0 TeXcolorgray
1520 25461 19640 45 v 1520 28545 45 3085 v 11015 27242
a(1)10543 27290 y Ff(\015)p 21115 28545 V 1520 28589
19640 45 v 1520 33726 45 5137 v 2228 30531 a Fp(der)h(F)-108
b(unktionsw)-36 b(ert)433 b Fo(f)142 b Fn(\()p Fo(p)p
Fn(\))433 b Fp(an)2228 32522 y(der)g(Stelle)h Fo(p)f
Fp(existiert)p 18750 33726 V 19459 31490 a Fl(2)p 21115
33726 V 1520 33770 19640 45 v 1520 38906 45 5137 v 2228
35711 a Fp(die)h(Ableitung)f Fo(f)11140 35229 y Fg(0)11450
35711 y Fn(\()p Fo(p)p Fn(\))g Fp(an)h(der)2228 37703
y(Stelle)g Fo(p)f Fp(existiert)p 18750 38906 V 19459
36670 a Fl(2)p 21115 38906 V 1520 38950 19640 45 v 1520
44013 45 5063 v 2228 40818 a Fp(der)g(Grenzw)-36 b(ert)433
b(v)-36 b(on)434 b Fo(f)575 b Fp(an)434 b(der)2228 42810
y(Stelle)g Fo(p)f Fp(existiert)p 18750 44013 V 1 0 0
TeXcolorrgb 19459 41814 a Fl(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 21115 44013 V 1520 44057 19640
45 v 0 TeXcolorgray 0 TeXcolorgray 25658 25572 19974
45 v 25658 28656 45 3085 v 35319 27353 a Fp(2)34847 27401
y Ff(\015)p 45586 28656 V 25658 28700 19974 45 v 25658
33836 45 5137 v 26366 30641 a Fp(den)g(F)-108 b(unktionsw)-36
b(ert)433 b Fo(f)142 b Fn(\()p Fo(p)p Fn(\))26366 32633
y Fp(annimm)-36 b(t)p 43221 33836 V 1 0 0 TeXcolorrgb
43930 31600 a Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45586 33836 V 25658 33881 19974 45 v 25658
39017 45 5137 v 26366 35822 a Fp(nic)g(h)g(t)288 b(den)h(F)-108
b(unktionsw)-36 b(ert)288 b Fo(f)142 b Fn(\()p Fo(p)p
Fn(\))26366 37814 y Fp(annimm)-36 b(t)p 43221 39017 V
43930 36781 a Fl(2)p 45586 39017 V 25658 39061 19974
45 v 25658 42320 45 3260 v 26366 41117 a Fp(n)g(ull)433
b(ist)p 43221 42320 V 43930 41023 a Fl(2)p 45586 42320
V 25658 42365 19974 45 v 47992 13124 a Fi(___/1)p 1 0 0
TeXcolorrgb 47260 15116 a Fh(K7)369 b(-)g(DR)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 48085
54804 45 v 0 TeXcolorgray 24421 81281 a Fp(10)p 0 TeXcolorgray
eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fq(K7)1102 b(-)h(KKK)e(-)i(1001)f
(Kreisgleic)-60 b(h)g(ung)1101 b(-)h(Thema)g(Mathematik)-2331
4515 y(Sc)-60 b(h)g(ularb)60 b(eiten)715 b(7.)i(Klasse)p
0 TeXcolorgray -1391 7823 a Fp(13.)p 0 TeXcolorgray 651
w(Der)434 b(Kreis)g Fo(k)478 b Fp(\(siehe)434 b(Abbildung\))e(b)36
b(er\374hrt)432 b(die)i(b)36 b(eiden)433 b(K)-36 b(o)36
b(ordinatenac)-36 b(hsen.)921 10368 y(Kreuze)433 b(die)h(b)36
b(eiden)433 b(ric)-36 b(h)g(tigen)433 b(Kreisgleic)-36
b(h)g(ungen)434 b(an!)p 4417 16281 17238 45 v 4417 19555
45 3275 v 5125 18278 a Fn(\()p Fo(x)295 b Fn(+)g(3\))9128
17796 y Fm(2)9949 18278 y Fn(+)g(\()p Fo(y)343 b Fk(\000)295
b Fn(3\))15223 17796 y Fm(2)16118 18278 y Fn(=)369 b(6)p
19244 19555 V 21610 19555 V 4417 19599 17238 45 v 4417
22874 45 3275 v 5125 21597 a(\()p Fo(x)295 b Fn(+)g(3\))9128
21115 y Fm(2)9949 21597 y Fn(+)g(\()p Fo(y)343 b Fk(\000)295
b Fn(3\))15223 21115 y Fm(2)16118 21597 y Fn(=)369 b(9)p
19244 22874 V 1 0 0 TeXcolorrgb 19953 21569 a Fl(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 21610
22874 V 4417 22918 17238 45 v 4417 26193 45 3275 v 5125
24916 a Fn(\()p Fo(x)295 b Fk(\000)h Fn(3\))9150 24434
y Fm(2)9971 24916 y Fn(+)f(\()p Fo(y)343 b Fn(+)294 b(3\))15223
24434 y Fm(2)16118 24916 y Fn(=)369 b(9)p 19244 26193
V 21610 26193 V 4417 26237 17238 45 v 4417 29438 45 3201
v 5125 28235 a Fo(x)5864 27753 y Fm(2)6685 28235 y Fn(+)295
b Fo(y)8674 27753 y Fm(2)9495 28235 y Fn(+)g(3)p Fo(x)h
Fk(\000)f Fn(3)p Fo(y)417 b Fn(=)369 b(6)p 19244 29438
V 21610 29438 V 4417 29482 17238 45 v 4417 32683 45 3201
v 5125 31480 a Fo(x)5864 30998 y Fm(2)6685 31480 y Fn(+)295
b Fo(y)8674 30998 y Fm(2)9495 31480 y Fn(+)g(6)p Fo(x)h
Fk(\000)f Fn(6)p Fo(y)417 b Fn(=)369 b Fk(\000)p Fn(9)p
19244 32683 V 1 0 0 TeXcolorrgb 19953 31415 a Fl(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 21610
32683 V 4417 32727 17238 45 v 0 TeXcolorgray 0 TeXcolorgray
26871 33425 a
 currentpoint currentpoint translate 0.73352 0.73352 scale neg exch
neg exch translate
 26871 33425 a 26871 33425 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 208.27383 a add def
/d 0.0 a add neg def /h 211.68848 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 26871 33425
a 47722 31787 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 8 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 0.0 -188.35701 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.45274
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -170.71646 0.0 T 8
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 196.89293 0.0 -14.79555   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 19.91682  0 -188.35701  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -188.35701
 19.91682  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-14.79555  def /maxTickline 196.89293  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 196.89293
0.0 -14.79555   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 19.91682
0.0 -188.35701 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 196.89293  0 -14.79555  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -14.79555
 196.89293  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-188.35701  def /maxTickline 19.91682  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 196.89293
0.0 -14.79555   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 19.91682
0.0 -188.35701 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 46477 28923 a
Fm(1)46476 25773 y(2)46476 22624 y(3)46476 19474 y(4)46476
16325 y(5)46476 13175 y(6)43971 33133 y Fg(\000)p Fm(1)-4352
b Fg(\000)p Fm(2)h Fg(\000)p Fm(3)f Fg(\000)p Fm(4)h
Fg(\000)p Fm(5)f Fg(\000)p Fm(6)47722 31787 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 47722 31787
a 47722 31787 a
tx@Dict begin  { 19.91682 196.89293 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 47722 31787 a 47722 31787 a
tx@Dict begin  { 5.0 6.2015 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 47722 31787
a 47379 32073 a Fp(x)47722 31787 y
tx@Dict begin  PutEnd  end
 47722 31787 a 47722
31787 a
tx@Dict begin  PutEnd  end
 47722 31787 a 47722 31787 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 47722 31787 a 47722
31787 a
tx@Dict begin  { 0.0 0.0 pop 19.91682 196.89293 exch pop } PutCoor
PutBegin  end
 47722 31787 a 47722 31787 a
tx@Dict begin  { 5.0 6.2015 5.16667 2.33331 -40.  Uput UUput } PutCoor
PutBegin  end
 47722 31787 a 47379
31944 a Fp(y)47722 31787 y
tx@Dict begin  PutEnd  end
 47722 31787 a 47722 31787
a
tx@Dict begin  PutEnd  end
 47722 31787 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray   -85.35823 85.35823 2 copy
moveto 85.35823 0 CLW mul sub dup 0 rmoveto 0 360 arc closepath  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -85.35823 85.35823
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 47722 31787 a
tx@Dict begin  { -83.08195 88.77242 } PutCoor PutBegin  end

47722 31787 a Fj(M)47722 31787 y
tx@Dict begin  PutEnd  end
 47722 31787 a 47722
31787 a
tx@Dict begin  { -128.60652 146.81625 } PutCoor PutBegin  end
 47722 31787 a Fj(k)47722 31787 y
tx@Dict begin  PutEnd  end
 47722 31787
a 49926 33425 a
currentpoint initclip moveto
 49926 33425 a 26871 33425 a
 currentpoint currentpoint translate 1 0.73352 div 1 0.73352 div scale
neg exch neg exch translate
 26871 33425
a 47992 7823 a Fi(___/1)p 1 0 0 TeXcolorrgb 46337 9815
a Fh(K7)370 b(-)f(KKK)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 36755 54804 45 v 0 TeXcolorgray
24421 81281 a Fp(11)p 0 TeXcolorgray eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fq(K7)640 b(-)g(KKK)f(-)h(1002)g(Lage)g
(Kreis)f(Gerade)g(-)i(Thema)e(Mathematik)-2331 4515 y(Sc)-60
b(h)g(ularb)60 b(eiten)715 b(7.)i(Klasse)p 0 TeXcolorgray
-1391 7823 a Fp(14.)p 0 TeXcolorgray 651 w(Eine)406 b(Gerade)g(sc)-36
b(hneidet)405 b(einen)h(Kreis)h(in)f(zw)-36 b(ei)407
b(Punkten.)f(Um)g(die)h(K)-36 b(o)36 b(ordinaten)406
b(dieser)921 9815 y(Sc)-36 b(hnittpunkte)422 b(rec)-36
b(hnerisc)g(h)424 b(zu)g(ermitteln,)h(ist)f(eine)h(quadratisc)-36
b(he)425 b(Gleic)-36 b(h)g(ung)423 b(in)i Fo(x)g Fp(zu)921
11806 y(l\366sen.)921 15297 y(Erg\344nze)358 b(die)h(T)-108
b(extl\374c)-36 b(k)g(en)358 b(im)g(folgenden)h(Satz)f(durc)-36
b(h)357 b(Ankreuzen)g(der)h(jew)-36 b(eils)360 b(ric)-36
b(h)g(tigen)921 17289 y(Satzteile)434 b(so,)g(dass)g(eine)f
(mathematisc)-36 b(h)434 b(k)-36 b(orrekte)434 b(A)-36
b(ussage)434 b(en)-36 b(tsteh)g(t!)921 20779 y(Die)510
b(Diskriminan)-36 b(te)511 b(ist)p 13989 20779 3150 45
v 17611 20731 a(1)17139 20779 y Ff(\015)p 18733 20779
V 3659 w Fp(,)f(w)-36 b(eil)511 b(die)e(Gerade)g(eine)p
35680 20779 V 39301 20731 a(2)38829 20779 y Ff(\015)p
40423 20779 V 3660 w Fp(des)921 22771 y(Kreises)434 b(ist.)p
0 TeXcolorgray 0 TeXcolorgray 12789 24143 8371 45 v 12789
27227 45 3085 v 16649 25925 a(1)16177 25973 y Ff(\015)p
21115 27227 V 12789 27272 8371 45 v 12789 30531 45 3260
v 13498 29328 a Fp(negativ)p 18750 30531 V 19459 29233
a Fl(2)p 21115 30531 V 12789 30575 8371 45 v 12789 33834
45 3260 v 13498 32631 a Fp(n)-36 b(ull)p 18750 33834
V 19459 32537 a Fl(2)p 21115 33834 V 12789 33879 8371
45 v 12789 37138 45 3260 v 13498 35935 a Fp(p)36 b(ositiv)p
18750 37138 V 1 0 0 TeXcolorrgb 19459 35840 a Fl(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 21115
37138 V 12789 37182 8371 45 v 0 TeXcolorgray 0 TeXcolorgray
30427 24143 8985 45 v 30427 27227 45 3085 v 34594 25925
a Fp(2)34122 25973 y Ff(\015)p 39367 27227 V 30427 27272
8985 45 v 30427 30531 45 3260 v 31135 29328 a Fp(Sekan)-36
b(te)p 37002 30531 V 1 0 0 TeXcolorrgb 37710 29233 a
Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
39367 30531 V 30427 30575 8985 45 v 30427 33834 45 3260
v 31135 32631 a Fp(P)g(assan)g(te)p 37002 33834 V 37710
32537 a Fl(2)p 39367 33834 V 30427 33879 8985 45 v 30427
37138 45 3260 v 31135 35935 a Fp(T)-108 b(angen)-36 b(te)p
37002 37138 V 37710 35840 a Fl(2)p 39367 37138 V 30427
37182 8985 45 v 47992 7823 a Fi(___/1)p 1 0 0 TeXcolorrgb
46337 9815 a Fh(K7)370 b(-)f(KKK)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 41210 54804 45
v -2331 46512 a Fq(K7)640 b(-)g(KKK)f(-)h(1003)g(Lage)g(Kreis)f(Gerade)
g(-)i(Thema)e(Mathematik)-2331 49534 y(Sc)-60 b(h)g(ularb)60
b(eiten)715 b(7.)i(Klasse)p 0 TeXcolorgray -1391 52841
a Fp(15.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(ist)h(die)f(Kugel)h
Fo(k)479 b Fp(mit)433 b(Mittelpunkt)g Fo(M)139 b Fn(\(4)p
Fk(j)296 b(\000)f Fn(3)p Fk(j)p Fn(10\))434 b Fp(und)f(Radius)g
Fo(r)406 b Fn(=)368 b(10)p Fp(.)921 55387 y(Berec)-36
b(hne)433 b(die)g(Gleic)-36 b(h)g(ung)433 b(der)g(T)-108
b(angen)-36 b(tialeb)36 b(ene)434 b(der)f(Kugel)h(im)g(Punkt)f
Fo(P)181 b Fn(\(4)p Fk(j)295 b(\000)g Fn(11)p Fk(j)p
Fn(4\))p Fp(.)p 1 0 0 TeXcolorrgb 921 57932 a Fo(e)1524
58131 y Fj(t)1919 57932 y Fp(:)217 b Fn(4)p Fo(y)343
b Fn(+)295 b(3)p Fo(z)429 b Fn(=)369 b Fk(\000)p Fn(32)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
52841 a Fi(___/1)p 1 0 0 TeXcolorrgb 46337 54833 a Fh(K7)h(-)f(KKK)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
61666 V 0 TeXcolorgray 24421 81281 a Fp(12)p 0 TeXcolorgray
eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fq(K7)640 b(-)g(KKK)f(-)h(1004)g(Lage)g
(Kreis)f(Gerade)g(-)i(Thema)e(Mathematik)-2331 4515 y(Sc)-60
b(h)g(ularb)60 b(eiten)715 b(7.)i(Klasse)p 0 TeXcolorgray
-1391 7823 a Fp(16.)p 0 TeXcolorgray 651 w(Eine)433 b(Ellipse)i(wird)e
(durc)-36 b(h)432 b(die)i(Gleic)-36 b(h)g(ung)433 b Fn(4)p
Fo(x)24293 7341 y Fm(2)25114 7823 y Fn(+)295 b(9)p Fo(y)27753
7341 y Fm(2)28648 7823 y Fn(=)369 b(100)434 b Fp(b)36
b(esc)-36 b(hrieb)36 b(en.)921 10368 y(Gib)846 b(die)g(K)-36
b(o)36 b(ordinaten)847 b(jener)f(Punkte)g Fo(P)181 b
Fn(\()p Fo(x)25147 10567 y Fj(p)25676 10368 y Fk(j)p
Fo(y)26679 10567 y Fj(p)27208 10368 y Fn(\))846 b Fp(auf)h(der)f
(Ellipse)h(an,)g(deren)e(y-)921 12360 y(K)-36 b(o)36
b(ordinate)434 b(den)f(W)-108 b(ert)433 b(-2)g(hat.)p
1 0 0 TeXcolorrgb 921 14905 a Fo(P)1759 15104 y Fm(1)2285
14905 y Fn(\(4)p Fk(j)295 b(\000)h Fn(2\);)221 b Fo(P)8010
15104 y Fm(2)8537 14905 y Fn(\()p Fk(\000)p Fn(4)p Fk(j)295
b(\000)h Fn(2\))p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 7823 a Fi(___/1)p 1 0 0 TeXcolorrgb
46337 9815 a Fh(K7)370 b(-)f(KKK)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 18713 54804 45
v -2331 24014 a Fq(K7)640 b(-)g(KKK)f(-)h(1005)g(Lage)g(Kreis)f(Gerade)
g(-)i(Thema)e(Mathematik)-2331 27036 y(Sc)-60 b(h)g(ularb)60
b(eiten)715 b(7.)i(Klasse)p 0 TeXcolorgray -1391 30344
a Fp(17.)p 0 TeXcolorgray 651 w(Kreuze)458 b(die)g(b)36
b(eiden)458 b(Gleic)-36 b(h)g(ungen)457 b(an,)i(die)f(eine)g(Ellipse,)h
(ab)36 b(er)458 b(k)-36 b(einen)459 b(Kreis)f(b)36 b(esc)-36
b(hrei-)921 32336 y(b)36 b(en!)p 16427 35036 13530 45
v 16427 38237 45 3201 v 17135 37034 a Fo(x)17874 36552
y Fm(2)18769 37034 y Fn(=)369 b(2)295 b(+)g Fo(y)23084
36552 y Fm(2)p 27547 38237 V 29913 38237 V 16427 38281
13530 45 v 16427 41482 45 3201 v 17135 40279 a Fo(y)17817
39797 y Fm(2)18638 40279 y Fk(\000)h Fn(5)369 b(=)g(3)p
Fo(x)23756 39797 y Fm(2)p 27547 41482 V 29913 41482 V
16427 41526 13530 45 v 16427 44727 45 3201 v 17135 43524
a Fn(2)p Fo(x)18524 43042 y Fm(2)19346 43524 y Fn(+)295
b(3)p Fo(y)21985 43042 y Fm(2)22880 43524 y Fn(=)368
b(25)p 27547 44727 V 1 0 0 TeXcolorrgb 28256 43459 a
Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
29913 44727 V 16427 44771 13530 45 v 16427 47972 45 3201
v 17135 46769 a Fn(16)p Fo(y)19117 46287 y Fm(2)20013
46769 y Fn(=)g(144)297 b Fk(\000)e Fn(9)p Fo(x)26357
46287 y Fm(2)p 27547 47972 V 1 0 0 TeXcolorrgb 28256
46704 a Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 29913 47972 V 16427 48016 13530 45 v 16427
51217 45 3201 v 17135 50014 a Fn(5)p Fo(x)18524 49532
y Fm(2)19346 50014 y Fn(+)g(5)p Fo(y)21985 49532 y Fm(2)22880
50014 y Fn(=)368 b(36)p 27547 51217 V 29913 51217 V 16427
51261 13530 45 v 47992 30344 a Fi(___/1)p 1 0 0 TeXcolorrgb
46337 32336 a Fh(K7)i(-)f(KKK)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 55289 54804 45 v 0 TeXcolorgray
24421 81281 a Fp(13)p 0 TeXcolorgray eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fq(K7)553 b(-)g(KKK)f(-)h(1006)g(Sc)-60
b(hneidende)550 b(Kreise)i(-)i(Thema)e(Mathematik)-2331
4515 y(Sc)-60 b(h)g(ularb)60 b(eiten)715 b(7.)i(Klasse)p
0 TeXcolorgray -1391 7823 a Fp(18.)p 0 TeXcolorgray 651
w(Stelle)512 b(die)h(Gleic)-36 b(h)g(ungen)511 b(der)h(b)36
b(eiden)512 b(Kreise)g(auf)h(und)e(\374b)36 b(erpr\374fe)511
b(rec)-36 b(hnerisc)g(h)512 b(ob)g(sie)921 9815 y(einander)433
b(im)h(Punkt)f Fo(P)181 b Fn(\(3)p Fk(j)p Fn(0\))434
b Fp(sc)-36 b(hneiden:)p 0 TeXcolorgray 2468 13246 a
Fk(\017)p 0 TeXcolorgray 650 w Fp(Kreis)434 b Fo(k)7861
13445 y Fm(1)8821 13246 y Fp(mit)g Fo(M)12464 13445 y
Fm(1)12990 13246 y Fn(\(0)p Fk(j)p Fn(0\))g Fp(und)e
Fo(r)19292 13445 y Fm(1)20187 13246 y Fn(=)369 b(3)p
0 TeXcolorgray 2468 15791 a Fk(\017)p 0 TeXcolorgray
650 w Fp(Kreis)434 b Fo(k)7861 15990 y Fm(2)8821 15791
y Fp(mit)g Fo(M)12464 15990 y Fm(1)12990 15791 y Fn(\()p
Fk(\000)p Fn(1)p Fk(j)p Fn(0\))g Fp(und)e Fo(r)20325
15990 y Fm(2)21220 15791 y Fn(=)369 b(4)p 1 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 4817 18447 a Fd(\025)p 1 0 0 TeXcolorrgb
651 w Fo(k)6891 18646 y Fm(1)7417 18447 y Fp(:)434 b
Fo(x)8951 17965 y Fm(2)9772 18447 y Fn(+)295 b Fo(y)11761
17965 y Fm(2)12655 18447 y Fn(=)369 b(9)p 1 0 0 TeXcolorrgb
4817 20716 a Fd(\025)p 1 0 0 TeXcolorrgb 651 w Fo(k)6891
20915 y Fm(2)7417 20716 y Fp(:)434 b Fn(\()p Fo(x)295
b Fn(+)g(1\))12215 20234 y Fm(2)13036 20716 y Fn(+)g
Fo(y)15025 20234 y Fm(2)15919 20716 y Fn(=)369 b(16)3782
23372 y Fo(P)566 b Fp(liegt)386 b(auf)f Fo(k)10859 23571
y Fm(1)11386 23372 y Fp(,)g(w)-36 b(eil)386 b Fn(3)15371
22890 y Fm(2)16093 23372 y Fn(+)196 b(0)17951 22890 y
Fm(2)18845 23372 y Fn(=)369 b(9)p Fp(,)386 b Fo(P)566
b Fp(liegt)385 b(auf)h Fo(k)28700 23571 y Fm(2)29611
23372 y Fp(w)-36 b(eil)386 b Fn(\(3)196 b(+)g(1\))35916
22890 y Fm(2)36637 23372 y Fn(+)g(0)38495 22890 y Fm(2)39389
23372 y Fn(=)369 b(16)p Fp(,)386 b(somit)3782 25364 y(sc)-36
b(hneiden)433 b Fo(k)10355 25563 y Fm(1)11315 25364 y
Fp(und)f Fo(k)14592 25563 y Fm(2)15552 25364 y Fp(in)h
Fo(P)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 7823 a Fi(___/1)p 1 0 0 TeXcolorrgb 46337 9815
a Fh(K7)370 b(-)f(KKK)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 28485 54804 45 v -2331 33786 a Fq(K7)958
b(-)f(KKK)g(-)h(1007)f(Kreis)g(und)f(Gerade)h(sc)-60
b(hneiden)956 b(-)i(Thema)-2331 36808 y(Mathematik)717
b(Sc)-60 b(h)g(ularb)60 b(eiten)715 b(7.)i(Klasse)p 0
TeXcolorgray -1391 40116 a Fp(19.)p 0 TeXcolorgray 651
w(V)-108 b(erv)-36 b(ollst\344ndige)434 b(den)f(folgenden)h(Satz)g(so,)
g(dass)f(er)h(mathematisc)-36 b(h)433 b(k)-36 b(orrekt)434
b(wird!)921 43606 y(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36
b(k)g(en)358 b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357
b(Ankreuzen)g(der)h(jew)-36 b(eils)360 b(ric)-36 b(h)g(tigen)921
45598 y(Satzteile)434 b(so,)g(dass)g(eine)f(mathematisc)-36
b(h)434 b(k)-36 b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36
b(tsteh)g(t!)921 49088 y(Ist)1048 b(die)g(Gerade)f(eine)g(P)-36
b(assan)g(te)1048 b(des)g(Kreises,)h(dann)e(ist)h(die)f(Diskriminan)-36
b(te)p 921 51080 3150 45 v 4542 51032 a(1)4071 51080
y Ff(\015)p 5665 51080 V 3583 w Fp(und)432 b(die)i(Gleic)-36
b(h)g(ung)432 b(hat)p 22553 51080 V 26174 51032 a(2)25702
51080 y Ff(\015)p 27296 51080 V 3583 w Fp(.)p 0 TeXcolorgray
0 TeXcolorgray 12789 52452 8371 45 v 12789 55537 45 3085
v 16649 54234 a(1)16177 54282 y Ff(\015)p 21115 55537
V 12789 55581 8371 45 v 12789 58840 45 3260 v 13498 57637
a Fp(p)36 b(ositiv)p 18750 58840 V 19459 57543 a Fl(2)p
21115 58840 V 12789 58885 8371 45 v 12789 62144 45 3260
v 13498 60941 a Fp(n)-36 b(ull)p 18750 62144 V 19459
60846 a Fl(2)p 21115 62144 V 12789 62188 8371 45 v 12789
65447 45 3260 v 13498 64244 a Fp(negativ)p 18750 65447
V 1 0 0 TeXcolorrgb 19459 64150 a Fl(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 21115 65447 V 12789
65491 8371 45 v 0 TeXcolorgray 0 TeXcolorgray 30427 52452
12009 45 v 30427 55537 45 3085 v 36106 54234 a Fp(2)35634
54282 y Ff(\015)p 42391 55537 V 30427 55581 12009 45
v 30427 58840 45 3260 v 31135 57637 a Fp(k)g(eine)434
b(L\366sung)p 40026 58840 V 1 0 0 TeXcolorrgb 40734 57543
a Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
42391 58840 V 30427 58885 12009 45 v 30427 62144 45 3260
v 31135 60941 a Fp(eine)g(L\366sung)p 40026 62144 V 40734
60846 a Fl(2)p 42391 62144 V 30427 62188 12009 45 v 30427
65447 45 3260 v 31135 64244 a Fp(zw)-36 b(ei)434 b(L\366sungen)p
40026 65447 V 40734 64150 a Fl(2)p 42391 65447 V 30427
65491 12009 45 v 47992 40116 a Fi(___/1)p 1 0 0 TeXcolorrgb
46337 42108 a Fh(K7)370 b(-)f(KKK)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 69520 54804 45
v 0 TeXcolorgray 24421 81281 a Fp(14)p 0 TeXcolorgray
eop end
%%Page: 15 15
TeXDict begin 15 14 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fq(K7)714 b(-)g(KKK)f(-)h(1008)g(Lage)g
(der)f(Geraden)g(-)i(Thema)e(Mathematik)-2331 4515 y(Sc)-60
b(h)g(ularb)60 b(eiten)715 b(7.)i(Klasse)p 0 TeXcolorgray
-1391 7823 a Fp(20.)p 0 TeXcolorgray 651 w(Die)402 b(Kugel)g(mit)g(dem)
f(Mittelpunkt)f Fo(M)139 b Fn(\(1)p Fk(j)p Fn(0)p Fk(j)230
b(\000)g Fn(2\))402 b Fp(wird)f(im)h(Punkt)f Fo(P)181
b Fn(\(5)p Fk(j)229 b(\000)h Fn(4)p Fk(j)p Fn(3\))402
b Fp(v)-36 b(on)402 b(der)921 9815 y(Eb)36 b(ene)433
b Fo(\017)p Fp(:)h Fn(4)p Fo(x)296 b Fk(\000)f Fn(4)p
Fo(y)343 b Fn(+)295 b(5)p Fo(z)429 b Fn(=)369 b(51)434
b Fp(b)36 b(er\374hrt.)921 12360 y(In)-36 b(terpretiere)1301
b(die)g(Lage)i(der)e(Geraden)g Fo(g)48 b Fp(,)1302 b(w)-36
b(elc)g(he)1302 b(durc)-36 b(h)1300 b(die)i(Gleic)-36
b(h)g(ung)921 16050 y Fo(g)48 b Fp(:)433 b Fo(X)474 b
Fn(=)5320 12773 y Fc(0)5320 14722 y(B)5320 15386 y(B)5320
16050 y(B)5320 16758 y(@)7875 14124 y Fn(1)7875 16116
y(0)6842 18108 y Fk(\000)p Fn(2)9079 12773 y Fc(1)9079
14722 y(C)9079 15386 y(C)9079 16050 y(C)9079 16758 y(A)10343
16050 y Fn(+)294 b Fo(t)h Fk(\001)13079 12773 y Fc(0)13079
14722 y(B)13079 15386 y(B)13079 16050 y(B)13079 16758
y(@)15634 14124 y Fn(4)14601 16116 y Fk(\000)p Fn(4)15634
18108 y(5)16838 12773 y Fc(1)16838 14722 y(C)16838 15386
y(C)16838 16050 y(C)16838 16758 y(A)18234 16050 y Fp(gegeb)36
b(en)427 b(ist,)h(in)g(Bezug)f(auf)h(die)f(Kugel)h(und)f(die)g(Eb)36
b(e-)921 19389 y(ne.)p 1 0 0 TeXcolorrgb 921 21935 a
Fo(g)469 b Fp(ist)421 b(die)h(Gerade)e(durc)-36 b(h)420
b(den)h(Mittelpunkt)f Fo(M)561 b Fp(und)420 b(den)h(Punkt)f
Fo(P)603 b Fp(und)420 b(sc)-36 b(hneidet)420 b(die)921
23927 y(Eb)36 b(ene)433 b(im)h(Punkt)f Fo(P)614 b Fp(im)434
b(rec)-36 b(h)g(ten)432 b(Wink)-36 b(el.)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7823 a Fi(___/1)p
1 0 0 TeXcolorrgb 46337 9815 a Fh(K7)370 b(-)f(KKK)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
27402 54804 45 v -2331 32703 a Fq(K7)630 b(-)h(KKK)e(-)h(1009)g(Lage)g
(zw)-60 b(eier)631 b(Kreise)e(-)h(Thema)g(Mathematik)-2331
35725 y(Sc)-60 b(h)g(ularb)60 b(eiten)715 b(7.)i(Klasse)p
0 TeXcolorgray -1391 39033 a Fp(21.)p 0 TeXcolorgray
651 w(Gegeb)36 b(en)378 b(sind)h(zw)-36 b(ei)380 b(Kreise)g(mit)f
(Mittelpunkt)f(und)g(Radius)i Fo(k)32715 39232 y Fm(1)33241
39033 y Fn([)8 b Fo(M)34868 39232 y Fm(1)35394 39033
y Fn(;)221 b Fo(r)36562 39232 y Fm(1)37089 39033 y Fn(])379
b Fp(und)f Fo(k)41052 39232 y Fm(2)41578 39033 y Fn([)8
b Fo(M)43205 39232 y Fm(2)43731 39033 y Fn(;)221 b Fo(r)44899
39232 y Fm(2)45426 39033 y Fn(])p Fp(.)921 42523 y(Erg\344nze)358
b(die)h(T)-108 b(extl\374c)-36 b(k)g(en)358 b(im)g(folgenden)h(Satz)f
(durc)-36 b(h)357 b(Ankreuzen)g(der)h(jew)-36 b(eils)360
b(ric)-36 b(h)g(tigen)921 44515 y(Satzteile)434 b(so,)g(dass)g(eine)f
(mathematisc)-36 b(h)434 b(k)-36 b(orrekte)434 b(A)-36
b(ussage)434 b(en)-36 b(tsteh)g(t!)921 48005 y(Die)574
b(zu)g Fo(k)5978 48204 y Fm(1)7078 48005 y Fp(und)e Fo(k)10495
48204 y Fm(2)11595 48005 y Fp(geh\366rdenden)h(Kreis\035\344c)-36
b(hen)573 b(hab)36 b(en)p 31027 48005 3150 45 v 34649
47957 a(1)34177 48005 y Ff(\015)p 35771 48005 V 3723
w Fp(gemeinsam,)874 49997 y(w)-36 b(enn)p 4451 49997
V 8072 49949 a(2)7601 49997 y Ff(\015)p 9195 49997 V
3583 w Fp(.)p 0 TeXcolorgray 0 TeXcolorgray 6268 51370
14892 45 v 6268 54454 45 3085 v 13389 53151 a(1)12917
53199 y Ff(\015)p 21115 54454 V 6268 54498 14892 45 v
6268 57757 45 3260 v 6976 56554 a Fp(k)g(einen)434 b(Punkt)p
18750 57757 V 19459 56460 a Fl(2)p 21115 57757 V 6268
57802 14892 45 v 6268 61061 45 3260 v 6976 59858 a Fp(genau)g(einen)f
(Punkt)p 18750 61061 V 1 0 0 TeXcolorrgb 19459 59763
a Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
21115 61061 V 6268 61105 14892 45 v 6268 64364 45 3260
v 6976 63161 a Fp(mehrere)g(Punkte)p 18750 64364 V 19459
63067 a Fl(2)p 21115 64364 V 6268 64409 14892 45 v 0
TeXcolorgray 0 TeXcolorgray 30427 51370 13686 45 v 30427
54454 45 3085 v 36944 53151 a Fp(2)36472 53199 y Ff(\015)p
44068 54454 V 30427 54498 13686 45 v 30427 57757 45 3260
v 31135 56554 a Fo(r)31721 56753 y Fm(1)32616 56554 y
Fo(<)369 b(r)34583 56753 y Fm(2)p 41703 57757 V 42411
56460 a Fl(2)p 44068 57757 V 30427 57802 13686 45 v 30427
61306 45 3505 v 31135 60029 a Fk(j)32861 59693 y Fo(~)31504
60029 y(M)32762 60228 y Fm(1)33288 60029 y Fo(M)34546
60228 y Fm(2)35072 60029 y Fk(j)g(\025)g Fo(r)37798 60228
y Fm(1)38620 60029 y Fn(+)294 b Fo(r)40512 60228 y Fm(2)p
41703 61306 V 42411 59886 a Fl(2)p 44068 61306 V 30427
61350 13686 45 v 30427 64855 45 3505 v 31135 63578 a
Fk(j)32861 63242 y Fo(~)31504 63578 y(M)32762 63777 y
Fm(1)33288 63578 y Fo(M)34546 63777 y Fm(2)35072 63578
y Fk(j)369 b Fn(=)g Fo(r)37777 63777 y Fm(1)38598 63578
y Fn(+)295 b Fo(r)40491 63777 y Fm(2)p 41703 64855 V
1 0 0 TeXcolorrgb 42411 63435 a Fl(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 44068 64855 V 30427
64899 13686 45 v 47992 39033 a Fi(___/1)p 1 0 0 TeXcolorrgb
46337 41025 a Fh(K7)370 b(-)f(KKK)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 68927 54804 45
v 0 TeXcolorgray 24421 81281 a Fp(15)p 0 TeXcolorgray
eop end
%%Page: 16 16
TeXDict begin 16 15 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fq(K7)491 b(-)g(KKK)e(-)j(1010)e(Kegelsc)
-60 b(hnitte)489 b(-)i(Thema)f(Mathematik)g(Sc)-60 b(h)g(ul-)-2331
4515 y(arb)60 b(eiten)716 b(7.)h(Klasse)p 0 TeXcolorgray
-1391 7823 a Fp(22.)p 0 TeXcolorgray 651 w(Um)433 b(w)-36
b(elc)g(hen)434 b(Kegelsc)-36 b(hnitt)433 b(handelt)g(es)h(sic)-36
b(h?)921 11313 y(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36
b(k)g(en)358 b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357
b(Ankreuzen)g(der)h(jew)-36 b(eils)360 b(ric)-36 b(h)g(tigen)921
13305 y(Satzteile)434 b(so,)g(dass)g(eine)f(mathematisc)-36
b(h)434 b(k)-36 b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36
b(tsteh)g(t!)921 16795 y(Die)434 b(Gleic)-36 b(h)g(ung)p
9583 16795 3150 45 v 13204 16747 a(1)12732 16795 y Ff(\015)p
14326 16795 V 3584 w Fp(b)36 b(esc)-36 b(hreibt)432 b(eine)p
27022 16795 V 30643 16747 a(2)30171 16795 y Ff(\015)p
31765 16795 V 3583 w Fp(.)p 0 TeXcolorgray 0 TeXcolorgray
6266 18167 14894 45 v 6266 21252 45 3085 v 13388 19949
a(1)12916 19997 y Ff(\015)p 21115 21252 V 6266 21296
14894 45 v 6266 24555 45 3260 v 6975 23352 a Fn(9)p Fo(x)8364
22870 y Fm(2)9185 23352 y Fn(+)295 b(25)p Fo(y)12474
22870 y Fm(2)13295 23352 y Fn(+)g(1)370 b(=)e(0)p 18750
24555 V 19459 23258 a Fl(2)p 21115 24555 V 6266 24599
14894 45 v 6266 27859 45 3260 v 6975 26656 a Fn(25)p
Fo(x)9014 26173 y Fm(2)9835 26656 y Fk(\000)296 b Fn(9)p
Fo(y)12496 26173 y Fm(2)13391 26656 y Fn(=)368 b(1)p
18750 27859 V 1 0 0 TeXcolorrgb 19459 26561 a Fl(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 21115
27859 V 6266 27903 14894 45 v 6266 31162 45 3260 v 6975
29959 a Fn(9)p Fo(x)295 b Fn(+)g(25)p Fo(y)418 b Fn(=)368
b(0)p 18750 31162 V 19459 29865 a Fl(2)p 21115 31162
V 6266 31206 14894 45 v 0 TeXcolorgray 0 TeXcolorgray
30427 18167 8985 45 v 30427 21252 45 3085 v 34594 19949
a Fp(2)34122 19997 y Ff(\015)p 39367 21252 V 30427 21296
8985 45 v 30427 24555 45 3260 v 31135 23352 a Fp(P)-36
b(arab)36 b(el)p 37001 24555 V 37710 23258 a Fl(2)p 39367
24555 V 30427 24599 8985 45 v 30427 27859 45 3260 v 31135
26656 a Fp(Ellipse)p 37001 27859 V 37710 26561 a Fl(2)p
39367 27859 V 30427 27903 8985 45 v 30427 31162 45 3260
v 31135 29959 a Fp(Hyp)g(erb)g(el)p 37001 31162 V 1 0 0
TeXcolorrgb 37710 29865 a Fl(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 39367 31162 V 30427 31206
8985 45 v 47992 7823 a Fi(___/1)p 1 0 0 TeXcolorrgb 46337
9815 a Fh(K7)370 b(-)f(KKK)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 35235 54804 45 v -2331
40536 a Fq(K7)887 b(-)h(KKK)f(-)h(1011)f(P)-60 b(arab)60
b(el)887 b(-)h(Thema)e(Mathematik)h(Sc)-60 b(h)g(ular-)-2331
43558 y(b)60 b(eiten)716 b(7.)h(Klasse)p 0 TeXcolorgray
-1391 46866 a Fp(23.)p 0 TeXcolorgray 651 w(Kreuze)433
b(die)h(zutre\033e\(n\))e(A)-36 b(ussage\(n\))433 b(an!)p
1293 47906 43799 45 v 1293 50711 45 2805 v 2001 49766
a(Eine)h(P)-36 b(arab)36 b(el)434 b(b)36 b(esteh)-36
b(t)432 b(aus)i(zw)-36 b(ei)434 b(P)-36 b(arab)36 b(el\344sten.)p
42681 50711 V 45047 50711 V 1293 50755 43799 45 v 1293
53818 45 3064 v 2001 52615 a(Die)435 b(Symmetrieac)-36
b(hse)433 b(einer)g(P)-36 b(arab)36 b(el)434 b(v)-36
b(erl\344uft)435 b(normal)f(zur)f(Leitlinie.)p 42681
53818 V 1 0 0 TeXcolorrgb 43390 52619 a Fl(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45047 53818
V 1293 53863 43799 45 v 1293 56926 45 3064 v 2001 55723
a Fp(Eine)h(P)-36 b(arab)36 b(el)434 b(sc)-36 b(hneidet)432
b(die)i(Leitlinie)g(im)g(Brennpunkt.)p 42681 56926 V
45047 56926 V 1293 56970 43799 45 v 1293 62025 45 5056
v 2001 58830 a(Durc)-36 b(h)433 b(die)h(Lage)g(des)f(Brennpunktes)f
(ist)i(eine)f(P)-36 b(arab)36 b(el)434 b(in)g(der)f(1.)h(Hauptlage)2001
60822 y(eindeutig)f(b)36 b(estimm)-36 b(t.)p 42681 62025
V 1 0 0 TeXcolorrgb 43390 59830 a Fl(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 45047 62025 V 1293 62069
43799 45 v 1293 65132 45 3064 v 2001 63929 a Fp(Eine)434
b(P)-36 b(arab)36 b(el)434 b(in)f(2.)h(Hauptlage)g(stellt)g(den)f
(Graphen)f(einer)i(F)-108 b(unktion)432 b(dar.)p 42681
65132 V 1 0 0 TeXcolorrgb 43390 63933 a Fl(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45047 65132
V 1293 65177 43799 45 v 47992 46866 a Fi(___/1)p 1 0 0
TeXcolorrgb 46337 48858 a Fh(K7)370 b(-)f(KKK)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 69205
54804 45 v 0 TeXcolorgray 24421 81281 a Fp(16)p 0 TeXcolorgray
eop end
%%Page: 17 17
TeXDict begin 17 16 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fq(K7)682 b(-)g(KKK)f(-)h(1012)g(Ellipse)f
(-)h(Thema)f(Mathematik)g(Sc)-60 b(h)g(ularb)60 b(ei-)-2331
4515 y(ten)717 b(7.)g(Klasse)p 0 TeXcolorgray -1391 7823
a Fp(24.)p 0 TeXcolorgray 651 w(Kreuze)898 b(die)g(b)36
b(eiden)898 b(A)-36 b(ussagen)898 b(an,)h(die)g(f\374r)f(eine)g
(Ellipse)h(mit)f(der)g(Gleic)-36 b(h)g(ung)921 9815 y
Fo(b)1474 9333 y Fm(2)2000 9815 y Fo(x)2739 9333 y Fm(2)3560
9815 y Fn(+)295 b Fo(a)5550 9333 y Fm(2)6075 9815 y Fo(y)6757
9333 y Fm(2)7652 9815 y Fn(=)369 b Fo(a)9716 9333 y Fm(2)10241
9815 y Fo(b)10794 9333 y Fm(2)11754 9815 y Fp(zutre\033en!)p
1062 10781 44260 45 v 1062 13586 45 2805 v 1770 12641
a(Die)435 b(Di\033erenz)e(der)g(Brennstrec)-36 b(k)g(en)433
b(ist)g(k)-36 b(onstan)g(t.)p 42912 13586 V 45277 13586
V 1062 13630 44260 45 v 1062 16701 45 3071 v 1770 15498
a(Eine)434 b(Ellipse,)g(f\374r)g(die)f Fo(a)369 b Fn(=)g
Fo(b)433 b Fp(gilt,)i(ist)f(ein)f(Kreis.)p 42912 16701
V 1 0 0 TeXcolorrgb 16806 w Fl(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 16701 V 1062 16745
44260 45 v 1062 21800 45 5056 v 1770 18605 a Fp(Die)374
b(Summe)d(der)h(Abst\344nde)g(v)-36 b(on)372 b(einem)h(Punkt)f
Fo(X)477 b Fp(der)372 b(Ellipse)h(zu)f(den)g(b)36 b(eiden)1770
20597 y(Brennpunkten)432 b(b)36 b(etr\344gt)434 b Fo(a)p
Fp(.)p 42912 21800 V 45277 21800 V 1062 21845 44260 45
v 1062 26641 45 4797 v 1770 23704 a(Die)365 b(b)36 b(eiden)362
b(Brennpunkte)g(liegen)i(symmetrisc)-36 b(h)363 b(zum)g(Mittelpunkt)g
(der)g(Ellip-)1770 25696 y(se.)p 42912 26641 V 1 0 0
TeXcolorrgb 43621 24575 a Fl(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 45277 26641 V 1062 26686 44260
45 v 1062 31741 45 5056 v 1770 28545 a Fp(Die)435 b(Summe)e(der)g
(Abst\344nde)f(v)-36 b(on)434 b(einem)g(Neb)36 b(ensc)-36
b(heitel)433 b(der)g(Ellipse)h(zu)f(den)1770 30537 y(b)36
b(eiden)433 b(Hauptsc)-36 b(heiteln)433 b(b)36 b(etr\344gt)434
b Fn(2)p Fo(a)p Fp(.)p 42912 31741 V 45277 31741 V 1062
31785 44260 45 v 47992 7823 a Fi(___/1)p 1 0 0 TeXcolorrgb
46337 9815 a Fh(K7)370 b(-)f(KKK)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 35813 54804 45
v -2331 41114 a Fq(K7)491 b(-)g(KKK)e(-)j(1013)e(Kegelsc)-60
b(hnitte)489 b(-)i(Thema)f(Mathematik)g(Sc)-60 b(h)g(ul-)-2331
44137 y(arb)60 b(eiten)716 b(7.)h(Klasse)p 0 TeXcolorgray
-1391 47444 a Fp(25.)p 0 TeXcolorgray 651 w(Kreuze)433
b(die)h(zutre\033ende)e(A)-36 b(ussage)434 b(an!)p 1062
48411 44260 45 v 1062 53466 45 5056 v 1770 50271 a(Die)422
b(Gerade)f(durc)-36 b(h)419 b(einen)i(Haupt-)f(und)g(Neb)36
b(ensc)-36 b(heitel)420 b(einer)h(Ellipse)h(ist)f(eine)1770
52263 y(T)-108 b(angen)-36 b(te)434 b(der)f(Ellipse.)p
42912 53466 V 45277 53466 V 1062 53510 44260 45 v 1062
58565 45 5056 v 1770 55370 a(Eine)h(P)-36 b(arallele)435
b(zu)e(einer)h(T)-108 b(angen)-36 b(te)433 b(eines)g(Kreises)h(ist)g
(wieder)g(eine)f(Kreistan-)1770 57362 y(gen)-36 b(te.)p
42912 58565 V 45277 58565 V 1062 58609 44260 45 v 1062
61672 45 3064 v 1770 60469 a(Jede)434 b(zur)f(Leitlinie)h(einer)f(P)-36
b(arab)36 b(el)434 b(parallele)h(Gerade)e(ist)h(eine)f(T)-108
b(angen)-36 b(te.)p 42912 61672 V 45277 61672 V 1062
61717 44260 45 v 1062 64780 45 3064 v 1770 63577 a(Eine)434
b(Normale)g(auf)g(die)g(Leitlinie)g(einer)f(P)-36 b(arab)36
b(el)434 b(kann)g(eine)f(T)-108 b(angen)-36 b(te)434
b(sein.)p 42912 64780 V 45277 64780 V 1062 64824 44260
45 v 1062 69621 45 4797 v 1770 66684 a(Eine)380 b(P)-36
b(arallele)380 b(zur)f(Hauptac)-36 b(hse)379 b(einer)g(Hyp)36
b(erb)g(el)379 b(in)h(1.)g(Hauptlage)g(ist)f(immer)1770
68676 y(eine)434 b(Sekan)-36 b(te.)p 42912 69621 V 1 0 0
TeXcolorrgb 43621 67555 a Fl(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 45277 69621 V 1062 69665 44260
45 v 1062 74720 45 5056 v 1770 71525 a Fp(Eine)434 b(Sekan)-36
b(te,)434 b(die)f(einen)g(Hyp)36 b(erb)g(elast)434 b(in)g(2)g(Punkten)e
(sc)-36 b(hneidet,)433 b(sc)-36 b(hneidet)1770 73517
y(auc)g(h)434 b(den)e(anderen)h(Hyp)36 b(erb)g(elast)434
b(in)f(2)h(Punkten.)p 42912 74720 V 45277 74720 V 1062
74764 44260 45 v 47992 47444 a Fi(___/1)p 1 0 0 TeXcolorrgb
46337 49436 a Fh(K7)370 b(-)f(KKK)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 24421
81281 a Fp(17)p 0 TeXcolorgray eop end
%%Page: 18 18
TeXDict begin 18 17 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 54804 45 v -2331 6795 a Fq(K7)1102
b(-)h(KKK)e(-)i(1014)f(Kreisgleic)-60 b(h)g(ung)1101
b(-)h(Thema)g(Mathematik)-2331 9817 y(Sc)-60 b(h)g(ularb)60
b(eiten)715 b(7.)i(Klasse)p 0 TeXcolorgray -1391 13124
a Fp(26.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(ist)h(der)f(Punkt)g
Fo(M)139 b Fn(\()p Fk(\000)p Fn(2)p Fk(j)p Fn(3\))p Fp(.)921
15670 y(Gib)579 b(die)g(Gleic)-36 b(h)g(ung)579 b(eines)g(Kreises)h
Fo(k)624 b Fp(mit)580 b(dem)f(Mittelpunkt)g Fo(M)718
b Fp(und)578 b(dem)h(Radius)921 17661 y Fo(r)405 b Fn(=)369
b(5)434 b Fp(an.)p 1 0 0 TeXcolorrgb 769 20207 a Fn(\()p
Fo(x)295 b Fn(+)g(2\))4772 19725 y Fm(2)5593 20207 y
Fn(+)g(\()p Fo(y)343 b Fk(\000)295 b Fn(3\))10867 19725
y Fm(2)11762 20207 y Fn(=)368 b(25)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 13124 a Fi(___/1)p
1 0 0 TeXcolorrgb 46337 15116 a Fh(K7)i(-)f(KKK)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 24014
V 0 TeXcolorgray 24421 81281 a Fp(18)p 0 TeXcolorgray
eop end
%%Page: 19 19
TeXDict begin 19 18 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fq(K7)640 b(-)g(KKK)f(-)h(1015)g(Lage)g
(Kreis)f(Gerade)g(-)i(Thema)e(Mathematik)-2331 4515 y(Sc)-60
b(h)g(ularb)60 b(eiten)715 b(7.)i(Klasse)p 0 TeXcolorgray
-1391 7823 a Fp(27.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)344
b(sind)f(eine)i(Abbildung)e(des)h(Kreises)g Fo(k)45 b
Fp(:)345 b Fo(x)26433 7341 y Fm(2)27072 7823 y Fn(+)113
b Fo(y)28879 7341 y Fm(2)29773 7823 y Fn(=)368 b Fo(r)31775
7341 y Fm(2)32646 7823 y Fp(und)343 b(ein)h(Punkt)g Fo(P)181
b Fn(\()p Fo(p)43209 8022 y Fm(1)43734 7823 y Fk(j)p
Fo(p)44756 8022 y Fm(2)45282 7823 y Fn(\))p Fp(.)p 0
TeXcolorgray 0 TeXcolorgray 16662 23632 a
 currentpoint currentpoint translate 0.62814 0.62814 scale neg exch
neg exch translate
 16662 23632
a 16662 23632 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 194.04747 a add def
/d 0.0 a add neg def /h 192.3408 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 16662 23632 a 26237 14561 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 107.55133  0 -86.49614  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -86.49614
 107.55133  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-81.94403  def /maxTickline 110.39677  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
0.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 110.39677
0.0 -81.94403   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 107.55133
0.0 -86.49614 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 110.39677  0 -81.94403  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -81.94403
 110.39677  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-86.49614  def /maxTickline 107.55133  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
0.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 110.39677
0.0 -81.94403   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 107.55133
0.0 -86.49614 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0.0 0.0 2 copy moveto 54.9748
0 CLW mul sub dup 0 rmoveto 0 360 arc closepath  gsave 1.2 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 0.0 0.0   false
NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0
0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show
grestore } bind def   1. .setopacityalpha  newpath n { transform floor
.5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
26237 14561 a
tx@Dict begin  { 2.27626 4.55254 } PutCoor PutBegin  end
 26237 14561 a 0.25 TeXcolorgray Fj(M)p
0 TeXcolorgray 26237 14561 a
tx@Dict begin  PutEnd  end
 26237 14561 a 26237 14561
a
tx@Dict begin  { -47.23164 46.66248 } PutCoor PutBegin  end
 26237 14561 a Fj(k)26237 14561 y
tx@Dict begin  PutEnd  end
 26237 14561 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 85.9274 76.25314
  false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 26237 14561 a
tx@Dict begin  { 88.20367 80.80568 } PutCoor PutBegin  end
 26237 14561 a
Fj(P)26237 14561 y
tx@Dict begin  PutEnd  end
 26237 14561 a 38143 23632 a
currentpoint initclip moveto
 38143
23632 a 16662 23632 a
 currentpoint currentpoint translate 1 0.62814 div 1 0.62814 div scale
neg exch neg exch translate
 16662 23632 a 921 28561 a Fp(Erg\344nze)358
b(die)h(T)-108 b(extl\374c)-36 b(k)g(en)358 b(im)g(folgenden)h(Satz)f
(durc)-36 b(h)357 b(Ankreuzen)g(der)h(jew)-36 b(eils)360
b(ric)-36 b(h)g(tigen)921 30553 y(Satzteile)434 b(so,)g(dass)g(eine)f
(mathematisc)-36 b(h)434 b(k)-36 b(orrekte)434 b(A)-36
b(ussage)434 b(en)-36 b(tsteh)g(t!)873 34044 y(V)-108
b(om)911 b(Punkt)g Fo(P)1092 b Fp(aus)911 b(kann)g(man)p
20824 34044 3150 45 v 24446 33996 a(1)23974 34044 y Ff(\015)p
25568 34044 V 4061 w Fp(an)g(den)f(Kreis)i Fo(k)956 b
Fp(legen,)912 b(da)p 921 36035 V 4542 35987 a(2)4071
36035 y Ff(\015)p 5665 36035 V 3583 w Fp(.)p 0 TeXcolorgray
0 TeXcolorgray 4407 37408 16753 45 v 4407 40492 45 3085
v 12458 39189 a(1)11986 39237 y Ff(\015)p 21115 40492
V 4407 40536 16753 45 v 4407 43796 45 3260 v 5115 42592
a Fp(genau)434 b(eine)g(T)-108 b(angen)-36 b(te)p 18750
43796 V 19459 42498 a Fl(2)p 21115 43796 V 4407 43840
16753 45 v 4407 47099 45 3260 v 5115 45896 a Fp(genau)434
b(zw)-36 b(ei)434 b(T)-108 b(angen)-36 b(ten)p 18750
47099 V 1 0 0 TeXcolorrgb 19459 45801 a Fl(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 21115 47099
V 4407 47143 16753 45 v 4407 50403 45 3260 v 5115 49199
a Fp(k)g(eine)434 b(T)-108 b(angen)-36 b(te)p 18750 50403
V 19459 49105 a Fl(2)p 21115 50403 V 4407 50447 16753
45 v 0 TeXcolorgray 0 TeXcolorgray 30427 37408 12416
45 v 30427 40492 45 3085 v 36309 39189 a Fp(2)35837 39237
y Ff(\015)p 42797 40492 V 30427 40536 12416 45 v 30427
43796 45 3260 v 31135 42592 a Fo(P)705 b(=)-805 b Fk(2)369
b Fo(k)p 40432 43796 V 41141 42498 a Fl(2)p 42797 43796
V 30427 43840 12416 45 v 30427 47099 45 3260 v 31135
45896 a Fo(p)31788 46095 y Fm(1)32314 45414 y(2)33135
45896 y Fn(+)295 b Fo(p)35095 46095 y Fm(2)35620 45414
y(2)36515 45896 y Fo(>)369 b(r)38518 45414 y Fm(2)p 40432
47099 V 1 0 0 TeXcolorrgb 41141 45801 a Fl(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 42797 47099
V 30427 47143 12416 45 v 30427 50403 45 3260 v 31135
49199 a Fo(p)31788 49398 y Fm(1)32683 49199 y Fo(>)f
Fn(0)296 b Fk(^)f Fo(p)36843 49398 y Fm(2)37737 49199
y Fo(>)369 b Fn(0)p 40432 50403 V 41141 49105 a Fl(2)p
42797 50403 V 30427 50447 12416 45 v 47992 7823 a Fi(___/1)p
1 0 0 TeXcolorrgb 46337 9815 a Fh(K7)h(-)f(KKK)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 54475
54804 45 v 0 TeXcolorgray 24421 81281 a Fp(19)p 0 TeXcolorgray
eop end
%%Page: 20 20
TeXDict begin 20 19 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fq(K7)715 b(-)g(KKK)f(-)h(1016)g(Hyp)60
b(erb)g(el)713 b(-)j(Thema)e(Mathematik)g(Sc)-60 b(h)g(ular-)-2331
4515 y(b)60 b(eiten)716 b(7.)h(Klasse)p 0 TeXcolorgray
-1391 7823 a Fp(28.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433
b(ist)h(die)f(Abbildung)g(einer)g(Hyp)36 b(erb)g(el)434
b(in)f(1.)i(Hauptlage.)p 0 TeXcolorgray 0 TeXcolorgray
12165 25627 a
 currentpoint currentpoint translate 0.525 0.525 scale neg exch neg
exch translate
 12165 25627 a 12165 25627 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 386.95747 a add def
/d 0.0 a add neg def /h 271.43896 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 12165 25627
a 32952 11076 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -113.81097 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 199.1692 0.0 -187.78827 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -170.71646 0.0 T 14
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 139.98744 0.0 -131.45152   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 199.1692  0 -187.78827  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -187.78827
 199.1692  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-131.45152  def /maxTickline 139.98744  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 139.98744
0.0 -131.45152   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 199.1692
0.0 -187.78827 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 139.98744  0 -131.45152  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -131.45152
 139.98744  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-187.78827  def /maxTickline 199.1692  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 139.98744
0.0 -131.45152   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 199.1692
0.0 -187.78827 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 31707 8211 a Fm(1)31707
5062 y(2)31707 1912 y(3)31707 -1238 y(4)30975 14464 y
Fg(\000)p Fm(1)30975 17614 y Fg(\000)p Fm(2)30975 20764
y Fg(\000)p Fm(3)30975 23913 y Fg(\000)p Fm(4)35866 12421
y(1)2680 b(2)g(3)f(4)h(5)f(6)-22883 b Fg(\000)p Fm(1)-4351
b Fg(\000)p Fm(2)f Fg(\000)p Fm(3)h Fg(\000)p Fm(4)f
Fg(\000)p Fm(5)g Fg(\000)p Fm(6)32952 11076 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 32952 11076
a 32952 11076 a
tx@Dict begin  { 199.1692 139.98744 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 32952 11076 a 32952 11076 a
tx@Dict begin  { 5.0 6.2015 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 32952 11076
a 32609 11361 a Fp(x)32952 11076 y
tx@Dict begin  PutEnd  end
 32952 11076 a 32952
11076 a
tx@Dict begin  PutEnd  end
 32952 11076 a 32952 11076 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 32952 11076 a 32952
11076 a
tx@Dict begin  { 0.0 0.0 pop 199.1692 139.98744 exch pop } PutCoor
PutBegin  end
 32952 11076 a 32952 11076 a
tx@Dict begin  { 5.0 6.2015 5.16667 2.33331 -40.  Uput UUput } PutCoor
PutBegin  end
 32952 11076 a 32609
11233 a Fp(y)32952 11076 y
tx@Dict begin  PutEnd  end
 32952 11076 a 32952 11076
a
tx@Dict begin  PutEnd  end
 32952 11076 a 32952 11076 a
tx@Dict begin  gsave STV CP T /ps@rot 0. def grestore  end
 32952 11076 a 32952 11076
a
tx@Dict begin  { 0.0 0.0 } PutCoor PutBegin  end
 32952 11076 a 32952 11076 a
tx@Dict begin ps@rot  RotBegin  end
 32952 11076 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def   /t -0.99 def /t1 0.99 def /dt t1 t sub
49 div def /F@pstplot (3.*(1+t^2)/(1-t^2)|4.*2*t/(1-t^2))  tx@AlgToPs
begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul exch 28.45274
mul exch } def  /ps@Exit false def xy moveto  49 1 sub { /t t dt add
def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit } if } repeat
ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial 32952 11076 a
tx@Dict begin RotEnd  end
 32952 11076 a
32952 11076 a
tx@Dict begin  PutEnd  end
 32952 11076 a 32952 11076 a
tx@Dict begin  gsave STV CP T /ps@rot 0. def grestore  end
 32952 11076
a 32952 11076 a
tx@Dict begin  { 0.0 0.0 } PutCoor PutBegin  end
 32952 11076 a 32952 11076 a
tx@Dict begin ps@rot  RotBegin  end
 32952 11076
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def   /t -0.99 def /t1 0.99 def /dt t1 t sub
49 div def /F@pstplot (3.*(-1-t^2)/(1-t^2)|4.*(-2)*t/(1-t^2))  tx@AlgToPs
begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul exch 28.45274
mul exch } def  /ps@Exit false def xy moveto  49 1 sub { /t t dt add
def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit } if } repeat
ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial 32952 11076
a
tx@Dict begin RotEnd  end
 32952 11076 a 32952 11076 a
tx@Dict begin  PutEnd  end
 32952 11076 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -142.26372 0.0  
false NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 32952 11076 a
tx@Dict begin  { -138.28035 5.69046 } PutCoor PutBegin  end
 32952 11076 a
-123 x Fj(F)33547 11076 y Fb(1)32952 11076 y
tx@Dict begin  PutEnd  end
 32952 11076
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -85.35823 0.0   false
NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0
0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show
grestore } bind def   1. .setopacityalpha  newpath n { transform floor
.5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 32952 11076
a
tx@Dict begin  { -82.51277 5.69046 } PutCoor PutBegin  end
 32952 11076 a -222 x Fa(A\(-3|0\))32952 11076 y
tx@Dict begin  PutEnd  end
 32952
11076 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 85.35823 0.0   false
NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0
0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show
grestore } bind def   1. .setopacityalpha  newpath n { transform floor
.5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 32952
11076 a
tx@Dict begin  { 89.91077 5.69046 } PutCoor PutBegin  end
 32952 11076 a Fa(B)32952 11076 y
tx@Dict begin  PutEnd  end
 32952 11076
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 142.26372 0.0   false
NArray  /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0
0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show
grestore } bind def   1. .setopacityalpha  newpath n { transform floor
.5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 32952 11076
a
tx@Dict begin  { 143.97081 5.69046 } PutCoor PutBegin  end
 32952 11076 a -222 x Fj(F)33547 10977 y Fb(2)34009
10854 y Fm(\(5)p Fg(j)p Fm(0\))32952 11076 y
tx@Dict begin  PutEnd  end
 32952 11076
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 0.0 0.0   false NArray
 /DS 4.0 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0
1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore
} bind def   1. .setopacityalpha  newpath n { transform floor .5 add
exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 32952 11076
a
tx@Dict begin  { 4.55254 5.69046 } PutCoor PutBegin  end
 32952 11076 a Fa(M)32952 11076 y
tx@Dict begin  PutEnd  end
 32952 11076 a 54999
25627 a
currentpoint initclip moveto
 54999 25627 a 12165 25627 a
 currentpoint currentpoint translate 1 0.525 div 1 0.525 div scale
neg exch neg exch translate
 12165 25627 a 921
29279 a Fp(Stelle)434 b(die)f(Gleic)-36 b(h)g(ung)433
b(dieser)g(Hyp)36 b(erb)g(el)434 b(auf)36 b(!)p 1 0 0
TeXcolorrgb 921 31824 a Fo(a)369 b Fn(=)f(3)434 b Fp(und)f
Fo(e)368 b Fn(=)h(5)g Fk(\))h Fo(b)f Fn(=)14410 30737
y Fk(p)p 15517 30737 3961 54 v 1087 x Fo(e)16120 31441
y Fm(2)16941 31824 y Fk(\000)295 b Fo(a)18952 31441 y
Fm(2)19847 31824 y Fn(=)369 b(4)921 34370 y Fp(h)-36
b(yp:)3944 33847 y Fj(x)4474 33534 y Fb(2)p 3944 34060
991 45 v 4204 34828 a Fm(9)5363 34370 y Fk(\000)6824
33799 y Fj(y)7321 33487 y Fb(2)p 6824 34060 959 45 v
6833 34828 a Fm(16)8284 34370 y Fn(=)369 b(1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7823
a Fi(___/1)p 1 0 0 TeXcolorrgb 46337 9815 a Fh(K7)h(-)f(KKK)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
38303 54804 45 v -2331 43605 a Fq(K7)492 b(-)g(KKK)f(-)h(1017)f(P)-60
b(arameterdarstellung)490 b(der)h(Ellipse)g(-)h(Thema)-2331
46627 y(Mathematik)717 b(Sc)-60 b(h)g(ularb)60 b(eiten)715
b(7.)i(Klasse)p 0 TeXcolorgray -1391 49934 a Fp(29.)p
0 TeXcolorgray 651 w(Gib)388 b(eine)h(P)-36 b(arameterdarstellung)388
b(der)g(Ellipse)i(mit)f(der)f(Gleic)-36 b(h)g(ung)388
b Fo(x)36307 49452 y Fm(2)37036 49934 y Fn(+)204 b(4)p
Fo(y)39584 49452 y Fm(2)40478 49934 y Fn(=)369 b(100)389
b Fp(an!)p 1 0 0 TeXcolorrgb 1264 51957 a Fj(x)1794 51644
y Fb(2)p 1054 52170 1412 45 v 1054 52938 a Fm(100)2893
52480 y Fn(+)4333 51909 y Fj(y)4830 51596 y Fb(2)p 4333
52170 959 45 v 4342 52938 a Fm(25)5793 52480 y Fn(=)368
b(1)i Fk(\))f Fo(a)g Fn(=)f(10)435 b Fp(und)d Fo(b)369
b Fn(=)g(5)g Fk(\))21677 51196 y Fc(\020)22338 51890
y Fj(x)p Fm(\()p Fj(t)p Fm(\))22355 52938 y Fj(y)32 b
Fm(\()p Fj(t)p Fm(\))23940 51196 y Fc(\021)24970 52480
y Fn(=)26350 51196 y Fc(\020)27012 51890 y Fm(10)p Fg(\001)p
Fm(cos)158 b Fj(t)27299 52938 y Fm(5)p Fg(\001)p Fm(sin)g
Fj(t)29970 51196 y Fc(\021)31065 52480 y Fp(mit)434 b
Fo(t)368 b Fk(2)h Fn([)8 b(0;)221 b(2)p Fo(\031)48 b
Fn(])p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 49934 a Fi(___/1)p 1 0 0 TeXcolorrgb 46337 51926
a Fh(K7)370 b(-)f(KKK)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 56634 54804 45 v 0 TeXcolorgray
24421 81281 a Fp(20)p 0 TeXcolorgray eop end
%%Page: 21 21
TeXDict begin 21 20 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fq(K7)830 b(-)h(KKK)e(-)h(1018)g
(Kreisgleic)-60 b(h)g(ungen)828 b(-)i(Thema)g(Mathematik)-2331
4515 y(Sc)-60 b(h)g(ularb)60 b(eiten)715 b(7.)i(Klasse)p
0 TeXcolorgray -1391 7823 a Fp(30.)p 0 TeXcolorgray 651
w(Kreuze)433 b(jene)h(Gleic)-36 b(h)g(ung\(en\))432 b(an,)i(die)f
(einen)h(Kreis)g(b)36 b(esc)-36 b(hreib)36 b(en:)p 15431
10855 15523 45 v 15431 14056 45 3201 v 16139 12853 a
Fo(x)16878 12371 y Fm(2)17699 12853 y Fn(+)295 b Fo(y)343
b Fk(\000)296 b Fn(1)369 b(=)g(0)p 28543 14056 V 30909
14056 V 15431 14100 15523 45 v 15431 17085 45 2985 v
16139 15882 a Fo(x)296 b Fn(+)e Fo(y)343 b Fk(\000)296
b Fn(1)369 b(=)g(0)p 28543 17085 V 30909 17085 V 15431
17129 15523 45 v 15431 20330 45 3201 v 16139 19127 a(3)p
Fo(x)17528 18645 y Fm(2)18350 19127 y Fn(+)295 b(3)p
Fo(y)20989 18645 y Fm(2)21884 19127 y Fn(=)368 b(1)p
28543 20330 V 1 0 0 TeXcolorrgb 29252 19062 a Fl(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 30909
20330 V 15431 20374 15523 45 v 15431 23575 45 3201 v
16139 22372 a Fo(x)16878 21890 y Fm(2)17699 22372 y Fk(\000)296
b Fn(2)p Fo(x)f Fn(+)g(1)h(+)f Fo(y)24954 21890 y Fm(2)25848
22372 y Fn(=)369 b(9)p 28543 23575 V 1 0 0 TeXcolorrgb
29252 22307 a Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 30909 23575 V 15431 23619 15523 45 v 15431
26820 45 3201 v 16139 25617 a Fn(3)p Fo(x)17528 25135
y Fm(2)18350 25617 y Fk(\000)295 b Fn(2)p Fo(y)21010
25135 y Fm(2)21905 25617 y Fn(=)369 b(1)p 28543 26820
V 30909 26820 V 15431 26864 15523 45 v 47992 7823 a Fi(___/1)p
1 0 0 TeXcolorrgb 46337 9815 a Fh(K7)h(-)f(KKK)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 30892
54804 45 v -2331 36194 a Fq(K7)759 b(-)h(KKK)e(-)i(1019)f(Kugel)f(-)h
(Thema)g(Mathematik)f(Sc)-60 b(h)g(ularb)60 b(ei-)-2331
39216 y(ten)717 b(7.)g(Klasse)p 0 TeXcolorgray -1391
42523 a Fp(31.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)640
b(sind)g(zw)-36 b(ei)641 b(Kugeln)g Fo(K)18263 42722
y Fm(1)19010 42523 y Fn([)8 b Fo(M)20637 42722 y Fm(1)21163
42523 y Fn(\()p Fo(x)22408 42722 y Fm(1)22934 42523 y
Fk(j)p Fo(y)23937 42722 y Fm(1)24463 42523 y Fk(j)p Fo(z)25436
42722 y Fm(1)25962 42523 y Fn(\);)221 b Fo(r)27636 42722
y Fm(1)28162 42523 y Fn(])641 b Fp(und)e Fo(K)33079 42722
y Fm(2)33826 42523 y Fn([)8 b Fo(M)35453 42722 y Fm(2)35979
42523 y Fn(\()p Fo(x)37224 42722 y Fm(2)37750 42523 y
Fk(j)p Fo(y)38753 42722 y Fm(2)39279 42523 y Fk(j)p Fo(z)40252
42722 y Fm(2)40778 42523 y Fn(\);)221 b Fo(r)42452 42722
y Fm(2)42978 42523 y Fn(])641 b Fp(mit)921 44515 y(Zen)-36
b(tralabstand)433 b Fo(z)428 b Fn(=)369 b Fk(j)12707
43608 y(\000)-652 b(\000)-295 b(\000)g(\000)-651 b(!)12707
44515 y Fo(M)13965 44714 y Fm(1)14491 44515 y Fo(M)15749
44714 y Fm(2)16275 44515 y Fk(j)p Fp(.)921 48006 y(Erg\344nze)358
b(die)h(T)-108 b(extl\374c)-36 b(k)g(en)358 b(im)g(folgenden)h(Satz)f
(durc)-36 b(h)357 b(Ankreuzen)g(der)h(jew)-36 b(eils)360
b(ric)-36 b(h)g(tigen)921 49998 y(Satzteile)434 b(so,)g(dass)g(eine)f
(mathematisc)-36 b(h)434 b(k)-36 b(orrekte)434 b(A)-36
b(ussage)434 b(en)-36 b(tsteh)g(t!)921 53488 y(Die)434
b(zw)-36 b(ei)434 b(Kugeln)p 10838 53488 3150 45 v 14459
53440 a(1)13988 53488 y Ff(\015)p 15582 53488 V 3583
w Fp(,)g(w)-36 b(enn)p 23537 53488 V 27158 53440 a(2)26686
53488 y Ff(\015)p 28280 53488 V 3583 w Fp(ist.)p 0 TeXcolorgray
0 TeXcolorgray 1187 54860 19974 45 v 1187 57944 45 3085
v 10848 56642 a(1)10376 56690 y Ff(\015)p 21115 57944
V 1187 57989 19974 45 v 1187 63044 45 5056 v 1895 59849
a Fp(sc)g(hneiden)432 b(einander)h(in)h(einer)1895 61841
y(Kreislinie)p 18750 63044 V 19459 60848 a Fl(2)p 21115
63044 V 1187 63088 19974 45 v 1187 68143 45 5056 v 1895
64948 a Fp(b)36 b(er\374hren)301 b(einander)h(v)-36 b(on)303
b(au\377en)p 18750 68143 V 19459 65948 a Fl(2)p 21115
68143 V 1187 68187 19974 45 v 1187 73242 45 5056 v 1895
70047 a Fp(hab)36 b(en)433 b(k)-36 b(eine)434 b(gemeinsamen)1895
72039 y(Punkte)p 18750 73242 V 1 0 0 TeXcolorrgb 19459
71047 a Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 21115 73242 V 1187 73287 19974 45 v 0 TeXcolorgray
0 TeXcolorgray 30427 54860 10781 45 v 30427 57944 45
3085 v 35492 56642 a Fp(2)35020 56690 y Ff(\015)p 41163
57944 V 30427 57989 10781 45 v 30427 61248 45 3260 v
31135 60045 a Fo(r)31721 60244 y Fm(1)32542 60045 y Fn(+)295
b Fo(r)34435 60244 y Fm(2)35330 60045 y Fo(<)369 b(z)p
38798 61248 V 1 0 0 TeXcolorrgb 39506 59950 a Fl(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 41163
61248 V 30427 61292 10781 45 v 30427 64625 45 3334 v
31135 63348 a Fk(j)p Fo(r)32090 63547 y Fm(1)32911 63348
y Fk(\000)296 b Fo(r)34826 63547 y Fm(2)35352 63348 y
Fk(j)368 b Fn(=)h Fo(z)p 38798 64625 V 39506 63291 a
Fl(2)p 41163 64625 V 30427 64669 10781 45 v 30427 67929
45 3260 v 31135 66725 a Fo(r)31721 66924 y Fm(1)32616
66725 y Fn(=)g Fo(r)34583 66924 y Fm(2)p 38798 67929
V 39506 66631 a Fl(2)p 41163 67929 V 30427 67973 10781
45 v 47992 42523 a Fi(___/1)p 1 0 0 TeXcolorrgb 46337
44515 a Fh(K7)h(-)f(KKK)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 77315 54804 45 v 0 TeXcolorgray
24421 81281 a Fp(21)p 0 TeXcolorgray eop end
%%Page: 22 22
TeXDict begin 22 21 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fq(K7)491 b(-)g(KKK)e(-)j(1020)e(Kegelsc)
-60 b(hnitte)489 b(-)i(Thema)f(Mathematik)g(Sc)-60 b(h)g(ul-)-2331
4515 y(arb)60 b(eiten)716 b(7.)h(Klasse)p 0 TeXcolorgray
-1391 7823 a Fp(32.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433
b(ist)h(eine)f(Gleic)-36 b(h)g(ung.)921 11313 y(Erg\344nze)358
b(die)h(T)-108 b(extl\374c)-36 b(k)g(en)358 b(im)g(folgenden)h(Satz)f
(durc)-36 b(h)357 b(Ankreuzen)g(der)h(jew)-36 b(eils)360
b(ric)-36 b(h)g(tigen)921 13305 y(Satzteile)434 b(so,)g(dass)g(eine)f
(mathematisc)-36 b(h)434 b(k)-36 b(orrekte)434 b(A)-36
b(ussage)434 b(en)-36 b(tsteh)g(t!)921 16795 y(Die)426
b(Gleic)-36 b(h)g(ung)9350 15511 y Fc(\020)10011 16206
y Fj(x)p Fm(\()p Fj(t)p Fm(\))10027 17253 y Fj(y)32 b
Fm(\()p Fj(t)p Fm(\))11612 15511 y Fc(\021)12642 16795
y Fn(=)14023 15511 y Fc(\020)14684 16206 y Fm(2+4)p Fg(\001)p
Fm(cos)159 b Fj(t)14736 17253 y Fm(1+4)p Fg(\001)p Fm(sin)f
Fj(t)18375 15511 y Fc(\021)19461 16795 y Fp(ist)426 b(die)p
23571 16795 3150 45 v 27192 16747 a(1)26721 16795 y Ff(\015)p
28315 16795 V 32107 16795 V 35728 16747 a Fp(2)35256
16795 y Ff(\015)p 36850 16795 V 3575 w Fp(im)g Fe(R)43255
16313 y Fm(2)43781 16795 y Fp(.)p 0 TeXcolorgray 0 TeXcolorgray
8400 18183 12761 45 v 8400 21267 45 3085 v 14454 19964
a(1)13983 20012 y Ff(\015)p 21115 21267 V 8400 21312
12761 45 v 8400 24571 45 3260 v 9108 23368 a Fp(Normalv)-36
b(ektor)p 18750 24571 V 19459 23273 a Fl(2)p 21115 24571
V 8400 24615 12761 45 v 8400 27874 45 3260 v 9108 26671
a Fp(P)g(arameterform)p 18750 27874 V 1 0 0 TeXcolorrgb
19459 26577 a Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 21115 27874 V 8400 27919 12761 45 v 8400
31178 45 3260 v 9108 29975 a Fp(V)-108 b(ektorform)p
18750 31178 V 19459 29880 a Fl(2)p 21115 31178 V 8400
31222 12761 45 v 0 TeXcolorgray 0 TeXcolorgray 30427
18183 11740 45 v 30427 21267 45 3085 v 35971 19964 a
Fp(2)35499 20012 y Ff(\015)p 42122 21267 V 30427 21312
11740 45 v 30427 24571 45 3260 v 31135 23368 a Fp(einer)433
b(Geraden)p 39757 24571 V 40465 23273 a Fl(2)p 42122
24571 V 30427 24615 11740 45 v 30427 27874 45 3260 v
31135 26671 a Fp(eines)h(Kreises)p 39757 27874 V 1 0 0
TeXcolorrgb 40465 26577 a Fl(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 42122 27874 V 30427 27919
11740 45 v 30427 31178 45 3260 v 31135 29975 a Fp(einer)f(Ellipse)p
39757 31178 V 40465 29880 a Fl(2)p 42122 31178 V 30427
31222 11740 45 v 47992 7823 a Fi(___/1)p 1 0 0 TeXcolorrgb
46337 9815 a Fh(K7)370 b(-)f(KKK)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 35250 54804 45
v -2331 40552 a Fq(K7)989 b(-)g(KZ)f(-)h(1001)g(K)-60
b(omplexe)988 b(Zahlen)g(-)h(Thema)f(Mathematik)-2331
43574 y(Sc)-60 b(h)g(ularb)60 b(eiten)715 b(7.)i(Klasse)p
0 TeXcolorgray -1391 46881 a Fp(33.)p 0 TeXcolorgray
651 w(Die)434 b(k)-36 b(omplexe)435 b(Zahl)f Fo(z)428
b Fn(=)369 b Fk(\000)p Fn(3)295 b(+)g(2)p Fo(i)434 b
Fp(ist)f(in)h(der)f(Gau\377'sc)-36 b(hen)433 b(Zahleneb)36
b(ene)433 b(dargestellt:)p 0 TeXcolorgray 0 TeXcolorgray
12165 57366 a
 currentpoint currentpoint translate 0.78635 0.78635 scale neg exch
neg exch translate
 12165 57366 a 12165 57366 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 258.35095 a add def
/d 0.0 a add neg def /h 93.32495 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 12165 57366
a 26338 55351 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 4 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 130.31361 0.0 -128.03734 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -113.81097 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 75.11522 0.0 -18.20973   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 130.31361  0 -128.03734  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -128.03734
 130.31361  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-18.20973  def /maxTickline 75.11522  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 75.11522
0.0 -18.20973   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 130.31361
0.0 -128.03734 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 75.11522  0 -18.20973  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -18.20973
 75.11522  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-128.03734  def /maxTickline 130.31361  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 75.11522
0.0 -18.20973   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 130.31361
0.0 -128.03734 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 25093 52486 a
Fm(1)25092 49337 y(2)29252 56696 y(1)2680 b(2)f(3)h(4)-16584
b Fg(\000)p Fm(1)-4352 b Fg(\000)p Fm(2)h Fg(\000)p Fm(3)f
Fg(\000)p Fm(4)26338 55351 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 26338 55351 a 26338 55351
a
tx@Dict begin  { 130.31361 75.11522 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 26338 55351 a 26338 55351 a
tx@Dict begin  { 5.0 60.44171 8.26648 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 26338 55351 a 22992 55808
a Fp(reelle)435 b(A)-36 b(c)g(hse)26338 55351 y
tx@Dict begin  PutEnd  end
 26338
55351 a 26338 55351 a
tx@Dict begin  PutEnd  end
 26338 55351 a 26338 55351 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 26338
55351 a 26338 55351 a
tx@Dict begin  { 0.0 0.0 pop 130.31361 75.11522 exch pop } PutCoor
PutBegin  end
 26338 55351 a 26338 55351 a
tx@Dict begin  { 5.0 83.94269 8.26648 2.33331 -40.  Uput UUput } PutCoor
PutBegin  end
 26338
55351 a 21692 55679 a Fp(imagin\344re)434 b(A)-36 b(c)g(hse)26338
55351 y
tx@Dict begin  PutEnd  end
 26338 55351 a 26338 55351 a
tx@Dict begin  PutEnd  end
 26338 55351 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -85.35823
56.90549 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -85.35823 56.90549
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
26338 55351 a
tx@Dict begin  { -91.61786 60.31967 } PutCoor PutBegin  end
 26338 55351 a Fa(z)26338 55351 y
tx@Dict begin  PutEnd  end
 26338
55351 a 40763 57366 a
currentpoint initclip moveto
 40763 57366 a 12165 57366 a
 currentpoint currentpoint translate 1 0.78635 div 1 0.78635 div scale
neg exch neg exch translate
 12165
57366 a 921 61351 a Fp(Bestimme)434 b(den)f(Betrag)h
Fo(r)469 b Fp(und)433 b(das)g(Argumen)-36 b(t)433 b Fo(')h
Fp(dieser)f(Zahl.)p 1 0 0 TeXcolorrgb 921 63896 a Fo(r)405
b Fn(=)3293 62864 y Fk(p)p 4400 62864 2903 54 v 1032
x Fn(9)295 b(+)g(4)369 b Fk(\031)h Fn(1)p Fo(;)p Fn(6)921
66441 y(tan)227 b Fo(')369 b Fn(=)g Fk(\000)6795 65918
y Fm(2)p 6795 66132 471 45 v 6795 66900 a(3)7767 66441
y Fk(\))h Fo(')f Fk(\031)g Fn(146)p Fo(;)p Fn(2)15049
65959 y Fg(\016)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 46881 a Fi(___/1)p 1 0 0 TeXcolorrgb
47383 48873 a Fh(K7)g(-)g(KZ)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 70375 54804 45 v 0 TeXcolorgray
24421 81281 a Fp(22)p 0 TeXcolorgray eop end
%%Page: 23 23
TeXDict begin 23 22 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fq(K7)708 b(-)g(KZ)f(-)h(1002)g(K)-60
b(omplexe)706 b(L\366sungen)g(-)i(Thema)f(Mathematik)-2331
4515 y(Sc)-60 b(h)g(ularb)60 b(eiten)715 b(7.)i(Klasse)p
0 TeXcolorgray -1391 7823 a Fp(34.)p 0 TeXcolorgray 651
w(Gib)433 b(eine)h(quadratisc)-36 b(he)433 b(Gleic)-36
b(h)g(ung)433 b(an,)h(die)f(folgende)h(L\366sungen)f(hat:)921
10368 y Fo(x)1660 10567 y Fm(1)2555 10368 y Fn(=)368
b(2)296 b(+)f Fo(i)433 b Fp(und)g Fo(x)10406 10567 y
Fm(2)11300 10368 y Fn(=)369 b(2)296 b Fk(\000)f Fo(i)p
1 0 0 TeXcolorrgb 769 12913 a Fn(\()p Fo(x)g Fk(\000)g
Fn(2)h Fk(\000)f Fo(i)p Fn(\))g Fk(\001)g Fn(\()p Fo(x)g
Fk(\000)g Fn(2)h(+)f Fo(i)p Fn(\))368 b(=)h(0)434 b Fp(o)36
b(der)433 b Fo(x)20389 12431 y Fm(2)21210 12913 y Fk(\000)296
b Fn(4)p Fo(x)f Fn(+)g(5)370 b(=)e(0)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7823 a Fi(___/1)p
1 0 0 TeXcolorrgb 47383 9815 a Fh(K7)h(-)g(KZ)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 16721
54804 45 v -2331 22022 a Fq(K7)557 b(-)g(KZ)f(-)i(1003)e(Graph)h(einer)
f(F)-179 b(unktion)554 b(-)j(Thema)f(Mathematik)-2331
25044 y(Sc)-60 b(h)g(ularb)60 b(eiten)715 b(7.)i(Klasse)p
0 TeXcolorgray -1391 28352 a Fp(35.)p 0 TeXcolorgray
651 w(Gib)410 b(eine)g(quadratisc)-36 b(he)411 b(Gleic)-36
b(h)g(ung)409 b(der)h(F)-108 b(orm)410 b Fo(ax)26743
27870 y Fm(2)27517 28352 y Fn(+)247 b Fo(bx)h Fn(+)g
Fo(c)369 b Fn(=)f(0)411 b Fp(an,)g(die)f(die)h(folgende)921
30344 y(L\366sungsmenge)433 b(\374b)36 b(er)433 b Fe(C)h
Fp(b)36 b(esitzt:)921 32889 y(L)p Fn(=)368 b Fk(f)p Fn(\(3)296
b(+)f Fo(i)p Fn(\);)221 b(\(3)295 b Fk(\000)h Fo(i)p
Fn(\))p Fk(g)p 1 0 0 TeXcolorrgb 921 35435 a Fo(x)1660
34952 y Fm(2)2481 35435 y Fk(\000)f Fn(6)p Fo(x)h Fn(+)f(10)370
b(=)e(0)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 28352 a Fi(___/1)p 1 0 0 TeXcolorrgb 47383 30344
a Fh(K7)h(-)g(KZ)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 39020 V -2331 44322 a Fq(K7)557
b(-)g(KZ)f(-)i(1004)e(Graph)h(einer)f(F)-179 b(unktion)554
b(-)j(Thema)f(Mathematik)-2331 47344 y(Sc)-60 b(h)g(ularb)60
b(eiten)715 b(7.)i(Klasse)p 0 TeXcolorgray -1391 50652
a Fp(36.)p 0 TeXcolorgray 651 w(Ermittle)436 b(alle)h(L\366sungen)e
(der)h(Gleic)-36 b(h)g(ung)435 b Fo(x)23402 50169 y Fm(4)24225
50652 y Fk(\000)297 b Fn(81)374 b(=)f(0)436 b Fp(in)g(der)g(Menge)g
(der)g(k)-36 b(omplexen)921 52643 y(Zahlen.)p 1 0 0 TeXcolorrgb
921 55189 a Fo(x)1660 55388 y Fm(1)2555 55189 y Fn(=)368
b Fk(\000)p Fn(3;)221 b Fo(x)6939 55388 y Fm(2)7836 55189
y Fn(=)368 b(3;)221 b Fo(x)11187 55388 y Fm(3)12083 55189
y Fn(=)369 b Fk(\000)p Fn(3)p Fo(i)p Fn(;)221 b Fo(x)16912
55388 y Fm(4)17808 55189 y Fn(=)368 b(3)p Fo(i)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 50652
a Fi(___/1)p 1 0 0 TeXcolorrgb 47383 52643 a Fh(K7)h(-)g(KZ)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
58922 V 0 TeXcolorgray 24421 81281 a Fp(23)p 0 TeXcolorgray
eop end
%%Page: 24 24
TeXDict begin 24 23 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fq(K7)1049 b(-)h(KZ)e(-)i(1005)f(P)-60
b(olark)g(o)60 b(ordinaten)1047 b(-)i(Thema)g(Mathematik)-2331
4515 y(Sc)-60 b(h)g(ularb)60 b(eiten)715 b(7.)i(Klasse)p
0 TeXcolorgray -1391 7823 a Fp(37.)p 0 TeXcolorgray 651
w(Ordne)413 b(den)g(Informationen)h(\374b)36 b(er)413
b(k)-36 b(omplexe)415 b(Zahlen)f(die)f(en)-36 b(tsprec)g(henden)412
b(k)-36 b(omplexen)921 9815 y(Zahlen)433 b(zu!)p 0 TeXcolorgray
0 TeXcolorgray 6433 11153 8210 45 v 14642 11153 4523
45 v 6433 14412 45 3260 v 7141 13240 a Fo(z)c Fn(=)368
b Fk(\000)p Fn(2)p 14598 14412 V 0.9 TeXcolorgray 14643
14412 4478 3260 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 16421
13334 a Fp(B)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 19120 14412 45 3260 v 6433 14456 8210 45
v 14642 14456 4523 45 v 6433 17716 45 3260 v 7141 16560
a Fo(z)429 b Fn(=)368 b Fk(\000)p Fn(6)296 b(+)f(8)p
Fo(i)p 14598 17716 V 0.9 TeXcolorgray 14643 17716 4478
3260 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 16370 16638 a
Fp(A)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
19120 17716 45 3260 v 6433 17760 8210 45 v 14642 17760
4523 45 v 6433 21019 45 3260 v 7141 19919 a Fo(z)429
b Fn(=)368 b Fo(i)p 14598 21019 V 0.9 TeXcolorgray 14643
21019 4478 3260 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 16457
19941 a Fp(F)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 19120 21019 45 3260 v 6433 21063 8210 45
v 14642 21063 4523 45 v 6433 24323 45 3260 v 7141 23167
a Fo(z)429 b Fn(=)368 b(5)296 b Fk(\000)f Fn(5)p Fo(i)p
14598 24323 V 0.9 TeXcolorgray 14643 24323 4478 3260
v 0 TeXcolorgray 1 0 0 TeXcolorrgb 16439 23245 a Fp(E)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 19120
24323 45 3260 v 6433 24367 8210 45 v 14642 24367 4523
45 v 0 TeXcolorgray 0 TeXcolorgray 24451 11153 4567 45
v 29018 11153 10678 45 v 24451 14412 45 3260 v 0.92 TeXcolorgray
24496 14412 4478 3260 v 0 TeXcolorgray 26223 13334 a(A)p
28973 14412 45 3260 v 29682 13295 a Fo(r)405 b Fn(=)369
b(10)p 39651 14412 V 24451 14456 4567 45 v 29018 14456
10678 45 v 24451 17716 45 3260 v 0.92 TeXcolorgray 24496
17716 4478 3260 v 0 TeXcolorgray 26274 16637 a Fp(B)p
28973 17716 45 3260 v 29682 16494 a Fo(')g Fn(=)g(180)34234
16012 y Fg(\016)p 39651 17716 V 24451 17760 4567 45 v
29018 17760 10678 45 v 24451 21019 45 3260 v 0.92 TeXcolorgray
24496 21019 4478 3260 v 0 TeXcolorgray 26265 19941 a
Fp(C)p 28973 21019 45 3260 v 29682 19798 a Fo(')g Fn(=)g(135)34234
19316 y Fg(\016)p 39651 21019 V 24451 21063 4567 45 v
29018 21063 10678 45 v 24451 24396 45 3334 v 0.92 TeXcolorgray
24496 24396 4478 3334 v 0 TeXcolorgray 26238 23244 a
Fp(D)p 28973 24396 45 3334 v 29682 23119 a(Im)p Fn(\()p
Fo(z)59 b Fn(\))369 b(=)g Fp(Re)p Fn(\()p Fo(z)59 b Fn(\))p
39651 24396 V 24451 24441 4567 45 v 29018 24441 10678
45 v 24451 27700 45 3260 v 0.92 TeXcolorgray 24496 27700
4478 3260 v 0 TeXcolorgray 26292 26622 a Fp(E)p 28973
27700 45 3260 v 29682 26479 a Fn(270)31632 25997 y Fg(\016)32528
26479 y Fo(<)368 b(')h(<)g Fn(360)38460 25997 y Fg(\016)p
39651 27700 V 24451 27744 4567 45 v 29018 27744 10678
45 v 24451 31077 45 3334 v 0.92 TeXcolorgray 24496 31077
4478 3334 v 0 TeXcolorgray 26310 29925 a Fp(F)p 28973
31077 45 3334 v 29682 29800 a(Re)p Fn(\()p Fo(z)59 b
Fn(\))369 b(=)g(0)p 39651 31077 V 24451 31121 4567 45
v 29018 31121 10678 45 v 47992 7823 a Fi(___/1)p 1 0 0
TeXcolorrgb 47383 9815 a Fh(K7)g(-)g(KZ)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 37489 54804 45
v 0 TeXcolorgray 24421 81281 a Fp(24)p 0 TeXcolorgray
eop end
%%Page: 25 25
TeXDict begin 25 24 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fq(K7)1049 b(-)h(KZ)e(-)i(1006)f(P)-60
b(olark)g(o)60 b(ordinaten)1047 b(-)i(Thema)g(Mathematik)-2331
4515 y(Sc)-60 b(h)g(ularb)60 b(eiten)715 b(7.)i(Klasse)p
0 TeXcolorgray -1391 7823 a Fp(38.)p 0 TeXcolorgray 651
w(Stelle)544 b(die)g(k)-36 b(omplexe)544 b(Zahl)g Fo(z)616
b Fn(=)556 b(4)371 b Fk(\001)f Fn(\(cos\(120)24956 7341
y Fg(\016)25483 7823 y Fn(\))g(+)g Fo(i)g Fk(\001)g Fn(sin)6
b(\(120)33353 7341 y Fg(\016)33880 7823 y Fn(\)\))543
b Fp(in)h(der)f(Gau\377'sc)-36 b(hen)921 9815 y(Zahleneb)36
b(ene)433 b(dar:)p 0 TeXcolorgray 0 TeXcolorgray 7666
42847 a
 currentpoint currentpoint translate 0.88937 0.88937 scale neg exch
neg exch translate
 7666 42847 a 7666 42847 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 319.80898 a add def
/d 0.0 a add neg def /h 317.53271 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 7666 42847 a 25304
25272 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -142.26372 T 12
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 160.47345 0.0 -159.33553 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -142.26372 0.0 T 12
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 158.76636 0.0 -158.76636   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 160.47345  0 -159.33553  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -159.33553
 160.47345  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-158.76636  def /maxTickline 158.76636  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 158.76636
0.0 -158.76636   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 160.47345
0.0 -159.33553 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 158.76636  0 -158.76636  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -158.76636
 158.76636  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-159.33553  def /maxTickline 160.47345  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 158.76636
0.0 -158.76636   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 160.47345
0.0 -159.33553 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 24059 22408 a Fm(1)24059 19258
y(2)24059 16109 y(3)24059 12959 y(4)24059 9809 y(5)23327
28661 y Fg(\000)p Fm(1)23327 31810 y Fg(\000)p Fm(2)23327
34960 y Fg(\000)p Fm(3)23327 38110 y Fg(\000)p Fm(4)23327
41259 y Fg(\000)p Fm(5)28218 26618 y(1)2680 b(2)f(3)h(4)g(5)-19734
b Fg(\000)p Fm(1)-4352 b Fg(\000)p Fm(2)h Fg(\000)p Fm(3)f
Fg(\000)p Fm(4)h Fg(\000)p Fm(5)25304 25272 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 25304 25272
a 25304 25272 a
tx@Dict begin  { 160.47345 158.76636 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 25304 25272 a 25304 25272 a
tx@Dict begin  { 5.0 29.00066 9.0 3.0 140.  Uput UUput } PutCoor PutBegin
 end
 25304 25272
a 23699 25604 a Fp(Re)p Fn(\()p Fo(z)59 b Fn(\))25304
25272 y
tx@Dict begin  PutEnd  end
 25304 25272 a 25304 25272 a
tx@Dict begin  PutEnd  end
 25304 25272 a 25304
25272 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 25304 25272 a 25304 25272 a
tx@Dict begin  { 0.0 0.0 pop 160.47345 158.76636 exch pop } PutCoor
PutBegin  end
 25304 25272 a 25304
25272 a
tx@Dict begin  { 5.0 29.16266 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 25304 25272 a 23690 25604 a Fp(Im)p Fn(\()p Fo(z)g
Fn(\))25304 25272 y
tx@Dict begin  PutEnd  end
 25304 25272 a 25304 25272 a
tx@Dict begin  PutEnd  end
 25304
25272 a 1 0 0 TeXcolorrgb @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def   /t 0.0 def /t1 2.0943951023931957 def
/dt t1 t sub 49 div def /F@pstplot (1.*cos(t)+0.|1.*sin(t)+0.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul exch 28.45274
mul exch } def  /ps@Exit false def xy moveto  49 1 sub { /t t dt add
def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit } if } repeat
ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -56.90549
98.56303 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 25304 25272 a
tx@Dict begin  { -59.75093 113.81097 } PutCoor PutBegin  end

25304 25272 a 996 x Fo(z)281 b Fn(\(4;)221 b(120)29877
25786 y Fg(\016)30404 26268 y Fn(\))25304 25272 y
tx@Dict begin  PutEnd  end
 25304
25272 a 25304 25272 a
tx@Dict begin  { -37.55782 51.21501 } PutCoor PutBegin  end
 25304 25272 a 572 x Fo(r)25304
25272 y
tx@Dict begin  PutEnd  end
 25304 25272 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 0.0 0.0   false NArray
 /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0
1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore
} bind def   1. .setopacityalpha  newpath n { transform floor .5 add
exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -56.90549 98.56303
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 43068 42847 a
currentpoint initclip moveto
 43068
42847 a 7666 42847 a
 currentpoint currentpoint translate 1 0.88937 div 1 0.88937 div scale
neg exch neg exch translate
 7666 42847 a 47992 7823 a Fi(___/1)p
1 0 0 TeXcolorrgb 47383 9815 a Fh(K7)369 b(-)g(KZ)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 44883
54804 45 v 0 TeXcolorgray 24421 81281 a Fp(25)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
