%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Christoph/Dropbox/Aufgabensammlung (inoffiziell)/Typ 1 Aufgaben/_Matura/AN - Analysis/AN 1.1/AN 1.1 Gesamtdokument.dvi
%%CreationDate: Wed Nov 29 17:59:34 2017
%%Pages: 15
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular TeX-feymr10
%%+ LMMathSymbols10-Regular LMMathItalic12-Regular LMRoman10-Regular
%%+ LMRoman8-Regular LMMathSymbols8-Regular wasy10 LMRoman12-Italic
%%+ LMMathItalic8-Regular LMRoman6-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Christoph/Dropbox/Aufgabensammlung (inoffiziell)/Typ 1 Aufgaben/_Matura/AN - Analysis/AN 1.1/AN 1.1 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.29:1859
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A110651F4370133E3968EE80FF9C2E54953EDACCBA
2549852043B5A93B09ACDFD025365A4F8FBA3FCC4DB60700C22ECDF23E95E01A
4C7B87E4F5D46CD2AEF5D46CD2180E4304BB80E17A83397A677D32DEED9BC850
B4C056641799994DEBD48FC73D616143FFB85D78805A95B8CB191C775A2DDEB5
FC8B803AC7B461E0FB63D746090AC3E759366E115437A8EA8CD328F309EC0960
36351451AE7425A26CDC319A31BDE48F68B947574C1DB2834483C460A5B2429A
D49BD462D9C9F75FBA92ABD47A5EF18C3A43B9B7A3D1EF1AA43A6A68E4D42CDD
2484CF47C0FB3A68121F424FA4B29058841D9821D7F955D3824CB1754278E8D5
847116509B7D3B960EE375F1DCCB4CAA1CCCDFA0E61FE01518738F7E6B887898
261117EDC211226EB3A9E0B251FD4CF4FD2543B7E6F394D3D262DDCE224AD9CD
BDE8CDCEAF38C0BC9E406A35F44C6B412ABEC730D9DE3716C5B0A87BC7ED856A
77E3AEEB9912B64A5298C2F4552CECF63C84F805508C4A0CB98910441699B722
2BE7727547825EFBCA21408C5F84E3E7781B5BA336E0CF740BE6D85F8F6F8631
BDB1D0AC05ABE2EFAABC930F472F93E247E29CD9852001BD2E16E51AE3E1A77D
4B05540EDA577F3759A940D23E73451C967666B5EE5CC6EDDB55CFD4CD875072
FF79F4ABDD8F935A11E83F9D6F40978896B8F7A0B472D1F9FFC68F7C2F5EB1DD
447832B4E1DBA7870A949E48C9DA6B47BA581F7D24C5A0B90A66F0FFC044D1E8
0652D0836E0FF5980A50D39360DC793D9C260F9A68379C031C3F363054F84888
CA17948C9FB31CF86E555B4815AA6C826666025BB984A519FCED4498E4A4CD61
BDDA5F652B54A3270DFE501ABDEAB9327E296740F0DD9B42A45879E285C8E0D2
DD61A71643555DD007B6477A05334C6D7D079DB00F337979DA04BBD485BD5630
0DA794E86C9815AB3FEB37E78106CA0A3441735AAC9EB49CCA33DF4322929D86
32C4BD136C89169D45718A88BABCB2844362B0652A6345C6EC83DFEFE0994552
32455B3CC14F0D2FE83F60403C598F8E360AFD7C3A3F37E771BF49F20E7ADF22
AE9612796DEB9138059A4C12D4A8B8A37DCC221CE80014F807A53945E21FB479
4956F9E37B87EAE0447EDADEB00764A38DAB429277B779104D1360C711A40FE7
FE508CDB795A3BFDCC677893634CF91C45816B9AC1146B1BB7AAA74FF92F4273
B18D515086F457B5AEBA634AE5C75971733044D64738F071F82148EC95F4E53F
D20E5A2A4479D59A73A9D61F3E4E4894BB92AAF0AE56AF9ABB385D300EAA72C4
388B62E7C32A29313EAAB849169FE98FF9B3CFDF3FC9692113CC15C94DDD2940
49748B473FD5F4AE9C34F0554E0BAA2290B2082F996026ADC420C676AD59744E
3D1C8132F311B70AE10E12E863CF044F38542BB9CEFC017BAA8166A39AD8117B
F368B91934BC6F0BB1B2E7C4F285F9BD614A00DE6825572189A19315AD397814
2E2E61CCC0992B66DA71D8BE22836E6DE06A54674E34DC85646396AA84DF28CF
38994138E0F4E0A3F1604049D39F50717E4670442DBC451B029ED37E22709B8C
11F4DC6A1EE18BFA4AEB8E8FCF1565480CC3C141D6375466FA0272B67393DCBD
86FE4CD039BB44D2BEC68717E95B7597AD7CACDA2A6A4E8808BDF0ABA0997D0E
DBD2BA7C8586E942973B8ADC21BA304ABB619E86CEF1C8D3D84C9892F62613F3
FC722D561C0B4D707CFD45E588F7F0CEA7717976FBB04E6A3577A2141CB8A8CB
6EA47F3B1F8BB5B13D7B90A4F95E54057A005AAEDAD9D7CEBA399B3FDFF494D7
8EEF9EC6AEEC046812CE43B02B9A8F4A127E7C98CF0C088786119EB7E0E7EB32
C428F531FF5E355D691E098D1FB67AEC40458600B1A87AE31E65B7EFE7B1CB02
5613E53340E473C1D5495826470F3A1F450D1AC2C81C876EDB818BA0919DEF1D
3F443A32A724A003C23DE44D0A1774265B27B89FAD2A00A0F8325EF3029125BF
0C973EE91DB8A81E4164F827F359A4630C2955964D0D808BE8D16D2EBCD7AD30
50E68B2F5B879433A41FCA23CE3D342D8157822D42F334B8793F13FB6797C5E5
249834816FEB195E5FB218CCB914449B44FB92C6E63D1999EE615767510AADA4
364CC2035DB3CD08B107110C866C7FC5A1A8A411A597335E6BCB62888AC8539B
369E5FE68D9DEA3C0DBCF7C332C1413109E975BFFF13E7D0BA8720C1A7936015
028480F2CE7EE814B92E5BFEFF479612753E3B373D0E5E288AC7CC5D3A751095
4895B6583129FB837AFE9E5EA65226535F722426F039917C6C2E033240C86703
508D2380278FB9B8E12B455199E01A4C7B87E4F5D4EC84E9D21FC68D0D1359FC
7996DB1B6A97E165EADC6CE23BD6CB9700745AF7FB6DF76A2251C779DBF0649F
15D26FD05EB16A7702D79D42364FC91AC88F98EE11E8609E02E01CE344598BF6
B0D1B1310C75AC850FB4C642FA3710C2C9905F224C87890C9DA4E53930BBDB54
CA2AEF866BDC2071045C3D71BAB3CF386AE54D6D57ECEEF7A86A51787478FAF7
EDF2347DFCB070CF8E3093B06D0B80CED641940DD7A92B277C63B178F5E81127
0F2F4E4FB0360E4923BF1A75C78A77CE2BB4368A7C8F48639FC3A0BF18262068
E043BAFA2CCBCACE0875E368521C0D91FF9ABF781BD5C69282459F75ADA02D7E
D5D348F7CB99C78CFD41D054B08B9AD11A4F25CE3652A01C7033683D9A1ADF85
5A6BEFC921B4896D04E61B913B6C417E0AF5A4EB59A67192BCA9ED8B4D70ACD4
EFFD55C41DD3831AD6161DCDD67FFB74C773637429CB45EB3EC279B505D8299B
2AAA7A05FCEF74AADC754D33163A47C93361B58F38ACBE8868CC263D0793FD51
0BEFD0B8DED7C00CD9A60AEBBA3FADDCA48E2745359AE31AEDB60F54D334C1FB
8CE7C6CFA4536829527A871675F108B3A973CC43AFC2BE532ED012C3EB58266C
BEEBFEAE16F228285B627BE31FE6BEC3F374AE853CB3E511385FDD62F98D8CAA
ECD64C7D8468DA6DCF2767A73AF89279E81D9CE04C5C360D7677FEFC0BC3255F
01003FBC34C53EEDB7645170A6A6B6C1A85D0058926158D713B29EF1F9D60352
A41DBE68A7816F315788F094FF4AF02F686A3D22F12830D995534A8D82E4B822
F07B115CAEA24F19126C17DD16A3913F27F12C896BDE5C6BFFB9251338B976C4
056DFB27F053921193C59DB289A4188A942F2D2D868F92B8459BCB9EF09ED7B5
2B92B00BCC6ED4FE1BC82E285FD99B6CC9808D4BF6C5E91C51725CC94A1958AA
70AE9037BAF2779ED8034237F25540F71DF81701B07933495A954F676F7DFA49
F81BA6B221FAB4FF6EAB642A91F1947AAB4A780D034BC00B16D7C4D77CA1AAE7
242CE5BE6A645C2653FE55D062B786BC3C6651B6A1CD604A45763B67768AC526
1DF9C7E081A7F60049B5EE91E7C3F3F02E3B8751E078517F614A52C9CF58B49C
1D1550F2589FE68B29179A3E97A3F0B35A3FE8DF5B26B0E8BABDC5FCEE3EB404
54892CE429C3ECA8635B7A013061A8BB2B0EB98CD8674AB5A33FB9835B0D1EB4
B6F550DC77164C5F6B43342A87FF745965DC919A12B63D7058BD4F4BD90D4EC8
361D3DF55B5BF4BE1765CD19CAB0F92A94AD2E091DD7659A4DE4DE812FC92035
4999BE909721075D1D40A984E6E75ABA2F4AF1A7D59300C44EF44E7060A9FBF7
B5252C0274C581A2005CB515170BEC2C09C3EEF80AF06A0B3E3A704A3B79B914
B6737628E56BCA749F4720DE9195E8559ACAD8346F7BD9DED0B9584FED157922
B29CC828ADD9B2582CF6C3178700E56D15B3AB9AFAA3E9D10D4B47F75D05CE2D
81DB06B129721A9135C29F9C2C2C9C3FC2897183D705A37702223D1466A03D24
67AD61286FBBAA4725D698612300458A151C340BA68A9106225ACDC6D829F002
A20624B2659A7011A9657AC8B869C2FEB82AD03AF067FC6D600734F59939234A
15ED0A6402505729BEDFA52397A053B37ECC29D2E0AA06A2BF72DB85657F4A35
58D4585AD1918E86DAACB86054F56F7394088DC50A1C1FC14A0F8E5003D4703A
071AAA2FB6B31D984F0072AA303D33D5478995B533818649CC62032B5D3A3F48
0437323E1DFE2E69212EAA61EA27F9EA185D6B4A80C1BFA827E4F15E623A96FA
4C467943C618A5E35267223F46AB148E74D8D1B986B2EBAE55077A0E54BA5F4E
CA8379F7F7BFD9CD497E66CBE3728B6CC761E56E90A48FDBEA688E80FA438D78
057EA80AF988C8767E67C90E0CCB24824503570117323252722787576A552F56
5387D8D2176685B1A58609AEC90E71132EABB4AF737A7AB1D63393DB4A3AADCA
389CE1ACBF20AE2FB1EB4802C331780943D1C667EAC9A01B6176AD76F2D3E88E
98A5679207C76C999903969568B43673A80D0C5108E8116E5F5C2F25A54FE587
E55C037EDF4C9BC1D95FD0DE382839AE8C789A6339F7D36DAFE163824896DC2C
78FC9DF1F980D05D8533158A7D1941871D0016ED45EA05983F88B9E7E3262FB0
36E1F51B26BFCAC3915932A9CD8EA9FC589975823965AA4D2FC6AE27B27A17C5
10EB9072FFAE0685C7C24E70ACB8564454277C41C28075ABDC428D3809A6BD65
49A52A6AE38C80AFB8C867AF2D6B55B800BE51509F685173FC157CA62976128D
48E72C15E739FA6D2412BFB5783DB3C0F6D60E34BE594B65D769B6340202E77B
33EC7CF4718DD267EEFF4C0000F2F317ADB833E0D0DDA4D02A93E18795A8AA1D
4994D871C6C5B81488F425782658BDAF63E8792D79340D223C92CC01B7E355BD
A077E525640CF211E7A3B8DB7BF746E85C18EC1FCF0C423A86C57CBAE8F9F82E
65EDBCCB17469C47E7B6B66DC8BDB8552BA01AEE38E1205B077C2F2C646FEE57
99A02E0F53322EEE450F6DC39A4F03032CCA7A8320F6B01B4C39C37DE56BA266
2E21344E73C74148C1ECA7D4F858CE686804C3F119899F5BB3DC8DE39690B59F
D2708ACEE9F19DCDFC2F1E54AD17895F81828655204581AF0B98038CA5F5DFF5
D325975F280CDE4402EC81ED6EE1D304C8D933CDDB280F05DD157E37A6EB7BB4
51424B682DB6CE16E840BD0577CD58A2FC5B7D170AAA239E07DF91A1C10223AF
53A16B1DCD7C5DF152E571C9E7318117E3200AEF170495FC898F22ECC3CBC849
8CF1AED08F797E67C90E0CCB24824503570117323252722787576F4CF1A672DA
6A04C28C460DA2A483E9826D8813326765D2A528C6A92646975A56E261E3C169
37CEA1C949ACC063FEEAFE31C8A721C2D46AA00C10681BA9970D09F1EF4676BE
5E02D7DC4613C87ABA83D059ED0635D5874A3671EC6B08F2A0B3374650DBA970
A8893D25DCBEDF56ADA1D011C03BFC4D497466C7F09105A287FB8C8D3083CAEC
5B4F7B332E904266FCB27950759D9DF1DC35FC7A9C4C4799419A851AF73C1978
E6ADEA42A238CF1150B5BA091FD30CB05C0AAC0D6FD8486C034DF78B77054829
D7A079D7BD85B9A80845B563220566FEB8F341AACA7DF6DA060ACF1112FA31D1
0565B2B293E7A6C09E2E8FBD459825415B084F754454ACBF44DCF4961F68DBB0
644E77613C9E96ACB55A77DF4812D900F42AF9770E51EC98088D8FC81C7A93EC
9FC3BB5BDA3619E904570286AF49CEAEEAAEEE0AC1EDF4DC2F53275011EE991A
A96DDF4C96A9E0D8E354195A2563759DFE0183C8D67B449516EEB59F22B42BE3
2D7B1631DD1E36137B9C75F2C99248D4FB86CB367BB50ACF8FBB2C8A2EDB17FF
267D0F21C35BE86E068F98C3564F42D2F7F26014DE37C4DCCB6B30860F43089C
0A6E1E7B4D9287CE71718F81073EBCBB4386C5F4957F220CDFF1BA5AFF56910C
49B957170DFE24CEF8234658524B0071B5582DB34872C321F5D6A82C3B0AF842
D748E7160373CAD07AAE053155493BC317F89A8940552EAC2159B49C1DB34B25
67B50D0B0F2BAB32DD9D471FDFBE9B4D20B0BE8BBE3C1A5459A27799E63F136D
C58DA8682674E24838BF99B06FA68C91E1797DB85D924C037C275BD496F93E01
565EF63E388BFB5372277A752C858F67901B52715557491B4DED0A19A1E6464D
99B41FC0AC101E91B84180444A0A928894F8FCA116CFFFF88C6F1C7BF34A0E25
EFB2AD7503D23492E7E980B2C4324A4918DD087768EC44A893A7EECB6D95C35B
B87DA2B112A3E5F0257A53249617F3F4D9F5729FC7C25090211470F9D3B10BF7
FE4019611CC67279792C59C002037F13240A333B2039FDA78228FF7FFF776789
5FB02F823B2CAEFB944B42D689B020B11D38ADCBDC1AD716F75A2C6565B6D04F
A90E615D06A805EF2EA704243FB382621C005388966DBE3F4C2EC9888B56E962
41D345CBE471FFB3B78C4FA50EF1BEBA5095045ABA7952457E62E4081D5CA62F
44DC287DAE5C2DBBCA73CAF31025A3FD47B8B313E59528F2881E4C77381AE42D
708DF8E5C93474AFDFF39C78E4003E7B7FE30D31721B0ADF552294F3AEAF6C9F
4EEB4990475FC4232A38D8F3903D81C9A329939DB5396510900CD5D522C5E9DB
C5C59AF4C51B407D44468B5E2614DD937194ECD03E78CBB916BC57037DBE008C
F0CCF784147D8580979FE5FCB204DC95F10D6E5571D4EF121855C1086E047F04
3F4D780E9A34C3E671B402F789C9F3C869F0FD12D2A1FA3458D37F8CD2E85194
7683E050B6D2E4F51FECC9351B42923E388B70E7C41B77DAE3DB6C579E3A28C6
3E8E38D62A92755377D1274604BE610997CE121BDB9CED994238C39531CDDC19
7EAC2414615E79137C52F372CB9CFAF7DA3CAF003473DBA5C03B5BC597E5C182
CBE1F42E739B6485473B414FCCA4D5C10FF38CCCA54DA33831938E9392DEF759
4DE827864CD1D0B2F50FA679945BCA6A71E4329DB73E7F29098787D96D89D30A
3C961F55E64983F69651D5206CE47CF745E42FF494201D7BF2AEE8664D6AD229
D31B6E7713609222EC88AD13BD745CE175B921697F9D9FF0803559FEA2110988
23531BE96D98F0401D2545E9FACD008B4ADB50EB9F049AABB576738EB12DA190
F7B750529BEE0764347214528AE43CB7EBFD4F38C31CF4FBD46EB44215D6E646
EC32B1031A6A54A6805B7F680B56CED7F1984220443B845A9FBD9CB9C38B9396
02D8F7A3F70B39F1723B8E668827FBD165657C485FF7D48E2C2AA8284ED768B1
555C02AFC9FB543ACFB65DB1A10646D0762B400B49288C480351F7DC67048E5D
A26AC7D0ABD2820C2F4E7B76F2F0D593E7F8D1CB8EAD24B2F8DE2F54038936FB
2D9659D413E08C97C832D3A03EF24ECB073936A0C035ECDD9681A52882BB4E55
C113EB226EDBFA60AF43C7D37311FA695AF97F91EA727C3FD9D0C0217C057987
87881D07CEFE01902B0D0F7D8913B4E954FB295B5ED5498C4A68B73340A25409
4DB0024341A7BA745D8F3DF3DD0D5AB028F2EAA1AF13F4F8F96019FB2822AE4D
7FFB00D18FF44D2B0659D8818C847E21917F8043CBFAD9A3BADDFC68DCCF67E0
FEF88AB76E205570691C6063359CE9DBA2E3ECB7B59435E44A8B4AE46E1C2BDE
A679FF899B2E62D89D132868CCD003AB7AF9961F0943FF5F02016DD6F0563A26
851D5491A897AEC52D74BB6747FB9CD5A633DF53752834D3CE0EB2B7D7775E39
5BA4BAF7F82F0850D4EC408D5FDB7470CD59E8576E72A8186570F0EBCAA0CCCA
D7FE46DAFB0044DB29A8B801321969CD052FD61493FDA21156452D2865572235
B8CEACFD7733CEDCAA991212FC3C15A7E8CA6E083C0034671A4E268BBADA4583
A16C3C57DB5F720871CFA9672BDF5356746638CDD9FD68E308DDAD15D5676372
A863F05EA4BFEEBD5DEDA74B52C8EB0BA716FF6C6468BB98385F009C20BB8434
DAA8EC8FC416BB45F9DB9C98773585EA5E4D316AEAC8CB4182A887EF4B289F0D
3573D61FA865EBB3E287937147C9BE9926DAAAE4C59ACADCFDA1CF32A9E980DC
7946713AA2B67ADE09E2FD2209974B99C3A0363AA5CAE125EF0F3B74E35560D1
6C07063DFA0A742BFAAEBD91144D26AFEB983E71575D89DA575AB19DF8CEFDC0
FA2A5EF2622F879D80738E31D04524CDC4DFD91254F5F7DF55FE68CAE7989878
5FA31D557C86F93742930EB43CE5F45809AC88B5FE9E89C2EFFA64B2ECAD898D
39DB7D202BB69739202BD31EDAA120CE54ED0DE7EAAC5065B4F48C0B7DBD8AD9
FF3B7B5B4A1B7CA0542072597BA50F8F45B3B08141DD5CDEB790D76C36E9CBCA
5A955285C130E0EF728A401986C50D3DEF377CAEF216A5A795DD63F3C6659BBF
4D2971663D0AB84621F15C186C06199CF885D233DE4656E4CCC1AC1A5762BE48
F5FA88A3AA47DFC0FAAD37018CCA129A4897876302C02AD8911B3371DFA6452E
0BAA0519CB64DDE6282787A7F448D78DEE9271F19E6331D554E6829242F1E05A
A1A3BA678F42355A6F1123474D93C05C07B8689FC4885699E4BB766350BA721D
100516CB839EDAEB4DFE011D1947F0D4874EBFFA5673390D853D8277AB6758D6
8E11567ED38212B204347BD00B461544B85F64FA6D6130832DC718E26691AEFC
1DD6435FC6A7C2B91B672FA23D9F875C001E76ED42D71E62DA447AB71A060B51
99BF7899D41F602E326BF53E4F91B77B22E158BA172BE33861E18AAF3A48C72F
9BD37EB716ECD75C6A6CAF0F0FB5F6A73A47FFFB9D6414E7013B7D984B3A18E6
75655F4CAAC54F1F933DE269C0DF2BE55B48962C844CABB7BED489A190D1E853
9853C0DAA181E59ED9410F4D901B9CD2061595FB27C9B1720C97C551826A537F
BE9B5F897B957CDB27ABA4802F0BA02D8DDC0144E7C1BB169635270568E060AD
7BF221339567C68F6B8CD63633DD6BA618557B6798E9F793E6C866B334A71EC2
3B34833BD3B6BF56210B6FFF3953D0944D30855CB73E7A7A981C9CF9174322CC
22362D93433F8D716F159B035A561C376465F9331E5C7BDD1DA502EB95C716BF
DCF80180EE6DC71C01AC6AD353810CA7938D83B174577EF9C645314BAC0C5D26
C1076AA31C8E894713849EB6F8AF8007B3F27A59C82174638FACDEA968C7A123
2104B287170D086BCAD5C7C2BB9C184A5F3F9186E7F3B1D843EB1118F160769E
D9844B47A8A2CC08811B93D94B01FE7AF62D56594BD31845DD8EF67D1D889703
646420B074E222B6426D8AF577A5B7F2B019500E8FBD9E83B2C925BA9BF62903
24C59F30816B248D320852F6F0BC092B0CBD2223900A5A4D8EA5A11699365223
82A3D7D73CEBEDF433870C0523C3C8A7F3AF5DE044750BF9BA8D07C3D70161F0
724055E78899DDF3BCC34D14196B1E24BDDD67D0110B8331410F1DCF9E65E733
8B42FFA0B337AD7CB84CD7CC7795A8F1E7197309DAD0349A9659540C28723810
DAD7CE08EB085D29AC7925CE02513B4E614C0862D035E6AC70E1B1B5F02E969A
DF6CDE36D67EB79A6BB67B5CF26F8C6A61D41E773D3D0004057BF9DE91B80648
FAD40756621200E43834B0CCA28532BB1E7CDD3327289EA1C3C455D8E7D7F669
5055586AD4366A741031698AA060ACD6CBDA8D00D12D8F361B497A5239CBC501
43E098CA65841533DE0242731B79A1A82CFCE9E49B19F5D32E2386B247139DC7
37A0C0E3D0D1237B3FD2E75B2DEB5195839A638DE491FEE467F68D25CA5115B3
81E6D61A9C9A71CD02986992B15F4CAD81E8CD4B2A1E85BE0192A4B722775DB1
D43ED534CE92916843FD101A6FE4D552944258F3184E28421EFBF0F6600EFA1E
7D08A1D454FC01407126D3973FE22CD3AC4F6FBB0AD7B96D842474D1DF235DE8
9D464EF44F2C9297ECBF2840EC61A089DDE23DC9E3DEF6471946061D0DB6701D
0563A3792A1FD51E5460CFA0338DF1F5726862FAF91505153343C3BB0884A7B6
0DAD17058B8E88AA568ED8E38E0955579FE200979E292B3B57E1F7A9FBAE495A
2A25D5A813D1536D5471C3ED727BE7E559B6E54B0C7A64D4A2C86BEC799E6806
C49C1636A77020753AE9AA57C1CCA7866F6543CE1B25AFD261C434D1D4CF4FE9
C907B8468C530A546D701A3B92313C397F0A208ECDFCBEE936D0293C010457BC
056BCA70A7E3B757A8130BF3BC078B17590D62EE62126F8F3B0DFB89AA1D0FA3
717BF3CD52E7FC86C8FE3A9FE76321F3DF1B8D279AD66877E0B05E0220FB8FDF
41ECD551DD326E58FE258D0E268FFFDAE1393586EFD449958C91252156984401
2BABB5ADF93891FC191896A755CBAE3F0F649948253EC51D98A20B1C4150AECE
1B62EDF28AB0B03187728AF15BEF6EBCEDDC19B9F7DB2512B6AC7FE21F478248
CF21986DC483EC4FF27307585A474DAB678B23A7EBCAF98097861710D733B551
0790EB12F5FE80B60089D4C18F187D265E8494A80BDB1FCB3ECD6DE46267C21F
A581E86060A00DF7E387FE4360955D6F814A0B72EC09A99E846384818A44E541
E4E108DFE5E34573DCA40F5946D9266E07CBF681164FEAF332C19BB771979FD6
A842FF6BCEC22ED954560FF7A1971E39FD57F8460A1AEB659C973D52B28D6CA9
2DDED5BE33EEE8268324F6C902D9715E9D5EFF5814A8F3E1BF0B7E35DEF6A9FE
4F0D2A2E9848262290D7F8E5AD77A3AB32CE9C79E9F9F074AB70369ABE28B707
8F57A4D6313458E50D05A1E91DD6435FC6A7C2B91B672FA23D9F875C001E76EC
92FB6934B5368C099B59A7114410C608C749D1B7D49233688B150E779FDD9DB7
3AEEA11615E7DEF726AACE340AD9F2EECA199594CF093FB8D49DAB28DA0EDB94
63FAF413BC1FA14F1FE0237FA942F76F1157480F336F73452C9C15322A392131
FB96C14CCBE65E59BB4D23F82F28E6759E924266ABB0F5AF2002DD17FB094011
08241414A916807F8AFB0BBDB5417E6D852FF038407BC405811993C856601474
FD3DF4947137BDEA68BE33B1C86B31E1EC5E2E7ED6AE24C15111AEE8B0120DD8
E29CC460BCFD5BAC82C941C2774AF399F6E93075A7A0EC5AC289BB9A3C004C5F
FE6777D6E374B40FC2ADE40888C5DC808B63EBED348D07AAF2D7F7A790A0F099
8C80FAD9A265F84D5031EBE0F523F174D1B87F8E5A06CB2F03B396D8F523E783
87EEA92C452CE44D0E6A37CF3696FD8206E691FCCC9FF002209C1C76C4C64695
6668CB64B378A98BA5F5DB1F67DB7096EFB1F419D84A061BF099B8FA36670B16
90CB69F17E9E3BF1E15EDCC29B7701969EE4D07BC78F07D63D7D6E5062055043
0364C88A1DF224DD3EE5110C0D94DAEE6E66D20397C46FEA9B6EF288668FF3ED
3835171FF4288E56438EE91BC7297A8469F567938D322537FA0A8B5CB3E29020
7065992B084D567645EE4D2FC29814CB1D7082661851B3D94D71719C73B320DC
91F4F64B9B942A7CE1109EC7BBE8E5B7AA2CF43FA2AB8EE4213DA7C6C4277079
D25627DCD5E40E3E202D7176934072863EEA862AF354FC6CEB056DA1425749E4
65FAADFA4BF11DD6766C8D058CEB08DBC89FDCFE829432331073236C67785257
36974DCC85E7CAB9173DEBE09BB23B6885F25CDDF3C2DDC16FD131C7F302A2F9
FB65ECCCAD4616959B80FA764F314AC16BB1740C1B9A34534A154E2B04009136
E4115E6073611BE138AEBDDA44E8D1AA9ACBD47097BA31643A74F5D36BD72480
8357D4FD1813801BFDFFEAD8D918A30005C31F177816336B74AF8B9931BEC0C1
8AE73FE1F01FCCC7F5399762D1BC994E94B6179B1A7982129C594986C30DCAB5
11686A2C699385B3CD763CA12281B1A5C2E93E324FF5545D0CE8972C2431411F
730D16480AEE8D2E2DBB374BA8B0C30D5E782C9B7DB4551CB68D0918B52AE133
CC3977DD3448946BD058A0C86C7B26309AD5A80DC8A9A5AB7918FAB070E18406
BEC009B1658A7A314C04B7546244474F513F8F91E616AB868D055C8B11CD6EBF
9453B2F632E36A15B373FF3FAE535328CA8C0544484883A0F02FB4B3781CFF5E
1D1550A313D6A7835FE456A79A38623745FC7BC778B3765D421C915FDA50CF9F
04A95ADF3F80F3C4CE59FAF95451251659F4FAD3B928D141B5A50A3F5E9A303C
99A80E76CF38AA5B4C4F8D3809A6BD6549A52A6AE38C80AFB8C867AF2D69FB1B
0EB44C2CBF703208747659F0C260A6B4FD314B9A936D089493E3B7C7A3BE9AB3
1FFD0D9227EABE61529552E426955F25BD3D4181C84D03DEE36C9F7327962802
9C83A000941FC5F85C754D5132402A0A94EA3D0E37D4DBCD22AF7C60C6CD394D
7C4BC204610D3A92541054C0574496C4587DF29768E6F31E94A1C96D41BCA87F
4236846933F03C778A1A810DCD869D660DC33865B7E7C25A8F933A0E69D24DA2
92AB092D52FAA80F47282D973F48A92193487C2944D35418E9E9DAC3479D3309
DE69137DFBB7833E98F45B76D98F7F115A67578C90CE30A316B6D535855E3BC4
95EBD55052F31B47841D36838D978E70BDDB5116533BAE1B750318362BF85D9A
4FED0550257C16C0F488A11DF9E9251C0554FA532AE3CF6B4CC492912397B565
5117DB31B989EC2622635377629CAD8E550923A84F19126C17DD16A3913F27F1
2C896BDE5C6BFFBCB03C94DFA8ECE2B7374827AE168634FA007F8981ADA54F05
501654D663389C4B5A8891EC5F847FD143664560BC4C5FF77A0D68AABE3A561F
9B19E9E4F465753B660F494EE3BD6829B0EF25EDA2814492016AE68E31049842
FC608B1612C379841BC04CA5D5C9E7B9326E24A0D47AD9A7FC20C44470BA5BFE
CD08F2E9B0678F1C75B4349B10E0C822E7774D2E36B7DC679E91F344E2181C96
31F0E06FD50B7F3208C3AAE0F19541EC977DFB9A5ECCECE193800E322F11492F
E2D4693CDDA5926F4D6643907C7A8A5891F445DD18C42150008FFFDC9DA85E46
A319CEBE22106497041C6BF0D15CEBFD453284869BED4F94E7563A22D9EB3820
144C7EADD2B7564578EE778AB577C5BC1E44C3FA9956F75531F04161B2C21F34
CBE80DE64145C23FC97535A6E4F812454833BEF05947F6414AFB850951A3BE1D
DB72B79483DE686E68A33CE20C97AA3D34B75B9B69C9CC6AA7EE629D85ABD5B7
B3158D44150D249200D31492FDDAF610CC80CD098D1E968B18EE09AF09D593FE
3D0A62701D18826FEC47F867C4FC966D23A12CD634C1FA9AB34BBDD9983E5D44
1DF74B89E58514FE8D5100151D635CECB8442177468B4A69E269481F40D0047B
25617D002082B89E2DD0885CA956529EA49D7B9133782E80CFF57472F27BC0D1
11482C5E2407F0458D28393284DCBDB7835E97EB66928F45EA8146164441267E
54185239D9D66638FDA8BDD4DE1F10153D551CCD732503281837C4897D51AF17
B9562670633526DA154F2FC6BEEBC0DA2A57657BE4BADBA11C52E735C2C981DD
1A51008E09E7576B43654C207F12B1FE9D0800C9DA440F8F4DF5248637C3BC95
98A1164C54C878B02839FBDFB30634D2C908A201142248276B7E4F8924750C83
61FDB1FA328EEC43A235F6F3C221A21FA27814F2945BD12376C76382F3C9C3C1
7519E46F82998324BBD0131B32482D403D243A54E251CEDFA01A8BDE36275E76
D3407C62A81FAFC5A6918FC0E56BDE223615AC1316EA2FAC998F9E08DF976658
5D049BF9B0C16328F8992A1287FBE4016ECACDDC72CCFAC8BEAB0F3CEC7B118C
A007C99ACB3A8CAF71B0FD53F0FBB4B98CDD23C4D7A4185722A4CD1DF2EFBC64
62DCDCF81DB674AF26BD3389F8ACCDF1DCE3D915F0FA21593561B3F793D4ECDF
9B17AC4E1A9871B927051015616FA105CD31AC2704D9CB29783F12C090F7E38C
A5F15406029C0EAA200C1BB9070C7F6833CF29BC0C5CC42B68D8F370F21DC097
78880C3CE4E08BC8EB4F995A09CD0E77B6A97267F4C63D4093BEA8A34B315CEE
932B40ADA36F26410CE158403B4CFB64EB4D80157F57E05097732B4DA0F2F3C2
F479FA651F01F72A57705673E627FDF5A0598054506521227674339C79F366B6
CA9EA7CD06B8D0DA8E969FB1F684291242494E52311C02C8A34C0A5B3C13F380
2AF740BD9C765861A95092B7CED26EF1639CA2DD130E71A587A3935D91E2F1ED
F54D76932130618C8D76D20AC022026C6F2643128B9155F977871CC667463212
4F6F9B939EE1663FD02D1E1D74F22C4DA4143A4BFA7B3D22F58FAC1115AFF937
E1A8502296281BF8389A348484028006F3F3248B5454ED6DC729CC5070524D1D
B08A192A26EBA06EF157958C1BC00554409AD56FE7142D333CD1D23D5C8E17CF
1B43A482C44FE52E57AF48D3E9B3D32C3D557ED2F6F284CBCF8856B2A22E72C0
C525500347775505F87BDCC02101AFF38BA1917A296C2BA59D189CFCA85A1AB4
7D180AE3AB5EDC9A66EB2152A3926D74DA3E0E484D43621E697DAC8CC5B7F6A2
587F0A3ABCD8C3AA3F46E30A2EE663C2CC64E2DA3631AB809AE250FCB0B7661A
99E3BB1BD13565961B1B3760EE57E29C8BE8F4333B259C51DB04F83FB8A8CFF5
EA08B850563F1082F302DF65A337A60C1F7C2E743954A17D26C0DD1FC6719E6D
DFBF4CC6E06F7F4E221AA17F75D36F7194C41BC7659CC291CD5DF9CCDE6DA0FD
3C77D56D063AD44CB7970DD572CD605F5E64FCB19D176C24DBEDD2808DB3D785
BF794EA774CAD2ECA4581BD58ADB6AB154DAE7900B7D1A5831CBBB712BD4433E
492B5FDF3908E6BED58C9765976D71E22D7C32DD6A251141C84EDDAF6793DADC
A8DCD7CC7C04DCA33030F187E88F3A42403FD4606192DB1E65591E8CAC11A84D
FE3F09633B0FDA064321595BE68894E2244B800EA15AF8C16B9B8329E91644DB
1EACF1F12425A26341AA5AC2DCE2E64092DCD8A43E347008B7D5A184688CD0FA
CC7802A28ADB7907E056D20AEC2ADCB43DE6F84089E6E0A57A6AD525B4FB469D
4FDF87EF60080E1EA0527DFB9564EBAFB4292516657B11080A18CE326D18DB4F
C12F7A8E9820207DF26473C9C949A2D6059CF772992C5637092710177BA2E331
993DF752B5F9DA8A06B993088E210C91279AAD5922A3546551F93A06B3BB0227
2B60FFDF4B8A791B5B54E5E9D98BD5B3A86E909F1A18CFBBB502CF3C1C33D64C
241B9F161DCA2420C4E62A6FBB9EAA77C3E1CD4050AFE0CF39A32316087A9435
4D471A4D7A6449D75188F3F600D5FE70576EA42629818DF9894AACCF6FCC5C78
714AE6F776AD12743DC8846D4A70232F0EF82F448559F8CB85DD9909A74AD696
B4E706A3B47E119413DD9556FF4172F1B18271FC2435C354C3F09D46C1354E5F
C1A63D9D5B91BB6B95C298D03B35B604E4DE22C24947C31261DFE88A93AE4E6C
759BB40715E971D4F9F578518E37E431CD2798239CC4C949013F16A197425EE1
20A17F7791554750299F7A6109C5FB6761886F19B5B15D74CB098F56CF1CB341
A140660093A3A260FFABF332DD702AC4030A4AD4B5F9F13F05973139BC1471A2
E5D6D0C62F0ABC86BEFCB1F65AF4CE77AF74BDCD3B48EBBEF3576781FBB7D433
B58368D34E5E37B9E2FFCF9AB319C9F3BCA04911B77B657C0E6ED908335A1687
C92D7BF00C6F8129E347C6489FD4FC798ADB86B0C865CA2BC270E4E404F8A08B
6EA22077FDDCF0DD9D585ABA5B3216B772316E03AFA5A27E6F5EE3F77F4D523A
7A4D01199AFC3C88B0E2AB5FE014A8437745108009D13B449B4A055214DF69D0
218549440B1C5F19476595E964EFC9B18C7002F76150B70E79387F8C338AA7CB
A1F3E799A32B23859A4CDFB52C22ADB4DB30D313BD85B3214F6127B0F5A90B25
E1B529E86B0B4656620B937876139F8A8EC00C8BD6EB20AB66BC1FABC48E4ABE
10D7B7E8693AAD1B25349EC43DA3811A83F1E546C0CB1649868C14720C008F4F
FA8D3075910926C632218410359E389D874F4F719293D0B0EE58BE36458AB3CC
02002C46A704E345E7CBA12017897EACD1FB64C1F829392A430C1CB8E88CFB0C
AD53BA7F20DAE648EE34DC7CEC39CFC55A9505206C3C604F4F02C815605D0AD2
FE07CDA8A9F8F0DD0C048753FD98816588DE9C8A2C78E7C8BA614F66F38F9383
79CAB93ABE05747491570EDB80902B818F3E52B84BF6A1ACA730BA1FA90C0D7F
09B3DD6A5FE918CBF88B2CB98B7D817311B63766ADFB7099864428EA3580F26C
C4D4978813067D64E0DF70541891615BDCBF3B5FFB74AFEB695F8C92EB33721D
D3B41058551019C4E12555C4926B0116F86F88A7E9660AA8253D564A36E96024
8C4168E113B6C0C725E49331DC85507BDC697A1C20A553A349DF9D95D5D24C4B
6B2795D94BDEB015C731EDFD27F3823CA2D05633BAEFF23046DF458000AA7477
BE93D17A85E0519FB0B6C5BDEEBB9554D34547816955434DFCDD0733C148B5A0
52196AB08680F5ECC44BAEB2FC41FBAEBEBDB65521D0010402575DAFFF833C4D
59C1941D6160B8FE78D5C3354C17511541D364CA8C1F27232312DDB771243735
43A2C18439DB2227247B30A41C72B88361E10B8CDCEE93DDCDF5BDEFB5F08872
C77BA070C12B23B2C6FF837473C372E70836D4C5747C4EEB85DCCE9246271769
E060E6EB754F8E89B075418D032D7BD972EA6B859338F8D6BEC3B63C5E9999C0
6B34A79E0D131D233FD3CA93D8F5B1DFDCB271329400CAE5B90560D4FC5A1154
EECD0CDBA01C3098332FD8CE6C0A393AB1BDCB88B84A418C9D3B15FB9ED1330A
B93E9A8D466EDF09418F46892F4FAD459D4943657ADD842FF3D6D1143830B378
A3EEECB91EC67FB176F2ED906086FB7518C7167965813AC101434BE5D692FD50
2589F7B14BEE15894121E8CB7971ED4DBD5A2DF213D85A56B1CA85DEA53ED029
9C1E8516B0C02E9F97305FC7E43A31E0002A2F803A30B1202AB55D0FCB8A5F3E
321815C3C7AC714C3DC89D789252A42CB2F981BFA79544B1A2F756D81ACAE235
A58C64DB60FD25EEDB5A9E09F469071BB0F203F5D8ACB7A816012ECFD7947438
5118652EB37CB7021F80792262A4D2F2AAFBBC879A3A7321FADA299277D8D09E
8CEE8238655AC752A08A6091BF4B9D6AC543B626847B574F60E61F9C0710B5F8
3F74EAFFABC289CDE655EC5D586D483DA69DFBF9E2B6F50F1D8890FDB8C56DD0
6D24DA09F845947871FF414A3BF0C1B89EBBF3860AF123D485799661E8A45A88
8FC99EBDA38E539D9345F4B58F6B8E3E370C11DFCA06C381C6793D5574AF08AE
5A4FC89880D4A8DB59D7952F55C1F6110A42D0F70DAB4D6B7E2187A3BF218A62
F3B4198881C0D98302B116A463934A5A28E8EE8C15F8C89E5E3FA70B901CD5D2
C49144778CFFF1D5B63E099BE878F99C34FA15687F78572C5BEBFDDD80971DE3
920CC6E5D47ECED72963406AB79426A14A17B3118E50A9DDDA6C8BE52B95ECCF
029A6B18A512D30CEB0B6ADF80F97EB95E310182F66B217FD6CC9B23CD9DBB08
CE4B28C3754678266A6A1133D8151A000D95E13EEBAD4F2156298B976E43EB00
1FA13E44683DC6CCED04122D1FFF56BCCBB9A346307E3BD497D7F1E2F51B557F
EB6AA32E84F432B9B5D24ED5D673E26A25811D4BCA9D693EF8ABE780991240E0
27E9A5005DF162A28E497C231A0B0AACA773466D924AC2337BEB55ADB1106E0F
F4863C43F7B4CC4CE5008B883EE21D9BD24B48E4D1E03E7378C05B62DC04A3C3
61DAF3A67012298FFD77760AA9C0611FED9B670604C24AF36B6E54543B411485
5461C83881CDF494C2B43135E8062A9F9101ADD125A32195B8CB98C9B19235FA
FF7822685D87B84ECF255178D2D2C4B7F7857E7F5572D3BE2154C076B263342E
8A6977987E6EFB3DD2AF1E6F9CB166C25A47C770E62C69C131FF3870C42B68B1
0C4961AE98EE106D34CD0D4E15BC0A018DED92CC65DA0075E384D92FF2BFB06C
A814AD933409C99883AA5D858AD143961AB8AA828AE35FDF411CDB247C03750F
C0A519E36BDCAF29A0CFFC633D04FB8AFB4255B44D3B87ADB351EF39E1963BBD
57664881D8A70E73743A53410F56B5A091047A8CF72395F1E69F36852DE2801F
BF0855605F4AAE59EC90E69FFAC4F35E9496C8C463E367E06D63FFFDB459302E
BF1743CB875C5C60C2E6E8C9A0755CB5F0A1BBFF3264460AE6D907480376D8DB
24D02862BE4DC8DD5799C4CEA7AFF4075A15327318F6A5962CB9AE8BA6D7C95A
023905D41817647B7D2C63A8B8D708B2B900F04FE5D11F41CBC436C8E761E295
3D39C970D1FBB4CDEB59248C87BD6305E84DBF237C074120E9A595ED91541B44
46292F7B5230E7D8E6A2F20D8B4AD01B5C57AACA10BF79C8956E753851CB3588
E22936FBFB63A58300298B1519345714BEFCCBD19F5EFD8182629081199D09DB
775D782D0A8866EA71B296616734020B514C8B677ACF46CCEC8B8F65593DE423
E11AF9099F7586A67B05DF4C366A35C403CC50342491D2F70A528226650D3825
8FE2EADB107628948FA48884514D67EDFE7911E4EEE0C0AD43244A011FBCD1C1
8A271D67A94B587DB3D7BA51638B64DAE97A45561770BFFC22E3411E5E40FF24
5992A0EC3226160F0321EFCC75626861C86A9C0BA0E70C944B3B21C0E1BCF1AB
6653D30FAA959DAEE60A27AE7D7116F771F7C2E1BE72DB76EBDD3B6D382A015F
745E9413590B9E228A67E7D616B23D7D892ED892857231C6843F7FCB8DF38D10
F666B3F4FD6493CA2A307B3D99A7E2A0E8BC3DC5F3D64CC83FD73A6DB7D18CEC
44CDA8E87EF74592B6FCECB4FE0870DCAC49BF53BE42EAD156AC73C494C1BBBA
DA5205C9183E5F70C838F679EE6982C30F3E1C939E001B40EA0D5E6C596E8FCA
11443552C4912617C174C73BD5E7B62A581199E65B1D8E5F59136D8FED9BEF89
C392F0B77218D82EC626C936209AAE5D9735BBF8799A87D07A61D33C69225223
7B500D16D93E9EC5E63A2E348BFD96C9D3712A88590E36B304030ADA0D2ACD2B
57ABD9E4999D518C38ED00FC5C77003D22C3A1E82B87DC2C2C523277F5A99FBA
80F0E24128E0045A5C6DDAC94750B603FD8B78B52368C1E7E18A49F14C75907B
6375CBE0F615470E8397B5A160648F764407E576569F1014CFCA5DCC4F357A4B
818A46C98482D55FFC768FD0EFB91B78A79E6047973976EF232F76C9D0C07936
84D68FE95129C3217980CAD2C58319987C4D89484EE18FCCE668886402A21D5F
9E898B13ABCDE7322323B3A2A02A0BF388E89B4A6A25664BB5DE104EB3D74860
697B255C72846F1570C4971BFBEF39C25DECEB2C64030E48733BCEBEF9452314
8D97942E143A26C67464E6D2CE3F0D7E23C59D2CE7B86A51CD14388C7164E96A
F3E71BE046AC145BE61D1F70DD98C1CF2A92907B9738313B6A3BB452417F1D87
BCF0C1FDC77B2D7410BD44BAB276A22A7F706EA676E3B3242C959D6A6B399597
6FD8A571279BD69CAA0650077431C20F6D0E2BC4321030752BF6E2D970D1D600
2D80C548366E23E6F1E40C7FAFDE5C8CDBA5644BCEA126ED773A85E57276C8B6
2F82F71EE259411685F5F363A593AF5A1576A8B4B3EB237EB85B600FD483DA2A
8717A30EB97F50F6CDA274EFF21A2BDD528FEF3E6AE7CD6EA6948864A7195DF6
FABCC7CBE12408C1E8B37436368B0530DA3B9A1995259923B996D528A128B059
8F6598EBCCC8663E6EA4F7DCA4511480B9077A8806EFDADF015452EE319C13EF
71B1BD379B921472ECF6A74E4F91ACD9CA3A9E3094FC92C2678CD0084F1DFA0E
C2AE8B857358C6C1A92D363544E9909CD4A49E4600DBC7FE9A727D18EA999ED5
88C667D52C6CE4D2A88834CEA8080C90A3D588D0388118D7F85B873D44B459B2
87CA34E6BEFF51279788C2BA24C4BBC9451EDA76E0F06E75724F3301194447ED
73A88106EC3117E38FB2A662D90BAA6234DA26D0C1005AB96D93AB743D0DE044
DF67E8F402534A5DB43DD0D9D5B59BDF8BF4BCF559274C39F919865FB2114A52
F3DE5BFEEA662ED40E11888E75F52CB58B7602689B2A79385D607DC58F22ACA7
DFBC94EDD736C6A75AA4226D3174FB22442B6DAAD517B8EB433F9A57F207A7A6
C9DD70F5EFA7F191F0D4C9B427E00548F5375CDA3F062061DE07AE902D0FEC60
215CA1E9972D9CE07D6EACBC72E0CD95AC5978C6914B15E34F29A442DFB34D84
5991235AF8D5DC1BA3E2E8CA222024E4713F5B6A95DE0E9D20ACC13E62A19F2C
1B961AD9F443D76C85B8F0A503D63A7279A4659724CF72A6EB86DF61F65F0F98
9A0ABB3A779935CB4646BF5C8A23E96F6330D695017C84B5D82548BF399B8750
B55455FC1FC814013E1A71C9C53C4AC7463B93BD1D35AD3E5B02BE3F7207A843
AE05580F6EF7EFECFAFDC67D68C20437361ECCC8115213948B464DCC1CBA4F77
3DBD3E64C10A4044931E2E4D7F24E1545934A9D6171442E002B30FB98B1535DA
6893220E56116FFEC91CEDC5EF9A36B468D93593EAD8688D7D02676EC0409957
ECB1007E75E3AAA635AB16624B8963904DBD231BB29655FE3DBC58EF12E48514
EC7526
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3D688629145C12242C6951438E3E6CF1B83239570640
6F435246C135BE54FDDB47DFB318A7885941AD2293441971A713762B780529E8
CD5867D3111E875E03774474BD86F6AB95AE1170DBDA9AC3B3376F9E5CC26905
718DDD07C6D4A010ED791CB407A7959F6668F66D3D48597A0D1D29BB25924706
B0BC0F896A006470C97F9C400CA7E283E58B1EFDF083A5E8E4B299607534E588
FF88BBE199A76734AEC487BBB103A8547A0090F0342D4DD266B9B4E40E5BCC6F
9D38A98AEC711A55C6C0D1727985D1D1F0CF0362D02534F7BD45AFFEE4A23EA1
5D91EEFBEDFFC59EDA04A147FB51227A5AB0C13DBB354E0D2DEE2C6D4ABF1083
4F8B253AF28F9CBE97F821C1295B3E711F5784048E8AAE140F8C5EE5503D9B5D
0FC81A2C54F806D55143C4FAAF9422E83E020F573EAC8D79CF0D6100FA4F5DE5
ADD58D93D057D8110FF2D07A159ECC675E6A0F6FFF93B9FED0372D8DF6348125
5FB07C915411AFA557DFA28D40FCD6D9B321855BDA608E23BD365208D22C0BE7
963049E64D445AD62EA3C034771FD02C7C461A688F9A47ABF9F7DF911B9C1FD6
F36FD1AEE7BD8E07FFA70F58A3967DE26F93EB7C1019B8A18D4135A9C152AB03
6715EC18FD6FAC7D1476A879CE94608E68014B7E3BC175C3A3BB199137C3DCBA
F784D79C2F0D24661C25AEF923E6760935EB5E9618CBE11F8DAE3BCC13AC9569
CE318E21C11AE858AB0BD573C2E4B68057716CDDE73E441BAC714E8769A512D0
5CF9D7D561BE22FC6F8DF4851784EB30CA82984525220B24E4CF09EDAF53C069
7D5508AD0E17F40C72588BC79DD919EB252556491E35BB72084A2DC3F55DBB7B
B9B715C44B89D64C62BA4F7CE4B64D23B6D53B07EA115CE3A6CF8AE49428F185
FCCF89BC0778B174A9FB4F5872BE9544E8CEAD0B6155E5208D976A9561F7A2A4
AAA27D75E8066D595F1BDEA4D2626A0AD63FC287C534288972EA88DB12E47FC0
3B333A7F09E8D2547F6D8D16CA42529B10FEF8AA5B58BA201F11BE077EC30EFB
8DDF6C741D0872538F31872099C272B0FB7ED4832D38B4B833F7FC53FFD629F3
A82D48CA829D0777DDFF7E65F6B503D2214BAE714A0A6FDBB0B23803E23759F4
F6C873CE2D380084EF6C3C222E4BC5A473B9BEC948DB8FE7A03C5CEF1156392D
B08FB5149780560C62E50EA63860BCBD4759C4A8A47E47F291F486A742ECD242
3D98E56B4A8DC78483728308165F4117643065EC473EEC2659C82130DAA576C7
3B42BADCFE6BFB5EE24DB3C65B2B263F5F548680533533A8E31C373D275A5460
A95C10665EA4239F8ED8DA31BAEEBE731F642195FB4ABF1DD34F930544B7EBEE
402AC2178EB9ACA820AD807AB5AC43B56BD0AD9CF34D60793D05587450CC4751
11F5EB33365AABC3CC561B5762F36A1EA9778A383B905BF967CFD7E3DE4377F1
8A667E8E394B26427F602761C7154B375027C8BD586D93F9261F04FFE16B961A
EDA002B7CEAB45038069C3F3954BEC4A9EFA291677005A6040AF8B9CA57A5E93
5B58CCA2B89863D9393046FE532A3BE485C9C43121A0A44DCD5FD9DD843942C2
4352635A093F1CAB5F57B71316F9F77503C73DFBB45413AFAF9B078F5492C59E
588598204755EA7873822811DB0BDE550D5B9F29E450484BE0127C6B5D35B9B6
0B264FEEDCC848CF57CCC50D8DB60D58AE88BC7DE6BF8C3893D9CCF5BD439A47
C2D2B405DFD546726DD78D2C93E7EAE911FBF74B12C9F520FD662177ECA7C487
E7064FD4C2C93929971F787A261C7A762E138688482063875731DBCF8E67B657
2A023A5E274AF25845F068CB9A996A2779F26FEE94ABC862690B10EEBE23B5D3
EA74626DF5FB8B309B72BBFEF4A3A2CCAB0657AC5A26D17CFE36766E7B24773B
5F286BEA94719092ED1659AA205573A70B0EF01EC0DCBFCCF02E8E0DE0B2F4E4
A449989D43B7039EF26A7451355E2E633B621B535971A59F3D31A5AFB0FE1536
EDE030B78C78DF8804454FE8997C0ED3E2838D95B40BCFC20D23D62F65DBFE81
E2B24A9632993A0A1B0FF8CA3FE4B71B4D67489ADAD67F813A2A6FAD8422FD44
83475390319DC368370CB49738D781176A9144AA3147E5DC6F7393AE3190EC8B
B0AAEA6610CF687EED807D76E66CE14A6F2384A0988E0B6D427C736B9C11026E
0807FE4F84594110229F0A00FF69664C3AD6273987A77FED4648F4447E73BC77
37E2398CA67DB8BBCE4875C2F78039951697A67F58803AD4A23223A1B9FB86DD
07590D397B352FC1E4AD0A015D65A32960D91C44A5AE283E90611BF5A9711B1A
B7DF7A35B147716B1ABE81BBBBF5619F0AA22428C7B306169FB2A461733C6927
BA24DBC928152248B9F9D91F565A53462673FEFE4D863F576F732F347773A27D
44A82B622327EA3025A1F92975D8AA80D170C944C424E29FF96FAA4093FA01F4
5F2FB1C0F0A3E2B84EA36834FE9D6F14FA2D8F3063B47B307A23127EEB95E34F
88532879E74136600DBFF5697DA3E8A557F0ECDD04413CE2DC6CAF82D90817EF
D5E27C40904D5AEB1F2C4DDCBCA602459EB171E38B8BADF9EA0F1ACA29651760
0120180CE9F6816404C14B493B3E01D78FF1A89EE6EFFADF81085255AC9AC5B1
F000BF36AA650A213986056D1D0666DA58D29C6B2FAB5383419B1C694DC348F2
31CDC8BD5769691A1AC6F830DEE6F613341F63034D5B7E72F7C6D4E507FE6C28
5D866954E7181FC642BF30BAF2394091C220C115A0E4221FD63FA45553E41BFF
D3AEC0CADC1E879A1737608D314FADDB10D712874107DBB55D46FBF7CF7C80F7
BBC7F22933475EF5FC7D33D22BEED6E626A79E2F2827AB02D124962D39A30A3D
5D4393BC8E1793D176D517EE123E2F3A6814F50CD4747508F6D9E9E22909544D
3A6A8782B0E58508C7E1E95155B5A79E8CBD766FFBD00E659D367BD0F39A1918
63DCCEB0E716AD55AD938034255D5AEA0D48562241DA516CC83F707FEF54588E
0248D9970C3C8C817AD9F51B75713C1F3546B6A3B9C50BE62101E64B0AC7F5B1
5DE5AB04FD545E3781346C27683A6D632F4A959B5967B653B8C259028484EE2B
40B36E59CAE80B4632B18C0B15A064B7E83D582B1EC0B1C1CE2438A99C17C490
AEE81633F785483D9723B2B34279EDCBCEB05C6CB08AF08E8E864AAACC6F0231
7A0BF0C538490779ADF2BE4F5B99BA7D11C4893A94EA166D5A2ABDA7B5AB498D
DC3F068B89B669FC59ABA2E6BC3F3446C3EDA9B7E30F210EFE48D9EB4C6CFE5D
EF198A9DDE86B6FC8E7BDDE870D7E381E08B8BA9DF1A248A7A2521A5C83448A6
E40110FCA935ED02D7D3FE2AA4020F500ECE1448332A2DC8C8D3A97F26DDAA68
E9AB21D8D1CC9EC9BEE0FC3169CC2C17241B5CE27B04B314B201CF49CE8E5343
669EA77D50E6CACF735883D0FAEDE27A170196FA92DF4BD0595C066CA7706B8E
BA444B4B1EC445A78AA02CE82DDC6F9090831E7C14CAB0AABF65DCF565FF51B5
07DD131D7AA5EF8B8267F0C4E64157419A5E19D8565766FAF30C8A8C8C41FF61
4C944B6AFC38B384E848E9708591E2262F74E4A30281A37995F0BACB6E144713
4B9FA5C2495C71CB14F974067B93ED2BFE1CA0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Italic
%!PS-AdobeFont-1.0: LMRoman12-Italic 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Italic known{/LMRoman12-Italic findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Italic)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Italic def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-449 -289 1358 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD115081973393AA2048ECC
1B38C1B45AAF909E1D0187A0DC16F505BC42B5C6AC12168C73DFF1878FBDDFF9
5CE859CBF7A88E342F565C04C06D9DEE65C66C505D6B44F028A7659B7B18EBC9
AF12D18FB2C70E54D7C524923386E488A5781001B47276F3CCB8173466544141
F99FD85B6BCEAD8A7E1294BA184AC78C372F2F08D8C26E0D96C407EA8F1F5A28
509753BFA423684568D7C86E4655ED88226911F0DBC9B8DF79A35791C4A85AC3
E8EB007E7AA56FA62680DBEEF9E2A976C9F5A863FFD9334B04B4E297D672402F
7CDD0A80AF1403FCC0BF0C5B8BC58BA6669717265C300F0E5EC871A0896CF482
691E8AC48D1CF9C06AF63CD3C7B0AD16E4A0EF76559A251DC81E06549C9903F4
E755C2E6BAFEF9F3FCE61B6426C9C0AF1196BD504C1C2D8C735C0B1E6267C57E
93AA51E6414CE90A92DAC96F8694EA081AABCFCECB0665CBA6B56524CD5CCEB2
B5DA0717E989F874329D4C73CE852FAB8655DC1B57FCD0742B35D37C3377912E
A7FFBFFA9977C6B45233E203C745C84ACEAB8BEEC1A8C5E2B5FAD52657395DCD
3471FAD4C2A70F0F31C29BFBE131D671AA20209028882857976D4515E730CB30
4A404BE6BB5947361A0664A8BF8B33C6456686A1A4F59FA091122433AD0EDA97
E83CD285BF2D96805461215F4A5CCA6B378B9C2B93CB71E36835A8AC3FE2601C
D2B1370B82A4668FF8C1FDD66C5B526E0890BF226625457059659ED51CAB74F5
5FA7945797237B1656BA0B7B7F533F360894FAFD189B50A1CEC76E8E8974788C
239B91EBE8AEF647688A1CA66C7D5D7C0D055BD5DD5A0BA92842730DFD09DE92
3358806250590FF35564FF90E9DF85FB4B082B7806E3E941AFFA6336D4F9BDAF
124193F6E8396008E5BD04F19BB4EE30FD4A80DBE4DF9EEEADCC816B3C84FE39
07EB828519DE800A9C2CBAAE3E98D910EC76A44AB8AFD6B95D1B72B8B21490FF
528777AD3BAB19ADC5105684FD87B37B67B29AA6628DE75A69A3F38EDF33CC72
BA1C6A089FADA9A92F60CC2FD61EADF93891FC191896A5EAD415224F7E256A4E
A02D876FB0B68E723AFD17D0DF08550F90FEF1751E7E403F5F111E5712BF3AB2
51EB9FD654EF748846E38E374DE01977C142E0ED10318333382EA7FD01EB2A59
D9EE46F33362E4C2487FBD9CD96837286EBB53EFC8AF3FC1FFD3D1EF05061D80
B5E3C87AC8A76D16591A3380A49D57886D7F7BAD9BBD84F73FA38EAC51CFBB62
DEF89CE32FC2649522985C27941C58E4F50B9C2CB497E519444446F0E2F2A2CF
F9963C615AAD69907EA4205A0BC3435596988D1C67406AD33743D1E984DE8C3D
F484971F00990B88E1931C59D868369DB620A30ECD347E1717AA5D4CB03B26C4
A34300BFEE6E72FD1AC6CF819110E6FEDED3E62A92EF184C7B979C4E20450603
8E76EC13C6264E69B55D1971CD164A032BAC23C2866945E46981F9406B6E4F61
160966AA3E2B029EA8A7323F271A6643341F7720B16123685CC289FC0EFC552C
5FC511935D0402CEA398F99BBC58873131733D7FFFE2E60835E8E570EE206034
708F56EAB17C698F2052A9C6410435FF3D114F67EACD436BEF9EBFF0D3BDE9B4
FB0A540610BDB59FC4EFF8586DAA59BD102BAAFEAF854C1B48B036052A3D727C
050B93AC55B87A0E337A5DA9985EF7DBF5E1072D4D4BCADF078CDF0EDB3A2C78
66C977678C571CCC9FFFBCC76D0895C7BCA510FE3F3DA02EC5384C4E5058FECC
591ACA24662FF0B6783E357BF2DB29034B3007E7EE680C5EBF4434464C47F8DF
4DB69281479EF18DA2237CD4F3A26C1458B3F69670B72A5D4C1CD5D8613BBE22
737F3AB7AA70C37462134CBA469EFF52B99E6C1F4DE95E59DCF7E38BF93A153B
0082245B574C006312B1A0A1DCE0E4AA6C193AEA970F45D01EFCFBBD18095B62
AD860BE59DD9C26FA72639FB421C3457FDC09D3ADD6AE6CC86E8B493367C1BAB
3BC0C3405741CAD56CC6A606BF71A39EF59C9E976C5F562F31C628021C652ACF
A5745D606BBE742DCDC69705BE94A449C5EB8D42E88443AFB83F96DECD5E0B32
C5EA329CB342002792FADC15213545D7EB212CD29841E176122E3D1E147F1276
12C7EF5F32A8A3C6A4E7C3BC8F04EF6C58A10CF8D6B0D502750247BB25006F46
6250647F37A36A4911B97E5F975D12379864A4CC14D3103C4994E6CA97B1D789
3DF52D57BD6C1A6B744024CFC65AAF32058BE46AD9FA0D3E24F2FDCF57193CCA
AA36A4B774280AE1D3230BB98D2190912BBD038F21047D0019EC24C1496E1DE7
71B3FFD092BB48934353CA645CF41F7B2EDCE9FF9F84EEAD17B366D678E61C61
76FEC09C94A3784C817AB37CB52D23205066E2D80EF7C7866BAFF6B23D88EB36
BC2E699A11EC1AE28E0E6F2B383713FFE2B13A67B51AE8B12E5BFEFDE5D92BE7
BC5EC381B6B05335F5E9BDD8C3A4A82C2E598302E5493842F0A080F6AF3A9121
D8EF4BCFCC80EC71F78908BDA227422F8A56C95877234F9FD6BB97B3AB5C0F27
DBD4DD8DC2FB1BFE35F67D7A5B693EFE15A466950C44AE2D4F9D99F833D72AE0
88F54DC0BDD441EA5EB5A1FB810A2926A27D510E69512B9C70C2434513CE55BA
9EEA1BEA15C5C24ED9F31705A32503BE7225981770457FD937871241EF7A195D
4747C9FFDD581537610B95B188999EB5F2F53D263ADE076A5DDB61CB18C2C4F9
1CB227C6E44CEC46B305D67E5C253CDB908754242EC4D9CF4E75722C9F37E4C9
B4E010E3CA56EAA8868DB6F226C6E56BA3356F66D123C08884E9D27DC1FFFC23
D36AE111FFA48845C0A7FF2E0CC929CDF9447D83A7167F3FF009AF8CAC686052
7DBD2B62750C163DCCC99F21237117AD4B234438CDCA4A7E25421A64637FC8F0
AF83863CDCACA331175F46778C3202D3D4F36FEC1AB9B1973A7DD95352BF1532
EB87DC7346FD25DA53A3BBB299CFBC46A80CD1D1820D329A68E9056D5FA94871
56FED518164901F83DF3BAA6A0ED3E1145BF178CBD4637DA34744818D2364CC6
932DF0E2362CCDF28E5A9D054A1B2BED399E780DB66D502014608F6D49CC34F4
A6767064EA4E5F469E48F5AD2885076AFE1635CD9ACC3C44B5755DD9071DAE1E
651ED94B4CDB4FAAA1AE95682AB3BD762EB1D2F722477ED3C9E8221F88E54918
1454004F18A348FDA4446E35C019B5DEA938B851ACF798EB6086D99D6AD77CA6
4AA2EDC679AF04FE139D653820FB3EEA998267FB51CF42EEAD7BB5AFA236AB35
C6DCBFA1165F47F8F52B0787EB4B70B9C8A6D5E61B5B11D5B16C646BFD7EA160
518EC3FAA454407E1B8A7520C2C08F8CE3CEDE80F4C4C0838B8D797205EDA240
63103B89A932C946455256DE821247F764D8435543A6A69628B40736B1AAFBAD
A2DE6F39CD599135BBDD2D6A67F05C3FD7CF64D8F619AE619F5CF7C0B1DE078D
A0D6C0E48F1D065844515CC08B55C960DAC383D2278C7302A34A4F508E05E8C9
08C46B93419B93876B1AA19E70A1D92D48565DB08347E934C223F5A1504F2CB4
5644E610A3C02D768058BA2B97ED67821A10F50F406270CF873290E99A3BD506
A8578376F7816D6F4CD48A5197F98F35341EA3A752FBF80C009DA521C0399993
9FFC6CC50503BB871565797EC537E267EBBD1DDB3F3EDC5FA135479FC9FA2409
826AABDB6DEB72774923AC44C82D135453BD56678689754F0DF84269D869E5D4
0EB344E5D2C11E525F08CF4752ED284A1719539A584A375CC8B9C4FDF77D3016
80CB83F3BAE0A70B1DBD9977A5F4C77183F4CF9B18D3648CEBFBE395E68FC891
329882A2639575674B2A47C068AB093F74813A6BAA4F7CF2CC57A84CFBA77156
ECFCF83454E56C56A2CB0297E6C99E604FFF638C9DB5F9EBE90F1628BFF1109D
A71D85A35F40871DD6EDDB2FE95037EB3E37FC4FCE8F9492E884E432F5332C61
62371112A5529FB7CDE3A1A0DB98D05D8301FEC82EBCDC7D7A02A6CC5310ECA2
4348652BF62276DFED27FA18C1B3075EDD207C35BC17DA8E255C9216E000486D
0F3FDAD463346259844571401A131E488A004961B9D77108922CB750BE2E146E
CBDD16A1584F3EA2AB3D9A37849E283446B177BFFBD9B94C2C008FF74A20138B
EB2D0CD90BB842436D3B6DB6ED212E9BFFEDA7D3958C62CD9A5A77E01F15B23E
59C215E93A3F5018417C37FFED36B01A47F0153A926B6C6555E5389B6B68AD39
1C6A3F722B2F6C2CCB02A2A87D3D4B8954D01DDC88746908EDB625B9FC645E4B
F39E04FAEE6653798941795B253A86C73164C0B29E831F83AD94729DE9FEDEFD
6748EABD96D9FEC55051D7462136CC3306C5A6A7F2921367D2498DA3D214AE27
5931A442EE4CA0E11E8CC506066BDFE472196A930F7E527E0DF66BF48E8925C6
55C7B21A81B9FB4493377D6B952CE51F20739BC4C5106C4527DE148B31E0F553
FE1D46181A8FFFC3C6838AC1204F34A6A16569177D6B1C7CE23DA29D37E9CD14
A077B05AC1D894BDEC87BB96D4ECB175F244176BFD7625B80223C231FE14896C
C19E2DB362DE5117E6B39EC952DF96091851A33211F931022D46BB1341EE9019
40795D0F15DE5A23420BC6DB59314AE0FB32814C0BAC128B7D4D61C2AA87093F
0D9188350856B1FF3C410855F5593D1424A27B7482D2EF601673E5E859A11D4C
8C48D36D325BD229AC91336E40475264897D439788CDDCAEADEDEAE8FD8460B5
BB21912F2881FA51334A720C96C7B9CA647E44F7C808B103D657353EB568DBB2
2BA54AA1B3BE277E804C6BA17F299172AC3A4A3FC57E0F08DEF0F19151DEB13B
BE9608B43085D30037728FA95D99D376580FE5BFE1A7FCCE35DAA893E5CB7EAF
FF53372A5AA48B228CF68EE0032B1968EB88119A375D4FBDA133B5C6494E5E3B
14FA09EF6982B1220A197516A442C30D604833511E78B3DF0FF25780A142C31E
0E387E163212BD3509108B61ED33B18A73A04B5F96F94EB6DF60F5B1DEBF5A23
0721E51750128367A0AA72945C949102B7782BAB3FB8BDCE2FE2BE9B7DC14AC2
FE27CC1195254992045C0A486BB5871AD692296D2D69F6CF1E9FE72EB745E6D3
6223AB972791081FE59397EF9D69415C6994D48E7284386F6082C2362E4CCF3E
66ECC33C744624C14BF0E29C015F68BEA5EEA4CBD597C0C8AB77CF9CCD9105AA
6824BD46D237D5AA012269135E586D85A70DDE32B3521787F7A76DD68F7E5D64
0C87FFA05C0EA432E2C0E641ECC847467858898AD528633F477B739EAAF078FA
56B039D2D408B56CE03452944AEF2FCBF65E4BF33D7C43C7EFE3A8D63D2276C4
236933CA08C51C6CFF8FADA08AEA67970A39F150893C460EDABD875702C05640
E905826A2397BA520E686CAE8E9320DEF5363899F97A900FDF659BC38E6DA6E5
87C23E70241F9C323674E061FD55AB355013374B68132A30576D4DBD04EAC244
CAD6F9B9B87060EF0AC15FAD60D0F0903E76F0FA3A2CCFA0D4F8AF213E0A0CBB
C22A3CDE0856BD8640D2B9B1844E03A53BAE53445277C899FE86E54B8BDB1490
AC76FF84E0DB1B76F31FE8955F98B6EB4F83AD59AAFFCECC01B36F97FF9682F6
87343EF61149DC3BF556A632D10F0E070A5820B7C261CCEA2B02606837B57B4F
38BF32513D5EA4E27D946387E6DF677C977AB426EB6CF686087DE12B3D6080DB
90BA9AC4B9EAD70DAEAA43C5D1F96A5ADDE484DD63BA31F96DBD7DAFDE8ACA84
4DD34A2EC1F5C5C777FAEF9AFE2D1C610195FA32E61F5D12E43E43F6E03946F6
1E9135C70CD0214CF04A4EC5AD120D492F25CD6E1E8C9AD62B49EF8453EABC20
64828A2254F5568A8D9E0D617268F63AF0978DDF59311FBD5C2A43529A894801
EF317BFA201302382872B3C31E86FACB377A74258F2A8CFD319BCEF75CA4EB31
7A628F42F7EFAF5804FF385897835258981A89D3EA8E8A31F4257A299412A33A
F840C8C401103177786D6F091A1D5C37DC89CF313CD15986DBC4E6E37EFD447C
37DB455D2F083DEA179DA4FBC32DC81B92E6BA65DBA894F62D4F977DFF168ADA
E8A1716BC8DE0F27EF5A0FA16510FB9F6D14FC983E99D27F9136DDC3D925B85B
FD07F9BCA9D7C412F535755FFA6B31BCEE9A6DFAE4C9D1BB679CBABE4996D782
9CA57157A0C2191D3458BF4870481D8FA433728039209E7FDD13ADBB921A373C
0AB0A894F08D7774102350E15460EB209E5D38A3B75B9BD0784EFA1A9BD09ABC
04956B86F9B7063708EDDDF2EC93227746654ED73ED27B057EDD4280D406B542
4157DB421D427E28CA6143F63B988D41D1A114387952ED3E5141FC64FF28F1CA
6D4F1BEA1C640181908253DADD5978A9A97AAFF053914E587B8B95AFE807D313
E29E3682228BE7F075CE96A53614ADDA732F0927DAABC3A25C1C9C1670B8A568
F69091BF0FBC9AD619AF7C3147A13DAD7E3D454A365D1D4026A3816DFCC1572C
DAA62B2C802CEE88F7A612351F3EFAD2EA53AB06C46134B09B4E6A2D11B839AC
94252668AEA04F23329A968E3863DBE6D8B7D149ADB2FD8E312D719C507DDA1B
F0CD988B644482DC3BD70EB627D06BB45DA78C776FB03861582989B74C10FB25
DA53070C2BBB4411D9608F4FF0B2E1718A94E2CC16BD11D4922C16189C1C1BF9
047BB71EE34422845BA572D3FE1289FBB4C85DDF72F5F6B01E30B2D9F8855EF7
EF3B47566788D4D5312707E5F2A9026BF35852310360089F9702E3D942063E0A
67AF5249EEF89C2440409983598FBA5FE616E33EA2F454625BE4B1D174ACB337
D7CACF97B0D86FF2BC399BEAA86FF6D34DCF21BCB6C956875A422493C3E2B518
7EA654BAB542981F079D7ACC6B259851385FBEEE9F0B4F127A8D2BB1E634AAB5
83EAC6CA31CE3807506FF35794D027CE342A66A4C27C0A42420926182486AFA6
6185016F9E506375D1E089C676A57D0CCACAE3F78F40E9A45653BBAF2A5DCA56
0DB5BC0FF7FB3C608FF37988C7DE6A41FB1020DBBCC762F2BC9C4ECF3575A413
0B81E97C2A9BC215A2E2A34BEB5AC13AA7B7FA82E8E15F366CE98A40838258D4
52E73137494450BFD0B62B8429F77FB1EA332C7A1CA8B004C73183C5B5577DE3
2847B3CE5B6F1B549B9AEBB0B61DADB95DD6C402BE50CB662CB93907D38FF8EE
B225EB90EFE1889FAC418AA997C16C2988EF7E0148A1DF74DA038B947335DB91
73F65836444E4A1438A01FA0938E85E63961570ABCE4CAECA175260290D8B0FB
A6DE7DDD436420D727A083F6EC43320D24867624620D636BD5D74B42B03889E2
D09ED2F15D083CEB170CBA8F1D210044B6EE67818B6BD35FA4757B0CFBF1A087
1139A66BF3E0988D81FD93FBAF6EFD1C4BC76E61923EB04DB1DFA426E752C197
FB8DE8D169E29C4438FACBBE1896E37B202796133E24623B46B70586AA570C64
F43DC2BBE8443DB5A58ED8C802AEBECE49095FD94546064A2865BADC624CE6ED
A45FCB1CCC3ED7711F21F51EDB19091E7D74B3AC20200A8B71016E3F1A4FA300
4CE59FDE33F175DF5124D145076FDAAE3F589B4E3B13F776093E09B517BB419D
BC49CCEB522EC7754F31DB5756461350D5FE393110D0F31574EA58FCCDCD36CE
E7B510C14C8B1F6CE36819D08E37E91803BE7225981770457878906C94394D91
C7EC0AA568F7684A6B37CCE936BB41215963C34807AE4903D01C0D1793376FDD
8FA4BEF581D81248CFA611EBD038DE83EEDBA1F2C2B49026FF4C2BD0E38754E6
EAF8020E2A4B072FD6F9DCD48DB03DDFC37B6DEE0726292D744A88E3C72ADA84
C88545D16A7E9A3ABED765CF54C08D8B4939F7A3D2BBE4E1AAEAC7973E75F06B
DF6C2AA60CDFD1328BE57A77C31646BD168C1FAA5E180CAF95A4D42F25292081
FB60932638DE190F01064609F49F73121450490158098C9B50783AF12CE3933E
509AD637316FE19495581736B0FEE0F522702E81A8668CE39E3F5AAE87122DC4
DF7738F78702789C89D8733DCF9F30E964DF6C072EF4701514195A43A81826D8
B89CC523118E86C15426E4FA49EB9622E45801FF0A29945D6E004A9D99F833D7
2AE088F54DC0BDD441EA5EB5A1FB8670796B270128639A86DC6412958577C144
591984D9EB784090C81C890D0E98FD06C7AA912A719A5C01D1DB78483C99F7EB
4E1D1C5ECFA2D925E13BD7D67620B5D4DD456453124D7433EEB44C724ED69C86
97D06A5246DF0AE52856547B5920A5861DBBAE90B0137906D08B278CB9DF6AAD
544451DED49EC8F5DAACAB636082E7EFA02DCD63C03FEFA3D9E13FD38FAE1FD8
69366B61D37AD7EE87321E9B9B7DF58324AE6E3B639DDE323A6EEAFEA964B553
AA0AD4F22E8B3A5E0490DC2123B0A51F0F464405D89C0A09300879A114B70CB4
073D6CE990C326331F40C0FA6B5885F0B53FB07AB5935CB1B851B96CD7BF88F9
A67F02D5BFFD8203AAA65D8116654C76E72A1E10C8A192C2003A5D2100C65682
7B3B49A5F46A5434F1B92F57A68821525B2F86AE51839B3849FD996906443DAE
A54DEA0331A5FDF6371DF5461B6961210F26EB4AB32638AFE0FFB530D4E1C6AB
CD3A1F268DE5E0DFD60951C1450A6661F74A1032BDC79BF105F415563EDB5100
D3409F99A1ECAB7E8E690002AD3BE5E3FB620CE990D9A478B44646D07FE3BAAF
B96E88ADBA548B75863B57B59974A43881D35AC87616C0C26855C6EC0FF80645
0B5A5009B2665279C0670FB3550E5683AB56AA9F0EF60D11E54B7BA0471056B0
21C03FB2A2D227D39CD70F36330A4787B95D7A39E3BD486EAC834805A909FCC5
FF841305A8927C1BDC558808B1AADE968049989A572AA52EFF3D6DBAB167D3D5
F8C9E32673F71909551D96A01FE8C83D61D4BFB90D4C85EE83847C478012FDDE
C16E0E7854CB47132679FBABF1DF31D16F8FA295C8371583DB72C718224D07AF
1DDC3522807E1C3D9F3C5F9AE014197003B47D4CF767A93CB6A564CFCD3F5AE2
3C97CFD43428BBC79AC6BB6A8847704A656E4E97A370981C24AA31381CADB34D
D78B80AE92CFBF71741A16223D3039B3E54272A5C0E766FEC02014DE27FB5365
8648A7A378ED5B4B41FC79ECCB350466A44A8959850AA8A118E8249996EDFB39
C6E76D2A51B83AEB1553E6AFD525D156D409C3D4E8A89EACAC4D49CDB3D0670B
39E0BC396DC5F91B7D2C30CB1526DD07C87DC850B32DBCD0D7B4935D36861BBD
AB10C7FDC05B7EA423463C371B102E3C480DC46526F008FE4C217B2838E1E8A1
9D917B0E72F44FF631C3CAA2F7BD7060450426DB16BC51C8D99C420CF100D817
311CB62CAFBD00A9A931861CD9A7048BE25A71779F21527F91F5F20D556E956F
19270A4455D81D673EA0017E7D9ACB7F611965D4FD91DD5FB544D1A7D023C347
C178DDFE423A00CED68405A82F15039F0A99E6FC20C91C002D2098D94298EEBD
3E93E848FDEB52363762FD7C87E54B4F73CF066C2B9C5DF63FDC0ABB95E0C51F
5257648FEB205E020B27F5307E54B6F4A4858CEF9F21FDE883739B8D463BA4DE
B76CE1B7C8521A9E945BAB12083296DCE69D9F66CCE6B475E5278A86AC2AE0DE
347C058C7D70467A760023DE6A20182AD3520778E6FD9AF26A3D18D9E2393A43
05F3FE14E3FEAC2D18913A9445749BE14436D6637EE76BB7E7E84EE53910AFBC
4F7847A907AADA2CF8DCAE32B40799961D4076FF5637BC82AFD658B4DB12B5F2
C7A79E31D12B2F394BCF99217F88E53626358C95735248E06086D041BFFB9514
E5B8248FB18D840048F96BD4AF2EAAA6B47C55626F5C6488D480EC86E1217FAC
6ABF3636ED201011F687AA6A1FA145D82FF43C12D7E0B65E32A8EEA690C33C85
0A8BC6988EC78C99CF50A0ECBD1743751B2A5746D139A591AA3CD97D659AA659
89A7AA9AC8B6930AE574DDD32FF4BD7C970E40898A125A27BAF0BFB58CB89C44
4F4564C1ECBC4CA4FFEA239B58976F94434C1FB78334D81374C359FC48134106
B3DAC7E417094DA35293F6250F7959BA7FE2053C1C75BF1A66D0126713294E13
C1A4571B8A9E6D98EE5C232A24B7E24EE88FB207ACB013947A866A8ACE63BB83
01720C67F95A61987000720CC9DCA77D93EBC04B795D8258F32ECB811357F69C
CACACF897A7A1B155C720BFFC17C71669DCA948F18341306C3422922BCF391BE
9C97E410AFBC99CE983EA462DBC29DFBA80E389786A0EFB319B24F48600A1445
02EC6C0E97C248374359C89C36A55908223056560C55438755D243C5F055EB9D
6BC53305E13CE5740DEC775C471D2C56C824C06DF0A81A5D74DC4A5B92E22567
DDC967BF400AF513EDEDEBF50C61D9A387F167E51859F4A455482B979DBDE135
44B856AD10C3E3923FF7CA111DCEF22BFDAAE0A7FA0303A0269B0BF13AB750D9
0F2CC97C981D1FC2366FBCD0FC05F53B4C43820E6246849EDF70EF99B1C95A29
6106DE15CF1B4D71AC6ADC7C4415C9BCE7795FA44C3BFEBFD041FFFB50AB636C
FFCF2B7B6B3CE509264EE2FF75C9CE88D17D4C306BD10D7C5500A05DBAA0C671
065C069B7A80127C6837B312D82B3A36DA8CB5E590F9BBDE89001BB2008E75C5
76BC52FACF258072F733DA1AECC72715A99013EA30A2A88EDC8F82FDECC66F79
73DB6138193ABB280D5A40E79B4EA5AB5B5B58046899C9C5993E7302C870678D
EBEB00F7AE7941F78325CA190CBB2659BCC601BA85B214C1F8424F4718B5DD3F
742689B36830AA72D8C783F4104E3836FA9E6A3552760C1998BB54FE1DE1ECB5
1495B56F62FE2725A0A86C028FAB0F20F238C85528B8B7946ED38F8C44FC3311
F94CFD6BA9FBE309D08FC9D7497ADCB1BCCC2C7D61E01C7084E3A0161D14E6B6
923D472CB36156F92725A0A86C028FAB0F20F238C85528B8B7946ED380AAA8C3
39C5AAB51AB884232E9D200A40A68E4799E43B6B398D040A0E52A2A296B06FF3
313FE6C8A51F12C44923925621AC4EE580A496B1062FDB354D0361A30548CBCF
91DB3F7B7E87BD9D405F2E29BF660674457A70F9D1CF98C6AA76128546E89E3B
58D4619B06D861DE5E8ABF6B54377BE90C9252DBB5A17FAAF1500ADF49F8C8B6
C1A66E1CF494A7D20A98352ACB6AAF0217B4FA27784635B9B59B134F32B96597
E32D4268F034411E85D8D9A9DFE581739F38141B8B48F0E3635B5686764B5DD9
34BF229A852C8EA274290FCD3E6B6B8F4B86C231B10100D1BAA6B29F192CEAAA
9951CC6235CEB85520A70B252F935F7CDFB69A1F8A67E100D3A7331B63B17870
9E55EDCFAFBB55CEEFF1CA96F54CDF762254FFF6C2929FCB76A235705EC08804
9C1F1B0E75509E3A28C63E8E38D62A92755377D1274604BE61099F5FA4EF83D3
DD20FF35ABD92E13ADF85FA7B62AFD43478EC186834F549D3C3FF963013711AB
72B76C72F09F6D5B4B8ECE515BE82B5BE1AD90B13720D22930123109AD216C5B
50B31650CB2FE423749D1BA94D82FDE8602305919D3A29E20B6B00AB8DD9C67F
5C66C86976899315AA3469F4B4DC168A19486FB4C1D31E05643BE95D946082D3
0452346F282DCEB0D5BF219807F397A19BFFBA42C162329D74455FF83DEA9E86
62C77024836D8865ABF3D4DAFF1FCB2FB7F9F4B2A47C512F51339FAD5776CBFA
CD7D3A421B65E01EFA9E51AD12185C82FA0BBD27CC9FF01C6B6F27C39FEB34D9
64638590E25AA60E8F85B838B4ACB8A07828702857EDDDC1030D19928F2E2604
34DBE72F4AEE3AAB63B382FDD2568A537E7296E0EE3EE6FAA7C09C3F62414281
BCB53CA46A8161D536C2D0011A2CDF452F248C706CF3A2329934386CBBB90821
443AA81CBCFC31881D85C822D90730ABBDDC0F2CF53AC189CA31649DABC07FAB
D5959EB539EA679132F12265160BEB32E1DAEFB89B829BEDB5E3DD60F5433EE1
E6728C071FC11F49017FF1B1FBA0F5D7D4B35D4E24AC4A11F6D76801BE7C396F
D7264F7CA0638BC2ABA3F9ECDAB0F6BAFE6B54E58645E1F5AC047A8204F464CF
29A60BA4DEAE3FFD7726AA903C3D3F360ABEFB007D46720081C498018149DBA5
84E4FBE6EDDFA3B58A343725C742A8ADB8E2490B8E263CC5ECCA686818060AD0
2A38890882836514F595BBB8BE4E6127C9DC4AD6EF6EE0D15AE4C65321DD0ADF
DB6D67CAD0A3DEBA0D947D0AA1F03FCAAAFB2470787ADF04044999176C47F7AC
530B4032B650F8E73CC6886C5CAFF4DFABC2FE33F5B8CC04E4359C5F8DF1E58A
B167EE01F4206718757BE992651ADF61CF25572189A19315AD3E7801D81D4F0F
7E49D329237064384825EC71945DF03CCC045B0E4BA859C4668A7EAC8CFEDABB
124F8CBF10A7ED01F7290E7562AA10DF6AD4BC9BF80F3188A55927B3AD5B3A1A
502672B17951401E5FC1E44E37956FB033A517711384136291D57736A4454923
D4B4B28F24BC26C093E27D3E702F25F5E6D7BD27D6E494FEE2CE7BBCBB7A6A53
760429E12CD2E9B0ACF3AB0324616A7084723F065B7C5F35F75835683515AF6C
D0E731942B25D5FA8C7FC245555CA6335EA80DA1C53CFAF7F52C23D3D6770CD6
C298B294A1C4E6CBB8D8C619AF06231904D16DBC674E57CF7FCD8E02E18FE3DC
F62463AD80181F8034395A19C6239D1E95EEF85AB528E8CD2DA99E33C7EF0EE9
DF6B28DACCE823FEF6B7950098A3AFD46D2241832195CAC490303DCBE217F0AA
2588D08652288FE7AC7559D8CEC460F3F7ABD4D966424FADB66F4669192BE430
DE2E62EAA6AEE0D8E354195A2563759DFE0183C8D67B449516ECC3F573301DA3
F5C5D300555AAC9230CEB38F253DB2EFAA6218D7159784008721738B5C8C1DF1
CFD26F72EFA24CFE49CD7A4D0500600EF954CCE1A7ED40F1AA5867DC5F7765FA
FBE78109CAB35AC2730A761CAAED96AFDAD929A6D233F3ACED3874214E6075A6
58B3CC670D60B0DA4B4075416262747ACFFD9C16129FB088DDCB10080AED20A7
53D014F5F5EB1E3CBCAD06E8CB0A595875789BC8340086D1E58C2B1CB5633E89
A7CA6CFA4DB4C08432BA7410AC0C6105BEA2372072096958431641E18570C849
3096C911C42005B99D58516FA232E661C7AC66134A71A88B5A90540E5FD5922F
512C0A83999C07CEB7A37F77552F75CBEE2A278AA17E0E79685995E2DC852C94
5EF6F5BC9032145DFFB88B3A3F74518FEA9848D5AA92EFE8570AF8030FC501B4
758F1C0CDF3A5FBB4A0CDD161BEF17299F8496FFF2FE5D5DD1C32DFC80408D75
0304E9FDE58F3071E2FC07AC2DE0A960BFAFC38FBC00863EA9C8C5270FD4EF89
8C821C238EF04DF7BD7343B7724669B0E1DD9EA75A119F2282B0FD2150D8E88F
7B3CC749035143171FD57FBC1E6470FBE00FFFF6D3664C5D0355F8BF470A99E4
13617E745B66E31908E90AC92E1B0CC8FA70ACF742DB2A31AAA7432D7D3B52A0
94140E4E4D4D486A5FB3AFCF64BD2BB65C137CA2821EC9838CE391565329134D
DAFFDBA8DB8B2C4487DE9EC1722AC14066A7B4D50ABACAE365F6E262500B0209
CCA5CAD7328D8654B763B3EC3AC82CA47AC060FB482B26DB483FCB8E97F39B42
CDDFE0504EAFEC90D0AE1BB20B633D31290E01C2CADB4272447E9A1B860E1085
D81B878A24E96D6E16583FA908B38C959DFCD700263CC05F4975AF0F945A2563
ED5BE9A6B68473FB9DBC1ECE947112CDB791A1CA9D765A8CD75BCE0C43D68962
B5343139F7867EB4E3E29C51B85E6E6698F5B4DD2A2B49E3E433409D27604F3F
841AE34EB8744D1891AD19EB59A53C5F4FB5B0258F5785F7F31088D34B0343D4
8E428C5E1888B32E0B820A95DE4DC41E34E58256D337115369B5CFD265FAC48E
967E6607678BACB39D62F34059CD19DEE5041502AD1D4E21E95678C81B62F1A4
EEF90A1251CA9E8AAF7966EC96004C09C4D9F43A151C8AA138B59EECB77CB5BE
8C9A7418389C6BDC2BE1F18331E151718268DE4D626FADFD70DE44B561BDBADF
9EA1ACE49BE65A86B265EACB68F4588F0A756257A91DB5FD773C8B9DD0042C5E
51323CB81A8EDE313FDC3F5C258048D63837F887A41EA0D1CF255793E8AB02E6
149C5B5D952A1F13A9B3847249D4D6DA3A323B4FD6AC23A3BF70E39BBAB45A96
53B24873E7E9DEF64D7D71D6612420FD0665DDC72FE8375C91FBD90358417672
58B9E9C5C3913293D99529B8F9EAC85FE548406DE5D90A0FF8E74997F7CBB7FF
C71FC82F8D173315A44103BDF5450525308E5AF4F5EC3AE71C90564DE359480E
5EFB6D30CCD8BDB19447B728CB005C50AAEE736C1DE0B08E3CD72E458994AB17
E31B58C15CC4396CE75BC0580F75B3BC18A7CAD1C2D3424E9CD58A179A2BB40A
C54D2E45D2043D358DD7902FC0E967F6DECA7277FCA73E841737D9AC2B5B37EC
3D1EC098C144D60AC1FBCB365F6F507132D4DF54528FEF25493DB95F657BD97C
468C4ADA7CA6ECEE1BC41219E393C3F3334854C5D7495678DE754AF0AED1ED62
7EC8556845CF97062549BF859A34ECDE8AF4FDE7038436BE32EBCAA12C5A7FE6
0456189008F10D3367C4F128EE4AC806958EFC69D561830D33B63DFA6C31BFB3
B82DF9CC772D4890F05058B3311810C6867550C0BDF44F900A75A2102905B8CC
B2F61255AF45BDE940DC77868EB0CD12C56C7856D4B0ECD4E415CC9290C79FE2
4F182F554C4E5EA79D4611AAEEA72B791C22A1822E686F3F36AE23A4FEC8948D
C1EF163019E604B15ACE59F9353E24B64152A2A6292F0590D6F87622356938E8
367A8ADD3758098F96088C5C98E7AF24CFF8A8308EA440CD6712D60804E42261
6D69367A334E3AF5594456DD2B434C5CBB5D0DE6C7AF6488D173C2BD0597AFD0
91C43DA89EBDD69E579D536CFAF78E601BC228CD716E472C288EDF4DCB32B550
2C46DF4A11ACA54D221B44224932D25E0EB50B9C739F65118904A06FD3AD3A92
05A17BD54BE0908399C0E9C0ECC6F912AFBFBAF1389BAE45B2989DA004552525
09C78DD4A7B6D83F99EAD74396128B0C14658CE595096826B950B51C7F0AA44B
C1290E83E97E8A0DFE6D50894084042021808826FC99F980C81A563512B3250F
C8DBECA355C9F3EC62794FF9873F102EEBC5EF3BDE0D3313BBDE8FE3E910E0B8
065504CDA978928CC55044F08DA8151439F91EF111C1F3EDFD1E60442A1C4B6A
34C13E3AFA914D2A74B1D27C25684C3B6BF9DF8CFFC1B566220DC58468CEFDBC
38AF8EBA830172D0204028ADA60954348D82019B24C5A7A2A7E876F2BF05AF4B
CB13CFBDC0CB02211AADAEEA9A0FC6F031D44B26E05C9C07ABEAD29593A399FE
DFF749D9F40A99E521230DD11AB4FDABAA42825795185DA501879B80CB4F9A7A
3CC11FB34AFBBF6B76B9039446157BBEC3D6729CECDE9442B63AF71B8C660972
7FCB71EBC0F5F345606E2772266FFD6FE5CF40BB5BDDCD6293EE8A230B3743EA
CEB382DF4A922FE449E34BA7BDED29085B7D70E8A28931AC48A546D6229528BD
4EA9B10043954F184BB76BD00C626217A45A4B8199D88BB10B18B1A0E8AB694E
2AF3EBCD152EAD851ADA931C653006BF89F70863F67AEC35C89DA9E31C176EF3
28A147759BBB495C5D8E368956A4BD086C970C0C46FE2C03F43628C947DF62E5
078A9AECDF66A3F76C9B6DD93C12E47BDF78DBCFAB398D0D94571A1ACDC4D099
E5C7BC26B34BED980623A1AD0E13EF72C77AD77370B9F077DDC1D7CF0DFCD086
12B74D4A445E9F6FEE70D254362598A4A6D5E5DC3EDE73758A9A7DDCD4AB7DC8
BCABE9FEC0891318F579490DE05E146F5F1C839B26721DE096F5D2B450A6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /Box put
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890B0BBF10075D53739F7E84CEE95B40C3DB68D5
6E9847E37B7920412068C3DE2065A77281345980956AFAD312499818890B454F
5DD8C92695818BA4DAFEBCDD4D268763515CE077A64C5F3AB384A6DFD7DD9641
FCDA0A3344B3A14F82D478B4BE7BFC2822A4D67AD3FD07B11589B93842066528
1E51D954D7E6019F6921DB9B00ED303B4B8F557EAC7A0B0340A268B0DDB25B3E
BE0982129B0D3416CA5D07ADC689CAA181270B8141F9D0F60C60F156CB305E5B
E71D9A5D5FB3216BFB66284FCABF6D74564D1288EA99D3FCF6F29C3AA690A596
02C0AD2BB29A2D457C66031E5571A1454758212EB4D053F4C28FF629FA94DBF2
9677AC4B92C4DF5C7FFDE31A8F2D6F9477896C11CBA890DD464C9231B1C350E8
E8CEE17F2E0F5D10416F7D7FBC6085E9BE09E692951EA7B93A9F49CD458476E0
A380E1D122F275093ECFD398FCA6D714187CC12A2B16318F9E1D2B0E9EC134A2
C4D2674AA68D2E7EDBCCA383
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE505B8A69335E25F98573BFAC64A02542D3B835ABC68EE4F
0A1436DD48E963348F6F5650666F6BFF72D385A5FB67448213B032991B4970C5
79925CEFA92DDED5BE33EEE8275EEE83829329E11E4EB1E2E16669B21C3D36F1
FCA9535233B0BB982F75ACF33109F8AE7ADE4954D0B1E1802008B39E90FD6AD3
2DFBD4E8C89A9FA5772BD7C4CEA7C8F8272B4C34FD26058AA9E35E6DE5D8F2B1
B78BB131F06294B45300705B786BC0D0653933C657D716DCDE61AEAC6DBB9F5F
26C309EC6AA6E4BDF86680F4004C27DB20FEF95B0BE467B5B7F436B45DA8033A
3F755FBB8515426BB432CB6210B93F60C98D1DBC60E48CCFD9E1AC3BDDF3FB69
A81F2D36111B48751416C9EB562F65C3DB7A4AB69D26B5BF8D90B5758CD7435C
20A34F783A4273244DA0E4AB11C078B07BF2786AA78EC0527660082810DD4D12
583633A6CDA00B353267B2BE5B8178E6B7889A33771F86276E6F0FC729BC1CFE
349AED0167FEF25420C0D32B38A105F5500CA65969C5A18E0E83F6B9BF636E4D
05616D00F876A1C9EA02E2D9DEFA01B8C501C444434F42979583430B4EC67FA6
ECA1508A57F5FAD2717B07EC5EC512D732AE2BCEF21BA428097B59ECB9ED4D16
EFFBCCFF0CF648981BB0F888C44299443BCBA9770319B732CC695D238F69A4CE
691A852A0184FC1A299434634D772D2EE66CC0C4FAA0EB32B2FBDC451C50C76B
BEABAAC34018F1FBFFF33A485003121659470252685F2BC08D9AF6A6CE9BE329
C40BFA2C5B3357EB45A2ED6C77763127B0725900DD92FEAB15171D2109B3A800
C7DBF813A96D33773AACD4000D71140AE11D063F32C69E40D0F63977B44DC57D
2D73A7B25D9556752DE044C4904C375AACD66DDFDA88D53E98FE22845E85DB93
9E001AAF11F61E16B49E8E59182F722A5328A7451BAFA839B1E959EDB8B208C7
D06D533D9806D7C3CD4B0A5289FE082DE4A2845703C321EC2FA83D978A9C9BA1
8923FDCFF1698CA8D05345D393726253216892AE3EDA6AA2B3AF2960D97EE900
8373A9526D37AA5A4E9E1966ED9CFC922895C5E09E95B61F2140D5CF62C637A3
763E449870CCAD142A1E4A1795A0F4ED58AC67AB6D10E6DDDE41A932C9655DB9
F954C7006D3DDEE4675D2AD8A06DCF95A0AAB70D3985745FAE38B0D0F42EB382
9F09A83DCDB013D0701CD57B20E78FABE37B327BF42B15F027BB9B027088B818
6FC13BF9761A9BE19EB5FE65DF515AE30291FED98B2CF78378C0DE993499818F
498EE1F76429AD663C2040FA3BC34CFD590ADB8819BBC93A1941E3FB68324860
E46B54AE679CAEF45BB321F2DFC1B38A1D41E5F293394D8455C85F423FEA1886
3619BD99E8074FC270F94C8BED5C4E9482CF6AC9F66608910F778CA1B16D3AD4
7F4A0049590E716A94C3DDD4B94BB1E9E4397ED4AB68089CC6A07051C44BA438
75AF7BD75A820E2FD1B98A10A747F1A081B8EA09254B4CB529F79D2B9166C055
B7A464185094306D2321B4095D9B73FBCD6D19C408FCB345A126034CD7D25417
B7C02E68C2967EBA673FE3517A447A839632B430319B479D2334468235C76AF4
D40A729B88BC199610B8A70BD0C956F68E385FFC4779FB4AFEC8E010D845D641
9987866D15BF256B3CAB1A4CFC5E9B1D2F70A87DC48603945F87B6C1F07D752C
6A2709696454DFD089820C47EFAD481616F407E65045F29CD4F403DEAA6D9C29
DDBDDF53F17414C2B93059640C39487CB4317C22FAFF748BFD06C5459D5B5408
74B9E95131C06F46B5DA3E0AEC98409C3267E1896D0C5DCDEEEA65BB7FB9AB86
A53A3BAA62A968922F8687A89163F97A9EC8AB3867E917C98CE6F8373A7F6C65
160F08B9CB592584BB97F95BE773BD2D495570A456F240C81975436CA7DCE623
3AFC302ACD4979E58CBEF66DE7C8AB73E75B2A9011B8D892FE631AD1B76E980E
10A094D35C5E71BC2DD1EB731FBBD85B1C19053DC17578AE8C878C9852F93BFB
6A082DAA3A619F63166742DA29F8614799DF092A4B6B55B3E61281D4B9069972
C377A42603AD50375EF59633D3C9E1F8DE44AC9378E95DAF5EA171B0B19CDAD5
DF3805AB169E7571990AFEB99F5A161670B389ABC0587892446DE3CB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E0861476C6BDA40AA30151943B874CFB63DE5620A7A8F2CF6EA77EC
ECDED0887B6C00B24C7A463FC10FD2C2F18D67BFF9FC9E621DB4AEBA91880FDA
C1B255D3EAB46E6243AE85845FB84DC84256134A55488B1A6B00C672C13F4D70
9C289E50F5C1D8EF063ADA63F3351D5E8B2A5BCCD284480B0930FB24143DD785
1B5539E97DAEBC0C57E6CAD4465492780B560D7A64F4AACF00DD611A0D4AA2A5
9BF972145C6A25C355CF276F00AD5F5E4EEA8D2788534B0E643A05643E8A8303
8029E832F016A7F41B9B176926F360586A5C26C99195A6646B1336FDDC2FF0E4
0D5A3A2E5B7AF64A3304B9E86E1BAFC221A8165D453AEE422EFF10547CC2E44F
566E8880D7B62B55E06213C9491954D1A8509555EDD6F3AFA775472B61C784BE
8968101A50626A429AEFCD373482B35575207D2AA2476912EE771037F8D51B80
31B5BA4FA023A643AA617DC3B38D8B3697CECC8AA4F174F5B2C1124A9CC2E373
ED1F6F3EAEBD1C8C533E943977A590361A53953D75312631D6F07794B1D85325
1462B649443CE79BEBA97AE481AD4AB1DC86D8BDB89DADA55F2D1AE640852657
EBDB5BBF685EB2A4606DE426020640D534E795EF9019F887473996793F6FC92D
A11EA37B2EE094302A297311DA3110A873E6F7DF8F113DDE6AB0E182E5162DC7
0CD52C99C5542185168CA1F712BE96EE3F15292DEE4B72E4FDC197E724033F7B
B9128F40DFF15856EC96F5C3BA6E6CD5AA138B168C23814295B0BCA199FDEBF2
CC7849276A1AAA5F1598EC7A9A573A79CCD04CF98E4C6E81DE8EFBBDD3C355E7
3E38FF48F0FC3A3DF5B4891F92369E9379CE45F6CBE7E3178917EF80132FC8FF
0C7E7C01CED707EE67D626949BAA454CCF3DD58FD7DFF7B255BB8D78045C6F33
68050136CEEAB37F705812FB77CE978619015F83689687231C03FEB091AACD0C
096AC82B79642D2AF6CEDCB5190340A318A5F66CBDB3D64C3E9E49ED75D95704
9B85E0F168D4D12950FA8BA9E1FC687A5056FEB861893A67198B49D5704BCBE1
4EA52966BBF2629035D0209A74C21D10B0BABEEAB1C52E626749175FB4B267D0
D6F8C04CD391EFEDE4224FD7CE35E7D5460EF05BD7AA8B7DA39A26DC8F9E6003
B2EC15444EAC35A6E054D213D0A6FE97C994ED2EA14FE6FA12DD0D4E6E52A32B
048D621B04296FE74CC3CC0336E26E4AF4E9A6A0BE3FBE05D453553E147AC46A
2F2F1F5ABF0D0F03D78AE6E30F27C037FF2BB6C0229DD7564D4BDC48715E8499
206DA2C42BC1E19DB531D2A35036D25CAC3FEB287907389CED035FDEB68D4F69
6D170E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A746147F456517EDB169157DAD9D8AE5D7
EF2661E266C5C812B03E2569E0F138C2D58E38EC9F0B780C298874616D09E399
6CBC81BF2A98EC7A9A573A79CCDB6327D0DD0F821F886FB4496ECCA78FD1A2BB
CBF0CA1255799DF587CE66F042F7A5179B55075FC89BDC3302D01D7138DA0828
4C8C35A8E26752CC2EA8F3AC2AC68E70946C3E8F46B9C2DF790F79269566BF9C
9A6E54EC87BAB7D34EF99AD642B738312FC6F300093EBC7669C934250A5CE240
A1171441D03FD75811F371B3895AA29DDC6A984C0E944711C77542A66680C933
9C7F2D5A30471C6693CEA46EF483D1046E1A9FE6EFFA27CA8C9ACE821AB92B0F
5D9DC9D0A91B93ED65003BD0C4D6608A6236426C7859229DB42614A54EBFB4DC
8097C0D9B0FB95A5A87CC9FD874959462454B5D439C456BB55FB81B09E3FC5B3
26D850A5DED9EC17E11FCFDC544B2885995B5EA543CD7E8E17FCB8B4ED57D7C6
1B0C70972F86F67336647589FB0EA874920BAFB89889071729076D755021533F
B886A9483867A5E3CB8A961CEB372CDE1EA852052312ED4484491532ECA79ABC
3EE60C00312665A8DF22AACCF0CBD84EFD9EC148AF4245BFE780E23BB321DA56
DBB416890407B39D34B68BB61B00B146D2E8F794C1546CEA6E037D7CD767AE50
843AA610583CC318C66E25ACE786FE7B406E5F1F232517AA77DD3875AF98FB1F
E6FDDB6323E23AA93628A6B5887CA2263BF3F5A696EE86831C603B0AB1442AFF
5FA6C191F7A83C324AF0629A269BC5E6602B15D0B8881E6F37D510D53C60AF3F
6159041212131F18BF75E71B5B6E7022B99AA55C94130C7A4AFC72E016B43A65
AA522E7EF3FC6134D5F715878D99130DE16A3ED40825C75260C7BA8A5A084766
1FEE0F6B8798F96EB458F2E1ECB61B6A2C9887A5D0541AC711EC68B79C2CA3C6
175D4A90F08ACA408540796646E0DAC8220792B3FEB61999671C1DFDFA0919F6
35FC2CB139762BA4D20490AAAB168B00EAE492D1EF564F9D4A077B526322E8A4
4E42451F694443F3C4E2FC9541C8344D3575996B2C50A6E3D62384F9ECC1679B
6514C107D7B3A613F7287269594865E9453E9B6EF227867D9CF9549B3B5E2A6A
F748308BAE99AE06106D90DE65FFC15685F8CF6DED13F50F406270CF873290E9
9A3BD506A8578376F788CFB65E372FC69FE9FD47150A0CC019FB7BF22A3B979B
EC26787BAB2D5F893EE00D41CB48E35CE9C08D0BDC30768CCB856C1CD7DE9E9C
0848692C38D1E3016BF4B4E37EE291081DE21AF12C1240C57540E73362D1F9A0
904081FD330AB6BC5E2CECD68B9981B2BEF1AED8D00A3AE7ED338B9E18F72045
7A4AB35C68C07865063A2AFC57C5F2062F908641625F5C1C0C6A364E3100A357
D10632538A2A0CDB6AD680DC773ACEE840A11C866CC356BFB3FEED65526A133B
8800E5D9734B24E017A2E354045A20128E1705A76CC4A6F6FABD063ACE8A01DC
45383306CED62F67716BDE9F3379CE9878306CD4905832A6D7971824A12374A0
CECCAC565C16B53C7C5E1A202F5363892C77B74A200C9DC2E2179D79AED00A2D
FDA9B22773F34FFE430F51DEC9D81F1FFDCCDD178A0CFDE0E7E46CF99B117B55
B3CA9B1F3952D101D6CE60D1A0A97C99EDB3FADF880821AF7D1CA940090DB589
20B9219284D91DA3BD4A61CB3BFD0D14217EB9F2CB21F0FF6087C7308074735E
E35C87F51AB5DDF2041BCC6827E45A0370F0F2D6FDB8A1FC5066E1BC3F1D7B12
B234F60899F20EFFA823A8ED6489E6A04A0110DE316A16B9A8A6E831396813D3
F551F18C2D70B0FBD115BE7EBCE816AB40D2ECDB17E15F2AD8D3BAD0B94BB1E9
E4397ED46382B7F8A62CF533D4295155716F96B850D6FF61144F6A9E51CC1B8A
86A35082D9ABEB8D2DA4B491536CEF9D1E9F4FD8C0003E6F23293B82B65EE0DC
F0830C02BEA2CAE21DFAAFB537D8D9F0A74B63C9D0A6A9BFAA49F87C4FC0A724
1808AB8A4938BFDD1B8644456D6323286CEB879B3BDB928141D3E5403F1CB5FD
773C8B9DD0042C5E51323CB81A8EDE313FDE90D905B45223A6504CA4D48826FA
E6756223F2FF5B5167ADA7EEF2D2CBFFA77D88827236660260C19CA8BAE9DBBC
7A911F54C201E4F627816CFED662D19C21824CCDB8F71DD18800B7E40E164074
33FC9A216DC7AFCE1C5C7F7EBB14725E4813E05782683C877C7EC4C86D6FD378
06CD3E28E86F10868948EE507B47172D7B52B09828010DB7975266138B7C5168
19F07C1F01EE32CDCE87348E9A967B430996030C42BCB6B3794F51D6F7DBCCB9
A30006C7D60C7E1AA2761AF25BD01C501409DC094980FE3A0D2A24B429285A06
EBEA61BB134055B25332C4F2AFCD776ED2ABDCE78D2BDC07CED874A173236473
98EE737ED7C6090E857AB029E6C75123998FC42D3E0C3F20960FE90B3CC6EFBA
5BE1F043F38C1E3B3CB2173152213DF78D7C0934B29652E763300876BB073367
A61A91B741B3CC4B68E496316C1FCC57968F790C5E7948B72C4AEBA496FEA882
575B6426A82F101D8FEB1CBF633184CB857E6D5AB42F92904B4D0DA750DFF2A8
3A30B03BC1DB36EF6FAC16F69FC8885EAD2CAB2644F1E25DF5F6EF5B5ED1E80B
82B3BB7F5B0B954E7078DE3E31D8AE65F9EA55FD147FA2DB2E8385C7B35F69B7
D06F576D7570D2B23AC1D7040992123A276F3483AB90D7EB79A87E6467D40C46
F878C63E035056CDBBB9F4DB89659D42B100853BCBD4D0A15071AAF8079B7768
5637DDE51E631007A29FAC4FC89EC53A42AA58F08999C1DDDC1F129EF7813073
EF9409838CD519B1F9384DAB415A394588881EF3502D2588589B5ADD4C1F23B1
6A9440ADF2974910C58F6BB26C4F58D573E5546629028DCA3154FD567040DCD5
C54B9234618410808685806BDBC524F3914FB3F945E0A8B3D0BA3DB62D680AE9
DF1C22D1E205B546D86FFB6D567AEF67B112126E2ACF3642047B54B09D3B31DF
2790637E4375815EA4ABE99BE732D6518A5B8365DB72AEC255D01E5F51974F8B
80E5501D8F33616769788FE84E1E85CFE56E137BA47C2A14D106F554978FC07A
154765411925D03D58A22DCD2AEF5406DF46611E216F8B9161510B36B230EF3E
93590FA686661BC2390E19CD3DEE77F3538ABB1119F13CDF297EBD29C3DD1888
F0FE99AD7ADAD0922C1BEAAAD9B337968A02FCA0132E033BED6E64D0BD1E9C51
FE0264A18B16E899EAB7FB6A5D283005D97035874D2B9AFD4D3F29B4B1E6EDE3
0FB077310016F5279CC754F3D13AD666CBA8F8C56E27E4466907B099BEC7CD38
699015DDFA5E32143ACCD729EE43B417EFAC4D403595265F0306D9CB3B26CB5F
05EC5FBA7C19AAC361613A028572D68AB9D20F3ED4130D20DB5FB364F7BD728B
86D3BBE1E37BC2104E797474023611FAD7AC43A659829BCD60A999E9F3E78F64
80C3C8B6297958A634242E698BAEE3C5CAC2DDB333270F9AEB92A892D0578C34
519695EAD030B18D2B1B928D2CB8CAF6B4484B03FB878D974AD04A770977FBB2
C31C4F8FF8BB1E7DF55CBD0EA7805A438AAB424675C45984BC321B8331096342
44037384B36372980DE4F1819DC2B4F825D7F6AF5BA3889A9481A39115215105
5D2B2B9DAAA7D85A7F1D36345F3BC5A90CCE79572D44A07DB50823C01E2F535D
FC2C0655A9A103406D8CCCF97174ABCF4EBF022831694B2773BA052B475D09EB
09469D2BB86F7BC232B842C924ADC1B1AC7AAE6732DAC6E6E6F989D279899F03
7BCBD7DF2830E4F2AC7BC9A0512C5598CD6A8558B8C483AAE9A856CB690E4D9D
6B4452C138A84B53712BD7B639625938CDB360066803092C41828FDFFC40EC76
529B3017997B118F9C0019B318CD3A83CB0A1E8891BE5F6A0C940C93A5B74FF6
4283F15EAA51DF4C74CBB662283EA2CABC19388DDF3C5B474F5374D80D469AED
90BA08D8A72E3547B40BF4ADAD86EF5BEE825C3F850B6EE405BD38D761485512
1FEEDC70965D0185F5E174F0758420612108EA4A58025B1F47E53E0B124A48CB
687FEC13BC7E48802CC39BE1302FEBB6C5A7E2509195211FF1A494D7743D2BCD
9E84D94956A1404882E6A29731FFADE7B187078C481987BA74CE27B2C4557D4B
04E7F771105122A7F30165F29EBD4570C70F7860B7D7E3F1E81AEFECB5313C2C
C1E66069D56F6579693CB65053BF56062972DE5B56E950AD3B58BA187935BBC3
7DCC97D12D866DDBB2E9D6B02D4ED0A53C6BA6B301D3F42EEDB6BED24CEA54F2
A86A1887361F7897A2D28A562A935226FF823955C3AEC37426299AD32E960DE2
CF2E3C9CA94D43E219F06892F0F79B02434ACE821D263606A374B64A01E25C9C
7B71D4347CD5D07A9411B6E88C18CFD9B234CF2F2D603D0260B53225714419B8
C988456CCC24B81FAD59AD71A3EA68BA6A9A900EA9398CFF7BF2CB6AB91D17C5
793A8F9EDC7858C953AA3EA5788239D1FD4176B9C310D775443680BD38AACCAE
08206EABF5E61E8EB6B71AA4B19F8037836D8D8AE278B7171B945C5AEDEBD3D0
8153CA578EAF17D2B2A7B7B9AA763F56FFFFE98E8B960C5B942238491264EA29
AB731DEEDBE78843300158908F77C0AC759565A2314109D6F3AB7D037E509C5D
A4A954235A57F0F59EDB31F78C17CB202849141A1F5FC0C086DF025BD411A9D6
5745FCE585256923F98A70DE5036BD9C54DEDA6D88F609B0AA79104E10420C3F
67E491EA298A68097564A90A2DA6A2A2574BF892347DEE8E7A09633AF7B2E1BF
75521FD6C2925E38CBE6CCA897724AE8F908EF485539C45C6CF62652F79150A2
D35BD4580DAC8DFCB09C9B2F0F3258476531B36AC6458551956CA08156AF9C33
D3F197E87AB3C26371305DCF1687976964235049BD3E3CE70137A7B7FA82E8E1
5F366CE98A40838258D452E731374A7FA2B08ABBB932D5E6A03F957B7C64E89B
B59C4ADF07B4FA90460372E170BB98B788972C8F37277FC53686C2D27FFEB476
65EED274860C3BF880DC2F6C80CEC4A92BF9FA09EF0F76FAF0533551DD2C8C2B
DDCB8A5F93239B9DB45E600F1C9F40AFDFDFE2E7C19B6D1E0F9382BEA9878AEF
1CF8DB5AA29D60B224C9B8872CD9E55B2E3AE3BD97E3D9D52215AA05E690FAA7
3EC216783CC4F106FDA563F8DBA452AD22FF83BD861FCD07E1302D6A3AC105F2
8EE6A2CFEAFA21AE6C39FDE40B9D08EF1ED2E41BDDA53210944053DAAB56B107
5A0C3832220752D104FA14EE869F741128948A218EDA86F30574CAEBB8230076
EF42FBA55397E2CC27E11DCFA24B47253A03A99363DD7EDDB8CF9B4CC3BF7B29
5FB8E3918CD673DC3B1859B9B68AC9C092EA151A6F3762571629775247A6AC65
DEFBCDBB07BE8D8CFF4DC312E6A454DCCDF83FF2BBC7B17EFC05DAD545F7DA47
1CC77A08633A53B62B760DF589FB2A1C0D78314EDF4F4361872DFA2C65EB44D5
CB662BE0B2839CEAC16D813DDFFF35ABD92E13ADF85FA7B62AFD4348B8790328
14BBABA742ECE84EC3C70C8281FEEDE824560FC686802E49EDA9528B7D8F8724
EADAB1EA2DE9F76DD4113C25175B14083CDDB3ABFE914A9AEED19BD22F6E09C4
198C7AE63EE63D34A6E5E6483031F98EF3E460553709C60CDF17E6D6E4E78CB9
D61F3FD30E78D7EE3049E2E505776D90A2D1A68B51C0B83856E9927C936DF456
4199A66A432D5FA8044190358D9A42B02D8D79081A54EF4F7251DCA4D16C84E0
3F2249F606EE1D4DCF4F15301A634A43CD2AA417331E4921194F6F9B939EE166
3FD02D1E1D74F22C4DA4143A4D5C2AD9BC331525A4BBB12EA7EC525CE0D7F6D7
02247E93CC25E56B176A0786B3CE890314191082273187F24F9D209D78E0A2FD
3FA71C28EDFC157CC5F6750F1A32DD6B38F76BBFAA9AB9E3FDBE3B65729C39A7
D5C90614F22E02626ABD343F3AC0A9698AE84CBA2D8F5378FA26179EA32176F2
464A2652C19C8D31C9300E613650121894B9D280C4F16906654393ECB9D74206
B1466753DCA4A6667BB22C841A91A8AC118812C9BB0FB24D2166D5DDD4EAE075
395D7BE3CB0DFED4D966B2FD281DDA37184E620C8C9F2834C6AC70503BFBF3F5
EDD60A8269CE7950969557336AC8DB3B61E01D64D56E8C4CBB401937D3114220
AD0792429566BFF55537F41DC5950A76B816F8896C4BB18C575AADC6F5886763
3981828EC2EEBBC3928390F72AB65858B8AA6F0EDD3A3763F5A8F68A0B93B9AD
CD647D79A3E56C4B5AB275FD52B825F9C86582DEA06C1FBCEDF42069D00CFE14
02347AA07C49D2672C513510C5F90752F7DD417E32DD6EDD1689FD3081EF84E7
86D3F04F8724EC003F8E8C117DCC0D93D513E04AFD9BECE706135D9789ED8296
F3959B3D87FE3E4E2B176AF68025E0C72F52165A0DF06D6A2ECBFB29FE4D5CC6
EE8458FEA2FE94385B2AF841D9A755FBACF6167862A987D153AEFF6650578358
B43FB420AC4CFF68E997B6F7BEF0C52DB9469CFC0E9E9A6D7958D9C8465C0AD1
28085AE31D620480D82B5151EABE7353E18FF6B1523DB565BBC3A1EE19170598
C4E94B5A82490F5F3EDCCDA8B1329836CC6136E0B2DC8292E36DC444F34DBF0A
476985495B8E94E473052F20C5E417A6AFF317746B50613961F9E542A99E1E9E
AB27BEF2BCF74FB29855ABBE60E7A2F5DC169BF13C56D9D08860763C7F8F92DE
AB54453E6A4C7B7F667C14A284047744C14EDA3CFE3DC73BCCC0F2F81D7ACBBA
A1B71056D018CA5CDFEA1929E0FD99044E1B7AFA7834A95FE1307D53A8436600
3FBA0A0255ABDEB555EE5EA7AD4D7782A8387E49B8F03ADA7C7CA74633545ACC
6E1B0078A6D40CF7C7D8E436EE1C70047BA88646BAA9D6F0E16636DA27AB6AA1
6C638A6B48382CCDFFEDE240D483420C8089E81DFB3BE958C865B2B9A0705095
755901A327881880298D9DB49E020D5A7E6290AB1C4B10165DE8C3E9109949A8
FC60CB1B458121246F0C2147B13D704C0067DE90B53D9163DE8672BB96AF649E
3CC9D18701E91F5A47FF6E933E21F0F0F9F31D06A6F3355819580C478B6E2A50
9CED4243271F069DF61D27D3FE8CBB25636F48E6A41F205D04A802E45FD0239F
0F41E86F2D4EEB998520A57985CEEF4463EC7CD398769ACE9F56B1616DF4B6EC
47260A1A82EDC3B258C45EE70F2575FE3A0DEF48E5C9008EEA4F990890CFA24E
B5BA14B6722F4521E7C552BCB2882C53BDE88CC55844F1A036864BE76727743F
9266BFA212BD428B67BDB8FA30947DAF090BF54FD4E7B01311521458871B0C8B
D1AAA6452B05A9E0A4D4AC85DCAD1DCD36CB4D6288560DD839B975287260E0FA
E00E1369F7ABE64B951812C84BC29D13B78FA281C6953833F378FA3D5B296449
28DA32EAD64629BDED7F973655A8047BAA8166A39AD81188A0BCDB316CE04AB4
08327D5BED24A373E6CD0A8650EDD6F01D290275630A7BA34D7C65622708FB34
3B1EFDD4C09FFC7E49DB8929F2E3891248D81727E4DDB392685584B5BDC9308F
35A246EFDDB2CDEB75F63F693DCA492BCBB376A278F2D4AE601E817965E370A6
CE358A3A3368746A027350A9FBF947BB7C46F0C949D8A718026FA6E3BFA81B90
3519E95194C314334242A37FE3E0F8CC792879EBA47B6EF16E2C6DA9D1EB555D
555A07564A9D3C2275458700FD01CB5E99962B8E8CC2D6A52E0210B9848E6FB9
1C81497FC1AA96D6B4817323D6A88E851D672F598789D1EE0B99F19132698163
478C02F72EBB0DDC10C55C02FB02663AA47E2BDC5A51A03F48BD32FA0B0816A0
C7C6B4E3C8CF98D1B82FD0AA19633433CAC268C6BB20D3A288E01E2B9173557B
D09FD610F8281F6F34EE241674A3EE2645DA90652D589681C60C4FCC6A8AE100
116920383B0A69281E3DD8A266D484D28CC30F9DC21D974400A8C2642147D4B6
52A8F1A7E0B77D82D6A36B6B588ED0ED38C61CDD2A8431D15BFD53F1FA3B8DF5
3EE8E41302E597B15C2F640CA86F2917456CF5D301929BE09F85FBEE99D21B51
2779E121066B46DF8C2DC29BBFD9378D8E898275EEB2B9BB17486D50FF253FF6
7EC9FCE378C4940303BBD456FD31D028BBB565B96FD4E4D1FF377A5AD37C15A6
173CCBB15CFD2FD66605EB29C5526F99362C7693B01E7ECF132C62BDF74FFEA4
B0CF559A079F2FF1C3615FD8AF94F0747C51AF4683EDF97728F3068203896C93
1C86081B9870A584F81C6C24126DD123FAB23AA37B36092D3F6CE83BE0B858CE
E312A4C003B01CB922571B8E5E7DDA3913705D4DE85889C1086133C916B97604
9158408EFBBC55FA1B1F3F3E031B7169E8089525CECD505DC35CB17B6D8F433F
9402B197152704622AA4BA96347B69E844752017BD9301866119490253B6CDC9
7E1CC04D2640E97679ACEA830AB447B3B980521CA52FDCB634318CACBF994B41
4731F0AA40D28BE3700953D590A62AD8AF0F977CD9FC6A5B91EA844AA2981BA2
64E7B739C4088A25F551F578189A3285E5F32C9C8A8FA9E7F90D27E38DA7BAE3
3901AF57C7DB9106933246B30E960A439F315C4093F4AA8854274B18E9808EF2
FE36B36F9968B5CF9FDBFA11DCA0E08D087C4D099838554A169249B307AD318F
9745E6A9DB8D45F1EBAD4CAC35152F1EE78072533F8900CC3A1869BE48305CFA
07531605C233BD19F3DDC54F3DA89A38A4C935C8D023CEA0AA6B857291BCDA9B
6705F0B062A78EFC65E27CF5C83361C2AC17638689E052523D7558A09FE3BDAB
6A282D97A07C671850972D3CD9AA74EE5B605950611393C08541403FE386DFAC
2247BE094A885352C70B1CECF2F9DCA91DD007AC7D759CE74D6A9F75B373FC70
31B45B179B10EA85E741412DF41F4C59FEB8AEF11EC7D1484A695673D7CEE75B
91B36DB3081871CDB3987169479C468004344921545DD99DB567D5486DF8C298
64621BB2A03883BC623D906EC7632CB075B9D013C9266B223C04E45A07BFFBF0
CCA7BF4BADB8D4AE414A1410886EFF8D56DB118E81068DBF528C83F702F2EDF4
E45D0FEB7FD43B1BCCBF20560D772C14FED32A6D10966242774A0E978AD35C01
AAFB04FBDC7B4B8770D3E62C7EEA9759D337AA2628F08079CB5D0CE2CEAF2D85
E987DD9FBA00895D87DC834505C606643E0ED45C2BCCA0E3448730FC94AF580D
C139ADC11FA69DDC5020CC3C14EACE61BCE6EC7A9E3B71DA8E024D71908160B1
EE7C648F246AA8FB60C78AC2398C16112776678BB400C75DE3A3E70D68714FFD
8BFD9E00BA27005CD6FDE60CC49B767DD3BF6BA86CC368E9D29C6BEDD2A467C5
8639DC0E0728CAFFE3C5B6A3B3FFACED0E119E5ACD18F96868A8BCC914FA5EB8
2DFB0B03138E86C15426E4FA49EB9622E45801FF0A29945D6FC7A2D65314D2BB
69D35F3F089F755BA04D5D03A83FE10DC51DA0C4BD0F9DFA45413DB1BCC3DA8F
5A3D194C1BA4490251325AA04438BC14D47CD354A980A539A617ACB9C702EADB
545806ED3373D16487801F7A6CFE211D8F914B49D4602BB869D5A85CE51EDC81
601C6FCD650275C9828C9B2131051DBED189118B9279A11243BF04609FBE1E06
9C0B0ABC6B5C2A2B08E8F5AE4C1E037041529A9E53CF6211D6F89B3F9D78E0A2
FD3FA71C28EDFC157DF84D2F45B211A00225A607A5E867D601C60088FAF1AE5D
D970FD1BAFA2CFDE8A20546520EF3367BEBCD43247960877DEC27C2DA43A8176
62FDF1896DB204DCF51404875DA9CBAF21DC1BFC18242EEBA6A5AE45421B52AA
31DA19DA81D0885196DDE3331E23EDE760BBEA210077CADB81C773C3EC8920EF
E16FE5C7A72657A80F1CFB288E5E944D65E08722DCE6A5762EDB87EA4AD820C3
5920172BC16F63F51819C4206CB45D52E88EB1C042E28A6DFC1C6D16681FB947
7E2A1243CB87523D2492EBC0F85F5DF63C333529F06FDFCA1636023C3B45D998
37E560B854446966D0F4316983578CC350251B4474B677CEB6C248127A35AA5C
7691B72AD442BDDAD18F30DB190E4D0046924EAC9BDEC7AD1230772D7B98333D
5398A82465238D57CC64D9EE4D3417DD8BA249945228E14A389F089207FFBD60
3600E77410A768936DBB1162F16ABBA50F261D5685560A2465A0565E91E89D13
35338DDC277E410104CC34ECC71B411C533A5CC6E235B63CEF024C8BA29293B6
34CCD345102C54FE2208132979EF8740F922F120AD44F28BA8080801F9BC7611
DCF9D6AA4A8651177CB856C986119738E420E03ED77D9824DAA20B84FAA9A2DD
D4158E9AF332256FCB3EA78A9EB74B4B091BB5B674B00964CC2272497284B49F
D0B1A273C1EDA6B778AF995CC45FDBC6DE448491EE057D1A0892D6FC840E3AC7
988F2569B887412982ED98260DB84337892A232A3A1E688B8068D1DB3717525B
37D33DC7D4DCE62BC5140AB590C15346B95A72B52D8380C5112F4CBCCB78C3DF
9F8D82D9EF2CD2E03261159C7F50054928B9493CFB72DA0F5B5B75A7E3C6A182
18DF587BD534F0297E3615F4E68DB6BD2AE92B0B1D5F1E1C12B0E61751FE10EF
24A0AD0FF9FED81C2B83BB3238BC779091D87E5D195DBD7CFB9AD96E1004F968
AF583ECCBE6FE0329A031820D4D1DA9D11F02ADA84BC6E6DA0AA29EA8B96B98E
9CAC0F97387B731F438F86AA00411D4359B3AC5E1A129D34E4E1DB2ADED17246
920EC84462A1C4A7008885277DF6688E3873FBC7A10EF4BD172958717963AFA5
FCC1C753E473E21EB8BE0C7C96BC7BD5C0274440824A95B61CA0427E6CFCBC31
3ED9F5F9B0D028528F61F0B77F668BC7CD4399F08141D19BC64AF0B2552C97BF
BD1C6C0062488763FDB07939C47EB3D323D3C90009A4366F34513C6FDB2A0232
D1BAFFEA22CD6D7EAC386165819C19C75470FB635CB7271D8C8FE3DECE61CE27
31FDDF7FCF2AEF7CC2B1EE7095F485BCE6F793CC26242D918F052AA2F06CF217
8D997C4BAE6D8646785C0C82A208F4F8F34A3DA698A69BA804B9A8B27DF80902
AAFD2B6018DD0680B43A5AE7900B43027FE37891837B822BC091A27912F60DE0
2E09F6EDD7742C73BE07D03DAA4EE95D353CDED25EAEF73162A697698F8925BE
31F7E98BA78C2B52607F5AD63067BF47432AF95BE8E7504AA1542D7B23D36C6B
AA8338AC2D98DE543DC31B759E557505A1366EEAC1142E6E43E7C50DD0AF354C
ACDD111DFAF08A68119DC69C2A9360CA05073141CE21883E3595088CEABFB137
634D2AE8694C53BEEBDD14126B4825CF63C13B40CE21656E37A0FCB6836AAAC0
7BCE893A76FC1FA1CABA526EE65F6439F9FA6F27F763634C662A001B2D429D90
F2A70FB18CAF8575273D16EBC3E54475416262747ACFFD9C16129FB088DDCB10
080AEA9DA70289ECDB306F226579871CC67279A95F558EB0BA035576072FF7F7
722EB48E8F701C11FFD1B7F263ACEA49BAB119C6057DBFC2B0085C818FDDA774
EBDBE7A95500883E675C5C28DB99242A8330E9DDAED388DB7A0B4FA03C84CA36
F6027A26FF421BFCE5DAB2D853767FE8A7418038277FAD0E908C48A1B8FD98E4
EA36D07A87F9D6C0E5D31A2BB9B1494A567EB5016EA36C45F006BF7BECD97F89
0B6847370B5BC9EA4EA774B0595D87C2F5FEDBB500ED2A188680E41CEE552DF5
5A235EA7E738E9BFC10DD4C2B6ABDF8794929B68C055789F3E9C32180B57AE8E
CA4C6DA654AA4124D577D774A217D4897A261017117D7C5C55AAEF32B582FE54
F0B93A85F0DFC1C267798F5718CE4ABFBFA159B07ED5C93D976CCAD20691B072
DD49D3965FD79D8348CE3C1F8B633847DE60058E645058E425653878A1F10CC1
C84D2B69E1136A43B9372388E591DDE333E185F4E23E0A66DDD15BDED1FAC380
B91F8DE0F875032BC8A1930CA75318F382399E28AB06FCF0065DE36F91B4DBF1
2F6C352FA5F0492B73CCD90086FDAA14AE0CFC2742A66EF2BBB6B29D16487C3C
FA6F892AF5C05879B5224D3BB7D31681D75354427E16368E1BF924A8A0748B40
5513A645769B48F4B3C4262F57BB6A235DE12B38D5DABBD8DD0F6F9FD27FDA3B
150A099993B56B83709540C46BDA6AAC09689487F5E0EB021CADA860F83B7338
75079EFB568ABD139F70C1EA8869611D9D4D5CBCD692988A989C16915E134A47
A4A117A55B66ADF5E53F82A191848F9C630F52EB497E89B5F145D01D56694106
9B76780164C5A1F030379CC9E763CF518CF9E2DD473EF2D166BA507A1EDB1316
16EFCF91246FC75DE3D8AFCB7CA1B7CA84EEF0FAEB46F0B4B88192BB6AB1758B
6F406C357F05A6BFEAAEAC4737AB470623102FD547652082269DEB7CCFC1C840
AB18CB9C2773ABC9DD5B1A5F83AF6A90C0313FC09C2F4991EDD9FDFDB76A9F08
5962FE7F1251D652C1E371D57B511B52A4DB8F69D76C3BBB447074D1103036B6
95EDB12D5762D8075F69A145829864608FB4D78854124B117B2F35A1E2F724B9
928D3272F528B238359944962E09541FBB7A00956D1ACA7D8C2350B454C620B1
E6D5B8288CA707E7FA2C69204A46083988A52547BF7B3C89184B4B6AA619D660
B1402EE393F12610C83BFF918FC60843D1751DD0FB67FF10DD87E3187B485D84
58FF1D6A46682D801AAE769BE7F49BD6526B9B1584A4711E28698C37F1DF9A09
03B2FE9462811FB9AB1961065826D34C38C598D8626BFED7CB672F132E065C48
463D49DBB6803FD753A9E426992ED6BC8BEFEEAD4ADA8477F6552EEE7B621ADF
DE8A66A223AD7465B8FE6E531D9770EC0ED49AA31FA3F91F3F32707774DB00EB
977C5EFF7AFE7DC3807891D039AECEAC3F500A09579E6604D10675F1D60FCFB1
B6D26AA24377760FEA6FEE94FB119E8EB366AA299FC67178BBC57EB673F38730
E2C28D89F1B4B8DD91CB69558534CCE31AE7E157D0B060877F9FFCC4844A5984
1C7C7682105E23A374BCA91885E744912DF3620A245C8A5B229AD308A71FA00E
007F6BFBF96C927E23E338A655247C509A950BD2C3ACCFCBCF71FAD299F22A14
34E7D661083C7F8D02F91CCD580EA19FC26EB49BE412452247B0D8CDAD32D698
2637028A7DB25BE15F0AB1195D2F25778C99A04E82B1BE8D3870F6E3002F6E79
164A87AB4CED4A848913531321E4CCF342930683CE8B995EEB19420CEE8E6B3A
012AF00EF8A7E879A61719EA286FE90C2E836AC107BC883A33507560FEC3ED72
D91546DA4EFC75CB69B897C9EA83852D31F31DB5D0DAA584E4FBE6EDDFA3B58A
343725C742A8ADB8E2490D6B3B48CCFAFD2392C817B8F7FA666FBE36129A3641
9CD98EC0DD45A62C8B6CD6D07686293565232BE739AF0B70E5046A4A17B5C3E9
DAF063B335EECF830F146463EE85354BAF0C4AFBAE8CFD73A596F7C7AF437B8A
D4F2F5AB3DA5462EA74965A151E84283C2FFC9FBA8B7F9D8DA8836A078A4716A
24CDF975CC7EA03D80D1B3F78C5A27B19C016CCCF8AE794B156F8A765F5298B1
2F090260981F6C38AC8D43CDB3A383FE182EE89A49C28C2D635A298D6451C6B3
D02964A9D8352191AFBB572C2D61BFCA954964BD918A9DB9077118A042EB52EB
7800276E7502DEE57228948FA48884514D67EDFE7911E4EEE0C0AD432443B8B6
36C43D2B50F1EFE12D2352A8DFDBEB066F94C0F37AACAE40009D0682CAF5DB88
E408B799859A65C143CF499E5E03218E29844B569E2EBD6271DBA6A5B619FDD5
8DB3FD8695CC7E4D624573A635B65951DC366F76FC5B4C11DFDE03CCC5709F6D
806CFFFDB6FDF9361520D4422239A888B8FC65FD9DEFC68C0C2B37B06923F120
D2DD250D693391DEA7CB26D4A418E48A2989167B7DCE22F1803545AED50CDFCF
7246DBA338D269EDA4D6177AD9173235023D5E0F563059F9959F021413C8DC61
3D035BF22544BC8487EAEB01B65023A6FD20406E7E21859EBAA5AC022E22AD61
2B2F013E31B97F10172423BF5A5407F54179190726592F5D4BCE6738CC357F0E
B6F73D82D736703874D4991EFD61104D18E85A53B73A1FA96E48942DB6A0146A
B08A3DFE98951927F9C3A83202250796C59F8E61D57DE5ACECFAE9F3CD33E155
543275D8C75FFBFE827E47FEB12D4C3841165CE7E2B5F9CD05544030F7BD81F4
954E3E9F458653B6CA43CE1F9164BB0FE39FBDAB233679C8C3675A673E6E6554
D774D715491E2407ED9F8154824B719C8B575FD784DA7688FA287F7069D4808C
D9D7C18DD6A189304A5B5BD93348951B354102F98A86E317AAC4CEB41D8964D4
FCB5E4DD511B6A9D5A0C7973AE8E183D32A58D3C67AD87A413F6D9746B6BCFE2
EDBF4A89C4EE9C0C48A72985276AE70079BAA0ABCC95DAAFA46637704C683E6C
590BF2EF885BE65A9F57662C7908E0A47D4C92EC61C5342099C27D93A79D9C9F
278146FCE5B34B8CBD7B6D29896E8D1807150C2282F119071A2E23A9B9F38145
F1DACAB2F44A3C82D04E639C8A3488DA9CA87BC9F910524EEE46F14F2E5DDB7C
197D9B33CDA2861D1EFC1616B16091EDAC559A220F29084DD86CD873EA8E7DF0
9B18829BE2523F89F383D270C1312811B1D3A29D3668F7FBE41F4EF6A81C0F9E
BF9A4CF024C1D10194D7EF3EE7745D6460F94622AC516E9D777D6C65386C7E60
7E26481C02A184638BF92CBA44AD89CFE59081E3EB0AAAA7D87D8EAC69E3C8B7
7D780EF389B8367EC78E45BBE693904A72A20A1F7C70C68627A5356470BDE95B
95F19198D5EE9A7DB22D584FC7B6F9C35C47D639FA4FE1D6B6C4C7A6F71524A3
FC7E01BA3CCCB302F2F1DA611EED5AE7BA60B9974A0A2C7449C76238BAD444D1
29DD1673129711D3BA7C52C08E87AF023C833F2E36C296B4AF16F3A921AD5E65
45C414346FBDCCF69F29187B325AB3AC6F537AA03AB6FD0D5BF4C9BC3213A5BA
19D27374316C27000C17941474D1D90B1B2F2A74D00F0E54CD8D56C87234D559
4796765CBDDE8E2C7662221E2CBE5FDB8E63580BC6F3F69F041C7D00EE39ABE1
F010512D099E6991007574B51F1790EA75B813598D80DF5253EA093841444545
D7177A3F0A1E7CEBBF7EFA1DE6F11F14A2DAF8FD6991020450E767F2BAE509BE
09CD82AC7E689BA197B396CD462AFEF719B98A3B71E2A4EE7E20EF246C6E0A3C
23DF8013D65769CAF3BDB6BAA50BABE2CB47D7E251C0724CB34C69B407CEEF63
0162F27380860A97C486B629AA0476D37F812FED3DDD7CAA05A8DD97A96471E4
C723CBB45F0FADA7995818043B761F41DA28411430C42A3D1366F57F0124EE7C
8370B7A96738A152186EF35D59BB974980F8D0478935C577AACE253B118E0F3F
CD26977D99755C786C272911BE7935015193246FBFDAB3ED718CC8AFFDE2BAAB
56D5937DAAC2D54DD4EDC963927D1BA8B8233AC009EC59392B7E3FD59E27B303
7FD1752DF6AF33E5A6722A26ABF5A82FFC70D5688069D3A61089A2911C7D6C56
6DF75C3281ACDC131428CBE0BE100FC2D83D762E93668C0619E6C0CB4C42F5F1
0BEDDA8DE50A06B0937C0610026DFD8ADD7A7102DAFDD18952F92018C388553C
4C1DC0A7037B5A91A910B6AC680A894F4CD10296D1AB863C95186206F7453C17
4D514A9C4125B5A1A79E3CE4232E4A1335F1966DE7C21DF3510978F78875D415
94E6DDDE2D44C7385CC38494DCD832CC94C08F0492155ADDA8E704EC5CFDF86D
3B00CA7934C296F9D359945ACDCC8DA70D5339C919D9954FE91E079DCBA8B8FA
04C041A0E29BAC5703A83039CA96985A76B61AAE665224EDE522641BB0C9DC62
EE166334B9919AD6EF2876532B64A356B32A047802C9BDEE75029E991753E678
D013B8AEDF306CCF2727CAC4A13B4ACA339E375F376B7BA9CEE602E9075C5E50
9FBABC9016E62D7D5AC2A95EE29650B98ECF391A95DC4C962DF3F79C7E16FA46
3D1F514335FCE76315CA77389A431B2238DB083AAC5E39450EF20451EA02E057
2FA58CEACD61235271A975B0C11E533ACF0668F3288A152CF5343F52865C1827
BBD06810473DD85A580AE391C17BE4638F1B649958338E69CB56B870CDD727F0
B655F71017568EF083865FAFBB85EB69A6E26A45CE2C98622A6A385B447E164D
B7299AD6D1BAADEDE43E477FDB504AC6B808540C553DFF75F3A00495714800B3
06BD5DC235EDBFFDEE3E46DD584F04936B53C3C81CD9E76D9B6CCF78220F28E4
5A84B0FF35C585C18B19C61B51CA3E6C3AE72F666D681A4FA8B2477893175F30
08EEF551C2574B69A17F5C62AD9CA923E685213D53BFACB55EF49BE17964147B
02C4CA4F0806BA52F8A891A88B2F519575FD86F61DD7C7EE5F015B1BAE83E79E
3BB86BC0CFF599A80F5C4AA381B8581DF3F82578AC6FFC9216A06EBC754DE4C1
BE1E185A26488ED6138CF334D63A75CDA61370B656188C88BD1E7273E1A42F36
C0C6E0FB68F94CEBDA1CEB0CDCC489BCA1DBEA94AF6F37027434E22EC932CA5B
E3B470A5800B4FEDC4A99823CAFF87E567B96572BE6D9DA262C5151B948E529F
0C7A21052F1A28CE343530C96B7E92807415CC510ADEC7AFAEE3E54A00B1CF2E
9D4E9F057BA99AE776E482E332FC6F4EBD5E2952106E4600ED59E41847A2C431
ED3DEFC7267AD9DE87E23C236E70E1A6D7602606094B0C91DCA122F0BB3D4FA3
AA0CA96DA71466748187222315252264773FDAD954D114082DB6BC7FDAEB7C85
3A4B7B464A26A459F4A2593310245B1B9E7B8A0B7FF55338A74D2023B34333ED
B0DEE3ACD02BF724CCC2FCF1A0B58CB89C444F4564C1ECBC4CA3C544CFCA0D01
A294276F86BA1443F753A7BC8B7A60E9C5DC48A3DFFABC322A2A3F62BF60D6F2
439E2D50DCB82C026ADAA0169B6A38F6E8D65D483940C97544F888E9316A1381
F8185C146C3B2548A3817DB684926C2123318D4F634AEFAE03E5D4BE6B04697F
F3ED2A83E6E7875D6C2D53D4216E11F852EABDD845959D6C4CBC644B29781604
7EB63717E2C06056A800155E42E6B63290DABB71D4D1B394D7AE82EAE4C82760
C5849F6FC5FB394169622625F2493AD95E1A2BFFD0BB023BB23B95A95C52C138
94C9156315E5AFF47E4041A45DA7B0CABD8DE5F42B0018F834D058A09E910DF1
314D1B5A2E3CA886E10296CE26A4E176415F55FF32E4308FE22F0D0A45B8D17C
B74BDAA4BFF6DAB5380CBF6172F37B84598335AB3A61FB3C873145863BEC1B5E
8CAB530411E7B006480769434E9BF13F872380603A47CE5A30AE40FD497F4586
00B1A87AE31E65B7EFE7B1CB025613E53343001CDEFCD8F5E62795B990DB5F01
7A12825C0D642263A70EAA178D11BE7F34711A204432DA217576D9871A8E8784
028006F3F3248B5454ED6DC729CC5070524D1F1367E7D491B5803E4E32D24FDE
0B7C56732957AC35E56C635F6B316C147E4148F43F68B433E736D2E15CBE3A2C
9D93556A1DF4CEB57A1882F307F0EE099AF080659A1C90D89200DDB63772D73C
36E0280F8ACDDBDE5CD4F70A7A98F5267847CA1EA003CAAC24B337D6B2A8AA99
A53780AEAC7931FBA708E4052579960B3291B0BCB3D6138198E70881E7FA290C
6A3B164722FB8BD5CDC14E7E20CB3586C815A75E1C0585250D9F6F52025D82AD
E11AFF1EFF8F6FA46187E0BED9DB2F1525FF742755D9200C3C1FC2E172E0DCE6
76DAC7827316D2F90B3326C12523D372BEA69688A21D6EAF601ED4810A03B876
02F6FCDFB887A83C42C50F08E66B611F543149B7E31EC9602D4654DEB38E8E94
225D8F864E791EA6689395C19ED992688C38D5AB822DB77434BDC79A29F57E30
98ABC7EE49F007589A2A08E976226EA7F091A006D3E457F0FA404657430F1CEC
53881DF1B3457BD811E6152E7A6DA01FF8F441690E196B19402154F4AD4A1522
5015497AC2A59B07C199F94E3D08301AF343C837324B9EA595BAFFABFA38EAF5
3F517136457774C464F3D84202CD343788CC991B61ACB6AD7863E30EF2DEECFC
D5E0AF64571044339C2037CF6834EB429617C33666A20F94506F7AA03CEDE934
367F083F6561C939669E28B55BC3323D71FC7B4221C1A677B413EC24C29DA1F2
D33041FFA5D3B62F29CD0570748C3BBE64AC88813A2339892CF290B7D9CD73B2
B2A80AB7B924F1BEAB9F601CDA2C40EF93971D344A24F67D9508E4AC3D5068AA
B174E0965F73E7B3A5F532B99D116357AF029CBD77D99A1656CDB76C9282269F
570C0B57ED78FE33164934EAB70ED3852DB084C16B6097540C5C81A8CF53AD64
448E9130C01AB94B0657A5490D7BA7606326881C5A6CCAAC22D5454B2C1EB503
764C5B0691B761FE3254E951B3259B2EEB4FE37392533D3695FA6890A620DD86
3BD5364A28DE4283D9697AF2F4D165B73683B97280E3F8CE4547F56244DC6838
06DF7DE0E28FE4D056969AB8C04466F6B2323849E5A87116F694B78DE928155B
9D611E085902458C96E9107074347E144EBD38FF9C114D75E7B867C216989AFA
4EF66975C7C64CE5EC2AB958361D31BD648E1C0291A57F6AA25FF78D0E59C262
230123C5668C34A7178C9284E340D18BFB0BA4BEFE101D5BEA3B3CC5C384E1FF
F89E502CBB5561E9AF3C9B374D73F52611F17AAA550E93C8B39DEFE59FA506F8
812F8DA2BE72F0827246FCA44E4A772C5FDAAEFC70EA6D36AE941E3291793B66
598F7718C18CF6B0D1B1310C75AC850FB4C642FA3710C2C99051FDAA642A91F1
947AAB4A780D034BC00B16D7C4D77CA697B044812DAAEBBB8006F056F294A4A5
B77983DF1D1B3EBC3640262FBE15DEED450E81E397D0ABD05A9CB3E301CBB6E4
5FDA05D04DE260D94722956833588CADED91C5625989AFE8DD9E0B1844B116CE
5CE8DCF4C788F037BD3783D1E73023BB66A4AE15DC7959BB36A10B51E9638794
BEBDB65521D0010402575DAFFF833C4D59C1941E14E0BAECD4A9FBA8B9100A31
AD1DF7CE7CEDF45D8D75B8008CB234A10836AB34663A141DA69B46D41A04EDBD
E8A440911B183955048D808915D7BA588590785C36322BFE321C6361D12879D7
8AC6396BC3936BD40FF1476FF54922F2FD14A340951A0130FAB6CF0B56BB38CE
81015FEDF0CC3F7275F567D40E28BE131B0E4314D86EF0D6A8F840F462D9B2E8
C1F2B51F6DA60AD71029BDA0BE43A26E6F18EC0E9085AEA66291B62D69D698EE
B767B641BCC569A1EEF8A12E6263CE2C073CA42993FD8CECB8E7948261EFEC90
FFF20B1FE3119DA2CB9F6DAD1D6382F999E9F0692CB34C1344C7B86466716272
82A8947668FDF9CE6C611CD1BE1A3FF133DA6279F25F80B39F4A584B970D6156
292B8DB08399673F0DC75F1BDBE806E51B2946873E90D509B25853AB0F25FCA6
BB860E709684EA675A3C3C4F60A604BEF0EFF30EFE00E05C08AA50EABE80B564
D7AA72D05EAEE83D45EA12B8C2EBA316F10AFE920ABABE1FCB5723D66953BD9D
0A313F39A6A3DAAD30374F96FCEFB063F4E02A5A1B8F12733514B688408CA41A
769DABD9518E4DFEAB5DA339847235425AC5056E7AD9D54E4DD1BD7BEF204EEE
7DE594518B78765EE60502B5D4D8FC36D030FB2B0EFDD9A57200A82974EAF0D3
6C036B66FE05FF7E29BBBA2C52EE0385F33690BDADA2B0D538EA64AC7CB9682C
E60E17947E7E675D19901C7E8272CF0D458A8B0CF51077748D1F0A95AB030712
E24D053E101C9FD35AFEA96E669B1101E8644A4FA79BF0E2BE0D5D63D4C494AC
CCF815B9A464B3C0D47AECF229AA1EBC2E208024F3703B6B0716899B18263C29
2E1E8332654022615883F3B3D95ED3FBB8E563C2CC64E2DA3631AB809AE0FF99
F0DD777666B14EB7C80CEE58DB653AF6DEBC59D3AB82A2891C3C5224977B9464
55E674261A0932ECB029CC6CF4EB93729D362EF1C610E85FBBFC6151D81BE225
7C3E7C876E836A1E6009BE548E105149EB6052FA14D106E242C213CB237B187A
7B54F41B54433526B5BCF13ED43C4C3DD6C02669F517D7458EAA898572455534
CD8DCF13B125739FAB9FBEF8523676B7509EA7AD0D2111E3585BD961ACC52E50
F44E54C91326E481093C909067BED686BA113C18825686F9ED9588F06261AF3E
8D1343D17A35A511312DB573060A7E73001ABA76E395D789B19B969F25140187
92CA5E16B365ED83C24C44A68CC2E0C0821FA6C1C3A5B210E9C2146C0797AE35
5583D824B2BC3C6BBA9B877B857DA39049F5887F6C75EA22E2C1A23B0A23E741
9FD67B5E29F807987F3637173FA779ECF224B222F7278597CF205683610586A8
BEA497E867582A17B16335CEB85520A70B252F935F7CDFB69A1F8A67E1041C48
2B300306CB5E11A1DF57C36C6E9EA13C0560C3C8A14BF98C1530A3598F35E26F
2E8ED5D8A0B0A4EF950112B2A40681ED8E00E63D89CA32AE0687DC232178A07A
BFE12694DEB838C8B360EBFFB8D45798018A310214E9BEB7C62F58C1E729F224
EC05FB4EC009EF48E7E56CA2A9F84FDC460E352F0263ECE4B0148610E480FB16
13536FBB8EB7DE66C5F0C41B72060988FE907F39B32311E32A9B1946D8CACA5F
0DCD4EDF3A72A9A4A949376BC805CA2A372CF172D46B6B94412E7CF8B2C54489
E6D6A897790D5623EB7D6A90860842964426D9E506537B3F8B4366976D3F56E6
CF780B37CE39F605793D904FA4650A8AD23254FB4E9E9E4CE34660A7B6C08496
7A50FB5E53F0EA8ADEC17CF4BD5B6DCC5F7E835C3CE7D4454AAB910F223E3FD4
0709EACEB5AC116266894AFBA1C099D37DCC25C54AF0B2552C97BFBD1C6C0062
488763FDB07939C7885FD686DBF6C8D2BCA099078135FDF722D4C99AB28D06A0
A4080A732B877EA2DED6026CFA1807B087EAB33A3B2BFA56928987EB0BBAF4DC
72DA6B4EBF8B9D022DEDBC3DE44DD04F6367E04C3CBB3400BA3C1943B874CFB1
254F9A99F998AE7D06DE000B4293F4FCF1D78EFDE074FA6A057A6822533E61A4
C1E2E7B3AB456D19D9769EAB62AD01CA1E0C4F2554BD6F1F4C69E46C9C220B8A
6643077B74C1E100F1D9DD0E0ACD8468C5EEAB6B8AE5324CC077A3B24AEF2951
4FE023DB03883EB57564AEC4B94B42E8849A76945AE033F5D1C37EC63530A2EA
90F559625C437D4AB2016C4670C92D7236CD1D199C612555168BCFE359EEEA98
E07DFCAE1DA5FBE871D8035F777CF210384EFC671842C40D188F4E304C4610FA
7CCCF0512FDD24CB36B1F63F732A2D472C414FAC37B3A34E1E9C8CEF668572CF
91AC3CF6986C9F252363A207D88AB66A7C0DA4A116B14F03AB13D7E149FA176E
E68606F0B35312506C02F1A2826BBA36B4A8C4D61A96C406DF4CF3A843159D3B
AA527954C016D28FAA91548361B38A729CF1E6DF63A016E3F17980CE3D505216
E026DEA02B7D154B2882A031A276522741ACE718440F9AC620FFF89CFB7FCB19
55C7DC8933C690E226CCB41B71BF28FE6AA68AEFC449D6F2C5850581D95905FB
83958C19FE475DCA7075938672E207A41ED8B17A35CF2E4C380E50E1797F8558
26EAB926A054616AB45BAA486A85DBC2F45566226D9EA08B48360A2C205DED1E
30409EA873F16CF157EABB93758D7B49B76DB0ABB2C2646D3F2500142328D8D3
B40136F3CF6DB796FC6949F82AFF3FF151EDC1EF95339F55314E30DDEE869CFD
0E6BB75FD52D81EEB6FC227022120BEF4803811BEC75CB029A6DB10FCE7B5992
5A3F5FB7DB35B3D7944B49B6283A0129D49E7E9AFCA904B37EDB25A80BF2A041
0C67EDE128761D164A9843955BBFEC7213307B78378D8CAF1E08E1C53C079B8B
EAA3E0F907086AA23BCD6FAFB826793EBFED8F1CDA2D49D7672E195B09727629
C1A422D0405FB9B60B749DF353AFF70433732530AB1063F98984CC6C46F3E412
CAE11A023ED7D360444EDD72A0CC432E23DF81945A0E9729DF3EE2000E417BCD
E241F0C257CAB8981A6EA85C135F60246D47ECC90571044E7021EA984A40DAF7
FDF2FDF4017F94D9D89F1B6F249BCAAC5E185E4FFF0AF7FF5CCE31B93E4048CF
BFCDADF56B75CA51C950537F9643D44B6981772E8546A6D79EFC00389188E5C8
2D606AB2BCD7AB93A8795AA46773CFDEA40374D87CAB4A5DD8C92695818BA435
6E9666091CAEAC8D1832F2AD07EFF1919E9BA90194E24A69649F0DFD0046D39C
47645DD6E78973BF5EB3A43922976B876293A1ADECD08D35588B794EF9FE03CD
D26508432F9ACEEC0C86CA4D7F8BF0DECC07116A05B5D6D42730459DD44EB860
468A7C643142F5804346C1264135E15756B43D90E252FBBC1F618530BACF4716
5362C1E0F6B93CCEBD0545DD362FF49B08C9033A1E95F5F8A1717DBBA7AAA1EA
72855EB4ECF4832F29721F2965759EDA7ACC778D03F409DEB008EB2142A1B4DC
97D164780529938A4FA7BA0BACA855B706CFAD5EFC9D6CA122FB2077E554C9C8
4A1760A73FAC61EF6C050296ECF0188950E744AB53050CE216C0166D14BAC758
B30905B56CCEDE37F37167FBCFA2CC9AF077A23862B4ED64CD18471A49B62240
FEF22F4D82468BE65F424F267E9713229F7B3ABA30559D9E4B6B06AAF0053FF6
A81D815ABB1F31A89E1F1F3F3712315F712F719E2104FC38B591366950DCA065
662CFBC9594DDA8A2D0B424F25A1A8E0DC96E47F52F335D4EF5B45ED1A9CE37E
2A2A6FA2C2D8A082FB786FE87094992733E0E8E7B556BB4DD1B0EFDAF667A918
171169D8669AF155525E2C91A8525079B97D9FA6FE5B7DA4A263813F972B036B
CC08CCB25B2BADFDB659F305315BE273E5D52D4A69DAA10D9AC7B96C817AD352
B5C4397872ED1E0BA765B0309FE98988CAFF8DCCEB5A97352B6F2DC523CFE336
6996B02D210D844B1FA28AAAB93DC7557045787E987A0B316211C89EC7A8EC3A
02D70409252A8D4FA50EF1BEBA5095045ABA7952457E62E4081D591C36369479
139F23EB1F9D299353CDC99BA9CE2DA27F3D413173D9F296B3DD186F8C3F8658
C91B59C58B51B79E9588AFBB6A2D10D335B76934CAEC6AB8785BFB6A876FE189
F7500B393E531E77C5D38E2FA764893C50807D386C31A52984269355B641D8A0
414D327EB4BC88FA87B910008EA8FEC3E81B8D3532498E7875E1593E1DF8C371
9500A4C4A0951F09F5CDA85FDD822B626F0B4DF1B16AC3C8E46642D95E4D5E8D
E9927E16E5582217693A50FD1F5B7569629AF50EBCF7152E3715510FBF60F167
5356A9FECDA71F649EB3C250BFF809D81E427E3BF24E83613E8242308FE26F51
C5F52B538A85716A62F327A107BD87346338B9DB6F83FE557134C14144A554C6
2461266E19E262F020AC43AC01DB8BD67102E1322FD08D6A1AD08B87EDF29D57
6787EF5896E8747BD177565DB814951BE7CFE6591438894018072909D00732D7
1F63668F46B20EDCA647E66B811F82F08DFAE1979E9ADB992C57D4BC9FF7769E
0A6E389AD0B2A5D10CD4C41A40097EF750675B8D8743FC64B26BF9E44921A707
C2CF3EDBA686132F333DCAAE5B6CEB2B2A3C2A5085BB0E87DFD0B90AC4B62BB8
8965B8D22AB04A724DED273BA060E797C1BB765049E61C0B63D478DBD9D1F904
EB6959B1D3A39766501356651F2B690A9445963F346D0667986C994880FE8971
FC86F06FAA5E98124881CD477B308B5B7341714EB80B6C57DDB50EC74C20E497
DF8C5D90DF2EB6F0AC1521FBFD1538DDCF25F9748E9C7C49CDC758CA99C4B063
212655C879F6EB96BB55BF5157FD09085730695ADEFF8C47E610779597A25E67
8DB4EE7B616DD99080BF793667DE800E6DEB1FCFA76FEA448A60401A3B11DCA3
E9524EAAFAA83DDCD78D676E71B6C51A64A87FD82AC7FD782D6126DD787FEEBC
4A63D583CE7227EC10365966AF2C08726F27A20D095709F949F404909374B2CC
B0B57BA8F2F422BFF55CE7D534A2E4DC1BF74D5A454BF4485E2B7DC8C9A39E76
8F162336CEB7BE8A5C27AE952F4946D01DD1D65C1D50D6E1D486FB5FDBEE9826
DA01DD8FA5EC384E9B78FA5A7F6720D207815F79EEF626A126E8005FCA77ECB3
172F5199E5C54611D9D515EEBB7192C63D22D02BB2A5A2727BC0458997642898
4A7DFACBD3FE28A8903CB42EB0ECBEECE10F4D9FD0C5B9E9F3A14F9BFBA60CA6
556B0473D5BBC4C67C2D25384D8E7B9EB31D79E2C460742138982CEEB80F3AA6
BF99216652ACBD7F2F5349E857177D94A431C46347867CCB8E4EDFC64B532A24
C570498BBC81C4FBEB957EBC6BE93183DE178479FA333A00B88F0BA650AB274E
35E9F7715EE1E8617FC7BEC56879D91DADEAA25F850083BE6CC26AE7437664A2
7C1C6EC83AFCFCF697DCC8808A931CB62997E29B6877A1BD00BC1A7A9D57AEF1
E1DCCEEBAAE87CF5DEBCE7349981D834A1E8AB45FFE334532FFF6EE351252820
E234CA2EEEB4DBB360CA7518709F74BCB9FEE4077CC0C490F7C2A4855B442011
F240BB7390D79EB357A06CD67E2C5BD39E004F55F754A8E2469082BBCCC3E63B
027A4C3DF0C328E89C5355F29E7EE697BFFECCAE75C27AEA6C7B73B4B4E4A0DE
B874CDB1570739B1A1A213262E4D4AB784EDEA3CC6F0872C28108F7EBBF5BF77
0C0BA6C712287CC741D17C19DF574028247317FB22442B6DAAD517B60D75302E
7A8703A70517C9FE24A6930AC314870AC4D133C60D9CFAB56CE8F8D14472BA88
3831DE798AD51B71C2CEE666A5693C95962D6AC49F31A5D39135CC8D762C5E53
C23CCF67CA8BF1B1274494E363BF0890FF5C1FB5FC75FD528B2FC34AB914C268
C8874E34F01A8F3E17F33925DFE5F0CF45E34F3E676F57892E7B84E9F1842147
0D2F0274738CB7DB4E9A14291AF15CE3BBD6B3B90E59C99B4085E7065FB50E28
631D2A286B9862B0C69172A7B286134925909155C60AD3A77AEC843DC75C97EA
CBC20908E329F5DE8442FF13EBBD0D06D7E62CE534576EC62AE892310FD56056
AB112633DC84FB7743B5F73E9DD0B021F9ACD205A00D5C6228AA1D43F1C6F0E9
EA338B2E8A829D5D4EFFD8613B50B2DF38EEF34AD0B05A9F13D36244225B77A8
8166768942CF7E11D8AC59AE55F0F7DBAA322E1E5D976C33A4C1B9D5384F70AB
C8F9F74EC9689248EE97D7DC3783A048D871AC6F3464517ED20118D09F22813E
9A8F6B24CC94A37ED7FE37D7D03026506C2132A9A68ACF4E48AEA4E44DD23AD5
437110523A774873BFDB9AE479901957507D4B848A373D2FE906518513D56A96
586FFF4CDCB491617876DC12D9D703BBF1E814059F231CACE3B876EACEA2B463
B4F24C1D3D7510A603C11F295FAC3B649D8BEEE2DBF85283D1B3DD65CB510702
758F21F8DB9FABFFCDE8B4D3BF99190383F85FB9B692A0A29241EE13B4F6714D
41A2DE46FC28194AD2063A1D0C54EF86D11A29D25C36591746DD9783CE80D770
7A404B5B7F34AD778608F4CF9EDD7501A2AEE2F85AAF60771CDB854398BA98AF
AEC951690051A2662DBE19109D42CF3575A4130B81E97C2A9BC215A2E2A34BEB
5AC89CE072710DEF408694402960947DA3B6BF54DA82FFE0222F7AB0E97B3290
EDAED775EAB0D7D553F222A3B014EB44EE9624B0C96706BB7AE92041B78426E4
C7EDA2A77A7C129EE67D6D67C2BC96C880A6B435F850206D0AB69B74A7E9FD53
8C4338F8DE787EF2B604061C0118BEA317D3620FD9DDBF75FB63DB4ADBB1652A
3583ABE38CE55C584D2618007F4825DFDAA3116D2B7E450C8F7B16278DE567FB
37E8F702A228AEF49047078B06C8A968F278BA7BCA00EA900B2FCF2FC9ABBC03
23617AFE301047C9646BA848529E3D9DFFBC86682BAC2D53944F47E4D257CB17
98520F27F65D75B2E795E40A62C9EAC215ED0EEB650262CCC5BAD1744FCB6DB4
032EA0C0ECB7BBC044D8B0C662A0B19CE448D189FB99AF0D7FA4DA1316C3C527
9767142D132F62E0029C751A0D375757D95AE364394FC25E6E0D02C6840ECAA5
EB3D39A3B9FDEF15DA1F1505CDD37755796CD5F76FEA4D8AC7A08A586B816A9F
BE78FF96BF1E3CD52791A35F612F1A0E540B3911A7D28491883B928672AF8E70
6194412994A5A0298BEF561152F82FF64CD3298D11287B46482FBEAD4031D9AB
6265FB6BB647FD9FD95E0A2BC79B11AF3FD1E8FE988132C26317BF8119C2B534
65DABEDF733F2C517D970B01BF2FD7C2020471CDA35DFDD2FA7A020E5B8B0F4C
98521838E9ADF7C3C36287440EF39417ACBBED2D94330DDD281BB30948DBD034
3D9ADA66016E6C568B9C0A0C4A73C9437FCF888AA207280ABF9C548DDAE35A68
2EAD10C1DFB2086D4B465C3C6540950E27C5E37034FDAEE682DF699F0C07DB34
E62C1E3E2E2BB8F3AC8CD27FAEFEFDA95FDFC9321724DE151BA26B393A98569E
59407F4BB5540494183FA7BE1D5917AD66DDF250AA04306980ED1E7FB7D81C17
31B46A1DFEC072C100004F1C43363FFBB44D8EFD3D415EDE710F20C33DB5FF65
117E0F60847F75F1642F97707FC865BC52E3A4EE9E19717518243372BCDD193D
FFAD94E3F32BAC60D756AAAAF1C0EEDCC4A84FD202765ABC6A4C504DBAE5E044
ABEB57E2C3164EA03A90D25A8A384B4700889791F1D9109124CCEBE7AA2BAA04
EFE50FAEAA8CC7460575E6AC4981814F4AC8F52DAE6D2568042FF30F6198332D
254EC3D11529F2A9900A3E4DF2FD5D3D66E75943FB1BAA6758FD029922164DC9
EA8D9EB359D1351A62EE9AD7D60837343156F4E42B31FDA88F934359210FC7E0
CA1DC96A72C881E66D13D29B3B327FF88AD15D7D8DC1FFA49DD55E298E038109
4F0F7B79E51EE58CB464F0E175C85419F0ECC265907E16A0354186F5BB25452B
50FE34A0992AA20A84C2C0B17802B56F00F59075382C6165D3DF2195524697D9
1BFD4A30DBCA0DE70E4F4161B690A95C2D90D24F1442ABF6D552F829C6597B80
6FBF9406F5FEECC40B579FAD453DF90B383BCCDEC0E8041A496EA185FC3948B1
CCDFD580FCECEF10494FCB9330A15379659B42CD98F0F3B33B1D37130A01AD02
FCAFA5C56CCB801377B387A887CFAC1117467DAE98547B1B89A815C8E218D6BA
BAD8BA3101199048E3CD749C235458837886CF65F76101CE080133528ED13E34
F084B0D4AFB602504C9BA3ADE899F5D732EB196F99987F5D426495B95CB6EC9E
5B6542346B1A62BB574AC4F4FDF8B077F0F97F319764B1B924DFF5D9D67044E9
0DF41179115A8159BB1CF5C9E221E4E84A69887095C15814CDC192FE4451614B
AEA2506667969479D7557C5AB480900BA789A18235C0A838609EB1473D8C3443
D087DE125215E7B78BE2463A93DE3013C65E3294EA33FC9AC52AB8164A7A2D74
43368FD6795C960F6F5861F47E10B85675A15F5B73E546CE2F4699A121FD8F60
B51E00C265CFEEE148DB1736797BDF157E0C769676CEE23AF38ED3E405FA5DF8
D84FBF0A2B10054D39A8C0BA5E77691C9E81A64B7268BF6DBC0D0A41FE2E9997
7D5756818BA07132A51106760D5C20B844B70FCF00D438EDBBBCEFA6A0E9737B
C6E18082165AB0781CC7207B0558CBEFB9045A56C1DCC50E378D7071C4515B43
9D461D21D47C773F98464CA6BB53FB48792C65E3F4D4743A9BCA5D33EA0805D9
9A4EA10557037A632EDD04AA7400E375F079A12004F9ACE1C8167BFCC7C5AED0
928083553047701C4B0FECB10CD4B99EACD87C8D6213D9C3243210AEEB41B356
37718839360276244E9274D90BA343BBF6D461FD2684E077D3270ED2EA3BFB19
B746BFBDE6C397F367634FB3A505AE881B88B434EDE5F4FCD0AD0F9283D08980
F95D37453CD8BD71
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81A
9AC387913FCA9209F9142F9CEB88DC7864ACE2139716A8B8BCE22870B2A8AE03
61A40FACAAD0F82B44B4D6E4ECBEF48C6E2F39CBB2B53B18DF7F144E9FD272CE
6A23BADEFC0FC80B646A2FC08C8AA1C44A2A00554667CFAFF8A417D246F28CEE
905824D8C0FB19279F86AE6C8C6B3B5D4AB4CFAC640686BC6FEEB9C1DE214972
4C015A2D62C7ACB01966717F9C4AAE6203DBC7E60275D3E38C7F66058EB798DF
3A42628DF4378C539BAE628054B5C31D23B50C2B33943C5AB05E8304A43319C5
8B569F751361768EF816F30DA12ABDF5C63C5B1602823BBFC0C03B7A421A836A
CD4083FDE377A8E800BF093CC74B3F067CC1DF9F37F37B225D1A63E440A719CD
8CC6D148F1442F1386DBC7309C37D13848552D03C07E06969315884369E30CFB
BD715C131435EE885780EC50DFD4D90B568153D7F09788C8877FF9D119C062EC
9DB71DDBB40357DF31989908E4FB3FDA3303E6BC7EBC8C3F90ECE5DAE3E02206
E93022A0609D842ACA6AA03E96F8C117951E672EC54FCF9A8273B7989D201B16
1E870432822FD897B71CEC0427D5FA06B29F527B6A236CE267095F2193898745
610FFAD3AC143DC9CA8CB1C3931E36AA844248234F51BCA6F444C2905A4E241A
269ED51FF329D5C0C86D9C66ED01B85534A1E39BD5C20DE216B33240C40D188F
4E304C4610FA7CCCF0512FDD24CB36B40AACA15B0FA0098083597E359F090380
51C4BC551BACA6F728980ECFB1E999F4E0E329B15FE526F0C6285E5D05CFB53B
F7212E2933DD050FB0820AFA1B2ABFB2AED5544B06AD48DAD5E377C2F375CAD1
3A904419D9E7F6D38731EF1E8CB0917657EB749149E1D61A1EF50C19E72FC8AE
9D835BE39DF765ADAAA523C72A653D19D310CC10E9080C619F102E6C0EE4F80F
05C1AA36C2027A88763A7F0AF2DD0CCE40F2CEFD4D785A43264BAD874D4FB758
1C7082EA167108BEF6F7E34D958D6105130AE25923E7EB77C0FDF5286780C376
3D9D24E27F7FECB251C07A0CBF632410D7D948427FF6782B8850466A1FE66362
4FC26E88758AC01C1C98B568253442AD48691C2A47DF05F6A7466E87D3020FB2
D824E71394F6605CBE638D9A6B5A0DF28C4D81535BA76F76B16C6815E977CA50
513DA81445E93555250A43815E80B39AC00F7086BCB4B36C35CF2E4A42B114C0
7AC99ED39EF436CBA30F8EB1A6E543782DABE3FF805D54945D6DC2C09A0F32C2
954C689BB04A12A787B88A966DBE3F4C2EC9888B56E96241D345CBE471FFB513
9002DD5225DAD211F5C72F3127A60A33D311387E6DBB2951640D74E59891DDBB
4526022E00B54489023B0FBCB6540E7EB3B2ED0460F81AB38B9240BAE8424443
749F272CA43BE6C9B5CD3E674BCF858A46BB2D1898684401E25CC37C0FF9DB9C
5064E2E468F5906C1338EBF0AB1F2B5C97A5E4D6127212AB225F2857D0014DE7
F40568FC538A0EA2E76E1F62790DA67887A81FED8BABAFE9416AA5E06C7C4C60
0BF38B70C87E5ACE2C713203A64DACD5FD072694C71A3AF841F9E3D07C7B3788
5856BBA23EFEA2AB1902F879F1361AF8C0421A296FEED926836406E96C49A48D
AE1DA613DD54D9C840D4896A183FF4E395EB7A69DCE16AF779DB5DE506A534F2
9DCF33411B194DEE2EC1B99F36FA1A11D14A28C0E938F608AF10E3B31B98C36E
5AAA15FF94A95B38469000FBF31BAE9CE8703754A099D21B3329E0471463D457
0D4E89F4CD31A93C312EA4674730466C3EBE9F8964D358AA76DE110300CC7B89
8FBD8BAA1FEEEF4E78760F8A25C60981E6372E49D71614BB4E6EC7B1ED60BBA0
8F874D9E1B1661393BD85DEB50C29E3DBFD4613BD0DB2A70E57CB73CEEE6A51B
72B52020AB471FA444491570EBF12F70F2863F9CBC2CE3E571F5D8ED5009FB80
9985FBD9A3E99D1D6124A3B4DE50749E55267744E046627E381FF09727EFEBB5
2E59282E0199771B95DB671D4B2AD846EBC0109861075A936D6F2508D429C625
85777EB9E6E9DFCA889F03CBE5A9FB59C55523ACF1E394505886FBE4D6F739C6
6BA65248D16465F0743C602C6E12438E7E9CF6405EEAE7CDC599E8BF2CE72DE9
FEDF547B68A41FC346A14D58EABC55ED2D98DA057A876FB35F46EFA6A949A75C
F1DAD4E176B50DB98341C8D442F31C7CA70CA4411B4511BE399A1EFFE6AA02EB
E529146BB9E0D14D16625D3C830ACB43B26371195013F74FC07E862198AB570F
44DAA7CD767C726E7BF288414284CCC3E6FB3DBC5D11E9807F8B247CB591852F
EC9392079A91D02F4954FF97236F55AF6FBCD9AF0E167742D0BD0E131BE7AA98
E955D662DC9AD78F82C29C3DDC08B6A551B0CE96E180903891204F4EBE911581
EA3BE89E4CDAA342B9E52F30E55B902ACC35DE87E70DE8EDFE7D803CB0770A2B
0B8180E5389A54B85BC69FF37B8CE078CBFF5CC6F11D65E7B61ECADC94491C5F
F034CEA604CDF5412886758D49CE07427C96AEECF83C52A4555178C7AB4DC1FB
491ACDD3A0CE09DF3D2AA01AFC9DDFC002A9863D9382764DC241811B3912F36A
B2CB1440EAF4C36D14A899C877A1F71CF5F205C8FF35460B37921BABF917E5CB
A23CCBA7C46C157E3088F4D1C99603A5AE29019C97D03FA54726D906264C82E8
AED7E4AC8F66E56EDDE14DB1462E4F9859384B15882C6B0E2219186DD528D0DF
17F15FF78FCEB2CA616D526C530E1BF18C3FC7EFAC5BC5F623465E81758FA863
78485C3F65040DD351580824450D62A12078BC053A65AE1FFA91D645A9E26C29
A8311282A2DFA57985CEEF4463E64E0B7DD8D11FB10DC168A704C2C70DAEC483
F6942ACFB86DB9C4EF5E16FD6E2A4523B99D267AA808751385186A779C73E575
948744853BCF5547A7870E7F6196444513F4AA8D5FECEAC8EE88C8830B526ED9
264D4F56562FF445F348D19317A058A4FCC154CEEC13E60A53EE79C07932518C
BCF295C49DD58CF10B322634A4B9ACF5325B842EF91A19C55CCA6ADEB88B59E2
4FE4A96A8CFF57627DD17FCDC5BFFCC5CE9C78BFA2B830328F9A6D45FEEC239A
D76BEED158DB3BE2DC4BA1DC216B2D085F251E56B085F80C7C11DD39ACDF31FF
8D01256B7CED1EDFEEE0376E57B6E45D2F375499F8118EAF5C7F6607DAFC48AC
6FD2258F0314DA293F61D30028BB0FB43F50BFFB3005B677A74AC48E341259FC
DD1E8D932840FCA3727301C942C987A026992772DC2A0B06D5E4AB1186D81001
AE4288BC2EADC60BB6225D9CB6CA887922B117EB0E7F81000CCC4A20522124F8
B7DEACA9E6FB322B9B66DE572DA955FF06BBF51728AE6724360C97CE27BF0DDC
551716E8E06DDDE418B6E3E407307088DF1BF21C09F61DFBD19C30D92CBBEDE0
59D026A5A2D9B65246D93E36A7276E70D11DE1DFC7E967F6DECA7277FCA73E84
1737D9AE81C25EFAB95DC9FD91A124F9F5AE28E844C6C3EAF7DAB0FEED7AF2A9
13FB2CE66241C5102CAEC3992BEEF1999CE2A5574EAC934945ADEA6DB4E4DCB6
4BB074C6094FFB7D2AE0633C33C8E4823681C0A61ED898C571006202CEAFB5C3
E352E7F66C743DEB4EC14A3AE0EF469A2CDB23445830D0F304FD7A9EB6B8AEE7
919322D2FDF6C7D7906EDC7EBCD9E9B6AAF63DB3AFB9D9B87CC743CD66342BC3
BABA111186A0F38F642261843011FB3389DD944969E83C1B8315BF63C3BA9B84
9EDD5F620C7E451943A4E3868D2F9A6B78E6AC615258E663C9D255FBECA07BE6
FB4B14EBF66B06D640012D108ECD3329117185F2DCCD3CFCECB7224FC5E7E437
7C6E1F717DD65F6A274994CC40546439FA5A60BC3719653E525E49FF6F778D8B
ACE4664D86C8FDAD35CA3EA60BE1E28418837CFC7209F4A7357804EDDB05D506
686757C79C2ADE54B913F1ED476E3D86BEEA512B1FC55E137D23FE61B7D69D1E
E48363146DB3EB9914CE42558ABC90B623AFF1FA2CB3EE64202B74F76E195C0E
3F2B12B433D7DA1F634865DA6E5ED7511E1D930D074D76A35F19891E3842733F
8AC91FDEBDF9F8A426019EAF34A2B13634F55E964F8B7C21D937310590871C58
2F30C6DF5FA2097A078ADFACAE547DA592695486DEDA95AD49D2958D1F43A3CC
E7B7B9DB269FBAD050E6082D8DB99454AEF0AD0088753DEB92924B8AACE496E7
45ACE597058C23D84C0FB8BAE6E8B396D944701FDF7FD723D145E93B12A799B9
D0210E411564EF88E75FB2380977263E4EB261F6718EBF15ABA15B45CE0008CB
D8D2B7A1FADD93BD3CC207D8623EB59F6B3FDF302406C8F16686E31B66D8C1D7
E8DAA6804AAE5DE138E8A311A4A1330604D0E557EE03662BD31AF90587A45AE7
42E8CF9E4697F94F59B8AD259D2DDF433930B270C63EEEBF992ADB20C9F233D8
85BD42C04DC9300D4CFA004F89A55999A93B5A3EC2D3098ED38FC4CBC6BE50F1
4FFF4452CB1B96ED0E58AC65EE13077831824210531E56CCF19CDD93E462A12F
35E45673FB121E1AD75F20A8F4E8B29789DD95CA5047CDB13FCDE826D3AAE15B
CC039B1C6A9C21674AD3ADB75770688524E0B4D3151C5E51D640C741C6A05E85
EC79363ACC8A5F234575C256306A3E2B5F6A6ED4C48F6D4440488AE7C9B57B85
DE61CE78FD299609DE1D6795CBFB4CE95D68E3C7CB1D4A8DA1D0AEE7CAD1983D
695AD1DE3E935E231AB657C704B4FAADE3CCBBDC7C31C1FE52D8A57D79602D65
BBA312E072096DC25768434E7B56ABD8AE83CD6836A2A624A32128393B9D463D
FF8B865FBC10316F6EC4806316954E90817A74BFFE390FE7B5348DB0B4782BA6
D48AEE80D379CFEE11E4F1CD9A521023438259A1AFAA427959EE4927606F08F4
255EF756643EB591366950DCA06596B169C9665511507959228D5480C7AA0DC6
1F197A9CB5C80A00332184637C6FD2198C1D859D45F35E20C5554B0D72C262A2
3CCB48B112D5ADD2E056258AA295803C60070F8E89217F14F953CC4015C38151
4C1E1BDF36283AAFF8AD785A49E091119556FED39BC1843053FB2909D78D0CC5
BD0202C8FB9DFE45DC35209300AE63A15A7D983219EB991B300213F2BFD5B477
A7342D64AC059315DDAD1A2FA1F4E8CC6969A0E25CD23969EF9E387BB3BE62A3
51C14DAC4BEA7FB4C8F38C6C51F6431DE0F8FEB6C3091AFBCAEEC0FB3F3992A7
7ACADC778ED2784B3423154B7FC03D43F47C6F505869EC5039310EF1F4ACEA1A
40014BA27BD58490D243E14831C19698C0C0C9683827A13C1735D2C649C0D4A6
BE354B0E303F96F1A7DA6410CC5D3F84EC5C9F615650160747A724AF9C66AE82
CB864AB947E3582308319FF3BA95FAA268D83B462FC0BD10BBBB8DB7B12BB101
1EEA4891546F4AC7FCA094F32499C0F8AA33D2C7D00283804FD75276BF2C4F9B
E9BD77A75D5A1E7BEC988F06F62D50278904F0928D97C2A77894DADB216105AC
441F7544C3EEC8F09A260BFCE7C040D10575084BC081821FB759B9016DBA3AB3
9FC05FA6C191F7A83C324AF0629A269BCC414DDA1570B980F3596906BE0D23A7
1396BA0A0F3335B74FE5BC3367497C95A462341C8707177AF767B83F28AF4C0C
F952EA0D9C4176D5ACFBC48D8A48074357B1B8E5B17C698F2052A9C6410435FF
3D114F67EACD436BEEC8ED343F64C6CAC65D8218E75ECDA7292A0F2FBB4A6FDD
7D52F256FFCDF706B456B6886F5FF5F416C079AD248559BBDD2767549450C680
3B603B312979604965F7E8298F454E098DC4EE83D9EE5A229DA5B97FF0861841
31743AFD0DC1CF828D0993C56493FBD38744296B82E3908A1A0CE811E0CA2E52
A0EBB9F4998D40FD7B001C660CCA6AEA8C43CE8FFC9D1AEB97BAF55DA23B2FB4
A868BA0A41CE90D7BB6633CB481DC110FC14AAB8E9264F5EE49798BC49D9D9D4
9B9CB9429CA197321B545625093FAB4BE53BC96D108520D9CE9193DA216221F8
42FD0F3CB18D4D9C66FE5891B484C4F3ECCE8A8CDF069387E4FF4967E9F11717
A630BB0422421290360984C499D5C2F4750008B8107BD17C259B723F956B5B14
7E7C0D6AACEB4C9F0ADEEF68329D5CAE9EFC75DC15A9494E876104FF7675D11D
E1DFC7E967F6DECA7277FCA73E841737D9ADD1D1BAB1961E212D20880069F0F3
B5536CDE53D4A4D5012B54B227A0C18DA8A43ADB7593E98E5E0C75197138FE3F
BB31F876BEE000302935A55EBFE1CE914272A8F50A983AADC0604FD17B2A2F43
06AC9C0E2C687D1D9ACDBB674244037384B36372980DE4F1819DC2B4F825D7F6
AF5769BA3C34DE43B531F84B485EF8F360082659FFD797F6E37B87EAE0447EDA
DEB00764A38DAB429277B77869A70AD62AEA3CFD663916700C95E0023599AD8B
F5E4383BF2D5B1F79DBE83B6B7836E42C2E1AE0093867B0F2F8C4E44A16A51FB
C10F2F4BD0EB7475E396C85116A9D3FDF82014EB00C07DCD76514565D3E6DCBA
5BBF1E7E65EE55B3A8CC8D2229A01DD3EE09EEFA659502F90DEA0CEE99851BA7
2A097446FE8D54CEE9CBC3B88AF70F6D0234ACB6350CB1C56BB44AA5D7005841
0088780E87F8A0D2F6D2FA07D508BF3F6314B934962984C7FE400CC9AB1E5F79
2699F15AE7E181FE3ABC4B4C70E21F3AD9AC49685171C47A257EBC1FA6B40E10
B77C81889061E668B9444D08F3EC366CF071C473CEAF7FA64B863164AA97F309
B76EBD1D860A54D8E656ECEA88768396EFEC282AB93B7CCADBEE9CAC7E77D79B
A760EF4C53A3C983853C30DFA6B0093FC96F298AD1B5807C33A89AB14673D370
619267FFE6A05DCE65C7B986CF466B6A832F1921A6949469ACC2B5EAB9F109C3
6C9122359A60190E6C42C713A9BC911105DDAB231758BD41BEE389B057A1F7D2
5215EB9D0F26C738D1E8782D670AFDCFCBEF6BD68AA64D6CE1D7C82A1E46EF79
FDC5CF1DF72D2275F3857BFBB4FF234B2192EEE72D2CD5E415EA5C1C28F4B537
D15C66B6CA739B8D92F22E3DDFDA20460C55C375A40A34BF6BDB012F333DA135
67389FF89C666BAF1696FEE4BDC1B32589E1427C1749969DAF3B72CFD1F579F4
A62E705B6DD2AEF3D166BA507A1EDB131616EFCF91246FC75DE3D8A915DBC82A
1E46EF79FDC5CF1DF72D2275F3857BFBB4FF2296C19E66F93DBC8E9CA5E86793
FA37889936F823DA9CBA746BDC1BA4A84F7B70846E33CE5F285F32FC4E53A284
1E737ABB84A750A16A4999D5A59AEB5FAE6FA51F6C8CCF447A19D91B8CC30481
B5C49B6ACB4DC451F9C524349EAD4DF1F0DBB3869B74C2373223236E809ABE92
C2630C9A877AE16BC30D56A0B208DA546903B801BE445518F14E701BE121A6E3
C832FDC31C1546BF0855A6767030D9B6B47266B4A1084BE171D03696A026FA7A
544E4D106B9A315700669D9D8A3D985F44DE6070E8E4AF6424F3048173F52CB3
EECA756C4D24FC6054D922F59B105DBB74686310F635AE6153D9E18A0514882D
4CCFE9D44B8952190FB9EC8360698A45EC064FF735101C9B16BC27110FDAE792
2D97BF0BCEDAEBBDA6BE7764CAC582CDFB785921653201A8230C66DEBA105E89
909D76D034C9A5C6A216EE8C2D9C96FF0A04F2EBCCA2467174529C592950326D
E46CC1E57DD4B2A8821A8506BEF79EC524565788A28F5870230E9DA69ABC8078
8F2F72CEE5F5594F71A24092D1CA9BE1635F769E2AC1459B0B3AC1DC117B6296
C31A438AD167AD6C39AA2FE5CCA6028CB3A7EA6A0BB569A91BCF947E682976A4
A993A413FC97F6F1331B12604C28FE4D8F7FF429F96D0DCE41EEC1EA29EA44F3
F8493AB33413FB84F35B3C0016089A6C4D67EA0050A0381699FE2E38BEFB071B
9FFE3D7574FBB32CA8ABAF8CDE383085DFFD5EBEEF83D696C0FA27B86904477A
22C09610E936D310AF8455122F4C6B61307071FBEB6E8DA8C43C5E1C317DD3AF
44E46800FED97CA40252808F6AED21A9D6F3EF87869378858BA7E6E918D5E464
49525A4A5A2932DB6208081585CD9A312B09793B1C1FA05637430A13E5AE3E1A
3D5B471CAD468007C4A6BFEF07D313E1ED2F47BDF624179D8827CA4664F96F70
03D7D0BD14633673BF1A66D0126713294E13C1A4571B8A9E6D98EE5C2084E767
98939F0AEF7E64F621BE09010CB6F43790AC69F122BD9618E23C7FD95CDB02DC
661ACA0D9FA5DA0CEB0D82EC823434BFCFE218A4B5FF0264F1EC9818FC80F9E3
E06FA21B47A2C431ED3DEFC7267AD9DE87E23C2411D06FCABEAAA6D87458CCF2
5F198AA55DBC4F8AFB25E33D6830FF6333593140C974A8B13E94CF0E77EFE6EF
C2F0C2FE513C93C7EB2528CC8B0472B5A579EC88E8BBC1480D4976695D2851AD
FE75F0E8AAEAF174FD8B2D5264FDA6E40432CB09DCCF5C286D5EB04E5A7D952E
716DDE9DD17F51C40339BBD717BA9555F70DBFCE390F10FFC62821D7082423D4
6EB801F8502449684418493C3E014D603933A576C6B0758D49F3155D448D505F
73A5206D1647639FBCAEA8108A2649D23FC552CAD67A60480964C6CB0783A8AF
EBB8E005813FC0D89420F1930E18323460DB56C9DF95B90D45EA22620C2FA7D7
521D7D4B3FC1FDA5061C6F4B994301864942F3C18428C06EF16DAA37D7CAE4F8
5E3CC5AEF1EAA75C658E90F0246C18C21CF073CC1D7732019B86C11D799B79F3
3BB09CB6771F637D534DE9FE49A53A3812D7DBF47D9E8A2D353B48627891CB99
B8C759187CF9112E3619F9ACCAD376725BFF2760B9ED7576B9D9EADFA0D51077
ACDE9DA732031E629834097D62B5D90F48DA5BDB8D01BD0DF36D531892BB3AAC
16F85A63CA278DCC38682E1BC6D134930242730DFD14B49376780164C5A1F030
379CC9E763CF518CF9E2DD410B31012ADDA5B9ABA7F5EB2EAC54DB67BF9CD44C
49474B134D42210504E4254BC7510C4BDFDF53EB3D5F54D0C6A53862B4ED64CD
18471A49B62240FEF22F4D82468E075498FE2FD44122E511E5FB2FDC8CBDF6A6
9012CF9846CE3A9A6DE5C947140AC48B22EFAE3EF8FE12D52CB3A260C7E0FC2D
A6ED47D61F83DBF89585DAB88E81AE9FD0426205126E4CDCC23EB4C431FC6C1D
BBF79938BA64859723C4637574DAA16916B8CC6DC32495D5247D877E4B863070
61E7A19A3AF4137889983657F78257CE77F03D0E9DA4E29707C31DCF1707AA65
83AFB9A309EB1599591812BBB5C8F3CE43DCDA76D261E3F7734DE2DB7D9BFF35
01E5A6D23CF1541ABF3B301F226510EBF89944E4E9C5376A9F2841845CB62FDF
58F84CEF83450F3CF96A040F4C2047DEB00A172677774217ABBFEDC33DF60D1B
D15D023EC0FCBE6548410923051F875718FAC168E4E2720E8D959D339DA26151
5C42555EF75A03385FDF6C7DFA8FD7D02B80E1A845766CDB597CACBFE0700303
409164B5CD1CB0F12CC3632AFDA9076C2B4D0CA7D89ED2FD03763D20BE507F7E
56122CF46DFFFDB6FDF9361520D2E388DBC639CAD5B2E83C049DA71FA49785EC
5565D2B3A261A66C9F2C8501A2E9324D5E6F0F1294E1C0AC67EBF4A840618B23
172EE2D3E6538CD9B1E12B834A6D01EB50C781646E30ABD086CF9C09A6B0FEE7
416646141CCA188014A29CCA5AFD1215D847550DC0F06DD1F83FA50D4F154867
B579F69E34040E2AFF508CE7AF4B0D544E70294FCD49BCCFB65347FD1767DFDB
6F85337F7B399827B860FB08BF9D15DA7739FAB5D8E03BD8F283FB6832C3E10D
341F8D147A88D61C5990E609001B853B273DB140A7DC69895E465C1ABABD4CDC
88310748221F5BDFDC2306912DAE1934E475C3AEB56C96D1978FC7659ABBE845
A08BC6EC9EDABFDB1CAFF5FB8203CE3B25721168DC1E382A5267627FEF41D963
44A05EEE4C43E2AE24657176B6C8D3A0EB5A8C229616709EDD4096C1D4D817E3
96C6A55FFA4D67E59B58C6D9BAD063D247787282EC4820B3C3A8D7EAC66D120A
3911D284DCAE2018F883AA804CCEC457CC6213EEDC75C8890DBECB670000924D
3BAE8E7A8066D804B89BD943B49ABF548E5D92C1D6151D1ED96241CF76510076
26E9D2EFFD007A8E985FEC263E6C90BAE36C27D704E88F1F7BE09A971CABE15B
724B62BB0C1A5263449707BC0ABED19F4F1ABEA27322584D473A1A888AA4DAE7
7864042EF587A6D6C04DCE664BF83492D166B205011A3E283257FA60C5AFAD3B
71CF6D6772E5E77FC5742D4D77F4B9576213835AE7E32A2B401C36C3D58214F6
DEAB86E06EACF7F5DA3BC32030E4E23C5E0E7E82C4D1F9BD7278685C4CC54FE1
C1C4332F05F5AF14E70FADCA465393A7DEB7DA08B3012A99FB2FC7F6FF7AE570
BDBA718AC1E0ACEF9AEAE22E5FA653C2698E05E0E072A7DBA0702C0CBE5EDF6B
D0A5B47D7929F5C9317680A392DE0CD7AAC72A99F351D824F86D33CC89BD70DD
41F435624F598030F2E7121F6A610D640FC7E512A28BF6C12496361A53953D75
312631D6F07794B1D853251462B4D522B6EF8FE6D2DC18EB4C02C6BFCEC3E71E
20E6D98720013BBF6307EAD2720BD9674E2AED09E56CC6D3BF927657BE2D0749
3302A5492BEA01CB223FEA3B6CA4D0A35D6F2C5D17804371F9AEBC100D7A6D14
14C37CBD273EF593B596973EB054344F62115963E3F61A1A2774E6837D2DB796
482A00E2BEFBD6E3758A5A1CE621ACE547811799B1D7893DF52D57BD6C1A6B74
4024CFC65AAF320264BA65EA8FE3B2E77F515CF05968797241B5BA06E190C023
55C664139419373923D5BE1FDD292F80E973E271248B2E3AF05887FD5142811C
2572A1D4B9F9539CC6D9F441AEB22F4E871755911D8FAEA73E35EB7835FA1C6D
A4635171C47A257EBC1FA6B40E10B77C81889061E6696F50954EB8B347918C49
20C7142A2AC68231DD2AF574910705DEF2893D8D4BD1C3ACFA2BC75EB9471489
0422528F5121B7A7D7A973F2EF67F2795E6DD8CF55B98238D6654F8B47476E40
98ED693455F82F098F49FF48762D1C9622E0B64CD190A4AF3020654123563C5D
6ED62F1387AA1BC5F00137C6AF5840026DA68D8DF87CD5567644A09B52124E10
51A715399BBD1A6D3704BCBBE1FFF89BCF8129B98D35736FD2CCBB0E36AEB664
3C283A61B6E8613BC8134939CD28AF21976B42B06A63719C44432BDB419B04C9
19DA628C6A5B0F4F626E8935AE2943365C505CF5C7955AF2EFFD964AB8EECB15
C33CFF111F801E31FA0889D1561CB28638D1D24AA9F358AAFF93B9564AB4CED5
632C12606449ACD326A76B011D9FDD66C24C5342A5575E940A10EF9A7C4E0857
59F390036755C4BFE971F6DFB9FFAC965ED71736140A0D41AD571329C7FE5460
ADECF79C3543E3592283C6770B4087ED9EB76ABFB56774C4A21133E594461685
A92D372D4ED3F9DB786D7E7245B9B5DE70958048F037C56C14FDBCE691048469
BC488E501EB5DBB042B02CFE90432FA7D98B533F89DB0F21A61657E268166431
92F6AB4C4265A5C2599F55E134AC2DF346CD7C05F0C4B63DC1C10E03B9D34C67
27AACF1040ADBF7713E3898334BD99CFBE66C4FDBDD9B9180626E338FA32B67C
16195DE9D59A0F447B8DB69CE8FD6E2ECA90C6B424F1D39D11670BA89B298DE4
0E91D1CBAEDF3D811318D493DC71793E84BBF3E2BEE2EB813B03690C774E6DCC
F2D7221490784231EA6CF28982A4470A7156F1C7312FFAE07D32B62AEA32B58B
8D127C00F3B953C795C84E1A158E799D50610BA45F2003568AF44E2EE4DE711B
A128C91C36EEE43CB41592BD13837B9EC9735996A1376BC209B8D579F6A057A2
7AEF243C4B389CCF9385CE645C882CDB6A03A7921BB9F85B93AC64F9C82C455C
AC60CC9896FD453CF3AF2307B191F79C5C6F070D7E814EFF05F881CD7EF43871
21F72EEB3A9ABF13F7A9C46AABD4D0D976EBE8AE53D3AFDDBB926B54EF0C41B9
8D10342A2BA4F9908402DEF9AACE7BD76B3D4A244E3AC7442DB6A705BCD7E2F9
DD7C73DE15B222ABDF7DC3B76EEF17AE4CBDF387FB03FAA5AD122CB4A90F479A
EB32B0CA993ECF07D050F04D4CA153663EFF8A63016F79C7D0E464A57671FED1
E50936B0CE6E364B62411E6DF77D4A4DDF74455394437C3A7B477AC27F75850C
FED5BDB2F07349EFC5134BBD646BED8080D44243E74485FB82236249FF6726F2
D6775F15948A9D4DC82D6F60D7DC6F714656E89DC882B95552C5215183E5FB51
605BAA7948D6E5102CCC8E7AEE127E914C372C6E2DD84989E78792EC3F50C186
322A81E6A8368780A2E815A7EC49B29EA2F4594EFA2C1C079B0C777ACD0210BD
A4F06EF57BFEFA0FBA572A16A81DD123F8434BE971D9EC8149468CC0F2C45ACC
D61E6DEA7CCE2D711A218FC3953EA7B36F464567F208953F9AEEC1EA50C522B5
A42C4A99B079ED011928C2C8CFA17D95D50A7C1599E62D4FCAB001D5F9DA84FA
530D65FD2738BD6BC724446933E8927F3AACE64BE6623CC4CDCA1DC0B686ACA4
41E316ED0CB3CCB6ECBBD05FB823FD79EEBAD2F9F0891F553381C5E352B4D7C4
C1678904B22D75C8E8D4ADF7A319E9EAC6238093C798878E5D5087FC5390338E
CC499C043E346A4DBA66B7EDE932FFD9780C75301CDA60558F65241DEE49409C
10DB07153317E1A13947E293CC426E38653A16E2A7EDF6D500E9237793DBAF2C
6AB5E2DB571739092A476FF45FA1A1CF898E3FF479C1EF67CE435AD93677B705
BC81144F2E45854E93CA8D00E814009234E2A36EFBD854F868BC9301D33BA670
0EEC06C030DC43B2245F9D24D31A31F06EBC65712C870E62BFDB244441198618
3617BF19EFB5DAF155F0957D038B6FC5BF776DB24668F0F4594572EAE33CFF78
6BFADE79FFCBAA6606E892B2E41A173AA590B6C92E254AE642A2EEF5D51BE02A
C50855B9158840F97FA94CC03CF388C8AF7468EB28FD5E0CBDF9E23D1FF320EB
F19E60F85CB9568AA9C68C085E87B32EDCAFFCED2FA9A1619C3D1065724C6F56
79589C83053D4C8C9B53912E217B51E90F13A589F452936A798BADF461C448C5
480CA1D7A929044CC07FCD6CF9DD7FCE413A0B2CF777529685854F63EC8FB112
3A12157DE158671515E8FA0324852EF95789F16A8421B4FA121305A1AE54DD69
30796B192862AD337BAD6CC06279077389A26E7EF7030CB43C182223AFAAEE62
0EB7E7F02C11C1B52C95B6B66A2DF1FBE1991088128B8B12C2B28A050B50BD46
CC83DDD732C8EA609E2857FE8377112784FC50B3E2940B0D30B506FB4732B2E8
8F32140F3893EFF849FE4E17A69F02E7B4C69CA806A1A347B174992DB8D542BE
C631C8069D0DF3B6F3A5A80891684979154D98437D6BBE4C8EEC74B6D9BB7D6B
C5924BF9AB0BC0438C5F9AB06D6FA688C48C7DCAB3F09B9350C42F6BF7A4521B
21554098DCD8F7DA254922301AC847E5CE09E60F0839874318C8389E298F5546
71CFE508839634A81ECF5A229D2B16EF77A39178507E41DE72C0B30162242B3E
F7756A035C0529533E59108C550FB89650C5B0600791191AE0D2C2D576DBD6A7
3FB4C0722AACB08ABBB932D5E6A03F957B7C64E89BB59C4ADF019950C6276EA6
1AA9465BBB3A56AAC8D14E62B83EF68CDE87804FE10153467FC0AFC951B645E3
0ECCABC655E635DB463BE72AF1223D0690DDB88C7DA9D59148324E7CA0701024
42574818D8E2E330E2FE5102B7F4DF3E4FF521CA5741D8C57CCF85B7887E6A7F
6B6E4F61160966AF27B74B21C9F3D6882E3E909D80E0762C58ECC4E243CCE91A
946487E546C6E433A5C5B9FB7D5B97F2B4B202F94545C8C3A9D70992C1F31DC6
753222850ECF459A7BEA8D8482342AEEC5762713C43E7E94884C06329D340EEC
ED08ED58B05FA74B94FD084CB58F31EBFD5EBC6440498768C234573DAA11A489
B87A3C6A208E9CB0B30F7AC129D5E7217B10FF89AD4A78408DF8ECB0A02D9EED
19239FB927915A02D3D85B0C237669DC17FE1A48D20EA8C5D2A68A4127CA7332
E5039A2A7E32F2389255B0491050D86369ED418F2926916FB309B314347EE3FB
1EA13799ACEB62CB55BE2301E115BF38D18AE8461F466E207613B6C091C7A10F
D77A10F08ADDB19E494C72ED471DF04820F4F3A6713E67E7C08467C617E31DFA
524A30DB697FB4139002DD5225DAD211F5C72F3127A60A33D311387E6018F5BF
F946CE8D7834A3410F5E6EC14CC8E47337898E5E8367724E6A7662499EA3FCC2
78B616531C0CB5BAD1940ECE80B6479023DA0394E3CCA13502D03B122C2218B8
7DC1A0A15DCD491B2BA40939A647E01CA6143950A0D13DCCE128401BAB4E3322
2A22ABB177C6607F014F0310C1E7BD29FDC20E11094E2852779FC5C0D5DB9D39
648317DD0820EFEB02CDE5BF84E5F1E8C8572A5A86DD74D4FB3A9FE077F2E6D4
384BE6BC394E71C5DB81E42B90ADB935FE3468186ECD90E2F15FDBB395191E6C
465F4AA552F9CB59DC4B0FEE8C937A0920796C09CB74B3EA1DA5B74EB358437D
0CEBB9E03109C593BAC09CA9962533B3AB0EE6EF76418EDA7CC6B8795043E5FB
6F899C3CD8486A6DA3E670E6D13BC51C01FAFED3D47621376F2A271728AB7439
3AB3183B6CFFE1D0E2948B24D2A7E6A98712527A7F3FDF0C07D30FB6436D5875
3F6AE969F727C534CE5C9001F9E7A0149021BE5A65DB754E14D890F42F4D23B8
5DB5F2BD66726A544C10942C271713B28F9F33282D2063886DA7006EB5C0F757
82A3C48BD6B7D4DA8C112653B00D7E484A88A248FD17FF0E7A075A554F98C451
C7059F491D1C8BE038ADD1FA4019E1C78B8C7656766444617C98548A8EC0CC14
829F7C67999234D302FD1E40C28703DFB713F881EA0F4B81A8F1FDE4B3C92CED
078A98A433D6F3C4B442E014E3E5A5E82E52DB5332A895046FF12D01742E9AAF
ACF2CFCAF0517858C28A24FAED300D643F1880D27C0F7D73029F171028FDDF8B
55080BBC908D26B5CD10691FB92BC2FA54A04EB649B111671B43973E31253DAD
08488B1C71AA6F08A5FE3F6222ABC942F7B152702F7E48B93155A7DE83B3A6DC
7FAF8C2561841226C56160914266B1D28D74185B0E0FAC89BEC8ADC3FC027EC4
7FB0EDE4D2906CF1B55597831D98B643B81D2FCEBC963155762A1019FE6A9467
DB7E5464F6CEA824787BF86ED78492C31CE4E8AD0913637E245B375AAA5B76D5
95F18A4289312E74FA9C289A53647EB6D776E3BBBC735D9E7226D2B353CC752E
FEC2E91DF8E2DC63650E22804A5B31B13418130BA661F22AFB71F8026DC8F788
188647382BE1B7891A84B9697E22FC61EE575564D48A537CB190E26707CDE0E1
B29B2BB9C4F4716519A4A62A05A7B901F7AB8E77C6FB72D7CB3D6953F1416C40
FE153C7E73D86FD65663DA0E08018ACF34CF9BA5D7A937AEBEEC84B992D45A26
80BAC63497C593C90728B12A42833DA3C710044C03A37A680D1F806296BBF942
428E9FADC28CB5AF48F8947D9BFAF2F57F0F6C4AD7C698D46568068F98C3564F
42D2F7F26014DE37C4DCCB6B3082CD71C69A1E1A3AB1C1298DF12BB54B3EAC9C
3325FDF74E1B6222A84D10CF5EE66EC13A71302C6786D05D419441162EEAD0BC
CA6315D5D70AC07AC571FE97F03509863B9CF7A0E4A8D5214D07B149EABF51C8
5F0C8A7B7BA0AC8B5A90540E5FD5922F512C0A83999C07CEB7A37F71BB8C4C08
F359CB4473250995CB6F5DA6838536F3FE0B38EC7BB696C8285F78C66D154289
455C5FF2D23C1A59A2944DC972F44474CB35738074BCB9FEE4077CC0C49D7185
B623A143311EC892D1BB9554D34547816955434DFF68BFBC34A074CB3BC8C175
4662B5D3FC0462AC4967765A50D653FC3FA379FB4FA0AD9F83269A99D550366F
C8714B92BD48CCF7CFA30A7E92FA628D056602E7EADE6F2B3E168EE1B0AEBB2A
BAC2B90A514D97941B12553B13AE64F9F960EE62E049E6D9BC9858A3ED3CAA1D
77CFB4A424858251438F05B3EA1F686B35F0072DCABF52B26423E8BA630090AF
D344BB225F08F47868D6C4D857CF0A3C6CF4B205301FE5A2F54624315981DB9E
59213A134B651EB7A024989A6D910914C0224A700E1245ADAD0C701A6F5E771B
E54B09E2D6EBFD77645845B7C08389FFD5AA6D6AED2DC26C28A403BBCA3435C3
FB7971E9A56226D46A1174136F0A04A5CEB915B8E21F640745A0AB62F15FA8D6
5B74900DE1EA95B981FBBCE8D846DAE64D91AA7BFBD49CADFF1DC7AD838B897A
D728B35D869CF7874A1F48CA79E025C3D54743A3B0CFA14625FBF274F3794F04
4EDB9552BE2C55747D7AF3101C5F1A2A1BF6C0E2572AA0624592BEBF74CDD683
40D52E137B1DB6FF17B6629B871F0D3AF01E55645C56BFB97243ADC4813F842D
E44CD9352178217879909DFE3C012CF2809984881E57668BFAA1644FA922FC56
B0B93D32362BA966DDE41AE6A21FD20EB82747C47F18DC85145900305F388143
6FF377B1500EE02F9B9B8774237EF1899A326BEAF8EDE7CF319D42D7B7B61296
2A9DC4B8DD8DD87504652967C679E5629FE5449DD1BA7DE9ABEA28C4E2496F87
61C0638E0F7508D281F5762ADE506C2DA47286A8A2312B11DE4B488136EDBEC1
4C5256B9940F0800E6DD26001BE1FD4BF642AF9525279536814044F4AE7DAABC
43A230FDAC3D9FF0B8CCCB4C1E7696D16531A5EED36C30AA15C66D5398C145AE
DCE5826302220B185F12F8DC154E4B79B163C08F53AE78243C52D4E02E82A4A4
310980801A463964F3A0BBB90D85756EBB96B5021481EA4E845488B79682BD09
F8D07481630EC3129072AEA5778A135D164A571B22D1D619980E73841F84F59E
0500496E84FD5E9A7E4A28D9EFBDD34A443F263B41A3B2076595CE2A7DAAA94A
4B95D7E9C281194A84A9ECEFEA5023317F88FB64830A2CDD5277003D6F1D46A6
DDD51B3C62188C66D7D12CE54F29D09DBF020D89506CD1270C0B3EA235BDEFE3
E24373517FF148B2CDA2B90CB5884440F464CD57295728A8AFB1A5C97B6B8F47
63D21E005D89FAEBBD7D8B06F3FCA5D7107E8B918D946E250F561E5E394ACA6E
AD2890CD407F38C53B3E51C9FD432F22202E89A91B046BA4CDDA6E23B0AFB2F7
9CA39D61350D26435EB900ECE26C5AFC283144EA933E003739EA80DD65A63FD2
020938E02C1C72FD8A4A14DB003C5D21197F835B183FDC1269D70A0B14D4F9BE
76C4CAED815AF7DEF664098CF1A167444F32FDE1796595709294CCAA488C37CA
EF08DFEF5DFA13FE0CCA32024C378A87CFE7506B67F7A6FBF8635703C7EFF67B
9F15A7315285D2565D7434FF3C75A20CB3C1B57AF37CA806711890C1AC5997F2
1A14E7523CEDB295474F36E7AB3493706076D62F4C407BE252B5F31039CFF52F
2855C8AF27ACFD99EAD434BCC277A4805E6F068CF203053B151CD82DDFA79D31
F0B4A0485F51334BDF5CD5E855A60000B2D49835C34DE75CAF4932693BCE009A
5801BF822C193040C8E053C3F1EE0BB0AAAB446819939C850C76B37EEC59A516
F15F22949AC658037300F1E113F3BD1B4F3ED7F9F55C21A04F1A6DF8168FA228
6D8C7EB944B03F3907EC73E5B4F9B71156B357F62608909B7E4BA8223446F5AA
B34189E5C5ABCFEC51A249DEDC76E04CEABF371BFE2347C17AB8C17FDCBFD6F9
553E8BCDA3094DC141B331BB999963089C9E8131AC54F43D9D7AB95C97BD691A
D8934FBF8FDC7B97C76DF5FDC62765D55AD993DB7F0907EA177C36ED9FAC7854
AC865B2BFEBAE6EFF4DDEB727B4321E24A2D8C7D3358EE391B31E80FA5998089
7F9471F36AF42899E7278ED6D5DB95FD665B591E12E4DF06B3CEC7D015551B07
AAD8C85C6196DC28076CF4C4A1C62A4647AC1D5FB8AEBC6481A94C6ED5EAD255
0500073598D17F51C40339BBD717BA9555F70DBFCE390F10F87B5A4D7682D1A0
AE125DF60CFF05C7454B82F991CDAF3344A10115DEA01BA7890B3A1123170D99
3F727ACDC8C0F00E871C90A6175956C54E9E368CA67F79A9DD91ED489EAAE76F
173FBB4663DE44D9F0B3A184AFE75609B62AAB76074CAA13A2355873BAF0F0D1
B5262B824ECCA9A0C7F74A4D13C03D0948B6F864DCD1251D26551CB2337693A4
3B080FD17A292531B5F5E64B876C58A4CE3CA66EC2EB0A098A5D9D4D41C9E55A
7E4EC94240107FE7909AFFA25FBE1041A54E0C8A79511ACBBD91ADB807ABEEAA
542EDAC9B6ED8F254F6BB7D73551EE33D4FD3CC697DF01C1F094DECCDD9F43AA
B88640D0E9347881AB1F62D9A8E4A799A0706A34C9C8A243A6890CE854E3EFA3
B883E515D1C4E5829166B8DBBB1DD948462957711B3A26FC69AA03ED308F28A2
3FE7A7DF7F4EE6D26CBB6620076B0AEAD03AB485F43DD669E9F6D78F7F3A3D17
9B8593FC3F87DEB0F663278B252DE788A0B966B6BF54AF8DF51679CB3AF165B1
9E278ED874F8E46362D3ABC30D65F4C45137F1848A3687D5BE45FEF3D084AE1B
3DDDD239B928EFDA00F21BDC87DD2D8DE1BBD7947B76889EF72C0DCA22B640D8
7E79D24C2B8F38438B6E4F14296B301DC46D7041C10BB06215A25BD1913C7954
B5C60D0F7BF68D98B214195ECDA182220298DBB1EB1FD9E609F1B4C62F58C1E7
29F224EC05FB4EC009EF48E7E56CA1F98D0CE749F731509FB6B908695967DE2A
007A5F489A2FBDAC9D5E5B894645DEAF72A185AE5BDD16F3039A9B67071F0C58
187DD47CDEC4452ADC8A683A2610DB6EE097EF1AD94FCD6D373246804BA5F217
1C5C56B6562A17EFCDB0BB982F75ACF33109F8AE7ADE4954D0B1E18021CFABAF
619DC53F5A2A0C89BBF1AB58C3DBE99A3FD440A7D3BC5E4EFE77037671FAAF08
633A13C303EAE11BC5E99B48E34D0C2E929AEF3C8034A681E5C185DB2E609482
36429CC8E4162D346EEDC7260000BBF6A73BCE98BB53AFB2C6694A816A7E1586
15829E59EE7357336300680C95450394AD4A2DAACA192E92CF195742D5AEE902
297EE9520CA7EBF85DE9F84D3AAA119AB947B5F5B9E5E1A0C6124B1D4E67DF3C
21F1D051AEDD11F65FE0F14DAC42A2880B683118A3A2C7C7355F5E45FB504F62
6A4AED7CA434A95AF0B24B801710B398D9E9A95138859A8193A17D1369E2E54C
06B408FEE2918DFD868DC4480DBD8130BA96CD51D02FA1999CB88EA646C764BD
2088A3EF04FFBF0B61BE229F35324501AE0F98009DA9ACC5F02B842CD02CD8AE
FDD97BD87B20D735CE102C0F60A9D44BFF1C27F03F6D79DC011146CA28EE32BE
98532AF24D5D2991A3AC877F8E16E0C392019E33F268CC072F36EF12310D3095
32C303C68553C91CE83431F239BE883C519B66952A2595A07CBF1BD05B68870A
A4FE5CEAEFF2DCF00027A9D62608D532F4F5933A228601B780BA2B6C5C54074B
89611AF4987F7203DDCE93170428CB54EFDA16BCA544851B91A8F1296749A72F
7BEA1FCBD8592BD24249231076ABE1BD29285BEA0FFF15CE9237244C917A134D
A39E567075C6FD56077C00902CA6AAF0C12EB5696A397DB7699DCDD94BB71BDB
3DB5D727DA85BB43C88FD0F434D5AB83BC9B7DE897744D2CD1E94E3A3EEE36E2
EBFC879CA86CBE62103F587C5DF7D09B914ED8C78CCF45320151142D1CD4D451
CCA2F463235BA2C069E2E976668478860F81809CE7D928D72A21FC9F4C00BE8D
8CFF4DC312E6A454DCCDF83FF2BBC7B17EF8C886C4679EE1D81DC3E988A7D9BB
43AB6E6B63E503BE0AB6A71A1D06D2FA9ED0B02168B32F6CC0FE765F2AF96246
1626B5EC47DDE14A666942B10E15F853CC86DAC21F1A67DB235577B68003BA14
073E2702296B284F803745DEC5FBCB5BDED0C269EC967551FAAC019A93A7A160
4830272EDAF5E261C77D4130BE3FD062801BEDEB1BABFAD3DE6664E363591C86
F9882372BF002C07632B519225237A100E865CED746D25302D405F0492BD7ADA
007696765A48BE728AAB48D8D37D238A935D5742BE83214918E143579A012D18
FD7A725B42CBFFA9B024C740B0A9B84DDD8E00C8781645BD3696C4B6A1F1F83F
5E5F4ED9574A65B1D2AD8D5160C7E9F656D93EB214E1FA04F01C1744BD3FAB47
D4BF85FFA623E6D3B4CFF4CD3FCB4805FEE5626641060E55159270B4794F9C09
45FEAC295D137ED55276BF2C4F9BE9BD77A75D5A1E7BEC988F06F62ACED2F5FA
2FD1F6136C813C949E82A7577018E81507055232F1F349A85B3B6F37E3D2C356
8B2F7CB639939926B6B3C31FC9AABE7ECAA5701B0D2575AF8A8596254E942832
EE1D2D26278D146F968614587DBBFC546E899C8CF8DEE363237782E3B2AE143E
60069683917D8D87F03459018E883C2A3E8826B5A2A74206C0A2FD237CDA518F
B06BA8E9447E008ABD6C9C971A749BE93C4577F5D68C0F97B4B29DF4589570B1
0C9878819B80F7BC667B94AA11566D652AD737D670C54B521EED1D06828DCE13
D4F8E88380FE26A1E6314ACB088F4DDF2EF281026023676413B57CEFD1F5022B
E5B15E1D75D8A3950397E5EF69965FD9ED3705DFE13EB7E3AF75001AE8C82036
22C7290C313690B5E5EF775D62175B6409A678916CF881217B86D2EC79CADD13
2C551ABBDDEB4A06AEB42B939458D9DEBC1A753F044D70B5366304116296EDC4
7A40EA032F27237EF382AEBDC3130A05259B885E07B50701A7A98C545CE60AC8
47D16346DA185095B15ED77C6291B18D211A061CC05186F56A089E390113DAF6
18B339808C173E0F18C1CCEF5353BCA7EF8CE6151D158AA7D6F4DBE64EF67F52
2F826B7F13CB803E2B1D3E833B9F86AB3787C9DE181BC1B72D6702AE620AF391
022A8ECABC9E50D69CC28A88FC4DD9E2B7C8DF1C241030B68FBDBA63C29C3A62
24238CE4F7F89B3BD508E371B2A78B89881D1E6F9ADFDFA0981FA75DC53DC7E3
9ED5DF5D5B049F09A572964206713100C8DA1A4DF6C8B7B019CC31279CD27DDA
52E34AAE14A41C0BFF9240EBA6DBA43BA20FF624A59FE2DFD116557EE7668528
DB216195143E8CF31C5D103CA1E4F457DA4425317A8D8DDE3450CC30F037242E
A8FCBFA18A2448C08AB6F43F7EF7F2E24461AF56F587343AB6ACE30266B45596
55442B7A3C1BCA84112F5D3A5FDFDEA2F071E1A11C58D57C95BEA86D6C602F27
D4D17370D21F9C43ABD7DABA77FF818154A0B50ECB2AEEA335B5BDE7D0C6E14B
9F6330FAC9972903C2C35C5D1483348AAAA8F66D12A8DD4CF75D5B36BFE119AC
55130DF559F1BD82AFCF28BE483D01113B2BD7AD8D322D32EEDA3DFF2E9BE053
6D7854B54D737C6DF3962B95B4B4D186076AB0A3230CB3DAB9948677AF0CBFD7
0CD2844F5601EF69F8182D739E6DDFBF4CC6E06F7F4E221AA17F75D36F7194C6
FE02F08BA994239C9716711F492F317C6BE4E3D2EB53B2237891618BBFE3A012
DD55FD0AE1B8C194F43CA7F381FA1C2D25BCA2B4E479414E699B812685A5890D
C3FD956F374A2272E6511BD0987B6E4A1FBAD528ADB4433F04EFFC1A953F569C
002E526244487C242639D8BF38200B1B7AD4C4556A6C66B986A873AFB9013764
27AC06A6D53AF4F2C664871EB1A07B3A6946D45571FC760DFF6B0326EFADE719
58B056020FAA6FFBE7DDD4DBC0EAF8309A635B958CF632FAC74FB900E04B0B13
B26BFA8A80D2DD1D12BEEB0ED5F63317937B10342C15ADD49634114F909BA26A
AE7F316592E7DE134F775A835D46A69D1C49DFA018A88CF79B4B972AE6F7325F
973370C589B66EEA4DF76933B7194FD9F3E4EAF4D145E30BD9AF179FD6BC1CAB
87B5EBACB8F10A27E2B97314A9BFED3E1145BF1782B8437C16AD70B17B9AFE2E
0C0729E5F10461A8DDB90EC3250F5205F9E44D43DBC6D9B820F706BFB7420351
7EAC88DE894EE7FD9B7283AF109382E0FFBA9018C10AA63542323E9B3733DD3E
E7DF7F774DE5D0D0980DA8C7E9C3227C34D7640F5016E9E8FE8ABEFA3D85BF7B
6D1C74B6AFCFD66778364FF72B116D0C52E5E9849D674A1D183FB7CCCC686A7B
59F013C89DAA23399562865AAA86C1FA2D643CF953FBDFF9AB4FF7DAB21AA6B3
05471459F3F9E6C7AC7ADB2BA6B75F4F038FF6AE864A217029623D5F2D192FA4
ABF53BD1A28704B84939C7E339BA3F43552047B93FE85F460F1ED1372A84A1AE
47BF09D6A0EABC7BBFE8CCD3F6A21C5A0CF54DA689745B877D7ACCD7F6B73929
BAA7D6002720AF0089F623639FD3511FD8D1F9152B0F018CA61E48EFCDA4132D
4899C7CE20D71646286C2F39ECCC768AB03B0EEB8067F8B3A8D2C6AC6938C056
D1EACAA924C19ED5885F082B33616605D8BDB4DBB01DE573C039463C85D6D80D
2E3F6E3D9B0F29434DB3C3069A75239C4DB9902640D98D228F5875366EDEA7D1
9935763B4BCB3721B6370725CCF2BA061DE84855EC9193922E31829A69E2B42A
ED8B7C9729675F9DEF3A7855418DB98C5C8DFBA2792D675DB574EB20E6CF5265
80DBED3D87AE473351ABD014CD380CEF7BFBB68CDB7C90D7F60785FF17A1444B
2D1596343B2564124D648B1E09536CB44A9046A350839CC7A06F95CC4A98B9DE
4976D3C4FFF60734C14F8F8D31B1B2C357FAAA44467CB2180AB4667F400E45E8
73E7398025B179511840510271C3A7D4EEF65EF5F7024C75B312709B288BD7DC
6DCD6FD5D40ECD4F49D4602BB869D5A85CE51EDC81601C6FCD65027186768365
EE6D09B687A7BAA7F4034FF97C512C2C654D802016C4BFE510F180C63CD039D3
99B1D9C4208BDE9BD1C7B3B6E3656F1133D5AC86B8E622EC0CC46D04779EE820
A1F13D100A43CCF1E496D5D564C917583530C8D07BBCA4EBCB45BA7E9A67F161
EA1B875B8AE95D4CD1FD55EE6F662CE8868C1CF7905F6286FA59341E68A6054F
CC8F00A8847CEAAD3690C5D73FC232347B4A3852F428A4841B93E01E80D140B1
D3E84DC0A52286CE9CF86128562A1379CED615C2118100B781FC15A582A2C7C9
94E1DAA88F72831C12A52AAE64EB28B620A5EB34CC8E51496842F98A95BC9453
4501285318ADA7FF6A5828D0A8928962A8B873A7339DEE670AD4769B9E763F69
F5F53EC7555AD6564B0C2F3B595C9F8B8A3106AC80DB85CE6633CCBEF40B89B0
7BD04EC6CCC6D5C4515070E4EB6AD1236895FEC1855FAAE316E0BA82D2C8952D
424F7EAB83B6056E8C08ADFBD34C9842FA826114DFD201B608B578EF95B1B632
0CB7B552FFB89F11EA22D02AE6333848C9632FEF822007395A5D78C698C7366C
1C453FD7CC6E94C1EEB7B14B8D584BA7468DFECCF5BE1B12A00F107E3B13A277
9E62F397DAEE458E60E6058ADDAA14EA57388812D2B5D2CB7FA127F49BD2B5AC
CF7ED80CEF4FE96FEA44BDAA2DDBB3D49F4CE26294BF924C69B6CA2CFECE06BC
E203A1F200A5F7EBD0A7DEDA931A3F3AB2A52ADDF6EC78399D18E6337C10744B
64E655BE7CD1740656164600A63B1E8EADD19E252396699126A3C769848DC244
DCD11020148DFDB12EA7DAE363C007C9D9AD64F8D4B95A3472C69B786130D6CE
B0514F29AE697600849713EB0CFEC562332209F3BB6C732E191427FC63A7A675
AE7AAC07018A865FBC10316F6EC4806316954E90817A74BFFE3F3BDD5BE4582B
4C98B73630B967E4148136D99ADE05235E7E234D8B851D3FE8B9ED08ACE95939
2226C2D9AF996B8AD0B39126E6179FF4C5DD40AC274F3072B651C69C6D75B3AF
AF00AF6D367DB450F76362FD9E1C29E1A345C03F93E598BA51322F0548A74AC2
21796FEF28187ADC77AFC00767CE1BC19F391E08E575B2EE78E04C5FEBDEF74E
053DFB264188186301575FE6C2D37D8F90B509ED7176E4A450C722AF53D42EEC
D5FC0D9343070BC392C7ACCC3FB3E4038F50162676F6D777C370DDADAED2C7DB
70EB8EACB1D8A253BDAC2DA7BBE8EC827B9FA2A1C49BEC33DCE23EE53F5EB857
A86592A78771A5BE413542F1344237BF65889EE9FDFA11A543D6358BAA6FFFF2
0ABD378EA3E09B6A96E35D642A2FD3CA5AE9A9D9B585F9D490A49A50E08D6C48
10474C709515D6A6557ED09C2D3375F930AAA07C0CAAA57932CCE22798816FAC
800F990AB27F9AAC1CE8907F5496570EE524CD9C9FFCC8DDD9897A4E8994AB17
E31B58C15CC4396CE75BC0580F75B3B8D3CADA760514F3096D12ECF20972B58E
10A8538F7BDD416B5C8EDB00FEBBFEF051806B0984B004F3D2E9322138A2F58D
99A90B43CB8C1547939EF2F31348D48E48DCA979010DD43EF4D36C3C6BFC310B
412ABDC95F0615C0B5FB41B7C7648602DD62C32CDF44DD8E430DCB7638E13F9B
543C02BAA1E989E1BDDA6F5B1252670E35238A3F786DA11AAF6409C9BCCEB325
B5988BBA50810CFADB76BD6E2B7BE25FB77A60D04DDE53028BEAFC09870C49D6
1C485162294547525ACA6C964A1E08423D9BDA91822373923F8A3EFCF2FE109A
30D87414ABA2676B03B3060C3CC75C7D9F22D433947287EB0A301D916686D396
EC0F2E13B3A1099A46ADFC9FD09C33F30F499CF5DBE572B082EC10C4838A45A0
8EA3FEC1B88AE0F6576384D456A3F67BF96E299ABB918FF662A5EE19C1360B5A
CB813FEDD15DCD2B4FE22AE09DF3F3600FE89631FCCFA1C86D5327BB0DBD3998
E1FAF95B38C37DF0CB58C972E3A3DDE8CF1160D1869F461DE358037AFBCD4C9A
323769828C5D999A6A53DA200FB56DC483BBA3EEA535009B3A8AC755C4ACB41C
3B8C70FBC5D462FB486614A7B50251D861E2DA521BB92A1356887584B94B00DA
BCEC84A5888BA903B7D571D7D0BED41B2EBE007B95C1A2031DEA011531DC12FD
859DA64EABA78F8C85459E49995EC05E1C5D85FBA07F5F85EB5DD9ECC1EB5EA6
12AA0CB1A9B056402EBD718910BCB5B93E04FAA62C2147ADCC67517C05D3140B
0A40522035B2875A44EF7DAFEEC6B06D7DB4B3BE25BF69AF5168DC1B69BBA87E
DCDF6918D106959EBBD9B87651D0A83ADAAE5427689ED559EBE5BEE0A331DE60
80D89FD9037CE9EB308D4EB08F41F3C2AB7B1D4EE45BF11BC8A5CE9509756DBE
4BADE6118F4DA07346171F817A462A067DEE9D4CBEE4DC23636D83F81ECC28DB
55A59A2A7CC71A97E520CEF18D77C93470857058A2D4E08CA6D6DB9BAD1DCE82
AB4F8E7D800B6DC6690E945AE88661A8CDA9614FBD54B3D4EFBFC63A3364659A
91DDBF843D63E76119CA67DE7AE30BE86371DC189E1F2891DC18525E4838F2A7
A697C3F18F402EBF6C56CBC4B24764D050C69599EAC3A4FCCC29386254DE597A
E4C6A8897F9E44E3EC0544751FB70ED5F1CCBF4A75C9541CE2EC94D8F61BA67A
AA510FF811AFF97366C6142BCE4473932308A1D1C33B7ED241D48F5DB2174A71
2F0A1E33ACFDF4F850DFBD14A12E05C70B6412C4E4378D0EA7DB19BAE8A38B7D
803FE2C67A22346CF155930698C2E76B71C22AD65A76B54376BB68783B63BADD
D3605467881F7CA534E4490F6E53F1D972AFABF04478516C42AF46BBEBC72719
38C0FAC75080169F7301CF3C4BBFF09A901AFEC0709D6C32CBB29F1B5D912D96
569C2E45CFF465AF2FDDEBA8A249D1FBA831ECA28E1110862C783931111D2A9D
AC0C40A40CE7E45D3CE6524CBF56223468C987C1883B80126A38B28A2A66828C
4CAB067E6F73AC20C8ACF206EF6A616B5AF905FF7E29BBBA2C52EE0385F33690
BDADA2B0D53671B724CAA6C346A08DBE65B1C054C0587AFB35100BC9CCAD8633
9B1B853385B5877A20D4B5E9E26C70B028F425740B0D80F2197A5002738F9917
6AEF34CA6EA3F431822B5C7A9EE4B4D7B5CD62F6203C31D9CAB21566E8B68C60
485615B913A00461E8A7DD2946468FA6CC0A06191D9165A36B79DE786773EA72
EDB7BAC84AC54B45CD2A59986577E0795042A5DC3DBA4B99B1158F4693FBC31F
85BE838C0841BA8EEF27FDA86CF66E032F1B0D49461CDD6493DFA98800C31CEA
9AF82AE2AA5CA952A079E1ED9416BB383C12155843895629B71900A3ACA96791
E391EFB307A27F866C9C0AFF5C36C2EF1EF11F3D2EE51F9241BC5F8829643C98
362E5DFF8D686C4C38E3197D40F745BD6E2806AE36278A89B090DF1B6C224658
27E8A0B8E0B8C95C208C3E590F45036691F1A6FFA490B18E3D38139114DA56A8
3FC9AF59940CAB5680A26E061D2F60989A2DD09C3DDB7FC6A25976EC69FFF9B1
17C01C390C3B2F870E62BFDB2444411986183617BF19EFB5DAF155FC6301F6CB
86871B8015310B7CCD19092E38926AF3577F20FAB7B88FCC6940967105F6DB2A
3C6AAB2F000A9CD93C8988AA8FA5A38A2A7BED7CE91AB3830B682067181F1E18
527A7F3FDF0C07D30FB6436D58753F6AE969F72B1EFE29A003DA8B574FD56BF4
A9CBAFDF2B1BBDC28F68D7E819E076E25C4799D60C2CC73610B087F668AEBDE2
D1DC44E0972E52406DD2EAAEC94A7C22FE6C17DB6F06F83C94AEE4FB12D9EB4B
069E3C6460A7A1DFDFC053A705F2BF6CE7C365D68A64D44FDF8C65B8FF346471
992DCA437432E18527EE89B1CD18CE8F6865BBEE2C50DB4A1B7F5F86A2ED82D1
5FCC3FDA97D5DB0C39392E35E65189AF87E4FA193238B26A7DC6BB321D23CCE1
6C49D5BF9B05CB1FB6B146679A710039E6666835C2D79EC99FD56BF9D89BEC7E
504189315DE0E93169236EEC7E3C7ADD9B6FD7F16A7043460436FE0FFF031CE2
0930C273EA543FF78E0AE3487EDE0A148F2D79715A87199138664F3B0EC26DE1
0F277743C54C36FB1E6FB57DAFCED1D207D6716893A2B631360664A35CE2BF47
D21F6A7D4E95C2B8C78DADB7682DF46C8A208FC3E7B71D190D240836B73D166C
BE5811DD097EB0065B1E01ABF5E2D8428D248B1B0E6951962459E5DEFA0B5F0B
D018CE255720FD7AE5A86853261400E889701FCADD15C51FA62DAC3031E1E7A4
6E37E11C0E801D5099765AE51E69F5A96C3FD32EB20E911EFD85CF9289DF78EE
12F3DEB4E33DCD967D167E90C4B8CAE2E44AABAAE30F105376C3964BF75AB5BE
7639CE0FC2C17634E2F501BDAD29F6A0B4858DC52C5A8A9D7A1020F1647CCFF0
23A404BE28D37CA8CF48FBF19FD9398B0A7E8FD29F50BEC1BD11A79BF0A08988
4DF1DBD9FD5C47785C433D4E18A02ABA38F55742DC36E4FF07AC0FC06AB586FF
1FD4C383E2785EAD36F41274FB0BFF94B12588540C0907E3B61B9DD2525F5051
D6FE6B333DB1294356F8115338B221F2F871D499CF39FD8F18FECC0C511B82F9
E49E31925D183E246F9162435B75511C6E9870FC3825D5560B7ED120FD36C671
09A249A03088AE2847AE58E9EFC4E9DA426F1EEE653E11F8027CD26E22B5B745
E222CA480F1F22083A34BB431077AEFE4C840EE5707CE71DD2C824E9AC1BC95F
CFD42CF08A2223068F6A9878AF2A1572FCC0D2366805EC51AA2954E3A21F594A
1AF799CC1A490224BA0FF3A572D2F01F987029EEC652612CE1B99EC6765FBBB7
A2ACEB6B76CA020D42CC5DBF066D9B5BE89B9E370438443858B81E3EA2FFFC86
409023DA03942B545684AD997447474A861DB73CB7639FD140D2153A74CDB85C
4EE381CD67F05D485785B643A3972656820638CB316D079E7E378AEDC45F728A
5788DA4DA45556DA11492921556BF9EB76599D29E0B3CDCE8BB00A9429CAFAAF
47CA876366076C206ECB66614B2DCBEAAEE968D3B71F576256C859884963457F
B40DF07E328A511400F0DA12BA61F879F418D057D61C17FC494848C2EF812608
4B6A0714F1CEB183EDC7B7B7FADBB0DDEBED88A6322DE1B661F5F18060CCCCF3
97875CD9277886572AA8BEE500DE45B0279C4F2F9436D8CBCA32
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC88F86B07C1097F9C5C5673B88582CEA8CD622F9B0C79
E463DF7F2F4C6640FF3852BEB520F7B23D8A22E7E601EF9CC6D0A2E6E82E6840
65B82C6A3A6692811E2B4F57723AA3A6E27076A2F63D6CE1FBA7ACD844E732FA
02797B386F2EDCE9FF9F84EEAD17B366D678E61C6176FEC09C94B74DFC090CCC
40AE9DA65E5DA02E7A7E8A840B45B752AF11A279BA06F821525DD0F477831176
84C80B29D318260FBC314986223F9EC4DB5B0EF2EF5D424C6DA581B49C709E1E
98149FEAAB15DFE7F94977CD2041DEBCB1FC8F4F3B288515CE43713570027C3A
C603C44D8AEA1F9821E0124F9AE3E5A1EA6D1C6304DD03CD20842B335D7FA068
735311F96609901AE3F5EBF70A777E892F5B7B59DF5377CE8622F82EA3D4BD51
B1C7DDB9F2C31CAC3C31CBD886DA508F4F1B051D110607EFD0914F27AAB77D2A
42103B51739C7CBA24D989635B289E5EB0A087319F567E3C50F98DFC652FAE88
AB78C203C6D210C162942911B3230B8D462CB2090B417B0ACA22B640D87E79D2
BC6EC256BB95AC00C80736108036887D178CAA33E6AD70D7F0ACC12401A36F6D
CE34D7E99BC0F7AC24E1BD2CA63AF299F716B09B512A591D69D954434AF81C53
491FC19E2AE2BED5FF62E55296BAB5E636A0A0266990557129E38321A3084567
97EA1CE02419EE2B7592C81DA96CA0E6082C5AB23E126D3CD469E24B979DB7A1
62E0B6E3543FE2A4894925D7B8DBA0E71F8A2A0918E28ADA1BAAC14BA91165B3
1FFF87B90F1557669F292E9DB936F18D0CAE3B71FA129B93D3035A23352E9DD9
7AA289F96062D48B58A412F5371FE7807F8382AD10DE0076596DE85450C7861A
38F2204236369C48A523AB2DFED9B6E442F861DDCAA9809173E09879C1324FD0
998589D6E046AC145BE61D1F77A592D83A577B77F81BAD985C73B05A79D3C866
1A9ABA4B20478BE98D0CD6403A0CEE82391AA72FE8C003375E1CE48D9D7DAC7D
581318D98098F86960E1482C574DA793044AA4A7F090ADAE3FB781C6580DBECF
4AD6822540D36BB2C736225102573D21FD0B03969BA1C1D3D2B2EE4CF591CF93
3BD8B554D763E0F9026E2A94546EC95BD8940EF1700A543708FD91D7ADE548FC
A62765CED0D79F987D963CC392365BB3DDF7350A2EC9AB8D802B28E97E3B1E09
7CB13153378D85500BB676E32FE4D1DDDF485DBAB9896AE4BEC89701F553B824
9D1E95EEF85AB528E8CD2DA99E33C7EF0EE9DF6A7547ADD77DCB384C19539BC3
B0B029FED20C07398FA91014DE4BB1AA7F88CB9775D67DCF5D2837FD42ECA455
804CF6C9ACC476353D945018A98B6B9C4C0DF4E2EEA0F092F62B9DF24447FA75
1B9472F92BDF5A7DB5D93C74332E50B519994FE998985E08F174464F63F95299
8C3ED886220D70BFDA9638C09DB8EABA368A957446B148ABF84CC943B0FBA335
5B4B56DD1FD66E172078A8AF6E2416B77F128A6A0605A5573CE94FE55EE5AC04
8BC8BED7BA5D358BF6578DCA8E30C4178854C4896DB51077E41C51747194F439
174DA45654CE36C42B22AC766C57A11169A30C775EF05F336F7CEF39528A7F42
91275639C6DE698D98E5579678837EA7B32B2D289C69AF6DAE8C55B82E35CD17
80410A1916CD91289AFDE3B3E3C6CFDD68111EC8ED046301E4F213407870D83E
94791D463998329DFB27F12FC5C831A503A064FA913ABF3F4C238445E893BF08
E9B4C9DA8C24D4056594AC4D1AAB6A64CB047A6D57F391D3F683AEF52EE65ED9
7EDC4AB713230DF33FA43EFDC103E006F4762C969651BCF5666273BF0BBD64C9
EA736422D6BD1C2CA79CAD7FA937B86D3E04EB7431F55E8C36FBC08628944CAC
8A2DB8460A7F46963797D3625BA3DBBD5D23ECAD0A053C96DC7B47A7D51A9822
311C13A24B95BC6066F8BA38AFDBDDEB14345708E6C92E7524CC6C2C304A2166
2E821B2003CF2CE063C1A78E2EED6946D097FFF4CFFBDA0D8F8449CB63860B4C
F4B23D5CD5820BB22328ABFDC9FBE1CAAE4E7988C938EB22AB04C0851938DF25
5D9AE60677F810AB8CA72A6F38F8858B66AEB38AADCCCAD4F7BE572A8EC5DB1E
01803E6655CBE793F7F0F3C15296DDB13A3D3F117C81D65A7379E2A68970317F
BA71BD14E003C2AF3D5221C7B1853961E0DCC31D568B4CA43823CF8DAF8ED3CD
DAD3F1E0EB1C2A03A46E53F28A256415CF6794FDE69515EBD40805302417496B
49B1968831A4DF35105D0B13E187FFD0D784018B5C023CC82F597EBD6FBA4E4E
02F9FFC39233C18337C42EF15E543C092D860F561A9C1CDA3C08B04D9D7BE85F
3AA79EC80426A4D79F72320F3E027B38F445B08FAC37BF3599A03A6975449D31
5F09F1BAFE004599786CF555574023CEB84D85002D54F0808E74112D37CCA5CC
F11921E61259770696E579DB29815793CDB79AFE4176CE3D917DA7C8C1EAB4B7
3180F15A17871516E58F18930B389DB19FF05127BC2A74F58D5ED01D77FD140B
7D2B0681EDD2597D1D44D6ECC833341DB93C578298B2B3B30FE868A7223A1DE8
E0B64DF5D843B05146F5323A98CD2FBC2794F6B31F8DAA3BFCE4F2D93180E5B5
A39FC9D1788562BD7B91DEB7B68070A575351C527ABF9DAA9D89B3F649F8601C
279ABF4951BC75EF4F31ACF45B63A999A7A320E3031A34C8FAFB85822B683BAE
98169E987CA64CD52CAAEFCEDE75DA34D697680A07BE9C92008E2B7B824FEE4F
29F4233E7D17B081F65419C8F8CBA30FB7C18165800E074836C831234051B2C6
D8C1012E2320A5C3B30AEF5B6DACACDA8AD7256C8424AD672B8E99F43C8F44CD
E2A6CD1975CA0C8AFEE099371DED3FB9DE2A63FBD00310D3CD651BFFD361C06A
67FA9DF69E2087658FAF320BDE20988496A2DE514B0C1168DED7CD66BFC20A04
05CC75D42537BAA87E0BBEC9B8A0FC8D35C218FA621AB88BA4C8A6FDB5C2420D
23C422D5A40ADE4B8C3358F53749335F8AB2C58509B877D3503EC85507F14237
F0465B4E678E5E3E0D00FDE8FCE96DBED8B40F56273B222A98BE1968C31F349C
B173E2D69BA25CC97E2DEECD06D9FAD71F11145FA4073B4ECD47A712496C903A
C85AD14B20B151211FDDD21A92C01B7D34A0E61FEA689EC9F5576D958BA626A1
48F9EAD8C98461B03BF85BF546F92F30C9A0ED31CF414B3FD16C6A58507F5FC2
43584A46DEB7F50F107F476B03263DD5E474C00C33893E898CE505A3631DDCCF
D65E130F726DCF1C30DBA8818552C7F759B136CB5593E1F581B7CE77248C6237
0D15854DEB18F37566D78698E70FF9FAE10552AEAF4EFB587B59E1E405B53992
D9180D8A9E7144B7BAEB0D6167A9EDAFB5842E87E7DD36ACB8CC6BDD02D89C8F
6E51637A0D92462032B25CCC8FB8BFA1A29AA9C5AF473E03898723AD3A1A054B
B4073F26E64D477BE4B002E8B036374D984EF3E6AF1705CE447343C0005A7A76
F439AF5ED86B49BF54301784854604FF145BB5889AF6C4E9611851D7F4EA9AAE
FBFD3784BA7BB1F9A534E91D029E800600753C1FE3D47FF89EF83D64A6DA8D33
A65F86072A09912A6A1A8D458174A46865E9E1C5A5CC80BAE4E773945A388E31
AD9C5B303C2988C12C5054DBDF97057D290258BA5735F5B2355A89FA9BBE924B
268C4C5944497F9DE5D4959D4A23FA400D377D91CB48D21836E7D79DE62BCB48
C72E48CD5A3DF1BA66FD15147EFEC4FC81BDEA19B497ACC2B9B8655C8A612447
0D66A34441D0A23D2ABF51B0F346C530867429847637B569DF2386FA2932004F
F8B8772BEA309EAAFE314C8D70B227EB1A7CF8457A1179DA264D992B8BF40F29
CB80AA7307A1C97847006E661A44B8EDB007EBA7CD5CA1BC85783E40752FB62A
FCE844EBF1A8290193C3FA5CC8D19C4CE01900AA451D8EAF384C75A68CDA5CE2
105B4D74A673C2E557C883EB2619B95D0EEDA3F4995F96D98AF147143900470A
FF8CCE72D9F97F4D0AFF2C3A59CA5A220BE6FC80CEBCEC5645C2B57AB38BD65F
FAC08CC7A583555757375C49B015E26A71EC45D49BF9ED5F164C037173DA67E6
E4BB951ED64C240A58EFE50F969DF836401A9FE0FF702F962CA7CAB96BDB43C0
D27D21F892B9AE27986254ACB44EDF59330739E9134F616B251D4FEF6901F4FE
87F3E6873719C06C5A65DC40BAFF8CD142EA7864D75CFA233F600379D115D6BD
D69DB4C183551F5F7CF9625707CD0DCB2150FB52962CF7EC7A50D7A25F0A602A
FE2C4B7806357B0D839855491DD405CDA9B16CB2EA3A265FBC3AB787E84F2BAA
845A53C5302204847EC05173DF4A85FB328680DDEFC18B9A3D44C83C1C24C764
19C359D2A5E5C23944FAB6F508F72C0D2F329B69621C9C77BD5DA645E14C9729
53FD698A9FBFDF25D6779971BD4DE936CEA675EC88C78A006A29BBACDBD419C8
FE0BED7DFC7A61F9A2DF0F56509A6B2F9970B0D2417480CE8E0B60F7E548E665
8A2B86D4AB4CEA92FFA43A9986E961C4034825D214E19507E32357345AC0714A
4B4A6E97C36574C2780971298D9D58B3E869A6976C52F845F3D61719BB3C701E
AA4AA83C1CB17CEC4DD8ACC934E95DF9F1964DBE8BC40BEEBFEB5EA4B2B2B73B
6B25D0EF2EC28F1D5FA3AFD9989F160D9260E2E84B04857AD5177D8830C9681B
2C1DFAD2D78D3F7A9D5BEA49E136C4F588A1BFC794ECAA1E1D4986AF235C0907
269F782BA5C6E0EF27099A01CAFE95B11BFBCA86CF180F3B4D832018ADE8CFDB
A85701893D69FB6BED34B24D63494D4DCA8491B685D79A737AA2EF2E66048C35
B30B107A02CB7D612504DB3708096A9F317E18A9524EBAA4B012913D00A3D244
3A0C2ACF5071EADC2297041FA570E8314B6123F95A1DAD4E65BAC6008161E7E3
98DE6549461CA6B50E09220C5ED6A0D66A100F7E6BC8035EF22021C842527A00
2B9789E6DE0BEC9F0D0709FBDB37E940589B26C1E74EB81459BC90456C9EBD42
8A5BB6B6A1CE495F8ECBC20F26D4F806C2439CDC487F121ABA7350AE50BDDF8B
CCAE4D382CD6C31B35C7F738ABCFB68FD9398F5F997F3392004DC1BFF14105E2
119E486BBAA4F788FC6AF57F5BE2718E6BD2EB758116622FE71C722C0B4F49FE
77AFA8E8BDF0F8C179BFF36F27F0BF93C2734CBA413F154E2FFAA972D9F9429B
6009AFAD5DE868EEA81AE4421C47E768BA541A40A5F9E7DDA70AA108476CA234
A5809F248CDD912A7DC92752C5E234ECBB08DA15379CAC6594089FCF40928661
1D14F25E0691F1A94B411E4468AD5F31520352BBF56015417F7009802EF04AFF
25A6898016AB41D22A495245B3187A367A5210D5627A75A0F592F8EDECA11599
B66BE2CCD6BC9E55CD460784F693127194FEC67A7CDBAD1E55DD9E67FFE179DB
8CC400B17BE0892A02107380C3292F812D16EAE8C9196175D14B6B910E9D6B24
8AD2FACEEB2AB83E6FCB885B1A36ADA3F6DF4566127A115E5F31C27627BF30EE
734598C9BBCB3D068A6EDB29C0DD92478C5B7806A37036ED241A7C7E99DCE5B8
2422188257F614442D9D26A2F36B146B0F9302783CFFF192D9BBD449037E54F7
69AFF063CAC81E75776155333607CD127CA11B7C171946CB0D676DE78B7C8292
30CF7034D501CD6066BFF96590A7947C3293925D8416FE0DAC579D494F99000B
120FF12BD7D8A01C554AA9FB007216451A43C14DB34974C1094FC5AAF4BEBAC0
D5C8800C39DC4AF3C0652CF252D14352FD53B0B498D9F5CA3ACA69B6A99BB3BC
A80DEB22A98CA7FEC39AB50144E92839B7F3588AEB305EC57B1A0B129FAE79D1
0BF07B792E0EDAEF46F3A3AA8559990357A0DC6EB141C252E8D3503C0D9391AA
87FB28381AE068E4214770C253814E485B2C218D44FBA9E1C156F195288F1036
BDDB4569DDBC080C4FA209AF4304B8B32E923BBD9DE52DA49389FED9B26C716B
4866FC1AE66D80BA44BB41DCEA9020659DA84C8090A7B589C084E63A736F2671
9B1FA0EBA26DA785766B9D96F41A73586547F8F1FD5ED1A2A8372871C0E513CB
A66550DD4D1C391377C85F29F9C3156B2290A93FB3ABE5BD13
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492847AE57C85675CF04BFD1410B56E616F
68C3927EA7267C0C4BBA87AA3EC7166170B80B7355E802532D38053D427DA3EC
5D297AB110438F9AA9CEDA887E63AD877E9208260AE6AF24100E2B365BF89C5B
679912C69C51E8D0541100E3DF71D501F4BFA0AE8260EA4119883BE0E2CCD156
1113CDC4983460A31A70C6614DA60CBEA3A564539DA028D46BD8A6C8E870451A
F92C3A3D555E94EA81503E0D53C0AE8AF190625DF8F48C433C5CA5E61B61960C
10E340864F2D181B835CC0F9C87C9CC0E95FB3F1824BF5ABE0DA3110FBD87806
4770B0F94B263E2C7A3D9DF14D9BE01BEF9882A1EC2C8DDA5931F895D02E4FF1
CAD0158061CC26D5256590E51541844B9AE3A861D6412B59941B7186BC31AAD8
9CC7F07EF9A36CF5C32F54ABEE8B83306227DF64A1F4E9B350DB04B85024FF0E
6FF4C8FDEECC5DF7106C24975E54928A3679928D4D84C98B3D33843CFCBD8AED
A1A74438EFDB0BD68AB2061EF46D65CA446C190A6BF6E0D8DEFA1E8EDDFB5541
473187ABC3D34172433CC652E9B2516AD0EEC9F452135D6AC8D97A90DD4C972B
69C05585BD438731D0DA714733FABC30765D6775BB68C69704D0BA5D6DE6BC5E
10342040FAE3CA1C359295C7D2967195AFD2D94BADCE1E95F17F0F95B5A683ED
8DA83806CBF2B803C94B5A135004A20823158454E29255E8846AB1AB9E444B82
AC000DE047EE32B5C7659AA3999D8CA1D3941D1FF042DCB7834420A2CB78723F
B40B625D7418A892CFEBFF58AE1CD0F128156868B917147969EF8319C216ED3D
620588A8D3D13C4737BB89F1FE17EA91AD0A119E1754916E4957C40F7642AD75
0E847F04D456B101A89F4E76E6BD785EB1F605D78CC0AB1425CEB017B47C1D40
BE68CE2BB94BFFF5120F91CB493BAD5966F870FFA6AE560AD6A82C3B0AF0C810
C12CA6C41677519886FD5CD163D6FB351E2918F4E5B5D5A27FB8E57A24EDF9D7
42EEFF2C7558A4479E25DBF75353BF0CB3E744B9009BFCB1D37E21EC06E4D7E0
2762A656C0E348FB75DA17FAFCFA53893D1ACEFD8C3EB97C9E7E5C3C5A303193
004DF6B0E2446527C65DDDF917C6C8B730247D89C817FB276D85EB671AD64DB3
4BB09368AB12D82CC4A183ED86D2841E499B785084AA21B81AF837A206A50773
FDDBF92515FD7870D5A35EA64BA957FB2F6990DCDDDF2859681D7B7D5566779F
26081CE1DCF8FCBF985B41005EA0771D928990C0BA6CB7E33875B819AEB1EFE3
7A3656C9B2060A89B3D1A0ED127FEDDC4387DDB2E10EF3FA3985EDC86947215D
585BABD246585FD44C7FFBD5B878504A44F08C38AB4A35ED5CC53EE38F810C49
4CDE233ED8AC7E692EDA8CE219D733D37296CEE1118362904F622FC22656FA58
65B5E26CAD7951FBF3D7B27121FF01DEA6F49C7A4498656B8A12ECA7752E0477
CC7F945AA8CA30ECC8B017D3365E4F2C4D6F555DAC9A6D17C263F63D55D6424C
58ACA31C6B17A617B342EC92A2FB13D4FDD77DC3A85B2508B70FEF36DD289991
A16B4097497EEB38F0274AAA1341AD3BB645B0D7F97ACB233FFA576119456D0E
E8D5F85BD47E3C79CDB4AD769ABB374D1B705D61C428B44B213057725969D808
B280BE2A969D2207BDDCAAB6AB26EFDBF7E27A57CE61292AAD6582B3A661F4D4
8AFE06644856C8C9DCCC07407A115D6D45B7DF6929B1C79277F3957EA1805B97
8529CE833B1EECAF947E67DBA704AF3F29618A894235D7DBFC1153A5F74EED26
102EEDB139492E743E82CB61CEFAC99D77B61F60FD9B0C1645E399B20090DBB6
8DFAAF4C6C1919FEFB6E3E8EBF926C2A91C5281153D5B28BEE5E71772C8921D6
9D11ACDDE095D43077D6D8E8EEF114F60F85935BDBDDA3362A11E0BF7854BF4B
BC52EAEB261E696CD413485DF93CADCED318B5FA421EF0BC594EFBA262EB2C41
4E43D8ACC9CB195D12F3B2ADBAA0D95A443F525372BDE229F13C485324C60FD1
D7DFE515B666ED51FB61F69E18AF955D6620C95021DF41F66204845581723BB6
B76B4C3C2E2E5B8584AD015374BE36AC1E08E1C53C079B8BEAA3E0F907086AA2
3BCD6FA9812375C8E8D4ADF7A319E9EAC6238093C798878E5D558B30ADAFC1AC
17B04381C6754327FA7C65AEAC1A2839A9FF799456B6E5B9BF421E82415746B3
63938E88CA325AE4BC6B36475154CACD25A07C74FEAA2928802611B4AAC8DA96
F7CA93B7288B2491380B2F4F87646F6BA42247F5B593A0787ACF533199348D11
730EFF7C25DD5ACD0221075ED47DD6FE8909C387D8F02A88FD24540AD71A0FED
2665CFCF412B99167152D35BC0E671E657EDD876C39BA0ED4E790A79D8AD6723
4A2C9360790E4981671E3F898A1157850F48A5E0F299DD9078866AC4AC771A7E
ECE3275C26835080FD2AC78DE88BF65298A8EB4181F1646B5867D0EA3446F4FA
176517141B75FA51F69D54478E279EC2855938CB532FC260FEF5CF3FE05F4F6B
1A6AC463C1D1A24E7B41EBAD57574D43E06E13690F831AC63F570D466C8DE97C
2E08CC01056475E95FB467E2F3B08917792C1DAFD35FDA10C0E14D125C730ADC
BACC2CBB9BCBB0BB982F75ACF33109F8AE7ADE4954D0B1E1802506DBDA73CFA3
DEC72E83650F240B54E88E51C065039ED16C5B958CF632FAC74FB900E04B0B13
B26BFA8A80D5663FAC4A5C3CC6895C0717E2271C6A3F722B2F6C2CCB04097EAF
EF211683EB8F6FF2306B741C9455B48094D2958B832B76458887F0FD9D971D2C
75AAA237EFCFBE0F14F797E71B0E19D074858D2BB30FEDEF6C34FAC40779F603
770BA127BD4B9E4F5EC52314B25837FD118062685FAF4391CC91AC0ABAE56089
30E599D101B7ECAFC159AC2335D6DFEDAAD93A074010C5626DD9470582E82C12
2DAC32220AEE7C75A5BAC24E9E43AD56BA6B5B915CA1A908C4180B7DDB99E3AF
5C45072D5FDE12DD81276D7304AFF3059366F293191CE257782F236FC2299F6C
60070DD031F172CB2FAA0C0BFDAD40BD3AE7D647B0FFC9298FF9481A19CA03EB
E2F1EEE59A3D6E3FC23B65AED24295DFD94966CBFB46E98286E8AB5BBCC5A8C4
31D8D7BB6D38C459ED7811962AD08A130D7781F378AEA20293910A7716341DA6
4093C33CE11E30603EAD00851CC85FB116890A7C58F795071033711947B65B0C
07BB7FE129E446F1A58F097CC13CA9BC695F782ADBE50737CE43B15AEE7EBCB9
0CE9D7EB1913D307114496116FF0087A48789461E310DE9062984F6951B5AA2E
BC98536501922114CBB2D9698493EEFA925E555E776D6916E68159716FC183FB
83834CA958EF2A4210A873E6F7DF8F113E86D87F7B364763BBA1AA81F9D7B871
D7EAAFDE0578B3E819F2D472E963C4FB539A61127D80FD783E271DBEDD8994F8
A2E9F96F4F81D178EDFD36B63A9E05D8F4BD13318C16396253CDCB9E1EE7A887
8F02E0B498DE9C1A5F110347B7B612146B59530538023BDA6569691729EA004A
3D96F0FBB300F40752DDCE278F26B5D50F9C8BBDC7B3D5D144869BE59F0BE9FB
57853D65DB474E4CEB98EAAAE80FEA3557FC29E982F4E43B182BD85FD6FF9604
20E3B5F8A1C120887EEDD7CEC677E95307847599B02E5AF54BE91F662979D0BE
A1CC2205A8493A22D252AEBA66664B2A0FA2AD5C2BFDC446E8217D3E5D67616F
A9C8D25588F1689221B896E4663DCB2823847EA18AEC15EB3464CD20830192E9
FA76A8D8C8454C7E9ABF6C0F725BC64477D228181C86BA782F4FE02493A70F60
73CE5AC25BF5C0579654DB07E4ACEA3666110AE5DED90584F99E14B24810C5DF
7394EE947676E459D57DCBB3829ECEFC74DC1A1B3482A99DC90EB52844D07B8D
4D86246B30916CF5B9EB30CF2688AD5470018A3F2D47875FBB75E16CFFEB450C
B8BC91FFBE6C83D561EA7819C508DE4AE8DFA21E23DB7E05FECB7CBC4A049B24
336687838F532359D6FBC18512610FC852B07E15D4B247573263395579F2B2D3
3E0A136C429A9D806C2CF8AB15954BFF59B4AE356D1DB3175DDC2A6AFD06EEE9
950911F36A10ADD8ABFBA9D53C42A690A48B179E6725265A12AB4D9865210714
AD7EF694588DD4594813371CF6DF55FC8BCE3B9F209F7A66F4CC713EC85C44E2
C692AAC42C9E5003AA9AC548FF0AC943ED9E898E52F2294B3AF6C494A1A62A0A
6F8E820E383A2F9A9BE2FFB3AFF49BBE499A6E4A6D986438CC0F8950392B6CE6
1423914058FCDDBE245DEBC2441DF1AA6A52716A7EF812A28813BA8D3D655ED2
66551C59852C1BCDFAEE9FCA1B8B7B45FBB5A049FC399C46C1426F4FF72A744B
8EED9375BA41440D24BE8D533BC804C1C8059928ABE24544F41569DAEB218F1A
90A339268479552A5D4F025C0446A986C64DFFC2C0C909AC2835EF3FAF19B53E
44F7EEB341005187115312A76DCABF4133E260320CB39E191970C0F0E81DBEF7
772D6C5F077DE5916A5E4571236CB05E25C0B681EE2902AF18783CA81177E26C
F828FED0D16B16987D62B6E83BF9B59F90EC4E790133AA578C8AF018B06D7B9F
5E162C7BC6381459BB3BD8E8BD8CDF61FEF2585E482EE3E3235E4B3C55CB96C5
D792E2DDFD91D5D62FEA685E885923620FAA16910AA9EB967D0B382CC9929D8D
11C794E55DEC8F51B5D7BC7DD0F437F1C1A89AFCBF166B5E882C1009A9DB4ED1
9128C657C8098ED5BB7691BBF8C1F6EBA75C1C9C1670B8A568F69091BF0FBC9A
D619AF7C314419A4FD057F51ADDF7DC9BEC731AD6040FD9B804FA147488D0E30
F8841589FE146D0525DF5FB31C974FC3B57F01E1D7A2A2E477EFB20457C17812
98694BCB0A51F6AAD0A5B019A8F4C210A4EF832E7D6DF3E913A142458A406870
B3A796EDAB7569B0D96F4665D013427D282B072CFF5FACF67B4ADA7A8FF35840
A4FE3D981216B1214415D55F0490CC2304501060CD4B29E20116F74FEB99A1CC
BD511DF8BC21284CBB01E5147CF95A00E8E775BB357487584644F975CC568F47
3DBDE6278D74ECB3172F5438402E9D77EACBBE3D271C3DD27C28F754521E715B
EF18A179D64952A6D39CFFDBA38C11C7238C738370C48C50E025B66055E56D4A
8FB3ECB4BE8FB8D21D943D3328065A91592BF5454FE871CF4302F1550F56B682
1344308331EBB7B2E684B3B6C374B061AC0CEDB050AFEBD734238E9DDC831883
C93110751B5F8637CF00C7C14D8D087E4AB1D815951E4BEA2690A552606F1EB8
A796E8FA21BB9E5CF8DBBD8D831A0B996FA2E67F9064EC921830EE707FFBD444
DF0A703A999B75EB8351EA2396AE35A6BA0B59619C35B4D329A8522B1EE90448
387DBB0912FED5852BA7AA362087601A47FF693A1CC34AC367036829996120FB
18D883F38EF4131EADDE2C756C2DF9F395FD83FAE697F3A69B0A0D171444B807
727C458C55F973274598E7624305A0F7EBBED6B1E29CDB9B8ED28CF387644D49
A2010C5158CE82BD52FE87C5035DFD9425EEF795DD0B09D4B1C7EA0C98434FAE
393859A98FC0B3EA3A0CAE001DFDA94760FF7862337BB4A2C3A8C8803E49B607
12658E7EDB16D9BEB4252D67C718C2A4595075C1818F6A1EE734956DBFDB57FE
6275D1873E08F3DE5886EACBFF2A132DE63FCE4B2955A9C7950E7043D7750667
94A2DA0D72B3D7E787DD83DBED95F86B97E1E9D80D9E991753E1723983D4DE05
CB5C6CE7C221A2038461896FF0EBC22B776FFC66AFB8F4EE72F16F4A83FD3B6F
7C02C8ED058B4AA23DB4E4F368D5CD221D0EA7E1022CA012CE9760152330C73A
4BCA1399C9CD243FA385624CD426256168309F04A2D2352DE559933C8B4E514D
B0410B1E140095EBEA1B13933221F95DE894A8F0FB390C4649872B940E5AB4EA
A493F99CE2D3DFF0982549271B429927D4775BEB5A12F660844638B9EC5214EB
8B4F3B900C34193E943A90C06ED8D9799646156E1491E5521FC8B9CD9158D756
8229D15D0FFA4E22B5A0CB4FC82C4BB848D07EDE0C11344EB69D0A6F329CF352
2C81BABB8C9BED90F772BF2077526A35E9F2844D17BBDC178AFFB0DEB4493D2B
EED930887D30C9C040B1498E7EAF30501BB2121A750312941839C81400086942
7242D783CF8D51DF73DDD9FE1950DABD3C95E57686BFE5C55E13AC8837A6492B
618815B78E78BA5F281755B0743FBB60F2952D9041F7F6EEDAD2563E236C584A
BD904D7018A00F6017ADF508BF63F64AC406DF45C6C9B90489846E9685287879
2D64A7BEA283E698CD7D8B2DF6A3B6681C63BCFC14135382469123169E3DAFF4
AFDBBBDF75C60D2808EBAD09A641D93EE38D274EBF132E2F1C61F31242729A9E
BE877B546996C6520013AB058EA55E58F59C374DC6AD4AA8B125F40114881ECF
0A7ABE0F5DFBB48002662AF720242D74012508F26D394925F71065BCB57954C4
CB5A9A42C6CF6EA0D80B6A99ACDA48E5ED3A2BA43BA9064D59C171AE87BB22E4
707510F8EF3AAB303ACA4121E9C92051578244155F5D47FDBC558AB5F9CB60A2
B2B7D3726D4D06CAA2CB08BE16E35F416B79718F7C53E34C5057880AB32CF159
42D3673538F51A2646DB93A34C60583DA3CCDBFF4F315D1FBEF4A12AAB726603
8BD7CF8F237D8E9B7D4AB72F83176580F0FE60F48D70FB98C3ED8305C7906E17
50DC71A816B0D510008080A1C3DEFB220D402F3CAFC75D5A1D09F5985687685D
0DEB29A821CB8D0CF788A0F4A87C061D56CE72CB67E59EAE0D87FE8400FACF1F
3E0B024C5FFE6777D6E374B40FC2ADE40888C5DC808B622836891157769C8BEA
7D15C98753C1756AD232C556098B581BBE5842E94DBE3F911FD8DCC3FDBC30EA
F5F569682BFD37A002015A3CA98EDB8D21E8DCCEEB631E12C5B4AE0BCF689146
9EA758F720407B837A1A2EDC4B490B3B7670FD4809B69FF65DA0CED5D7215A18
18A20093B619E51942C0292D48C76344A84198F453880A813C368B09C15D29F7
84CFA094E8674EEF4ABE3C40E65E60D66F58717ED1F730E956CCF855DEB471E0
A772CDC7174D8C4887E2FC486524C9DD9001F4782D4C9E406C46B171CE29CAE9
562DB5FA89B3D468E216BB509F4120B75672253A86C73164C0B29DDD2EE715C6
AB21674E82E6B49A5DCA8AEE53295494C0B4DAA184DBA107D65FCF751CF72DF4
710CA42F96220CB2FAFAA81AD2E91846D59CBAB89268B6CB078368109C9E8089
3A908DC4D0DAC6FA6AAB73CB8F02BA4A00DF71230BE65BBA5AF39B237C53D321
76E0B17A5F655AB0918BC6EA5573B0381BF73CEA99D4E06EAC2C8E77082880DD
E794EE877AE7A911A5ED5DA4BC69BDB43E36DC214AF28E55765856F9C6888942
D06B3634A820A6E376B90D763E1CBA4B610081BCBBE17E81F552B6047C988419
D2D84CE582ED340767DD50BD28E2DD1BE5802362E87EACB8F517FB3103E52595
BA002E0282E54CBA85C897D6AE51B8EE6A26F358B803419C1016875C2FC5BB91
23DA45BD60B4BFF2C7E594C5E9BE1BD08EFD522FD498000A60B8A3DF7F12B1FE
9D0800C9DA440F8F4DF29BE3054D332ECD422011A3968D9FCAC28875B34AB846
3292EDACB514713586695C0797C7900E8E6AC46A6B32C80210805D19400A7362
13F9916D014A560CDB431366DDCB35E206C199AD291CD4F0E033445E86EED300
3DF83B89F7C1D7F378B62DB43CA4BC3A8669F6E924D719F0D7B16FBF2402581F
6F84BE8AAA3CE7A906C63EFC4CEF05D20FE747739A0C92EF6EC74EBA6CB20D0A
C3FCCDE65075E3FFCEFE1D9D56A1660DAE90B755958197A33515567E98F07B2B
47B4EA06A0FC7E4FCE652FA38CDFCDB93D1C9185FBAC13AC58FA76B08A81656D
D25A7835DD6FE9B47AC1A10E33FC1E611BC3142D4A9B58F97102E7AACDDBCA91
E0C88FF6F0EBFAC5F9837A7EC7AE3F0134DA9274E57A04DA8A7CE4B86C16DAF3
4D8EC2BAF04A0C94FC850F41B05B63CE0F9832AE6CF22A86CAFB7DD0E30FDFE6
92310FD56056AB112633DC84FB7743B5F73E9DDB5069BCBDC41758B4122E88E5
48D22E15A2087B61FD6B5415B49A57FA350664D6021078EE1EBFBDBE5AEE9EF8
D5A8439351E9B9EF85ED875422A0A51F2333C9056CED49C1CA6111D592F4184F
ABB849A3676A8D175D44E7193EE8F2B50D7E73B29419F7312094C3C340E4F9B1
D89D5B41C8C0A3C14544F068343D3ECC39B6820E335081806D628FE867857D58
5ACE25A158AED63B8FE391030C55D26EA2ADDE6F26A46CBAD656899D01B503CD
DCEEC86BF6F5F9E64E2EEBE0E82A93C1D6CA5EEDA4FA3059151D7A063D8F787F
F1BD66A511B0F671D8E266E2B4177FF07E132C62C90BEC03F13845FC36CAEE6C
3D067D95F37BAB936A59CD4D305F731ECDEBA2A8C7B93F359219DBEA4A1BB372
2CED449992426730E15621F03B721E0B37E08F738EFA0EC0CF7753FE13B5B5E8
CE0753F572B517A89E498488C4815463B2AE5E59AE66F1D922C211444D40AAC9
03135B85BC30646213E8AD59DCE3FFC7FC963342019ACF73B05493EB31772A6F
C481E4113BF17E581597282F39029738830C4C8235DA5F8C16BF26533B564B2A
5DD9ABBD3548AE8D913FFC1CE6705530F9CC1E3766FC6E759DE89AD860792433
C3DF19EE7B5C27E7BE0538ACEEDA4D29EA5A85EEFD4DB4B9B2E9C804FE27C8B6
EB69128E5DD2992540D9AD3349225E6B8EB758ECEDE8173B87B4AF1DA73862B4
ED64CD18471A49B62240FEF22F4D82468F396247721CA641EF5203F3FFC1C5D6
7EE73F5B8935EAB547E7A34F7B469091B4182B33BF1DA6FCB815622C7D6A01B9
0454B314CBF25CBEF5D472F90D0E56DA81E3372760E6F02589CE8192748B2852
0B4499C079D5A6DCF16ACF124E538CB207A3D156167BA2B5BFF816F894ADD424
CDED6A86AAD4BA6096F6E76B47FB3B37634F7C143F61B7CEA62AA27DA04D2DC9
F3EB1838B3E3E37097799AAA2B9B93C6D340C9839D58A365195647F6BCB28B5B
1C1BAE4CBDF387FB03FAA5AD122CB4A90F479AEB32B0CA95E44024535D6C5A37
4D7E022625ADC54C39C18A26367FFBAA0A304C84B6D6F5045E48011947636246
6410CD8D2E5F958A4D4D40C21D7643EC0724B2284CCD6B3440582F15B6727F42
89C6C81A102A7E38178ED36221E23FBE52B78E219263F40C72D7984425606DDD
E632D7AD18F8A8B02AE905C518E634F6763DEEF59FADE7248B211E326A5C8F5C
8CE701BDF2C611D54D9B914EA59194239B6ECF6DE44654AF1562FE5062F2899C
47999760A7B34E48A57D797064D6F9D163246EDE55019B618FF26C3F0F5731BD
08C428FCE711882EFEBB8E278432D6E9D53AD86686840301B22A3F138D3B45D2
739DECDDCDED8E9BAFB8C825DFBDD6CE0B44841C58E8E054B9BC7419E45ECDB7
4B16247EB6DC26F3B9B5CE810F4D01E330DA29486C157F3CCE66213A6163B8B4
4C9A89068E3B5301D2364D16DD4C7A43DC069BA92CDBE98424EBF8ED5BA75646
F9C50C40D17D352B303F2518E05CFDC4DFA697683ECBD0F03CA3A8E4F5A17D76
3323249C164B1A53439CC169C9322FB6BC949688B30F0B4F3FD3AFC9CAA04A79
6E5AFB8296871C07242CA31F3ABBA9BCEA96438C90156BBF29B1FCD86BA9F128
0CA84AA8CF15CC932934227CDBAD1B668F164C19E3380ACC2FE5A47F2B2F394B
CF99217F89A85DCBAEA46819A8980A28067452810D07BA9A666A06FD2EAB5A7C
83CE622967C86ED8157CE246CC8D5C9E7CF1948D58FA78440BDE4C69A4A7173D
E79A0DADBA75059F6C068F98C3564F42D2F7F26014DE37C4DCCB6B3084AD928F
90A32C4175B6BFB279024EAE1B04D721A6C544209B1615938B81AFA5C99B02AB
37CB7492A3032BC29ED7FF2C0019156FF9B33C8FDC27D67EFC22C9DDBF49940C
08CFD2C2636C0FFE8BCDBE3CAE02701424A6D49E4995AC91FA8947D12382B17F
DCEBBC82F61E5EF76E8794CECC64DB734558A0B4956554FEC18293C59D678580
067985B298D4B56B91A01E225A773224878068A9224DBBD0465DEA4E75D61036
020AEDB7754226F422E9551CBFABC20783F6DA40C59AE09ED22AE971884911F4
52C339E8DC1B81890E9F2A1A8AFE1C6AF104DC95DDBD1FA5C730358B9E18F720
457A4AB35C68C07865063A2AFC57C766B2E86E8E20702E2BBE02E0FDD97AA289
F96062D489E90CB2B7D7775E395BA4BAF7F82F0850D4EC408D5FDA4AF648B93E
CD51D99F300E89897C9E52E20B6F985FEC3214848511AB3AE96BBA04B42C23B1
0E30E7A4A7569013B23F6E52ED2F1DD38A57AB9AA6FC582E9A9B3EF96B5190C5
833C98E7E802CC91B546F554A4B9785B4E057A1577CD58675E2578A9CD6E1CEC
C57FEACEC6454D27EAEE57EF86B63BDB575DAE9F7E1E55AD308CD97CA63ACF5A
95D1A9E5969D76BDE4FC976074F2D623721D38E3F41184A7D12E20E0DC745A83
98563BFA688DA6C2BFE5B5D57B4F257028C2BD74CBD41DFF5CB88D0BDCBB4DB8
470F8A60F010BA060FE66293697F07A62418DD31C081D4506D73037ADCD10E8F
00818EE88AD2EA98D6B7F1EE7C57DE49C8017386EB0C9E4399A7AFD8703D3848
64AF49F596DDF95057F1A668F7137A0C348F450B13EF02D749A5979A885A0A4A
A26F19F8348EC62189B42297868AD7CFB9939DC3B2F7E23DF36325C38CCA699B
CEED8D80A2C0DD0A6D3A73572D79A8CBE198C9F63FFD1470AEB4727F317BD3C4
E4E674798D1931020E3CBF159A4BD8DB7210331425C12B9C4F84AC252F855A77
2C5BC288840D93CE849E11A2D878FB2541B561AEC1AFB3BD19017BF75D451528
DBB6749EC08D9B25CAC699CDE4929FFC1FEA0F32D20379B3A56AD0148429BC6D
D9F89D792DA8AA54296AD5CBF4029F6829A6B55DCA4DB5036675013A692E0772
9AC192E979852EAEC1D621492AE6D4412493E0CDB2D4F9C52FE65532DB267008
022C1DDC0F82F21CD0C6E64F61365C4228D7404756AFF88FF10A172C60310C10
FB631F70026F44F1431E1CC382E7329ED66DE15BF2428F9869F06659E600067C
DDEEC947CC33EC903080C2E498998FD0372A9663CF2F00740E383BF7F27610CA
9E08C0A5CB8CC499B7E2DEAA16597E0264A7F978D83065BDD9097F297EE28F33
48CB30D76BDAA84D2E933C94C99D13E74F1C2BCFC1455E18A3501C33AF14F3D1
F63AD8688325E8C8C6A214BA3238EE22916DFC64E9156B8CF2C80FA084099F56
F7BC00D85F75BF5F32B350E2CF46BA0E8D0120B84DAA5D766B378FE86691BB12
83618D234ECFE8B485C8712D16AAC5E5F9B9A5D0D40021B4D64A7FB5914F07F9
5F0720E5F0CF45E34F3E676F57892E7B84E9F184214B4BB676DDFF2B9DAB14A4
1206C3350B9DFC1DEC1CA5705CA55B551ED33D19A1FBA979FF7BAB06B1AB21AC
051341A0D26CF9515090CBF63F37CA1E51253191C462F39DD4FF75032BC8A193
0CA75318F382399E28AB06FCF00659A0FF5005A959C34ADF2D9D5AEB2B148393
8BB1554AEB188C4B47FB762975E14C6FEAB7BBE41FD692FBC238AEEC03772A7B
A6764A304F98143B209C374E832ABFBCF5DC7E05182EAB8A2552D56AA3C47CCD
8C1D6E639E7282DF796220D6EF04EA845A6241FF262C6E8C4C3F2D123277AA83
D699485A7E03E71DA50FB2096EE5DAC923CDBB8923CC9AD1A901D6705C0B8ED3
F0313696F1B71E657A0B5233DA1DAC8F01EFD3C68B55FB44300E0B11954919C1
5083CF3D5E1221BA2D0ABEFD2BCEBB3ED6E58631E2993770CFA038C3DB87BE39
6947FBE8692B77E9A6F486E23B53BA096EE9A53EFC3D43014A8761F3B973F45C
9B432E96C24673A9E1C59F5B70BD2C9B7D62FAEB611F9B864A801ADB04F4C74B
E0C7CA9C36E787862910C4D5B15BD9666700C095207E57106950D839087BE28F
05E813684136F6F25950DC671AF32CB7744769A4B91682DE99B7132974C601B6
FA29471DC34814FC81A1E1A5155CFF268D0FDDE3FB4F9CD60DE04863F47F7A36
07969ED203ED82534F4A6E7EFCB1F3262D98D7B9D72B0CD6A171EE2C4287DD78
23FC10CC77248DAC4E0D14CBF511921E88CECE8AE0062A6E77F33EB4896D04E6
1B913B6C41736F93FB66B0540A87A937BE61FBBA74441A2F346AED22472AD07A
338DB2B6FEAC5843088C799DCE18C6765C8FAB7FE241BF38E4E476DA4B7C3B80
433F9B5EEAB01EA2E3783E06B4B229FFB653DD37713E77F107191BD84EACA3B6
BB0E0B6F65BE4FFEC8131FCB5D2E72E76448B6CE2AAB25ADB6B6B2AFF57F0B29
4B122B7EA72AA2C2EA54482A16933EA760142ABF564B963D854EF1E3A2591717
49D0FAE1D3030BBB940F9EC37DE841437560CEF500FE67D124ADB60BF52E4E9B
C0FD01C0AE10E6C52BCD44A4F9A2E41B30E5C948FAB0C8D1C62ADC191B883907
4F73F9FD6188C4727BD199CDC8B4D545497B24E484023D78E9DB5A2446FF209D
4729BC929F8367127B065F507D69BF5E60C95A6FAC2CF9D670F1FEFFA507C78F
EF6DEECA5A1D957F459CFD15BB117B5C926B46B20A9D6DB74B82604E0C15EF74
736E17066AB07CCA8AC7C172AA8EFF64BEC027B69AB4C312D2954DD2D038B0E9
4DBFDF8A78969FF3C08562DE4012BAEF33DC76E18B3B553BB914B7A10A1EFAD6
A6EDD26E87144F70B87030B2F746F8517795ED6B0BE7AA1CD29495FCB31167E3
23CEF1CAA67AC1C969BA6E5884629F7848BD9CE2DF49E4E3788194F96259F8A0
7ED67DCE8B5ACA00EA4C0D6C755A4EFA8616E5BB1DD3BAB615DCE159D6202519
C9E8926D3232B16F984C8AA4003AC525C1559EC5332658378C37C63F8B023CEF
DA1360E320862F2CA6E0258504B2333E2C5FA2F74A1935932332501DB49755B7
D83FF4D35837EDE4BBCA84EEF0FAEB46F034F9F656BFB53E8578E891A5BCAA63
89098A9263D1466BED3AC174C27E6E5B4A4E000D278311EA15BC2407A8887437
EC82773541B48F7FD66C1E519061AC3E1F1AF2E0AB73C5AB9AC83DF0307C45D7
0530853D193C8E8345ACEB51C7A914DBFE5DC25162958A41AF7EAE62AAE6965A
772FB215E2DB764D0B26C8496729EBB3342F7666145BD0BB066A5BF9FBB8EA0F
4FE5BDA4C4D741C9AFEC9AF5C9B5204B288B9BFC143784DA2FC18586884C7C13
0E6840F613E8C5CD0C538AF18564768DF75B1026FF045A5C6DDAC94750B602C1
8534666F2EBCDEBE0CB0CBDE736DC50A51AAC93465AFBEBC77805B1FAAFBAAF1
E72260C7C01EF1193858CCD80AF67FCD7E185C1629F5089570CEE574AA1A243E
DE9083EB06ECEA41883A9747FE8AA8B7D23E3F889F1A90D1C61302CA3DCA74D0
C3AB0A6373A3EED91B8CFF659369087D6EBAAEF067EA943364520D86D9F1CB77
A2CC7C20782505BC8263B120FCFC648C7D5D840130058F6E76230DDDBDDDE45F
F95436802AC2F59A1A92F00E107274986A8DED57EA6863F5424B47475F158385
C95D3432A99FD2F14A9EF82E6D6CB22144D82C90F5D0F35A04335785DF8F0B1D
342FA414E3499C15F3C1C75BF097542AEE15408B74A118064460F8262D536180
B466895E4B7B147E56476259103B3BCE3EDDD9E06DB1A42A19911749CC221AD1
29A119E89531A9B77529084ABE7F3E4C1D84C005817A367D1C177EA059C3CAD7
709A40EC6E17639F49F68E12B0033A2BE0D0C3A57F5CAB057B8C1954BD01CA5E
A938C880E29E257E388424507144764575ADE1818C23BA32212CC006838CD2F8
23FBE5D569B0CBBCBADA1218BB3999DEBC772D299656046C89FB956EAF652B43
85B1CE58BF28E25FDEBFDD531ABB92FEB603725FE0910FE1BD78DF1DD103F59F
2FD46684C651C879B9D76958AA329DDE6CAB101AC98D34CF4A585BB7D95966DE
143817F66D105F84ECDCACF25DA313A2F14A1ADCB0E81903A2FB59FFEC407DF1
1BA1F0B40CB727A4E5321ECDFBE40C001765198E415A6E2FFF503E8F56DA4B3C
B8DA0A48C41DB01CD81DFB119E152C9B4742D1CCA477C8623D49B91912C6BBD5
3D38FD3E3ADC03FE299F447C118674A7E7E03454FB5249F28BC54C9144876540
B4D02E22DEA43BFCB474B7C4EC7F3622CC2FA4641C548A73ED061CD7BF5F45A1
D88FA4EF9F30E51FFFDB4F2C7144679C88BA716CB419BD4BA2DE30E7CF07AEBA
D6759BAFEC142E866CE75F1FBF73B0D3295D5623D6EE9BC66EF49B3E56E17D25
AAE3A4DECB0B56C4361A256B67ABD8B9A0428B09D9CAF5A71F7A0A1B0BA8303E
F319A62F6056CDA79760712E7031F82CC2F0699E175A4406A5DA63DCD3EC6E28
C8A285DFD9ECE8A40F20512DE8FA255454DB27D5E9704F58D5638B91A1C2D03A
A51B54B09B551004524E7988B667F6B8EFFEBDF0DFA0A4EF6D3C157050F1F88B
6C5BB2FFC99D56D559CFC7C859CB5CEB841A64CF328127F6200A55F451D92A37
3D0A7799458AB1511AE7A2B9105C6337D1F10E81C8E07525F1BAFC2A7B39EAD4
D4A4E4534649CDE557438DEB07F64FBD7B73D99CAAD492FC6BFF281E91847A57
1AB6E2806206612BF5DB0BC0C43B5D4F9F42AAF80DA854E259EB9FC3E60EE0F6
C41162958CB62E5FE9E0AE95E932513A838E1D754FE566941C825FF2747A1DD2
47E2B0D3C330DCFB5B17D96E12D9A598B021067C1D0AFB4D3A874B9B8420DEA9
55165A491983716F5BB7E604DD429B4D595672C6503A851FE4C9BF2330969EDC
722D5F7F5CE595728CDF2528D782D69FDBE69DFCA935DF687CFD07A8DFBBE0A2
76916C2B7511F985B41D789B101540850599926BFB60D31F70C3B069EED6E0DA
2969F52A80F634C9A57264B4FAA2A94F134B3631C170ED3D28594F92F87D6010
91AF6178C00F1D76C45C702AC17F8746755EA9A6A5B79C9D465BF2EBC62D7269
C201D109720B64A0164306F4AA50E6A0B89730C176DEE9FE368C1FB1B74F5AC4
10090579AC74ECC7F039E3A90B16F0B610AF45E864F78879E6C7B1F01AB1CFC3
987F654FB424599897A16F0197E478D5AD57299BF1836EFF7F18411E6B2512EF
8E0E56F2DAB515424CE47406CBA2401FCEE849A2BD20366435A7A337A15F5969
7206D7CECC2C78EEA5713D78F437DAE50160FAC28C1C21FCF83DE76226DC0062
2A9A6426F6010B105058C68EF12229A22A12C360601CBB89A97B4B62E5BC3DC8
879FB0770439898321E84140B88DEDD98BA55DF23E12C70D0BCE32AF7A3BF50E
0488AA0943FD46AF7FEA8B63605BEBE2AD5E44D73732774F2FEB691DAC38A91E
43ED7720B41175B557FA3F50240CE3E59936682B263B272EDA6F48596D5B60BB
836D4CACFFBF48219405F2DEDAC6E5E7B0B472FE1A763EC175C5068EBDBDF1AD
ADF3E88940D66434BF6EA22B8AC36EB3D7B28B29A54FFA6293910A2A473317A8
0CD74536D2D4199A046BD128D38054B6D3D7C1934DB6FEA0D11600B36FE9B419
C381D9CD3C676262DC892CB4D96D9557B93C7270D193AB3E16D1A45FED450C79
BB578557C058236B5634DE5837B9BD4F10937330072EA947A3A621D3A0B28B18
94715769CB6BB9504B4EB4FA1E83209883DDFC91886E58BF20810D97C9AADEF4
89307E15CCA892E1A8CCFCEBF49D025A01DED702F2028AF8C768EF7C5C5B9BF0
7B53A2E03CD31DC08F52C29364B0182F490B36D3154B85F9782800FE6EEB6D0E
3B6B1BE15CB055824326621E036AFE6F44D59E0BAFFA418A5F9B497FB8F8D372
29FB1E536096488094CE59219A64E0136315E88CC61F526DE7A0B79F01A9A8C3
CAE8830781AC663F1B20166DC3AFED791215750C7445410BB9E204E951B1B4B8
C90F9052D318B4915DA172DEBD8B86628A997A87278DD64D7B055E0EE5B42252
5778B1A83A15F0362FD05D410B32A52948B924949549C1F3F7E4C2F568E119D2
23EF13B687EC34A39F9504D3236982543BA9F6094941EB36853B0C68D2C7608E
594F9BEF7C5B7D407533B77FEEA6745F62F0715C865422128A163B6C6AE0D98C
A6B3967864508357A1401A456A310532D16EAA27D66FA93EC1F263964555FB43
5CACD435A64A3797EA6539AF8B70C7F886579848CA84C2B35ECC6D55B92F7B31
B379D370294A51FC3D0593D640CE29EC0C229423F182020C800C8037F1040EF8
336E405505C4FB0E45AA28505EDACF90883C5D916F528C7D492B8B7ED8CECB49
37A67817580B1CDBC50446C0DD5F09685665E45834E4987A1A6B3247366FB89F
4A4F6C8948B1BF9695521725B2685F59697905CA387C7A7459930DC131BC1784
6BE8FAFFCB304B35475546979E2C092A743FA9CF1501020934E71C17177E335A
1A7F9F14D88F04FB8A840D893F79F3A3C2844D2144E05C020F62EC5EC10B5702
C7741BDC3BEAE7D309F1AF10F0CD44475A29D53396E5C6CA1C33510EDE914CA3
D06BFE08790EC21C3193DD62FC20AC9B60B3661AF9F9BA4DFD673A089D61F65B
C3366C436BDABF405A5F5DF94DB06450B43C009645BB6922BBB13B90E87B9875
9E9466EAE8F3E9288B50B295E46F4C3B2953A965E69AD0F1EC130930C2F34201
4382F21C586E752CFFBFA6459AEDB6C7A96847EF66B919660191C5174912A84D
379A557505A1366EEAC194DD834840A66757D5030D32C2C4C6EC6BA8C4AD8F8F
CF5D80F621EEA4D46C0C5AC1B8EAC66C3FF16FF736C7F54A2ED90D4129768EA5
1137026FBC304641971F8A8A1B17EABEAC80ADF7F2F94D7952E360B03ABDDC98
1057175C84912BCEB4638A938490B6C17A2CD928E36B933B266CA5F959EB458D
DA101B06908031F45FCE23DE11C9564566A273CC73118F4082594C882FD6441C
2957D3FFA255A16DCC32BB7BB54CE2DC59D58EA064FF782195316D7B5C4F86F1
2B8CAD27DDE938EFB29EA30E1A1A66C7D8034E9E86E6DBD08FC36DDBAD51921A
EBA69BC9F57239B3B037B5701DF3615F52B68B1E9E4A2A1851A241F35DD19D85
3A837896B5EA9B281C36A472D62847DC244BFF38EB6E8361B4C990A08BC0719B
04141D6AA8017D57652B4D01A812DA3573634F6BC10CAC3C6539A093A44122CD
4E69A92200FF97468BB3682F214B4CD39727CE28B6FC638E55474C50C62D4B73
09490E68DDC518F5DEC9167F3C4BD6C6F17546769AA5347749778A4D9C5DF373
8B6140F01BEA96E0D19F584F67231515D22007C23C228F7ED90AFB1FF9386343
30CD0B7F36CCBF1B95710D79035D521855ECEDB7B510528AD4A919FA753B8553
50DE8792AF8BA0DB56B1293CC1B1671DAC73D80F1CD05904E931EAB8E75DFD27
AEC3ABC7B177E7BEF9F5FE8E5582332AFAAD3A3B7551E56FF4004085E56C4271
7D8CCB15A8DC9B1555F2845B814DAB4FEFF9D0ACC58132166CCA1EF243DBEBC9
C68DDAB51470F6AD2267DC94C9724F32C8BAE04AE44D43F0BBE280310852AB91
26E9A633027D2DABA7BD33E56AA1821F791039DB4CF4327491481542EF5EC035
5076C827078D6227D86F8AFFB06092DF3F50B9714FC89EBCCAD5228C706CF3A2
329934B81B2BE98110DD2042F6F625CD66FD4E63FD874BB48C49601EDA2DE2EB
A8316A3C34B2F522BC508982EC1B2A77D4263549FD749289D933696C0E631651
F0FB71935B41C5125D12FCFF2EF4EF496BB3719C1B176A77CC5CEA0A0FEB1847
923274162E8CB76CB486438D247D060C31ED6E7DB302E9AC30AE90D2AE24504F
2E921D2553A1A07CB1DBC01B15FE8F820FB7BF9216301E19C025E5FDD6C5E131
E55AB411974C623C8BA08E65650BE118AB55F72677E763D88DDEAEF972E7B70E
89432CADAF0B44B5EDD1A831D4FF25F57DDA71E82980B828DCCE531741C9F7CE
61B5003541F2E3B1CAF8DD298833F8C0E641EEDC288E6C7D26E32F9B00E5CFAC
81EE3C74D9FDCCE3CF1D22FC0F14729C42309C35A0E28D8DFFC66601580101BF
CE5862CB36C6E420DCA2A2E7FA03BB7508E25202C13BC57C72595472E6E90F79
B23CF2984139C440B18FE42DEFAF6C118DAE59E0C79F8CCA62680A74F03B3BD5
C846577EE64AA9725A015C1E0CA2644D426C007E56852E5572150A85BA80630F
FE3EBAD78FB7A7F5CB0CC14958E4E3F57099E336849CF8EF56227CB96040B3D2
185AF1DDB3E22AC54FAA1D48C29C6C81147A962061A2B9FDFFF4E56431DBD82F
CD73FB2B00C4163F2644D20315D259C1909CC6086A96D08C49DEFCAC88C6B8F5
6856A763D990C11042BDCB40F5F6D42BCFFEA0BD18B651B7EFC230F62253BC1D
CD405DD06F33CE49FC76E715BBFBCE32207A1742C456543C946ED303FF9CE257
4F40FC535C1066CF6369333297E90B98A2B5A9896AFCF0637AD05E3997B73AF3
C2DA005AF14697AEA208219B9514173EE7BC19243B71F551798EE08536E58161
3E8D03EEA40900E70C9C672C5CBE529E706B9ED17BF1BF122E0578F2BEEE9D58
743E86F8A3C4326C4C8636C864D253A72D4E061F399779B6B5340370B8189E27
52BB7CDA7B7401A96404A86419F92E68B8E158B205146F89FACF4B19103A8A43
968F19C4D803D9B2F683173648321943D0B2E5FC3590D904038A6B9253477032
4B535ED8DEDC828287CBCCF2D5AFC1C2FAEA43DB3C898D39A219F7C5B4DEB592
76FE7B7B94D682816554D87B9D9B8A44A93DB6A2A853EC5DAAAA0A3CF68C0603
A45E454A8F91807CE5E62A4B6761FE2A12AB3517044E79EB3767F95B05E91CF2
5918729A51A34984505E3FC216745DB4A76F45FD1129676456FFADA3F30C7D93
1E336595498558DAA35A5284B66256B2A28AA9572D2631B0EE30251807589BD2
4C10F170D38908EDAC11D7E8CFBC475FA781970B6CEF92496AC31BF7781B9E7A
46252FEABB63B843C7952E6E83292D310B57BD047E08C8D933CDDB280F055D66
BE2FF87B81FB5EACB43338076DECE08B448BC9BB71789998AC1D41D670727194
5EE09A9C78BDF2211867DB5F5FFFD57137B89F41D094C4571F029C729CE5FC12
DFE0A8D00D9F7D70D17340CEC162570A61767695CECD96CA4A2FB08495093338
685672E5B5DD0343F3C0E036B2A79192EC0E03F993207C9034AB3C692C6647FA
334C94AD931FFA401D9703D673F278F31892417579E19CCD2288BFD388A990DF
EDEDF8E20B335B935C9A5E4F07A87664920B710AAB2171F44BEFCB63E279E620
09EA7B7F2C5CE73EB654BC25B8633A545CCBE2747AFDF687738EBA3C67B85AB5
FE810DFCD07D33E42FF9C37B2A8B2AB159255A9BA1323DDE0BDB92C67F551FCF
E5ECFAFA80AEA1435C85FCAF2BEAAC42A649A625C69224378D8A4122E32B622F
0E1335EDF2C69E486E7CA5888DEF011E760FE9A087F7D9138667928A2B03B495
171E0F253B42A13B293DF73F60D0E2A6D98BACA13BCDBD11FCE37CAF6279D26D
45BEE77B40CE66137DF4432DE3DA9E8D832B08341C0937C04F2F1D5E9821F44B
C21A89375174571AA681ECB23310C4CEA58F76D8E0AD91A45B8D0C256240C7E3
6C2A428AA530B206FFC3349CD20EC594F09B141A2DE556BD33D01FB4F62C2B33
590B4B410CF9EF8F9D2A02DBEEAA6286AC2398F19672BAEAA3AC1DFCE60C71E2
0313F9E3AD9DB0705140D8FE253C6D532D772D95F57D9DE63CF6F851C5E21E80
A9F6E4CC84EEA24F77BB33582B268EED29D4C4A28B41F7C4318FBE3B1DDA74A8
19B97A42C9E2AC9DC3D40BBBA9F7E7164404ECB863674133A5E234BB45628930
C7C34DDB60C07DBD7F15E580B85D951D0AAEA12A481DA4FB5A0F5F1295933FCD
799AB2B494F1C2C2503EA5FF98F6EF5A01C5578DA4F6B812CC966374F157436C
2EE8FFB3C04CA6E70893E5BB43DFD9B659C6C2126E84491D4F41EE77566B145B
561FC62438E51FE64ADFCF6F30ADCFD2D364E623338F48591719102119E94547
59BC745D9DD932D6CCB6FEA6BA11707DAEA11FC3148BB4D1D07C190A30D72F4D
C185613B31DF5DDE27133C84A91DEBC5A6C144DBAC1FC39D39259A06FD636A03
759EA909EFB696A6F57669106994B898D3C2CF24CDF574D8A4536A74C7CE9EC1
75DFB2B44CF73F8199590DEF3080D8039DD7CC850F8A49B4688A2A286EB9CC3F
4F0B53A7DA1F0DD48441531FEB86A9D350DCF65BA85C12665ADC33831D413B25
D27FABE92C29B5F50028523C734F57DBDF65731F1F3D796F14A7E26D043300B9
628944E210E2BA4E584D10B59379D6626AF1447602483A3495E790AB768CAACB
508BB52EBAC02A8BCDAE456746A87A32F9953CBE727979D08192AA621628C2DD
A5621DD88CAA324C08D3DFD18F93523EB5D574EF265D881CD3984E2A456AEBA0
467882C95C5932B7518B335EA703122EF3B16960132A5B028A6277BCE8BCBE2D
8EA40F37E2A999AFFDD39987D105F885EDEC824B1B61495101E08191BA454F37
EB900A3F66D94095333BEFBEA01FE611265A48B9C0D85F6B597C96C27FC22E83
002D606C5D6B3A41CE36D0D5773DC83470627A2B0B488694385B668EAE378864
77C36F185EA89B1868C607B6333A96AD20CBD72E1E7A145ECFF6A53718E4BEC0
15AF92F325D915B308280BA864C972C04F2B83671F16C7608E98BA7EFD1BBD3D
6E37280555EC031DADFFCE3091824DEFCDEB2DAD6CF22AD8375044759D37F517
FD983E33A669A83F9F212F3462156BDAE7402D2E80D1B63FF25AFE5D16E90735
43865052185AA2C28548E23CDA2BA79B2A095FA8E77A6A58F4B6709E323333AC
88EFE0828400E8FA34F3EDD1933DA603307D1206A9F04B9467690D86A73D92B3
7D935355405804C098912CDDD836A3EE01EE877409028BDD05563452496C06B3
DE101B937EB0C83D8A7DE0C3305845C1D4C5AF5AB21F0C7C84218713D7190882
6C12ED0AC734005B3CBC6970DFB390317A8F1B0971C84FBB39F5FB23526A0023
DCD89F42B6D22E4C45DCCBD1E73D485D03B0A3EAD2B5FA8A9638D92D7981CD70
2B552C3082AC1F89DB6C29165D1E7FAD22792F92582843BB62721030F46B489B
72032578539509C2FBE6E274C782906119ECF6BE18D16A7E81226648D7545604
59B7CA8B4AB1B6E4F2872DB1B19899E4BF85257C42A6ED10B1D4864A391F765D
DE7429DEA1C226F18639E36B48F69B24919C79BD50BAEA04E96DC81F9F8C28AF
A06C47EE2D9A193383018402548B73BEE3842F89CEDD868B5E27110998ECD46F
83509959B8D8DD90E4644A1D84D2CD66424C5389962ABA4E4F1C33EA30A15C50
B5D1F9CF235822991DDF5CD3860FDD80D52109B4D00001BB89CB6623C51F41FE
9A5F6D3BE27796E51BE6945A8CBA319BDC55B0758CC813E0ED38EDFC8AEA15E2
B973AC3C32BB2BC4BB4A14A25E869FD983826394F31F7A76B67B5F4758CFDF63
10A9F34855CD52487CEB5ADF7FC85F84E6BE53B0FE1A1FE20AA14DE0E40A008E
B389D70187B3FC15F81F589A54DA8BD4FFA26257990ECDBDB3F7E1011574D9EB
BE4AAFCA34766751B3E38ED0005D6B4A80C1BFA827E40104507E1B774F9FBD1D
769C3CA956103824EE9F22AC960FC3F5F20FB5D56C1B94896BCFAD1B11FA0E08
4D537436CC2DD676CA1F282F6AA5BF5395A9AE5E4F2681EFCBF198521028C7A4
BB661EA464977504C99B2005FA7E0F01157D231CC7937F8538038B8CC0118288
CDA498AAEF18140B7863151331708AF0D806823923CEA6F87A9E3427553DB771
517DDF27956B459526652D903ED5C738EABD36B8C4247C7332355075B1375A9C
7A815711286FF8AF0BE554B65D1CC6ABF9D6E836813987722FF9218CE9FAC36E
CED4EE9DE9EEDE6600CDB9380FA43A28F0C7B1DB73569CAADC6B07116D0251A3
799F7AC8EC897953F4D4DB518D0170301CD00EB3211CDE65098FDF1AEDE0D076
B0D9ADD3FE4E2B11BE9497C194CAC3BD5B9DD3DFE06DB532A8AC0E14A4A521BB
EE3673C74D223D805BA5D9419A256A872A03FB16ACC808BD06603D83B2AE66C0
D458171E42E732F5332C61623B6B18821EDC6BE3FD98C5EF08ADDDF69890FB20
39F35D4C98F58A9813080D0D13DF2D681EDF7F07AF550F3C88DD7344CC09BAD7
FE89D6A84BAAA892BF31443C40E10F3C2E58A082AEDF8E3B035DD4598E9590DD
C2A7874BA505799B81A2598C9422463D8B1D450DC7E71CA5DE4E232BE2711298
0DDA8F55E68313BEF4CBE85820A8AD3482CE14B139B97C8431A12536B464F32D
BB836FD83D429D7BD82F2F1F9A17D71F983E822526524F99EF9FDE1D2B4364BA
59699FB756F3D9DAFE24637CF3B22E970C1964213EDE7EFA36AD6C3E50769DD4
D30E08ACB06E6C5B432D1565C4566DFE185F2A12E74835F5E92FB27D8C0C4C79
917AC19F264D3E76631888C6D29D64149F539EFD33F13B49014BF33A5D432781
45305B5FD226293FBA6A019BF93854A7200A73C9A60D2DC438B5AEA075E2B41B
3109A19FC313F23242AD35C5B3A99045B99EC805E25F46A0C1D1C2808BA3B3C4
C135EEE52000473EB5E85AF7F296FAE910CF11540DB61A786024211AB367344E
DC5E0408DD28E42AEE6DA9938CDED3C5B3AE104125F72209C1E9BE1204860F8F
BB685E861A47B71A4B25968FEEF438B2DBB155CC3E44B6C90E72735DB2828158
267B7E6E48BCEACEA10FACC6C765C599A9AF76FE1B75E9CB9BA9252A603B3E95
EB856A85D3762F7A5A783A394D33580E0B8E584A4CA5B0B05E4D459DDED50D3C
8D12E39973DC2635BD2D1989C0E19503C309A321CDD275BE0FFDC4392C5C71B1
85D1AEFE261FFE4FE3088A4CA9F4F8324F10E5E26C350C85FF3F3825E4986768
4D2088541FE5F6204BB430EF328DC21986FFF43374E15A1242DD65748BEE5571
0FC66FCB65E3182CB065B2BE0034536589B6C23B2BF72B95ECCF029A6B182FF4
10C85556857EB4A7CE9F8828B6738285A8BC4C07F470EB6D85387FD358A2E705
E0D8F8B575CC381265B22773B0927FC8E5440F7A415293EE84EF32C05B6215CC
DF6766ACD5626B5EC04F4DE6F4237FC68CAB8D96052D289A653949F11C130F37
E27A62B17E62CF33D173AB85AFCAC3667E2ED796A8D6BC9CE98F2B71D986256B
710655E76CC07CCB3A4A7094228B0127757402E8371EDF7105AE4903D01C0D17
93AA3387F7383D154BB5E0FED6932A5E64E2E417C6B64D84B19F7C2D7C143E28
7AB97D93DB3F8EA2A7E25B58685556C172074527E26056B2FD35FF95CBCFBE6C
B3C85D2088E9623DD2E25F1CDEEA3F56360E4DA56184BE9677D3547C4F276566
523741B088BA13E1AF91D29E755311AC11E6713603757B9C8FD4428706E61BC6
D74D116ED9C67D62C4043FA13F07BE0B463991F091FC1FFCC824070D0C448970
F063FBC3788EAE454D793ABB1A4668017047BD7C10F634B1AA207F20A703F7F4
6DC699E0ADEB767D6115FA842C30CC95394FEDAEFF069B64110C2C6A35909BA2
74842F4971361A279F53E8F12EEF7E17116174B746929799A584D93CEFED8768
DABF7F2E4FCED47D16F4DD23971A09CF058DB83ABF6919BEDE7F18E6B622443A
1BE36DDB8ADD8530F6EB1DD8265712717E4F7691688FDB89506C289B083AF3FF
0BAF2E5929BB08D42023B94C5E0E5DD5D6EB48B5EF659F1892A8C81AFCA14870
4CC13136393F4EBF29885A69D8D51B47E08C814B5A0C25055F20F79B019857F8
2B0DC22D4242A24C82181C70A2A97C95C1BC75FBE9DADC353EF52CCCCEA68A15
8DA81D0DCCC8249A06DEBF32789E48F99448214E85DA73C7B0D2986F7CC78160
CB6470C6042E6C6C61A1301D44592A978ED9166CCE1027E52AE9E848E7ED3289
9B96F92FB7CBB36355096B50C9CD8103CECD6824C768AF07829359D9585E6439
0C25DE13AC5F06C998C3EAAD652E6D5E754B9ADE46841E52DF90C3F0D11F8124
53B19A9664C864AE888FBD4734ADD05ED338804C7799B505E6559BB8E9664CFA
5CB68AA71040D5DC565FC8F5E0A2217FFC8F1476909062CA39FF12A6C27A3154
FCE0CA3B9A1D56DABD05371F9479BFA4CAEC5CBAA8F598DEA3D300AD997B92DD
4FF80AC6E6C8BCA54E8DB1C5331F6C36A17335C8B45AA979BAED3B8850D5340A
CFE3A79619E22146F02C6B7DD49F11E298DE9A3E1E007A7CBAAE3F6916FA5F10
B5FF1AE3631B565FC0FA1D755AC45ED90879666A838996AFDA0426A82CA1E99B
99F206F478EF5D12D43E6E339B8886C2A0D0097F25436176CE31712225DEB118
BCFF2976D83FBF504FC1DF59835E8856E8DC10A0E16DDCC8CCDEF2831F909892
92F025404669271050FA29D04511C79165B5315320DC3DA94674E8E633B5DF74
EA12AE529B735031ED0B3F057018927D5CEFA369651EDCCC675CA92EE7A68EF0
0EFAB2E84E647AF8DEE21275CEE2F46269FFCA293BF16F986B502216EE842B18
E40440073029536DCB6D816B53D1B814B35DB3D06C4D3E956FB6C4A135F8AA38
B6CBA685F5E20E682A44EC6F106EBD70C221DB2B8E7EE0470CB95BB1DA08B0E1
4187348397F3EEC97D77DAA0D2DAC29A0339A42F6A342FAFA35AB12F594E3802
318C52B7C24C39AF3E7B326ED055DF38ED3E14D91AA0F17797C9F9B0C163D51B
5C8F05155A655203DF7E68A03C527E18054C23E647BEC76272CD38C921577A07
F9CD3D64576524BE0B1B9D79A76536DA7036198FE449000CE96B57C6BD029C1F
D1E5EC6983AC6A3611A504680BC173F397399C24EE8AC85E4D356B837A8EBAB5
AC7A97AC405D3017AEA72BF3ED6F73F13ED4A6532DB8F72A0FE2E3B99378C897
58D9D9E4979EBDB02542F81EBA84CEA48FDFBC3A05A8256AAFAC68F3AB9F00E5
498AFBFFCECA6178EAD7424BFB22B681A69BF0F2F6CD3E4A4EAF13ED55E337FB
59EF89B24C28163F9270AA4C95CA0F5B5309F0F429F796770CE972003A32A4E9
4B5C4A14E7DD69EDC3BF2FD05AD62E9A6429A544BDD05C06579280040D849661
AE6670673F867D829672E7B614EDB18B5D1E8B35E7F40E0255CEA6BA5921AA47
9B5B48F87B63E0A3565639CBD91D484D950DD6E63DCCBECA12B839EC82909D2C
1B362480D664170FD5FFB133C0D8E5278584D014835034312BFC66B5354EADCD
65DC2354CC00E89DCEACDCA6C4D715D199EECEEE044C7EFB72F5856534B80E11
24A964B676DC7ED250F98A9D54B9F2AF8132B8E428CCFDA5D2604856C8C9DCCC
07407A115D6D45B7DF6929B1C7959FEF7297EE576202FD04008079F09BB2FB82
B1D1E2E579A367895E3044180DB5BA5DA3D02BA761290D59655C3E19D6719AC9
C2257EFE8025A77EE3FD66EDA1201BB34D65231D3B7E999C1166890D3F5F644F
8AFCC6540A50E866EA1803EAC4AB9F7D674E7089B4D57115306585F540489A9A
FD645265013E717B3EA1B56DCCA040C9F83D9A128B26305B0A8476187101E350
556D777258A7BC264EBC0DBCAE0E03DF07E27D1884DD1BF8C78FC8C5CD3E1406
CAB274BC42225A1444D5980AC56D9087DCA269443AA080F8A9ED9272A9AE659A
3B932C36428EC592739DE8BAE5C281463B9D81A24F8DFABEDEDDBA75880CD30B
27909CC8C16F3FD2AD267B46E18A191012C379841BC04CA52668EB17588489E9
4A05A86FFA73D895C4E3E70A1E4C2408FFC1CC93F982099642D3255EFD23F09B
CB864783088DCB783FFFBB34FCFD743463E2DBCCCF965C397AF1B7F72450C620
EF78B30DFD071C1E0D39AB6EF6352D61A6DBBB97184A7634F81385AC33464F4E
E529649CA544C436D37A9881222F448EC3A66F5236D4B3C6C73139DFDD386238
3272AAB4D1B588D2612B05962DA780B9A16F7DB74AF6D8B7587FF92CF87FA326
73E93956C6C0FF510B62BD4337BC2FBC5CAA87EC2CBDA57D0AA5A4A8385B0AC6
8C47ADF2420852C0F183A780F4511A5E22F6C3A0165ED82C45D26F55C63FE541
1874BCEA002D2EF289BF18C8EBAE755857D51BC05CB67AE5FF5608C53CB0DA13
8A7622A931DA293B0B464F09F16B66C47738274E1AFB196BCA5EF7FB00AFD613
D502467CD5A13D51F07397E9340DFC7FE7FEED46958A8A133F7B56BEE923D2F3
5B6F46B3EA8170FF3999F81FC9440F9C43A86B7BD84A1048804C91B4D68AB559
9C2CD7B6F41BC0407CD17114D98B285BEC5D69FCD69653F2010AF5AADC0016BB
1EBDD26986143A84C10F25FA2E54560FD9CAF494B473D44B5FF7010C93C65580
032C12C11EF83B0AD40F78E7C7901AB6DB899E2B9731A5195A3ED6A9DFA31D65
9D7F77A6972C032C90333D1F38C49E30845A02B37098539B99354F9E26F1AC16
0493751025DAAA15B6DD86726F11F5FAEEB6276E520F3811B02F683B1B34B581
4F82B6E9807A71AE2A1B98EB49A54BC0B5DC8397BE4DDA39CB7887696F985E03
921123DCE738A89DD8484D4B114812508A848CE3BC9F4B77EBF56B7A4ECA2869
53C83432120B7863151331708AF0D806823923CEA6F87A9E3424C48FD31CC4D5
3EEB440910361ECF2DADF9C10A3B588834E54427EDAA1F13E0F7A15D674EC43A
1057A37AA85C8FD94BEC623395CC823EA99B973D833C01353309DC85545C8FBA
5FE616E33EA27EB58B13D3A422BF814C87CB5CAA345271AB64CC7B02763BA21C
EF232AF4B4272B8C2A8BA59A7BF5FFC7439873667818EB99A8E80923EC232A9A
02D7EDCA1038FEA46B99D05AE5ED8E32080531D367F80F9E9AE8E9D60E06A3E1
FCC710A19728ED20C3B2A6AD8CC21D99669174DBB03628A08968FF493123E2B5
943F9981A3C97EA89F2FB92820F84DC9A9208BEE33D8A98ABDADE1C8034DFEC9
0D3E1942C400E928AF73DFA59E94780A7AF45966CE12B97EF8495CEC7C1CD28F
EFA75DAE82EE028AD1B16639AA335708DF3EAAC1A23B9ED513FCE91098F7EA61
F7EE8DE782F0CABD073F2376E1227F65FAFBE78109CAB35AC2730A761CAAED96
AFDADCB611AFEEA0B92BC6D1851F9133071CFF77F6B7BB47F6A8AABB0CCBD932
A4C517BA7C024CE791E9E85821EC8C159572D7CF83F981822020847F53C4901A
E23B2046186201510BA9F24361EA4C88733185E2FC5BD3720DAF7B78B945F86B
858D6608F304E3C1330E6D454202CD0DCE6A178EA87FA1C76CEFA92E8FD407CE
0BC1E0E8EA5EBE255817A38CC130C588AA5722CEEE0ACA54D08C2052F1E47AF2
B31598B47E90268D1735C147E3E89927A8B91C3820738A0D2812BEB1309E8862
6E2C3C0AD1AEB4623307347BA2B3C8B59994060115466D1A5F09C0DC60774CC2
CC687C0CA5B9D0CED602B447641C60154641171E00413B4F41AEB6E685240E82
9C07F1B008DA0116634DF877376E6D8781570A540DBEAC2A6E2F100DD95B678B
6F190B1CFB5F19BDC8AF5B39EA303CDB814F8CFDE0554966F5F2EAB0A776559C
BB62EED2F6825FDC262E73B7E124A1991FD654832AD315C24A7D17C471B92FBD
60C08B86A3021E9456FBD0721D1A90B7633CB21449E35BCDB4FB7E10791160CB
D44517068178925302C10D5F14CE4CE1D9FB35061CE985FBD4CCD2D249ECF4B2
A4D9A14979BA9C4655AE5CA4C97B589F5A2D51C334C0E0F38B0821BAF6C2B181
CF24B82C5BB33807A1BC6D0A8DB27016BE9AA5E45342172236482645367F7E7A
1C9E201A9B0D58191070F485D25B1FA78E13ABD8C7DC9ED8EB657D83F41E1494
FBF5585566457390A31BD6D5EC8A32632B47F6D7E54CD9089F3D5A2008B9FBA7
CF5509BDD99A537F5C95D5F8C9B323648D1111EBFF81835631AD6C6FB88D8E7B
3605E6264DA908F0C231A396B1BBA0C4E73C6FA293DBCADFC92B8F8208E1F5D4
AD5168373BAB59535662F7C86332A5094851309F56AEB8EF351399B3A46F037C
4184CA5445D5B4F43726D9BC891653DA63429CFB34E900EE8C130A72A06E8D5C
1C3012486BCBE5CEA9A627FE21EA8A6CD551D9E056411524F1AC2C3EB8E5998A
2AF0E1ED9254513D2002A9CCD73361CC952A8050F26BB938FEF83F09F9853135
3C9A8EBFE7DB9C9A10AB3AEF0BC8AACC83777F9CB34F0F01AC457EE6D2766B24
3DE395CDCEA4E299612D06E9EA75D6A164880F7560F75373D49E829C1C0B90D6
F409B2CE8944E36A13BEE331237AA2D9D1B3130871A73C6C9FEAE12A28CDB1E2
5F1F97125F8D5F86520E87EF04C51DBE90577FA058EB6246A4916C634E088B66
0BC1DBC11AE791DC4F14637E71EB29B7112777B3F0D608B7A4B741D98D6F302C
B1578B0EDD5E9D2C97DC02A88A03A5801002B9F278E4A2A8902F9FAFE9085793
2AF97EA1C6F0B29D3D257E8D7FD70AF61BCF9AEAB8F416A2DA65E18872A93CDA
8ED823D76D9D1546488B7E05ABAA458C5CE797A327685DEFAD7BFD06776EFF8C
4D4B6B7ABD57AA7D30C03CAF457816D72611AD40291082F5806DF979A7159DC7
3D7C51C2A4A27187E7F82C41938C4F0D045A09D31BDA37184E620C8C9F2834C6
AC70503BFBF3F5EDD2CDBBCB965BEB1AEB597276E4E1BF52614076A37EB85718
6D69BD3EBCAA2B6F925AC601D2358D2F60E741D6C3AE789DDFF9B8F42D90434A
48E389D6D77392BF273182A539B5A9039F196ABA7B30D996A88F7F8D888B475E
7953F1B4430E6807F0995663648E5BD96008A6B5372E27C11CA815FE866F5836
A00ACB64E43E0B02F7E7460A07E76097318CCCB6EFAB77D79FDF897566205511
AC8BC86EC06827D5AD6635D2412029F0F58704F05F0B9EA64E6392B51B9BE1B4
8619F12AA3BB5B525CF4D5F48CEF2728CD7764207FACEED85F6550E9A28A4655
3A8A85B8F34AFE4DA1EC3AC2D43E99D94DD0059F5D3F069B788350621242D8B1
E236626AAEBB944A6415A4CEBCCB7E1BDCE1C7CD54907F2ED4CB1E9D67895765
1E0F2D9EFCADC2BDD045002D6F6B6154946FE719095FF43D178004B3538F64E3
FC2DE3288C00B13583ED674631E74C5E8103C51CB9F50407B8FDE5C2B06F8BE0
3AFC1BA88831D98BF3CCF251C95E5547790325A6BE858036376C4F59AEA81708
0E044638DE7782ADE300F31623385E9F8D5318E8C94F1CE60977906DEF55032F
07DB4C25C0D1E15E3395B062B933EB55FDE1C340FC359510597C3ACDE5E2829F
D745C84B9029AB314234DC607452CAAB956FA3C7626C70B16A053495F2CD535F
8D719277F5D4878326B628175CB1C8BCC008B39FCC4182EB3E541AE6C32F9D86
CDF53BC49C6CEA6EC5C9DCC52F57DDD1DC19E19CA5DF2F8CDC8A12F4FA30CDFC
5AB855D56C6B1D3BE08AAFE98B384EB3A8319FAC5C83038807C1CF9869ABAC63
9B076F95279473B12628C0F838AD7ED830886303207DF666D3E2E419D5F8F8A9
70305EEA103344ED8858C8FC0E664FA67A027A3D5FE8065F6783F91A3F9A2228
63EDA09E64E8A64812CD3303017DCF56914874816B3D5FCFE77C698545CF38E0
58C6917D4D2261EF3B27F4F84A276035439478AA5A73A507C675C287908E15D0
0DFBAAD8E99BA00093546BC93EF4449C6E2629BE1EA48D1AD2459946C4221BA3
6A682CC210D4205272A9AC765A0BBD8CEA4AD8DA1CBF5FB8B29B70C0831ADB61
A92C2DB592CF08B3DE2FFB39426BF6EAAD2163B2871DDB76497570C90861F3EC
FC08469034298A180D8DECFA4D3A11782E2CACA34264A7B2D9DB9A41642DAD04
6A4CB773D7F168250613649BE02348AFEDFDEBD40D391D3EB6485B96819E6041
30EE867238D61D75F0437499D49B3C1846FF96CECA3E6C2448A5899FE940A25B
29B941A926561478FEF14E12BC1C481D39319341D0F40B95E442CDB7B60E7C81
5F38F70CA2D8C6CE765F1DAF43434D65F592A64350B6F36748916FA093732FB8
5F961C7CCB8ED4CFB646D9E3075280062A516E9380E75CDA139A41222A755F25
E37A68AFC04B38D702DE7BEE64446E7D447B7D0A9F1528CA647A7EA1B43F3279
BDF432EA64641E4DA4A575AEB7D168C24EB596C0DFCC7356BD6CC7B2063858AF
7CCEDC29CC51861017AB759BB6D3639906C70E7182FB93B2668CA0EA5CFDC42A
FD0AF403EEBA2C5289F0BF3640262FBE15DEED450E81E397D0ABD05A9CB3E30D
938B03EF068D17E4EB159CCC21A57879D8E1AA7A5EF7BF0B9443F34E730E93FB
A25AE419F469924573D54F013F3EF2DFEA5D10BD495D1151F4BB20BEFF60640B
11BC513A4B14DBD67299AE5B408F7C31A53640E45FADC904218547AC25992C68
6832DA1978D6342FA1AF21FEDEDF39D72B614DC000734C08C833D04EF99ACC09
926B82B74119C701E3AFE78B8CFABA822DA83F003A14195496F4A9F8943F955B
C90EE29DEB37FC40A6A1D883FA76B937574A124007895C0483F9A71D4D03B607
C376C96F0E40D7A518FA13125D8B037CD15D27C4EF0661DDEB73E854FAA7A114
6AFC07E175FF115175911F8A005B2E60E956AD6729945C4D5210E2783BE78475
5194506CAC317626CEEFC62A27FAAB38B5A65E3BE39C00AF9B8A8D70B7A3D286
27A5B4479B1092C251813B9A0345F5D64566319B80F92AD5419695DCB32D5381
E0C6765620314119629F3CA3E756D41DF791F9FA6936CF5BAD3B4D642C07FBA1
FCE467CE6DB4CC7EAFE8ED4B7D58A450EB9F010D2FF7F7595D607CF07E8D1473
9FCE2ED26D76CBCC29BECAF7B453C249E9048555832BAB646B7807E893026AE4
7EF1379BF1885AA802299461818A54D0EB53533EA86C47BB94F7171024A70DA1
8F95C609E581F7178C709C03D0B347B1BD06E5686B468C767DD9B71530C5F01B
E2D2611CF9644C28F3F3B0FE3B8EF85867862B8FFA7167A39E37833AFDB4BBAC
2F4AE855754BC800985A57640B2B6105B2D2C996F6D00D3D8F2228C2353E88B7
86F963BB76469CF7937893E79382DF6E4D672D1306407D69F633E5C7B79CE97E
FA309D1BD03302B8A797C9CCD0C24ECBFD1458AD7022F1A65AB839FCDAB2F8C2
DF4A64E655BE7CD1740656164600A45D547A3094786A8B0306926BEC3DB7FE51
F547AE2106654AAD88699BBDC9D3FE09EDE49A4B4785A6F1FBA8E51B02AF3247
216D8F96EBD8D1EC18D48FEB29E968BF8D11F14B3AD58805DC0020DA959EF524
B8BE47F16C0C8D6D15C47344F7F087692E1CA20A680F0DF3DEB82BFB862DE99D
CDDDA764F6AB6878C9A0FE5F3EFF497217376B8D7BE3CCFAAD84FEBC79674B4F
D4F282702C2C30E9B139B05B12B45AFC859FF67CF19E02E4E39CA05A8F919A4D
1A677F23E21C499ACC7B5B6A1A3749C1342AF400984F1D7D57B2253F632FE978
DDAF5E0A70C2137B983B1A5A9C27E4E636DDD749286B80A5C22474B49FC5C093
A827706BF3F0F2ABFBA17B3F0E6D546D5383E38459F8D735CA885C9235EA1D41
819E8969B545627DC5975F84C55649D54E259BC077A76C9477EAEDA71AD36A1E
1422A76D86F602E1FA74D8AD1DBAC8AAA9D46DF7133E8CDB0682EC53FD322AF0
C9804F148F98A433D6F3C4B442E014E3E5A5E82E52DB5332AB2A8B77F619551D
1B385BD6E1165803EE97DF934013B3A5A098BC0972C52D7AB659517940446521
90053EA76549183AACA9ABE9109949A8FC60CB1F9D224EDC2A4F529AE4D6E393
821D66BA7C10EDD126BA3E9D6B0D36AF45930F8002A2F0D409663E8E298A8136
4D28BB765AAFB901376427AC06A782822F1EE9501481D533B2FE9BD05DD58E41
616BA8F89BA014A233448C09073A73F51F8255F707843ECB6372D699DC424B63
864E9670B9C5A72B094E60F2C49ECF4C8B98F7A0E4A8D5214D07B149EABF51C8
5F0C8A7B7BA20A63DCDE4ED63CEEB367F9F821BC41A7FEB9BF2AABEA03F19BED
75004C2C2D3E3F4BA14C40ECA82FA7F76D805CF122EC293CF0D43844FE20CA2B
BF32F4E538D9D1B87A8DC71DD685A1CABF509848CA84C2B35ECC10DE1D4A063C
E605C92757EF19E733A2A2B3C97F15CB4FEC940C45FCD7F44ACF9A1B54D7D271
E9E629110F0E418EAA50B6C9AF6D6EA8ADE4E73D4934F65C216EB6C3A6207CF3
9EA825E6DD14687C501911715F16FD79F34C2B0C99F08A14AC86DDA425551FCA
EAE8807EC46C97979D360EC064A3A687DAC3DA68406719C1B3F0C6BF1246423D
5AFBF22BE9F1809A78FBB5DE86015952ABD5D2C8BA51EC4C21A55CCB92248852
2C9EF5B5CF6BFC015A54C5F26A3B404B9B9376E79A803427F3154959D18974C2
88F493E8B146CED8AED058C50214F5CC3D359624D9BDABADC859E42CE29B85E1
2C010231A1C003CC9D71DA601D5CC37B484DE55BC25BBBB53FF1A1B24FFB5269
6436B7118F7E76F7C27BA8B531C9147124590F6DEA635B0822CA65801E9D877F
10F7C8C0EC1C402439A8D5F5B248E0162152E10311F769908CB2C18708C6BE7A
532F8C1112CF4A84AC845ACDC41C6CAC48DE61F40B8A5C89479548766B85438C
10412E9C1BB27D8585E2A8574DC7F2F698730476BCFD29CB57CD1B89EFD3F08C
319A73F84CE822BB61C6C628BD648CCDA44DB60B61C9E990AA8B26441324A228
BF89C162EB68EA6DB1568477E29873F9600A094DC3C4B0CB7DE48870D04E719E
E8ABF4AC63E36C288D37E6AC05331D22A0AEE3CC6E074F773BD09F1D6E4B8F92
5E543869180F1374F8B233A22A4CC3FBCD1349304B2F9EC4D5C57518E8210FC2
C61BCF150BB0FA69E0FD82A04759D467B857FC292243413B70EC7548810F01AC
2A1FCE529D75D24EC1029739FF874B31CFDEEFA9099E526C61B755645D8DED5E
4E059D5534E951165BE6CB131EA0E138F69A904DCDEE56EA78FE086797F74F87
6028A3C1B4C7A1CFE8F85CCDCD23E9182604CB5D0752DD37CF07337981E98FE3
B2E77F515CF0E210279455829390B9C4A136B25F470A3FF2986C6D5F063C9086
3C98E7E802CC91B5B4D752F401A541EF29C4A280EB0B879D80983410BF3FC473
F52276CDC3942819204B32D5E445D54C9E45AE5468512B4A44A1BEC6AD45BC73
F004B8E2351FAA9DFBE7F81E7EFE08110639CA1A0516234138EEE7403C5D21BE
08BB792AA10553F06E6355D0789FD9ABEF07027D0D473CEBE3D6B0AA1942765B
460EA23FCBD5B746E47486AE13AD4E96C8522797A0CCBD5A4EAA408CCF88170F
D7CDB69A5BA481CC70B1DC86D8BDB89DADA3FC44D33AE8B2BDCC9705D1EC8848
293ECD9599CAADB3C0CB308717B91244B5FFC30C900245D5DCE465E3CF3F5F46
01A8834048C2F40563527AC4DB5221EEF18618898BDA567D425EA4FF63763A31
3D19D629E2E08848466EF3DE852270B8A793901EE4D288BACD7EFABFDCF9F836
D1418A667F26D0D4FBF1320C845F3FCBA77F1433BC71E3816EC1256FBC58A5AF
72C7F8861A0FFC78DC6FF7FA7D349FBD7038A955E17D08C708D13559F506ECB2
81432C904833AA8F093684CD056ABC46D35381AD664E28559C08B107B1C7B510
C9E824DA899451330B1C4FFA97CC26B5EEE25F89C79593177E468A0E322F1149
2FE2D4693CDDA5926F4D6643907C79DB2441ADDBB9DDEFD18F912AD1238B5353
DBAAFC7094867943E991B821CBFD12998A51229EDEA18F865240ED6540E3EEAE
F158258FB01BB4D32A9CD744F53273DE6D64FB4C7D441AA62D48801769531ED7
EFB3C438EFB1B1C6810B80ED11E59D700348A585D49827535E9EFEA0E46A8269
92C8E5FFF579E85965F5408100B416B920AEE658E23D7EAD879FF07E6137447A
A8030F49A555B57D5136AAF60493DC7416D31D1535DD82C80647CCFA91083F30
0EBE5FFB17D309940D9D5A1BDF081F4D77B120CA387C2E173BDD0A4632BBA6FD
8D1BA622D03BF09C5C78675198DAC58585F23D1B2220F4E344162453175C3143
782298C3D422919324DA0DE6005F9A1BBB281AF766FD5F426F4986844A684CA5
3DAA0347C89F8CADF0BA552B9470B87ABC706BD2B93189860528B5728B79C2AB
A32187684EB7BA2C9A604C2900ECCDEDF261F9F444400692F207D93DD932FF13
1ABA3DAAF9370037C7CA528CB31F91822A211970E1BF7BC47650350A07206041
3A1EFAB8BBC94E2D8451D9ACA300FC5A6B63879B00B03D96C5CE43B13C27519F
D6CBCF26D416D956509288D7265E538E4DCFECDEF0BB0D587F719B122C8DC624
237666A5BF1DAFAC6642F4A1BC4F463B16DF465D3A003CEB00A0DEA7AFF1B56C
8532FD0832ECD5065286EF04428AD9DE5E157586DB72BE0868574064773DC146
34064A19C7F64D348A9D4D912D3B978E9A8637DE186ACB2FFF37667BD4324DC6
D9D2684EEDBEBA5A02F7D556BC74571F0C92D518ABEB698A92707A993CB95A08
AE35CB8763834B5EEB4BF592F424E6FDBFB23D7F144DA8810A9BFD745A064CC5
DB44FD0377CB83FB7CB42AA850C2854A91430CDACA992D5AF3565AFD9F86253A
DB37FA2C4AE4A271EF97C2A85F9FDE264B3C2AC306C5B71890D3FB9F06DCEF37
03928138740C21227A9347685F3E69DEB4EBFC5005486CD1B3524BA00AD1E9D3
A83408C1EE4DFFD9202E22933C091369BE6E01C4C4F6D85252A1EA2E0F61F249
D467DB74E6B3C17F73F9EEC11AA7350182CBA3F9C02041DEBCB1FC8F4FD2B996
6F10965B8B73C39B2D3BF5D18F51FCBD8ABFF44A26B33812E37F4EEBC3FC3D98
55FEB1CB9CF8D2467147328F9FDD6B8A0D787AAF82A75BF1F83C3BE75FD22DF3
EE82510755DA81823A6A63FDCAD33C163EC3EE82E46E8295BBB12518EAB4DCE8
6416E78C371D775A07D1EF91C4AB0765908B291D19123A50B3B9253EF46BD53A
EEEC61B8DECC065CAE29879E8790C55276CF6E72108B162E3B7CEEFFCDDD13E9
D85B80344D2F92CEA50E672AEAD0F92D8E6B62AC6CF6734A35593431038462A9
622D5D87452098C40B92BAAD308DCCF05CA0520020FADF24A3504667355C6EB3
0D38D4385B27576637A94EC4DA9010A5734EA06689D3DFF79085ED14B0E2890E
EF49635649D8C8E0780EF3E75AD76F92A474848F4E4D728E2307A58ADEA39F1D
B06D3E48189AAFAD5289F90A0C7D0F49E92C1434A36E910AE1EEDDCDE1A72E0C
1D41E0651378DA3A2D3106E2F0DAD83526D67BAC22AF0F74FD350CB7A63316DF
7DAAD4BFFA27ABC56123054DDE975A4ED70293677BCA988B35FEB8ACC98621B9
7492450412AD5C0DE46B53F837E8C6FEC53452814D1846C82E64B247D0D4950E
1F1E8B834EF839CCD37E35880EE7452CC73F2D8B85A10DC39E3FEDDD58001898
DCABCBBF6FA1ACCDDF67A8730E359EB959D1255E1F967C3430BB992E0B4D7FD5
7A7F633509FC22667CAB1609C4CB6B65E68DEBE7E7FE9B2134E3EFF20E8AFC2C
B40ABA882A30E1D8224C1D6C7FBAEFC600CA4D3F53ED794D467D070CD57E8FD5
0D2308DA6470B01C1B532C374832851974181CBBE316371E942E5C67BD9CEB12
78DE5FDDC430782516A735D7150F25897F206ABB2967EB26098CAB03494BF75E
70DD89436DC95ACF10CF8BF4314E6F9AC71F57159E78704C9E7A0308D97515CB
6CF1126C096810E856E7BA39DA8D1FC93DDF5FC0ED74DD01BD1B697537FCDB67
38EF2386493FA888A75CD0E90B4F84AFAF3C7D1C8FC99F76D8E7E127DFE0B743
7070B0B3DB2E87E0CC5B6D2A7A73D390B69FD1E0D156B168D9868DC0A72746B6
E820015C7F3A956DD0C8E4B769A827DCE3A4CA1F39BDB145B19126AD2CEC402D
A6854ECFEE396B8B0E1034280A460207485FFB19E0FD023698EB0F8288E48A96
E8A6C1B1045FAB78A049D60F892F8609AA1612D59EB760C8F0114D197A396BDB
A1FFCED62D33E8E8D9A37B150D9A0957BC3716DAFCAE5B19A15973FAA7B4CEF4
19FA0253A1C9E0DBC99E2C8BF9A3D7A7058C0E1F4D7E611E82B01CFC6994F8A9
4496149C5B004726951978AB1C6AE9E8660785CDACDE10CC10E9080C619FA7AB
A3B87F4E93F18EEBF7F223EC5BFC5D960AA428DC624FED58D8F3E1B96AC282E7
60744D8ADF91C813E188F0A5455FD4A37EDBD51FD60FE6C223AF66AF5FA53909
4D56DA1257B699B0A78D9889BB1E95FB2E5214D0B8D5DBFA2F1C0B8BD72127AF
D6698325953CCF0692CCAE83EB894FBBF995A9222F6102AB85033FDF13F3815C
AD854E9CE5B149E96204F147DFDECA0203B05157FF9D5CD73D1A45A0D08EDA81
D509136CEF0A9659847F8BDC7906617BBB59A43B818E9B9AB7BB6A8F667A887B
DE2928662CD21C199544E930FFB0CDB1CB07F64D0F914372B19AB3BDF831251C
77C35E9DD8D6D3A5DB1E8524C1D07F6F5BA50F59DEFBD40EF94A8373EDF8E1F9
49A6D469E21F9BEE2B41B486414F84BF6D5A750C906BC1C24B4464737C638103
8F2AE84F226220DF162759F51A012ED2939BEC4466F07304229ABA7BB6DCB1A7
59378C9EE255238AC8895C9A08437E652E16C405D2564EA423983306F27E0629
8229BCFF6924DE6CD93ECCD6EFF16313703FA4E1E525927C673D9C8C224D9663
E6BB0E7EEE6F9C37E55DA3C0ADDEB2CDBC3E999F4749E2BB286BC1E351DCAA10
1DAA6BE705409DAEC79C12C3D7CBD5002384026E5B99AC338C57A05C4E5DF612
ACD38262CDD98B13E30977E0797DC5968302928B49F83FD5F3D4A90FECA1476A
77A097BA828FA54442231A9E7425E620F7D6E5D5E12492E784DE17A84B0C8332
C0ABB517C4108BF111B49965D04A8508B93E3689EB0FD14623DC6056DFC1DC23
80306D8C4A4B10D9C56CCA8C260EB724FD9D23BF4100A37F8F183B26DB106CE2
CD51FDF2640ADB5BF5C30CF1CF01AD8EDA6AD12BE81304B891A5974173BE6951
76631561C50E591B59CD3FE8AFCB239979CA9149146FB83D8A3D8F82F699AA20
E077EE3829F28E98E992867B9167FF28826FA397FFFC40352A877F875BE5B6BA
494A83B01E5D5B4B7927FD142CA4ABFDBB4EBEE5082BBBE3D97ABC509916ABEE
F83F85DD07E6479AEB6D24061A9BBB0795EB392CB3C1A7BE4066E1E94106BF78
813641329B49171AB0DB143BE9DAA189C6FB99C4499BD2BE27E77ECFEE190C95
9E78AB1C6AE9E0BCC7935286705C46394020432CF2A07466D6809033DBDAC362
D6EB0FAE6975C166A48628222D4A4D45BAA8575452EC99273E3E17082907DE4A
B33899EDD6536E734C249866ADCB995B47A471EEA5999F41C95C0EED066280F0
2E470BD75B8079C2A0D64166E6EA59A4BD305BC1111021FA778F961CF9979B0B
690BCA0CA2D27C4D0BB15017804371F9AEBC10E03D25DA9F7A9489CA0D08127A
95F8EEA68808E9DDE93784F9AFE1C032512E3FA7210B233B5A83AC95491EDE4E
95CB450D0AE2FF8261A88E47942D7C3F02263921BD92DCDE0A561480F0D70EB1
4B5898E4A7FDEAA124A3E4E4CF81BBE2193F550EB4F3F61707443394481A3D81
330D4C9EA249B89C221F7361853CC86001C1777862D9F30EB9AFB705F869A4DC
9418743CA6C867AF193A55D17766E68014901FF76E3169089797CF67B76BD44C
B4E3F0032444DAE97299E6E575AE9565BBC69F49DEE8C5BD9DFFF4E36DD0A0AF
2E12C135908B0073B6CF8206872877CEAEFCDA4454933344CA2024D19171E2A1
FD92C484CC6CDACFE904F688DF4329409804F8804713634231B5AA3A1C9DAAF4
90D81F519B5EE4EFA00E8AAC02EFBF023FB365FF11C454FC71273F7EBED040B7
08E9DEB770E2A29021B08B2E9FA66F6D230B2538F6F1F0CC87407D142DCD07F7
9A81C54BF0F8FE674B4A227640241ED647B3BC65D8F1A359D971ECCF54F8B5CB
1480E1AD790EF804294A1FAD08E8CAAB9C85210DF9A775FA151D8135B1A092F8
451F716988A80E650A3CBCFDD80EE0D2A55BCA70A7C7EE8E900868B19C817AE4
65066344A4B75D5533A996780B1F06FE19262F6B1C4A020CE8FA70AB93BCB73C
4B77B70F60116633683FCEBE6DBC88035BEF38635CC6E614418CD4940E17858A
9EA16C5206F980E949317D3BA17BED3089B1196CB8DEFB086F331495A9B70F57
87894C88C76DC8A7F44D93C6C64B9A6BA323D967E6B1ED7115CAA0F05DBBEE50
C1B646056E90368CC50800C89F26A3C7A004A5F17B8CF238F50CB267140D8E1D
175F4E1A9F87EB052824CA2CBC9D079C9C14C6B804313D3A4B7DD122ED26C664
6AA2E0C171C609599E8F29867DC01331D9C7AAF015B9F8B0A1A09D44420C0072
E6AB748BE01EE4D689A1F4ED0B8CD11C4D62CD82DFB397EAE8063D78AD6F25E2
A1512B2FCA1D6A6510CCCA6ECAB219B496E702F7BC880AA773B713D03113D5B5
5F9DEA6F86A523C0FB989D53EB4A902C204F154A049EC7EB2575C76017C3D491
A322B510DA205228B25FCCE091E7E552B6351630AC739611AB689ADB34820971
BD16AD187EBCC945918AA6E55187EFF8E3D51D8601747BBE2F1FF44FC5672A3E
7D97A44AC7287F295E6104EE51192D55DD0AA3C5F599876FC0D6D26FEAC21132
6052DA953FE27DB13B424EABEEFB050DB6789EBBDCAEBA5099BD4B33083574AE
53C339A4D3E280EB1597C4CF018D136A1A2A1BFAF0F7E3A37D5FB6DD000AD846
4438CB7A66FF5C07D1C9A29397F89ABEF7303CAD9603B5C81E979F8726DC020A
1F515F006468F16F36B1A82D7A0D2BBC281516BD1A6C3590A079684AD32E35D5
7E6A073A974FD7738C49572F5EEF987048C474CC3116A1E96469C685317154B4
38B0BF788FC6CCD3C89A849AA248F1204C1E9DF5271C9B6016AFFBFAD628A915
FE457ECAEB1C1A434DE105B9B6FAF5C78F353740E5BF8C3B1CDA958DEFF5D59E
52F1B53E54EABDA3DA552ED401FD3B8D894B13375D5C03624C7D2B1E383FA5D4
44E308836C6F7F04A15C8A7F6DAF09680DF54F9009862ED4FA2F47FD30410163
5A358ADE04E9285DE46A60530EFD1DACE8292DDC09863A395399F1CDED07DBF3
616FC43482D75DAE560BF7F7CEF5725474DA76598B06B5AABCC4C417E590F6AD
F1F9D726CB2CD81B4916A451C336EB39A3BCD70E70119539B8658E5EE0655C12
0FC6804EB22B676F30FE715168173F655D9CE41DDD0A2C26DB7FD61D6EAE25F6
74463069001B0727C28079F6A3B550C2CC35BEE1550E5ACF7611C737D601B44B
9AD02DA2CAA965B449D7B50101FF0FFE5128DE8B411AF6423B4481163631C33F
2F3B6ECAAB66E6F58414FFA5E6C04425BD8415DF8BB6419CFC15706CC533E7ED
9DBC8275FBC21A3BFC4E2303D064A26A52232B72BB3AB1E32C667632A4927205
7A7FEC33CE14EF4B9B9904B7E788A93103ADF367D563056E3F5A9517EB416FE6
4411C44815C5696E805E92DBC3D28617D11362786D9CFF04F1BC92F2199A54D8
D459907D2879878F2D85D980166C4AADD087E3C7646C6BF850C010150EDBA032
0C15F09652E9E03B76FA36C5821573300413A3281DB1B18193E666472E79980C
E11F284B6524FD50120EC890191C31838BB52A38816B62994CE17EC9E525B2B4
7B4F1C4933E11DF1A9354CF60DA56515A54F8FD4283B94ECBAE5014103EEDACB
DC40EB91431E365BB30FC6C5866E9CC3A208FA66A2C93D616618D9CA854B7FD4
096B3D8418F1A3971FCA3CF3CC8026C915CBF178D2DF8C58025D19D12BA8614E
F9BCAF784F5E178D4FAFF29A0E37F67B3AAB2627A3FC08C04A532E7464DB7463
AD29E4125B4660087C467A23A1BB2058DC31933CC2248D28D730B724BBDCE404
9761C83BF2CB756EA0E4FFB8EB6E5308D898E41389A3861E3337BCA07E4D755D
3D43145DB4C6FE93CDFC828E3C048BFC0DD16EB9D70F0E1B83F7C85069A011CB
6B30878B5536910F7C7AF7F466884470B944364335034D9D2E7830B581955CD6
B65AC9BB519AD5102B339D4E288A064F8F79B4B8FCFCC13245C7DC47D4D855CD
74E5952E55D817A19FFCA993A5B76FB4C03A8A4C4666B8198FBC36146742A97F
5417520BDC4E1B1E17062232EA67C054FE7C919E9FC66E56F5E018C3A1EFA082
C390B68A095B96E8994A84BBDF4B55EE86AE909D186DCB40250692362A84A63A
184C5B86CD9528389868BC541AEB957B97AEE2265047DBC91C2C3327D17F31F5
3454806A0986151D6C9D266111244C314EDFFA803800B5D3EB7F5DBF6E20DA47
DEB651744C4112A3935F0E06CB5245FE31771B894D674D77D79CCC1069414A43
AE58D182CA5486E91771370A6D97FED4E4711911131BD9545B64AF862C570DA6
FF7AD8D6FF3378F69BC9B6EC5D96A369F59F534091BD4913541163B29B78402B
492ED3379CA227C06E4A2F7E6F1832E56EF3693B4927772488269B7A491D7D9D
393F2F8149E222443911B053D98DF97BC65899281B9A19270D4460855D7D2BCB
2199CADFB0E3D478CE531B03D98D1D3589AB1DFF27D56B556250D9861642FA3F
B03524742CACB6E133A378DE5EE204590A5D046F2168B6852B84A71FF1DC3A5C
FAB2B00F4384974369E264EAF965754CFFD83388225C2F1DC23370B93D88B208
FF81833EB1A922B4F7509DD19995DA21FE731360E35AD600B9A5D6B8D3345EAD
8C05303EDCD1FBDD4EFD7FF0A65553F1CB0057CA9DE3F211867F2BA4DF926EFC
5CE049E52917A572B7A6214FBB84ECD91828BD444DD1B0EFDA4927A4256FC99C
592C23F66CDD3C658A16BD665495FAC91F4C969C464C1CB1D6EE210F65BA98B9
F68FDE78D9D36201F0F61D80FBEB4BFA7DC0AC82521BA3D0D29B0663D7D88B4A
A2BC2529A4D203B0248277A6C458B8DF9DC629F7132B7EC9351F48DA6D628744
035DDC9B1B8C2AA20E0B3E2472AB7D374A8CA98A15491FBBD4C872AAF5DCE29F
996BF61AF3BADD843C5A6AF84185D793B627A1E5D547A55BE049CA7D90C0668E
1B5361767428C7675241AF30D822893060C9EEC5272EEE91E0F5EB98827A5606
152631CFB737EF828AF299F4535E1A2BCCE8FBC5C88C740E6521C49787F74332
4245105975CE462521C49468F1B27339578F674CDE375EB5E3AB902C97B9A784
61E1B1B07D15D6C78153E9C599CE3F95E23504991B30322E6D30E9FE3BED31B8
E2C6D23A10FF287C15119E4E44E6516112ABE0548FFF4EA86C8DFF65A35D6388
1368C61F196CB8225E5A69CDE5DE9BC83ECFC7546ED519E8EBAAFB5BBBAE6A6D
893327ED42715C89B7E9FF7110BFC9D5E0413A0E66E6B868A7ACA73D9AA30FAC
E6D25B8BF1476FCE1E87A3F874A255EFC9C5E5FF577BE7A8356C86779403840C
EF765CC8DD5C7FC62503F25AC9CB8751F6FCC915378285737EB2ED18BEE0E9C1
EA50C522B5A42CA205362664DAACF3B70FD0E696393B07FBD783AB377128E2E8
C2E11477B59F90CEFDA3598CFF53C40FA07DF4749CC8B14A12B1BF80F5A0A567
3C77357E592E5E8318F8091941D09236AC5873C0676A5EF5C7CA6DFFBB9C5800
F5720997765BD34322B324C2D420A6980361326B0074999758C8C6B6ACE330DF

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: TeX-feymr10
%!PS-AdobeFont-1.0: TeX-feymr10 001.001
%%Title: TeX-feymr10
%%CreationDate: Sat Jan 5 18:49:54 2002
%%Creator: Thomas Schröder
%%DocumentSuppliedResources: font TeX-feymr10
% converted after April 2001
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /TeX-feymr10 def
/FontBBox [-178 -195 823 877 ]readonly def
/PaintType 0 def
/FontInfo 12 dict dup begin
/version (001.001) readonly def
/Notice (converted after April 2001) readonly def
/FullName (TeX feymr10 Regular) readonly def
/FamilyName (TeX feymr10) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /e put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3166449D69AB0542CB99558019EE
97CFE9FA87FAC14B55E860B5663A3D528CD3784FC9647A2EB72CF1AF4E31964A
3073722CB69FA5370CC5D9CDBF105662CA6188C1B3BFA7658F71EA5765A0D152
E60FD5E1DE3B99CE70C03D8CB4F775B5B17CE9573F5046E61444C0DAFD894CFE
E17604820BBE5A8FA11A10565933C0A8320DC5D116C780706E315C54E72426DD
AF1E6786D883AD182ED327CBB03C39C1A2602471C39296B7681215EC4F0E0E0B
264FBAD453DD3B112065828DC04E265255F9FB51F5EEC233C6A752ECA0246E0A
A2BA69049BBF94E6C8F510D29A7735AE4D122DCCA7B22929270D51C3F1E68174
E38AC54D6418690C765264C7897AD12A84B2C5269A6BFBABF05C20A37C94D927
81FD24D7817897529ACEDD9B062949D02FB9B0E1B2D0BF765675BA16EBFC1C7C
DC437BEE4D9FAC437C6B9E5B0C00111499A90E1BD29C52263829FFEF1946619B
1C81623A436D2FBD670D126855C400F38CE0C88122C60EA0D331AA9636B27218
0CC9B0EDE940FFB5EBCF83EDB330F8E83C7166452669E04F2E95A7718ADBDA8F
F99C2DC815F7ED17655111692621430D077DE661F297A8B6A33FECC10B3892A2
4F8E139F3E446CC7D7F5D64E4DBEFDAD72AECAE4D64289A3E2BE0212CF4A91BF
04F60B14E7522795440054CCBC40C49886656B6918198778A498EDBE40AF4536
7F96E77E40A9D65B1D5447D2596B382447AB5549A11BD5B765F9133E1C5C3071
32075009D2AC8147BC53B4C07B14D548E0F914E600CBF320E1639435733D7563
0053CC74AE3E7F5B9741E8CCB3DAFC411B5F846FC583B7771A7088B1C9B9613B
86FBCA1EE9E8263406C1894EE246BE87CDCAD2BA7ACB7030E45B0866062055D9
EBF7F562FAB6190196A7B8AA1B61F407B2BE0F537129E27376C8DDC7C6416358
384B2A676AB3228144586258F2B82A5BD9AE9E5442462DA626088BAB0C29E8A8
0EC75BF6E5E897761B5D095E2A8EDBF2CA742F3BF155B4DF28110FB8B7FB9A6E
9229F9D0B47376BE7AE5CE6A6AD32F50B62023CB32E8E0CBCDE2110AD8251854
5F8934CDC91E522248E019A6DCA06A0C2D005D541C6ADFF72812F474050C709A
5ED08B5F83DA1FD76037AFF77515188E13073B30F9A49A970613659071E0A130
5A4DD21C42ADFC1DF8CEE802CFAB2A75B7460E9F46DAA8CE31D5F287D3163B98
5966C073653074E89114B1B8A097A43E58DC5E49AC1F70F04A922FF9955F9FA7
20A6FCB10A2670BB3F44D959FC897BA487147A0FFDDFD368EB1A41F4CCCB619B
A362730B373EAC754EF5CE2692576DE100E10402670F41FD38F11A1BB43B7F42
B4BD7BB5F4322C4A9D04BBE445358F4B59B1A5C85FAE03B06C950485E5B304E8
BDA4BB926C21E17B3EC2D4DBC9353CFB90DBC6976B566C310DC801A28907CED3
2126B72E26578DF77022D969D09E111BC1C489E88E7B0315E926B0376B085BB5
3CEAF925AEF208D454C49A6B239924FA18001BD1A7D3EA4E7904830A6A948A79
F50CA56EA772D92627A8380A37F3C30845647AB612D5F6B5CB916996A0EE6697
BC62B6266F4314BAAD796EF51EB965F7C30C001F16442E0CB7A6984B78AEFC46
7D6938EFB347E3287600228311BA24326714E77F1932B80334F933C2926274FA
21BAAD0605BBC9A01BDAD6D5ABB885A4E651B8DFAB60487319C1C386CE6A17CF
CE6F1E639526FE52759F1C88A2B52EED4B93C0AEFE101EEEE8C108F389F9D1E3
205904304DCD3F06198594F313F1BFF10CE7F410ABFE3BD5F47CC3D7DB91E197
AE2EFFB9015482D6C79EE33D31EBC91E7797ADADAB7F682F72DFB7B0B0B6AE27
CDA9C0538E1246167FDF86008881E9F917291B498DFD93885C05A1AC6F3A7C11
57128C3D6CA767C80C7AD866074879C24CC063341E85B910ABD13E4BBC7A48B1
53E24D05C43CAC6F3337ED734614EA91EBA620346F23693C7FAA9F488FEEF7DB
E525E547787CCBE1B9824B1CF0B92007A8884194388AE40560BE9D79CD4DE9CB
96359F98E85F2A49F75B7B66C6444DB0ADF62964CF1A47855F8C4688F95EE5A4
50C96A072FB8069A59B20CD2FC703F2F90D3AD1BAA56A93E3D2E2F33C6E2A7AD
258451B1411DD8DBF07CA0246640732F5ABE58B44AC29D9EACBB671334A141D5
FF7CB44C5D629EF4C3E479B76B6A11B47AE63003DE140FB162E88854291E52CD
218D3E70E007E24FEDE321E5814C501169EE40269A4130721A95CB23F48C32AE
DD7B0B4F6320A76DA8A605679B0863982D6B3D4903CD8184B2B829CE9FCBF77D
6CC854455B66AA88CA78910178F748BAD7A4F32521BA7CACB879CFC719BFE2BC
13CF49FDAEE217C53CE31DAB6FDCF81ECAA2E72A2CF15BD84D275BE55251F82D
C8A19F36545C0BDA65AE10E063F5E05A8DB056F7A41D4DB694C98E4246E3B38E
230D155F7ED10F13F00679BCDF5604F46E28FD15B81B55471B8262F8A2F72AF4
E5387E41E401274B350EEFA6C4F03A1E6E4A6B16E528088EA3C7E0299E38DF46
D345559937225879790AF29198B2FDEFE6FC99C66C69959F3FF98F67C07CE90D
F2993F8732E88A77355D4A186BBC8C299C85DB3CFE829BF9F22AA8D3BD63F0D9
CAC57A7CBE25193B289D8A9A614DA9202F69ABA8FFB96F4281592634A7FC4A21
456B69BF77848502657B7B934003418D2BC937720E67D4890E00A199636842D3
DB74B2F004A6E3F3EA6972D62C62E5D4F096AEB2F194E77B656822D9CFF41D2A
7C14F16D7F07E90306AC87B528175244B92D6C10024132A3A1FC2FE78F688904
3568D0BD312C635BF2C024B53B5624F8B17BEEEB424E619CBE804E24E6EE1BE7
3F159A72AB7ACE1C0347278BC542E4525E503DAB0127B4DB6D8538634CC60BB6
7851F14F0753BA3838ABD61E83ECC39C427E62AD4293F672F8E7C2A49B534F60
E877F23EF5EE0E849AEC5F5E12463F6F05D059854D701CE420D546867EE7E6C8
7CD2553F33682A0BF985671C6433700CA8FFB638E7C7BAE78BDFEFAD10DC5846
AFF08F08956041F2912B4D70FD34495C96D3F9B091293B9C738CF5C9563277EC
3C6863C4A69B09E4DDD525D77FD06C322DAE13FCD48A4EA7B1B6C8F0256FC16A
3B47A4BF0DA1C49EF53974B4BF01C9BF194CE7EEC2C3AFA9E4CECD8C4029CC6F
377E4269806EB0FB78AA812F1513C2CEFB8F50CD18615EBAC10976BD12CBC1CE
8CCAD0333D455C3ED1518FD7F80539AE63A5045D34B982ABB471ED8EB18B50D3
1A150C82182B6C31CC9B161A87361A6D96B63CF0D97A286090DA8CB72991B175
EF3D690C64D9CB5EDDFF5B00B7C179825A1794CA054B6F7A8CAF03DFD7E62F10
CE5BB34BB02E50AA4DD4FD704F147DE3DCEBD3B1DEBAF3483E01CA3076EB19A5
FA2A8815CD360568A9A05176CF4111CB27C54BC8B4B991853982BB7307283D8B
93E5A2D6DF853B6E17BEF7C06A182456EB73D4A1B77FD58A853B07B04ACE12EE
D04046A4E977A39963B144EAB63C7D27F2EE65F677B9892C999BC81B3BBDA70B
E7FFF8E673275F9B84D39E641BA990B9AD160BB73CC391B6C36A7C1D68438243
1606D2298D58EA3879D2CAE2D285011E229372F7FA98F55556F0C4007621168A
A3C1F9A9DE81DA70AB287ABC70C4BAE94321D94FAD2DC3754CA39F689C8221E1
6E7E57EA41F552EF612080D82122D5733CC48978F6BC62E40728DCB3134F4536
C33E222D0E79486EBF9A506F92CCE773BBDF3A764B3793E96393DB8EF1FF0FA1
F3801274B7B982FC53258A752D43261486A2A94B321D90C9393EECE5B3CBFAAB
D0BBA6E49ED462B20AFB384AC2D3E290BC8FE7805D5C0B0D37F04586BDC8C812
686C653A47B40A803819C86FB0C8EF10AA1344350972910363FC0E3DB49A5D75
BDBED15C823E1E870E2F0EFB93A856F3A63E28CB7ECBF17E444B271FD92157C5
8727745CE16AA9376735A8B02F2CB426BB91CCC365CEE49AE5C9938B08DB12B1
EEE55B954D3694FA0AEC0836883D86F6EA4E10ACAFB7CE5D16F858F6DFF1246F
B2135837B67DFE58003AF012885480947A19B0F90980366EC245AE6D8D33FD30
E080775680F701952B697FC8FC07A014B78DEC48017E46AD78EF6EE80BF81760
B2ADCBB63D91D25DCFC77F2B8867BC0092BD9DF8EDD0F7DEDF2458F1F938D05D
DD4C3A7D4B3008EE86F787EACD7C687B6BB09D362E814AFBC75209C457A19F37
C9780469DCD173C5E5BB7C88F4A8FF1E664AD95E1F5D005B4F15416A320366E4
41E5CE5C8A53B64D290AC210490EF404D08C7C93531FF8CFB841AFF5A0E5A8DE
1E25EB0D03018A76C701E737D941569CE252FF92E3C0A05798F47B75B501B03C
D92B56739CF0D76A13E06283CB4F55177E3D6B28C265954DE0EC80A4CDFD91AC
A2FEE87917A4C63BCBDB24928F99D4836A62D3793411FFAA4CC7B12C934350E8
0C241E5C83E1BF8BCE56FFB67F9C7970CD00D64E7CF92F0A9CB5E672852960AE
8959AE74D4DE18D69B095F9F83C2D98F5D6D14B13E76E4686B85A3B606479B6D
F3B52D950EBCFE01639F6B0D9C205C947D60F2F0540D0E8B1B78AF3C5376F94E
D5769B92FC21082A872ADC4BE261FE71F0EA2422B17EF9C0338F63F4D4BA4AC9
D6C76169A46B500885E2CFB8671C053163F186C242F539453A72E3CD4F416A30
6C7A154B28FD021A13A11C78D113E65FAE2A6602D55510502603AD648CA7C698
E61A5B8F3689308EF934594FC5EFFDB86BED8324C690350CB92005EA3EBBB9CF
83EF65EA37BB27D684B89F18AB93968DBB6D0BD835EDDBF6F9425AE707A9E732
7418E39DC60A6EB89299E14D62AEA38D7E1ED70829196DB28D4906BF73574AB4
5DCF1FD068BE2B5B597021EC43C0396D5F172A723556BD8937D6800A6CAA33F6
A061415D49DA0ECE5C1959D9AA8513D8E616BEF8C9411F93E9FBCB6D2637AEDB
B0E719D54E5840E6F71109A5BFB26839255C305080216C0FD2477BA7613C8198
8EB16ECFFBB6D745422204786A17705DABE8FC123005E476FECEBE1C3E240E66
9EC0C64922C42D88A87D2D9766DB3E6273110B2F9281D80F004D184E9484EF54
222058917A0DFF5AEDC9213979C8716488573FC308948F839BFADCA37353F9F9
C7FC6FF049F4DD9DBD476228E880E779C7122C3823385F85F86DA752C3E01A8F
8A103A854A8545E4109BE8AD304A60B54F124EF2A6AD3E5E7EBA6AE533E22954
261017699960A1E27D714C2E2D370FB1449ED84B4169EC1057AC8AE70B3962A8
2A16D2F5EC8818734A52C2211FFFB785AC27000B218464AAD820DCAAB31DBD3C
2F0ABE99FB90E8A188E9E95E3320B650E814FA72E425FC6D0B5E245330843CC3
DB6AB767C90E8EDD41E12FA1973E681A7180A3917CACA630FB0BB7A62FAAF292
EE1F836E10730B4797B72E335F6C291A3BFD7F71EE335C3A6233735DB2A379D7
4D1CC655A657023C0B72C819D778F70D9654BDF7C3DD44B733468029F6DBC37E
1D00A80D8D9E7DB37593FE4C2AF5E00949062085BDB51E9448A41DB88FC7401F
725593E1E2281E1F880F829778EEE4197E71F8E59420EAE7964C98BDA67D7224
51A7781696EE91A0E6138EEA37EEA66A29A778841BAED8A196FA2C9DC4DE9BD6
4915CDF114F441422F0FE6F6DFC899C05D171FC0E370C9D27025B9407AFBA04C
19CBF35CBA1E6328BEB3DC8BF3F27EADDDB063543BBE32195A9AB39C791A053B
9D6B918B1E101C98DA8A4EB26FB47BCACE2863C768381DF68C4C8033BB3BBEF5
E93514207A5AA561F78B3F9C70C691B40F4ED7449650276BAF866B77FC16D797
B91398B1797FC8A8CB148D5C234F59A7E4E6F661431598B68DBA780DC8B34A19
AF4EA912CB694B86D5C7672E57EC16F21F87944F7585ACC0847A31E2777D0068
69A9C658B4729A5A2DB08E093EDFF069067F02F93C4495F9F171AB52A1A5BF64
C71D97FA60A71E3E705E51531028D02B1AD3E8E032AC8E599DE4DA19227401AC
F79915BC3230D5D90FA77C29DB133FB7B4ED7B0D7BDD3B018BAB38126626BE19
57BA72362A12E23AB2C4F2C20CE67ADBB39FCC59111A7A0A61ABB82CE1711D0C
193F0D086B49494669F901CA6013B32E0160B72239DB3C2E229535BEF14DD08C
A8E603EF0B6A5D6FD9CE8EB6DEA304E959E394802B82E7C4BC31E75E1CF077A0
6F520EC408B4237E2C5D41DB0B4395D891BCFD008BDE2F5936C9B7D3D7F7F9D9
06FD7B552B784F7814AE16D8351899FC23B6772BB69B5BFB57D118FFFF07511E
8C6E994823E198A79376EF3E24C11B6FA1F6DEA71942741038EB332490625EED
2F92A7EAA26C64B36C180E45C35457FEEF8039855872511C30AE0BD536024FEF
2E0F40D53EB1845EF5EA9E10FD5C63E01D074E58590F0C8112BC26F1969F9C24
6A4027E715AA573228315FBE916274AE6D17F25A21DD9629263D6D83E1C5E6F0
D0A42464C558BDB4FDBF9201F57C808EDE384E12A8235EC30E90CCA8AA3C36CC
C09C6A6D74F9A30B50CF7D4ADDBFC902F6A006AACD90582B29ABAC673E1C6D67
3A70B27EEDD61AD0C422B387CE691F8ED807C137C5841779A540211331282F9C
2997E5A81A6BE710AEC12B347D9238B584F24C63DD4A34D620644424F315D15C
C710ED000B0D28DDB19A4D99AC1E0E5589B7A6F7B2C86F2F7FA4CB217F201436
991656F10224C5AA8341E6658ACFBCD76E73AFAB6E5B0FC14CB8AA60A1E845E7
5AAE0C73DD9F872EE3D28075C27156BB8D803A64E4126866360A54D16EFA11DB
13E7E52C0693982399545875D6ACAEA88BA0A3474783CCEF9A4B65EE64958091
8951AC0C438C2B0413761A253A43579B0B640FDD1497DE8C21A0856E475510E5
142E3842906AA80914CDE9402E4B37D2A6E53BD127D2D3AD5149AEB5ECD8CE0F
A7609D35FB71A5E542B436D5C7D71A4CB29EE71D11E0C2769C4FE6E728D24E56
A0169D3676D3B731B35E37C70B8015A53A9C15AF4F78D0FBDCE03FDD2C3D52C7
5D852346EA02BAE2FD29487245DE75FBAB597E741336005E4A549429A51271D6
5CBCFF634640DB0D056DD5EC6D5A7DB00E37F666CA703105ECCDBC670A47CDB7
48FE6D422825339A8CA5AAB0B1235F8D8BD2F5D6A3515FEFD32540521E20DA01
A0141AA1F8B223BC02156AE4E096FED912A6C33DF4E150052091700123102EAC
E6AE38599BA0A0CB94E1099475C28A540D3EBC4EEB382E906F6B4A1CE6940F16
77D474945B0DFDB54731F85B138577CCA34AD3BF8B7677378DCCF3999EEC8E5B
5BE10FE19D636B006E7D7290A3DDAE1DCFD312C2726B08676AC7B03A9E5BF580
BBD88C779EF23B655F9BBBC31F4D54BCD94E4D1FB85ED55AC4475DE0DF309494
49CF2BC0A9C60D7DE24DA0C0AB8F50953F4DCE4B2FF8E60DFF1EA75F4BAD4B11
3C735758AE622B81CEB5A8F845B2547C6A43812D4ECF9C9E042425176A20004C
2C4A815A38E237DA4ACD903D32B7F9844B2E42AA7F5A5008C4CFBB51F2A20C24
C4EA6D69F6CC5E79CC490EBDB8A9D4AF6103A6CE3906449DCD35B922EFBDE023
3D5ADD67F4F5BCF49D61F67FB313A8E2F92D29A0B15C6792D299B9510A5DFA30
56DF9000191FA35C2999FDD7132B3EB5E95020B032C8EE2BB4543DAAEA0DEC97
3133A99719D7ADBB2678384749B7E1ED994548266CF51E5DA1E7D78283F24197
0EB74E258585FACA9CC47BAFA7AE9E116FC4A042404FDEFC6D20C8510CDE6796
BF13356BC9A3EDF5DF353F6CB8D21EDF5EB9B50AD6BE2804F23B1727C373DC13
E4B7B7F5F1A0333C4BA7842F4E9F3D067DA11B64EC3D1EA2AFD82DAF0087AD2E
0876AFC12C5777A2743F938C01847747CC7525DE041402CBAA4C45F273A75DE8
528FD3BC80427F9E3AA1EAB57E9E2F625484D388DBA06AA511B556E660B7C58C
232E6191D34214218E9C35838F7532579EF7430063A099A176DA59B024B2CE56
FAD58E3E9AB280F49EFE8B13EB67D91B6BF3BBA8BD16CB5EE0B3FB9BEF37503A
F4114D06702D250FD78E921D8ABD0BA3647C711CB3FF3CB1EAB2DD7137A9CA46
4E545382727CD0F1D75102D7BEB5737B3D3009136C2DD9950F1DEC8859F21328
330224F695949BFE58241CABC4D378ED409FBA824D76C2EB94A55575E0B44B99
5F05EC9CCDC503CEA55FA4032192CEB9D7160B024084A468FCE4AB2F876A1B22
2FCE1702E00029F29A50C636A6C59226685F2B7F885CE26FF2D2836BD9C03367
13420C1A8BCFCB324EA9D26744B77B4BD9099611FC2209A53321B737E518950C
751B2F929CFD04EC824A2439E9BE1C56A3A02420C2B86C24BB936C7752DFE88B
A682B788BF0113BC92352E873AFFFC279F2F3ED949F3ECEED537F134E3C8A2C0
13BE80DE36288A86E93DB390E241AC83B926EAE86FFDF45E037CC3794DDFF403
DC64962FAF85B9714D399C221E36A633C0BB26EE127EDE93B54A6C34C1B1F322
7503847E9CA4622FF6CEB1E9828DABB65D66D658349E0404BD3E7871E3952C91
81DA87EC0F40B008BBE4253D7E8E7EF16C916674FCC41131B68BA2A9FDB59917
8206CB366282C90FC91B59C8A0FBBB26408CD0110EA1587A07E4FB09130E5B0B
852C429A88461C2C51F924B919B8C4F98BA8BF058EACE6ED42C208AAC866A1CC
DB9FBF4227F1CCD9FFAF49713AE4B85EC34FFD123CC49EA507D36DD69F0072CF
B01CCFDD0BDEB72A427A0485F0FEC84B315C854A341951CD338D8B4E7A77E3B7
41ADBA8C621DE2AEB91E65A0D3E1BDEBD508A0CB08F4C4E57D8481592C817520
4B6BCB5196CBA074
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80381FF096BC19431A8B3B1
880A35C206720A4963693791456740F913B52648FD5D4B05AB450057E27BFA25
D698B2777C497318CDB711161E2DFC121AC9484517D7C558C8ECAC25FB9EE32F
0F94CC9DE7136AAF0B41FE083B062CCDDB620596CC91711D12A4155E5D1DCFDE
9F4ECD69FD31FE27E7B4CB920DE053CA8BF7D166CE3E0B04FCDA3B150A099993
B56AC7B3B56D0478ECBFB339E94C930D379A98504567A22ADB01AF1DCB0E8959
857A595C26DE3A10290AE7E3E01879B5DC8375014D057DC4E23576F354A66710
A4674F99EDFA00C51088440AE9D3C2238E0D3B595913A41E866DA6742CA27060
7CEFFEE6D54641B7E558F1E9C5DC4C9888AD0E77C0287AD45948B2225F0183BD
481A526F5680F6A5B1A5A9D78DAC108CA1FF9400A3DE2CCD2A72104CF80B0F7C
072B05B4A5CD9F0DE3EE7FE13BB25E2856FBAD156E5CE91FBD5F44F0E247D957
956045B1613117331061BA53184111DA5E9394DCEA8EA947CC9AC1257ACE00A1
9A3389B06DB5DF396F0783135AB26A74D382966B3EDE9EDF028C0019ECC8CAA5
E07458583101DF37369DD094770C1A1B8477244E8695B6DAF079BACED60DB2D6
9ABA96673E399338B988234E9E9616EF372577738F553F81135829F9118F4BFE
20CD51190E7D02670CAC5ADDE78A45B552D7C6C98468ACA69BD8EE5503E25738
CFEFBCF081E46C55D9E7AA3C194B3F514DA06353DDFA9C87125E5C9B69FE0A59
23903203E230A868D4872655A2BD4F485C7FBBFC1A88E17F1450615960AC334A
5E3CCB2F8DCA630494BBFED0BA2BEFA77D3E67E54011D9DCF8C70A6E4AF6B269
BAE0CDB19D93C41B6028FC2870E4E57BA1B4773094EA195459AD8FF6D402754F
0A59F7B466741F359B651D4858046E62753E97CE1C0B152D66E148E1C5883A9E
A152F67BEA64E08722DCE6A5762E55A5F91337B511777C4690F6B64AFF820F57
6404D526D66EF00BB3F49D3246261DE1DE2CADAEE76E15B3B7CF6D59301FFC30
0DE2E19A784B1D204DBA858C9AA085B3B5A87A04282C152610C6DF152CD384D0
4A294115CB01446379D93A84DA7DDE692830CEEA2E14524F98584ACA7958632C
ECDFE1ABA0F78067D00DF338FB71E7ABE6EFEB2A6172CBB0FB50132566DBD214
6CD88C3A2FAC47231E7B1033B4F51FBF490CC6277C9995C6F0BFEB3F5BC0FE45
B681C73C50BA9A434AAF78C09E13E90690A80DF614F24E9D390EF786681B0441
11D831971C4BA33E9FD206A7B97E69443C961E0B060D472889E553C988126096
DD343532E74B59C0AB38E1D71D781BD8282FD2969975CDB303737E0E286C5E86
F0126AB25A5CA2875B48C61CB8112A4CF9B8A7B534C0238CF65B3DD3986298DE
5016DE66B3DE6237E6FC9CE04E7AEA2C7E4A824F8054FE402799ED4DB5A5B214
C02A57BB9900E406B2FC13BE715ECE4B585AA5F99198A39BE62AF7CFBAB277B8
A66C8413AEA916F69FC8885EAD2CAB2644F1E25DF5F6EF5B5ED47CD8B47E300E
3F5F6B8B75060C761A63AC861E5E78D3780C7A70B5E6928526F8EA94A2EA40EB
14DDDBCEC549909020E717531A147C9ACDB6F5079C10E2B967CAE8E2646B86F3
F1CE756E4036C1A1BD27291A7AAD14E946491C639CE22CFB40A99FE068BEC315
186B6E7A6F5F190D9EAF4AC53F0C4598A5BB79E23DDA5F25039ADA8A80553F05
2F97988D4B276110BCA39FC05FB995912980707299900AE4F349771B17DBE1B7
FA91F2F7F3C15296DDB13A3D8F34A84DD42541141BEBB07219595A46DA8FDDB2
0819F2337432A326ECCE79B1CD12C56C7856D4B0ECD4E415CC9290C79FE24F1E
DAC12771C6D0E14A141A52D9465223B3ED9E26A5D9B0C31FBC84A663DBE4E3FE
D3696B649CFCC810261051FF67E1BDD3F5A6455087145759F387B2E8551B45CB
6F6CDFBEA8F56A2BCA48DBD42C11E120CBD1E6B9479E52D42C8B3806FA06180F
1EFF5CEA5ACE58B45624D6DA288C9EE68A76F7D836D0AE73FA5299A6343F5838
C23AE0E328D4FDC5C2E8652C59215D05298EF6304FC37E8EE4EF7F2450F67A96
D44A2CC71B3B327B16527BB2894802F6E0E5B3B0B42C4E29643EC14B422E5BD3
BB0208A83E16FD4236560DA1C968928FCD6484A476D9F0942E0AEBE6BD0EFD1F
37687B723EB4242BA8FAD974BFFABD8E22DB7EF8B5E3A28F83EF3C454918DD08
7768EC44A893A7EECB6D95C35BB87DA2B60A0AF369640C43F5923329E4C03C24
A07FFFB684DE7ED68996FA2403795AB210E4155A1F61F98EE74BC9078A559E15
331A0AD3B0182FF6033CFE1620E967062F19345B9C2F4A5F2891AB13FCB507AB
790F40C12BE5B2CA616D526C530E15DFAAC1A7F55790E477C71A2FF28C91C1A8
BF2C73424AB98FF24C1197A24B0FDD2FD1A3676A2E5FA086AAD262C1B358E0D5
2FFB821C17B58701F3DC3453281288884D5B37EDC8DEF2EACD9C3985BA9ACAC6
9EE37C201D3D31032AC8A1BB77DD481E807EF825F48411558E58AC00AA0CCD15
B2E395482539E49E919F3B177DC742585727C12F16E867F7B692C959CDB7A45A
996C806CE627529201F1A70ED484FE92F0C684F4A0437873EBAD6AFB646F54CE
C76AC98678B54E6E3A1034494CB67F2E1799CC7AD881CD1277452731409EE7F9
F5E396EA1B598CDC2B459A81B19A090AA25E8D003DC50C08476F761BDD8D791C
F23DE48A9C4071388376DA3372563DAB6D3481A92A83B4687F352DBA807E1632
E2C67A22346CF155930698C2E76B71C22AD65A76B04AC2C007C9D8FC83BCB2EA
05A9C4D09B9A6A983A0E2C816A464CB9910A2F9AFBC83648300C8C4E43B82EAB
441956C911829EDA98948B372809F295F67DCDFF37359A60E233CBD430618695
7AD9A2ED31221E1CB19EF42F8B7C7BB88C50C6B50764FAFF860CA83C46485F21
D4EBCD3EB0F2AB9D84E98621B64F4CCBE09A6338DBD1E11BCB2E5323B4D8E08C
2E56EC2B520F06515DB1DE6054E882EE083ACF0B95B9F10B0111760DB3DFA8CD
622F9B0C79E4635A10CFB39EE250AD0FEC90BAFCF313178E02D3BFFC709F92AC
B6CB2BA47A553BE38988F36222BBAE11B6FBA29AE0A974673C28691118B7A460
A2DE4498F25A81DEC9360CB9AD881524A036E6FDB83CCE8849508AB9653D3002
D39B43809AA4D40AFFA292D1BA24E033458D3727ED4B961BF04411C66C0FAD7D
FCB05E178555E2314470BD7E64EC7A6060DFB96D5030E787961D72D02C195C66
9E792C0DF7F89C1BC2EE98C878DD54F9923F72D6AC5BA847A7B941EDD03CEBED
F433870C0523C3C8A7F3AF5DE044750BFA6253ABEC6BC7453597A1F20DDDC346
E1C4E776557BADFE0AFFC57D97601280566D93EDB3776748198CE6A6F0267B4D
BBE06D3F05CA0DFF5AB14922D59D1D8AF6CD3C4389E300E221EC60CD244B4847
6D645F86023F1B1036F425C07D122D8233436A38D5E1CDB4055B5F865A7594E2
D8B7498C00AAAC52A30A8E0C5777FE3E4657BBBA231A053AB9E1E03DEB22A520
A2255010F286DF8660274911476393CF409286611D14F20EDC6ED439D6E7C35A
F7BF31F66AE16EF9347EB6CA2FF8E541262893F836791AD7050205F67C15DECB
BD1CF81913CF0CD0070B27D4919792C0C06B83A336B37A9DF77EF94AECE2622F
721CE6235A8F035FFA5B7481050ED9EF7A99E3FE103AB285CCFB4103E6A8E744
9093FDB99991507C71753EE604A02B5CA76EF9A534FC4F81CBC9BC691EDC41EC
90A5A709059DBF3165BB4DE936CC3A4BF19EA1C5D6C0D79F9DB3B7F7BF5E3101
82F66B217FD6CC9B23CD9DBB08CE4B28C74BC8E99461753A0961785426499900
9C8D902ACD8AE97B075D4005049C9BF95FF0FA981A8AF789E1DA1A7857A17F3A
F222687DB9CF10CD88109B0AA050F06A64F7524BF57FD63870B38E4100D67ACF
9EB4C072D3196F99FC3E580F6F6F786A20316B992F547DE9372FEEA0BE4053B0
70A9A853C1E216348AB87B18A4184C84556C0476BCFB950C407E5604911B96C5
87E65FD0058E0576018C74688065C50F7D0B536D797593F26AC40DA92E2D981B
85D1E0B172BE416FEA0D359CBE04C83230BF3F1AC0969FA8C70A676E5F5FCDB6
16F45FDA9BBE46E5A5BA9582544460DEDA4F8244B50204D20AF2A4CF72D34197
A0275EA032BA48DD91BD2B4C0D5668BF88016D690414EBA598029FAF593E6FDA
BD6C8150FB4CC872F38A7FA2B92A5D200A66103D5C2DEED096F4E892854B6840
1191866E3CF532C4004E60AF7EFD29A6A1FADD93BD3CC207D8E995B165AA29D7
D15095E0EA08C6894F0E5A7F3694F5E0CFBCA5AED237FF2B19130CB692CC2177
EE9050DE126E5FA920A55FF29A67EE9979D682EC2453C76DA0E3695E3C1704C4
A83000BF40B903C032EFA375532CEE2D8976F785F1C1CAD8441E4372833F4B75
FE74013872071ABEB1D27266B0036AE48CCB5D49286DEE29DC236543FD33F885
D105C4EBEA25BDE25F1C3D509729A4EAA36622D2316B239A17BABE5401458A9F
79AC19E71AFA2380C8B04D23F4F1B2E0162B6752F7187C406FC07C39CE6E1D46
7461084EF1068C9EE5E9DF1414D4A5FF9FDB15EEA6E5290E41FEC653F131CB4A
D5EE08CA3293FA4F4C6B86C72E4C548E3C0112562503832AB107A179CB30F3FD
E42F31B9FA80D08E4430665EDCEC71DC39584BC7A6769EC55043D6359D3BA2ED
407299B5C9E361C08AA256350BA7072328E1B32287D1724301D3B14553CB0D9C
6CAE3ED633B00B60CCEB075B7A849768E3AF8E18EC31EF128B1E5B1960E5FB11
FDD2174E1F9269DF8A84A1E7B30B6E65CCBF21D70A72AA4B05B19BC6EA670500
3370A63CB16ECAC066B932EA37986750ABB9B55F3C972CCB71F350FC6E5B2D2B
06E2FDCF513E03E9B50724C67557B49FD1F406BF81D08D68F7920A1938932638
DE190F0106455E88927AEBBFBC5B6E30D586A2DD28668DA7A60C446965358CF0
DDD078FF2E319A37EB5CEFDBF36492D265A7B00F924C43A2BFEC536592EA879C
DE6B7972F4C158F346088F4C440B5BAC980CFF66BE9DA2BD1B660010CC689048
E837087FE7179E9020062622DE064EC1424A3650847505713A9B31042BB5A1A3
B74395F8AD7A723EC105A40D613DB4F863EB2C0E88E8A8554E0365188450FD85
44D858B4A51C150212AB6E38EF1869883173A8BA72A443D5A83B5BDAD51725CE
38479A8CA61A5985F7D9A1C7C7A932F73A95E4064CD4DC59037A830D1A68E395
A1287123BA8C9C093FF36C008CE65D586404B70062C170FAAF8EE978D0FF805E
17D38C76F5B31D74BCEF1F0161A5BA285A634704D90EBB278026EA70C841821B
EFA38DFED0900A0B01DC92EF20C4D928F2E50CCE40BADF14954BEA85E18855D2
2FA2B5478D80FCBB49386EB93CB56A10644C519E5B356340C7C6192BE1C16815
3D6BC36B369B797F92FA88A8C8499A8917CAB23F00BC124FD93096D2635C713D
CF6434AE97F67BDD87E81163E68BDD4B8FE6B887B3FAD417FAFCFA53893D1AB2
37909F6B1BEE6D7D22FB4065142C276F4FE2BD0D5234A2D9C37951947D838F69
F2E93BF5068C0847F92B7E4F5DC321DE25B58E6C8FFB23796AF82510932CD990
097E3B1706CA6624A13E91220E40F11879433861B13CC921709810ED004944D4
B18526D4B875E63D3664E935796233C8C788C31A5CD411A5F5CB07C706001A57
771D1E94A269173938DC242F0812442BE5663E5B3F31DDA29F1C35F212F6315C
C620EC0118A7769F41D4F54FEFEF9B540A99B60868D8D3CEB7C2BFEBDE0DF79A
246D471693F2DF2608C28329316045535EB920307407A664B44221BEDA0C08CA
5DE1FB7C2B76070982751807C0F6DB1FD83F056774CC7F2283B249B075479604
CB028B883EE21D9BD24B48E4D1E03E7378C05B62DC006C1C598F5E312DB3A023
7D88483418CF7B8F43A76951C32F4FCDF087644D49A2010C5124D9C768E73D96
E8DF23C93BE3BF0DA34E503B07EC3DF25240C00AFCAEF3F8EA237FD355ACA072
8135DBEE8CA54AC0F8E0A00389F3127B0F9CBD00E2EAE589698D4F0EAB07DB9B
F961F09CCE06D7A8BA166B086B5C8E29F71C9EF548B8E80B2D8BE6DCD49E7B62
3D69370F66DEDE8735D67F948A0211D121430D11E87AA6C12083B29AAEA996FA
92AEF646617AC1DA9EDB3A2ED55D49DDDEFA61EA1F01DAD0A5086A47A0EC71D4
169ECC5A9AF15C361F4CA0CB8AB5C6EEFFBA7C464034283055A466DB744A42B0
FD920C4E62223B86632842682BCD4EED2766A69EF6B97655ABA7A937D8197EA6
27089D71EAA4E103C8BF03E66F3D875B32F0684DB47B805E2F60779FF767AF2C
FFAAA7F2FEA079E1C67BDE0D385104C7C0730BEF94DF3D9BB2161B4EC08165EF
09AFDA587B09E521D96E58A9E2F58E92391CF03138693FD5103767DDF6FE6FFF
496B106857BA914FB452E56D3F05CA0DFF5AB1BA1C0D6444AFF9AA7F71305F1B
E96D98F0401D2545E9FACD008B4ADB50EB9F072DB82838BC4C0021571B3CC540
19500DDC798B57B6D41AEAE67900498C2F9834799128DF2B034852C673ECC071
BFABD916DFBBD382DA926E53CEE7C94E6B1552C089E7408D6AD047F410CD1709
FF4A5AB714B111D8A8FE84D6564F2F6C38F1786DB3C9DE2BD6CA02D74451FDF6
14A8F84EF89A73B433B74131B5C935D70CE9DE75407AEE7817694C65D2484218
CB438C2B9FB81757802E694B74D72FAB8ABEDEF76AD7F14CB416CC957E016A4C
72A6A1C474F80B793FA88EE3DB7788FBB28D6A6235824DDCA2438F68BBBE292F
F30EBAF2055448995FEC91991A3409A2AB840574BEF5C8743351DC9550AC182A
98736A2FAEB50DB608160740F68F4364E12D55C4EF5739C8802413917E562AE2
A9B800166E14E49DF641E5329F12B7A6E0B5CF1219E393C3F3334854C5D74956
78DE754AF0AED037CB25D34DEB46C4AD0D21BFC3A9A11405B0873D4E95898F17
D75F2976481C945DDC142982E9095ABAD90DBE134BDFBE5206A297044BFB1F67
FF3CA388E840184E8CCECE8ECD4BDCAB243252E9C485B355F2D0E078A414252C
73A829292BC3DBC0974DF26BF77D9D52F6CB8D6974DFB548189D085A7DE2E7FC
9FACCBA91B72D7440A7BE1390540A5E42BB2215C1693170833ED035D6E315495
BC07329E152C88A05B283489FF2FEA91C4C9ACFA21C3CA9EB3F9CC21013C0AF8
59A0E4C935856C9BA1A3EA67F4B0A4DEB9984D59F8BB6039CA6807D768CFFAB4
CB966B5DD8436D1ABDC3EBF2B32D1DCF10A584114488D4C29EFF1D33AF0E3963
EFDE995399D2F52C8FF0FD4C6DFFE04EAAC3078F605903352AF414C13D06A414
BB9D434502EFAD841F0DDAC1AB92AD0ECCC0A15C2DEE572BDA14D8BDDFCF2743
A15F8A90AF596C05FE2AFAB5E9F03DCF912D60BA2001A2D092A533E69E0DF35C
6B43C7C81B91358CF6517C9C418DA0920FEDA16DB051E930FA7ECCA082ACB5CB
8542AE65A90E50809D3CA890BD15DE20FC75F2DF6D80192C278765688122A453
989EB7CE1FEC9D31E66BB00C09B952A829C26607D81FD490832AEE5010AEB42A
C994C4B96D4043E59A18F4FDA0EC77FD3EEFDC15E69130ED69C1C8EC5141EB84
DEB4536386594E72B2BAFC51D5BBDBBE987F6C8EB5612D2437031D7FC78897E6
7FA4713C65620D09F8EFFE7766EDBD7CE06A64C118A998E2212BCB115345D433
ED23F7B0B9A7414BA069BE4CB8D4BF0E6B0C5982FD14E4E916D363E265322DFB
B25AFD2AC0EB3A7C3D9294946F1ACB88A63ED32F8E5D4E45C5368C977D4BEBCE
7AAD6ABCEB874D8071ABD4C842586E8DC4F671A68F8B02EF2EF44976FF68DF08
65B2B83BD799B5CDCA5A5527048775EB15B80C65DB647AEB5F741BECA4FA8B0D
525E849E59E7B75E384FC1EC7D7E6A5023B7E36AC4453394CA18C1A13745ED69
1C6AC398E71FAD65564EA5B099C094DA672C9D042051FB5E06385EE33DA907A0
788B783320EB9EA8A9E4B2BDB0B3CE83C9142F78B5080089A09EF7487C2F6B6D
242FB5E8A2F4722AA609B1DE020461DF7CB03421C5F46042E9D52609F10EAA76
20CC6B87B5719981AF8EE6A59495409DC8C616BA9F1AA22C72790A97CE703AAA
6CC20D0EAFB7F9BEBA4A9630ED0ABE793BEF39A7931111DAF0EB96975FD6E11F
D00743FEDE965259A3EC5847D3E6BF879D45B1D5CDF53E42E66C5D03762D9C98
DABA1A7B34454DC1700E8AC2E1EE384B0F6907DA0232BF5153AD662023AD7A9E
6CCE4ACC8208F22F1126D38D9BBAE1CAB08D9A95BDB30C78C3AE96CD02A7FBF8
9970E094EC07DC64895AA38BBD38FA18F2330B334AD12A467E4A5E92CF58188F
B0A04FD5138274F4D2E991E7A981F856409739885A994617FC32EACE83B3BA43
39968E9597EEC16144700ADE725EBF142A9A36E846E285C4137E63A00A3F9710
43EFD019FD28473648739C83BEDAB386C9B13FC9996591ECBE650E4B8AC10427
9C428DEC23A2B17CA95332B6326944FB6975DAFF3F1051B1D86F85C68C3795BE
36AF36B47F9852704E2A1CEA6F1F25312B41B125B4A46DA4550DB20C2619F26F
374BA34BDAB4CA64606F06142CAC4E1A66E8E5F4B9BC04C0608395A9C2BA9A03
945E029527E917F17E502D5F46010E2FEF569F0772BED49967AB61994F100F9F
F3808DFFC59E4382D77CA2CC650F27FD453BED9574E1A57B6AC0D3CA9A8513B8
8BB7B2E925DB3365C80D5602E399E761E937B694F26909D2A34BFF70378B1A91
16D385A7D1DF64C6AE6FBCFBD9E9879DE2E51C85B3597B7E6F3FBE930D8CC9EC
66930E5533FF3A7328F0675312ECC5745560A2C81AE79DF8CA515C323A63498C
F6A5082B6BC3A24C23882B1FE802167DBD2C10D1EADC6DB9D4925A4D12312900
526B412117FA7BC81CA4B50CBAD741F9A7B9B993111FEF38733C352751553801
6F8BA6AD48DAF84B49D5E120C8C3C96A3D38A88E5D4A9559465191664D6F3982
D8538998FAF4591AC49AA35A1254F64DEDF8C02FA7806045871AF6D7D534C89B
E5845CDDDA0862D2C77185E184696B56762B938F289731E6155BE79E19EC973C
93E69C079DF7B66876301AE9D423EA39E046EBD778C8B4959449BDD74166B19F
03C8300E68162C687171D647F26A830558CD47D3C668D629FD1923CC317961CA
BC41A10D44BF63153E8EDD8BD7A5C64D66319AE0C7A00F69528AB762B09723AC
952E6D0DCB7D728719F0CEA135F9F3752B178AD1EDC212E7FC06E86F8C31DCA9
696C28285AFC3DA3BFEB37BA41DB55892C790377A634F66B33621C7D8CC53D2A
74B7D6C493355A5F0EE31F2076DBC35D75D54158A386867C7FE0E41CE5C9F477
CB09A963A56C8F43140871BCA1D6D4C715DBA77419116522F39D52AE693FCC37
BDED9E34A4AFF9278950179871507605818EF4810298756A7F8A61F00CB29BED
A23719D7C70BB34D043A08D7C97D31A5E4A8B62598409A11D7518FDA16DB9280
B9485C4867644D32D0D9153510AD79A5038A6C4DC8807DF5F6C137D67B87CB0E
B1B62A7A4DB93BAC55016AE06595134739401B0D8ACDA770BE655F6B316C147E
4148F43F68B433E736D2E15CBE3E6E7A1CC72721564B8709C55F98E7C5F18E48
57576947835A01AAFB04FBDC7B4B8770D3E62C7EEA9759D337ABD80B27EC5439
715BFD8F854843EA1D080677F64889D4F13DBC2A06A959B629EF7444863CF361
D2F7242677C023F3BBAE9CC424E277788953475AEB85C963B6B5542015EBCF40
8214A4AA87D2D24B95D35C381AA7D2DDD0EC02ABFD4B57CAF14B34FCA46ABD97
B5AEA02A3BE1064A9E9742D27FCE2CC85BB5DAE1FC5751649009B86F0800333E
793891A9E69E6B18A95A9D277318EB7238692EB3A3BBB6338D8CF730881326E2
7BC33436A35995B50C489907E26278507875E601E6C0BC9B8C354E26E93B050D
686FF7C6D1DFBCF8CEE94B2C5F72CFC416D861B0E313E9387668640FB271BA91
799F11C2550BA61E177A84043B797AAFB22C9FB5EFE995BAB8FA438365BC17C8
50FFE3F7E590C71D8976E1EFDA0294AE5C196EA49C6B89291598B9226667FEEA
C8B205F03BD6D281AD503BF9EA73371FE93097DC4238C6FCFD622379032A2CA2
E5FCA74CF6591C7CF16389EABCD20AF8F100FF57033A1752FF04C96DF8AD54AD
E5803272A4D0BE62811BBE508DC0A95A713347B57EE28268FA3F2101AFF38BA1
917A296C2BA20C4180258EF4843C39EDD64D59FD94E698D0A65005A145B68669
ACA5771BDD5AB3A19482D69422D24EB4A4AEAA00011A3E283257FA60C5AFAD3B
71CF6D6772E5E77FC620CC7533EFB892191B63BB1087A81F73D0BE06E4C54233
8DA70065D910943A34F7D5F2090FB4AA42ED70CEDF8983FD214FC6C24EA2A599
EAA9C44772E82AEFCCF5F0D0A0A06FB5E7EE151EE99A61A68FC2FB7A553605C4
51FE37359A60E233CBD4306186957AD9A2ED31221E17B18A5121B7A7D7A973F2
EF67F2795E6DD8CF55B98238D228F69FEF9D270035F96FA9C8CC081BEB706335
7DB9E9A1D8AE0E1C9828C293837334C0BD8008943710FC6108A4285C9898C63C
AB854E80B0886B08A72B1D7674BA9D36819B7619DBE08DD2EE3C007463730DBE
82609709B479946387E6DF677C977AB426EB6CF686087DE12B3FC38D865FBC10
316F6EC4806316954E90817A74BFFE3BE4FB892DA6C81FC7C1E5331EDE1D174B
2E3379BF1CFB77212594DF545E359F2932DB2764780688C794121E4C32981920
77D7CE0A28D81DCD1E8D94F55FA1F21AD44EAD88D190CEAB577C4EF72BDE7188
AEEC3E466AE803B56CEA1522FE220347F9D7D024AD69C63018054CB8AE7AC963
6127E2CCC2232674924E662B27AAB6D57C09F26DF3E3E5E7B76996E1D85CB9B6
2BDE07EE8346E30F68FC1ADA5E11432BF54C80E629F3306A5183BC623F91A309
F68806B993088E210C91279AAD5922A3546551F93A014E3845928169754EFD6D
AA3219E5AF8DFD8B263DB0646FADC53D00E01279397F08669A63BE88715C699C
1A7A04448E1D77C0C11DDA2EC873CC2BD4C28604E044677EAE7918BFDBDC3423
CF739AC5B38303C3D4DF196C462DB6D3321AE320CF1A36D62C69046D80DEA738
C2C03D04543B6349401CA8D7E45983976ADBA0F5A42385E23E7E0A051CD30D19
7800D063241B190836D5A9CA98BE49C6B377447E4DDEB4C1D21905A5EA5E9936
11D8A4E602585E71A116EE7E81836676237F88C519F8DBF39EC35FE36933D189
9A47E6E69EDB17BC08CA1B092D4F20BE1AA27D0532C5E67BD4586C793B4E79F6
065CF14BFDD761204FD8F95BADDA58BD80F37982E9728792C33299F774467D18
E18B8A33CC16C9E4B8485EE21F9744A2EFF863B4C03B6E07436B6560B4D11EB9
B0A39590295049AEC2B509E09EEB88297CC9734B4446BB83E4728E1CF8E44972
11DAE158F2DDB6A86B95A29A51613E3E6A46C9B7B1052C0A5491130E312ED6DF
02A5B00ADA8E33534A2FD470E8459380D70B0A49037378B093A4CB6A5FEA11B2
E0E00042386B58DFF9CF6F1ABDA1098CD1D44BAE1D0D3F47FC383F86C8D8E7AA
4EE41EE1BE6D51D46599D8C2DDFE94A2105FC2D898DF5DC14070AF05EE7FD596
41A99D3529DD3B8224D77F85F41057921FAB9ED7F964ED314D50CDC063414811
53D90A45B8C4C63057D7B7DE7FF432BBC34345C13693EC4D93873D09736F4C3E
149C1208CE99EBB4BDB19A68DC6FC30AD84570264C5098160CC644902847637F
BD2E1DA058EBD298C052BFC0B40FBFCA767F3B1EEA76B1520772E3CCC6BCF37B
79B1F65339265C3BDC27CD99AC7D748CF76078CD5F96C0B1D41127FA6FD0E462
D586D2298E6DB38F4A53EA2F8C915BD95CB67D9E25F9C4C27688B2FFF557EE3F
E5F40AC5A42258DC11796E8F834E7FCC4C523B3DE0B257EC47B8086E763C186A
F4D368749FF7C02F4CC48EADE7F897DF81CCB6AE7B126C45B8FB860925BE5C67
746B87D3297452BA7EA1CA9EACEC454312EC1DCE09A79CFDBE26D4E14F95B195
119EEA940D61091B4EB20012383B4FCB16BFB2D70AB75E3F490621E9A09BE0C8
9D38458FA041ED197EEBAB524642B77C830532ECC754850A0D5D15EE7C543777
80B0FDBE164EB7200CEB625A2E27F3275767FF734AF11D92AB2B290CEB826326
79BD0F0A21CFD73B90688BAFC791B2E6517A4E1BA2F39AF2EF306A3879C816B9
832580404505A857AB1A921E3786DCA6E039D45886741463E26AD685C330FF9B
4020A256C7685831AC92BB7183E58236D47999A1066D8D27A25818F57234BD30
D6424C17BB0AC7A9DBCD4F4BF670E3642DF9904DCBF759C9FF16A8E893C28EF5
49CA3C0F7C8169C2A42822EBB381ABBB5AFC1D04E64C363AC76F86496A5E599C
B382BC332FD121959382B860EC40872F3E7AD7B35DC4B966A6F5B67AB968DB5B
C1E2390645266166F8599F134A2832CD7CC85B9E09A7E4A3E6E6A2A78B06745B
EAD7AE0F38F4D5A3E177398EC3818A40FF33932A8BE9246EC37BD89C5CF33F50
F0BAF05732C17FFB56DB5DCF938263BB49B5A0E536FA063D6D8C53508A79C1DE
763C9C52E03458A43BD42366D549EEE1256555177E3D68AA8700DA3E929B52F2
07382364B1C62AE8311C433728482D1CD691B783529D3C858D5F431F6D34EDB7
6D653F87A784189E1C54A1054637784E413B472B6341D637AB7DA1FEAF88BE6D
C191A3FB5ADEF3FD6B2286FC177246A170B20567CF3F09D11A879A1D9EA992B3
FB79991E67F575E62E6101B51F0D07F66AADF8A594E4DFB2332F33575F561784
573338B105AA4ACFF0F2FF4693372BF2943288D47656ED2CBC816B173B01048B
E9D1E4B54ABC02ED4472E1FF727EDA4DB5C687282A10D31D881F6C47B47F5B06
F189E5448E5B26813C6054B0EFD355444F1EF8F9438D6B51F3232847CB0B7521
E5CEA887FFC56F020CE4CD81646E30ABD086CF9C09A6B0FEE7416646141CCA11
373EF1DC48BD8BA01A6D096129CD99FFFD3CD8871E7F9C361E0A472AC0DF4A93
52B21D423E5EF9C3ED577D15735EDFE87F760D7200C559944587EAF9A8B5216B
3D90470B7C57DBB88326E51293ACB72E81E11CA795321E5BD510AB98D922C364
410F36D3C2D229D803EC618F47B43A7C9A4B24C0499FB1611320491A48DED203
71FA6E9B861586488177A8C8F976CFDCECEBB8152B9043D3678D69EF31C75CCC
596B82EDF5BAED377DC4C94194390EDD94C22142E7DF664039447C0B2F773040
15926F106FD116F8B388B207BDEAD9C007BD094F08F395887CE66EAEF5442A48
06BD491A18FC70CAF6FFBEB70AE878B9FA358C5E5753843A42942A17ADD7ED20
E5A361F1507C3CFCB6230364AB934CE5C19693D56526CB56E9B412A7287AFEAF
573A9C560C53F4EC10F01B24BD3061707FE6681662A7F79A91616E5D117BBD39
746E2C432C2AF2E868142D6AD2291E6FA8684619451A3D0928F822846260BEEA
7C8FB5E68B9516C4C99F5DF780BEAD3AB69689DD7186CE1FFEB7DF2A7921D576
03B41B9AC5E0FB1EF3B02310C38E959C1741B62002D67C9738E9AE38ABBB368B
F3349DE3D9D52215AA05E690FAA73EC216783CC4F106FBC375DA8D3F4E5A9502
A4B17D408FB1C8E66AF7CC627E5BDFAC1C4D770CFE91A1F649D760C132FD7702
4F7A0FB5FCDD0536E7C70D3AC58AB2DFA3EDD496C18C8974EBEBBD29E36A29B7
07A51A697A4D8A360D401719C5FDD1E327B0ACF922D3DBFB6E2C4742B6590A8D
1CC447CD25F463BC035327144B153EA7313133DF49A031282BFAE589B78A52C9
349C362FD595A48C117213B7502DAE7A2CDE9C4BF36A724D7F414849B63D419F
4B45BB03148724BF2EC753F817F94AA6939DAE286FEA07B203E7227495A40614
2980C851690AAEAF4A1EA9649BB287AC03A02FC5775EA0700277DE0ED84321CC
016331B03B13C745D7A4C76A048C8AEAE9C9724A170FAC6BCF6A85AA31C1BE84
F4B6F6C298A1E4D21FDF8F62B467C4997EC131EC9856DEF903C17E5B0BC25F89
AE84006216080ECAF450DEAF09EBA047E0FA256A192BA240D1BC5F95F52E2343
B861469202DCB7D6E5072511EA5EE12897B25691DEE760C9C874E9751049301D
6D600224EDE9B574517228E3E1C52C4891C970A04C42CF7216E5DB8CBE124D00
B4AF815C38765BEF328E9065B57C331CDF3FFDBAFE3C2A458ADE769460CF1F7B
521628787B8D52899DC4EE64CEDC5F9F0C55CF1C7B04436F5076398F44159AA7
7D2794F0C1A52FA063B9C5500FF2F234B79DC65856CA9A6F6CBF2D405B737444
1FFECBA1924D32D059448FD4B669BC65CCEBCF653C300F52896E5079721BAF23
48D62292CD5E27F89F2ACDC9BA9D2A1B213B20B0EBBF2BC4A0E37DE2DA98F808
5918B9123793DECF156F4018399C3DF46C502E4E67806FEC35AAA4100ECC0541
6ECE2F061CFDBC3211D1330A9A8816072B532A5CCE96ED940B3ED7CFA73F14E8
1DBE6FECE60AC0DCE98C901A79E3E0354517C3D959418988C044D049E9EDA646
051AF86E03D22C944CF66A3507A11D6366AF685F88D99F32705FFB5C31909190
4AA2B8C0BCEDB0E2DEF7ACE895397DFAF366B982B1E79AD82D5267D426490071
462F24E9823DD5AC2A249D44E1B2EE4D389C4174811E9E24F85A8B77DD6AE216
21F962B8C61437639C870058C8994A6AE1156CC43259B5641AB1B7C700F34297
5BDBA5D48902331A045A4349F7CC896C4BCF8569A9C0D1F476EEB0ACC357ECF9
1A391B805693889BD474843E3A99ED6986DCAC79DB20904E41A09BD9003C96AC
0D7859734D3A377A6AF8C5EF8D5806C6446B68EF6E7C97350B893EF62A75CCF4
3BE77361CEDA00A532917F25E3FE2B7FE624371BD931719C5A9AF7F40BC37D98
241577CDBF8AA7BB7B1925AC2931C2D35985FA8423266E492B1B5B5FF9F02CEC
AAEB60BE4ACDBABF6797B2914DB7477F4ACE3E01C310717FD8D10B05176B2D9B
FC674F6CDF12D2FDE4B981EB981AB0EB210E41CD5644E26C31B76B2F202276A7
F98530AF8035E5766CADEEAE43A43BF51708316401D8B181EE2F3F50F590155B
F03A84F0DC427C57B71704D2F4FE437CDC3452AD7577C8EB4BCC88ACBC5A62EA
1F054D8C4298A35EF8C30E907C72052513A1B20808585CACEF9C42659A359C26
4A28CAE78E3BBCAC1A881DF340EAF1D60DA5253CED3E3B74F586AEDFDE61DCB3
DDA0653E4D3E85B6B44E9D99F833D72AE088F54DC0BDD441EA5EB5A1FB805CBC
F53CB1041DDA059BBC1CD1305A3BA4B31B29DCAD43A45795DCE6245908215940
818C0E1B3883394BA9DADB7287691ED180DD93E65C3E4A2F30930C2AB7113EBE
44E0E78FB4B2AE464BECF5865CDD3182B7D2196F268CCA0C2DFAEFD098374854
AA3AA151BD54DECE76FAEDD518F1ACF0679C37303CF8BA999FF36F22473C8A13
323DF967EC8FB1123A12157DE158671515E8FA0324852EF953BCA7B17D163C42
C5FEB387AF7BE3FEDF65E84A150FE7FC30C60447FBB0C3A3A15EDC6C87355C5F
7C8F822D13D0BDED06C1CB188FA1FDDDACA9B869567B7E0DACCE40D97CC9D839
4F8FD589D20B5D27E480E276C6EC7D78B50DEDFCC22B9C02C7B4DC651BC88CB2
EE8097A410A53A3FD15F945FD3ADC0C170FB5D4155B13472B51A20A4D73BABF1
E9B1553BC56666646FB94D3EAD77C5E8835744887F0FC79D2860EE1031DF1081
E83957FE4360050370B814D169EEAB36866911279BC4AE282B4D5758925F712A
35B8F620A0139D762DCE5166E3F4D34E56D7F9F960AAE7A942DBE072F2BD0DCF
8346DE27FA98D21C0F6CCC5FB14EC4BA6D11343AD3B5D2A864498651C5705B18
F9A768BF76B742AFC3A23E150839A9654E8B6B79FB476BF992CE0AE4FA23E512
640BD887EB65D2F4C5B17E28DF409FE6477286EB7914B7BF4A14D94594408AD1
128D4101809188CA821FAB51B444154738A54B5493450992AF806EB396F77CC7
1FCB5081AF3DD179AC49A59D7DC1374407EA6C22FF48BF29628033A34ED2A4B9
72A06DCCC7899F9E951DE770BF8B2F9107007558FD384D44CEE85E999CE25035
4F7AEF5C2BF649040A37A9420ECAC9972BE96D516262B774FA4483DE132E30B8
3A2D8E49076A960B4583E6337D8D973971AEF83A94562FD48A2EFC2701D94853
C6B4C0DF9B0B406F203299639D1DA4CBE00FE93C637B8F2BCCED4CAFB85B91D0
1F0DF35EE6538D58F4EB9423C39C41C3AA6C6A86FAAB794EBD26A64909E3F2E9
B6F0477934A009209CB403A6C70D8299C499028E439B24F6ADED3F9AA6B72C45
DD27668A8715284A2DE07F181BCC32AA60075B672B02F3B4183ADDAC5C25903A
D1C838267AB37A8EE6A475BD2FDF41EC644C90269792285955DDDC16EC743311
3B203763C6AB64E16243B70CF4AE14E4FA534DFDD704171B538093AAD1D6C1FD
4D681D1ED9441BEB1B43AB00D90B6AA469C5205BDC03926B98DB1C31D6A88364
7067C9015DDD4935CE70918D64AB3E45300D17BDE9A4EB261FE1F3BFE28ADE72
E1F7E45D55CA2034552666D31F538BFDD78500BEE64228990E59FEB16A50FF95
E6F5910778C44D5A2414931C299A063D8364916FB85D9A6A045C8E0400318E3C
F28952A1757DEA137749EB4CA444B4C02F7E8A97C929B7FED1AD3CA2E98149EC
CF88AD65A90EFA72B7C844FA2D7623A45DC4A5B147F1119AF98A009C6311DABF
14542C0D54429BBD6FAE7212468436D5AAACA0641AA254357E85DCDB7A4ACFFB
E6A5DA975D97F94EA8A698A359F34D82D902F18B38FBFF69D3FC2662F883E237
19F202FD3A5D0361A598DCE109A9DEA6B70D4A0C58880766B8F5B8A09BD7FFE3
5F4A3DA7D7663E36D9B237709F76F7B08387257D52558DFB29F93802DAEDDC7C
CC577E4C62C46F414307BA7BC118247E732C60F0B202A401E637BD1A9E28A1F4
1E7D7B79FCDF08AFF12A72B898F3E77BDBB599F5501CCAEE3DD12E18C2CFC892
94364BEF6960A329BF18AE3A3ACA9B265F447862E9F4EDDFB7D30772C0555383
3A43A4B1B7BBCED8C179E8DA15A08ACB5C0BDFB329C6AC474AC2F118081471E0
5D313694533B84F28D418D7C074F7FA64D3699F72116623A339DC6A87A04A43B
CCBFC41759F5B0D201B5B05BA4B7ACE3BF67C1A02BF23C71EAF60EE04B6CB87F
A00C44A7C4FA4C1E2A9725B2C51A3879C7DFCB5C3FFA13B02B09E47E71DB7D4E
BF927DA5A895DAFD3F8BC9BCCABC2042EF795DF6C2D63445FC168FC1D071B013
1DC4B4F6EB740152D1C3290748D7B7AB63F65FEE938CAF49B9C84505943C31F9
E0C07FA1660FC5B2B1E296511C2307027AD03006A752F86D5A8B2F8AF22B0EDD
2B8EBAE5442324A2CB643688DD86F460CDB96CDD3A124D489FB26F7F93B829FD
0EFEAC2057510135FCF1428166E0CE89E6242DAFF038F0B60045B69688E4B93A
7586FB268711D0FD125C1D3915CC70566713B5C1DB3D9E3C01853183B604DA7D
19751D1BFF14C2613FD8E4D20A153B6F64BC4A15D8C3C9362C978805B3EA049F
6713BDFF2A6521ED3D261C945FD3CECFDB19E3CFB85DBF7EB9D0B447AA6F3941
D164C689B140451EF02B025BA89ACCBA37F23E7EA40CA52E5808BCE9B5817B6C
05E247A517BB819BE47670369540CAD83B848E819175C4E9E5718AC249802208
760049479EEF9C03F89E026963830B08E9BED0FDF83EDA2680A8CA2FC7005A3D
8D5D6E64F0C3C9377E85414899974E6F1FD5B8AB6963DFCC916D3C56FEBBBBCD
68226318F359689AE18D7AFBD99AD7686E517AAE6DB1996052A2B2FB50D44261
871847E1A63C68D75EC2D33801F3BCC8E03267687F5005D457C5C48D7FDD7299
27501BCB11055E8DD9C690071527C8BF5716BFD4F75AE1C3DEF9EF5379D53958
5AEDBCB1C6A2827B2CCA2E5E14A7AF15C652D65BC73ADD604C2A2CAF96620044
D50614C0D210FA11E9112522314C77582C5A780CFCC8CDDAAEED4EF9C66C3C64
30076F42342AA1E2F4AA5C665EA08B10969D8486FDDFE7734FEAB93AE8DD633E
C20AFA2DB6DBF76B201A04D2A2173AB6800CB4C0EA924AC83A9C30F0648CD35B
1E0382749157FAA2D36B019B09DD85B20CBEA23B9D80DBE902E472723881CAC8
176449317B7D07573D01634A67A911C83AF99F4A7FEBC55C93019B559F28933B
8549CD1F2C182AF8C199FC12831CBEFB61AE6C1075272BE68BC108A65AFD0188
A6B87D92942923542FE8EDD0F2B64FA27CFC63B8142F0B15B613859AC71DE95F
B65E542ED8737891E67D1CB62F5C0589CC72DC550BFEDAEE2DAD5BAF40A951AE
6F6DABA04A9CCF1A70C5CC782C177493D55971360055F8DA14D810613FDBA058
674205BB7B8D8B30ED8CDF30F21F1E2B72046B29B9051E47C680332A1090EBE6
7E8A530B003453D67141A14D49A9736CFE98332F9062F28DE91D76F344109E65
0C9927CEA3BCDCF34F991D8D38D3BAA3CF7425BCBFBF4F050C794F0662C73C34
C9203E6F1A9864D7D91D5F78A56D706B19396BFBA6BCAAF617825376C970B60A
A694F7CB040FE694AB48F95A5EA2C53C567618FE06C0EB49C7683B7056EE108F
5296FF68DCD3E59302B6C8686E69E994902A4C425BA976EABF2B11775929B128
A148E006EEBB14B7DB80614C024373DBF7B55D6FC843DE5A301F82175E6562E4
C11819A0C8780348028738C2FD283EE014480ABA41A592F2EB787C2214A53034
E4CFCF5676D757D3E635A943B421647667E6FEE402A3625929637168D5C0BAEE
522885E5D66CBD7A6610B93DA336936165E7B468556412386F8C2DD834221361
05243EDF44B4052B4C2BF5E90DCD355962158491A8FD8AD2C7F470E48D2164CB
3CD1D23D5C8E17CF1B43A482C44FE52E57AF48D23E3F2934FCB329953875F95C
55EF8381B2F5168DB2F21D4DD5C2D54A9E45D95AB16320C01FC4026A7CB3EF14
F128D3D109024F3A19653CE60FF2EC429B488BA24962FBCA8874A6494C94243E
742F8BA6789CF0BDD9C12B8DCA7BD95E88011126C68C1BD83DCD815088EE5366
F3654643AC38BD1C85C5739DFE47777CAE2C776EB306CD41153C149F9C3843B4
0623FB2F94250420E72C3B2268C4C18ED033F05E2A59AAACEC48D03AFF74C013
C002A881959DE729EC838C790E7284EC441F7251727FC432173CF4E2EEA0F092
F62B9B15CC76572FE440D7EDC6EBCD2AF0D56D5CB3D90AE89A09B3BBE8CF8619
4A56E683667618EE564F22C2D72A7D728CA31369277E9FD612C7762E866A6E4C
83D0AD28B1B21D30248B5410C7C68DC45383A6470A21648D9F06A9E500D81D0F
92CF46D124BE0F86647EC92A116E8BAACB5B8D71A2F04D0CC0CC7EA8413A965A
543D872D0E6B047605A7EB81CC59B2D42D7B9E4BA1233F318F2564AF2613D4E2
373BEFF822199F3B732567AF54B4C205EB090CA6209D4FF12C222C62F41237BC
A06EC1D7B045BC50C5A8BBEF4E9453F4AFB1FE83B4ABE6017EA8BB37EFC15D5D
7BA5444ECD60F8019767E96C1DA5CD97A4E0C649BCA256CFF6666533D7681119
AE065F0CBD6D7CF9D7C30F2738BE5C92E992D7B4768C856B9FFEAEFD2959E87C
18908A9B32009F81EF3FC08293892235FE4F2EE9028A215C8E2F693DC45329F8
579D8EFDB2CBDF41713DC69E115D9D6A3779BE3060F52548E2E8452C0B8FA4EF
B75B87695908BB4651F76AB9B2EEDF2F9AEABE8C55A9DD737F2069BEE465DA55
D72FFE707DB05C0FA72359088A8325BC54BB832481C95A044A19CC37129BDFFE
0FF2CE03BD7EB8A5432B180A67C5EA6E9D0EDD4E8591BB6A549FBCA44394ACAA
A35EDB76CD8536FD9DB0D41AF42FD2EBF8697E4A7094D7F15EA319E83F4E97AB
D7F3897319A76075F94A97C14B71D4A93D9C3BDA77BBA38E57441F9510B7F695
DD49F678A39E12B39B2397D00BB653C33FB701CDD3C429BD4CC3F96584C065FA
FEA3EEC98A124B6AD99FA328D21E9E2F8F27B94AC00C32E36E1E0F632E721A8F
A6C9F05245C4AE72F399FEA75B554A44AE6DCA16E9AB6CCD64C7A40380E4E063
C0CBC70CA2DF608D23CF7014995ED50D1C7C7C00A6C5DC95CFFBF9966D029A7F
E14531F94656ABED5F0791F97A22FE9C40AF9A268BA5F5AC54832274BF46A3B6
98AD3FF8C4A24CC2D9E315D4D6C94C061444558B27910A3259F12A28C5C43312
17787AD5E22F7891178B9A14F695284CBDE1ECFBE2F966DED35BC30E01B2FFB3
2162A41F22BAB341228E2391AA7F9267FFEE494EDE8E73653BA8DEAEABF6F12B
1F7F561D6B98FF9EE758F6E7268A2CCA486436C8E22386473C82789369134615
DB8125403696E4647FEC62BC81BB792591FAF2C1664BA7D0CD6C643183F4C353
47BA01E07ACD2BC3B0824E2111FD3F5069ED43225C676EFF3194344576065301
8DA9D3397C363582914E5618615608EAF0179687642E3BF1E4F4A98EB97AC588
ABCF35E7888916AAAF6DBD42075A43998AA99AA7A765A0562691ED8331E9E0A1
6F8E9273A72C002F2629053DD0970C3B52A6D2BD83E7E6FAA79187504DF3B0A6
F8F4F876D4A21085FF1EE6FDBE7A6BCB539E247746DB68334A976CE24DCE82C0
1919717C14E5708D5D8E2CB3C3E8E85141B0A3A1DB6BCD11407AEFB4852242F1
F78104F060B3B1199ECDB1C713BEBC19EED2A4EAFE73044DAA40EF5C7609B7B8
A5E1768FD239F48D405067778CE445DD1BE65EBB4F6F2AC454F58EDCC6B7AB68
072E8369BD37331DB4068BE99D304F82B16B3597E8AE55B131B1CC38C3AD299A
EF4A850A8F552B9EC2E7721EF7BFEB49FE778149E5795166423DBE5D30C0453E
411C939186B78D8E2CD968BE1C5333D260CAAE77A647138A1D709048BD868988
86ED3EE39A48B2DA910E4F7BFD1DAFAEB2334C69205777CBB3B79DD73F9CDB9D
5D85FBAEF8D9E868E11092F2C5F779CFD4CE061D3B40C23C88D2753714C625C4
FF0054A6971F7DAEC7488B5F3725156A5C3494DF5CCCAEA8441C98A81297C2CE
B9063DFF32B5060EEA15E1B9492D646777C744263EAEAFBC75CE2E1C71AAAC28
E17EA497996022FD4532F533EC12E2188F7FDBE2A9AD81F7002A27F2EDE3459E
49C2701CEC772C1D183F91D837DAC94609659451F83DAA63284959E53F8D4497
5B7A9458821507F1A8DDD443E59640507EEE4039DD701CFEAC41508C82927853
921E0A68CFFB2178C9CACEE93FBD4AADA1CB105418A2CEB05B802F8423B87221
A70199770A300914495066022A93223B441CFB45D0D6231BA9F3FF6DA7F1750C
E53BDAC5AADACC89C52E4241BB747C37DB43119263FD591E78142C6FBAE2C635
4FF6A9769C00988AA1D2152FB364C28EE3C3F61076183D794D012E55C69242F1
95F75855BEF63D7677079EFB568ABD139FF0914AC539398ACFCC029370FC782E
64CD3FF83D4C444E74BB3866519FE964B686FD06848A170D1A4A81FC4B0ED691
C9FECEC0394453A0D1EA12B2EFE037B62CEA93E726192F8270F61EE7FEDD285F
249B27DFD51243A1C5C193C88A044CF33FE44537784F03D1DF63985D0FDCB8EA
D56EC4CBCC99C4982F94D9237C9603957DD0395FCF71650633709A7503445B89
86A62C325940B2601778F733C3D704DD7A4CC75E9F280BCA96B53F62CCEDFD90
8B3A9BB6F38C2DC273682FFE0304FE26102708585946A8D719495B35C5387389
F08AFBEA8B0960A982D2F922C4CCB9D463C6CE5579B4A0FB0E228A23BFBD5571
95A4101752008793259254CC4305A9CC69EAFAD7F08E11473F60EC30EFEB76DA
D21733DE558EEF070ECE30ECE28B5AB6C1DC0F1DA7E25ACB3E1ACCC89641B537
D9424B02AD06A9EFB96B64BEFC97848A952D344BA1E8B7B80D005E1EAE2EA529
946A278DF0C66DF3F982105A95E2639F3275CFDE243216E341792F0BE9D3029F
78CE7D39462FC00FDD92EE9697D612C465B6D74D45D5B9DB94D162119C4A8EED
ED2E000BF865EF160EB44C2CBF703208747659F0C260A6B4FD314B9C7B0F7BCE
015A7372EB87999E943BA438BD5B992DAF20FEF2C8B8D09EA94FDC1B6306C5D9
2137DFAF0776AA1CBEBF8183EE9B0FF0B4A50487EAD01B3942B2BA9AFB06826B
DB5409881B3F1F3BDD688FC7615CBC9F752FBE0459B39653103E8FD2074C0B64
F6B35E73461E18DF6B4A6D9867BB2F3E2E7B16FF53BBC83064E3E89F0C376558
D699AD4D8F61A0EC36E998C5BA95F93D2FCFCC4A5BE306A8A0F32183E4BBB9A8
59493C5DB4622812B12B17AC7EB978E565B887DA0EE06F1D125F30214031A2B2
E092D6D1DCDE613CB22506243EAA07EBF1017F10A98B0B158DC86F1B2771E0B5
B6B1D30BC222AFDD71F08399B1453DFBE89C46D8A0E83AD725089C8E78B68456
B61D69BD45526F58482DBD42627082CA3A4A3D0D202ABAE1E46EB10E8134F9F4
9C4438FACBBE1896E3E67F154BDFB49E029FB39591D40815B56004D5550F42CA
25B382B4ABC3826A25ADD1B9921B2D419989021ABEF2360E77D684A09B557A30
3F29F74B18CF67467115519434231FB3647400B9910829883F45F1BFD9FD06E2
2DBA9F0A86B2CC8ED7D28390622F81B0DC073D2E3CBF4F35B17DABE014CCE85E
4D99C3702BF01EF0F36E918D98C95F55C3F3561B1CA13FDB336BD4F041E9FE46
C75BA73ACF5DE47DF6106A0A97B8191D08625530952062F1235D66DA5A758E98
59358FD0752C31BA482CA79D5277B2322AE801E90C6CB60912598E5D66798855
76E5DF22CD795D72EBB99270150C6492FA5CE5BA855FFA93D6031E4270B871A6
339B8D86C5C42385DD79C77BD0256D6BDB105AF4C4086A56721116D7C3C35A6D
D1B07B3E9D8E89F92D8FF23F2440FF317B396AE9308479EE9DA5F459E99B4DA8
86E03212D196388C946E9548A9E3702E1800B97A71ADC305DD21F19215BC8F6D
97F29DF1AC47CB3022D3751E6B7123FB71403E154154379D56D8161FB2625069
E57129E5C3DC3E83BE74EC4D802D7E48218115FCDF5B8AB03FD896E61D531E76
77009537E71AA660CDA4BE93414EC2279CEF6A12ECE3CD7847E65F61F7375177
5672F6CD97DA3F30A47BF8A248CAE6790BC900752F15829D20538D1374130102
9A9B2BB50CD36897ED81C974555ACDD1442676EDB17272139F34FE19D2C47C16
42DBD3A24F4C7A60E995FAC03296A97FA497ADC9C5DCE34A9BCF7D63F82EB167
58BD7DF127837144814E02A524FD51D74269A5A6C89C0F79AAA6190F1512E90A
25F6AF33E8E354F81CE2DA263DA7915220568BF08E90A141084121A824D3D46D
699D12DCA81D48262191466F92B35CE60A54E37158E8BE4A3BF5AF060B0457A0
E189BC2C021D77B8FDEF4FD133B11DA950F2DCE13C41DF300A7B3E985855FE52
1816004F7653175F8C41509CE29169C803CA14351E203449B0C321074BCF7371
B75C28E52912B39338A6BD324E416FF5DFF9BA5BFF0FEA50563BA56B88E576B3
50A4252F41353EFD20C7976552F01F9E771FD86D533D1B8A22BC3C5349D408E5
7446F26ECD3E977480E78175DD9C6F9C156F65478D26C2CB31723AF60B2EA751
09FA64EEB0E920CE4FAF6A914156F16606CC5C61C1E302309B765A79CAEB3140
55B75C80E80F99621BE726F52F0F0E3873039BDE3A4D546935DDD87BC5BC5CED
9AE4F3056582D4EC85521F76B8880CCBF30B0C8D8802948D1A493AB65D1676CC
1D1D05C942E4BCB263071FC11F7256ED21814D5132E07D9719774AB8BB89FD72
2AF048CAA68E214A189C6177D8FC71906E10F03083BB89F311F38E8043FA363D
CA07A101DD1319AEBB6A5817AA99274DF957210A401145ADFAC3EADEC73CBEF7
71A594437E6E1C6B0F15FB3102DB7A3C2DEE19E42DAC2C2A9E711EE272D387A0
3A4C1711DB1E4657B9C30E2AC6AF65E421861F9264CC00149001EBBA32932287
EF84EC01FC32E9148B337E97D020B7192B1689643A39FA9767D36874CE1671A4
325AAA049FBCCC5D57E368BDD0994D18E5B7D0BB26C152D9B84A05AF189FBC59
EC3F3CA962B509EE4C0F9EC898C71D8A02FFF3B949535A723F769C46D56D4267
54F7BE5AC33FBD8E3A98FE4ED02C31C75F1DC0671FE7164B27BA32D6B8089E73
4AB81B65A65C0E98020E7BF32E2EC380BD4C813DE8C037BCA9E596E51CA0162D
C6C7C35BD87DD0495F4568EFA51EB14DC20D0AC6FC9DCC863B295CB46610ABA7
68721C5A1D2E8D1219409881061810C9199521DA6B0088DDEC3E11B5B96C5A17
FAADB4D2E7795709BD32931426580DFA0BE06EA2B2F884E16E835255607FFBEC
C5B41D279BCB6343E9F173FF3266BDD6D5882F1E205FE3CB7452C01690C3A5EC
0477B7545F3B1B0B9999D8EFAA2639E2213C98CAB444CB778791C91F02CE675D
C14AC2370445C933A94C5CF53A7A6710CA4067778777625732DCB89B89322146
289CF3DD0F870D526FBD75977C7F76305E4EABC1EBE99B7D69B3D8E190A8F5E3
7AE6B1B9B7CCE9965967502E946FB13220933FB217C7B41D72168B8D5C1AB285
1588C367EB91FDE0F320FF41E45F60772632F9D8EB2FCE5DF8E873AF92E7A41E
0400C3AFC76E52095109246873CE6AF00228DD0F73FCD8126A2D82BF203428DD
37E421FC121459ABEC447775E35BA59FE2DC4E8CC2FBCE0E01F764EC4EDBF1A7
E60ECE54CB38A721D997672CC2DDC0033D035B1D76DC14C0E3A5055D73E72DE4
297770D868CC596E737A5234E91EA9C52A86F3979174093637EFBE8110087320
F134579D9E18D1E0A10968E075A6099B5ACE61B6E0B19B92671C4E22CDA2B70E
45BAC64C04B9B9C1300B4CE6A4306C5FF41162443F70DD54E1C30441451E00D5
A30B240DD1FB8177DF56958A78B2031C70D046059DD207EB35B030B8B165E060
B5F5E78B902C209BFF0F7D37498A6E2F8AC2E4CE7FF33F6E1CBC99AC1C55B507
A6B130EE52B355A1550F8ACC4BE71BACFB9144E9162A946DFAAD95EE0B346EBB
B899F1F42380AAB636288DBB885C46C5718498E0A8C3AAF39D9C361D34FAEAF8
703942158003E586C24BEFDB1660A6D9BED559C49C0832E1B3922E9197956950
D0A9A11D8B4C5F31DF13534861328A5E4673A4B180A8AE1BEA97194BD35F3EDE
0435F57FCCEE637518F5812EB351B65581569E68CA4FB9E53AD1E9C1EA0ABC4F
D33EF3395838D79DF9EE76E8C8B81FCEDEF38639D5ADC6EF60AA363334CDB374
748A5883A43A4FC67B41C0DEAE7DC55A13B2514EB9A2394371A053BE1A89B25B
B5BE29712C5B0BC50881826A306E1DFD7A9290CDCA4A16FFE88CE2051081DE16
433B664AD0FBCD335C4F7DAF9A7AC45F30271812DE926D5F5B853070BB58B87C
D0844E56167E63689E5624E048782F415DA10044611F428793C65E100ED2D5A8
2F9B6684E2F969BBAF38B233DF4785A6D2593932339097C31F6E4E5CE79485C0
7F9340E56BDFD22389341DE4C1323DF03AF9DD9C980E7DA2396B91642CFFB4D4
FBE795FDB292D5E91F940B751C6D635B6EFCD5C26D2DA0D0D4BB94981C142C65
BEBC08C308730836AA0DDD1B119943FFFF0B3CB4DE36004439A4D54139351FA7
6443EB9CF74C27306214E4BFF53EE9AC0EDD494087DBEDF3E9C4678E6952E320
E59B3309C0ED73E498CD7FBCAC60BA7227D5A1C4B1A45878ED108AA48B64CB91
9B27CD7107D4222DB031074BE603D6C6490988311A5C70DB60B784FC038F6DAA
C43953F972DD0FD35AA7A2CA4B557102419D3FFCEE2930102CC04683A12EFF3D
6DBAB167D3F887FD979BFE71B5744FB5A8F486B16007F6F5A42E1EC93CF55109
0BF6ADD317C59DBD919B17BC7BCBA9B9B3CAC3DE98B877A5B3EE0EBAE8E56523
78AA6CA84F0A02D1BC45BB5E310182F66B217FD6CC9B23CD9DBB08CE4B28C0E5
C17E19F74D596AF4348A6DB3E10FEFFD5C307A7C8731C8493D65E6834192E085
3AEB5B7643FC865E744108F2D2146C659B937B96A1F5453B7CD929283CE90F64
2513A242B94F2EB8D997A7019306E4878DE4117F053628851D1A824175717E5A
D6E1C381A4C882B3C87B0D1E0FD454E17C875B7531CD1BC116AC4F21FDF43764
C2E9BF1FCEF128DE46B5A4EEA61949A873779B1EC4B757074128544FF3CF23E0
D97980F20EFDD4ACD9F07CA5141A145705445C61B8079A51F706831997CCDE64
5DD0F4D5C6497E41D6170DF47C4392635BAE6581CAD4030C1FC5F78B048C0028
AFD1927440BA536403899F782D7C85211D48DFB521FD1536BC37CD35841D3591
791B44B4BB9C9A3E9F43D0E7FC27652E7EBA4CFEB04431DCD86F325D664A04CD
5335467747EA8075716A7018F3F0DA80EA81BFD6CE23716F6D973A7CDC90F95F
55AB94AC45A1786AF89FFB007D42537D0F5528E0DD9A56E20DB311BC76A14DA1
8413C9221F730F4CE2BECA91F339C38A1DB677671A3A54F53E7FD9B27F90162B
E716A84D6131A82CD6D8024C34F4D728E9E820E3326E0B4DD4BAE63776304057
31C3BDB9D7EC2A33214AF75522C30ECE4C64FDE0F95C13237A192C060D8D138F
01FB4730D25CBFD6A52297BE877AFD483B7A2E45D5CBB0102007CF630689E964
FAFD82E425B65D3F8D5CE7C2A9F04C499AA6F91561508D4F286F58CF2232CC5D
E35248DE1C246B368E6F18F6016684158051E57EB4C8A6E913B28A742F720351
2DACB682AF68C052FE07C56B627F0BEB5BE5C79A1D59E721E7CCCEE08E420B89
2DC3D47D893F2AFEDC6CB460E0E00A028B98F990B4D015153CCC2E1853473BBE
BFC9A7CA6DA74D112B40A9427911A2EC6CCE1AF95BC33C8D70D54C3D43792103
8CCFBFE438594D4C22D2604D62BA5E23DB789E6CB99E82CFEE9C009763C2B44F
4260042DD67B607DA826B223E36E496B7932374BC681FE6A34E62895B36ED74F
78F73219010BEC6484D6F98C99C6F7221F1F5F1E9F1D3DD6A17EC1A5217AD9C4
2307EEFA65BD67973A6805FA071A1C88F3C3F61ED65F6BA891E16868179108E6
AB2B49D15C2F18AE1E8BC4D33EF0EE9657A33F2DCCAA975FB5D7652489FAE2DB
D8FFB133EE8C4AE4336F3FEBD08B2D0E2CBBDF17A458B2A2590D51DEEC797A66
7EBAFA6B3978FFA2F0215FE36D2E41A56710541CD75C03A552DA6FC910FCB671
43F6057B685F6CEB005DDEDBAC6EBECE5E3388DDE9AE21AFE518F38A8C6E882D
97673A70BC845767366CDE0D37A82F060CDD2CA9EC4DFAF3F3491D3024502E3D
F760580C06161524BDDD70E4B12630C2651431403AE8D34C02FAA44AF5477E90
3F115BB5B84878F7E6C3CF6B0B901B6C8CBA8A2C002FCE6F231C60C2D41EE6DA
6BC0F5A7398FBAFB1680D51033154CDEFD6EC1BDD5E796363AB8F026A5625CA9
77CA3092AA53D5BA6E84C67E75AD8C548D3037F53DFCC42512B7F358E4314019
85466448C7BC69C5E60AFD5BABD4F09CF04CBEB1D5D2BD3E272043ECB3E15201
ED839D4500138EBAE289386220BFB4C113D7B5AE8ED2BCCE2C3B2426EF5E7C69
53F6CA690E8ECBC59879D1C64C7A1AAB98EFCB1F94F242480B1D06C1D1C283A4
475CEAF9D08F4A5D7B55EC7C9F0F31DE37F37167FBCFA2CC9AF123476A6C6F2A
78A166ABBC2E734581506FBF423892149B212AFCBF54EDE62CBD809856489B41
97F60D3490DBB563595A23B2F32A46B578F76FE7027B3CFB43CFEB5D81E7F821
FA11AC5FF0A590473E659B8F712B573F389BDF3625D67B14032D69B0684854DF
A24153C7A54CCAF0F2F4C88423F82D718BC9D0CF61AB1B4F59F97F2A13C267EF
F9D7CFD1A202580A2157BCD1A68C95A285BE2D0678B079D7F76201170A84055B
236DC73FD2EF4143EBB12BA4068E5036DB003A0FC303D0C6683299D06B5ED0D6
7D9F5E0C1A0299984D5DBDC7C54B53DDFDCD26CC37435060F4600606D37D3D9F
DAECCDDA7BDCD03276CC54E1C9739E059F7BBC7ECEFF3024A7860F21318E6978
22FFF91E5E66C912B6E1810645D1EFEE1980413950EE4337ADCCE3606B1AB98B
58B8A6AB7675B583D2947F2AFF2E0FFF984F022FE12D3D47113491AEE6B2BE75
57A33DC06C5284A9C8FBCC63BCFA5D252BD673EBBED1001F890256CEEBCD45D2
980B707F7CD586FADD7D7ABF910EE4798D537E8542C599D4E6BA69E4E1FC1713
37AC5E8807FDC9766DC49DB36DF165E91A5387F79E2D99A27ED6066CA17F5497
ABAB38C14A3D1874B9BEC948DB8FE7A03C5CEF1156392DB08FB514929DECA16B
C095FD46180C519916A903CA0F407110B41B23CEED8D9864AB1CDD883197BD17
467F92744654B6B1C07E4B12A77A5C2D5CFE0A534F958D452D44848527356C7B
EDF73162946A123E2CC63012938EBF4969E54475583D71D9E711E2B8065E5679
D2432045BCBDFB02332803B6A9E6A7D63C4EFCBB1660259743762E1A9E68772D
C599F33B3266AD86C895C8663237A04CFB90D18B2FCCA0759A7D588B87F3BADE
B9CEC7A329460CF59920E04D548D00E7BD7927D8E012015BB185EB7D35201D67
EB2B46C468C443FB502408ED3271A2EBFBC82BDC7DF8602F6EE946A6DEB4BA7A
7FD67C2A0C290A1A7982F38992377F048A63FDBFD917BB718E9C44F84195CC47
2115C9A906BEE8B178FA9743947F46A3C3678F4DBFBDFD0CCA320309D910DDB3
1E7B4B4B08726352D99664B7539657BF7C1C88AAF0ED6813D4AD21E8674B05A4
742B425D488EF5B2AC2AE62388AEADBEBE941852444D0BAB7675370DEBB9335B
3114B92995156DF7F5B5E95D6548E39FA117B079C8302B574F7897D9F07AC265
ACCBCADA0F833329DE81E2251A3E4CA631409A1D50D4E645BF3F5ACDBF8CE73F
932E9777305FBC9DD6333D154F0B4810F1D2A1717B38763CF6D26BEEDF3943D1
1F3E52E95CA64EE5403003C28CF530B771FFB339A6A0CEB786D57FCC11D13004
05CC65A8139793631E524AD1FBD6AB7D5764E2DA3631AB809AE0FEEEE03FD287
32CB57F2E95555F4EBC6F97D187D7F79013EA515E869D196B6D0B8B8AF6825E2
52BFAF0D5B62B6128E81068DBF528C83F702F2EDF4E45D0FEB7FD43EAE619847
7272F3571958BB8A5A5588FED7F69020B67EA3CE51B52BE00F21532431D428B1
076EF38DF09636DF6BA529B2195F29379C4B88C50DF01F591763F16FE1D6331B
DFECE6C9A7CEA474FA9151DA64C5A488EFD0D6F70F8391B7DCFD58902B637141
C9C3FA28B55B1B5A21BA2D8D81A2A9338E8F49892490A1CF05305DC3B29A1E30
B7E9A160FF152DADAD834A43DD5CB510F4E2813868F4D52CB24E466DF528FCA0
0A4CE547751BD1D3B231932030A52A1E1FDB18F662D78A3F86A59F8A28D1EC19
9B901A75CEEBE32A424A9F151E06665F2CF7B1BC59192EBC1F5229CD0EE7C456
9AAC2504A73C6556A189F6D7F922B8596693FDD519864792B64D25D7EFEECCD0
A65DBB37026729AEB90253B022FE6E2B733FE9CC50093B5BC70574DCD94696E4
D63FFE90865B1A91A33E80BA24993F4122F5F4860D4CEE47628B475AEDC1C82B
BB16B64D80B16165FF340CEC0051A4EEF6A495823192E78065FD638A73B90814
4FD6A49D62B4AA487C72F456899AB09020290E0AF57E4ECF56C9B895C2B0CC01
A76BDBF90C69DAAED03CB8A5AB0785C67806FEB29DA4F21BF93EADB34FF10FA5
D6EB83127DF45ABAB8FE9B0668B0CA3175A513C32583B9FA7CFF6F898BB56E5C
40B1D2D23D99FAE3041CEF48DD1A19A302235DE926D229F878B8A6B915A6875B
64DCAEFE14DFE807F4F8A095040E95C59CDC1729452F215059BFB3F5AA27D10E
337086144AB09286BE38216F25B491DCE3489FA322F968E512AC8A5FB7C4DADB
72BD0CC0F565C8E6BC119C8429EE319B1E09E4044F8B2F566E722D2FCFF856FA
5F423972AC19B5BC04DF4D12AFEB32EF0A5947731C8963554083117746434DF3
7B1067047F2894C941C2774AF399F6E9958338EB40D19142D521FB4E49963BAF
E2800287E6EEC581D8211E4334A8DB333973B7C09D7C88B4FE0825CEC14053EB
3E973357714167A1A8C656D8C1051692AFE293731EE7455CCC4ED0ABEF6C73B6
DAD437879A2C7FFF041A1EEFD2F26607BE82827500CCB8ADD6692A0265009A11
B4D0E76C5D4E6CE1167EE3B6B79D0F09422D2ECC4B3ABFB74AA7593989CA89DC
71CA9AD4AC12B09992BA02F4106A0A97B8191D089289B8A09A1009A55A98007E
9E34D5808F63FA1F4464E15BB4EE62F041C70D2A9B57EDCFEEC04782993AC811
76E0B17A5F655AB095D5304C3DD6C02669F517D7458EAA898572455534CD8DCE
628A3D44DD192024F7346872E84795059D0A12F0E7910CC2C27956D4647D2D62
4D9688C49F9C1C2FBC2084499E8C6611D567EECE1E42FEFEDDA0078E7789333E
B06066D104CA905F33476D5A85EC996E1E166C61126E8BFA0855CD9763824E0F
F1718B5F45C6372BAB01A1318EA244973F1DB7AF4FC2F56904C2040E7F759B56
A283FB3F00E69CE16B13C6DEA8DB6B4CEB27406F33D2DAEBE5ADF45855175AF2
3680C0DA9FF7E6BF4298E548FE405D01D18D88870DAEF1596A2319473A95AB28
7043C5A32B1ECC192C5E492F881EA0D64F3BF02C625B92D884416C53CB94E22C
AF44F4BBB849BA89F2AE5877339D1F2ACE6E53FF017012568E6CABC01F5F358F
2B05CDEF065A425583E662D696B6684152C6FDC5D5E551B989AE583C5305D7D0
1840B5FF8ACF87A13A3A97710549853ADCB9AEDD79C6DD3D7E784EB8B349EB2F
88B4AFBB5D5E33BD991325303E37375DC205CD8FFD81E90BBF30579F13EA06A3
6998F302A73E92348FE74AE5B8CED1F61DE6B4F56754BB3C5FC0F79AB502D918
EB10300B507A1972441590EB25F1BF32E804C0EA325EF6E6D70EE412FE5B9605
AE8D7FECD55B01B5BC078E40A2EA77E437E5C9F9DD832892EBE9E2BB72A36BD5
EFBE89ABED3B1422A124751EDA0CED4C3D2F1D51827419C6A702B7E6453B1672
D45B719225BD4AB0E5401713F8B9BCAAA74198EEE8D0493F202C6A48C963BAA2
C2F6007FA4217D853967AF5E3659D9628533AE56E6523662722EE5B99CCC94A4
CDB6B7996277C97EB092E8B72C488667237A5D8E44ADEA1B2C617923B5F4DD67
DD7E31E4F5E41A104221C9323CDC0D03B79E4C0CD14763A75B8EF6B60D783D56
905A5D7794904C0CB95E2AA8351456288E6773130CE848C798AA771E0D7995BF
2CDE7A0FEC6DC4B70B7B23330856D5F9A22B117AE3293977F5EA5AD87DAEAF4D
259B77A00B8B5197300E0F6AB9EB1E58C35E4ADF2EBE0592B446F21DC5E6D7A7
90D7D6296E47C65B98D2A1647F5A18D9FF2022CD2DD4790CC8A485CD0B54EFE6
9981A410289C94B6EC856BF8E913D36CDCB2ECB2D06D6DC6C00AA4C418F45F2D
92CFEA647A6508A8ED9DE0DE2CAEE3C28522DAAFFFC84BC659CBCE898A82F8F5
6D3FFFBF9C86FE5F877D7011C1787A4693E254921B8F445FD0F43F9A1290E91C
463895BD12E8A831DAD661E0D98492C5DC2E76D6E4580021301BFEA3CDA3FDE4
A4BB418D43998003DC91461325F612A53F25A5E30E47AF91A2FF12313404784C
F7E22B865D9936CBD49C440F2CB4AA55AB81E12CCF0C51F78E246AFA85EA2A7D
4F770A1E34F0B0D3E761E0A154DDA036BA52BCA8BB101E12DE774C78A0BAF585
0C2E53334AFBF076DC7501D6C3C61B924612C160DDD5172D98DC5DDFA80D96CC
338EC8AB3867E917C98CE630833A36F018B6309FF49A13B3A2FFE0ADCBD3D1F3
B66962A7C6579DE0654DFBEA2E6DB3041565FDA3EA07E2C04226045642BE31A8
B5CF063A5B40A0BE90965C2C34C42797BA6CD6DB3BEC3C4CC2233691CE6A5D66
A866BFADE0CAC16C59006D0F752AA1BA2A55A24376D02217FB64BD239285BC32
6D3CAC7523A90D318A8A0384439B38D63B94757252062EA448D68F379081693B
70E98C1801A6B5C62854B3D276E1E0258BE18A8C0973844C950B9BDA89959372
A2D1D83ADEB819483346510548DE1788FF9C79BE9E37930859C48DDFBB579ED1
721E03C6A83F194F10EF3375EB3F94FDF3A7307A61DF6C3F579DAA7490C29C53
99BDB16EEA2A7AA8206A28DBA5580945FEFDF28654505C7F7FB50EDDEE2C8FED
2E7838C7734795D322D9CF120FAF88391E1B6BFBCF6DC366B673EFFDF8F0815D
7853C6F61278341A101828607B103D514298FA7C892D566AC886D9C2D17F9C23
C68C4ECEF035BEAAA6D87458CCF25F198AA55DBC4F8AFB20F8CF5D836C1893A1
463C96AF729C75B5BA3DFD65E2AB7BB6FF82CC4E4AE64C608EEE0A2FA4E6E74B
E7E3358EBAD8B569C347165E8287E05176C4BD9E405AFFE33AA6E7B94BF1E611
B73B0DEE3AC8F44C4CA15DBECA20C35CD9B2E94C4CD160E676E300BCB6143951
019E9F254AAFA7268216A45C23F6D07CD4466A31B0CFF132F8AE3AC04E378C4B
799DB8862B0D4909281268D95E767A22F90657678D00A88ABFEBC6E8B9BC019A
0636F5DBB8F16B58AA7B006877B45C1A184FEBF3B85D6028CFB8B733AADADFB0
0BF237E0DAEA266E605EB9C4353FE20954906ACE661BF02E76D42AFC0F289533
E1BFAAD22EF2CED6AA6EA26D2C2256A983296BA17B68FD102469B351C7079F4E
17296DFA5F6BB1874181221E88E28E3035136C1564DE9FD49D7EEABFC0A6323D
76E86C1EAA011C3592E2BD839EE0A60B87C6D5BB3659B7E9A3B2856CCD747FF3
01150AC50DCCA3B1678E3821635D8B1C47836E6848549F749658F1F5C0E3D442
BD3D39098615229581F400113A3491F5E07CBA5CA3E34B94447EAFD161DE16D7
E6F42D58A138028FE8FFC29FBE0F93390ACEF598DBEE4F369D5FDB88F12DEC91
9082DC237A961542327BDDFC8B9FC564104A12E66ED0144D9BC80EFF6BD1A0F3
B48BD6A3C0EA6FCB062F85188250B9E92573018B3BAA9C6CCD31E1B3C5D46C68
A5E4FB3D8509D3FF38162B12D7A68B20551C36E556EE217DEE75884EF4B9C063
F20437BB056519FF432CEA503118F0A2F57D33E98AF62A27420F56A44CB2F2A8
44BD9E19A6ACA8DC227D032855BFD46D9557B93C7270D113DDA77D46B69C49C3
56403710944053DAAB56B1075A0C3832220752D104FA11470638D2664856D62E
28396E84AD58C190F60FB936D455C4A243FA85FC190E9A88B6C8B3BFEC85B8FA
4718EA5C0ED8E24E7EE718BABB4A5747586EB25C06795D12BC19E6B9F244B494
565EC82554337D57EE74389F5F629D30064365375008F96B7F68646EFB69E2AA
CCC8CBB705E9B2031EF5BA8990633918F5A211CC9414A94BE79E2A7676792C6F
79757E89F4438F54906FAD0E6914E592C75BE67B5550E077923583C2160F568A
3365B3C1540A2EFFFCED786DC4D0E02F1AEFAA8A7B2B96971E35DE1AEDDA228B
86C23DF95F6CEA4642F2409E506EDBFE9AA1872EA44E89C36AC7256014042180
0FFBFCF4372B123AB68933A07A9B319C38D4221576C131962BCC5728D65B8044
E2E20578FA29D7DD7738DED4233A873C4213DB20CB4891DC870ABBEA04BBABAA
8BE01DB2E526AC429EE5BDD9789E307933FDFB4E9E1B6DEFF59372DCC9947F32
A6EFFFB40FD43949E07AA47353BD44058B858456FD04C213A0F862FA731D18CF
33BBF61F01565E3C825B0D6143BFB56A831D89D241613946E097CE77A82F68C9
2DA11B10345BEE36A5808BFE1822703318090A98BB87482B6EE7FBC1331B91F4
DCE7DAD5829EA5E3B833CC268820761A4F8C667BF264CC73DA9A154465A81F9F
148B333B227D98FD7D8A8B1A1EF5F3807601245E8ECAD295A49095739E535B71
9225BD4AB0E5401EF2C16E608A058E234468B01F43AD32C2695522AD9B7CF2A3
261BA410BA0C67AF2BE25C387FD104E6DBAD7CF20CB97ED9743C327A406FC07C
39CE6E1D1F69DD619D5C37430AFB2C11253C575E0C223EDFAECB20D4B63A85B6
88D50EEA68DEAD0613A62C3000C037092ED0A939E44CB33D7A290A4FD1B16EE9
01CCC6BD34A540CC0B8618D0A6ECBBA19755C85371FC39C88EC838D41D58EEEC
A434E038A136F8256B7DCCA0D7503A0750027042AE2EDEC761DE3BDF70AA3A42
1603ECAAE8336805E7711F566E0564E3DCB68571892D95BEEA61D9EA34B7CFEC
C63F8706BDEF49D13A89E14C869EE656C9BE5CE342F24464B6A91AC0C6A7163A
BACCE2BD0E5498973CB6421043F7C7AC48C1E433096938AF5D45B600058B3ACA
4E03A3CF8CE47EA255B840931DD004918675A019C7654296A4324572697EB452
E0EAC3A4D13687610D5EAF30871A631DEB556D12FF374A650FFCD7DA5EDB2856
7F97AB17B4D2307FA23A276F654DDBD09676EFB81C72BD9EFD747462AA7025B2
E92AF0B9183F250AC5CF30044DA33FB66A8CB6FB011084FEFD56A11EC3DAA685
51A2F1F83F0254D70C58006351DBCEE17E4FA73C0207391E25676544EE00DE4B
C44C72BD93369BF56BE05A7728BBE991641758C9AD6986C96942AD652B914A19
1BA0B3834FB65B5CF6A1A9A953DA2DA987A9FC10B11E667F4E8AB8DB6455A64C
A2A333D92D2CBC52D0F842D51DEBD2908CBA3FD3A2885A6DBC4879F3B18C03B3
D1B8AD511BCD6014D0FA958B0DA6C678C02EAFA33C8BDDD0EBF6DCF9A3C3CED6
8496D42941DDE1FB1E05BF4C74BD300C63DEBB547B7CD6B2979E5AE0DD8F2DD1
1534B4AEB6B72F304680C4E090A3334B420AE28054AA9EFC3DC6C9B092FFDC61
EF6AA4517FE81AD15E3AF93ACF5E651F75F1C4CEEDF6D8DC33FD5C80A6A9F489
7FAB65F5D4AF02ACB1E7F0998740F69DED579F2DDDF0DE2998667C20B5DE7B38
5BD33D268822C3B69BB5BA2CDD9DBFE59F1B39C9633562F42B90BAF7388D02D5
8D455A922FD97207337D236C5C2BE856890FCB77DDD842FC84F3C06912042080
130A9470A8ED1C11154CB95ABA0516E65128796E46CB0AF40C14746E26F92BBB
17012C912536878C33A77C5CF9B621FEAFA506B9DE4D054F3B364ED0D184E842
E56243CF5AC5709729F80206BAD373B17D1F0A76530AA929FC2BC817DCA4D550
7599065C78827160B9E99262E9EE432E3BC4A8C55236AE1FA40D51C103945E4B
026270626FAFF95BD206744208CC7DF9DC91DBC28E765C67E72053994F2ABB0A
107AE4A7DD6F05B8E26027A9192C59EBC56B168C67104B329A66E0C0C1D08100
CFBF69D4FC931193B89536692A7F16FA93387044C9D86E491C898AFE0A6786C7
4031D7C9DB5CD7B1CBFAF76E2015ADF15926D78F91FADD764ADE4BE826FA3AF9
C4B2387FB87782F0FAD95484708EBB607A52127F368B4C6A632DDA9A069B7E7A
5416A448D9633808747B68B4583AEC394E1A67E0861D76266B1A0125A2D82302
BC844B0504CFAAA9990F31FDA9C4EBB50F50193F035DCAF25BBC126EE2B757D6
50266317FDBE48B6C902DB54E10670A1040278804A30885DC5F1A7C0104D6BB7
8883670B4CC9EDDBAB26575F5D2BCC2EC3F24414482F806387CD642D4B7BB12B
ADADA6E299D108A9F6E52BEBB1E6AA89A12A7E456C0159104678C08A957731E9
CBD59D1A80F154336A889395E771CEC2337F7B465EADD7ACB09C420CAF5E7239
00AE5C4B9A0D75894EE2D069F8B922FA6069FE52AE8606B3D35DD79493885631
084DB3BB8D3259732B04387DC65789D34DC9285AD4CB359A97CFE78473E2163E
81F37387EC8897A96F50565C94033DEE2C3955A69E9909EE52CFD9DD1F1B2FE8
2BF9D9645ADAE7DED4B462536CDC730850B4352CCD4C3DBC3E11E268E8683F24
B60619C7812FC7805B836892C7988B1D292A7BB616D293115CAEAD2464D8D80F
6AF5B37BEB677C6D8D914DACF7AA35FE84C15777B8D7DBD5E383594B82801944
15E6EA95223CBD35EA24F6FAD115EB0ECE8A5D319F15D82E5C1ED90CADF406FB
097C42AF6AF05E6661C1B358E0D52FFB82B9E1E83643793F57FD9E2106A0B9D5
81DCD2C396F133402B6C912FCEB57F1A9443C377595BBB79F8BAEA38268142CE
8F99C8463C4EE1F0BA3F0D6830B895BE23042F4634707A67D664073338B1CC0D
92B06F884B837CC3222910DDCAF8AFE2FC9007904D98970B14B2DD966F373765
CC8C7C20AF0C9DF903BA33152E7A950505550B380C39972C2102857B20A1097E
48234F3533CE7E0F2389EFA895B3974490F2C2A1EDF1CE7D8B4DF9B3538361BE
52EE023DD3BB639CC14FD8E4977AF82D8D10AB50C2D648198F053DA632CE11D4
A7F756023E952BE59F1A358FE1955319E3AF9688DD8C49151AF0F15D19743038
7FC9A4A062BC8649890391C79A7686D3B4DBF31B395620B82B32F96D5C1F68F3
BF9303B9BD51C706364798E6568D63F846631CA225811B1749E746032E8D6998
D6E0774E2C8AAB1D77DC53FA579830625C3ADB1A1D83554F33819C691906709A
C46D668352234F50BAE8EC5C57AC23DA6A758E78BC8E9C0FF86EE5411F1C0F68
2042C7B973A92078EE12F31CEB494BCCAC70F9EBDBCA4D364F4F2AF2CF219D36
771AF17841FDBD5D61712CE00212DC4A89656CF775582E5EDCD093941BE94A5C
A2F739C797029BAA77908EA4FFBE331E1E8760788C253576E4158388D93D8209
C94E8875BC614D418880B87904CAC71EF358F9C299D5DF76081D5AF09EBF4678
CFABD103B3AE19B2DD9912620FC6C854901A9ED79135B2E62A3414CA83C56FCE
89518733BE127A6EC503771A97FD922F9C8D5BD85BE4EF4B17F3BCCCA10A5037
8718D0EAA0C3AA80127726DEE0698204894B9896F7781A381FF672442A667222
8ADED148605DCB7E88DC86C3D90B03BC79D1D71211DF4C60AA0AB1AD022732BD
8E491D8F710C5F8BC346DDBA63E183CAB1DC3FA3D0012A0B596C052A060E5350
56FAD8D92CA14D77CD52B905743C034C5DD269747AC424B9C49C833966F219BB
46AC82D80F945AB76E7918952F15879EBC5F316E0D2390E31E89CC454EA0BA10
4733FD85416657A39CC470615C1F64D30EEE55B1DD1861566B7CF987177957C8
62C0B41CF2ADF9729746E240A54A8C0153219B7C5FFD482D4B664BCBECABA7CF
BD64F4F06991DC557FD3364C6F3A3D606D98A8C1C1B158B7F238E97FD6B1BB2A
B2ACC97A94FBA562CE0D661F149EA1EDCD97FD645265013E717B84A9CA9D1D6E
989BE277DC25C383754199BC9C8D91DEDC377F28CAB0DC109B02A806266B464F
44D5AB3CE0DDE8CD019ACA31D26D26A53E5455CA9D2E0F4A930BED07EFE8B111
00018DB1CF536D3F34BD295071C7C27DA7B750F150C9401A3227F9ABFF613F15
7B6DF71F74B72513AA7C8FE88E00C1B36F29DA9F1EFDADD59A070722AB0097F4
F091265B9E62A2996EA42ED0B19870DB1D01B61F9D90E704F0942F9EF45F08D4
D2CD4D97792FA8E6BA81FD854A974F76B28E06A329F9CED68BCE525CF0A84ED4
EA9BDEBE94B6FB52B3F5593946359D0D3E396E22F9CFEA2C3E3EC8D88D960074
80F46D3B786905159FD7A1EF0B8596481629EE2DC69AFE3012DC237C0F69D4D0
C42D85B78F798E70912E37B95736072AD653D09155CBC8783311472E77641735
F42ECDF22E1CE3EF6DF84F941BF1B5F37A43352667CAD3883586BEA0115A7C61
C1B62CA7CC1E1AAB1ADF7257DE0BC5B2799B4AD59DB1E3309DE11FDBD7D9A287
B61BF3DFEF10A7EE42E26C61F574264DFD95D7B341FF30B9D94E69B3946BFC07
CB5DF5093B7C72939782765B6FC30DE1E616C679D94C2F552FF53CD2D042CC37
ABFC6F6DCA320F53740DD0C9472071322C5B525C8CFE210BBE147BA1B559B14A
0353C5FCCA036ACC7B717717733EA0AFE48E77D0F4B6D0B859807E23C3DD750F
54EA165975536FDFCCD4E3604A3B4D72B6A24A1DD00B411E1000B15AFD96CAD5
357C685918752026BA50987C78EC2CF605E2652528114C34A97F5FF222E25625
55A04553B64057645C08774F567F172FD80AAAC99F242086900BAB5C8826F9DB
C0279A95AE9723BBCE7DA340F1E275247725B05C648DAF901B8225288D1FB272
2E97CA65D1D2BE364454ABF416B40B6A322B6A2C54E2DF937398A9E6734DB2C2
4EA2D2D80B17D678FA9AADE7F5AFE8ED94A70D218D6461AF37359B717F2AAE4A
107772E3D15C03F224B71815226C9DB9F57E2C5D131319C2B08B52C37D15C9F2
3522E6F8B9D4EDEF3F0D4A2C7C17B7EF48283EE12A386A56CD3F6604C80E8241
BBBF67D97E7CD7DAC2702635F3C78ED9787A603094DA73EA08ADFF5EEDE26A8F
A6483D7468D4E8E0925154C731D607894A5CC07DB3867D539365FA81B3626E27
CE9E77ADEC400336D3F58172D3D5BBD7702B9A46E12037533BD644A220EBB42B
1F8B638316D93C8E5D1A0AE369B0683A23D3675EF6C87C7EAD862E0DC010AFDD
003AA7E5ED63C1C8C16380CC5FDEDC2507ED91D15A9783ED84B589DCDE0297F9
26C44704F4E4C728234FE2719F1E8A0CCAE9C1E9BFD1721F3977C0A725048560
1AF8269D613518939F07
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Christoph/Dropbox/Aufgabensammlung (inoffiziell)/Typ 1 Aufgaben/_Matura/AN - Analysis/AN 1)
@start /Fa 204[406 2[406 48[{ enclmrm ReEncodeFont }2
664.176 /LMRoman6-Regular rf /Fb 133[438 4[545 6[571
7[452 17[548 3[597 4[793 75[{ enclmmathit ReEncodeFont }7
885.568 /LMMathItalic8-Regular rf /Fc 27[664 111[432
1[548 5[332 2[399 3[598 30[848 70[{ enclmec ReEncodeFont }7
1328.35 /LMRoman12-Italic rf /Fd 203[993 1[993 50[{}2
1328.35 /wasy10 rf /Fe 242[1594 13[{ enclmmathsy ReEncodeFont }1
1594.02 /LMMathSymbols10-Regular rf /Ff 241[470 13[732{
 enclmmathsy ReEncodeFont }2 885.568 /LMMathSymbols8-Regular
rf /Fg 198[470 470 470 470 470 470 470 470 470 470 4[732
1[366 366 40[{ enclmrm ReEncodeFont }13 885.568 /LMRoman8-Regular
rf /Fh 177[830 12[830 15[553 2[307 46[{ enclmec ReEncodeFont }4
1106.96 /LMRoman10-Regular rf /Fi 160[909 45[606 1[606
47[{ enclmec ReEncodeFont }3 1212.12 /LMRoman10-Regular
rf /Fj 133[604 1[739 2[740 470 5[776 7[641 3[553 683
11[883 762 3[838 4[1107 7[931 988 975 5[361 361 58[{
 enclmmathit ReEncodeFont }17 1328.35 /LMMathItalic12-Regular
rf /Fk 150[517 517 78[1033 9[664 13[369 1033{ enclmmathsy ReEncodeFont }
6 1328.35 /LMMathSymbols10-Regular rf /Fl 162[361 1[361
29[1012 1[361 2[650 650 650 650 650 650 650 650 650 4[1012
1[506 506 2[1084 37[{ enclmrm ReEncodeFont }17 1328.35
/LMRoman12-Regular rf /Fm 154[966 101[{}1 1328.35 /TeX-feymr10
rf /Fn 650 2[723 5[650 17[650 13[1012 17[975 73[578 686
686 939 686 723 506 513 506 1[723 650 723 1084 361 686
397 361 723 650 397 578 723 578 723 650 6[795 2[1336
975 975 939 723 957 1[885 1012 1[1192 813 1011 668 469
975 1021 849 885 993 939 921 975 1[614 1[1012 2[361 650
650 650 650 650 650 650 650 650 650 650 361 434 361 2[506
506 2[1084 3[361 3[723 723 759 8[613 1[613 16[{ enclmec ReEncodeFont }
79 1328.35 /LMRoman12-Regular rf /Fo 1098 2[1196 23[1046
31[1625 73[956 2[1554 1136 1196 837 849 879 1136 1196
1076 1196 1793 598 1136 1[598 1196 1076 658 982 1196
956 1196 1046 6[1315 5[1497 1196 2[1470 1616 1682 2041
1293 1685 1[801 1682 1[1353 1412 1[1554 1530 1625 7[1076
1076 1076 1076 1076 1076 1076 1076 1076 1076 1076 598
717 17[1255 27[{ enclmec ReEncodeFont }57 1912.83 /LMRoman12-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fo(AN)718
b(1.1)f(-)h(1)f(Prozen)-60 b(trec)g(hn)g(ung)716 b(-)h(O)-60
b(A)718 b(-)g(BIFIE)p 0 TeXcolorgray -741 4800 a Fn(1.)p
0 TeXcolorgray 651 w(A)-36 b(ufgrund)557 b(einer)i(Bef\366rderung)f
(erh\366h)-36 b(t)558 b(sic)-36 b(h)558 b(das)g(Gehalt)h(eines)f
(Angestellten)h(v)-36 b(on)558 b Fm(e)888 6792 y Fn(2.400)436
b(auf)e Fm(e)650 b Fn(2.760.)921 11330 y(Um)433 b(wie)i(viel)f(Prozen)
-36 b(t)434 b(ist)f(sein)h(Gehalt)f(gestiegen?)p 1 0 0
TeXcolorrgb 1054 13089 a Fl(2760)296 b Fk(\000)g Fl(2400)p
1054 13677 6827 45 v 3166 14898 a(2400)8382 13987 y(=)368
b(0)p Fj(;)p Fl(15)921 16533 y Fn(Sein)433 b(Gehalt)g(ist)h(um)f(15)217
b(\045)434 b(gestiegen.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 4800 a Fi(___/1)p 1 0 0 TeXcolorrgb
47998 6792 a Fh(AN)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 20266 54804 45 v -2331
25890 a Fo(AN)718 b(1.1)f(-)h(2)f(Mittlere)g(\304nderungsrate)d(-)k(O)
-60 b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray -741 29197 a
Fn(2.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(ist)h(die)f(F)-108
b(unktion)433 b Fj(f)575 b Fn(mit)434 b(der)f(Gleic)-36
b(h)g(ung)433 b Fj(f)142 b Fl(\()p Fj(x)p Fl(\))368 b(=)h
Fj(x)32638 28715 y Fg(2)33459 29197 y Fl(+)295 b(2)p
Fn(.)921 33734 y(Berec)-36 b(hne)433 b(die)g(mittlere)h
(\304nderungsrate)e(v)-36 b(on)434 b Fj(f)576 b Fn(im)433
b(In)-36 b(terv)-72 b(all)434 b Fl([)8 b(1;)221 b(3])p
Fn(.)p 1 0 0 TeXcolorrgb 1054 35727 a Fj(f)142 b Fl(\(3\))295
b Fk(\000)g Fj(f)142 b Fl(\(1\))p 1054 36315 6514 45
v 3985 37537 a(2)8069 36625 y(=)369 b(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 29197 a Fi(___/1)p
1 0 0 TeXcolorrgb 47998 31189 a Fh(AN)g(1.1)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 41012 54804 45
v 0 TeXcolorgray 24746 81281 a Fn(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1794 a Fo(AN)718 b(1.1)f(-)h(3)f(\304nderung)e(der)i
(Spann)-60 b(ung)714 b(-)k(O)-60 b(A)718 b(-)f(BIFIE)p
0 TeXcolorgray -741 5102 a Fn(3.)p 0 TeXcolorgray 651
w(Die)451 b(nac)-36 b(hstehende)448 b(Abbildung)h(zeigt)h(den)f
(zeitlic)-36 b(hen)450 b(V)-108 b(erlauf)450 b Fj(t)g
Fn(\(in)f(s\))h(der)f(Spann)-36 b(ung)921 7094 y Fj(U)573
b Fn(\(in)433 b(V\))g(w)-36 b(\344hrend)433 b(eines)h(ph)-36
b(ysikalisc)g(hen)434 b(Exp)36 b(erimen)-36 b(ts.)p 0
TeXcolorgray 0 TeXcolorgray 5205 41558 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 328.8854 a add def
/d 0.0 a add neg def /h 289.34369 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 5205 41558 a
7410 39064 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 11 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.25  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 308.96858 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.25  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.4527
T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.25  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 266.81285 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.25  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45274
0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 308.96858  0 -36.37735  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -36.37735
 308.96858  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-22.53084  def /maxTickline 266.81285  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 266.81285
0.0 -22.53084   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 308.96858
0.0 -36.37735 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 266.81285  0 -22.53084  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -22.53084
 266.81285  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-36.37735  def /maxTickline 308.96858  def /dT 1864676 abs 65536 div
viceversa { neg } if def /DT 4. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 7.11317  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 7.11317  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 266.81285
0.0 -22.53084   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 308.96858
0.0 -36.37735 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 6165 36200 a Fg(4)6165 33050
y(8)5694 29901 y(12)5694 26751 y(16)5694 23602 y(20)5694
20452 y(24)5694 17302 y(28)5694 14153 y(32)5694 11003
y(36)10325 40410 y(1)2679 b(2)h(3)f(4)h(5)g(6)f(7)h(8)f(9)2445
b(10)-35717 b Ff(\000)p Fg(1)7410 39064 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 7410 39064
a 7410 39064 a
tx@Dict begin  { 308.96858 266.81285 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 7410 39064 a 7410 39064 a
tx@Dict begin  { 5.0 6.2015 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 7410 39064 a
7067 39350 a Fn(x)7410 39064 y
tx@Dict begin  PutEnd  end
 7410 39064 a 7410 39064
a
tx@Dict begin  PutEnd  end
 7410 39064 a 7410 39064 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 7410 39064 a 7410 39064 a
tx@Dict begin  { 0.0 0.0 pop 308.96858 266.81285 exch pop } PutCoor
PutBegin  end

7410 39064 a 7410 39064 a
tx@Dict begin  { 5.0 6.2015 5.16667 2.33331 -40.  Uput UUput } PutCoor
PutBegin  end
 7410 39064 a 7067 39221 a Fn(y)7410
39064 y
tx@Dict begin  PutEnd  end
 7410 39064 a 7410 39064 a
tx@Dict begin  PutEnd  end
 7410 39064 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x 0 def /x1 10.859013885766789 def
/dx x1 x sub 199 div def /F@pstplot (2.2806827703444222E-6*x^(7.0)-1.7282933713131396E-4*x^(6.0)+0.005965768992273854*x^(5.0)-0.09584712783113487*x^(4.0)+0.692048431766916*x^(3.0)-1.9191657168338834*x^(2.0)+2.3785028428305366*x+20.0)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
7.11317 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x dx
add def xy  dup 1.e30 7.11317 mul gt { moveto } { dup -1.e30 7.11317
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 7.11317 mul gt { moveto } { dup
-1.e30 7.11317 mul lt { moveto } { L } ifelse } ifelse  } if  gsave
1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 41612 41558 a
currentpoint initclip moveto
 41612 41558 a
921 45543 a Fn(Ermittle)621 b(die)g(absolute)f(und)g(die)h(relativ)-36
b(e)622 b(\304nderung)d(der)h(Spann)-36 b(ung)619 b(w)-36
b(\344hrend)621 b(der)921 47535 y(ersten)433 b(10)h(Sekunden)e(des)i
(Exp)36 b(erimen)-36 b(ts.)921 52072 y(absolute)434 b(\304nderung:)p
1 0 0 TeXcolorrgb 432 w(12)p 0 0 0 TeXcolorrgb(V)921
56609 y(relativ)-36 b(e)435 b(\304nderung:)p 1 0 0 TeXcolorrgb
432 w(60)p 0 0 0 TeXcolorrgb(\045)p 1 0 0 TeXcolorrgb
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
5102 a Fi(___/1)p 1 0 0 TeXcolorrgb 47998 7094 a Fh(AN)369
b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 60343 54804 45 v 0 TeXcolorgray 24746 81281 a Fn(2)p
0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fo(AN)718 b(1.1)f(-)h(4)f(T)-179
b(reibsto\033preise)714 b(-)k(O)-60 b(A)718 b(-)f(BIFIE)p
0 TeXcolorgray -741 4800 a Fn(4.)p 0 TeXcolorgray 651
w(Pro)574 b(Liter)f(Diesel)h(zahlte)g(man)g(im)f(Jahr)h(2004)h(durc)-36
b(hsc)g(hnittlic)g(h)571 b Fj(T)36557 4999 y Fg(0)37657
4800 y Fn(Euro,)i(im)h(Jahr)888 6792 y(2014)435 b(b)36
b(etrug)433 b(der)g(durc)-36 b(hsc)g(hnittlic)g(he)432
b(Preis)i(pro)f(Liter)g(Diesel)i Fj(T)33773 6991 y Fg(10)35203
6792 y Fn(Euro.)921 11330 y(Geb)36 b(en)494 b(Sie)h(jew)-36
b(eils)496 b(einen)f(T)-108 b(erm)494 b(zur)h(Berec)-36
b(hn)g(ung)493 b(der)i(absoluten)f(und)g(der)h(relativ)-36
b(en)921 13322 y(Preis\344nderung)637 b(v)-36 b(on)637
b(2004)i(auf)f(2014)h(f\374r)e(den)g(durc)-36 b(hsc)g(hnittlic)g(hen)
635 b(Preis)i(pro)g(Liter)921 15314 y(Diesel)435 b(an!)921
19851 y(absolute)f(Preis\344nderung:)p 14539 19851 15749
34 v 921 24388 a(relativ)-36 b(e)435 b(Preis\344nderung:)p
14026 24388 V 1 0 0 TeXcolorrgb 921 26934 a(absolute)f
(Preis\344nderung:)f Fj(T)15734 27133 y Fg(10)17025 26934
y Fk(\000)296 b Fj(T)19116 27133 y Fg(0)921 31654 y Fn(relativ)-36
b(e)435 b(Preis\344nderung:)14591 30756 y Fj(T)15353
30955 y Fg(10)16645 30756 y Fk(\000)296 b Fj(T)18736
30955 y Fg(0)p 14591 31344 4671 45 v 16282 32565 a Fj(T)17044
32764 y Fg(0)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 47992 4800 a Fi(___/1)p 1 0 0 TeXcolorrgb
47998 6792 a Fh(AN)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 36240 54804 45 v 0 TeXcolorgray
24746 81281 a Fn(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fo(AN)508 b(1.1)f(-)g(5)h(Preis\344nderungen)
c(-)j(L)-179 b(T)507 b(-)g(Matura)g(2014/15)g(-)h(Haupt-)-2331
4622 y(termin)p 0 TeXcolorgray -741 7929 a Fn(5.)p 0
TeXcolorgray 651 w(Ein)428 b(F)-108 b(ernsehger\344t)427
b(wurde)h(im)g(Jahr)g(2012)i(zum)e(Preis)g Fj(P)29694
8128 y Fg(0)30649 7929 y Fn(v)-36 b(erkauft,)429 b(das)f(gleic)-36
b(he)429 b(Ger\344t)874 9921 y(wurde)k(im)h(Jahr)f(2014)i(zum)e(Preis)h
Fj(P)19603 10120 y Fg(2)20563 9921 y Fn(v)-36 b(erkauft.)921
12466 y(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36
b(k)g(en)358 b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357
b(Ankreuzen)g(der)h(jew)-36 b(eils)360 b(ric)-36 b(h)g(tigen)921
14458 y(Satzteile)434 b(so,)g(dass)g(eine)f(mathematisc)-36
b(h)434 b(k)-36 b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36
b(tsteh)g(t!)921 17948 y(Der)411 b(T)-108 b(erm)p 7035
17948 3150 45 v 10656 17900 a(1)10184 17948 y Fe(\015)p
11778 17948 V 3560 w Fn(gibt)411 b(die)f(absolute)h(Preis\344nderung)f
(v)-36 b(on)410 b(2012)i(auf)f(2014)h(an,)921 19940 y(der)433
b(T)-108 b(erm)p 6810 19940 V 10432 19892 a(2)9960 19940
y Fe(\015)p 11554 19940 V 3583 w Fn(die)433 b(relativ)-36
b(e)435 b(Preis\344nderung)e(v)-36 b(on)434 b(2012)h(auf)e(2014.)p
0 TeXcolorgray 0 TeXcolorgray 12327 21313 8834 45 v 12327
24397 45 3085 v 16418 23094 a(1)15946 23142 y Fe(\015)p
21115 24397 V 12327 24441 8834 45 v 12327 29248 45 4807
v 13168 26294 a Fj(P)14006 26493 y Fg(0)p 13168 26882
1365 45 v 13168 28104 a Fj(P)14006 28303 y Fg(2)p 18750
29248 45 4807 v 19459 27177 a Fd(2)p 21115 29248 V 12327
29292 8834 45 v 12327 32551 45 3260 v 13035 31348 a Fj(P)13873
31547 y Fg(2)14694 31348 y Fk(\000)296 b Fj(P)16861 31547
y Fg(0)p 18750 32551 V 1 0 0 TeXcolorrgb 19459 31254
a Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
21115 32551 V 12327 32596 8834 45 v 12327 37203 45 4608
v 13168 34448 a Fj(P)14006 34647 y Fg(2)14827 34448 y
Fk(\000)g Fj(P)16994 34647 y Fg(0)p 13168 35037 4352
45 v 15019 36258 a Fl(2)p 18750 37203 45 4608 v 19459
35231 a Fd(2)p 21115 37203 V 12327 37247 8834 45 v 0
TeXcolorgray 0 TeXcolorgray 30427 21313 8400 45 v 30427
24397 45 3085 v 34301 23094 a Fn(2)33829 23142 y Fe(\015)p
38782 24397 V 30427 24441 8400 45 v 30427 29248 45 4807
v 31268 26294 a Fj(P)32106 26493 y Fg(2)p 31268 26882
1365 45 v 31268 28104 a Fj(P)32106 28303 y Fg(0)p 36417
29248 45 4807 v 37125 27177 a Fd(2)p 38782 29248 V 30427
29292 8400 45 v 30427 33899 45 4608 v 31268 31145 a Fj(P)32106
31344 y Fg(0)32927 31145 y Fk(\000)g Fj(P)35094 31344
y Fg(2)p 31268 31733 4352 45 v 33119 32954 a Fl(2)p 36417
33899 45 4608 v 37125 31928 a Fd(2)p 38782 33899 V 30427
33944 8400 45 v 30427 38750 45 4807 v 31268 35796 a Fj(P)32106
35995 y Fg(2)32927 35796 y Fk(\000)g Fj(P)35094 35995
y Fg(0)p 31268 36385 4352 45 v 32762 37606 a Fj(P)33600
37805 y Fg(0)p 36417 38750 45 4807 v 1 0 0 TeXcolorrgb
37125 36679 a Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 38782 38750 V 30427 38794 8400 45 v 47992
7929 a Fi(___/1)p 1 0 0 TeXcolorrgb 47998 9921 a Fh(AN)369
b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 42823 54804 45 v -2331 48251 a Fo(AN)718 b(1.1)f(-)h(6)f(F)-179
b(ertilit\344t)715 b(-)j(O)-60 b(A)718 b(-)f(Matura)g(NT)h(2)f(15/16)p
0 TeXcolorgray -741 51558 a Fn(6.)p 0 TeXcolorgray 651
w(A)-36 b(uf)541 b(der)g(W)-108 b(ebsite)541 b(der)f(Statistik)i(A)-36
b(ustria)541 b(\034ndet)f(man)h(un)-36 b(ter)540 b(dem)g(Begri\033)i
Fc(F)-100 b(ertilit\344t)769 53550 y Fn(\(F)-108 b(ruc)-36
b(h)g(bark)g(eit\))432 b(folgende)i(Information:)675
56095 y(\022Die)491 b(Gesam)-36 b(tfertilit\344tsrate)490
b(lag)h(2014)g(b)36 b(ei)489 b(1,46)i(Kindern)e(je)i(F)-108
b(rau,)489 b(d.h.,)h(dass)g(b)36 b(ei)489 b(zu-)921 58087
y(k\374nftiger)503 b(K)-36 b(onstanz)502 b(der)g(alterssp)36
b(ezi\034sc)-36 b(hen)502 b(F)-108 b(ertilit\344tsraten)502
b(eine)h(heute)e(15-j\344hrige)921 60079 y(F)-108 b(rau)599
b(in)h(\326sterreic)-36 b(h)599 b(bis)h(zu)g(ihrem)g(50.)i(Geburtstag)d
(statistisc)-36 b(h)600 b(gesehen)f(1,46)j(Kin-)921 62071
y(der)575 b(zur)f(W)-108 b(elt)576 b(bringen)e(wird.)j(Dieser)f
(Mittelw)-36 b(ert)575 b(liegt)h(damit)f(deutlic)-36
b(h)575 b(un)-36 b(ter)574 b(dem)675 64063 y(\022Bestanderhaltungsniv)
-36 b(eau\020)433 b(v)-36 b(on)434 b(et)-36 b(w)g(a)434
b(2)g(Kindern)f(pro)g(F)-108 b(rau.)-181 b(\020)921 66609
y(Berec)-36 b(hne,)486 b(um)f(w)-36 b(elc)g(hen)486 b(Prozen)-36
b(tsatz)486 b(die)g(f\374r)f(das)h(Jahr)g(2014)i(g\374ltige)e(Gesam)-36
b(tfertili-)921 68600 y(t\344tsrate)341 b(v)-36 b(on)342
b(1,46)h(Kindern)d(je)i(F)-108 b(rau)341 b(ansteigen)g(m)-36
b(\374sste,)341 b(um)g(das)h(\022Bestanderhaltungs-)921
70592 y(niv)-36 b(eau\020)434 b(zu)f(erreic)-36 b(hen.)921
73138 y(prozen)g(tuelle)433 b(Zunahme:)p 1 0 0 TeXcolorrgb
433 w(36,99)217 b(\045)435 b(T)-108 b(oleranzin)-36 b(terv)-72
b(all:)435 b Fl([)8 b(36)221 b(\045;)g(37)g(\045])p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 51558
a Fi(___/1)p 1 0 0 TeXcolorrgb 47998 53550 a Fh(AN)369
b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 76945 V 0 TeXcolorgray 24746 81281 a Fn(4)p 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fo(AN)679 b(1.1)g(-)g(7)g(Prozen)-60
b(te)678 b(-)h(MC)h(-)f(Matura)f(2013/14)h(Haupttermin)p
0 TeXcolorgray -741 4907 a Fn(7.)p 0 TeXcolorgray 651
w(Zahlenangab)36 b(en)614 b(in)f(Prozen)-36 b(t)614 b
Fl(\(\045\))f Fn(mac)-36 b(hen)613 b(An)-36 b(teile)614
b(un)-36 b(tersc)g(hiedlic)g(her)612 b(Gr\366\377en)i(v)-36
b(er-)921 6899 y(gleic)g(h)g(bar.)921 9444 y(Kreuze)433
b(b)36 b(eide)434 b(zutre\033enden)d(A)-36 b(ussagen!)p
1054 12403 44710 45 v 1054 17469 45 5066 v 1762 14273
a(P)g(eters)329 b(monatlic)-36 b(hes)329 b(T)-108 b(asc)-36
b(hengeld)329 b(wurde)g(v)-36 b(on)330 b Fm(e)545 b Fn(80)330
b(auf)g Fm(e)546 b Fn(100)330 b(erh\366h)-36 b(t.)329
b(Somit)1762 16265 y(b)36 b(ek)-36 b(omm)g(t)434 b(er)f(jetzt)h(um)f
(20)217 b(\045)434 b(mehr)f(als)h(v)-36 b(orher.)p 43354
17469 V 45719 17469 V 1054 17513 44710 45 v 1054 22649
45 5137 v 1762 19454 a(Ein)589 b(Preis)f(ist)h(im)g(Laufe)g(der)f
(letzten)g(f\374nf)h(Jahre)f(um)h(10)217 b(\045)589 b(gestiegen.)h(Das)
1762 21446 y(b)36 b(edeutet)401 b(in)h(jedem)g(Jahr)h(eine)f
(Steigerung)f(v)-36 b(on)403 b(2)217 b(\045)402 b(gegen)-36
b(\374b)36 b(er)402 b(dem)g(V)-108 b(orjahr.)p 43354
22649 V 45719 22649 V 1054 22693 44710 45 v 1054 29638
45 6945 v 1762 24634 a(W)g(enn)433 b(die)g(In\035ationsrate)h(in)f(den)
g(letzten)h(Monaten)f(v)-36 b(on)434 b(2)217 b(\045)433
b(auf)h(1,5)217 b(\045)435 b(ge-)1762 26626 y(sunk)-36
b(en)447 b(ist,)g(b)36 b(edeutet)446 b(das)h(eine)h(relativ)-36
b(e)448 b(Abnahme)e(der)h(In\035ationsrate)g(um)1762
28618 y Fl(25)221 b(\045)p Fj(:)p 43354 29638 V 1 0 0
TeXcolorrgb 44063 26498 a Fd(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 45719 29638 V 1054 29682 44710
45 v 1054 34818 45 5137 v 1762 31623 a Fn(W)-108 b(enn)432
b(ein)h(Preis)f(zun\344c)-36 b(hst)432 b(um)g(20)217
b(\045)433 b(gesenkt)g(und)f(kurze)g(Zeit)h(darauf)g(wieder)1762
33615 y(um)292 b(5)217 b(\045)293 b(erh\366h)-36 b(t)292
b(wurde,)g(dann)g(ist)h(er)f(jetzt)h(um)f(15)217 b(\045)293
b(niedriger)g(als)g(urspr\374nglic)-36 b(h.)p 43354 34818
V 45719 34818 V 1054 34862 44710 45 v 1054 38007 45 3145
v 1762 36803 a(Eine)434 b(Zunahme)e(um)h(200)217 b(\045)435
b(b)36 b(edeutet)432 b(eine)i(Steigerung)f(auf)h(das)f(Dreifac)-36
b(he.)p 43354 38007 V 1 0 0 TeXcolorrgb 44063 36767 a
Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45719 38007 V 1054 38051 44710 45 v 47992 4907 a Fi(___/1)p
1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 42190 54804 45 v 0 TeXcolorgray
24746 81281 a Fn(5)p 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fo(AN)756 b(1.1)e(-)h(8)g(Leistungsv)-60
b(erb)60 b(esserung)751 b(-)k(O)-60 b(A)755 b(-)h(Matura)e(2016/17)
-2617 4622 y(-)718 b(Haupttermin)p 0 TeXcolorgray -741
7929 a Fn(8.)p 0 TeXcolorgray 651 w(Drei)469 b(P)-36
b(ersonen)468 b Fj(A)p Fn(,)h Fj(B)536 b Fn(und)468 b
Fj(C)563 b Fn(absolvieren)470 b(jew)-36 b(eils)470 b(v)-36
b(or)469 b(und)e(nac)-36 b(h)469 b(einem)f(Sp)36 b(ezialtrai-)921
9921 y(ning)449 b(denselb)36 b(en)448 b(K)-36 b(o)36
b(ordinationstest.)450 b(In)f(der)f(nac)-36 b(hstehenden)447
b(T)-108 b(ab)36 b(elle)450 b(sind)e(die)h(dab)36 b(ei)921
11913 y(erreic)-36 b(h)g(ten)432 b(Punkte)i(angef\374hrt.)p
26482 12880 45 45 v 26527 12880 7034 45 v 33560 12880
6681 45 v 40240 12880 6651 45 v 26482 14871 45 1992 v
0.8 TeXcolorgray 26527 14871 6990 1992 v 0 TeXcolorgray
27624 14274 a(P)-36 b(erson)434 b Fj(A)p 33516 14871
45 1992 v 0.8 TeXcolorgray 33560 14871 6636 1992 v 0
TeXcolorgray 1372 w Fn(P)-36 b(erson)434 b Fj(B)p 40196
14871 45 1992 v 0.8 TeXcolorgray 40240 14871 6607 1992
v 0 TeXcolorgray 1439 w Fn(P)-36 b(erson)434 b Fj(C)p
46847 14871 45 1992 v 921 14916 45970 45 v 921 16908
45 1992 v 0.8 TeXcolorgray 965 16908 25518 1992 v 0 TeXcolorgray
1629 16310 a Fn(erreic)-36 b(h)g(te)433 b(Punkte)g(v)-36
b(or)434 b(dem)g(Sp)36 b(ezialtraining)p 26482 16908
45 1992 v 4709 w(5)p 33516 16908 V 5882 w(15)p 40196
16908 V 5365 w(20)p 46847 16908 V 921 16952 45970 45
v 921 18944 45 1992 v 0.8 TeXcolorgray 965 18944 25518
1992 v 0 TeXcolorgray 1629 18346 a(erreic)-36 b(h)g(te)433
b(Punkte)g(nac)-36 b(h)433 b(dem)h(Sp)36 b(ezialtraining)p
26482 18944 45 1992 v 3878 w(8)p 33516 18944 V 5882 w(19)p
40196 18944 V 5365 w(35)p 46847 18944 V 921 18988 45970
45 v 921 22559 a(Gute)584 b(Leistungen)g(sind)g(durc)-36
b(h)583 b(hohe)i(Punktezahlen)f(gek)-36 b(ennzeic)g(hnet.)585
b(Wie)h(aus)f(der)874 24551 y(T)-108 b(ab)36 b(elle)627
b(ersic)-36 b(h)g(tlic)g(h)626 b(ist,)h(erreic)-36 b(hen)626
b(alle)h(drei)f(P)-36 b(ersonen)626 b(nac)-36 b(h)626
b(dem)g(Sp)36 b(ezialtraining)921 26543 y(mehr)433 b(Punkte)g(als)h(v)
-36 b(orher.)855 31080 y(W)g(\344hle)583 b(aus)g(den)f(P)-36
b(ersonen)583 b Fj(A)p Fn(,)g Fj(B)651 b Fn(und)581 b
Fj(C)678 b Fn(die)583 b(b)36 b(eiden)583 b(aus,)g(die)g(die)g(nac)-36
b(hstehenden)921 33072 y(Bedingungen)433 b(erf\374llen!)p
0 TeXcolorgray 2468 36503 a Fk(\017)p 0 TeXcolorgray
650 w Fn(Bei)419 b(der)e(ersten)g(P)-36 b(erson)417 b(ist)h(die)g
(absolute)f(\304nderung)g(der)g(Punktezahl)g(gr\366\377er)i(als)3782
38495 y(b)36 b(ei)434 b(der)f(zw)-36 b(eiten.)p 0 TeXcolorgray
2468 41041 a Fk(\017)p 0 TeXcolorgray 650 w Fn(Bei)390
b(der)f(zw)-36 b(eiten)390 b(P)-36 b(erson)389 b(ist)g(die)h(relativ)
-36 b(e)390 b(\304nderung)e(der)h(Punktezahl)h(gr\366\377er)g(als)3782
43032 y(b)36 b(ei)434 b(der)f(ersten)g(P)-36 b(erson.)921
46463 y(erste)433 b(P)-36 b(erson:)p 1 0 0 TeXcolorrgb
434 w(P)g(erson)433 b Fj(B)p 0 0 0 TeXcolorrgb 921 49009
a Fn(zw)-36 b(eite)434 b(P)-36 b(erson:)p 1 0 0 TeXcolorrgb
434 w(P)g(erson)433 b Fj(A)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 7929 a Fi(___/1)p 1 0 0 TeXcolorrgb 47998 9921
a Fh(AN)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 52484 54804 45 v 0 TeXcolorgray
24746 81281 a Fn(6)p 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fo(AN)718 b(1.1)f(-)h(9)f(Angestelltengehalt)
d(-)k(O)-60 b(A)717 b(-)h(Matura)f(NT)g(1)h(16/17)p 0
TeXcolorgray -741 4907 a Fn(9.)p 0 TeXcolorgray 651 w(Das)352
b(Bruttogehalt)g(eines)f(b)36 b(estimm)-36 b(ten)351
b(Angestellten)g(b)36 b(etrug)351 b(im)h(Jahr)f(2008)i(monatlic)-36
b(h)921 6899 y Fm(e)650 b Fn(2.160.)921 9444 y(In)340
b(den)f(folgenden)h(sec)-36 b(hs)339 b(Jahren)h(ist)g(sein)g(monatlic)
-36 b(hes)340 b(Bruttogehalt)f(durc)-36 b(hsc)g(hnittlic)g(h)921
11436 y(um)433 b Fm(e)650 b Fn(225)435 b(pro)e(Jahr)h(gestiegen.)921
13981 y(Gib)447 b(die)h(prozen)-36 b(tuelle)447 b(\304nderung)f(des)h
(monatlic)-36 b(hen)448 b(Bruttogehalts)g(im)f(gesam)-36
b(ten)448 b(b)36 b(e-)921 15973 y(trac)-36 b(h)g(teten)432
b(Zeitraum)h(v)-36 b(on)434 b(2008)h(und)e(2014)i(an!)p
1 0 0 TeXcolorrgb 888 18519 a Fl(2)221 b(160)297 b(+)e(6)h
Fk(\001)f Fl(225)370 b(=)f(3)221 b(510)1054 20541 y Fg(3)157
b(510)p Ff(\000)p Fg(2)i(160)p 1054 20754 4810 45 v 2439
21522 a(2)e(160)6365 21064 y Fl(=)368 b(0)p Fj(;)p Fl(625)921
23609 y Fn(Das)498 b(Bruttogehalt)f(des)g(Angestellten)g(ist)g(im)h
(gesam)-36 b(ten)497 b(b)36 b(etrac)-36 b(h)g(teten)496
b(Zeitraum)h(um)921 25601 y(62,5)217 b(\045)435 b(gestiegen.)874
28147 y(T)-108 b(oleranzin)-36 b(terv)-72 b(all:)435
b Fl([)8 b(62)221 b(\045;)g(63)g(\045])p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4907 a Fi(___/1)p
1 0 0 TeXcolorrgb 47998 6899 a Fh(AN)369 b(1.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 31954
54804 45 v -2331 37577 a Fo(AN)718 b(1.1)f(-)h(1001)f(Mittlere)f
(\304nderungsrate)f(-)j(O)-60 b(A)717 b(-)h(eSquirrel)p
0 TeXcolorgray -1391 40885 a Fn(10.)p 0 TeXcolorgray
651 w(Gegeb)36 b(en)433 b(ist)h(die)f(F)-108 b(unktion)433
b Fj(f)575 b Fn(mit)434 b Fj(f)142 b Fl(\()p Fj(x)p Fl(\))369
b(=)f(3)p Fj(x)24969 40403 y Fg(2)25791 40885 y Fk(\000)295
b Fl(2)p Fn(.)921 42877 y(Bestimme)434 b(die)f(mittlere)h
(\304nderungsrate)e(v)-36 b(on)434 b Fj(f)576 b Fn(in)433
b Fl([)8 b Fk(\000)p Fl(2;)221 b(3])r Fn(.)921 47414
y(mittlere)434 b(\304nderungsrate)e(=)p 1 0 0 TeXcolorrgb
433 w(3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 40885 a Fi(___/1)p 1 0 0 TeXcolorrgb 47998 42877
a Fh(AN)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 51148 V -2331 56771 a Fo(AN)718
b(1.1)f(-)h(1002)f(Absolute)e(\304nderung)h(-)h(O)-60
b(A)718 b(-)f(eSquirrel)p 0 TeXcolorgray -1391 60078
a Fn(11.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(ist)h(die)f(F)-108
b(unktion)433 b Fj(f)575 b Fn(mit)434 b Fj(f)142 b Fl(\()p
Fj(x)p Fl(\))369 b(=)f Fk(\000)p Fl(2)p Fj(x)26002 59596
y Fg(2)26824 60078 y Fl(+)295 b(1)p Fn(.)921 62070 y(Gib)433
b(die)g(absolute)h(\304nderung)e(v)-36 b(on)434 b Fj(f)576
b Fn(in)433 b Fl([)8 b Fk(\000)p Fl(2;)221 b(2])436 b
Fn(an.)921 66608 y(absolute)e(\304nderungsrate)e(=)p
16290 66608 15749 34 v 1 0 0 TeXcolorrgb 921 71145 a(absolute)i
(\304nderungsrate)e(=)h(0)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 60078 a Fi(___/1)p 1 0 0 TeXcolorrgb
47998 62070 a Fh(AN)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 74878 54804 45 v 0 TeXcolorgray
24746 81281 a Fn(7)p 0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fo(AN)718 b(1.1)f(-)h(1003)f(Prozen)-60
b(tuelle)716 b(Zunahme)g(-)i(O)-60 b(A)717 b(-)h(eSquirrel)p
0 TeXcolorgray -1391 4800 a Fn(12.)p 0 TeXcolorgray 651
w(Im)434 b(Jahr)f(2013)i(k)-36 b(ostete)434 b(eine)g(Sc)-36
b(h)g(ulsp)36 b(ort)-36 b(w)g(o)36 b(c)-36 b(he)432 b
Fm(e)650 b Fn(340.)435 b(2015)g(k)-36 b(ostet)434 b(sie)g
Fm(e)650 b Fn(357.)921 6792 y(Berec)-36 b(hne)433 b(die)g(prozen)-36
b(tuelle)433 b(Zunahme)g(in)g(diesen)h(Jahren.)921 11330
y(prozen)-36 b(tuelle)433 b(Zunahme:)p 14253 11330 15749
34 v 1 0 0 TeXcolorrgb 921 15867 a(5)217 b(\045)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4800
a Fi(___/1)p 1 0 0 TeXcolorrgb 47998 6792 a Fh(AN)369
b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 19417 54804 45 v -2331 25040 a Fo(AN)718 b(1.1)f(-)h(1004)f
(\304nderungsma\377e)e(-)j(ZO)f(-)h(eSquirrel)p 0 TeXcolorgray
-1391 28347 a Fn(13.)p 0 TeXcolorgray 651 w(Eine)433
b(Sc)-36 b(h)g(ulsp)36 b(ort)-36 b(w)g(o)36 b(c)-36 b(he)433
b(k)-36 b(ostet)434 b(im)g(Jahr)f(2013)i Fm(e)650 b Fj(a)p
Fn(,)434 b(im)g(Jahr)f(2015)i Fm(e)650 b Fj(b)p Fn(.)921
30339 y(Ordne)432 b(den)h(Begri\033en)h(die)f(passenden)g(T)-108
b(erme)433 b(zu.)p 0 TeXcolorgray 0 TeXcolorgray 2683
33780 14684 45 v 17366 33780 4523 45 v 2683 37134 45
3354 v 3391 35931 a(prozen)-36 b(tuelle)433 b(\304nderung)p
17322 37134 V 0.9 TeXcolorgray 17366 37134 4478 3354
v 0 TeXcolorgray 1 0 0 TeXcolorrgb 19181 35962 a(F)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 21844
37134 45 3354 v 2683 37178 14684 45 v 17366 37178 4523
45 v 2683 40532 45 3354 v 3391 39328 a(mittlere)h(\304nderungsrate)p
17322 40532 V 0.9 TeXcolorgray 17366 40532 4478 3354
v 0 TeXcolorgray 1 0 0 TeXcolorrgb 19163 39360 a(E)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 21844
40532 45 3354 v 2683 40576 14684 45 v 17366 40576 4523
45 v 2683 43929 45 3354 v 3391 42726 a(relativ)-36 b(e)435
b(\304nderung)p 17322 43929 V 0.9 TeXcolorgray 17366
43929 4478 3354 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 19108
42757 a(D)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
21844 43929 45 3354 v 2683 43974 14684 45 v 17366 43974
4523 45 v 2683 47327 45 3354 v 3391 46124 a(absolute)f(\304nderung)p
17322 47327 V 0.9 TeXcolorgray 17366 47327 4478 3354
v 0 TeXcolorgray 1 0 0 TeXcolorrgb 19135 46155 a(C)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 21844
47327 45 3354 v 2683 47372 14684 45 v 17366 47372 4523
45 v 0 TeXcolorgray 0 TeXcolorgray 24451 33670 4567 45
v 29018 33670 7408 45 v 24451 38402 45 4733 v 0.92 TeXcolorgray
24495 38402 4478 4733 v 0 TeXcolorgray 26223 36493 a(A)p
28973 38402 45 4733 v 29815 35537 a Fj(b)295 b Fk(\000)g
Fj(a)p 29815 36126 2860 45 v 29815 37347 a(a)g Fk(\000)g
Fj(b)p 36381 38402 45 4733 v 24451 38447 4567 45 v 29018
38447 7408 45 v 24451 43069 45 4623 v 0.92 TeXcolorgray
24495 43069 4478 4623 v 0 TeXcolorgray 26274 41215 a
Fn(B)p 28973 43069 45 4623 v 30182 40314 a Fj(b)g Fk(\000)g
Fj(a)p 29815 40903 3594 45 v 29815 42124 a Fl(100)h Fk(\001)f
Fj(a)p 36381 43069 45 4623 v 24451 43113 4567 45 v 29018
43113 7408 45 v 24451 46372 45 3260 v 0.92 TeXcolorgray
24496 46372 4478 3260 v 0 TeXcolorgray 26265 45294 a
Fn(C)p 28973 46372 45 3260 v 29682 45243 a Fj(b)g Fk(\000)g
Fj(a)p 36381 46372 V 24451 46416 4567 45 v 29018 46416
7408 45 v 24451 51038 45 4623 v 0.92 TeXcolorgray 24495
51038 4478 4623 v 0 TeXcolorgray 26238 49185 a Fn(D)p
28973 51038 45 4623 v 29815 48284 a Fj(b)g Fk(\000)g
Fj(a)p 29815 48872 2860 45 v 30903 50094 a(a)p 36381
51038 45 4623 v 24451 51083 4567 45 v 29018 51083 7408
45 v 24451 55705 45 4623 v 0.92 TeXcolorgray 24495 55705
4478 4623 v 0 TeXcolorgray 26292 53851 a Fn(E)p 28973
55705 45 4623 v 29815 52950 a Fj(b)g Fk(\000)g Fj(a)p
29815 53539 2860 45 v 30919 54760 a Fl(2)p 36381 55705
45 4623 v 24451 55749 4567 45 v 29018 55749 7408 45 v
24451 60371 45 4623 v 0.92 TeXcolorgray 24495 60371 4478
4623 v 0 TeXcolorgray 26310 58517 a Fn(F)p 28973 60371
45 4623 v 29815 57616 a Fj(b)g Fk(\000)g Fj(a)p 29815
58205 2860 45 v 30903 59426 a(a)33102 58515 y Fk(\001)g
Fl(100)p 36381 60371 45 4623 v 24451 60415 4567 45 v
29018 60415 7408 45 v 47992 28347 a Fi(___/1)p 1 0 0
TeXcolorrgb 47998 30339 a Fh(AN)369 b(1.1)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 66783 54804 45
v 0 TeXcolorgray 24746 81281 a Fn(8)p 0 TeXcolorgray
eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1794 a Fo(AN)718 b(1.1)f(-)h(1005)f(prozen)-60
b(tuelle)715 b(\304nderung)g(-)j(O)-60 b(A)718 b(-)f(eSquirrel)p
0 TeXcolorgray -1391 5102 a Fn(14.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)409 b(ist)h(die)g(F)-108 b(unktion)409
b Fj(f)552 b Fn(mit)410 b Fj(f)142 b Fl(\()p Fj(x)p Fl(\))369
b(=)f(3)p Fj(x)248 b Fl(+)e(3)p Fn(.)411 b(Gib)e(an,)h(um)g(wie)g(viel)
h(Prozen)-36 b(t)410 b(der)921 7094 y(F)-108 b(unktionsw)-36
b(ert)499 b(an)i(der)f(Stelle)g(3)h(gr\366\377er)g(ist)f(als)h(der)f(F)
-108 b(unktionsw)-36 b(ert)499 b(an)i(der)f(Stelle)g(0.)769
9086 y(\(Die)434 b(Eingab)36 b(e)434 b(der)f(Zahl)h(ist)f(ausreic)-36
b(hend.\))p 1 0 0 TeXcolorrgb 888 13623 a Fl(300)221
b(\045)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 5102 a Fi(___/1)p 1 0 0 TeXcolorrgb 47998 7094
a Fh(AN)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 17173 54804 45 v -2331 22474 a Fo(AN)718
b(1.1)f(-)h(1006)f(A)-60 b(uto)60 b(diebst\344hle)714
b(-)k(MC)f(-)h(eSquirrel)p 0 TeXcolorgray -1391 25781
a Fn(15.)p 0 TeXcolorgray 651 w(Es)839 b(w)-36 b(erden)838
b(die)h(Anzahl)f(der)g(A)-36 b(uto)36 b(diebst\344hle)839
b(in)f(den)g(Jahren)h(2014)h(und)d(2016)887 27773 y(v)-36
b(erglic)g(hen.)653 b(Dab)36 b(ei)651 b(wird)g(die)f(relativ)-36
b(e)652 b(\304nderung)d(in)h(diesem)h(Zeitraum)f(b)36
b(erec)-36 b(hnet:)921 29765 y(relativ)g(e)435 b(\304nderung)d(=)h
Fk(\000)p Fl(0)p Fj(;)p Fl(2478)p Fn(.)921 31757 y(Kreuze)g(die)h
(zutre\033ende\(n\))d(A)-36 b(ussage\(n\))433 b(an.)p
2329 34458 41726 45 v 2329 37521 45 3064 v 3038 36317
a(Die)h(Anzahl)f(der)g(A)-36 b(uto)36 b(diebst\344hle)433
b(hat)h(abgenommen.)p 41645 37521 V 1 0 0 TeXcolorrgb
42354 36321 a Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 44010 37521 V 2329 37565 41726 45 v 2329
40370 45 2805 v 3038 39425 a Fn(J\344hrlic)-36 b(h)433
b(nahm)g(die)h(Anzahl)f(an)h(A)-36 b(uto)36 b(diebst\344hlen)433
b(um)g(ca.)h(2500)h(ab.)p 41645 40370 V 44010 40370 V
2329 40414 41726 45 v 2329 43558 45 3145 v 3038 42355
a(Im)e(Jahr)h(2016)h(gab)e(es)h(um)f(ca.)h Fl(76)221
b(\045)435 b Fn(w)-36 b(eniger)434 b(A)-36 b(uto)36 b(diebst\344hle)433
b(als)h(2014.)p 41645 43558 V 44010 43558 V 2329 43603
41726 45 v 2329 46666 45 3064 v 3038 45463 a(Die)g(Anzahl)f(der)g(A)-36
b(uto)36 b(diebst\344hle)433 b(hat)h(zugenommen.)p 41645
46666 V 44010 46666 V 2329 46710 41726 45 v 2329 49854
45 3145 v 3038 48651 a(Im)f(Jahr)h(2016)h(gab)e(es)h(um)f(ca.)h
Fl(24)221 b(\045)435 b Fn(w)-36 b(eniger)434 b(A)-36
b(uto)36 b(diebst\344hle)433 b(als)h(2014.)p 41645 49854
V 1 0 0 TeXcolorrgb 42354 48614 a Fd(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 44010 49854 V 2329 49899
41726 45 v 47992 25781 a Fi(___/1)p 1 0 0 TeXcolorrgb
47998 27773 a Fh(AN)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 53927 54804 45 v 0 TeXcolorgray
24746 81281 a Fn(9)p 0 TeXcolorgray eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1794 a Fo(AN)718 b(1.1)f(-)h(1007)f(Absolute)e
(\304nderung)h(-)h(O)-60 b(A)718 b(-)f(eSquirrel)p 0
TeXcolorgray -1391 5102 a Fn(16.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)433 b(ist)h(der)f(Graph)f(einer)h(F)-108
b(unktion)433 b Fj(f)142 b Fn(.)921 7094 y(Gib)433 b(die)g(absolute)h
(\304nderung)e Fj(f)576 b Fn(in)433 b Fl([)8 b(0;)221
b(6])436 b Fn(an.)p 0 TeXcolorgray 0 TeXcolorgray 5417
32283 a
 currentpoint currentpoint translate 1.0006 1.0006 scale neg exch neg
exch translate
 5417 32283 a 5851 32283 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 320.9469 a add def
/d 0.0 a add neg def /h 205.42883 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 5851 32283 a 8056 30267
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 8 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 301.03008 0.0 -19.91682 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 12 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 187.2191 0.0 -18.20973   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 301.03008  0 -19.91682  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -19.91682
 301.03008  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-18.20973  def /maxTickline 187.2191  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 187.2191
0.0 -18.20973   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 301.03008
0.0 -19.91682 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 187.2191  0 -18.20973  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -18.20973
 187.2191  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-19.91682  def /maxTickline 301.03008  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 187.2191
0.0 -18.20973   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 301.03008
0.0 -19.91682 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 6811 27403 a Fg(1)6810 24253
y(2)6810 21104 y(3)6810 17954 y(4)6810 14804 y(5)6810
11655 y(6)10970 31613 y(1)2680 b(2)f(3)h(4)f(5)h(6)g(7)f(8)h(9)2444
b(10)8056 30267 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 8056 30267 a 8056 30267 a
tx@Dict begin  { 301.03008 187.2191 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 8056 30267
a 8056 30267 a
tx@Dict begin  { 5.0 6.2015 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 8056 30267 a 7713 30553 a Fn(x)8056 30267
y
tx@Dict begin  PutEnd  end
 8056 30267 a 8056 30267 a
tx@Dict begin  PutEnd  end
 8056 30267 a 8056 30267 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end

8056 30267 a 8056 30267 a
tx@Dict begin  { 0.0 0.0 pop 301.03008 187.2191 exch pop } PutCoor
PutBegin  end
 8056 30267 a 8056 30267 a
tx@Dict begin  { 5.0 18.93042 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 8056
30267 a 7008 30599 a Fn(f\(x\))8056 30267 y
tx@Dict begin  PutEnd  end
 8056 30267
a 8056 30267 a
tx@Dict begin  PutEnd  end
 8056 30267 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0.39215 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -0.7000000000000024
def /x1 10.580000000000002 def /dx x1 x sub 199 div def /F@pstplot
(0.018868448960043797*x^(3.0)-0.3852285166940341*x^(2.0)+1.965440270935961*x+1.0)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 1.2 SLW 0 0.39215 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial 8056 30267 a
tx@Dict begin  { -14.79555 7.39755 } PutCoor PutBegin  end
 8056 30267 a 0 0.39215 0 TeXcolorrgb
-172 x Fb(f)p 0 TeXcolorgray 8056 30267 a
tx@Dict begin  PutEnd  end
 8056 30267
a 41378 32283 a
currentpoint initclip moveto
 41378 32283 a 5417 32283 a
 currentpoint currentpoint translate 1 1.0006 div 1 1.0006 div scale
neg exch neg exch translate
 5417 32283
a 921 36267 a Fn(absolute)434 b(\304nderung)e(v)-36 b(on)434
b Fj(f)142 b Fn(:)p 16127 36267 15749 34 v 1 0 0 TeXcolorrgb
921 40804 a(absolute)434 b(\304nderung)e(v)-36 b(on)434
b Fj(f)142 b Fn(:)434 b(2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 5102 a Fi(___/1)p 1 0 0 TeXcolorrgb
47998 7094 a Fh(AN)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 44538 54804 45 v 0 TeXcolorgray
24421 81281 a Fn(10)p 0 TeXcolorgray eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1794 a Fo(AN)718 b(1.1)f(-)h(1008)f
(\304nderungsma\377e)e(-)j(L)-179 b(T)716 b(-)i(eSquirrel)p
0 TeXcolorgray -1391 5102 a Fn(17.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)433 b(ist)h(eine)f(F)-108 b(unktion)433
b Fj(f)142 b Fn(.)921 7094 y(Erg\344nze)358 b(die)h(T)-108
b(extl\374c)-36 b(k)g(en)358 b(im)g(folgenden)h(Satz)f(durc)-36
b(h)357 b(Ankreuzen)g(der)h(jew)-36 b(eils)360 b(ric)-36
b(h)g(tigen)921 9086 y(Satzteile)434 b(so,)g(dass)g(eine)f(mathematisc)
-36 b(h)434 b(k)-36 b(orrekte)434 b(A)-36 b(ussage)434
b(en)-36 b(tsteh)g(t!)921 12576 y(Der)434 b(A)-36 b(usdruc)g(k)p
9436 12576 3150 45 v 13058 12528 a(1)12586 12576 y Fe(\015)p
14180 12576 V 3583 w Fn(b)36 b(esc)-36 b(hreibt)432 b(die)p
26297 12576 V 29918 12528 a(2)29446 12576 y Fe(\015)p
31040 12576 V 3584 w Fn(v)-36 b(on)433 b Fj(f)576 b Fn(in)433
b Fl([)8 b Fj(a)p Fl(;)221 b Fj(b)p Fl(])p 0 TeXcolorgray
0 TeXcolorgray 10230 13948 10930 45 v 10230 17033 45
3085 v 15370 15730 a Fn(1)14898 15778 y Fe(\015)p 21115
17033 V 10230 17077 10930 45 v 10230 22105 45 5028 v
11071 19018 a Fj(f)142 b Fl(\()p Fj(b)p Fl(\))295 b Fk(\000)g
Fj(f)142 b Fl(\()p Fj(a)p Fl(\))p 11071 19607 6449 45
v 13057 20828 a Fj(f)g Fl(\()p Fj(a)p Fl(\))p 18750 22105
45 5028 v 1 0 0 TeXcolorrgb 19459 19923 a Fd(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 21115 22105
V 10230 22149 10930 45 v 10230 26845 45 4696 v 11071
24090 a Fj(f)g Fl(\()p Fj(b)p Fl(\))295 b Fk(\000)g Fj(f)142
b Fl(\()p Fj(a)p Fl(\))p 11071 24679 6449 45 v 13954
25900 a Fj(a)p 18750 26845 45 4696 v 19459 24829 a Fd(2)p
21115 26845 V 10230 26889 10930 45 v 10230 31696 45 4807
v 11071 28830 a Fj(f)g Fl(\()p Fj(b)p Fl(\))295 b Fk(\000)g
Fj(f)142 b Fl(\()p Fj(a)p Fl(\))p 11071 29419 6449 45
v 12866 30640 a Fj(a)295 b Fk(\000)g Fj(b)p 18750 31696
45 4807 v 19459 29625 a Fd(2)p 21115 31696 V 10230 31740
10930 45 v 0 TeXcolorgray 0 TeXcolorgray 25658 14059
17049 45 v 25658 17143 45 3085 v 33857 15840 a Fn(2)33385
15888 y Fe(\015)p 42662 17143 V 25658 17187 17049 45
v 25658 20447 45 3260 v 26366 19244 a Fn(absolute)434
b(\304nderung)p 40297 20447 V 41005 19149 a Fd(2)p 42662
20447 V 25658 20491 17049 45 v 25658 23750 45 3260 v
26366 22547 a Fn(relativ)-36 b(e)435 b(\304nderung)p
40297 23750 V 1 0 0 TeXcolorrgb 41005 22453 a Fd(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 42662
23750 V 25658 23794 17049 45 v 25658 27054 45 3260 v
26366 25851 a Fn(mittlere)f(\304nderungsrate)p 40297
27054 V 41005 25756 a Fd(2)p 42662 27054 V 25658 27098
17049 45 v 47992 5102 a Fi(___/1)p 1 0 0 TeXcolorrgb
47998 7094 a Fh(AN)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 35768 54804 45 v -2331
41070 a Fo(AN)718 b(1.1)f(-)h(1009)f(F)-179 b(u\377ballclub)714
b(-)k(MC)g(-)f(eSquirrel)p 0 TeXcolorgray -1391 44377
a Fn(18.)p 0 TeXcolorgray 651 w(Bei)442 b(einem)f(F)-108
b(u\377ballclub)441 b(w)-36 b(aren)442 b(2008)g(insgesam)-36
b(t)442 b Fj(z)501 b Fn(Zusc)-36 b(hauer.)441 b(Im)g(Jahr)h(2015)g(w)
-36 b(aren)921 46369 y(es)703 b Fj(u)g Fn(Zusc)-36 b(hauer.)703
b(Mit)g(w)-36 b(elc)g(hem)703 b(T)-108 b(erm)702 b(wird)h(der)f(durc)
-36 b(hsc)g(hnittlic)g(he)701 b(Zu)-36 b(w)g(ac)g(hs)702
b(an)921 48361 y(Zusc)-36 b(hauern)432 b(pro)h(Jahr)h(im)g(Zeitraum)f
(2008)i(bis)e(2015)i(b)36 b(erec)-36 b(hnet?)921 50353
y(Kreuze)433 b(den)g(zutre\033enden)f(T)-108 b(erm)433
b(an.)p 18920 53053 8544 45 v 18920 56587 45 3534 v 19762
54569 a Fg(2015)p Ff(\000)p Fg(2008)p 19762 54782 4496
45 v 21133 55550 a Fb(u)p Ff(\000)p Fb(z)p 25054 56587
45 3534 v 27419 56587 V 18920 56631 8544 45 v 18920 60037
45 3406 v 19762 58111 a(u)p Ff(\000)p Fb(z)p 19762 58324
1752 45 v 20402 59092 a Fg(7)p 25054 60037 45 3406 v
1 0 0 TeXcolorrgb 25762 58666 a Fd(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 27419 60037 V 18920
60081 8544 45 v 18920 62857 45 2776 v 19629 61801 a Fj(z)354
b Fk(\000)296 b Fj(u)p 25054 62857 V 27419 62857 V 18920
62901 8544 45 v 18920 65676 45 2776 v 19629 64621 a(u)f
Fk(\000)g Fj(z)p 25054 65676 V 27419 65676 V 18920 65720
8544 45 v 18920 69126 45 3406 v 19762 67200 a Fb(u)p
Ff(\000)p Fb(z)p 19762 67413 1752 45 v 20400 68181 a(z)p
25054 69126 45 3406 v 27419 69126 V 18920 69171 8544
45 v 18920 72576 45 3406 v 19762 70651 a(u)p Ff(\000)p
Fb(z)p 19762 70864 1752 45 v 20365 71632 a(u)p 25054
72576 45 3406 v 27419 72576 V 18920 72621 8544 45 v 47992
44377 a Fi(___/1)p 1 0 0 TeXcolorrgb 47998 46369 a Fh(AN)369
b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 76649 54804 45 v 0 TeXcolorgray 24421 81281 a Fn(11)p
0 TeXcolorgray eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fo(AN)718 b(1.1)f(-)h(1010)f(ausgezeic)-60
b(hneter)716 b(Erfolg)h(-)g(O)-60 b(A)718 b(-)g(eSquirrel)p
0 TeXcolorgray -1391 4800 a Fn(19.)p 0 TeXcolorgray 651
w(In)407 b(einer)g(Sc)-36 b(h)g(ule)407 b(gab)h(es)f(2010)i(insgesam)
-36 b(t)408 b(140)g(ausgezeic)-36 b(hnete)407 b(Erfolge.)j(Im)d(Jahr)h
(2014)874 6792 y(w)-36 b(aren)434 b(es)f(n)-36 b(ur)433
b(mehr)g(119)h(ausgezeic)-36 b(hnete)434 b(Erfolge.)921
8784 y(Um)761 b(wie)g(viel)h(Prozen)-36 b(t)761 b(ist)g(die)f(Anzahl)h
(gesunk)-36 b(en?)762 b(\(Die)g(Eingab)36 b(e)761 b(der)f(Zahl)h(ist)
921 10776 y(ausreic)-36 b(hend.\))p 1 0 0 TeXcolorrgb
856 15314 a Fl(15)221 b(\045)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 4800 a Fi(___/1)p 1 0 0
TeXcolorrgb 47998 6792 a Fh(AN)369 b(1.1)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 18863 54804 45
v -2331 24165 a Fo(AN)718 b(1.1)f(-)h(1011)f(Prozen)-60
b(te)717 b(-)h(MC)f(-)h(neo-lernhilfen.at)p 0 TeXcolorgray
-1391 27472 a Fn(20.)p 0 TeXcolorgray 651 w(Un)-36 b(tersc)g(hiedlic)g
(he)305 b(Gr\366\377en)h(k)-36 b(\366nnen)305 b(durc)-36
b(h)305 b(V)-108 b(ergleic)-36 b(h)306 b(ihrer)f(An)-36
b(teile)306 b(in)g(\(\045\))g(ansc)-36 b(haulic)g(h)921
29464 y(dargestellt)434 b(w)-36 b(erden.)921 32009 y(Kreuze)433
b(die)h(zutre\033ende\(n\))d(A)-36 b(ussage\(n\))433
b(an.)p 1054 33050 44710 45 v 1054 38186 45 5137 v 1762
34991 a(Ein)627 b(Preis)h(ist)f(im)h(Laufe)g(der)e(letzten)h(zw)-36
b(ei)628 b(Jahre)g(um)f Fl(2)221 b(\045)628 b Fn(gestiegen.)h(Das)1762
36983 y(b)36 b(edeutet)401 b(in)g(jedem)h(Jahr)g(eine)f(Steigerung)h(v)
-36 b(on)402 b Fl(1)221 b(\045)402 b Fn(gegen)-36 b(\374b)36
b(er)401 b(dem)h(V)-108 b(orjahr.)p 43354 38186 V 45719
38186 V 1054 38230 44710 45 v 1054 43296 45 5066 v 1762
40101 a(P)-36 b(eters)433 b(monatlic)-36 b(hes)434 b(T)-108
b(asc)-36 b(hengeld)434 b(wurde)f(v)-36 b(on)433 b Fm(e)651
b Fn(1040)435 b(auf)f Fm(e)650 b Fn(1196)435 b(erh\366h)-36
b(t.)1762 42093 y(Somit)434 b(b)36 b(ek)-36 b(omm)g(t)433
b(er)h(jetzt)f(um)h Fl(15)221 b(\045)434 b Fn(mehr)f(als)h(v)-36
b(orher.)p 43354 43296 V 1 0 0 TeXcolorrgb 44063 41095
a Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45719 43296 V 1054 43340 44710 45 v 1054 48477 45 5137
v 1762 45282 a Fn(W)-108 b(enn)378 b(die)g(In\035ationsrate)g(in)g(den)
g(letzten)g(Monaten)g(v)-36 b(on)379 b Fl(4)221 b(\045)378
b Fn(auf)h Fl(4)p Fj(;)p Fl(8)221 b(\045)380 b Fn(gestie-)1762
47273 y(gen)434 b(ist,)g(b)36 b(edeutet)432 b(das)i(eine)f(relativ)-36
b(e)435 b(Zunahme)d(der)h(In\035ationsrate)h(um)f Fl(20)221
b(\045)p Fn(.)p 43354 48477 V 1 0 0 TeXcolorrgb 44063
46241 a Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45719 48477 V 1054 48521 44710 45 v 1054
55391 45 6870 v 1762 50462 a Fn(W)-108 b(enn)379 b(ein)h(Preis)f
(zun\344c)-36 b(hste)379 b(um)g Fl(15)221 b(\045)381
b Fn(gesenkt)f(und)f(kurze)g(Zeit)h(darauf)g(wieder)1762
52454 y(um)426 b Fl(30)221 b(\045)428 b Fn(gesenkt)f(wird,)g(dann)f
(ist)h(er)g(jetzt)g(um)f Fl(45)221 b(\045)428 b Fn(niedriger)e(als)i
(urspr\374ng-)1762 54446 y(lic)-36 b(h.)p 43354 55391
V 45719 55391 V 1054 55435 44710 45 v 1054 58579 45 3145
v 1762 57376 a(Eine)434 b(Abnahme)e(um)i Fl(50)221 b(\045)434
b Fn(b)36 b(edeutet)432 b(eine)i(Senkung)f(auf)h(ein)f(Drittel.)p
43354 58579 V 45719 58579 V 1054 58624 44710 45 v 47992
27472 a Fi(___/1)p 1 0 0 TeXcolorrgb 47998 29464 a Fh(AN)369
b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 62762 54804 45 v 0 TeXcolorgray 24421 81281 a Fn(12)p
0 TeXcolorgray eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fo(AN)486 b(1.1)g(-)g(1012)g(F)-179
b(euerw)-60 b(erksrak)g(ete)484 b(-)i(MC)g(-)h(Thema)e(Mathematik)-2331
4515 y(Sc)-60 b(h)g(ularb)60 b(eiten)715 b(7.)i(Klasse)p
0 TeXcolorgray -1391 7823 a Fn(21.)p 0 TeXcolorgray 651
w(F)-27 b(\374r)386 b(ein)h(Pro)36 b(dukt)387 b(sind)f(in)h(folgender)g
(W)-108 b(ertetab)36 b(elle)388 b(die)e(Gesam)-36 b(tk)g(osten)387
b Fj(K)95 b Fl(\()p Fj(x)p Fl(\))387 b Fn(in)f(Geld-)921
9815 y(einheiten)433 b(\(GE\))g(f\374r)g(die)h(Herstellung)f(v)-36
b(on)434 b Fj(x)g Fn(Mengeneinheiten)e(\(ME\))h(angegeb)36
b(en:)p 921 10855 29613 45 v 921 12847 45 1992 v 2651
12249 a Fj(x)433 b Fn(in)h(ME)p 9103 12847 V 2718 w(0)p
11776 12847 V 2024 w(2)p 14449 12847 V 2023 w(4)p 17123
12847 V 2023 w(6)p 19796 12847 V 2024 w(8)p 22469 12847
V 1698 w(10)p 25143 12847 V 1373 w(12)p 27816 12847 V
1373 w(14)p 30489 12847 V 921 12891 29613 45 v 921 14883
45 1992 v 1629 14286 a Fj(K)95 b Fl(\()p Fj(x)p Fl(\))434
b Fn(in)f(GE)p 9103 14883 V 1372 w(18)p 11776 14883 V
1374 w(23)p 14449 14883 V 1373 w(30)p 17123 14883 V 1373
w(39)p 19796 14883 V 1373 w(50)p 22469 14883 V 1374 w(63)p
25143 14883 V 1373 w(78)p 27816 14883 V 1373 w(95)p 30489
14883 V 921 14928 29613 45 v 921 16507 a(Das)h(Un)-36
b(ternehmen)432 b(erh\366h)-36 b(t)433 b(die)g(Pro)36
b(duktionsmengen)433 b(v)-36 b(on)434 b(10)217 b(ME)434
b(auf)g(14)217 b(ME.)921 19052 y(Kreuze)433 b(die)h(zutre\033ende\(n\))
d(A)-36 b(ussage\(n\))433 b(an!)p 1054 22085 44710 45
v 1054 25148 45 3064 v 1762 23945 a(Die)h(K)-36 b(osten)434
b(steigen)g(um)f(4)217 b(ME.)p 43354 25148 V 45719 25148
V 1054 25192 44710 45 v 1054 28824 45 3632 v 1762 27421
a(Die)425 b(K)-36 b(ostensteigerung)423 b(pro)h(ME)g(kann)f(durc)-36
b(h)26057 26801 y Fb(K)63 b Fg(\(14\))p Ff(\000)p Fb(K)g
Fg(\(10\))p 26057 27111 5790 45 v 28716 27879 a(4)32403
27421 y Fn(b)36 b(erec)-36 b(hnet)422 b(w)-36 b(erden.)p
43354 28824 45 3632 v 1 0 0 TeXcolorrgb 44063 27340 a
Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45719 28824 V 1054 28868 44710 45 v 1054 31931 45 3064
v 1762 30728 a Fn(Die)434 b(absolute)g(K)-36 b(ostensteigerung)434
b(b)36 b(etr\344gt)433 b(16)217 b(GE.)p 43354 31931 V
45719 31931 V 1054 31976 44710 45 v 1054 35194 45 3219
v 1762 33917 a(Die)434 b(mittlere)g(K)-36 b(ostensteigerung)434
b(b)36 b(etr\344gt)433 b(8)217 b(GE/ME.)p 43354 35194
V 1 0 0 TeXcolorrgb 14405 w Fd(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 45719 35194 V 1054 35238
44710 45 v 1054 38382 45 3145 v 1762 37179 a Fn(Die)434
b(prozen)-36 b(tuelle)434 b(K)-36 b(ostensteigerung)433
b(b)36 b(etr\344gt)433 b(mehr)g(als)i Fl(50)221 b(\045)p
Fn(.)p 43354 38382 V 1 0 0 TeXcolorrgb 44063 37142 a
Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45719 38382 V 1054 38427 44710 45 v 47992 7823 a Fi(___/1)p
1 0 0 TeXcolorrgb 47998 9815 a Fh(AN)369 b(1.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 42565
54804 45 v 0 TeXcolorgray 24421 81281 a Fn(13)p 0 TeXcolorgray
eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fo(AN)543 b(1.1)g(-)g(1013)g(Eigensc)-60
b(haft)541 b(eine)h(Cosin)-60 b(usfunktion)539 b(-)k(O)-60
b(A)543 b(-)g(The-)-2331 4515 y(ma)718 b(Mathematik)f(Sc)-60
b(h)g(ularb)60 b(eiten)714 b(7.)j(Klasse)p 0 TeXcolorgray
-1391 7823 a Fn(22.)p 0 TeXcolorgray 651 w(Die)434 b(Abbildung)f(zeigt)
h(die)g(Spann)-36 b(ung)431 b Fj(U)573 b Fn(in)434 b(V)f(in)h
(Abh\344ngigk)-36 b(eit)434 b(v)-36 b(on)434 b(der)f(Zeit)g
Fj(t)h Fn(in)f(s.)p 0 TeXcolorgray 0 TeXcolorgray 7667
24957 a
 currentpoint currentpoint translate 0.6627 0.6627 scale neg exch neg
exch translate
 7667 24957 a 7667 24957 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 429.17998 a add def
/d 0.0 a add neg def /h 201.37573 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 7667 24957 a 11182
23177 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 397.42705 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 34.14362
T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 185.29369 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 68.28644
0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 397.42705  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 397.42705  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 185.29369  def /dT 4475220 abs 65536 div viceversa
{ neg } if def /DT 2. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 34.14322  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 34.14322  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 185.29369
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 397.42705
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 185.29369  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 185.29369  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 397.42705  def /dT 2237636 abs 65536 div viceversa
{ neg } if def /DT 4. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 8.5359  mul cntTick add
def x abs MaxValue abs le { false { x minTickline exch moveto x maxTickline
exch lineto } { x tickstart STsize mul exch moveto x tickend STsize
mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor subLSstroke
grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le
{ false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 8.5359  mul cntTick add def x abs MinValue abs le { false { x minTickline
exch moveto x maxTickline exch lineto } { x tickstart STsize mul exch
moveto x tickend STsize mul exch lineto } ifelse } if } for } for /dsubT
0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs 0 gt
{ gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 185.29369
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 397.42705
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 9937 23462 a Fg(0)9936 19682
y(4)9936 15903 y(8)9466 12123 y(12)9466 8344 y(16)9466
4564 y(20)10947 24522 y(0)7088 b(2)h(4)g(6)g(8)6854 b(10)11182
23177 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 11182 23177 a 11182 23177 a
tx@Dict begin  { 397.42705 185.29369 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 11182 23177 a 11182
23177 a
tx@Dict begin  { 5.0 18.34268 9.0 3.0 140.  Uput UUput } PutCoor PutBegin
 end
 11182 23177 a 10166 23509 a Fn(t\(s\))11182 23177
y
tx@Dict begin  PutEnd  end
 11182 23177 a 11182 23177 a
tx@Dict begin  PutEnd  end
 11182 23177 a 11182 23177
a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 11182 23177 a 11182 23177 a
tx@Dict begin  { 0.0 0.0 pop 397.42705 185.29369 exch pop } PutCoor
PutBegin  end
 11182 23177 a 11182 23177
a
tx@Dict begin  { 5.0 8.808 8.26648 0.0 -40.  Uput UUput } PutCoor PutBegin
 end
 11182 23177 a 10694 23634 a Fn(U)11182 23177 y
tx@Dict begin  PutEnd  end
 11182
23177 a 11182 23177 a
tx@Dict begin  PutEnd  end
 11182 23177 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x 0 def /x1 11.639999999999986 def
/dx x1 x sub 199 div def /F@pstplot (0.0031624278499278505*x^(5.0)-0.08988591269841271*x^(4.0)+0.8623881673881676*x^(3.0)-3.1620147907647915*x^(2.0)+4.042965367965369*x+12.0)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 34.14322 mul F@pstplot
8.5359 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x dx
add def xy  dup 1.e30 8.5359 mul gt { moveto } { dup -1.e30 8.5359
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 8.5359 mul gt { moveto } { dup
-1.e30 8.5359 mul lt { moveto } { L } ifelse } ifelse  } if  gsave
1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 55175 24957 a
currentpoint initclip moveto
 55175 24957 a 7667 24957 a
 currentpoint currentpoint translate 1 0.6627 div 1 0.6627 div scale
neg exch neg exch translate

7667 24957 a 921 28941 a Fn(Ermittle)433 b(die)h(absolute)g(und)e
(relativ)-36 b(e)435 b(Spann)-36 b(ungs\344nderung)431
b(in)i(den)g(ersten)g(10)217 b(s.)921 33479 y(absolute)434
b(Spann)-36 b(ungs\344nderung:)p 1 0 0 TeXcolorrgb 431
w(4)217 b(V)p 0 0 0 TeXcolorrgb 921 38016 a(relativ)-36
b(e)435 b(Spann)-36 b(ungs\344nderung:)p 1 0 0 TeXcolorrgb
17862 37493 a Fg(1)p 17862 37706 471 45 v 17862 38474
a(3)18834 38016 y Fk(\031)369 b Fl(33)p Fj(;)p Fl(3)221
b(\045)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7823 a Fi(___/1)p
1 0 0 TeXcolorrgb 47998 9815 a Fh(AN)369 b(1.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 41949
54804 45 v -2331 47251 a Fo(AN)769 b(1.1)e(-)i(1014)e(F)-179
b(olgen)767 b(-)h(O)-60 b(A)768 b(-)h(Thema)e(Mathematik)g(Sc)-60
b(h)g(ular-)-2331 50273 y(b)60 b(eiten)716 b(6.)h(Klasse)p
0 TeXcolorgray -1391 53580 a Fn(23.)p 0 TeXcolorgray
651 w(Einige)434 b(Glieder)f(einer)h(Zahlenfolge)h Fk(h)o
Fj(x)20810 53779 y Fb(n)21436 53580 y Fk(i)f Fn(sind)f(in)g(der)g(T)
-108 b(ab)36 b(elle)435 b(gegeb)36 b(en:)p 0 TeXcolorgray
0 TeXcolorgray 18433 57078 a Fj(n)p 20168 57675 45 1992
v 1667 w Fn(7)p 22191 57675 V 1590 w(8)p 24647 57675
V 1590 w(9)p 26670 57675 V 1373 w(10)p 17474 57720 11870
45 v 18138 59114 a Fj(x)18877 59313 y Fb(n)p 20168 59712
45 1992 v 20876 59114 a Fn(5)p 22191 59712 V 1373 w(-5)p
24647 59712 V 1373 w(5)p 26670 59712 V 1481 w(-5)921
62398 y(En)-36 b(tsc)g(heide,)303 b(ob)g(es)g(sic)-36
b(h)303 b(dab)36 b(ei)304 b(um)f(eine)g(arithmetisc)-36
b(he)303 b(F)-108 b(olge,)304 b(eine)f(geometrisc)-36
b(he)304 b(F)-108 b(olge)921 64390 y(o)36 b(der)433 b(k)-36
b(eines)434 b(v)-36 b(on)434 b(b)36 b(eiden)433 b(handelt)g(und)g(b)36
b(egr\374nde)432 b(deine)h(En)-36 b(tsc)g(heidung!)p
1 0 0 TeXcolorrgb 921 66935 a(Geometrisc)g(he)433 b(F)-108
b(olge,)434 b(w)-36 b(eil)435 b(gilt:)f Fj(a)18763 67134
y Fb(n)p Fg(+1)20961 66935 y Fl(=)368 b Fj(a)23024 67134
y Fb(n)23946 66935 y Fk(\001)295 b Fl(\()p Fk(\000)p
Fl(1\))p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 53580 a Fi(___/1)p 1 0 0 TeXcolorrgb 47998 55572
a Fh(AN)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 70742 54804 45 v 0 TeXcolorgray
24421 81281 a Fn(14)p 0 TeXcolorgray eop end
%%Page: 15 15
TeXDict begin 15 14 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fo(AN)883 b(1.1)g(-)g(1015)f(Abk\374hlen)f
(einer)g(Fl\374ssigk)-60 b(eit)881 b(-)i(O)-60 b(A)883
b(-)g(Thema)-2331 4515 y(Mathematik)717 b(Sc)-60 b(h)g(ularb)60
b(eiten)715 b(6.)i(Klasse)p 0 TeXcolorgray -1391 7823
a Fn(24.)p 0 TeXcolorgray 651 w(Beim)514 b(Abk\374hlen)f(einer)g
(hei\377en)h(Fl\374ssigk)-36 b(eit)514 b(v)-36 b(er\344ndert)513
b(sic)-36 b(h)514 b(ihre)f(T)-108 b(emp)36 b(eratur)513
b Fj(T)695 b Fn(\(in)921 9333 y Ff(\016)1447 9815 y Fn(C\))433
b(mit)h(der)f(Zeit)h Fj(t)f Fn(\(in)g(min\).)921 12360
y(In)-36 b(terpretiere)432 b(den)h(W)-108 b(ert)433 b(des)h(T)-108
b(erms)20469 11740 y Fb(T)131 b Fg(\(10\))p Ff(\000)p
Fb(T)g Fg(\(5\))p 20469 12050 4964 45 v 22010 12818 a
Fb(T)g Fg(\(5\))25861 12360 y Fk(\001)295 b Fl(100)435
b Fn(in)e(diesem)h(K)-36 b(on)g(text!)p 1 0 0 TeXcolorrgb
921 14905 a(Relativ)g(e)414 b(T)-108 b(emp)36 b(eratur\344nderungen)411
b(in)21181 14423 y Ff(\016)21707 14905 y Fn(C)i(v)-36
b(on)413 b(der)f(5.)i(bis)e(zur)h(10.)g(Min)-36 b(ute)412
b(in)h(Prozen)-36 b(t.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 7823 a Fi(___/1)p 1 0 0 TeXcolorrgb
47998 9815 a Fh(AN)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 18639 54804 45 v -2331
23940 a Fo(AN)571 b(1.1)f(-)h(K6)f(-)h(1016)g(A)-60 b(utomo)60
b(delle)569 b(-)i(L)-179 b(T)569 b(-)i(Thema)f(Mathematik)-2331
26963 y(Sc)-60 b(h)g(ularb)60 b(eiten)715 b(6.)i(Klasse)p
0 TeXcolorgray -1391 30270 a Fn(25.)p 0 TeXcolorgray
651 w(Ein)493 b(A)-36 b(uto)492 b(wurde)h(im)g(Jahr)g(2010)h(zum)e
(Preis)h Fj(P)25778 30469 y Fg(0)26797 30270 y Fn(v)-36
b(erkauft.)495 b(Das)e(gleic)-36 b(he)494 b(A)-36 b(utomo)36
b(dell)874 32262 y(wurde)433 b(im)h(Jahr)f(2013)i(zum)e(Preis)h
Fj(P)19603 32461 y Fg(3)20563 32262 y Fn(v)-36 b(erkauft.)921
34807 y(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36
b(k)g(en)358 b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357
b(Ankreuzen)g(der)h(jew)-36 b(eils)360 b(ric)-36 b(h)g(tigen)921
36799 y(Satzteile)434 b(so,)g(dass)g(eine)f(mathematisc)-36
b(h)434 b(k)-36 b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36
b(tsteh)g(t!)921 40289 y(Der)411 b(T)-108 b(erm)p 7035
40289 3150 45 v 10656 40241 a(1)10184 40289 y Fe(\015)p
11778 40289 V 3560 w Fn(gibt)411 b(die)f(absolute)h(Preis\344nderung)f
(v)-36 b(on)410 b(2010)i(auf)f(2013)h(an,)921 42281 y(der)488
b(T)-108 b(erm)p 6919 42281 V 10541 42233 a(2)10069 42281
y Fe(\015)p 11663 42281 V 3638 w Fn(gibt)488 b(die)g(relativ)-36
b(e)490 b(Preis\344nderung)d(v)-36 b(on)489 b(2010)g(auf)g(2013)g(an.)p
0 TeXcolorgray 0 TeXcolorgray 12592 45646 8568 45 v 12592
48730 45 3085 v 16551 47427 a(1)16079 47475 y Fe(\015)p
21115 48730 V 12592 48774 8568 45 v 12592 52033 45 3260
v 13301 50830 a Fj(P)14139 51029 y Fg(0)14960 50830 y
Fk(\000)295 b Fj(P)17126 51029 y Fg(3)p 18750 52033 V
19459 50736 a Fd(2)p 21115 52033 V 12592 52078 8568 45
v 12592 55554 45 3476 v 13433 53628 a Fb(P)14030 53751
y Fa(3)14491 53628 y Ff(\000)p Fb(P)15820 53751 y Fa(0)p
13433 53841 2848 45 v 14622 54609 a Fg(3)p 18750 55554
45 3476 v 19459 54148 a Fd(2)p 21115 55554 V 12592 55598
8568 45 v 12592 58857 45 3260 v 13301 57654 a Fj(P)14139
57853 y Fg(3)14960 57654 y Fk(\000)g Fj(P)17126 57853
y Fg(0)p 18750 58857 V 1 0 0 TeXcolorrgb 19459 57560
a Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
21115 58857 V 12592 58901 8568 45 v 0 TeXcolorgray 0
TeXcolorgray 30427 45646 6896 45 v 30427 48730 45 3085
v 33549 47427 a Fn(2)33077 47475 y Fe(\015)p 37278 48730
V 30427 48774 6896 45 v 30427 52373 45 3599 v 31268 50324
a Fb(P)31865 50447 y Fa(3)p 31268 50537 1058 45 v 31268
51305 a Fb(P)31865 51428 y Fa(0)p 34912 52373 45 3599
v 35621 50906 a Fd(2)p 37278 52373 V 30427 52417 6896
45 v 30427 55893 45 3476 v 31268 53967 a Fb(P)31865 54090
y Fa(0)32326 53967 y Ff(\000)p Fb(P)33655 54090 y Fa(3)p
31268 54180 2848 45 v 32456 54949 a Fg(3)p 34912 55893
45 3476 v 35621 54487 a Fd(2)p 37278 55893 V 30427 55938
6896 45 v 30427 59537 45 3599 v 31268 57488 a Fb(P)31865
57611 y Fa(3)32326 57488 y Ff(\000)p Fb(P)33655 57611
y Fa(0)p 31268 57701 2848 45 v 32163 58469 a Fb(P)32760
58592 y Fa(0)p 34912 59537 45 3599 v 1 0 0 TeXcolorrgb
35621 58069 a Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 37278 59537 V 30427 59581 6896 45 v 47992
30270 a Fi(___/1)p 1 0 0 TeXcolorrgb 47998 32262 a Fh(AN)369
b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 63609 54804 45 v 0 TeXcolorgray 24421 81281 a Fn(15)p
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
