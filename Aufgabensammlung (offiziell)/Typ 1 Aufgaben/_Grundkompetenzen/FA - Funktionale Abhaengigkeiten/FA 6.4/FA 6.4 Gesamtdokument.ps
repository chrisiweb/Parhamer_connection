%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktionale Abhaengigkeiten/FA 6.4/FA 6.4 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 09:00:32 2017
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ LMMathSymbols10-Regular LMRoman6-Regular LMRoman10-Regular
%%+ LMRoman8-Regular LMMathExtension10-Regular LMMathSymbols8-Regular
%%+ LMMathItalic6-Regular LMMathItalic8-Regular LMMathSymbols6-Regular
%%+ LMRoman5-Regular MSBM10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktionale Abhaengigkeiten/FA 6.4/FA 6.4 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:1000
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA853
B843CABA76BDE9582090299F423519EE3AF8F83AE7F7828B314B6E36E9127419
F274E9FBF5622C5E48D7E95664D6C0C1006661038CF2C93BEF1DE34A163A2C86
693A13F4D0F052D2E183F36401F0C29862BC1B36A086524F76C7EE2C6D436A23
7009F146F1756DCADD3F70C51FDCE610E30C0F4AC538A2703423A07976ACA74C
25F4CFD6A92969E206375FB0C672E45948B0E832F2BE688EC22FEEB3E06BBC3A
272F73081A30830AE4214F2F029918FCA40BAEBED6299EDBECA01E08F27E5627
F53BC56F4AE7CE2D6273B27323AB829E2D51672A4990E3AEE84331583A99DA4E
63610AF8F10C50FE6196E3F4C1E4FC9BA6BE0ABDC81A0A7BF6A5792A97BD0A7E
7BBD31C3FDC01D734550843C8D84C6CC0B492CD1A6CCD57428F03A863E959C77
457D401028FD00FFA9BC422FD09D8B8A70446A61CB256A2FA0B59A2646D9C5FE
961894DB8B315C52008B4416AC35439E010BF90E43A05FCB2FBE8E62385E220E
588B7FE5509F1BB71150E159D01D24EE28008D4213227FE9BCAA34364B1039F6
BC142AAB19C8E9B15F0113781DF9C9B3BC145955552A901AEBA588D39D7E87F1
CAF27D315E168807021B0CD1B2CE13B611A7B5FC28DEB4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman5-Regular
%!PS-AdobeFont-1.0: LMRoman5-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman5-Regular known{/LMRoman5-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman5-Regular)readonly def
/FamilyName(LMRoman5)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -73 def
/UnderlineThickness 28 def
end readonly def
/FontName /LMRoman5-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-566 -303 1772 1126}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D5E366B4567F8B1C71179751D38DE
09EAB552C14DCD4DE0B086BE80D484750E1D728A501EB36DDA2232012EABE46F
4F54C36AA715FC2E594CE94E9690253F9AE872DEF9091E25A9D7FD73512FAD46
941B8C772528E3A80A92F12CA732DE1460CB5FD1DAF819FA9E1CCFC106AA3832
D37573160C919A633327D54A78400F470079B6B1329E9F88AD384999BB626184
99F2C26CDCF35763273F3B6F226E9E54F4706F7F64DA9B9CA122118314131345
7EE1C14F42845F235E6A6157F87FD2B0069A3FFE68094665ADCA2D6F09103F68
59300BE424E5E62D6BA15D1B9FD7F2A4E40CC69D8D827A3E2096706B0D2EC51E
12E43A43F50BC93F45A54F86F4E198A10176F1AB8198B9466006B468AE2ACF69
986BCC22B224520F72BF6F2025D79AFB148408C463D4C05FBE11047FFD978A94
19F22274208AFC00F45E7C4532A936319F63B4448769CAC01E067BAA94B81B3D
E16DB13FF1E0AD85933DC6DC4B1DCEE12252BE0C7FA81D6A188EC2AB50395C52
4CB5EF83F76C36901E73833E2C92CB3020547825353EAE49B08B7BC575A1C765
3F09FB1B8B4432BA7069B1B411319D3B1F369DAA39789F637C2E35775412CB50
97244C92598495506F37518CE9A0EF8A1BB12EBAC2ACDB8234E068B106997D75
C5E7799210C1706AE188F7D8C15F484FD68C83A3BE8EA1B574CD543FE4C87F54
B65B51EAFA28D03D9519786575EB3A201BA07E91114DE53AA4F1E8CB784A0755
D5FA7C3D7AC97EF66D31A130F8EF6A3A6274B93B617C3B82231B0A7B6F06155C
5A3DBBF7E1A189309F8EC19BB343EB5477E85CBBA3A5A10155EC75B281609ABD
4BF1A453BAE8CD9BC976A1CCC27D8374F91FFAFDA216524DECE34673BD763352
73CBB7C1220C5FE36719B55E8FDAE1F65B79D31A52A9D43214248C6E80E61771
00868F32280D4EB09326163E0BE25D1A14100918F605CFE56DA8B9A95E2F71E9
64DFE422D61AD736AE1E163617431E7D63A7AF0E79C67CA665FCF325A4DDEB36
DBD3B89455CA9BFE2FE8ED26203A2B353C3C9835F4A55A241F8CC5DBE1FF101A
0A492961BCB7BA6BFE61D8947254747CF9848901DD600662AA124F2DBFB9F42C
B40A63BBEC54EC63CCB18E93BC17CBB1CA9CE47A0675DBF2E804072C010757B0
47D819B24DAC05EF13006A116C82E1319A636C7D42C6CAA9A4B1EFDF40752BF9
4A98902E608264DED8C3241F0F80D2278C7302A34A4F508E05E8C908C46B9341
9B9A697306B002E46CE2989009F8939A5EC6CF04D1DC824470A8956B7B47FEFF
3A2D6E11BFCACD6149A2018E62F29C46F0D9DE2A36056C5EB91055B4C390D8A6
2D650E014F5544E46BE9C7E0B1997E6DDFE02C0150A31C97C1D450F67B0FFD56
74E4853E4D6EA1976DDBF07CABE678671AD5FDE58A293FEC7BAAF00545A2E200
A4E4923105DF03263EC2C59DACBCBF4F8B6821501BA8A1DCE0E4AA6C193AEA97
0F45D01EFCFBBD18095AB5C0EC2F626498A0F0C355F94E92659245514FB4850D
FC7A0E65BEEC544A2F266CDEC3FB74A0BBEBDC856E1B1A065B1C34F194BEEF04
F6BF76E045E8814A4A25B82718259AD02CDB518BA4C4AD8F261CFEBF43862319
A54DA73A385F9AF86EF6E3F5211BBE23CFA17F1E229F107D0A7754C4C27620D6
CE5925909FD73AD835ADD9C7576B48EC63B4AA06EAF34C55A9DF7A5BB9E508F2
7E984ADFC4099E1610A8F1ACBC0DFE56DEF3943AAC7F81979ECA8231422739C0
C58B4ADD86BF54EAB5872C79685B50CC82ECA758FE32A72DEEE11D46BE981A6E
A85C135F60246D47ECC90571044E7021EED78915100EF59438A73C41D92F0418
3451EFCAE6D761BA36B4A8C4D61A96C406DF4CF3A843159D3BAA56B007DC6C0B
52D99ECCF89764E3718CF5AAD7E22763671F75AC6C8238797C13451EF9C9E21B
9C60F64B2137D498368FE6269F852FB0E950210F2B0AC83BFAF0420A18B40E95
2E098614C2DB3FA57D400530CA6FA9777776B87059684FE70A0D67D92C6DEF17
3E0B552550951FA9C6175486F899AB786591690FFEB4B0BE0AFEEDCBDAF3A9F8
0AF982F9653F2DEFA6365ABB1588662EDA312337BE642A4FE86DCBB069030AC0
A394E920DC04B524A3A442C7E50D342AE0995D1280C93ECB6FA991BED6CD2F0A
EBB87F65D5E67BA200E39A0DCF5BD6564B0C2F3B595C9F8B8A3106AC80DB85CE
6630A7C3E0FE565DDBD45AE467A782725D8B3E30CF0792D0B194A2E03372C07E
C4D6535417772E66F4D60ECE31C458BAEEF21A985298437D8A57AD995C51E6BB
BC2E24B2A954DB76FFBE2AB51344990FFB38A6DBEC4F56E7DD7C1B142979D80D
AF96A3F3517933574B07E505A45CC1BC7652B9E76547827EFD90798F41EFF7AF
CB48DB99EE28143FF17F1683D21DECF4CADB3E3F782619A4CC3B27215BDF4252
C36F8F82234A46B51F8EBF9A806FB807693E837663D92A3DF30AF50B62E4E013
8AC1B7A39CBBE3E75DA003115C7416C29A27BE5BDC940164A8FD9C5EF6BA97D7
5949E232995ECDC83A2BF7254D4E70B69FD185D5DA60AA63051DD7BE711F5E2A
B8585D9C731EB49F2FA5A5A6B5E003D704FC6BBB9D9C2EE4F3D571285E319A78
F909421C31359DDB47B9CE4FA973134372970A35FBF96123FBADF96FBF875E50
23D34DA177B1DD3787D64255F26B3D26D7F229734FD72535354246F33B2E2F7F
4DFCEAC871D469B89A31FC8DA5F4A317E7644446B44BB8012BCCAF8C59F0FE37
AF76EE986ECC5B669132039391A0ED0E7BEF100ABB401A60B1A27DA0BDBE5ABE
D44A6F0B91FE1986DDD520D8A429FCDCA476EDDFE15E63310A8BE05B7B8236D8
2B57FF08D62D1AA14CAC2886F8DF4CA67C11EC057BAEA084D203E197CD501464
60DE396ACE4A0A050A960230095553782491A414555572D81B716084F1F1088A
69A2B74058822221B090CCB46C0A8F2B599BD2303842C303C712B005BB68F991
3CBEFDDA29964AB2BE5A83FBE336D8C2D1325E033E6CA7B01D0B72207FAF08E2
4C5D0A20A385910CF5CC9590B7D2B6047D6A14598F301B6A7E97363ECBB7CDE4
75BB63312BBCC25FED541C36130671C924761C3BAF25E1DA6A7C4308FB3C14CB
6C3C656047FE57B63F1F98B539BF6BF873334EC7AD0F22F694A9B1B605CB5030
0FC162D7F1B78D3C62F09DB17818A5F1AD15C37D3EB3C09EA1702B10B0E40E16
407433FC9A216DC7AFCE1C5A95F61CA6A77D5D31434A09B64F8FD9213B477A70
452E7C3FF2C0B823742B9547BA97B2B014E28D06053051A80CB1353AB59CA4C7
A2FD4490D7A6F79A3B180D240E4D2DDBA4D4E7848A25F2E789C18EB54A63529D
717928A57CB378F900F83D458624EBE6A7D0067E3B1990D104EBADB9DA093211
73442805CF8F8F6BA060207B74316AD3CFA839A3F2726AFF3A2E092658E4E75D
2AB98C19276A104C8770D3E62C7EEA9759D337A1F82365D18733275A1938886D
2DC102825CB3EF2A75A7A3FA69E0FD82A04759D4161521BF6739131AAC99B7FA
D5AC9FBF383B3364B50D5860E9A1646A92A94062BA36B4A8C4D61A96C406DF4C
F3A843159D3BAA5C6A7307318ECE80777A5FA529030B795AA0CE8D74E529B072
BF7CBBA2338FF37B66DBD7046671C2E5DF917E9E31ADCFA7CD5BB810960EC563
F40AF416C079A59E62C55E71761462FE9F1C24F12DA53F9865CCE5434C844F9F
61FB670F5521FE1FEFC260F3E926AE8AE36C3EBBA9E6A7D63C4EFCBBEAF27168
074F3BAC5699002593DF513D3154E07738A2E39D6AC9429F1A359DE8E810DA01
91D78DC4590C6F4A4A6E85662526851682A4C5C968742603F4FDB0B0B6D446B2
9F4A0504DC2EEA5CA10067DB95276F5B0820E139D55D686C7E96E332FD87D55C
C27E5859EA562E211A70BDD212BBF5C833C27277AFF41983B1FA5937DF61E9CC
A3BFE943C25C0005C651E43963ACD7E7868CAA4488EE815D40E28CA5497917B1
25739FAB9FBEF8523676B7509EA7AD0D2111E41F3B274C07D85229BBB2BB2F0F
B1B3C663840413AF776A79A7F7282FBD398422F52DD7D4F199BBD874DD442AD6
D4702CB01A0043201222A5A45EBF34945E21DB85C5E332EF0A5947731C896355
4083117746434DF37B1060A745CB76E959A74DACA2371F0ADDD8BC75281D78F9
DE0D569CBDBB8C1EC91AC0FA666F6A4161E6593F9EF18C387E5BC1A5983732A1
60076864F407F99A68AD7AAE8419F9A6B639498953B52390D8E594B9E7BED1D1
3E534FD2A5E520FB83F50F647650E90E3AB137912FB38808FCE9C99BA997ECFC
11B62612EEEA9E08BB45A93A475EBD501E62221B95FE357BF67271EE6EED93B2
51B11A906347837117D1908D958AD0EFBD5C6CBE684E8993B9C480D2920ECE73
90AFEB6F7F9E6309A71C82A089CD2DF10D9F48FA1C161BAFBF18900D500C4CE3
599A4B186761649CF902FB88A89D4370F728D86F5DDA983EE440207E60C5732A
EF587491B60E2834919F5224AAB13F1E17BB472EF79C9F3591DD4C298417194F
7316068F4BB7DA76AA2BE8C2E140433640B24F4ABE14345D6A3A253C967BD350
0F5F624689BD1D5647A80038419AABAC1F233E8A680AA123A7C4A3AB05918672
D63800D9ED3C7BD0994D5B9697B4E26D499FBE545C804154DD343D0FCCA88D29
92CBFE6656A0ED50B329ED72DFFF1413E660A1ABCBB987BED86F6EA3E0321670
58311ED0AD1ED3B185D5177C15A854D967E8195FC8239B75243B40F957BD5509
1B92B801AC126E5EA0BB33407C56AD63401DD9A62024FE72E8608B0CFB275F54
35F3DD911BE11DB381C01A9C04645630CA24F8CBEFDC81CEFE1E7EF410013281
9EB6177E6B1430D54FA6EE1941A393CA17E459E336B3BB30E515CA2773FA224A
7914720E92784C5E7013ECA0861430BE54C026FD62F7D2C81EF13236C981A084
05EC3AD93FA9CB3DA0F25169B17C27CC63FE88712F554B62FF88E61627ABA5E5
23C17A201E21DB85365DD8B855E4BDA6A34B184D1A89BD614D7DFF502C408B4E
2531D02747F8BE666E6B065872B6C996C44E712F82A71C040CC46914D29D5143
8589883F4B3AA0690A4194719604D655F83392CE847E04B3DAC7E417094DA352
93F6250F7959BA7FE2053FA0B4E0A35453EEC505A64E4AC9B0D19B39BF010C61
449686A23E22A3B0DC696248FABE1876F93CA24CEA8F76E9C466F7BBBB6F47F3
97F59231D0ABD7A2EDE43E477B877582B144E5A0BCAA48A472001B4185D5263A
C2A4728B66AA267A757DADBB5CFE8349C55F794B95622CF985F50763D4FB9036
6A4CD61AC6757F67D7CFCA851396A6FA306EA3D76220182D57FB18DEAE2349F2
7FD72C7ECD04700C6400992BC331A4199A987EE214AEFC6CE2A1DC76424E325B
88AC132D54A5A908B5F2A32F38960F407C8F5ABFD6A52297BE877AFD483B7A2E
45D5CBB01020006C76396B1FB8ACAE10E2EE812C36C1E2B485259EA075F25686
927A0A136D522889627824ED0DA1BFEA292DB4D909B48FA55F73FB9648B66848
EAE89CF668D0E0A1DF7D08F2C5920C97B1584B7E0051107EE778B10EC2C521A5
3FC09A62F2A89E84964B2B68602D92E9EFF00404DFE374F5C40F7C7768A67B86
1D5FC2887F1635AACF2780A2D326CECF8B700CE9C0415271514ACFA19D2B9D2E
2E1EEFD91564F0AC54D70F8EFC63B94F73ACBB4CD279716F62A27CCD39244086
50605BEEDE2A68B5B6105D8761A750AD25750308A8F0348CD1ED0725AD516990
B85B5C80B70D1D5EB1BE26422297188DB7566B42A4B0CB64B3C32F296FBCB5FE
EBABCD6C455A139D565F8CE5847F76F1A7E16FA17CBE3F977509340FF834EA21
0BF0CCD3EBDEB0DE076C213ED883C1B4C6F98256B66E608AEDB1B6703244E990
9CD4A49E4600DBC7FE9A727D18EA999ED2793B5044A04E04279AAA541D26750E
85FA093624E31401C0A139B68C1936059511BE83E22175FD33DE7F72835EA926
00AA098B44C0A422D25FD07EAD975D4C14CBDC69B74E55C113EB226EDBFA60AF
43C7D37311FA695AFA2D120979622DF0B55C12FD923A42A027681EA5DC170DB7
D66FCE28DB743BC92B2EC376370FD355FA08C74EF272F49351B2B7870AE7F577
4ED4172CFC330E0BDE88751CDE48A55F4E0503D39165A53031425C5E1F37426A
DE8D6F00421729DE4DB2F27D9264336152062BF9C1F7C506B1C7D2152683D4FE
7CC6AC4B33741066D8931BA1B8155793703CAD6846D687D10713BB0097BAC6AD
4AD2D77946482FBEAD4031D9AB6265FB6BB647FD9FD95E0A2287A23A0AB26006
B5C0940459D185813D76680ACB091CF8D18B6063159C32943F0F6E73D8A0F7EF
263E1949E4D64E1E0DDA0D4DEDABCEEFBB94D35FD6AA23331BD1EA8D0258AE75
843EEC7B5DA65FC5113028F5CA15C2FF5AA7BA0A0C4DD22B38B62EA22FACE1D1
79CE454DFF93669606BE8C5822318FF299F6967B7B4020B64FF37AE7F91533FD
CC748D4A2A0AE8620FD24CF4C248948E397F8F7E2499453A7829EF715B07B78C
A642D70641EEAD894385C29EBAB74CD0B46A97C588C298F92C73A3CA86D60960
CC465D8B2E2FF21241F38A4966154285C49E1046B824372EE1E2B00C53DF9788
B45591972391929A1D45FBA91E3FDD00FF97794144F0343368A9170BECE87FD5
15F09C81DF5C6F78E428F8061774E99961273EB9E4CEAFBCEE8257076676FBC6
38F830426328CF13180FCF15219F6AAA2577DBBD57648E398F5A052751A5B226
884049AF67AFDC4A9828B04B090643FEAAB5CDCC83BEF6255F7B68BD347BBAE7
EDF985A31A59D1D3A011EA04EBF7DB3B517B3FF2B21C4398EF3C4DAAA73D2E9E
02B7C7F7C14C7805C7908B8334BD4FE842D57B04423FD0DB3A43EF56DFA464B5
7E4332F3DC5D5E4706C542AAAF276BD5E1D3D94EED3455C90F1D36E21D52A210
FECA5F50626F2159CEC144DDEC907CE0F426523EABE4F77143EBD6C7AF0DDCF8
2F3B9D3F19A09784794753076928F9867BDE889FD40BF27D33F234424570C583
27093E1BBFCA3FB51F3756407076291515826E985DE89C5E0D7375B95EC14C73
EC6DFC9CFBED73EBD70DE13443F8CD56E8D3510D3A2DF245B93F5A05EA389DAA
2721AC6E6BFF0015EA347E0F9C13FAA1FBA84BF4FE1A22CFF901CEAD1600AE40
42DD324D471A4D7A6449D75188F3F600D5FE70576EA4200A22D3A9E409045548
E26597DB0D49B84BE1362D29F523654DD31E07BA3954B288CD9232F88633A933
830B43783571ADCDD2D2CD922A19655959CA79B74895C88B769AD1604CB862B7
2FFA7E7B566BCAAAED470B4E2C6091DB70792B1DA8F972FBF7AF89198BE6437E
638FA41916335331DB63246401C56A3FBC11FAEC8EAFF09F46B07FB5EA206920
66C49523AB41242F1D916ED69D1B7FB6EEF9B143AEDD72B66B8DFF757D05048C
CF86D9C2503E2CAD2716C778BE25810FE125B5C289AA53571EA1D80C46D6C4F6
70A309901C67ABBC61FDF2ADD52E1773E48CCA68791BB3EAC35A0F9FEF8D15D2
4510A6AB4A2B8CE67DBFEB7E1DAFDBFC032CCBB03D0964DF8D25F7BDCDE7824B
DBFA90C418428EEA7FE8502D8A61B50F46B5B9122FF4324EEE370AA99FEDD233
0BA2F38CDA9EA0AC1EE47A5C70106AE7DF76703FB9AD2773972A8075F7A95632
AB02B88999EC28EBE10442617829C58627F62C3D658468E5C82631D52BA0C291
71B40E2BC4E567B4DC63A29B08868662A878270D2FBEE37AA230330D81EFC166
DFD5333398E07290CC693374507079698C07A7B9A821AE7CAF850CD09ACABB05
32B101D2206EA79309A7F87B1F8052B4C96280F684DB64D969015B9BF09E2EB2
7D88CE83FAA4C84106CC175280FBE13452439FA35772557A6FB3D646461BA24A
0313720ACE3287858A257253A706922273FDCCC030E18A42C47DD0FA1EE3521C
98714EC451AB5E52F581C706C8AF4739A2E2EF9F27A0019AF30A4F7551E72225
C12B7FAFB9D8C0238645C253E713E1AABDD1CF7E05DA9BEAA7E70B4C0C5CB380
7EFABFDCF9F836D144143C2BB3989D1D51E2322426114024F0B9320664BDD5B4
155AF20453A685A329867D8165CE82B70C6B443BBB8FF6408D1F434E3FF24D03
18007B759391DA5AE8EB340F6EAFD3D36EDE20B10EE93517665826A01E9F0C9B
44544FEE919B881181642CB1F6C34FF817FA8E8118AA593F2CD122E16010687C
CBA357EC5C1C77239733D652E530F6C4CAEFC15D5D7BA5444EB942582DB27E6C
1A5589717A5C551D372AD585BB4189795DC7DADF2A16E3969A424340C5153D72
B41953605C79AD88E7A914FBEEC22AEDADB10FD7EC61BF69D36ECE3C13C6069C
64B22F4460C76A9E6A6A1DB9213C2142AEEA0B692ACA1E819ABF8EC8AF7FE6D6
832E5BEB7383E249556A7D03753BA53A7804273BE0BEC782AE5B29D62ABA4BE9
948E84025FA69167A86D69E941C9AD6125A56234A96C6AD33F56C836BB8B8482
9B757D4563DFA8FDC2A66E45C96C8FFFBC318EF3671FA87B9A81A3249FCD0540
EDBD9496769CD6DF3199C3C549CEC434910D8AEAA207BEB7A8B227217A257659
0FE65BBA5AF39B237C53D32176E0B17A5F655AB09187840857DC14178B61206A
62F645EB9ACC9FE97D51E89156AC916FC29DB487A669486DE827DFA3C487FBAE
BFC1A5715B00D1495B99CBA96ABA9147ECEF29D69BD30BA4D9C5B425EC8BA459
0DD3555C2E4BB60197FBB2324B822D37F466A5693C95962D6AC4E187FC382030
F37A20E9EE3A281CAFB5DFFFE6275522376C8C335B8BBA0DE33D8C465362CA8E
91B3C759943797C24CC83176CE29DF9FD28162CF3A762A40310717779DEA5827
40E49F0887A0C17907788ECFD84AC599CF9C38E918B17E14F875121509C8950E
7DBC216AB359087D8B27F4F7C38152DDAB8169CE7950969557336AC8DB3B61E0
1D64D56E8C4CB5AF3CF719981FD9E8EBE567A6010D7D07A8BDB9FF47DA9EAC3E
8F977C22150E9DC4D491B11A57871330BBF61AF0AAA514B1A496AF69E0C2A56B
23FF3DBA241ED043BCA98686137C75E49C91A533B409E0D086629220B4238502
E63A95E4064CD4DC5903FA1BF5CC34C891A8CB5A2315B858A2F1FBE5680A4013
76701A40566DE91910F18DAC4CBF2A115403A2E98751715251D4CF99D8DB478E
0B6D84200650870F0B9A39231246409F64587223CBA0011A7A05A875DDACA3FF
ADB7BE87446FAD6548D0F2F04C66CF7E1E27CB13D8DFAD0E258D61B3C4F03884
D52CDCB5CC88AAB0CD130921560822D8F89DCA5B1802B72B1EBDA4E8C577857F
27E6671E663C8F925F1926F3A7B652A85249C88AB5536A25751496FF2DC1A3D8
7297EB52CBF0AEA353CAA77040D3798224136469E565D5CE46D200F776ED7916
74D804D07174B68CDAD6B684DEE74312D74B485379FD3B17EB89DEF4F8A058BB
89C03CB49D0C265EC2511211833F8C475D7BDC3959C334724858532D7DA349A0
85E560FA3A13FFD612BE78D9009DCA1E8635EC99CF31C670AC326493BFE78A4B
3D180613A337D8197EA627089D71EAA4E103C8BF03E66F3D84C09864433FE330
202D64F17FA59D0ABEFA11CE987CCE385A75F01AB676E600823FEC28C30D2208
A868EC0D0082DAB53B06017CA640FF1CA71025C1F53713226D0A59D2C0C8FA49
F5377E16806EDACCB60F0D8085FA97FE6C68E4E9BBE4AC0AD95EBAE53E28EDB2
678C3E34B413BBFDF1A7C5BAB3F09769CB0CCA5B1CFA6A01DC0EDDAF6CB09B21
22F0EA43B63EEC52D32EA4B9F551F30439ACD9D0A29CD2F27816A9E869703F94
EAC7041BB08566DC1DEEB639F3A3D283728875776801E720575B4FCDBB2845A2
37BCE58F07389718877DA7599DE0AFF6ABB520C27D71813F5877A8561FC3B716
A8AF83B9FAEF975CAA1FF43C57EAEE1C2196A14A4D6F646BAFEB7C19098C9E2A
5182A1D342F765C725ADD7B0D3769CA55C5BBF59EA720410CF2C71E553FA3B4C
E88FE8F9CB823F098D47ADAB330BB037D75FB099836FE30BDE75442B231546B2
6442870B5843A6A69628B40736B1AAFBADA2DE6F39CD5991304300734A9E46C0
D94B3911FFA435B4560DB12A7687ACC61B7006B2867C7E588D43E047676E8174
4DE1D89FA1C947C4D34A483CDFE067EE6B3F7DFE0ABCEA24D63DB8A583A538E5
13B26906E9E6BC229D511F324E3295617619AA99C35791FE45F069B7946B5EB1
D7A5CFCC0057DDCF07EE0D0E7C70D1DE8AF54F89E52C7FF1BC6121E346276165
F8774F02A5CFE926BD4891985D68CFD7AD774BE49CA1C74FC929BAACC1D9275B
3C3CC4A76F9D5C43149F87414283FC7AE67D07BFD4AD7D7C4574F0F05157163A
3F2BB020C5A23E03EBEAA640CF23D89D1C2F0FFAB6484D2DB2163F7CADBC404D
407A616D6C0517DBAFCB571802FCC57E7C01E510D507ECCC190832266609281D
84CB8363536C67F00F622D32DD9A0656EE7273EC391D3D306B9150337127C606
8B9C79A4AD5C1991F7977C9EABE1F5996D6F2B1CB3462FCE34CEDB86D1A59923
04E476CE1DBF40FA8A4A7B8320210619F4FA4CB8003758487E60AED0E4D36021
26C40D56F36B7B275EF7F771B6DC2A4A0200206F5C1DFFE78F9FB4B79A06680D
81C64C56F77994EE615767510AADA4364CC2035DB3CD08B10711084DD9FA6479
2B40AAED1287E8AADA2868B5E11EB99A42CAE72A680B12E95FC462DCC54C4458
7EC297569731F719435F2359E372DF28BB7DB86376BC7F7708D9DCA34A577EBC
E94F16964E6C441331B58C90BEDA80A20AFD465AE9F82195E1E684CD9C7F7303
D3D810D4914B8AF9A1983C44B900DA59472981C137D7CA5EEDA4FA3059151D7A
0F7F55A5CB694336732534694A184539909D5294C015CD78A202392A840C0321
5EB573C7785B85F11DB67DD186A92C6EF1F4931DE0B7C7E22A39CE53FABB454E
ADF058B75FD346019D2B86EB21FC2BC6F585B621FC39F4ADE40CE25DAD0B3425
02A60C0CFEF57A93F60E383D2A03491BD1D7AB84C2DDCF5DA974B2068488AE47
A9F079D7417E3605DECD9D47E4669B250CCA42F8428E27DB4CAAADF3B50C42D1
74AE261DBE2EC7E045A26989E420C0C0711FA63FE456F6ECE4D25E13A1FE5E12
84DF66C11BFA894FA50EF1BEBA5095045ABA7952457E62E4081D5D5731B7A971
4834A884A4957B1168D1E1F46742DC29BC7E84290ECF14ED1392402B3726822D
C682C601010A023F6B59281B91BAB816434577E380D4407D0BE8775E1ED00657
B4181134CB88476E32DA4D66981384DC2E6371D900A42E030F2B4381AA5142F8
B8F8FB9EA30D23494DD48292DABDD3AED5AFFCF292EF387F9A4024927ED393BA
41CC569F78BD73D380C572E5087A5556397E485D114FB91D2F1CB2310DDE1BA5
CE2AEF31EE9C79E4F150DEB6EB37996CCC4847CF2019B1217BCBDD7DF302B8DD
0077837A8237F7EBF5AF326230B80CED913EB6E69DEF09BA451A28EE62F05FDF
6C538E055B61831B9FC0792BB6E2965094EDB97DF199549D54852AA8217E48B2
B0BAB2A9A77FE21F478248CF21986DC483EC4FF27307585A474BC1F0370307BC
6CA5E7CE474F62D5EA99A9CC556229215AC23358698AB2A4E7319B9FF1A7480F
80EC4A178CF08A55FB4E2D527FBF80D86BDC60DB268EAE4450B761E5D3575F1D
961697B5BAA693295F98AC07DFB9C648B0BF58724CD2F37B177FD24EC26F0986
C5350312E62601100995599C65393BE11269C8DD7247C96D632523256DE4F0B4
BA15AD718CC5E605CD6C3C5A46E851536CDDCA5B6C18BA30B7AF5F9FDA955437
BB09F0F49265B094B7A1FF318E59D899C05E423C089EF4C750437A96608C11BB
0902CC9E6C93F62E5E348A37CB440C6BBBBA5055916A702AEF0B3B94BD6D97C2
82B086A3AF63994EAF506DAAA39E2B7D777E8A10DB921C86FBEEB0F238F7A384
0FDF6BB20265461DAE6E57B5C958A54B43ED6AA765099220435221B68BFBF3F2
65B1D1A1146A91079B753C8F021A418D3BC19ADEA42AE0AB3741CE1DEF5B751D
3B44CAB8E9ADEEEE96C2499E4D5C40DEEFB9EEC8853BB3E2BB9AD5DB804E973A
275571270A612826B0E61253F8DDF4AF35410B0E8ECB71ACDB08D469FA914C1E
D1B237EB7345E523CB9AD2C26CFB2671B72D15270CD8CB1D59CA27D06DEC51BA
0E3B73895A45C136704094A97F5F335EDA45270025A823A88C7E731F647895CE
CD96CA4A2FB0823151785CED7E829F5B18B621B99B494EBA7C4042809748AD15
9F603E3F469FE2227D126A9AA1FD2CEDAC61D6CD5CD5AD0D67B9DAB26FB40C62
9DFC98E644F5AFF9BF44BE49BB740FC4EBA1C8499D31BBD645972644E9C53BB5
4966DB71B23B0A9CF1F1FB873365EA1FCACDD36E46DECFA798B6E803A0A99CAB
A87DA35B532BCA16C510BE833C306EE8AA00BBD282C6762F07FECA518F598588
6CEA2EC4F11DD771EFB1ED519E2252A8110547FD77535109A3A0E68DD06347F5
129C454033A639C2D4EDDC0B3A5B2AE809E78AF0299948B51235A529766FE954
E0D7B2F55A3C57BF673D0276707BF3756FC97D20E7034E1FD470F36930FE447C
EA6BBAD9AF531381A0D4498A70B19BE983F46743DEB35DA63A24D81C3E5A9804
EA61472E0B7C84079D8C0386FC64BD8C6B3DF99D14037F8800B4FB8C4CAD5D2F
3718A2590BD1D0A6D49E62478FF7256CE9352DE27C86BFD7AE2B988A390BEB35
2917E28C85B86A43776F2BFE4CEB6EC3DC2047E83B6CEB8E578476FA695D2ADD
7C36589B1EB8917C876D7C780E4DDD73C0C61E384FEC29A28E43DDFECF131E27
A82FC1B8BBE36315E5C3CAAB8207AB962836E6CD43B3EBBE0FF0E5955E1A87B9
C98B986A4A800FDD3858D5F37D82BC4A7ED4D48EB82673764E076EEE81285FBB
3CCD86DBC5251D2D384837D542609E4A0E2A68646E9583B6B9A75C95840BAB3F
E30F448D398ABC61902608619D9DB9BDE5755BC004157571A6246FCCFB4C5CE5
663CB4883A9220F39D0144B18B8BCB9E0B7240BCC29C59A4D84770FD34E97E0E
6CE2CE55D85CC51C2F4C49765549198486E1420C007D93BBAC982BA82BBC2A17
9C3F6B63ACDFAAB1B5F94B35937A26DA0A486EACAACC508B9D267C79A9164647
8075E259E918CC52A84A52A686DF87BCB59F4C395D341CED9DECAAC00877DC8B
0627D7319885FB2AE0E2E2C9FBCDE4B5A5C54AE61C0B63D478DBD9D1F904EB69
59B1D3A39766545C90243D05DBADA8AF7B55574CC26F4B1DABBD0AA2330028DC
06ED4D34A5E4A2F4C5A85BBDE0A289CFE590879484C229ACD941918B6554DFF0
2340FDD61392BE9B08AC79A97E009D6F40978896B8F7A0B472D1F9FFC68F7AB0
7F5628AA0078EE24881E12F14EC441320B96A8CCB09E3B314CA658190A354DAC
0D391F423C16690D1F50D58C2B61949A5F012FA15EB06BAC2957717DAEF3986D
42CE961A05A5DAB4C473CC5665A315BF1B163C9BB372AE663ECF01941C2768D8
0733E456821FF981702745D81E1513AB2936FB2FC5B96B4DBD2887DFAFFDC16A
CC0181DF932DA86B8BE39AAC8BDDDDF5625C61972D35EDDD2A7959225DAA397A
7BB4C82A4F1EA6C7682F1CA89CECD3CCD19ED1EE234C9E8B874F03F423459E59
D373C12204C69A5CB69A5A2AA3AE147AEBDDBAEC2278DEF6B3A25337B95AA2F7
686797569D918E9067154248AEB3A2D30586DF9B74149C5F5242D3CB253C36A8
4CC837D76B2BA6F2CB1126C61C85E2C725823EE5D260608D70D7DD605DA2CF61
A9AD9FE92290D6A0B3D5AE24E25393D501AA2C314AD96BA904EF327FB8B6B102
74907C8E9A28945C75A42D8F150CF2A6A20E81D81903331AF2EA0A248016BE4A
CB6C50601D15F422103E9665B2EA92450EFD0039F65C26AEF49047078B06C8A9
68F278BA7BCA00EA900B237F60722D2FCFF856FA5F423972AC19B5BC04DF4D12
AD056FEB7DA7468011420DBE034D5AB67817DA21F12136545059FFF6B335C547
00A78C7C9605BFB0F0379CCDCC5074AE47CF016E3B3AD1A5C090108D4964C7FD
5E57B7B9E41DA4BCA6304A8C64D2771F67CA490B4C76C3A8CBECA28BBA1FFC28
AA0B2660C443D24320003930CD829959F5EA7B75EDF72CCD4BB1D84D1BE81AE2
EE6C98ED67868DCB84EAA176025BA9473610A41FA2317A4C2D8A81445C4D7682
D1A0AE125DF60CFF05C7454B82F991CDAE075989A2C997B124C1AB303E1C8AC7
CE6FDC9AC1D8672538E08A8D2479BE76477E5193944353796D86AA5E2D8D708B
2DA4315C703763D6B35A4836A2AA71B39B7AF7C744F894BD39DCAEFBBB053684
1ECB85068A365DD2BDC60496B65715DD63A14FE70BBF7EEA5114584A91048F67
C655B8D95A9F649546B51149457B8CAA6F483C4A0D686245F46D432299F87923
2E98F9FFBC326D9D0B73DD4F4006473F525372BDE229F1BC277751454170B6DB
CA0D9FBFA85D103528A79957F00BF8849A73B9D49874E6CD71700FAB750E41B7
7997BB57C3923321C9D354EDF6661A7AB697E40523DEFD62588F8FDA892E88B2
246C1DB16BA9CD3050FCBB2D04764B751500A6F3AB7A8D39A62BA6707A896EC5
5D98E82E3417677CEE755D41C6192B1623F2759EF572804409B841B034CB2382
8A19AE931439F329D2BDD5E78B2833CE36458A6868587A364E5DE5728E02E5A5
3629ADAB0817E3035573987B2AE56319A6E235C768562B4ED040B050721300E3
A2A43B7CC317DEEB3F89E67D5EFCDA9560134AF22DF5DA92FDADFD2B68A43066
2A90683655A668931A02B1E2F133686110E9F7F446C409A009674D3973F49E02
479CFCBCC6F3F44483EBC2B0A4428FFE3F0A1088EA71BD2DB74105301D09500A
64937D5F50730F87461D8166D473BF570B3DB7EE8C095CDC90B9FFF47FCC219A
2556169FE98FF9B3CFDF3FCF119DBDBA916602E032521102C48CB58FD53CC14C
A454274048C4B4FCB5EDB4621857E3D7C5274A91C1BA12B089720FA9BD9CBC1F
322A39EFCAF585107BD5A5C188A4F7215B2B0B1A7C67C3FEA42EB54F22E9A730
AB8D4855BF8C7939094180813BD2E28A6186CED87E55E5EFF02256199C17D9C9
26280C366E3242D2030B576F5B789F741161CB5568F00CC22CC3338B8D2E8CBF
B5E858FC7178FE51445F379E6E25C528C84EB94938BBFE8EF56849691041C74C
AECABF8616AD95FD9ED3B11C918BB38D13CC8B9740C38207AF9F7F3A479B0D3A
6A587952E2FD4A9F3D13C5028D0F35B01F081084D92EA30AC2431DEECC682C28
0B4BAA648B722688FF72D47CA87D03ADBB9E181D87F83AE2F256EB21595E795B
727FD7B5FED0B59CCC6748CEA3F4C904C19B7456A83B17083469EE367CC1FD8A
1070B03CEB7FD7ADB4D72671135435609A235501E60AC3959B8F01FAC3F92ECC
CE092E50ABB573C1E165BC64D7741193D80A5D6A6D2E1E26746A94A779EE401A
8702FE49721AEED75D8566DB7289296E46845117CFFF22FAADB44F43BD37E570
D6EB12BBBAE986D79303CA403DD23205EF12256B13481B59AF282185C7CBFF04
361995EB8A11907B246D94B12617AB50EB5A520CD8B2844CCEF629A90D318A8A
0384439B38D63B94757252062EA44B6737C45B727194144093EA5553BCB27643
E0A3FBA8AF062434F273E1C58A786564ABF1C6ECDA857DEF70511B359F101A5A
71706506E71315B27AA869B9E2AEF564F58479DCD812836C9F7D03157B38AED5
81ADE56F84C5482816E5AF8026D15411CD48CC6C3D7E0E41EAF61191F504F809
1F25A923EA9D4730372E32CA0817B42639F594658E439E3EF1DA39316309EE92
7BF908D57E0BE99050FE4B198542B093900F05F22DD65388E04D1B5B2FA35699
496F1A11735968BD0E06478F2B489B0E9B262C6902E7DA67B70C5D841AF76E11
2AFB947365B17DDB1A85BC4D7F1088D410AEA9CAC3C1C46158F508D7AB7F99AD
D77EF0B1D9C5D34017A12D8C3F1DFD0B90AD438A22F579F2CCDB381F84343DDB
171D5983A2038DCF160C2BB20CC80B357152E49CFEA53498B4A8F79C7AA87B06
24F57F3E11F2ADE6B0BCF0115B22E5DC4AC9B7F548EC241A2E48906A5C032629
C85724CC1B73E3AB241E4E95C8D835774F57DF396B2470522A8AB97B83426FAC
81E5336F5A6B4E7E84B46119AD70E23350C13A50F6D110323B8E23E195810943
D04AC52679ED7C3B66FBE5CEC1281F967657B844532245117DF5BF0C4F6527B2
A51C29749149352262096BBAFFB905CD432197FCCE5217C8D138D9E07D4FFDCD
A4F4CCA46CBC2C0E86E4DB8F5C31418FFC78F94705CEF9340F82F0E079F1C720
0DA0E6977B036E69FC4819380FECE3EA452620DD0BA89EFA4209A0D058AA854E
2F401B2D22E3BD0A364F4AC9FE64C0836B09C674404C1D90035EDF5DEE6F02CD
D1781911E07C871BC80E60F4404F119AB730E1B4296A1545420E633F0FE9A9BE
A672FD8EDB02B3CDA24BE5B94F4D4C0FAB79CD0D3E7F8E7200E4EC76FE338370
0A594ADE0E9D59FF37C4F4E6E3EE2EC4425B0A4947CE3C4A3EE986616449FE09
4A5F9041E619E37CF0B527D14F008E134FA0711FE40BC8A9229310DA61AC1800
420466231A3E85E398E5E3C17FDFE6E417366DE2EB8262B9F8853186E6690AE8
FBC87D544F6F006C11263A0B11C7D838FB6135F9BF8DCCC03323F95C4AFF68E9
97B6F7BEF0C52DB9469CFC0E9E9A6D795FB5141392FEF6C3EEEFF10DA7017B72
F57DC4971A4859C236FD6CA218A1CB03FCB945FC24376A45F2DE0C21334C6CB4
5BAA486A85DBC2F45566226D9EA08B48360A2E9E089C40B2123936DBF7D6E0C0
43CD6D918C8C67320B294C2490674A8246B77CECFC66F3627E15DCF3FD645BF3
F57CA13C47550B39DF3DBC13329090DC59354FBA9C967004E9646515EB8FEF55
DBF964A5C2AA9623B8674A251BD6C2925E38CBE6CCA897724AE8F908EF485539
C3AB41B36F01C6710BCC3064B3896E28AE7389D260CF04DBF2284E7EE1686F07
9F72EEEE0C0E225B9E736C6771FE2D2359F2535FA1D1A508FB5023D07D392FDD
DE2AC30FA1C775360F8147D40CBB485DBC4E559069D50B1985501CD2BFFF553A
539F05BFD3125B9A52934AC46E268C7B1D9869B878D12E4DA9E19D723986D7A8
20D03FFBBB2C2BDE517DDCD66E0A7FECAB76E8F772650F2F536D06D382EF4843
BC4E4ADDFBAF8CCA05A4903919EB6C56385BD2E08D41269ED78A655718F13DE2
756FE91B306821064564822C8973EB8766D839FDFE58085B97DF00EEC3B04562
0491E2C870B30F3A593DA2285CC25AC742E87299278AABC24AE22C90AA37B1DA
67BC83A83F169F626C93CDC4277079D25627DCD5E40E3E202D71769340728003
953AAC8D9694308E210C6D89E25E5C0E0FFE02BBE0448CDBAA07A27A116C80E8
37DC740E86068952F0A57A58B081E05300A295431ADB8341097EEC40F28EA574
4D413D7BA779B740773A951BBA93D08EC234291027EBAEFEC2C457B2B4B6AD53
D22C67800381C5E71D4CA126DA50D2E441E1F68A416E37E251B808A9C18D539F
62B136D4BE92B916381A96F746C29009E46EAAA8A44FD4B0F85C52D715668BBC
03B92FF441FC74C7773F68111CE4A2C36FD9CC7A4DB07DD2708DFC10CC6266C3
D87FAD079E51C5280F51BC2300C56A6A6FA7700D6F6C131841B0ABE9BF754BD1
677B9620CC6631A369797125990858F993A9777160EE6EA3E6E8FB3190B7E1BF
4C2BD3DC8A87759D305FAF18AC8EAEEB99B34D37764CCA28A466731CE2BF14E6
504A1371463674793EB4F5D24B8734863351AE6E33F5BEB15AC4B184E13F3ABA
CAE9FD239256799A8590229E3D9A846D05ABF65DD88A0AA707E86494906A8855
241817A570D4732AEF51512CEF95A15B3E05CE8B543EA1FE96E19612149D8F3C
ACAE8959A260CDE3A26CD22146C585F89C83CFAB05ABC66A57FE153A4A87647B
84B6EAB895BA6138753EF23A95D41A8069B91D7FF9A6FA677F1EDFFB70E37A26
C6C3F2E101693C94639357A9612F5FFA5A474ED0ABB961F6629B9FAEC2285AB1
95D315680CF31200B31AE146E5363352A2D4AFAF5A38568EFE43E5DC858AAB70
CC2F2DB52466AF31CDD0B385FF4052A3424F1B7995A97253C8F822C11204E340
629A8C9A200FB051430DD48A16B1763750E44E585F4C8DA9363503BF86D1B7DD
E8B8CF683227F8217212BEC21CD1AFAC56BCC6E8078A53B445AC303B1FF6809E
BBEBFCD11FA366ED709A0C2579ECFBCFB7E7721E07C9503B4B06C6AB39D5755D
DDEB1BC4D04EB10CC0982B147D2297333EFA3C61AAF973165EC8BB8D255A909C
780017684C73214A1ED054FAEB7C41A0858354B42706AECDD9AEA75D3BFD9CE4
573E0B56214A781C61DC5E6AC9128ED85F2050488F50AA8B62B3ECEFB66FA248
14128AD4338ACE49C12666D2BCC82B4DA8AC924829C2BF2C24F464D9A5853D0D
8598B7310A3DD57B13D3C78EB58CF7FEF83DB06C685191B65FD609DA87EC245A
CA71106229B206E64E93EDAB878D4B45CC25E7E9A031B5E8EDD55D22DF7FE849
46DA2E708ACC998C1BB5EDE3A45AB78996EB94C76D549756D7837D8F9A6060FB
CBB8298ECBDB5E6259038F3EB85A73365E146D84E1BEDEFB59EB7338E7A3A97D
89BFB366CC044347E34EA72ABE84E54340FE82B7E0A6266BC148C5C31523B526
41B2281242D1E853972236127399AB85DE8B014AA6FE4866BB1FAB2FDF42E184
BCC24D9ECCE4287325A010FC44DCCA752F57806D70EABB203587714AB8BB89FD
722AF048CAA68E214A189C6177D8FC737272F5E2852692398A09633D0B1104A5
F95C1354C43A1D5EEBCF814CFF20697E1B67BFBF36289A4953B52CCF1C77B862
B9F111E663E7538F927A87C3FCB97298CC96C4F3C695FD46180C519916C2A57C
2909F2E640F9952ABFD4063F144C89C4FF35EF81584ACAD95CAB483C96084D6F
18DAE625C2B99C0E088ED65F67D42CE5148E2AB657F718EED93425742D97CC0F
23FBC88F8CD4E4AC36004C3C6EC610AB3ED796B8189A3F80F2CBC74B3713E7DB
04C2B33238B7AE78E0D3CF5FA0C95731250D6DBB1B6D2CCFB773F3B6EF4FAC1E
490B45FB9D507CD5682EBBDA4879FC343127DDBCA97812455A551E86225D2E5A
4C639E04D616D4C81A3F14DB93E5FA6DDE3DC471E1F7E955B7A0D5DAA3401B6A
9BA438C84C02E1F9C93AE270A5448B0F38289955FF8AF1B80CEBA1C8F911AEDE
793A435F04B0A8BFEE7C64ED52684C560561F8EA96BF0A4F3EF776206C228649
1A09537C57CAE4648BBD1EBF369E7696C8B79441C929EE3F21E983871D883DBB
1CC9F5BE250F123027EEAC691DE58725E85974E8A3ACAA54356EB2F96D302EF8
913C6BB60F9ED91CF8893664E7C2CCD757747CC6EA3092B883926850B4577DE3
2847B3CE5B6F1B549B9AEBB0B61DADB9598D82CF88A7DD5419F12E32DE866604
580CDC0B07E9F8158E4399444976F34F301F29BA4C8D85C255A2E1DAE61C8074
475F36FA1D9905A3E169A1A02B17E1E5A321FCC83B367ACCACF67E6300AC1D15
06D1AD16258593B2399A2FB07047B80849C0A77BEDA560ECAE3FCD7FF41BA15E
0DE68E33B5A3213250E4B49D16F7F31113D7BF4D56DCB5D04CF075F70A8BB95B
F53E8BA3FE48CD123E24A65B31474B6B70426ACAB0D723CCF35E37FC3ECA0714
EE63BBD98F84664993901FB2969C4996A0D326D478B77C7C9A5A7F6572497A68
59BB8B46B5B7ADD7CC5E36F02DD3CB381F8AA02414C2FF62583D166455F7821A
44C27DE7CCA49BBEB1B913570A51B2F96D302EF8913C6BB60F9F82902C209BFF
0F7D37498A6E2F8AC2E4CE7FF33F6D66AF83240B7BDC50E6F576CD581517EB4E
A159E151873BC6D6024677A39CBEF701D77D05FCB64F261AD82C49B8E52EFDF0
BDB775895C4746ECF87F40A23A8418AC94104A65B5891F67307481359D639B35
4E21F5E644688010B09EF1ABABB5EA4F9031F861445EB8E445EFDE8E014DBC8C
78B89D127E5DB62C8691ED62D06D9AD043A697721C821B58BE53678574253555
AAC69C4F5FDA21D1E2BBD9F09788C8877FF9D119C062EC9DB71DDBB40357DBF7
CE92380606C967D2C7AEF96871F5A379CAA95E1C0FD54698E1DEA814D34AD1C2
2BF3D7E222146343ADA94B54BB4F48600A144502EC6C0E97C248374359C89C36
A107810B33FF636E46D8D00FB39ECC497F82E037AE6F7BEF25F36D76863F1600
0383F5188E09A9E1B8C023F7E767D47023463DD07C26FF1769A4C8A2518CFEEC
51A391E6D49F672BCD4D19F6D70059D309B72D0A48EC241A2CE294CD18F73911
02102F0AFA75DD8A68E88EE24ED42DE3147E09D57FBC1E6470FBE00F0FAB700F
161669D83DEA406CE7237DEA9C6A7E52A378099BF1D304D358F15883224A15AC
5976AC43F6D4E839E3CC18D9D32FA0DF3E5C78FBD45D064B66FB7CA00ACD8904
70ADE4C92A8B67724FB63C713FA02EB81B166C4129BA5A34C57E3FAAFBF6CC8A
06C726F257E9972CEB41F0D250942B1B4BC7389985CB4F5A32031AF9C7AD1B39
86EF4BFA6B6804006224651DBA0CB230AB26891B0C4679B0963FCAFDDAA41110
E24E78A18E285107D3AE8CFF77C0C8845587C2149AB5368FF41481D6B8DE8662
E73CAE558AC0515042FE6B6B341FE71E4A756B1388139A898B651D7A5B67C2CA
F198CEB491BAD552FD0CA912D7A12E6590BB5DF3DAD759BD39211540C0297FC1
BD9FB9D2B58A91D9E23CC2D3995C6C5A645EF436498CFC3ED5156D12DE48F081
383BDDCE027F1E0911D11159D19295A351BA9BBA80822E250E98F4380236E11A
F484E2FD67C1EFF5F8CADD1B293C9054FE6BD3B4E61241A28905F9DA8B865DA0
CEC5322CB00DDD80ED04EFF4AA5B4A7256E8AA19AF3AB36D9BC6BBE383903778
3764995DB334ACCC85DB3AC6577AC6801580D63C76BF1963968FFA18699F292A
DF54BA19904BE3D91A86226A3B6AC16FED1C47094617BB0EF98074CE6116ACEF
6302E40AD2588025FA4E99C1DB82AC245B5134E71C17177E335A189A0FC7F812
48FDE0B428EB05FDD26BEEDF3943D11F3E57D57FD88107643EC1A422244B1F2D
267E4CB947879931A30D03889EDCDD324E112D5BEB28766C0B807B8FF35409AD
6ED1D2D72D9F57A11CDC27CCFF840792065DE8B7C06A4AE4F16EC3A864D83862
DCF9B71A8FB3A6411DF278EF35BF4133E260320CB39E191970C0F0E81DBEF33F
B01400BDCF7A4BBAAC2CD397686834A6BAB96EE0F340C29D40B176A4F5C0278B
395CE3A2CB39AD3BCADC8D66BD6D376C4643295F769C4B52529A054F6B673D04
BF97E895929653513BC23A2AEBEAE056BB36132D39A44217C0877051CB669FAE
D7B154E2F75F2F871443DD52E452860C14A6150680EF84597F1E5486FD79F660
C4DD1E0E6D559BD4B457703BF4E4998623C743B746D0EA5D7548A7E24DD207DE
9B6B16A7D5E7CD460DC1080040F5D3F5756B8652D02E450911B9742ACBF78758
98BC2950BF59CDF512FC14D9AC7341D5046C96E98C17C37FF5841386F93FFC89
357E3671F2D1F17FD79BC48A778BB8A478B4126775A74BD82F64ADEEA9F33FAC
D163B1BB85160C2D361E39FE966AC1214E4DA30F2D2AC515EEAC8E075785F4A2
22D580DFDF477821A9913516CB0B28F80FBB493FB576D293489BB97B6DF21520
4753DE7C4A3FE2B2C1F6309B7F91E5EA33991B1A04499E6BFF161C96F51F7850
C49177AD0A23CFB7F631E00CC979AD410F813119C4A87512A01938185F1DEE52
D5F739D1CFDD9459D56F7434ADE0D8E354195A2563759DFE0183C8D67B449516
E9B0A653A7428F28CA6FC859BBB8440376547482A1BB7026C8F79AB502D918EB
10300B507A1972441590EB25F0F68F95DBF00652DC3FFFF419BF24ABB01E9C67
335560F956A8D2E421E2A0CCEB2AFA2FDD93834089E0C8B29C708EA7A51648F3
E80D344B5F7DD915AB7188FFBCE3A848ACC946C2E4E79D4F3AAE440A1F525EEC
2713C0767F727BED110BD00B18235356314F81AA06B640C28151E25222D0CEC4
5CCE9134E120F85C107CE5E670014BCD38197267C38D64411A41FB44D0687B24
A0069127404ED87C3FFEF2651A6FF898C29998A99E4CE824A072AAF76EE3FDFC
11A7338F380927E5F20F65E61032E53BD00CF0447AF999FE0159797AF521C06B
9CA7915AC36C9EE085295268FC2C666FA0A35C4C8596AD22AE7F7C5F36F105DE
A5FABABE7F94C0E09E6D9FBFF9E42091225BD1B2659F6F4186EAF63F04F9415D
7F1CCF81D513116A2E9E694B85CAADEF27878C1B92C19CDFB8240F2FB9A930E7
E012C0D2FF6DEF4366C1C08E0B09855E04EC3BBD8CB6B5923E9708CCF674025C
8D120FE3ECB4BCAA7CAF9CEF0C713A8778C8C392A02C263614D142436C0FF38F
25E56D1808DF076B0AEAD03AB485F43DD669E9F6D78F7F3A3ECAA43AB927F3D3
2B1842C362C65CFAF72D25E958FD57A00B955FD8B9DF74AA62D786A28F95223B
0DC0A67441406EEEDCF7E1E1A36E82BCB10E5E51B131A7CE8E5023F76F7F23E2
1C499ACC7B5B6A1A3749C1342AF400984E59266471F1662AB779230049079D9D
DB03E622B866558A5413514C2B1A3249E83C9B3BB09C5FE38C7AC82B47F32185
F61EF31347E7BA6F5053CDC3016406B2BE245A9889D312B3C0056F607C2F368D
C2FBB2303E5FC195A7B81A7A1AFD423B1BF490E4400E6BD41BAC278FE141F4D2
815C1B3331DFA06E332B681A450A2957916CC7BB0BA63466FB2E3AB8CE7FECFE
016537A52FD1A6086DFCD182F6EFB793A917B3B604271FB764FAB871F7AA5A5F
CBAE6C6E38251125385AF1647A4E4169D825AAC0866A04C05D7F467C9C8FB7CB
4BB005BB8671736BB7657CF2A70120505BF7D84597813143C60D3D1A515D52CB
8732BED9816EE445B809F2ED78ADEDDAB3DA4F96E2A7FE57C46154289C06D334
86429269E12A4FD6E5B4F65BC8E138F72360B2658907CDACFCF46AAF3069248A
390734949FF5891C582F30C6DF5FA2097A078ADFACAE547DA5926E49D2F45623
D0AF7E21A589ECF73E8ABEC3C69594738E894EEC58B17BF3510521588C8BB168
60D0BAABB4316A10585E940A10EF9A7C4E085759F390036755C4BFE975C939AC
4A0FE3595C5D7E2FE528C85539D2FB653AA5B80C45547FD016B23D7D892ED892
05C0C868624A3BB535CE7324B95A1FB9E622B8A38C1EAA3C1A5ED45896598419
25ADC4359DDDBA5C60E652C56774C3BE26D9BBF64847C3FD4727C747D17EF676
D16194AC607532051B0A553311D58953D92884A170E947B956F0776C229CD623
28EF718ECDBF57FDCA9C4B03BD7F08245D214B47A53B80C0AF99AD224465B22B
79CABB0FD1BFEA16E9821CF994C720F98A59ED5490C023D632AD06744BAE758B
478E2E927950D2E6FACF2BD7233CBB87E5C317459026D56286AE547BD02A621F
E20875E13BE96A55B5C8917AF2BF8E76E70CA73F56465D1884DA7352778E7699
1FE2017A370367BCA80221231412081E589672303F7802341E03E41B28291E8B
55DA32E655176244F4C236FAAC8AE4488428444B323E343393E9C4AC0765A1EA
3F54D9375A5088DB1FFEFA4E12238813386C29EB1CDDEFA88B8C7F9EB8747C99
DB1FFC66BC12E3B276E4DBC1FABA04
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols6-Regular
%!PS-AdobeFont-1.0: LMMathSymbols6-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 417 117 0
%%EndComments
FontDirectory/LMMathSymbols6-Regular known{/LMMathSymbols6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols6-Regular)readonly def
/FamilyName(LMMathSymbols6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMMathSymbols6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-4 -948 1329 786}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F1E34D6494BB6367FA2B172011486EF5
844F5B89DBD01F38E82689CB16E2BB46A5E39043E718382C77B554CE0F5BDA45
B555F543B5A4669091DF58B79AB8A54B63C4D96C02C4B32021405D3A086D8A06
2E73A4A478789C6E51C058FDFA980ECB2F964EA385ACFC9A15416BFD38DD998D
35255414BABB9C6DD923B8E866EB22731B625EB76647E680B79EDD64B5B6D9B0
ADE8F024B2CE77FE9D87C1A1286ED288D3FC51CED96F6009F87E505A8B9D4288
4AB9134B8325BEF5BF60359BD06C20186FA72EED84622454B0848BB74A51C541
E9F8468308E20E4D41FE78074ABBEFB80E7B5B58641F660CCEFE5A36C7E1DCC2
862B5005575BF1D4A7845F976D9A52A7E2A33558953A65CEB6601B904A42E75B
92CF31D9B57842CA62CC666700C974D6C7B88C4E3D1A1B143DAE1E2DDF725758
E2E6EB357406DF364D2720E373DCE143CAD7FEC1812EEDFFDEAE20D75039850B
0314C68931A618291AD30A299FFD982858215E9CB25FFE9A6A805EFEE2B01B62
8A682DB0C011615552F03DB40513901CE59ACCFD6C2D6F05E2B6C8AAC7EE97D8
80BE1AF192DE2AD3600CFE96D7F2280FF1D7AB28635B3FFE975FDC6329DEC300
1F56A4424DEA4A64D855B319ABD08B73E84F536BD6331778706987D7AB15DD1A
4BD7C272B4A0B383C6A680B6AB91AF0A3442AA8D1F163221902D87F9923FA77E
3346F09DE23C25D4CA5909B956FA16229BCBC3FF36EF6933F33D529CF2847EA6
D3A482CAA539ACAAEDB0299025B307CA410FBA6D82B4733763DA07D521E34DD1
6523917F436B78AD360BAABDF2CD7016886C28EF390A51085691FFA140FCC6C5
1D7EA07BE7F71EAF563D92056FD6F12A603AA2DF6708C73D283DDD92B043ABBF
3DD2E24A4D5FF0DD4EB111616C102637EB49E17B440AC54D21DFB7B2411B2B72
CF35172ED4505DD175A836C0B599415C638471E3F0B4BC30296704D41973F487
D4C1B50A848F2E8C0A77E7FC13B044E5D336C31BA0F189C36F9D48CABEB786FE
A0EA4CF0DD9598A9036B749049229902B646FE10BF4DAA942280A326B0C4356B
774DAE57D20990968A49116A09BB7F320F0CCD98F2F7DF378E1BABBCA65215C9
F425C048AEC1C929FDAB375F3B47EC3157488ECF3EF7B3069EF25ECDCE357DC6
CBCC1EE0BC7AC38FBA8107608BAFC9DB86B570FDE7E6248B6EDB4ED358D5C45A
FF2A3ADDB1E2963200F24C20A0D1CA998BD258D1C694069BBD9DD80466FEF509
9993B56E1544A2EE08946129664626F0AF9F7E546F6AFE62DBE7DDD5D3DC32A3
7C5BD00DD016072EEEA098A86BA7B6AC9F23CF55920502D0BC7EFBD5CB140E02
C5A8CC261C06A7EF3CAD09AD5ADE65A51B6A915CA708D66C339EACCC45B962A6
7731C76AC98678B54E6E3A103D82F070F486122EE08A4870456161458B6C93A1
602C336D492C4F6A7635B85ECF70EF5733EDB26731D14B304EBAF0638AC6F539
C21436A7D25573FF22A0D0A0D452A23F35B688B79D566F17691C3E15ADAE0B32
D5928724D303A23819484A60305B58B88920CEA06984C65370B5ED6B7F0EC00A
2490B48D7DEE3A263A115E406B099A5C0C9572859C117C40E1883818F638FFA0
C81307075E817AB54644AE5B5CFE5D573FB3C23F20A445B43A5E8B41778D313C
FB95D5F337FFD07328565672AF18C2E86AFB4153C60473DBD16C9D39BC08DF9F
8ED8D4C25DA3D8A4FEF6F2E4C954C562318FE8C3B8A7DBDE8F82AA3AD68BF81E
205B482B0C4AB50BA6450E56AA8DB6DB7E2DD93B4759A32B6027EA855710C966
B7B3541BFDE160447700520B9C18B41BD46A1F8EFF45F926B9E1B565C0F0D458
67
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3D6A6325FBC87D9D0E635AC2EE5069D7F11D65E7B61E
CADC94CCCE89FB906FFA6E784E7D58D0F717817F3007FD7A87F53AB40E03103A
5A994EF4A4B82A4CD3AF4410331B1A4F64E4BC682C4552ABBB7A7AF1BA2BE1DA
62D42F448933911C81895DAD7D74B8182DB648FC01DE11C0F21F65DBB6B481D0
5C69088A0E19A14AAA9644CD1D850C6AA826B223E36E496B79B2C7384BD18B38
17C4B95C493F0DF9044517835C5A18B6EDACA49FE842BCAD47D03CBAF47C14B4
B93BAD310343816BDAE9E45A690A776E288BEED7010ADB1076B23257F9484960
9B14C8D1F96356661F43F7ECB1CF1480CDFA710290A6BCA196798F6C6054F05F
09CA349F60F4C7D65FA9CBAF21DC1BFC18242EEBA6A5AE45421B52AA33B201CD
60D01E56D959600E3DDBB1E00F77A025329DE55458EE17551D5F34BBF7FBE754
C780FB8F73146ECB5A245A39A7FD55D42E3FFFE439D20EF38EA4183819335015
CF65817532EE73D71316F0AC637F85D3A9743AFF92AB12E18F4E797053166FB0
DB325F71E119426B403551C0BFFAFCE6B05E537144CA3F6E7E9586FC9CCCBE1B
FF77D3834607E33F7301AC5B13C3896CCC8C2EA7E6A19A68B64EAF236A3468C0
F9453189A1D67CC8572030668FC456B3334F76E5910578DCD4A83C7689FA12A1
1F62529180060272B7EDC9492C1FDE14151A57D02371497BA21EA208A185D6B8
2C973F1C438C704EABA8A055F8A2E33E28344A7A9EC8F2CD1BF58C6C51F6431D
E0F8FEB6C3091AFBCAEEC0FB3F3A46C68A322971F6A0B8C2FA887BFD5F3B2C23
FCEA72934FB0F37723C0C4BFA4DFE3FD4AE99F5A8595EA8735A065390AAFDBA1
37D3B30AE2D428B27933780412D792988A989C16915E134A47A4A117A55B66AD
F5E352EF520AF90041D351B8449401B5333312F37DA8BE2B7352B7BEA2628D87
4BA2A9924DD9A403B1F7B8C03F8834825060097F70B3B928E4EAACF4C2CF4E3B
389616752FD84BAD4064ADE754D1BB6DC727234307F31D7A7EB0EA75695F6354
5F63FC8632BD6D34637DCCE4848D2B85B6851AC5470A33D9ABEEEA2F5D5DC613
C8D2D5BC6FD512B57DC0FDA3836F20FAA0FE733E0268EEEDF396D911FDF63E67
4F0FE7678C65A4947BFEF27EA50598F28878628BAAB6AB4F70EA6A65247B037C
EA626EDE4B52ED3284D50E0A229868F59B1D93496020A42272D48907255C66C7
2B37ACF505453DD211AB49AFC4CB5A3399792F10CF6F298ED60B6DC247785041
1CB24CECBD557C6216AB7A9CA8E105DE4FDAE1CD7B840570BCA9A5C082D70053
D76780593C266E0BE203F79152338691E9E01A81A77AFABBABDF37C4C2640997
818637AFF272E40DC217268713DBABD16C6A1B7BC0A67FA5E28F8CFC8A067E2C
E58DD14A6AB6ED9963BC32CA7995
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A1106511131B431B653CFE8F8B34E3E1AE0C55990E
ECE2D624A0A5EEF705D04543B9227C00B2A126039CDFCC5990A998A720CBA4E2
3C0F133241F0E6E3D34F7B561A25F70102C8091D18161CB9421DE1DD7BC5514E
AE84B30567998B58154582EA2506E7798657A420F4AA92EAC4D3723EED99E362
A2A871DB74BE5191EEEF65F8BE2A2F2E22335F3DFC68DFB13B165AD780E4370A
A99FEDD2330B2881D87A4BBC6A705A9C77B525CA3AA837BF555A0E2E8EA5ECD9
D3FA5353E6703EDD25BDD44BE1EB6F65FBB89E23E9B06A948F465C9358E0CF2D
E67FE22B3327093E1BBFCA3FB515D755943368A9554B60AA09E892F91A4B3291
F217BDDA669AFF1099E3D76D55067C591328E391BA09D5ED615803F7ADC6CEA9
1AB7B45CA7AF8DB57AA513F74A56C76043E1C72403824E78613C8972A98F61A8
E5480CFBD7570E6AB5CC9A07D4E0EFCE364DD002263F70481C50894B3D6961D4
60C98A8F7C911B616DE897CF569C85F742828DBD3A572B5C21DFF08EA7AC1089
3AC143488EB42B699CE80A7F069577F96C329B88C108B4506841CABE171747E2
11861348BFA5BE91BF9F3ADCCF2DAAAD831000E27307D6CB2AA6ECF5F929653C
602D86269470B08D8961C227C63DB2AFF09B42ACBF716407E9F63873237D1523
47D3AA2C575D1C08BDB27DE9E8127325C87E3842D1ED01722E83609867A0981B
A264E7B739C4088A25F551F578189A3285E4CA4E1A158E799D50610BA45F2003
568AF44E2EE4DF2B734FD72535354246F33B2E2F7F4DFCEAC871D46DF7D165C4
D4E6B00BF84FBE6428597412531988959E07A697AF52D0FD3F35390405D6A9D1
6C8682CED47347AB01B45966A9F6C2FDA093CC4A456136B6AD2D6927C2A726CE
25814E308764700D33398DD39A557284FA21FD70B383BE803AE6795B23AF56AC
D69EA28D257E97A14969834F6E51837EB3D497E1CCA4518DD1E541D723ECBF80
FF403565B4A26C6C283C747B980AD33877533510D63350C839F044ED6AF03CA4
415C2A0B4BF9699DF59CCD03CD7819748F082C19E6E344040E889BBCE8993476
59CDD152A758D6237E52C61F0A261708AAF92541E013073FCB815A2B83CF7E2E
382D89E1EC21A9429823F083D8DD40C333ED47C5AA350CDC69EB0AFCE824D627
5ABBA8F5B93733B9276E3605EC5910846946C8345AC821A323AC91474BA2A050
881F0C1E9BD75AF56BBDE24109B2B136AD0292B7A2C9F352DFF83B4D7FCB6B79
C54E4F1776B782CB43B6DA16D96BEDA842C9B8078D60E5FA106E3980191831FD
9E69AC60D04886D1063742D723EB1C06B948E8EFC76E45EF546CAE548825A0BC
A6BF93B0B1373AF3E1F7CC78C953A0B826E47018F8212C5594C697B288FABEDE
DDBA75880CD30B27909CC8C16F3FD2AD2679E81E9FCDDFA1761BD627D86E69BD
F08C1356CE7692CCDAC7BA8D326A49A911B39B929202AA5CBAE5285DE1C82D60
6AB2BCD7AB93A8795AA46773CFDEA403776E84F07033488B1949EE5029CE15CD
E30FA4BFECD54BFAE64D32EC3EB4B6A2A82F34478E7C279D48E87709983E300E
E9A5BF4E928004BD90C2FCDFB6DD8955D2C126F05A3C85F4400A796D49A47AF2
111C9A3A61A03EA906842C86B5147254A6EB06C3E874B88A2E48E01ECB58DF2E
318B41923E8A047553D96C8FA33E8CAD54981D7C999B88588E3BDEA834A3B0F6
4592C48CA7454EF08A25B6B242E36DAAF1DE150D2674F3524586F868EDD3BF6D
DE186C3374415F03766156316B868A7050D043B09368E43CEB4EB4ACAB454C6C
B74F0F7489A75015AF81B45F690AFD82865D0FE2D708B720FF3B89E7705F6DB7
EF310F0B6B8330BA5D30D28DA13B69823F9A3135F0169D61166267A3EFD62BB6
F264877D19B483EA64D88B56E6F9CEAEE190D7EC4C28CAC7D5575EA28302C72D
9D030405FC314AB8A292D5A2A81BF6562ECE8758E4BBF595E20149B25835D197
91F80570C8EFD34FDA3CA9C2B6D2FEC2441EB99B4C0C0FE29E6DD239D2F234D7
1DABD43C463BD0ABDD83226C25C32643FDA7E4F9F5DA3AFE742657095C9B3870
4024072C5FE89BE9DCCE26E345425DD14EE2C844A0E1323D2B6F0AC89ED75A8D
8990BEC28E06EE909DE8C5040FE630E1FAFDB99DFF29348A9B5C65E2A540432B
97CD7F69F767A67AF3BAE02C93A09D7F187558084D9CD408EF7FDCE23F465AFC
AA8EAFCB7108ED99ECCD9E762A76C4BAE4535B1FE482078025ACBFE0C0E5F2D2
42B83CCC05D2B4BC05B37305EFDDA2FA6A9FD41793A8303B6BBCBA18708C378F
40448FBEB9FECFEFFFADBDE676D98DD6204B3EAD5002C6D5EA808A251E388C77
C8B304AA01866255C1E881E934B61AB96148B87232D14B426649F338383587CB
170B7863151331708AF0D806823923CEA6F87A9E3425F1BE0F813F4243646787
89109A668E707C52E55E98E4A7AF1258A15ED5674C3AAAC4CAA8344432F60E73
214C5747F1FC0A88D9E1C5058E00713382AA80998DACF6FE7A3A2BD3882B5E36
0EF28E5C0CDE4E87985E91FAD6A3E7B3FE9D14C666419F860F97BA62BABC6894
FEB63084F15636CBBD065BD7A4D212994D643758B7B210BC4E6CD5B400D9440D
B8DC20E0F188386EC80B61711193776DE26EAC8E77E8B903C4CFD1C479CE5155
6C68D92071044ABD2430C1E030FDFA52A4A0DD9F3ED61F667B7B89A1D5251D27
0D0D2D01BB54631BD38C0D833343743003D9EBF5AF03297DDB123CAC7E399A66
7E12B07C65D79172DF1A3287C670279D1E95EEF85AB528E8CD2DA99E33C7EF0E
E9DF6009694A325DFD34412EFEAF168510323ECA1B860FE5351091FDD988F5D4
C05348B811342DD3A2B352DF149C55124C58E6471FC04A203EBD502D6C566B04
255A8BF135BD8E491D8F710C5F31260C5AD761E6DF3CF6C89AE480296EE177A9
7F5C507FFEA387ABCE01207306D7AD5AC315BC0EC15C46AA5D766B378FE86691
BB1283618D234ECFE8B485C5E930791A3E891A8271EECC4DB35810B23AEF6DB4
38D587D25A5AF03BA09CDFA6EBDEFBCA00A47E7C02DFE0D55DC081E8B58F2F29
E19F7D715AD567F556BF41E97668D569B2BA9FD4066AD925D51BAF05CC288C04
3319013BDBCEFA2098218C07205E981A506B03CA176F95FDF54DE5000FE41975
5DFBFF352909153E0907916879971DC0051A2269832861BD92CEC36AB20C5E6E
64364A9C461FF4BE14B575EF22D9D95BCDD716FB3F438C9530616D0DEEAEDD11
F65FE0F14DA30840B1D86DF4B2EC81023B5B9E354CFE201E2EF62A92899AA25C
2C92C8E401705B8508609A854BD22825312CDCE404591317688C32F9B8529C4F
814BA48B668D770904DAA9D0457C936D03766AD21B459DCC42B0C7BDA6BE7764
CAC582CEADC77DF4CDC435ECAE7B83423198A06BEF117AFA0B65E7DAC732D312
E483011A4F305AB1796BF596B272296259860AAF6F3B69EDA60B24ADF87EE81D
DAF1D41C0BD76D72760121B440843592F2BAAEDBB71DE28DD3EEB9149D553348
2274E270C57B4AD820551087BC152E862DDB4DDF119054CE9A50E7275CA52549
2743920C7ADAF7DE0CE5609F7B98B8D14FB6A253E70949380036EC60531395A4
A137C08089C62EE37BC8DD315CBC30EC5BB8EDDF6CE870E720C0683176F4D1CD
45E138CA96F307F59BC1243B45A3FE34796151C7E7ED6B6D8101E4C2A02D9C67
7A9B55FF7D93709C445B0CE59CFD89084011AED6E918BA1FC040AF07320A99E6
98CB7816B2327C6BBFCDF43ADB4E5D6BC038873B796B8CB995B03EE89D82185B
3B4E77769007C7BA48453861B13CC921709810ED004944D4B18526D4B875E133
211F81404A39FDB273B64ED685BB2F05E6532BBC80581DF7CF480ADF9E9D8BBE
A3ECFA3ED46C2DBA5CB6DFC297D100AF9BC17825D62847A988EAFC7B4DADA774
C587C3B8E6D1DCB67230EFF3F206ECA7D35A79B6D617CE42B9AE2ACFFB374247
724A3901FD546D465B4A49473D1C57114767FEC20D2DBA71C87061EE8BF523D5
911BAEF8644BB6FA6C7B5DB4598D76106609CC1A998112FF0FAAE498FADBF801
CDAB652D689B9FCB7E7A236C3C4CB242AAD7879608163AB9DDFE5A66C0F323F5
1056DD1DA6B2C68F9DDEBDA11AC1679CA6DA215459EFC7892F6C2DAFB51AB738
6DEC1D15D3C2451F797F2A1A7ED95F5B6A74A5E584EEA50F61F4C7048DA734AB
912E238315325F66DDE461BC6B773D779AD17D7DD9AB8A730C0E99E1D5E76ECE
D3A2597A37B05787E55B878800CB1EECA4A9775F8C77E6CB71AD1D4058AC61FB
3F135787095ACA9E34C45BAED9D91FF93DA9079C9F9779BA57A01541463FEF58
020562A57F0E4F5DB21414CCBF5D498496818C244467171449C73BABBAB53F48
9B1A4C389D7D9636805CF8C33334E27B52300EFDB995D5AB49D36116364F6521
EB538AE28E6235227D5C3994BF5242FE6B6B341FE71E4A756B1388139A898B65
1D7DE734CA552AB2211E6DBAD7D7931CE6C467F9CB65F03796FCBB73EB127855
B8849431DA4E0D14DE737964EB1ED2D1F096CFEA5DDAC81A713A916CA810ED3F
E5D258EF6B5CC5A19A5DA11B6C2A35FAC32CECC0BFFEDE9638C09DB8EABA360A
BADCD32C16E9F72E3113602B620286C412BFC78C427E0E6DC88B862819A7C24A
9FB824626E8D726C0C76B875FF4244C04B839577AB8678D40C3B58D8A7F65D9B
A49E0247C276ACE445A0B5C75D5B24CDB8B7144642812FC3C2B9A4ABC9F2ED78
6DC4D0E02F1AEFAA8A7B2B96971E35DE1AEB648E3B6999DB5E1A4CB1BF6A6F67
F27976C6BC9545728F3AA84172836F7EFB4DEE53DA4922C8661BE65734E1DB11
B3A1099A46ADFC9FD09C33F30F499CF5DBE572B6B835BE930D8CC9EC66930E55
33FF3A7328F0675312EF6A87BA10BBECF72DE976D89E57B8BF3BF048E96E8E32
871388884D5B37EDC8DEF2EACD9C3985BA9ACAC69EE5D2B8317ACFCCA3C746EA
F40469E99A48A7862A1246B6D07795F57E55509CD57489F07188ADA174330F95
C106AEC2A3B9AF517D87492DC2BB9C184A5F3F918524D3C90C00B7F86166C6E9
5B3DE3978FD5D3F56F40252C78267CBA7931BA7412D4FE34E8A9E00422545CFE
3285AFED58A706C189700C3978534525117199999513478855D76CD3E8D71EC0
DC503AB5D1B3339108E2D9247B4DC4100981BF33DAB0ACAA5638FA670BD5B45F
45C3630465995F1C87E0C180641E8C2B608D98A273ABF96524385F038727C294
D6FC7B8B746C4B214A485F9CE57642F42A0329F133771B40D48806F82B4B5AA6
5A7A9B6E99FED552E9BE63B20E55FBCA0669FE3E69AA008701D70A2658568969
AD6C74018DA28222985FAED736C8F465913F95551A81FCD76B774DAE57D20990
9FD9AB2095A39C74183F41E46F2C56BCB59CE6AEF7E9165EC3597CAD54D82350
F8D5FE7D4AB6D0AF0BC5CEFAC0C7D54876D3FD2B0A21E719D5677DB0E64C7650
DF6FDF0DDD86F8E6A28A5AA2A6206FBC132F4ABF5BB7758DA3D0B650D84B73B8
B78639682E6E875505C918F3CFDE4A8B71B870C2E63B9A4B595AD05835A542C8
389853B39E329DDD1D3AFC618D378D9885B376EEEF01CD882063EAF645995189
69ED2DC26C28A403BB382BA2C02E9A974713FDC805C5670C1293418EBC442052
6E888C0E9E815A6B3AE059838DB2EEF382D5AD4843D4BEC1CCD81D28BEDE22CD
263C60160BEC9FA8BABB065DBD98809CACF688526394295FC76C248C5EC3CC2F
C1CC894DC95D118F3C68E14311D9358916E9209FB94994F0194F830D02D1662E
B023ECFD1BFF24001929DEE1D2CE4A40EC3C0E5C70EF98246C20BDD70EF02E74
5355563A309B022629167664E7533AEEF54C6A6DEC9D5D6697D339087BF78F14
B0E819D643B659F742EAF18494A25701DD67593CC09B3350E40689A5BA6F5AAB
F3E7053A607FE6FC14F3EFFD282311E889CCFA7519DBB19F459397C866467405
422CB32B2039907F8C5F84E3E7781B5BA3229551B19BAA854EDE7AF289C24BD5
D031C9064826109E42D0FAF6CDE696534896406A8A5234A8AC19BFD534685C8C
E317225BEED285D6C70FB97F26245ACE938625651576117EACDA8787FF9BACD7
8AD9237044496B37B69DCB6CFE89601B616B41EB7272665D7F17B86B4C6E891B
D82B3A36DA8CB5E590F9BBDE89001BB2008E75C6376B7EC8556845CF97062549
BF859A34ECDE8AF4FDE5A511B85B1B6F95770B364CF19DEA920A1DED65833D93
BE483587132E7BF195905404945D7ED18ADD64A0A7AA4FEFC07B7FE9E74C2345
BB233B419D49C3606B11B1FA48EBFFF998B96AB3E3E182E29B819FD861E52B04
E00AA38E91B7DCFD58902B637141C9C3FA28B55B1B5A21BDBE59FED023089B73
198CB56F38BACF5044D989BCAEC86A0353435F46538BA5C30C185DDB06A284AA
5034CA2A83C2FC0636E1560409FD893C6DF3CF208C7CA7B20F2DE590445F1090
7355E926ADFA5757E73CF123CCEE639F27F803A242DE01C8F3F2353809B5F210
4922CC21BD921230787CABD0FB7DA4F518B81FADA81814332B622EB79AA78809
31DA86BBFAFA13291C28312DDCB7FFB35DC549F7B956661666684C07055FE2A3
B6D81785B7918E76E4093FC6A0A62B66FF1976403B8C17B6DB619D0DF87E531E
1D635CECB8442177468B4A69E269481F40D0047EBB22E02DFCB88273A36FA3EB
C622FD1E0B5232FF2FF82D304AE5BF50A969796BF3E807C04A3B0CBDA9FF1FCA
4AFB161F425FC7831B3FF7FF114C014E1DA800226FFB00764778CC4F1BED103F
EFA843D27589F03F5D0F465DF6F9816F083CD0FF0CCEED915E6100F9EBBC5DCF
39D8E6BB0700B3017DCB69BA78C33913BE7DD4FAEE6B6C9F4F00E480335E0F5A
D843442009A73861FA00291890482B8DE3E3117875E5A6C4CA5333D961386F3C
0BEB0B0E360A3343249D4A6D0E961977A50542DEBFE49BE6CC438036AED93D9A
FE101A217D1E42CF50466C0470B236BCB74B3C640C7DE47E890B58304BA8A338
C4F7B3F6AF0D13A64F1E02E9AC1FF7E519181A551912A89D32739DF1D3BF7CD7
DF18EBF95DA0112A1675F9914CE626DA6431204C74CBB662283EA2CB6ECE059A
110CC3AD0D6F2A44A2252140A842EFA89495E73A9F1990A0DB13C2E33342D40A
FEB24E186AC1179916487A929DEFCF0103834714C42B1C0B53164C8FE4959082
927DF994271B1F39BB29575F0D72916AF4B384432878AB3B0BFD0E16918EC392
455628EA68EA1B38C5B4D2895EAC9E9F4FF04AB84C2CA21C7A5FA4262DD95327
F58B3D69370631951C63F5EDAD91D89AD5E9C9A6A5AE154E1F17C2EABF78FAE5
07B995A825FEB23D3ECDCE85D69479BFA4CAEC5CBAAF436A135BAE31A8ED3AF8
897BD192084FAC15BB899892BB6304635E20370B0561BEA735EF7C35FD568C4B
2107E8BDE24BE9215FA7CF327CD80AA9F968A0CE637E8EDBD893B6F0E532C511
018DED92CC65DA00725B74747D0632CAE05390CBEA80544BC06B8736786B0689
5FDEA2277BD88388082E54DEA0654438F36357E82DD0F8301ADCE8052818FF28
0C63B8E6429A8646C167002FBE2E18338B691B62C6CE8209C642C88F642E2741
24FAB713E1B051631DEBE79B3715AD941042EFD4976ACCE231CD7D327BDC7B8D
4D86246B3091906127EA8E50EFCA3430DACF7293E98DCC4745AC6826FD1CC653
E3EE6D197AAF341EA20D44F2E50F091E00982F4FD83A14682E0D743142FDD178
21A60CED6694F025FED299C4C7F8B077C2DACBD27AF24E4C7549D9368741A553
97560E0BA139DA8B2F7BA1E454EF28C6D432330FEE56133F3C323F865B4DBFA0
C00767CE1BC19F391E08E575B2EE78E04C5FEBDB6ACCDC4C0EC8DD28775C5765
A293D8832550A07BD9D1C2DF33C45955EBF49DAC8DDF42FDAC98A43C0D3C8593
F2ABB41DC86E8ACD2DA44D0874FD56D3D5903D85F35CBF76BC8541CA163F1109
8AF3B81D2328BD648CCDA44DB60E8C41E47009E12819445BE9240D8EEFCB10CA
128E8B9F92DF36A224FEF55B06A6036ADD54CDC87F9D25876644DF362D3AF00A
C044A759C633970514118193C5E291E38B2A0D3FE03EE61C774D39E1F2A3D374
AB25B33CD03B4F4FE00DF185FA99BA638F1E44ADCD03F326227FAD7BF9DA2CAF
2834CBF79C38818226FE2A652AC7CAE0A878CFFA8010B75004203E9C274FC1F0
F59D7A86D619FE049F1EF8EDC3A3B494F3809BC20E03E4DA37DA7FABD00C05E0
F90542E9E515490079815C2000B856C14AC12D7507825E52A8B525D25B086A6B
5B8D3FB6D387FB176FE602513D158B30253C166B90C47B6B6ED24B0288F8BAF1
BECC8AA5CA60411CC615B9778A9B58A168969D018429B0F5007CEC5F16F1CEED
FE0241704A66122055DBC4CB00A7D5CEC13C10254E3B107E483D79EF92C34680
5F0DFBCD40404DBD9689044B71F710D0D5A3B77A6480E9769B063BECEDFB1567
439AF718D3B7B02416DF5DECABA7AB1C8AC33B498F8F495661C0069515C10E97
9589DE9C7D24D09FF6795A31930D91424572A24EFC245742B43E9FECA493F99C
E2D3DFF0982549271B429927D4775BEB5A14532F6AB4CF487FC29101739FC070
DCCA88D2BC7DEA6E25390030995DBF48DBC939DB010332BE7D2DB9778C30E113
247D7E76DFCF5AA362A030DDC31B704A2596B7ABEAA0C996C889BB23ACC9A259
D07B46B7DBBB6ED76DBCB40B586B24DF294C5D3EF840B9639C3177236314060A
5FA72E2B963EE9FDB766C58156994546EF67CC08CCB25B2BADFD44E109B59257
E41EABC03561CD9EC4FB8F6A0B379E53B1A29D111EACE33D9328EC9490AD5319
28E5ABD548869F227966EC96004C09C4D8C0BAF1DEBDE6D10EF49349387E5EA4
13F07753A841D94276080FFA7C50C69E7664422E8EF8EE35119C43CD7F9DE2AE
D0EED5D703B9C20919C2556736FC4F67EADD607B266BFD6DB51949518BA53966
9C3098666CDFB1E317462647319E38C8A69F2735A7D112AA3F39BD94F21DCD05
FF887330D1BBD45B84E09234A543243B3FF8E29549C849F55923903203E72BB9
1CEA4DFB1C7C7682105E23A374BCA91885E7423A892F1FDDF1AC53BB638F51CF
E80ACA4A37BFA5635C7237BEC350358D62B7B015A019679B0B8E742902AAF8BD
1A9869B878D12E4DA9E19D723986D7A820D03FFBBCDA351F1F7CE694477F749F
82198FFFDAE1393586EFD57C62AC7302F6B526482E4C9257CDC556314D5C972D
352472676308A07F230EDB99902132CA5B6E0E95558767000A5AFB3DBCAB07A8
F9A07FB3455B1CE6936AF27B3CDED00D7B576B958780A86E89DF637B777B16C0
F388D039605C3BF00BE48C470B0D86E721AFCA140FE6BF3189135CFB70A0E879
27C984324661BE94ACB4C9AC15C3F0E2F10FF9EE3A06766DB1C758A8D75A3211
6FC143C27BB8B5E25EF34C474E9D6CC7C8FBF86B398FECB416D63663E08AD50D
CE139744B3A47D3AE4434048AF94643CDDEE3F40E6D6832E5BEB7383E249556A
7D03753BA53A7807453B96AD2955DD8B1A35CF423DD8F3BECD441A5E7C3B1AAD
971D82FC1EE6868FE3D060DD7B5AA766C4DF52913BDCB6B3E5B2E3A3F114CD15
1B2B93F439EF6E90091CE629C5E0366E567ABCA15654BF03B38F6419499B6BC6
44F255211FDDD21A92C01BD539EAC70582BC3F61534674C2972286F2B152BE1F
52E47D6BDD0DCD828F689A9111E57F7DD45F7724B451F6CFC8748E8D2AEFB250
94A4900916793412AEDD15191DDD1B6A3FCCE3EBB841B07AD1ACFC5615DE7F95
BFFC577CEBE32A424A9F151E022F9DCB634717044A9E4EDFB6081B2F9703952C
823C08EF6D3FCA8E29643C98362E5DFF7E84841055B19883FFBD860D5479A701
BBE7512F3BE3ED92F7CA09DC02F73BF4D8B222474998D6293460AB9CEB74761D
8D7E9DEBE27752553A52C627B0CAF9C20C967E0E4119C5E2F6253C0F575AD934
C4511638C81C896740D06EB088B8E6123958D8D4AAC5FDD7543D79FD4191B1E4
1720D2BF31A0A9673990B72A07FDFE82010723109906EF64FB79ABD6F3EF8786
9378858BA7E6E918D5E46449525A4A552751BC21E2E5AACC0CA211F50A13075A
BCF9F440C991A80AA4B0933C1D7EBFF54013A009C9286A371593713BEF10748F
81DFDE2C7EF5B3C5422806EBA4D2DF543A01088D655A8ADAFA9928106AEE7655
662B6F1658F14EA4E5A2146AC6A23F6C5A8AAE834A0587D990024BBE87D7AFA1
DFE6FA7EA168F4DDC5FA86CADAD2636F675A29E4BB1B7733EEA500102E395292
12B65E7565AC5AF022923DA515E869D196B6D0B8B8AF6825E252BFAF0D5B67B8
F034CB35DBCA03CAE19A98F8114090E2D39F9B2E1201ED55032F07DB4C25C0D1
E15E3395B062B933EB55F8FE7B8069B0E1781EDC78E93F64C1B30E31886B7B33
9CDF9DBFAB15FA42F2F264CE7FEED86A019485EF31E407461935AF4899CD0B44
378CD3B235D1BF759930EA2C11CE1D257CE4B002E8B036374D5C37D66FD69C26
DD0B3BDDDED6E842A797547F96F9206935478D5133B9E76148760A4DB176BB86
2C29749077D7104BCB313E5C886A03A1B6D96CA73DB8BCD3E76A862C33A0FE4B
A3C647BFE0EB0086D064B69A9D0C7BE6E9DDBB45E069C587FA522DD3C67EEB19
D151D290E50A0B9EF24A5ED767F4D533BCCB8E9D52D5C89E7C8F6DB45E3EC8F2
E818B2525AB9B0AA4D07BFCEA039DFB0F7E2C38F138EE0922FBDD3D7BEC4A221
38CE45B8F982E1A068E9C61EA876F4FEA72D9FF55D2479AF6E3ECB544654C43C
A7BEA5B305B1BCA2F45E6586AFC924E8517AEC114183C3838D9401260A743622
73E701707CAD347208550DF890CF5924BC50D349A06F9A11A91258DC4B7C64E3
174050B7C8FAD56DBEECD1A20E8B2F9C23EAD960F20A6F51490D177E72F543F3
6CC305CC70AD584FAD5B5B1A5DCE841235DCAE82C54146717560A93F09A7514F
41BB650285DA8688891F7ABD2DA48A00207C13BD757BD5B305295766162B7BA5
0B9C4156A24084CECDF954E655F2567DBA553CC32E103B9E26314B306649FD15
D7B59150B7C62ED755C31CBDECBBB7C3FBCA1B459501F78B001DD23A932AAE28
816D999955116FB5B015C6D1321FD6CEE397487AA4432468CF994F92CBD51443
ED5564F725B8D7A16AFC57C7D5B023C047A3BD4D4EF55D2EE095E869C6E271D9
F3A9068D32ACDB476F04E5FFEACBC97E5D2AC81D72F9F8D4F020C558383A14BD
C6B6BAACB36687EDA895BDCCEE38F5EC170D3BFB792D2DDA7E57BD2FB6B4CC8D
D60FD6FAD3C8ABCD673A03A694FA7709C320C49D5AD448E92E67031B18FCC255
7726A60AC1B8AEF5E32D67E953F33CBC743DC0034904248227A65C597DD3DD1B
13F745F2E3EE3C0F379E76451D99AA82119E8EEFA75C904364C09B4071FAC531
D1CBC64BD28DE9517C0A6E8B94EF15C2A291A8A4132F4D574134DF0989580441
39CB740954645CE99CB2DC823134BB06D2AF45F42DE4DDFB45DC35209300AE63
A15A7D983219EB991B300213F0DF4EADFD8AD1D683777C41FD1488FCEE52E2C0
AB0B5B656F18BAE295057EE59E3D2F372B87A9C9DEE25CBB8AE9F0F9E64E2EEB
E0E82A93C1D6CA5EEDA4FA3059151D7CE8AE969B7ABA98EB37CB2C2A8EA53261
78611E141DA2463C553A9D3FA7C7612CE52815250A472B8DC7C58CC953C341E5
32592376A74B7042A9865584BFEEB4D4C3FEB749EBC45A95688575A4D2874AB2
992B9433D8898224DA0817AEEC11C8E1544DA74B369425D80E2A4707E1D75B3A
B5B56C62C1C0FCE171B49E4AE5D0025EAB79CCAEB6D7B737B63982514CE40412
49E3088A321630BC1ED2600FAA16910AA9EB967D0B382CC9929D8D11C794E494
AF4E8EBEDCBAF71B31D8419567424AFAB2CBA3411E1F30D212B4FCA7DAF88EE0
55B2CD2711EC377DF9412726D38E7284386F6082C2362E4CCF3E66ECC33C7446
26BBE864025D7176A1DA12C5F127C127C759CE5E87C0661283A8C8F87AF276E8
795C6CE1075574C306FDB2360689139B35B4AEB6B72F30468065D1A2ABF1AD34
324CF7A9530622A27EBFA924A3825656F694588DD4594813366BDFFDC0057DB4
4F8D19FFC86749D98797B1FAF91563514BE7ACB9507B7A2BA757530152A5A263
36671AE7D8BFD40BFDA804BD47C3D4933E3B443D4765DB43B2BD1302D065657C
485FF7D48E2C2AA8284ED768B1555C02AE1A21C142EABA66F52BFD11540152D0
A96B1457E1E52BD992773C49E0F8EE1DA6B4E6F21298B6A6D22A71F09D332853
583CE2ECB852105B7F1F884AFCCD3B642C0A16C598442E00ECCDEDF261F9F4E5
DF33D55934F684959CFC4E4DD8DDB484F625BEB57E28405D014E912B80B492A0
A898BF029299CEA838209B392B22761F4B31AE2146E45C087BE7632AC6D2E920
AA7A5C51B37937F9DF00DC3EA2FDE88768568C31B1E14FE2FE5102B7F4DF3E4F
F29D1647D3B06AFAFB4A0D0D87C31A11E0231DDCFD8B1C772A5F9409744976AC
AC4664B5B9A46B3F7CCB4FE2822FE24E4BD9FE414721789A755AF4B6CDC2165E
496FF112A899C30A5438CFA2F9D3270AD44DC4EB4988B9CDA2009D75073092C7
AB9D34C66DFF94A30B87D8EE7D52C59B06259DD7D8F3B3D6F433B5D663ACB778
50F858A12D0910E2C303A527A46B56355930F7B3AFCE68ECEEADF8E1C6EB4E81
74C2AA327DB9601268D2C877ED5AFAC1C2C73E2088C24E26EFA58FC455485449
53CED82E187C10720E096282DCB872B6BE7EBD89DB74674BFFEDD140323AAF0B
9E7F7F265666D7579BCEA6D053FE58FA2BC93A38F91AA195D9F12E03463930D0
5A3D71E1E9830AC1A5FEB9D40780F65DF7035403CA0F72E4CBC21733BDE363DF
B3C866CD45B80656513B6871E5258B4F80702ADB0342FCA223560C53E4C27D42
344D3BFE6C98EE20817046D05DA2C6CDA1A2B095AFDF0D7EE69B65E0181D6936
9809E062640A289060DE4202AFF6751FB0E9271CAAD9E1BA2AA51BE07272EBF5
C0299913389EB6F670BA5FDBFDAB640A103D37FC9D79F0E9A6425428E02EEC24
87B224D5F740209C939D8516182CA5F0966CCBF971FEDE25E117606B3AAB40F2
DF4E6AD3AADA6F2415A8BCD5C987B48D10008F296B41CBDAC3A4FBE58E4A0A71
39B77AA48AED9858F253A769F6124346CDF97050E356F2216D58A2856D4A7023
2F0EF82F448559F8CB85DD9909A74AD691BD25D5166AC107F3AA081661CB91E0
04CEE7220A24C659DAF79AC2200622A13BA8321863578E15C7B59E6BDE27B47E
5424BFF39434E3F7580B36099A5F4F1D22D2DC9E173A5780E71276C60EAB7E25
C124964778296D06CF3785F4356FE435A2B184752DACE1A3E8298420C5F305F6
7F1A888116A70B06EE212F87DFD1C76A574B199F1207FD2203654730006F3A39
B43BFEE5D80FCB0D3A837989779DD8E5D98795FB0A08C894BAF2BF8E26A9102A
D4FFF1B87DE5AC09FD05A1762B36FA02D42C15F4551678E1C877481778614D37
2B043761D928D66FCB9D760D364AEF640D89B4B8E897B8A153A3B153A0FF2F4F
59F75AE91D986B3D714BFD49F6DBF0306CED94DE945B5A67DAB254253DF7EAF1
4ED4DE5B884FA7AF3F075CE9B88F6E690842221FD0ECA5100F4FEE2DF1F839B2
A5D900EC8BE9D7B774ED9A06590378C5F9F1002AF12A15F01E915FA4089185AE
13AD4E96C8522735074AD649CABF39201CAD8F218BBA826D0881E6FB959DCBA3
4B5F5BEA5D45695CCF31F868C5092BE089745D082DFBA7395913C432282C3144
EA933E003739EA80DD65A63FD2020938E02C1D27DDFD96F1F701D13950E0CA2D
AA7787735FC84B268BA64F418D1EA445A5651759AC87FACBE49C158A1BA93484
9011AECD6390F8027137D6FCA1F8F1EFF02326746562B5A8D8963BE6AA380A98
57E732A234E50243714D47E47AB8FA742EB1CA422822BB85689EA733B47EC4BE
EB0E351E8F2E42D4D0358B380BAE915A183A8FBFC7A5688BB58A21751D1FF032
610410865DC43C4E9819F846D88787FF5DF5F69DCD8FB92B332FB6509FC3FA39
5199FFEF94EF15B45200693D9EFD2E0110B640E38CB4A7EDCC997531D26A7633
3D3B376B4CFB907A890BDF572C18A4AD22B0DDBDD4CC852F53207B4C082D3C99
D3064637F8C55954A849C5F2F57D79D880E13273F7A423D64D1696CBFCD611AE
EF629BEFFD5239C9CC0937BF33358AAB8E3B8AFF2247D8C7EBBE4E95D9CF6F8D
4D204CC6D61EDD16DB22D9907BF8DB416935BF25534EF2624694FA3899AACD17
63A04776F70BDD9C6C2B5597E7A5D919BD56C368A4FABFA9E50EB56E29C78C0F
5026AE72E092082162C25BE8335042BBEBC8DCF193CA3D40E5337359272C8C98
8EFC40B58D828722F0FA75A0F4913D2F5DB4EED1DFA20A74AFF5E6BF30A3DA69
20EB09BE81152227353999AB45A10115DEA01BA7890B3A1123170D993F727ACD
C9F52ED45222454C6A9CBBF205039D6D35C09A0CE284E4BD3AD6755257F03DF7
74EBF4D0C46F9C2DCC30A54D6B62A57D95D50A7C1599E62D4FCAB001D5F9DA84
FA530D66ABA3E5D53B54A745A9133775B32A3A07ED163F50E8BED644B28CCE75
B08EC85DF704ED1096FAA03E32EB77D18484D0651F4644CF51DAA8608BC3B698
A22BAE29AB94A24DC07A7026EBE9E2D290B1EEDFE0322838AAD2F7173982F32A
E0088A4A1D2AD1C11F7606C5484FB0E9D2D6ADF7D2F96BB74F5E3F01C4FD8DDC
8DEB238A2554A1462E43FE6A4FDF441EDAFDB75CBD55CE9295AE76F09F58BAA4
A518CD5875BF2C0CCF808D15B325EBED86B1C80305F449B477BE528C3667F06E
C5479B0824B87C47EB07D5C9A578996AAF957B963C159EDAD2B14BBA989401A6
EF45ADD93477273C251BE66ECFF63B312D6BBBFAA8D9E5B7D23F29D5FACE40BD
F7F9B0714AB9E6E655AFE3589BE2E6389542AAEC2E389E9C3790ED94CB2CA47D
382147C28682534E57DF995F87B37C537FD5D25484B3B6401093BED1C39420BF
A3EDA081AA379231DB5D3C332F12CAA3A5A5A5C06132E3F92F9A7DC0AE201544
DC7A3CF8DB9C6AB916A3E13042CA78F2DDD02D8632B42602CB394432869475BF
ACC5E95ABCF4E50F3F746C405422CDE394BF97C53A08B1D1CAE774656AF075B5
1DACD371FC2ABEAA14D7E4EA34B5C7A8E7CB19D8F9ADB4ADEAAC86A420947D5E
B4DD00F5FA142DA826867DE93E13CA2549C74BB72D59E2898450699BE5ACA02D
B1536D99057E30AEE066886B8E0315F5236BE48B537F6DDE0C535B2293ADA8DE
08741BE7D06F9A19E660605FCD175D665E6917A731D82EBEACACC718F5905E86
4DD54CA062EA1FF40349D80204DB9F3E3FBE084A2DECAA1964AD31D9D2F471A9
8CB4A5B3301CA9B795626F48588DD09D1AAF7BD6761E9040CAD83B848E819175
C4E9E5718AC249802208760FA149DF9D95D5D24C4B6B2795D94BDEB015C731ED
FC71EBB4A108FF77025B7681DBE1896163D0EB543249100B12E65303242E2818
BF94F3B4B604807215323DC5C56FC0A3A5A5A5C06132E3F92F9A7DC0AE201544
DC7A3CFB6A4D0F63DCCFD3D9B0BD93DC13B78CEE8C67EB4671E4903915DB200E
5ACCE752D0CE0191D57EE7FA05CC57ED6173B2715D375CD401A944BC1D1015FD
6A95C3F467873572301E5F59D0BA242F5FE84EA48A09618DEEDE0DEE5CE1C03E
EEC8DB2F0FDA6D5197526AD773CC4FE566DCA2277BE4C0167A84B609C2D74C25
3763AA077E58DCF1E3B1733FCD50FD46178004C1FF0F2606AE7022A3315D158A
C2BADD58DA49BE097447E45E5BE2784E937EB01BEEE507AE4B0E97E8579FDAB2
E33635850266322C54C6694B31E74B4C6845E3E6B8E600F5C6F70C493018BE1A
6D69BD3EBCAA2B6F925AC601D2358D2F60E741D6C1C3336BCD82386FAD5FEDAB
9A24D99EB12F66F5579AD7625C6E52567706CB28468A9A6AD9F9B873F1845718
FBC73E58021E4F7A64B77EA34F99843C388AD5EF92932ADB861CF4CA16EB943A
F05A6D7B488CEC77941EE8A8C38B366F80141BA943A9A264898304A491450FD1
452BD35144A4EA83AAD19F4E39A73DC213CE57095B7244AF368690E61DEDFA53
61D2BAA3707F23BC0D806891259BA46DAD405158B41D78DE4ACD48F80B0D48B0
526CB67B92DFD2184A508BA545215157AD16CCAB7FD4F90ACD80B40A1D1BDEB7
192045D6581689406DE2C87101D81D4F0F7E49D329237064384825EC71945DF0
3B096C5DE3587BEBD9AD03DDF11A158B4370BD2D1AC26200E5315F4B5E508BA6
5A489B68544ACD7953AAC7FDD737874D69A043327A588B8C5B1CD693757C3A5B
86E2A334D6CC1A3091D8B9A27050E5C2B717DF445BD1A455E35C10AD619F9CA8
3ED2AA40A2D74F451FEACD30A472C06AE4427FCFBDEEAAC67F14F71B450BC562
A195E9F1CD4EB6A8DA1B30A710FDA8E19C96C0CF4B8DD9CE727EBC632108B351
57F11930C8756A84FD681880B3CE799AEAE4275597A2E3D1C3964D8E87EB4795
0899C82E7D266B0A4C99A4E54AAA4E9368A2B84C9E9BD86203BF90AD0327D6C6
DBC1969B03B1A6869409543B20D1038C4F5F60D1FB4CAD8780C18A0974DA5410
3C9474575498D6DD4B4C0943B64454A8FDE2E58925A0C9440DC034DAD9C19227
506A78564C9BB7F666CFAE1CFE2EBC7880134F6DD94BD82CDC65AC636325718A
F7EA47946CFF07C2DC0FF167BC672498079F7C8E09908CC8818E2D48FC3009AE
B4BFD21D0EDDAF6E7780F00DA62502C94A10EC87F2DBA685923B61627ECB39D5
BA7F8E095B9F852E5F33B05456A322A45496B732668DFC3F3B096686CA6EFBE3
2940D2503A7E0FC74E1ACD6579A7DA0CD12FFEB765E13449177669C65F297648
1C945DDC14D93FA25FFA4F3241FE1FDD7FD6CEB362007A28C7FD516B1A9BE2D0
D207C80CFAE2BA18C470914CF1D522123E627D00097377258E81CBA9DE154564
38FED1B333FC882FEA17CE5ECA50FE1EA7907C764CCF53973F324BAD8D643A70
67F8E9D019B06B5AF2E9A1CAB183E05EF9F3644BF2530CB119078ABB9C680FCB
BE9055293B5878339F2AC0A1EA53C1373763DEB808531030CC4EB0C76133C872
64F247864737478C4E51534DDBB9A50B572D3E2BE1E5BF5A392A0587475E3297
5A7DD3802BBE59819C085CAF4716F84FFFB549046EA6A027038DCA10E40DE142
5FB68E2DB3351EE64029C27CD835B70FEF0C2FEE690809689DFC06D70D043E19
E8F0ABDF211EF6B817C2C0570E5E183B4C66D6CF2D9016225FB61B45699D32A7
3BBE7D137A4089E91469B8BE01F3FB294AEB9F417E862EAEB6203AB578CE73B1
269BF83E0CD96FAD0D340212599A47C762ED1D3647D6C12E59758459352FAFA8
BAEA8CA41DF1DBC4536E4D162910134EBD0D4757FCFD1140AE66D207DE89F0D3
7FCFC704863F7BCBE3A853130C1166EE98ED1C806E4D1C756F4DD2EB18FCECC2
838859AAFA0E38AD188D1A41B5FE6E7DE25D52BF05AA26AACB726E4D7AEA82A3
68AA4603DE1048893EDCD24B7B524438D823756522D14642E1368C0E466B21DA
50A5AE6F6B106F6A7F7345EDA025E48432963D42C536A828E2551EA4A9E0B9B5
F9804A77B555485D900CABC9F641C8B7B7321B77161A5D0CAE3BB71AD5253481
277CF8B633E404A9E2A119495594F7C17F03F456278092B25F4E6D52CF67617B
A1A6B0991219D35D6E6AA1DB8DB83ECBB17D5BB49872041FA78F9447BB398BA5
AA6707B9741E0AB46DDFA0A9CC1CD4A4FF559B6600CBADFC932A7ED8D31983B6
A9DB00711B0A471A98DEEB6759DD904D652D776150D7BF0974F5981679567566
BA4051FF80548C36DA35508230C17E595D0E697FEC6C9A25BBB3F317A1979163
F3A316640E382B501A6BE18C334DEA2123D762B14D45C8693A68A3B87F5E691C
0F93D5C6B78F5589A6473A3E4B88789736CFBA7B97F128981E6AC5B224C6A114
ACFD82746A20E9A7CE1A1F6895502CE417B77F1A1C5209F571F107C2FE8617CF
B4A68FF288FA0581E53D2E9B231DC97F495A6C93EE95D190ED74457B80A63A0F
C9609F341FB512BE393C99A3A5DC9413E4AD3A5EC40ACC8EDBAACED94CCED5B8
8888E96DD942D0B44E8086350FC945A58B03CC09C94D3501200ADC0C8876DB79
7C4F358B27FD38694E97D79483F53803C683E28FD73832CB208643A6FFD992AD
C4894C303738994C150FB6AAE6EAF582DD36C1D29166CDC5A658EE2DDDDF061A
29610A1821D62176E87C9CE253A113EA6F20538E21B87746128436C06E7A03CC
A38814E3C42AD56C00D583C01140BEA3360B1E4E74D170F0C8DB781084EF5B6E
5D7EA4739E6DF2C37AE70CDB44BC9F6B556EAF8AC6F158772C05BF0704436B17
EFACF4ACBA1328820B2D5D9507B5F521B6D5B4EF9A0A8E580433428DAC1B5B05
B0D86B5D666BE5141B0418D230825BB3A78FD44E2528D5460A46AE9DD281AF0B
C516AE5D6CC4E176544A47869A64E63E5F9AAD4EC63F668B70DDF92B5E74564E
00F3DF8CFE5C669E8A49116A09BB7F320F0CCD98F2F7DF378E1BABB0EACE7D5B
5D62A97BCD03931315E78D198FB6DD459C4224D4B64DFD240A527264178991EB
BB9338766F05519E4826B91E6F4A30F183A66BCD03F71278FB2BF0C8A53B4EC1
A3A61C59E99D1B38E65A28397F992408E3E8BC97D5DCFF4DD60F4A12976872F5
9B63BFA4451E0260FEF4F6E8CB517109806DD2CB6704EBB0D4389D1217080B72
FF9A6FC5FB394169622625F2493AD95E1A2BFFD0BB010F54A8D1E0553E0BE93F
884A17BBB0741AC2E477F3C8C34EF34A25293A3A1E9C3A426BC77EFFCDD17E90
12695CC79D511B60D8580F502226D3ADBDA45979D58BC6DC2FD1487F127918E0
5AFCB091BE97A61B0C886A1FB226995193CCCFBD498223FCE53C6C0FD26338F4
FFD6CCBF6F7A624A5FE642EE81CE4303B3ED61B66AE7E230C3BF4691D02DF09F
7A3ABF1DB113E0DCB0F67F1B59186BEA750957583913B40267EEB302023FF622
8B47C115366337D000007EF744EE23FEFA98E0CB04227228E3934A9A35927640
256B31120CF711DE24CAB53C624A23F47334D4FF67A04277EE7E0EB69D76392B
84CF411778F691D1DD2C75FD9BEA16B3FD226163EBCB4DBB319D61016268333C
CAFABB6C09F4E0EAA9F0E2632CC62D6EB4B4D6833529A3D570698C138EBD4AAF
D364F0E9CEDFF626BC8B5A370FA1214244A78B1724C7E3111B868C160E40229C
CFAA59A2F0B035FDA96EAAEB981C7C4ADCD52961F1BECFB96B3714A5CFC44DFF
00468AC9509334D299C5ADAB34B77C830532ECC75483ABEEAE636315CE9D47B1
A020296D23FD0A59D6AD28E47DE448BF7A01BD97F34FD6BE425970F8C35D3B49
240E0B239E705A7E0A796B3892A48FC9415E838D72FD3DB7FE835B2164A55DBD
F4EECEF94DA40C621D4133C6B3F219CC6D141B2164031D611A41DC693B0B1E46
1C5432AE029C25104AD5A57EC21CF733A46B22C39FBE586A54E2A279F99DB5F0
EB05D6721391E6087C57E8E85B7916A7C6781038203E4AFB32361ACAB13BACD3
E465D094B64F20F122BCA2FBAFE2290E8AA03A28847AFE8A99CC319A661CEB0F
476DF4145BE31DCDEB0B66CEC3A5A523781B27F9899EB032DD47FDE609CE1CCD
8445D7E98DC3BD63C201210CB2D878CCE1B369AF92E460EFDDBFB167BAC7E55F
0FA88678D9BEA8B8EC21F9DD5C542CD594E29B1ECC87D1DB30AE6D722F2DB0F1
47D29B449C4D767A92E1FDD02E21FB229C222646D0C5CC05B49DDCC16B19C795
261357263A8DC9B26FB9CA28883992D077D55510B3CC4BB6AA616D170D357C65
C027C6D48EAC36B12528E1A81AA249ED1D3C9DE0C6186DAF0DD2652AF148A3B8
3D1F675CB2B1E6410FEAED6BAD657092ED267AFAB75A5270B49440F5E20C8800
2D62B48A6B89B6C1D135B6E8B9038DEC76B0CB5271DA4E63BC0D3E8832BAA635
ED3F627C7C46900C1CFD1FC975165BD772CC4C3ED8EABFF2230567998B581545
82EC976D31A1FFCFDD11F7C39B765BB9B2B0D2E95CBEFD8432985A7EDEBE041B
B45F16136C87D356BB3F62B86C99770825AA8FF42A6B19461A8D00BA416EE2F2
6D1CA6D3AC03429BD266B667840D1F9EB19FD6DF6A231EB631B7D57E0140B79A
CBA7DF08D1E1A876F9AEB5F6CFD72F974AE1BDFAFA10743E9784E90BC853DA20
3C86D3D32879A5F548ECF75B9807C8A60296C686F876671BD65F869D2D389DB0
D75797A8D577CAC5454A7366B784AD847D5976FA7D445B082877457C39ADDF4F
3EF76B6E366CA91805FC8BFCF9249389652209B0232D78DD6FFE2E5CBCB0DF86
967B4B36A672DF9D9DDD876BFE1A009057CC713BB13BBBF8B72AF0BF764DEBAA
5801732BB07A4F817618CDAAE86F42DB020BC07FE93625A82A3B2D14EA94DA77
871E3E5DB662E87168ACEF66688C0FDDAC48A9CD70475B33AEB5CB4BDFAE35CD
587128FE2E2B8261D186CC6A21B858F04E9DFCE1C77726D739E25D32F1AFCFDE
FE88CEBB88F7FD9F29878B39D636316FB68F418EE8A65CCE310DF4871D977422
37F2EFC6631055E161647B033934C42B58FAC30C0AEFC0A20BCAB1725F8DAB8D
12E73CAA83B42D073BB87E2920019930893DF24E5C794D8091673582BF22E0D5
B8674B6F78A8B86A7DB68B7EDCB43857D5DF61139650117E65779D80FA5DF0DE
22F7D2C8913427291F2D47B02EC7F91571FCF8978A464394EA809CCCFFB4EBB1
CFFCE72F32F4443E181407052E549CB9ED8C983C74609D5A97919B5F7983F299
A7933321CC91F3C3BD7B2E668840218640B2667234941E62A4CE8DB5486987D7
34AE998E0B2D6402874AAFBAA032E652CF476A9BF0C5958C25A7318C8C36AA5B
B0393D49485983B928E87B5BDA4A48C47B0E893FBE28061F322BED1B0E6D3FC7
775AE737F4CC79233238D5111403754686D71433ACD2308168F1841D0C155198
B329FB463D8A1631118B2521D6EE28D15083E494D4382A2A95660CBC0AFB517E
BA67211B7860B0D8A9786A723D46A273E8FBBE7727B70E3E12BB1DDA70839B53
2DFB63950B8DF45ACD4C934CF56F6B7C26378572E8FBB8FA58FDF57BBE1AAAA2
DB9D7D8B5F4B74E77A542ECC85D27B1E7B2892E94414ABBC3FA96CAA5B4F9B7E
17AF42BB222037374999F824E81BDD23F52C54FEA6DF741A6D847B912B937AD1
2D452CDED93EBB66180A68267CE0F385AE734127429E7C31D9F475362C34375A
B3FB93CAB2154F4B1A6063DB5AC7DA9426ACBCB8BC12E8E54F3D2D261358AD7C
D350DAA985E03B45448F5598536B5F5CF89E0A8667507566F140B8279589EC2B
4923B3D45D094B34F685F1B5076DD8049F7B208C94B833A4E96EA55400892AD9
92F9F14B87F1898E6E0C313C7DE9B665109A808A25BFBFA50CCFD4F9BA8F4DBC
40DA815860F361F02AE01B8B4D1FFB424DB22CF4563E071C78C504C01FF61118
222DAB481200A874EAE77412EFEBF4C3A35665259A4402AA484B193E1FF52FEC
7C78C1E73BC2D6CF82E5601CC587F79AE0608318B9F7889E0A29D356CA233093
AAFA54FFA50A3C775B46790D67CC0A06AB49D129C90A05B4082DC1A02EA0E2E8
7060FC7E38576C6187289CEFC29A1772EDCA3B03588B05A9AB1F437F1B7064C1
20D032BD9D12FCBBBD592265AC09B692F369F25ACD59A4A23C06B2F667C6EEF1
60F9E26AD2263F20CB950BC7CBCC5D94C73A3CFF02F2E6826DC218097659F607
B6EAB75CF06C2B39A08DC2377C9BCC3D58D6FB6BD665CA0D2C509270C53B5EA2
E25D87257CFF0651F978A09800A142DAA73B7F1B15799836580E4E1F22551AEE
8318E6DDB981C45E137323273FE030A43E1EEBB4D44249C85353DABCFBFDD03E
F825F80064AD882918B29C4E4667CF05D423DD6FE089D1AC94BCEA2A14567116
1CA38480985997BCDF159A593DE5B4B8F60B6BD8ED94C44C83BF7C16B31BD852
BCC7ECE2A53FAEF2D2BB4B461445613A01080548802256FB187CBB16DE77819C
C32E81AE69AC3344BC61129DC8CE58EFA3477E243AA950F4520EB2C87E066FEA
B96703E7FA9219CDAC62184F685E72673737F72202873237F809278AA18E0BC0
6B98176238FD406AEF15C92469A766652482012C30026AB518D1BE399DB38FCE
F12C4E988752AB1BBBA6268AC96F7091245F034BD65542DF47BC7BBAD225A907
C78FEF6DEECA5A1D957F459CFD15BB117B5C9314DF940164A8FD9C5EF6BA97D7
5949E232995ECDC83A2536F2D085E30DEBE15A07B6A046946D1BAEC088EEFCD9
80BB05F1C83C47168665599D6888D3FF389A3640520628AC3D29A7EFFE7F24FE
33A9747C1146A0EF2F0C74C286C3549ABDC45F91446D079E65F9DCE094FA8A02
D59F02074C4CB8F92A5DFF4B5A66EB7F7AF271FC5F064E1BA0504CFAC223AF6F
578DD53D95601C6E3BC5E8B5CD32D55AA3E61DCAE56FC36A539EB272CCD49B57
E25423DAF09DD8228101F2307D1F5F5DEA54F4DB3D9B5C4C516F4F9F97D7A3AD
E7239017951433BABCCE1E99A6A1C55D716BBBDF69DD249C73C8687BC999EB1E
F18A7A8394FE135F21FB14369668CFDEAA77C92C11E61709894835FDF722D4C9
9AB28FEA94F555DFC8C27356F012F469039685D8BE9CEABA28C8B54604AA674F
DA64DA4E9A6AE508BF7F05FB26BFB188AA0EBC40FCAC9CF533F9A20E5CEB78DD
165728B1FDD1BA76CF1B8E360EFB06AA06977FCEAC96F538235140404158CD4C
E23E4A62C105EC1CFED8276AEB5D9784739DAA5AF5271CD0BBCED74EB5CDA661
0E71C2F82B6FC9E762657E8A4AD339BA55BB19D357D7E306D03E46E357EABF76
D41513A3D393374B1C7F4665773639513F0ADFF57607D1EED144DDDA3AB03D1F
7DE2AFD6B27709D0F8DACD8FF7199CD239F7428C410868B1AF4617C4D4E298F8
6B5E8D34B7CF8A93F9D3B7B3CCEA7C60EFB86D4DE2E3EAF137577CB4CB008D5B
DBDDFE4BD6949BE57E4DF116E24E0B2C3DACF2BB4D4F11C5FE4243E03C397403
7920F8422F3E911F2A28969E9BBFED7EFD6F03BD7DC61B407842090E34996855
23418A58665DC05659845E5753843A42942A17ADD7ED20E5A361F1507C3DA367
FEBE25392DD3720C587796C7932CD4D6AC1263C4797D5F88B7B605357F60A18B
6D13C324824EAE708658FFC673310C730A7B9BE22B83C386740A5DF065031059
63B2CA2D80985C798B15C5D16C29A6C6B697D9E3A3441D8E1AB1E311B49BEF4E
2A276F5B58645E79214DD8DAD53EA77B8D2E2FDF7B164BEF41E4B543AF2A86A9
9F4D5073B91659C255392A89742025378CF853F6A8188534F6E67CA1E5D5E4B8
96D55B67837FE1B0D9EDEC9711F4ECCFED444C6CDC7C6263B93715BDEFB35439
8CAF586AA678243D6FD47324B47C81CE0D182168ACDF7CEF71ACE70E22AB8ACC
2E93B1551E750DB24390D7F0804F28A5DA3822B6B9102574E2461D2FAE65B732
1C0093A2A3499287007C275BD496F93E01565EF63E388BFB5372277A729AABD6
23D260F7A8EF5AA2548D5A70F7A701141598FB0E5E5BC85B7F2DA556AD4E4FF1
9A9136C3AAE071B0090CCA084A7D159BDAFA098838737BF264CC73DA9A15451D
2DFFBD6E3C668B0368241FB6E2148252F67A3160AA6D2B4C5441E3A478F0933E
B129EAE44484E084BDDE7A9FF8ACF6167862A987D153AEFF6650578358B43FB4
24FE3270FB9B6E9F731B075C021DB2F0DC106177F0F23A1AA4AF90EC2DC34861
8B108941053DFA51F0A495337FE8C5B58C20929018D4C3503CBE6AACA16D0636
BC1BF7F466B3462AF6C2FEA956636CF34F67411451244936352DB3009C0FCAE2
29F2B833A9D683AD86F5386E78240C81307FFDC460CAB880BB4D053642EC9C7B
BDFFC7A5BFC712FB23022E75D57D24147D284196D0A517320290A8CF4D21C73B
F7B55D769E02B6E09BD7F56D0235ED4E5AF7A88D839EADD20F9A893744085F17
6E43E1878F8C122E18E1052B07EC4E797157B7092E55B43E757DB214C06B783F
019E874F2C339E74CEAFAAAC6085F994AE347ED755D19501FEBAC3C44768AEAF
A6146BED5C7A82F293450EDCCC6CE66357C4904B79376FA8D575AB65A4476528
9020D61C9FD43756D2E2B65ECA264209682F713E1A070B82A1DA8BE22C62B9AF
91A500DD51E61A43E7387CFC2D956561FB171BE5A0B90629040B2BB97622C5C5
D8B3E64238578C1DE80EFCAA50A011D7D48BD7C93BA0ADEEBDAD503879FACDD2
284A86FC797DCC1F99EE10677B75E6F729E7E3B9F4487071213D5BEFDBE6A4F7
1E606A2559085BDAA0B185F7237D7CE167FBDA8FD951B5CB5594F08593620BC6
8DD52F73021E1E5A225A89762F74C46B4AF619484FB4C178CF52584E9C9CCCD6
558EA55C99F8D971C49EA9AF3EFBDC504BF7FEA36A449067225E00D4DA958B0C
D7E2115CBC5B3534EB9BF01E3F1CD5587817148D2F8BB73467B87C913F02D391
85278633F6FB3DADD72569EAE81C6F064CB2EFB7F1193CA51C8468D9D462A68E
7C130D94F0788C0D89E04C07B80303E588749B5160029C2C808865F2E4A0183C
3F12358E6647BBD5B477A7342D64AC059315DDAD1A2FA1F4E8CC696E936A310A
C5152259D7DFADBBFB1295C7175929A360F923116942BAE47F67EBB46550B21E
66E656235F280A1EAF68E4DB591F812C272C20E6767E45117F52001F9FE3A55D
29473A8E735D338B3AC3CFDB87CDBC9C9BEF4E5BB8874069039B2B119DA89FCC
5D526829AFA5269D435AF7AA1310EA730FED64195A91C18CC866379DE46AB435
245CDC9372B038A82F59FDD0AD40A42DAE32BFF67370759CE544643B9C341730
5B2906D26756132ABB51B16928A34A37242EA4B8119A3159E06F45C84054E62F
752CEE8841123483344E4BBE07BCB511971D924EC2D0DC8289A820DA94B1438B
4AEB72DD3680CDFCE4008A7DC06905B72AA631AC2163E04A69A2DFFE85B298AC
23152C22A7B844507C149A25CE9F8E3F4F83EB74871AD3557AB2A8C902FFC933
3DC15AB20971D25966773D6625CE6A39659270897681BFFD12179E88A8F88EE8
8C18F23BE2CB0E054CD9313F9467945A958D9250B329ED72DFFF1413E660A1AB
CBB980D39062C1591B12A9B82CBE1F3F03D7E973E74B0DBCAAFB16434923E721
1327F13F8133E64866F58F4183C0D37C798A24A17BAB8FE8634CC29C8DBA44E5
B3A1E59AA8ACF40F92EB18881C16B071B4EB059B807447426D4C6A28F9D30C71
52C6AB4158E243A5C4178F8DDF866560A69AB23AE66B1C7BFE03AC3C2A493583
A290487471AB56CF1A74D106E42199FABE3166CEC26F86D24C2519CB305918BB
384BCD982C1C4FA64AE38162F5BBC5C4AC115A2593A77AC3B48D4590402C1571
A3F8A9D704FDFCBD13E1C658F4A959459B792878AABA9E78D9E4275F04E2BF54
63C5A1C471B6B60A52B9C1087AD89DB843535B0EEFC5C3F9CB1F5FD25B69DD0D
8AD42C1CC40D1F55DC903A8A350F6183C58F06C2A002DCB9EE474ACED655A575
31D6FB192853F7A5950046C9C4A8C810895DCC127C76FF82E579A06D8A3A3234
58808BAD08E338D18D9FBC392143032C90FF669F444AAF97BCA6F94DAF03B11D
993027884012CDC35C4B36242F8D77D18D925046B172035D241AD41FAE4B36FF
F9C6DEAE0A3A38134541DD58631CB17EB274DCAB655EE9A401DAFE2B5D139C7A
A43D581FC4FDB124B11B664B743295FCED7EAB37F39214430BFDE103834356A6
751C3164AFF710B495B3DE7C7085E27B6960A554F54CE065E497D9FF0419325C
F7B1F803D686FE898F2725D2E221338B7DF79381DDDA262B6D157144384B1588
2C6B0E2216F58AF94E2547D9DB0CD7293EAD2E500C77437C457A641C8D3D9CC3
1FAB761D55411B883F46D202FFFEB42D4EEE1D2690F324C9C7EE5A75CEEF88F0
BBF0BCB8CD85DFBC473A3897F410808685806BDBC523C865E89F528714AEC126
09442CA23AE1966237C791B39CAC36B73CE97C83E306D223CE7774FA5AF973D9
85C2803C3038B71477715A00DD0FF50F7A508EF9B24E26468565C04DD60F4A12
976872F59B63BFA4451E0260FEF70614CD83EAF19D803FA4B566D7ACAA1BB5BB
81CDFB6D0FA832F311C2BC75772E05F66818AFF33CD04DBDC37C3B1660F35E52
0B8745C69B3CBC2917438D7CAA051DBB65EF7EDE4BEAEBBBBF397F83C2461362
2FCDB223F173BD86C842D1C9ED10B006C9498D723A6BC7597F45CAEDE3E969EC
9A32AF4A0C5888685052E6DA29FD20A1B8D66D8E6F4D35339070B2C013E26F37
28773E36AB94F9937C9FB0945839933D5382A62B35FA16C623CA9BC241E62958
81A5A2660D5D253DF6AA998ED75541D60263BBCF59D252D989A249E6CB9ED4F7
A4D8807C9C0F8BF3B38BD30286E0A8B3E42F7CBEC366E60C1841693D032BDD34
303AC60DFCD69198918FA4340BAA063C68B3D5693C2DEF0AADA7436FB16103C8
E0D0D3F83D6DA0BB295BD2F48CE5BA1AB235E119FA234DD52664EDA447DE6D0D
6F6A51CA2038ED09C8679E8D0B6189D1047FFE41FC0BBC562515BA826C5CEFAE
4AEB972F9E84370EBF78F83B8D5C7962C3723BF6E61EBCD6171F8F985B2881B2
55B2F6609F03EB85C87BE9E253BAA69A71E9E12E14CF3ED6C74BE0E2A7670E29
5524876CCE4527DF68A88E43F852E00722DB3541556369992885732913C8F587
A586133F18FBF04E0BFB979AEB0E7288128130772388D1D81DCC43A346117DE5
CEE30B37CA95F2F7001A3D0E8A24476CEB3AF69E875DE4F7903C1B99AC884744
48B26091BF6EAB240A5A85971093E1155A9315626DA73FCC4F5A87276B6894D5
CFCB7E8EA5410C27B9ED09B49109257898F180D2EF552359727536966C979369
C8BEA6BA277694B4AA7C84BFEBC5B85EC107C267B76AC51841B39F02662AF720
242D74012508F269EC59D0F7F8387DD8CA44A544BEE210382DB0321D08CD1B33
35B2C4172DAEC9AF82B841344A2A061F5D409EC97719B46AC8CCA89FED056BE9
B0C4964AE88138CB39EC24E383E58B1EFDF083A5E8E4B299607534E588FF88BB
F933E2C67A22346CF155930698C2E76B71C22AD65A781A9DC4CC22C5A0C62C07
4F3C2FB093560B7FE9B3AAE8161B423E6C5D3289B152CE19FDB55A11282FEEFF
F3E6B2966410F723F127142D07719494F1402183EB49EBA08CC513A160BE229F
35324501AE8F28E642B377DC9199D93E526BA649CD9D7F8325B7461300D1C10A
99CB49E3872F4DA02B4D1DB0E83A2B5DEF7197954D8C8C9F16E47D5CF22101A8
097E43949B798E6418C80F462FFB5B2BD27C335C645F76D0874A07DCAA92EA63
C2A4FA2C08060E2CC989BA3E13B958C0DF5AAF91F50D9A6C51619FFA26F1D282
EBC19257DBC8AFC1D266C3CD4D3FE632D8224F50981EB928B80AEDE3F65A005A
1EDEBC9AC9B2104F63A8FD2929735CBA2D13AA87BEDDA6BFEBF038CE2A3A2E0A
3B5AEBCCA1B9F22538F0AEA2F5E1353753ED48395C6EF9410E6645D6295A2B47
7D3B7C6ADDB1396AF4838324E6FB99F37B549178F5D57F47A6D7C9E547CA881C
CC76510012BB1878198F8AD984C8CA49B82CC1DDD3429828CF7E4E6479CDE008
BD0C635FDCC9AB566AF64A2B0DF72A07393255D7C3450439C26641B9CE61C958
091ABDF028ABC067885B5CEC627EE4CF1436F4D5CEFE787157F8CC7AC507F9EE
264F8ACE3A8522892F912C82043AF80F61A293D8E4663948819508305A12A4E7
0A501393786FCDCC0A5CEB3FC42CEBE8B96E59CA2D7BA2800FCE8AE791EDC71A
47F2AB39A7370BBDAE9B7F9240D271C1B9BACA52194DCABDB4284B70749D0B80
1D30B1357C343256FC54BFA3A7FD94B0B0403793E16ED799102EEA3841DAE5D7
16C57A1EDBDC6858C2DAC19F4DAEC9A3D28BD9806F5E2A17BDB9B786E6ADE858
763CE3DAECA1E6F18F0B959EFEFA03ACA9D206C3BB08568F6F88220CBFBB83E6
0B190C30F0959024A822946BF8F810235FFA7904418684810F196F2611F3AC41
5A28E039602BD7D6B973F354B99536DD3DD47350CEDE8D8720A80DB951D1D9FA
C8ED3EF4D4B47904B51202BFF8AB5B5A9B4EB45A97E404E70501594579E8D4CE
B53AC09FCFDE40EC0A2F76154EFC8356EC921533345EC77FAD42B0D5F7F4E717
F7F2F574F03B3BD7A49878E431EBCBBD0149BC294A9A29640874F1BC354F93CD
45AEDCE5826302220B185F12F8DC154E4B79B1616788865CB602D83CD2DC870E
1AA53E3712C683F56B2AF483391E09FE53FAA4CD9E8C779273D47755CAB6FFF3
ECEE8EACFE15F309204FCF983F6E922F751B981FCBAED8E45EFFF31273BD8C22
F12467B61057FC53C3BC05FB8E7D8840A77AAB12DF037473065B62E9F3775CAE
DADCE1434DC5C0F5DA378CA90CE608FCC8C5D9EDD0C81B62505A570A966383AA
9F7CE59375525369CA6A559BEF0CA65D54A9BD3C7CAC80E222B09C97FF67B09F
4BD9445DA6B281E177D4991EFD61104D181BAFBDC438E980C7EEDE3CFEE38E6D
D1CCDE2A1A91269C0C8DFAF4776286B8C36778012234B80498544423C50EB478
AC4131EA34A30AD7E975C3B58C7B93A535812EEA1372D21BD158E193B5D4E1B5
B53C86DD1FDEE252A3BC89962812C68162BCD60868E77F47A6D7C9E547CA89C6
9FF493CEAAB36A6F25C04968AA801A46BCA9E0AE0A172DC44D874EE1812B3F15
3E63FE095A87CC113B930CBF19F03A349AEF61C49DE74E56FF237D7A61B3E017
01852402772B16F6E7154C570048AD99925459B26B502C1FE4152087A89E5F25
34B32D3AAC58C2BC29E4E3E88075114F9B660EFF434CCDDC96CC25E9F54CDC9E
19D96344A7B57DE7D10EA7D651D2112D36C1AF4F2E921D2551C7316D492C4F6A
7635B85ECF70EF5733EDB26731D14E5F10807D539C91F3FD1AFB8E35446EDAB2
1346AF2FE9E073F87419A0D24A42CEF307CBF1945B22B48B2CF10AA3B46065F1
AADF807C859CD6AE8A1BA406D783CC7F5512909A95ECF8F121E785288FA8404B
E1AE173CCFCDFE3A348753BEBA653AF5EAE9B759249ABEBFCA5C7E828BE667E9
C72222B84C4C79C2D12F579736C73CB6695C4BE1E0F6A9053A75D6FE190628A8
8CFEBAB29AA66C9557553E5B65839DC3F81CA3843FE252BC4D59367DAE09E106
5108ED26203A2B353C3C99D06F2195A2E0802FC871CA864B3ADB40C28AACA1C4
68201B9DB201F51DE0923D0D96041E11FDA9750E1F4E6B2806988FB62F4F9BB8
12FED2565FC116611191763AFEBC93D30AB06F8765C03873A103B2E721E2252F
38C304FBECC2D3CD8FAB4BADFEE9ED03016A46FF9A63EEB766D68A26681F75A1
65FB9D0C92DE6097F98F6C02E213E218294D1063180597B8C427C9B17709731E
FF3967B5A741B252F764BFBC18C29E0A119456512D964CDA9CE3175A99CA26F4
9FDB8469081A55EBB3F42097C89F8BD597B05785D0DD2408E252B5F31039CFF5
2DB5D76ED71F2662826D9A1865668783704E8026D233E83686515D2920B002CD
413F5F4F673D424112ED9EC733B97C136B67E2F9CBBF7CBBE4CCACDC779F68F2
A2183DFAE966251AAFDD0A84155B62410DA5D9D10A21CA8B7576CA4E07386A01
04CC5ED2C68B08B6321F881E98B4C46BBDD8D9235ACCEB4E79BC37A36535F4C3
ED8C840F1B579C3D0CE34CB2B48DB39EAD4D6A8939194DB0FB0DE0EA1D3E18C9
A4CDAC48A6AC5F13A0DA96A502BC592C6F87AD0CFDA85B3EFC1C18FD44FF2BC9
93B88B9FDA9A8DAFC04D233E20BBCD42F78C46D62EC4BE01C5454E0325157834
050B12CBF14A1982227AC122B2EF09BC2CB5F55CD10109EFA76E8C07A757B350
0656A4327D01C09792BEA1FB6F4FD96BE01DD0881433C5E50132AA1A19BABCCD
CD81EAEF4646A2EE67DC431E4BBBB599C78563FED04DC22E44F244A8881EB82F
BC7B66ED0334DEA56FA99274341D829D2AB7082693239C3468B177C20246C2E2
A09A319D14ED56EDB05D50EF7E4789E68361D982AC29B0215256CFF25F22E753
393188F7B79B49C0F7D460133B9769CCFA21FDF0DC77CA7AC67CBFAA34A11386
17C416D00ACCB2883C2384CE146E963EE5EB69F69D042E8A7BB67D17D0D9A611
2BF05607FEEFBF9687118515B18AEBD7960D454996DA0C87AC6908D0C344FE86
56CAE4648BBD1EBF369E7696C8B79441C929EE3F2358CD774A4F81A5577BD4B2
55CD6114AA6A305C8C263372061444E379817760012E1331E9DAB047409E478B
5C1B5D01DD0329409BCC90E1B54363F57DA008235CB3EE2B203FEEDAE82F34B9
FB6C6809BBB8EC574C9ADA4E9F4013CBFAAE497904F8FA721FFB3EA078AA284A
1DAB3BB85A73B946E69B578C4BCB68399EA43AFBCCB828C6F71EBFF8B571EEE6
7B2306F6CCF708C7972AB2A420AA55B7A1BFC04A27B4F8DACF8A135E22CAE0D1
44507CFCBA820799E413617E745B66E31908E90AC92E1B0CC8FA74E5122E1B66
D135E09A46B054E37922BFB709F40562D5737D15A01761AF688C996E2561756B
8F923AE34B82BF070AC5ACBE8B292816772463F644C7D257C583A30094979E55
1015629711BE7B3BC62F7F0C2F956BA1A8B0EB56FDC3A05017A993D91DABC265
A39EE4A494BCDEE071A39A579D536CFAF78E601BC228CD716E472C288EDF4EFE
8C07C256081F5B8F3636CCE0A293F905974A0B3701376CF10B8C676090F93D6A
7C13ECA74C793B3917C4EA920A63D57C1CAA5CFD9004575AA9F1AB91191B962D
61B798420D8EEF6ECA04DF85390E261B43A555BA97B9FC56723BD358D6931EEA
4A860E1A17079A59DEB9C7A4C43B2035D7A1E7162E501AEFFD43AEEE9AC38AAD
2250EC14C5FE593F5697EF6F029E658D3ED8F2928AB2757C35854514EE7A4859
BB0063EFEAC267B5D05C903AEB022C2F949D9B7C6C2CE48910D18041571B8D78
EC12E8AA4B2FF71C5FEC5DD89072F6A6708A2EE664643888AC42C12FDAA9ED3B
44B090C731EBB8E4C903AC30059F04637C5FC46AB405E68746B94535F38840BE
C013B783E6A871ED434F17D6CBB30775DC75B1276EABA9C364A37169F5886D00
FC8819217B195EC6E4FAD1F39E803B20AD604CB9C1DF2E6C382CF8541FF7E243
AA7F16F534CB8E4EE9CE38E058C6917D4D2261EF3B27F4F84A27603543947958
D12FBA7F757259A5D32A90AD3A6AE9463220934657E949DB063A3C2559073D8A
CDE59EBD4B0EA25D371BEF9BBB8D5035FA46F719B503CE4B2E2D3463B468EA89
30D0DD7FAE6D0CF0B2BD75AFA2BB38DD97C6F426AC0674D2EA733F52A53D4681
79AC6BA242538EC564F080D8F7D233AA7F80FED4EFD79B47D31ACAB7921E974E
0F025588467C1877DCA0CC3F8CD8CD85CB0D4F824D86E1936160397F909B8B37
4E4975E93D9FD32DFA0AE84699D18E96921DE5AC2088ED5D37F3F178A3591E2B
70F647AD95EA8125E3015B6FCE3025B3EFDB7DE7F7516462220BC899F66DE345
4D4D75CD4E45E90C376D62B4AAFC4AEABB777A186484F64E1F9754F99DBAC789
0C3C93363CB681B598F26B27C44ECC6C9AA37EEAAF4D84EB721F7DBBF5C291C5
7B5AE210AC11914CBF42BC59C783265100E258F1F9695B0C2700B79EC06C7B36
4E6040B557C7D6B0F7E5E5521E2A1FFE1CFF4792BD162749C3142978CBDFA53D
FCE348F7E725756597F57FCB99FFDAEF963621BBB8373366E02FEEBE4BF6A1AC
A730BA1FA90C0D7F09B3DD6A5FE918C6F128EFDBF7E27A57CE61292AAD6582B3
A661F4D48AF7A0713E00B3BD73F6BE22FDF794A8AD3B9762348E656DDD52180A
692C03E4F4098C746D99066929DDEAD48EE0347C6765483C5DF625DFE333508E
C5CA57188238DAC544CF6DB2A6B77A056FFCF57540C200B7E226E9F42099F4D9
EFF7C430C3934C7572F11F702BC27E0E6F4EA9F5953D41273BB6C62648D56323
0BA91CF1CCA07C2CA965F9970D72820A77D90755DDF6C0280A4876CD9A2EBC26
99F110F36D1F41C515735F1718E0BB5606C2C61197C0E5F915685D1657E4038E
5C8EC998673E8B9A14EEC2C039BE57C801B7EFAFC43DBD85780B24EC1F41275F
C6DF001415F381236D587C43ABF6B289528D56A6FBE9F3008ECD40DDEBB50195
FCA997A406854246C0F14D9429BB387EFEA69310904EE185F6DF3B1115629711
BE7B3BC644965172A6E99249C0B69894C01EA42655EA68FACC41EF3EB6953337
4F37DB8CF22C2D4B60D7A3E379BF644843B36C2E98DD5F8634E6EFAB7FD049D3
0B00225BB50996442E6DCE3C73B7C2F70EB4DF0E9F6CCF92380606C967D2C7AE
F96871F5A379CAA95E1C01A9A3F9F4354B5BF2FAED4B00F36F2CE5F46491EE86
5DD18EBBDE6C58A8FA419F310AB8BD06D067F53E41FBEFD1BB8FD848C2A52B31
C0E5093AB36A62182A6A89995FF251286E3B69EDA60B24ADF88E7005807D6717
8C574B5FF53600C5BA6C35FB669F3FC20F0982F462110093997277302E87A45A
22ED99B04853D66E5A22B56F79FEFE97064F3F0B29ABD81E289B58C0B3D0FE26
7EE0682D2174F5DF8E3F4824B954594A1F97194B19FA8DADD2164C2F0973E5B5
01F24B33988323DF970D0D828005E45C4144C5E6375773C2FB5EF2E2C02F432D
79029C1D33CC98D11EBDDA669AFF1099E3D76D55067C591328E391BA00975014
B1B8DC1405B32390852C344490E066B665ED5E83EB10748F81DFDE2C7EF5B3C5
422806EBA4D2DF54301B1DCB18F9F1704B5B90966A67F84AED0E31A74143EEAE
27A21D9A038DB847C0A7A69F0D76A56FD06129287E733281D151BD5B9556F78A
0076A13F826B680DCD927753B8CF393561712972B4422D91CC4843EC97AE7595
31CEB12CFBB0325FFFBAC2E0F8AC4EDCA2E0097EC0A64ADB79B916C30CE02D10
228AD1E71520E0ED963C3A3F94CF0C7669ED9E365EDC2D5A99F18C212ABC52F4
F6EA10BD205FABE4465EE49B1CB1F4719F2DB456B183EB5B6AF93383BEFFAEBA
1CA6C565DB7F48D70E947AB2F3137F58BD70339FDFA8B3782C32EFBD53D86054
B23D5F702D2B7E4FA697803C1F44946F43E83836A5E78412527A7F3FDF0C07D3
0FB6436D58753F6AE969F72B18C229CD1701D6B2E7D88E02A47DAEF3C721575F
E1039CDD6013FFB560C6B96CCC5ACF55B7175117B32C3262F948443F5FC6E215
18DF676CF6E46A1292A838C381DD24CA8F5863FCF7B4C92A8EA9C00578ABC925
159A88C923D1136EE3C09F5F2BF83009ACB01D758D8C88361E07E71F2B9F0D08
C4C68BC2EEAA1D3CD472ECB502DE8D9B48350829B5B3D0C21B8B5F817A611360
FA18BA477D4A5134D5EEB1C5C48AF060BC32FC2077C055F4F9FC03B295AA3F6C
4E5F3EB4FB283F50FE22F29556961C44D77AFF7345B8FC52D41F10C778AF57B2
EF246C6C46BD6AE63215E74A377B3975D693DA75E7C7B702E193980E93D65AD7
71384C2C05EEDB36ABF690B655D782FC1BF289FC20BDEFF4DEC90FF2141480B0
144969A6CA14A037317B990C456C9DDC35FD59374577A9E101905FF9C02D7D91
55A43D9736F47FCA1868BD92B86A9B976C10168BE5A616142CEA2FE26DAC17E2
00523B2AEC0D3A8E2D9FCE01B281E006E3D6E21743ADC4AFBD81DC52597ED9AB
2AA08AB05FF7D6C1E69A342EDE73321FB7E7AEAA45B23FCA804BC21FEB6ACE57
7A5933B8A26CC8110F40E5F8CC2C97CFBA728A7EB38EC991B38D3B4682EA1ABE
C9D8B982AC0A9B9862937A7D296E39A777D54978A5BF6B246CFA985835323E85
D72C6A1C47053786F998F1A646DDAEAB3C8E7937B1E10B841468F5EC1A7E12E4
E63A1F9266D270B80BFF3609CB4782A94F72D95E5BFDE85F8021293A442B6B49
2D70748E81CCD068ED6F85BDA865306B32B9DB5FC7FBDB838EF96D043E0EECD1
3F541CC9999D2C2E22F08694E025B169E9D55543637D58C0A471334C30F0130A
ED43D3536D870482D39A8530A18EDA9E6AB1DA975DE8609B63A22ADF574DF65F
BC98137224C40381526DBF33254BF327351BF533AF7C0ED6F257602EF5CDC514
624D5EE6ABE1C94999A54BC2D0159F63FFFC092EA17BE18192160BAD03E94DE4
5D0872FBB32AF1876A9144BFAF3C23EC859CDC79E83EF9777FDA683B174912CC
EEA92D7292F3F1E3B63AD98C3FF60A8C9D26CED8395ED8ACB58CC666C7DA7269
2A9F9EA3645D44D69A6F57F17601A74F3564C8B41EA510D612A77A1E556DE0A9
2EB8B94BCB9322B8D26FA532D87B27BF6D4FE9784E3A9FD23B208A54BFFEFC68
71C010643C7567D6C11B42B5F41E8F864A7710A13DD5E2995E9709B52E08D019
BFB8F9072E0267607A5D56CEE8463AE87C796DD56E10E9168AEF40ED1A5A247F
A60A4820BCC59A39ED97B4B8A76A1D035CF60742767B4126EED409A92E5D221B
A90092BB99D1F35EA23E74519C1C0DB38B0517F009889043740852B402BCCF4D
3158EA58664E682C6D8F8E04FAB6791720A72416FC605234EFE6D012AB1B72A4
A59A17CC1928B71FC7E6EFAD11FE96C04D4B1EA9955B52955E1105634D8B956A
823B4B4332B0C3792B32038B7DB6EDF99AF248483D7E38BE165D8885EC6A7939
4CF4972683285E4DFE79544B08481ED96B1453729FB63BC202A513ED96B04524
D82E004B8C4E63EE6D09B687A7BAA7351C06A3BB648C5602CFB588BB69F45076
CB2F6553B0AC8FD614B69E2972334A7163A0D8693DB0BFD83F713CD26D2736AE
E5BDF71E90DA3414FE2D4D3CFD7515215EBC4B44F8F29026505A2B4449390281
477064EF88263011D0F90E1DF7042F03A7F6F958B74F8D98545ED72EB73E34B2
2384F2A96AED2C2D1EC6C68CF020385D3D33608F3623EC435FCBB4656AC539AF
83367000B8ECC64D8B515B62846464B2568724BBE193204DE4C3B69C79A47F84
AA7F516F22A842F87C5AFA2332BD1B883F76C6FB3826B30F34D73D02B9DE2F3B
94A77F84783C0F7B5FF112F3FEFA06E2A0115AFF421B4D4263E407472E573C41
97E6ED4A35564E052EE5AF60871CB65BAF3F932CDDB4941AA0B96B71A5191B34
A9210CB626EEC965E62556E4A9205B208818DBC6C3AEA7813DAED0ACCE66A668
B7DF1389B4610336C51D88CB8DF114EEF3EE1F69AA5235043900CF3BC8D65F21
4573F04B501356941A834626E2F05EDBF50150147EA0512BC197E137CEBDC412
1B0E56914E61FB9A4DFCEADA593B1270B9DF2223803C2B4651119873B1D6B905
459021563FD417CA979E98D8999F4B9C024C6A7F69CD97912050D14F8D088200
5EB2F24CA457F2BEBBB9042419752C2129D5EC581F7263D4EA064059E5E544BF
6BA0AED9446F2DFB022094B43CADE15828283E3A88D58DC53ACDACF6AF463F29
000861536EE685777FEE338764AFBDB9A19F2B682D1495CCAA49BBDA524605B2
73DFD66300284DA9F10F6F8AEE03AF3DC3248510DC766F03DBCC2E0CCB129E76
7159DF63F689898231875F9B14BD9D2C6EEFBFBAA543EBF00F55CF6FD7892D57
722A7FAC52BA1B670B3F03859604905F3F446ECE4BE1E089B1FD7F7C0255BB2C
D1D77F3E037638768FE1A66F7DA54BCE6A7FD20FCBAD5913FAA38CAF6698F668
16027B55195C0CDF6356703ED3AA5FB63531D7B8A970A8CE86779C926A9FC454
9129B207A99657BD213163A03CE1F1263174CB9017A267E61D18A4301DA89623
F25E0C014283D7167DF500F474D7C935380AA6258DB4AE5EDCE1DD315D50F5D2
0921CD40022463F8CF143445BC83D74ECF34DFA1B27B1AF215646A21233F246A
384F99AFB5091293EEFFA7559AC8E331103C663E90A02B631C3C0867F7B9DA6F
444AD113CB9D2D3330ADFD728FB0A7A266F4FFD987828819941F2CDE0E2805F0
5FDC2F2B4BAA599E8C1169ACA39D8BAAE5F147BDDB1DC607888FAA52BF79ADD7
7B7678411A6744CC1B4F527E58D9D7C455695970C7A1BAF6AA4C81F205700ACF
C9E755CFFD750C3D4F570786A191E0779B7584700BD8E61AC92C668AA0FB0497
B30622A6FCEB498EF0A3E5D01A12E66AAD3ACDBF724A5730CC6B66026D325E75
8DD5A82F15D9E6AD7BEE15C2DDFE34403618769937578EF900C6F922A02CA13D
7A290A4FD1B16EE9A549827A9AF4462720FF5137A22DBE1C2FC8B1DAD78F24F2
7EBAEF1F5AA2B93D784DDA98E456F41F67A7C78382B3AAE8A19178C3BAD6F799
C8D90A54C466AE45CD2375D00ED68A82C01E88CBE05E858B32870DCCA79B7953
225F714456D525F15EEE7F6D2717451CE9F2F1E3DCA264BD05EDEF8FA7C2DC60
4FE2331D86590B421BE9EA6E73EFBD1371AAEC337C41811C5014EEBFAC474F2D
115A44C5C432D23E6AFEEA652F7599F634EBFBF876F74FD49EEF5D033216C047
117E5E9AFBA7386A24632D8E07ECC273601E4ABF2E2260B7007DA8F53C472C08
BB6064B3557E3C6309D0E4DEBEE74B49FC1F10148ABC12FA8D220ABB025C012E
85B2B1C1150923632C84E864E3BA061D0B2DFB326A3816F23529BC8E7E221645
F858C33BAF67649A3A97A8BC71C3BBA441D02A68FE95953F6792DF0E448A89F2
9601697637518CBCF295C49DD54D3D058BFE83BE0D0F14EF6A86CC4FE5732A80
339A704EE184FB4B0558800CCEAAB4B16DD0CFADD92F8DFAF9AE5DC6634BD696
A00D3D91D55630A5B8C2025CE0A911972A61A2B33E367126B994F4B10B4FA339
97F87005825D8BBC8B7591E0BC561A03500AF197FBE9994AA1BBC4F251CFC6E1
6BF9C52D8B4A458ECFDDEEAB5DDA3DEF93D2E03F77BF7D4A4923BF31B76AFB21
0CAA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic6-Regular
%!PS-AdobeFont-1.0: LMMathItalic6-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 417 117 0
%%EndComments
FontDirectory/LMMathItalic6-Regular known{/LMMathItalic6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic6-Regular)readonly def
/FamilyName(LMMathItalic6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMMathItalic6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{0 -250 1241 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD113E9A4707A44200A15F1431F9E64
6F74A5028622F1CCB472247A2D3C92D19C0AF82A97AA93420B2252C089999F87
E9B99CE919915A7841E47F18EA2729DBFB8D0F265978077327D4885A16B99026
3AF09EBA03D665F320B724646224778F5207197EDECD6BA321B46A9C7B1BE014
C7AA72E7AD74DEF4CCFD1905F237AF725D38159039E347BB692EB0BB42D933B4
A4F5113867999A3BDD6E56036DD46F7BAD9445E0EB69D6BCF844741CD349792D
3F6A794164344B7301C4BD8C500C92214EAB1BD409FE0D61470E69C69E668D73
F1418A89939E9AD8AE9F3EB718A13741D72F79B4E51DEFB2029F4979E0C7F79F
8178AD7DFC03558964BF7FA8302240FA1B7CAC01375924C41D0200C60452AE3C
2CD5F7EB6BFA476372518118DAADC1D6E053E534830EEC37A0160A24FA76B86D
3FD75B97E83D4B1E1216C901748E31B5AC51D15BC8B8EB18D83CE35525239F0C
0FF52411E08D5893C09162BFA0EA49E1290193D19157A30A5F21797106802635
1F19BFECA6B40461144E82A051FEDBCFA7B096E34A7EEC13F93B74652D2EF4A7
08522EB97A15EABB2AF74CE73F5B8935F65DC93EA24E129BF18D5F8B4E890B81
105D0673055DAC2775314AC07C1D99428076035B0EA20A382B61A8B4548BCFF6
0F0A48E059E7497260326AD89AD9815B1F9B36430AB8527D61C5EFB8AA5B6B83
2B5053D7C25089EFD48A2E023C219158420D77BFE7CB795628865715FAE6EDB8
89F423F0B97DB7AC2927F97EC4ACC2E9F4BCE46EE66B37A2F169E33177ED4408
5F93FDE909FA829DE0AE5D9BD0BC4A75A0141AA472AD0ACEF816F27FB4A6CB04
13BF8944FA31EECB2BCE2983E7CD2C9C68868890B42D91D3182096A7719209AD
32A69532F10D71FA1567B10B0CCD4813495F34F89764223F7D45F888FE1889BC
F7E9E0C3E520C1536228FCE80FD44B49B8059ACFE6DA964B7D4264039022F974
E8A6827C6C472B256C93764DB10437A38BE20B869126487C13C127C923B92F7A
9FC2E6E810BFF59200667CCE4717B7070B13352A50EA07C4B2688EEA16CBC50A
C44A26C32A540E5722C62BCB724E2CF4645C672A697583A839E6669DEA709E09
67EC8DDD7B827997852A1FF7E1DB025E9EDFF0060720F0BF98218930A94B601B
C7CC13B012EF6870380752CC8A46B1F2BBA71DF6347F7DFFE7AB9698F786233E
B7312E914C011F8ADC84EE0718CF57C5A0DA26BE468F91D3133C58B68732A296
71D6BA76EAE4215318846D2334B452E1BF1FBD0A0DA1F4E1995E6E64143E7BCF
23566F41F252FEF70099B154D0B7269021F7D385379D5EF73C324D5FFF98D950
8B88A05E1023F0E8D984888A5276EE2DDDC8910311C251002EE1FE787702A888
915EFE66CC9B8352DAA233DD92E24690A64DAB9771A284E5AB0EC8A650042BA9
D7FAC3CA2D8CB258C6017B30C789D2B16741B544B2D73705AF9CE43A75A60F36
2EEDB593FC558C180F16AB2B6178AA55A8C4C9D288D699025EB7667C3B34875B
51AE25B9A124ED690DF36E0DD21DC819CC6B36E8B6BB76F10C9017D10E40BEE8
B4FFD02A85C887C0FE726A877ECB82311C0B7FB9D4CFA3A8535FB07B4822BFF3
468BC00867C585D5A895824BB39629877C3EDB54BA3C0D6D3E0EA7EE60E62823
EEABDF8B7462DBB9F370EDCBEBD8197CC7B7539D2AFA39D33DC0A6BDCA057903
5CD088E899934BB86E8DDF999DFFAB90E1EBCA5800FB246BD0073F188063B471
5DCC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E08614769C017F6D4F14C52D7189D4AF8CDA367D8B04CA8D3F2307C
0A7A179419A80695912F456637F539123745CA8E696E250E0BA6B7C6277394E5
98A8799C29B6272613C152B0CAB05F3C7795791EC9AF2BDD416861A3D13FA858
BCB6ACF5BDE40E5DFBC1A171A7280E8FF4AC0D4C8A2199E9E2BAB5CB9131A76D
EAC166A7C449A549EA5111F1750CA2C6E1EC6F00CB6C62BA52D17FC66E06ACC9
1E6B858F9393AF9AA5E69F799E01D301B647DA57225C2920E3BCEE9D09CA5C60
F22B07F24A26DD8F4D6F9C78BFAA8D12A21531E713B80CD03A5FF4F3BBA2AD82
3BEF7DA8C97C30F1452006AA3B1A168483F6EDC4089ED02E567923AE6DBBCCA4
8C246A080448200C2A29C34AE6255BC79B73AE14B980A7C357681BB0962894CB
DA32FF2B70B21AF4D158E0F74652684A7150D0967F83E13EBBAB33588541AEEC
0DE8C53851845A44FFB46A93CEE3E8A0263882542F7F103D13C367EA8E1ABFAF
6486A9DBF6668550BE7858F5790BC87C66492C0FD34DB08EDF842E1AF58A09B0
85A9B7FA402029FE2439769D67DEBDC8AD8C861E90E5322951A2904FD702766B
36916DBA8F9C96141BBF4788FA435556B2B4E1B37DE4506ACC4224CFC00A8F83
33941A050B51B9508758F4EB2DC074D799F5116296B8822ADD743A043F9A6426
88D10767A9F99A072BD4C88CB579B34687BA4953B96DBA29F33211B12A0215F7
5F2F873E5074A7D593DAD0EDD97270FB9A87BE870321A49958B10E32850F0148
68E0A1D795937E61D4556BCDFB7F4DA63A884F9B4B07801D30B1357C3432D6D4
7B72B7D6040410C194EE5124ADFD7A40914BF569EA1F9CA8C8897E839D262395
5EDB3E97C591A3A5927DAC229EEE864B8C0F79ADBF88C0E6C41CC70D9010F07C
1CF9C05960E34FABB6C5DA4D789E39F35FE01F0B22BD9C63B3098457716D6B22
5EFCD0A960F3A2319252C7A0F73A4770E056209C14D721A714D713D5F2BFAB32
EBF815DDDE792B2556A87C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A229961ADB1D5023BD93644E4C23176BF787664F
CF245203C8C3E557669BDD382731E334C06F4B6EA145D5DF351211A0511605B2
8C540290A08A304CB1279FEB8FC14062F495A5EF2072B2957D98A1AB2E4B2A21
6F53829103F9CA4A8B6EB5766A44A7EAE4D5967EC3646F54568E9FAB28736D70
AE87CA7F3E445B1F49315332AC4AB47D5296FC1D3B96A166865C2FCBDEBAB3DB
6CDE74F5FF556BC9358EFD0B43F697D889D0331D1EBEC40C00DAE0BAC2DAD9ED
755E5FFAD0630FA5E7A859A7A7574538F9F053681739718F40F0E38BACD7CFD7
7AEA51696672B61242A172592CFA375C9459781A9CF2220829BB9DC3183AA384
1C57C63A52C34B1117A9F5876C1F1E6F4B7A538531AC90230E204E79B38E21B9
D34C1CC58EB9EA574D56ABA08455E578B35C7AC6ABAF468589388C64D240ADE0
BD3E20AF9F5A84B8A2DC024C797347D58C4C077BA4CCE693A16DE88FA00B4BD0
D50228AE36EAD98A9F848C8540240EDC842EE9D02A92CC7AEA8756FAA7AC4AF2
930A90428C8B647C2E119300212E553BDF10051AE8E007CD6977F85E2F81FD6D
45AEE3FB3672017A9D474460A6A883A080E4E63DEDF20726390852556ED47A7F
3107625888E6822ED9B23A2915FD46F00341532CED98B75B0E8ACEE3008B9FDA
6E3EA5AFD805ACC3965572A20832658314007308BDA7403DABF573B3AF49FEA6
2A30052FFAF339EC42E801CC945683822F96138C1B79FCE8C579459212F18DDE
C121A334786669D97451426A660F37E98239D741A622B3715E1963519561FE18
C6472F3FC06236CFDE82C88DF1A5E13BEFCE201AD526567CD648A8295D0A1129
4CED2024BB29F7DB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A31644BF123DA78DD615C4287ED7DD43B6
79CAF0EB2F9F428C431683A41C2C61A429E3DC0D87D76AB6294CF8CC9918A6A4
6873A1769ACCF25B59CB4365AC451FE1D956E1254970C706438805E25284C7CA
AE679F2B7C58BE9909CBFCD273EF5617183CFA64757627D2D567877FDDED97FD
7C9E73DE4D6D4ED370EFAAB4E52F30E55B902ACC35DE87E70DE8EDFE7D803CB9
B4F8D58998C2ED6B93CF62F8E991B754899CE46B900DC93C5A58EADB30BCFFA3
A71EF23D13FDAFE72642854A3340E64896CC6DEA0F7E3AF4C39EE4E68AA31889
A372F02266FE65ABCDAA308258FCDDD13DCBB18E462B56F956B94CE97E870122
A0A46CCFD6B4158BE06C768C73F0377CE3F21E030748189C553B9F62C83765B0
149330C96EC3496F9F2F9B289307D7E0C33BCB7023200FC3221F12B5FDE01011
87BBF9960E56CAA899438C90156BBF2B14596F131B71830D84172E7CD7C05B25
85A53C7CB0DA5729FD6CA218A1CB03FCB945FC24376A45F2DE0C21378769921A
72E46589CC08EA87EECFDF36B819B07306C448777163A723A9E71F504DA5D447
AFE8CFDBD88089FA4802F449B477BE528C3667F06EC5479B0824B87C47EEAF1A
0A23941B8257A2A5EC3F63FD62DD09890F4DF33AA1E70376A9CE8E4B6C4211CB
FCF9709AA29144F3A40001AB98BE816619AC543753969AC5B540ED39E51F5869
98342686761A7C070EA75140331D7A0DD5731F0E395A6CB0412028C2FABE2E9D
C3B57F412A5CC05FA7599948E6B8B50BCF16EF9825F6B20090E4D6280C528375
4EBCB42B38B7ED6634AFE0B2C249699E212509817638845B5604BB526053ACC5
C0FF6206B2953C9350E57657B374600DA75FB8D5B00DB7BA78FBFC5B95E167C6
CFB9A2275128DDCE62E56BBF35D257EAE99D627535F8E5ACB4A4D3E1E6D9D24F
9CDD9F80028D37C9CB4067A28D41E879AF98739929DDADA413EE35894A6A5B14
CBB136548C4B00E47FA77732DBEA89E10E98CAED50DEC8AB2536A447F7D46D4C
63A99114EFD23133E2FB8243221A2E8AB1CB892DE716CA34CE544502ABC9526D
F48B0762B57F8AAF2E120D5DCD70D140B498BA43863C45D94E6642DD04CBDC31
0087B2FC75CAD18883113AAADF162B023352069DD1BDEF229E16DE8D008A4CCC
BC317B47BE42354627EC77B91564A034FF2F3B60508154B08981B62A2E9974E0
E9A46A3AAC7F87B1FD8620A5A695852F2FF71CD16FA34635B526265F1A635254
75398013F04B49F67164F03610FAAC41229306EA37B9DF6E8DEB1C6C2BDEC9E6
EADDEF6E99BC482289181D89CF74F9995B40E5C55FBC81DC7686AE740022F764
C49FE9B49A108931E3CB077A9C53C764DBB47C789C795E97A537F013BC2BC786
BDA32DCD5A856714ACD5D2BB98B011650B2A5D8B881D6854DA373B002BA279C6
0649618BE2D9B1E10DECA9090F66F089E4D7C6D8087016FCB998B95F194BC9B6
E95BA14850E251A4EFF1C66B148E036AFB7FF007F18AAB4CAA2CEDB34F65F327
D58731A241E11468BBA16BA3494A4E80FF16410385FF17A1444B2D1596343B25
64124D648B1E0955CDCCE027BC9F127F79622FEB3A6781181EAD3F02101364EC
FB540C0B2473F20BF05A8315BBC31178398C4DF5CA482F899FBE7654F08D93E0
29994A566CDDC866CD6A1CF5DA076F94B31AE4EDE8237218A12D5E9DEEB9EB26
7CE99EEF40ED1A5A247FA60A89A2EF6AB95CAE1FB119500650FAD0C18B03564E
B61A0D261812A3EDE5BF402542BD215541E3A478F0933EB129EAE44484E084BD
DE7D2CEEF5E54E2CBE14A20F56A27B70B9C7DCBE9300AA2826EF2D6E38C9EE32
60EAFD1C1B7E9CAE9EE810B4C7934D08C44E8A3EDCADDF8FCD6E289C19A7056D
A716700F391FBA6480099E8276173D443884AC0600329C607B7521B1C1C0F575
F4A979FF04F1B3C17864FBC8B92B77DFD068E53CC9111E290624DC39FB79FEFA
C07D2DA7DEC9642694ACAD9C980FC6F26BBC4B98AA0F9624D8678DDD10596E3F
55CAF2F4419B78FF39B929627428C3A6736D8777332C017A9411BF924DE0E40A
24B0E1B797094DDD8EA17A7A281D007F1F6EE3CB17E0FDB167D05506A96F7296
047E208835176F3154E8757A1C21857556EE412F4434E8062A9F9101ADD125A3
2195B8CB98C9B19235FE35E0DB6F1FBF31ABF448C9261B75BF1EB61260DEF86E
BD69F26D77A20B25BE10094D4C196E26034F2577471EF7CDEFD087BAFFC6C93A
F8FE338E70387B4F1BA2119F24E0AC14D6C89D60DBE2E17850FEEDA72C8A882C
F268AA853D036C7633EF1DA737CF40C5F170EDDCB3B5518E28C971EBFB43D842
99D336736B15B05591122AE51D1486E1F2FA31E9C9379F2B3440AEB83539438B
B83563DD61FA39B66B4DDCE39F3E590823590CD7C75BBE8B58EDC2F2ECB1E684
00C6706D29DF0BCA1B5C649CF209DAFA7619F27D165264869A4D5EC574FFF640
76FD6BE210178957E86D8B7303BF3EBF660879783E563E5FD42AFA2E2C523957
8183B066D5A65BAE4AB038087E40257C1FE6F484941D7387A2F92A69CAD3FFA9
AE559D3043D7128482D9ED343F64C6CAC65D8218E75ECDA7292A0F2FBB4A60FC
7025B92E55DD5D5897F13EDBB3356F9E2B9DE1FE09288B3217E226202117CFBE
3DE2C6DBFB0BB25BB13A128CECEF9D4D51001EF6E00C9CBA158724AC4352EBBD
4085CC2897C588A09FDB14647F570BBEE55DC7F2AED102A1134FD48A8C8480D9
137F359E6287C5369650A06422FB0B3B29ACF32F3DDCB4DF8B5AC385B0E99329
08C1050CB6DB39BB10C1F4D149305E6D442E7D8B58020A01C8A417B670A41F2E
B01A30F2AE8C73D83360E849EC83AABD17E084BFD0A3606D42EFBDAD44BB98A7
440207EC9597D409FBD1E6B2429DCC30846293BF3060E9CAE54A81D21AAF3BFA
BAFE773F095BA4D5A0F9607E25DC3137296CE1D8E2B8FB0DF6B5FB6D5C415495
635BDFF798B08041C566CF1D783EC7B15B4330A37FC9C1BF23CE45EF19471FC7
2472E528053EC041E396333C90480C82F2B80E740D5ACBCB0882F35AE8A3E3B1
FE3903A941EA20902C10B0C3E73DF25106052700653849C02805E1C56026FA71
302E87A45A22ED99B04853D66E5A22B56F79FEF73918B7CBCC65CA7DB3E410DB
1AB7AAF9B483A4DB3B333B158517971542915D70737B3F22C6A831A9821624AD
61DC8A0DE77A1F4BA087E7E54F4602592AEB49D4AEA40B81B7B653D90E146B6A
AA318E165C8353C9CC1F0927D73E21ECE52D9C3EA6DE3CE70352D2ABEC8E3DD4
CCF226A6829DF67E37A242C5E0FDF6AFCEBB0621A8ADE7553CCA3725FB707ED9
526ED054C471B82AA52B6C090D4C6C776B5610954A6E5471F8D8344C07DB8E45
BE34098668A5FB9DB4D49F3FC041809ACDA455C62A76B51D730D8B124BC6B76D
049B17736CD9E28DA73506142B6AA54FDFAC9050332212CD062A6B96FB18552E
DB51B991870A6E579DC68B52DF7F950CE1BDB15548CAD879752198F3A2141F1B
77DCD2B7DC83E662C19DDE6A5207ACEA1E0C78CBAA7A47C5F3D0C745262B88DD
F05E7E3C1682E8E90674B781EF298DBA6CB1758D22EE8A7680B01DAC100D3748
CA1BC047117E5E9AFBA7839CAE44964C974F08DB4C947F074F5B3644BB3F93D7
F96770C73499AC0AFC3E20F0BBDFA01502C9A1C30E9DF357529D99BD156464C5
D64ED5C7BE1C1DB9852E09F62BB22A3A51BEC8BB98DE63D6763E8225E9ACAEE7
9D813C62B96A7CD2247A269F53AC59E3E886BC531628CD9FDA87188135B3D6CE
0F2CC637A8F2EEEA4C05990EB23142620576551DC347BCB2302D5D5FCBBB04D7
7DC4955E84168F9AC6EA2E25C8C38B8A36B337C6925E0CB5BD963CB791E28CB5
4B37655D9DC3BCF1F660E8262CD10AA45C67562303483314B5B71B07C7F8C598
D226227FA8C178C10D90A2F26A639CF016B843ACE6B352A0B859AAEB15A52403
FBD562D284EFBCAF3553CC5A757FA50D53E6AF18AF09A1B9C4792EEAB445547F
698E0DC00CC722B65CBD277C5DF3B4B1275090B71A4D4B3B7961171D67F8F6B2
6EBA8AB37B5C35DB16D8B776255132DE99F3F4B7530A72C49503FC4D5C84291E
0740415B51E89FC1E4887D1912C7FFB218D23A08172BC11116C8028E77D0FE5A
DDEF0931C9EFBA2B76B78F6A90C0E44F8236F55938C3CE5A9EEAA8379EE7D879
D13C3E2D204512584029A7E941946AB7D45710ED4396C6C9816137832A56C48F
C89066B9FF63B80A84B36F75AD6D455B580A4BBE440839A54B385C9E4571C466
AF1C084F04AF31AB83EAEDA618C70F735DF746994341A37D17E8AE636315CE9D
47B1A020296D23FD0A59D6AD28E34849187D767EDE855B520ADFA07DACBEC45B
BF0C25F00DD94C798C8CF098F26C8AF48B458803BB26487C1391BD9A5B51F33D
505FE3ED168109F1F39AC5C3357E48CB38906275AAE8D8CBE9ACD7740ECA4A47
A985E2E16051FA4178F6557DFC8FEF287CB787EFF59E86B4A72A199F16F2C24D
D5A6AD833A4BA6F96FE67FE603F3DE0BC536C9A2A04B73CB2E4EBCF70184C5E1
D9C9E3DF6D0AB7F44E679E8518074632F6BB0639E2AA1DBBF34708FDB8092FE9
343274DA68CD751A72052D4FD983EB8C149E081333B2F0E0A54134F91D7B4ACA
E954658CFEB3FF04F3F9F42C57124BF3FC0BA485E050DF883E4B2767E236BE21
9FEC94EF94D9F2096E76F1C558F40812444C6F0F4DA995C8C03162375AEF5BBD
6BC3B250625E4B5C2B2BF9879F853460339AEFAF4FCC58EA396431BD4F95BD5F
6DA31DDC13D860842BAEC5EB5C217FC685C06C5AE447C991137584534EFDDE0F
7BBB3FAEB89D737F9FDD69B4EDADB476A1E588A8C8499A8917CAB23F00BC124F
D93096D1B365B754E3D03ABC8B3DA3F4F6C2DB54682F72DFB7E665EF36DBD3B8
9455CA9BFE2FE8ED26203A2B353C3C9C7AFCAA09793C8A74DA25396CBC1484DB
565607911498AE56FF61F2AAB48F1B954211AF0A38D6CAB3BCD6697C7E56C29D
62A325714D3FE8C3DC019CC01E8738CCA2596AB05857E4B8F9D6695EF332BD3B
AA9EE551A4B142DDC13600318F45CBE1BB1A6E0CCF1CD79182D3B235B457CA9F
B713822F634A96C5D1923710DB4B98B063FA07A5FFE26234C70FF6EF6CA2A853
FE0F76AB1ED5B97A1060D13911F4AC44FA5358837F7CC6ED863F0FCCE5F79065
D7AF0839F444CFE8AC2F2FF46DB2B95247BD8261F39BA12AD5E50433EF517BD0
FD04C73FBF1058A8907ED43B4C144BDAA3C4E6BE9637FC8BD3E94D6257BE1B7B
FB179A4479EBA92EF2EE4E7B73DD295274E1D416F7AD7338FB3116A3CFEB9E33
8EF0D7B0FA721D7D11990750232AB90B60DEF84924B838AE79C6689275697225
1698C73A825EAF77F8C38CA8468E616771E6C9093D7E3479B0DF3F3160EA2059
B5F7BFD55E90340B4244BADD57DA5902E2C08D00E814009234E2A36EFBD854F8
68BC9301D33D0203F8D1F59EBCE526B06B610DB1B028D29F838A52AEC3BAA982
56BFC6A306ACDD86AEFA6F4F2AFCE55BF27AFC96D93AE476AB15324149043E71
3261671835DDF163EA8D3DA7CB1F0514DEECC225301813E4ECE6D689B0A04229
04F28E6DD3CAF0134F9E19DF8F5ABD86CB0F8CDD3A059F2F3421FF99BCAC2D54
03D67B0DD5ADFC6174D559534155A42F6626A6E7CFC849FBFFBB17679ABA8C34
B1296EAACD7DA7010ADED0D6A83F04F396CE83F0549B1168EB7DA7468011420D
BE034D5AB67817DA21F12130B85DF957C636987F2ED81971E9FC729AFC1E778A
3C062A85C2282BC39C571BD45057FD09085730695ADEFF892B4307BB163A248F
9A2052CB8980119F3F2EFECCCF2C04B55F44FC0D155C1E04055D6F81AE5E20A9
E98ADD7649142C6CC2FCBD09F82ECF0716F5378A8C51C139D72816DA8B61E413
EDA36A71E7B6110CAFAC612E3E67F979E774BA9C7A580D605929D6D790A34084
7DD751CF51F14D89B269A940060FB0B603D3A2A6839C1C36A3CB55707A0663E4
D7346CE1DD000B51AB4A815FECF291D3E8F573EEBB83E6F9DECA82BEB3F58558
67B2B884E4A9A334BC95558E4C1A9D0B93E9A8C0D83CB8354B69357920BEE4A0
4E464B774D6CB4588DE10B3DAF9F7E546F6AFE62D85E8D25FC1A0039346F9156
82672DE85AE82551277388BDC62DE6FD1A3DB14805DB66731CE5CE34765A6E35
825C99CB7AFE5A873340B50AEE34371B1D7C90AFB517178C9DFE59CE8B036E3B
067B364E0F77D36DC299ABF128FE2511732602A5885A6CD283AD3C1C87F360F7
BFF771183B302FF55667390AF2E314BC8E0EF10504B5612395461652E3B2D6B3
BCCE3F5D699B3E2227DEF786D7BBDAA2A35EB13FD17790793B2B4A9E06AFC15B
8B1E7C3534BF816D19A02789F1E1BE623EDD5DAF54733EB1AD965E8A5A3ECEEB
F44790D57FFB857764A8EC459BFF61D9A893DA0177CAB77BB183F54581052B66
D6CB569F8C51F03E409DCE0717779DEA582740E49F088BEAD6E482EB87350926
910860A95DE4100D2A9BA91424DAD1802F2EC862FB85A143D7B299223ED85252
02C31B687F2C19136157C6D83B33313266F1BA8B9E065A0E64509902D75FF0EB
AF919567B7A1CDA5E14FEDA66F60059ACA0ECA3D597FBAD8C7EC31F3C1C46E5A
E79F74B3589EA1C34BC2A4827253F72CEBA7495FFD2989718F2A54E5D0EA1719
ACDE43012A2AAA1F71550220B035B6AE978341404C817414D0579308612AD113
219204CA43994CAA4671A6A97BD8C6807C21360D0C3F7742F47CBC2D74EF214C
0B15C50A9B5A26205F096D63762A9B14F267CE0337485EF58E37EEF30EAB487B
6E7AB230EBC988C382F594B4D4D4B92E6AEC4A9F07841FF93433615B89BA1272
6F5B01CD5715C6432452ECEC048DCD14814E47DC1226F723CE25814E30876470
F16C5E8F87F74CFB89CA99219C25478E0A63F78F3460EDD4F64B4D2A5B3E660A
B83C0CD1BB032CF0DDA97FD7C35218928C48545178CCAA9646C6C89D2FB89665
3CB3AF6C9466BF2240E2A71EBEA84FE2BA8B2BAD7C2F670BD9087F7531490409
D02F3D87BE05852F9C004219582D45949B8C3A7907A725B1DBB3F1A92E0A0456
D103AD819382A9EB1E201AD6F522AF0386A30A2693B607A67E0AEAA7E969E420
86DC576CE06532479E48E7E905FB5E8F9FC3DC5F258FE3C18E7464AFBB0B0757
2E4E438A2F1A4E37E0909724BDD52F4D4B98C4AD8E1A1528BD444DD1B0EFDA76
FCA43DA6DFF11E72D5BAA35CCDDAB44EBBC0C71C3FD43F21DBC6904AEE4B01DF
4F1005122C3B92BB93F4E9CA79A797C3A4F27AA9924D6616FC860CCAA3402216
64068B6E7C7CF2E2432A65BA21DBEB0A83FC660BEB3F1A3357D218276A5D0FA4
EADB3616CBBE98428D5D811FF6FE99AD7ADAD0922C1BEAAAD9B337968A02FCA0
1148C302E8E3AAD1DD61DADD7A1FD82F0C2E744CC3B65AAC7C04E9646515EB8F
EF55DBF964A5C2AA9623B8674C8259A681E27E2C4AE26093689327A256571CE9
457E795AB6B63D78163F227F1385113B9D2A2F0C56DB55B7317231C2B2F371B1
559D8BEB245FFAA7955250F08E8F5B149E8F97D25635B98E9B51FE570826C75E
64296714597A74010F59376FB1AEB72D08E929E1630A7750DE134C6BC13E5AAF
A36ED9F7A8E5D9BECFBE4384E04B0D6FECCB0244DB29A8B801321969CD052FD6
1493FDA211564478C68C592E158DACD4D9005B983760C79C08C12658303A3F51
1EBE5F047EE68288BF3DE1225D981C287FA9BE1B690BA0F8059823BD2AB80BC9
DC78BD724DEDA7987A6DD44876D3FD2B0A21E719D5677DB0E64C7650DF6FDDAF
6038DA9D24DC1978AFD87934AF5BFEAC00EDE5DBDE3D585DB595D29361F8253C
26C37E09B4F87056EDD8C90917EEEB978E51957475B5717AC1BB4AEDD87AD40D
D35C3449819CCC9366AFE79A48A3BCA95DB66E5D14FE0A8C3FFFD51B5492DB49
BF8810AF0BDC54BB1D08740818CF45A63A694C8F8DC44FBA5607435A619684F5
02CF60F00AB8418D0C93AC7EAA9DF793A62FC3E0C50F55A84F67D932B8062860
39E75042D590F24D8FE9F50D35EC6FF30384385CF7C56DB4A483D83D7CDB2BA2
48A366D5E0651560A4BA2299074E853FEFDCE9480F0E55E126E1DE7E700FC3D2
2EC26F9B2761469B0EDEE8BA22F029985C6F5C6E52567706CB28468A9A6AD9F9
B873F1845718FCF81B2A15BF986954219C2577014CE55CEE9E4D5B2FC43C7447
A9605D5D86CC06E8029D4F57A392D2738F846305E8F3AE5B5E2BBC2F802F00B3
A75DE53FEBE1B7B9272A951A047119B40830A39909494E86AEE21694223DF5E4
A7198F31E2B8282BED7392C7BE2B61691EA52F310E0367BD918A9DB9077118A0
42EB52EB7800276E7502D8CB8A68A46889B0D2DAC7CE9E40D84F17B6ACCD8743
2BF87A6B87D3297452BA7EA1CA9EACEC454312EC1DCE09A40896B78BD1D5A73E
157AECB9F3F59C0D736946734C6DF70888665716037A35F574BB08A82641F363
6C82E2BB16E686C92C60EA329075C30D3F97A3214A478933678E9C5B2267C747
BAFD5934D95FBD2640BFF7E94C4C260BFD0FFF9D966F224AA72C22207BCA2267
52B21D21999E31A3DA1E51A3282038BBA7F7FC70987A57EC73E5A6B9508B48DD
49577EF2E015E8D9C0F64025C76E0550BC5D75F5C40F7C7768A67B861D5FC288
7F1635AACF2782022D039A8D49085ACB83B160C466909F562BD4C26A26BEE741
ECC847467858898AD528633F477B739EAAF07A516D86CC678FF6D5A199877F04
81B1BFA806A353E3270334E0880843F700FC1F6065FA37F248AE52A1FBA985A3
1F28AC72D636AE969256DC91944150153C99FBFF35539B5E3CEE76DF3204AEC1
961F654E12385D1EC21D1831C177FAC71FD55A5490C89142F2844CB7E6352B01
A07303DE29B299AF582319835E23408E414CE2299CD46784E6A7AE912C213D0F
380112FEBD737CFF6C1483C4520BA4A4B904A4031C519E155A116C14F576AEF6
6E86BF55B83AB07C8875DE7D96261C02AF3B27E36352F8DC981EF838587C80FD
855F1733F50F636A4C7426584812DA63B5F0B1E400E9F96CC34E7E2C3CCF88A5
17FE6F9C5FB51F8737E0EC21F7CD596D42A88458B89786C2F6D96AD2D415402B
06C2CBB2CB91B45D00DF27E5A47692A30A7D13527A7F3FDF0C07D30FB6436D58
753F6AE969F7207578FA40B7457C36BF9A0846A0C5007E8D72ACF2D32F854BE1
642416405BCCE8D41818D663AFDC9CD1C81B91D658B398D4C89F58C854451014
68001F40721E8DADDCBFCD8BC92D0D26A7DEDA6FE09F7DC39F9F2DE66A66190C
689A73A26C5E0137C208DCF1A7143359F8EE27AB1F3639B4C997B3FE3D863BD1
FE2D56BD513E5BE907EDBB61A117B7F1BDB61AE87F1906CFADE3EFCF095AA187
EE498BC5455C976C40C6E24D239FCFE9CAA763CD150D404C418B12590B6EEA0E
1A19CD139622317F5DFD2EFBD95A7589BAAD70364C33665F90E24D35581DA77D
776D1EEB96F837A3A2F5C501AF422A313B47DCEC7A019705E05AC514331F7A91
B4F74898E2FAD14576F81B1D688DD8F61B1E4450C0C994D2FA8F4EA0B31BC626
75775A139B54949665078867B4A024FC24B16AB6474F370F7F61C7A430AB2303
FC215B5B353C8B1D386CED0321AA1103F5F4CC57F15121A5265A4B316901E61D
0B6A13CBC0EB3B038B56DEB99AC4C60BB469AC2C2CDC1E415746055916E409D0
85688DEBC02A6E020EF5101E41C289C854F7452F28FFBCEDB0E2DEF7ACE89539
7DFAF366B982B1E79ADC6523109832853C664B53C4ECDF81B0004DBE82B86F5B
A36A3B2DE83040B16BFFBBEB73850E2199B8D101C85CBAF179EC5881CEBF7EBC
3B30AC8AEB18B09AC7183771066ECCF26590A7894CA6F91AC2CF4A1420693935
9518C6B25D2C97192E8E1F0AE8D3882052CD47181C522E1F417F28A12064034A
7290750EBC897F11987CE12AC4C09643CB0B9D921B4A6980F6B22FE3C7B7CF63
57CCAE079ED34837B5A08E55E6319BE14383542B9F6500CD29B4760D5B4C77D2
5AE31C4A75BD8C7EB02722DA8D894241446F05FD5DB3815F144E1EFB2D400AD0
25F1AD7295D531787D2C5D4E00A09F155BFDF971B5A4D0AC102C2CE8A28E1A82
794BABD4D8814B53865E03C0C0D6DE7B16FE54A2CD42AEA5FAB6694A64B334CB
750BB6A4D0230ADC13EBBF5AC7571B0778C0E9D25358DA06B20DDF35F409AF15
997127DFFA9ABFF8C858A51C83CCCC572024A6243D6BC209B8D579F6A057A27A
EF243C4B389CCF9382BA5143D6359D3BA2ED407299B5C9E361C08AA256350ECD
82F3B38BD30286E0A8B3E42F7CBEC366E60C18416B956C6377E02A43FDBC78E4
627ED79B16862D939F3A3000659AC050E7001000B2C6848457D632AF0F1DCFFB
6E5F5F586F3A72BC1E72A5F984E7235607EC39E49ECCE85A8E75B8B18D8D9B9D
2227C7649133EC6A81002AE7A4E697857358F58A400549BAA570F95B97AE0BC5
7BB244A80105AEAF034D50D17F2A2913B639720FF4675597704DB7721A0FB87B
BE7530ED3C037A517E7F4D92C7AB7A2B373039EBD068D131C7F302A2F9FB65EC
CCAD4616927004178B7B2CE55A8F36653841CD79FD3514557D69140D6E7E9813
2DE2FD992965837E604A8B2C51E4FA23D38F0387351BEFEAE26D641D49B7A349
0F09BF16B8D179FC176D0735CAD73632F8EE970DC0EBA43D2C700A1D58F29F7E
F1487F54EB23A1CE0AB8CB768EDF04DBF511A3BEB1869F9D5F0086E13F8C3349
8D55FB08ED70950200C50B7E71F8C21BA46E833E6C0DCF6556C1CC6A1C88ED2C
49C1700E8AC2E1EE384B0F6907DA0232BF5153AD600D17DE2777D5CC84335A77
6EC13A25F0B85F0EA2FB526C4A6975188599D789CE1B95719560247100F68FEC
756F7AA110B22AE36B9518755C2FAC2135E89AF71192E8CC3776F553A88FD966
801A249712B98F8F6684D7361A1286AF3E4083CC9E64F40A500F045A27CDFAEF
A66D28B966E7D491B5803E4E32D24FDE0B7C56732957AC35E7CEA2C1AA00C6C7
57576EA0E4C8F0F14614231A275836A622235EADEE4F56A388398B1E3B8EF7D9
F110CEE189C26CAAF7990882F149552ACBF1101C0CC34540AFE14778BB219B59
B3BB99066BCDDBD6A90DADFDC11833C934EC4E446C77F005D897D944251600E7
A6B304DD76E088EF97077EDE26FD1456F4EA599CF4C4B22F65104F6D0D96CEB9
463A89A504AB57C377BB062C02225DCA03E6485C035C6247166107D6C1A4FAF9
AE46BCF6A6475B4197423EF9DE9959CC5CDE05CA9B914F8749608248E964F913
5155384A2C0EF7347C378B111AD792A90E38E1552BA4D6E36C5AD7B56F4A5D0C
F8FE219670A817942121C56A6E64555EBD682B2A587F38458944A0E355F989A6
D77EA1E24367EB14A7D28DAC9A22E2DF55C42D244D9DB91ADAB25927B9001E6A
DAAB86BA6B2B4E28F3C65566E2DF0AB84140F348449C01E851C4736321D6DFCE
20133ADC7C1C76B14667721A220ED3DAAF96F20E29D2F08BB07743827690BF7B
6E45B4F8674A6FA270F14B4944F276428753AFF93D541651CD027D5B23BE4FC8
6005E73CF2508994E2244B800EA15AF8C16B9B8329E91644DB1EACF0C0C781C4
F4C411F79B1D23A87ADA31D3A48C7190B618659D7D0B64A40FC4773482AF8C73
85F80E163B9463C38F611AF4987F7203DDCE93170428CB54EFDA16BCA724284A
ECC3A2904C546D6F2ED297BD3D3A359F69CD6D9D92F5265392E03264AE22D81E
75A04AE68344A9F152859C697E93BC968A3F78C8604FB03A0AF394E19A0E50D8
A50838734E691BC16C50353B2441985488F0E70612603E3F0722046046DC94B5
017D456E865FB2E416C4E91494CB6FB74220158EBAAD27211EB43A348E7E1F83
87334F443CE79BEBA97AE481AD4AB1DC86D8BDB89DADA068799547812B285C06
A7820642245A91B895E018395581C536C3CA5680F622117252D1D72A6D9D057A
413F73C7FEA1993B5020F8574CE0C8B6FCE43E382AA3BBE0CAF9620ED0ECBE98
14BD19184B2C0F3B04B2D3ADE2358EEB27274D7B30DD69E1B2C3CA70F2F79FA2
9543F526BE2A04C6309DD3E47CF1FA44EFBAA756B02E839A6105021CA9B728D2
7C8018BECD829ACB6C3D9129E976A2427E1611066E0025917D1BDB7E9E37AD93
5833B94133FD5C6E5F76EBABE1C94999A54BC260661FD4DCE55956FA246836DD
DB17F52681C14DE689A8C6F2576DB779DA5064C8743100C8DA1A4DF6C8B7B019
CC31279CD27DDA52E1DA4CB052C16E049D2E6645239263D0B6E6419174661478
75F99B35930AAA74A477AFE29B1DAD0E6BD33735C477FB9BBFF2EB908D91B245
11AC525E15EA2EB389640906449D7A0A2979BBD6460F393365098CA717F915EC
27ACD59D2F35DDD0320956D2148DC7C2D7EFE859F41ED2661FFEFE5493FBEA5F
B1D26743416B6D20BA817AB49C66552CF7FEF8C99C29BD310590E1B613AAB89F
20B39C67B801932612BE59E8C4EA4B47A39D9D73EA96FEF2811F36BB337D4E9D
38D33E46E3F79F2BC92D811CC6DAB392EA379D23BED8DCA6132D76C53B78A28B
C434AF4C963E047E7CA794F2C7E845FC08034E600A9A20EDAEE67F65EBA7C2C6
1AFE1C7FD58404CCF6E173D56F8D3D3CCEC06A27BB12FF9B399DB1AF4BA9A570
5502F55E4CCF7160C54F7BC202236296A9052306639F4672E90E3B9DDE5FB364
F7BD728B86D3BBE1E37BC2104E79747402361416DDB4C1AD10889CB7851699BF
FD28D02FF638853114464CF170F3EAFC1572D2E56F2F0F692831903D20979257
C35CA8E92DCD33C7DD73FBAFAD2A3EC3AD445193BEC19A3ADD031C747FA67225
34BA34991AF3F1BF309ADE33C2780E971D3952648BE3ACB42BEC6D5B5DA0CAF1
9B5792A3F832853CB465BB8B66C50948800458912B40D3D1C93BFF447255A99C
CE4EC0E8B418284452650AC9F595D065353A0D84229C2226465DBD27291A7AAD
14E946490AEED2FF28FF48234265B4759B50D24BD711DAC55620DCFDC63493D8
B9EF33711947B65B0C07BB7FE129E074482B62CA26EA8970DCA4F35C139CBABD
4FFCF1E22865F11E640D484E5F57C00B1336A8F61DE8919B9F5A5D3533D903B8
948753E873822FF2E1C8DE9834854FF2955EDC15456438FED1B333FC882FEA17
CE5ECA50FE1EA7907A9A79564DBFFF9566BEA8DFAD1CD13FE4F4BD5FE272043A
59FBC65D5C5FFA73F59AE22BC7A9DE94C8D7D03ADE5D6DC0252CA2E3EFEDE150
916661FEF85C14B05424C0C51BC3E784E53A157C5192135A7055198A66789574
CA9DE18D9CD69BDDB4707F7B2C827516C1A6B49353FB7457EE57EF5908241374
2A4CD1BB78156D5809A689085E5EABA02F60389E94F86AAAF2B7E9E315B157F8
BE66C4AE3F0F649948253EC51D98A20B1C4150AECE1B644EF4F9B15154D3FF75
4428AE15D0D7F8837386F411D0FB2C1CEA22C286B7F058E8F48EBFC36AAD3511
F899A93419E74B4EEADDE0FE0B5D86C9538B9E3260EB814969E2E48645E1F5AC
047A8204F464CF29A60BA4DEAE3FFB984843DAA8E9420BDA882054B68A169C3E
54FF994669E0E0A4CD33F1B71EA3C7C787E612AFFBFDBB75E53941B46165FF34
0CEC0051A4EEF6A495823192E78065FD6060A0F7D8ECB4EBAE515878A31F197F
D069F443133F6271A817B670A41F2EB01A30F2AE8C73D83360E849EC87FE9711
CE71D9034EE8704CED9534746FB31E330BE53B043CBB36B38CE86196A8838829
AA72E7DAB35155314A35C56475A9CC8CC6267A6C8B55512546ACE6437740E677
EE22A40C38BB1F69F691122BFE48E6FE4003BED0D4270A59532C46091584E9CF
7759EF3E2FBBC0EE740CD2622E599A513A5A5F8F39BBA8D08AEB6465A1FB1258
980913106DE9470F037FDD15E6113A181DCB5104577F6303D8AFFF0D1623C49F
3A52C4EDA18B7B6BE5C494D3BE6EED741DC2B9D578DAF502D940AEA08876BE07
1C01DBADD0EBFBC4FF52507C34739FC6E798467FB71DAC5EFFE0D7BBC8114201
E03961015596BFDCD08FBB40B1153AB6626767FF1A48838221A3FAB6E8027A10
873C04482CAC5129F1D102860A54D8E656ECEA88768396EFEC282DC3DA70208D
6884BBFA2D4ADA174645BF47E448B703ADBAAB9F0DF2A0805C9B140D8CEB4474
0442AC4891051195B0B6624F3DB00520FF4657F7D127A24EB69B4ADCA04C25DD
A90364C4462F8DF7B588398EA6C9D82EC5A2888F03FD399BAAA3890E4F95DAA8
3D88BC9BF79C0F2F5A0752A8DC4E816B78B9EE734118C991282B1240D3E46337
C1FB2DB53C79D16B085D8400FFC9324014BE2A1D5CF3A0CC22E480CD066D1019
6C05A0EFD97EE57F50C5A59D1EC020C2C04DFC9F36C8253C4346DBC11A9D851D
A3A8E0D478DFDC64095D442198D9D530581F1C40D357CB03A7FBC28AB07B83B1
800E41C9104A62A074B44B977A4E4A9974A30FD61E80F89DE77282D37856765A
2E3980461481535061B2CC994D41EF6AC07B567DA70D25CD23C25C7D0B103312
B17D16087D670D7F854D5740F601C12493300841AF0F3A67E1E6093BE6DCB400
BDF8C5B29940B3CD12C56C7856D4B0ECD4E415CC9290C79FE24F1ED92BA45398
9EB7CE1FEC9D31E66BB00C09B952A829C5F56AE313967A0B57292667588D0A60
A045AE5775EFA566735F30BF915A60F7C027C153000E975E7513D0156C73F7F1
6C034A24BA4FA16E84B73917E43FF456B5C435C17071907E4739469EFE5675C0
FE6A19FEC026975039D81B532DE5BF0DA704808D7B0878A09BF1DCA721854AB3
AD69C48B50DDF960297D39DF2B708BEF605075EE12D775483CE4272074EBD88C
9DCBDD1E51AC1353F7C1C7A428B07047B80849C0A77BEDA560ECAE3FCD7FF41B
A151F41490796CF35B02E38BFB36CBF2E6D0D7304344C50598DEDE4D3B78F8F3
1A5A92ADECF6E7F3706A4B080C17A5BD89D50D48DAEEF9CBD343B8D23017AF0E
768DEB79F37D84B51D8C3E4B86EFCFF1C0E19F4369AD260BA77F5715A910D79D
C805755E7349D3325CD8FEC4EF92A2D38BE6AD3BF8B879A425CED34F30D932AF
DC2EC726D2DCF41EAAB2F0BAC298957E4172F101A12BC5F2734A2A5384D629C4
9699BE537834825AE7B8A44677488AADC422EC3E8050A97238F88827E75E2F51
339FAD5776CBFCAD859A2F4556AA437BAD036E1931583807EE0A93E84ADB1F8E
9A5F8178D528E7E6BA5DEF6EF5B452A9C57BE4F5BCD80AFC1D747E8A46ED6B31
8E71813F2C217744E987B45DD2384D9223EEFED42EF90D1C0E0A124711CAE6F1
82330FEF033234F6BD0B4AED7624A3A6043E519AD2ECDF2EE4D976BA9A90F152
D68E756C29A24A789A87AD5C58ABB0F94ABDD9C681FE691EF3090EA8853E8A16
02EBA8D23DEBD7FC535C46F77718A6955F9C81401F7217C8071D319558F8B12E
C74AD23D8D3D60FB98D39D0817B607A1FE2265A1FF6BB0F2511C6947BCA4D4E4
C32BF41ED5AB8509D015C37A6F48916CA33E376CBF428BDA96EF1354B62C9927
502590AC4935026215EC675BF3F3132933877B819434E200FFF0DD0E06040215
08FD510804CFA426D5808F63FA1F4464E1DB4923E44B129933E3FE54680F784F
42F625DFE333507C3CF7B820037A908AB9B06BA8BFE3B7659B13AEA47ADA41BB
A4474B7611AA885146779C1C30A634A48F72899426CF9EC7C334FDFB7C979505
52E683E39F8464076AD8A441BFF7B95FF8DB779F5C69A6EC77FD3EEFDC15E662
E4E766AE5F6AD0EDDE655B5E79997CFDEBAC31E26DAB725237AAF4879364060D
FA6C617365E9F141CC3CD485C3858F2EFEB078DDDBD3AECAD5B9383AB4333598
62DCB30BA53A413B5E9943A3E5F157A6E1D45DF424BE6DCFEBD915BEE2AE4770
EBE59975E66A9995FA5B117AE91425C30A0B85C98BEFD525AB5C1D66866465AD
9DFD2D25D7026D8483CADDD894DED3B55882890C62B75E5C6F1B83D4EC3D7789
525377AA53331DCFD0D2F96F251DEE4F0568ADD23CDC8631D139577FDBEF9681
38D2ED1E658A4864D672B5B698A36D26147D9C5BE7F10A47D95FD1156E71F27F
061B2D5701421C8BEA9941E06B32D9D199924E40CF66BB4C006E141302BBCAE7
65F2778C34894E187B72399A6E816F7DDFA1EC3DEC0FDA50ADF09D8FCC00FFBC
F7EAC2D6E2FAF9287268BF1C0FB911F7C941789145A5FC51887E252E8CA46334
0490CA6634BFA6F5B7440193E6B9AFFA3E9950914CB0781D5442DC61E235A209
A3839BB788B1188AA5757A22154C03831CFC91F03AB3F7E02D99809C71C946EB
77ED556CD01675A5D45FC8BAF576CAF35123A7ACDC2F480480B6E53E3B08E110
CFCECCED384662B1CEBCE890D038C519BBC0C2707BEB48FC21BB7E3AB8469630
4079D28D41F52248D706E117DE4CF66C67859F13BE58CC190AE494135DA16F1B
90356C49737097C94BDEB5DD87563AEA655AECECCCFAEE257464E01D77EBAACA
85FB49F5589A34F8599566F61D53D7823C6BB458F2E1ECB61B6A2C9887A5D054
1AC711EC68B03874B816F8896C4BB18C575AADC6F58867633981828AF16FBA84
717637F4F62A76A595F3530B95CDACC4AEC65502486F2DD64D12C7D9BB51DE06
150C7C7A825D08B9A899CB9C4E4BD0B8F9C6B3C6FB075F188A9FF4DACA0C3233
68909178D9A544430CFF9BCFB9246472A47BDB51D3F19D511E2F429E8CEC0122
CABCCDFE781195A1B1A120A62C133DE3866CB703A5B760715238B61A4A3DA509
A09DB7E0E7EB32C428F531FF5E355D691E098D1FB67AEFFF63F4C53E435F8619
E256E1F3191DCA7DDED14C03F5419FB1498EBB9CA680A624C20CE95AA5B5D4FA
8B062C9EEE81FC98ADD44640348F5C7C91A449496A33F2A8E88F26AF2C70DDAF
438047D9DA1E8AF5F4C16E56A0353919F8E90B351B015320794A89E84C34F32B
465E2017EF50D681604A5C1836D42AE44E136202623EFF3B3876C5ACC0D752C1
B0F86BDE60D7C04D7C218132B4D3680276FA7996DB1B6A97E165EADC6CE23BD6
CB9700745AF6C6C4959B419528B283E03EA02F39AFF37556536D462BA88D3889
4C69341DD02AA491637E24F116AA297732D500DA0A6D3A73572D79A8CBE198C9
F63FFD1470AEB4708158A9CA2E2B7D736DB0F32541B8D32B5C20AEBCF90448DC
7E4A3C59ED5565F2096BC24D7F12FC905E2D6DC7F58B627F19006CC52D9E451D
C21450FD3DBB18715AF4C13DB605D70D4F243943EDBC2199FC48F27F9AA276C8
51FA2D948C0424762597BA429ADD5A422D7570CAC22BF7B69C0B81390C67B61C
835FBA29F185C0181148D2DEB9A05796201DD36642B5A8BA107BAEA2B7086DC2
E484876D77AB3C26FB93A62D5DFEA07A0C80C0A828A47BB14A01BDAA236D4BB6
CCE198C17646D4023E62507492813EF0F4CEFE3B4245E981074B8637A89EE47E
AF9B93FD70BF866CE2EB3DD88426FB22EA87B5F38C119934FFA994A42AC59FFF
274B4E1CA95D4E35208026AB554031E8838BBAE715381BF247D955C5D6C8C269
359114E9D718E545D6386240D95D5216E6AF65B62E820DA2AF55D8F8EEA6A566
ECEB61CF2BF6035B98EA90F559625C437D4B64D72CD92F6E1087A57378BC5CB9
E34C0EA2AE82D3DEB97505CDD011119EA28A3A8F58803E3D52DB586338B7B554
A936A7F9A2098050930339C0DB023D08E568308F544B13475DB2A5F3876C929B
0A05304A6430A70EC98B71C80117C0EA512125DC02C19B85C24B38B1B40D53EB
C3E88F873407D8ECC2D0DB427E8E9D7FCC7FE4A040223EB22229B014C1532DE7
B7795242AB54725732E2B44AC0344A2A44CA18B10CDD9DED32A96DF332C5E427
0C9BBB86360D69D0102F4ACA897F0502C545F92404F6B14877477E87C6A6C346
A08DBE65B140D02A0FC24705D3E1EEA80B382A387FBDBA65D5CAED55E4355A53
15D0371D4C79A60F822B231A51A453477B1F6033ADE243F14D497C086D8DB56F
2F56A18218C345C32D38934E4037285179E8ABB9E3A838DF0A05417C570880C2
E5A57DA1211148844F9F61FB670F5521FE1FEFC260F3E926AE8AECAAB856EFD9
800F98038B815C5D1EA498A138CD5AED476B544FFF0AF7FF5CCE31B93E4048CF
BFCDADF56B75CB057F0AFEAC9181A6C434512F6A544CCFF36F8AE899722C4A93
C81AF1E108AA75CBB741E74C47F8B20547A2A38F01FC97731F1B39A4924822B5
265773A5E86A17A41A3D46DD8BBD767AD3EFBE479ECA5B7529BAE86B985D6C9A
BD2AA631AC2163E04A69A2DFFE85B298AC23152C22A5D640FE6D22505EC7C1DE
B88CA5BE13F85373A8733835C5B3B7D78A82D9D6D54932D5495476440B9864E7
42BAD5D7CC7C04DCA33030F187E88F3A42403FD4606190675A15AF4C6B62C52F
E635D7DBE1DEBA4603B10AF174EF63D2C4C8834BE9EC41F48EE50AF679748923
6880AAFB0C40074EBF904E6C116D035CF8FDBA0A9D56E5EDBA3C2794AD2E091D
D7659A4DE4DE812FC920354999BE977CBAC7A04E9387E3E188F2F5C21CDB9599
4F56D69D6B48B7721A0FB87BBE7530ED3C037A517E7F4D92C7AB784AE20CB117
8A77A4792F69C2C8A7450783352A92D61AE32FCA8EE7AD235AF1F50DA985D21F
EF5897DCC7EF4FBE278D0C64F81BABC9E046AEE8866049379032547DE261C761
AAB16B9DF176051ABB7C78512D6F34A84B9DB9F2568445E2423C73FBF82E9961
A7926D1A05FDB24361A99F6D8C91D104F883777AD1B0FFD5C8C14C34C3638E6D
2FB2F981BFA79544B1A2F756D81ACAE235A58C64D8DF6B0ED524949A252036B9
21751FB3806B69940F415EF2C9D9B107BBF43CDEF5D2A41B5CDED1A9D574718B
9C76A1871510FB3661D8B5F4D9120A155D32DB5C681FB70AB788B876C71B13A7
37A00B245A1571E9CBB63FB2ECAB3EFB4137D55F76088819802AC0ECDE469085
BCC3A5E78F9AF07A42EC29CEE0176DE0853DD365E9B853E9315425011EF60360
96398D8D10ADD46B3FCFC12980C2E89DF11770D3FF36D19AB569AD0865E26C9F
0048B1100E27AF8F72767FF2268BED8317FAFDB532191FA35C29805C89A3E1CF
261967A11FA5B073A62AEFA198FF5739C37442B80455AF129EA1A66E87168EBF
926C2A91C528165662F652DD43DAC6C32C9548A6F7607A1F49CA66CB12882786
D794D5E8EB01E9169E93845117CBE2F0B5980B6F11A12B81E74C08CC2DE33E2A
24247D78344F561751682EB1877C6951F86EBEAFE1C5725C894669FF44C8BFA8
9445E2CE5BDDA7CB599B4DCBE5BAA80366BDF9D404B2FDED79EEDD6FD3B6613D
855D5E17D6020D27DC30DCED3EE33E4F0549473B1E0C6CFE144177013B090E06
286D0DEDFFBB18E470BE77630EE925BDD46EF192F5D04DDC73C0287AD45948B2
225F0183BD481A526F5680F6A3D38E39EFA71A0DDCE149E75A28461D686F8329
7FAA9EABCD71BEA209917709BAF693D668F7AC02F3DEB82BFB87DFCCEA1AB910
FF57513810E439B5705D8987D32CB5E37809317C50945E7DEF65F98080F155EB
CFBCE24CBB5B913C140BD64AB6CDC615EF85C7747CFD61EFD84E2D8142BC0BBD
19FECDF86A5980B9B83F8BFEBC6C8FDD760D1CFBEF39C25DECEB2C64030E4873
3BCEBEF9452315BDDD77E669FD770003EDEFB74B9BCAC40C589C79ED8C432598
31FE44C13336BBC3B0569784320814C4FA99AC15611CAB3534A86E51C473E3F9
CE236C2399BAA8B34BF5923162B9C583897864E59CE6F46F213B0EA52186ACFA
F9C21D45FC95F4483FED80420E4BCD787F6C1979B5ADB7294E30885DC5F1A7C0
10EC1B86BFE8B4E0C2804ADF7265152F19C026C89FE4A47F9DE9DA86D75A9D8F
39727CDE4D8E251CB3B3A5B0A91C0FCD7FBBEAD7A812F1DD240A3EADCB9E7DAB
19B7A27F2BE09900B60B0E04DF5EE2475851AFE225349BD9936E274ED7A5CFCC
0057D9F73C9862046476ADED15087DA8D19A2C3B7260FB620EF714F054A18E11
BFC8F0677F7473BBC8F898D0459DD711DEA6B241473F8252E34FA911185BBB34
A6EBF5F640B382E82871A1FE5717DCE2CA2B7311E8AA33409D7E07E7AD8BBE63
06D6B1CCDE4251E736E6B1CBD09075410A2017BC4240CDC4A30790A98F2ED8F6
48FE2285E3198F45BDDDFCD4F291E0BB1A9D79E829E1B64DE91C306B8393519A
7A59226CBC34EC86D2CA91E32214DD857E80C70CFB59AD713BC6DA67172869F9
E4359B75F27C0256E5D7CCA469A9F64B95A6FBA4BC89DBC93765E3AE4723163E
492525A147759BBB495C5D5B99EA24A21A41A2E09B412DC20AA5B1B19BFEBA52
AAB0BDBBE0539C09DC52E4804470A8956B7B47FEFF3A2D6E11BFCACD6149A201
88B3B18E174328A4B90D93FA215065DF8C19C153EA76C5428C92ABAF509BFE73
7B0E77F4156977CDED3DF176000A1AAD3493874D67FB56FED2C58DD18152F75E
9E3A65D12036996DEB087871070082410933B8B6339B6106663D6147C391A369
F897DD1CFD7A456FA223553311D5DC175CD41B1FDED43967E0676CA53A9CC5E1
6C770DFF9C69B91DFDC228FEDF1E2C50A9D6BCCBA9AC188BE84D94820262F3C7
01390274F4A233B7C21EABC56271E0D26A4622107B077BAC69AA8DC1EC35AF2C
3E12674A53B3A3F2EAA7711B75C6AFECFF846191F4C6B573815A3AA97D3076F2
AB65B7BDC9F704E15D8F7E4DE009307129C0401A7E58935BE5A9105C3164B472
23A893DC58A24D65F44AD8D2FB69E0425E6B527C4E25D28CDE453EF7A4E09CC7
275EB64B46FA556FF6AD04D46529E9BC9A1876241B347A7C5A6AF81F6238F191
2F06CE23D9B929E7E8CC201278D36BFA9D85C9CB0414FA7B15EC02E8C08C8A4F
7E4B77201F827CF41845BE0BF8AFAE8348F559D6AD28E6D36CDEB5AE7DFBB73F
D1A0039F86E8489003F84951D9237767C38D64411A41FB44D0687B24A0069127
404ED92DDB1E36014C5E4B546CEC445793129113559E917EE5E91A226D4929EE
7C9DC63EA8F9780763E889B13FB2BAA993B4E3A10523D0D3A10238FAF971633F
0FE9A9BEA490FE3B8F7A361CA77F3E807FF945B24970EC6078E5A5BE03C72E63
84292A2E1CD06130A091F8AFB70C0D2C2A6D49C56D91469EA758F72040FB7177
9C25E2709855D4B337F9088002BF1D547E407DA41D28A1207045CB33D09A3887
A80BFF75CBCD814C6B5C42785DD8FDE082F7994FE2FDDE97D4CBAD7F8FE89B4A
CE18BCCCD4EF93EFBA6E8F902C817A5606152631CFB73F8DBD8A99AE723192B8
FD7EDCADCD1BA23C0423B872CFF49E3E575228C9722F92EB9D139A1EB5434EAA
E6541A3DB6A076296B35E8D6A897962EBECEDD21DEF42A0ACB73580BABFD25EC
E3A9EA5EA803DEF478A1DDC7BF0C57938319EDB9EECCD83F382E45211576133D
BBDA5CC4582CC3224BDD0CEAD4A5479C77743044EC0600CAE66913D3A893D91E
D6A220A3B1458EA90D68B2B13A5D4A79B827C93CB3274537274E5102564EE586
F97C1FDE8E7BCE01645DA72B35BBFC367448EB7FE9D1349E90AB58CBFAA79D59
67987422B53CCE01B56A7B0FC859F6A13415FF25D97E34027AEA2735E8E862CC
F28496AEC62C6D2A9117340ACC6C836239546551F5E6BEC12C895C1F84907B95
A2F89A79461AA87AABC56F78F0F213D963AD955334B2DC5EC0719AAEE0BF09A3
19FAEBDEE27D69DAB92802C091E1DD96672E47DA7CB4ABD9B410BEF6473FB412
6192FE56F0FAEBF2192874E00E4682CF0AE4507F9B9ACF4C51DBFCB9258BB81E
248987CE1A14766F76AF88BBF04AFE131578AC0B627131B95E5DEEB834030924
89A7A0FD2DA44A673046B42AE20F058CD38EDB16D55F238EC69B6EB8445E1A15
910769678FC5D929DEC57025F82CEEAFFFFB6D41D5701AECD409DBEBF0C9E955
09BDD99A537F5C942A7CAB4BDED1134230650AD2AE42517997FF7ED694FDCE57
1992AD7941AE16EF07E5231112BA37850D2AE40ADDC52B48008D082AC5C1C042
7AD24E2C9976490B46B8BD64C235D83B848E819175C4E9E5718AC24980220875
52373CD1D23D5C8E17CF1B43A482C44FE52E57AF48D0498C699E371532480797
E5C6302D1F29B003E56B90BE60FBC2FE513C93C7EB2528CC8B0472B5A579EC88
E8BE5890BD5993F661B75F403B0327A58E94861527D7189F6FC62EF9EB9AD584
935A58676976DDD2B6E118FD1D409904D12E824D1F9E7004CAED6DBA20F6A900
EC119A96BBE9ED9C4910218E0E1F254137D816B21F76617F02A0FC94D6F4EEEE
809BCD936FF4B76DDB821EFFF0BF941A8F045AE1633C8085ECF572713053E922
2838472960926A3C99F7383E534EF6C936DF6ED77EFB07C3DA6F036CBC424F41
DCF28BEDEDA81A4DF29ED7C8C7FD903BACAAF8ABDF9F1234B69484C237E2D1E2
E64C0D48329329AB52F8A3B64826CD95F02199EFFCF454A40AC29D2907BF8933
0D363438EDB94D25B85B2FFA06BEE4B4866CCD6F9DBDE0A453BAE8CD9BC976A1
491093B30D44F25A298FFB963241F8F05D06EF7BE0D60FD996223903C9A02FBA
E90130F57792DAF2D43D99E9EB6392846DA0B01BEB9E101D4E7377B61B4A077F
ADD338120AAC858A501D8D6030329402C5EBFA28642B10E65ABAC46863D26460
2718214D9A6E751E278EAD6004782A066CD7406F2C075B87AEF6FE35C55601F9
99B512A80F5266108EC36BDB46E5704EA4E95BC91194E2A4F97459504B95B658
3129FB837AFE9E5EA65226535F722426FF14D074B1BB7C4564FB54FC6C71558E
4C1A9D0B93E9A2123B044448355F808ADBE045E6CE6D9398755417A2CC20884E
40E9494038C8C4146D9E400A2CF70467645A23A9974BFD62F54A6A98F74CB852
D6510B5AB1B30E1EBDBA650E077EC8EE339C4804180FAB47078057D55EA08960
8F21F58EC322B1D86E58CE46F9982113791C051AE8C88922EEDC232CA6A04E92
8004BD90C2FCDFB6DD8959142324E13613FAA8BA742F3165989453BA3A994ADD
C6324DB33FFFB35AD715BB0DCDBB2D35B51730CB8CC9DD1B574184656D3ECACB
B7E5701BB1EA4029C7C87BD0772AE30671ED2BC4F1E12B16DA8FA645F56CF2C1
1B51C7AA9A80146F398B9FE829119A4ACEED02EBA65E3D0C39ABB9DA13E34086
4F2D181B83DCAEF214F5FB004EAD632015EE1E2FA54E38977031156C876E1291
8275E17D994EBE5F2BD0FBFCF937DD3BE4A5B31D1B869CF99D01FE229B9966FB
DE2B55A8B0031DE455BEB83DF8971CCC3C4CCD9239790F6B0B3DD6FACF052D2E
1C0EB34672AA746EE7E73D4934F65C216EB6C3A6207CF39EA825E6DD1B32CF54
14CD559F65B1728DFED9A13E39976C99B380EF4615293F2CF30358B76F04C6C0
E80D3AAF01749ADCF5E38544F6F225FAB6045756E1D6148F9BE2064A37646CB6
6F645723D143A8D4D74D8FE6C0F77B08D4232C6789A0F5DDB7337A300CA3A1E9
B53585E431E90DEB617EDC0F95E180DD7550442AE3E0F8C1178EFEEB5152EB51
288864523AD01F7A76DD5424B746A66BA0A805CF2EBE2454308EC81D16316F21
015487644B55DDA2E1146AA3C0D5541EB45ABB32D64FFBE3475AC402B3DEC385
C593322AE2043AFA55C6AB9E1895E036BA65DE15BF69090B7FC8B3E303F8B56D
1161CAF14DC202B636DB484CCA840C48ABC86C0D95192C772C129F71427E98CC
2ECABE77252816C99DD11820D375EB9335D7CB6267EF13E1CFCF241DB485DAD4
57C8351CA765BA358247310D2D65F7AA1A2FB3FF6CA041375A2F358180A3A207
B2B331CD0C7DAFAE8E14C0C9BB060ECAB69004D3628756A3A9B624BC018ABEBD
269418B1FAEF148615D78265BF0E0150053C6601FD711F4949A68C1F57865095
CBA6E700A1CE8C1854EC73A7204D9E9FA8728D4BCAA70FB527B440C0CAEDCBF5
AA4A878BC760F2F70D4299A4F76115EE6135F0ADFEEA0C82E30B395FBEA1DC6D
7DFC80DE646F8D21E6DAE8B8285CCB13156B025DF2E5182DE426255FD062D11B
74A0CB238281C41D9387A29171C53E99A6C68B84EB905A08E3AE9629B0275AF4
22EB5476C2F259E6E8AFC57CD429081D817B4DB795BFBCC80F4EFBE3D7E37769
48F8DDE5F879C79EC2E13B44602369AB74EF77341BF520553987E90CB1CADA54
1EA9D47C168251145C17626EE61BD5B758B069148683375E02AE84420BFCC53F
E88134ACD7B507526E18C29421DB4FEFD57CD2B0B7721EAF2B21A67AF5E43B18
2BD85FD6FF960420E3B5F8A1C120887EE499B94F4E0FE6344878D0FFDBE4C314
85F2D4DF74A8FED485A7D1E170C47AE4059FE85CABBB066949A02C4E3A5869B4
2350F1BB7DF1C66513FBED11FE196B9FA247CED368590B63277B0E09F0A0280A
6BEE5F7C91AF235D94843C7065B09977A242AF7FC410C64CDE855B47289C449B
CA773B5F7DC8862B9CF8625EDCA40365201A1C4E155C86BC059C1091A8B687AD
33471E4792694CFCBA4CB368300E9BC196094C6216E7B5C34539D5848179585A
AB57BC814B1B5DE90D0136152E4190CEA510AB3E173171D5641A24016B351694
CF9614C645E64D34B5A2C6FEA57D50495B458B436ED0C74AD75ECCFF2F7C4304
A1FA6260C5C645145D54A2A7CDAD63A0DB6DECBD8879915086FD3569427C0288
473329A8B217601A96B9F3015EBBE56E141A3E8F64D987CA17A7D512629011A8
3B73973BA97418380A98469D8ACE4FF8DE150FB6F88F2BCD55EF0329C2C23065
6084ADFE1BDCA1CE911BB7D50284860A8999BE323AF4E7796EBD1ADD78D7530C
932C400838BB49DC71E5BC588C87A99F441ABAB5955595BFE5E53D4C11563B03
B94D44633FA74712E287445390A63470B89FD735B02D8C932405A9C8277AEBE5
67762CDF9DE85BBBEAD7A81DE32825848FCF97B7D1CB5D8F121EC7175CCC937A
0F9E49F8B27EEF8E1087FF370606241EC1977967D9988DE1196E1195BEC8A5E1
724C1F8C43F22DF8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE279918B0B31E08031DB686D518B4CBB8A4D0B
EBF6750A452A7F706EA676E3B3237FC5656B29CD5A3A04F82AC871B526CC28B3
A61D985EEB3610FCAA433B9C6D4683C512F0FDBF3EE6FF552D7BF0BBBBA37050
FCBE3F164189FDC8446ACDE8D0D4050278151B46E56AF826A0C2E9389C2B8BB8
E38579D281D5142944D3322E1C66D456E4C5DD727AA41FA5B369D5E10CD71832
A7DD40DE855B47289C449B6AD8D5F1D557102050EDA5F1641EAAFDDBC082E579
A06D8A3A323458808BAD0F4B8A2BF406DBAC4C5F555EC96E760C8245A1AD9F50
881DB475F892F868823CC55D4859C09148529FBA57A392127B68F5366491D1BB
097D8FF4A71966D42DD988F48C8A1F4DE0449E6AAE79500C42B4EFE4936D0D00
0FB339115493C16412F1D6DCE02BC7B485CC108C6321EBF1C609633933A576C6
B0758D49F3155D448D505F73A5206EC1C8886F5949790A7E4B850B6B8E31EC18
B7321E63AC75B6588774961F6B7D313B850AA4B368E48DAFAA5693CAA236E150
E02FB2831359FDB95792B2E6431DD24BFA8F2B51BC21E2E5AACC0CA211F50A13
075ABCF9F440CA468403D939B91520C652F1196EAF1BC975E26F8057F69CB972
E976F99070AD3FCD958C1EC54B3994EA142AA0615EF7BC00D85F75BF5F32B350
E2CF46BA0E8D0120BDB54910E5C27A27B59664E856EDDE290103A0D490FD76DD
09B152B3AD1C4754696B239D4B13935AC19769600943C7343A5E7A06C9115395
DC2F92EA95E5ECE5A08EDD16DF74B6297EC0220C91F8BB9AFE742FA96456E131
7D41CDCE88A8F9A12D46B8FCA50DF4433B0B8AED6A63BB5FFDFB8D48D04F9849
2972699B5667C0D2D206F4785DE20A854E1D4C655A690689B7B5A19F8162E5D8
454B7A1CE94AF723F47C6B168CB7269CC802B14545C8448B5C260C6AAED5FB23
2390D7239C22534FEE644AE96C5718EFFB9DF1AC47CB3022D3751E6B7123FB71
403E154150FA4A14EE2CDC8F0BD084CAB30272E8F065218BA88536F138B94AFA
D750F6EA9BB43271084CD876A14CEBEB86283BDB500BBC0F9E152C30059054EE
92951E4A202AB409F7D16443DE00ED69C1FA674BA3664F8BD00C08A27F475C00
E6AABE35B01B991AE910B7DC821CFD8A6B5C7F4B116E78065CB219C926D45163
EBF6E81EF0C38076871283D64FA5F2126CCA7E93636A7CCA2158B99A15CD405D
4AD290CD8F7AF8845CF78D4BE9C7F2E4DC00372530C64BBBB785117A8AEEC190
9F49C82BAD55AD174D38A74582CB367BB50ACF8FBB2C8A2EDB17FF267D0F21C3
5BE42CA518272C9F9FB2DF0780C957CF1B9734E9F49C0E6EBDB5D24ED5D673E2
6A25811D4BCA9D693EF8ABE784D2BE46DE1E57E1B738ADF6FD49E6A53BF48C6C
2A73026234D3719C72C2FB8B8274AB54A6853DC6784398A6B994BE424B6E9078
6C303D590747608AF3CDD6A51B5612DD5D49E1153A25EBEAC76FEC601CF4D10F
65DAE3EDBF9A163BEE244542BFD2849D498C239237ECDCB23458C7C3B9395C7F
900C2AC7BDEF8FB9D4574698BC8D4E374B34969A885A0A4AA26F19F8348EC621
89B42297868AD2C3E80D95C41FA4A5AF7A016D3C773E040312AA0240DE24C7F9
D662FC2E59673DEF563AECCABF724C09CEEB5DCA64FC6D24A091A75B5745DFEE
F5C1162900B5F1EF5A7102C27DB1918679E7E354A5DABF897D9C8EF5A14FA8DF
FA3A7B3D47542FFF5987268E60E7FD64B017EC6A8FDB4BA5AB5B5B58046899C9
C5993E7302C870678DEBE8FEF3F2438217BA5121CC668458620DB3D381D56770
19CDD612E5C0A267BE4F707ECE93B3E1E8BE65922315729FA5513AD13B562C5E
E145AB39905815D6C3E8B60AC5C1D4D7731E2A6B122C6F57790C42B0368AD7A4
99EE5F029AA6F8E302F4CD994EC08C00AC6A66C51254F71280CC722402E200EA
D4F6F489DCD61B81CDB85804A5EF00CDB09D9C2EE4F3D571285E319A78F90942
1C31359DDF81F38F6E8615BCD0E6CFFE077688C365888921E45608C868A0F6F9
D726CB2CD81B49A9F47C12FF76284D3B07E2C2E788036B4867F90D40C1E4FF74
60399F1F08F98A05A579D00D1ED5E8A86BE9DC1CEE3FCB03B9A0E4BBB81C849F
AB1A6089E9807455A5DD78B2EC3090E36EDF4D19FA6BBEF386127BBDB53D25E6
8448A975CD56BE0A93070F848850FB9B3B0285C7FADB28A3711C06273B79FBD2
A509FDF7AF81630306D67E0AAD0DAB78243E1B814F745234BA7CD57325B5A34C
C3F984018DC9653649786481788A6F58ADDB87DD0D883AF60455753850A63756
5EBCDE76329F5626E6328EBE3DB5770A4C3E21341C304F38845FE70E091803D9
D14037AC4AA8C4D17EBB62ACEFE5344982E0F489D72EF60183D8F2A79A3AA765
C18E0479B0255870CD61C8CF7AA8DE567D174EC90945404C5B928EAF3E8DDC1E
018442474EC6B0B42DF539EC1557722299347DCFF0347BA4273054B8062D3DF6
FF094944AE472D60DDF6CA62288E4E780F8614C7749C9406325C82715C866134
637DCCE4848D2B051B8E0EC7B88872E9AE68BB5DDC30F4A61119733F6F6DE0BF
4C6437A849A661B6A233B1C24238BB910C11D2A8024C89FB5DC745489AAC2570
4C61242B4B1983A5D0B134C8052495CBAA9D2E2E014641BD58F0EC389FACADA3
08A1723A5C2492BA0615B0222EDD152AD19C307118AC0086653521EA59D676CF
C36AB586FF1FD4C383E2785EAD36F41274FB0BFF9DFEADC612CA44A7392D8E79
1DDE1DE818BBF26CE3BCC2569F5CE6DC91D4F8B7800A05DECB300CD7A8C38D77
4C1DF436013901C9671F77F34A63F361C5579EC5E00C5A8E2FC97874F6459EFC
C1760E9C6C78E60CC0152340DA6F26C67B2E10B620750E2C44E5CB9DCE747E29
6F7E716E6BB12B699A2FCA90DFB3DD730D96D100DC5B1BBB1632D7015235F4D5
1C1C753EEFDD6ADCEB45DF4D00713744039C43B860B5A9C51AF0BEF11CC8E85B
067A402342896C9B3BAAA570C4900E12D720F2812F28626DE3BD3F3426B82718
259AD02CDB518BA4C4AD8F261CFEBF43857EC7A543ABB1E059247E276E206CB0
0BED125C8F78A665901F80068C9B0AED83074C6270B177BAA18F1975F43E9160
8B75D86D9F7C1E986C2DDA71CBF33FACEE675B943764AFE71B5A359C4A092916
3E8EF660794518DA4307AA5B38469000FBF31BAE9CE8703754A099D21B332D3C
A19A842755A79DDC1E281A8C34A969B80EDC946658B7579B5BCF07AC8B45C2A8
3664140E70CA62DCB3153CB4A8E46F12CC16254F52A26FE47FE41504D3E851A0
665AB60BC0CE5C72512D196F8D1BC0B3FC12DA2D13F4B9AEA2D017EE7E574B86
2576F5EA495F51E1B3A86090ECFDB57097EF73BFFD5E41E8AB6BF105F87986D4
95940A8B4A29E4DC974554DF975D026EA92FC09DBD65783663CAFE414B6F8C06
F00A26631D7FCC4527109F177093E7432F5FAA6CA14F1654ACCFEC8FFC127488
F604E972B695E9EF18F331A58BE4704E5130FB4984C3FE2474E6CF0935F90B79
7221D94774689E83E5406F5D9554C1284249C687A6CF5A6B4783F54267C48710
32ED406DE854CD5E243C0BE4656E35FA02FAF5101E1AE6B7CB286C9DB979D763
FEB468FC7AA2DDBE2E708D27D89164B12BD8BDF0418BEDF018EA67683158D1B7
73C6EF553EA897D5F2D53E75902E57D7C4E06D7DC83F1C557ECF5DE83748370B
00EE03A3ADB919976D4DBFF11B246AF9C2FE922A8A6F8CD47656ED2CBC816B17
3B01048BE9D1E4B54ABC0396D5203D088ED7A1FC7CC863AF414AC14AC2D75E5E
EDEB706CFB2AFE24EB580E55BD31B793E4065CE83795F047004ED88F5C38BDA8
7F5FA8880517429B9C4E5FE980448EDF3BD57758FD145E769D4E88BF43D19050
DA58F5EDC7B4AA76BD8CDAF0B8639BD5D2C7552AF5415B7F35B957F02B962930
D3D0C3AABCE7BF840A7A035F2CC57FC978684570CF6C8FDB960B9CC6E9435D65
77D1CFB71D362BAD7280AED8771C6EE2F7E2D86C5661CDBEBB354B84249E93B7
7A0E409B4D5E17600E1E43F5EA1F884939C0AE467119F1E155676D10A8A35955
BADB667DB10180DF404F43A166E2E533F1C050D35CE4AEE92C35EE391398EFCF
E19EDE2E31F837DF86F1800F59C89EF6401112AB73434A3938E1970D8EA3CD40
C7B8FB44205899626FBC269C25478E0A63F78F3460EDD4F64B4D2A5B3E660B64
D293F803C670E243F0B0EB1C548746C08C7F4FAC0D4A7FD8B7369AED2AE9A79C
74C0FF0E0B0C1AD3B59BEF79753FDA3E929B52F207382364B1C62AE8311C4337
297E030CC0CE93ADB4E2FEB60E28FF6D4AF0010D422AFC137F2254FFF6C2929F
CB76A235705EC088049C1F1B0E78FD2D357BBBFB0E12CD481F96252AB7402213
DF9BB4464515CCEA5FE4C0CF761E921D7D2992EB24625547D54E3F2C644ABABB
47914DF3ED2C719753BB1EED9C435F2D571BEBA4F76A0AD5DFDBA6EC952A4F37
948B63263FA4097587802F6C66C3BC6E9DF45A22A24877E4A4499697D46B779C
8609E85E4BCFE84319532B3AC9D62BD413CC127C8DAEBC28D7DE5CB57A30F23A
2859902409CD4FF43EF6A99E9FFA2DB4113C12AB9C616F074276C4840A546A73
0D24D8518117AD200014839545B1078F38D7284FBFC473C510CA28AB90147613
F0EBC94C3EA0001043705336F16E783FDADA674B361F951D5152C0011FE0BEAE
51286E4979DACD3F5A953BD9E918D5E46449525A4A597FF0F091B2B4794752D7
EE5D9B94524DF768ADA1377760AB1ACE2D780F5624CF53DE046A36EFB35B52F0
566623440D7F364C4030648BC39783FD7AE189510DB572D01093BC4C7EE0C09F
389FF828AA7585F9B7FAFA718DAF925AA837B8C0B647161E5C322CA820521400
5D234795C9DC1354D1C0E5ABC997C64F3C84D2C3B7581BC9566EB6D012B6B784
F740B8E0B360808C984DEC73EF57328A2347BC752EB0EFF7BE8B688A3622826E
C83CC42DCA4A26C504AB95C5232A86199FC1295D8BC52BBA9C5089A346CC5760
009233FDE0B38CD4EC1D07A9F817ADBD1AA6D303AAF94D5FA688675B55D40FA4
3C6D97741D9FE4C964FC6D24A091A75B5745DFEEF5C1162900B5F1EF59402CD5
E4D0C3953C9493D87F46CE4E9C7A543364A9B82B34154924F4739C650A8EF8D2
38C73BD6689A0657D8427446E44E2F5C77937234D1D6AFCA63944D3FE5126940
8ADA00FF11BFB205B9A42EC1F50B435E4D44E14E22056FEA071D0061F16D8879
6C4BA0C670D0E715ED9333A0FBBD15F19CBCE5F93259A6C4A8CAD50B9186BF14
62D3AE2AAEA8A45E9A29BBCF83E95F0C65B2D60169538EDFAAB935FE3468186E
CD90E2F15FDBB395191E6C4659910683768F80764D94FE8A746FD06C08F15F97
3A528084C73A3416B7D9498707C04E9115D411FD74AD771B5973E6D0A573A1FD
2E01CB1197990EDF8444CC83F1AF789DCE5C7F64567C9D80D1829D7FE5F45647
ED6B99C6D96B728840A77AAB12DF037473065B62E9F3775CAEDAD9508FA92283
6FAA01D50CBB9B12B543AF2A86A99F4D544B8974F01B52945FC6ABCF3ECD8410
335AE6CAAA4F740EFA8AE1742B115F4FA7FD8E330D0B86B191FF5B038A5D0C32
91053A42460468F6A1700953700663A85229385FB9BC76B5FD875ABAE3E6DAD7
9EE2B71FBAA76C2CF157574A30CF7D71980C9059C3D6B6A3204F03427D0C1ED0
63F935C93FEC0118A7769C3492300AC5C68153E7DC46AC75E4031836536A9FF8
F9855C80511A27D667AE834A96925698006601802F57A614BA454AEBAD5381A9
33E9E2EC6A78543582AED8FADA73537FF0C6D7FB2EAF256CEAEC65106F666E66
BF183E0F0E4775D00C05AE65EAF85FB57223FA553494EDAC82855AB977A49791
5342A184DA5589E192F08B7149CBB9903A5809202C698AB39B218ECC7BB9128F
40DFF15856E79E10EA85E741412DF41F4C59FEB8AEF11EC7D1484B17EDFD7F39
0EE3B12312F51B3512559F1D609D0ED4BAD7B1C1C003F982B905BD7D67725C83
EF7119C2C4ABACC0DFF903C17E5B0BC25F89AE84006216080ECAF450D8FF2A1C
A4BD4256B7E56091E388284DBD11F5425FEB05566B96D20438400E0E78630FD5
05A174BEB44068BDD70570D038B3D9F60F63119EC9FA765E6E318CA3DBEB209B
ACED0957B2A13CCC8B93FF7BC5FC7C7A37AE0523EEAF1FBD745CE175B921697F
9D9FF0803559FEA21109882857594189F167F40EED0DF7150DB40D2B141DCC1B
60EDED42C0DB0FF95359E700BE2DC30F248D1BEFA38DFC784CE855754BC80098
5A57640B2B6105B2D2C996F6D44657DAF5DF5891AF008F869D7AF5E4EF1989FD
377E9723C5A85CFE645109B1AA5FEDE99BBB3800D471BB00C657884722CE9678
6CC228DD6BDA9B4F88DC224D329F47D8E9A61F56E5B463649E058E104A8537D3
D81053D9DFBC564791CA6CAFD44529A22B1E1E1B4FEB64AB0950733055DCCC2B
78551535EE5DA52B7AF5030F8AE1482312B61697C4574658A3E865BBEDEF8E1B
CD305A5ACF3C44E769368D0593ED7C9E2AB4B0184BC89A05CD2D29851EA57424
D2CD1BC0281FE40CC2D3DD1B36FCCC46801180D05D76D548B4D41FEBAF2A1E1B
7DF8BD5B4735481E2E64CBDFFD53A6555556089ADAB4DAF9B826BC53D97B4166
C60752E5E4D9771C3B3FC8F2156659677CBF68EEB3D1A5D8A8D2559C85177C31
784217D6A61BCB560C5ADF83A337082F566E73C4C3C500CD798E325C588B5B71
AF3DBF6D30AE540AD4662F8457859B8DBA51655025FA11DFE00469468AD648DF
75630D5E29912CD7E6362E528E075BC01117E45F49AFB2D3E936B548CD78AA6A
6FCF0CFD5A62BD50BAEA04E96DC81F6F9F742A10CFFDABEB17316F9CEC899026
7B1BD97D4734CF37B2C1255D017F11F7E1F90542E9E515490079815C2000B856
C14AC12D7456FF92C2678CD0084F1DFA0EC2AE8B857358C6C1A928CEA7F0D5FF
99461F3A9DA8509E7EE6AB98B4BB88F672AFCA3A553C55AA3402337C6C9B077A
033B01F3B878B9E9FDE0356382226C92B9537DF8C4F37383902B4E1667123615
FF99555E34634B52F0B8B83EEF5CCA51B26403A6263FA4C55FEC2B062491590F
F01EF0F36E918D98CF7327686AF072D547A5AD7A1C457D4DE11410C601C40F65
5EA32589D03360B92ABD1BF4762108CC1B72CF4BE2B3EE78D4C5714622E75955
FF3E78C4575D810E7E05045030378BD2EF0242021D85C50EF4F0FA7E8DDAA7E0
9A5C8225E5EDAEB91BAF1279E7930E73FDE400C7E7A7EF0884DDEC35700215F6
0737ECDD6C87E2764C59C2EFFA770443E21DC3DFC0F2885961670BE2D2CE87F1
1B7F474BB9591EB9678EBB5A676561BF61FABAB8309AE123A6CE6F839C2708CB
5A55F4ED91FBA9AC00C0C25D34BBF10FD8A7676C7BDFE23406C55DD3FA8E6BD8
9DB799536EE19B0EC9C57B38834DF8ADB373A5B5BDB1D57F414F3AE5A0B573EF
AEEA5D8C588DE556745DA3E386BBD02546E44C6FEA7C1D4EAD89507E04EFB964
76A3B4A2511E20586E9E24C566824C8AE99CCF0EA0BC1407B202F3CD1B402168
35375E0B9E13B07B4D38BF176C177353670633F29EFAA268D83B462FC0BD10BB
BB8DB7B12BB1011EE8D6C0A77A499C6C2DD120123D8604D4CA0EC412240A4B47
06677B5EC78742FEFCE44BF6E8AE22EB1DFBE8CEAFA9ADCC20ADAAC3C0C63CFC
3B7ADA39C0AA97CA287AA3B1931DFAC0A37BDFF530845861D5E5C2EC7E59783C
A27D5C82DEDAC7AF97962EBECEDD21DEF42A0ACB73580FE360065E6267113421
BF6430B94091A2B42A2CC2C3BF2B7D3D23763B76BD8F81F317A7974C5A29C373
261FC3D6A8451E60C03FEB118AE510A5A4833C6878133CA085D2E443579A012D
18FD7A725B42CBFFA9B024C740B0ACC084C0DD92E3E329CFC4E2B36E704F5A2E
99A7CBCE637CE9D77ECC1C66D4720DDBEDC0E0857B057D019BB4C2132324B2A9
54DB76FFBE2AB51344990FFB38A6DBEC48FFE206A0FBA50CEBE2BE28FD8E6DE5
58224448274777692B818067213AD4983B07D42634F8840B6FD878D4698FFE1E
AAB2F0BAC298957E4172F101A12BC5F2734A2C358DB93D76EDF6D0CA24D36D57
8A8786980F7B2F5F384A126BC83CB7D22D504C13E3B3CEC8F2FA394863533DF6
169E672CE9991EB8C422B5C54257C66582997E82470623B462508AB5353B6428
ABB42BBE9C1F6C104A56F6F15D1687C92D7BF00C6F8129E347C6489FD4FC798A
DCBBE8656640B9FD8DD7D1F131D312C2CF747D35FB85DCE8356892C857A51A8D
59DE97F8A01E890DA5008479343B609157F082AE2BDE83E736F2993D8C048393
BD80B70A1B9F5F844D4988A574FB12CDDD4F1347213C93275718A7ECE52E4B35
84DDBD03B345F3ABD2897BC9C6E0948720726BDED2B572EAF23F87D1B4E33DCD
967D167E9BF822D0CB8E1EF3F81C1626E3123F65357D50494112084CE01F2CA3
AB00BAB6D6C7EC825EE6AF47BF5B6F6AD18F8118331C87CB83A65571AB482E2D
E257D768E496946556E5311B3C8D1E40676125C5C463F511124CA3AB6655F46F
7CFD366BF9B140E1940E13D7443EFCEED61617E55E5BCFCB4F3C90BFB9F256F3
160A370EBA3775F4297F0DAD9E14CF669C7B38CB2D16EE53FCC59444A3FDD923
9B18626BEF4DD08E57DD9280429B46221987A70CB53C5BEBCD5B2C139389EA1E
172679B2EB1444E570E4FB2E9CDF31D967A9782C3D1060E25FEFDA9A31D6E867
5EA9335CCD9327F84018CAC0A2ACCF03FBCF06FE08AEB149A58E488D596E212F
E0A67ADBC2A0CD63EA4F910768719B316042736A73C196D8618F85AB3F011E78
7205BE3178501911715F16FD79F34C2B0C99F08A14AC86DDA0E5E1DECC2A93B4
82ADF9BFA9BA653CA71C9BD82D057EDFB79CBB3AB0F969475F70DE15FF67FD9F
8598AD4F7784F086FC1153C84590672247F6EB7DE01E820CF9FF3BEDF7164D9A
F89DBBE3B49616C51E8265379ED8DE9A58777D57B95A15D3B8F74B1D3101578C
35ADD0A8D9D4DAD5542DE899339842E6524793E24B0D160100C2DB33B804AE5F
F3756A44F596F7FDB278CFE05F885E3AC77CD882285266E081EC6D193B6D602E
72BD1D95281E7B0971095ECE0EC7494D4247243DFA8385DBC5760B397F0EF9DE
EF7EE029A0C0B16FBD2D0C35AC8DDBA4E9FDA6D4CE4408C1EE66EF483DBA4330
35AB967248C166797ABD0873EBC07887EB84556F43AEDEA439FBF139A16A5534
2C0567C63CCCC7D4581D1D357E52311AF227B3E316B4289EB592EA5CC31283BB
51EC9FE6F2A748BDE8B927C96A7B6A6E5489C5662EF190E9502C097B3D9123E2
13615EACC95D32043C847D11D7DA737251FB47D0B21212E70A01A68BBA1FFC28
AA0B2660C443D24320003930CD82995B6CA72A3CC8C866B77F225EB04390858B
FF70300B0F425D9FE00B3E354A8F91DF44F0FA4452536993F03928FBF72C029E
FF203361CFCB767EBA8D659AF5C78794A5D4ECE06E210228390284F3C645085F
C552479B717261AC64BE8AD8FD28A9EF8EEB25F6A230DC6AB0708EA9072F69CC
6CFDEDC298DF2EC7706E9F77C8A04B529CC5FA2D3044E9909CD4A49E4600DBC7
FE9A727D18EA999ED767B6D299B81268F3A0B7F152A9EACD5E0E0D21CD6BE8E9
CD765385D8B5DE106435BCC52F1F278910A7453E1D5E4495E0ECC246A1A96A67
E7EDE8C1B81FA5A78EE7283509223056560C55438755D243C5F055EB9D6BC533
030B7B24D1CAF943CCF4A65FEA89CBD68DD7C16D019675621BB45566C1D73A81
43C8A24C4A470432BD989259DB9F6C02C826516CEFE76A20C4B77FF5006F9417
D29C701FBBB72A57757B2CBFC6F5D915C260859C43D16849F52816E963DF69E6
5809B7A1A57F9CC512BDC51EF2549329ADE9B5ED66F92F3918E329298D9F6293
E8614966D596681698EF9F5C3F9C1E9D28B71A246B043CE44E65F6FF48FDFD9E
7F97A02DBD8119C5CF0B4AA548F1F5EE79293E39D818910A1BC4CCD59FE2E917
BCC939A9173872146DBFB3CAD4DA410E69C542CAC64B65F6B829C08A4EAD88AB
78C203C6D210C162942911B3230B8D462CB20C910E977863B5BC5F2ADD55C74D
B7CA7E9EFAFE44BA7F7A772A1DE9564A9D3E07106E7C3EBF116741C894BF39A9
0453F01FE9A9C0B99A0C829B31A39E96DB3FB6450A6FA72B393C1329F91FF6E0
5E273B5DB89549315DD15AD26482EB823194818E6DE249207343C37BE9B926EE
DA3BF3D70B7EA564D92A65C4DED8966517660EFB9F77E72A4463CC061B079BA8
C8459393D8766BF4B26E479DA5A2F4C3D020E853171B0D1612A3DFA5264D6B64
371271F687804E60080A4C7FC4641AC84D9C0A610AA270C036838AC86A8C6A32
2C7FB4E132582BFB1566DDCCBD1F5DA09879D88540FA56F817D5C1B557C9C11D
2D1E7D8E9C5608F8D6639843D08FBCAFE02A4FABFE9E13B8BC0F4FA28FF4343B
283D1E9906259C74BE3535877F54B62158362A2FAE18AFACC74586D3DD54067F
7779D9DA069D78960F4869F16F458083B608409F1BC136BE8BE912F59CF929B8
2718259AD02CDB518BA4C4AD8F261CFEBF43800C3687793CA934F06A27C78C51
22CD9EC73E29A912F1956FBA6AC4B35FEAD22394C03A72D4AAC6C42C085ECCA2
83F22890699F277A3B4ECCBCE4AB764ABC44BA382E8F9A0553670CFCE11E6829
DCABA73D9CE75D74A63FE035DA6AE09073B38E8EC302C923C417F577823C0210
444C9EFC2B351212FCB66B4CE90406085978F8EAEEA93BFC81C0DE48C09B326F
64EFEBAE47B9BED3277F15D4F9690BC324B840252750485AD8A5BE240B63473C
5E2AE49AAE5B3839F3E07B66DE9047BCCE989895127AF92F2E6F7BBE20572943
FB64EF33B2776180606E79F42F69D23D83720FA9BD9CBC1F322A39EFCAF58510
7BD5A5C188A4F3E799A32B23859A4CDFB52C22ADB4DB30D313BD8481157DE1AB
55FEA2AA4FB28CD56DAE1865B46C21E0E0E89F92C164DFEC115BCDA359B58305
C56E941651E321CDA67159BB74CE9AA7E2465DF8BB191187D14A7C115822AAC1
C9EE282505EE165C67B85CFD9540F40E3918B0F36799E9556526F5E5F2205DD6
41EE39A4BD6C8EC20F3EDEC379F90BDE98CB15B4BA24624E146098A7CC2A6744
4D326A308657D62DC3F52A76832779BDFDFB3E488773EC7FA5F235AE1BA3C6F3
547FF24606651E5887FE8D860619C6F45FBB3B6B73E80D855F5EBFF6A5BCEC48
48CE05C8BDDBDDC8BAD0B87F3BA50D36D20926718FD3700DEC250462972EF06E
EB9BCD3B1076ABCC3DE786B58C489534C2490AF71BB6460BABFBADD0AFABEA8C
80E085B2BDD8ABD8ABFBA9D53C42A61026E5BDAF599739777399A670671F12FC
2A455157B1BF595EA3E14929085DBBCCEDB86605F30BCF8E570B4341C3751A10
FE6C3304E9A7D21CE731EA372572B28F41AEC501195D34460B4CB7D6A079D7BD
85B9A80845B563220566FEB8F341AACA788E3A182971A143737D515EC7EBDAB4
AF1ECBA1C6E90ED114821961FF7FB9CDC8E87628938D6D0D86F3813393C1B0F8
795A88AD6FBC2E709568E556CB4D1016889B947CBDBFA2AA2F95E47942252534
868BC0BDD3AC613B165583560A971E20D13D14FBDC71D6F64905DBB304B088FD
97B4BC957F62A653018E98A03B7268517394AEC07942847062262A67530B2F73
EEE1DE2A68B5B6105D8764CB02357D8145A1FCCBE19B1974E7D188BE0FB15BB4
6AAD04E02883BE3D2874FC615317B101D4DD8E99CEB6204BAA933445AEA45169
E6F0C558A7C76703D9959B4266FC6B1D8F2F796E97E492D77BAA5654806C9CAC
0D5C44A7F312298283B7BE5DC9E87714F3B802AD3E829A70F3E630D3712A8859
0E36B304030ADA0D2ACD2B57ABD9E5573D568776A96ACE6FCBDD69667868EF37
1BF4BF97B49DD9D0ACDC545F5E9508298692F1D7A25FB8A43CBCBF50D14F75CA
3925E9D2221524462A1F98761B4E749C5290AA347F0642DDA30F1997653E0DDA
51C90CB9815BE41305099CFC3E1E4DF8435E646688A6CAC6190A493572103C85
22892F912C82043AF80F61A293D8E4663948824B1F167FFB8DA6D0FC30521026
8A94F787E3E726E23CD3D59AEDFF832696F5CA0D4BD71FC54A1D783BF1258AF1
911F31464448C0709C1710DA050C922414669E32B9CDBBD1A4F1198D1C09F4F9
74B984F2CCE516A901673DE4B3F6F2B78F3EE8713C62E48F5C8F62344E371AF8
C17D5AAA5E3469EACB167C30F7D7763F20D741FD762A588BD02751783B75A1DB
76E63876B6FB9A2B8BC293A7C116E4411AAB9A60C2FDF1D3759ABCDA9DB4FFB4
CF7051863564D9EE4D3417DD8BA249945228E14A389F089207F671AA80D08B77
A40CB972E74299E2558DD70A36B6A8BA9D4BF36A724D7F414849B63D419F4B45
BB03148724B79E445853D02D69F06FC20D7DE3791B8FB54AB6996CB8826AF76C
F5FE7F2BAAADC3900F14F17E59A758BD75CDF6C8892DA1D9E5D3042D125734EB
53A8090EE56334A908924DC4B86318921169C7F112991FDA63181543D0E993EE
334C06B1A622591040A4D13176649B1A4C795BFDF16DF6E9B62353C3A97B9BC8
66CFBD491B08704C6DB6D9F424CFB1800057E4CD4218C88DAEE1BCCCA10DC61A
DAEA54F207742D31C0B69DDD41BA88727A8086962286D0CC1BB1EE4DD1AA03DF
C8ACC8BFD0FCCA75F4FC8D577A380B34888EFA8DCA131BC4999FC01E54A639DB
E0D7DB87DF0B96BC386A0DC2B658C25806C67763358A994E1927E1E7E81CDEC1
DBA0B63403DB209B0E863AED121E3736AA0E1ED55B70BC0079CC996AC611A934
830E2481F4C794D941A81A592501CB99EC2DA8DC9898E7D7052B6A746598904F
052A50EF84D1C46CFE09C77254D06D3E100E16295B17CF8CDBB25AF54BD452D1
FE2B0C171ED12EDBF622DBC6438DF6625367A51A814A040839172E3D856FDB91
167A89F2C736DE82F77A6D8F10A45FDA871DE066F5383FC4539D3C5601350E11
027DBFE4659DE91408807BD26DF0FBBEF346A224D073A11E3638F95D038D66E5
3CC9111E290624DC39FB79FEFAC07D2DA7DECDBAEAB256B88AE676FDC3CD9831
BE77B254972132E57A163B5355B0E26711658E3636933A60C554B80B5A7C816D
38FEF3E610CEE0821C68FB994E4EF6DCE7C566AF4918148480D802FAC4425713
97A62FF6727AC3BA11E892F304616D034B3F80AD2AD5D4E1DAE678029CC028DB
4B4E119164D6F9F6B7C3C24258D58F35232088B67BBE9656C74AF133C1C75873
1AA348AB2BD113D4C2F5C4ECEE0EED19E733A2A2B3C97F15CB4FEC940C45FCD7
F44ACD3EFD9932C19E128DB67D6F73FE591BDF942BCABB9681E18B6EE5C6B153
BA55F194E998B6EC925AC28831C654EB234ED126A95DBB4FA2D09EF80D1F2C50
7DF980D3DC0EE3F79FEEE1B30ED1EAA29FAA9DD9CB641E5BC06A2384A76EFFE1
487F472EAAAADDBC48486C5D96FF0A334E8F5667997DFA2EEA9B7EE86F7FF639
8C06F8F578B49F50F9D58FD4161F04235FEBAC54193DE67EF18181FF138F946A
8E18E1838F4BD242BC436914F8C55BBCB427552362C7E1301C609871641736D8
B9C714FA8870776EA3C4E8DC170CBF5F561E004C322217D2A01680D7EC23752E
647F5E9284AF035C5C9DB4F8EB9844FABE985F922CCD96E0CC6F5A17D0A887B5
BE606C0A21EFE6853F86A81F2294CD52B8B3CEAF5CEA7C3AE566DA6FC9118B7A
2B088D87B141453D3D3AD224EFD9AEF1FB4B72CB3030285F528CDD83794B1D8E
0D6BEFC5DCDD5D4EEFDD6ABE878DAD54981D7C999B88588E3BDEA834A3B0F645
92C48CA0F3B1DB49F96AF896F9B09E68528214503E95BA71194E435A0810307C
C13A1050AFDB5FD2070031BBBFEE53E415C1E1417E02C197B010E49F7B468D51
C05113E4DFD75D28328970333D68C7090E454AF9E45392F1B4CA74A7A89A3A2A
4B3708E7272F426F700148DD7894AB6048D55F04A4B42F39A4935E10F10BAABF
5FAAAA47A65D35EDAC51547EFE9C11BAEAB87E7827B8321C7FD25344A0A36FCE
EB4DEDF80BA158F65C546E9ABE7B6415B64E2A21E04E486126604BB3082C40A6
5639E91B97483486C428868DFE4356AB5F2F38D70FA75397E8127FD3D47DCF06
281811DA066F16583E31EDBAF6421FD5099C6A2A421B22C399AAD5D324BCC6F7
9069690BDE2D5DCAB19AF1EEBBF1786B432C43F3C7361171FF479FB4FDFFC814
7219F8BC56D7731B980EF3C793B89AD3612894309F1DD29EC2917528A1E4F90E
BE4A58DE01CD82B0B8D1C2699969029ADA6BBE4098BB47894402F0B11E12FE6F
8C7D459D41AAF3214DC47D57754E55CE6588CD0FDD9D151FAC24FC1467A7217C
1C887F89586F84CE132D460067CEF1AAB1132A7760C13A25D4F58FC0C20BED7A
E3AFC8DC88D38BE549181454004F18A348FDA4446E35C019B5DEAB90F1C88BB2
0B7662677D7CABA2D572D5EDEF408B689FAF78D1103036B695EDB12D5762D807
5F69A14582986510FAF7CC85EE25AF847626399CAA221DC09190CF963F70D6FB
253E24FF4AA72AD9117A726322FD0A2F50DA63265374CE25BBBF3E7B160A35E9
6685E39DE90AE39CDDC8ADD26CF9515090CBF63F37CA1E51253191C462F39C2E
6D1E17C5DD710E6DE3B94D853362CCB1538C5D0662C694FA028DF04128F86348
FB9A511FC9C5F2A4948ABF4FFE049B0DDE72B9F10BF392EEB7EB8AED2B53A6F2
E58A123D80514590F1A6F5EBDB837B5DF27E58C30BB0821342EB97D8A5451711
BCF10381381D3FDDBB3CB3324D30BF1893BE00AFD1CF67018D820E9C694AE14C
87D6F5F293B097783B27C733DDEF14A8F726993066F1D7BDA1CC7E62AC1BC317
2CD857F2F8CAA067EB6BACB1604BEE11CE454D7F620051B4131C34AA6A118181
DC716145F7BC7E8475220DCAC43AEF7C894AEB588BD00A58807893395E20C0F1
233B37DFFF06E80BDA2E2780E0925CBA7730842B50CBAB99A691D4BC90EBEBBB
AAEA63C90535AC90368B31AB3110CB4EB8D00DF6246BA012FE0D212D2C52F35D
FA76D8BD28B2DD16C22B540BD2E3DB1BC2F84FA09BD0F0F01A5C693C8659E5EC
E5F23D7167090DE590FABBA2C4A61C3CC62C791E25F5D42D773503A871E7003D
92A42252C0BB59671471F7A62DE9A66C35F09BA6FCCC1DA9169EB8426EDEFF35
A40C8CDEDB068B9B77874F5BB1418EDC8F8EBC2D56D93DE2601EF4B7997890CA
F3B0A8D5CA45C28510874163D0621ED53D2D2C039399D45315AD7E67AF3DBADB
847517BDFF3E89F5BF2C2297F373E39F6DBE698884F1DEB3762DC12CCCE0BC80
81B6970B0B09BA37237B9A81C50CB94140E58C4627A127D4600DB448D32BF2E9
4DA700A37A4B011776C7A572D2FCF18871BB569C2DB5BF55896992C8E5FFF579
E85965F5408100B416B920AEE4EA54135C3A2E737A9DC43C228782BC17554B29
0734AC8939885CB567895A10EDB5A60F2B635A8F0188A64E4F89638A32189981
13988006CA5FD98D09AC897D19DF7253FC7B1DB0A04FA4A80796D144BC1875A8
46990DF6FF7035BE60C5CC7E02E8BA2137CAD04FC9B35F0225CE0401D6191EFF
C574588DEC1E180341DC959F8EF56ED5B5D8E030AB21E97643C5FF3296C63A57
2B75ABED13606412B9C0BCEDB0E2DEF7ACE895397DFAF366B982B1E79B826CBC
D0B8E295F3FF96DFF56779DE49A1157C7D1FE333AF841AD6A54680825267D023
FC3381A9A2CD89BABB5C3F39DA4FCC849CEB3A4F4C4C1923F2E29BEC3089D542
CA923D312888E865AC3E7626167E369AC65724E0E6208CD0BD89A89C673790C2
9EA221D07D8B742B87CF1D36AAC6E13138BC84B181F1401416C33BD02A15FF37
749ED00BF0054F72ED0CA0451E5D8A813AD6697E53A43BF2E1F9E889ED33DC41
378E58BD33F44D76204AFF41F5361CED450627C39C2D01215CEDDAE51158AF49
1169D02FA446A36DFDA767967A43B3D1F3FC4F591BFE0EA1D4D3B6F8C880C41E
EF179A9E95A7B2A70E3A9170C482366AD5EFBE89ABED3B1422A124751EDA0CED
4C3D2F1D50D4F04F0E2EBBEC84C9D839CF9231D4DE942B7951DF1BAD3CA5165F
1DFA12AE5B99CA89CE76DF92F2B1FCB71694DB0817AEEC11C8E1544DA74B3694
25D80E2A4707E47E59A412E79C08908A0030F94AEB435C0C0C42BB0FFE64DF11
8C8C0DB701D2AC177534FE19FC87E7E26F3A556060719A2D1B7F5A905DDE997F
3513AF3FCC9BA70E3D5E8D49AE8CF599C651E27AF40D2CD8C640558938D5D54B
C31B26B24CD315BC351E053081BEADE92D2E498E8A5D916CC50A05E7BAD92538
EB40128CACBF5E2B298147CAE222D3505E555EC90AD1EFE819DD2DEB414DFD0E
C4C0CF923FB543C420F7ACBDE3E03F7063896D3B578B26EA594E686CDA7673DF
CD596C91A021EA8A1C76B8A0E9AC47DEE1055EDF5DEE6F02CDD1F8EA94A3B67D
3C10D9B8DB06F8E551AF2FC7C81DDD3D949AD239FCE09B582D98C6CCF0E2C9D4
4D52B3F21A3D68732188CDB616B0365F74FCE87866208D0BD773DD1B73B1827D
6AC61C72C45BC10D156294870255E4A960FDF644AFDB4A9588B2A62F130235C0
BAE2D41513B3EB2D5E206C59CBBA937F516A1B75327AF1B9480289790692CE76
88148E53F04D4CA153663EFF8A63016F79C7D0E1C36F42F87C10FF7BDD24B757
9343DA5E5547E88021B46B717A0F17EDBF9B8D010255944700567530AACDF075
702990099F97D70AF54E554A8F28FDAC53748FF1ADF3804B67822AF1D7550E5E
7E677064F1C1291F0B78C202175AD04479627D1A70288C3CBA2FFCDF1A436860
3D6CBB1C4F695F5FCDB616F45FDA682823143D7430D65212B4B92AC7D6D521E9
D0A70DB9A2BCA8A15A617ACEDDE207291A6CD470061A1D580BF1033B82D15589
D5B59FAF6485CE37FB2A85057E484FC90BB66AB20D45D6A73676C50FB3DB3A00
354353B50C9B2DC97AC798D4FEFE2F2199816052EC43C9FB59CA9B02AB37CB74
92A3032BC29B463C84986FA2E67F9064EC92E4D0E7C706E4A4AAE9DBE82855C6
64139419373923D5BE1FDD292F80E973E2744F04F806450B5A5009B2665279C0
670FB3550E5683AFAD10DEFAD5287E95DCD5BF08A1818D26B73DCDC77F52530A
736F7FB29FA9A25A78009A80E58F8A63A5A895B1F83F217E55C84FDF0F821D36
1624F3FCB704FE727BD343AB489DD3FD513B3F53DF57F2A7CD1DAFDBCFEF6B48
7C04677ABCCFDF3F54B449A5C7F511DAB110C069D9703C24A911062FD523692F
C74AE7FF1F486B78D68E137D1E6B740311BDCE9B0E9D7A0546E34F8BF633F656
FE32F1FF45323265B1834143055A7ACDAF5C195B4D4014AE118F07B7C4C932AA
7158471CDE2C3225FA6E393C673988CAF05981568D91C19D635F88DBBC73AD3C
77E7D0EC1C2534CB9A23AF864FD5500C5FD4773525A9E12912D6B2A265DE09B4
3E847117D1908D958AD0EFBD5C6CBE684E8993B9C487BC130A5C4DC3BE1FDAFD
9348548BA85064FEA8D15C12D10844ABE68C2A018FAA8C57D30B7F86BA9A0418
46007CBC71F462AB9C6853BC1A94950F16F3F36D0E05B441D0D09286B1C00698
760DAAFCCD32B85D6FE0AEF640CDA171ED43D2F179914AEFCABE3F66FCCC49DC
4F8600614012F3802AF740BD9C765861A95092B7CED26EF1639E071BE1A5D4B3
326832B50B45C50D8F3B912D34199D977B0639840B546A6D81B33255F7D3EEB9
81E561FDE88C1D3155DEBAB6116D53BF50D681063EA6A439F193E4F51335B7AF
6043F860D5D548B166C25921D8DDAD33982E859FBE04511252844A1955522751
3555CEDF10543416F941F4D2FBEC5B7F4C7EF6B6759AFB2EBBC09D2A621E911B
E4EEAE0782026D405BA7A1D57080100B5EF88CAD7D433C6BD044D6F63233C4E8
3966F8B4B4C033E07E8BF575C74E886762140314F3F2106069D58578B215A964
A79AB1D60827C1A420DC079E3FDC29022FE4AC2173B0520D08084AC2A4D0FD15
EFFAE30AF47621948723B3902262374A2272E6511BD0987B6E4A1FBAD528ADB4
433F05993DBC1C0D31756164B01C3061C549A475AF4E7F5665A94519A585B0D5
0E05208B6D2C68F8CAE9E03728972CC3EA6AD5BE04886842418EA1872BC169F9
2A89067FD02C0A5C9A1C1B39778132988F62AF56BB1C140022F2F2621410E954
4817BDE8B4217757E8564BEEFBD550962B3EC4282A2426B0BFEF43388905170F
1D5C3C48181F255C915B631D0B097082E73509B70F0C64694B73BFF295CC1127
3AEB78CCE20956F1F48D71825B795DCE254C43E78257076676FBC638F8304263
28CF13180FCF1526988EA8C979E696CCC57988D3B725E16659ECC4344E712CFA
89533D4C2E65C7CD5562F3FDE7DBAC99DC13BA6BFDB1651B2647FE0CDE1A2258
F05CBAC20AE0C9F80EC36F9B00747415A1CE767F96EB6EBE6688309F6D9793FB
B865FFCDF4EE3796E249E401617B569C73B92684849375A7BE1F5F18A3035F3B
493A5A1D81CC439AD51CA05AFE3A934B4283C233C8744FD5EC84144B2966F72F
DA273B511CC2EDFCAABE8E6BE1F2BC739461D428AC334947D8A298EB8D7F3D54
EBA10E0BEEE647974DED573B68898469907F25AD9111BC334B0C16F2965D6AC9
C1B17CA166B202F544269DAEB43889C7D20B7EEBEBF6977DFA31F0699F4BE151
4FFED49364D2E81715E78DF8DFDCA586706385043FC6C757576EA0E4C8F0F146
14231A275834CD66C4B6AA76761346D2464B67AEA933DC7DC07EC2D519472A0C
4996F7292D36D4B6BDD139C69E0B2048B609D422574F7EE6C6E5AC60D349CC39
4A7AB9B964F4168ACB53A4191C68077EE40752B4110D0450852399414A0497DD
A9ECBAD801177B0EFA572ABF4EE6F29D00C325F96BDAB3B015356F2F45DBAEB9
56FA4B2772EAE73489B25B372A9978EB9DBF4FE6BEA7CB5F1278C1799DDCD708
39182584026F8422D74280880A86AE7BDCB9A02CD5471DCE9F6A9E7778D09C62
46ABA3D3737A4B33E9CB6A8DEBB3097E6C8E065E83ED4EA71DF17A934E54B39B
8C52DE63A06B1B761F68EE313DAC963DE598A79510077D2CDBEF60569742932E
06AEC82A22C9AE96ED934CD29EB760C8F0114D19D4BA0161537A4B2E556B5CC8
1C1C86B8FD8EF3FC186A8EA4C9BE51D592FCDED6F94CFB953DDC6288ADFD74FA
C115C77370504EEE4A84797662E7E0FE022796E62FB435868B8E06FFADFC82AA
F26E8C0FDDAC48A9CD70475B33AEB5CB4BDFAE35CD5B8BD4D49D6F12246B7A51
4051E6C273C5B044052117FF24219A0E06E6873997A3490967DCFBB99FFA480F
F4A42076368F7D57187F0828675A52382D41DE6CD9FB522BC1AC55292CA8BE2F
F6BA35919ED1905AB63D933A501A7C9B7CB81EB2374992009A28B699901B1A6F
7C9D69802F07A5034AB0C1723CDAB592A57DDD60ADC12D2B0A1108DBF8290D59
15969AF272C2205E542ED8737891E67EC3F750622A6193571C38E6ADE19950D3
A040283ABD9F469FD9F520066CB6F41C2E2C7E30CB250783923C878D71232AF2
8647D31AC19E694472A215D2F495D9F2B2AB0E630ED0396E44A5667B7AD33755
95524D22C358B7374D4B9B43B91F8C3F67B176705295DBA064950DC5A7D6D175
1BB269CA11164E29C2B057181802C0C0857483068DC5C067E081B140D7E73D6F
6FD77EA8CF1DFDBBD7C6B04666A829619C268D692AC008C42D510A67435DB54F
4A93D7EEBD7A02113AC7415799BB341C0177F10D973074FCFE3CD1E8FE988132
C263A316141ED0F25A4455CDAE9C52E43847502BF4A104BCB4900272A815DCAF
1C14F81437F69B8C5422B1DC82FF76904B24129BDEE930A617D57742D7288071
6E925D1E0F1ABBDF706630395892515195196DB28B1A5318E868D3EFBB90D58E
EFD17FB6FDF9666A3ED9C1AECFBC3AD200383477D05545B04A50A3F35D97C247
17BA12809E9C4391CD56879C4BDC972E7A224A1D19B8A8F7A282AD667DD1AA4D
27665BF4CF688CEA78D64A49A5B1B43A8A1E463235B276E342F24431817FA5B9
F5056F14D3370AACE4D42BF755353F893CDF8D4EB1E7A8E709E36725A1250C59
07B8A7B5D6B23DA6B0921C800847F92B7E4F5DC3A1AFD438EE08BFAD9BAF6818
2B0E800320CE9D1388EB08F9A8303DAD8BDEEE8702A6E49872C2CEF664ECFD1D
04331C07AE954D0E9CA6521C79202D3AB929B32AEC0947D1ECB82B90FB04F171
DD0C6AA91AD38D69132BB3CDA70EDC5342656C12DD55CF20EFA930C25B6C0A7D
EA262569416202C10F53232180B714D169EEAB36866911279BC4AE282B4D5758
925CE87323F94CC4DCCFA7D52DEA507E5D026AAE08682596A8D3EEF5BE6C97FB
75F4A3B4BED6B1E3AF1B243B7AD17BC09F99F67B642948FE960344AAAC1F7663
DD34540D924307EB59A046D1AEC79030AE60BDA3395B9FCF935EEE3691A8F7BB
ACAF0CDB9B68E1561371E8F78898E7241FA36386324F98654398F592EC7FB23A
37DFAB7F41DD16B0754BD1677B9620CC6631A369797125990858F99132290BE6
153B390C030FE6FDF2F3E38A9F907C93BB6588FA153A1459F6287FE5D0DAF430
43794EF59D71762682D942C6CA069465E5A64A0E8A150835751C717DAFF9EC58
3F611F6CF4B3081A4B4718B84F74CB7B5F8460E5103D7ED241D48F5DB2174A71
2F0A1E33ACFDF4F850DFB0830B33B226AF22FDBB0230720CF27336E00D98D133
0DBA850BB70534647A4C09D8B5EA9DB838A16A02EDEE67542C2D87ABEF72CEC7
6681F8FF7ABBFF2A12FDAEBB2BD2D462C1C68CA7FD651AF167894B9743045EAF
35E5F66470D31963A81F3099074342B9F9954221EF653D3DFC33F6AAE1541AB6
B5EF2212B7C645986B3B35D7FFF7A29E3246B30E960A439F315C4093F4AA8854
274B18EDDA8D1F546EEFFE498C6353DBB65EDA98ED92729AD8260AD50E52E08C
FBF052D1DB422D245201FBD6463F31D5D388797F629FA6B66BFC686A71E401C3
D7EFA3F6906F0ACD8E7EF2198C005568E9DB85B2A0D87AA2DC263930523D4317
6BAFB7DF0A157151F7625E63296E325E2C303F6EEC81FDB4F9D9095FE29374D1
DF472DA46570BECF82771C71048EA77A05F8B383634B503D98FF2A38363CADB3
8294FD8B63FD7216EA3D9D9CC7A830D54468CD6DCDC99F3FD3A30F4F015CDE98
93D5D66C804F030B04DE0D0CDA9A69AE9D4255FDFCE29059393B889F479A2D31
083BFDC93E4F7F38F5287778DD3A5DB8E6475585DDA3A3236DED7E77A8B4E0B5
182C1F9F01C677EE3F751374713670F82264386ED3307C69F7B4EB8C14B2A4EE
6C76644A2887A949DCE6F28F677B2B3B2669D338BE71BE9D45954971173E8A83
3359F48570AFB66310F41FD9582298526C0086C730D91093F42EB0554BE826A2
F95A986A82D5FA923C7356D17602C55A70BE3015A727DD70ED6B0919287E67F6
13388EF32D92729B9C21623BD5FFA34445D1BDE1D7CCD1A973BF297FE6A8821E
03A381C468B8F8846BE8070C46525A7DDD5FF93B34767BA45CBA4B18AD192DF3
066AAB60C5346E0446E0EFA5A948531F89C4829A7EF0C7F3D7E4BD97877E18A1
4D48B578ADC22A90A6394F93EE512C27FE6F61D8ACFA6F3D493DCE5F821C25FC
3B82895FAFC35A80F855645E134C36B2FCCCD0B0A4AF577A2E135403EFAD5247
2E97602424CC86C82455CEF33A95AA78AFBB5DC8948D0468E70A0DFECA93149E
12A6386FD8C2529930EF0C243EBBD7617B0874E9A7ECB5F79D51D17FA7017754
C7B13E4890D453802BE679D57A75F02F4EB6053600B9D729D124AE2CD6038DB0
8BC65DF2DF5C7834138A16E9F85EC9127530F18DF16ACA8ED71F495E7F26989B
F6328610AED78D0AC8A6526EA1464F4A760E65C4D6E151ACA5B821A0F95006FF
BB180551DC9C72CD3BC652A743B0298A61958B6940681AEA50C2CD98C0B96915
C2ADD25EBF77DBC319F814A38BC018625BD6438A1B03010C44859E80A2211EAF
D2E63358399002B6C95EA5169889D0DD08D555DA95DA96309092EB28D1F4F765
FD970E1F82C2659A38F8F63251495D697C3AC74F1261B9CA2E4FD8A303BAE140
60E1394571392C398E69EF82B1DDF9154F405413C9611215F218B1A2D47A7777
F1B1568CE34A4F7FC812BF766372E6F0277D8606565AA35518DFB99CA7E44B6E
03DABF8ABB73228AB47A144DAC78C167A0E5CE18889CE0B44A0315084F5C57B3
A6F1CDA3F5E40246DE10DF2BF4DB56F9758591EACAE8A7871B91A8F1296749A7
2F7BEA1FCBD8592BD24249226B3BBE9008E88CCC394CFD3B7A672D73C22382AE
CACB21AD6B10F2CB000A0D128B232D9A9E24006A4FCB9FDBD8AAF2241D1D1778
4CAC36FFACA451C02169A1AAE781F155752CAC88B12FF919A8DA0A99F729D2C9
95E01EA58EE6A47D4C92EC61C5342099C27D93A79D9C9F27814412C7E458C370
725C45D5CAA5AD4EEC414B8DD564DD7CC7D0CE512234A4AD26EF761C4633AA70
47F53D5F0661EC3138E0CDBC99204AA6AD1309BC5668A2A524C6D1CCA0CB7657
2FE440D7EDC6EBCD2AF0D56D5CB3D90AE897FE7BA362436980B6D47AD18A9ED9
1BE5AB10A28CD213D511B9E0E5D07400061A4A73F4A59CE1CA5EC9CD3B65FD5B
FF6660A4443CF494BC17A9C644FCC9C738204771651D0FDBDB306D7C787BDFC2
98BE5464E1FDE8190F9F6C9CCC4741595796DF2CC27F95B1392326CFE1BDF90A
35A60DB2CD8A2335B62CA1D8384D4869BD9004CBECEE5CEBDB326C4323F49956
5020467A2F2E305D6C518AC07B0BCBE9A5935DFD15F5C181D6853342FD9AAC09
E00066D397B252722950F1216BE4DDCCD51327D1BACEB01AF85E9677AAEADB1F
46A72EA7C69EE9D97AA1F8DA68DB2660AFD9C6B8612064088FCC4B30D4DFB3EB
1E58EC9CAB831581DBF1739EBD93CE53DF85531821C23E4DE1DD48D8E1E542CA
198D45C3FC20749FC2732040F1A77F79277082B78039D2C3956923C9DD71A04C
7A9CF032A8B9D932D3C7CDF50D3E9219F908B315D8FC4DABAC6A8F1982E03B22
049B6522EB1E1AB3F438CA57A2D497B50B298AC5B1CA9CE47A0675DBF2E80407
2C010757B047D81070F037359A60E233CBD4306186957AD9A2ED31221E1CB90B
2C30026AB518D1BE399DB38FCEF12C4E988752A629E58647D8B480F14B9D9A5B
20898C25C34DD931F1BC66567E9D3EF7181B20F534678934A4362DB20B0C8085
661704104E1175EFB44CC4C632B1D5D2BD3E272043E243B34E83D08A531CF214
8002F9A6DF197F87C989B831C51D2A15BF986954219C2577014CE55CEE9E4D5B
2FCFDA6517FC92A87C319B62B7902F55C78D8B2C6BBB0769191B91CAE0922A3C
733FB9D45F81757CFC8ED6BAB56FD9EDF76D27C19D65B3BB2B33DA3FA441A239
A35712B79A29C385BE62E6ECDE3EE487E2E4CCA729FF94C41CF9C00E43B0568F
81AD20AF1BB3F7F016610C7F398DA90B959FAC3F10003F7FDF6FA87C5C26C06B
C86EA3DE3D00FBA77B2FD435DBE68071D0563B201D364E29610F516FB6932904
D307A292EF2BE0378196A107DAD0FB7702D18D1D3BEE244542BFD2849D498C23
9237ECDCB23458CEAFAD25F2D713FD0563BE0EB2B36DD94D1FAB63AB6E0C37EB
E4263866CD683D9E2833DDF7F0F8E5B487EDC7D772934E5CF7881E19BDE936DC
01D8F243C7A74916001B8740EC5932E79727ACF464295E75CFC635036CF27FF2
61D80395178C7D536243C46600B400494BF23BDBD7038547FAB0CF0C068ABE83
11584D42DC94734B633C982A6D6F135C483E6923656E924A1A3AE8B1C8F2534E
57E60DE7B5348DB0B4782BA6D48AEE80D379CFEE11E4F1C45F52589A52D66CD4
01D3BE7B698CB264399D901F1DF9C5C13757826851F98A6AAE8CCAF8786AEE3E
1072BA03779A36E9C7F8A9A62866F4E857F4EA7D25CC8749B0743EC0A6D0AE50
D7C66575EECFFE2E6925962EDF958E7C4BD2C2B427A4059D2D02A0F91EBEBEAE
46A403DDFF846C48F1C45F6C5921F3B67F8C92ED932589114E28A4E826106912
2B6CE52DFCF82F1ADDA9AB38F6881653677891BCAEEAE9CF1701F6DF625DB400
83C9FDB65106198B5B71DFD6D591D11D35F3956CDCD2C060A03B7E47417605EC
870F6E0AE9A724A3310C3CE8340FC7BF20C853A177B669AC9E49E29C51F8D2A5
B205BD6A7338DD78658C01776CF825DB774EFD3AE4D7F6B695E7A7A4ED77EE1D
1014AB2A3A44B1EB69C07BCBE3A853130C1166EE98E0848BF2F5646D177D65D6
8A55D4A895ECE967E17D4692206593C544DD87B2FEB904C0132C8477AB7162EB
532DE9B6700C99A70C91D92DBCA3EC38D5ABD2BE3098B63912A2F17090D503E2
A30AFD66A0E435D384E16A7CD111C656B6AD13AB3CCFEC63292D5BC09AF2AE5A
F2386D58AEE5442F285A81A0DE27C734771EE86E93A81F6A280F86FFB26D5CC8
9944962E09541FBBDD61F7C58BBFC0EBDD9D6867DEAAD0D35ED5536D90AD1F37
FD5B3D9AB7FFFF295367ADF7EB16821B9A12F06DEE9A2318FA93A9A9DAADDFA3
56E4A8CCF8A70F1E8F34F1F11DA0580E22057FF63B72287CBE04EBC95853FEBA
1DFDC8E8AF7CEE9AD8DAB0AFC4460709CF28C88CE7DF1EB139EB938776AC3A9E
156F54B9757C3FD9D0C0217C05D507AAA60D82B5E130E91470BAF85828C8A0AF
E68CFFA780DFEC1BC24C7AAD6E3D07E36C41A6450F95B9A677939B855E5E555B
6473652776F66F2F46968CBAEC677056E0B4616754EAB50F35F988DC9C4944C0
901B47F9545A15A6BE87F5FF7CE828218737CC3775DE9E9EE9B5C1D1F17FB503
D7427C884BABA7079309AD113C18825686F9ED954018F532687427E90DF60014
60FD281EC32F7B02FCBAA6792933D85A9E66445948D5E542D698158C4FEE10F0
A396642828FFDEE7A6A22027ACB483FD2400E23D3137278136AFE5EC3974C871
EA5FE741B4110BB3A75FC321F1A5E50887AA1B0D3EDAEDD934E7A9D3E9807BA5
A7CD2053F5AD8C14E31D738D2A60C8641B42F4B5D481BC1F59B6744D7E26CBE9
F986743FF302C97357E67F66F52D8E68E6F159E3F0E3AD0FF750D487A04F5DBC
7BF1DDD5692B3F271EA6B45379D2939DB15362651EEEF6A84078875D990FEF87
136121593324238E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE3B67D0FF6359D1B6C1C6DA4220428777EA791A503CDE266
386B24E0D7FC0C19F54D39D2B9223D466810564615CF6EBF5A75BEC8F6DDDF38
26F6A75F7C9A433ABB0C95B150D21DBB43878E3EF527976A3A2433047A05623D
54F22D062F633C08A3EBDF22FEFA476B92D1B05B8667CF563F5CFD60228D5707
0FA2674ECBFB8D84E1693A55A5F1266927F5FDE691BCDEA8298E5FE1C77D175A
EDAB8978A6AF90E1B7B966A35A2B4C50E902A0BF6DE9CC6DA50A8198D68D7B41
96E30CCA79C8C240CF751AC2AD65E979A3F448112F88CAFFA1CAEB0485384AD7
652C5F7CC632FCA58FD07106982317E50D73673FAE359D2A94F1DBF3AF6483D1
0592D3F2AF31769F88829A94E3C88E4DA41A68F9042EC67C51E8555EB6664E4F
70BF1AFC70968B13567797DF9980C7FBAD5F7F75BE4A63C20A1BE39CF4330521
2A7CB095FDB9F30AABB4E7E771DEBD2EDA7A1863BA8F738DE2D333DB5BB391DD
365800CAD5D9B52283544FDB1F0E28E87C707A3DCA053EA6D8E7F3BF88524491
8E5947E5FFFE190D14ABFF29DEE47E07E652EE4A3B2368AD8BCBC4EF58EA50B8
1BC22D45FEAC295201488B0DEB42C25EDCF37D88511AB96C6105EC34F78B0F5D
850CDD9BF024963367BBBDC0008CF5FDF1D829F6BA0D475F8B55BCC5BC41CA6D
952F8128
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AFD6391E81ACC544000E97C2E4598
BC30968ABFE8C2E76FF1EB04BB78E7BB3975C777E2B2B1896643B51D2D25F3DD
96B454547AA6E39E704842B17E1E8EC5B2286FB19DECBD09D239CBDCECBF8458
FF1AD9E18F9789B2DB9FF2CCC0EEC5007E8D72ACF2D32BBC4DAD86E4A3D0F951
A9357BEC5619407EEF70039325C4F11DD771EFB1ED519E2252A8110547FD7753
5AB087FC10B4C71E24BCFED96E689908E9D864BE3DD6D77022C5B15C09B013F4
48ED78EF75B3A436BDE5ED676A96BFF33DCF1124A4E0DF06126E587E8F5ED4F8
8FA0060D4ADD1D974400A8C2E4A057C2D9372EF547BC7DA9BA7D03469C2765B8
0A6BA0D91AA134624A00EBEB709BB571CBD6D51C00B349268DE077F065817FB8
D07AFBC9394BA9313FE3EC851B9D085A7DE89B3B81D32B76D83C4E4EA79B2A91
7E0290F38D664A76977E1210E201BBA9A805612B4645162EF6350939A2C179FA
272A70FB2947504ADC434D49F59CF0EAADDA7FD9F40D12C0D6DDD6E89A3BA646
8B6322EF1ED48259EB1F91BF9908E7115E5ED381D39E07E0422F9C6269BCBD30
416E874194A2C4AA475A156096793EFE9EABC5B7123EC9D0708FB4A2CCE7CA55
91627DBB3B7D9180758CB5E40FAD2BD0E4A563D1C5E94BAC3B2A21E02DAF7C12
EF47D801DBC67D95FC6E9D36A82FDABFA3F1EEE9665495B5991CD7707FD9FD4E
AFE30F850B268B6A21389CCFDC5FC3AF1E9DE106E3CC7AF6A2FBCB3EF28D71D6
E3C1C44B3C7B37E03ADFF44DEF389DE4606AF1447602483A341A59A1B95EA285
C94FA95EAE1254675CD0EA94A638DBBD0D0627A5AE85B3B38DF3FC139EF250FC
2A6B8179F719AC6B30787677BDBBD1BB6BFC0C372BA2464D679D681C6FE3D21A
58A738C2278023E56BEEA38DB3F591E0A363E248E07AD608D1FB5DD23EE3DA88
D45A5CCFDD69CD16D39A42BA348614E3850F735B057127F2035FC8F3399F07B6
CB8823A45608AC10882982023872F1580711440A1CEAFE86BCDF1286041D1887
5B3A270698F6B9230D29400332C7E98FE7F664C583B5BC9101712B7C4F030009
2769B38F7B22B96105243EDF44B4052F854E43C4932B82A848D79FA178B893E3
FADC53835443CC5A1F73799FAF56EC87DF91F6747833E62A193F3DF60A965DA9
6AECAF3A445FA0805AE960D06C87661AE6FEDD1E65591E8CAC11A84DFE3F0963
3B0FDA064321595E0DBD6361861E4EAFC12788E020E9A0C5FB78EE0EFC3B8FB0
476C753826C5EB56EC4F80A76BBF5EA6DDAA468271FC0E6B6A02C1F2AC82CAB2
19BD688BD6EECE4FE32BE66E84F7E0035E5BF66BDB22301ADAFB260DCDF73471
0CCD6641C7DE5F26AB8FC01951A22E97B68B3C6F723CDE7E1E476A6967470985
AC22D777B35DC66662215A5B44B4D516E90D6A5264E7FCB4C54B8C44BF440664
2BE1ADDC7F071E1418738F7E6B887898DADB7171DBC93F7292C49E8569595B0C
E90791FD0D1B278B4D30DECADB6DD5DE96E75CB4DF774A63C6E7AA573FCE26C8
573EE604A7A0634D2C88D777E356BF53B36F3086EC7727CB08E17BBA041726D7
8EFCF5E2709EA874626F3855862B8F0F427D061294A549814A32AB37C02E1203
39A146B644437BEF49DB0EEBA7ADB6F1843A269AEE0925202117723161AB9D44
6CF0D54C8208E6BD99D02BA761290D59655B72B365E6560346347B43A54329A7
0D46D72679E60FA6E763176BF030F4588F2A01755791405922F759AE28F3A70E
22C80D781DB6A0FC125B7F4B475F561E2CAC2E32267C08D88992A3D6F73A5B46
F6611BDD67E694671B6250DAFA3D85E0A78E946C78E33C883EE2C57780F98154
5E85525FE962D2E1CB05A36BD6709F706EA336F89880CE4C5B805C3C54F112F7
AA206DDE1BD673D1241DDDA5FDA97AD809021D1EA243019B29977DCD8E587023
0E9DA69ABC80788F2F72CEE5F5594CEB18D90F347835DFE50FE376DA9079A23E
8776392D1BF6CCA09589514739523752C2764531F3545D0A6C526388F3B0E7A9
83AF06FCF09E37E9D83826C781804806872329BF288BA625E36CB1C3D5EC17FA
27265C64C8DD8C950BBCE755FD6C54AF9758E21B0A78302026F8540F5BDDB2E9
F6600943B0A5D3440DC803BB2FED254658D1763E8225E9ACAEE79D813C62B96A
7CD2247A269CC4D2B002B45B933534C0B4C51DDC50BE37BB6E42B8F92F6D86CF
6D9DCF7F3A34E6AA3CCB13CCC61FCEE7C770686770D3A6DB1CCDD76474C9CA9A
0EA58B35C74EDB468E0B47A4DFF91B1D7636794038D4BC5D6DABA9931AAD2A33
27F85EDFC48E9DD4953A24CE287F62E202B39ABC775E543629139A8646C16700
2FBE2D68DB06DD65C774E5244912470686B61461F649141E32942B304F1F8BA1
9D607C5179AD51695D849A34A76E3E3EBB629C16842398C0FE60E4FBE5E27E77
7DAED707339191E22C609DD2720E8BB7FB267EA13BAB3751E9579C8219DD72D0
05EB5AF605812922A8155A2B4C4BFBEF1E1A860AC2A2F2D25C1BCBD861F91304
442F43BDDD82AE26C1258D024252CD124E75969134A42054815C2E439374AB81
3216C09E4442D085FFD691DD733B708E1DDCB3DCD897DAD67D8DD823096C28DF
9F3564BE4C153AC91451F122BDD5C724CB8023375C54CA4A8185E98E9577DE92
D32FE7CCE94227FF4DC7ADFEA86232F92FC49DBF4B870C28C308C0373A7CAC1E
13E291BED2FF361ECADB0F68B3324E63C2C65B63380567B6AC6C9B90F80A589C
2C8E6BA68B8A9403FF86C783ACBCA1098CD1D44BAE1D0D3F47FC383F86C8D8E7
AA4C06C022AEFBF4978B5A3FB15D572551E6F6D1CB6E43FBA7EC8C567225A16C
4CD76EB085CA9444AAAE42D0F64F655D73A507C675C287908E15D00DFBAAD8E9
9BA000940F79F1D5B1A01C9D57853580E6F180343DA29EB6D493173168630784
2337CD1F9695491BBBDF271B5345C44E19B5555A7270F0032E465BABEDC57CCC
60DA6B88BE7B4423BE87991F755B2DBA4BD765F7A4F966BDDBC0507DA0EBE2EB
78B30DFD071C1E0DB93C1EE96A8C4EA4856632BB2073CC036BA1DC8D789B8622
6E38B0DB3AFD1891637DE4A450C722AF53D42EECD5FC0D9343070BC392C1F45F
1C921EC9198BC03CE04A0F0B2113C7B19A19D7E1DF75422353ED2E01FF4C3FF4
C098F6FCA427D2A453620FDA06A9F41B8DAA9D3347B158139B54C5D7EC59DA32
FC0B90C4EA4035D6720DAC61A652F2DB0AEC9E27806663DFEA873AC7B461E0FB
63D7C1CE62B8FF346471992481146304DD03CD20842B335D7FA068735311F966
09901D173272E4B12630C2651431B3554ACC5D07ACEA1E0F844989AA8E895784
B9D744247FC4DD5575318E1A50D5C5967E21AB938CBA6D95C14BEFADB9037FF4
E50E5E96D4A4D70547C069957DE29DD19532FBA498149099FA6538AF73AB4B49
D7CFAB66AC05B12095D7F1298F8053684E096C2A7F0E8784846A929A2ECC9CD1
51557CD0E2104B7D9F45E94CE0A3DB78E8BEE86BEC0C9B755750CE125586B401
61092DB8C5BFD39EF98F57FD30FD1357949203B0DED6D68C89247D997C8C95A5
0D1D6D582C7A94DAFA475DBF44E16C267512E5FC0B16726FBD945DDA55450513
25CE1D16865F3C7ACFF6ED4EA6DFDA17340E96AC364D062ADA05D662F7C17BCB
9130CF7D71980C9059C0BBDEE5BCE6D4AF2E318F2058F294D236578CFFBE68A6
3955EAEF9D3EE785E863E59BFA94A109026D51F307DBF372D2A0EC76D9F6DDAD
37B351D51DEA73E6566CDF4F5EDC4C7A901957507D4B848AFF203EC104AB6EF9
9A352E181B2BA61BF7FF7AA0BBC9A98DE40C3424FF349C117627F140869FA22A
0DC3112E7802B1ED736ACEAD3B3E14C17E0FCC4BD30A288476F5F3106A974791
6F90C7CCEB0A9B5E98CA5A520D17833409A9B7D7BE57D72CBD620B19F8E058F1
D64BC68A322971F6A0B8C2FA887BFD5F3B2C23FCEA71EF3D6250670C41BEB73D
DEB6099C156F65478D26C2CF07E3F6BB01F0C56FCC494F773EA3CEDD717B7AB5
ABC9ECA726D048C4DFAF41B77E0C77F98BF02C1CFA6831E4126C47C748125F1C
CF350E3930ADAE5249B3D5CAE2194C3D9F86CE048F4C870A446EB3E06BFDEF95
D17AECAE760CA66535CE0BD22F0A312EFECCADDC8A013BEBF5823253AD8ABE6C
65104B2BC60DCD97EE7D38869D666EC3E08BBC3CA66DA2890FB3B6009E065B8E
2B2C8E7CE69BBF742D4E2DD52B5848B220B04AABD14C5092F60F1C310A3CC73B
CCC0F2F81D7ACBBAA1B71056D018CA5CDFE8B4D98F567012568991AFC0C3D74B
014F39C5E151F336DDD82721E8C240B2D22FFCD960B94C55460A557DB6EFD4C1
F2EDC7FF839307FEDFFEC8F435767AC00997A6BBBA35CCD1C14AE308A9DE8E06
E047C76391ED93D9810BFB4E1C37841C114A889F2AB95CBC4EE87640886D9552
A0FE30DA2F6B458208BEFDD79BD8C4C6E6394AE72B8945DDC3ACBFA7059E492D
CA4AA0C2B50FAFDEE715E865DA6DB5BECCE84F57DEB5F09D18EC72724D2DBC00
F283715E40701260B49A9C1002E4C30C6F6DE576B7202B975B4F6EA50D70DC0A
706FFEB532CC4F900F7E829A5904D0009EFF203361CFCB7603FBDE4B851BA376
90C1E3B89AD4E98F254A21971A17B24DF4C12C78DFA328173CB7D572601A6BF4
6D57B576505253F14C36D50948561FF5E7C335E698A6FE86977994BDC068A69B
FC7A738B75221CD09F007ADEA7201CDC4294207F66F8BCC18F2DABFE74E85819
1788E0CAF5F916EBA04F5DFD867ECDCEA77395435307E815E95AEC89927DD97C
F502E051A1FBF641FCC345DB288C6C3B3C1AB46BFCDDA190E9E93C8DF81A7F80
C773C3EC8920EFE16FE5C7A72657A80F1CFB288F049F605961485103BF3C2DD3
96E682EB072BFE1C0878BD96F5569529861FAEFDC91E823E0A0EA92E7F1118BF
0126DFE775C4064934FB530B35AD9155EF03D074AB5405503F611F6CF4B3081A
4B4718B84F74CB7B5F8460E02D5349E1153A25EBEAC76FEC601CF4D10F65DAE3
EDBC717F758B40E87EFB947F6EF31DCC61CDDFC39A2771832EB5E86E8E20702E
2BBE02E0FDD97AA289F96062D4883171EB77B4E6CB8006740B0AB54A7784D3ED
D40001AC18E978D64A49A5B1B43A8A1E463235B276E342F244342CA7187A8197
CAFF1544C76C128632A537E9C8716178D0A949D0A85D7764EBB31166A29307F6
343DCA5AE987628ADA03B7F86166C6E95B3D63FF2D022DAFAF5278CC7CD24C64
ADE6A55284AD768E0D17EA1EF887E36190EFD997A237B36F021C5282E0A13C1F
59BB1FFE37D7D03026506C2B23B3CA0F1790A1443758736486554682BE9CE9DB
A2E3ECB7B594325B031727763974370ECF0564AB0437DCEF7BFCC8D2A1231388
F84FD1B59F6B4636102D47AB90B92FA5E065C7ABE59662497B7E1272ABFAE792
87B9544CBDB0C9E6D414111AFD2F06EE047F1A39208A65AEF9D1AF88BF14CB44
C210BF44141C72291EBB1610B57E6B882EFEDDC7E7567F116654EF98052AFA60
874E0686A2193A1BF363855450A17C8992099875EB2CE6FFD6C5144A85A9C6F9
FD6818A4915EAF14592EFEDEECD05E81F8E9C247CABF7B388D925ED40B709076
D394FE6C7308A9661D5B258702019FE558190B2C11FA9812B97A2018B77E7B7E
75DCDC8A7A2D152C7EA4EDD7CCD1A973BF297F6CD0CBE0DA30276D3B14F65267
19EE22EADE40E7595551D1590DACA602D75CD251701B242F7EC9AB32097EC24D
31AAF475E2198EA563E717761D01EFAB45F6927C7F41D2BB92C57956D4647D2D
624DEB9B6AA52F630E198AB9F47010745CAAE528A45518262CD2F43A07BCC63F
B0AEDDFB9AD52B22BDB6CF8A0DA475B626AFA046D9996083B6E463B58187EB14
8AF69215A71DB556B814467541BDDDABB4DA5C9565A5FC7EDC3D953942040340
9EFA81F6493131E3B542EA53C499CBE21843BBCC7A51B7B4B66C47A4205BEF37
C9A723C97E1E7DB9D79E6624BC75D38567245A095F8C91294627FFAFF0399CCE
B87EFDBD0C895873C19FCFAB9ABFE3B44D21730DBAD665A09ED4B31251C60FDC
2D95B554E10166E063832CE329E6F99F1AEA71D636FB538ABCB63688B4D69C3A
91607ED68756A66874ADAFA6963FDEB8D1A2C9BF7CFAF3F6C87DC39865A7222B
CA351A5EC76576A65D53650228C5A1936CF4518AC40027D89A07A5B9E4C87FE8
878535BCD86B8FF56A2A8DB58351615E25EC792BFC8F1150BFA1A884F35124AA
F53671ED0D84110670483EFE13BCB89E89FF29B5C1C3FB4B25956D8E337BA0F0
6DEE2E80E8F2168C1F03D6C7BD60AA55CF4475D4C58B263DA152F71DC4B9CCBB
A8AC0BAF795333376EB4C186DD1A8504330449B0DABBAF9D5C83C94E701922AA
CC8882547AC619B7153904C98B3750415CA80E8590F52DE971DAB656E0A43ACF
CB325F73E64910D1C29D15ACEDC458049F7B6380597E2485ED7632008080C78C
427E8E051B99E95D205AD9D59A3887A80BFF75CBCD814C6B5C42785DD8FDE082
F79CD273363A5E89F1F6C668696A2F1286122C63913DE4A196B71C9D59873D44
B459B287CAB41E7F6950869DD41575FA1D9D93B66BAE204ED52DCB11C7166BBF
91AE735D53DB8A537CB190E26707CDE0E1B29B2BB9C4F4716519A234C870159B
5621D374878E63B56C35023AFCEB53977465A663314391267AFF415923F7250C
5BF3BE382D95FF4C5E3F66DA34A1D231C875BD3D30BD7F7634939B30941AF85C
B8D51E96EF23A385AF1114173E61A36005E191261473E73A197440942994C486
62C0A8E0A51ABF7D6F7F959997BFF01FB5C81D7206C438D8A4D6F7743A0982AB
C78BCAE42E376A4BF18143CB463B43B8D35C1AF04CDE9E61B3592F325691F2D2
F42F6F1D7FAAE03EA53CB373EFF07D174E63681C9719E498C62A7FF00B01DF37
77A3842760954D2CE0CE474B3A5826DE04B5E80FBDF211BA28B3D3837EF58212
5213E7FFFE5B26A1F268AC3846B8D41FF4C8EDA1464E4B6822B0EA9B636F53F7
1DB758797F6ACD83D472CAAE764842F3B4E65999F261955E452308AB4F96BFAA
2C8A8C89D44EAEA1A45BB6EC900FE604F565CD8674717E87E6481701FD1E1B87
05C512C016B5F7A6E70A0088440F1D6E0E97B5AAA8A46AB2CC7F0965E0A7AF12
58A15ED5674C3AAAC4CAA8344432F60E76BAA8B05BAD3FEADBE50D2C43F9EB99
60CE79D16F58717EDBC760DE72B50F3E8A04A6D73FD8F2419CA77C367C034D97
3F65E63E37274D9BEB6C47FC02E53E6410EB7A2496AC6A1A97F96375A3F54700
6A7EEF960736D8D8941B0B05A5FBCE0C07E55FE095066BC00D350F3EFF922FE8
3AABF4A609F4D6006B0309EF09261FBD06983E300EE9A5BF4E928004BD90C2FC
DFB6DD895376453F6E957DABD5226932DB9AF7A47535597FB4C3129661D5D170
37A6CB3760C57FA0ACE7B900150A737462A368BA900F61D56A1A90DB1B1A5624
BF0D2EA022069C3B30A6B8BA56C65FAA99BBA406803CB3EAFE04F5654CFD8447
2D6CD2F3D0E22E018CF128F0CE2273BDAAA73476CC26A32F37E719C0931FB872
A5E60EF9CB853EDF0D22CDBB0F12E75F746021779CA07788F522BD9618E23C7F
D95CDB02DC661ACA0D9FA5DA0CE4A40B6575ECD3E4BB1C50447C558FD565E8C7
8B0395D70C9074F56DBFC2992CBBF2D3BE43FC7E8CE14C9FF7C5B83C2CEE2DC1
118746EEA119D9804673924FC20C138E641F0E031269F715A374FA5FF726176B
4F6A89D6116C951D33DA27C4066734F9D85D052DC85A50080668D9F648ACE56F
31BE567BC4A21133E594461685A92D372D4ED3F9DB786D7E72422E9163D796AD
65EEE0ECC9ECDC61FB079040BB113314964E5D783537D2B57CEFE23ABACEC756
F5D1EA5DA25B979D6BEC3691240B7BE921ADB832C9E94C3F93272458E9E678BF
7806C7D90F8C2414CA1669749E13E6748E4E4E1D59B05C81BE2AD99D3ED86668
487ED31BD3A283EFB3773609C70F69CB94D169B85A32C406E6238C39A0A6FA4D
878810964FF5E53F25285B542F3130B6AC84AFB50BD974CFA67F94EC19C3EC32
AA714E650AF284926FF0215C7A2BF30C27280DB9C56C4F649456956B78527535
D14B01FE7AF62D56594BD31845DD8EF67D1D889702BE7E234D7EE7AF00BC8DA2
4B5DBA872B606D8DEC5A916A3E0055EBA91893597A866F289B75B6C623DDC0E2
1D28931BAC42D9E660AEFE482ECBE92C7CA2079B1EEE771CBB5CFB3C815F4EF4
4DD5BAF85A8C46162D1D7A306F00F891BA1BA0D16FF764CAD09F99A6F73C71DC
1C0D12D9D08F556DF0D1A7CE868413010CC793BBA4E37F67D4C5BA50AD842C43
F9E09915AA76E99B648B685B409A70D2EF0CB096194B61B7AF92D7062877503E
5B9F029FE0A12C0D6BB87B2186B6ABDD86F04C4B5B37F3CC150D16C34F261A38
68D4250A18470A42218EBDF7B90241CFD4038CC0AD02381732BEB2B9587D6B50
E6F7B4E9DAD17BAF9D7B114110F3599D8E6CB9E93D141668D361EB443D563CC3
CAA2716A7278DA0E93A283E9D33ACC84F0E492C73E47EBC612072E87FBEF1A4E
F1FE73D48B3ED3EE360F9379DA096E1F56D87595343D1C24BC1455EEF8582199
7A3DF2205019EAF0494ABAC8B0D0FF9FF6BEB14698CB40BBE7141CCE4BD29366
A97A5D740CCA11DF380F97330D05AC2BE886D9D90227506923ADC66BF831DB6A
542764228D3A164A0A1FAEC2997DB02A3B7CA3B5D2C0A2BF9C5AA9B9E08A9ECD
62AB1FDC982ED7D8A79E6435D36CACDD2AB665537FEBACD5BC7C774D53CC63B5
7F7C9DBA111F1A03E44B2FE08BCBE67CB618261D2629A0BF31DDB6A3249F1C30
A634A48F728967D642A8774467AFCDCCC7196105243EDF44B4052D2AD188339A
7CFC900B41FB02F13722D4D754B382C82EEEDF182735B36842AE49F6F875DFB2
AAE41F05B4B3106160EEDA77819CC32E81AE692C5AE0C53DB380ABB86262DF3A
602F5EE639C1D493EC4F3521BCC425AC9484A56BC9C2BDDF196C16595542D8F3
2E962D41213E6B67A09A376556A189F6D7F922B8596693FDD519864792B64839
C6DB89474563B87923D523CFF87D0A87D9C2A2B7BAFD774550DB8E763943AC6B
7E96B5AD46DB008CFEFC57F8F1935DE246C53A274F9D51251AA043D7D652B330
C7B9DD7682461E0B5960997AB5022480252D5611A196501C43DD8BCA175C6B40
3D486712D6978C27F2801FB8B7BAB9F00719C4CC6D4207E4C6ECDE2866307BD6
A811998D91903A8B55340E2A24629A3BB1A0D986D709320931F57E89BB2EFC1F
D3A889B724193FCE3DBEF87F5605730121E35F74F8FE7D14B7B44BBE5060097F
5A4FBCDC268A1C8E873523346BD5A991D00BAEE2F2A82E2D45D45D7EF56EBEF1
CEA0B66A6581C8638D5F4D4A1CE333DEF4AD2A87C2BC9484005A11A8D4F968E9
5FDE6C8C6BA0967349AEB76731EE262D684627DC8F839EECED8A0313F15957BB
4241E8C2293947D17AC2338EAA75CC72516F8AF32060BCD025878AC44DB91F33
D815AC9DC3F4429791FF0DEBA300B5D5882F227F5EFEADD582C932F59D55EC9E
CFDD7149704FB5D3154D1B4B68909D2EE97723CE00AC8397F341825ABD849980
EBBAF61719BC50DFACBBC2E18BBF9C76C921024B55FC6D5DB5BCCCF77226C214
AB7E43CAEED38C8B1BBC8666F4AB0353218B1EF2EF6FA091C484AB125ADED1FD
166E096F4B23E203839C340D8EFA2FAD916E268A701EE5404CF3ADD7D79A33AF
D79FA7222BBF2EFCBBD30636E1F31B355F9617AFD58A546228A24DB66F3FA5F7
EBD0A7DEDA931A3F3AB2A52ADDF6E8276618D45CC2A95E63CA3CD3EA4EA68C83
BDC1A51910E8246EC37BD89C5CF33F50F0BAF05732C17FFB56DB5DCEEDBABF4A
F412DA745900221C7BAC6DB4025057683F579F7422B53CCE01B56A7B0FC859F6
A13415FF25D97AFF40F7028F75BA990750461013B1D19A1D63FD3E991F17C970
403230C4E7527EF177CB25E684AE7DD09D090EBB9F13E737FEF91B42E09200D9
5D57CD747F029DE974CD0FC325EC1CFDEF3AE91E163A19846B3BCE5D3168202F
0EEC9B4A0988E4AAE449964323B79BADE117A3CE6A08504185E66A3A161EED1F
99B8496A9FCFAC13492DFC5B53654DE99E0AC88121A279AF959FC3BF0ED24958
7947DF9988E89E0A16BF638A41A0157109DA020A5F1440462F6B34B5457E6E48
141D58E82D248A206E80EDC58B40FC4B49E4F7DFCBEA9150C9149C13DA7E57E3
A9D00CFC709E60BB4E038223B7A6E419ABFC5589937753F78C64D5AB3AD89740
749BF8CD563179BDABA0348C46BFE7FBCE8EABFF408D5DB3AE15BF6B53A9FA80
CF7323CBD3C4F61612DF8E6B72A5B8C1F72A3001FCD5BAAE8A4A418A202029B2
2F885988C306058ED73421F9D738DBD7BB8299AC385340EAA8125921E0646C0C
76B875FF4244C22D8BA922836FAA01D50CBB9B12B543AF2A86A99F4D5573B8B7
15F5D846F2220FBF861CC7166BBF91AE735D522605EC3117E38FB2A662D90BAA
6234DA26D0C1005ABCF287ED73AE2039F97ACEFB9E01447A91BFAE343170B942
0CEF650F0038275688B9FA5A894C303738994C150996084C5FFE6777D6E374B4
0FC2ADE40888C5DC808B63E6ED307B9E51498265119F9D2F3F9ADFCF3F625B87
37630F265AA60FD4998773A095A03EC1FDBE3250BCD22AF7F0100D708C06A34D
2E1D514FCB4FB9A4D6BDB195AC909B14DE0E4409134DC478749FF92F08631672
64EFAD08999964844483F0E0C6017580365599DD3021C36FDF691528DA357F0E
30D9AB91D1F73B6AE9F49AF2051EB899745A493FFFC27F6AA52F79225868783A
50546B12D0161F47D178DDBAF6E0971324F72468AA5AD6D13FFC99CD7379FAC7
524EE55393019EEE61EF4B3796F6F20F51EC5E7DB8D0273C53F08C11B87F7F34
DF5BD6232B0B71DBF7941BF214B5B5AC3E4D781DE2C5A1D799C37EB492558D9D
52D5C89E7C8F6DB45E3EC8F2E818B2525AB9B770DFAFFF0D1623C49F3A52C4ED
A18B7B6BE5C494D3BF1C672EC54FCF9A8273B7989D201B161E870432822FDE4B
DE10AC96F667A656AE31A1B152FCAD7FAF84983CEFE2AD330777D907055650B8
9F5EA54F9A330B972958346B37883FC9107AD8C633ECBC2EC7B55F467F12BB61
BEE918EC661475905983E84F59B8F57165B37F41C142A0CDBC4DCCA9D198362C
A8A80485F21228401E0FB1BF6DA5CB22AEFBF4978B5A3FB15D572551E6F6D1CB
6E43FECD72CEB0DA2442304FF353060D4326034A5CD9EC8F723967D4166BFDA1
2BC262DE9CDFC614D7DC1BC5691099DEEB17A9C1AC42B75BFC767EECE17C6556
0A0EE4086B07C3A484DAD8F20A89703DE9CA97EF19DA6FE918E70ED9DEDDD3E0
EA1BC88E523099196F039EB567BFB06BB98290C6B72AC7033AD78319D0838FDF
A909D8BD1E3C57DD39375F3A7C6D6CD68EFF4E4D4CC00A0AA17A213407C05115
AECA8C66082082F59C3DE71163335BECDDB32ED54C2D0F009098A4B6E0567AE9
A9C245F841E744B6768975F7142EB33AE0F8CB8DBC2D1286DF1345899DBF8E53
CF41D4C0AF36266EDDB105695B2E4947877EB1F3A0FADC7D21AC8F8B1CD8B2BE
97272017FC8176FB09880262A457945BE9186686583FA8B733579DE8AAE808C8
92199615626DA73FCC4F5A87276B6894D5CFCB7E8EA543EA65D8EAC571147637
3596FD03E57B1CA8E39FA995C1BD24184CCB17539CAF6DB91BF6FA48E94D48C1
EC30A4DC0C43B1D78411D194A831BDA3ED9E2F2B40A297D9484A5DCC31CD5366
FDA28662B8B1E5B0D69E77228C3972EA723EB1AD965E8A5A3ECEEBF44790D57F
FB857764AE9E13E937074345AC93636B71D9DDB8E53A0F9813258D547EC9CB92
5A84ABECFC00B4212CDF4E88876C2DD4E6E824F20A0A721766F9D9A6769FF80B
400B1EDBFCAC616A6FC57EB28F3AE398CCFCD35FCF5AE53F2661518DACA1C3D6
BD784FBCAD2F5C3385BCEFB2B89FFAFFC5B4D7C699DC5543674EA5327A63F01E
D14BB1ED9A0BAF084C70439A9EB4D699114A950D536C1C44746579957E65577C
956BE214AC88BF14CB44C210BF44141C72291EBB107F5FAD8846A82AF91F4492
3F25BAC6773C8AD0A81075F8891DBCD2AE271493A54F1EFAACCC687DB7121310
F3E90FFBB38725EE7FF097F769C017F16598B835A0B93B1017456871FFD26EDA
54268F065ECEC16354EDF507DCCB7EA1E5D5E4B896D55B67837FE1B0D9EDEC97
11F4EEAF74DFD4500F7D6E49783E9FC958D3954BB4737612ED91810B317A9968
78BA057984BCF056A9D38B3AEFB10D394F09F57F6513B74F9F6C1F90E5FA9079
FAA3E23617FAEDA49DF107A7F4743E37FF5A790ED6B92B62F1651928E2F51667
A11F7CD5CF8FD053E67223B64D740B7B55E08CA56FE46F120B82CDCB74A9E5E2
32F73D27215F9BDA64DF08737F41AD8DE10D42B7A8910606700D1AB8E04DA0F6
E0850C73647C187BFD9B5C7AD8A7ED6531C13B786BCD0E6889E75E678ED39997
0D5F6CB7FCE827E8B6C453F843B10EC212D258C3CAD386AF355013374B68132A
30576D4DBD04EAC244CAD6FCCD4C20DF80DB1BF5E73B33A29B7B447820B08DFD
E1988CE70188B8C82CC9A471A5504E98DDF4DB835C0C089149B137D1639B616A
81B2E18349C55F794B95622CF9808CB6FBABD255CF3EFD024DB4C40E929960B5
F0AD71B23330544A54A56E887E7148911BF9C48FBDA96A501D9F0E4BBD82EE0F
EE77A69FE220C5C7838A41D37EDCD4D3553B1064F0916BDD424F82B5E00FDCE5
05FAC094D132674B27AC73F2027D99026A671F83624D4D29B082C90DB7BA82DA
620B2E22056DCEDF1081E83957FE43600503716CA631EE7A4E09E690D33ED76B
14F692FB22F192D43AB9092B0CBD2223900A5A4D8EA5A1169936522382A5BC60
7774408CD94DB0AA8DD8DA1FAEBC9263DBB3C52AC5CCE802732D4B23AD08E64C
D0EA508DB893617833CA71A9F6F8F7A8AFA937F21377AD5F114991E6FE5E557F
D5C4AC1DCFBED577BEC9CAF1C6DB6736E8991338E5CBAF26EEE764D9AF9DD776
179C1F610A95C6BAF7DACAD991904FB174E3C63454AFB214A8944B2299D75F55
E0477B7D58C0256872F31FF228D50C61A38FD38C134DE8C7E1C9BBC9925B98CC
9178F1C644D40CE07A4E70B37A6BCF7B136B67E2F9CBBF7CBBE4CCACDC779F68
F2A2183EAAD8ADA392B820EFA34754C4EB6952EAB0E1C9F73288953200318F45
CBE1BB1A6E0CCF1CD79182D3B235B4511E6B5E74E502EA63AC05DEF56481C039
5E893486EEFFD0A5D3F46528F79199CC91C50174278ABD5913AE29CDAEB6F503
69E94AAF04717201105E9FB2AC09189CC09B058496D28D7798F45A7EB90B15B7
D55728B7947E0DBE63828E83E762B9E34717FCF891F44253FE7CF4A21CABEA07
99E9F29C60F4B6F17E2E2ECAEA09D467AD1393471C30E10FFBBDC152E78B29FA
999EC62E961655880279A99123567768FBED5B9D9246095C98E9BB22ABFB89AA
FEC3E6EC029800BF6D9886FF6A81EAFFD00AD3E5253F745FBE3344617EF4A8EE
F983EF3324975113BD646486E4E0A6FC3A0C6CD24600D6CFD67F9DA4FF145944
EEC16AD24C4603D1BA3E926671E31842C759229D71BCA7001F0081ECEBFD26A7
58571D66B1FE20EE06191FCB4830F5E54B3D9715132C248C514399157FA64F60
8F89B621B760D312F7B9430EE44A7C8500D8E751C3595BA821948E9E7B0A0D96
41879C1A8018FD1435F1379AA301206D6749E03ACABFD0444FB133A90B05B1C8
89BE4357173A0E1AA1E08F03711D061E81AE977F8A62204070CACD84ACF5AA25
29D1110B5DCB97BFE7098F359B1E9EF40637290DE9D4A9693829C82DFDC7024C
D7F333C8DF3D70E574185B2843624BC1BAFA19E9CCB826EC035EFEB31C0E8D76
2137D8BD157A51CF3A3FA7215F4364C47DA652C8A27A96351DC61E31ADB6B2C6
F9DD11493829A9EF5B253D4774FC3EE1B5978EFF6E150664DB340F5A0D2B9A20
48A59EE8B0A8C5B031F4777C849849A934FC179AA00D1715165FF836AE94693D
30F32C6990E774620249B28A462C04D13CD1A53C402EF3BF0C9F576ED4B32C84
6541E5275E40B76260A1965FF694B51B4D5457A14DE6CC0F00A7AF86B0591AE8
8A1D858C2CC7612B2A4B4E631FE2CA63BF70570E973DBC16FC21B6E4513B5C0B
FAA8E4658A5DEE443670CBC9E82CA7482EDBBD60FC441A1FE6854556CAAFB942
4FCB1A1E8CC743D922505AF60B42320AB25C8D70E51B2322EED3BF20028C0019
ECC8CAA5E074585831046B6D6CE08EBBC0C484315EE485A8714EB6009A9C06DF
A79FB0F70541849EACF6F6F9C003F076B815A4C96E51C4973FC246F9916B8B8B
36AF75465E49BB83A25888D04DC69B3AA4559CAAEC897A3F9A9263FB16542E8A
57EC2A5A533EBECC5B1A23ACBE1456B55DF91E9EF493E04C8BE25352BDC0BEE8
5933954CBD4E9EC2BF8FF2E485356DF73333AD19724818FBFF57413DA00BBB98
113EC3C0717A2970AAA80B650B3E990D56E9AA326C57BC115FBC518031C83CB5
D0A73CCC6B41B37AB4AAD96DD29966EBF1CC6BC0C31F1D26ECD225625D9B05D3
79DCA704A31DBA650F0EF12DE96C1E631E279BEA515541839EA3F01D2BCD787D
55953BD05E8044D84BF35356B36218B7094206B211B0FDB786B83C2A954F4DEF
76B21E7C74FED48D1BFEC80D8FF5B9D19ADE0DDF8A5485112339F21B98C07F9A
A94D024EA33226111804BEEF7C0CF59D688D123FD0029E97885BD68085A9BF9E
14D694C38D6E89E4104FDCCB7FB5CB7E989FB3A8B8B6E916E15B526467721EC9
0EEDC9C153EEE51117189ACFC6A657C2EADEBEDE7F51772EA3ABCB6D3BCED34E
C348D7790A37C975F5D8C58ADE281FE8DD765A0A8592C49F5A0A2A6AC4180C9E
516A0B2BAD44D691DB244FF79899A8F7328B235677184FE0F3DE5A23BEF70336
7B06445B9D106F217055EC6D3FBCD5973A1ACD1A6432C24D61154A00C2DD8DCD
98CC5B4F3FAF1C0AEB452BFC5BDDB89521D26D9D9B9CD3552BAB0D47D3BCE4AA
997EF5CA15BBC277F66A0B5F6DE5D36954EA0047B978F9847783CECBD41B59FC
D0C4EA6D44C42F04FDAC416353595960190EDA1187BEB7D35B877E57882FFCC5
95DEF48125AE6A401E5A85AC7D3EE36E14FF91A16322965120FBC9E43CAFD683
8BFB7B79FDC83F65B0E6BF7A62FB6C2F72A7EBB5E65B3B541E9AA7CD1C3A4110
B17E7A2D7ECD09EBEE7902652E8975B480115285E2A8253170334C55E9360A4A
A5DDB3E5E1F74DB11D9F74D3533EF80A0AE4ABD1E3E641DA511E3EEFD5A5A958
962F557B4245915154408541F854AA6132009C370CA574A54A50468C2CDFDD7E
8D76FDFF92D6D5D0B8C53DE5AA5078C8E8A6DE7D8DB6D70BCC4E69033F71F9C9
86B219B1F0C24C94E84AA6F21DB548AFBE880B8E044E4662928B06E7C0DB438D
DC0449B208E7B76A62F1E8AD53B931F9F160865AEF3B56D274750C72FDD7ED81
90A94405CA84FFB661D92AC8CF322A06AEDAD7B686C441EE27328DB86B784E9A
01592641DBC28887A387A599D44ECA5CB7AE7FB6E3FEB63A05F9BC04F739DD70
5F0933DFB4D7C75C15C74CD968613589C241D648EF8019040727FAB61A33FCCA
8DCF865F52C57528A5B66975B770ADDDB76E9CE4E65C6C2E7C81AD5279D4C414
D751106FA349BC0BCA3E40FF22E495086F99086BA2DB80F56C0D9B74918082AD
45111EE91BAEBEDD15FB65955F91EC0890B975499A088196A877CFF424F99584
BFB274C4D2249F699C1E23917BCCB330A619CAD31DECBB7681BCC13B04477DDD
FB220D402F3CAFC7DD736BB0C487962473039E08D6905AC8F4E8F100FB3AE710
77E1093C006C23B5612ADEBEB0EC0CFD66DDCFCDBD9E1CE4B7090E0AECB6E146
2BAE6DA9D4E1B570D20BB8222BC7DDF3B03A292A4FCF854758FC7350146102F5
391EE404A1F84FDCA5ECE5F08954A0B378B2CF5D102119BDB9C28DD172C86623
D625A1EAEC8A4AF45E85029AF17FD2A9B002A7484507A387F0A013FECCF79AF4
5408DBB4941370B9CE7E88DDDA40AD9C0ED36BE45455AB579AE528720E5C8231
DD6D7ED8FA5D2C953BD8BDC13A1BF6A0D579142B6DF94E62408E24953967ACAC
02AD34D8CF8AB28A9F3C4FB30367D4B8185FCB509915219F99BDE4CD2E6C4EB3
58E28ABE6E9900F462D95AA0522994A17045536AD329CC364C941DDE659D3C04
1D8FCEE72EC805ABF6F6E30A35CDF8474B72645EDCD59AA397B25011937674F1
E7A1F7DE9DEE745D4D6FF70408A0E246FE4258B0F0974DB8F6F014EF2B746B9B
B7C2DC3D8C7385F80E163B9463CCCA6283AF59375E5857479642EF670263A76E
5B77BBAC60004B53059D13B81C3904DF76202DE88FB57FAC732C46ACE83EA760
3DF3431ED0518A2EAE35E2C8F98F379A75CDE168A08601C16F9164656C958687
556FC7BF4AF777C5B49F6CD7B3BE6078D4EB107266B7A358762B134595DD5EAE
D9CDC8CBF8549A3C040018F6B7B45E7979ED009324B8F67729C7C02284513CFC
918E6880A992938061F36FCA3A266986C8D5E2480661F22065EEDFAF486F58FE
F25284B5B5618A6762967822C6F795B35C8E181F7DEE6553BA479BEB282BF229
9B7F7444B8226655D0A65C8492B7035A98E69D3A98635C2D72E6A31CDA3F9220
8C05592A29070D3B1B7AB27E63C4C134F8DEE8FA7C3227B65A9273740AB5DC86
533C0E258275026B6AA784F6699361D3714D8753A997233D25E6050E25D0DC61
01AAA107292666FE97F099370007F19FC9A2805325F9327A45F173ACBFCF4475
A0BCCC17527145D62DD8B42067476221C33F2C60B503C129D7C6184299AF1C22
4D700B89E1A7932475FA8421F24065F14C1F4E4C8278299B45C0CB20075366D9
D153D17BA10933CDDE194E1A495238284922C4B89CE95D6947E3C28058D2FE55
014B0BF5A431262B8696E240C8D9FF92098D08361D93D41C6CD6650033B017A7
BBD6571325B3904CDE1079D05B0E7C7BDB432343F0DDFC433D1F9AECDCE80234
181D07BB156DE7712A41673F44DA2E1E7D41DEBED19C9AFBAD362573965B49F0
F6D5BB19657EB68AB0A04B334CA5F336B3BAC97AFC9599AA0F452D028F4FCCB8
3680A6619960C0A619B8A60AEE8382D921A46D8180CA997A9F85A66612CF61FB
CCA5D73C7E31E979FE162E3DC70D65E776D8633BD1F7D69E3F43E2D9B886A320
653E4D5E44E408F8C30AA88579FA2FFB474854E246AF914CE13D985929896919
23CE68AA4112E9971BB9DC4615CA4BFD893A5B65D0560AD2AA302ED892D5FBDE
38D573902A234405A36C9C9C4510405F5B58BAB905EB67476C7BA1824A17C2FB
ABADA474EF3375D94EA420B34D8AE6823CCE5FCFD2D3D604897840E94E1DA9B6
B19795C2F166EE69F461EE2D685D8C255C650D54A72702F42E347F22D842D5CD
E501AEBE795E38C465FD4AD1B8E4EA21EEDE0868B8BD770FEDFF335423487384
7621AFA14A77BE22E1CA57017B6C483557637F323B269C8239B68788CD6EBDB2
FC3C3DB0132A295F49FE4333CA08BD3D3755B2D411B5AEB313F302A0F6486BAC
0F51BA89FB6CA04496B874F6AA8776A918B7534A580E1E47521974E3B0640C18
FF96CFF0C7EB9B46B8970DE62181B93B21A27E2937790590E110A297C9D1585A
C1449677F88104CAC3B78E7BF7B01FDB81822776C68D073F484FDA482B21F981
DB3C2B3FAC5581AE371F2C905193D739608D6C26BFF0BC4F261C1E837A9CEE31
4F404FCB0AE47B4EC81FA7853CBA4A7DA5DF20A844920166606FA10CB83E2B3A
AE03D9BA8301AA84DF1C2724E7B707A6F0E431B8A5006362F7EBF3D675466383
E525E33CCF51048F6942AFC6BE8221053E3681F999D4B83DCC23D139009D1287
6734023DFB7DF76D5A03F40FA24928E3CD8A765D4EA1EBF433355268A236A795
041DB19701027BB1FCDB7A1942B0DDA0D0C5FC5B9AEE3D3784ACD46CC983C8D9
B1B979261B01FC029550CEFC665D79AA32670DDC23E47967B9D5F283C07A142E
E9AE9D7765E527799DCE635C176D911F5CC729C083C8849519FC2C16FDA1D3D5
2B7F8F83149C083738961EB654C26A6A37A654AD2327F9BA8299D7F22BCD39C9
10B431C2D1AF03DA116C951D33DA27C401673DCBF2CF9B24F12BFB5ACF759FC3
6E69B32230D2A3B576E32FE4D1DDDF485DBAB9896AE4BEC89701F553BF895088
125A94328781509A5C4F82FD59D5ABF260FA2ECEAA96C9CA41C99F4FE1548EFD
E62A0A8E5835C64EBBEC1F120DBFDAB6A1D0627C37BC77364B4A83C339368957
C54AFC2F23A44E6455B5F36768A8ADA45A6F12B9B021DA418CE531051F6ECFC7
20EDD9896EFEB11E9012958C34CDA8483943FEFD6714894AE192159DF7FB679A
9EE6C35445AD88585BC6B25D09248EC8A82127D2665254A2E7664FD9725A17F6
3059CD43D1E263F24E5F8E1CA0030390D1EE73E8C6B36ED53524795499203C9F
96DB097E05A5702487AB687A7E816359A5E0D72E8D36CF94B23514458F9A7EC0
7EB5F49DF8CF2E84058A6B27BF3542761FE0880536E83FC0FE4112BE98BF1F33
12B4ABDCB2CF777595158CBABDB645541FD6C2925E38CBE6CCA897724AE8F908
EF485539C3A83E792566996593C9C96C42A905ED43CF572883143135570EBBC4
131B9CC9CF26A4C6E034E26D6BBD97BDE1C52E7268652BBD3CF858E539037C18
E9052A1A75C73BADD9AFFE8CEA10F0641AAE9B0F35673D34FFEE27F8DCB107F5
D1F7562F7991F7FEB5E602BC71CFB91E4FDCA7DA06F9953D8EA3833BE27127E1
C489198821227C1ACA748260F2479000AD48A72EFA7FD1AC7044A40106216D58
D859C51EE7A31E4510F5196DF93DC22D53B21CC59DC04C23BB304296F2237620
EFA9C4A6429BFC785FC40D8BD2E5282EEACD05B4CB9AAA9973B965EF37A08818
CCAAE9AF3B3DF31340441C2053D268BA16A93E77D524EB62F2CAB55236618FBF
DD32F5E92182D8DE7ED013E4939E3BB468D24CB8895E1BAAEAADEF2D17CB5A46
F958010DFC04234AD4E07BECA1FE4ACF98A0F308C2812E5ACE41C30BB402DA4D
3F533E28430AB3CC4CC50E3C4BEAA28D532956131C0FBB29B3F85E1D477A2FE6
A14EA835D8894AFBD85E1FE49EA7F8B2B4A2BF51CBB60B84A0F916DEC70BEA9E
7E180CFAD7ECDB392A3EAD8EDE6FF59830B5A3A2D44D9F471734A4E64CB297E3
AA3E9EF0979BDED6E8EE5B186925971163B3546A82B032C45F939599A8E3F6D0
A6BA75769A716AF3E230E14E6B3AE449FC9BA3FCF1EAAEF8183CA767A8D576B3
E3B348183D8EF85345AC26C934C50312D218AB724CBB8ECE6B42ED75B7670E1C
DE2259BEF4BB00F5879F74B09D890543CD537EC768844BFE6EB7788A19416F96
AE92BB7528C06E964E7912CE166F39C68C8F259699950CF68B05604EFD0DBCA4
292E09CB91A39BA398B920B5F2735BA9E65ACCA8F542CD7FDF2F222442D272C6
96E2C51681675410CE9BD6AB6B56CB1366AB88D8CDDC23775B6F733F3E90AB59
C1E060B9E9298276238EA9A68081B9D03309ECC5D3B17C95D185D1DB9FABFFCD
E8B4D3B21D6EEDFA412F2A917B97A920878315D488D1E15CCB1BA1141F1B77DC
D2B7DC83E662C19DDE6A5207ACEA1E0B4A7D8978F2479000AD48A72EFA8F2787
3D0D7536987AB84AC1F061F9C8D6D1D0C87B37EFD11C26E1BBB0DBA2E8E8A249
88085E40571226A73F91D1DC1581A0865F63F603D5F25F704636399BE6BD4C37
A488050670CB7914381CA2A2CE89276997F43FFD6487CEF89B5F4004BFFFC328
F44E8D61C0AA41A67D2613F719314BD3F9EDFAABFE069E371FDB48A1DD7B3EFE
28BA560B7FD67F472C1351AA9384E8A764AA4FDE907CD9102FE467D5F0BCE942
8508C573AA9A83BBF8C04494534241FA0B71AF888F9B38AC792A3D1C9C86103B
B554E16DF8B7027547485140E30E79AEA3845BB402AEF2F1C45331C30D2D0F08
3CEAB1020D895E1277A9D07BFAFB61ECEA4E7DDD2536665A5CD5CDBB40CAEB8F
171B6D450B64B55B76261DBA40AC367CB71180619E2A3FB5FFD2D22A86D840F1
0661868B3D5830B5CC2ED9289F5800ED143BA9FC4055F34EB515BF44DDD9A57F
BB0DFE056A8D1690FBE0E746C1915B6A74823C89E579F2B1719FBA7192086245
6BE1232B7450242F46FAEDC2875F4D6B2C1EA59D629B0FF93EB424BE4520FEC8
54F4C3B4FD9077D2E0920A481574B021BD6C3A756F9ADDD85BE0A865C3CB0010
D2BB9FF1BC53E27AFC6D3DEEA6262D12B1CFBE198D2EDA76E27A7346AC9379C6
DB76E4919D26E601A1CF78D2C22D201781B49CD4E07E3D8AE4AD0043A08A92F4
33D8A3E7CDB48606930B8D33B5A3213250E4B41D6E35BA82FEA87D3E9AC6C00C
7BEF0D535BD01962800FD7B503138819CA2960B28829F7C58DCCE8B28DC14C3A
9FE7F888E390C29BA977ADA094B53A3EA6EFCD4B80297FAE00992681C7B56D2B
80BE2600A7DACB4DB6017F17589F9EDA9B74A174C6AF59E146AFD5B53602750F
77EE8B09F615F1F8FAC9AAB39662E6D137560A8363F8D0B481C7127F6B579192
56A220DB336BD4F041E9FE46C75BA73ACF52C59C5287D92E1A8CB5A195036AE4
2DFBAFB1E18E56CBD6D2B0D7BFDE4F4EED1DA153678F9F95A9E825F2C263B061
9C29348A1E71382C84689EFA8B5C6DD39FA3F75181E77B149A25CE9F8E3F4F8F
47D9D5A1A142899B07B78198A1C3AB11E3BCF938A0E68746E7C166C8C0836627
930511BF858BA4AEEF56DC0DA5A063E7FED9F4EC1673726FE7265D0E15989644
A615D4A6DFC690EB13B88239CB8662AB1BDA518E1D24BB7F3D8F606B09EE455B
1F86C4D3B5EC9AFAF72E8BE7B43BB4E0921429BE26C0174404D365C3CCE4ED45
1CC0BC365B8F7A45D6EB2720703187D4585B312777EA07A0E6F745BAFB3FE3A2
A43B7CC317DF98838B7001DB7CB38F2ED4568BD464C960DBF2CA9A20484AF4A7
A4DF51BF0EFB57472C5FCB1195C608C43B85688166310276718A1CD9960D541D
19845085DA803840F9DBB273B827EEB3FAEDA894B3CF5428E2BE6CCA5B063450
84D27E92FDA4F8E57C6D2B427C56FB1ED01E83B6E8E8A9C1E50280838ECCE816
BC7DFA82CD42D0A30C344FA081E3F8FE81B828028E263657A01238DF70AA3A42
1603ECC1623D32353CD7684A1F442F36CFEB7A1DC6A7028A0ADDC43FA3076B26
74E5A10C052BA3AC50A5A93D31607964E58D19D8317B77DCB0925F4C11315B8B
FC1812A1DFA9C0429977D3828C780B1F922CC2C7C8C29F9183B2AE5C7B4AC278
8580FA2E7C47409CCEDC2C98EEC4D646D429D5B37DE08EE2927B5374099F5FE0
AE25E73862A20A1A27E724B353170D46D4B234CA5AF1422EF54B271251E3B470
A5800B4FEDC4A99823CAFF87E567B96572B0397D2FD2622C3A6DEE1F9AA4A8C6
9D6A244B6353F54E3A7287CFEDD75B4E4105E7A667E1F13DE61F3DBA33684EF5
8562CD8D210DF5C898304B7E77CBAB25E38A41319FB27BB61B4A077FADD338C2
A01580D84E0135EED46907F5AD5700A7F5DDAD6266E74BBAD5754ADF5D30249D
B2DBBBF4BFE1AE855973129978F707C87462B6750D359D56D4CAA8B36A21B11A
E0AFA9BB07757F02EF6271E512E1EFA372485541083B58C378D3ECE9D91973EA
32A6504C7DD7DE42349BBF740450506507AFB897646D7CA64A46E6846B2DC802
0664861E54C0E06EB8960D1E7653CE922169C8085E31E1B691F5E29179F03E51
A7AC42F2CE846CAC44EB2AFC4E7F4AAC245FABA1E9010EA86A01A34537006915
4919E5C99CF62A70A5830211D121430D11E87AA6C12083B29AAEA996FA96E4F6
CB68063B65B26A95C303711943DCE9AF05FCF282B87F172CA75144E70BEA368A
35947E11D1311B45DE5F2688D0B2102894D7FECB5B225ACBE62F7A7D9611F4B8
5DC2C06070B1A215D2D34931E96950E83E418B529E97AB7AAD8253C8460D4159
149C1EE0F65C84B23A94F218E67B49E580D08E4430665EDCEC71DC39584BC7A6
769A8B01E1D2A29F0A1583852AA0CAE4C5F3035A6AEE439690864BE683B39652
5A0A9D0F8A89161D5A88D4C9F46ACEF59F84610C9EAE7770B80663360C7C2757
26C0C5B435C862CCF357984863D9111BD0A8E6BCD8EE4BE9D0C5C29579DBA50B
E0E87C108D3EDB4F6A3D9421B64B435BB447E7CB60046602A7A300CC7231669F
79EF6C4527DE148B31E0F553FE1D42C89BCAD8F848007099ADD8776C15B57643
B5BAB4968CB9CB3361C2AC17638689E052523D7558A09FE3BDAB6C8386F83B63
7F19FFB7511DE223A0A261324189EDB38A745E79B4A1C147BB46821BA629F53B
C22D8EC10EC4D38F56DD54C1DFC3E44012F8821FCF8039040F4DD94813A8497E
86D57ED13E73F9B0A1F38C5BF8B02C8EA87720253F8612D3EAAD7B3B10FDC49E
178296C7D0B94F289CC4251D16ED72F5904861D46EDA38DA2E66D9EBB4C3C4D3
2DAC0FE8F570E04190A05360BC1BF995626AF73508E9704D6E8161E1523F8079
BA6E3675E56B505608C1ACD310BB0FD53F52896150EC499EE341A312E6B06237
09CF4EF92C325ED423D5BE023E1174EC8CA68FC2FB7A553605C2FC4D2886758D
49CE07427C96AEECF83C52A4555178CAC63B4FC2FD02F3F6970F6306B22213A3
08C0C5BC567059873B54BA0DDD6C54A36A495743B1D165EA43C140691A64D5B9
D712824857DE02F4E2272A1384A668E6131A57C9AC5D7B3A7480E6FE6F032D84
2F28D8F0988ECACA38EBC601A93AAD088CB89A9D8CA0A4CDF5D554B1CB65ABFB
79F68FD0DA482FE338FF7162B38E70ED0FA6771E39E70A4BC9748F5423ADD67C
1631E60F3E687ED7D9A4A33C61A50FB9C34A61B893616AD0E8D424F62EB81B59
431447EDEC96437250C43D32222BA390DB627D9C246F4E409E61E2DDF5284B73
0B33CB7C87EC3AA7A3964C0FAF96811ADDDCECFD8FA9CE1432F379389BCE08B9
7ACB77F4FE3A2D9C41DDBE994ED1E8A5764C6AEA12CF76FEF7A6E53A16C1FE83
61F2662D3FAB820AB7E8B18C7B8C47CDB266CC044347E34EA72ABE84E54340FE
82B7E0A626646919783CFF9219C646A8008D65CD6998E813BAF9B49E6D534F55
ACA65DCC2D70D668DD21A65AAB91AEB7D999ABB438EF9F4526BBFCD10656F87E
3820847C44BEEA3F33F568204C9CB241B7F427C1DC967350F2F8C82C38D1E301
6BF4B4E42BB0AC9F23CF55920502D0BC7EFBD5CB140E02C5A8CB73896C7E492F
EC6A122D5322337FE6A250219DA219F8C566A0533AE13398C837534B2A89A1F1
6FBE0F721E23552293BFF798055CFA266BD6991E0D237DCAB2628DFF4F0C0A3B
5854E819CF43235722B50C78893E945B5F1A2392EA4950D391482AE9F2AF40D8
60BE6535A01D411A82FEE238CB19DC5407033A584AE22BB739E5CF8C2277D665
B99993A80FBEAD46BD124EE5DCEAC029858CCAE33228E1E6E2034652553A03E1
341025B4F6CCB5E495E6C242EA7B5C525587613D335148791C6FB25D06DD64E0
860EBB61481E868CB90046AAADBB3A47ACF34D9CD1F0FAA258942085741EE832
FAB1F7ED83D154E16BBE8B596E67963AF1AE578BD3400269549C2DC29A3DD470
2D31876A1CFCE58D619A66DF8CCC31163198506A621059DFCC7C8C48CDD889C3
233E76E508CD93900FE95792A27D2661FAEE1FEFB204635FEAAD0FD1367C2BC2
57F4D6AC7AF2572B5EB752EB37D2A8A4EF0FDC11D7C5CAF5FD69FAE986C0FAA3
1F679FF8EE35A93B7E27A9BF39734B53CF410AB3F3A5047B9AAC1CE8907F5496
570EE524CD9C9FFCC8DDD988B05327DBC431CC1EF45E7241D4FAF394D14F4872
A43D0209B60B95AC32E915A73823D4297FEECBCC415F7E3CAC30A7C3C9DB09D7
77ACF2EC1DC1C46573A6B88FEBE09E9DDA0F9614440C28C9765366C17B3979BA
31F0D183257F8857E8E5B8ED7E1958A2844855CEB7AFB8D380DEF7DC1DC78624
C748192FA321C96B32D8E6CC1FFC7FB7F79FE1377F54F2966FE947DBF44B6AAA
3874A4112294CA348FF578A21DA650E700C8A1CF16CF43173EC4463FCBF68FAC
91A4DD404F1460BE21CDF2ECFF182B6834258F3F327C4FBF8498A06C9EF7240D
C22B6DC4C48F5207E8C79FE8C1E98BACBDDB68AF7CCF8E9071B2596D755E2C95
405D856397C8431868D36B920E81FBFE05B7D14891149F91A24957053A3A9F33
077AE48E504A3EAA9B8700BA9D60272F4D456B987B3BE5AC9782F4A809916D44
503A4BC2515A46A3FCF8E18B25481DE4624C7214E2BEDF15B4BCF237B958797B
9902EDDABF53AADF04650D534471C4B1B5530FCA8226B4AB3E0B85936C2DCB73
70D65DF472D97478283D7768A9EC87B1BBECEB0B630D681FC85D86F0C590D7FB
9E51E09C85C5BCDE30D15CD9AF26620D2FC177544A6C425CABE8D56D747D1F82
D049A383B17A97FD214FC6C24EA2A5990BDC7A47167B499183AE795A0199F5B2
760CDF67B3BB83C25470E0ECE1C1E4FB35FD91126D8FFAE7CD25D9534F2C1768
DE524B48CC6BEE84C857186645C46766EC694945E55949D2B9D86F16A27F8035
0CF16FBCAA8A9F73F50C913700E4A549621CA1FF5626C2215F5A80C7AE2FDB35
4D0361A3054C1ED3A55B0E69F166475E3C01A1035778D9DF7B56F50FF43EA517
7832AC20085EDA09546D17281B27D1450A144EEBE0975786AF3188DEFFC314B6
D9D5FDCBE1777352639A426FC3B13C8AD320FFFDC8DEB8DE95405AF70E952F95
336FC074602E6957DA97DDFA62CF9AC0CE66DA86FB4EF4C0E9655171298FFBCD
D0858CBFFF25FFB904510318135AA4E0A77BE249613E8AE1B5F5ABAA0C9FD04F
A81F18257D2C356E0AC9FF559D43B9A09A43832B289A8CC19AE05B9BA0D7E901
97A12DC144FF69C587FA5228E99CB5ABF69F826ECCFBC849C74259C8FFEC4ADC
96CB9083C244DCF089676CF6AF896A75678AB421B33A4C44E383D53571680A95
61417015FB334C602DACFDE349DC61A2061284E6AF01D8B9FAEE674122BA926D
2DB941B7A96AC4D71319BCEC7407A24887853856714A51D76344EAB404871F8E
21F85FB5D6C00F818E4B43AE2A6798B76E4C4664111718EF2A9885988F49E3F4
D0F9CE9AB9F1738E388AFA8E6BD89DB799536B55C6934F236B53D0AF465F7316
98A223F6ABE37BE2432ED0F13571A4963E2931F4A52BED7EDEF6DA4BC16BD6DC
207DB44DD7B0611F151A264BD64CC65A11132DF380E70F660E29A76141D7A01F
1E5C7375C5140E3851D25DAA0F28C26DF07D1C079E5115D82FE8977B2DF4970E
E03C65448E5F85C74B44F1EF2C46561B54081C696B4BF20053E0AABA3102E43C
83A6286DEC2A02BF11E5CCDAE4E58F338F4593BDF75E964D7B3C6F181116DA5F
74757A9BEDFD04F41FEA71E4E811982A718A94E0EC8FCC4860A697343AA4D002
EE072875ADABBB81CD090D42036444FD4729538BA939C3A82BFDB4496839B6E9
981C31BA552A09B302993123E82E48B76AF247121F65BE02BB14CC3243CBB3D4
5183FCA855820B5CEF599C05D921F0041B14FFD5E23ABFFCBCB30FAEEA4299F0
DEB4A8A622A2FA90F0CECD1ABD0A5D6612F712022E25F8238223F6558E5B6EA5
B31E33B9CF21D80BA9C9579ABC3B04B58D6623C3B40C4B76AC68C5EBDC908827
AF6D91C2ACC0A13532E9EBAB841E2977977BD77B981D1A05BFFFB60784438015
6A9D5FE2A945D007D97FF5E79B390792C9E78F1F0B69BF71F541BC6E07CF1B45
218E1C3B575F8287F66FA72849E2F13816177E7947026A9D49C74550AEAD8210
F7AC185FB625FE472415598E1470196F65230F7B80B54EBAE48D72838566F026
E25F3508C48A8BB31377DE3B1B9116196EB84C4A599DDBB64D567D7F1814E550
BB18DF86BE7D9D662610493E9AB21F5E97F57D50A5A4AA70289F6623591CBE6C
34B2553C2E4283818D4AD21DD19B49525A4E934A225AE4CA1C359295C7D29682
FD6F9883A3EB69F9FD1623CF17FF1F8FB197E9B116BB41B83BDD7EB834DEDA26
F27A5106F390EB913CC137B9D6A5B8DB0B9574A830F9EF505149E89ADB1A1BD8
01EFAB50C280CF4499B8A1769FBE34BAF93539FDF3C4DA61B7AE58C24E96C1A9
1B076C9AB50E07C4506F6ADBAFBDFC0CB40C10108AD5B484A5161A93B3630A45
87FF778F661590642D1B53CB86D765FDD8F6A2CC4E8D514660A5434ADA1BE437
6AE9811E1216A8F31F49EFB2FF3E28A8DEBCA0CF3B9C4C79C81C6EC5B62774DF
0306BD6957EC65834BA47CA0AF60A9A45DBE10073E3505C3EBA20AC324DEB566
75D0E08CA162B5BCED70A87CD0249488839839FA997EB45E010DF8E7380EFB9E
DFFC19416FAB61F4ECA7C6A6BCA55D5F974C4D67AF5249EEF89C244728B98022
8DBE62EDD18DAC476DE8F8ECDB944577917AD169E0E18B1B22579F08F4E68EDA
829B4C0F823586C658CEAB3C0B29796D2BD1DE1D4B673B0D41B850D1C55E965F
4F4C68D8DFD5C6668C60E4401B3A4EBE982A2F511B3471F398AF594FF0007109
A71B34C854E2305F2B42116921DB779B4D555DE587A9B163C2C65B633802D100
24BBA20AFF928DAE47397075327EED7195DEE9EF4788590B1722F95F6CEA4642
F2409E506EDBFE9AA1867D85F91C173784900699E6CA7B672D208B1FD63B002A
20D8CDCD1141EF873A4D7DCCCD5170AA533B314D3389937C81230D0F8A676B92
8A8884081996FEA9AEEF420FAE50785D6EEAA6ABA1B58D3A468B718366587D0F
331CA6A5EB3FBE055BAED0E397DFD15A3A53981A5F158B487CB2F9219537AC98
E1666C760F3C795DDBD3954CF74C2345E61C0B63D478DBD9D1F904EB6959B1D3
A3976651CDC513AC9569CE318E21C11AE858AB0BD573C2E4B6849767F650E556
5495A5978375ABDCD02EA24E6776FDCF88FC75D05D0E3F9E07539C80A599C7AA
78251241B46C824F9379E76128411F6F62DA2124572295D7FDF91A1E9EF372A3
70C1DB8F5B0DCBFB9C0E8E9BB8F9A12DC617939F1A808ACFF98487A36140BA48
CD0971F9A1D84217AB86C2A633E3C4B05AC2BCFE82D329D45CD8DF2BE90A92E2
F1DBDDCEB0B89F8B1D06278E80D4AD8D11907B246D94B12617AB50EB5A520CD8
B2844CCC13EC42C394C0B30C2D8210846A85A5E58EE0E7270BA7CCEFBAEC876C
C50FA0C3717E91F68E6E2C6DA9D1EB5050DBA1806481881C07789536B1CD256F
C02FADB55E3947D9831F0FBF5E2D086F3115B185CBF6F362C146A2D5C6CDE03A
260F2E92C7807C74EFED2B132A2915E04548D9924037781A7CFA7A9CB4335D68
7A58F61800FB46DC6C3CF51A2646DB93A34C60583DA3CCDBFF4F315D1FBAB11D
1D902520B3564A2BC6BAA3EF49264453597E2FC7619B1C27E56CC157560A9FEB
BFE627DFFC6E90B9C4C8A068DB18149070025A12FCDE44664BF5BD6BFA8A80D2
DD1AE7485B38AA1ED0751CC9AFB500E80CB62A6C2C94F55D73FA1668DEF86AD7
3461329060299660EA56524361FE4DF3691C38DA59EEEF6DDDC9E7C6132560D4
17ECFAAC501BCF19DEC8F7555EED3BB2A04E48B69DDB7DC60ED38306755FF450
27146DE12236D22542C5F772A3718F803BA06826F2D7CCDCE6E9697F70EB1360
6D0659DCE9D564E57528E51468BDF3D02B77DF99A986326A3B774F31865A1051
090E04997FAD4711B3D15F844CB66C168D36368CEF61E3FDC1F8755837732B12
F46AE3AF7FC6540D1D5A534632C3E14F958C64170C896E1945962F820A3BB65B
BD037D259440B5457AE7487223F2B516591E507431B6EB6C47ABB4C8EF2E8F4F
B7B76FFC63C72B9D321EE9FFAB9884E266E286EFA2C3975526F91F288CD15BB0
3C401E6EEBD0D40ACE498E1D84E1D1C15FA740A00EFAB0C19B7B6C6A3BF99347
637969889322F2522FD9570EE6BA5F85F4806706C41CCB059C9AACFA4530B025
B525FEB521E06B4A2EDFC4F6ECB3DD471E898B9240AB3BC8F14FBB57279B0CE9
E05436F16E783FDADA674B361F951D5152C0011FE0BA58A6E0AA25A3A5C25871
D190E40D061802774E8CB67D4A16B36E22BF82378F14FC7776FBAD6C6B8D33D8
ED3657DF6D4787F522AD85715DE7A87019261C42C5D4291812EA4FA259850D10
1D84F4CAD106141137C1FD5C1FEDAC17F8EB7428F3D39E0D60348B5B173EF972
AED90C6764A19A2C7C2B94F10338F3791389A6426416915A26FABAF878198E2C
D856B06B99685BA8DD4359D2922BE9F1809A78FBB5DE855B51CA73EDF7798A43
97FC6B28F7DFB72F5895A6BD45B9C196EF729BB5BF404B88E88E169AA5732CD5
42012929C7250BFCA067BD5377B573C3A7482D2DB9FF7DD082B97596E8330057
5CCD612ECA0A7571D6E0ED8901F90F6A1D99767983ACDC2D2F02720E9EF083D3
E979DD3D75F7206A093C7788700BCD143346603DAED4521F35DD3F47BA853137
AF71C8ED83A3155EAEC79A80F7422FC91F2719E16BA0AE68F883D9F85B81A3A1
60369B6F94F049E97784E424B40537B7081C1E40433C3511F9C637E680F3408E
A4DA1DB50DABC0C0F1EC4248CFF24B78C4B4DEA8B8EB39A5974177626618AA5E
29B8E8EC7CEA9151BB3A888F4D3C542F83821C56B4F44B70462F9975A6E314A3
67182EBBC1F3A1419789198116202901B611D9294AA150BEB02629FC1A003859
F3821264DA5AA9E03C2096BC340364998D4FF999BB4808531DE9D4762D0D7D90
DB3255A596C0E033CE57E64863E0F1ED4725EE7312BEB40EBABACDE12CC0FE27
A46BEB41E9CE8687F60FAB8BA54EAEB1A29BBA9A5BCE21BFA46CCF56C658CF62
59308E5031ECF15805F05275A05E38C05FA580B0D9D8A6F6A1C0F6ED4EB981E3
0CD562DB316843A053F82CD8E6D7EAD84B4D24A72C11B9D5B7A5DB78BD0BD78C
97949EAB8569BDA0DD3380A7E3C12A28151255A190C65C5AC1C17E225F993608
EE0694306DFE612047BEFF23499065866B6380C8619DE2116870998AF9AB5942
365FBCE1EBF9780A1906DF51EAB2ECF6C2B3FEF0B2942225BD45F6FE01CB6C10
015841B66CD6BF4C70A908B8418D0C93AC7EAA9DF793A62FC3E0C50F55A84B2B
1691660D4A48B117D5D4B19467429D32609EF1C4A038DCC1207690CC69337450
70799A52CEEC78436FC9E6811B322BE167F8D6290A992343731DF901352B925B
2A1C555F1897F17EE214AEFC6CE2A1DA97D4B6FCB8D02A5D564D59B23FB94922
8D0955DEBF58E291EB5FC0DBBEFD846F24D686DE2D7A35A091E44C0344419F06
06EF7F33E5D0304268805FE6AC2935DC6FD4D20D3C2F3472DA36BAE42B05FB76
E6B5920CF5BF055A524058940B3384AC4FC9E3CA1BB9AE88B2F24B2A902CD8E6
F9354AC30C0624C769CACCFB333444EA46E23778024A3CBA9DC490FD77F0F3AA
902AD676BDC2CF7A4927D841354301EDE00ABDCE8BDA33BBC581D318A75C5CAB
AFCB69898E3BBA20BFD3AF672D501314B21C3C156261EE11B07CB6818BB170AD
1CDF99796DA9C0D4990CC5130EC9F6DE383C674C24816DAE80E8B5C1C3C278BB
858369D6D37C8814620146E27E3EB2B9289D161412B28D4DA44C60ABF5751A90
099A4DAB23CC9282B7B19883B9F981FDD5AE272603E4D20E7B2FEC53D9D23A67
5631B9E7EC901725E17766E07AC961A419A21D748C6A1B27170D5CE78EDF92AA
962FE09DB3A790D521A76E000CDE7875C2F4C648D291642429DD61FAF86CC41B
E0B94F84A28B531B1E987FFAC89B9386ED6942A6888B1B39F342D3F4F0131084
05DF82E0D367A0200CEDC0AAE2E80E0CB7624E0116CD08A59EF79E5D7A9AF1DD
98093959F0C6D3D07BB06DA2289639219FD191769B35782143BB3F49CEA03BAB
6258E19FA15B2BF1F6366EBA112970A4E93A9F504F4B02A95DD4FD063AB4C38C
1F07CEABFAC03A4FD38818E0E8FFAC59C2A472311F266DFBE6AD8D4C79629B24
14EED3E50445B7E8B881265EF41110CB02E6DA3F3D98E707C093BCDB1A761FDB
FBCD57CC271657B8D46127A633D126CD63FDEE48E210E261C16EF1A02367BB7C
ED134379E63D9D00667CC3658B3E33987BE2F5314841040B5255F62BD2B6A93C
68B79E9026102990E061801D9B9877E7AB494E1AA44C47A3C883DEFDE65E02AC
C108E0482714F6E6F933D8422CA28FB1C0BD55AC360B4E2BAD916E268A701EE5
404CF3ADD7D79A33AFD79FA3EFCB771B8D108B7CE405504ECD699F42B6DEE9D1
30BB705CE1CB07BDBE8E13952104D69F4A24091F2AC0D68FB5E6F7766A29B37A
3A60D35DDFB2B9542E6504968523B31E627EDABFD4E30D5C22729B603B6CCEC0
5220CD184DF3A8F645825C9F5D32F3D943262E9ACD8CDA7E9E78715DA5676856
9FA88C3D320B4F66C9F9C1A3BAC53475B5A70CA1B83D37D2741F41DA2CADE6B2
BE7557A33DC0D76A6A2496791E64FE2D3B8F58E53950DB59E4322E8965292967
6E0C22A301504A6CC98B42E050C86F78ECE484E7F37A37C116F151091AC3E4C6
120E2C3F07A2A21D43EBD0A7A257967B755F62A3B464A030A88DCE8EEE0AC92F
3704E743C1C5F4C461BE5173063D2B1E0F17A856F22CFB80C536C3CA5680F622
117252D1D72A6D9D057A413F70B3EEF3DB8EB39457BA581E720702663742524F
4875EA25538EFFAB63BBC1C22A6FE1C55CB88D0BDCBB4DB843CA2832D8AAA182
9308E3583315E31BF70E2E0FDF33BE1A31AFE7F7F8D6287C0468E3AE99C277EC
2FAB34A277A5672F697C25D6D88CAE47E6567488A918261595698B2CC0E990AA
8B26441324A228BF89C162EB68EA6DB1568789358A528D56A6FBE9F3002E56EA
59E9C2459EEA55D95D6E52567706CB28468A9A6AD9F9B873F1845718F8A30467
7858F156E9EAC6EC03872BFA8D9CB1975BB9026ED0D8518F68846E3E5386A1D7
5068986D021414BCA3113BD0AAE9624050D4DFDA25E581FB2630E8840AC533EB
E909D7F9DB5A1476962A592ABFFD7C6573996FFF0E93125E044D8050BF7C5516
51FF922639E5077C139E39DB9C9A8F17CA0C871AAB3CF16015E2B1785CC9CE17
A166BB9117411197AA294D99144EF52364BBEF00969C99F7BC675793174FDD8F
DE863B80121B24EA380C737C353C06DCA0716DBB262C06251069BC3AA8E82E95
E8D7BBF4BE2FC91496F35A71516BC85BC89A23C2C80CDE435E9003FB6CE65D58
69318FE640DE6C8C6BA0923521D51750FC538358DD1EFABCFA0C87D646658286
A8457E4762004B0518510CDD7373EE2C4F4DFA4FA2136FC0ADFCE6245C616E40
C89E6F718C08F6B575094670C3E5B96E20D7AAE5495E234B83E0637EF67E8941
F164049193904F4205F66BBB0142FFD126F9490C8416AF6C0F0A0B210C8CEBA1
55EF083EB370F6083ACC004F763971E05DA6F15E0424EAF3580679497BA9C3D5
9EEBA7F5DC2C1B1ED21C93C4D5B423990214DBCC291C32782B47C664089184AE
FB41858CA7AA44EF45A303230F9367F845D477CCF23085F7ED4D853458225191
DB8D68FEE0CE611A78F6F8FF7212F0FF37526AC5C8EB52E88EDED54E621A7BFF
2B67F775CA32DC5D760113CE4EB0C76133C87264DE303181EDACA82976975B38
32C6E8E9484666B14FA03749B8DDD1BD56D02BDF2168BF25415CBFB5D29C82E5
0B4989CB15537D18CF282D2B78E1C833F6648F047BE38170253A532087ACEEC9
DC75E57FCBA7096938AF5D6640930FA77B4867926E89121F7A2F0D5051981338
84DD1AB811F8B75C4CBF4427D66E7D313BA68FD47BAAEAABBD33078965E39087
D0AC90AF8E6A845591EA2B9CB58D8297CB93DD0C42046F8315AE5CEDB43226F4
7C7A121C4942FD1288779EFBB5BB281F266BD5DBD5FFE90BC1EFC2953AD17F87
E63AB9F50633AF68D91224CBBD008BD647A448A8CE8C9150EB3F8B98F9E309D9
47D81993B26B02DBD146DC41A8349C99630D674AC5510E1ACAB4A1D66B40B24A
B1B547262D4D500FC695AA28613B314C9492155D647B2925642ED97570424655
0C54D9693FD4D8E51C4B89DD5F491A2F5EA3FAA244BC9CB0E126AAE9C4323A77
FAC7F50E2D8AD89E0C1E2691BFDE08E7F665BB85453824D517B1EA26A533E0C8
E799646076B8BD8F780E240078F0154A553C59BC2E575ABC304035B4A16FB71C
40F8EECDA38804A86CB75A17CE9EC73FBBBCAEAC58D6DC04A2AD1B8F92CC6F6F
0883C138CB1237B621FAFFC4AD1D811458E63A7DCA8B610457193CB03AC66366
C12C9F1820743D63767F84BA4006754600BEC1D0F9A909995849AE4ECE16F712
2EF0ABD227662086B24171ED78CC322FC971B466F60AA55662D112772FD0AFF3
F2196D07F6DBADF697663680637B44E57AD62F1A030DA25C3D6F9174E8B7C0D8
EA20EA384D741B3F707A47821EB5FF0CF56E447D672915EF95A6050D53AEF3CA
0419D3138CF2C0F365F05903E1A988FD8C2A5E1E78E0353364A7229546436378
57E8EF2B9852D78ABA8BEEC36EA927A1A6DB056C1E3CB608250BA73D8F96B0E1
8A3B5C29FF7517D46AB802642FDD3700FD0C67AA99C5D9A539D59E02DBB4613B
F1D8A1124993786F4624B6767625FFA97AAEB7F09C2EFC8B9E3B53718C98D58C
9BBC8D9D6A9E8ED1764FF5A629DFB38D14F064CD4A1D77225BC78A8CAFC7A295
2075BAFCF107C198196BFC80AB10973C519606B3AA05605DEC098A20B65A8972
C11C583DDBEF2F70F83BCB0FD3EC88BC5975EFB0C0484EB520ED9DCEAC9939EB
A9828BFF34CE9E8DF1392B5DD6DE1E79DA422CEA102D093F19425A3D0CB1D547
8E30B104E25A5E946CBD82CC2D5600C1460AD89374E9732D27529B501A9E98BA
C34B94D4DDB79E6CBD3CDF88560086BA26D46A5129233383C2D71F6B0694FA5C
13ADB74287894AA2A92FF162AA3D4F805EC84AF6D8581B503C6070C0CF2A63D2
CB905ED833E2A2ECF341BAAC9B7676F0F88131765E1929171DFD49648DA6197C
5AB8EBC973CD8DF320AB6F74D0361CAA2B87583AA8820B1453FA37E6FBF29D91
92B03A578FBC878F8D12CE4B9E184C91CD4112AA9B69E8A4635D6D74AF5432C3
F258B69530C9B2763633E5D36021AB564F38E36AA24A99B82CD767C3A7034BD0
5D83CFC2E8E314D4643BE87767CB3762BC2A90243C75885E80CE34BBCDA00C8F
5674B384D9F0B07E5328EFB5021E08C13A3B4FDBC5D4A250187181D19FE6862D
A88F714DDB7BF3386F9AB2B9763267F33D278DD4BFBA57CB63959A3EC7817CEC
0800188A64E3157518DDEB0A9ECE1DFE4E9D860B9E7182117EEEC0BAA7EBC8A0
50E35F98EB9EC870D1252C04657EE2122D3AC7CB6DB0FAC4A2F084503BC80A05
E7BAD92538EBDD74960B68AE956D2D9CC88A8ACA0CF69F25CEB05057A1B8B4E5
6AABF265FC9175FD557ED65E13696F0151C278932E9C103243E74D9051EE17F8
FC39653B5EC751BF4D8C55726A7282D5A56295FCCA6DA709DCF2D1C0743C2173
0EB20EA6EC704BF556C2CBE816C55A4F97AC6D31007115A6ED65145808C4F241
D098A3C9054E372D2284D6CA28CD3D11E7AA86A82C4C0AE5D462A01252C04811
B257A4FBF9C5D261A4F52F30D439CCCF76584F2A64B07006A04CEC683FBE8A9A
2B46DF97AE05915ED9338F614C34AAAB1E105D306C0D506252253BFA837AEB06
7687A4879D2419C542F935D8632F6C4BDD1DEDBA49AFF044845F16B02CF1B31E
E97004EE9B82A7D96D883B3350B3F7A529E62A6D1CCCF53F7D9220071397A214
3092ACADCFD95B9225EB95964CD6C4AEDE9F640D12C3EA50B8009493927537D7
69C67909E08A757559202CE0E188835187B5304B60FE64C1C440D1C8BFF87F00
7CAE69CB4E2908664EC5383034A2E149FD8B7F6B400E29AB5ED171FDB3D467AE
5D0B6FA153A8BFE763CA999285DADFDCFF6E1C1819A63F50D7CCC527D9EC1BAF
C60D2E31A27525BDB67AB84D5851DE69932F8FEEA551BB7F0DB675F9B3304935
669B184762C73CEF364EC36E7E8CFC05D218342CC26D444F54CA197C2B1FA643
C9AACF5CD0A7D154F07DFD3C6C4C07721B3046BD7421C51FCA3011E7E6A45A40
DD744D0AC7E48BDC9E6CDF7C1764DB3F53A7DAADDC41E197B387965EE6B326E8
85C92ECD6E393FCD8245DDA27EDBE55D9A4E12ED75F00EDEA0DF2734455C9864
55646A58D46DE0CC432900B0A99FD000D931F9DC7D46260152893DC7C05C0712
0E0A92CBC18B14026E057D93567788E42B697C3B9383DDC2D96359FB3CD34699
DDEE22658647E7777724BB83D3EDD6BF3559A3F9B8CAFDD6704C5D1E0928F0FB
57C98DBA27A1760259C4F58F81AC2014738971843B3305BBD4232610167D6DA6
702220460B497A2D386BBAFFB29B73246AD3928BD6296AE76BEC4B00AD45F32C
319C47B9AD7A1231CEB9C93499268D405FC69FA6F9A9FE851028BFF1109DA71D
8569FB4FE10E1D23F615F091F8590F48B273C4C3C588B85D605B7625ED35589B
EBC9F1ED5143ECF9D5EAC3CC65D6E1847A7A8D1AB5461591F5AB5EBEC99EC219
011EB140D71F219538D818504246E3585999CD5BFFAE22CD586ABF982FDB5AF1
E95DDD49C0D12027E956C72ED6419FE267E660ACCC556F099B2CA5BD1F2CE4D0
3A6FCEC593870CF6EF60529D1D90B7CD93814327B0DA6DE851426AE28CDEBAA2
881566E5D5B3F06617833193B7F85C1A5F1E1C12B0E617513408799694D8A81C
078F2B3C79F9E47FAA489DD69AA1D69095EA05AC8ADA14C31613D3C658245253
02227CE55D71C2FBB91B4B0C70AD925201BDFFB5EB6CF214ADABAC820A93ACF5
C399336E2440B0B833569281B5A772219E0C3EA4B3F02E7F5FE51EEBBB01ED03
F6CCB5BACAC638B1E29851858B6D2833596035D7289FC3072A03623BE34F4275
5D583047A416146C55ABDCF633D15EAD8CAD4CCFE9907FFF8EAA17B57A0F7F6B
09AECF69FF3B92117DF110D6895FDCFC1FC91C9F02292E0FD01C25187E10BDF8
91194216B3FF16C9FD07E607787884EE268BDD0F5F0DF2F896866FD5449AE845
2FDD0E8420034255EC66468B37B83480D8BC725932BEC93175041F6D8A64238D
DAC4623C10C49B3441007051B02F3C398E0D7A3AFECC21806F84F3F3A95F7C1A
6C99B012FFE7C277543D4AA0D04B2B28B1F200802C02ED0BF0322195917EDB55
E83C89214D085A225E5EE6106881C64D2E6093A1DCB6CB63DC60D3C22A865E03
8371C8E92C17133BEA4B3032CB1A6933E09F3D7F9B41EADC1EAD2F68DCE1F8F9
2DA0B1B3A34E9B0EC233153B672199C3786CAD496D632351F34F495B2378AD05
704372556E09EE7D51FE5378A01F4BAFFD85164639F91263BFB2EE017EB7468A
EC4A81493384596E88C9F03F6552B46757E04836909C79A7998FF04B8DA931A4
2040327D68DCB3FF05B8DF3DFCB49A40FF3A30D3E09A68708646962B94053CF1
CF8E6710D83F84C9E7B61FFBB624DABBA07C11E6A435247981A59CF44B732381
6AE25F936819ECDEFAD0CBB1E859D509EB927CF61868DD63C49693520C8DA711
65290DE45479919F2133C01DB1D13C5A6EA9F64B95A6FBA4BC1E1F45E68C4D74
283CDC1F30FDB806D49D9E2842E0AC5D9D07462C67E242FD9C2033DF15C59EA2
A51C97ECA98D623B72A18F195038907F9EB50E3439B9AE8ED2EFE80041B504B8
56BDD77B718F2C16C08396A29727461F4CEFB7C3D8FB89162CF5B0D22CAAC93A
630B22622D4636DF3FC5D33EA8D80B4D73BEBAD1DC5B2E075C44D2C95AC6F3A9
953647610894DA5757253B1E792938F446E7D4E59DFB6703AACEC96B010B2098
F006EE27AFC3EB8968AC0767AAF5F765E12DE4CFEF81B8712693D433881992B6
33234AA2DECD7B89A4809FB146276C180FBD7641ED14A8713A53656AB73FE0A4
1FF0CF0EF04B970560624C5FB493D18C010F63B36F82E891CD792033A4C61020
AEE5806164EF88263006FB9476CA95B6F655020E29F2D152FE27C365ACECAEFA
0848FE9981336F88E4A765EA3A4109DCB5123AF723FB09AF7344E7F30D862A4D
E0870FF37049A136C2DED27326EC057B18831672003EC72B2E56EB45C3923946
D3D8043B762D6450295A39A7FD55D42E3F52E0F94139888AB8C39976FB1EBEFE
82801D77AB7E1CFD2B3AA5C0B359FC8A6BE248F8D11F8257AD64B990686B02DF
84092303633740D9DA388DB0B4782BA6D48A490E3DD3191E5CAFDAEDA1CECB94
57731715B38DC1F1FC22CBEDF0B86E217F851DA5DAD89C947B55ACE369FD7700
03EDEFB7ED9A30C29F3B05E02E9C1A1E0A1122B8B242AEDDD1A07526169907F5
B58405CAE3E6943E8DB605DC4E725B6F3FA0E55F628B4D1403A7338820C7A1AC
A8519790EEFB3B1EF3AACA9FCD3EC60C72301B226B572B74915A92C876A81ABD
FAD9700261E8469642A2B07EB3EC9B0E950A2C6D6485159872E9AC2701867BC8
C460D96302CB3AC5952FA0754B91A6E2F4D15CB560D823787C5663C9AF091042
8FA9FF64FF73381F5F132DB0BC7279D8200F321BDB54A4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4ADB1A2C8B962924F38EBE33CB1F16324087EAA3272C163
41E5EBAB778735C9E716FE3E69CF08AC86548A8FD6D46574ADE5BED2698E34B2
39BE8B2CFC423086707AD2510CDFC90563DEC9250C603439C7AACAD3734C2E20
89A27762BAA58BE9EB710C0C4158958CD6707E3DE6C99E7B22C57E18750541D0
B1B75533C5A9A08B17CCEC0D2F881EC7256EE3FB416D8D4D75C7DB51C8299B14
00E1242CE5BE6A645C2653FE55D062B786BC3C6651B099DFA54C7F37D97D22AF
A04E1FB8508297F5603D8DA70065D910943A34F7D5F2090FB4AA42ED70C4FFB6
FAD3E1E05C7DDA076F4DEB286987618DE993F0A25D913D1BEFA7D862AA175758
D7B3F037498547F9469301F9501BD996B8DD12FA1DE3618681CAA89D622F697C
25D6D88CAE47E6567488A918261595698D840214079A4071287493CF60835B57
D688D8741907B81FC89E6EC8F51ACB4086198D629A477E3EC8E73003B3DB2F53
E9BF2BCB01902D091C548A66D0AF66A92C6EB0D261E7119F16443AA0477405EE
BE032480CF7F1F13EEE7801A392691139D11C2ED16576F8BBFF5741403E968E8
963F4DD00FB7163B7C6C104735889652656F9B7392569E015564370C355A8685
E326C5EE66B6F2B6411A3525E6273647BC89686FE7BC434EC0815C2A28FD4EAF
D39EDEF8B54FE04B0A3A2E265AC2F21881EE4A59FF5C5FA95025C49B0494DC27
78A20B98D3E011ADCB826685EDC4152693AB3544B900DA59472981C137D7CA5E
EDA4FA3059151C49017FF1B1FBA0F5D7D4B35D4E24AC4A11F6D76800F1F3A1B6
E08B071117DCD7E1D83FAE2FDECFF5AFC8ADB38BEDA28D35D73282D4F1F9A15C
4403B7C69C7DD0C608DE99FEE68796482566340746AE5C0A6C9F3D11C444DB6B
EC4CF3670414C2A7245444DD74DFBBA2160A52E231C267046C4EA27240E41504
D3E851A0665C3DFBCA2E2FB1CA1517AC15BBB51350FD0E33E4192AE782AA369A
7C7995E26F973ACA3B05B7DADA2CB10717CE204287D39071CBC8A1EAE07099B1
60644D09558606F7AB41B429CB8C7EA3A453EE32938E4BE25358EF911F3D9EF0
CAACCE749A367EA11AF2855C4E5CC16854206DBF1E480310DFDC28129CFDB213
971FC0A972E9779F14F869768E01D03FC32A8AD0A9ADE7D6D23E6D72146CE700
85AF42972E18BCE0B1200150409F719C0E772D0E2412CDA66BBBE41891668960
46189BD0022AD8C3A748065DEAE0179E764441F521AD13A806A43C860DBEC39B
74D1A9BE7AE7A4E85F8B9841A0D2E345A65ECFB3DB908178E378FE9A45080104
C0FF51BA0A02B850442E2925545DC5475B78E66335A5A10AD3DE6597361D93F9
C4C01284EE7C31FF7B7C36A44FFF84F31B245310039B2AD5A0383D5C5DB482AA
5509E8F710A12A7EC58868A24CF25CCED01FB41B09953EB28BEF26A9BEB575FE
A1D31F55640C022A4CD5542EE8B0DEB8A5C6C37319398E61400AE34200FA3D5E
F46CD24724325C49BA967CF7AAEBBB2E0FE021EB214F8D31C3BDFB5EFCCFEF49
C99521829E401C9D31DE34C2AAC6E784D1340718EFCF4DAC5E2D4974849C44E5
4264CED0D79F987D963C151F2743501B9E13CADDEA8DA147D4346FA84C5B9984
36C5D19EDE5A6C8C3C801ADF12B7BBDC04D4139164F806C2E97521322F0796EE
9C1410A066528E910F7C831D6C0825B38806CB2D9AF3D4C45954E24A01435EB1
3DA5E5FC8AFF883D60A4B95C76DEF8B3F549EC6DCF0A986F1257E5E0A4FB5A35
C31B3BB34D338420225037E682803D3939FF6EADC988C5BEE2728583A528AE2E
05E673547081443BE5798096AC84F1A966C1ADBC83A77ADAE0BAA608BC76196B
2C5EF8636FD2F62F754B2AC2BCDA8341B9D968E12CA4BBF6E2912AACCF492EA7
745D606BBE742DCD75D2FF5BDB67313F84D8AF0E0E1DD720C473CACB13FF06D9
D5D67B9F03F9DE09C64DFF16A42D02D497AA5E4455BCA304135EF238CC7ABC14
EBFA94064454BFC029AF0E4C9A9DC08629B0E154F3274F1618C2CA1DB83ACCA7
1246939E2627E030EDD5791F3F84667B0509C6B580C225F8B7037D317E0BB160
5D55D58691281B8513CAF8A57518423EA79781F131AE1A658EAFD111D81A5B65
3648711325D13463EE4F11188F927B6DFCF9F4DD83586D0D42325D8E8DB2650F
1CC9B82B395BDC54EEDF40D8CBDD6273C731045D0194803630492A8086D50773
D08E642D617D4006F04D6C87B00F038C6DA2EBA5B960E12C22E09B65C16F7AC2
00FD84E7AE1CF64C4138BE66D05950217B07C7C0188F8AAB2B6F6C7F5CB1415E
EF117469929D00654850EAEAF00329C51A7FD7BB09A4DB17457EE6CA3B395FE1
6B81F7A853FA02C611A4412B071528E93BB77A7E2147B10C937BADE436749550
5029B0C0E3B2CD3C8EDA12683A388FC28663D6B66DFA1B791A64F5D28ABE23EA
BC62D0376382226C92B9537D9FD986678605FEE708DA3124CE8CCDDEF62D8328
7A2B500CE31DD1EA6D3937F79603733A0D15C1F3FB3B8BBA1C21048F9C809483
E96DAC36AF5D47073E5DD0BF1A68521B8F7B81D350CB7725A6A07C8225EF5E3E
1AC27E551A64D2DD0B5E3C741724F1DA7A6032D6B8D41BFC0F2436087D938CC8
1F3174C4A004B141753CF197E0EE8E6673FCC8316AF6F5FC07B0CF9FD816D9A8
D69FF346B741DC11F7AC82F75FF19E49B9FD186FA0627DB07706AE6C09C60ACE
712142A054C248BA0CFAC588774D32735080B73E6F43123E9F6AAE0CDA18F2E8
FA29F548BE52A4C2F890E3B92F486727FF655D15CD8CFA0B6B552A8E6D97E91A
7BAEEADEF410EAC627BCD1086D35480067869AB16B59BD2376F3B342FD9F995C
40F09B1459B7D7881793AC5CFE383533ADED2C3BB538535C4195F565BDEDA3EB
884E520BB1B7214C880B2AADB3A33E0E67161E5E1BADA24EF5AB30B90A18D359
7946A0C2E25481DE82DC57B841C605E1F5CFD4477A44FBFEB1C1AD3DAF7916E1
8F9986304859D55E538F889F702337A6ACBBD17F6D6F63A1B4AAB7E36C74A7D3
A74220790CFCD0640A809E65F363398328952AD7CE42DB3D6FD50F43C2AE19EE
CFD32449CE33056C34B8B558D604BA4D519F713B8286AA06DF7F3A712A946963
B4FF2BC5E35020F2FD891820901A7F483E5804853F0AD17A717E70A7D79DE3F0
C472BEC5A03B44FDEE2ABE118C98137249255EB2ACC7B707C6009DF07FB21CBF
685C7A775F19DFF25A1641C1CD9FD9645325B47310AD9142748124E0EB3BA3D1
66926CA9CA0A0792E0C24D0FEC0B153850BE023DEFEC398A58C0357799D327C4
8443A4EC11A45AAE573408D88F1EDD49EF981AA0BFD391F40F7D877F18B8FAAB
F1A73B7C104AFD8406B7F6D7F466C35D3A4B36255D2743EAE95123C5EC1553C1
5C03CBD9105DCA0D65CE728191EB1E47C3572AB6D08BDC1E8AD37BDE2865D814
3F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD39C
FCD0E8A6224BFA03E8C6D73F4B8F480327701262285C527828E5E203F328AD95
5AB433987B229534C53061C3350047FB20E3887F514B5897FDF225685D18D679
9DC141B7F6830D6771F1A3CAE655CA173FA57D400530CA6FABDCCB4325478D0C
93AC7EAA9DF7605213DEAF94C7281D9AC68D884E15ACA3BA68034F897A2FFC1E
F76FA2A69CEE7F1E9543904F1773969F65553C3469FD85B2F2F89F0E547BFBFD
F62A3E47DAA4EAD6D47F0305CCDB297C320A48A3655FAFC810CEC6F6D68ADA4F
AB5DD7F61DB94072B0AB8F1ABF62A78E43E1578DEBD2D05109DEBBCEC64AC700
4C28C4F0A5E3A003423B9958C73D306B2B4A7C67A95F8B4E737992642BD3701D
39FFAD94524A7752560FE97B8E99A12AFCCC5044D989BCAEC863BD15CAB7CE63
0194962E4183C3838D9401260A743447DF953444B29D7CB004560D0685F73E87
72FDDAB87125F419F90D165EF1C2A06A9B7500C6AD185B4115777C6BF9C24D88
653589B431FB84E4DDB650C2F783594DE6123D3142FC5C99973AF211F2A2A05F
5A756073B85FEADA4823BC1467EF2FC0E98A2BB28E5933E2F6E50D3580C547C2
54FBBBDC95998DEF2EA825E3BB2AEEACC0F30841835121B7A7D7A973F2EF67F2
795E6DD8CF55B9823AB2B15ADC328CC3AC493DE8C2F022EBFA14A2976D8E3559
B5FEDADF4E23A07F6C0E1387DD54F5C8BD071C4E9A716737B6BA413F846A887B
D1B3B89EEF73565F3D0D2D1E40E4C2811D37C9029692DF8E94F6FE39474EE13A
EEE65EC0E77188C18435A2E7FFBA595F0C054E96CC44F56301F6CB86871B8015
310B7CCD19092E38926AF35776E2FB66555DD496AC6209BFD589B754D647D454
352893490101D5876BA691F65E7315F87A826B3A258926C0480E82B4D503F271
A9E25CDBDE8F162EFFD0DC69628214B0EAC54C0555DF2D2D3ADB4C7ABE81EE54
5B39C06FDFD98DB3405C900AA958F922C67A363426C03C53A0FF128A83A6FDDB
AE549A9D225505734F3063FAF5573603F11AED41ED4A22883CC403C4D9B3656E
83BF407D06A0FA251FB3743D393598678351E78A1EC2AD1A9046778EC83BE84F
7113FD6D52BEC23C21EC0C0FDE2375719E962ACA461D44508D578234BDC461D8
F78E6D002A0798629A1C766DDE16DCA52D49E43890022B9245B023385A6B9B23
468D55BCC4EE3500EC9AF91790671E766C422B547257A582C2BF34FB77D10765
2BD59E002C56B3DD423BE927B53F8F7743574546C2A9B76FA1A462A81BD4B483
467C71B9B90EA073F43ABA5F319D31A2E23ADE6D0B920076D736AE141331BE35
D1D5308C927BA3940B773F20E66140AC7A395E0A83ED0A777D023E226271C826
E5FF825E183994EC72A3F81C7EF13974D527CA6C4894CB5EE0F2F4254871A1E1
8C03B51112E20ACEF6C80D3CFAF3A7F0887B80F89660C0D86A22BE594113A00F
62F7A57B5D0A7A0E966156DEA6E2F7AAE463C634C4DE83FEFF8647DB37871241
EF7A195D4747C9FFDD581537610B95B5C381FA712230610C8D83F4C9F5CDE041
E156D38BE5D68D584464FF1B63899BB364EE8847B033D5A12CAD1DBC400A5FC2
1822F84466E3BD897F50A7A62C8A3F55568BA679FCCEF9C018C3D8273DA993B9
A1CF9577C010788BBB5873BAE98757D532FCD5AD3BC6C90DAFDF8EF8BBEF1B06
574A05E7686DF03F80B23E478C5ABCA26796BB61D3B582957E3442485CF2E497
BE8AE40E7F5F783714FB0688857FE979AC3BC155D6E5522515824D7775A671D8
841F75931986234E8877B1FFB1E836C00D46513F0358C4BC6CB30F4B7452B2C7
D408B8000E65C59170AE267FFB931B4DCCED013F404CCCD40E111F7C447902EE
F91132851ABE597E0B54F69AC8457AD087A193B7BA06547ABBA59788E84B4399
D4C62D85B43354FFB487FDEBB3F1C0268F2B21B0F1F1EE8F3F3021152941DBD1
298F498807A68BBA1FFC28AA0B2660C443D24320003930CD829CE05AD2C294C3
516F1EE4C13CAAC355E995A962D99275BC099FF4E7EF8C5F3A75B96D9841A56A
5D70CC93759D43F38C53D47AEDCC11143966F17A4F3C40D7244018F9B4B87908
8917D7537B547B77F81BAD98DC0FFE07538DB76444B121CB7EB20C399A307350
94CD32B569ECF4E579243F9CBAD2AD61952A0F1382E9F2913A745245CB6AA618
D8F66D65BAA10E95C3604EA86518AD9694D91F3C8C0C65FB6699EADFBEDBE6F4
3F03DE472E51A17BE5E15126B33BF5AF4B8A88952DBF20ED6CA129B7896CAFE2
8FC60385E14DF7376DEE358654767D53401F388FE2088B16659A780E0FDACD7E
601A6BF46D57B576A3AB64998A45B82544976B1983AD46C7FE256D4615B6069F
44ABBE7BB826A024CE819C9546A7C7BA03C39E2B59B5BAB7C622F974A3DE4FDD
6BD9E9151B4B704964E5695E4E519B8F99CE6966E85FD44E2590664FBDDC6FE2
646B6845D9D4835F7F3594AD213912ED437B23DE309A368F8B4178BC285232E0
F269DE794E62CB03C10D598937DE1940B10EE96CC9556C341C47892667B3ED73
A656A8DA173B6F99373E65B1F0E25EE6AF47BF5B6F6AD362A8DF6027B020024C
B98169C9FAF20B76D6CDD0DBA9D8CE6B7E92807415CC510ADEC7AFAEE3E54A00
B1CF2A5D42A59579136CAAA1B40AC36DD171BE4B505A6337292E544E9FDECA78
17AE2B293114B07A729355B1CA091FBF571CC2EDFCAABE8E6BE1F2BC739461D4
28AC334940722C429A47EB1707C89BE13AE1A7FB3ED742D1BCEB2428A67ACADC
778ED2784B3423154B7FC03D43F47C6F5057BDCDE19E8B67B5DC829278B1120A
3A5D37A68E5999015CE94555E5B57F59BF206737D1B3E9909285BBE76BCED02C
D8FB3EEC5C9422588D77916F5AD04893478E3A12E74AF46A23750F8B09959CF7
14F36997CDAE9CEE2E48929273F5BDE64010F443E8CFD42368663888593BEF30
CF1AC139CA000B293D12E5797D09B504F072B85E8E435CDFA28D40FCD6D9B321
855BDA608E23BD365208D22665E6F1A686C9002A805F8F3BBBA4BD19649A69BD
A6FC91AB730392CB6C88A4648A1A40235689929306EA0786DC6AE495A8724635
10543EFFE5DD50FFC2FCDAB714EF8384B246BE4FA7493A92539FFE7664A8A8D9
BF390323D7EBE4AD895425E4FB3315BEA6E2A5443A083B4EC4D94AD596FA6A92
2B662575F23B53B7C6B245AFE90258EAEA6A42BA3AC5B28DE4438375EDAE3E35
67D66FE5AADC72E98977914082D89337BB2B8EA2141B1DD5E631CD2052BCA560
E04852E7DBC79C2DC8561F805C0DA1E12724D9113F9D2C861D96D9F2E76DCB02
C1A252F0C02D7AB8278CE57865184F7B0295EA8423C7301B1B5518CC34C33D6D
E98769691F9CE7ADA0F5D6C1AB83B98945A1FAD01B4471A861F64C9FB4E23508
4327EC024E40A9EEF767E58F3111EDBB246DF8911317DE4C75D695826A465F27
914FB0F37723C0C4BFA4DFE3FD4AE99F5A8595EA87322138B5B60B749DF353AF
F7F47BDD61C91DA2DBEAC490F837C9AE0B707390C2CBC0C271B9B304F156053E
A484BFAAE1BEC4ECFEB38C54549BF4C27D2C9F792B3269F022B88A69051E420E
3781813A9E7F06D9AB28A20371FEF0C76496D80FBDE4CD2AFF544E59A633B552
0AD35DA95B7375C5140E3851D25DAA0F28C26DF07D1C079E556E3F7287CFEDD7
5B4E4105E7A667E1F13DE61F3DBA341DA9159F603E3F469FE2227D126A9AA1FD
2CEDAC61D7F882E6DFC27DC13B8E42E450DA982FF3AC62D4E943C60695FDEC7E
76941324E7E83F6542C7D49E060F1B93C0BC9CDC54C2FB1F6353EBDDC027D392
5BD32D89219A74609646C08C4908E723D17040EAD128DB37141ACA92AC6CA123
A7B79DE04D5E3E9E29E2C6B2A27D0F7DE207770C901BCF5FB93455A74C7E013A
C550C78230F9DE2484C14BB8B41BC7E2C78D6DE2F6067219784B5B33CDCF2F68
7F7E6410E86C95AE03AF069A47EC3367E8743EC5C2928D0DDCDBE0AB9794B396
16165B9F727253A9C41F534DB4222EDD152AD19C307118AC0086653521EA59D6
751B0635A7463C32A5DAF8C0F9634F3994DB2863DB4AFE3A84164E7DA8ED1557
A25DF0D4C547743FDD7A68BA6EADA8955D5540308E63E3D931CD7B29380EEC1C
415FE398C7CEFD524F132A4B8311EEEA625D749649B582C063512B58EAB426EF
147ADC198940323E44B6BE8B3EF7FE3444518A18EFED89C422523C686286180F
113767AE8A0232761307B3E6EC87FC7EEF343CDF76E88A6D39E72F39A81230BB
89139C80BA1AE3EBF6D067042F1120EC563DA5F7E81E23B770F5B44A552EAC21
59B49C1DB34B2567B50D0B0F2BAB32DD9E7FC252C5B0B6B2F652D5909461F774
D36EF27770625504B20F8596FCDCD85BDAB9EDEE5A57CEEDF7D8FFC0B6145060
658DF839B7D55F3F5B546FBE66063A676691C479ADD1090A3D9314EEBBBF1EA7
46C7D21AAFA482B4ADF28DB5C95801BD4CC597B395DFFBAE671D353DFB2E8BA3
A355DA7ACBFD7A6C0BDDB44A1151E2C85270D039344525248FE25E46E0DAE916
21917D15D5DB5E18FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F72BD616BE
E85BA2BB40F538F55C11D50F882B73913843DAD5466B76D18855CC16896F291C
895CE07D7B3AF4B113A66C73968C2409AAC3DD643E0EFE1857807BFA0B93A1E1
DCF6213C4F8D9EE3A45217B2259C4A076BF58F0FD7014F3B94C37DC02088BCC1
F92F03D458AF0CC5E2D1026332CD9A6594120C3CD743789E43599CCE5D82A15A
A12FDE3B3BF5253ABA1A852D2306815668F4E0338B263DA152F71DC4B9CD6924
C5E3561BDFF89136385827B7980C2FE0ACB1C786986575A8D085F14DE63891EE
B88FBC9E57392327D1AF92E79D1B156E50676ADB21574CDC21A4E33DF29F1F5E
6D722EE5B99CCC94A4CDB6B7996277C97EB092E8B221B7754CD04E4FC6B1E3DE
635362BE899C415584C1F2B9A35E846B6302B1D58E2DABB37541DF88049C1F1B
0E79AA9A24158569F13BCFEFBC700CF3DCC7585F89457C313DAFB530DB9A6A39
DB65E568DD3A8ADD05090D2AD4DE57087BE7632AC6D2E920AA7A5C51B37937F9
DF00DDE376041EF49EBDC17F49804D19359F53090C4C06B1E4AAF478EEE00BD6
616EA0A4161B9030CF28D8B9C63B532CDC1DDF7CA8856A61906BB7222DE42F65
F49426F8D8A3139B343350F39FFF6EFFBD6E8F0488FA7A54B4EACDD34922F691
B0A9B27B9B609BD451DE720661D09231264977259AD5538BD0836F18ED0DE7F0
1D9BD148F82796B4D62117091EA58204F935EB454FC0099D03A9B6B8C8C8DECF
18F74C45C985E6F9113472083B7B4E700546D293CC441AA916C8F02240634E21
A4E79A7C8F9062C2A193D4466870C3B0F9F47FFE4EF9561A25F70102C8091D0E
2B020A1FB4687EFA685543E21302A9E2117BCEDEC29E58FDFE545C48C4790C26
307CF36BE94165BF7F2982D00B96045A86A6B2AFCF21664A704661344F2B8EDE
6F137DC4E23576F354A66710A4674F99EDFA00C510884E0CB9F2392F12E2508F
95949634071E3405B3E415E941159D0CF1788B15868B905E535C3073F81D368B
45A06D7F66B2BD1787A42C2E1D24DE2121886300C638209434036A6376AC6E3F
7414E4A017F9FAE43F47C36E5544A6E5DB269F0EF8128B32C7F3555B2CCD2A39
70A8BCAA0C68E77FA5F235AE1BA3C6F3547FF24606651E5887FE8B21AD5DA476
17A27763AE228559558798FF83A81BF40BEDD8EA50D7EC6A3ECE8816AA5CEECE
787EDBF4141DAE221E1D8FC5B335912BDF3CF8FEC118F0FFB72C1BF45E4C743C
7D8A12A49A2458ECC23564F1F42EFD34E7811526561FEC6710495B9093FCA362
BC59A99570CC60DBED7850A953E92EFA65CE82B70C6B443BBB8BBEEE79EE107C
0BCB9928307ABC049C8004E21B98FB8BCAC549CEC434910D8AEAA207BEB7A8B2
27217A2576540591995AAF17B17F5FA6407325227ADB0B64C7CD051CEBD9E779
009AABA3309476E9AC9103B3B7F0FF5CFB75D6799E5286705C46394020E39A76
9D9235CF735AF3EFEF2398E0AB443A4F47906A09156C93994992C526DBF09530
B988DD82FFD4612011CDDE53EE22DE1EFB9A84EE5715D9521283139769F56B46
6B95CF4D412DF23AB6A0022D2AD2B24A76AB48A5F30BA8F41A4BC3C8794BD8F2
EFF6BE77ADAD22FF83BD861FCD07E1302D6A3AC105FF0DB8F37DE282B5B60629
84CA5731AC4034A3B9A916F2AFEDB91D2A74E12A72DA524B0F3ABBA5A8231299
055A2126698FDE18C678282C0ABF7EBFAA85F3F57B143F9A2CF7254D4E70B69F
D185D5DA60AA63051DD7BE7118FD358A0B67A82EB1697DCE7759EF3E2FBBC0EE
740CD58511C97E629FD0ED9D4987C1C3F19BB1DF75F985EB196E79CFAAEA1E34
B8938673AA6D760A80C38EFAE4126EF2DA8619D13D8F541EB2C9DD4ECE1D5C65
7039EC1F6A832D35BBFC367448EB7FE9D1349E90AB58CBFAA79D5C859ED9F071
67FA57B561F745A11BFF465A4EE5BC168C84D95D620CA9436FD812B5F29320A1
4013C540DC0B2C7702F09131A46903CBA5F9210FA657F157C5239A213A2BF53D
C4A68B4EF2356C9B86EA96584B0428E367EC94AC69C92E942696B50AC6238C56
A9BC0120CD61B56115A4207DEF9096D27D3D6FBF4C5DBEC3754928F3BBB73309
C530FD504D95C934300683E85A38F4D4F39348B96E5AFC3E8C5493E8FE4A649B
3CC2D218478F9305035385913BD6BFDBD608B29969CDF81CFC42CE221D0499E9
B05E06CC365C5E9822E8CDAA60A2AC5D166B03A6AE4FB1B6A9B4D2D1A48D45A4
287C67D4410060824D13F79652B119EE55207B3DC19A5BE3008F138B43CFEB4C
301E5596CCFA7519DBB19F4591331DB9B29A54F4F4B2D472C74909CC47C1675D
C6FB9ED59D30DFDBE349FB331AE9EA757854481CD1B3B8E5EBDC3484794B06B2
827C2455060A8B4F2DA480577C0B4AC0B1FF6CA041375A2F358180A3A207B2B3
31CD0C7DA48DB3A68D8348723DAF4A7688F8FA1276B030E8711E23929C999547
0C2ADA7DC66857AECBDE1D3BD3710A1EBBE7683C3D0E4E3E15E5CF2FF021CF6A
F4596330893FBB2E6309693644014E579BACFDB7DAF89C5D10CBC2237845E7C8
5DA2A15CA473EF99F82C6640486167706041DA5CBB392E27761E72DA24E4C108
C309E90A8C6DAB6DF85BF168DDA3BA4388A938211DE2D15D82E557B5534C3EA1
3716A197425EE120A17F7791554750299F7A6109C26A92E2E7B9924DCF25E9EA
F730DAAE9F50BA70DAE157F7BAFC5D05FE5E81A7EB8419C1A0139E11E84F9263
F88C680C68C026458DF297F410F90CA7DD41C4F4F494266536FCD49CE071C373
7E44B9E00D437F3DDCFAF43191B9BB29E2E9BD012ACAEAD854C136E1C0552DF0
7AE8D731C4FCB0803869718BD527D782098E0174672BEA355B7591EDD20DAF78
77F9B2740CD60A8AC9404B71839F98880E295766162B7BA50B9C4156A24084CE
CDF954E655F25B455E8E48A68D3B038886BE265200825E88046F4C6D9E7752F6
9281A72D0FDD5334B63F8D214124A76F939DC5A13A6CED42FC81FFD714DDFB62
8CF9E54476B4CBE263FD2774B5E40EEEE9FFD35C163CCCDD970AC391E7159E6B
01086F8190D6BBB0A0FCC5C70B67BB5867F447C05AFF7AFE7DC3807891D039AE
CEAC3F500A09579E61064D9BF3327B9AF9CAFBCA001B7C0328E4C7DB807BBDA6
B4AB740391B20163EEB3225514A76AC74C34163D2D5847814A3CBB0643561266
89404A98EF9CEDA26D78564910FE02851EEB65CF565A912A654FDBCD6C829A4A
06AE64852665BCA6B481C1830FFE95EEFFE432B5BA477D13141991A518561E2A
2917CF1B3F6191EE2C0AC8B595C0B2A908AA1E450C7E20E75C2CC65B006FA0F7
7A40E2302CA4D386A4149D5533482274E272A6B19B44B73455D293113BDC0CCF
64BA27965D2B38A83A3556360E4DA56184BE9677D3547C4F2765665237476AD0
FDC27CF78E392506AAF7A5C8A21E06037F69846481C99A068F7BF8682C988BBB
43DCF241423ABBB9FB8A7ED2012C5ED5A9F1AE7ED88340879B2EBF04DECC857D
0B15DB44241A363F1061FCCF54A0961752694125166DA1517D0B103312B17D16
087D670D7F854D5740F601C7D359654DE99E0AC88121A279AF959FC3BF0ED249
5879457E6D72A2A2F6210324DF3F0DDF8297DD30D76ACFA35F74CFC7CF7E3874
14E4A017F9FAE43F47C36E5544A79401BE32F96FEAC9DE382AEA0E3AFC6B2254
ABFB157C75D46652E807C0453067C105F79A954D8AFDBAC7A28815BD28393DF8
BF4306AF12BA45A11E88E61F04E09FB9CCBBF611F888480312792A775F2F6E42
D82C460F552019898D431C0106DED8EE779C6561659DE55298253B0C1B602289
353980885FE5EF054D5AE538348F53736896BD7CED4C3C5D21BE08BB792A9CC5
B74331B027B86937DCA1025FE5E10EC5E39BE6798B1C1B70125D110FA68B62DF
151719BCEC7407A248870FE02F00F8F1692EE0018D25CA3F74D5CD2DF30BF1DB
8A6971E1D1B66B2150EFD342E31E91520E8F904FF4D138518DD564140AAB4C96
D9161679BF791A6809164532D7CE3126709FF083B86971243E439AFE0E170A07
F82101F2CB5681E3E6A516B75BA0D62384F56B64ED2E391F08E5C6D966478C52
2E1DD50F50E67175C8EA5084E4FED0637D79FC8F79C31580A454DBE9C01C812B
0C32F4F09AE54B9C67CDBCE3F58B2A7D47DF9EB12279945703791E58CA7AD364
445E210EED010BB80EA0AEE1C117EA3E79D5ECB5C4F6FC227AA775DB3F1E05A2
048535A3660E391EBFA7E582B050E808696982BB33D446022A4F9B9AC1793F71
E79A58BEF6ED79F1E065F3449D4A7FC310108DC95F8A624BC961432C65ED578F
EC854A89C03B61AD69B87764A81AF067B6BA2032989C7E41FA568BA1FE13F9FD
B3FD8B52553EC9982ADD012374B67D02E99FBA47C206FAB3AE433B5CA204B0CA
084BB1D69B96D07F2D617ED8BE90E81563C7BD46858E4E416B248A6FE29A67DC
F4E1CBFCE603260A277B9F8995A435E9CE18B233FFC1BB425B1D5F66AA868C29
060EF08924329C470DA39B8EEC46215048146B5F31ED87C9121BDB9CED994238
C39531CDDC197EAC2414615F2F2B70129929360F17F612A62DB1068594DC152E
58830B38375EB881D56F270E8C77CDA90EC7FAD646EC17D2AB85D31EE3902D96
83ADA479FE08929D2CEF858CDA908B092A19321B7CF95EF16323FAA568836ECF
D4A813D15ACA8AA5CA60411CC615B9778A9B58A168969D0184288DD844E1185B
218228603A4BE4454CA625FF4A75F5B0323F51E8F9884F5B9A2F3F1394036A36
3889F9FF0A06FFBCD5AA583BA3071A842560444831F001EEBBAD4BBB0F2C2639
4C5103BA4718D58F167CB6741E06D4CE5E20E0433B714EAB7E6875A7F9320ABC
586A2763AAD673CED78130DDE420CFCDC65ED602F729B35F40CE459B572BE010
008C71804A8D2F25B580BFAB9F2D969CECE355580AE1AE9D5DBF74CEDC0D5D35
D8B99854C5011191AAA5699E58F253A769F6124346CDF97050E356F2216D58A2
856BEDB55DDBEFF4B5B4EC83A35F1581E47CD7DB9BE668A0AA4B92B0A965BEA3
1B1EC7035C2A626853C90F5CBFB165E9D98209EAC333EE21FB27553D9E68FD8E
40474E920F26C738D1E8782D670AFDCFCBEF6BD68AA64D6D9895C521330EEFE1
73B3C0C54AC0A20438F0184647BAE436A6B88161FEC445841CABA1D2A59B405B
86983B46952D7706ADAF1B24FEA02222D4B0EE989B48B94474A82812B071BB90
419EFA4512B1227E6D1174CC7D3D57B3E30F694A325DFD34412EFEAF16851032
3ECA1B860FE90D6D54704294478B4C661D4A4E9FA155F8AEC542E98425EDBF9A
F6881F745EC71298D454AD31AB998F5821BA85C02EF9384AF0562C85694CFBDD
BFDBCB94A0D0218D585F6675A734F2E4721E7B005214D30C9ED6B4B911356C25
38D5DABBD8DD0F6F9FD27FDA3B150A099993B56B85DDEE44849F4021CA494EF6
C2CE64BB429C542FF8A3260989D062FF7E5E2C57FA9762ABD83F4858D32AF74B
2783D95B7DBF3D2758D029FE6D1EC1336A154B5490DDDF2AA37261E130910A5D
E1AF58CAC3F06DD1F83FA50A223A4347FB11B98441AC98E80F6F1927389F1E87
6DE66192697B5D7EBBF108ACDA4E402DBB7F245AA757A20EFCD08915100EF594
38A73C41D92F04183451EFCAE6D09CC24352A1D9E2A844124B95A92E0FD95856
B048341F7631DB5EB2C1EE447A160AE2CF655A2941F1E48A71BFAC93DD4E92B6
1AC064BF43F064D1A2FE49A02A2E0B748362D746AB60D080D6169F4E074CE993
6241784D7319F46DE9F096EA448EEEC36752787F85EB045535E44A67A64985D1
E6ABEBBA650C441DC395590E4999A373A0A84B0E27ECE1919743A27D8C11967B
FB5DA67FA2F7EB98573B8A08AE977001F1364377E5F75E345F3D60D8C550B52C
227AB3A481B5B76ACD2D176FE7587CC217F9F56D90E28AEAEF8F7D549E21A431
3141CC867DD5980ED1DCC38CAB78C203C6D210C162942911B3230B8D462CB20C
910A5D2A5099C0FF489438BE89DA50BFAC7999BE4A25DC2A3A8C82E274A0A0FC
2BC1A334AEDA418BB9093628FFA149D22D559BAD27D3C5652733D5F831D38B77
816ACB2273F914CD280E2C9F988666835FEEC3F420D0FB620D2E1CE8EB7069C9
E67E96EA825EBBA92EC6210B4F161B07C4F99518B09E9F6D1B78E72E7E52019E
E8FC129A8F14041001D41BF85A2BADAAFE357B446B13C8880EF56F2FADC1B1AC
7AAE6732DAC6E6E6F989D279899F037DAB60169F1FE7A3D115E94D83126336DC
B8867A795FA031A60EC505D212687C98FD2AC5B3D2E0EEE24F96DF4454FFC16B
A0900825A18A3DC8F5CE8472C0F6AC2DA72BD9F6B3E522663B82E2544A6FECEF
D3D8A2B222301FD1727F24D0963C04EDD832CE3696753BE91995CD7EB3BE940A
6ADF99ECFCC4461B595C70BC08D30416E6BA194CA9D675D8D40163288D69FFBA
0F8D78760DEF4C5AD393C6359DB50233BD33443FEED6598CEA99A13F65908944
C5ED28B61E667F4E8AB8DB64EF08CB2EAAFED53C1E1C3E7614F8DC4749DC919D
6C50524CDA3E22965E2FA5AD7D2702A00BADCC3DC3ED4030BF80B286AB1CCC12
AD3BF1DBFDC4FCD4B1697443A99FFA4491F2B85D31FA193F8C9C669E392D1513
1D86F9DBD898FE9EEAB4E3C8B1BB31F08705723A5D49D049F420266F034B72EE
3B707AF9490B8E3B0E998FC75FAB18CB9C2773ABC9DD5B1A5F83AD8F71FB9A73
E7AC4FCB078BB1A75AB425EA09AD8583C80926F40AAA23EC01EA99F5CCC32D1F
A8E11013102068B82912BE0F0FAB91E7C13E732A0D8600186A7C0EF835DDA52E
0210B9848E6FB91C81497FC1AA96D6B48174EA340CDF22BCACAC6B2846EE2005
39F53F833F07277E9BA6BE1F5F18A3035F3B493A5A1D81CC439AD51CA0581905
7D48C64C19A374D2E21792BC0CBEF817DCE1BA447D22701F493A3471A97B87D1
E05B7A9A4375CEB76B0F1D1F3E4A90F8699D221982DDB791FBD3D0C08B8C7656
7486BAB7D34EF99AD642B738312FC6F300093EBC7664DECFA7CFB6D6CBAFB766
754C0E8934F9AB738930EB70BC0AAD9E14CF669C7B38CB2D16EE53FCC59444A3
FDDE2A67924B43BF6CE43C9140AA5F8FE895E4093068661F6EA85B39BAC8237A
FCE135D34AF379A396158E522ED5AD63CDF2CEFC13E42F1CA2764FC4EBA1EE24
B26919751D8BDDE1474DDB7E7634A2C093C92BAC49BFBA00A10CA0B4AA101F7E
D5E4ECF1BAE72C82F807CEE69B5523207FEE5CD6F0A4C535708D4AF7A08C723C
249E24051109D3D8750A6E07486D39DD38FEC1C6FA2682FB89B797E65AB6B72B
D872061B3852B74B006793BC90615DC552B40BCDE997DA7C363799EB64760250
2B8190281BA5F0AE18CBBA75207C66D0B692FE7C9CEED9A54EE6607CA151F8C7
006D4E0072FCB2A68715855633AFE1BC19A5F2E53D9CAF6894363B2114294E66
864446DAA5CE25911212825976EA2AE88735DBF65744CC3CEAC5D2D7334976E4
F27B786A58AE7C2F43D985874AB8A3F2044DBD4B92430EE28562EB1F9C2ED760
715F3F49B5B89CE4D14F9AD84E8A8A10D61824D760F2B86372EC36424D8A7581
AB39755C86C0382E7D2547C9B47869DA6F735671291F976904A6DA48E5ED3A2B
A43BA9064D59C171AE87BB22E47620097B9D4E483227880E1DA76448326A47FC
D6200A4EFEB57124373543A2C18439DB2227247B30A41C72B882BCA98A4551A9
71DCF562769FC5E4767C4CE91F8896FC0721CD9E84D94956A1404882E6A29731
FFADE7B18701D09B9E17775AD6E354CFF3438ED333943AD2393B0FFD4708478A
C27B6FD4408B431F25D5F41D40017FE84BCDB8C78475BFECEDE7D1DF461391CC
7DF1E7A0F0969A970C8F39D2BEE6775B54B0809395BB75965BEF0DF3ED91C8E6
9DFEFACE082A6538D5C87996B8FE6885F58BC7A3B3EA9E297F20A3C485FBF1A1
76F13C686D476FA641461812BD7DF192BD8AB78CBC8785592A35C7B9EFFD64EA
B6E81889AF69B8461F6E708EAF63CE5DD344B194C5443FBD553C77292C431413
E660A1ABCBB982BB4AEF8F61627487113ED4682C5B84F61C5C89869239CCA113
43E5403003C28CF53047A07DC8A48FD12C2F3C8DA35B68882F9207ED34F28DFB
622BEE85BFEF35A03C0A5D479400C1A59CEF4C8770D3E62C7EEA9759D337AD45
D33CBD777172914CA4189749A7CD57BCB8962A3DE9841E223D2F7CD2B2794B81
74696C2EA075C90D0E3CE5AA62DBC541A2A1BFF3A69A559B8DA20ED2E48BE6E9
D96C65953C1E77EDAAE7CC451D5CFB0E2DFA19F1CB9191A189CC7808E43D0B4B
26CFBA27E50A9165B7E1FE61C37C703807DEDED9F3E652BAFB0E887C61BB1704
45031722C9D9FEE18B1F0ABC7759A46F227FE6A35C9973D52EE04227945AE439
0FD820A2B455642CFD4D60D97DA1639634067BDE127CE3BF44B567263F91C9FB
FE56143AC03A0FD1809202444C7DA9C643C351C8DAA9ECBAD801177B0EFA572A
BF4EE6F29D00C325FBC9DC7BE923FF89D32454D66F1BB52E8328A8A65998690B
C49E7593DD361913862AA1B6C4C813DC72D7DDD34A38A4C0072EB99C697C5D32
A76F09E0E82E349CACE340E3F3A5286D9001E36EBB07B4E801A93D7789F3989A
D2A8D685A31751627D6945600B5249809BCABF704B42BA445B64C96E2132B775
84EFBD5167F9424203DE9841441F66F5F4627B0C55929E5457A9695C0C33748E
56852C334E88EA7F9A834D6711F5A0AAE17332CA0792786C6D765A7EFB47CC10
8F43BEFDBE30ED3C858ABDA31B5AFE168295FB03B54BE49758E3E32D7CA0EE69
430774384E655A44373B10302635F317806A6165D0FF28015F87A20047378023
BF6AC2348B46BB51EEAE59B22403C1F1B08901EBE7607A0A86C523C36EE4210B
5A4E6FC7D598B54BF11E1574CAAAE9B81F406A782BD5F596AFACEB988E8CAD31
55DD99C1A7B81686E2287877395E2042F3CB0336F236FFFFC8B73EA648F68B42
90B1379C9CD58E2DCE17B6417B7A8761ED7EEC38B12D7D9143E2AA72CCD26343
625192525227FC10F9ABEB8628D08477FF62050E8176A3CB035A9EA5EEF762F0
F0971AB0EF4E69644B21DEF42A0ACB7358080BC328EB73F68508290E2C6D80A6
2E6B6172D31023A0BC0757BB42129870AF8513BE8546D6D74A06F0DE3B9142A3
27FCC686B1C2D2AAF0C181A0D4962CE85CCDD733D64234EDA177CECFFD4C7EF6
AE599E1FA9115273DFBA087192C43DD7AD55ED12CF77B112A9D3227A066E97E5
208AEA9072BC1860374B4B7E9DACC76484914ED8AD35FF380302029221CDC023
0066E0E2F5DF1192C47E4E252129D5094C5D3F6357B54389C5E44E2817807494
BDA2645D0FDE084C9BFD2AE20A0FB0174DCAF6823A371CAFF56A1A69418C6D21
1148FEFC69658175AB69C72C13AC5E8C97D466450EDBF29A949E07B104540071
B4E0491150D2D20EB514ABD40841A59BDEF5C4FAD266BA571E6A0D9FD4CE0467
455FCC56CFEBE49AEA0AE4A8AA4FBE15496D8BFFA188895124D358DD38B78BD8
CE250270D7AD2FB95107080515B0D326AAD87931C3BC58EC1D57AFA2A7BC45C5
42FA415CE759BEC2AB09D974893D31D9C811435EDE3E169ABE2E3EBC8C358F3E
21F6CB8E20B84A2DF68E6269F92030620F21A35667DC62050071731B1C866536
E456C00A92BAD2DD31D36979C599C8D94DE0DD8F43CC580213BEB59D15D30B72
92FD83B6E3B016A2BEB33776CC55ABFB0C4E0BFAB009D0247C1E8EBD5FB4FE7B
7ACA217066183B5069034F3E27083364631A26238CFB0D43D16E0D780DA825D8
6D1FBFF3E7A1FB58120EE54594A5B19027A772817D2C7C1005F0B0744B63CBA7
B6B30778E45FFA7E9DB95E979BF04EA7305DCAE2F40C9BA614F4E7F006251316
B19BD2277D444C30D794C7088D779E2864D753B991AA1BEBCC6CCEA8C0E333B2
FC94479442B7B6B6D40205A7BD629D842D0AEEE043691726E9540E67AE8DE69E
F3465282984A233AF63ACFEAA967B5067DDFF46403F24D949CC892D1A016A094
FE74C7773F68111CE4A2C0DA5116533BAE1B750318362BF85D9A4FED0550257A
A29E412F82723A5B16FAEA0A235897E57D9FA6F817BDF56BD36D2CE56588D1C0
55CD5FD63EB45C70E7FCA7042B95790BA05E28DCB5D0BBF13B545BF86C23FC4A
FC95FF3B342958B86FD59E23BF72280F596922A30C9B3C0E2B693D67D4F7E50F
7F654438D5DB7890C5E81EC99D9957A97B2ADF65B2FD35BED28C1ED2FAD25E6A
D034267749E9110791858EFC254E9FA45E0E22315A89BBD80836BB502AB141AE
8D72584A09E8A09B78D3FAC0930B2DF4A7907C5130982E6D29BDD2AEA2018FB9
80B95A2F77EC3E049D527B3C51560442A175D180D028B131DD2269E52F330B4B
90012856AB64AD55E290345F904C2CBF2933A9845B7D3248FAEF76133191408B
54529B239666807FADB88B25F3AFDAF3AB33B57DF325DC3508B3B74BA12A3994
5F21C82E85BC005D951BFA05D61174CE2CBC6F62403909B40A725F1E400A69AA
020F7063B89B30948203C4F0EBA2C58BA69148978E98C381556B32D9C378B348
CE8743825823F0F0B6F59F3C4DC2097CCF7B2FC2F789BC49E4AB223FC8390B3E
E2F3B97181AEDC88F1D875E5523F3D2AFF386938E8834B9A083C4CC2401ED331
A25863D89A01934A2E2DBC9B1260E53894AE7F8B784A1BCB0B68C2597412328C
DFF5B444805FEF28D09F221BF92274935BB957A04923553B0AD2C6EF7BB2BF10
018ABF47D2333F74D1FA15DD54238F5165172BE3714D8B9BF4464241F36F3F31
A939C76E5654FCF1C9C1D44B9F12E72758D0B2ACC210504ACFF8CCC08D7A8291
8E1DF9E3BF1A5F6E8EE19A1375589211F8A9365F5F23FD722C452AAE08844E0C
8FAC8DBFABB91D54CC819680322EAB72E1250A76097931FCD429CF844F9CD60D
E04863F47F7A3607969ED337532EAE18188849E708A4E69F2C5A3E08AAD4A9BB
C69A00C38681B7286ABD0F89BDB9C4650AEA303ACE9874B1C728EF59139A10E0
55CF9C7B771C905B7439EEE46C4B2BAEF512224950615DA2039D4EB3B18C87BC
21D8052B3E13C4810125E03F6EB91BA510563A49CC3E4BAA3F03471044E62C2B
391F092EC6189F1CC15CFF852770A00C8A1B67151184DB5FA0B27E7CE3787FED
70B0431D3187F86F7CFD366BF9B140E1940E13D7443EFCEED61611CE78074BFF
0EAD54D62A75A2E230F9A250F75CC789384B8AE3718B9A9FAAF727F2D8286177
EE27BAD040C661B384EB8BFAA3D4CB5E17327404D6A835514F62BD91BB8F4240
C494B0AFA172887001E098FA34E89ABAA75739DAC6861F721498E8C8A4A3E8E2
6D13A1216F8C3EE96335418917CA799C8D8FC9A9C35E34AFA5AFC8EACFFDE192
C662FED214628D4486E8C8BBA7D6FF2A4C9A8F6E92C08345290742D5CB398D4D
CA2E8F6F7CF7EBB7EF4DF935F68A9237EF9B5A934DCEA11F1C6F941BBBA29A0C
76ACDD2F53979ED996BE9EA4923B439A372BEE2D4BD98BE9C3890B9188D237BE
DC82473903848E2F26B7E67966B6E3C3D487B82C532773F2D5A4CD245FB98EF5
E24C3D53670837096AC727A27E6B5CA2171CB2DFE252687536B17848D2AF2B57
82B8B6E26090B97C3F39DDC07C5FD3D2F1B1EC95FA761422D7F27E4033FEA246
83F2370B1ABFB841B44E5800A7AAE8E77BAF0AD4F22E8B3A5E0490DC2123B0A5
1F0F464405DF6022DB2564D3A29F0A1583852AA0BEF7B0EC668F90673272FE30
F77D7DFE15479CFD3C1576DDDF728EE2486257990A404ADCA6521B7D63E916F0
14D12AF493631163EEF359FAAECD77BB5FB5D67F039535EC827B33C8B66CE3DD
9BBCD2A8DDE21B0F5152B5834C6F6EE6D60543B6131E8473489424BC515C2C5C
64F6D2BE127F108D2BD5CC5C46F07BB8A4E027FC90D0652EAB2276195F1C8AB1
64BE9E46AE5F5E9B7B21BD379A509B8FDD86FD770249BDAAD5A1A0FD8B9E40B8
F416B1462F10170777EB815785E7359F63A2F854F7D07AEC8C1297B4EE8FC61F
84A9AEEDFEAFD717C2E56295A16EB9E96E0D0FB7497D5689FC067E68DBE14674
56DED05EDB2633E428D629840DCFC8FBC051E8D31E948BB7C470454E96B95E30
5320B7D6A6E8F4514940B0C1F0E8DDB0C79780B0213B7AF719EB4444EBBAB0EB
C2D6DE65D532719D8535FDF10204FB67458F8384509358FC5644985A00C90BB5
96D1789126D8D34968C835A4AA6703116684488F51771A9545BF8BD36BB3DE6F
3482C0980B3FDA762E3C734DDA0B0C97464E8ED2975F68D31F207E1DB47B800A
53AAE13D9A8D6890F4E2E9F09632FDA612B34B33A9A9C05E11BA428CD87225C7
FF28FDCD4FB898A052A0B1A21ACD9A0641CC2097EFFB9F6D14FC983E99D27F91
36D98FA09F0B2DE2A718D0D606FD8A730D9562A26DF2ABE7DE40AF34CCB7FB72
B8DC2A59B6B320A48961E67D13F8AAE8039F64ECC1D1E95F58750027DCD93AC5
B9DD92EEEFC715C97E69EF303A13EB7AEC832387C333BC7CA65A2182C5F300A9
9A0193E7F647AB0BC0314551FD040AB5AA80C2E4A57A2777B0CBA5B8965C7E4A
0CF91F7087EE721F64CA0E33B511878F1E0C823026BD0063C5CD126C3761032C
E9251FDF6D1AB213C049C86B331FC51FB3188423BE5044887C36D0E947C20DBB
E7B8C8E72B553EEE1F08FAFC170B8E9F68501364CCA154BF40B6B95315298DCD
B6DCAC41DFAECBB048428F7BBAA66FDD4CA7806664841207960C9BA568929917
FC5EF28FA54AE91A04DAB403FFFD737FAE1E51E86B7EBE0D2D276EC42CD4C9AD
C398567ED09098815CDCB0DAC62D8D7C74AA57E96DAAB088E2E40D02A1DEBAEE
DEFD1D52500F54F0D81B873BB2862DE156CE0C9013DAD8E90216B044810A668F
1D6928EDE4B826B245DDDC2F0A01F9BFDC198EC6ACD782D6E941BE2D323B9589
0D8856225B24AB63CEC43AE22066F5C300191B73D3FC716886B719F64D95F23F
4222061873543CC133A48BF5DF304EDAEEF3E5DC339308F2383B073AE1757333
A6A8A42189F9726DCD476D7FDB24D5F390F6DE3CAB3ECED83E255B5E95EF13A5
15730B5FC898BFA5508472F2A998F06B021F85A111011315EA2FE938064DC577
CFD755B7431B9A26183AAD77929E5FC822253FBB2374655A997EF37893D6360C
E23988A71C7AB4D7513E078113A91C7DC9B35825F05164FAD23492E7E980B2C4
3698F25DC39BF22096860C1BEEF6BC819027F403EBA7B8618C5CEE544EA7E773
049D63C65BD60F8EA4F783BAA7F219619B7ABA064C258397CD00ED38B1C0A9B7
8742B2AF3D1CF04E66B63344BB683C5D999C816F82E86695B33EF4863465BC0E
EDB21243F5C02A9ECFF0203EEE7874108A45E55DC74CA6A2235A2162B4332B0F
7F5E84C46AF226238AAB6FD5BBAD42B63FD021668D1F116AD1607E7A16787CE2
580AA299FE787337D0823863644F73D07BD38179068FD06D941921E1D1ABE5CB
8595A21CF4A0DEF219951E8A605B61BFEC30F4A61B93550E64D5B4D761CCE2A8
3B0F0F477DC7EDAAC00BED39927D57B7C1D7FBE485B27A77FE72AFDFF9068116
9A88E0C8C0AF929995A66CC744D9947BC5A800F9DA6B7BAF861C6739EDC5687F
15C4C86957018D428DF6244A1FB6A99122BBB6FE11657150619C0C7A674CA870
A8DC75BFF945955CC723571F3B782893E1631735FC7FEF8384AEA8C227331D7E
C35EF6EFC93636BC1482F58C6A6A80494F02A74D0266A7452A690BF0D521932F
48137E381FFF4DCA857A5887FDD29746A7C7BA03C39E2BA57B9E624CFE79A591
2541CB188E87A60E056A386DB9154D7BDD14B43CC8B17A113E5C3DB9C5900B83
F3DBF002D199894AD8E0D03BBDC1436C60524515EECF394C783E37F05CD29556
27A823F2B82A16026F923E80C0D885726EFAF9C637A446BCC35B1A54F8814647
792B43A639CC8C405824D87FE11C74F2C99B94C9CB935054E17CDC097FC0929D
48D5CC73D10AD1EC2A5557AAFCCF2EC0B0D8E030667F4672CABDFB814200DB12
BCEE39186E1C4FA2A64C21BEAD5FD7C1F5120823504DFB34D8FA1FE6B5C9AD96
FDC3EB2E6AD3AA17B1FD8F15F9063C39C8540DB2BD058A8BE1D7E5EAF6B977FD
1DCB5EFC2B60537995FDF06E846123FF48E98D29500AAE888596D0262AB62524
9432DC761243EEC698024006E446612825DAA2F91781C807A35E507C455321AE
FBA84C9BC4093E2151EA61F538857EE8B69E745379D6645D0908A9F5DE65F7AE
355C2A57257FFD163D514298FA7C892D566AC886D9C2D17F9C23C68E2027C140
65D013427D282B07510C3A6A9597B5C69D8D87145939C9A1AD845676304587BC
D57E944930DC45B1C27EA8D55887087EB16A7C45B1B3B47E05ADEF48DF03A360
CC9896FD453CF3AF2307B191F79C5C6F070D7E877AD1239DD8F4C884C4FCFF3A
E39EBA1AF456752CA351B6FF16ED75C3B58C7B93A5357D715FFA30FEBAC71556
11C1886BE23AA1833D2A527FC19F8695A97E7AB80C1F34416B47F2E2057457A2
BAF74DA634A429F9D0B47337CD1A13CFF149F643EC607E69394CA5141B1DD5E6
31C9D86F27BB12FF9B399DB1AF4BA9A5705502F55E4CCF70B3777DBCD638B568
5BC4904F45DCF443C4C17FF6E0A084726948AD4434F8B41FD8FB187D24F232C6
D89B727E58A49A5457C0CC70B58A5018F201304D0437CFC4AA00599D972EC5B3
89955A931A37C06AD33548F4F4AC1883082CFA530EDC774B5CF4BB6A1F73F9FA
72DABD6F0BE78ED95FB886582579C4C79A9FA5263AD720200C8B457845174BC1
FCD6B3EFF627203630AF2BD897DB3C7DD9D4F9F3FDDA92FFFCF7B2D6744C0F0A
489FCA954A0C135ADF0E97ABAC30EE74060BE1BCD51B500B94E95873D7CB65F7
55187F54782429A21E2A52099C6E75778A369CE40B142405E488455F8ADDB697
C8B6DFF4D981D110DE4AC3DC28E91024628606990F351B693AA5C19CFF1B05C9
204E2B59DCC609B8A789F04903E9AA9BF36BEBDF7E5A956E6EC88179C4E907EE
C3F977294527783F5702EABDF55959CA0E6DAB56B5158725FCE4CB18FC324E91
CCAE698A3A58917D92EF172AC0585A7AC24DE6DBB31B434374FEC409139F56AC
1516307D6EC2E0324ECC3E9CDDC43D48E74564D694AF5D56545E1A973880806D
97493A2867FF5C0D2087231C485E592922CB2907B5D085EB314B8BDFBAE69307
301C2ECF27D589459F860F97BA62BABCE86CF3127088FE3ADCC52CDCADA0D9E7
8E54D2667ADE6068986D1E79CC4B29278F1C4AB640AE74B8D924E48E8EEA7BAB
1F7EF9D23EC3734C56B69E963C1BF9B8CE006B701C9523B5B9B145BA1A5C1D21
F6A8A812C1CC027C7FEA0A1B3AF89372E088F3EB03C5E792589DC8B9172A0752
D4E0EF8B8C6329988C8A5BF77DE0552ADA3E14BC0B82F2CC37AE635B87678508
25915ACFCE13DBBF0464D7FAF3275BCD65869D138ACD1D76B0AAC17CCAD6353F
06651B9D5B09C17883D786E3F153EEC4FDC93D0FEEC724C9AFC18168AE7D0CA2
EA9DB597CBFAA9A695DB4862EDD2CE09319475804FABE7344622CF8D7EAED623
67A97D15EF20362AF7068A8BBAFE34996E87AE9B53C0B8009CCFE62C17E001C9
6631A67F363E157B01E8B11BB02FB00762A522A3DF2BD021C38DCF447A19D91B
8CC30481B5C49B6ACB4DC451F9C1EF630329667BDB2B79A6C97B54B8BFE82A1E
6D7F3FE94AF1CC4E77F6BBDC352DDD6E3A3EE287FF27B773081AD46114122021
278E0FB68CB9794B2D86CA89B74F5230BEDF9D4CE1062912E8AD848E38C44DD6
49CABF39201E08D3EA86B95B90559A5E2D64208061D6521E51713334125BE0B9
D487BE6EDD46E091C9AE2497C5B72BCC0B5200D57FEEC9C90E35C095F40E916A
2823C13CEEEB2FD41EA2039284D0D60B3EC587C30D3C96BFF9077D1F4C89C522
B27B9A66BDA5717AEF7388F7F8E97841196AA0F6F9D726CB2CD81B49A9F47C12
FF76284D3B001E88016D00286C69375E9E0B1B272B51BB1829FEDEA7AB6E3933
B52BFD3C100E7A6575A23AAE2C6AA01133671DEAB7385BF9D7A3740D91482634
6D927E261AC6AA652F990CAA745D06FF33E0FFB2975D65530A86B62E15E2BCC2
895CF645F39F52077A8589EF54E9940E8D4CAD60210E3F6247721CA641EF5203
F3FFC1C5D67EE73F5B8935EFBB627B8550337127C6068B9C7924D0786E9D1310
1CAE8319DA46F6E819C9E98F8A683DB746583FD292E8DBDCEADAE5A18C9E7960
1329FA269C8553905A0D8305569F1DCABF4689E4A980A46CC091C702CDBC7953
617B4387EE3FBB6B6E224ABA2AF7ED88A881B9FBDADDE450B187A750317F8369
9FDA641FBD4D0508C194452EC0E048D8C68F2FF41CF37B70C8EAA905F48617BC
6207F1CA74F0F833DCEBB26C1D669783646AAB32383B8D19895E14241FB8D644
EE694CC15FA795450113601682FCD88594B5A87B2F69433D076951712C354B1E
B67BCB316AE98921E493A2689450EB387AFAAB7294AFDC14F354528E6E2C07E9
AD472351050F942D4323A5ED11DB9EC64969F073BEE1699F55E90CB69B74A7E9
FD538C4D2EFBE065E4DEA92FD943B1D0E285A0D17EF40F2A2816F50FE06517EB
BC51E3043EECAF6EF101368F7D58450F1FF3FECBDC963E902CCC152B91C8A46C
BB68C005025A80BA152D4448D4AD4CCE3C544A40F6387E331E218D5FD5241B0C
C879140D01A9793DCE9AA5B2575C0D4B32BE31D2E68234ABE04025281B0F4037
A41796228517FEC2BFB1745323CAB86715E2BF7BADF844AE71310DB9B2DD514E
EDC7E235C3DD55C62FA36A90BC3ABECA06E09D438052E27B75787AE81EA98B34
D8DAEBF8AC451D1D0B2A6BD7F2CF2AB594187E3FDF4536A08C3D1B0A22131DB0
4E222FA8EF0F6A31B9820C7AAF7C790A02A428C8D316ED13DF03C997AB2C1740
FFFE5F6DDF7C021C712608F99A106576C6BE387EFD3245FF3D6A1953DECD716E
472C288EDF4FA4F7433C35669C2640A60C37BF6F50E4720F72167FF205422DB8
EB91B821CBFD12998AA3A784B420FC3061BE85570ADC124454CDAC08F358AC5B
CF8A63BB0C88D07D752D932CD269D97708E1A680D26F788B049CCD0F29EAD709
D574766075BA04259AAC658551DA940B4655CFDC6D08C60DFA1D9FDB3B90EFAE
44EAFF49757E51204180C42025F12147C5C8D5E39937B03356D453D819AB0EEB
101450CA8349B2329C5A790B7E639F78BA7BAAA5F58EF9F13EEBD103E038CAC4
30E4350E4C3DC89D789251FC44E4C3F57527B6B20F3D92C93AF3612FAEB523A3
81CD43CA49CBA47F93F0201678944115499724D8B9052DD011A2BC7BEE0C2D68
70958365CF2688AD5470018A3BD715CD3DEE77F3538ABB1119F13CDF297EBD29
C3DD1F6263C96FC51C30FFEDCECDFA28A951DD5211ACD684ED3D392413502B1F
128D874C1D119798EBB0E11BE341F6D97CCC93BE12FC8512AC127BBE4EDDF8E7
C72AB5665D45BFF2E9B1B35A543CC498090880E91F089589E1DF8A67CD805EC5
5121F8CE8EAD438FC35C43DE0D5A4FF564A33B23CF29D9BB38FF301A2F5D1B9C
D80DAF069CF7C4394E3DD135E2B1C662788CB02E12CFFC2AF1BA8E939118F66C
00C5A8FE4A6821285F5DD04D4FE80609CEB4D9A67A08EC8CC371BB1ED638E8FD
890D3BE0330D50E3724747AB2B7A109BDDF549A7C564BF22F7B887061534474B
6B70426ACAB0D723CCF35E37FC3ECA0714EDBE66357848E66AA5C67CDE427A1F
1E3DA8EEC5B53AD9951B7DE759C6BC99788940F8ECCB6AF7ACD21613127DEE57
127E8A082E21E9D5B691C7BFCFFF851B3DA54CC0C018A5E35267223F46AB148E
74D8D1B986B2EBAE550091BDE794C4D01782E74D45DD4CA07CBFC6FE8A4E5899
E1B64E12585CCEF3EEE9471BBA50C96111F5A750A4D15658692791F1F014C1E7
9FE90A90550341BB45FBE586BE8BBFE8B5F5379D8FCF35704E98A3DE3A2521D6
87B8FD41367123CFEE10E02CC61C6E632B040B25E68D92C8E734475DD6B32B36
D859464EA1B4647F0BB124366EC9F8A42FD2C09307A195D430752CDDB8CD0B04
B78336312B017E4F4FC6BADAEB75118D4690A28A19150A02CA19EBDF74EC146B
DEFCF1B465CFF08E72DFFCD2221C013D2FDB2CB1D0D6B9962F07846D7D4B9CD6
0949BB6F67A7169D6AC8AA9D5A0123FC09F2A23D9835CAC736F607207AC57329
1E6E519EA8D6F03661719C67527EB25CCD9328283C9F0A171A775985BD6420F6
F968B2F6AE2133A32FD0C3EBBC3CE2DB0D5F9309712901FD044F3AAB455EB7D8
5772D6243EC2BFB11ABC810529D06C3726C6B9C03E26CAB4684ED3C6EC987270
6B290B8C9EA925AFED9C9A2CBEDBDF024529759D08BAAA7523628FE96F7F0362
A7A748A63C6E84B0E0817E08C6A760677CFAF1D482656CB75CF243EEB19ADF78
BA585CF8613E31AF65E3DDB4AEA10E8E04BE457F9F48E095AAAFF80BDE1F354A
42DDB04462598DF203D1D3149AD3EA31C5C24F873E1C056D39AF48EB911E40FF
B4744ACCF1C695880E6A85D98B382A58F1019B457B832A8000B83A849EB440CC
717492A28720AA4043D3256B939B48F07A9C883103BD3D0C63400FC6E144DE4B
3C6620EA882A24362888BEE48E1A5253E66FF0D7E382EB33B0F33725F23D575D
B8C764336990C6DD9CFF210FBAE9671F0134F4E7D5C154B52E173D48667108D6
C54113887092366B1BA1560942A068A03530BC59482D7A7656DC77164C5F6B43
342A87FF745965DC919A12B63D7739F49F79532CB300479063EDF342183754AE
0BA1503470F4EE5D5BAE73131662CFFF5E427A5F5DBB56FE1FCD1B6B32CEBA6D
7B35526797A8C94EA0723B306240918665CEC76A8D01486E55880DF02409AC7D
972FB083250A3D813AA2943C05C912B7B60343A7DC7A3F6F1AEA9D843D188C1F
FC172AD2E5ED14C9849A1475958C8045F3260749E89A1923604C1C63D0F34546
B5678CC353E83E7FBDDDAC4F96F2237620EFA9C42C7BC988A1D30E8B43203FB7
53B9E976DB2E19A8E62E5AB640B072A8E2493D88D0B470C2F9C77266204AF421
02A97BC03FB86E4321DA4703F36BF64173AA1D106CD4BD1C0DB79FFBD30BC892
A89F5E3FA70B901CD5D2C49144778CFFF1D5B63E09984A28740073D2F18F5E53
5CF1F0D0D082C889B4F6866A34189F8FC68B9043740852B4CCBDD37BF728E564
82158FB455F4D67B93EB6417582B7D7B8E44EC96CA2888B6DF7647DE1DBB4387
8E3EF52717811B1078CDB36CFA55DA7C5945415FC06B0EC169287349C52D3977
9DAAF3AAE501D697A5CD814C0CF46BDAA144D35F9A47E6A173B26FF5B5654108
A46468804ACD7D537F9884A1B726C0EFA8AA1ED3F498EB33F599A9B377084AA5
BBEC4DF7F0957CCAFF73E3C7106DE30A0BE3EFD47261CBE2F070C16127C42C2E
D323BF221EDD0ACCA578928815D319AF7454BCA2993AB5D0F5A7DC3BE3B88599
9BF8DA87335280BA5DC10AA563F2964C3B13B7E54BBBF08F23F8F2FBA965DDDC
FE0B5F87FB1A9C5363DF6ADEEEA9082B1AB14ECC5800E7951ECEF7777382B772
E486B16DD72432B1B4F7E0AC5877AD63E681CFD260D149711F11AFB1B259A7B1
9DC09E6F7A6E37DD6D1B9DE5FAB1CDA68C7673B94ACC38F8776733F6DA2470A8
B638AC7741273AE48C115274A883E7CA93CDE9166094B03E1B344E3B29A9DD93
9BA4C4B321D601271941F0AAD3273533F0E625D27D8B3904FB96CD3B266B973F
431065DD2EC6BC689D4B4F105C8F95567A4437E8B1362BA3A2DDF29C622FA55D
54800823824AF380E7324D457DBE548C32954C60F40E056FE056386628D85DB0
50BFD8A5865B36D4EC168EFFF7462ABF70F75183355EC78DC9EB4AE83D1CB6E4
DF546FBC914A6FF6D1CD7621B1E7E9D9AE9AA465942C8C19D915CFC94111C987
8F7B6EE2FCA7825AF4865C8FBAF1AB0D4645AE20875592EBD1808E48F40632F8
4CB453BB5CBB6B79FF1D6F86D945C101B8B9BD40215ED52DA7777732BDB0B490
6AF58FC7AA74C74C039D6C2D64ABED52F0A005B15A39141AAF768D3D78C328DE
953F3494CB99CB209FA97A20E05E02791F0FF5A4EB59A67192BCA9ED8B4D70AC
D4EFFD55C413E3B74433BDD91BA70E84115929BB08D42023B94C5E0CFCD3E720
FAE7571F9542FC063B35579C73EB8B80508E84B288A44B23A3F56EBCD82E0702
C4A95FEE93D8A53712567217D0F46FDC29D08D6CD71B9E1DE1C50C1C3C86F404
9CF0788A7243C3044621CB3E65487B72A54E204BA05B2944415E2C941F291BE9
137089355D32757F367BB72378972F06528161CBC25F1D8652C03D33998D114F
A7C65C7C472915CCB077DF8C75560ED8360EA8EFD748D34DDBE632FB2EBC0DDD
FE6496AAB573EFAEEA5D8C588DE556745DA3E386BBD02542A443A0FE2301C72C
DB2334AE6D267A009BD0A11514B68ABC3C5812F9A7083494C0999807940D1EBC
56AC938066D664E85E35D480305738428F24E24D2AFEB2FD437EE1D3E36C5AD7
B56F4A5D0CF8FE219670A817942121C61F4D8803F18A2569F67BF88C6CAA306A
F4B343BB10D3DACFA3A5E2EDA91ECFEC0ECF0B390087760B0BAE6C069D1F1394
BA141F6ADD895288E86DB4BD58867626EF3FB40FE863A58B473610D33CF75390
009F4A8C767DD9B71530C5F01BE2D2611CF9644C28F3F3B303A5B00ADA8E3353
4A2FD470E8459380D70B0A4907B2B08BB131F06294B45300705B786BC0D06539
33C657C4E3F309537197F419E6722DF01EF3C88BBA1FCFFAC6484DD35956702C
9EAED6CEE280BA2961683B8417500498033C96AC0D7859734D3A377A6AF8C5EF
8D5806C647F8E4ADEEA1554980E13B37FEC33DF3B23FC7BFEDA3E7771ABE396E
177C09467EFAF26F3773067464CB460F7DA31DA6C1C3A5B210E9C2146C0797AE
355583D824B2BDE13B883C113C2E7A8DF0AB9C9B35E71B0BE1A3A7054F830A1C
DD0580E8C3CCCABEC81D8D642F424FC890C3A8B6E47BE02A09ED1D6E9ED11DF0
B9CEC7A329460CF5987315B0C6AEDC5573FF5275FE9B0E3AB02FD7820A9EF743
B6F93756AAA1E9AC5ADD72577B90A40F45B2F405589F1515A83ABC1471A2E5D6
D0C62F0ABC86BEFCB1F65AF4CE741F6ADC79C164824B6E3E3C3E69366B759B35
2F6AF5BA32060CCF03F513355BD4FC3209B93600F1254FBAE5E17647F896029B
671A1993426378241B3230E538EA282E26A6A9860D694705C9FF3140A3CFB2BC
5B409DF113290847AFC5676268588F672683326DF311547C54662D505907CC96
0DB25DB41477263A78E3C86FDACF1B88468FBE6A223E0910BC6092E488A3488D
54C024C9D1D083F4C566EF620D9B8A3567DDE34C83AF01D54A2CC7AEED9197A2
997D5B146A99666D5EC0FAD6AC9F5398B1DB515C4536ECC523548E1BED287E8F
47E7FE27ACC12DD93E9358ECDDBF1D95FCFEEE32F189B1F6477232AD8B11FBDE
E4718201CB8E9394CB45F6F5C097D36281FFC726E6F3E012FC7435152BDA977F
2CE1664C9723B6ED9FEC0573C1B4EE0521267BAD37B6872458B63F686FD09F0E
FADAA2A54432BFB817DA2C195DB1B8EAE9F4B869350C631E045724EDDAE6FB87
EAF294D8F0B186726A96EEBAFED19665F476EC9F38D408714E8E7C016E24793A
570B55A01E42E1DB3149C802EDEAA09B32032E2CC275A15F7E7E9A41383D1E63
788554247E6AA58C7B3A65D90C4598DE6DF2AA81DF1E7FDAB8CBC71F9DA6B570
B4451375B9EAEDEA1115846E0B0CF7E07B8873D2E9C085BBB0276E7DD887B4A4
D21B7C8CCE86E184BC32D3AEC992B620A98338F962CD1669D5C414C416D00ACC
B2883C2384CE146E963EE5EB69F69D042F58A7311E9C2FF30C70EAA56294D98B
E6A5293EB85D7683AA92C55955E1D06531A5EED36C30AA15C66D51386E374A22
72E6511BD0987B6E4A1FBAD528ADB4433E53C2DC4C5B052F3F4219582D45949B
8C3A7907A725B512D6E111A000D42EBDFE2F1E19060E939D525F8D0116F2F01B
8542C6AB92BD3F909E6D8E33EE92C3F5C3905C1C3CA79F266F540642EBA7AFC8
BB260F79189A85CCBD71E4CCE19FA7B3BA9FA1400F1A17B257DE3F0661DD7A7E
F9738781B40AD0AB672FEE9DA35CCDDAB44EBBC0C3C37F77710A4E8E65577E5E
D37BD0876FE4FC476647EF3500D20DC178EAB069AF72337FA9495DCAC8CE84E1
4A9425D9ED34331DB4068BE99D30F00F34AFC601ED0908CCA79E44A63CC3CDA2
3BAF87869CB7FF02A992E25154CF7DC8A181B3F44ED7BD070FDF39E6B05258DA
EEB74D4039F14128F915FE1CAD98D0EA7FDC075759E0574C987BA2B116F381BF
56ADAD84F5608A46A337EA53E08713215FA05A901D8B991528CC1ED3B30CDE23
A07FFBB716C6DC9C9AFBAD362573965B49F0F6D5BB19657EB68AB21A9DF9FBAE
AAC3B3A5CC1C9744253567A7830362372E56696A943A69EE82440BBAC7333269
2243F89ADBF3BD06B898B553DFFF535A7E5C6F41AA7D14736CF32569B06D654E
66E374AAEB6D371130CBE4C5A0CB74BF1B5AE8189B349CF23D26B47B9CB5B464
7CAD084A51EDF2A7B37F88902DA1915DFCFA0EC338B03E7AF6EF27125F0BD7C8
F2BE0CBB445E9DC99DE3BF32B95CA40F19FE0EEEA84FBB4450DCA5BA87E18E4F
0730809AE570D193CD5E566F1D5A4643102DFD0AFCD8682BE5CA11AABA54285D
EEB4ABD10A0E8E06F1934736F8BF9AD49A10A4C6F8A177DA391219EB6253DD07
517660B5A9D3839D5E4BB82B737962F96B7FC33783F8ACD3C965529DCDA99949
3D312C761922218ADBC9B8BCABBE34548BA12DF270A76B21CCD9A9890A1211D0
3242DDE2C9810D562BE29161AA1C618532810441BC7906EDC9BA67474E0FC6B1
BD130DE0AA5C9983B5DCC6AB0DFD1673DC9DAA3BC3F7AA463FFDA923695801BA
3ABD21A88CFDE76A7617AA6AC17AE775F961993EA52291AD5033D054D34E88F0
8E7CD723FA0A1FEC4C18699C56D2E6E915A8252A603B3E95EB85C9F1CB4405DB
43E1D322410272010F3F179D81163C0E53075ADC8320C9D4515FA048047C0B33
D46DC08D5CEDA8145C13B316FBEBACFF328525AFBAAE6738FC4C2E7A3A449D55
B66497A00F7487BEFDF60C6DFDFA62A5DB79628CF9449970B04E141BE68E11D0
C257A174EBAD95E5EE466244A12481D85927980CDAF12E6732878FFCC50348F0
85E46117A77CBCF6DEF6B2C6CDF4692D601ADE5D39DA0190C5F272E915459A28
050406549F3F3D68C52B2261964AB5D8051964381CC5236756A43BE27BAF419B
0C9EAF059ADDC2C7B6ED1653FAB346803C2EAD0BD5AD97E5E68900159F82B788
72649C922D21EBEECF43F47A75AB4096672814C83A47C9790E2D9CF2B5EECBF4
0814F2EDC5C774F92A03EA66F920093D2F68402215403D5EE92EE6F3E748AA2A
BE187EEF62A14D43D2C7FBFA717807C8DE134D48779F434E126FF5CB87EE3983
49E9697B5A29F87EB03DE24AD328A82F1B052D32BEA71B6138A3CEFF2E22703B
DFD4ACDEE7A48E1255F88CF1E84BD5198A91CA1D4921FE4D46C98E795DA9659D
1BE4B43ED8D75ABBF4ED68684EC5E7511AECA57E61765E28E6DBABEA773C00D4
F8649A99DA6A997AE8F645F06BA2FBDB88B2139937A25087AB6CB9102CD311B1
375D00C27001481DC0C52EADC3E5533707FC369F7FD981C671971B2BBA099B72
40FCFE68F4342EE6BD95B5F647EC03387179985C8C7A9FACEA4D266BB91D0279
CED615C2118100B720CB823D01E06B62A8C5BAF7C100C14C2E3CCEF1E612C8F2
A7DA397E1CDE685D95C188E22502A2747F5ABF1772B53CCF41C253D5051A5B96
00C49D2A572DEA8CE423B90BB00A8548F06480A69CAB790715E8AE04EC52C523
83F12B2748B51B9692EA0579FEEBBD87E5B35A07B37D046EA67E53B2BCCCA79B
00899E29214419BBD29AAD8BC633DD5E157CC60F65C74A99D0D54E243CDC4211
9624D7DAC0D47EF50D58B3126E022E3844930D988073626CCF6DD0F8D1EDFC5D
EB739E0DE57A9D1E7A3EFC6415C773000F6A606CF345120515EF4AB7CD1CB14E
895C376E400EAA5517EABD3A6AAE8CFB0525088571DDDA10B01FADA5AA86EE07
E4F85E444A0C136C32A9C015D45D2571058B03B0C53887D2D270D5456DD52043
13939CDBC3D6C99DF964ECADFBCDC6A1CE6D262697556030628C0AB1E1A69982
B258F3133A760380C0441DD0786C8B94AA742A55CD857A74D8B82664C8D53F8F
553A5D1A5F2D09A7A857FF03D533527BD624777921112A769329911DFFB6FA36
28B1EB9E145B5756493F55B61BFBFD2ABAB9D073558B7A344645D9E235DC5940
E4158026B5CD10691FB92B00A6111FBD0112C0726C34924DD861A7D32CE4F864
2A1A507431B6EB6C47ABE6FBBEAD1770A54544A76CB7340A65E312B471173D82
6D378DB18B9B53B5411D0374F32CFC96CAD9DE761AFBF7E4632620FDB931673B
3FFABDD25DAFBE3CA79848F2111B6FB36EBADCDD841AA928F9149A02F99EFE3C
5F146FFAAF35B8BF9F356974E3CCD45A724441D5587C34C4A2FEC46410F612C1
E9B5BDF5494F87E44F16964E6C441331109435057815F4B4A28B8D84FF078FD6
DBC11F276F791C3F8D049D265314AA5DAB1BA20E74E4B314212FE729A02B9553
DDA3F5F3DC0291DD28723E6343B44ABDDEA52C764E0B6B984498BBB6E0C5F88A
87319462F7F4F9FF0D96A2330CB974E2ADD8F6B8CBDD6EB687F4ACEDEB0416F4
49465D2375F5466A6FFA4D483143787C95CBDBC70F70B8E11E343AA06E5949A0
F477253FFC6401DCD2FC5F3D108D51CC174DDAF071187C52CE58238DE837267D
F3C4D65FE4F5598902D0B86E00BA1411EEB8D7BE6E4C3F6F3D70BD58D015AD0C
12980E62D7DB45F38421324B720E5FFE19BF851B2EB556E8B0F06A7F453D4A5C
F4E61D14A19937D9E30FCDCE6B54ADF6D281F7D0AC7B5766387969C7096876DD
6FC6E19EC9A00FB4EC42D37E4F62BDEB0CCA2FDA8EFDC98AA6A347EA30340777
E75DF7F626F1B4C3BFC9FF33C37C611AFCBF59082AFA60243F3CF9F74511C219
32368A74EA437FE99FFC82A6983406DA5D2BA82FDE11B72B8F1BE70F01BAA90F
3BF0022E660F04C79879462A6D7B9CB192D3451333D1DEF1F307D73DF7343AB6
B84F1824E45160987C88C11E31B96EA24AF5D35A5B26F24060F98FC38430DFD5
D61D949064FCFCF7222C69D4E90E3057125A0925D9DC361A0FFF2CC67546440B
CC1117E73364C3C47508117DEFC1361E9FDCF8B70B8A485F7F8115F00A863F16
1BED366C2C6654E9479AFDF559CE627D141E54ACC98337AED9D383E1C868FBEE
293147B2F51DDF437451164B5A75366DD46A49E50A850139371BA0DED6090568
F544962A6D5EA7C5AF9584B009E0F3862D6E7F5E8D5C7F44D46A9FD531C93219
E3A1D2CBD57EDE1A38F5CEDE2EBC5713E4F0AF020FFDBC8C079E80C3F670EA4C
A0B4F46B189C42C714532FBB772D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktional)
@start /Fa 173[959 82[{}1 1328.35 /MSBM10 rf /Fb 204[377
377 377 49[{ enclmrm ReEncodeFont }3 553.48 /LMRoman5-Regular
rf /Fc 255[640{ enclmmathsy ReEncodeFont }1 664.176
/LMMathSymbols6-Regular rf /Fd 230[540 25[{ enclmmathit ReEncodeFont }1
885.568 /LMMathItalic8-Regular rf /Fe 202[406 1[406 406
50[{ enclmrm ReEncodeFont }3 664.176 /LMRoman6-Regular
rf /Ff 153[399 76[483 25[{ enclmmathit ReEncodeFont }2
664.176 /LMMathItalic6-Regular rf /Fg 255[732{
 enclmmathsy ReEncodeFont }1 885.568 /LMMathSymbols8-Regular
rf /Fh 236[815 815 18[{ enclmmathex ReEncodeFont }2 1106.96
/LMMathExtension10-Regular rf /Fi 204[470 470 470 49[{
 enclmrm ReEncodeFont }3 885.568 /LMRoman8-Regular rf
/Fj 185[723 4[830 10[553 1[553 5[307 46[{ enclmec ReEncodeFont }5
1106.96 /LMRoman10-Regular rf /Fk 160[909 45[606 1[606
47[{ enclmec ReEncodeFont }3 1212.12 /LMRoman10-Regular
rf /Fl 3[449 129[363 4[449 320 324 320 1[449 406 449
664 234 427 1[234 449 406 255 363 449 363 1[406 9[811
2[578 449 1[621 3[724 7[544 2[565 595 6[234 406 3[406
2[406 406 2[234 1[234 2[320 320 10[467 29[{ enclmec ReEncodeFont }38
664.176 /LMRoman6-Regular rf /Fm 205[886 48[369 1[{
 enclmmathsy ReEncodeFont }2 1328.35 /LMMathSymbols10-Regular
rf /Fn 140[513 4[723 4[361 11[361 1[361 29[1012 1[361
4[650 650 650 650 650 1[650 4[1012 1[506 506 40[{ enclmrm ReEncodeFont }
16 1328.35 /LMRoman12-Regular rf /Fo 135[739 3[470 3[653
9[641 3[553 683 34[1012 2[361 33[738 25[{ enclmmathit ReEncodeFont }9
1328.35 /LMMathItalic12-Regular rf /Fp 650 2[723 23[650
105[578 686 686 939 686 723 506 513 506 1[723 650 723
1084 361 686 1[361 723 650 397 578 723 578 723 650 6[795
2[1336 2[939 723 957 1[885 2[1192 813 2[469 1[1021 849
885 993 1[921 975 6[361 4[650 1[650 650 650 2[361 434
361 2[506 506 6[361 33[{ enclmec ReEncodeFont }53 1328.35
/LMRoman12-Regular rf /Fq 27[1046 105[956 1136 3[1196
837 849 879 2[1076 1196 1793 598 1136 1[598 1196 2[982
1196 956 1196 1046 16[1470 1616 1682 2041 3[801 2[1353
1412 2[1530 1625 10[1076 1076 1076 1076 1076 1076 1076
1076 598 717 45[{ enclmec ReEncodeFont }38 1912.83 /LMRoman12-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fq(F)-239
b(A)717 b(6.4)g(-)h(1)f(A)-60 b(temzyklus)717 b(-)g(O)-60
b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray -741 4800 a Fp(1.)p
0 TeXcolorgray 651 w(Der)512 b(Luftstrom)e(b)36 b(eim)512
b(Ein-)f(und)f(A)-36 b(usatmen)511 b(einer)g(P)-36 b(erson)511
b(im)g(R)-36 b(uhezustand)510 b(\344ndert)921 6792 y(sic)-36
b(h)450 b(in)f(Abh\344ngigk)-36 b(eit)451 b(v)-36 b(on)450
b(der)f(Zeit)h(nac)-36 b(h)450 b(einer)f(F)-108 b(unktion)449
b Fo(f)142 b Fp(.)451 b(Zum)e(Zeitpunkt)g Fo(t)396 b
Fn(=)h(0)921 8784 y Fp(b)36 b(eginn)-36 b(t)449 b(ein)g(A)-36
b(temzyklus.)450 b Fo(f)142 b Fn(\()p Fo(t)p Fn(\))449
b Fp(ist)g(die)g(b)36 b(ew)-36 b(egte)450 b(Luftmenge)f(in)g(Litern)f
(pro)h(Sekunde)921 10776 y(zum)433 b(Zeitpunkt)g Fo(t)g
Fp(in)h(Sekunden)e(und)g(wird)i(durc)-36 b(h)432 b(die)i(Gleic)-36
b(h)g(ung)p 0 TeXcolorgray 0 TeXcolorgray 16442 14429
a Fo(f)142 b Fn(\()p Fo(t)p Fn(\))368 b(=)h(0)p Fo(;)p
Fn(5)296 b Fm(\001)f Fn(sin)6 b(\(0)p Fo(;)p Fn(4)296
b Fm(\001)f Fo(\031)343 b Fm(\001)295 b Fo(t)p Fn(\))921
18081 y Fp(festgelegt.)825 20626 y Fl(\(Quelle:)275 b(Timisc)-22
b(hl,)276 b(W.)g(\(1995\).)g(Biomathematik:)g(Eine)f(Einf\374hrung)h
(f\374r)h(Biologen)e(und)i(Mediziner.)e(2.)i(A)-22 b(u\035age.)277
b(Wien)e(u.a.:)h(Springer.\))921 23172 y Fp(Berec)-36
b(hne)433 b(die)g(Dauer)h(eines)g(gesam)-36 b(ten)433
b(A)-36 b(temzyklus!)p 1 0 0 TeXcolorrgb 921 25717 a(P)g(erio)36
b(denl\344nge:)434 b Fn(2)296 b Fm(\001)f Fo(\031)416
b Fn(=)369 b(0)p Fo(;)p Fn(4)296 b Fm(\001)f Fo(\031)343
b Fm(\001)295 b Fo(t;)443 b(t)369 b Fn(=)f(5)921 28262
y Fp(Ein)376 b(A)-36 b(tmenzyklus)377 b(dauert)f(f\374nf)h(Sekunden.)f
(Im)h(Zeitin)-36 b(terv)-72 b(all)377 b Fn([)8 b(0;)221
b(2)p Fo(;)p Fn(5])379 b Fp(wird)d(eingeatme-)921 30254
y(tet,)433 b(v)-36 b(on)434 b(2,5)h(bis)e(5)h(Sekunden)f(wird)g
(ausgeatmet.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 47992 4800 a Fk(___/1)p 1 0 0 TeXcolorrgb
48228 6792 a Fj(F)-123 b(A)369 b(6.4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 33988 54804 45
v 0 TeXcolorgray 24746 81281 a Fp(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fq(F)-239 b(A)717 b(6.4)g(-)h(2)f(P)-60
b(erio)60 b(dizit\344t)716 b(-)i(O)-60 b(A)717 b(-)h(BIFIE)p
0 TeXcolorgray -741 4800 a Fp(2.)p 0 TeXcolorgray 651
w(Die)558 b(nac)-36 b(hstehende)557 b(Abbildung)f(zeigt)j(die)e
(Graphen)g Fo(f)29619 4999 y Fi(1)30145 4800 y Fo(;)221
b(f)31368 4999 y Fi(2)32452 4800 y Fp(und)557 b Fo(f)35819
4999 y Fi(3)36902 4800 y Fp(v)-36 b(on)558 b(F)-108 b(unktionen)921
6792 y(der)433 b(F)-108 b(orm)433 b Fo(f)142 b Fn(\()p
Fo(x)p Fn(\))369 b(=)f(sin)7 b(\()p Fo(b)295 b Fm(\001)g
Fo(x)p Fn(\))p Fp(.)921 9449 y Fo(f)1562 9648 y Fi(1)2088
9449 y Fn(\()p Fo(x)p Fn(\))369 b(=)f(sin)7 b(\()p Fo(x)p
Fn(\))p Fp(,)433 b Fo(f)10378 9648 y Fi(2)10904 9449
y Fn(\()p Fo(x)p Fn(\))369 b(=)f(sin)7 b(\(2)p Fo(x)p
Fn(\))p Fp(,)434 b Fo(f)19845 9648 y Fi(3)20371 9449
y Fn(\()p Fo(x)p Fn(\))368 b(=)h(sin)25696 7833 y Fh(\022)26643
8550 y Fo(x)p 26643 9139 740 45 v 26687 10360 a Fn(2)27515
7833 y Fh(\023)921 37076 y
 currentpoint currentpoint translate 1.74118 1.74118 scale neg exch
neg exch translate
 921 37076 a 1355 37076 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 229.44061 a add def
/d 0.0 a add neg def /h 124.38654 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1355
37076 a 9820 30516 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -113.81097 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 284.52744 0.0 -284.52744 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -56.90549 0.0 T 12
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 142.26372 0.0 -142.26372   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 152.96388  0 -76.47673  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -76.47673
 152.96388  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-87.71352  def /maxTickline 63.41867  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 63.41867
0.0 -87.71352   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 152.96388
0.0 -76.47673 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 63.41867  0 -87.71352  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -87.71352
 63.41867  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-76.47673  def /maxTickline 152.96388  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 63.41867
0.0 -87.71352   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 152.96388
0.0 -76.47673 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 8575 27652 a Fi(1)8575
24502 y(2)7843 33905 y Fg(\000)p Fi(1)7843 37054 y Fg(\000)p
Fi(2)7843 40204 y Fg(\000)p Fi(3)12717 31719 y Ff(\031)p
12717 31882 507 45 v 12767 32428 a Fe(2)15833 32081 y
Fd(\031)18813 31719 y Fe(3)p Ff(\031)p 18813 31882 913
45 v 19066 32428 a Fe(2)21897 32081 y Fi(2)p Fd(\031)25112
31719 y Fe(5)p Ff(\031)p 25112 31882 V 25365 32428 a
Fe(2)6098 31715 y Fc(\000)p Ff(\031)p 6098 31896 1147
45 v 6468 32443 a Fe(2)2869 32095 y Fg(\000)p Fd(\031)9820
30516 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 9820 30516 a 9820 30516 a
tx@Dict begin  { 152.96388 63.41867 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 9820 30516 a 9820 30516
a
tx@Dict begin  { 5.0 6.2015 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 9820 30516 a 9477 30802 a Fp(x)9820 30516 y
tx@Dict begin  PutEnd  end
 9820 30516
a 9820 30516 a
tx@Dict begin  PutEnd  end
 9820 30516 a 9820 30516 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 9820 30516 a
9820 30516 a
tx@Dict begin  { 0.0 0.0 pop 152.96388 63.41867 exch pop } PutCoor
PutBegin  end
 9820 30516 a 9820 30516 a
tx@Dict begin  { 5.0 6.2015 5.16667 2.33331 -40.  Uput UUput } PutCoor
PutBegin  end
 9820 30516 a 9477
30673 a Fp(y)9820 30516 y
tx@Dict begin  PutEnd  end
 9820 30516 a 9820 30516 a
tx@Dict begin  PutEnd  end
 9820
30516 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -10 def /x1 20 def /dx x1 x sub
199 div def /F@pstplot (SIN(x))  tx@AlgToPs begin AlgToPs end cvx def
/xy { x 18.11378 mul F@pstplot 28.45274 mul } def  /ps@Exit false def
xy moveto  199 1 sub { /x x dx add def xy  dup 1.e30 28.45274 mul gt
{ moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } if  gsave 1.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -10 def /x1 20 def /dx x1 x sub
199 div def /F@pstplot (SIN(0.5*x))  tx@AlgToPs begin AlgToPs end cvx
def /xy { x 18.11378 mul F@pstplot 28.45274 mul } def  /ps@Exit false
def xy moveto  199 1 sub { /x x dx add def xy  dup 1.e30 28.45274 mul
gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 1.2 SLW 0  setgray  1.
.setopacityalpha   0  setlinecap [  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -10 def /x1 20 def /dx x1 x sub
199 div def /F@pstplot (SIN(2*x))  tx@AlgToPs begin AlgToPs end cvx
def /xy { x 18.11378 mul F@pstplot 28.45274 mul } def  /ps@Exit false
def xy moveto  199 1 sub { /x x dx add def xy  dup 1.e30 28.45274 mul
gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 1.2 SLW 0  setgray  1.
.setopacityalpha   3.0 0 0 add  DotLine  grestore end
 
@endspecial
9820 30516 a
tx@Dict begin  { -59.4162 -36.70168 } PutCoor PutBegin  end
 9820 30516 a -129 x Ff(f)10219 30507 y Fb(3)9820
30516 y
tx@Dict begin  PutEnd  end
 9820 30516 a 9820 30516 a
tx@Dict begin  { -36.65392 28.16576 } PutCoor PutBegin  end
 9820 30516 a -129 x
Ff(f)10219 30507 y Fb(2)9820 30516 y
tx@Dict begin  PutEnd  end
 9820 30516 a 9820
30516 a
tx@Dict begin  { -73.64256 25.32031 } PutCoor PutBegin  end
 9820 30516 a -129 x Ff(f)10219 30507 y Fb(1)9820
30516 y
tx@Dict begin  PutEnd  end
 9820 30516 a 26753 37076 a
currentpoint initclip moveto
 26753 37076 a 921
37076 a
 currentpoint currentpoint translate 1 1.74118 div 1 1.74118 div scale
neg exch neg exch translate
 921 37076 a 6529 x Fp(Bestimme)434 b(die)f(der)g(F)-108
b(unktion)433 b(en)-36 b(tsprec)g(hende)431 b(primitiv)-36
b(e)434 b(\(kleinste\))g(P)-36 b(erio)36 b(de)434 b(p!)921
48142 y Fo(p)1574 48341 y Fi(1)2469 48142 y Fn(=)p 3849
48142 15749 34 v 921 52680 a Fo(p)1574 52879 y Fi(2)2469
52680 y Fn(=)p 3849 52680 V 921 57217 a Fo(p)1574 57416
y Fi(3)2469 57217 y Fn(=)p 3849 57217 V 1 0 0 TeXcolorrgb
921 61754 a Fo(p)1574 61953 y Fi(1)2469 61754 y Fn(=)368
b(2)p Fo(\031)48 b Fp(,)434 b Fo(p)6733 61953 y Fi(2)7627
61754 y Fn(=)369 b Fo(\031)48 b Fp(,)433 b Fo(p)11241
61953 y Fi(3)12136 61754 y Fn(=)369 b(4)p Fo(\031)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4800
a Fk(___/1)p 1 0 0 TeXcolorrgb 48228 6792 a Fj(F)-123
b(A)369 b(6.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 65488 54804 45 v 0 TeXcolorgray 24746
81281 a Fp(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fq(F)-239 b(A)804 b(6.4)f(-)i(3)f(P)-60
b(erio)60 b(disc)-60 b(he)803 b(F)-179 b(unktion)801
b(-)j(O)-60 b(A)805 b(-)f(Matura)g(2015/16)g(-)-2331
4622 y(Neb)60 b(en)-60 b(termin)716 b(1)p 0 TeXcolorgray
-741 7929 a Fp(3.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)652
b(ist)h(die)g(p)36 b(erio)g(disc)-36 b(he)653 b(F)-108
b(unktion)652 b Fo(f)795 b Fp(mit)653 b(der)f(F)-108
b(unktionsgleic)-36 b(h)g(ung)653 b Fo(f)142 b Fn(\()p
Fo(x)p Fn(\))742 b(=)921 9921 y(sin)6 b(\()p Fo(x)p Fn(\))p
Fp(.)921 14458 y(Gib)510 b(die)h(kleinste)g(Zahl)g Fo(a)499
b(>)h Fn(0)511 b Fp(\(Ma\377zahl)g(f\374r)g(den)f(Wink)-36
b(el)511 b(in)g(Radian)-36 b(t\))510 b(so)h(an,)g(dass)921
16450 y(f\374r)433 b(alle)i Fo(x)369 b Fm(2)g Fa(R)433
b Fp(die)h(Gleic)-36 b(h)g(ung)433 b Fo(f)142 b Fn(\()p
Fo(x)295 b Fn(+)g Fo(a)p Fn(\))368 b(=)h Fo(f)142 b Fn(\()p
Fo(x)p Fn(\))433 b Fp(gilt.)921 20987 y Fo(a)369 b Fn(=)p
3353 20987 6300 34 v 6884 w Fp(rad)p 1 0 0 TeXcolorrgb
921 23533 a Fo(a)g Fn(=)f(2)296 b Fm(\001)f Fo(\031)264
b Fp(rad)874 28070 y(T)-108 b(oleranzin)-36 b(terv)-72
b(all:)435 b Fn([)8 b(6)p Fo(;)p Fn(2)221 b Fp(rad)p
Fn(;)656 b(6)p Fo(;)p Fn(3)221 b Fp(rad)p Fn(])p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7929
a Fk(___/1)p 1 0 0 TeXcolorrgb 48228 9921 a Fj(F)-123
b(A)369 b(6.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 31877 54804 45 v 0 TeXcolorgray 24746
81281 a Fp(3)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
