%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktionale Abhaengigkeiten/FA 2.4/FA 2.4 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 08:42:46 2017
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathSymbols8-Regular
%%+ LMMathItalic12-Regular LMRoman8-Regular wasy10
%%+ LMMathSymbols10-Regular LMRoman10-Regular MSBM10
%%+ LMMathItalic8-Regular LMRoman6-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktionale Abhaengigkeiten/FA 2.4/FA 2.4 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0942
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A110651C32F7372F56D5E845643350BBF6D0A6EAAC
D2586F3D71442DBEB5B1B049B691CF910A78299B8A9C0B39ED96503D55AF7610
48D41BF8E781511338BAF3A2E79B98DB9E6748C1FE829C1E574F41ED7A56E8DA
4EA2023CFC69FBCDEA39CB00C8BC5AC4B184E13F3ABA4A18487B10878E9D800F
8064BC68223CA5F86E7A9AB9BAC72FFF9546B6BB94F4426E5D273581A6D28444
44D82093FB03482F71774ADEB638DB46DCCB0C6BD2192A98CC4896B52E643BDD
07F61D79F78746C5238C5504416B1E2F271280ABB91D54CC819680322EAB72E1
250A760531BD7F2AA1DE45FC978490BB69153DA6D6161F7AFD7BEC1ABD547CBD
B6BCC20BBBB289486F6C7E238C2A7AE02B2539F6DACD88AD99A2B686FBEC34A6
F9EE29616642225A5AD8C4FBEB07FE262D75AA093A73E9E0B89695B5862C96EA
1243561331C2D9EE7B65B8214E519D57A88C79B55D644CAB29554F2E31FD6843
FF7B259AD5538BD0836F18ED0DE7F01D9BD148F8279585467B15C17D2D0C33C8
24A507CB2FB6E384BA8BAC55FAF929178B7AACAE1D371228606B58787EBCCA93
4E4F469709A6476CBF11C97862C34607A7DC2871810B501018824C0E0CFD58F9
7A957FF98D5BDA3E3E034C52405A6C2908EBEBE3E29F7C6A759857EEF72F2EC4
3A8642C108D34C4CED6F7DBE80F25D75116BBDA7CB4BBB73A61F7C685A3A9A51
8734F9E4D7E801AC7DE2E73CC759AC64F3CB8EBF8B5EB56F41B247F3F19315EF
7C24C48C184E2BC4350D72B6956D0C2F54961B34FFB476B8B54F5F249AD4F434
87F61D3712FACEC07D010DD43EF4D36C3C6BFC310B412ABDC95F0615C5BC5180
C92F0640CE6A8AF3AE7EB181C2E4C11086C530DF109AB7631B321258281DAADA
221C4D03BAA1CB2A3368AB891AA0006AFDE458F28C88624B7CD1FEC6CB09AFE1
5B7C4C75C0C00F4549D250A8D8D0B82FBBF52438CCC1953B78E7D9D431A1B5A0
4A73AF4A83C1332449D33F89196645962942DEBDD82A0C4A86F0317F943CAF80
38C03C57418377255201AE91F48B7FC6E0BEA32C7762AC27D37041D63165EB3B
E7A22843BBBC2A76EEB0E1C3F1A5DED8CBC163A406C10DEEF8375D51CA265048
A748D61C4B7C040606D6661334764F75102442574818D8E2E330E2FE5102B7F4
DF3E4FF29268D62FDDDC616ADC7E9F13E6B8A5628C9C333261C279378974A281
B8F074456303CAE324705BE0751EA813402C3D640582C972655ECB16686869E6
DA64131BED44D2F499C69EA518C750370797B96D672132C82296E416D4F3B55B
FBF76FD52217FB7A494737C74DC1BEAE9A4370CBCC6A3B60E897A2A10ACC9590
B7D182BB0BCBDA4B8FD30EBFD8E947926A7AD4A39C3E3BCC457B16FD9FA2606C
C3C0740F437DF5F1B361E2AB0102CED6B56AB56737158CF03B694FC508079D3A
31ACCEAF23100219B1CF3A1F09D967E429545A65BB9BCC05055A705CC4D79163
209A2105EAC6577EA6EB40D70A6D3A73572D79A8CBE198C9F63FFD1470AEB473
2DA147B30FA99C4C8C7BD336D401F5DBFDE3DB313266068F252FBF712D4F6AA9
CA51714523FC48BFBA1E33E36A67FD71C4DCEDF3CFB6AA5BAFC7DCCAEAA40FAA
E6D4925126349DE06E101868BED82BB51E91185394F31E2C049463AE81F753E2
F863AAF5E286731902E47CC79D75EC3262338CD13F13C659D762DB6199452CC0
3F88EA12757D52C10FF38B44A09610AFDCC3E9E0EA6D89BB91F93DEA53A676EB
142FADDFD883DC4F0C38023BDA6569691729EA004A3D96F0FBB300F4030B6606
13071727F3BA34DD98CFE4972844FBA68280761E4D48476D645F86023FE852EB
25C98058B68C3F7DE5C9E739BEFBDA9EC9C8F800F862999D20CD6BB97FA50A40
B29FC17AA00DB566B2EC94DE5934CE2EF61401B1AC09C515B31676917D11D6AA
C4F958DB61B11DAC0032A4A9BD935683E85A26C1F42BEEAD417F837272445BF8
5B73660BC2B57C89B3CFF6C85E86E42A9550DA129DC0FDC4BE50D5A5CD8DAB41
09CD47BC05EC9E0CBF809328C5737D7917AABD0AD9A87F485E0843606F7BF8F2
C0F92CCA49C489AC56BB4FAEB441E713B499545814BC2B3B2ED508A5547C4B8B
182CBE2ABB754E07D88DD634787FE1DF52B38F3EED60778915269E71DB74E889
71C070FBAE2C25A7104589EF38806E811726E41351E349B6167CA5058EE84D12
58EFC050B428623FD1E621555BBCA26C986ACA69714EE285E4183ECA0F278461
1B128DDFD3B8061FEAB76A85459C6339FB76BD776FFBE44A0D870B50D5C08E42
C27D4F909B92A16E8AE2275E83777297529C5ED2573FDF8BD7D6DAC8936854A0
E9B5873E0C43A98002905B1F09DFBD253E4F8EBA8FA68830E6BD9979FD51C835
5A7EC5C1747D467FB498E88120CCCAF6A701DAC4FE774492035D2304EC4F9083
716CA7906B80486BB5C79930F2D085E30DEBE15A07B6A046946D1BAEC088EEF1
31BE9C77E57EFDAB7374603762EAAA72B0B40EAF746A43B2DA7552C98FEA1ADB
BB93C025B00E2203899B2C287724BBB8E65FE1141502C1218C55773CA3C6DAB9
681EA8787E7960CFCAF502B7A3066310BE7A115570201F827CF41845BE0BF8AF
AE8348F559D6AD28E96669BF76C5EE35D36E883E3362E8151A38AD6FA6AEADF5
82AD81A19F11688A44032481C0698FF9E0E60C0930F7AEC84C4D7EE11BFC90EA
C5CF755173A99C3D0BF412FD30352B46B6FB6D0B977BF34FB3EA2C40A1ADAA19
182C7E3FE4F4251B1887A2C605FE1895D3045D915E59246A382A2EF44013126E
974503017108146FCA11C477865B61FF0136346A52E994D5242B0EDBF68D120B
D216209890529FBB3D24651664E84B70E52B35750A4D746C647119A3C81D1CE9
54F4F359CEE99946657FE87EFB947F6EF31DCC61CDDFC39A27718813E2CDEE9B
EE0507016F7651418558D452E73137413161CDD6645A9C7DB42FDD905FF9EE5F
A98B2F04DD744B336C400DCE97D3384AFA5C0BCEF133DD294C2AA330081B6EA8
216653BA182F7FB05BFD80CDF441BB594FE01CF3180D3C3C1F0B13A98CC0339E
144825766BC7D4CA384FCD2E9256B4C11C354D3ADB93059FC37FDDAD6C78C8A7
FD6219FC44CD0E30CF5FE94C5F95054EB0CAB8CB0BFB75B710119768A161F8C2
76614552655D1037F82FE0218C4D4CD7BEBA74BED51AFB08EB16469390FB9807
1BFB9020766AFFE943870234F365EB6EF863A8103CA6089A8A29528E45C47F09
C56AD5389C3EE8DFE85E6127D09DBF020D89506CD1270C0B3EA235BDEFE3E247
B0C655D9FF7B893CC31F7949ADAFA7FD22C8F9537DE472B6C31FC9AABE7ECAA5
701B0D2575AF8A8596254E937C142B0AC9512BCF447499C2005348B848036DC6
131C1F05FE139D653820FB3EEA998267FB51CF42EEAD7BB3CF28571C437ACDBC
56D765E2C7F61226CFC5613463DCE571BF49F20E7ADF22AE9612796DEB913805
9A4C12D608FD1228018A6DF526D5C66A9F11AEC07A100C7CCF020413C69C51E8
D0541100E3DF71D501F4BFA0AE8260E23761F29F3EF6B7AAFFB00FD028B380A7
31A931CCA7A1CD78F9CEFB9B43D1AB67E0C1B90B74C62FF8FD0FCC210E26E80E
A2C146A040FB4729A47526A644743B53CF0CD6CE4EEBB414C741759F68C2C929
2B509FC3F79A0124BA95F9FBAEAAC3B3A5CC1C9744253567A78303623728AA44
9365090D58BB4E0B099DA528E5BB6426A755DD97B90D0DF4AEC960EE3BCDED36
FEC31EAABE44B4E65AC2358864B4567F289298A69F79F6981B190F26774B50E0
D246A2676F9821158D56882769E3AF7B6C0F8F856AB15E34B7AFAD9FBEDC388D
8DDEEF29E5BA5830B9E88A403649AD203CBCAB5465F18682746D4C6A28F9D30C
71556F7C9822962D39A30A3D5D4331979C914CDACD8E52AB927C4F57377C6E95
AC3B74863596FA34250C38904577CB39ADAFC1AC17B04381C6754327FA7C65AE
AC1A2839AF94903A7EB7450AA2BCC638BCB6D2318C6E6FB8AABF70FC0CEC089B
5B2A64DC911A05B7D0FBD3BC15657FCC9D561808E50151C166892AA2415303D2
ABD61EAD6A46E042F2988E6A31D07C0EFBD835CD0C526CDF34968DEA783AAB27
AD15B45820BA2C8942FB131136588242112EA1F17FD3C2604EF52210F343C793
DEDEFB0A2B195538D4B0C6FF837473C372E70836D4C5747C4EEB85DCCE969D9A
7F061B9FA20CF2EFB32200703EF58C425B9A7D27CE0BA78897210D30DA8F7CD8
5D47409E582BDD2EB2D8D505FF764C914B4C11AEA7B23988D184F29AAC5C274F
5694862641C8ED8ADC2A7166E893618F4E1CE1CEF3D26E28BDA32D12B10ED201
A9F192758B996B3B8750FCA90CACA049EEF3CF6CF84697FEEEF16F2290BF3094
539F0406AF0030ED0D0769FFA19112C97076BFF950438DC37E9700A7BCA663C4
328967C977B430B63CE6CDFE50A651EC13D52174ED5C933E8C8525F88E6CE482
66186158BE0A5592691CD1E265DB2F523B702D4D0DBA35BE10A4F542DBD3E173
15E1E0A224FADE62569408F6ED842CA727BF331033E4F074D29DF85080F06956
1019E04A19756A102E1A32153D5C6216D9C9385A18202E78D9E7ABA944D21851
498AD5DFBBDFD2AD3A45C0FC93D273C16FDC07C095C8183E89A7FA85A0C12A52
763634899F898B819309587CAE703571A817E2A7D1FE8496B76E5248A3CC57AE
914AC32F028980AA50C18C5C8C44EE90A42542106F909E4F59803685F804B0C6
A98E5D37F963A15B1C0B736ACA11C477865B61FF0136346A52E994D5242B0ED3
7AEB62353B9A1D56DABD05371F9479BFA4CAEC5CBAAC32E2DFF165186D73C527
5BC9638D8A733D3E5905EB634982BBDBE878E238A3AD7D54A0F8D49FFBBEEA2A
08DE64815E836B7C7D1B6B6FE2F8CE38A96655B073C606ECCD8C3F2C5FF185A7
2F8B21D6486CD41A80EC051E875EAA89D64FA5F2126CCA7E93636A7CCA2158B9
9A15CD40585926E5ECB3811D95422BE5D90F0E736BB7657CF2A0A5233E11D3AA
E27591284292FB1BF22EA7654C2797659EB876A0CC35E0BD79F4A14F56FE1C18
E6232BC798A227D8F8F92AFC1924FF85BF0BD5547FBF0ACD890470AA5CB2E0D6
1ACEF149B0A7B73F2EE0136A9C23EF64210422CEE9C62889C3FB5D8D1371EDB8
5EFAE402433ED36B610862F00EE394976F0A2F4870DB0C0FCBEB6D1699049BDE
AE9A5B364AC04F853C9612C58189EBF3334336824F029CF3315CDAC8483406A1
AC1DF70188977249C809CC821BC0B7A2F8AAF27E7E115BE85D71C3003914643D
2327692E464DE4CD3E76C93397F7998AFD5A64D6903F2EF571F9A24136315988
08E0F91DBA758A23E515E9F18329599819EDBDA44E136B801A216AAE5168BF1D
DF74179AE8478DFF4DB502DBCCDBD61CA5B5E20E1CFC04C7B74A171F41A35364
E573321A926C7C3DE13338F52F2C91531C92ABA181B7CF0FF955A8DA29F11753
6ED7582733A6C86215121DCF5B0716611CCEFD11F5C5F00FCEA5EE9D46AA63FF
7D4278CC27249B1329305788A6AFBF6CAE00AA6B9DA46C51F1EFB3D014219FFB
966E070D8BE5B5CD57458FB78C6ECB6460A281A80F502523BC02292E16AA3B9C
A089F7320D1B9BA214E43E83C1FCBECD57341217FA2783DCEA90AC383E444674
6FC85E9B1D817C988AE526DA4338FB27A18C3E1F59CD6063225001812694472F
7AE07866B1F040B42849BB161F8C5058DA20F5AA785DC0E77188C18435A2E7FF
BA595F0C054E96CC44F56932D8FD589EC2438A167DD3799972464CE75AAB769D
CB32014BC32FD730F22927CBA09B8CD2167352E6BA2E96F35F1E67BC40979F9B
86E0222012DCA626F8A2147F672557FC3E08A242B2514C24CD74D2A6056E9B89
886CCCCBAE6F51A33757FD8DCEA2488E7B130462CAC1C61DDD7BD36BFA9D85C9
CB0414FA7B15EC02E8C08C8A4F789EA1A232F44B216B0A7C6B898EEEEA2EAE31
DBAA343678B35948BF6E9180221EDD0ACCA578928815D319AF73A7E10B5F523A
8B2E7812E325EA858A25C26ABBC4C25E327DFCCEAC871356DAF0CB205917DFD1
A8F1216EB4301EA62211CCB8909E9C8DEC28A6FA8042B461FB6C3A5425419977
1B7A614E53D6E49EAF8E8C75650D5793750C61F2D28FD6296AE76BEC4B0044AC
2984337F2EA913D381318ECB6383C6EBBFB2B61FE04B0B13B26BFA8A80D62E48
64239BF65B841617AD96D9D7F89ED64975DC69CF20F88E081FBADA15B871D8EE
AC0EAB134DD682DCBC9C187AD9788F635D7C1D238E43779FC2850256D81DD960
1364534E0C331CAAD340B7375427190D9ED5D06C044AC61F885A346AD0BCB540
FF5D3D13C722603FD1A9BAB8481D5ED4B852061899B5682BD0A153C50E9529CC
B01112EE116B684BA5B21D162765BF1FDA0BC109AB896DE24B0A0D57D9F4CFDC
4C1FFEF87FD2B0CA2E1A287BED88AF473AECEE97ABE431A8D1B05BCBE69CF10E
B696F21934226B6174010EE3696D11291F2E3F06359FB2DF0AD948D5F373AAE4
A4752F9BDE24042B95B58726FCFA82AF11ABD26D2D81FB0531381F8800FC7ABC
5436137CB6ECF73403915F269B7B231F5D9B1F61DF7CB03421C5F46040744911
2BDFD986A3F7EE975F79735FBDBB333D136FD72B54BDA112352814FB6FAB9134
72DAB4547A50C2C293458B1D854EB79608E52F06734E2CE9B3962B4FBFB2CED0
CD7D1C12433ED9CE0AF54C73172253EFC739D7552C51C4BBEB0896586854605D
658D8C7681595D0492047E97CECDC3FAB63FC92DE5F64B6FA36C08DA3B7FC06C
7D40B03E7F03EF36CE0390DB45EA1F0B6AA0630DCBC43B1E3BE9B7BA5722421E
932D83657C904434F3CD7B4C5C7CDE111CDFEA91C7326AC7FFC2A65A633FD028
806459C9CE8EE40DBFB9338561B425E7FB8A486E8BBD8925F744645C55EE47DE
4AA52ABD988594A7EC882C32556517E396269C90FFA27C5A51513DF558A8B499
C7B6158DA671139A282357F5CFD4CEE0BB8C7C8ED352E0A1E6DF242BC75F285A
7C4D903A367CDCB74C56BF8356F94810910AB18CEE5DD843B5FE4096F520222A
20FE01B307960B1F1030F6CC9B504E1FFFCCA352431A0D5BFCFCFAD30F97D9F6
2493B0CB7FEAFC9BAF90B7025D2E35ECC22A152A63EC110EF4B8FFD3E82A1F2D
18F3F163F77EF399A73A1B5FED7935DEC964AEDB4721F177FC89A5AB13A06261
BD660253A72E63479DBFE0FB8041A873898332B8C24FA875D3E200A018C78BE2
E930457BC33AD2FE3614781E71AB4D0073D71DC38239BC688D3F5F61CB43AE2A
53FADAA5926EA5679791D474BC0B7939D43C0AA387BDC9184255A3335FD10380
3857B8046544BF2723FF4B4331E2BC38EE8787EFC7FAF8A4D10DF88C738EBDF0
4155D92D9EC67D91F7299AAC56823CD4BE926D0EE4E8CD015DD85E4004694D39
E05F5E2AEE30F76D51A3CF5FD0316410BAC452BD8BB544B57ACF2F9FE83E3E68
109B182044F27CA200B432D886A12EF6332152F0E30D38E2B0F2F1E30D973B04
68FD4F84E83950B76B1A05B4DC730087F385C524B689F96E3FEA51EF125D16E9
073543865055A37AFD20C49BF08EF65CBC703EF6ADD2DB56EAA02A6C8649E61D
7F5B5320DB4E6C7F70B76CB486438D247D0100689A73A26C5E0137C208DCF1A7
143359F8EE27AB1E0B8333DD55B109F616080F5BF29107A418F686DD27656D1E
EBDFFF78EBD97F40F1B3C7C78221B0081DCEE066E353DCCC2B78551535EE5DA5
2B7AF5030F8AE1482313610CBFB4CADB3DB95CE2C74DB09F6C18D083A389BF57
68AD942959FF0302B3225CC885CFFC8807635C4262456DD0C12D6542D9EBA6F1
12F55563444FC3D79F4B3A2E9432F8E1948F77146199CC80880EA23BF76211CD
865BF221AF4EC556835774B08B04CBF20D471B7C228958EF19C9A18ED7B135C3
300D4E6C8B686A49D427CCD0DA4E7B07C8D2140B854F2E7C3CCABAAE3D2A8083
7BF7F8C88D26D37C4A69365579571DE66F500A75420DCB24BFEBE3ADB38A6CA5
8290D557AFA6B2F76D3C2C0D7C2FEF36D9A72D75E95EC194042007DB1738809D
C388263F3562D6BAB6320CB7B552FFB89F11EA22D02AE6333848C966B1B1E30D
A2B09FB2012717AC3CCA0F72FD3DD6E6E24621FEC52CE047DAB64EBA1EEF23FD
D6D15A5E4B14C74D3856E17C875B7531CD1BC116AC4F21FDF43764C2E9BBC3FD
8F6C02E213E218294D1063180597B8C427C9B17202A03F53B88544455AA87281
0C7948B1EC866883E78C9C909A89DB039C9E9960E315CC0D5A741134B101D1B9
61CCDDA1D8C89CF7B69B3CAC447A2D2CBE22433B7494A12D6898FB52E8D60EB8
F100DC970A6F6FF1EC5403388B6EF347797DF580DA0E0A4F13FBF20B25DFF786
1AC70BF7F778DA38E54F972D6A17B932EFECCDDE3DE2B3521F190FD862092C5D
24CE3B8037AC8FDD3EA687834689DE2FE4B7759C944FF72ECE869A601FD89830
4C6EAEF3D52B31B6CBA3D9E7EA775BBA2EC97CC91D926CC76EB3300E9B6FA5B8
477E9788C5245492BAF032951F69E716001DE419883FF01BB562BF7A8CD1C6CD
40BBB35A5685BF03CA5AA04FEDEFDF24B58001909B7B03761FF2070A0FA2CEAF
23100219B1CF3A1F09D967E429545A65BB9DA9111A6D08A31D0797C7D0DF1D6D
88ADC4FF697C5CC0F670731EC605C2C85F79D5C6DD740FA2EAE0C2119F4AEDB9
BD5451F2BAC4AF89052666E690F8ACD132C6B29910190FD862092C5D24CE3B80
37AC8FDD3EA687834689D1ABC946C2E4E79D4F3AAE440A1F525EEC2713C0767B
327F5AE99A990B727C6C7020F14175225EFEA39202B10588CB9B4E44FEFEEDCE
7B6160978ED7FF4A5199B53C9F904FB174E3C63454AFB214A8944B2299D75F55
E0414E65AD6A19F8F0894C659A61F005C6FCE1A0E970036566CBD52B4A8B1AA2
57C2DEB9689E200925D85FA23439452A82E6421B44C297B1935A3A5DE94E8681
FC6842809C1CD755943368A9554B60AA09E892F91A4B3291F21C9C651669E0D2
71F30024C0488C71FB30791F330A89ADF521505BF7D84597813143C60D3D1A51
5D52CB8732BA9FB066CFFD1C50E9BCD1885D95B60048D2EFAC8D2CC435BC0F25
C44B4AE7D581455520DA75F0AA2AD71C12CA16B7AA13D89CEE02664EA934E077
7BD01EEC83BB5674DE327954754A34A9A04FE68A437B8306B8463247F1E54DFF
D17B997EFF71C0B00B951A7570A341DBF602CED898087B72FD370FCBF53C18F7
6B79AB072E704173D21582B641515FE91E1433A56A4B1C717A38CF9C88CB71E3
781E9DD1EFDE5652E31772561D5A448F9B520EA55BFA4FC1C8FA49F5377E1680
6EDACCB60F0D8085FA97FE6D2E960552337321D82B49DE32AE60EB35A8EB1742
21DE36BBA0146AB08A3DFE98951927F9C3A83202250796C33F156EAB4EE9BB26
12B1FD223DC6C8A48B36B81681FCADD2C6095F052CEC01B7D399D097BACCF6C9
E10E5C114D067892630923CD601E96E722DB1BE432987A61FC0FC6820AA22F96
7BCB97046EA3C4A9A3A97D7C031F9E8AA24C0A18B40E952E098614C2DB3FA57D
400530CA6FA97ECC263187BFD652DC36561D27A9335BBCA18349AEF42BB9A57F
831F6379060E3650CDB2C87FA552F5999A1B5575D6CAFCB00B7BEF6E47AC23B9
20F7B535193DB8FCC1FB0DA6E544394563D24D8C87FE0F2722FBAC78768C4A89
FB6E27C2FB99B97F2312B6455CB547B771F0F0E66A2A9A030A92CEC7F3F1B26F
F6E2D1797C38DF3097789861DA2382708D050BC6A2263B7F797BD4F9FD0EF0E4
68AE9691921512F7DE93337F31701157FF310056D421E594F949B0E4980653F0
1704F8963B8BF87DC9CA5CEDEBE5D0088AAD263602357ED1BE61FD58DFA0317F
A126A715D3C293274ED2C5CAD0C162EBF98632D63BC149DC1379327ACED1EA72
9FBBF3D9C2829B9FA5A211732448B8F3125AC8AB538565E06699AE5D68759A52
096B795F2DFD666A3ED9C1AECFBC3AD200383477D05545B04A54FEA1159BA81D
2F515C46229D50F7DB0820570898CE57EB2DC4F2D4F37A3B26398A1D5AD2F84F
0E1339008A3DFF0A65F140E43A7EA149580132082317DD4A19E976C084A28CCD
E5BBCAB3731366C3B74072044D3EF2EBC1CD905BDBE9C01C812B0C32F4F09AE5
4B9C67CDBCE3F58B2E4658532D7DA349A085E560FA3A13FFD612BE78D9014A90
8651C8C8391C12719AC3EB6A7652B3689830029B200A417E9CD3E5580A9B0D04
F36C41B2F672218763100EA3EE9ECDDE8DD5AB6A6510CF16E8CAA48D18DE6EE0
20AEF0B89AE754BF7F8203F0C857CFAE8A868BC658413CB9D65DFF018B979021
09935414D50E1375DC1FA058A26A17105A2469DC27876F4035544028390706CF
1ADBB96A74355655EB64342E5FB6E18F2149FCF4C0F743AA1A1A120843D3681F
9DCB79A8474270CE46F97DD10CF6C8941D49919570F2E5F06D721403053F2058
E88858EDEE096C4034B5A2C6FEA57D50A9ECF4529BF907C09445B3E47801F2A7
157FAA847DA5E22F00136F21273615D5288ABEBB427E01E60CCE30B0F2B691E3
A8C1DD510CAC176665F9F845E184CC0594188DC4771B8904EEEBCC26570D5C83
6D34EF4DEC34F23A4282E1448187B3AA4BB9002792269E14A11BA6A5BC7DECE2
0029034C88696775902DF6CDFAE2AB99ABA68FADE90898D7F48AED17DBE9CC3F
44BB85BC31F795942D5D77E3AD79EB3B6CF717E5CD434CE1C6B388B901F937A2
99F65C3217180D4BBDAAD2E96F91B4DBF12F6C352FA5F0492B73CCD90086FDAD
B941A35FC77F7364BB75AE2083C7C66E6C13CF17915C99F16A44ED8B88CB1B25
44153A1AA8D2DAAD95397883491CB46911D35870C88509B392E1B931F0E402CF
17A63993FEC0044612E8EB5CA65ED931CC5E0FE1F28D6565F3C195C8183E89A7
FA85A0C12A52763634899F898B83763908EC0A1C9AAD283809A935DE0356C702
F538EB0C2D835A9CD11BC6D7C87ADA05A734DEE08CB62CF82CFB0166F0F1C54F
38D882DDE8DEE28A07A9E0A42143E0FC979F53C42E821C769735FB865860424E
A7F5CD9AC21C7B10986B3D714BFD49F6DBF0306CED94DE945B5A67DDD8EC188F
7FDBE2A9AD81F7002A27F2EDE3459E49C27632009CFD9CFBB246A971A093D8E5
027D67A89EB217A0AD71E56421A3B1386C8878EBDFF132070DF8A4E24787A29C
5AC9DD10D3BB974C0C92B89BF728B6BD03C5A92A87A52243943EB3E77E6CC38D
EDBB2DB8BE7778936B71AE27A5FA67289DAAF80C0F5EA7D9E67929CF4142CD52
DC6214105CFC9E95B7334F9BB9C94C9D81ACD2DA6F0CD9653A11636472F5845A
F507C8EBA6518215D75034119AF139B07DA441ED1B5D45704665D5E85622B48B
EC700AF8F765FD970E1F82C2659A38F8F63251495D697C3E0E8E7CDEB23ECBA6
03CE654F0B4CB297E3AA3E9EF091E6F7D0D07D34102A25E12F04FC9F4B80562B
21C6D0B8BE94778C7E73746B4845C1ADD96ADA56EDD51EAE4683113F66F87650
90E7AAE59D8053AE0BA8DB3BCB2AC0442D6E7DA7789B74A83724CB18C0203180
8CECB597CFFE81423BC0B3D05BCF9C2F8EA64AC3C5F7CE2DD08FA2E5253C21BF
1C0C1DD432FB523701060720730E9F51B7626597A17CCED52E42690F9808BF40
C0FF302E4E863FE458E0DDE830AE5FF2FD1A26930E14FADD837552972E4375BC
3F6F857EF419616A0D2E3D646143431C318824FC3BC21E55EF5123584D5A3508
FE86CC6FD9A1DBD506B027308CF215ECA53E73C0C347A0C47DE886A1E1F78EE1
8F3B7924E56DE4D18CDC352314CAEBF065F610B00B529D079F2291FAA610FE8C
4CCD57A7A8C9F5071193E20C5358A7495DDE0FBC9B11349A03CB50C3C6E5F571
A5469121D122E16010687CCBA357EC5C1C77239733D652E40DC6F755919054DC
900685CE73A8D5738C2BC3A5CAAFD59260886FCA15CD098A1B0611374A7A0A02
E4EB602399853AA05DC6ECC02F16174606AB2770299A4EAE74166D0EC9965C87
B89B8C1DB7526B19F7F0C20B11FDB0F0656E7ECADAF295574EBED60685F10EAE
1ED416C4346753181147EB065D30A883FD14933F4B11CC112DE73301F7F888CB
67DF1D266655E2FF6B267ACD8E1FD4B60843C4A4DEB96E4C3F6F3D70BD587BE7
BAFA3EAC91AFD9FDD8AA23A57F745E383FF8BB6DC0C752C8AE387F1D4C15E4B3
D2C887A3C469F9DC2A96B15D33FE7C565961C2A7F1CD5D80B4B11525BD2B8C3F
6F760C8245A1AD9F508AF0EABE76207E935CF4233C2614BB02993C18F5228D99
AC686A7ADBD6EA7163DD1362A8CE7A17C1064CB861BFA9277E75B0A8C76AA6C9
98C9AD482CED7C243C9688305E326F5741E280311FB6537C611BA2451F461DD5
2B51651F15E9BE11CB03C9FDCFDE3700BDDAAED61CD52A7DBF4395E223ACFF1E
E359821663C771DF990F78D69355A8C1D072E20D0E000DBE4A0656BE7F021DB8
63F63DE07FBB104CAA97C01188ABA1F0AC094030E2F0216F900EEF6D6E69E994
902A4C425BA976EABF2B11775929B1296FF602F903C70BB29D852EFCF3751A5D
80A8849721E155F887EAF14699937EC5E60FFB3A13AC9FCE3CC664E6C09D19F7
D23F8A75F6D1464A7A8025262B1C95F281E0164473AE82AA9B11484D9D6F8B66
D150591E00FCA26EC8CFB1C926563979CAD433B91341797AC8D4E9842A26D6B3
3DE375C1AB93D839DC4F2D41639E03C463B9D53DF9D649C8017386EB0C9E4399
A7AFD8703D384864AF49F4EA3FE72CC66F826A3A692434D4D3BE6ED6DABA6016
F812E8D85184C463B9F9044091F80D435E1366EDBD597C5085B9AC04EDAE551C
BE68E84519D138C233FED4D6CD32DE3F8DDD32A240FD49AEE908C7972AB2A420
AA567E0BA6781213329980CFCFB18CF7CBE6C7FA3C27329FE9A10D03889EDCDD
324E112D5BEB28766C0B807B8FF1FB8B81D0B4103EBB92A3F801177BDE9BDD61
E288E9C68A020BB9427C07939EB5649DED6075ECFF58FBACC2E7AE26BB9A0546
118C9BB6E9CA78AFB3C7D87A1C043EA301C3006F857EF419616A0D2E3D646143
431C318824FB0C49362FF7408933501D25922724867F1084DDAF1D0BF513B767
87E4A2F56EEF9FB845A2F7E97795A15160D23DE3668AA3D7DA417C906CBA8079
93A9162700BC9A16725D6510F607A4139FF20EAA6FAD50724816D76FE683810E
63BA4E40BA8E5C0A6D51ED6EBCD11B5068CACB85ABF6D9FC648CD35B1E038274
11BA7AD177E43BD16802D27FC2972286F2B152BE1F52E47D6BDD0DCD828F689C
74CE0750AD5FA10FC0E6B5F36EB62D69D698EEB767B4E9FFE73FCDAF8BD20876
DF126296187D1364EB31556C2401B79B8A2E285ACE63FCB0B137685611FDDAB2
E8FD8784FAA7132BE44229304ADC8A686D6732B0207BF2EB32EF468462CCE9D0
CEB6AFFC1DB954D41CE677D750AB42C1067EDFC2807B3CE00CC05F6CA1D87A1C
83530D8ED64611BEEC2A214EED19C0949910584F7FE49B03F896E7FCFD087089
E5CCD4368BEF556A281D166D457F08E37D782E7467A552F704EBEAF9F9AF6A64
9DD0F7E5D01633F0D869255EB21B016AFD3655F66750D3FAD23810392FFC09EF
C2864447914DF3ED2C719753BB1EED9C4359774194896CAB73A2F2ACED52AF9D
066794BEAF0EB7F06C1D428B9D34331BFA9C9A08BD09FD5054C8388DA82C3566
624F6F7CAD4242AE6C63D047AAC8EF82134EC418EA69430C0CFA1EFB2B4F9BEC
48808524500F3A6571A6EA4D65079538C1F9087E6FC665136B7ABFFE8DBF1184
D3C3AA9575819DDF023FF06A5F3B1A51AE4850C6FDD082AAF6FBB07DFB6A6227
A73AA255113DF4821BC5FB991DC6B178B121D38CE79E3AD729E30028E43296A0
548A7C64326F696544F6B1F129A854A81ED65184618E121FCB80CD031A30A0F8
7D7BAF534E49D13772304484CE3BD2A9C4955C7691B72AD442BDDAD18F30DB19
0E4D004697B5BD861801D55698E3D6ECE62CE5CC9FE34A8AAB8E3CB9409F8206
F24A189E57A0B5C178B7326860AF2A334383A1C7028DB9A3509F974F409FA0B9
5E779F2E9093E016D90FE788F6D726A04A5D06B0C05E69A239F52F5EA889627F
19006CC52D9E451DC21450FD3DBB18715AF6BAA336E150E02FB2831359FDB957
92B2E6431DD24BFFF2DB62693EDC9C5A4FA4A71EA0848A9364BA6446D5BD93EE
9AFA29111A71BCFDDA20BCD6006B0309EF0926199A60E28CFF48B79840BCB88B
39475A7E1C6815544584C34DF0E22A5EB61F0C232B03C08B27866537A9CA5F4A
B3D997E3153548794D9232AA20C29B6CF38FC8562EEA94D43B47E1F7AE890D38
03E91CE2738FABBC214C731AD70893D5FAF5B4BBEC5416501276491B79153F8D
F73808CA8940A65E5F0D1CD06A704E946B53768B5F92C841F47646E5CF24EC08
A8FA2348D271D2A84CAFAB1A979AA7E43DAAFD896177F1F70EADCF7E077FF92C
EEE279D1CD8F9B064103EEDACBDC40EB2EF6C28E91A0A1B0D7A7B0ECECEB25B1
8BCBACFAF313AC51BA6360C4F0BC34696FFE3C105348362C617D60BA3678C821
5B9F542D81152BD47EB69563510C525D05E195960D0EAEFB771050039A2F1CEB
A3DB1E042443B665E915991D932209B3F4C86295911FACB51BDAD45965CB3E4C
D451B5A1D6149A66BA1CA971CDE9629C0B16424CF3609285DAEB0115E4A8A145
939599F77990E19358425614D41218CD20852B1969CE91DB3F7B7E87BD9D405F
2E29BF660674457A70FF888A59085E68EB262A88EC25462A4A9EAFE20A956D43
50D8C90F998103A821C35734F0153950E5F72FF6A8AA6940836AB19ECB89B9DA
9A93D028D28EFCB73500DFC2F30D6C47A485B062196657C6B0CA8422DC11C6CE
AAD52991D1A9E5969D76BDE4FC976074F2D623721D38E3F361A941457847C5EC
09C01622C089AB3CB216A5C27D634731F3CA55BE5D1F91FFBA4A232B68F80792
19AA89F699A8C22C30EA308E6A5C8EEB5921F493C8F5B7691CD5C39E936ABF65
80C629A7592A909A4F89FBE2E3EEFC8BB99DF3B9CCE8FA93A71128B87293E690
C242ECD53B604B30AE8D7172F3E47139FEF1D23D2F930AF1B361E2AB0F5B11BA
428CD87225C7FF28FDCD4FB898A052A0B1A3C494AAB27E0C853EBD237F5FDBB5
82FBE603D54C4AA4887AB453337003BE0392AF8359E416849A0B2DEBEF46E3AB
2B8DE7532BD19CFDD69285BF725FB229FAC5B04008CA381E09AB94F1A9224922
B4A5C23593F8765E8124AB49FBC57F1B0A7E8F6FB6C483282DE613E28E0AB1E0
441517818CFD111E32142FFB160DB6422A5884151A4054D6076EF2F506E3DB3D
67A2D10FA038561B4D714B08BEC08EAA7D1909D5833FAB8D6671564F796B070A
2B3717577FF24B2CB8D87BFCCC85B1F91277DF1E391ED325F8383B11D57D9AF5
0EBCF7152E3715510FBF60F16750CF58F347797DF580DA0E0A4F13FBF20B25DF
F7861AC15FDBA1372D5D4D2555A2E8E23E29D8C8C5F39807B5A46FC1B70A9ACD
B172BAB4BC144943B3D3FE06E95C6B69FB006A083E8592BC01483D8DE50B9A6A
C86F872ACFC9489546968514D49014716D5975AEC37D2CCA662CFC60637C65FA
FBE78109CAB35AC2730A761CAAED96AFDADFC1FAE977B6BE8BB8B73909AA1117
B78A5506192B150BFCA046A36DFDA767967A43B3D1F3FC4F591BFE0EA1D77EFF
0602581EEEDD6C8F062E3E6783AD762482408DC1A5E5C900A43B0115F76BDB75
E9FAF644E1879C37A1E08DB03EDBCDA51187777E14F63F0C62F40BC85D30FFDA
81640FC9C58E6C4A95E1027273D38482DCFC5F6F6E64E4D57EB716ECD75C6A6C
AF0F0FB5F6A73A47FFFB9D63648979AD6DFC8C619CE8FE1EEE3B9FE2203DC6C7
5B27035ECC31BF4368E12CED705A5823BF6AC2348B46BB50393DD2B0D8A303AD
186A5DDB0595138C0E3D757E8DB9B67D98219241C0DA67E5BEC040A958B14BB3
D782151402720D5B4C77D25AE31C4A75BD8C7EB02722DA8D89430EC74AF0B255
2C97BFBD1C6C0062488763FDB07939C52A5D0D17AB4CAD27D6776A05245E5663
DB78466EFF0F8E67FEBFA63628520A97B48285DA87CED8A9520D6679CBA61BAF
3ADE6EF9B4205BC43BA3CDA488E512ED42BD142526394C5103BA4718D58F167C
B6741E06D4CE5E269D3AFCBBF060F416C0B747EC5BA54AA743154084CCBF021C
EAFA448258460E39549BC1781B89BDB53A9752A519A9BBB3CC59D3FBE6A84F1F
9521B6E05D0A0B2E0FCEADD4932A5E64E2E417C6B64D84B19F7C2D7C143E287A
BDB12AA1761639E638CE9D89C4CF0AAE1B38A2837E19E5AD8A4551A971DCF562
769FC5E4767C4CE91F8896FD3FE37FA5F235AE1BA3C6F3547FF24606651E5887
FE8CD61F46FFEAFF4A66DCCA05B42F9B762FF8905BAA1B6D15269F38A2D283BF
456D5D8BFEEBCB5B69717F22A0503101F9953D8EA3833BE27127E1C489198821
227C1ACA75B845E5D0C0F7D8416730AF4BE4FC931E965594E03272CE6647F502
4D51CD78D79C802EEABBCA93CBF968187FFA00C2E8D8E14D1017DC8428791C90
0E377B78459F629FB32E5FF3872C95854381F1D0D070EE364ED35377E1DCF455
DFB59E53117FB961AD0BDD708C34E6B895AEF03EA76FE4BDD1BECB4F085845D3
9491FEB49ACAAB78D15ECF938729214C68FFEFCAC997EC286F30AD0245F229D3
687ADCBF4D6FA08D7289D923565955106A2FFAFA8C9F636D647F334B648E11C3
659BA4FA71AB8342608C30E42BA95277382833BB9C14C6EEF11BFCEAE9139B89
256D5E8FE9B80F6DB3179657983AF5CC8F3C7EAEE084A74558304627D0C03A01
2B6CB42DBC8EEF10FC8E83696D58F0CAFCCAFABB836E9C1C7887C42265DD4193
C8618501A7FFCE13919D15CF5F00684B37087F633AB4C7B25FF2D7D54B31D2D6
96DC1E52C828A7A1155E6471DA39E1D47F152AF583CAE41F7F7FE0AA3F1F7DD9
175A2945C257765C4801FB768C6188F02FF2328F7D5B493D274CFA840BDE34CA
C6B57A04D9EAE9B90595D133E0CA2A3AF2DD6D4E50A9FA8AF67CE3FE823A4E3F
9E367C4D358692A287F5074A8C01BA5518911789F7767BD01F00D086DF326D7C
A50C1EFBB3AD48F21DC7670F524682E7CE6FB4EF66525E8F15F63E8A9F64DB78
90533FDF90C51ACDDB5CD7B1CBFAF76EE833E519C3715CFF2AC7C25F0EB8FFEA
273601D1E82984B8AE31AE343F37D03920CFB83E2DEE7642AA85B1615F9CBA1C
3C3197223C9F0D4AC9F585ACD311E1BA537EE424CCE1F22EBA8031443AC094A0
7EE8CC94D559627274D5026EA0DFDE5F67ABF5E84CC6B6717E8B794AB2DBFDDF
3A89648C906439A91CFB1AA195D9F12E03463930D05A3D71E1E9830AC1A31C2E
35BA7B396815CECCA18146C96709CFF862E8552E4FDEB7767292AAD81E5B4186
180C7D70697B73BFADE926163A5780E71276C60EAB7E25C124964778296D06C9
02559B89DA648B919EB362176B83298EE2D8B405DC67F2F888ABC36137C2137D
E0D7EBBF2323C750C674154FC6CA853B13A2D88CB67CECA9A1D3498D569DE012
062C1B959357A2A5903A5BA40F8E6CA80916037DB040BCE705D91E61D6FBF089
4C659A61F005C6FCE1A0E9700362C58C9FABCC46D24DB46E33983DE9AAEAA7DA
FD44C991F74087597F21C39DB6A2CA7C80E5410BFF7EA073A18DC2F6999DB161
EF7DB88DA4B0C592385D35F705BC2A9B1075F1B1568CE34A4F7FC812BF766372
E6F0277D8604E72E2594DF545E359F2932DB2764780688C794121E4A50AA7CD6
479A34E1B75657B41FFDB8AF1C9E3D3CE95EB410E74A1A29DC16D7FC12AA69BB
C23F9C6C4B24E6F0331C3747E378ED0C634370C3BAFFA2F1F9A03CCD801C4E1C
6911750F761F9907A438DDF4506C6ADBAE868F8E3D97C83E366A89B60E01C8D8
AAABC217C07193F92A25135331AAC542A41BAA9D9B246CDCDE58236DC29CD0BD
4C7842713E95F5CBAF73AB6456DF36FF580B2F42E21C6902705307EB16D94092
A85D8BF6BD657788322EA6A7F874F53F5EC3D5A4DFBE35B5911AC6E218ED62EA
FE23AC78C1FD52C0591102D74D3C6FDD1935694B7002E61FC34AA828BDB14CF6
B81946BBAE9D2B044B3F72DD84699E5735D7A8A57091D3709FA9D5314AD7FEBF
0797C5693895A99F6E03BF0F19D8246951FA87CA9FE08235526B59964E529D71
4203D3849619EB4D842660AEDFC5430F81C552C6AEA6BB170154C777A63D6404
15B9729D98238DF0E36467F8AE46C4A0A633D4B3F8CFBD1194BA8E3B5F981868
3EA2F04EE0AFC3AE4DFA747A1706F7FB6FCB5378D992B8498043D00CFC47D2AC
1081F1A0B01B07A92A8282B3EC6B7AB485F98415
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3ACE7772980137BBF6A5C4C136C45CE680D23B992D7F
7544FC9F70CEB83E2B66980ADA7E13488B61554D8CB264FA76074355F7FF6C55
FBF130009A03EEABEEFB1ABC2BF844196D67F7A6D7B5F71162E03FFD780CDCE6
720DA5752962EF6FFEDFCD9C2CEA3A186DFAC113892B6E7F1EC8B28E99D09742
86959C4335F1C11135880D99DE373D9861525270E0F672BE94EF236EA6A73421
3C4837DE148223916BD6808FBBF4CA6E666ADBA1D32034287198B0435025F69D
44C6149606533469447451C5A1E72265E853A84130ED220BE1D4AFDDF25EFBB4
8C987885054EDF05163804CF8D100E93E61CC40EF2EC83A8AD35E3C6B1FC8B29
9776B6E6585C74EFDCD92FFC523C63B7B3EC4ECC7F3CEC696F9A92DBE7966F8C
C1993E02327D0CC74E7D35608BEE0697EBDE1476806C21A9B6F3FE72223AF71B
66736CA720DF2D4215B9A3320AE8EF54732435114C85F5375AA3D12A911BCEFC
7A831D065FD4A386130668096CB88A1C9F8DDF5F67D25B303DBD6F284732C5A9
A1C3A07183C98355853606804AD2F83BC0D7603E6F6190FC79237BC6601800B0
17FCE2666616ADEE0FE948A0B9C1C90AA75E2BF5E858BBD2B061BFB2A85CE30B
74E4349AFF29C6B1DB4CED5ECA4225664281BF6FCB6FB1844BF414887F3A0E4D
4D09770215A55B1226C64D822D5A8B3CD3EA97C9B49492E06339E8F81A852905
313D87143D8EABF221CCFE358C0C4353942F042CB78196CD40A94012FF5B31E1
5FD4CEDB60541D09C5B88C5AB1CD169839390C79EB2026F3BA18C0FB6620F98D
1C3383386447F757F2FC9F9D04A4BA057568DB59E73195125429C906A025FD8A
DDD08F10A251657718FF66E3276CC1A29E1BC74C7B4837519C1B9B35F7F00F5E
66664840B4FBE2474DDC16B9F644BEC0591E1365A7D0F63E82D9401DB34AB2D2
E007D02864D9148F69DEB6C2FD817B33852A00DDD8FE1E9707704738F84E0F2E
208F1DB153D40FBFAF25C297FE3D19424D11112CD1B4F54367B9AB04
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA853
B843CABA76BDE9582090299F423519EE3AF8F83AE7F7828B314B6E36E9127419
F274E9FBF5622C5E48D7E95664D6C0C1006661038CF2C93BEF1DE34A163A2C86
693A13F4D0F052D2E183F36401F0C29862BC1B36A086524F76C7EE2C6D436A23
7009F146F1756DCADD3F70C51FDCE610E30C0F4AC538A2703423A07976ACA74C
25F4CFD6A92969E206375FB0C672E45948B0E832F2BE688EC22FEEB3E06BBC3A
272F73081A30830AE4214F2F029918FCA40BAEBED6299EDBECA01E08F27E5627
F53BC56F4AE7CE2D6273B27323AB829E2D51672A4990E3AEE84331583A99DA4E
63610AF8F10C50FE6196E3F4C1E4FC9BA6BE0ABDC81A0A7BF6A5792A97BD0A7E
7BBD31C3FDC01D734550843C8D84C6CC0B492CD1A6CCD57428F03A863E959C77
457D401028FD00FFA9BC422FD09D8B8A70446A61CB256A2FA0B59A2646D9C5FE
961894DB8B315C52008B4416AC35439E010BF90E43A05FCB2FBE8E62385E220E
588B7FE5509F1BB71150E159D01D24EE28008D4213227FE9BCAA34364B1039F6
BC142AAB19C8E9B15F0113781DF9C9B3BC145955552A901AEBA588D39D7E87F1
CAF27D315E168807021B0CD1B2CE13B611A7B5FC28DEB4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE279918B0B31E08031DB686D518B4CBB8A4D0B
EBF6750A452A7F706EA676E3B3237FC5656B29CD5A3A04F82AC871B526CC28B3
A61D985EEB3610FCAA433B9C6D4683C512F0FDBF3EE6FF552D7BF0BBBBA37050
FCBE3F164189FDC8446ACDE8D0D4050278151B46E56AF826A0C2E9389C2B8BB8
E38579D281D5142944D3322E1C66D456E4C5DD727AA41FA5B369D5E10CD71832
A7DD40DE855B47289C449B6AD8D5F1D557102050EDA5F1641EAAFDDBC082E579
A06D8A3A323458808BAD0F4B8A2BF406DBAC4C5F555EC96E760C8245A1AD9F50
881DB475F892F868823CC55D4859C09148529FBA57A392127B68F5366491D1BB
097D8FF4A71966D42DD988F48C8A1F4DE0449E6AAE79500C42B4EFE4936D0D00
0FB339115493C16412F1D6DCE02BC7B485CC108C6321EBF1C609633933A576C6
B0758D49F3155D448D505F73A5206EC1C8886F5949790A7E4B850B6B8E31EC18
B7321E63AC75B6588774961F6B7D313B850AA4B368E48DAFAA5693CAA236E150
E02FB2831359FDB95792B2E6431DD24BFA8F2B51BC21E2E5AACC0CA211F50A13
075ABCF9F440CA468403D939B91520C652F1196EAF1BC975E26F8057F69CB972
E976F99070AD3FCD958C1EC54B3994EA142AA0615EF7BC00D85F75BF5F32B350
E2CF46BA0E8D0120BDB54910E5C27A27B59664E856EDDE290103A0D490FD76DD
09B152B3AD1C4754696B239D4B13935AC19769600943C7343A5E7A06C9115395
DC2F92EA95E5ECE5A08EDD16DF74B6297EC0220C91F8BB9AFE742FA96456E131
7D41CDCE88A8F9A12D46B8FCA50DF4433B0B8AED6A63BB5FFDFB8D48D04F9849
2972699B5667C0D2D206F4785DE20A854E1D4C655A690689B7B5A19F8162E5D8
454B7A1CE94AF723F47C6B168CB7269CC802B14545C8448B5C260C6AAED5FB23
2390D7239C22534FEE644AE96C5718EFFB9DF1AC47CB3022D3751E6B7123FB71
403E154150FA4A14EE2CDC8F0BD084CAB30272E8F065218BA88536F138B94AFA
D750F6EA9BB43271084CD876A14CEBEB86283BDB500BBC0F9E152C30059054EE
92951E4A202AB409F7D16443DE00ED69C1FA674BA3664F8BD00C08A27F475C00
E6AABE35B01B991AE910B7DC821CFD8A6B5C7F4B116E78065CB219C926D45163
EBF6E81EF0C38076871283D64FA5F2126CCA7E93636A7CCA2158B99A15CD405D
4AD290CD8F7AF8845CF78D4BE9C7F2E4DC00372530C64BBBB785117A8AEEC190
9F49C82BAD55AD174D38A74582CB367BB50ACF8FBB2C8A2EDB17FF267D0F21C3
5BE42CA518272C9F9FB2DF0780C957CF1B9734E9F49C0E6EBDB5D24ED5D673E2
6A25811D4BCA9D693EF8ABE784D2BE46DE1E57E1B738ADF6FD49E6A53BF48C6C
2A73026234D3719C72C2FB8B8274AB54A6853DC6784398A6B994BE424B6E9078
6C303D590747608AF3CDD6A51B5612DD5D49E1153A25EBEAC76FEC601CF4D10F
65DAE3EDBF9A163BEE244542BFD2849D498C239237ECDCB23458C7C3B9395C7F
900C2AC7BDEF8FB9D4574698BC8D4E374B34969A885A0A4AA26F19F8348EC621
89B42297868AD2C3E80D95C41FA4A5AF7A016D3C773E040312AA0240DE24C7F9
D662FC2E59673DEF563AECCABF724C09CEEB5DCA64FC6D24A091A75B5745DFEE
F5C1162900B5F1EF5A7102C27DB1918679E7E354A5DABF897D9C8EF5A14FA8DF
FA3A7B3D47542FFF5987268E60E7FD64B017EC6A8FDB4BA5AB5B5B58046899C9
C5993E7302C870678DEBE8FEF3F2438217BA5121CC668458620DB3D381D56770
19CDD612E5C0A267BE4F707ECE93B3E1E8BE65922315729FA5513AD13B562C5E
E145AB39905815D6C3E8B60AC5C1D4D7731E2A6B122C6F57790C42B0368AD7A4
99EE5F029AA6F8E302F4CD994EC08C00AC6A66C51254F71280CC722402E200EA
D4F6F489DCD61B81CDB85804A5EF00CDB09D9C2EE4F3D571285E319A78F90942
1C31359DDF81F38F6E8615BCD0E6CFFE077688C365888921E45608C868A0F6F9
D726CB2CD81B49A9F47C12FF76284D3B07E2C2E788036B4867F90D40C1E4FF74
60399F1F08F98A05A579D00D1ED5E8A86BE9DC1CEE3FCB03B9A0E4BBB81C849F
AB1A6089E9807455A5DD78B2EC3090E36EDF4D19FA6BBEF386127BBDB53D25E6
8448A975CD56BE0A93070F848850FB9B3B0285C7FADB28A3711C06273B79FBD2
A509FDF7AF81630306D67E0AAD0DAB78243E1B814F745234BA7CD57325B5A34C
C3F984018DC9653649786481788A6F58ADDB87DD0D883AF60455753850A63756
5EBCDE76329F5626E6328EBE3DB5770A4C3E21341C304F38845FE70E091803D9
D14037AC4AA8C4D17EBB62ACEFE5344982E0F489D72EF60183D8F2A79A3AA765
C18E0479B0255870CD61C8CF7AA8DE567D174EC90945404C5B928EAF3E8DDC1E
018442474EC6B0B42DF539EC1557722299347DCFF0347BA4273054B8062D3DF6
FF094944AE472D60DDF6CA62288E4E780F8614C7749C9406325C82715C866134
637DCCE4848D2B051B8E0EC7B88872E9AE68BB5DDC30F4A61119733F6F6DE0BF
4C6437A849A661B6A233B1C24238BB910C11D2A8024C89FB5DC745489AAC2570
4C61242B4B1983A5D0B134C8052495CBAA9D2E2E014641BD58F0EC389FACADA3
08A1723A5C2492BA0615B0222EDD152AD19C307118AC0086653521EA59D676CF
C36AB586FF1FD4C383E2785EAD36F41274FB0BFF9DFEADC612CA44A7392D8E79
1DDE1DE818BBF26CE3BCC2569F5CE6DC91D4F8B7800A05DECB300CD7A8C38D77
4C1DF436013901C9671F77F34A63F361C5579EC5E00C5A8E2FC97874F6459EFC
C1760E9C6C78E60CC0152340DA6F26C67B2E10B620750E2C44E5CB9DCE747E29
6F7E716E6BB12B699A2FCA90DFB3DD730D96D100DC5B1BBB1632D7015235F4D5
1C1C753EEFDD6ADCEB45DF4D00713744039C43B860B5A9C51AF0BEF11CC8E85B
067A402342896C9B3BAAA570C4900E12D720F2812F28626DE3BD3F3426B82718
259AD02CDB518BA4C4AD8F261CFEBF43857EC7A543ABB1E059247E276E206CB0
0BED125C8F78A665901F80068C9B0AED83074C6270B177BAA18F1975F43E9160
8B75D86D9F7C1E986C2DDA71CBF33FACEE675B943764AFE71B5A359C4A092916
3E8EF660794518DA4307AA5B38469000FBF31BAE9CE8703754A099D21B332D3C
A19A842755A79DDC1E281A8C34A969B80EDC946658B7579B5BCF07AC8B45C2A8
3664140E70CA62DCB3153CB4A8E46F12CC16254F52A26FE47FE41504D3E851A0
665AB60BC0CE5C72512D196F8D1BC0B3FC12DA2D13F4B9AEA2D017EE7E574B86
2576F5EA495F51E1B3A86090ECFDB57097EF73BFFD5E41E8AB6BF105F87986D4
95940A8B4A29E4DC974554DF975D026EA92FC09DBD65783663CAFE414B6F8C06
F00A26631D7FCC4527109F177093E7432F5FAA6CA14F1654ACCFEC8FFC127488
F604E972B695E9EF18F331A58BE4704E5130FB4984C3FE2474E6CF0935F90B79
7221D94774689E83E5406F5D9554C1284249C687A6CF5A6B4783F54267C48710
32ED406DE854CD5E243C0BE4656E35FA02FAF5101E1AE6B7CB286C9DB979D763
FEB468FC7AA2DDBE2E708D27D89164B12BD8BDF0418BEDF018EA67683158D1B7
73C6EF553EA897D5F2D53E75902E57D7C4E06D7DC83F1C557ECF5DE83748370B
00EE03A3ADB919976D4DBFF11B246AF9C2FE922A8A6F8CD47656ED2CBC816B17
3B01048BE9D1E4B54ABC0396D5203D088ED7A1FC7CC863AF414AC14AC2D75E5E
EDEB706CFB2AFE24EB580E55BD31B793E4065CE83795F047004ED88F5C38BDA8
7F5FA8880517429B9C4E5FE980448EDF3BD57758FD145E769D4E88BF43D19050
DA58F5EDC7B4AA76BD8CDAF0B8639BD5D2C7552AF5415B7F35B957F02B962930
D3D0C3AABCE7BF840A7A035F2CC57FC978684570CF6C8FDB960B9CC6E9435D65
77D1CFB71D362BAD7280AED8771C6EE2F7E2D86C5661CDBEBB354B84249E93B7
7A0E409B4D5E17600E1E43F5EA1F884939C0AE467119F1E155676D10A8A35955
BADB667DB10180DF404F43A166E2E533F1C050D35CE4AEE92C35EE391398EFCF
E19EDE2E31F837DF86F1800F59C89EF6401112AB73434A3938E1970D8EA3CD40
C7B8FB44205899626FBC269C25478E0A63F78F3460EDD4F64B4D2A5B3E660B64
D293F803C670E243F0B0EB1C548746C08C7F4FAC0D4A7FD8B7369AED2AE9A79C
74C0FF0E0B0C1AD3B59BEF79753FDA3E929B52F207382364B1C62AE8311C4337
297E030CC0CE93ADB4E2FEB60E28FF6D4AF0010D422AFC137F2254FFF6C2929F
CB76A235705EC088049C1F1B0E78FD2D357BBBFB0E12CD481F96252AB7402213
DF9BB4464515CCEA5FE4C0CF761E921D7D2992EB24625547D54E3F2C644ABABB
47914DF3ED2C719753BB1EED9C435F2D571BEBA4F76A0AD5DFDBA6EC952A4F37
948B63263FA4097587802F6C66C3BC6E9DF45A22A24877E4A4499697D46B779C
8609E85E4BCFE84319532B3AC9D62BD413CC127C8DAEBC28D7DE5CB57A30F23A
2859902409CD4FF43EF6A99E9FFA2DB4113C12AB9C616F074276C4840A546A73
0D24D8518117AD200014839545B1078F38D7284FBFC473C510CA28AB90147613
F0EBC94C3EA0001043705336F16E783FDADA674B361F951D5152C0011FE0BEAE
51286E4979DACD3F5A953BD9E918D5E46449525A4A597FF0F091B2B4794752D7
EE5D9B94524DF768ADA1377760AB1ACE2D780F5624CF53DE046A36EFB35B52F0
566623440D7F364C4030648BC39783FD7AE189510DB572D01093BC4C7EE0C09F
389FF828AA7585F9B7FAFA718DAF925AA837B8C0B647161E5C322CA820521400
5D234795C9DC1354D1C0E5ABC997C64F3C84D2C3B7581BC9566EB6D012B6B784
F740B8E0B360808C984DEC73EF57328A2347BC752EB0EFF7BE8B688A3622826E
C83CC42DCA4A26C504AB95C5232A86199FC1295D8BC52BBA9C5089A346CC5760
009233FDE0B38CD4EC1D07A9F817ADBD1AA6D303AAF94D5FA688675B55D40FA4
3C6D97741D9FE4C964FC6D24A091A75B5745DFEEF5C1162900B5F1EF59402CD5
E4D0C3953C9493D87F46CE4E9C7A543364A9B82B34154924F4739C650A8EF8D2
38C73BD6689A0657D8427446E44E2F5C77937234D1D6AFCA63944D3FE5126940
8ADA00FF11BFB205B9A42EC1F50B435E4D44E14E22056FEA071D0061F16D8879
6C4BA0C670D0E715ED9333A0FBBD15F19CBCE5F93259A6C4A8CAD50B9186BF14
62D3AE2AAEA8A45E9A29BBCF83E95F0C65B2D60169538EDFAAB935FE3468186E
CD90E2F15FDBB395191E6C4659910683768F80764D94FE8A746FD06C08F15F97
3A528084C73A3416B7D9498707C04E9115D411FD74AD771B5973E6D0A573A1FD
2E01CB1197990EDF8444CC83F1AF789DCE5C7F64567C9D80D1829D7FE5F45647
ED6B99C6D96B728840A77AAB12DF037473065B62E9F3775CAEDAD9508FA92283
6FAA01D50CBB9B12B543AF2A86A99F4D544B8974F01B52945FC6ABCF3ECD8410
335AE6CAAA4F740EFA8AE1742B115F4FA7FD8E330D0B86B191FF5B038A5D0C32
91053A42460468F6A1700953700663A85229385FB9BC726979DE858914A95826
CB2A8F0F17773C8DC86EDDB610CA36C8A6051774DAD79E4E3DD10CA06A919430
0B6FF769550AD34A047DDF4DCAD48C79C13C76BDB9A98E254804C9126F6A007A
D697659D0F4B9B7BE0BE1E74DE179CA649DEDD316A452509D2804B5BE0F6C5C6
EF94B0FC821BF1E02C91C149EBC163C14366CDBF3C81F57A352355320AB4F3E3
A84E4B60EC6CF57A1A00F90F224190D7BFAFF83C13AF40E46F7154198D7BC2C6
F10586634E82705468F167630971BC01DC641766DC254D9E9B06BD62DEAA105F
CD48375C11A3207B5A381FF8E1C163001513CC382BDC172026981E9CD05FD8DD
83503D108FA0BF72ECFAAADAFEE78E1D8D2B9E94AF57AE0A20570A74D0C84155
353C360C86120BE8A6A2B0C9D6550784FB8929369CA329F6A6D89A7066E845EA
FE223A6D26B84EE6B6ADF0D9950A195F64FD3209C6D47B46B7708F855E501D4F
6F9B939EE1663FD02D1E1D74F22C4DA4143A4D523E32A0A371A51F64CDC4E06F
544F2055F67F0ACD4E9D99C47877168E8977CDA919CA86D82794F04E7E98644D
98246CC6E5F85E045FE750DA4A9B403FD293CC436888B75949007FB2D0557A88
D362014EDFD3445233A03A005D3F670E67B8FE790851B16E71241433FEA5650A
3908D0B0BD195F64242395E6C807B7D00E12CC9CA711980842040899809A443C
00042C681FE3F9BBDDA09127551CC4780E971D3952648BE3ACB42BEC6D5B5DA0
CAF19D34A8BD8E904BBB589CA901E79BBDB311C102F70F1D2FE7EB3609B14BBF
10E66264FD1E6EAE175987CC0DE53E3799F86A71F96165AA3EFB39B7B13C5FCC
011F38E349AF6FB76AC51841B39F02662AF720242D74012508F26C7003A39A3D
65A8CE04E1583229836D0DD8CA390CFD14E80FC0417C7EA00C3BF24A9F25D40F
4D6755FDDF7FC12E90F2281180BDD1263A9AEDB29E4CEDC083E9A8818E4F0C86
5FCD780F40BED45ACF63A6B1CEC1CBCA4B0B8145DD941B8766A1D28C0EBF9178
9E2B42D978A47B6B18BF0134F12CB398D097D7FC83EAF094FB08A17E36051178
8A42A3D87ECC5243915C0BA12EC2F8AD6305A2F219F870D6A1811AD7326AE12B
896F411E09C15B0506D1F805511965AC7FBF7EF0A2AE13FBDCC2812207A6503E
B00435B0B6EF5E5E1F853052970408E1B96714C7B1D4F806F889EBE1F2ADB31C
432B7A6B88F7B26F555A751CBAF82B795CD0F1BCE51275AA635695BD883B2F6B
22C897D136C06546E80EEBD1B06127A7E7797B41DBCCE9E48F09ABAD8E116038
BEB06DC30ED8E89BBDFE4480A36CD4F92F872474D1DF235DE89D464EF44F2C92
97ECBF2840EC61A315630066630D8595A47913D246893E3D1682833519113716
D1DAC8CE1540946D3EA0CEAC72D968371521CEE81C167C0322F52C3B92C29F8F
D050130FF7C7D8E436ECA4E5227FA99FBA99942BD86CE4B46FF5C69BABCA7859
A876DA0B21819E209EFB5641184DAEAFF3FC3E99ECFA3D1376C47B399F2136B6
E9A563BB6CF6EE049BC3790CCB1FFAFF2326B40E27E034DC75E7E797B53DEB54
9C6D3C6DE98769691F9CE7ADA0F5D6C1AB83B98945A1FB9CE7E2D42213218F2A
CBB2F5361C86BECDAEEEC705F1F1DC687857D57A34CABDBE4B0D8667BF0FE54A
8E67BE8E0E51D90F63043196BAA257EDDD055A37FC3D5A6F2AC7D97350CEDE8D
8720A80DB951D1D9FAC8ED3EF4D4B03D5D15AF4C6B62C52FE635D7DBE1DEBA46
03B10AF1715EA3418AA997C16C2988EF7E0148A1DF74DA038B947205ABECE765
A6F5C39C5A27A1661D9C192421E79A5C0E3632C09A62F2A89E84964B2B68602D
92E9EFF00404DD0A2AED5D5C4A91CCC4E24C50984C346A441E0D4C268DD363A3
82E750152A94A0A0DABC97B4B2A944138C5413B08F8B757A68BFC53ADF8F88D7
F4844A8FA4414EF339406E166CD727639D26DD574C550AA3864CAD2FE404C29C
FCB9F734AC514A3B200ED1151418051744E40FB9C87F5F56E3EA0BB5CE010201
005AD0317780B06EF63A07D938C2D114FA43CE0B06A5B8FB130A3936C4504264
CFF299997BDAE4EF14F9E60E487517C8ECCA81ED1DCF6536EA8AEEA67912F19E
B02D56869F7EBC6A93EEBAC763AF4A2556E76F11E21940DED1DD6815946798BA
56470026735A1C33E62D7A8D23C21F63B4642608AD851A31DB1359721319B911
DB91692758F1907EC08F5E8ADB0E9A092174032BB57DF31DAABB7DE1EBAE20A3
8DC804C230E228574DF9E9896FE3FF392A00DEE04E3156C97F8C103897DF3058
6958C707F0205C3F9872476833B252DE228173010F59376FB1AEB72D08E929E1
630A7750DE134C6DA77B5CEBF5D03BBC3C2FAA19D4E7C58231807317CC077DFB
EB40EF57CD4DDFFCE7B9035E2CE43776643E402FCA886F5949790A7E4B850B6B
8E31EC18B7321E63AED47752547DC27269C1904CB0CD0160136BEE30A0B65D10
BF4D7CC2F28CC4EFE8A891B2A31968694C04BAA55BF3CFF37AA1D0570FF3D683
011C315D6B938837DF75D2AEC19BC7C0F4C7A421734301813921B971F6B6E7B4
1F58302FA1254A1FE3C44528AFF1B6638CAF87F553DF1F0A84DC8BBD23B356B7
A1488750A4D98DD7966737111A6B79BEF479A567BAB3764282DA78B388D27A6D
EC10E1B914D4201B9A4B4971ADB498B74F8F86EE5D21DBD34CDD4E03E5A41ADC
0636AFFA3A9031A7D52AD383ADEFECE76669BF76C5EE35D36E883E3362E8151A
38AD6FA6A56560228EF0C0B8703123FB2153DED6B9D4555BE6678F63311F130D
EA693AD05F6FCAAE4BFC1F60C355698E356465F57F984176061723F228A13B73
04F3254E39EC3E810060742A7B748BAD4C7AC5DE779115C57BF3DC3E66A13B29
3409C469920A5E60BE73C36611705DF0DE76780DC2934C4287B17F5613AF6A08
21CF81AA3BD93F1BE08D614D0CAB75DC0396E0802ACCEF1ABA9A1CD9797E0562
5080815C62AA5706D772C8E0F2A3303895C92605AC43CEA7CA7D3C3A6403B9A7
675DC69ED861AA0478A60C98204C5747F1FC0A88D9E1C5058E00713382AA8099
89562C3BE6FA1B3C3155C4C2C9D9B6784C80119CB77D9C30A1FAB83995414E9D
3900926FA8087A61383E01E64D3344B5A6B6E1AF4FB0AB0CE7F517E28F67D1FC
7629636842E7AD3ADC6C73336EEC461C81B8128C629EF0E86EAE03D5EC474E7C
E6AF8E5C9A33F4E490CCF8636921014C5E850C6ACF3DD244C32A9E4618FF40C4
90B27180A053D6567A2F0F53E5FEDB788C961BC74FFAE2E26DC36958C619EE29
BCD29A724AE4024D5B5A6A25612F7378744512C5BB5DB4DE1CA9064368A00D89
E04C07B80303E089204A1ED054FAEB7C41A0858354B42706AECDD9AEA1AABCC7
00A5D6C5B7D1CEBCF30EE34E39143E5676CA9EB5A3147745E7DDE2364F639260
77121FAD39A304CB7BD67738778C600E9F7FFF00B5B895884BFBC020895A26A3
8AE6A350169601AF4CCD120E7C16E6B195372FAE49A9212103B3BC5F55E235A9
0201A826568CF2C21EE1C54D4CE496E97C50334C156FDD2F9219C86854E96B7B
C3A5B87E38409DA085A2924AFA002FA83DD86D63E9FF50B21ACE4ABFBFA159B0
7ED5C93D976CCAD20691B072DA28B696A9284A1DAB3BB85A734B583B3E2E7960
9CAC4A2A0D12DD59CC296BD8D69AE3E4FA2CD789ABE07054E39695AF6B99D5ED
BE2499BF00ECB6C5C0F3CB6F2433FA5BFCB2320F6AD8E6CFB0D2666679C13A65
E1D6872B1873FB09BD48225E110640A81C7C151D784EF671B66930A143948E27
E1F2FA81FE54BE6C57EF8C2B2E460F086265E1AF2573482AFDDA9F1D252FCF3D
CCDCB3A72541318543A028C9C9DCBFE53223D096351D214B3DC904C32A71036D
0A741AC388F04B00DE2653B18C99512BDA16157E02FC97731F1B39A4924822B5
265773A5E86A17A4185EEEC3C4AC7AA8B27CFF05C5E768115C104826CC10BC78
22701F493A3471A97B87D1E05B7A9A4375CEB76B0F1827AD916E268A701EE540
4CF3ADD7D79A33AFD79FA05F287659B8D7B2924AF04D875E139FEBB73B10C153
AA656370D0A0C5489848C5FCEE650ADC55C703E9AB03C4C817DEF45CDE086413
5B202DBF7983071104BEC1B29A1DEA1E99918B82D8BBDB1DCFE65325453720F0
2A01A0A015630066630D8595A47913D246893E3D168283351E1A7D6609D033D8
0A82CC481EAD70AADE0E2676CAC461FE45040B5255F62BD2B6A93C68B79E9026
102990E062B5B058542C45F05748B1A1A133EC7DFFCC255E05EB66D60ABA9EFE
F377E49B7A134356A0994785F9078D1B8B97E8E73F801263DB7DC7EBCDD9B3D8
4D1CD5BE08DB019DB26819ED22A9E83B7C851AAC3FB59E4C7FCDCD4BE50BEC9A
4878ED27E515FED0D26FEEE69602B2BD58D145143D2FC60563D081F110CBB181
C03581AE7F5CFB6E2B1E4009215DEEF49B959AE6CB67471140028BDB77F8E0D4
EE0B2C0AE9D1AF457BA4830AF3BC5AC25B6E250D2CBC6847C10CDE73950A2DBF
81F7C3B10A749A1436FEB673921A195027DB020897E28DA4C2E24AC43738F842
045A04919A108CCF28ADD9B2582CF6C3178700E56D15B63611A51C51B31574B2
FA8A71BA89DC8F6F167C7C0336FFE6DC170CBF5F561E004C322217D2A01680D7
EC23747CA7156E5CE91FBD5F44F0E247D957956045B1613112CCBB7091B33FEE
92536D6EAC29F1F7D265EA9CBFF5415AD85E4004694D39E05F5E2AEE30F76D51
A3CF5FD037153F66F8765090E7AAE59D8053AE0BA8DB3BCB2AC0437FD14A2941
15CB01446379D93A84DA7DDE692830CEEDBB812E26126498DF01A8B4E7DF01CA
E49DE944C25FE5771EAA9AEB426146DBAF38651053E5EAE46AF5F5F19491F679
C2F3F3CC8C5E5189F8C986AB3EE576DA9DF54E80CCF9A71394B4BFA8CED0C416
64DF7B5BBB015C15EA34DB8B90F2ED9FFD88F15A1BAE76C6EEFC79C130434BDB
9F865580E510F180C63CD039D399B1D9C4208BDE9841363695AD2F8B3922A609
7DA81E6A3D4B3F340503E6D9DAF82EBA11D53BEB168DAA474049FA840261F7A8
A976812A938FF436B01AB54EE1CE32BA926E34A8F8C31D8643EF6B051FBBA7EA
E4D5967EC3646F547C1BB5DC530423DD7C44A82B622327EA30ECA42B8CB89314
E8AE0CC7634258E1A49C6B865B75EAA21C02F7007978FF715B59DB48A55F4E05
03D39165A53031425C5E1F37426ADB7B3FFA6D2412BFB5783DB3C0F6D60E34BE
594B65D76CDAE5693B2E8739D9BD57A4D67E09514EB3A1D2DCF490DC1EB5FC03
C43BE397E8115F3A0C322EFE02904D82B3032B82E7C310D4934710441F46312E
AC995D35324DEB1A832126F491688AB4FFC28B25F44AEF8261BB77AFE63D26EF
D97218971819C58624089FE39F416FB3FC681F6312B9BC458258383E94966CDA
9AAB97986B5C9091DCB1F9B280BE8D374A8D48A10B2713DFD32DEABA293EE9A1
77F5C40F7C7768A67B861D5FC2887F1635AACF2785AA6A7EC9D666970F39E1F0
1522BF2FCB6B28C527C32DA580A7A619EA936D0B6239F72579B0E99370DA9C9A
EC6822571F3B782893E1631735FC7FEF8384AEA8C2273268144A010CABC53339
E8CDF172B872311C783A8F2BED76B849B93DD14AC40A4E4226F5ECD3DAEA01CB
2604024F955DC5CE4093E2F1A817C538EA4F64E96C20699C8A54F090F212398D
1FA9D5FF8CBDDFAFCA66543CFB72EEF26CC3F3561B1CA13FDB336BD4F041E9FE
46C75BA73BFF8D88C56FFA843B1EF3AACA3FCEE17C7835239CD82463FB4A243F
8C74C0035ADA5BBCB0E724AFA0F51B8E2EDD6E0ED16D2ACFC90A1ED23A88CF1D
EE3F583DC78DFCE980BD40FB1344156DE7712A41673F44DA2E1E7D41DF6BA988
0AE784071E6B3E2101F0B663DE14DB1ABF8B7951914BF2E9C684E2C80951B24A
AACDF129B2BB843A35322415E37E745F1478DF48659E20919F519EC7B7BED843
F35548CFE3266DB0E088F48DBD44C379EFCF03E929E6C390138AA7A9BE8E9EA7
6D1DED1866D5010782042200B3914DB7477F4ACE3E01C310717FD8D10B05176B
2D990696B3D4677A6D2AED73403C90884F55AF936438B4F0B1E942537CD9A3C0
6DA77812BB4EE9929C9CEE82C265186552E9231CC55FAAC46EDA9984444FC750
9374E11C1651D0A365FAFC66389761F5436DA107749746B5118ED2297F5A7BEA
B0D625692F612266A93EF535C72093AAF178BF91230BFE3F36B8A0F98A0CC800
A501580CAF3478CC65C774E5244912470606D852A39CBBE5E41174596443BF7D
A121B8C73AFB3730AE0710CDBBD49719043C0432C014E7CC244189592FB944D4
03458FF43F071C38FEE3A811F2D67B799250CAF11120873098B5138445288FDB
AA54FF0F25A13DAD43232F7EE4D840B4362172F75AE64ACD2B72602D2A8F76E1
3CA240865F625827B5B14B93CBD317817EDCC1726036E156CDC649D036DA3DFD
DC31F576F64475E62FBF30074B701B39665F4BF41393BBF474A9CFA2EC28FEC1
3422167D2F49D7601A570BEA14B7C813C7EE435E6B39AA70A9F61CCC446F6FD2
D440F8B6F47E9C8E5C2929BDC7EE14F6D868464493DF45E9E560FB40476AD6E7
850D0E405AE6523DC0CBB3604025E1F18331E151718268DE4D626FADFD70DE44
B561BA1BD4626A01C282FEB8B53E2972147D9EBD179E3D9F1452AC0613F8DE36
1C46A55BAE9F54A1BCFE5626C854818C35B88DDEA6D3A49A83886DB260065E42
3B426EFCAD8639CB438AEF68DB0DF2F2FF138364824C7D41C3B93D9A5B6B2091
FB0F74E34F73B119BE0CBCB087ADD6D2804D2B798B301739E51DD451D8071BF1
B58C840313AC91D346479D38E0ECB73664581BA1552F680511B5FE3EA89500B8
23A0FA5A18321056A36750BC67D3CFBBE3A4B914ECDC45179F7225B6871B570E
BE05C9D95D8F947BD7D9F6D539E4754CD2C62F1790F8A442D94ED07F5F983965
896021A6B8466391813B9003AC9B950A22EE900DA9B2A80B9BFC4919F2483E98
68E0D59E613B99092C8C0FCD223E4499C14B7B552BDCEC37E745415462F2538D
A2D71EC332D6C13A8A7B92514B6CD803081AD247BD97FBE97DEC3941BE4A948B
3490EA861BD99423B56C2084510627CA5DA18A0F9447DEAC39141E4A8C8584A3
8E57441EEA00961DD0EDCEE6CE7F6AD035A435017F8EDC6CAB41EA6234C70FF6
EF6CA2A853FE0F76AB1ED5B97A1067B820BDDF5FC2AF9A36305E36C2A2DDC690
256D2085B52886DC399FE1D8CFA559C93999700F1189021D601510F9AC22E36F
01DF05AB58428703B5F8FCF7156859F14E61042D5A147F0A784F0C5A4E1934FB
A251CA55B73D7515D4048EA67AB4E1DD05CDD42DA117D5956FFE7111F53C8D8D
F395CE9A836EFFBC02B41CBE8D589CF50BA27804E8971CA26B393A98569E59FC
7A33A9F31B1198C6D9980B7C21ADAA911578E0CBDBC8FA2043BDEB19CBF070E5
82307367F5F9AC09ACDBCF4AACF533C80A39605C9702070CC252B957DFC1A97D
522C07B0F972DB969DB77637B6E22C2CAFC254B52413A107BF5B596BAF902B8D
63C8A18E045FAB03CDAA01086862BCEF11AF66D26B9A0D11530C6F70C1B6E7AF
8E11BA4798C1DD2EB7D4F9620F1C42678C956D013FB0402EF2F6C3B06EEAFF00
FE2602F07B88E183809095E88840F703E9BF997E8A6666919D00D517CE6D9C2B
C0DE6516B649A4DC292CA2AB1D7823261B7B7EE08A4211AD764B9A8D9CAA0D1D
E3106460BD438275B8B18D8D9B9D2227C7649133EC6A81002AE7A5918BD0EF50
FC3859C0CCD704BF425C64379E8F07D1B21CEAF609047DB5AB1D11EF4A587E56
9A48CB419390489F70CBB069CAE6BC5F117865AF3389F9B24A1D21A9CCBCC365
9E3AC8CA5DF66DDC7933F828D3CF9ABC2827A6200222621DEACC953EB5D4EE5C
195C81DEFFBE1E3A195EBF7787BFAFFD9A066C4CEAE0ED581BC5A9037A4D15F3
200B13F44F655AD6FC40955A3EE68C16EF312027D054C0D88996599333FDAEBA
AB30E04E3C78DAB918F9559C31EBE12912B39338A6BD32CEDD4E8A51C229D309
11AC105F799840538DFC9B186642C1FA978B5AE2733334BB5EC0151CDDBD053D
D22218B8B0B71E60CCC50CDD5C6DE465C7932B3C509D3B02172583CE1449920F
9A073DEE6F9E6A6A1DB9213C2142AEEA0B692ACA1E819ABF89C01007F28C5A80
F4BD3C2C515EB5BE01853F7F1EA8A3815901DA3DF606E424677807FED4146096
85E975670E68DB88850EF4DD9314C0FEA2661CF8688C3D53F22AA0E1A26B1F9A
C6202BEA5AD2C4142CA7D8CB954B8D0C0C2BE2CB8DE317F7C1449E4F6C8AE7D6
7AEE9BE9CD45EA51767A0C5ED8C8CB4191E950DBCCD311A20B14B4177092A52E
3F29539FB7F8E16596FFD4151B332C718B173132660B0ACCF1CA0A25AB10E00E
4D5A8D0C3299FD3777981C789FD4BBE40DF2F03232480D73FE00AF577494DA7A
B6FB78D744C9ABFCD095A12C405F561BD9FBC456DAD7FC9C900C91E6DF15400F
35F789CD093396F0E34A66267EAD315CAA69F4DB314DC26ED5B60252DD152E0A
11AB38A0C98C9BB1216EDA7BC3094324CEA4FD5A9518236B742F3579E050C9FE
A8E1EF4F3252FD330D163CF0F35CAFC0D61E05B8B32000D4F6A0D9B74E591BAD
A348BC61386E71104202FB3F677DC4F398E82228CEB92CE0B5E695D536274984
B73FD1A0039F86E8489003F84951DB86742C3EF61F720CE7F7788599AAF3FF46
CE5AFDA1081D3E544F7F4FE29CE4952D5E50B1AB34F96DB9F031C7920CEC9A16
4C369C237DD28FC4BE2843036E872B2A04C4C2DDD09A780E3211EFB72BC5B2CF
545D57AB4B9C46F8379EDE9399E5B127D646FAB0A8612DCA1CC8DA7A3C5E33BB
337D4E9D38D33E46E3F79F2BC92D811CC6DAB2EA0636869186AA71F0C1ADF3AA
8290123A8B67E6AE0C769A5E8CE27B8C4B6E8B4F056867F1C0B014E2B65B58FF
1D647BA03560E06391BDE9A02514DB9B144641A5B2548D2909144C30A00A6E01
0B4220EBFA66EF79E0BFA03358E9F753AA892BD9A7AD14F509BA49C6320EFB42
1B3B10694FDED4B3EDBE4FE9C3DFFA5E45C08D537491AE24293BE475B6AFA056
DD3F3F525DA26365A2DF7F72CA78CAC785BBDD2D86B42FF91FCE7E06435BB294
0232870251A35518DFB99CA7E44B6E03DABF8ABB73228AB478B849E58ED08010
8F18DB3ECC698AEA11E32B5F743B75E26E66A24209E1E34EAD17A0AC81EA7357
571737966E650CF2D73DBCB019395239FC111EC0ADA17A90C19A43D4206E2B15
F0ADF54FA750FDAF7121246123CFD3141C81FCC5C5305259AEBAF52AA9BCBBA8
C9636E63A0DC0690DCCC7AB8828C02B00920293556311878D421BCC9FFF72437
7740502EC30BB318289197B74B960686FA892002C19B3221F02826617596B585
5B28202F696BF41B341A01D47A5FFCC91ED4B7E13900CB00E970CAAABD5E3101
82F66B217FD6CC9B23CD9DBB08CE4B28C377375572C513E842F42BFBD3511F4A
DEB1E990D07CD4D46A5703E09CDA5B195BF1CC49F81022023B083A73BEB9A932
27D5F86C067B4D3E4FCE17B4AD6B44254B471D595023104620634B02E11C085E
5727C6582296EE7F91D3F71DB873FD0D2CFC5CD66A0562D1E1D8E42EF504C55D
7E129B76E22364ECAD33CD7424045660DB3E20221704CDFAA50DE337E5196D22
A84F8CE03A399DC02F77772CCFAA725BA2C696CD7D58DC2BE2D2219D8FA49A6B
1525AD2D1F56968D9CFA81E051C863B519B6B0A216CECD233B141C8302FD0F5B
244B373B895A92D990338D4C681FB09230305F7B0D57E5EE9DD1A709FC756406
669E34C6A08668808E0C31A589D076418D67117694133A3248571E032FA87046
115B708301A57234E388FAC6474970914857919926E5A42548B9D5EA3E1067F6
E7523E6288AD183ED4EF54070D7497892B6ADF5FA4757B0CFBF1A0871139A66B
F3E0988D81FD94A249BD6FED82A8EF986F4F2479D1A838F1F3750B8A596423AE
573BBB163DD66E89F2C4E2B1A15300BB08D985CC8E87B133755A403A3569748D
E4B942649022353639FE60332209F3BB6C732E191427FC63A7A675AE7AAC05A1
B9B4FB04FDC4FE2F15947DE72BDE539DC79E2EDC7C2ED054226B03E4DEFB7011
2BE7F4212FB8E2A9BA7384D01112A59FD8BC7A0FFCD765CDC64A4922496D357B
665047CF66C86D11E1B064A2B59B90EA972CB8CA3E598BFF8AE18855D22FA2B5
478D80FCBB49386EB93CB56A14B2FBAC203D58C90DC6F1E8D3FD25D8CA59CCD3
581C08FB10A0372E799AF99DEB62F1FB386855F555961A4767CBD9ECDCF84E47
010EA3983525CEF7D868B1A6A62CA4E8F130765D9FDBB769014EB777D03A2D20
FD7ED73DBCB9ACDA4B5DD9ED6E3482283ACB506A2D6812D4676F3A6462C71091
03FBDF1B4DA7CE2B7194624D33B42527A2442F69FFE4E931E8A25EB1ECB77666
EED9888A92A5883554AFA10C4E38D9BEBB4900F2EE9B60182B4ED6E6BA207826
FEF8370A38E142AAD5349BC4773E95182C70A472F9E12DAE40F0E80F7C388E7F
4D07DB3D4F16AE2506A2D75CD9FA03668530FAD2A77A5EED85C9303C4F67CFBF
645A002691B4826035454EB98F9D7F73D5EADA8262D487D0E6C85B55E8D643E8
CE7C644E5BCE5D09A903DAFFF2E48A334F647F973BC7A2A120CEF83E4B29BE40
EF0AE82FFC0F37725567E365A061360C171B9C947458DA8981C24A4303FF7123
3973DCC0CDD89E094914D5005CAC27F202687DE6F0A2E3642462263A0FDB715E
6D79DD6B0E14E6F9756DA3279830CC5F2B3D73FD3EA8C3DFE5BF5E03EB7DB612
716F5C328F337B4B1CBF8F3F7AF27CAD6C177E402043E6289A8FC662399E3BBB
194140C78F896FCB285FA5D7E21AF5F8CA1DD90BB7149E38E1741EFF3967B5A7
41B252F764BFBC18C29E0A119457055EBEF379A1F1FE5E41BDF8E59075D83082
AB0165E434A8CAB7BE0411532BF2252035D416998994FB644A5DA4F605B1447B
359D6C1ED4E84AE59147908F6261A45D16FD10F775A7B619846940A7A3ABAB5A
A879009CA9729FA3DB91122E01EA8BF3774DC48755936F9DA5B6E024820C5719
EF15C92469A766652714790C3532B5718352E4CE45863BEC1B5E8CAB530411E6
825452FCE11000D9D00C7B33AAC360A11E9F5F226E094364239BF65B841617AD
96D9D7F89ED64975DC69CBE45DD8DC1A188FE10A825C38395E5CBDCED6A7D376
A92889C94E798EE0EB746B23CBA21FA29503240EF2A29B603E1FE2A99C9A937D
E11BA9DBF131208DE516D18014AEEDB0ED5B9A3FF97B333FC2E1777832890D0E
956FCA5BBF866D6317C9BD700703DADB9EEC88B89E5D79A8430E3F3C76FB633E
604B1EAD476C67F315108F0636CB00E2452B6093C82BF2A23116DECBB01E64F3
59D255C8E98E5F2CF001309841CAA6444E7445CE86724470B9BBAEB51E066945
EF87E654F8A53B3C4907DDB687A20A0BCFBB3E0F0DBEE5103EF0D1F9C81661BF
A5B2216D70B91691D7F373AAE4A4752F9BDE24042B95B58726FCFA82ABD45A6D
7854B54D737C6DF3962B95B4B4D186076AB0A326924FE043312773834D2D1F04
E5A80489DBFA423357647819645E1468A2277FA7DE48DA99DF7F2F1460A76374
4AE61D7F5B5320DB4E6C7F70B76CB486438D247D055D8DBB0812B4C6F5BB424E
44C48CCD592792059D48A67E83CD0D12BB1878198F8AD9741387FAD81CBF4B91
6DE59ADBC3B5EA0EB4722F6C9DF6925B33E3CA232E5EC7E4654229938E5C5B25
32FC8870AEC17BAAB7BFDEE0CF89F7703B9C40507AC9BDA15602060657E6BF79
285238323B4F622B1D07496159EDB225E9A3362FBC02F19678A6D04A28C0E938
F608AF10E3B31B98C36E5AAA15FF94ACD44EE0442D2E487C9425C59EAF0DFC88
7D850F2AA1BF8AA28F5870230E9DA69ABC80788F2F72CEE5F5594B3E327BAD6C
C06279077389A26E7EF7030CB43C182221340C9DA56472498878636226AC34AD
A1597B2B2341624D89E43A964D2311F07753D0CE4ED2AD6198A473F1FED6AD28
53AE7AD9F459C54082DD302A15ACF17034C74DED33C7897B9EC592F01F97697A
17967D344A4BC9A56C6D40D38818E0E8FFAC59C2A472311F266DFBE6AD8D4D2E
4607B811177772757A5E242E9C1DFE6BC19A289A91A209145B3A7E9AF8610D77
7FCB93AB4929679EF111D0516691566F85A386DC278C8F7253779EB9D278001C
92637F598B33B68992E7A2F38FC0102D37B14D7743D97195DFEA56771C7B51FA
8F32FB10CD06184AE9C945344CE4F349CFB1A8C60E56234CFD61340010CE1C18
4163D773D1AA704BF411FFE90AA72079D4C8CE6C8C9F8C6B7C4F7D8811581232
9ABCADAF9CEB29E09A792E33194C402D4ECA1E36570539BF9B5C30B050605CB6
6F364269E52B8CF0A33C46EC274A77BC37F4CF7C183FA6844ADA6B0DA8AE0DE1
BA31FB51411ED41D825CF153F8E257E41BD6E2C374C5172C527988DEDEDC52B0
91AD4296CEC91F7DD39A4FE8FD49FC9C8914C4A02DCB27989E0752A84B8532E8
03F42A5648E6561C12F0CDB0BA121D3B83F8FF9A3045CFC13D346DED4E5C41BA
28ED0B2D4F7D552B092CE5F7CC78C953A0B826E47018F8212C5594C697B28A53
1F54066661038CF2C93BEF8D83E143656B00CD21897D25A481E31A42902243B8
3DA90CB0F503589D4D8066A83A5E48BCCE920C979763D1BC2A97B82446053FED
12CC848D4DC7D81815E0260D9F69D2E42819E144C7772269C3EFDD7812846B9D
A0C07F947D7524D37DC63A4008F4E1073542FBC6462D45076E249A857FC13D34
B4A0D735A17B5C5DD25C2852914D3225D07083B0BF8E4F10567699349207CF80
241D991BBD44DEBFDAAF7F5C4D795BB79EAABC297A8C4C8985FB5F0731836DBE
EF53E3DAE40DF0A1C98BFF1C73259669E3AE2639BE0ACE6D50AFED866C4D0334
7F0F0C127E378CA8C327C5117F235B34F8A480A569A8DB4D0F274488C1CEE80D
E89093792E921DBF3BAF178C2E2E968248D5B79889D9133B6ED6BD14A87EB610
1270D15AA6590DA4E9FFFDE23B9AFBDC82C3CF56925E6F3636AAA62701259915
BC2641DB03EFBAC85AA1A5322C021122E962CD756DE48DA93798FBDD034F430C
5B6B221581344C344A2B9834F97C6EE56522D30CF37A62AD8150AECF9FCBE755
28CD71B57C838A1EE984064886F868EDD3BF6DDE186C3374415F03766156316B
85C9B748F723A1B5EE0BBD792B783E0E46FC8481CC9FDAFE3709A3B18B4BE318
5DF2B065FF2F04A7FBDA01C6F6FA0654D4CC6391D45B0A6CD0716CA475D96F39
9FCB8978260D3E1F8AA5065011DCD3A5CFB5ED5DAF4CE72F41370D4612316229
5E5C1B8D5B1F8E0AC21F2EA065FA8348E54A8AC97B3EB2FF024BFD60C0AD7FDE
DB23C805F775DB5E418650AD20A77AB23C7F16F5BD0A9CCF307F68058C06BE4D
1495247B1EC6571E5D15825D479AF0E6EF4A3DE05F76B3DC275C95EE5FAF3A6D
876536B55707F24E45DC97296235DB29CF0AF628AC3C30B11F1580B25FCF3AE7
42E2EC53C778F677810DAD0C8F97E6FC8724E6A5E30F1271CD61BBAE0B6A6CF2
75EF7628F546E9B7FC56B8129973FE3E492016FA5C52E9920B3939DD7709738D
3B8307F90041D351B844947C40B5D8C75ADA3F1A5C5A196E64A88F5A6753BB9B
857B24EC11AFD13D92CD7B120A03206D85A3D447A4D946BD503062DED9A4E6F5
81427AFD23BC99D34FCB2E6586DE317EE3BC34234AEDFB79A8F221993D487544
21E6444BA95515862E744155CA2CCD8DD60FD6FAD3C8ABCD673A03A694FA7709
C320C04408142BF88C8C80C42C920F0A78A29D8B8920635C96F7EAA7C2C61AFE
1C7FD58404CCF6E173D56F8D3D3CCD1ADCB7A7E8EA484E2B9BC3B4936126CEA5
662629D66E175901AAFB04FBDC7B4B8770D3E62C7EEA9759D337AE7B370055EB
A91893597A866F289B75B6C623DDC0E219EF97AAB3C0D8EA20EA384D74D11F92
73358E7F80EE2B2C60D08C1F42ABFC97E0807C576F7217728F913695F4CD6128
7BE32403361CA7364E39F2377A27C8FC2996DC58F43A942963C9B2584CE14922
AAA9E3456AD60EAA425DBB1659C255392A89742025378CF853F6A8188534F795
ACB7FE79F11FB59B0CFDAE2C9D3E76CFE803EEFA0C0EB459F845681D61D02D28
B185C9F052844D9A5F91C9664F7B21AD14C38A072C6AC3B3D16BEE28177D4FFB
04F674E65F7277CA7044515630B40C4F06CB4B0848DA685BC235EDBFFDEE3E46
DD584F04936B53C3C81CD9E76F786832C9FFD6B1B81B9E553B4A7E3C50F98DFC
652FA8D6E26625CDFF321ADFD514B2BA1B66E7CFDB8FC93B68129A5A7EE4C1FF
02C1A7A7003B478855D76CD3E8D7182CC51481DCED7AF3ADE81FE911EB8181BD
4767284E659533BECD3B9F74A6B21D04D33D8D6867E328F1F84E5475C3DAC639
B43E079AA71F5C35E4F45762EBD6D3636AB47812748E3893178EBCAE7F5E1C2A
F64EDD2073883EFFBA2B68FD220CD70AF44BB32F9C1DACE3EB09ACA94AD65D4D
76D05C717514E523E0B7D90307FF79C0CF85C84A7A1A388C23E494DEC64AD151
AD39923670FF40FFA3A24C0B7C57DBB88326E51293ACB72E81E11CA795321A1B
D149346C3079B29055B18C857995ABABB9715C492D80E855B227F74202FAA42A
BCBC4C8F87471310CA26AF41F7C529AA011CC06803B31EF9A85BAF11F98DF053
BAD62158D01155020EC83B7A464BA7AA1E55B9ECFB39FFF8A7519AE3CA885FC8
26D7A9FCB11694B694508AA46942BC2185833ED8F5A2349BBABAC94E9F1B99B3
92E753093B38B07D116744856E689A479CB3A8BC081F33CB00584F395AC0D311
0CBF8F774728E4278EEC55AEB085C9CA5519331CDA93CF358AB9FC23F12BA3BA
D27A85825B7FBAB41504242E9A5E28527E36E301C4F2F5A518F7EC7EA925F2D7
13FD0563BE0EB2B36DD94D1FAB63AB6E03F645DC6666BB2350231579E82A4A8E
EDED2E000BF8674DF0999DB161EF7DB88DA4B0C592385D35F705BC2A99BDB897
56DD3301F4C4EB5F7A46D1EF564F9D4A077B54DA0F960691FCAC3F3D018449DB
D45BD173A06B84C2EB136CBBF9BC36324E1AE948C6AC16E4B2D65CFE125AD2B4
8EE37057DE0BC5B2799B4A6B62A9C9BBCF1FC0273F4782A4770CF1BF95BA94FE
7D78285C2350088D00C56F7A8561D4FC7989EE78FFB2B37BD4CB3EC67FF81E7E
61A0A63CF4138AC7B430553ED3E8160E813F2C217744EB7899052D8F2271585D
7BD902F471D99ED216F355139C44DE4CC83FD73A6DB7D18CEC44CDA8E87EF745
92B6FE479FC3E9F704859D7495D9E1AD240C5C1E3E022AE56FA211A3C1C57D72
0730A217C1FC0D4C67888FE582FB2ACF4E479934F5EA9823AD143D84CC102D2A
6E3DD7AC386EFC466DAA91839D038ED7CBBE6993BB7455CB374C445FBACB6447
1AA58488620156738617681E0A664D2283BDDA7350CEDE8D8720A80DB951D1D9
FAC8ED3EF4D4B47D556FB679DBB3EC55E1F756439D26453525D02165F9F5A792
AD30C02EE0CC7F10BB2127F7C006E1403DABB79960501C47B6D7C1400C3EE668
8FD5D7849B502507E0D5F360F4C7F19A7195E992B3C0533C07A21CC042E62786
FC8C838BC00D349557D51B7B124C64E88902FDBCC065FB6FC3880C639397437C
EA43184F519AAB4A64AD71B3EFCF17EF1AF57B30934D33BCB97230F1F85044E9
55D98E573208788DF39F63343ADEA9D821A658006E6AD4467D69EE4429EA7892
0D62845D12F9A5A74A7F2AD8A76768C046A20005104FBD57BCA7A9ED635F2C7F
11A68327C9D43675A6480A4DA327E19E0926C632218410359C5AE77C7A75ECD3
E4BB1C50447C558FD565E8C78B0390D16F96D2F6B56E6DF1561215B3FB914BF3
5145019FE37E6100F9059E85CA54122ECBFFB23D7A75DE5B6C8B53B57A234986
AFF04FF03C1DB4D1F2D9F60CF2E4DC5DA9D3861B9027FB4B449A39B1ACC05BA4
66540F38E107A44D4D52F65CD9EDBBF10DF518D2436969674D4C79B5F325C9FF
B13F08DC13655D7241194A25388FEDA8896EDB2011596C4151DF7D5DB5AD7787
A917622B6A3693799B63575642DB67A8CF6D5078F1AFC0882DFA9C2B9E0A6F80
F0B1A982A5CE8765E2681E64B8D84A7CD7504E58CD671758AA70AE9037BAF277
9ED8034237F25540F71DFEC6C4E78FFEF7AF81630306D67E6D60C160AF985287
2481C49A31E2F53D46DEC727792C2B7B38CEB82581732142F1CDA274EFF21A2B
DD528FEF3E6AE7CD6EA69488655C7D00F952DBBB63C0DA21C717E348E0BE6312
0324CDED57F1DE2CBBB2F3B2D3F3B7005E9F83E783452A7DD5C6C825DD384DCD
D067444272BD8E263B7E189B06583134225B0025F5169291029FE697BD123AA4
EF021B951E55AE54CA242F0D9CC02F1BED5F60F5C9977D820E70CDD4CDEB1D7B
C8BDF10C700038FDB23B78F3BB8BC8902CA2D1C9B9D63AB7EEDDA82BEDB23912
C45C282783F673994D9A988692F0931B645389DD9EEFA606C7C16504FDFB6E14
E743E084E7BFB0E3068B9C7D0490472C3FE342135E547A3094786A8B0306926B
EC3DB7FE51F547AE210EF8E6C7AC7ADB2BA6B75F4F038FF6AE864A21702963EB
602C8FDEA1B0DB4E681C77F9494B0A27DADA058271E4094C21C8D7FAD2ADB181
B67A51495543AAC99F499C09BCB5DE70958048F037C56C14FDBCE691048469BC
4CCA1AF72AC4275FDDEA364B0E8DCEA6E5D95B0C3B9E32CFD83EF594D6D04687
B8DA91E8858B8E533CDCA7E45231A2AF67D919685FEB7556FCDC9D79CC6D6088
1693C266246771A21266B87C838592437274AAA30B1535E3F167B61BA78335CF
AFB9E1AB382D2E56E5EFFB1B3DB78BA2F647F772C8099CDDB5F3D586B9B5A9D9
CD9D7AC97A8751D5DFD4043ED3AC4DB1DA120971ABC83477E84B279B7A201D3D
31032AC8A1BB77DD481E807EF825F4841EEED1F1259F366FB11B9A9D5FBF66C5
988D929182800F5BD6E3923220E53C6287592E2E491B64A2755E669A03771922
6D4929EE7C9DC63EA8F9780763E889B13FB2B5A4AFD59FF3D815B045C9B64FFB
8DAF846931370FF1C9B70F43B0568F81AD20AF1BB3F7F016610C7F398DA90B96
44E61D8C79F8DA266F89F3A0DC02BC6DA849100D4EC4709853E64D86EC95C0C4
9D08807696374A4A48ACA8AF22593508297A962130FF121C9621988B5909B8DA
AB8F35DCB084771199CB1637834749038663FE94C57808C416C444DB6BEC4CF3
670414C2A7245444DD74DFBBA8CB88B983726F9ECA5C9BABFA49E8217131544D
9B05BBCEAC85AC11BD27F60027459721E0E7D5BEC1C0E35C42A3E1A00E3B6A07
408043CBFAD9A3BADDFC68DCCF67EAEA862C193040C8E053C3F1EE0BB0AAAB44
6819939C889483ECE3ADD8AC4B24A8DD842B31F76C3596F43A6F2460B202F544
269DAEB43889C7D20B7EEBEBF6977DFA3F20227B76B59DE1A9AEE59B1BEBC3E1
D081D58DA932BB972207591955B78C0CD5DECDD2FAF1925C3BE1C67CD4FDB6ED
D0897269186E9B9BDB90A1C44D61641030BCD80EEB4728C176E3F39C3548B5A2
BE25266587B52BDA2CCED2D214E8BF0C3E924CBF6371E84540487C1D89F398E8
839EE18DD301AAA69044E56DCC291482EA4A2A264D46373696B04902A7067C98
A04F0417300A108E5185193436E803F42A5648E6561C12F0CDB0BA121D3B83F8
F150DE9F34E30D0D24F49D4F6BAEAE31569A1B32D9316DEF416B4671E42BF7C6
69EB92D9D974D5E29D6F1DE7D179DD71D4171889A5764F8F0A2CCAD2762C643C
0A7B2C5F32686DF2FAA0615532EAE59C82A4B95D495FEEE13F8FDB8F252A4A13
C1842F8BEB5A2416107B1E59084B51C809CFA16FBABDBA9EBDF4DE3A734D5541
7D4499D2274C78172CA75144E70BEA368A35947E11D1311B45DE52A62E5D5FCB
BB04D77DC4955E84168F9AC6EA2E25C8C9A2D1822540D36BB2C736225102573D
21FD0B03969BAB3038F5D7E61A400BDCD15EADBEDE3875523CDFFF0F344981C6
EFE4447480B542B229FECFCD917788FCB6F1617608C99257A9A09A3BD8FE0C4D
070656DA891F6B6C2495E6B70CCD429EF7488E7E5C782C8311B03F19DC377EE7
3B314D27C43C08B7B723B9BC4EB7C9538A2F89574CE278E5C8B37D2B233E6CE5
81D09253F6D6ADFF6765667FBF1C68CE8D7F8AEF58EC303E62B84EA810FCEBB2
9C1E5488491201A7A7E5884507930BD0C12B55EC21B9D0FA2E1BF194D09129E2
021AB9B4DE3C8C0567E70FB8E73EEC2D9FFC4CF5D97E5C253EC6CBC95C776157
B26445462313AB956A672678F2EAAA8CFFB30F5DCC23DF40666623C72D6106D0
753818E3D60C609F3509EE55639B9EF1E96C64F6E4BC4E3FB452F92DE7F4553B
F893C5273CE6B3E495E6C242EA7B5C525587613D335148791C6FBC487A1BE32D
FF3E48051C4F3146917DF98C40DCB82C0D81C9003292E7EB5D8B7370D2FFAAB5
BA1013209625E68E5A713F5332E0CF05C754FD76916FECE4DB2807334557F54B
B7B3572D01FFFF3BAFA6428355378CA104CC892A4B11DB1C0D3AF01E55645C56
1C68DE0519B05DC78D5DD20FD6C506B1E07C0528685F00B9D6934A14AA088ED5
88E849E6479700FC171EEF50EC1FE2EDABB58A3279D34E27AA77DED5086AB0F7
028F91ECAFFBC0BA1163CBB04399126B53D62AA055E8AF5E37A624C5195AA953
78C17CA9A9B55CFB489454D9D2D5F56518565EB1E5352E34CFFDB29393630F9C
4A607450E882F68B90B7D1D4F46EF8864E94CC841DAA7C4F577064E63AF4784E
031D71362A0AEEA396F803B5CCFF995F099E191E67C4833C569703A28DBC61D4
897C7F98D76D5BEB84CCB9854DC25E3C04F8CED4F06D02B68BDD3F90701BD8C8
201178AB460E2D06447385DC2CDBE9B4A1F44EA75EBEEBF992EF7A913C1EC838
8E6EBCB4152454BD9D5D4563C7CD0DC635E70A16B779819093F0D984C468A9C1
2DF6EBF689E0E2A17A993AE0419B96F3574D8B3E78A04D918949D25FB29B08D5
DE5830586C86E569129D4C9CFAA621245E04463FBD066F990F2A9281534BCA3D
7C6ECF5993D13F84AE09FF5C7902A2F039DE6F5AC4534349C58B1D10F47CDCD0
5026A2DEF157547EDBD705F24E9C9E05078DFB1658939B9F976F81CD2DCBA1D4
4329A4397749E741DD5CEB110ECC0BD3347BF3A19632BD016B8B739C0544AFB2
F246F974F01DA8B66C50582950BF79109E6977D7BFFC6239CED6EFDE4C2A16C1
99B3FE96B4CCEE91DA28D8922C0385D76FAACBF5981531548E89E1CEA2BC7330
883FD6C3C4F9785345DCBD595E1A05AF04903E6A29908646758256ED47FF12B7
F1C03EB8EC4C0974CD1DD754CAA23C21CB97B5C7B83CE4E76F4532E49DBD6578
39FAE3AE4BC8D7D9ADF9E512D032115C879DBBC86CF379D0FCDDDCF8D5BB449A
35ADDD44E0E441A009EC4B0DA669DC06DEAAF952AAC05F6AEF964C289B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5017EF863393113850793875697709861E50EA63860BCBD
4746CCFF44F0A170A875B6245B17861E28EC28D50FB9B75978D4D7919969931A
416110D7D81BE6B6F0862FE61618E8B5575F5FB13461FB79B473A8EF5C815A19
621A9BC5B1C703AB24CC6AA36A96D66D67F077FD6D0977E8069DD79D487A67EA
1D9A22A508EEA8494F7BD45B8D65D86C58DB747A2455B41E7CB3D8C64769914F
77F5C7C882B7BF79F5205F9E9A1EC74128D2448189FA0AF72A54105E7A572DF2
54355335500897F2123353CD23FAC7E2B86EEE2936DCFD6F0539158D3B883FC9
107AD8C633ECBC2EC7B55F467F12BB61BB5E69BA4A04B118AF10776110E31887
3BED624E3B07B6F315F241825ABD849980EB243937D3DBD4B158DEC281D83070
0BDE3C3A46F0BBACD422F8C2D24A8FCD9B5351F64D0D5C17307DB0D983B2478B
82FBBF99BDCEB4B92BD72F54E3F35A448F9B520EA55BF8D0E39D1EC954B803C1
9DD4F5B58C4D2012E04E630F515E958B699A14BC349FF6B535D1F2F28A9FDBF6
1B31883D9235708F3988B2668540D20345FA57D34BFB75310C38B48C2012E0EA
444924FBC760A5E32C9378F20C4F652DF6A4537FC25299BE55008332B6ABA853
046FF3647FED0AFF1F33FB13863341D127CEA81A0F8D82CA44B3B19D36FF290B
4BD1B807749BBF6077B8F99CCE03F54E22E2B141D5417FC4E56B370A532044B4
4E8770C72E6CDA1458BC8D2C258ABBDAB9638306F1E4C6D8B2386E52CCE80CD2
A5F47EAB3653BB035A95679F52ADC07C1FCD50B0605AB38637ED07E3102DEE7F
67FCEDC487CC1BA684FAD744DFE06470630DD70BA62817A18843C3821806D490
FAEA107416545AC5106B50E0674260A62A03E86241BE8CC3D19649FFDA86260C
21FD2108D74DCA68507FD0943782A49FFA176231A70209782C28C2FABE2E9DC3
B5FF5FBCD73D4CDC35C51C1A6BF36DB06935B7069D631047678177A624F39326
6C1FD8A746248968D67684AA008E584D6F6EFAD0CE1229FA6EACC8F803B1BAE5
50E3DEB059711ACA4063BCC8EE90ACFDE2BEEBBD6699604F3C012B354AE87819
BF154809BBC3CE6504AD10F5B9C5BD3403303EF07D80812772BDE4C1AFB1D023
950AF134BAE3E3C4B11007ABC10394B4FA2872BBBE48D39FBBBCA36A4D7C11D8
068C99EE9726665E86F2EE6166E06C03941A06C823C44689B3052C811A3B7D00
7B43C1294792AB776F76D6762CE8776ACD7FF59D8C2081A7E493662434FC1CB4
1480462E7AAA4A8B632550FEC335F88D0F84B298E4C3AEB8EA0DC73026391451
21F3723873AF986D82256E6040E36D082327E1A9073320A7A6CEEF557FD59D90
62995D7DBCC7E3CB2CCC52FCE120E0C550582728B4B0B61D0A24A4343827F1F4
1A807219B0DD262372F1DBAAB88BB319E6627EE0D75AE28F3CCA3F4A05606A4A
806E9B5F44AEDBB435C4F7A741CC8F8A69A3888A55D6378B9FDC293E4FCDE7E5
414A0BDB649C4E33FDA59E37563A27C6DB919D434A9EBC8871728ADF3A271235
9E9734E269D83C3B4F2979CD6B295132E0A8423D757FAE7FEBC3EF4654011951
31C8074D5FDB1E01276AC06FA38E400F9B42D6780A39905B9B89BCA77B9148A3
AFC11489236848A559B87712C5D7C724115AE5119F5204E0D0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DF7740107CE11D9F1E95F04ACAA904AECA8C
66082082F59CB8E5E7A96FFD63BF90F69931F3D5B5F81C3E234904D5FE5CCAD9
17381670D1548D72FE715FFA30FEBAC715513E0525049188B9D91BF7EBFF4444
ABA5490DC6A5CD8C1BF3EF1341A126980C7890794A85EF6CE32D227A9532B61E
E1FDB83CCE8849508A3EA0FDABE92387B526ED0C9A92315083DF5BE16201B404
07019A28B699901B1A6F7C9D6981CD0DC5CBD97109E9E4E462E58A293CD1BC4E
240FF934EAE9355F75676B21D53206AB65DD1F7D423FB9FA7332AAF569948EC5
5BAD355BBD85D66D616844C0DAA6DD5D5492CA1736A52B8B9D95AE23A9C62EA6
A323C0FB989D53EB4A5AC25A0858B10DC043CC9D5E8CE27B8C4B6E8B4F056867
F1C0B014E2B65B5C3158BF4870481D8FA433728039209E7FDD13ADBB921F3715
DC8998AC0E556F16DB74C13D05E062FF9089F981D89FFDEA459395AEB1FD2A23
13C4619C3924D516D06D7C952B12E6646662A651EE4185C5725607F457AE1E83
C41C6AB175C3200BE7F1396F9CAF46C80BB7C866CD45B80656513B6871E5258B
4F80702ADB01E522A4FFE4E1A156DDF0127E2C87A8AD82DEE1B8090D5B0E4BA8
59C4668A7EAC8CFEDABB124F8CBF10A621372FAA078DC8AAB00146550EE703A1
4B531D522B476453DE7C661ED5D3477A95C24980073E63DD9C90CA8D00E81400
9234E2A36EFBD854F868BC9301D33D0762434E5810C493EEEC7F9BE98C8E56CF
86C591B705CAF70989799D9D24281EC83E6536996D29B4A70F4A479D38E0ECB7
3664581BA1552F680511B5FE3EAF7C61513691DC7010505C0F1C9BDDF1747CA2
F97096DFB28E72BEF671339F900E204FDA3CA9C2B6D2FEC695D860792433C3DF
19EE7B5C27E7BE0538ACEEDA4C755FCA8F3572C613CCC6B7436CB4445C100492
702A703EE13DCF5C2E244DC85556F666C7ED81894089B685DC8A4A3A66DC9C52
96DFDE89C5BA45AA1E939DFFE83840267D7D1A70288C3CBA2FFCDF1A4368603D
692DF9729847B5A4A1E37B766568C833B98C74B15426DF65C9CEEE3E3153FCAB
3050CA75A82E9483EC5B384BF87B91E7273975069C907199D36165A282C7C6E8
5A1C921EC9198BC03CE04A0F0B2113C7B19A19D7E3B17E6B882EFEDDC7E7567F
116654EF98052AFA60869686385A3FE61B5BA1369DB20EC80C8086DEE33D0297
BE0403E7694909E0D4657B9A187A73655F4CD055362BBD43CB8103899EA8517A
B8C18737EC2FAABD1DA7EB3D39A3B9FDEF15DA1F1505CDD37755796CD5FBA681
D46CF9314CC3D7E9AECA005DB43AAE1E43E95639D799B5CDCA5A5527048775EB
15B80C65DB647AED3D3068FA9D4ADB75BEA4DF343AD30344E6B4C7F83808900A
54D9B875E95CA8166B84CCDE9FB92FEF1C8224A481E31A42902243B83DA90CB0
F503589D4D806436C1287938562B2203565FD277C13BD2342C13A687C6CACA5E
2D35E33B794FD84C274A4D9C2643EBEC142CDC1A985E6F3CE8B6695B3C201F4B
7CD67C0896DA7E0638810834D55746262B47195560253D16818C5EF8A7D897D7
E9C788459B39B30321C6ECAE276B63BCDCAAC66E6F6EE4CE4ACFE894C33EDAC7
5933CF06BFDCA9E282359D114C1015DECDE764D6A2B3B5DF5C4A154702C42C30
D07D729FD4F2FCC3A6B97E1F5FFCC19203D7FD140B5D3C78CD706A23DACE1AB5
B13A4DEEFD88C8AF7468EB28FD5E0CBDF9E23D1FF320EBF19F28142D78CD96C1
1B52FE223AC12C65643F2111724CCA0EF177EC0C2D3AAD49BD2A0BF511A722FD
CCD19792FE94B9FDBF4065FC6CA66B02202BFDAA805E647AF9BF332D5EB49BE2
1977146C8872ECAD4D82A933A8A5E16FA17CBE3F977509340FF834EA210BF0CC
D3EC84AC8DBFABB91D54CC819680322EAB72E1250A760A2AC753F817F94AA693
9DAE286FEA07B203E7227497062C30026AB518D1BE399DB38FCEF12C4E988752
A88D8C98DC43DB22C6537028798198E2D3B0453ED720B08BB46736BBB09EE961
0D507A44794CEB9A3EAB4998A31F59584455FCA7617F2744370D43F5E2B9EE5C
AC85A80C440A6FDC9D19E8E4F78CD805598AD98987F3158905238F53B5565761
668A6EA34CABAFA33A7C345CCD46EAAF3E000C9245F536030DE2F2AC2B228E07
453FECCD0AF58C15FBDD5D36338CB0ECF40BA237177F6DFB6E00260EDCED9A6F
C8E5B7B915712E24D97A3E013429A238307E3A46BFD486834A752E5C0D519117
BB643C87DD94CA2BB185BCD37C128178A0F79CC8ACE6774BCE7CC77605F93ABF
EBD803E01C35504AEAA61F56E5B463649E058E104A8537D3D81053D9DB65EF6C
050296ECF0188950E744AB53050CE216C016608427C3FD501865604B85880B05
3A592E36D0A04CD581917A0935303EC1823825BF2E2F5C26BCB2EF1C38F3C951
2D50FAA648A9822FEE5B4BB37010E988D53382FF192A77346C86A5D1487047CA
DAB6064D531B1FABFC5730E478369E2FC89F2F28C168E6B988F7655114E5FF71
10BFC9D5E0419ADD2F5CC1C09AD68EB2CE58E9288356FC2CB43FFC49E6767BD7
DFCFA10CEFCC78AE7264D6AC158960359E31A4379AC573D700B7780D298520C2
D0698C337BF594D24900FECB67287A8B4CDB963B1104272310678F74491DA157
2344FA545EAD39D3BDE3E416E13D6B23272517D28E9E093AEFA728236C3F0625
42EEFDCCA2D1CE0A5DCF82C18687DDECD38E11AEA8AE17B02D3D65057422BD31
1717EAFC337558AA398E37BF984F934C66986C2EE9A510A9C87045DDEC6576D7
46C1AEC54ADE2497021A2B1380CE9F69F2A80BC2BA01FAB65ECE0514ED2F8CD9
0861F80D2C9BF60DBCE86FEFEF496AC7B23474DEAC4ADB7FF6B72CBBFD3B611B
72455DF41DEFAE3EF8FE12D52CB89184ECECFDC9A90A49DF2C1C2E47999DB23E
CCB74AA8F9B65CA96EA82B8A241DD366C3956669BAA979C0C7596E61997B9C81
8DA3B882966F6B909CB12D82ADEEFAECD240805D78448DF7E49A11B2F211A64E
B78A90BFCAAAC5B80EC514976A747B8E08E66BC3DDA8287F5E44788AAFEB2E05
BB7966CA5034B8EFD58FC08C1C182F83D34FA65B3FD76716D40C47CF247250C1
34FF33B4D8D885544C9A64BAE28239DA8BEB1A6A96E95B783B19DA7B1CC72721
564B8709C55F98E7C5F18E48575769447F56E70EA3FC9218AA9AA6EA2A3CCD85
51CD1AB6EACF05D059DB33A4A8A1BE6742EB71BC09CF1FCC9E7E83A13349D4BC
F8AB4CB14661759C675824F94CD151CD192AB4CD68C2588CE112A6D2ABD44B74
8AFED5F42AECB983E0C97BDBE9BE1744123AC8C0F438B7780BAE139B47680B3E
A235BDEFE3E247B0C763E132A0CC5F403CB09F7F5BC5378CD303C411BC079366
B9E331D0A01FCD55C9562E1FB2D410C3641A1DC59A816C933FF53193EAAFE6E8
70382132172F06F105BF2DB51EC3DF2714148469458A1ABAAA7CE8CAA45A9CF3
2034CD2106773B47C4BC871065E8C41CEFA4148A2827452E7CB712C1049B9D8B
99CE058CA4994F6AD3FD93A2EBD338C28CDCBBA3BD8E28289EF48A40723E39B7
EC79F2D3822C6F45A6AE025B3B7251C5F475F0C42E877B96009E065BF3653115
B309B3AE2E0B1F5CABE244D8F1F6D29DB3997620BB2E9F8F840048F96BD4AF2E
AAA6B47C55626F5C6488D48375B20B61BE229F35324501AE0F98009DA9ACC5F0
2B837CF7A3D467865B963C6CB6C2BAC0238F0A2AB3DA2768995A63AAAF50D6EB
1A77F44DC13FBBD93081B66089B327240A3F2FA1D88A32934AFBECBC8527A737
E27EFD96614B03FA06B7065EFA3285D927651C376B59B33F6485A218EB0CDCC4
89BCA1DBEA94AF6F37027434E22EC9361E28F724CCC2FCF1A0B58CB89C444F45
64C1ECBC4CA70470D4FC672CD10024F331FE72D5006B5CB38C7A634DABC9C84F
FBA306FC5E40690E464D46673BC84C902C0F91DBFCBCEF3494BEF638403F3559
D63183D4AB1457A01283D7A3A1B81718F3A994AA4CEAEAD1F1FB02B3052E0625
397FF5BECDC098C7D011DAF6ED1AE0ECE6A43A7A29F213BF6CBA03C00D2BB80C
B291F8E334678484A16D2194FE90C29498A23277FF1E33D93913C29A0FE8B681
7E5ED3278B573694ABD67F6FF81F6450D2E633583996238C7F0D8F74A67881D5
5BD5F32F0FD83D482CDF7EF32E4CC4DFBAB734E78912D306347C0DCDEBBF1563
08B64490E43D4BB95CF70387C6270755A3BE7042F6E114D3CD979B1C5F194646
0795E0B5295B835DBFF1DB36881685121EF64D57F39DA7E5CA0A68D62BF6FC70
5468B2FC94633AE77CA32C8DA3FBA7A26D8917B92E236864F84EB32155C1F611
0A42D0F70DAB4D6B7E2187A3BF218A6635F0D3E2519E9D23ED670D2DA2EEA548
BC14ECCEF072BD8C8298BD9A3A98C5081C21E0936519A99620B2750B7A3713C0
CA57A43E7425065D6CBBC712B23944236E51C5B03196C1F9E3792DEFC7E4FD89
6A6BF9C11AB86FC7D699F85590F436635DBD68DDDE8996FA2403795AB2169F05
6F2041CB837A1F9DA29079555C100265D82C9C18712E145F3F0029A07BA8C929
7BF8B0B016EDCAF80B93D601D12E824D1F9E7004CAED6DBA20F6A900EC119A90
983BD6D7E9C8821D945DAED7FB5E33FD5121D3770B4DA51CBB8B5B9215BEAF72
F041F17D55B49B81F3D1279D1E6B454576C2CC711EE6C2737F3CF7CBDCBC1491
ACFCCD4BDC7AC4D4B4C56E14EFF907A412323CC89CF70581E53A8A08AE977001
F1364377E5F75E345F3D60D8C555BA1767C7920FE0D18A619F3B355B53B61EC3
28513410A5502F80E751FEF2DACB35DD9B875F3E5A4AE2D89D3FF66EDEFA52D5
CA51A2D32C686D32579EF7430063A09B2B64E477C72E6CDA1458BC8DB8E1DA62
D42F44893393EC9598BC3C38137A81D75D5BE7E359EA0012AA558840307A9E6D
6C8ACF2C6986A41EF5F57E13555656242DE44E7726FEF8370A38E142AAD5349B
C4773E95182C70A3424F5C5BA1D48A8A22F2FF86AB80143BC0C81D5A73E52E87
4679DE74EF934E027649AC2EBE9AD41E8CE89D30BCE217DA54270BFCBA2FF5C2
064628045617B0D434C8EDB29CBAB90443083A74742E895C8B2BB07DDA993908
EFC4B25CAB6A4AEC5FB255306599B81B13D33D91A467E657A7FBE874AEEF98A2
7529B4143660ABFB71018B18DD82439BBBC34829EFB4604097EBEAD0EADD41FF
95ED87ED39EBEF8C5F3A75B96D98C17AC253906BA2ACDC417D716E346555159A
E9BDA259B2CBABDA42EC70961D0BCEF0B7EE5A0E8DC4A1C038E4A4321756215E
AC9841091051F9849D5B7ED1DAC77D33CA607154E6B8741330E08A5C01D8C6CE
AB8EB39DF414458FB31D46EC76A522D28D82F0D2FE43DEBEC8EFE49627213BA4
2C597D0FE53DDB9FE07DFCAE1DA5FBE871D8035F777CF210384EFC6165DB695D
85DB4B8EB762BDA2CCDA2F5E5ADA62706D4ECB7C4472AAE7BA1CCAD90A57AB91
2B6D9C211717CEBA43A9F2F6BF055A524058940BCF1CA8D16D9A2D6E64C04388
D9FE5B4FE8DC01D8F622ECFE3FA7C32B54A5278A71DDBC8C59DE0A5C01FE0E5F
3EC7EE6E6540D5A2602C81B5DA111FB2625069E57129652E16BDEAE32DD46728
9193773DCB2823847EA18AECF20E578428AF5EDDE764BAC54CCFAF2712CA6577
A5548AE1EA71F6E0CB7D0690427795F1FEF8041C8357BFC56893182C03435402
5F5404ADDF6027B020024CB98169C9FAF20B76D6CDD0DBA9D71FB46B4978717C
037E9F3651EEFBD9C759E6CBA161E7C52F0C46763A0BE692D47598441E7011C4
1A69566CDD90FDBCEF4BF28DD94C99136295744B66327E4D7554E2148762EA60
4562763A7C1D2F668E5AB234D6994EE25E666E3919B677C2599BAA2696DDF00B
27D9E1AA2D9A198CEE6A858EFFA9D7B7F99764E3718CF5AAD7E227618CD0F121
9AD80D394D7EF737E0276B998EF4993A3F7EEAE49D5A4C763EC2A172263718D3
C0B2DC97F50E034EA3B8E55CBA5E62F16CA4AAD970585C6E338F5F95A83E0D2B
9B963C235A59BC191B84B9B6A2D87B85F21F39F33B87077C5A8F315DCE323BD9
ACF948EA6965A64782E9A5B650DECAF46B650947B490DD96671AB5498FF7A017
BC82B0405EABD1DD34C94719878B9D613AF0C9401D371FF81AA54C887BD6424A
4B3C207F0ED2FD18B021DBB263217D4307DFE77A4B16D1848D485679E592C1AB
0CB51A3FFE20C3FF53ACCB292A8690B9BE1FD2FC5D972E117BA5B68473FB9DBC
1ECE947112CDB791A1CA9D765A8D9FD3076EF2F506E3DB3D67A2D10FA038561B
4D714B0E6D71ACDACBEDA775E1D468BB6EDE702D60DEA3E8767247C57BBF8FBE
60B6F7491BCC79E2531E1715A18BF8450B371F42CEB4203F46DD2D9DAF8F90CF
4F43A855888CC438B133911F9592B816C7261AF3D9F5E1728F408B8FF3EA8251
186F64352EF047748037794178FC7C017AABCD0C86A4991B876A60ABEEA81759
032EEB40699074E4014F2E90D4BE04D525BAFDD52768BDF1A82F018B9598F172
111222F954D38FBDE3BCD2A31DA0096BD2B59BBD63F04D32E91CFF26875BC7B6
66B1C82C62D97159E931DAD2438AA8FBA3B3C81B70810EB0AE50B5A2CA873208
4903D037F912A27BF2DD909944245C93323C8145F36FF35FCF62C46683A81AE2
BA83BE28EF402C92B79B8A0A3E588FDD7480FA2A14FCEE4706AA003DAE9F92D5
C55499D50E8D0E067E2A3D0BE8B2D378E5E3EAAD4EA0CAADB45DB67AE5FF5608
C53CB0DA138A7622A931DA293B0F80923E92A64E782EF8345AAA0EA74EFE4492
AC0F942BD3CFF5EC442E14391B45178DDA235B7A07AB6EA762365D326CF4B205
301FE5A2F54624315981DB9E59213A147B9CE8478DFF4DB502DBCCDBD61CA5B5
E20E1CFC04C427A0DF9EDEC5A3196E9B6C6FA4B7408F85F5C6069BF57BB57E25
6379A863677DCE24A14BFC52E9210C8A692609A1EC460941BA4064658504CFAE
58C074D92E17607CAC099243CC31AD035DF3642872150141C36D1C1901DDE4F6
6F72133343F40992AB476E5F84F49B1D0C796F51EACB78A24F7AA2BF1B70E7B5
35D37B0F69BE1FB27F059377B8113DE184E683D203AE0DA141A1BEA4E6E3E77C
174D0B7C57DBB88326E51293ACB72E81E11CA795321F02851C5B350676B2C489
0EF4B3B29354C0EA28694A1BD91DC2AF85CBA7D0FCFEE888CC7FFDEFCBD57372
57132EAD4067BA511DA13FA80C3856ABEF64B5B130980FB3634EE53BC96D1085
20D9CE9193DA216221F842FD0F3FC0AFBA2E0D5EE35CC217BC33669A41FF1920
0574EBB5058C2E24DAA8DBD8E81D9D7B6FBE67A34A71235FF03C50DE60ED9488
E270BAB33AEC2A3A055F6BA3C3700A81861D1A824175717E5AD6E1C381A4C882
B3C87B0D1E0B9950DE4F12067CA525859B73E6FD4FDC8F58655954010D533F30
5CA59C6A6AAF73B486BDF80A6EE4E6568B238E2D7C68D12DA90476714F26416A
8A1FCEB0ADE8277EA13EB130D84AB9618A4CA77BC722FA601A6123A48DB34C86
75E974742B76CE9724465C49DC221DF6D624C689F6C9EA8BFA6DEF9BC50AD354
C5F3F0FB85AA51B692CEF04B73DEC5D0A23358A5F1BAB491FB81688BA09F5110
64ED8AE8B8511F987E96279E3AE01FFE68E34547E71B3ABFB8BF4B90B0CA430C
F1DB39BEC56D42DBF175D18E24AE7035E5B6F2CCDFEB403000D71C009C357C26
1CAF351EA5ECBC5C34FCBD8F76C58F12192251EC2B1F95141C39C84C02E1F9C9
3AE270A5448B0F38289955FF8AF6BC4072FB99578B809358856E4E99B28E138E
2DB585C9F17795F73AA2A50EA7671125D3AB854DDD7DC1FFFC248C95CA0B94FF
F36761C12C014AE3D87EE4EEB24124BC36044006CD33AEAD858BB6A4448C1243
A03DF92D4F5930A0ABAE413C389F9041ADDA5D399FE46B305D0E415B9926E2AB
CADD76212A3759566E04ED44EA5D22124C486EAD6CA7DD212083440C3C61D2BF
3B821B982896932918DD91A6BCF7C05A89281F249262CD6AF153137676F3160C
795A6CB08AF08E8E864A163A4B146C170492702B3BC406737104A9E1DF811157
B2CC00DEDE4BA2E2353AF291AEA6C7C24CE1C6C08D077D340DD31B820E7D29CC
B3F0EA344E8EBFE13BAA70CB43CE4A979D8225ED7847214C9732C2BA6F48EF90
BEEC53E88FADDB38686EF45DD6BE718AC1E0ACEF9AEAE22E5FA653C2698E05E0
E07354AA0AA12D10B73C29990FDA7947E6F8EF2545BEF547BB510D466C8DE97C
2E08CC01056475E95FB467E2F3B31C3B77E2B117E7D3C26BEE1B2BAB189AF46F
DA4F46E1ABCECA36897740E4696E90C512A7ED64B4DD0A8501460AE688CC6626
651ED6388A1C711D875943A84DBBC24ABCC47014196EF241654B81CF0C6959C0
77BFF8C37BE377CF8BCAE42E376A4BF18143CB463B43B8D35C1AF04CDE9C84BF
E9774C857619F0BD15B6667B8825B774B16BAB025011999870F0AD19B5EB1B9D
54BBE7593C45B8F41B76F101DD501B215E0C207067F1E695951C726032A26722
E99C02EE67CF5E402D7C68AF12A724D7AD74EF50C994AE782C79CB61CEFAC99D
77B61CDEA3524E0D2ED49E31D611F993A4676961DCEBA9BE747C2D41A2EF916B
6A2EAFB651D0E490A79CB8484AE4B50D98ED7DA6ABB0D7B1BCAD280AD3A9D397
6BA027B720A396F0BE89FEB4B84CC0A3F6BE1B968E6F1750A2379E6358651F2B
690A9445963F346D0667986C994880FE8C8327571DB75206A5F117077BE5A881
3783C8DBED5C1452CAA90042399F46A27F8E97095273476B11F3538E81B32381
3CA3CC5D0893049E666977E1AC513F8E680C0D6E6BFEEEB5E3AABD25FCC13339
A1037B3FD98125E92AE8A25ECA90D105D3EE27FC276277140155EAAE420BED2B
13399D2282BEDAE14864E48C57D0F833DEB0CF206794CAE3520AFE852DE1E90F
FE93D658FA4867C3027B6C2909B11F0F27BC0C24C1552C1CA778010FA8DA4C7D
D30EB03988B4B0408AF978EC10F774CA027C16A53740EC661322ECC008E7B08F
182C6E948D410087E2694CA97578BD45E853BB902CEEB92BF8AD4005496BE761
9B8C69F7BA4ADD8C270425976C12C80E4DE719C21A0F989120C61C3491D36361
3A987A95FC1F275B90B4EAB17DEA84B0633460821B88857BC62232D411483EAF
09A2D7205BB77DD35458B6E29392025926B94F3EE7784482A66030D729C4DCF2
E9E0ED2A8A24A32CADD00F762571710E8A979B29BC4E9331CF876F318333382E
A13F6FA5DD1E06D19E0E44804AB992686370EB8BD3975EFB0F74ADBE880B8E04
4E4662EF0AF221544DE5DDC61DF5A1C7A579B470A9E340A6985189FF8B6AF914
A6B0EF0CE533DAE0E07696962EED3A3A13C4041ADC5F52005EAA5A023C7CE056
0525A8DA4CCCEA32F995DB32130C39BC5876007236EF014B547DB1C647753E6C
ED53E3678CBD2E818C0A197A853688E3AA3162E6138192E19652A23D4822474C
84C7C3696AD83CA15099ECDF3A273E8CEDAE6DEA1A7A7FF7F93ABD957389284A
9FCB3E8B92F3A4D8A3288F20F47EA3BF4C901BEE4B08759E95A8672CCD348122
1A48FDAF5135B233283FECCCA13A43A6EC3478FE4203E4231DD1E14AE1E34F34
BCFF6055BC430DCF821BD933C24A26C32A540E57220AD7ED50090ECB75DCE7C1
F3A58DD1A03FCE8732DE541E5E8A41FC87E1FCA5CA72A8D3143473218B6E51F8
2EBEF76BE7CC8B80947EB0EE6F24753C0261F3A55F821AAFF780307168F5F61A
1A3A3E7591B09FEF1E8801B29BC53495C24FAE03298A37691EEBDFFF78EBD97F
40F1B3C7C78221B0081DCEE06794784883621CA300ECCB25BF1330E865801A5A
5CEB0BD145C8C1244D3A0E87459AB7094ECCD020F2318C9F6B9F45ABD659BC25
80A685B2B8A33EC0C118155DF304A54E21AE5435A542C8389853B3E316D1F592
FBD1338845ED71937528F717EE2E59FD9E50F7090C17AA2EB223C0C118038277
46224AE3F77A0AA06F36B9227F74A1687B2559E7DD8A6BA568E04DBF11A5A431
F7134EE52F84F3DD080711801A166170FAAC32275455BD7B650929791432E62A
36D012779C8ACE51DDE10EAEBEF5A978CD6F26B4FBF514C6B17D80C47A396E20
1C667912F60535677BF95470EF095AB5A9A59CB42540C870CA9DBCE4B52975AE
8B3019C2DA18F9F1704B5B90966AE7E20734A3575EF213281E056FD6F12A603A
A2DD984DBF0EF187845C9D8FA07562B02347CA3DE34E62118D09A069F9E6BC9C
1858BA095342A8B65E71DB1DD936ADB90A03D6A06ED9890104DA2A575EA45E16
DA2E1FD9B6B3C473C510CA28AB90147613F0EBC94C3EA0001042447805915E0B
9DF531CD017AA860B96CA41C168548C2F73B6F54891B2C02490D0C06B8CDF381
05C15DE2FD03F183A4C5C968742603F4FDB0B0B6D446B29F4A0504DE894926B5
1CADA6D39CFFDBA38C11C7238C738370C48D02BB40C2A15E2F739D73D4931E32
63E89A0CC83FB6A5C8AB06103FB8A08DCCD7061AD53A8EF8E4D0339BA19C8801
86A39A30F903FCED1D163C9E7EBD76815B0E7D7B5FF7C9ED1EFE6638CDEDE12D
75CB1F93F83A7F1C70DEFD02952F95336FC074602E6957DA97DDFA62CF9AC0CB
DAA8B66AC6349E6D09199BA12884737714C5FF16163668A2CB79A6FBAD1E171A
E3D8D4277E0496F0FF797C814BCD7045DDEC6576D746C1AEC54ADE2497021A2B
138A3E92409BCAB867CF2D3F12E534405BCCB859F8A683E2BE7B419945D68F5E
AD5F51549CF764B1903E3846919F378DBC3CA66DA2890FB3B6009E065B8E2B2C
8E7CE699DE3C3EF05A00A57078A6C9289FBFAB908E868942C11DFB9226A4FC31
C9828CF2AC80B73CE2768B06545FE265DAED29D97E62720614F7C2864E75927D
E4EF96AEFE82E40D5AB7CFFC1288DF89BE3A55A7A6C770D4F7E864FD994A1264
EF0894D45EEA552A958A5E014F3A686D4B71AF20E63FCE4B2955A9C7950E7043
D775066794A2DA0C4C7B8732A709957CE23D39B600EC0B3691FDA05AF2A55E4A
D41FD61584D9DA998FF73ACEB0BAC18B87248FEC5D1BA15A90500C579A5F6120
9D9A1F503788BABB31390543FFCB7392E4EA5BEC2AA85224F7C29A671F032195
D9DEB53FB0BF788FC6CCD3C8503663E537B72974527AC0C142CA8AC20930D814
C6A3E6ECE761C6C940133F96E29BDAE840222918FACD5EFEF326E367B7ECF5DF
E24EBA18399072B08EA7FD325496990FE31E58128CEB7E5AEA56419A4887B537
733C6365FAEA22EA8B85E07DE3392C427463A5BE869CEB87DE10EF611B802E5B
34CDD28E69A2187B020379CB994D8CB0599455F7F3DD497660ED2B2BB544C5F7
145C1F682683E062211CA79590B14D35D2D2965FD79D8348CE3C1F8B633847DE
60058E64505F40284ED31D68B15F2B74914BF86548D87316170A909EE6E9DC46
1B68B397F4E6BE8EA28AFB7387999BECED086D6E5BABEF23430F28DB530F7EE5
22ED2810C5CB192F103E58DC33153C408ED9FDB7A1BAFF2F1602E398D58C6EF8
438365BC17C850FFE3F7E590C71D8976E1EFDA034DC660B0E1AD2F8A011E072D
55C073C6294F2D41197980E7CE6FB4EF66525E8F15F63E8A9F64DB7890533FD9
F80773E43408A883CB2046E81CE317A0B867554FC418A795F7712399F2C399FB
B04C9FB9BCCA731B4BF18A5B4E75F1D736B9E40BBBCA4E10612142E1C154CC37
4F2758A3E523C17A201E21DB85365DD8B855E4BDA6A34B1A2CF4248A37F2CD35
4ACE5EFEAE295973F7FA2EC08BA53123107B077BAC69AA8DC1EC35AF2C3E1267
4A53B3A7374D37D3E87D399B65090F5CDEF1325975357562C9DCCDFEC0C184A3
C6A182563FA8F8F6A0A210405C9B5CDC4C5E99D13E33BFB7FC73679A38ABB22E
10CD76A88254BC0BD5B088B31A0FEBBD75EFCBC76F9AE5E10940A3634D6BE7BB
E53504F2B08A80874CF0D889281F4761B0DB377C66B8C7B0E97A1715D744F76E
0A72FF3F5D09A96EEC19596B424977CF88172D2583B7883436956E4FC7FF048D
7A56ACF76DE55758C98B755BFE0F87095662704A6E26ED503815316CCEC39102
5FFF8E6838E92AEEF0BE7B9C933A7CFC60FB3DEBD2430D668B3D174C7CD69632
FE6AFB0EAE94203BF88AFA8E328CF74D77049949C2CBD00B6F456B9753C2806C
C4C2E9E615BBAD5F6818CE0EF7F7024A8E7745B78B6C62D99655F6A49B243AC3
804F91F54D3064BADECD2208915F105B9B3BFE688D3C21C709D8081577B6AE44
C6E4000F8E83E0FA13BE24CE497E3CD6FE8A45C3BBD11D72BA01798903DFFA60
F6AC177E7985B623A143311EC892D1BB9554D34547816955434B08C8B3075EDD
207C35BC17DA8E255C9216E000486D0D4B53FC3164BBF15FDF39AD407E8FA1FA
323408D17A99F6465552FBC5C4A8FFAE0D6B157FD406FA22876812003D861F55
EFE40EB68AD4A746324B6128E36279CAB1738F0AF74CE8E2D1C3C40F2D731046
12FA58833A4EFA2A413D81682ECCDA4AA2CF829BB74C20C39E157567538D8D18
47A1E8E4DF661329FC2710FF62DDBCF951C4868F402241ACE718440F9AC620FF
F89CFB7FCB1955C7DC8D0392E151CFFBFDD570C4C889FF6E06E89C0A4DD63520
306AFDF66A3DCA3C092A691292BFAC09A0A66B863A8700C5D3D07BB06DA22896
39219FD191769B35782143B890CF00300E4C81D9D739DF88C655165C148CA55C
7A1B9B970A0ACDEDD11FBA0EB4B5FCA60EB6C2BC70DE5DA84B171B4451A9ACC9
9D10B2322E42089693DA081DC8731FED870B692CD097005D1500BF926CBB9146
855D0C7F4C4C751416C9EB562F65C3DB7A4AB69D26B5BF8D90B00F5E356DE387
20E5A7B75CF7056EA47396E7867482FC03A8B74C7B33F3109B5EFF068D6189EC
26A07D761189F2F88B0B668CD16311DF9993D2AD4F956BCABA7F257559326E73
9524DA99E494D9E1FE8EB703797B611CDDF57A954A9B69AE62558ECEE827BF8A
E529717082BE36A70C8E2F1DE6369D13F15D202F8467293B7FFC72B6D9F2CFB7
DA43267DA860345F4E5EE1A0E99E8AB406FB94F759D0CE81B2FF46A7BCBCCA74
B6D314B33AAFF2161809A2D31E3297DF93CBA6EEDDC1BEBC9536C17D7F7254FA
910D3BB2B2CB9369704CE85F5ED2FA84096D5D15D9907FEA5502AE9BB54CED17
DE5CE89D628716BF1E306AAD0E9281BC32E9C8DC4B3B1236DA3DFD04797A8DD6
88A2DBAE2243943EB3E77E6CC38DEDBB2DB8BE7778936B76918D560921CBE040
A2AEFCBE4AC82DAFEEF86EB672ACE3801C242D395273D98D7A005395D8821E2A
6B0A654BD1F7DD017ECAE805053934F6E9925B45CD4B58AF33AEDAECAC2935DC
6FD4D20D3C2F3472DA36BAE42B05FB7537E64A8AC97B3EB2FF024BFD60C0AD7F
DEDB23C805F59DC2DC4D8FC12744123F29465AC5267B36561BBE62905A98FF89
405ABE997772CEC245586F1B71D0BF879D1030C0067FA0E5D929236579DAD5A6
BC105B8E6211C3F1B975ABE1BD29285BEA0FFF15CE9237244C917A134DA120AD
DEB8EDC0BB83249CF414967A020E5B8B0F4C985EE8CFF9D7E3FA7FCA7E8558FF
8EDE9B11BEECA6CEAEA9C2E32CA630B01A0EF0761F13888A4306667786F6967F
32C922ADF76891CF36EE5A6C9F0FE755DDA7EECB0F1404544F2DE812CF0A27F4
4E3AA88DE45F8F70D60AEE961B68682FC8663358A8B205832879EEEBA6303539
5B72C93220451636E19BC9CEA795AF21EF3258E5238D15F89D61E1D8E2B8FB0D
F6B5FB6D5C415495635BDFF798B5F301F7FF672FF7CE4557E2E105DABE212A04
0FCA30A0B0DC864E1C505E451409F058BBFC0301087271EE7DCA9D2FF2095323
D07B0B85927A34AEB7CDCD670DB229D27C4ED66BAAED3794ABA3B9F49AE3CF45
9EF266D04FBC813EDAC875AA8D5657A0E4A558AB0BA93007579732EB88A362D2
8850ACB783E4227EFEF7F632A2402B20E1C5918ED8CB7B651E7EEED85F1327FD
07585EAE6A5254B1AA9E567438C6CC6F9A9024949B47ED2EAF152F6F7F68617C
ACDED0CBBF76726AA2B9E780D6954E154DD58C6778E3472BC744A1FDE78D9AA4
DA800661A11DBBF343A9A444A38ED6285646AFB0D163B7F08BA3D9C9446A5266
47FA739A9E747AD286D01FD254E83FBDE2731167C1133C33DACB7BB8E5682658
AC6F300ABDB95B176FE85486BD05F3392FA10B969C3B0550B11B99ACB572EDBB
7273CAC02A54ACA688D325B8FB6FD35D8B2A9420802B29FC3089B1BA163A248F
9A2052CB8980119F3F2EFECCCF2A9509E96B095B4D29114FDD325E6CEF2AE082
63950FE454B2B2A800B0FD20B684C57458BD2527808DCC5C70B4B3074EAAD1B8
95B159E2C905459D2697B2819F3B1BE20B9D95D1014B39441A15A6003B39988E
6D14A40F26E845F9013B8ABE63165ABA15545146ED2FCB21B0345A191F35DAAA
085EEEB0D95252F4043CABB9ADEED8929F651401B43D790D3E80AE0EA0AEE198
4C590DB7EE142C2127580700606CEB24A581288CA7BB872A4450AC4A8439A1B9
DB77866DAEAA53D1D80ACE9C3B873F2050025DD47D254BA0644E95818D08106F
5905F67C15DECBBD1CFD06E7BBC09AD7EF03CF8A2EFF52CAA34C7B703E7A2A5E
965DA412E79C08908A0030F94AEB435C0C0C42BB0FFC81201200CCA4C3C1E2E7
5C3F360F37CCD87F4959A84DF88669CC02DE9C5B6A9ED253D993C5C6E67459D9
2ACDB29EBFAB15FA42F2F264CE7FEED86A019485EF31E400E7FE0FFF9D966F22
4AA72C22207BCA226752B21D219E86968A49116A09BB7F320F0CCD98F2F7DF37
8E1BABB191EFA7A2A1B8421E1C7672AB569D4419E7069A9E7E1B9E18BF427E51
D901EE474FC82EAF8FDCC119B80A5EC2DC13C5BADC08A7A32948413F34D770D1
202CDC5E5A1795E01EC89F0A6EEB2AC5F91494F51D54FDC55115DCC3182DE5A9
44920C2BE36820C3CB1FC79FEEEE1DB28D40DE34F8132E8C92B729F0F68C6EE1
17A1C4940A7282FE5CD1284A86FC797DCC1F99EE10677B75E6F729E7E3BB5548
C3489CC386B6D55EBC71C9F1675373F838D16966F4EB5098AC5930545B63AA9E
1FD26F26026BD1B23D7066FE0154B6F0BF23742B9547BA97B2B014E28D06053C
3A009B392729CD435B3D4CF6C5D452A51046621D3644866E171313F92A306D1A
7DD5FCA29CE223138B98E6C319FCFDDB145500D77A97A8BF392606010F944ABA
543B85E14024E035D4468AE5C73036F3704B16222179BC143CBDF25CD74F91C9
239CF4C16C523352299DA2A2209AC122F4F7F10E7B3B25D4477B713B015A306F
1EEFB669454EABD55602A2234943DC1C617EF756440F870DA4B7D0F3F85C86F6
8CB548AC66A1F21DD103F59F2FD46684C9E52E2C049A42A9F1E6A3512C0854EA
B18A0ECB0B86576D6F4FDA98A9A9C847FD8BD3376F8C422B3C323AFEDC33D9D6
6638FDA8BDD4DE1F10153D551CCD7325032813CB1767179A1B63E40EAE3829BF
4CE47841CC9958B6564422F40C2ED5F9D247F0E3DE8233436A38D5E1CDB1F029
16D8D0CAA47078D98F848BC47519F457699FFA64874513F59ED2C0E7E2EE6A38
9F64F3C4CE59ECDFEAC047A13F5D63F34360CEA089E994C36CACD2E02DD5903B
15E0D833EF1073BC902817ACEB8D723B1868C5ED5B3E3E6300FD0985C57E723D
E55A2ABED9B40D7BE674118BC0C793F210B495B3DE7C70854B3BFF083A22D936
D6340CB146D9A3B40DACFBED48C823C53BBDEC24B2BCA0BBC12BB547BE27F6F8
1FF57E44D274A166071D85D21F3259AB611EFAEDCC9135C58F8F73D47D434DC4
A4E0C28E2971CD8B62AE6FE12DD1DC46B921D8BAF03715FC56EDF1991AE8ECD9
FA81542BDF2407E3E0FE8D8BFD350655F716F2AC6448573251000E28784DD4E3
8CE7E9E4B047DFD8A88849C935E90D35CAFCAE2B01FF8AA8304BFBB6EDDB1432
2BD5347564C463176A0223C98D80CB40CEF9244083544EADB79035787CA84205
3C119ECEE2F49FEA1774CA291A09FF43B943338D442F64F168B93FBB1CFF579F
3B3317E339B3191F3B728DE40ACCCE8E958E0390CE3897A4E6D3099446FAC003
2FD40411E8F3300A8A8FED5085EEF705993EA37E0CA2D9BEE0AB4AA71E488095
6EFD390137495FA80D6E1F61199322E0D926876A97AC0F14DCBF1EB1C95BBFFA
540EE5710E884911F452C33F9654A8D2E421E2A0CCEB2AFA2FDD93834089E0C8
B29F8046F565FD408DEAEB5EAB6FE08372EF4D4C1E27E7EAB63A6836EE7A131C
5F333881C1279247352449FF4372BADFF734EB854BE550341FD8148EBCF4482E
9D977382590FD976534DB8F4AA0999D7052483C3BDD1D4A10455F96526410CE1
58403B4CFB64EB4D80157F57E05097726099A4DF574A6133A6099B5C0CE9BB94
91D96675544A469D657427DB751702FF8E7DDF6E039E073F472A7B9FC0D17B07
9F4B1FE2A89AD72D1D1AD2BF8BC6B31E4ADB8533670B06E01630670DC48DEB43
518B241CFF2002365B099C41339E234B1EDEB20905D2369478E485206155FF36
7625B5924F5370E9C13F0A66881FC91A4FF6F1AA2074D8B20BF06930D39D4AAE
F7F72881909BF65CB094B1210635439764C95C9A28841FCFCF279EDC74DFC887
E0AEC17907788ECFD84AC599CF9C38E918B17E14F8728BDF7023463DD07C26FF
1769A4C8A2518CFEEC51A392946525390030995DBF48DBC939DB010332BE7D2D
B970276AD2A863FD7349D572419C06513300A0710759B6D616BB96CE0731E204
5B788212270B5786AD55546EA51834CBC8FE00A72C7D2F3AAD415B961F52CB0E
71C12379A3EFC8F09A260BFCE7C040D10575084BC081821FB75D882D0C0ACBD5
FDAD9448B616C1A2AC048C04EC131FAFF80629512AC3C8B9B48DD47238B4C18A
9A7997E2E16E33B19D93C41B6028FC2870E4E57BA1B4773094EA1953ACD74BB3
FBC97F1F26859BC5615820A12F398B914A5FECC747B40BF4ADAD86EF5BEE825C
3F850B6EE405BD3FB8A94DC087117853336A14E2269BD9BAF062120371830C66
17F0A3661C091D322D3FF1357B446B13C8880EF4B91C81258E0B7CA284D2D531
6999D9BB1FDBB75BC2AE107EBA66046AB43C9857D215690076BD235137B97758
22638DCD56F58B5B0B4F975E854961290F30C0BC06DDFA2F2A42C02E3D1C41FD
46552E7CA1B36B02C66505D31050AF71C9AD585854C18C87EA13D0DBF19AFFA9
659696F19A46F0792B732E027546FDA56BA1B42B000749072F1CAA9AEB426146
DBAF38651053E5EAE46AF5F5F195447CE4D394658B9062D5824C3AF67D0CCE1A
4F498B5F7F0EF8D32D5A7179D025981DB0F1AA37EB7E091123B1B252455E8E48
A68D3B038886BE265200825E88046F4AF464A663B5894F0DA159792577541DC4
FCDE2F9A9ED60EBB522BB3CA2A986A3005BBCB68F9AE872E75C24EF37DEBE506
2D720A8E05B319FE16FE42ACC4F8B1F8FB789F7D3FA8847CEAAD3690C5D73FC2
32347B4A3852F42A06B43C893DC7E5A3DDF31F4B7D850CCBA04985FBAFC3215B
37B977E3C58B941166C1EF276997F43FFD6487CEFE4E277D65733295C5061ABC
597FCF12002F30135A0488CB934DB6FEA0D11600B36FE9B419C381D9CD3C6763
1DD82E4108FB815ED1D54A3661DACC545C7C06D6F28BBE2A6C5F077DE5916A5E
4571236CB05E25C0B681EE2E0D4B48F2383B3319A212AC1141D5E0EEA2F21919
F236967DFCC28AC760007A333E41E6D0E62CDA7F4B100C6F66B1230C9B0BD14E
D17ED6CBBFEA9961EA9580E54EF4CCDCCBF68761F29435C7425B34649283416D
3718749EF52B7ABC41CEB5C4BDA5A093F4130202FEB88A8B3E29D62832610FB4
501D51BA7117ADE998D06A9EDC048F3E9F66AAE8242F51B6C43ACC5E85834E64
249BECFCC405A1C67B3EA141F799A9FBCA727F141E8FB8B705CC84CCF327D380
9617AA09FF3B14901E42BE7278FD9A9655E35844ED829C6399CFF4001BD0D721
F7363F042E35B40B02E56CECCCCFF291D509C1CAEF0662683891B454D88F5BC4
5BA81F409495A1FECAC1191EEE535662D92B07F4EBA18FB4C9322FDB26F73677
2974FDE0F0389CB5AA31AF46279B24D09EFD027E1B0B5AC9076C21D22C18A1C5
3D4AEA7E5F03F85A36FE45E57BD5CE0C7A57713AF055C0A0F972E9618EC2282B
C39C571BD45057FD09085730695ADEFF8E2C7562E51BF95F2A67090FAF972407
EBE347570AD63AF08D8A125A27BAF0BFB58CB89C444F4564C1ECBC4CA3CB67E7
D74A4E73C9B32EA493E60787AF090ECB75DCE12DF98B7CE6AF11BF5CF5CC741E
E4942C8F3FF7F6A1D911BD152CDE3AD2CAD9D1EA82B618DC73000262AF06A29C
9BD2703F473A14E0593EEEFDC80BFE91F96D41C567223537FE0FD4AD72854985
8042320004659E1407CEAE0F2ED7F9C6DF3815E711DBF219F8E138630F464ADA
8C038099A714DA8A8879745CA48D513E4E9775D1C760CDC02509719B7AE8DA43
092DCC1A9FF2F4C15EB5E3859DD27CB4B23D2BC546C1533D84AFF286AB008600
8147E26E133E012707E3368E2128B953684706E5AA0298AC3C709E84A7CC6090
A82B53E5EBB0523BFD980F389264C84DD60080885E47D29A5CF6CCE22FB8F0E5
17F6124AF76CE5CE07707797138A4BFAE2887D03E428F3B1AB970C25DBBE2A4C
B32DC74001C247D3F5091BF8AC805F90EF2EB65FBDDBF03A0E59147D08F25BBF
3EDD39BE705D8A5AED5F1BFA17DC0F04859B03FCEDCC76505876A049DA9D644D
232836958EEDA068246F367E88835E166A90FB1A389A34214B7E43E810A34375
B477C2BF78B9B7AB53756337C1B36D6BB20FD6F05AAA14D65952774531A01D08
AF8F6280EE57A3270DFE501ABDEAB9327E296740F0DD9B42A45FDE59ECF44B9D
06542B9F9833A1E36C15301FFDBAAECEFB3CA433733C96A4EAE21E64CB8F397A
76C5D84907E43913F78B17C4CEA5EBC76C94D6DB8098AFEEDB9891A320C62A8B
67724FB63C713FA02EB81B166C4129BA5A376770F96E299ABB918FF662A5EE19
C1360B5ACB813FEFBA27DC1BCC1BC10458CA6C4395659B0DB6B612C15152E4C2
0780F0C4FCEDE3D7BFFEF7E2EE88B9716A4A2DFB695B713F5332E0CF05C754FD
76916FECE4DB28073348F41A1C0963DEC9250C60343947C0D900BBF6F62FDAF1
7118DE88C3656A7D9095905AE89E0904AC946EFC2DA16D520599D64C4111AE5A
16545E6784C7C819A79252A616577E9947EEE2B94EBC03B25993FC39020072C7
6104C657913A7D988627BF757E7E3AE3BF9D3AA5AD4F5C80ADB4092E906E7424
CC62AA9E61A47258A0C9B8A990E4BE1FD4278BEA11CCBD331D01F6A9C361CD51
18B5DDB498FAC0C184A3C6A182563FA8F8F6A0A210405C9B5CD93F1135063DDF
73481EAB5035A7FF6D12BDAF00EC24E39774314DA5ECD364F896275582344F5C
0EDAA48B873E2E7403624646E5328E99636838FCF68A95CA08A13B1B8AAA8B0C
CAEBDA17734E5D86B4F7CD053F30610D360EFD8A2D943D91D7F3661947A42CDC
E50E3E1EEE071641F9F1ADF7F8CC1F53B2FA4BD42BE0FD10D7A7A77C415D0512
2439FC3BDD16A69CE12767E916D7809E872C87D13F9DD30928904494416E3DF1
D7F9B72497973F54A5C15375E6A8E4C1682BD8B84473B612CD07565C3BD36DBE
762F324E4D140B511B4CF0FF6DD9C7780E971D3952648BE3ACB42BEC6D5B5DA0
CAF198CC1208EB58846A1BC0079E16654C76E72A1E10C8A196196204D3058151
28532889B531170C4B10ECD0C976C0DA080BEE7F6DC55C0F4705EBE271BDCBEB
BFD886BCF13A039DD79D487A67EA1D9A22A508EEA8494F7BD45B8E25DEE5BE6A
E2FE2C9B92279B960EA3D630838F6E008D36FFD3B7470B94624512485C1D5600
32862BC7FC1D4E06F171481BB46B91EE932517DFE2B815D288DAF8F0B4764930
EC4F1494C878F7F63EDEA60DAF2448DE8A79801C644D0FB01918E8BA87EB21AA
B2C494C6F6FF275D101E62960B40DECAF46B650947B490A020E6B4C197B13DA6
DDB5F796C04A72DEB79D7FBC7234DA85E768AADA47131B7279601C058FB866DE
D7A6EDE776767F1C4DF4CD05A9FD91E705472E75BD257FCA3725C5CEA75330A9
8906FBF9FB9DADE655233413121933B3B6EAC8B8C0ADA0EE55715211CEDBFF90
F3AB2CEDF9A222173C9382A085A2924AFA002FA83DD86D63E9FF55A275F717E6
E7FFF7B1BFE2E98D872573C86536F65E6203BA65B8C8AF5B39EA303CDB728DFB
83ECE29E29F8AD9BE96A4F6A047A230D44CE6210E275C4AAC7931329F5A2B558
55AD42F3498EACF1BEF09BB4C2F62A61BB5B2B97C79E77CB6A755035B1B05F1C
86833EEC02FC8131466CE5AEC33589A13F6DBEAFAF69B753BC0DA94017AD3AF0
D9D6BE7CDBB243090FB70F146C442F98915291EEF68B6890C165FB39B8F0596B
DE0D50274A1CD0DF722356D3F27B4CBF6DAA00B960B965E9C7F789DD05BC0945
43BAFF6A2A8DB58351615E25EC792BFC8F1150BFA1A880BE05F1B2592E1FC306
899AF4EE52EF7C1F4F8E7782F1898EBD44B30C8B4288CD98CC5E56DC4D1333DB
A8FDAF68F45063AB7EEC2FC100F126DBD977068AC186C94D6E60D0693E64C514
F2EB303D5CEE90C22A997075D4F192B48636ED71848D2E7CD6B766D4F3E1751C
3B528D02BCB51B2C61C6E96F276FC34D2809D0D8DF0356D99ED3DCE49B36E9C7
F8A9A62866F4E857F4EA7D25CC8749B07AD2DDB9FD75BB548E4988A580586486
CB75E1C4E4C7A61427F39F3E046E39B6FC8A72A7B743ADE3EA140A91FF7BD4E3
61ECEA4E7DDD253666AA024FFA986DDF098E40E394567438C6CC6F9A9024949B
47ED2EAF152F6F7F6AC6DED790CA6F4D37A9B913EF8493B07DA95DEE465AE622
417308EBC12D763FBD6503011ABA247A0AF3051EEEE58B4C0BAC128B7D4D61C2
AA87093F0D9188350856B6E29428F185FCCF89BC0778B174A9FB4F5872BE9544
EC00EF08FDAADCE219D41E2FAF4E6B6393343A1ADD11CDB757500332A74F141D
8778EAF3910486B2EA25AAD16C1CF568DEA6D43A6C9B262C5BAF4AD6E854F5D7
A6DB6F91BAD57912101CF3D43E18F802B52633F76FC5EEB74C9D4A421233E796
CBA94DB00652C28C635379A0716AE8412F59CA93717B7CAFDD08829CE775C1F5
D2A21749E1289C936847A155567102C65DDEF02EDF43C5EBA02A9DEEB7B38376
ABA7407CC293D890A2BD0ED6CB619DD55968CCDD74CCF3D403C8992A070CC18E
B9480289790692CA25CEF1CAA67AC1C969BA6E5884629F7848BD9CE2DDD72906
C917030391A98B0AB95050D0A9A469DE86BD0641A5FD4A64972D941EC585207C
0E0AE908826A589494B152217E6B32B701653742F669F54657753742042E9E10
7397CE0615963F33B07FDB0E07FD50A10CB64487872CC705E9D6622174BDE3AB
3916E34B9EAF5DEFC753AC5B00FD8A47A86C8DFF65A35D63AA901335661EC7B0
26BF109F282C132FE5BF1ED06F1C87E0E7274B872C188A2250A3B7E7A3C1569C
65E9C78F251ACD2E0F8511420A44A7167056FD9BAE438296918D5C1C3012486B
CBE5CCC5C54E890380CEA0B0E0CD8A82DA2BA32CF7B87A38CB28B07D3813F871
C07E725DB927C4A31F0982334E7ED210EC9DCB0572AB667F33FE709E3DDBED5D
26699EC3EFE06AFE62F4E10693029CE085ABDC77E8EBBBFC6362422696E5972D
3847BAAA59D93E3267EDBDAE35B3385A9DC8ACE6774BCE7CC77605F93ABFEBD8
03E01C35504B9D3C5CC1170476B17BCDA45C640C583F16DA2070280FE0C76C32
33AC20FADB3505BE2B8C29DB3630B72D102E1F6557A0821BFDF2DA7DF431DEFC
08A052F306F0BD8383876962857CE95295B3979711C27FEC43D0CFA6242C24C2
BBCE0055AF1446D3C9A163230C5D3A4A94455AE7057EFF7EB6CBC34FDD4C97AF
C7CE9441475183C8221D670D9D08B3657E7B291E803D149E90DC0270DA0874FE
130CB2BEC99949D48C3E1E3DF9397EFFD5139B24AAA12107E33AA84114D52CD7
EB49D5AE2B7E2EF749416F99CD65E7352639155A172E793BBB2B1CA297840873
961DDA0BF9B1AE30C228F2115C76EF1ACD02C1501537F65F5907042AFA3E5BEF
8D7B942444975C89293EDCE4112DB68E2597D9B7C2B7126F601786EC4B09DE2F
5F3077293440A0D0E01C25CA3751047547D99EED11AEFDF7FE421A94CA5C7C1E
25C98E92979341A8857C6032426D3A1369C0DDA6E2D0DFA7642329EF41F77035
1FA1556A83E694EABEA4D7DF929FFD88F15A1BAE76C6EEFC79C130434973A569
C15420318F852377C83331457AA47AC07B62246EC9E75B6C6298719600992548
A68772C1CAEB0A3EA57672EA1D7CE4898094BCA694C00877E6BC65EC82F51FCA
2B6F39189A1A07946720C31C5D12522AF7CC17918B006C89A98BD9FFE2CA8484
122405699CDF6369ABDDBB015777A9C4CF1D411322A0A3F988455D7AF8D58D6D
F86980EDC0EA4262A17C8D17CC29ED048CA1D1822D1FA8906A79E2B078DDAA6B
27C43396834E36751300AB9F9417E1D915D7E58D777D53156CB5D90105651F3C
D4CB919FECEF041492ADB51EC95DF8E053F2DBB854C4BF36A4BC054C520E121A
74EF9C325E5820D3C9EF826C2CABEADA4BD266B9B4E40E5BCC6F9D38A98AEC71
1A55C6C0DFA5EC55032F07DB4C25C0D1E15E3395B062B933EB55FDEF0828C360
D187286D4769A0166ACA47C3614F7E4C839CEAF248413B9AB45604C2037E471B
D24485A77247B614E49016C180CB85FD2D1D5063EB4B2B2D85542665FDFDD46D
F3B254084F007745889B9F3983211CF964849E6C0844A96214F93C68C7B70266
EDA218C6D2606A4B723D28CD984885AB3ED0612296632D7089A71125506E67CA
2E3FB8A327EFE9CBBBE8F9B76ABA9F6F7335FDFC522135FA6FA9F76FDD45FCC5
C10CBF2640628BA4D6D647166DBFB3CAD4DA410E69C542CAC64B65F6B829C08A
4DE00DC325EC1CFDEF3AE91E163A19846B3BCE5D31682462FBBDFA705F328AAD
4BFBB6C40D8F4D72EC63B0420AF42AAA67DCB9DC94301EA34C3872A7A145184E
7661CDA1F38F9C917A16AB20AEC7563535886E28292A42226111FCD58FD4161F
04235FEBAC54193DE67EF18181FF112F356F80141BA943A9A264898304A49145
0FD1452BD0CE55C87241FB72715838A2708FDEC733B81B8961F03E01EC75A14E
5D6F3AD091677CC2E4762AC786600CF0EFE3865B27A0F97CDB6BA9B9A521464C
A519C9E8B24E16EAF6A0D5EA576DC9E9AB838AFEECEED5B387AD84597E1BB380
8C5755EA09921F05567101BA4EAE81E70AE164DACBB55CA9534511D08883DE4E
CD76DFEF5D2616577502C8E67A033E87DFAB3DCAAFFA291CFAACD7F664D76F96
48DF95A39C74183F41E46F2C56BCB59CE6AEF7E910A5A3330149955E87E7CDFD
02FED887BD571450A3A00AF810B49B8BB78F81FE42DB1827F994E9EFF86E090C
556CE255B3A8CC8D2229A01DD3EE09EEFA659502F90DEF7482AEAA879FF07E61
37447A43961425A18051A0C0C7CBA134AA5D1237AD7982B3366A4CC57E49880B
F61BA5344F42E49DEDC7ACB9E0574E1DA3778C5BAD737B2A2BBF454F4718B5DD
3F742689B36830AA72D8C783F4104B96CF16DD09DCC0036BC505B1CF781858BB
4E0744C02604895127F3FBF6C63C2901CE4AFADD0873708C0957AC8B99FAD073
38208958426E81053D0158097CDB6E2809FD7D9A7CD9CC027EE23F3B3BC61A40
EA57044322C237A72CB3D24FA21C2C7A8B1473B0210D26014CDA35ABE50E43AE
07EEDA4D1042BE0DB0311AAD05E48B2C312C56E95C026E0398156AE3FB329443
7151D12C10153203F578373CA7BF15B974CC4C85B92A5B8592BE056026C8C795
A0126B689964B87ECC23E83F19351612FB0B1E70DCA4C3D3DD9EB64CA74A5127
4134606E73A0D0A9ADE783F98F0CF86E8A78841C25F3AA946FCDB5C0B35D25F8
DC2EE85974E8A3ACAA54356EB2F96D302EF8913C6BB60D3A20656A3FF51D2DC2
6313FA7D4D05D8E9A9F4E75601421383AFCBA8006CDEE4B2BA27DB49DBC6B0F3
E4A590341427E46A9E6313BAEB3A19493375F93917170A43C7E26EAC7D3A94AC
08354BAA8752283AD7D74A6E8A05E86F19BFFF1BFD938020D6F8F873E7A0C607
F80A4C94CCBFE90D95C41FA4A5AF7A016D3C773E040312AA0240D80EA8094D30
7B9A074DA1502ED05F04969D83194164CA3FC9C4F45430E5E1A7B589FDAD741C
93AEDB827957F87B6218D1D92C3B9B65D6D70A7FB61BC4ADA1EF4B7224CAA009
FDF7AF81630306D67E0AAD0DAB78243E1B81495818DFED677569C646EA23E316
AEE1EC29BA8D4A7B909195644CB6F9CBD3D6037A8683539060782AFAC5638FE2
504071AAE50D5ACDCB2163996299FA25E75395AAA3F8EA910BD6004EAB05E713
C3C62B0853381B561B1DF4E5970DB940A5951BBB6FD4919B97FD653F0D102D2B
7C6EB6CC8B621B0D8D5A8EC2EF922D917CDB0ADD125F3E5F8CCB9ACDD84F46D4
0B38D2BE60D60582539C29065C902A4A1F51C1ECC09DBDF48B857AB913AB9CE3
6C5BD24AC23C0F5C5724AE3C9E2B8CA4C389C7CE8AAE26FC91CBA1650D889863
A10E33C9F736CD0F8361837F4FF9CB88D06EA65B0C82EFC57F42E20CC880EB06
82B9BB41484B6211E1096709BDB6D8C9510DBF277B31B8BF2B86706C66F0F680
85BFE4DCF0C8E75BA8EA33617F1E8ACCB151099B9F51DD30639113DA11A97F42
BCBF8FEAB35B9C01EFBB7A1613D6B40C0D640FCE42710E093D90736A4A7B539B
664B05ADE1634E134443FFF918C75BC4B7ABA8A658ECE9E355790EB93AEA254F
7742B066A67474C2F610A11E46A75CE560AEA4C017EBF96D173028689486AF08
2785CA8A5E6F4F1A755E97F12D702636FEC6768143FC961DF131B7BA764E5CC2
0F3FF194C0CB5D2323895177CEFE93AABE6BC430CC8FD861C67611A5E306CD6A
09D2E80C9A90D00547070AA33536B4A532AA9F0D1BC8087EE74DFB7099864428
EA358256FEDF8282ADF04ED5C2264211DAD907074BE3AB545E46E6BF8799AD4F
C0BE438049DD58719392C09593CACE78CA4A16E5CBDD29930856F00BAB4302BB
272DF7D1D6868C4C0974C5EF103E8B871C72619E1925054A3840BABA6A477D48
E5D1B1CA9524457069D854689ADC65E63D67EF315C45488D0B1F7C9F3575B483
44498021970204D42AE0F2AD7CE0FEE3CAD755AC23964FB3A0FE97C121CAC972
9DE1346341E3F251815769B230842A3D61C78F87EB10748F81DFDE2C7EF5B3C5
422806EBA4D2DF543F775A071A3AEC9EE2CFAD51447F0D660BF7CFF7EBC4A935
42C561A12D2BEBB44A71F76248841DE5394BBBFE6F656527D04728D49F9A4531
B87A0360124FD1504C60DB8D9C8AFE92AA7EB62E988B0D3CE71048399787217B
CA5649DFAA0539291B9B8004F29F21B2A9D8EA7F0DAD210FDD6171F3EB972479
D537F63B50E8088F4AD38D6925B272E269640C43F5923329E440A4BC1282B989
F287F0D01E6C43EDDB37864049CBAB6CF4D29FFADA86B2C55B517654DEBB52B7
9035787CA842053C119ECEE2F49FE8B238AD79429321A8F96E2E1F02AD70E2FD
BEEE625BB1A2593A4E975A340EFDA6FF45D81E5DCCB9C26B9FF9D0D6EC3FE72C
C66F826A3A692434D4D3BE6ED6DABA6015C2CEB19956DDF207E96FCA85B085CA
DBF9DEDD098FA5BA550174737903DE67E775663B85B3BEDF0AD31AD80F15B272
190C1ED6C4E152F6AA936B59112A2A095370B100A04A36A3BD6DFED9BC3104B7
D31460E3FA77DE5FE466F7FE3CD1E8FE988132C263A316141ED0F25A4455CDA6
0B93D5FAF5B4BBEC5416501276491B79153F8DF73B9046D74F177EA0EBC1EADF
96CDA6EE4C53703763505A82C01B5470133F24B7EB6B0A4C88BD415FF70F0BF5
87E677A806711890C1AC5997F21A14E7523CEDB295474D5F8D1B60E509C8F9D5
26BC97D4E175B21A8A8651D781E38CC8211B551D5625E2B3422CD08D21C9D082
2BFE3A3FA6B18231D9D812B6F31188F5CCCF4815F4616D13EEE81647141D22CB
B89D32B10586ABEB987F718C6428CFC648FCF0869AD31A57B1224E2237CE0413
A464973E2730E8D19B8557B3C7822C764829548D1C357D76F8E623370C82E423
A4FF62228CB9EABED14DE2329CCBDE222B4C31FFEC8DFAE8E15FBDFF5BB49D66
6F1566F532DCACA9BEA2BD64E3E6657F5F1463ABFF37AECD69BE9AD7B87EC13D
F7B66CA7484F1655F2BF24DD9AC0CDD37B052B9AC8DF24B4F9858B467E4B0756
936D8DB0925290F014F7C5A6B618673AFC248E8EC4F6C7A55DD179591AD1ED3D
36147896920E16AA8E60BC5790951701EDFDC3DA32557C833E467AFCE5EDF2D3
8886EBFD84A70D9AB66130433079988159D4FE0AD659F75DA3AC2A2BF8A200DB
8DBC9E21BC24DF15E8660B29B60E86360C27040EE95E62B161701E73234DC803
CFAF7C88ED35A539DC06350332C78385EFCA29AAAF9A225424A889FDB971BDB6
6BBC55F4D67B93EB6417582B7D7B8E44EC96CA2888B8B200B6A736712541A117
E690134A5915D13634B978B12B2B6E97F0D816D95BDA0BD99EC4932E1CB09843
8187BA27E2A993E726DD72DF4CA18857A3BD1BD163518B5912ECB7D381FAC3EB
BCD2DC47A501DC08730522635B00DC1D7ED874D3948549355B2C66E26CA86087
65C46EBA77C84C92BCACAE3E0170B746DB63CA39A2B75F595BB7F0F55549506F
9B6EF43641F2DAF9BB3C19BE207736A7F261461F5345962DED3B80B0BA1D11FE
B59B435F3A49F5C4E03A260F2E92C7807C74EFED2B132A2915E0454675F042A9
B03ED435197A7BA67F9C704283837A76FF09AA4FC3484E54DC9B6C7B76973D37
010A4C8990B3D2545D21440987FE7AE6ABCA16D566FBEA8B0960A982D2F43B24
EC7F2BA3E5D66350AC0FBDF769E54B11A5DFF77B4BFB220C9C272DCD31C53CD0
8ABD163F8DE60A45794B845A51C97073905D5F48F6F789FF4E73AD9F901D26B9
236F6A662F091CFB2CB3BC136D0AAA7AF6559396A79DA8731273DC120969CAAF
54CD5F89FD89D153C58F0D6B6DD0E4465C96FBE9F655600B8893EE2C65BB593B
873005136F2D32A270159C138B2409D3A79E946E5680042F32767BCADC8A32BC
FEBFDB16A0642E5CC69E5A25A66E47FB1AA603DB7C65046CFDE4172E5134BBF9
5DE794560B5F7132E35C90510B2EF00505D58569F35E0F24A38E14472648032D
0FD251B7C5856581C1D555F914536863C591A4DD1F222E2CD4FF98DC7F79C989
CCC086CAA9F04D3E9894355040B9654679EE7E74FB864AF7A29F6EAA54ECE2C5
E64C2538E0634839E2BDDAF2F6FCE95758EFBE28912DF333DFE05DDC72CF0E40
111A57B150A5B386F7D52FE6FC8E90035602D5C512AF7263C4F8A19BD3571BED
0ADC64F47E5F287393BDEE69836A26CDF8AD1DFB826B01DB939659AF92E96064
7F30CFF84D69BD5B50DB0379832507E2D44391785BDA3A90966CA9194A2EB640
F2E213494457C432214A3172FA567A5BA3782B16BFCA3976097402F18D4B4395
CB6BE6E305120CED49F055C3AAFA37312F9BCC4F4DFD7397B74AD1FFFE53F765
6E408CDD8A3C8215D594C6B911EBC203004643F4B76AB7BF41CDB0A2CFB2CFF7
A3E02225677CD8901FFA923157FB455E128DC8BB985C3F3E02C1D0025B46073D
42A8AAE4A6F8B0B2ED3A99469BCF9EBD0DDC9C4FB7B037709082441C1FA1051F
D258535F8DF4548CF800C6ECC79D637BE3D0D90BCE5FD94A219942A69ACFAAAD
F9D24B2EB524C6AABD7EFB03CF1B8F6668C8BB769485C6751EB1F9F31BDD0849
9CEE7A9B2A336941716D2771C7313D8B9CB50AE03AEE952DBF1AFC9DDFC002A5
5CE0EEB088B60F3DA6B9A3AA97EA25CE5DEB8FF377209F2B2794CA348FF578A2
1D0BA0BBFB4504ACEB87F7A42EED20A96E8F4430344988EB94048545A761892E
4586B104A24122283CA1349A39B3F5A2A5B1C8CA80962332371091FDD988F5D4
C05348B811342DD3A2B352DF149E24F9A99CC73A8823086354F120209525EE41
0DD0F512D7AD03EA2E2B3A3B35663BF0C3011A7832CC8A9593338F475211B28D
9A614446CEE225D117901D017E0A375ED32F0E0EE90DBCD8AB3972CE4194E4F3
2985C5AA0FBAEB39AB92906084D0626B6C1AE089815D9703DA46474145A67FDA
34DE10D99FAE5ECD10412223533E3493482331C120D3D3A893EC05965D37C38C
96514D6D01929C3ABEDB931629BC216CBD42A23297F4C058B2A02018ED03A84D
BA6AB0884C5D19951238AE9B18D06BC3B35A05F4FBF9CCBD4C345FBF16AC794E
C79A7FAEE4278D47C1C60591407A54FAD121D5A3BAB63DC9653ECE5872769B67
4EAEE272E48181100326F5914590B1538D47B4D9AED9A0470DBA3AD83FD93024
F0C7C21F016398934A0FCEE7B11A31739D3B39A8E0A21C91F29F888F2515B44E
1595CEAAEE1849027B06AE58F6BA2B955787B82B82AEC5E8E49DB9DB4D4BB45A
CC4E3F1AA06C276D33F6F2D26059E0C262011C5DE9CE5269C44923B76632E075
557959FC98AFC4AB9B14A2938EB6477833D08DDDDD04F081C432B0668DF97678
ABD8A03E8602DDA9DC19D0C61C82FFE2A5BAA9E0B49C02C2C18DA8FE8280A998
6719FD7BF5B1ECAEF8214287F3238E4DB674A60946C338CEC81FE7CB2152E5E4
467605FB8B7A51A31103E167EE0775171D11DD1E20E5A1F761CD443C61E8E28C
FDC20914BB21826A96B840649848D4FC1E1E1E756607BBCDE686178C292C84C5
7B01F3A9D0A5C3CCCFFF780D123DD1562149D8F904630C030573759F975DA8A7
655A6679520D3B6DBF8CB69D5E57A3E89CD80EBC2D7425694C87E47E520EF9F0
57ECD1DDD374AA3983FA843252B701D5ED1362ECC54C587C9EE48654B1A7759C
E6D9A7D0A1283DC6CC7EF5541D20823476AAC5CB0D08DBD403502A20597F044E
A90C4A3C4EDCEA3A221A1595CF405A729278963468EE7205CB0BA09110EDDD89
91D7B7F095CCD442851E74BEB8874C632B9014FB5C006D9BBE72AF21093F4D18
06CEE33FB9B1075A920D883CBB0A3E57F1C842A98AAB79D69C8710FB9597B0A1
57594E3F7613FCC65C406B8A7DA99288BFCAC7BE10608397C11F0ABCAEE67009
85919E8EFFCE817267D898F2407198311AF27A3C413336CAD1FF14FD0474C1E7
C39E8199255098BC97FA20ABA84916F1C2430501036E883E52A1246FEC14D1AB
0FCE0E0E8F6F1CA557C0A55482E49A5B192CE2A7BD18979CAB1B856E0F120F27
278B48CB61CC57A3E4D719E88B09180B005B6FCE3025B3EFDB4A72D9B49BC9DD
C95E335F8B89DC5F1C423E0AD9B4A7700AF8339BD83959D4A39AA6968C5DC278
D534F1DF99AA0ED8AB29A20212D4FF50E76CE317762AB0C207FE1BC1AE919D1A
F60386478ADE434ED709E719715C3C74AD0A12E2102C70FB3CCDE2ABDBDF77B1
B785F5173BC7FD79F879AB04CD985E1F49CA66C43984DA2C780088A91351EC8C
8643CAF751B2E72326BD13C6053B68C5A96B6DB6402FCFA102449D67801172AE
B15A737E52CE199335583C8292B4C700
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890A7D49B0A6C7268E399C6C68B6ACC0D1E9F5B2
931BAF9EEEA6ED985835323E85D72C6A607A99212BA2DDD24D57809EDE36890C
F8121121306593CBADA65AD9EDED7740C9A2F402E3908B54CB4AED249AE575AF
E64C76BA802490ABB489275E5A3F2B926955B0D961A0B9B3AE205C074AA695C8
68FC2F6997531FC328B8FC65BB06C17B212C8C06D5127A14D7989D24912D1CA2
1FF37457E65829B6E1C65A09C1A101047DF20ABCD57E067A7298091C88C4B587
84409C67D00F7D95FFA0D125FB938B5762D912E1C0E116AA0593B1231FDF3BB1
498BA3D20DF13C7EC6D40091B789C9FB7CC872BB73E6B9D4ED8A555CA31581CA
0F057B10C7A8CE1D7CDD4FE2D5332FC533158B8CE6CD3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FB04FDC4FE2F15947DE72BDE539DC79E2EDC
7B7FBA63800A37B6EDB5E58E81BCA267212F3D633FBD44F1767D5CE3A205C3F2
98258D4435F7CAD86CDB2D9EF08F2E13FFD0FFA610B1CCA391B8F65032736F4D
D2EB18FCECC20D99411CA0918A4E18AAEF907EC7D6131076BA25EAB5421B2C55
A43C3D7FD8317443078E3A7FDB6B95539CF003A195663FFB3A1235FEC42224E0
8E3030C575B01BA01325A524D676161B14D376DB237618616EC64BDF972895EE
541BD1EC657ED5D3BD43A15CB7EACE2A5AFE749E97308D8A30731A2D16BEF610
3E5CF27493980D042DB9334244F1B53A7CD80D444A93455702169AD375BCEAF3
987102F0C9D83420D26447974D5F4E690980035348B6E613150446293F3A2B35
3C3C9D2AC6CE183F72C2571F46E81CE317A0B867554FC418A96A550D2453ED75
51F09716732B9B7F6CFD3DBEF2854FBB70F3F5EFDA7CA047CE71B49325EFE87D
508AA84519A585B0D50E05208B6D2C68F8CAE9E03728954CAA40EF5C7609B7B8
A5E1768FD239F48D40506776C2E5BCE6D4AF2E318F2058F294D236578CFFBE68
A3A58E1A82794BABD4D8814B53865E03C0C0D6DE7B16FBD58263E48108AE8702
3FA6C06816598772E12C1CCF051938DBCF63442E4E1621C7B4A3EAE77A96BC8D
7EDC0AAC6DA6407D2629816D401982539FBBD85CE5A495B91553790303BC2B34
C61FA82F21D77803AFDAA49FDDDDB86B8F6978F44EAD1E6C3FCCB186BBE6C59B
B74DAFCC33DADDC64D2A8C99DF087027EC2EC8D96AFB0859D8B9DF74AA62D786
288903BA14F2AA4C819D8EB3C82EA74007016658E856FE5EBE3C8099E375D64B
D63E250047E910F5587847B9B4F6BC4383775280C8337FA283BB4340DDEBC4D2
56E13F78F42DD4C3787832DA8FE8848BA6FD3427F6FEADE6308DA8EEAF8ABC55
508E470D0EDDE6465223B3ED9E26A5D9B2A0136C9BC16AA4812839EF1745C0D9
E8A74DB6DAAE6CA7DD212083440C3C61D2BF3B821B982896932E0212DE5D58BA
9334E274E26C9B301BAAEE8A0237BCB5C7A1CFE8F85CCDCD23E9182604CB5D07
52DD37CDAD896C537B440CFA78A1197FCF102CBDC87BBA4333336530C19C1008
E363144F18651E39ECD39E1A3561F99043CD9EF07F9D957AB251D62164BA463D
C0714424BCFE282588EABC04F4E40A42037773349DE530D7055980B63AC736D7
3305BE7C76A6D637A543047CB6FB3907739D7EC6A3BD1B16ED4B0620CD94F6A1
3F12F4C185CD6EDA68951673D6384E6CD12944F86D178C9E4085E7065FB50E28
631D2A286B9862B0C69172A92B2BEAD105A169AC099700E454C9B0FAAF6F2A73
D0F47FA372D5CF659CB8BCC3A264110C2C6A35909BA14CFAEDC2875F4D6B2C1E
A59D629B0FF93EB424BE478116E5FE553BAE20B09A6F8AE40BE8937089322286
8F2CBCC1A37AC300FCBB1C8F38EFE801F71407301D522C2D87ABEF72CEC76681
F8FF7ABBFF2A12FDAEBB2C961DE6141FECE531A950C020BE383482E14BF8D9AE
C453B7C6B245AFE9025E9D4452957B2F2CD39BF76BC7ED9F3887071835353368
D8131F7561EF5A3DE144D44BB63166AA8C7281F619F322A3635893A174A266F1
46FB68007DDC6962717FE0EEFBEE2F317BC45E4B7647B83B7437FB44CE935D6B
4CF9DC620B2E22056DCEDF9A10781829D8E2CC2364301A79073E539D81EFB4F3
0C40106141EEBFA99CDBC561C949F1641B1136F65BFB1E1FD2D6E99E7F67FA7D
E5C2D9FFF367226E73CA986811E416EC00E3C5746415B1AC57AFA1821DAAE142
3DF997A9E43F30BB7DFC8DF26DA8F6427469C4F61076183D794D01AE224451B5
C13C2CEF05FAA1C17D3FDCD5F6FAD9DE513E0D6D14A3980014FA109C9235A7D5
5DCAD16A7AA32EC49EA31641D1739B576500ADBDD6ED553C872502C08791F29A
7831C8FC85F8BDE8FC66C6F24BBED7138A88D7EB58E6AE90DE241983B0DB057B
72FD370FCBF53C18F76B79AB072E704173D21EC1E057FEDAF53561D04A85898C
0BE02B519493C9E5AF7B22B0C55EB698ADDBB0F8ED15C971AEF113C747B2EB98
20A92F8C86B98A36AB956ECE9F5C5620713A5FFA49628CDC2A8FB41FBF08C850
C509FF5EEB4E85CE7327EE8310F8FC87A29AD6D75C4863DCEAD5EA71EBDAD922
BEAE31D1239719766CD650AF2D9B1753BF0783C1C9B860B740F2B4D53A8656B4
EABE3095AF246B00489F30BF27F857FFFC90349EC7987F1C9C37D11E7F6345F6
46566E0AAE0D0D45FC18390F67BF16F9B4CB43B26AB9B8ECF42FA5581314A785
5891FE38AF4673CC7172645BFA492CDE63857D0C6400992BC331A4199A987EE2
14AEFC6CE2A1D4F96AF873FDD624ED688CC9A6DC06F4B0187CC87BF71B1FB81A
8A756D9FEAB2BE6324E5BECB7546B03B374C2648032D0FD251B7C5856581C1D5
55F91453686211C332D6C13A8A7B92514B6CD803081AD247BD97FF220D470804
7C91637E104E6E0E84ED6ABB5E15F4DF7F60302A8D79ACB989416E6AA9FAF4F3
30E8FBDDE7D77D838778B46A1AE8187DE709F66639E6210AC25E07666E13CE84
FA847E63D3C9AA412D10A50737F7E31D6CC6B63FC347066EB12CEEDA1A1B81C7
FBDDC7A9A6FD8346205A4ED6A5B90EB70E56A831C6A338847DF57FD33DBCEE0D
93700C4C92F749CB10357090B271628A34B7B04635D43B682FEF04CDCB14AE2B
5AC1F8D1E8B81F8D306F61A7C773AAB8FFB6331B82F0A2BBD5B56D32B90E027D
459D467C66E0B2E15C2F2A44D230FA17EDC57D407CB83D2501B0D2C9E86FD48A
A9EC414E0B3A1A6C53FC6B951CE935ABC955B8194B592EBA7034DA37877C27AB
769D8181EC2D288635D503544380258EF4843C39EDD64D59FD94E698D0A65005
A32361332D8273DED975BD53607ED94253CB78FFAD6ED438575BCB1430713B98
8916487ACE0AAF272EAB35BE25032ED73037E9CDEF09C16A2C0FC13C8732D546
3F7F5CCC6CCA4106218CF236274FE5B883EE84FDF41236AD38C1B39146476E34
EF002FA928E87D8F52ED196803DAC891DF373B7882BADE71D95168A8AA52B091
AD4296CEC91897A9C225B749DD1D242FAFB7D227611F9CE0C997EB36BAF4FAEF
69EDFB7FED49E325AF1AAFCB202750E9BDE225B10B59356D2B2CD4437120A308
5D909BA16CB97E36E5719329525B0E5F9F6BFE0B3C411DEE743EF14F0D2A2E98
48262290D7F8E5AD77A3AB32CE9C7B476CC1D6D0BE07680225415A4A7B512A18
0CE092968F8E83F229119A2752AA2AD62BA6AB975E71220D5E3D23E7A726D048
C4DFAF41B77E0C77F98BF02C1CFA6831E419312D3B72E0F78E243EC49C2C4751
89A3DD01B7C3A7822F734D53B271D6B57F53D5F6B85D40FA4E5913528BA4A02C
133DE3866CB703A5B760715238B61A4A3DA50EA813731121C2541984B98D3CBD
E7CB0B654E730B78F105275BB2957D602180678D9CEE6397F787B06C71940C46
7515DD57356E07653B1B4E8DA17BB26B03BB06E192A3D5D83AE512C9CEE0C1C6
0290E3616A3F022433C3F18FF4B64546B602E7940BADE0D8911A6278646600CB
A9A79FA0BC8A47D0C7803C544AD16DACC3058DE5836470FDCD8E7B6F9E6717A6
A3E963595AEE2152145DF4603710FC56C4E8E7E7FE9B2134E3EFCD8A370E5567
C8AF24681166030C0239D88106B37A713AE355662EB2809B66980ABE0ACCEFBA
3D2977040D8E3EB3311872454D71FC7EC5A09403556AEB400D68B231A3EAD2EF
737EA7A34063C34B4A35F4C22A9D5DA38201D661E68CF48B841283AE4A530FEA
C44A63E2B90731652CCDDBEEC586110DAEF25DF62093536D23CC3D95D3D147D7
B7F1A1A2373A702BB017E760AD9AA7BD2198D8808551147686B2A61DEC96C0B9
206CBBABDE8C4EDE1CC94036CFDD3BA5D28D3895B47EEB3A4764C7A0A62A6B55
1340EB80259F623646D8005A3F8B90378E9631B9C0374BF8485896191BE975E6
2E7F7771FD3ADA7DEE0A77B08D7963706DB8ABB55A6381320C0254C27B0A0F8D
3ECD1B056A35C37842C492DEE3BC1C6E0A74481B0B3B5885EF51C89659D8ABB1
9FAA029106B6D6E9979556CFD400721EAC67C16221ECCD01B5D9AAC6DF87B4B8
35C7DE472EF8CA83E5FFFBEFB620FCB15C79CCB666DA9BA336AE11C7B55F467F
12BB61BB5A3951EC633967352C75105A1222751EDFBB3E8B7297648729B9DA76
F4ACAC9E7F75C86EE557077EAAC299CE93A5E0AB1944BDDAE1FB609F621928A3
A51EEF53268738B01400BDCF7A4BBAAC2CD397686834A6BAB96EE0F477D667B1
D09AB23E7EF67345130FCE98D14DCD6AD90FA22AD5E50433EF517BD0FD04C73F
BF1058A8907ED4383B93FC8BC7F4751D15D11F807B285FC1E08BDCC97443CD34
CA99180509BF3AFB2171FE5A3E58B2FB78175770EB07C3870220EB3399E9917C
AA5683408D3AFC33820769F54F0BAA5B6F3E6DBEDDECE528707A7A31EAF5A8AE
D0A09CAC1BCCBB6E8BD3500489A6132C0F36D15D428C0B97FB632CEBD691C1F2
9AFD52CB18BD258ADFB0B4BE5A3414395F170DDD4AA55929F95E30DF0BC6D5DC
06008A12274A879B02E0392E5AF97B16F09D2B8A3B514BC268115874360EED1C
72A524A9E19BED13D137DFE3F01F272A4D4E104FD0B58642160A0A7BC252745E
EB8E97EE85E7520330EC6936141F6BE214776C7AB2623C583741339D33BCFDD1
E556F33B9BBFE23344903D5C8ADC6A28913CC459ED7811962AD08A130D7781F3
78AEA2029391044566DB71B23B0A9CF1F1FB873365EA1FCACDD36E447A1E23F0
E139BA03B56B4F220560CE72BB55B8C0077B707BB781EF298DBA6CB1758D22EE
8A7680B01DAC100EE38535283BD2B223A49CDAE98497F4FA7C5048C0868EE961
746598904F052A50EF84D1C46CFE09C77254D069E2C797D100AF9BC17825D628
47A988EAFC7B4DADA774C3258851C763613B3DB11FF0CADCA84441115A0F5857
709212322CF101D2820C4B916D2585181D54F1F36A87417F0F94414FE18030F7
9C658F753E052E06897C59638179332FFA3709DCFECE9164496E9DEF7DCC79E6
B2C4719681BF38FF9C114D75E7B894D5074110BF19A25FB6DA62DD30E6FD18BA
BF43809C925254830DA1CB099A6C673540117E6FC158723526AD7C92DEDE350F
E3E8BC939AD4C37C7C3968C89EA69B3DFFE6E0FC453B90FEA4A1C9D60E210D0C
BA59B887199F7C2BE1B41A88C9D6CC4567F678BFDFAE49D3FE7B47F0B4C5BE36
297E9DA5DB68755712C9B6D17D206F7034D0EA4F1FB73476024F876CCED1601F
2E8ECF2936E74C53FB87A0B0CBD175F000ECC75A4E98AE11A355F36DDF7F45CA
DAC577EF13BA06070BA76337BF404B153605402F14B54551378F52F29CBF6CA8
451C9BACE4A515379938C91AFD5DA7E08065B0A9196A1746A0298620E5154BD4
37A3C6E7EF971E36A677D047FDA09989DE6DBC533EF8D033328E19749A048D53
7AEF5E4AC20E54A8A54966968832C66AC9AB94C787C29429FD1AD350C3E987A5
CDD4145844ED7B2A9D46CB699AEA993B1A8BEF176DA46569FBD54C4EEFD5C1CF
DB30B78F38C77D3710DB3781D69EEA4B6603E0887ED037B1BA381D130F9AEFB4
0B910DB288BA3D575E787E6B81A97825C183D7931989A000941FC5F85C754D51
32402A0A94EA3D0E37D6B98D7E28A1ED57CB36EC875339EB25DADAA0E1A671E9
ECD4E06372482BD913736E5EED8C9C455107A2D2C940490F61381FECF7D1A49B
E7AD6D8C3799EE8CF640C1C59AECA0BB728E1E4CC1851E91B9C52B066ED33EDE
58928B59A875DA2A8531ECF4CD50146460DE396AC9535FD80BBB6357E64ABF54
21FDD4907124C9D825517BD1F083F92277B32B4863BE9EC61F42039C49B39B0B
7A3872EF9EED89112CBD3BC340616C1CB55A72B52D8380C5112F4CBCCB78C3DF
9F8D82D9E9778FAAD4D543B49841D3CAA4C16EE8F2F9A7D5DF58F648D97BD545
14602B2FB30C9A40DACB3A1AA64B9BF3763E4F560561F8EA96BF0A4F3EF77620
6C2286491A09542308E561EBCE71F8245BE46883FBBF86FC42D933764EF10C22
3056560C55438755D243C5F055EB9D6BC53305E7D6B1969AED96B7999229531B
651E4C98B0BD07C1AA868837666D1659DDE8EE66FC30D70E339334EAF80830C4
4FBF0A476985495B8E94E473052F20C5E417A6AFF31EDFEBFA43E63A8CFFC802
7AFBBF5CF2C8BFDCDE2A9B67E9EDC9E2C1FF4F9E51156B1A36A5D0F0E0CAFCBA
F2403DE29068F9E4B2E310D4840363732D77B9F24463ADA9E11209807CEA558C
DF97B5C33B4E655BF2A7957D6929360D4C5A6258805DFE54C8415FAFC12C5777
A0866F9C1D20778C9B9E07A0A9B9AFDFA66E765FE6B7FE9749B97E5BA59D46A4
48D60C4417D996A499D1C5BB0DE4BF5461241002CC42F60DAA610BB3944222C0
1F0BA82B41A5C44777DDAEFA56B27091598B2DFB77BC1215DE4BA9A049EEF3CF
6CF84697FEEEF16F2290BF3094539CF580B57E5D2947B2D313480A405C62E9A6
320DF9C0BAD279CD88A995C71A69F35BD0CA4542824B1F4329D05465AD3C20BF
4C061D7029C0F8C58566D6FD1DED9D5E4139AFF8366FE6622ECEB154CE3857FB
4314F2EFAC60FBA20722335CA4F819DEF0C6103AAA90690F834C207BCC79A079
D00D1ED5E8A86BE9DC1CEE3FCB03B9A0E4BBBBA792B63A84F9AFE1C032512E81
9FCC17EB00217E5323CC07B905D58856A99BEAE260A8CF01A6F2D73F6A5AF802
AECE78232A361060B3AA3D532005EBE263002D3984C83516A31C5B26E391DBF8
FBD2E94C4683F3A493AE626589E18807A7519DCC7CAF542B504F90371BF4BF97
B23ADAAE69DCBEAA2DA6B8DEECC64E577F59CFE8611634035FA6C379D1F45898
4E08E60726908634025B118DBC8B61D90C52DA56A2432A63E5C2B1ADE33FD146
70C61280F70A4B20A6825C40A3E1D68951318CDB028AE529717082BE36A1541E
E1094F510548DE1788FF9CF4EF2D27678510D6A985159033351A4FDECB4B3DC9
71BE53967C3E60EE977923FCA3E98419129D89B413FC97CC45ED2D9CBA40FD2B
9FE2CE494C712C51556C68D9207104404F7D2D1FDF88FA9735C944C04B919B7B
B6A60DD4DDFFD2F6DBCAF910A75A1ABE13802EBC5EF7908D61DC742730DEC844
8B7BFBBBFB11196DE106B14216283297E4F2E0B872E9E3718B122B40769C4BA1
AF37D31F8015AB937D039F33D47EAAF75FE172D9B1BFC3C51B59DE2C383BB4B4
EFDCE7AED759F131393E2A063006EA508657DC9F4E79BE368D79F852F32C025D
2304EC4F90837190CFA1B05D238516112645B4B6BF5436E3411D5A6370B7EFCB
B468011A81ADFDEED11836E7D79DE62BCB8D7337C037DD4F3A5764B394998712
E5C9E0E752B2536CA59253CE627189AA08FC51751104BB961665BD0AF6EF85D6
8E16B5AE0ACF6D34E08DD779FE6C78EA43F8CBC578BA0D4732FA6CAABDC850C5
09FF5EEB4E8F3353062BCA5357F755C48E49F40DC98D20E7028BE3A35D981B68
02C7E63E797DC8F0CBD84EFD9EC148AF4245BFE780E23BB321DA5528A1908104
F512DA07E4DA2845242ECF175C82F28A5560BD920A546C3577E87ADE936A6A10
BF199A9527D50D7DA9022C5D39A654085018252E9C4B700945D0987103BFDF1D
D900F951767AF33F88BA6963957F3DBE73F5B64F6CFEEB32602DA2B5FA880C53
7F60E1394571392C3C14FE346EE621E1375BD57EEDA0239884B2F48FD7E2FD14
51FD58CBC86A5ECF1706A7B1017758A172F80111BE5357BF0687ADF56193C9D6
D357122AAA06C55A90405D5353B78A6A20247B49CE410908042ACDE9414264C0
699B0E0D2512D7931EBC886B052717039570A75CB813B4DEC123830270E7AB53
D1AD5876C07901A071501004D1660838D6DD68CCFB5D5B1A9049ACF2C3568466
C90309DB92FADCA29EA131D482990CB64C201664D2D13D7776078DD7D2B0652C
35B5C82BB0EA061E3521CF9765A4576267E1795115AEA57B785862408C117DCC
0D93D513E044DFCCEED22733C4FA131A51FD0D4D032ACCE3241BB1CE01FFA1D3
91A7728D51B18A0E1DDB27E711C889B7DF32888B77FE83EB160ECB4DDAC282C6
8500194FF7CDEAE609AD994E23882B1FE802167D3D340242AEFC150EB494F418
5D24EE766E622E993C71D839EAC70582BC3F615348D7CB21E1D3D968967A1447
E5C9D5156F2043E9B574A863BE5B16E0E9DBE671311648C07460ECCF0CBBBC56
A78F192BA7E030922609E03905B37E88EDFA25F24D7969C87C67CA2A599F1F4B
A039BBB26179F2A72599892F094CEA027244F058645DA3D75CC7D3C164AA57C5
E45165700EBD38FC43CA4F59B3F360C66AA7F5E3299C87A59429CA8CB077B8A3
51836209123853951075DD808C5E20306C5790F6307562481F07F89473D24F0B
4A8233C658BD1BC7279292B2722E1893A8FBC3A7C56C8995076BFBFE212F5FBD
689E5FDC0BDA7BCC4392158E21E5FF572F8C76C2F58B69F01F2341AC27750FA1
CF1A994E99B641DAC2EAAE014C26BF75ADEA293858333FAD8A5DF5D41DCBF200
5BBF75779BFA8022F236006FCE1DFC3ADD6B5E5EE4AD49B5EE0AFE3B6468AA01
ABC8EFFD9B0B6F1FA8A3FB93BCAD415AAFD831E404573C5860E877242A071AB6
0A00D19CB9FBD855ABBC9553CC600A72701A3C81601517800BE4F9C7E39DEB8A
92EE0816009F72EABFC6CB42746223773C8BC72E954983FEDEBF29C468F87097
3C512D04D05046DE4B8AA759050A4CD64E67D56C072B660401EA695F3FD5E3C0
45AE9913F8DB0E20616F63B55ABFD8D8A22E4C49A366DE4CCB332EAB20A47BA5
8EAE5BCA8A767EA6FE093E393C8ECEB3EE29DA78461BB8B433E2B34C4B3FFF97
794144F034B3E776BE48BB943FA03D2109DDD75FFD5330B3EEF2AE90BAB484D3
4CAAD2542B807009054090770432D63B1C903E565250C0E63DCCBECA12B839EC
2CBFFF7FC9AC13F612CD3CEEE6A943F73D80AF7245D8F075ED7497FA4DC7720E
6C412DEE880A6518C3E585EA200884B051300C269B235C018DC1B5EB22D5F83D
6A295AB9E01BF45591DFC3BC749523D8C197BF4B50A727E315F880432D749F10
4796CB23F8B488B6F5A8EF8D69FEF91E13323FAE6EAAC2E651FE8C3397DF6052
EF6435BCC52F1F278910A7453E1BEBC7C90C93B34EE07C1F1B354CC7B6A68856
A2E0FEA83AF8191D09A98AF806357C6C56099EA374BBF2CE56A9773E796E56F6
908687246CB307CC5AAC6E3381AC36BC2A99354DAF3705C42D227D449BF8E279
7BB52CA056F0ADC473D978A10D315910521533282982BFC6EBAEC07CF4E8A200
6B7CF373EB13B68B91B9057A7ADC0686A09422A17124B098EBB0C3F25994A351
68628E140A9C1328B900D04C4B99653EC00AF2D8AE8F680D68C89AC19D635F88
DBBC73AD3C77E7D0EC1C2534CB9A2636C0CE3A39CD22CE9C2F3D5B0203E9FA17
F29DC00E95CF28E35305FFC71211EBB0E78F0DCE9A1928EF6140FE045F3F675B
A045A8D89AC58B77200A09C675E4537955C257812A0309F59554533FA55762A0
903B56650D1C31FD7589A75015AF81B45F690AFD82865D0FE2D708B726AF0F4C
2D37475078B1996A964DD7A632B0741C67B0A44EF181C58222CF1C4DC905B343
BB72416574240E31C70E29EAF1167B008C218F2F1168CEA0ABA74EB43265404F
0195599C65393BE11269C8DD7247C96D632523256DE0B4E91D7D802FB65F4066
B638056F697BA89C4DBFFCDDBFEB6E8C68859734B232A7C0ECFF1216CF4C9108
44B3306F8650AFE3009F4B5B5B94363EB81B61D7224242087B0100B13895988A
D2D1F4DC2FB40840A0CA36225273BA193F4A9F02506DAA39886CAC4D93D6E682
3E197C0C6233FDA0C0AC392A2F772A9E3D9EC530266427264B8EF536A69CBA81
196B6EAE3CC79B4650292C8F30EC9EB93CD82DBB324C90207B01A07539866A1D
B7839361A0C87FCE00A19A3389B06DB5DF396F0783135AB26A74D125B2407CA5
DD56519A5BA8158EBCA302F04050CCF0A24C4EF865AE4CA32E601B41F9CBFD43
36D16C2F710030A168E9212C1F00409F1184AE358D6F5C5432DBA9D9E1FDFD8F
6C4F3FB28AF32DFCD79B8B834EF8E02A818F8D434F8FA446CB320EF9E2B9800F
32C6F0BD76D78C10C6F0D46FCBF266295BE92A624BCE6EE9EEF09589FEAD432E
2FBF294FE3CE1EF37AA659B04631F2482F244C74A43DF9FFF2647F18E3C3615C
A7AF845DEB226DF86483BF83E1F2B4D90FFB8BE2F427D339D1EEBAAD58B0946C
6E134BDC345FC8249F699D5364BBA3E4FC59D1F7378FB11457A0457C822AE458
BB6B15F383AE5CF81CF5256D70511EFC720268E486DB5D57149BC1840A9A65ED
B6F88DC20177296F2FE302F23663DF9626DB213C6EBAE3BEFC59CCC2DCDABF2A
E3B0DF0C1186C3E75BBAE92454507BBAB460BF0CBB95B97314FBD415324109D6
F3AB7D037E509C5DA4A954235A57F0F59F857E6B54D8D996A9C156F99318004E
C02D5CD155CA571BD98F3807EF11C82E84E736A060EB4775CAF210654B1F8D68
BA3DD3558B16E94DD6CBC32B1D1632368D09ABDED1429403619BCFC29B109BE2
3860C670D5EB5B0EE3A71119DA06CEEEE414994C63199351A0FE860FE1A87A78
18E74ACD7931668EE08BFA9F8F776D88FE9C5D5EEC6CD700C9A961BA44F2B0A5
FC7CCAC95D93BD7A2C0C6E5E54EC24AE318067DF78B8FB476BC191D11F631348
8D3D3E1E887182873FD7866F5F8415EBE92E51E7FF064AC08D50CF1F984E972E
628C1884D4C6CB1879CF83861AECEADAD9955327100476C03B131A04FAF2FF0B
CEE90711A0E3BAB42C1B0A34361A1DDB23585CB941530493AC9E783388CF4C4E
5CE4CFE090C28F6ABA7456AF84581D865470AACC410555B525925D9BEED7A3B4
294B006D793BF07087834CB6BA824EAFF494AB78206752608416081912F14AB9
A908E48303B8902D1DAE6A674D9909398FC0423ED356ADE5722268FD35BA41E5
30CD238D7A64AB9302A2D3B62AE0D8B8AD91D3BC29F38745A6DEAD24FBB2F855
E92B7762F9E45EDD96CC722AE02F9564E06F04F0B6A65CC080D414F3A6138865
BE994C6C74228EBDEEF67CD368F48FAD6D6556644783FFE23953B99EBFA7AFF9
AC10B33F5EB9B78E996FA66849777243B0DAF02CFDDBE052D29A7B5FC5F1741A
5546D8E1880561D166C5D73CD483EF7A482EB4081A1D097FB73F8C1A5B43EC15
9ADC8EDC5EFE67A2DC0DF375C832B0315453DAB18093497251651F2B690A9445
963F346D0667986C994880FE8DB53BDD95A554E64ABF5421FD338F17B562E955
B4EB29DE0DBFB4CADB3DB95CE2C74DB09F6C18D083A389BF56B9612B65CCAF94
A1B90B32120ABFF80827DBBE528FFC71BF84E0040F2B3660BABBC1DFFB65AA47
4FCF201368906EE40B6E071D6710FD81A5C59D0F9224DA14A90F169529992EC4
2A2A22D5433980E46D7853DCCDEC0DE25E8DE83F11D28E9670AE565FF9CA7C5A
D3F494E59E191FCC8152043093DBCC03FC0A022D504EF495A6B5D5A019C6A139
42A9F9A0D2322C8B3CBFDFDDEFB7386767ED56D8DB2BFBBEB52F816EFDBA9CFF
83AC072C75218AC4F16187A7A0DD2323D70F6BC699CDA42774EA23C62ED025A4
E1910BD6004EAB05E713C3C62B0853381B561B1DF0A095DF6663C717536ACC41
0871C952C783144C542046E4842F4BF69B1C7A53E2783D1DFF32E3C4E6EFA07A
888BA154350CB8CB8E904E7535440A065493480FDA1C510665CBD43871246568
31862FF01CCB867F027E95F0C66688F7C056FA366106E55C70E87C11358DB2D4
F72B5314455008F1D4D2C9D54B1BCD10DD7958F06FC41A77CEA6AF2B5C96C155
2550FAD7630471C45B19DCAEE5454894553E0ED910DDB31E7B4B4B6529CF2EFA
CEC94B27E99CC529C128DFA89182F89B2F55B1AAAB0B14C732C932B0BA4D7218
6ABF14A12B8ABA67E37090F3A56D06FBC0B4AE3304BF771CEDC1ECC1EEA9D345
23544C00B58BDDF838A151A2A42FDCE3C59C556E5235557DA055A16C30CD3046
2119C3AF991B3613B485BA2B63E25767C311C487368DD742A0BD67804B5803FB
9DCCC6342F21C854868567C0139C49E305763F08DA29E18492BF190333691D98
7799EA0B4A4AE8F1ACECD1339A3FC0F865201B6D7E728687E2791C791A000556
0EE26C52E95B71C4B9F6D1D647B4431489AD6E8101B910BC71EA0645F89E12CB
DD431807408FC790D933E2773A6A3C584457B1565FE02C4ED629782BF033D64E
97DE753933AA83F37FD4D440CCAC1788F5199E88AF05E9E6696DE4E39CA05A8F
919A49CB9B3D0D64F93FF369928C40169BBC1FDDB8DCDDCE95AB9D42D0FAF6CD
E696534896406A8A5234A8AC19BFD79934D377D8864D6728D3C22DB8C50BEB32
934270702D430489D1561CB28638D1D24AA9F358AAFF93B9564AB4C15CFBACD2
586F3D71442DBE3042A47EBE4BA1FFB2726063806C33974F0312ACD1605720B5
48189D085A7DE4438A41117D733A0D3E880220549437755CAA6C23D8D69CC4BB
9EFDD4B00ED3667B5FDC6BE303A38053780086F34EFBDBA229F6F44316033FEB
0A4244F4405709FAE22B4A45117BCFC22442209592A67F5BCCB859F8A683E5C8
175CC80D07137085C70F00B4AA2A3F38FE549D727EF5D26A10F3E75C36E9CAA4
AD5418193E66786659050B8EF68C398B5B6A6A2EE27DFA1F3F613094594116E0
EB9718C979A8B2C95DF751A861565EF6F1EF22E1DE92C7FE8AF0D1070B27D491
9792C03CA93AFC986C34C08358A2C9F035BEAAA6D87458CCF25F198AA55DBC4F
8AFB23093FCEFCB8A59AE9FB7ECD21F133B000DA6224A2584C66C319E8EDF5D6
7770223229186D86186C4086912C094E92AC55C518FC964BA4D7C1B2522A37B1
4D7743D9730C9379DE55CEDC82C054F197226AA03919C281DFDAEB0518DFDABD
875702C05640ECADC2D0712B114BB44747C291F571D6E0ED8901F90F696E5471
69E7DC255D9507A6BD73C40A0386907A14A803569022E46D3E61F8C996A63AA3
D616B447B0D88B5331F3910C46BAEABE84B14ECB5C44029F31424206734017D9
AFF25624CCB6531AEC9E3572FC29CC7319733165F557231C07281BCFF79F658B
C473FC262EE2FDEAD12F17120D57D53E36D8081D645083CB8C992985DB99D9BD
2C6B437AACEB544E53701C7819926D034CEB66639B4FD9F89F2B2158B7FF166C
507B49AAF6FA4A71C74683F2BDC01FB21204776A715DE0C28F61B1C5B1B6CDE7
CEF52EAF799DDC5C6C5A4AC9E21CE0ACF1C02A9B72F3C264E1E234989EC38FD6
372FD614B3A67B1451591E5274917A4D1A88597E05F600FD03CC515AFA76D3B8
5160322A1D24E8B2877B4D05F3AB9FE13C64C2287FF3E9D5D12E3C84998324FE
2647C4AC2955B7719019C977EC66869BDA839D21517C777FE5B14C75337CF1EE
64CA7541750A561E1B5BBA0DDA3F3F7061C15460E3C1BC8E20988FBC40BC2EEE
4B3CEC9D872E3D11E1EDEC05A8C7D87D28E28DC9FC7FA6F55790E477C71A2F7C
AA6DF3E02D22CDDC8EB5BAABDED1E6453952696AA1F098E9DD27E4F23DBFE988
73A20BC3423FD37E586D41CC4BB36198BAB18372CCB176E56421A3B1386C8878
EBDFF132070DF8A4E24780DC0E6C14A9B524F6026F3551AB2242E0BA2FA4BC0C
1C8353C87DAD55FC6BCF596A5CD4FD1071EBD5C999572D230407FAF68C8D9CB9
CEB47BC8DC7B5B91416861A6D85F356EA2E3DD89CE4DE07FB0D8302BFE64E2B5
9878B93BF478ED2A59D9EE46F33362634F9758827B199FD07DBC627BCB5D3684
9122443B06C8391D3EB6485B96819C8F18C05004B25B3433DB6921D7696DB969
049031B0CE1325A3AC5C7AD5348F07AFB5F7A27C2B8D494E4EA141C48A9EB480
EB559729BAFB508171FD33CD22FA7701F98BEE8AEB703BC7366ABEDC1825750D
BF07753E280C98E1DA4AFDD55B036800A98B5344E2979E49AD29281A239DA6FA
0A9507BC0ABED19F4F1A4D0EB4FB1D2D703791DBC8FA365BD0F593DF24CA8DF3
369E5A7B6014F9498AE848C5C03733DF08E018AB315164EE668F9B6380CAE5E7
5DF3B8B749E7052BFF9D02D625FD711EC7925B7D350B4BE346E565F3EC43199B
C6DFD09C61B0E0B1200150409F711CB397EC8C5425C61F6B0A9E739EE3BA3737
9887434F5384C56AA2A49D11A355B31B2C61C6E96F276FC34D2809D0D8DF0356
D99ED3DE4146948E9A9A7276C249E31F1DB40DF9EBE155667B74F65AC6F1CF4B
28799093DD8F65BA55CF0B996B1649EC7C86F94CE7152535E781B50D4E0AD737
7674DBCD9FAA2B9F22B1A783A8EF2AC87D34B6407522AB33411ECA4A615A3624
87180E36AC1835CD7AE41CDE8EB6DDF2C22551DCCE21E04A7AB5C20F2CF2A498
51F0905F07ACFD7E7CF8A478142AC751441CDAB0F96FFBFF9461ADD964410346
B5A6B6E1AF4FB0AB0CE7F517E28F67D1FC7629642841BBE0575CF97D126E1669
A54A08243D46A59ACBF66CFCEC0120835CF0A83D7BC91AD4E67CCE7B5DCCEE39
9A8E797D2BA1DBDDC0F652876682B811602EEC293175F1AEC94258EA016A5866
10F633947FFAA9702E5BE4E95B61D05D1091E45AB0CCE4EA77B08DD920920702
B39ED47EE535D316ED13DF03C99757CAA452FAE46DCDAF8DDD0C1081DE16433B
664AD0FBCD335C4F7DAF9A7AC45E0C4486655EC6E370B94F19A54C3ADAF77BFC
22A20734717E17FF4B7D48BAF74C510DA89C334B801270FD3F8E0CBB522BB3CA
2A986A3005BBCB68F9AE872E75C24EF24DBA31AA5F2A0A5156B81553747E436F
523BE782F9D115B2D4045D010CABC53339E8CDF1F25699BE1E1B5713550ACC8E
C881CC3B151F66D87454AA8297D37C9413AE58FAE25377AE8B57EEF7822F73BE
DE55502FBCD314232E1AC6BD6A445891DAC9B74AA5E635A5CA6BA1F8573BE68A
B71BCA074D14EE99E5F4DDAF5064DBB2456D4F1429940C32AEEB4C834C5750A5
56CD45DF2BA75C1D5C05CB1E063881416840D7F587F7FE64461E4F67FB32B399
3C3F58493DBC1A163C629A8EB970F1032E9AF1B434DB7569480051406321573D
F17D3CF98B3DEBDA6FCF1602F35D0F54F815D0B0AD37CA58CE08B25D3630039C
F53E73FF5615DE7F95BFFC57FC99317BD5A2CE9D0D8A488206C66F5144216C58
30821669A14D0E5C608B6D51DFBB6D4256AF436031F392F59829F581D055AE0A
C8610DCDD5B85DF7DECBAA90FCAE54D2D61DADAD9626085E793AC4499413D286
85B2C623DBEE91A0B6590F41EB85D9307227DC49AFEA935834CCD59E8B086DEE
E05FAB02C74B111553B7DF4E8D1B94C452248AB80F7536EE6BB73630FF4BD6A7
31D196C55D16A632426F092ADD106803B05BFD44ED6F65137189F5F66088AA7E
57932A21D5CB1409C5CCE8C81B38C4579FB9533747265E6FE1A2233E7620AD1E
77F2C977A8F07A225A3EB1E85F4C7443F2EB5D57AABC46FFF81916DE099AE3EE
FDF92B385E8D3D95C2F910E1C5982A249D2E3601BA945A54557CA47E9C4A2C4A
6A06E43307C06F57CD06B6AD6D9872CD8F3E4508ACDFB0C7A3D9E1769DE41FFB
9A0B765D0A9229EA4F49FD2BB2898A76C3884F019F43FB08B2CB4C3B7FF1CAB0
E2A1A1FD299DAB3C68FC5460C197997C2A5E71C35AEF87369C8825DC9A879263
831179FB0EAFD39E8354865331AE62815B15D87B1E460AA731E818460504C0D9
8611023BB75C52FDBDF3CE5F238E669B6462B26FA26E4D05AE962133C1BD7AF6
941F357F0C519F68E411E47AB9E26F077E8D75E9B807BD939F26D8A976963A3D
5E45EF0EEC7E30D55FB158379F050657279914C299AD794D5854E704D7C5ADFF
2451ACA5E61AF98A6BFB8E5491337002F2D41BEB7EE550391FDE4FC52B3979D5
63FF3C37E3D892B3367D749563B4CEF52D7E2A78D58D74F0219D95DBF72C04DE
FD778B82B6BACCD1CD816711DA51F2FC4DB27D4AE0F0D83C4763F30B98300462
095322BFA459D0E14DC8374F5B36C54B5276CB0813C2D9EEFDAD250FEE72CA3E
762DAED2DC2BF81CE814C2B3C16B463727A8AE10C461FE4B4BDBB6334233C58E
0E68876A6D2048DB062B674857C6213212E127B968C9D09176613CDBBF70DD34
92B4E0B9F011D5E30A63243E9F7DBEA3EB60807A733EAD7918D10D51089C252D
9F73189A91348B199D709E3130C7841C5FBC3BDD2D2A29A63D7A00A50E03B942
2C320E6C74A58A3E99FE80DC5AF49B6EBC8C1FE5BBDB09F2EDA6AC59A97F9D79
D52FC27BAD691507A8EB23B90F5D9DE399878512ED534AC660F306ACF9EA05D5
5D6B03F2D231CBBD6491B73CC0A83031331A045A4349F7CC8960E36342055095
2E53E9B9A49E49A227DD88E6FA890A6AD232010F6459CE9C803782F54926F385
7DBDB8A175690F69173A3CB75A7DDC2195E711948625BFA33BE0C1EC22CDF1F2
56FC60B6D5FA389D552E8150B3E35ADB4E402FBABCD3CEEAF5BF911B9E9848AD
547D7E516D1D03E86C42763D0C69CB9443C9375FB2BD4E613A3B9215606391F4
9A35EC2DECEC5E426C1ACCF99E9AFB76D70FB069407A217BA8DC39D3A99D3A03
D55B68F769EC372472C532C25435FC8F2C41CA00B6797E8F4321C7FFAB502251
ACA84373B697CF8136AA6AFE24B67ED9FD13987E816DAB1C181A551912A89D32
739DF1D3BF7CD7DF18EBF95BCBA9319B99CD3AE3810C3DA334C72730DAE88223
1C1BBFCF202491DC4D90AAB01644CE294EAEBDFA8174727EC5F07187420BC413
805657CB44C3ED70746F3F4D502ACA2BF94D8F8121D22166AA53C8EB87B02358
57ED5C194C6A5D725CA87E9FCDE1A85E64BB8DE076103C8B6E79436DD959A0A8
BF835AB2751680FC71B6914293C605478A18D6807A493B0443196AC5F5DDB3BA
B7C5CFC3F42005AA36580A835EEC63B2989DD38E3B9B2D9FBAC1DF0A7915C33C
E44FA189B5A4FC9D30D36AFC658CD0F346EE8655A6A770C82285047C59B8A6F4
5B36A8FE8BA98A706E2A30A8D04F8F9869AE0635F14888FE5FFB5755AE7E1DC4
2399BE9FAF8DE843C8C20FA440257A2BBAC4C24A93ACB7DFDCE534024298E242
901F76C89D60981A21E69B023B8D2D0F3ACCE5BAFC98C981ED5B420D9C6D3921
996267C3153D7380AB18D0FF0DC9DACA5D24C53C736F076955ACC0C1397A5AF6
E49D7AE07CB8CCBAFFBF71981CC0EC76A90D6146E82A774C548786F93708279C
8E776BEEE7130099136579F9E11A3EC598DD81E2815DFEF5319BC9ED400609BF
D815B8E5E658769C34E38BF2B1C30FE077E04140B673A7892D808E40AFAB3C18
C858C89EA5F5C6FFC8573049701ACE4F6E8D02D1B86F6FB8429E2CEF1DE6CDCC
FB2F3A34AD00EA828769273159D4123E00A6BBC1B19C14DCD688554EFA8D7F2F
C0737E4E6A6C452DDD51C01F557AEE2629FE2439769D67DE3D2ABA1C94A57551
B492A576349990A41BBCE81CB1DF7E1A0593E3C5B851ED2D6B49398B5DB84F99
3E31DC6E581EAFAD9CCC0B5A7496D8E8D7A3D06E5E47C0E5A16F2B65D69F2B03
A7AB5354A6F163C2ACBAC77070A817E57691C823830C16EDCB928632BCCEA4A9
39254AC4D6D48DB3F9E024C025BE663766C52E4AC9654558F2C1D9BB3880FE79
7F54FC5A6B15321A1CE74E8B8C9E1250CC5A3B60478C7CD7C2D18483F808522B
EC53261F60A0521ED61584D9DA998FF7BABD8FCA1EBF62F78320027E0EF19ABC
542D9F6E99F521A7D7264D71859FA072F0E306A5CF8AC4A5C39106DA212FD106
1326E981098D167951955FEC86B2C49893EA292A3FE23891D2EF6FD313AF6073
DC092D836FD26DBF8A27C35BABDF7A2427B2C9EFD2D705FFC590FA7F559AB7CC
938D040C688D92C8A7CDF47CE12489E9C5A6BAB3566A526839B597386E852EEC
BE1E315834B8155666E23FD0CCDD99E7738567501A902119B33727449024556F
E62AA6BE7ABC199BFE58FAE69360F3A9754A0F82722DE5E3DFA4D7788C7381F2
E40857A3E7DA9A540899392989819229A6636398F563A4197C855B116F0EEB88
73C7B108688B1B872A7133876390A8E6FCEB061AF83A76BF28CBF36F2B882D6B
EC2DA38BD73CAF541F496B0FF6391017D781703CD0DE3876FE8B798B292C045A
EB570153B1B5B90908AD0DC6E3595D116E478D25A9B4D2D1A48D45A42FC8E52E
2C049A42A9F1E6A3512C0854EAB18A0ECB0B8656BFF31269236714289AEFFD81
A5356326E68A0DE032593651C1AB10238AD07D5F80D968E982B9AE075169383B
AB12EC555031471ADEE8F366065ADBD670BFA1084518BFD7F6B29530E4FCBF23
A94B368AF778CA9FA66C7AE8B7BDCB36699ECFA64CC6EFBB742FDC008572938C
9E6A202F28EED6A36D30F93D94F884948BD1DEECE628FCA399E6E2AAC8FD2594
4BF6B17546BAC8DC51F8C28D676727C1AEB519DEAD1FCFCB2CADB6C7954A8979
A66A5D5DD6C338BF9ADD21266ED927DD42E9E57078F53FAD8212E5C9045226B2
FC14E6F283420C490074510640F4B9802EFD20182581991D6DE4178EBE84F799
52BEBE022DB5904F1F86D2E6C526938D2B141895B681C835925115EBE51483C5
7BB1B4990A0A813ED97D66B90D3770000871384DB274D78EC990DAAED3313751
41633300549D0DE472A72DF0579C8660394939C321A97D4644D6A8119FBFA614
A20ADEE43DFC3C6C5837DE05C1183C636CA8390EFF5C5F9558CE53950879B2CF
A0EFEDB6AADFA4F94DC996F37691744DB4E1A32C8D45CF80052F080A17FAF452
151CBE11A8BF3E780DB814804AA4DA5DFF9D85238CBDE29B7544C466FC8BA44E
B93E38C791AC54C9874F1E121AF08ED18036DA7E2AD741E16C60951CE771C000
FAB997C8699AA219CB578D538390567ADA087210CE220862D385C4A97750300F
7E066699E67D39C2B6F8FEECB7E6729D831A861DD6902315A55F57EAEB261E69
6CD413485DF93CADCED318B5FA421ABAA3EC108B439C71C6BE51A9C94D9CF8F0
8C6EAF9955C9F9A70A7F40E6350594AF318C9157FB09C1BE6A726875599733A5
DBC134995A4B13980AB29430CB3BD4EEAA7A31E1237AE045059333872BEF179E
A2E5A27BEC03B18099B079E67885CB7E043688F84C37176A26B4AB6B781A5CE1
4DF078883433BEC33950C3A7523E8CCFFA874D099EEDD337A4BC7F20F4B8542F
B29BE944DCC5E16187AE9FD010FD729E91E7F73B82404B3F03E898D3E26D3151
1F85D2D282778E4FBCB4F06CF415B773153D969F0EB1B07945D20A2617CA50C6
D3AE3C2D32F0650D1568B3413EED53D056CC31F406E17D1FBF6B857A61AD58E4
D454382FEF82E70CA7A427261D9E501F20D942DEE86D2179B89AE7A02615F07E
5C4A69E5C7CCFE81279D9A09D9D96B2E1785EFC7B2E8A88C8E7926F6D8AD9590
4E4082A7C2C0C005CE38BD1FA735FAC4C27D07903E7AED3336B20E1C1C0A6513
BE81860FFF02B3DA916D52C709E762FEF15562B57B6E8A713DD15F1446CC3F74
941AA2A9C3FE46EFD3FD7CDA51A2EB56D7D66475404E2A89685A51E8AD502F92
2C04AF01E8E39C158534B9DFCE2CBE76CD83D894219AC8A0AD652930725BB8D9
5D0F8E9AD3DC931AC76A9E0906729C8698D18328B3F35A185E8361D2CD5F7C01
9BC126E1C26879D91DADEAA25F850083BE6CC26AE7437664AFF652A44D35C0F6
1076183D794D01A34D320F4CF74C0728C95163ABC5C2A0E28C937721D0462325
88CD792EF61E3DEFA7A9600FFA9D53E8964F003C7B8C07927628A3DD5C0E334E
B6A76C984351CB372A705CA6B2BCCC3265C7C8CA12924290E539A26E8143D00B
08BC9C82413B15939AA62794F2012DEE9A00F8F8EECBC8E47355FA9CE1F786D7
2DEBEB61EB4738BCA0E82AAAE0C71791F8E112853F74C475451EBD128D0BDE68
372093EED1995466E935B40F3FEE29A60F2224144FD770CE5F46E71D872D4401
E539FD679AECE7BA8C2E4024678060B3F9144E8A069B2F864B215932FBD95ECE
B5BB1CE96404AFAE9B62DC239A5F3D16C3A25CF8078BE4D0E01724E4617B7EDA
98A8ED28F7EB1752C7DC1B76B94669B55BF786FCE5686F6ADA07160EBBA65D76
D905B57379F9EE2FB8BB8F0DB3307BE5B483D0F270FB3AD8E3060DA7E90E6595
5A2A99F72429B9D2ABE438E7369AB9C273DA703DD06D9A3E1D2822A158B7DA57
BC70737F572FD7769777DB65861786CF539733D73F95A961DEADF6E1525FBDD5
7D43F3B1771EFA1F0D1B4E7114998398FEB89FDF2C8B0716B03CBE218909F20C
EC344D217432E9C76E6B590845648531D696EE4517EDEA32CE49FC76E715BBFB
44B21491114B877E71A24687F91C173784900699E6CA7B672D208B1FD63B0029
7AD67C7AE0FEB46F01012CC94E2FCE55D9435E0987A2C7C5E2406258E57CA9A4
7234B3B131F6A8D8FEAE1DC36C2CBCE073D5A55E8D8D4D535DB1498D3E49A952
EF6D2B726DB3610AF90C7AB7DB44695F995B9644658C972B07CCF5CACA205389
FED22BCE9B411AC6D212879DCBE632EFE96A2D513DD85ABFE8709A122CB66B7C
AAC4560447BABC83BAD004BB7FF1573C2FB940507E8A35590CEA6A16E993261B
6B73BC61EC9CC7B9F5F32B0F38D0E173DA613908C205F5A3D258C77C98ED17D5
83ABB02B6AB173585B336972C4BC61D8D6754F1B660A979C72EA79AE70C001DF
32ECDFF02FFB141C9777BADFFC5EC4BB5E507C9FD85B65CC1B53B2921BC4B683
7321D2A95F2E06AC34A1963C88484F6200033392BBDB3D0F495F98F9749939BA
747C43B4682F868B604FB505DD5B69D51496275B09EA380514F643E9211E2EFF
6BE827F82828733A0F99BDFAE9513B5F792FB81CC1AF5820275105B00A3A32B1
43F4048A7CB7563B329488E77984A5977CC7048305C64CE5F06A1EEDBE9566BE
C4255AE812DD5C9C7557ABE085540EAAF4F4DB04F83BAEB7EED665A53747525E
ED424C80CC79FE5120FF314944E24D3C350912CBF14A1982227A3265672347F2
C3EA58AA3DEC816E51771D1D1D0F7E975FDE23C14F1AEB6E07A93C059F1BEC0D
284BE228C2694DD8F94EC18BD3113A8334ABADD3A031FB742952BBF4B96C9646
983D54801F850007FDB156CAFC3E2EC28CD08A225343639CDB2FF3B1DC5F217D
7AA7EDC91665E3FFD09C78FF7E1AD0AC08AE31AA96B461E6CF8995F2B11D883C
05C33676450D53397911769CD7104068E4D6F1214003D3BEEA07464186E202F0
5FC6B6FC948E2ECB6C39637DB969606D9AAB850AB1CFD7800F9CB6494528B30B
3035249C31E897914820409F3D325AB5347E8F983C067F032E611215F218B1A2
D478812F717444C8E2C33EA2B27F17185FF2C992D480DE35CD92A259F3A11F36
EF005402F65ACBE9762D0332C44149C9BECFA0FD7E71A8EE584591A7731288D1
07FF394F48DEFFFADD6D66992033CE7285ECCB9C80B875B20A205A6DB189E5D1
3655FE7DBA22F71106DC08C032CD8ABAC08C90C7C359218F5268C9A28F4B92DA
1E51C0C8B947175219DC294964D501CAA5B86005C3250F5205F9E44D43DBC6D9
B820F706BFB74203522738C1FF8BFC240BAEC20AD4AA28D3908CE557B062B7F6
3E6847F014B596197FA5005AC0C479BDC0360098EDC10A65DE8E643ACF13F8A0
D06F8EB09A7CEB8A7968830E83FB547001EB2D7FE5238DCEEDEED11B3ECD3C32
7E268779960C5EEE44F33A75C620A66C3F83BEBB427E01E60CCE30B0F2B691E3
A8C1DD510CAAB5BE2E38F0E3F04B960FD7C1D94406D95EBFE9BF73CE927EDEC9
45F6C75720AD830AFF30A7DA01408DAEC736E0F1FE3AD29BECA3A56C5DF43CEE
8A1E2906B812BA04D3F87738BDCD0AFF3BDCFA7AF440418ABF6160CE40648080
0F65766AE67FE603F3DE0BC531C56D0A11BE0C3F9CF0F3B9E559727DD5308332
B7A222C180AABC0CC18E3C64077DED2B0955BE05A4980402AC6AC801FB5A1024
2A385F11A649666BF12D8018667F9EFDC84E2A4AF3DC3C9B205C037F99D4DA0D
FB60FCCBB67AB3D3AF179F0047D9C7E6B148213696C725D1A5DB3E5BCCE4861A
492EB727CA1870F9437E8F8A67117694133A3248571E032FA87046115B708301
A94D880674B8B6AAE0E2B20B78F4DE13882DF23070BEE4B20DE3B7571B13D28E
585CA248924D07EC9FA4A91942FD34CFD10605622A34376635651F6868638DCA
19B45F04183841B3B78E834BC6BFA8558B586FCB45C768D9C2F3B2EAFE5372E5
B470E7BB36EB9005DAD3B4D3ED15A64C308B254D75FC3952F977F27ED9750724
2610C719BB383A6777EEE66C4DCC7FCCC2FA1A31AEB6DDDC59955259F2410325
03DC63F37CCA01EA3B2C643D87E208402B5995C26A6B71190C98FED571D4F1E1
9D252F5C646CC2D570EF246B0FBEAF5F65A9060ECB459A3F6C02A077D4850939
F3BA8AA5ABC5414286BF794EA774CAD2ECA4581BD58ADB6AB154DAE7913819D8
4E223D306718D250574E4602EC0964E1E28AF788E1EA63DE4D8AAC6484D208FA
185432C09B97FD98059998E21517EA9DD8A7757BA31CA0D97D8FA881C188C051
CD59C39D77191124E694352684D49061E9685FE4EEBBE0B8905961E7C6928B4A
4802EE340B1BE67048A14C679009103DE0E095F7129DC64B4012AC9CE863CE8B
756F68783C493794BF12502E04FC52064E63D005F2034E51E7E2D619D2EA74D6
613E87DEE38A2A9504D47D4E0F77546B5C50B6B6FC28EF779D415AE74D7ACE96
E533B450379A0901A6F0173EF1350FBB3DC13C121FCAE4439A1D6341B6495E38
15DFD9DFA8EE78008AA871B8CF75AD0DA8FE9C6230E98CC43B221A2754FAD478
25716459D5A937AE6F95F07049126991944553FCD4BA4345ADF440A83AAE1B33
56E24E01E4993457C484414283FC7AE67D07BFD4AD7D7C4574F0F05157100645
386569D9DEE8754EBA551B635693EC4FEEA9CDAAFE3EBADFEE4DF997633E5348
0A1DD992F8753156C33275315B1E72940532E3CA8507FB8B2E40176CAA167BFA
9E4CB3CE739A49A9D74F9D1861701330BDDFAFD27502938BB52579BA7FCDD8E4
C84E7ED5A49B8924F425E6A6C2A881E4A568FBBAAA0A263CF1414BEAAC5E66A9
E9151A5D134D52CEAF1C1E1EEDEC0FE15878D53394C0C7D5771B0E9E6859B0E6
5795CA03593388E8E516647BA8DE567D174EC90945404C5FE84C09F6354B95D1
BD84934D7CF51227EB120E320A2B1D6280623B6CB8ABA8D9B716C021A65FF920
CCEF8C91338BDDE0C6C1670C8E1A30BF278A959256964FC491B3723C8B3FC88B
C2E1A043811D01AB475AD8FF6F8B61A9BB2FEFA8AF51BF06EA53C4CA7EA1C1D0
DF8B24B99320F9970FF6310EBD4306E2D9D1D13E303C932EDEC2896B443EAE82
933275F55ED104E4DD2E230588C9F6049B4529A4237585B0141BC0FCD9A2746B
19F15A0FE7CBD8AA679B3A124243905A91835AB80777B490FD8A94C7CE6FA735
C0C77016B5A8CFCF7219292DDE6601D2C1950C8165E7062E38710088839CE8FC
AA7FD9F6C1F42926655616602A2144400E06E5FDEFABC0A23823257FCB0D067F
058809C206D19C54BC03C10FA55CD0D661169923CEB18025FF4554899EF60A69
BA10A8E422573B8E995CD0527C4C7CF4312021367191542E945D9F6DBA0A001E
4C647E2F6ED22B5745CDBF73203755E93347B4F8CB85EB85B1FE1D7C558D596C
7D0097FA31399A798784B238AE514B57CBEE38C5A6038B4A69ABA6974EA18C45
D531472249C8FDCE5D2CF3A342C8C3E0EC784088C0757D7B51A9DB721193CA8D
8B9795BAC734FF4092C680B17704188BDFDA900480BD94BC36414F32631B1BBB
9D78AD64796E553B935E22B2E16AB55355C356386A61F46E2885C6E90DC3C400
1086EBF582612509F65B214C7582B28117DF3607518320EB7014AC53C3564375
9B695877B03781F64847B36970A65AA798B36A639CE4CEE3511B7633F41B4074
350D4AEBB699ADD32B4688C2AA21BE4F05093DB8CAC4BF995DABEE0776B1A98F
C2D040C14DD87114A9B084D73B859FC57905F16D765BD449CAB4455252955542
B51D768BDEDA95AD49D2958D1F43A3CCE7B7B9DB269FBAD4A6AC16F228285B62
7BE31FE6BEC3F374AE853CB3E51D958C01324D0C32785858538FB9F9CD37A011
B2FD46ED867DA9C6B3EC90D6BA20400793586F12EA083968F1F7D2599B090D97
0F168ED050719CC8FE1AD63A6B47473C0CD532A1A01C73B0C7D5DCF949A87499
B73F7464D4753A931935CECC44B91442388A353698284126FA8465C07EA83B0B
A4E2F255D11921D4D5DA56C4207E3E80E52B949B4A55446682CF26EEB7E39768
49F3D58E12728A64E1981BBAA8D268F5AAABF3E48C1DDF045E80CFE0284337B7
3110A66FA65A1084DC7B4B8770D3E62C7EEA9759D337AC975EDD8B0F02A96489
3A4F7E03F223341B32493944F503730C0EC97512273B170A2C11A6B1E384F8F5
757D713807696DE95B93C6DEA4EA234379678830CA6BED68B31E453C6BB32014
155487DC6593FAEB17693BDA57E6CC049CAF45E61E4A161707A7393AF96F6BCC
129B63BCE94F7D81B986E3FBE214B2272854B27DA29AEA44A0C27A822E5146B3
0CED1416BE7F3E83E7247ACEE7428A23D08D4A38F14390FDD95DEF8B2D573E0C
58CC4EB3BF986CA5290DE27BB8E13320F24C4ED5FAB10C2AA893EF9BE6B85062
1068BC3A5C531824D4CA93BEAF1D808D05827D992EDA8A765765DCE082162D13
926D3FBE136A04BC4FCA63B1271C7A683B9BC28711ABCCCB06EB5A36E90C1F95
286B0C5DB94FD0A0A2A6935CE12185CB355AAED83ED30E2ED1D231A21B0FDE5E
21CFCCAAB385F35027E9F3044CD8B0B262871C8E873523346BD5A991D00BAEE2
F2A82E2D45D45B946D4F889B7C6C2CE48910D180B1010FCBEBE439C6B31A3FAB
8180741199C8C2D407CA4D0D86FE2D5A4AAD75C15DFC6F2D562BE265C071B799
3D5E8B787F69329884449842FE797BA0061F5EEBCF814CFF20697E1B67BFBF36
289A4953B52F54E1974AFF0ED85AFF0B5A4D3C2D1D94B53399FCDB093C7AF63C
632FF2ED52027089972BEB0644E52D859C3CE68740387F1D4C2912B3FE793C6B
C40C82F3A7EBD9524CB52460250F2E2080660A26B4A346117DE5CEE30B37CD39
52C2AE0E9177DB0B86627B9DE43A7CAC25E8A1DF1B9DB1D14DE9BB73AF0AE804
10C4FBC3A45FBE3BA444150873188AF63CA5B2E96A88F4F9A2F5A5D4E544B79D
21567D0E46716D81039491DB446916FA5F10B5FF1AE0C063C682BA7058FF2B51
6EE6A1F62AD788D7A56D82E64BA868E3977C4C730F2A37988D9D03CA305BED5E
3FA04BEA1C104EB424AC335873F8D9BA33DF24ADC82DC7000F6E9FE6FD2CF22E
0BAFA1E742D52CFFC95ECE9C3855E8B9ADB500692F22E3E2D1E3FA8157A187DA
9AC1C187C6BF26E9F42099F4D9EFF9A3A927C82091058E7AB0598BF3F458A9D0
B5764CAB139B9843378FCDB5C599FEB9014C9556068ABB555A8366BFEDA89226
7586D1EDE70B99AF43A88DAF62AB08E5B52A4CDFE95D7169145E31B61315FB18
669AC7BC2C62FCED15163D84CBFC9D12DBA2BEA04B1D112FF1E41C94D9928885
FADD5A7E59CB42872E6AA782BE47CF33E14215CA250B7C6831098E4B33D799C4
674690ADC59CDF14E9B0561DB71CA21B92EBAC86F461A1584FB7E21EADDB5545
77250FE17176C2D0AC3BA4F26640B370C526C1B4BE73DFD6CCBAF383B709AF7B
878C0592C934FF2AC5B65943ECE21D9AE53BE7022EA723A3FFE140672C644575
6E4E43CA8AA6C934ED4FB606AA3C1C5EB2A498E60E6181072C225F45772B57DE
ACD455B95F1552775EC500FFB1FDA7E300EDE04F529A7803B0819CB3E3117448
40CC0FDC0EBD5EF675876E92ACFBEC010A47F07E81764507E20FFDBF8DB53DFB
4077401732CBF5E0FD5AE08E56576D21487E316CC50234F3B2B8E613AF506C45
5171F0AFA8B8B6F9A5E9192D263DC3B3A2D7ABF9D17215D5F4C88D9F3A96CFC7
AC53F96CEF8D12EF9DB6CC4E140B04A635B81D03872E489426CA3A0D44585E55
AF2B0A074B93B375C7CFB2DE0003FE37BA0CFEE3D601E251B167249FDD478E51
D8ED662EA411271DF3D3F06A2A4B02963971DF8F5CA6616C2B8CC71EBAE8F6D2
C8C6562617F9A50E224F50A0E9F15BC58735B72F30CF74EF2DDE26F6A94321C8
CEA614A5A206295152CE0A04DCDBF5604049D39F50717E4670442DBC451B029E
D37E21410F1F02B0657C79A4D8CB345C1ACB7D27F399FA44E98135EEA09AA07A
CA64211CA0C9C3F78FCB1120B435A608BE8E7586EA27EEC1862F7B019C7E3165
EB3BE7A22843BEC6DFD54476DD446BEA201F714664CE83D20AD69E65CC8DE166
3913EF14B6DEA21DA0F2B58A06B4B3FA094FD7F91939DD2FF42B632B20B48C6F
CD4EAEFD6806409E505E995BFB79DB26D1287C947EDEC47841C0666CDE154DE0
449E6AAE79500C42B4EFE4936D0D000FB33E1A94CB610172E77BAFCFBDBD4853
EA3C9C325276DFCA190CFC312C9DA5A7D201FD7B66FBD68C0EBD6AE0EF701642
5B7DE70AD254650B4C4549A5B3ABF40B30A241B262FD613B7E0EB047051BE634
D62F6F164085EB045535E44A65C4452A0C4996F7292D36D4B6BDD139C69E0B20
48B609DFC7067EDFC2807B3CE00CC05F6CA1D87A1C83530D8C7A3C0A3B7785D0
0C79714D6FED70645D2D05E49BB9FE10272A225C03F528601788EEBDAD19B563
92AA3BFD2002352E4FC227EDADB51EC95DF86A936B56B9F20F8B85892BFCD003
CA4D71AF1E5FA60A3ABBA1BBB087E0D0826C094AF97F6CFE4FDC1FE2C0DF357C
0FDB5E55243E089A8355060D91B2E0D2B8482F65E2418038EBD09ABCAE0CEDC2
F11536B2C6F39B0DA7E08AACF7DE9B1068A4AC9924F5FB36EFEA483004AE42C2
782F919DC41B93A262E824E5DDBE10E438D292F8AFCEBECDAB3F113FCCCA9588
C7FB72643EAB8F6D8AEAD1DB0BCFDE69211DA05FF14547300FFAB1FD39409175
426FF7738D7B70BABC5FFD5F430DA7E226941D3C4B6C268CD030A90658C205CD
8FFD81E90B308AEE331BB80C718066D0ED0CC41840BB06BDABFEC5505EF8D408
57965D6AA86C48FB14845A3706145B75FB9FD04539EEF80654CC30D2D528CAFC
E7E6EB689A0CDBC7AA97B87A03BF1C3904DF76AE4FD2B60CAEE9F6D2C79B2868
A4937DBCAA38194DA43DFC153C2A0EFC52B03A84C3615E7B4952C8A8765B8F9A
CFB9A16A4993BE41A68148A5E603B14647A4E3530340F8347DB6277982BCA979
CEE6F9C59B11F7C6B36332A98009CAE553A3E77EF314E057CED5FF05BD984530
DA991D337AA20019DA5EAD35E704364304BB63A9EA095B5816ECA43567C82828
3F871AB99E20CB160B6BC81ED4696D66169BDC648AAD7EE82FEB500C2C5AF142
7197EE6637F539123745CA897538A7CFB6D6CBAFB766754C0E8934F9AB738930
EB72131379202D3AB929B32AEC0947D1ECB82B90FB04F17014BDAAE58386D7A6
D4D54B096463E1F3B65E79B96935CB39CF030BDCB1659C7C1D44621DB50A62E7
E30805C4B4D7E4F2E5E68C182D61874A27CB57F21DE17952AF1DF1652C730B3C
1CA9A3A1EA406D3451E584369A7FCF5D2513062E484F62A4C9CFDB6C84A32807
C05456F3A6D7854FA4673EECC3EC190C827086DCCDDFCF39041310CE3E0A8FEB
ECF03682EB0830BFFD8E91EE654ADAF5DE725EBF10D02D7EBBD5193878AF0D3E
E755BD5958FD3632E67034A4183808F0DEF28B5FC78F9B2611860A746BFFA508
C90FF036C3F982D11E19435D4F73E7BD36AA5E7976771BC06FD676E49A6FDD84
471D287F1C038307120FF35E760AD363F6F09B66DCEEA83512FC0569AE367F91
BB614DA8C5DE3657D1585AEE577CA0335488C8DA970E78B889E14305A2054C60
D31E5471662B3C634FFDCD8F980162FD04BBF54EFDC5C30AA86B5BABEF23430F
28DB530F7EE522ED2810C5CB192A2BF79EE90459E00A2F7DBF72B2191F8A281E
6314A3698B35EA52710B82F265007F942A15246EA5F6A79C01F1D4CE9DE62D3D
5495B799C5ECCFD11E90A9667594CE5E8F29195464771F81956E0B03E3A4B929
56A4FB28DA55C14C8A44A66D99E6EA0B99690E7B818974CE8172F37A82058278
B09BFF9FEF74B02066AA5A0148B1C3DE07C7AFF39097AE400B8999F052AE0A8C
F6038EB3DB7BFD41F536716B5BA9F96F91476AE3DD52279FCECD3C4EB7C43CBD
9E2609787023B59F53FC50BAC5CF5771345D2F34A46C2DD760E55A38A3438240
D2F1D473CDB0D165FA35F69500C16AEFE3A6FB08B00FEAF1D31D9470ACE7BDEE
152D2A94C9E3F324BE1B44FDDD59827A252CB81C53CEB0D553E25AC6EAC01367
8CBB9CEAAA318B96629BAED8F9BFF7C22433634B804E051583F49A74CF39D368
16B01BA3CC4B2AFEF64B1CB095E96F9512A2419CB0026819740BF0387A7CD0F3
B55792C246E2E3A78173A545770A60DA0196DD4B0E8AEB23739AF92B579720B1
19FD2E9097599AAD4EE55393019EEE61EF4B3796F6F20F5477E9B7D3DC8EA36A
61BB73ADE9C9EABB2B748484F0658717BEFA13E77BF8C8B69281632E8E4D96FB
ADF4979657EA00D8373829BE897DEECBB7A09EED260C453D676BFB63735B05E0
FA606348288CB8E60588D4DA59A96C113F239B3FDDB442396970B2C343CA865D
7B7D68F5366491D1BB097D8FF4A71966D42DD988F48BDBDB847F7B5095BACD95
228E1F6EDD85621B96436240352B619023BF4100A37F8F188486B3F0391D2320
34020EB18E110795251CEBE01D7F81D61317763D0C226C1F541E5041DC019189
0203800FA9CFD36EB47CE4A1E97615002718C044731B6DB8007749D1B605F397
413DF96FD78DFDA711101DCE3F5B17D645EDBC0B373BF97CDA7DF637511B47B3
B6FDB110BF87F8ADA28B1791D942396545FB3B82895FAFC35A80F855645E134C
36B2FCCCD0B15ABD7CBCD7D4B885AB7F5DD10679FCA5F7EFF91D63A860FA6D5B
5C60AE68490AC4A06D84B64ABBE559BA633DF3C6D1F325A7AC6707F19EDEF6B3
AAF0225370156181E182A89FBD5199299407F5280FE5690CC4781512BEEB0ED5
F63317937B10342C15ADD49634114F90932FE559C757A92D105F0E30BBD698EE
B957611513DFE10903765CE3A205C3F29825874E552CD0F48B801CA49B9DD19C
A8F0EAD88DDC7F79531D2472947C8EFB607412BFBA4C35F75A99889CB9DCCD3F
C71123B4B50FC7823F423594C118A77A46279CF63F8BE5B9025A99FC04068603
86CAFC7444D00983DB3F5604110C9889357B3D3455382215FA03D042FECCBF38
162CFD5E33681FDC92A547A101B3B9AA763F56FFFFE97D7A2C74A5A1A7D41CE5
6ECB822BB5DEC06F78BB328D77D48DD48400E59BFAEB7FA19D8F510C86C302A3
817121EA677ACAFF8081B614157E35B519BCF359E1537EF69FE8D6F1161D0B60
36E7F654E1FC0D9A9A3FBA49EAA38A19EF69BD347BBAE7EDF985A31A59D1D3A0
11EA04EBF7DCE8488F77AFC2022271FE6205D65C1785F299C80FDAF145CAEA8B
ADD035545E909493D4E492FC69C0A7367B6446BDD7E13DFDA8DE677CCA20E139
58E163CE23B81FB6603744729D54F5D01EF3B25BB89F12DDD6CB59C69BB3A26D
768F6CC8413C7BA5B504E2F9C6C4BD03E7D068B2870106854A797CD20753F196
A10BBE29CC374C71F35547C656B59D33B6455E1BAE96326096BBA85C73F4CB9B
B8BA2FFBBCF55C35F06D66404A04930A73D7EAE72FB04C6D2B447132E598F3BE
214915FD55FCD13F5AFE1DBCE338A4006D52DA98AED8000C428D6BBE99009A25
EA3C05ED3F23674D6B55F28153AEAB5BE44EC6C7724A77234852938403FAA5AD
122CB4A90F479AEB32B0CEEAFB04800BAA0822F331CCCD4B7DA147ED836206E2
92BE53FA6FD40AE0D85F6BE66D65D738B0EE4DA090227E0736F704E817D4280F
3933510BBE449DC1472CEC54EACF54E2216549353094691D393BA36296E4A2FE
015D14E25C073D0D16E9D6F2834B42E49DEDC7ACB9E0574E1DA3778C5BAD737B
2A2BBDED9261524389E71CF05793397E53B02B22244FD5017BD8C2198D16044B
BA796678C9ED23D6194A5CE79416C7F7799456B6E5B9BF421E82415746B36393
8E88CA343CE0E423C12758D23E791F163DD2224EC5DE80A585619EC6160CEBC4
F8E80A54D110435B8D61DFBDBE592A170D460A1867F2DF1CA821C65995B9EFC1
14DA73DD33BDC9E45084CEF6A6126230B7B98A6E587413376DDA3ADFF15F1EEB
A36E8B8DC122B1432A6BA9A8A674CA2D5F3B05C06E09BD1943E95E4C4EF88B36
6E91576B6E3302912A64E6F21C48216AEEE4D31209BD7AD01EB17C5D14F59423
B0AD7AAEC5E396514611FF3E58422F77FEDF4EFFA15F8A55BDAD410D13310D33
2113ACDC8BE5129A3B47E860AAF117AF6409C9BCCEB3253519DA06B160886CCA
0C2CF25B708313C34586E529C7C99EBAA4BD6A933BBEACF6AA0DC991E1E74FE7
D7C9328425F99572DDADF8D7D531062358D0C4E5F9C7B68C529D474D4703C51F
CC2F27B9A7AFE30B6F236A3BCB744CEF08A998F91E8FB121DBE78F1AB49EFC0C
7BA115D3388CD46D3840F00793296A3F600D7D0532C354BBD1B8DA8863BF7708
1FDF1366F97E72C97BF84A06C0941E5CB9129A7618C77F6CED9F0A836A180EF4
59D1526AA352EF1C4688DAE073EEB636927885DF1D3AFF4BF6EE7B58B7C1C003
F982B905BD7D67725C83EF7119C2C4ABA9BF7969ED9F6FBD5F0709FEDD268E6E
66616013E48A1A95875E2A635098286CF43C281E619DC7FC5C6853D4C8884610
74186CFCAA433B9C6D4683C3B40719ACF949AA65343193F93D9411836059423F
B4A4A5AA0EFABDFBCEAFBC99B1A4A5B496DF2AA26099304F3171265EF1EE622F
4D0B4AD4AC692C309179E939E8E50F7BE4118ECC2CC40F691AE9748B4BCA5BB3
5197FD4421CDF6F1ABD2777F1CB4DC94E627BE2340F76A19247EF7BBDA7F5AD6
66CBA8F8C56E27E2D10D7587802F6C66C3BC6E9DF45A22A24877E4A449930B1E
4289A675DFE39DF546A3BFF3244C90733BA17E403B37EA58CA80B40A1D1BDEB7
195537B087FB8D229802AF9EC0223A6A1E1F46C5CCF8866E16E9EAD9337FF31E
A794BC8B59C0DFE9BC3BA66933054518026CA3C35805BA4101E5B57F57AE8F72
831C12A52AAE64EB28B620A5EB34CC8E51496975B378B00586F8A890443897F4
79F5C27BAC92012DD4A250734A6FA75DBB849279484E894C01652893337C3A15
1A62DCC9E07F228AD470701B0D6560C44DC616FB2A23563D8E90450506739302
8184624F4D88B6C52420B8DBE5F8A7E7C646735B47D26D0CAB8B6BE9BB415E4E
385507F170B4DD4324A5E869EDFED7666402545B9F610C30876A6D47DEBD26DA
522BF30ABD1E551A9276EA210906DC669FA246ADD81969BB7B6E75FE0CCA1D5E
F9F69BBD6D5830C47EE92124F124742C1456D590D873DCC8B012180899CE429E
3FEDE10EEB0AA4E778FACD39FC3CFD65308CA443A4B2422CD80F79734FD40037
5FBDCFA9BC37EAE0452A32D99EC6250B2EE635842201231CA58B99CBD64DDCF3
F85C86F68CB548AC66A1F21DD103F59F2FD46687690F6E6C6DA14E3A1B45E8AE
CB82954502887B4732C2B78BA6F2EF86E2824686D085BBED345F7E6EB57D050F
BBA8BCC11AA4157F7CC11191D9DA18C621D859943D713227F4413C0DFAAD91E9
C3A38989BCA560579F6436CCCF2047E94188A4298D6A7ECA57A9254FE680E534
4B9035091A27E724B353170D46D4B234CA5AF1422EF54B25BD22A8165D453AEE
422EFF10547CC2E44F566E8880D1842F25AA01AE8644621FE81A4307B9643CFD
C0453801CAA30EAA178D11BE7F34711A204432DA217576D9871BB81B0022F426
132783984FBAD6600FB6C2EF0B13196D24F31C2921B15AD68CAD72846FB50683
13E89BA11B9CE561D8EB39DC6D4F4CA355ECB144B568E536EC77A07AE6D3FF1F
CB2FB7F9F4B2A47C512F51339FAD5776CBFE0107FBB38725EE7FF097F769C017
F16598B835A0B938814CB417734AD9D987DEA45368F5AF46A28E9113568A6E0F
58799C565C3BFB7FA176258BDE0149E21DFAAFB537D8D9F65F3AAC4DDE3191DF
D0C105CB6F68F6CECFCD939727C1116772991AB160B4CC2B83B6AA89F73B3049
07427C229E1232AFD576EBE8AE53D3AFDD861DAD3821A88374B76C7A4034CFEF
02809D428E5F30F7A99D8C65B8FF34647199222C590925DAA98A03177A2A2EC2
287D7DED5BDF95CD84B936C54042B14629C1B097408767B89E436A816CCD3D80
50E251CEDFA01A8BDE36275E76D3407C62A81FAFC655DB9C69B5850B905CD8B4
2F008E1E69DACBC2064B8017F4EB2E1E458010F9E338AF54166E27780D54AD11
6D5585B8AF1F080A993C3C74871E4B7BDB2602D07587A825AF1598F0BA5A8560
38C66F720952543DC7BD168458F0199F594839CE0339BF6BC57AE9364475D40A
38ED41622FE7E635744692A959C7B4919DEC77FA5012A3CB8EE8BCBD27C7EA54
BDFAFB92C64EC82EC805FC436052C4C179B8E5DF3744C86A1FE55F5369B12A05
851331961885AAE0DE91C1250C49E060D989B489D1BA5D33B1FDB8C9DA487754
695A4C00758EE3D1E1C28495B0064C2A1A19577FF24B2CB8D87BFCCC85B1F912
77DF1E391ED326A76E289B083AF3FF0BAF2E5929BB08D42023B94C5E0CFA7FF6
3CB15A4FAD891DB8A88E4538A6A0C4874E486F12F5C85850E3D3D80C06EFA0CB
9011DA9AF5763F0188E1FC62A506DDA4CD10F2F7D159C45B12286C4784122746
ED4917BC8493FA539B98E93F5B9CC9E1F7E663A8EF0C83A021B9E3E55B3AC109
27D31CDA30005B072FA69812F87529E2963CC8C53EC706BB9CA19FB9D8DDCEC8
F2FA13DD478E1615A64D058EF3E08F8CE6B3CBE86F468708DCDD1D93B590D562
5D72DDC4D3804350A1773DE1B28B4E19F9D4BEE759B9D21D7E2DDE51A0EA5DA3
5ACAE9E5407B0E55F97CDBEBCDBED653F730852BC51B7E7EC18FBE2FCE40E61D
8C1E2B3386C0C457A8311792FA02039185ECFC0196F0C0AD26B785032CBD8577
BF50F32FF47AFB561C634907E40FE21C7A3F293D5CD4D0E046BF8D61754CAA63
E58A8ACDDB883932EA88D02188C1F013004CCACF85389865FE3AB889F2AEC195
3FCBF9084A2590D8C818C846C4A8DE34529F16002728B43D08355F955009F2C7
C2E139F802FD7496000CFED0069C1F026C42E54A52348C491ACA179AF8E6BDF8
674D52F16E6CCCBB8FC94718E640BD6E6F0372038862AA2CA5BD37AC7F87B1FD
8620A503772EA76313278980D122F7FA8A3C7273E727728CC980A686F005516F
9A12655CF33138EE756FD26DCE08C105B9D57A5C9096B053D55FC34132484BC0
267AFF22EB2B0A4A0C00B823F886E7C40742F88BA79BDD709B987E61064605DD
8CEA3E6539175ABCC3B51BE9DF1E9B9EB951EB761BF3877D118700A6CDACF80A
7662D4F231FD282927B90F98BB0ADA73D9BA9F04B722EE0AA3F4B96182473558
68BD41CD7DBDB8BA63A8122AF15E8F56C37F2A06261B4D9E1F4238E5488EE627
9FF0A047F9E1F99A413546EDC2A7EFB7F8E02B5D8E36573A79CC5F7ED4B3294E
BD2932D731395F8B301E12334EF7268BCB75326B8F9469F2DEF33F946990982F
A311F56EF2414064BB80BB7A9D27495B2C167E0FDAF2DF39CB0FE9920C1C5183
00002FEF053DFE70422168FFEDA69B02048EE253D1EDC3709E0FEB58BF6D417F
DA26666FC96789C45E855F51ADBD3B0A868B60C4F9C45C403EF93DB5BD25F670
E54E973312F357AD00E9220496591FC2199768CE76428DD278A910E3983D5A16
B98AAA476863261207A155D6CF5442C5F7145C1F6826830AB46D3BDA691BFD8F
E84E96BC8A887909BC7DF5D5384D712764BBA8708425117AA7359A222D54288C
EA15B1266B018D224594BB3F90A8E70E7A6B97E57BD6CA5C62FD27C4A77D72C4
8339B66B37266B987FF7888698B4472C3CF3ADC3A1BF064EBEFBC6D83E4CE6AE
3B87C89D5FAB13BDAA7DADA07267F09C76A061148846DF61FC42FFA8DE211F40
DDD4561549B4E2397735BB74CABC542FD9B04F2BCAD203A12920D83247838D27
F42ADFC36E65C073F6A5B73E3A726A82CE2F0C0317596EEFFE498C6353DB1722
893A6014E3FA479A18A0106F860D47D9797A3F867850EDC897B23FC7B2DAFFCC
B67FFD4A81AE1D152F8E1E9AF124847005ED068B779E95C2F0D20BADDC144DCB
AAB1940987F2AD96B7C97C45778F8DF5EB3169BF1ED9EAE8C964312D26827076
BA6BC4C4713530BD589C1C954021099E0FACA20D8F48F5A066C1E3B32C8FDE30
4A2663D1A246F59A1F3664A9E91C935E04E93127CB3676C98C44A7393236091D
6D3A472F830AAE9B42BE3E269312EAB80CBE4D1130F13C31D9CAD071E7086B82
37C1862AE081F99C6CB421F4307E63FF06149C9877FAAA0D6E56A409C5E4E634
D53BF16EAA4E7D8795097AF4ABBED8C1A0AB01719FE74F9897EEE428E2511EEC
3B42A3A9125CA4E8E5D1247B65C25FFB72CB963A47DF87380178836AD57EE6DF
08DDC3F9BEE82E13410CCD17F99D67B660E01D4CDDFC2E9B49F1431EE903DA74
4C9B98D3732D3721AEE3ADED1C2528B5924F5370E9C13FC0462C5BA10C7CEED5
C145297FDE27532F6B145D4534813C9B3740FE2E9D8DAC55D52F45559F48CC82
A643A55CE9E25039CDA20A80379C36495F0119742E67D2B57CA9EB3A09BDC91E
DD60103A20D82CADE304636008F0C4F545E1145E4C8BBE2F7890A0C92D159672
6AD75D3AF57AC5DE0FF82A43D64F46119AC2292FDE6D6F5E8AB190BCDFC1D8A2
157E27C4BAFA1FE8C0A55CEDAD51CDF53575ADA6577E7023EF110AD64B2AD95F
B1BDCB0EE4A8E179D0F74CF5625294D4FA1381DE65F3FB7DC9081927A852601C
71E2428CAFD27EB32BC7ADC342B6A8CA2A6011332E458F4808906E202B4262BF
3AD5C7189222779410AF291A337159BECE7A7F200ACE2C319F765DB461042E6E
ADDD18737AA5CEA6BD18107C23622EA85234E1AD2B15BCEAF1A62EC2AF00A865
2043B85540E870497A2362B3B8A98BF46345DA7EA4E71FDD15918A64E00AE1D4
058680292E97BE26B581386B77F87B1943414F76FCD4A5F4E7F8E2C6B536DD6F
147E2C3140BB62F104B1D1056ADB6AF3073F3C1D526E5E6D1ED1E381872EFD60
E526B99F156924C85EFB9952D9D23E3B388BDC7AECC010620B38C5890CE31B89
AE704EC1B5112BBB74E0AF30387A5164EEB60A467F7DDB1E02DFE67592DCF038
ED3B30A3A4C465E38A44D1B58C9280EBE6CDDBA5161B65200122F536D92B5E7C
16E86E3C92225850535DA2F440CC27D3CFF14894FBB509AE3AB78B81D83E62C5
0FDFAAC83757142CD37CEF054D29B468B62A82D1B1913AC0DA7EC079AE071F16
F9A336647CED147C568DBC80E9E11B4F46C61AB08460C43E051CA78C0F26006D
A05AD6B3CF17C75D2FC946CB97ED4D5D68E2B50EB844F68C8D8E8D8128524FAC
F69F864BD2F122CB3B2719735A6CFEBE972CB43DC2B4B766694CDB301FE54038
E3D93395747B8F3D22960CAD94FC307B2378933750DF06A4B3411E64ED4E2F9E
872C3145F52B144983EC724B4CDE50FF33BE0525877F28C53404570CAD0BA636
A4A94643C1C7CAEF041159EC96945B535B1F8768FB56B3F2003BBA0F12D5F341
93A76AEFC8AB7F63ABA63ACFCF10CE887EDA2181D005AC23FB55D6402C6FE20E
84108DCB95BD6A7DD31C9D8C3A63B60A44AD9EB3EFF55C8367ECAB0E010F20A6
0191962EAD3EC3F28ABD85F6A70AAEEAE52BA2D00E2F09EF9917F0414CD61AB6
2C555C980857CE7BC6945828AB06D721B0BBC46FCCFC4AE4CA5ABA16180DFFD6
84AA8C4369F15D29B82178AF4C0EC79000C2BC9CC1DC28850415D9AFC102A187
043311A33DA211AEEBCF8EA165B10C77A2DCED467DBE7D2B1F15B252032D1AA3
9C8D816B21FB05854AD0129F6C1F0894771A32874FADAF02E739776872C10D99
39DFE9D9CC8A2F086BA9F56D57C3ABCE6B1C4D63CDACED011ADAC636B5AE8D8D
0B2C8B13E8019413B607CBB829BF27C2643088167FB55C1EC9325A4D817910C6
DB77A9373C8DA11E852A6BA232BEA98D4613925BCB7C047BCA5ACDFB00DFDF4F
C7AC0DA518B52BD230B7F2E7DC1F39AA8C73330F59A8D8CB350E3D1D80CCF7E1
9DA10A9BEC6041D36FBCCD3CB3F0377043F6E07AF9C660CBA9978E076622CC40
392D8B106EE5595586C55F460ED5D3F1B17FB1D8BF3751AAB200DE9E9245943A
23CEA677DFAE5268FB1B55723C671565DECA2187BFC0D0B90C0B7885F6CC099C
95639397365806A129C982ABF36571E020B3183EA5E07075031B9962C2BE9AFC
61995ECECF7B6CA10E80597CCAF1ACF48255130CC4760ECD551EE453BB7C84F2
20E44789C82397A6714CE25A0FA16510FB9F6DFDCCF6D7646B492BF7251E7364
CB22C58E6CD45E68B5C6BCC214362438997273C1E89DFF76BB91501CAC4948F0
77A240D7D1848734E622EE3F03B7C42834BE9FD9A59AAC42A403FBD23890B038
4B986AC5BDFE69CF4955402CE2D267B6492250A7C0C3ABEF4BE4A58F662433DE
C333FE1A2CFEC865D24AD4F5DC0C5B5AECF66072E349809C3AF152A6B7B76E87
B359EDD9BBD9B995DEFDA49A37473D197966A6C3739DA73022A1BEAAA66E03EE
63DF7832E92F475308CEECAD3A540AC09AFFDCECEC746851441EC5297B96D410
3F0B40712612CF647344646404F7C5BEBF969F16629EBF1CD3990DBB3E9CE8BF
D60E3B8BE0ECEE39C5FA869C49DA84A8553BE5884757E4C7315B4FA6A2A27D5B
CE22A2D0125B950323AEAC91356FCDD874CF49B4A4B1B7E9BA4782D986722F28
EAF921DD0BA63C302C153C43971F6A90D42F8373E2196C2BE5D075BD8D36F3DE
102A4FCD6FA25EC562581553CA8E1A375E2E48B05BCC782447C7AF41D5CB9806
81ECEBFD26A758573D740D664EA986F48DF644A493160BC08913CD5A7463F182
9F1F126AFD298E73B41EC8B3ED0F8F0A2FCB52DFF3E116757ABE99AFAB32762F
B1478D9A2A7021608153AA430F2284622C1D44A986A1AD8A60C3B32A9A8C83DC
075CDA67E03B5ADF80E720AD0953680C5081DCA9282C6DD8FFE9D901F92D2C62
2AA2F6B3CF88FFBF7270E9441AA0DF0C1E5C86BA706E69E632D956D4F10D88C9
6035BF5F785712A03590950F17ECD640B52FF6C60519D7E363847725C6EFEC36
75F517E8A20FEA6F7664923CF97EB6DC77E1605A1D2A25A538A6405A35F68CFE
63891CC4133483344E4BBE07BC2BB960574E7CB96EA229E31EF33BFC818DEF30
D979D7F8E0D9FC5F24DBADB63243C10CB6DF4A44ACE3480108F9114D64F0B7C0
0485DCC3CE5E9100178CB49D04F03FF2ADF3422C13DF4FE2476BFFA450ACE731
177A5C9FBE20F88783B27CAEF0B678926C2D75C661BB41B7637A4D1194EF23F8
71D21029182B8DFA5AA8D8A3D0618657D9C43C9E5BAD386E35B2EFA89F31047A
553FB9606D068CEB5993CAC5032102807ECC747D0BC7CD20738BEFE8360D90AF
64F36369EE5D3C6191DDDDEAB2E4196EA3BD5E652A5F7D5A9AFB4B0327065519
DE27B9B4C644F1DB62FC2E59673DEF56F0CF7B414CBF71563635689A32351D89
4F2B860B68143672529D338E22402A9D698C6177733CFF6551997E1CD7A0261D
5912A195D8750D6B2E84082A6ABBC6F62F22082C87023FC92A91156FADF870A6
41AACB3EB358EB48A9FDE44F9811361FACCCE7108C515A4C0E93C9F1AC86E4DB
7613D2FE7F628559DEF8AE5EA5038AF9BDB1AFABE69FF4B9B275A4021E0B8BE6
66FE9B499FD2111BF2C1D5C4C01477AE920132B239D78158D7620374C5F5BA1B
E5E4715050A20FB1A8B06813B4D8F6C1BB102B215A7A7FB7A6D99FCD5E8C0175
C98FF08A6B5408D565797BBC187FD33134687A571CEC8757DAFAB3802BC9F4FE
45CD977010FBA1DB9785A20ADD8976C4EA87B2ED5BCB570E263DAEFEBA469649
3F8DE445D03F72F0C34463EFB9E1288B4D0A27D4DE5AB3F4EF76F6D1663C6040
AA27F92A048F9BD73C71FA23CAC778677E0083212B7A914851F3248E3BA0ECD1
81BBE74022640582C97265FE7577A1DA6EB462E5C59F2AC7480FBDD76BED71FD
803BA4914001A180427895DB71AD0F05BCF0C35BEDA21F0371C243465BCCF226
691EC0E8A4B1DC46C675CF10976E1DC2AEDCC20AC41E8A3E1967538C22156B7B
12E68572F7F0EEC1C8C3D3E5A88C3A3A548BAD1690D3FF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC8B64E3DB194682A30A31E9D23ADA7D5C0259E2410A72
D9504CAEF21597965D669100E95B8C450A3845A54352DFA15984693F8721BE6B
C8436111546A70C5B35A2390E5D3C43E8295CF922FF601D611725D0D5D9EB2DE
CAE11F3A66BA22F94DE028A8861FBCE564DCF89B36A5F1C621F0088A5E41311E
9B82067883EDC8BCDDDFCB6A87C2BCF37B79B1F65339265C3BDC27CD99AC7D74
8CF26DF4B25B62F3A47B378A341378AB1E9AAA88112469298B36645A69B98423
DDA04A18DF5410EEECE859A081B2D1D4CEB9E40FFAC6BD2F8303F58AD7686B3B
2D3EFDA6667CFD49D2238D55D45C48100D47604525BA0852326DE98A17CA12A5
67CE98C02760C521F44824D1B8EA2E10C8D15A57F5E7884B1F63ED9B541446E2
14AE6FDA6F0EB66522C36B257335EE0539B9E15D0BF27D8D2083E799A8BF81B4
D1FC7CBC756CA4ABE99BE732D6518A5254C42DE6FFF8AC8683DD62ED727126F2
36C790583AFA3E58651B2FA8827ABE229BA994FB4A0185E38559023F4168EDA7
27CF0DFC3ABE725F0FE01EBAF6D0E7CAA8B511A630E8148A51C1394C7C321156
CF52EE7F3710F645DF1A4A5582FE6A701C083B7540B54FBE689D3EEE6EDEE8E8
C6F72242CB222238B955EB40FC8206E642813B01CAE8B6D3F79EFA12E39E03B9
888375E11BBA1D0821C1D40D4C232D2A2621514057156FEB1709FD747E0D67A8
42B20050A93D6DB8B2411DCE3FDA5F4B4698CBE32466DCF2665897C5FE2E1554
509B77F925832DD59E613B99092C8C0BF372AC59957A0BE4818891252E1C8954
CE34A28A00466BD986761AD3E2EF247FFE69935BFF8D957C1F0D9832BD2B1F97
858C8260E73B513FD7315A2ED9A64ECE748AC1F0E99EB86F6B50EF7B0ED561B2
3B0917E33911EC3791B19D36916F36273C57C627D220E97FE72BFEAF9FF4D774
B61D18FBE087FB36A2BBE9D1293CA10C7C29B1D1F2E214177FB453C94631C603
AB653316994DE423123662D2F640D99729ED3E53B9A042CBD9DE2B19F5F89F17
A00CB10996932B036BCC08CCB25B2BADFDB659F305315BE273E5D021E7401ED9
78AD4C9E1AEC73F39A94EF9F26DBD3FE2A3BE5F7F9BF42EA170FF2EA98485424
B855AAFFFD138E85FD6770BE16471D811569F9AE4A101D1CE220C014805AA562
591C3969760019C54EDE008DB2C2F95F943BFD0868FBCAFC4DE907FFCD365F3C
D9235704B9D57ECD3B26C607EFA14CF65A22F5837D99A0013C13CC7FE20FBBC2
97B1935A3A5DE94E8681FC6842809C0DEC70B59DE1A9AEE59B1B62112D05D8F6
B68CEFC24B5423271FE1164A738F1B67120F9EA4B1714F78512D6F1E5BD5698F
B2BA240974DB978FB3C97DE5A6A3BB1459685F9843304E7BE7F759871A301D6E
DE0C8571BE60BFE0E1709BC8E48C7CBE1B898832903C47F0C2A41ADBC1BC00CB
73DFFFABC11F6E326240AE5708521AAB4930B196735E05D19727E8A0F5BD9F69
935E7C35E1138DF207037E433231C917F1C69238007DC6554F6CD7D63865EEEB
57DFB72AD38C12E39FCA8A781121FF775DF867AD27141C2B472CC865322C790D
DC6E26D427DEB75FD970681D678634C584BFE5F7EA74946968F2AC2E19AEA4BF
FF432C9F98C387EE8701814C47EEF978719DFC99FDEB1805D27FE4A6A29F7369
900AB541289AFCD4FDE59002778C8D988AC06443D84D50100DE023ECE826FE66
C5D70A5D64F280B636A11A831B292100D24602DD1FB57B3513868ACE483F6B46
B4932C99CF7C839AA706907F80C9FEF253B17F7AFB4045DA84C8CE9803930232
9DD2C1C33B75F7D7FF2475ECEE31A8A8DFA98090715050A3705B77FE24DBA218
09F6E7D9382547BD9A4792A98C6373B82B88EB80B2FADDFA2C5ED8E3D5DB9A70
477360239D11DAF008378DEBEAE87F7A9C2D8B7551F1AE1DDD457358A098598A
15309F3F3C99782D7543D0F5D3005AE9989B2B1392BAC49B87147CB95875C67D
8508389C2396E17FE490A95BC65985E61719A69427684D129DD4F4AD1DB84AB9
CD96416F04F59DFDC94FBA7393872FAE13B268C1863E7A32FCDC8494608A0425
51B0799A76FEA5CF9CFFC6773AEC2EC151B663C2E3A0E10AD661893BB4F07FC2
D38BC3BCD87E033BCB9C8BFAD5362DED318656BD1B394F3051A21BDC349DDC67
D45A48A2F36D31FD848F5C4A6D410707FF3F75D07ADF1CB5BC845F3BF97657D5
818DC38E5FBF9547C04C172211BD30B4A6BBB49F82C24360839B2DAB7F98E7E2
F53F2C9965C9A69C2609A3254E713BF5D60D4A2BCC328504D300E2871352462A
CCA0619955ECF2187F2DE6D10DEA4E04B54E17F6AE705AAB58CCA0247AA432DA
830D14A738AD78EC17713C1CEC30028BD6D645B4C743FAE4B5E08848962D348F
053B252AC7D608DCE060BCA580DE39E5A58014BBCCDC778ED2784B3423A09976
B2DEC2486F99FC0537E9AF010ECE8BB9AA9287F105EBF62559DFAF164DDA181B
9691E0F87F8AB8821923E38A45937B073CA47C1236137D6796CAB9FA78DDF8FD
05C75561FD997D46123933DA48E8A8F810AB8F1A3BCC786D23A03F035F609841
0DEE7DA653505F2C1C5A58D75F61E7C9E905E0A6EFD9A01B04D8A9B1300C3170
80ADDBDE93172AA487EE0FA2D12590F047C52E7D1FBF84AE3412FDB54F582545
D025C214B41056B674075CA2CB1AE29A1093D26A1C93A77FBBF853F7907469EC
4A4C87CBD3F0A61420E609E3A8E04E37B608E734CAB7E74BE24DFEDBDBBB2AC3
7E0D09B0409F586D3686C13ADB5D212197A5FA98CC840888F687CCE445CF26AF
33130032CC8DB3B9F3CF361BD0C69E613E374A3FD793285B93D1F1B2B30B6BEF
56D227E185C39B6225AD8E9679F87F2E4EDA7E683A3F5B38D312E264385B72B0
E770BB4416AC788BE5B14A07D3043B461D8773E789ED5E30505C7C6E2851C3E6
17931366DA175691EA03B2F9E616A2AB464DEBD20FFA0403EEE768DF9BEC9623
19AF480AB74E46CE4861BBFEEE9EF70452C243FC3E5639328D0130A591473706
EF62330A637F5F3AD3BFED9D1DB31CB9AA2D54656DB21E82EF2580D4192B1841
2BD176D73127A0D9A28095F9DC2FC34B68C25847694E0F2833A53EC4B2A8D70A
22AC669E6E09A76CA910A6BC696F3366BC688577AA83033CEBC71F24CEDAB8FD
65A525F524654EE9C0D3BCE6C87352BFA4EAD49B9AE08DA0FF48ED1E75ADB0EF
49256C5219AE27D0FDD31B3236C205723EE5D2BB6AD501BD8D603AAC3F2243D7
3E381E64AFAE58EC4282774A572A20486AC2BD2DDD0BF1B8D89379186D532F0F
9897C6E587DBECB33DCC0680CA1572B769C45626519C4D7EAEDBB63E754AA892
BD1C74E88CBA9FDE476F2FBCF821B4BF72B6243D491F239A714E94FB985FC75B
6A4A5DD1B39A03BCA74C7C6D9D8A2106BE0FCA49D6F465EF17F8B745F271EF35
38EDB9FE483A000AE640903400DF62A1F62B97D6855934411CE92A338A48EA4B
DC6BE93510D7E29551E9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E0861476C6BDA40AA30151943B874CFB63DE5620A7A8F2CF6EA77EC
ECDED0887B6C00B24C7A463FC10FD2C2F18D67BFF9FC9E621DB4AEBA91880FDA
C1B255D3EAB46E6243AE85845FB84DC84256134A55488B1A6B00C672C13F4D70
9C289E50F5C1D8EF063ADA63F3351D5E8B2A5BCCD284480B0930FB24143DD785
1B5539E97DAEBC0C57E6CAD4465492780B560D7A64F4AACF00DD611A0D4AA2A5
9BF972145C6A25C355CF276F00AD5F5E4EEA8D2788534B0E643A05643E8A8303
8029E832F016A7F41B9B176926F360586A5C26C99195A6646B1336FDDC2FF0E4
0D5A3A2E5B7AF64A3304B9E86E1BAFC221A8165D453AEE422EFF10547CC2E44F
566E8880D7B62B55E06213C9491954D1A8509555EDD6F3AFA775472B61C784BE
8968101A50626A429AEFCD373482B35575207D2AA2476912EE771037F8D51B80
31B5BA4FA023A643AA617DC3B38D8B3697CECC8AA4F174F5B2C1124A9CC2E373
ED1F6F3EAEBD1C8C533E943977A590361A53953D75312631D6F07794B1D85325
1462B649443CE79BEBA97AE481AD4AB1DC86D8BDB89DADA55F2D1AE640852657
EBDB5BBF685EB2A4606DE426020640D534E795EF9019F887473996793F6FC92D
A11EA37B2EE094302A297311DA3110A873E6F7DF8F113DDE6AB0E182E5162DC7
0CD52C99C5542185168CA1F712BE96EE3F15292DEE4B72E4FDC197E724033F7B
B9128F40DFF15856EC96F5C3BA6E6CD5AA138B168C23814295B0BCA199FDEBF2
CC7849276A1AAA5F1598EC7A9A573A79CCD04CF98E4C6E81DE8EFBBDD3C355E7
3E38FF48F0FC3A3DF5B4891F92369E9379CE45F6CBE7E3178917EF80132FC8FF
0C7E7C01CED707EE67D626949BAA454CCF3DD58FD7DFF7B255BB8D78045C6F33
68050136CEEAB37F705812FB77CE978619015F83689687231C03FEB091AACD0C
096AC82B79642D2AF6CEDCB5190340A318A5F66CBDB3D64C3E9E49ED75D95704
9B85E0F168D4D12950FA8BA9E1FC687A5056FEB861893A67198B49D5704BCBE1
4EA52966BBF2629035D0209A74C21D10B0BABEEAB1C52E626749175FB4B267D0
D6F8C04CD391EFEDE4224FD7CE35E7D5460EF05BD7AA8B7DA39A26DC8F9E6003
B2EC15444EAC35A6E054D213D0A6FE97C994ED2EA14FE6FA12DD0D4E6E52A32B
048D621B04296FE74CC3CC0336E26E4AF4E9A6A0BE3FBE05D453553E147AC46A
2F2F1F5ABF0D0F03D78AE6E30F27C037FF2BB6C0229DD7564D4BDC48715E8499
206DA2C42BC1E19DB531D2A35036D25CAC3FEB287907389CED035FDEB68D4F69
6D170E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39829DC8A2ABDFC584BBBC8AB8932CB
FDFB9FB917139ED02FB419CDEAA892CDB606C133DAA908377AA57FA5E2A16FE8
F9DBC207EDEAA72C2F7D4B7B7112BFDD1A5BC950F254FD477654C63037748411
037887C4B65D8E1DBFD8BC7F2661AC6E39CB510EDF4CCABC332ED1A5E5FD49AB
7955B7A0C9770887DA7B5A123239565BB1D04FA90E615D06A805EF2EA704243F
B382621C073D18FEC9D5FFE44F8C791C47B490C8E3D8B586D529D30A9E40FF7B
C1C8059928ABE24544F41569DAEB26F1186A550FAC789DC46BAEA1D028891BCE
072BC4077D5280C8337FA283BB4340DDEBC4D256E13F78F42DDED30EC42990D2
D7674A62EACD13CBBB381247F44161A0539A035AE3749991DEA439FBF139A16A
553429E039046EFE39B6B9B33D252B140142EE927CE5E607C1F2BC03785EE94A
E63B97F0E34213A1B0A55054B02E9C5BCE6B0E9B760FAC62828B9B2C3BAC419B
073E6FCA10420F989127A04BDE01D71D3C32869196A7C486DD1CCB62FEC5AE72
4457E9628C077A0C7218B75BD86AE495A872463510543EFFE5DD50FFC2FCDAB7
133032D62176E87C9CE253A193BFAD2575B7B23BF4B47D1997E6DC26B83665DB
71ADF03DB565CB3278F5B72C3E42823F4F7EDDA13852C3D2523C98C6613FBB7C
5DFB870023C31C1FD013E274504CF62EE88454734AE583D443130A9533C9769D
375E5A0DFE646D603F49A26F9E5F210B120CA7EE5A3EFD38C40BC343C18EE38A
6E5EC1E16F206873FFBAFA03266BF0D28259D561A56EA1DEFC0D6891AFA3D1E6
DE83FBFEE99829CAAAF9FE809C13BE788C42E74A8A162BD9BB26137253BA8B58
1941E759A7CA7AC42EE55AE3ACF0B696E4444DE0BB3491FE84A6315E3725A28A
20C7E32793E2DDA8ED6D90F8041298B7A4C1E2A2D16FF35C3D8F5FD37B1D5760
3AF1ADAD3760CFBDD46FADABA26B5433D34C2AEB076031841EA0296AC711128C
794F77BD223CF144C0FDBF1576BC1C20D6A4CA7FF78D906699CB9C2B43FD2042
ABADEB88D3FB46627EADDC9F2827BAC12E0E45B310AD8C11FEB1DE5440585524
AD00C04BA139245E95B76F3695B0BE5FEDE9A0B810C0D8253B244EE74C47F8B2
0547A2ADFAA6E40432CB09DCCF5C286D5EB04E5A7D952E7167268B30DF26FC38
1D8D871D0D96566F0E4910D1712E7151AFFBF5AB2C8A5AF1CB6DBF0B027ADD1C
2409375ADE1F82292CA07F3948B726E9D3DC6F3AA19E84CDD50D789E56263362
340FBA8CA49B9AD210E2B4D77B4553E8ABE6A6FBD131E1691F749DEBB18A5B5B
90DC695349522715A6B6AF951007027352BC7C9612CFC105C8BDDBDDC8BAD0B8
7F3BA50D36D20926718FD37D86663C2F134BB4B5EEA3039CCD3F02DB45E13804
E3B7B4E4EE45019BA6FF7DF40D9FE58108584C65DAC1D387D9CF2FB4A626EA3E
546717AE6E23981338327681221810546F0009F98531353C9A8EBFE7DB9C9A1F
83F6E3CC814D6844FF1A23AB32B521C1A09010973B310CD03A0ADA22C6863683
473B13FECAED39B923980E1691F99CB068EC99B0F5292E5450773EE1769530D9
051181315AEF884EABB76C5B134E7E0185E7D5929C128293EEFA925E555E77E7
2F0216B34D71875B4FED0EE2874DF99ADFD2E19382CC90DFFB25E67F6FB762DC
D3C3A8C76F4F6F7298116E7FF68A8348389D3052344BC6AD77FA9B4CA05CEA57
E184293362DFBD0B5D90A7909896CBD0A038B6BA98B6078C9FCA1556AEB8E16D
CEE96FF74BE92989C382E8FAC254F543E8D3E7146C9A0600F9A0BE530EDDD8A9
01220A971045A9A8FC9239809D764B6036E658222897A77DC3394593C5B714D1
EF72E72786BDDE985D872823D8DDFFCCCF5ACABF850C801E14FB8153C749EF79
3EE03A1199D0A9EF4C5D26725C6A658DECFF150A9D0FD7AB1F56F507EB972BCF
356EDF826023098738D40D1E2F1976A39CB1DAEB62F9F7729E6E985765D126CB
E7FE55D3E2DFC75C0F145FBECF6A2D130D4840A799889CB9DCCD3FC716139294
FDE93AA5F2D8120ECA4E117C31227384B1C5B443F68FF78E4CACACDB36B7C4BC
FD26A7241379C2955D9BA1921169B16ABD7E4852648FEB205E020B27F5307E54
B6F4A4858CEF9F21FE9A561AF418FD9D6B8576F8DCC579206AA9F21A1C50D38B
556542BD5BC0BB3EBCE2E7C56E180C73756CCDAEAF24840E6C6A01AF6C1A517F
86D2C6190AFE9B31BC89297D17D4564C28040B982EBF82D0914F7C33F549D305
58B5E8ED6D88D23E7530C2BB5B2FADC5B34ADE0644C0F54B03AD9E14CF669C7B
38CB2D16EE53FCC59444A3FDDB80E6632FCB86E990AD1C8A0331513E0B6F2A90
442F6791C4741A0ED35AF47FF40F2DA0B75EA8C8FB72576304008495771DFFCF
89E918F1702F5867DF3636C4F5C221A18AC30E1CC4C35114DEE607734D0910C3
0DE2682CCCDB283F082A7EC77AB52B21BA9B8D4A0B9D7C5926D1B554B27D7667
FB385C61FFD25725C9AC23F19267358C01277ACD2BDFFDF6C33B5F6934EB0309
218D450C2B313029FCE2CF0251EE1C689CA70589839EADD20F9A8937CF51FB16
F1C47539D72BA1C4B1D25AD3B03234E859CC8B2A72266D6DADFFBBD1D06ABF2A
905EA2C1A854E05F9811643264D84794B53E78FFB7A45A990CF0F174511A28A2
99E8106180DFCDA1E7CC4ADA95093D064B0E6917561D7DD13F68F7BD1366A3E9
9D1D6124A3B4D95382B4EAE5B353BC6D9643E64B8A3796A3043842D5E8D3C026
93DEB59FAEB3A14C1547C6C46C24FF3513EBC971E0EE222D4B369FC3919EE24B
8CB02E12CFFC2AF1BD142036C87B6AEB753E58DE961F654E12385D1EC21D1A91
A03C2377D779DA1F0DE6FC09910A13B23860D75CE377E967E216D0BFDFD8EFF9
C41FA280CD6F62F72BACC9B4FDDAD562E249FC2F1392F7F378BB1754A2E80DE0
D9F16599E907FE5C491EDD336C6F661DD25A5D56725C7732CC830280F33CF486
D55618FE6BBBBA1457A7B9AB98F76F6A94470FC8ABFD342B6906A5399825EC88
4CFCAF1811F2A2BA4CD7BF56A6A10DEC60C98145A281C544F8B842C9265E8ADF
DB8B4CA7CD4E69E70AB0073D6C92F19F6E0A1170816ED400EFD373D263AA62AC
5F6B517959F2F94382E4302DB3EDE6A964FBB99F8AF170A5FD7DC048F85C0B2D
2810B26906E9E6BCA2757CC7FCAEC0C164C6A5D0E6D1814CCB0EA56FF036A434
FAC6E77F6A0B96C34D21C73BF7B55D769E02B6E09BD7F56D0235ED49576AF71B
A6A38E10F51F646E6A282516B7800BA8ECBE1A671D3C420526F9A0BB461B4C6C
0582F6DF048C0037592A5AFDBEB9631776656663828AF4AFADF09D8FCC074085
D3EC4901E6A1582683A09AFA8562972C5181D180B9BD26EDD6D2075A3EF22C10
8F4E44649AF6BBFBFA1E09D6B8C8131539566D7BC863F004227E862427E6DBDD
DBBE101270D15AA6590DA4E9FFFDE23B9AFBDC82C3C8FC7641CD8C4B451A4376
6C89DEE2E639514CB1CF6E1FD870D2A628392368D68C28ED60CDCE0CD13F54F0
F6F9BCF0DC2BA3169B38137F026528F5A2C526F147B5A3E7FB5A2572B1FEE2E0
E999C6052FB2F4C661672919A4E35223FA2937BB5AA042CC8FC0A8317E7AE5CD
3390D061C2FDBFDA95B4D949450224B287FF05556CDD7FAF7FDE2799170E21B5
9E05661E646D8173A5BE71EBC504A63CCB5FFC3569911E100A036EF590EE09FF
D84314D9394E0E227D1243257B02B8CAFF2AC2FB7868A7FC61E6AD2CFB6EB203
E65CC1462B7C3E811E4FBF589BFD5C15D966FC84C490B04B0CA0A969E41E3F04
FA629E2B6649661FBA1C1C0B922F821C28ECD4340F6C8EBEF4BD16060B9389A7
211AD7173A71ECACCF4E002223D1B4ACAB454C6CB74F0B3E87512A6237605D7B
E1D821C6FC022FE1731DEC1CD1E149C6D8FE899D287AC34EA039D94933409D49
1DB422E2CF38247F553154D22FEF718ECDBFD7503A0750027042AE2827F172AC
4C6B37FEF23A47B5A4038752E723288E6C559819F448337E748995A74E9D3DE6
0DE90966B9A2828946DE70F22F8738FE52A7252C221F88F1846293F4F56DE1F8
963CADC84DA9CE87D81D4F2306F0F4CD8882D55D5723D5E5514CA68BB67B6D0D
AD8CC299A8CB22ACF60A9294E3D854243B2D272CF5C16F0AAD1815A417E04377
715BD2CDC00635411C8F8802574F7C72914BBE9E892BE746547E35CDF1465C24
9CAB870818FA5CC7B9DE5158ABBD215534DDD10D943833A0D213E955D2550A1E
22227BE15D33B938FCFE2DE44EF169F237FF87C2D340EBF5AC170988E763C2B1
A931953CB0EDF31C3D1675995DB61CE89F8184AD68C29359BA34A76C8D0D5425
759623A9EC97CF7C183FA6844ADA6C3E83A31369277E9FD612C7762E866A6E4C
83D0AD28B58A619844BAE8B3FD4009BAC6562AB8309895AA3F6C1D805FE2200A
5873FDADBBE53F14CDB6F5079C10E2B962DC71B1F613DBD74DE4AB848D5C8A52
8C92C8225AD84F80F8239798DB5F75ED2150480DD677F5CCF1CEEE6350FC773B
D1D3D9675E23EBEE3478352EAA05DEC5A67729BDEBEEF0934AD0C63700B4526A
98631477A19FE5E16BC289EDC69939DA7ABB6B1C7AAA577848C5DA4B9D780DBB
3C1094338DABEB6D84A0136B85A552A80AE3E6451C0622AB8ACC2E93B1551E75
0DB24390D7F0804F28A5DD4C3263B5D810DE8F57625819D86D7AE834D7135E30
F2EC0C63B8163B3830C989DF40F9ED122BE1D03D9328B13965334076DFF12DE7
2E6B99AC66A919321FFC39B4523710B82E0E27702BF83306A0C3A89D9AD2A517
E03614C70620FA526840EF5367946F3DF67C10B47377A99EB966610A4FB421D0
79F3741B296A58F0D5B4E47DECF583B5CE7F92D2E6F78D08128C27B99705F112
76660C3F6ECD18CC7FE20FBBC297B1935A3A5DE94E8681FC68428328474213B4
FC74A1DBA9ADC2B4D6E38CC1F7D36D1F00FE8D7D3382959C18A903DF75F4A3D5
762C29295E43142D4CF17763694941FB4E2282F97FEA50082B956F1457E54212
907A0811E8EC4075D24EB0682E7602CC252BAF075A9F4234B7ACFF3C578C6363
014E8C987DEC8B3BFACE967FE85F6072058BE81ADADF5A3B4F927CABF282C205
B89E4132E2BF7FE56CF6503EAC88E8B4F4DCE65152443D05B3E0C76AEFB69565
A7B7347B45770125B5D86C68E6B62A581199E65B1D8E5F59136D8FED9BEF89C3
950435FCA4597AD76B6A7DCFF860C3CAA881B9D885A0C0FB5580832196D27869
EE01D169FC58F743CD16C8F0A690993F8C15A7E232176C51FAE62F81C3D8E55A
F010FCF92C891528A4FF537B0B85B7EB377EE389508C28BA77CFAF4745DDEC90
7CE0F42652CD47E05FC7565793E8665E1581310C8DB07D33E27B3BA7CDD616DD
17877C265E77F708D49AA47248A9C2193D8003DECEF9D76FDAA33B1AA9CEDCB2
1C2A3B0EA503661B25AB58E9494F503B4CB5024B73C130A7853A78B912859424
AF93DB66C9EE07FCAD6181F82F434EDF6558B665507B45B50783C0B7F2B149EB
C1EBB02C3344ECF1D538637FEE65804AD9F47FD5D09FE551F142955862BFBD26
9418B1FAEF148615D78265BF0E0150053C6C3A56561C360675567594570C1D1E
194D5602761EF93D1D7DD752928AEEA1E61BC9AE1093546EED14DFE8D5981F69
68FE648FF1F57DAC9EFBDAA60B1ACC4627E104C1456DEDE5E0FC00A2509E14D9
A5BE53CBFDE07B162D1D4FFD4692CD8E915D11A05CE124A4E833606410FDAF95
8DE213EA8230F0AF49C0A222FFE340112C6C063B2F9FF0F89043CD9EF07F9D95
7AB251D62164BA463DC07140EE243E46D03CF4D270C2C6037CC365F8B761A852
76F43C8598A66A0CF1DBB35482658BB9D32B03BE83E191E0A86BDB4F825D18AC
DF7E2D344284A17DEBA187C8407C106556254A8A71F70C8CF982666287346459
4EBF58A0B38A156331EEAA0D0BC5EC0005DCBA60B400B92DF30A2BC7B06C5679
A64DB5E1CE4FC658B8D7EDBF8D085F082F84A35063986A42B547E01DD15A5BF8
28FA3BA2E3A39502476ADBAE3D9D97B7EDEC61DF2CB89CCCC1B5422E7D2C8513
35C54AC440688818B0C3E73DF25106052700653849C02805E1C56025C68ABF9E
AE16CD83AA19B621749E3F10736FACA7F6BE9694300841AF0F3A67E1E6093BE6
DCB400BDF8C5B29E4D360972EEC0BAA7EBC8A05043E18E63517FB66E333A25A8
7D78EFF8A0D27FEF34B60223FC6170F5DD66C147D970AE464E0B88E5C5DEF5D0
A094FDD4FD1E74329214194BAF79410A422B9831F443C48DD0E5B0B2C42BBE59
56B65C153CC87BA98F5A41853CD3C9EA826C974B4D03A117E323C2C363E3D499
F3DC7411DCE3D20E2E9F6703EC79CF77DB7551ED76B595C1196354909804319F
1E312A10647ADF120FA59E478203E2CD1905166090BD81AD58D32A8D5B964914
1BBE104795D5D90AA454C1E99D802D4E1BA24A0313720ACE3287858A257253A7
06922273FAA2134FD48A8C8480D9137F359E6287C5369650A067B1DB74E017C6
F5DEEE483B14BACDAC64B0FE4B4360CD59EE645307338EDF702D160C3450D2ED
6030CFB7DBF6C4238A71C1F3516BA88CCCE79B5D6979221828FE4A8B71B870C2
E63B999B650BD6760B31870D69C4C15EEA09E1831354F7C4A16212A067BDF0ED
84C9A5735368A09CE46A5C17CCAC557BB69FD42494D5D2B9C1ED812F3CCEEC1B
C079E837DCF4EB4E495547C25D2893E35E24435F55A2D66CE9FDEC1A5F81FA21
9E49C2F4D2C8EC80D9E187F9E15825F57826DDB17A35CF2E4C380E50E1797F85
5826EAB926A051DDBBD93F907D31D6709284C86F0542486710BCF518C1B5D1E6
CF23E0D97980F20EFD24A6644AA26EBAF342B36AEFAAAC0AB3727E59F1642789
A1765F02944B8E689BF03404F5426F7148BB8FA709AF1344271173529372AF6D
A383511770EAC39ED55DADB32778CAE943CE6E928C9521FE45A04F184800733B
13440F514AF796BCDD85974E0AEC9A164C369C237DD28FC4BE2843036E872B2A
03163F0CAD1BCD5F7FBC20299D5C6FC1EDDFCE777B796FAD72EEA5713D78F437
DAE50160FAC28C1C21FCF83DE1B5516CB04C7CABC1D37D26ECC85EC180EB8EED
1A6E85129293842B429B1AFB33D68BC88143F92B5D64DA3F8DBFB0D329C7450A
21E4F97C8FF528ADC2F97F87C592935C07955C1F1B0F125261DA0D2F7312CE5B
3F3A1DF65DD60AA679945BCA6A71E4329DB73E7F29098787D96D89D74796C690
8AEFCAFC2C9DDFDD855116AFD66EA16F96AA4B9F040771F86CE98994E113749F
2047C28A0906100EF57663A483AA7375C850A31668037014979D53F051CBE5D2
46FC0CAC7850013FB3F1B075D4754A82A584DF54EDC7C8DB59B77CB7A8592B7C
FA7D097BB4BF8EECC6634A8112ED925C55E4B0DF0E5BEE4B29E5DA8177D46930
E3E90AEA7B324350D5926BF3AAB7CF462B8C46CCC43F2AAB8ABEDEF76AD7F14C
B416CC957E016A4C72A6A2FC3DA24AF084E7544D8A76154942ACCED03A7785D8
8FEE716F2A7D77A990393CA5CBCA996BE2E5186292AE634456B42FD60FD32FA1
999CB88E28F3F2CF4279B8F78704EDE708D0273EC0988A9F5E686E3579298F89
116461454217CB82BA0F84935D4E252045F2E8DA32F2389255B0491056F383EC
19176153A376198EB6A683C5FDF4055A1353F715969AA309C7949989491D8139
792287FAC65EB8AFA03089FB64A4276E5D5B346A7B57F280B011B6C12327592F
8B086ACDB860B1B84DB9BDA587A92DEFCEA2ED44A912B6F9DD0E4282AF3CC8E8
2EE23827FF79F6F5EE718D4A499D90EDC8267492DFC164EF3C32A4A77CEC2EA6
0645ED4604487008618C6D25AC1C98AE71CA49FEFB4DB99E5ED0002957A9E2BB
AFD0DC63B649E80C67BA35C6FAFBFD9818C21E96827534175EA4D23CEE23A92C
79920EE5FA94A734A30DACA484EB4BA47235C7751E074BB831F91F7CC5FE7EFC
FFF578C1F952B11F7BF097E4599421048329FB29BAE351A07AFD9B7B5E0AE4DE
1B9AFE745FDD97A8AB335A47E3505ABAAD48479E200D0CF4B7C375321C5B5410
02722DAF3AE4D0FF41AA2DEED29B985455F21E95225D7DA4780BE758897B424A
A89CC62667BD404A07E1BA0B051AD3EE2DEB7BBC29ED2361F11621E0685107E8
F6B2C78F8C9B34FD5A5233C20F9EF9B7CB7F1D174B2E94953F541C3B84D430DD
D2BC5993A39A3AE751C54B3F34E026863F790FE3B5B1EA3A9CA1A4FD2C9CF6C8
98EE6510A2EC593B475F955861C04DD60F4A12976872F59B63BFA4451E0260FE
F3CFE6AC43831BF1E02C91C149EB32F78815880D3BFD8A9A7B82BD519B639D87
A4B103CA5AA04FEDEFDF24B58001909B7B03761FF2070A016898F440E5A3CFDD
A5A71F8DB20E14DC06904F0682085D477B14256AEADF217F5E4092D1D03ACD2F
ADCF124AA3F70B7ADBB35E0F1641F668817E64481B4479C7387C9A87184F081B
E4FC920915ADD1CAF234CCEE71ACB00E7ECFAAEA1E34B8938673AA6D760A80C3
8EFAE4126FA999515FAE8AB259EB719E1F850331D50EF2E7C281D5DAA5779A9C
F33B4FC3A6252B39AAAF7045B8A0E597F173CDFC07B7FEA769AD6DB847C5FFBF
83A9135CC1969E4FDAD466B82F3F53CE916B65496DF9FE3E1C4CA1744862A1AD
FB56116FFB38C388F96143BA870537CC8B3E5840C5373BDEEA5E6B5F5897445B
471395DF6F39D245EBFB3C3A3F46401469C834216DF6E346AA93E42035387776
F07CA200B432D886A12EF6332152F0E30D38E2B0F3A28CBC3D2799234B4CA0D0
9D1FD373A0A1698FF3E493180CAA3D8DC20F6C6B95C0CA73AA6E6C1BAFA50300
B396D5EA82C272AF1CDEBFD659E89F2DCC71AC39F4869854AB585F1CFAF1E6F7
EBF70A7BFBD098994ECF216FF82A32EE1D2D26278D146F968614587DBBFC546E
899C896EE487BB2F45F6465F5186BF3C603D347C7DE7F9C6FBFF55F68920F678
B5C4584A1EAB39443FB4126192FE52BFD98E7284386F6082C2362E4CCF3E66EC
C33C744626BC9BE7912CD3F2EAB2010152363BF9CE7D96355721BCAD238C148C
2FC26E7F7C2F368DC2FBB2303E5FC195A24A473BC0C120073E96DD4AE86F0222
60FCFE119FD46170F7A6E1CE59D2E0E0A1A24075AA9F2EB2A871F588D26F5857
0B17EFF49A79EEE4953A33DB4595E959F4D0FB1F2210C9C4926575BB9B8CF2C3
9F8898FD8122998475FA12DD92F0686CAF993FDCE0113E5C9A994CF761789725
219ECDF1387960FB843E1A31E4F20296F2B4608AAD4DCD0F1EA0E1A5E0185A71
AEA8FE63A64949A7BD674FD5BD5B80B51EEB416941DF533537B33C794385AC24
25D8AF01C9A84A76F6A2812AF0DEB6AAA7984479B2CDD0F72435D5DC734AE3AC
5EEE6658D792EB62131E1DFBA0143F6584ACE94087B06C61D5FBECBF2AB8B276
9C12E223E6E90BDE98DA5E4D2BC78ED4EBA41C83C1D5DA810B4DBC7E6882D804
A6EEA79B7034C1128484ADB7FA4120139ADC25F4943B0272AC32A384E2225C7D
16114E1380D28A0E317930DFA18ADFB81C8EB75B0BFB3A2D301EF97188C83BBE
06422D1C075D8455E3D5C3ADA2C37166118FD7FE3E55C525FD30BBC70CE036E5
186A0F8B4DD788A8A5E82231873F15E4EA92B37F9045EB711B4939EBC2D2766F
2BFE4CEB6EC3DC2047E83B6CEB8E578476FA69515A558FEE5CC4220F3EAC70DB
16034416FCE7C04A3F221CE2917C8DFF1A287DA34EBD4AC57F55BD24CFA4DD6F
1C598F5E312DB3A0237D88483418CF7B8F43A76953A52BB76606EF122451DD23
80303854FC141326A5EA693E67035FE4CA3A87DADFAB3665957769CCA3FD911D
0EACF01F8F2DA6B617473941A1ED19DF2F6C55C06788274FBDE910DA5459627D
2B60C7A3E39A4C63D2D2200714748D73933541E1D4FC806643893A641C49948F
BA78BBE98888C044D049E9EDA646051AF86E03D22C944CF66D44167BA9B47ADD
AB87D35514B4C0829316E7B9879BDEA92491C3E9A1771E30988479F2DCCC53E7
22341BD44F152E70ED2F6229EBB4FD0CDA78C655E71003C12938AE4AE4FF2B32
BE0179DEBACAC5A6DFD51F6B504785768072670DFEAAD917E7F290E617903792
223A2AA23AE7069324FC0900215EC34D0BDA6BDD5326FE66ECCCCC22E846B31C
9A95C15573DC6DD4AF01750636932A81F9283FC18EAC5CFCE312865B20C7D9B0
ACA5FC06EEB85412A31793F4901504778CC6CAD142D172F4DAEC7BE571C0316F
D703C8994A078ABD9F42C5727A1DDD62734BC085900AD3D94ADD48BCAF67335C
61B7F2B2B654C70F5370E0F283C5F6D8FE4194FEB6C80B02CB53E12CE148077D
A9CF66C2CB7205435589588FBD166C47CD29BEC5AA33AD7997975E55E8D643E8
CE7C64CECA3ED61B87EECFBD108777FA201302382872B3C31E86FACB377A7425
8F2A8E531C9BCB80C73C09D36274C91F1149C89024DA3E3E029829204D8D0EC8
AB2AB23D244FDBEDE098610F35EA16B43A4345768F4A78E26D7BF1AC08BDBB83
51C7F5C1C71BC9DA714AD9D987DEA45368072750CAD0C9ABC3F493E7AFE9B6A3
4480102661BF79A0F1C27F54D9D00AEDB42F8B4FBAEF47BE3700BA5638E8E3F4
588E2F1A25D33A9BBDE199F59281F5D884990D92861BA0BEA5DA5691623BE6EC
A43ECEEA7A16305AA88B0B054DF589080FAE039A43F3F8F92DA0B1B3A34E9BB9
BCAE0E89082ED18574A4040BD574848C85BCB7F3D74FE0BAABA30A31E9D2391B
9A7A33D1EE6F74FFBDD658513660C7E94D13D9E8F2E6488F77AFC2022271FE62
05D65C1785F299C80FDAF4DFCEBDD5F0AAB6C7A4A26946E9BD79B50A9825D71A
ECD9ADB7F83DBD4E4A9038636256EABAF8BAFA31DA0FF51CFCF240C9426E90F5
7925E6B90462A69B5B7B8D3A9D26CA51B4AA746B4C7A1B45353771645C01C2E1
A15A828876AE44172D12B6548A0EF59C6710A1C0E5BB406AC3B70E31BD7F2AA1
DE45FC978490BB69153DA6D6161F780955AF7684E8E036205B149DA99B2CD2F3
37147B5D3CD3DD8B61E413EDA36A71E7B6110CAFAC612E3E67F97829442F2792
469D4BC8FF30DF62EC6EF7FF5542CE8F9D77861B9D9865887D4EF8AA7AE6AB23
4B252A506EA2E9F52B3E14091FB92373C71F3F9B1649C5F3C80FF3CBC2A48577
F7D6244DF68CE4F1453DC12F039BD581D96BB0EAAED9811D78900B7D347046FF
9C2A9DA7AEE1F42E31821301E1EE4498B7F8AEBF68A600694C245667C46D55AC
C5E661EAD3B9310B9F706A8642CD6EBCB1ED62EB02DEC90FEFFEE1167C08592B
4FCCE767F408BF16665982C60A01EBEA544FAFC0C3726112DAD8BEBC692D09C8
962E6336524AA186982F47DA47525569C373B4B066BA7550F36BBCBCAB0832EF
073E3505C3EBA20AC324DEB563EDECDFF165186D73C5275BC9638D8A733D3E59
05EB61E617ACBDA9EADBAD6D7267995C72ACC0658E69A52A687AF7512BB3B786
2EAE8E10393D1987095FCA5160EB00DC4CD02ACCBFEA0148283EAD2E621FD650
A01D433803D9B92ECAC588F37BDF9FEAB7F85B65DA6E204268BC4836203368F8
CA936A6B93DE729493EDC6FFEE039CDB84E845A8770A4C835ED0BE381CA8423F
9E792CB7C220CC5E259ABC3A605343DF722DCBF1C27AB8A8026A725FAD7DA0D2
6FB26AF884F5A45A2CA827AA2574D36EF0070C12D4051181315AEF884EABB76C
5B134E7E0185E7D59F10109E66AB7D8607B409619E79F242CF52E618AC0DAB36
F1AD1ACC1A2DACB18A8108B8CBCB5FDBD2B0B197103677068AEDF0FFEB7DD80B
2AF0AD023ECB8F8B6686EAB4B5BD269418B1FAEF148615D78265BF0E0150053C
6A5E05428D1D8869EFE48A460C0BFB2499E7ECE43FA2DF23F5AB99E8207FFDAB
C084BCDFC2A202F15B5E590EE6A839241CB9D6C81C4D965F85EA14F4839C4D3A
DAFAD20C044C2D37475078B1996A964DD7A632B0741C67B0A3817944CD7D9208
74B55A2F393F513C09D57D1775AAC8BB31EBE17799381128AAAE1918D55FD463
E2B69CE5BF2824D3ABDBC8CD3907AD5C96F7A59C33C614D69D0A6D59F1DD017E
CAE805053934F6E9925B45CD4B58AF33AED937DFE6F45BD57DB169FD3568C8E0
44865DE7308E8CB715210B2B158F31ADAC46B63CC00BEED35638A2E810526D8A
808785ED46B2205D9BCAEA85DAF9DFB14F50FB8C69329FABA01826377C35067A
7C6785ECE0C669C03E153A4EBF29885A69D8D51B47E08C814B5A0C25055F21BC
987CB81EB2374992009A28B699901B1A6F7C9D6983B84AC3FE03C7D9738E03D9
B5DE922234C3AB8B2DCC9CE13D342C005EB85B3EF2E1DDAA2510837ABA7A29AB
1F41A53252996621248D67285AC42033D55934F684959BCEF1C1557DC315AC89
1C390C8A1733C2DE844A1F915F759C3241F8F05D06EF7BE0D60FD996223903C9
A02FB6AD5ECAFA473DD7934595BD999C3A31DA2377FC5BF66519A2614BC64F3F
70591B8E9107DAECC5D0D48796C482AFEF0DA821EEC30457B3DAE010CAE9BB7A
8372FF751F87EAE5062D720A8E05B319FE16FE42ACC4F8B1F8FB794B1427B753
DEDB0BBB7D3F03768BAF8691733BF48669EAAF6636EFC35F225CC49082CF4988
547E3A45A4DA0B6F71FAF2B50A51B1A4E64F58210DECF59C716CCB290C2E90BD
2EFE727F36708ECD6D4CA39743D90725B633A6427DDCC5357E6ADF9AD8C35E6A
43B6823C4E3D2E01A5823F4109D6F3AB7D037E509C5DA4A954235A57F0F59821
5453B7617187C50EE0D0D7941F0841112068656197F48BD92E7074356E75788B
2AC966CF6AF6E8408A0C0E629ED62843999D71C5599F89C29824458186DF6558
A2EDF7968D2279C49A48C6301E226CFE1D3E3239CADEC7AC9EE760683E6CCC89
ACF2A120155637A9CDA2CC27863CA4608768C3033D0A0FB4B6D89FF0F0727643
4B5F901764534E0C331CAAD340B7375427190D9ED5D06C044CA6A69082FAC33D
B46457E63CB27220DC0FC981DCCB6055431D45D2F5BD0ED0868159FDFB3820D0
2F460E2C2908866FA2E226B8B932A195CC0EEFA8E39744C2315DFB5DFEE5EDAA
BB95B187A4643893395C4BB175F1BBD9420D89CE673D94DD4A12913ECF9F9DED
12CA0A3B389CE4D11651D41BEA93204E6AD3AADA6F2415A8BCD5C987B3D0BF49
BC7317AC222D65C592DE9810EC5627944F56F5F677A11134812A55A8E3C9062E
52A6DC77BA1872B605A7C332BD31F29F0681E5783F91AF0CC0EA7062B322BD64
708D79386D23C7203BF068D8A609184ABEC0D139E6BB4782A39CB410107BBCBE
4B5F3F8CF3C20A8E023AE8FC0941C9D59948E7D6E5669C0EC13FA59846364CD8
ECFEFD10DD5B870EBA459DCD04A9B13E4174F27F5AC1B43D39C5EC2CDDA3AC6C
0C12D644B9FB989674111A603479F6DD017ECAE805053934F6E9925B45CD4B58
AF33AEDE266E96BC1C1E95DEC7CD47FC235E96D3BB3D354DEAF0698756826B77
86F35D21E3098DC9CF8BBE54D707A91693BC653F199BD875EF9720D177DF67BD
2772725632EA397689FA12A11F62529180060272B7EDC9492C1FD86683CB3404
20EAD844C7E336A2E47224D29972E8478491DDFCBFA8C93131565B1EEC7EEA0D
39805B15434A042322AE2678F0058AECF8482A8F9FCD33BC5F0C3D63ADE8B22B
6BC3946C4099D1340D27C4479C144AFDC37E46262412D7A68B20551C36E556EE
217DEE75884EF4B9C3F7DC4264C1B79D2B64DD10291FE16F35C17D22DB84BF21
B7BE4AF7B655ED7915395A1A52DDD8F6C69AD7377D0D0D93A5B74FF64283F15E
AA51DF4C74CBB662283EA4AFC4FD65AB2CF6A54F79BDB9DB56F26CFB3E6591E5
D4523B34FD5F89F09B25F78633F8D269EB8BF7FB2277C0345EAD89BA80630FFE
3EBAD70FD8F2302B44FA2589D828A92DDB65A8FC8069D4D1F6A44841B901C028
00247CF24DAA4D13204E6203B8537D4D7B517D5067DE39B7815EE477F25004E7
BBF5D14982D974DF682AC54E1C4168637245209973E0142B0C866367FD92E407
301632F4E255B42E7A1E745CB4426C0B58421A76F7F4C0C7733A693FDB345784
23B70ED44AC6EFE221ADB5E725ABE897F5DA14A9A21324819CE85AD51C124ECB
B70A98762196BE6CDF6D10F12F7D242B1D2696B3210D7958A6DCD6B2649C8B55
4E9AB17DA441ED1B5D4570C6FD0EBA5186024917D7B6BCFE8C34B51B8C7CD6DF
99A42DA93EAA12D1F4748D1D2F9BD791BCBAB91CD2321CBAB3556384BEEBFF5D
6283F5650C1F50AE77E07B4AA62DC12E2EF7FD3367ABFFB41881EE1DDC63DE5E
4112C883DDDA45384686DB6C60C874B049DF0D965F5BDEDA309D0E206EB9CC30
071BBC459B253E1BB5DC77C9FAE352BB36AAD99D7DFB0698703FA630FF313B8F
DFA2C4852321C54E81E7A9C13E431DA7BB6B59B0CFEA0E0036FC3CD9E2FA512E
3CDF862EFF46EB7DE76BE0D3026F19A2F1C3406F949869C9CC6AA7EE629D85AB
D5B7B3158D44150D24920910459A383275F46B0E17949612B89374A91445818A
6407B2075FF97C68768B4435372423C4BAF6A443C80897AEB2C5F0CE233093AA
FA54FFA58AD490CD600C065EF9CEF831DDA2FE4F8F2EE6654FE352662A45DE66
F564E1D244F47159B6F3AB8C8F2DD189E74F7FCA9487FAD82CAE3FD61E240B21
7CF6C33CFA24C3CB360F3221F44D7C54C884FCEF935F354080B223A288D8758F
54C3B1F12C1194779945253EB18AEF89D709AD853B383D3E99B9F2C62319700F
A91739FDDC18DD2FA3BA2B3834A67F5D142BC74FD04657368B5AAF97C625D45C
5D663D7CA4EB950EFBA938BD9015DA3F03FDCA000F60D804B89BD943B49ABF54
8E5D92C1D6151D1ED965E7907FB40FE2F0786E979497CF2A3361B379302099EA
E7EA079B0C712F7D2C8DF98D4830A9D8C8B70A8C5D5119CCFCD7E26DE7646947
9963BBA48B780779CB9F496A00B69503C05E0D735BED02CFE724829FCF9F038C
CC471A74BFB0A83F059B10B13F7897C656608D10B5E755F6569E984FC1C53CE3
17EF5308AD61FE21FDCDDE67489EDD877A00FD8C746CC504E14CEB75086493CB
8544C6D6EAF83F64AA16B9E93D391AD1C90B30F1C8157A3A9DDC2D955C06DC47
27D34E025E4D8EFB0026B73B708CBB722A842D630F45462E5881A607940DB0EB
E1A2718ECD7EBF108D0A67CF5C07E4A28F467E51ECC14653C8C9C6238858BF3B
1EFAED7897C44CDD44A849FFC6DED49351DA942DC8437701969EE4D07BC788B4
1D8070E2FF25C6754963E1DDCD4A445A08ECB175BDF0FDBB788909C482B190C7
FEB04E9395902E48D272AE567009A365A3A09CFD62F8650AE040E1540F04FA9E
4443AA3E9EB77D7ABCB2518D8E781387EB64D199222786A522C0A10DD66695EB
8B69F7D45A8B6778E18B07A9819BB0C071B90445E36826D41A0395A42D660528
B0AD2B5BFF8ACCB4F202C387911D4DBF0A072B1C2B1DEF992C132D8CAD66E1D9
862054F5817029FFC310B8EAC079A268D568CDA22B8B3B532EB5217684B1279F
542A47173980BB50F20BA05FA1FCDDA1AD16747976FE93D89A2CE15FFE944C59
F759272FFF58ABA7BBD662C4AEBF25D1E3F1510A6443B3D640DF2823A134AF55
72BC4DEF5A94C43BD4CD0C6425D95F57754D558B974D99EA7C0B6CA33CF648C9
89539D3E431394409CCD15532F098B2ABDCE3A1FCA581B5BF99E443E9669F3E7
C2E2C0DD52677481E32422ED37B4105AE85529A9AA5BE172DE470E2D0C23E641
BF8C1EFC9433FF2BC36B4DBB0251B630473F76E9F54692CD8E915D11A05CE124
A4E833606410FDAF9260F26041CB1AF30804A3CC34C06C6FBA8AED5822157601
77BCEC16F4E70DBE10E747E198CAF5502C7286D48990C78B15C4E945E26A5561
52A60DC3DC4A97AB6DC279A9796747A9BF37B5A2FB037DDCE8DDBA412BCFE4C7
4AC382CE1D65B9E374BA24B59A9291D0A2FDE5A8B1EBA41F6D8421F8B9D731D6
FFA266C1BE3DC0AD16769220A3D8240C7531A7B1B2EA948603E5B66D4A14CE55
35163BA355DA66762E22CB2907B5D085EB314B8BDFBAE69307301C2ECF2EB1FA
B479D9B166D442B6640CE02C62C4CE72A35BFE63FC98D9B711D0DBFDE94205CA
706005B3B61C2C8032BB7D6F2AED0055ABACCAB80AFEE30EA9B23770CE2D96A2
B9EA17A68E33F5C654533909C9107906C766CC6C850C82BEC01A006F8A1AFEA9
4B1A7E0E1FC26E18F86FCFC3F80EC373EDE284067EE60B1326C5B3163A0BF521
DDF51647B5983FE91F6F4D12F1D3F1A780216A4B0D86322A38A5139517E078D2
167657CA8CF3DAFE311BCF57F84B0BD590722A0D8D63CD1726CA0C93F2138A14
C8403194E0CAC29F63A98BD43B0C0D09D9F78178A6B1222E9ABCDBB8CED18AA5
245DB9DE2BB7515A4CCE0A21281D315563895972BEE88BB837BF23DD472A01FE
93EA14C8ED5E9949CD49DD86CCBC1B02D788150D82EEA9530D185C5A012B4AF8
FA0D43DB3850990C8285E8B30A95FE7E65D68DF8951796A6472BD61F3BEAFB3F
CB2A2DBDBCE57EFFC57C044D517459F948A3BE11E4982BDEA3EC24BDA69E31E8
20D41ACA8B779E7E535F50CEC837522163E2CE91D6F49DF26721212E1579760F
CEA56D587E8E6D900A664A30928AAC30E4E16AA1F0DFE69615EC89A258822DAE
5CC0B9E5380E05EF7A9D89F7349EB88B977D156397433C60B99AE719923C6AE3
C993B61EB38EF3A1DD23AEEB4110456758B49C4B75E97026A70A7D06D47649CB
ED0D68811726E41351E349B6167CA5058EE84D1258EFC231FCD25D0F0805B0EA
04ED10F3D442573A56648C90B0BD6A72FD1AC6CF819110E6FEDED3E62A92EF18
4C7B93474C6144C5709B558F764143BC78B3D7608863A70994B375D5FF2024F4
812235B8071F60A66E9FC6ECD98AB9994359D21DEDECAFE3F7559ED070DB27A4
94F96B0B65E6A3B3D3C60CA829844F823F78C4E92BB810D8E0C9126099AE9D4A
C077F1EC1411439667CCB739C47992E13034E04E5807C5FE8BF3F11348204B8B
B3E6A279489887ECA52AEB236017568BDBC98AF7F3D70BBC7FE2A719ACF6ABB6
29E86413CA5EBCA0F8DB437B062D0277BD0CE252E05E49679E6CFAD8BFB9E18E
EAE5FF6FDBE8FA151D081F9FCA0F860FCE191EBA87702CD4F9AB85779A2EFB38
9FA13F463E771F447D2754D3A38806D1C3D5CBCA537912C16DECA5AF0B71A893
FF2C5F39ED3EFDE20F1899328E5CE3F27F58F7FAD5E80F218C11004451F38C3F
05057A670393891B53E7311BC5367C2F8DC8055367933FB1055E3B4C4F34AC30
3668B904BFFA6FF61693FAF103AAC05C4BE35E62AE2E81143278AE160CCCE794
DC4B1771EB33E47EF014766A31E61C66F8DCA3B5F674D4E56982E5A019D84A22
7270D138A0D9B7767292AAD81E5B4186180C7D70697B73BFADE9212B25DBC52D
CBC0278D296FB8094DF33E7E36312287E824BD02D19F898974A0BF0515018956
A098FED59FA08EA8A3E5878CF3795A0514FB67759ACC4C6FBF1E3B7243780870
6A1A9F9128841698D39D7A6620558C0F4AC9679800089C771A6CC556491A618D
5CAF173FF8AB5A689B25C11116C8028E77D0FE5ADDEF0931C9EFBA2B76B02A8A
CAA2BDEDB380026F89F98A68F0B240D5E83CFE4153FDA5E4AACEB1C04E6D1497
58A7F07BC4B979D155DD02D06716C76BB58CB9C0184A57F8A6165211327342A6
87E8FA4798A6123C9A04ED5F1219C8F1496D8A73F1BC3637B8F04D603FDD28E4
809029FF9F796233E628E0B2301D85F0FC49AD0DA112E199447E0C516C8709CD
24D7090BF490E9977036461B66EAC5BB976C6EB6AC6A895DAB0CEAC693810ECC
15C53E710CC7E4C777A842D7FCE8C7FAAB2B6EAE8EDE6D1D2795035A67D5FA81
A5E1417A850C0A493E103668A15C0F87EFD7A47FE78E35FFD8F0C70C6A299E5E
D3C670F1057AD6EF829F191FAEDCFE689A75A7FBE035AEF2FD58B890083829F2
AA379E39BFF15B311165624AD32F0E2576D9850BC6F004E5656B1863FDD479BC
B93F8360327748D17BB25FA0F3FF4DCA2E1328D41D04752496201809EBF558A6
D6FCD7FC9093A62716D270F6128F055C54A35BE50808432282FA76BC3D98CD72
CB318AA3DCAB3E5794DA6CF8E86787836849FDF3BB62C0B38AAD2C96317CB04F
9811C6F91C7FB62445D0F569CA2F96D2E5041083A38A0F478AE6465F7F11D948
FB905A29621C67F4AD043653C1293AABF2A044DC229A0D015614C10AB6D18A0A
76193C1648D2C3826031D360375383BC90036DBD34A382F190D82500080FBA4D
49385E0023880A42F73B20C5CF9C8ABEE12F9E12255C43D16A025AC2E7BF8ED8
3EE9872A37BBC8F5E440297B7052A522F16DEFA10DDA16F1AA7CDF2C4E10F564
A2C6AC226A84633E8564C8F35ECC84F4BF29739CE5F8A969FBCD3E6110897336
A77FD274DAB5FD497380A7466CB5E8602903337BF4700CC8E80950D45FA840D3
609926B76606EF122451DD2380303854FC141326A5EA6FD583183747D39A74CA
226BAD0E6EB1FEC07DD03225CCBE776B85BB7A2F8FDB551079B43B321B48B806
CBF7E31BEB1B0470C602B8ABA9A9863F9335965983DE315304FCFC2D98EA9508
95A7E741DDB9952855FD781F3F7E13F4FCA4D91DA97AFD8561C220F88FCBF22B
1CEBCA089E03EECF3B450FF98F5CA5001043AD2708C39D892A232A3A1E688B81
13C458D53D1A83C0538DF2F8252B6B963B85BB230DFEBE9EF0DCF6CA9C06832E
0BCDBD641B9E673F20AFE5D487426E2D326C0BEF4C80125934B2FB9D7EFAA0A9
8BCC70DE1B82ED795768F7A33721F57F2D2D5A01597AED57B3DB769178274F1B
0D0DD88FAA120FA6034F3E412D6FCD037B6CD8FC21782853C8EAC343E8950F7B
93C9DBE9019F19288B89B5478717FCB8974A7BCCE9FB10CB0FB42E5E69968593
AE32039C487CE95EC2835ABF7A6AFE3BB7C31DE00D8F4D72EC63B0420813497A
C2A59B07C199F94E3D08301AF343C837324B9DFDC8B19D229E17F22E4F250B1A
22884539AADB70685D2674EA59C7C5A4E6966D51538D8B318874755069634717
24C55ABA5C7122F6BB3EB440F1EF76D898D16870AA2B54390A9F5841F2572B99
453EA301FC37AB23E5DAD5F0C921B6F04432284677CFA8D2559C85177C3178C2
EBD1D7DF2BD941BAF85E16C56A813A66210A027E4BC0359FDB76086E7303F912
0C41AB96F42DA937859F3E2C5B02173AD8591C6BC552EF7E6CC0AFEA325AF133
3A69F721F0EB43C84DB1746E33F5C41BE35E2D516A4350D296BC197E9B6C1B27
06DC46F7FEF2A78EE5BD27CD4F9D6D60195E2CAA78CDA9DC4C51FCF794F92617
6F23C5EC706605DB25931D52FED946B725F537572FDB492173D0CEF53AE96223
E63B9726682E15F4066C93BA28F277C75C5CDF56932931D3BD4EB114F6864983
1B149E46088A0754CA32D3445ADBDDADE18CCE4E83467B15C17D2D0C33C824A5
07CB2FB6E384BA8BA81D781FA40536E35125E11CFB8F9039701B65D89857738F
0F6B1E17CD17C3BB27AFB70FE66FB3B8A58B9A6E2A0E50EF82726998224DF71B
5CACD5A65FAD271902F08D1E47084F7B4B1DF2799CE373CA3E14C331C9742197
93DDC708E514026A46682D801AAE769BE7F49BD6526B9A6B5CC590B09ECBD676
D2E3EB556E9B5A0507CA54A849FC2F2D20ECBF0C3E801B71695085E1DF53C0ED
4C97FD331BD93F1270A943B21F24EF9D1479C523E48E327CA0B6B7148727483B
AC390E430C8DBEAC77F2401F474E46D34599AD97A549C2AD13A20A98BCF618B3
39808C173E0CF7C7AE99E54D87C8AE7446DC3A74512FE0F2FF7860E8FD88509D
E66F112F49E63A16F60B6795CF0D93839AE1C947028C70E43447EFC2E50AD555
0235270EA6787A4E115D2AE89BCA5BD92B4A41EDF74BD6546A647368AB44B3EE
BE72DB76EBDD3B6D382A015F745E9413590B9E228449D74DDFA29EF38C14A7D3
1F074565A14EB60996DBF978EAE421062D4C4BC04EA151AFA2F0598CF3B44B17
57A7A4B0088D5249FC285224749DF72BDF967E6D84402C4012F8220DF51D4965
D95D97E1B8DABC09855B40F86C0A1161D0E570228A44665933CF1BBF402DDD67
60965196505025805520E7DFF639D99199C6635AC30898919A53342106EACCF6
39BF2158648FA0DE6988F4EC2094346A6B8B2EDAFA0C2270679A6221DADE9610
5A6DE91D53AC92D56F0953F037D21927825B72492372494E8A43D5C6C205E33C
4F0C8126B151A8985363410A6DC8651684B92F7F53FA4C7B113A7A271471DEBE
FCD7C9F97A589F11E89869BE35B82A8E37C08B50ABAFAA52EC5F28E41AC701AB
2C7A222BCD67C8946F252C693752310C95D0A7E52817689B2AE4567F80DDE0E3
DEBB84FF002A670A1F97831919B19AC58558D91EB479655989A8C3D4C2B86FDA
99E066EA4CBDF6496343694ACBBAD622949ABA1FB3C093670E8CAD3EE46A83FE
867DE833DA3E181E139D2AA8BF58CCE6D3C086645D1BDB1786DA473F4BB90835
343E2368691757281F2FC35633487F2C0FC855AEE853016CBC6216396DB2FA23
11A06BA71B710CDC7F415F2161F6EC1BEAFBCFDD9C8B335E025A19848C29FA7B
3BD09F1D6E4B8F925E543869180F1374F8B233A0B4B2C64F0A8FE98AD94A97AE
DADF621368DD7980ED86A07619942DBE0D1BC7AC4FCF1C07174122E4ADF5B4E4
F9C79BDB5E20667B8E0811D035606F6FBB8D1E9AEBF81BC02746C788F104490D
C1B3A97937AFE44F3CAC5974FF4F2C289B000983EE6FC9812487758BEC50CE0C
7C1B6A1AAE29E7706B4EFFB51B647A1A37AB387BDD3C1965C88688C1B8088785
EDD9C1DA4F9E9A3C57F31A1B749C099DBD22DCB24CA9CFECAB9938F99A2394F2
B5338FB1391989B2350EEE78C24BE58430E839D0751AA4AB1243245D909650BD
9404BED91639395DB88CEF35A4B85060B28F868E7D5604DED821AE4C939B5267
804B0409836AA969DFD991C001C437B231507FF515C5784507F7DA127A424AA8
9CC62667BD404A07E1BA0B051AD3EE2DEB7C6B5766761E290D9E1774A0955F7A
1770C2F25785DB68B9B5EF5D5AB3BABDCD98A63B8F3650F86AE90725D1E7938A
75BF20C63B321F0584F9623A71F05B694C7382FCB80D44D87097839CBA65F0FE
E40BC80E05BFB45CDE88DBA4552AE345DE6D4FB84B28C6B71825F190AE74B9E5
C6D838F9E4EB3CAF8EC7DA2E56B5D00F393FE2CC6D21099E1F32B5F8ACE22418
F08755F0476C5F4682CAD0BC128B8D8AABF60328C5D8EA9F06CEDD915831C557
413E8D68A30FAA12B5FB1B0A554D76F8F374279CDBDC09760D91390F928F45FD
4B8539ECD8418F4DDD94A0ED4E790A79D8AD67234A2C9360790E4981671AE959
AD8846A82AF91F44923F25BAC6773C8AD0A81074C535A182E84F87163A97D16C
6DE238383AC59698E0820FE8C8F061E937B694F26909D20ABC9F2856FFD94E7D
8F0065A4643993D5E1BD1839659AED29D77A91E062D4DBBEDF8CF93BAB4931BA
F911ABA94785E103847CFA0CAEC861EBCCFB9E3EF99A6CB958BA22D8B9D39C20
0B6C19D8F511D1735435936984915F331A5CC5FF3156F5F5BD7937245BD33134
B8E98C87E92B02816664A54C0E43E9C1CAC41F7B495461EE0FC8FEB180B300E3
05257FC91DDF3FFDBAFE3C2A458B828DDF692066C49523AB41242F1D916ED69D
1B7FB6E9F9B4BFD96112F27F9B4CDC7DC12D52AE6A36620F4FE66BAB3F207078
69C5FD40D940A885310CD6D5CA9C351B7BC7ED343F64C6CAC65D8218E75ECDA7
292A0F2FBB4EA92AD516DDFABE69046EB0B0C8C4818AF7E1AC71DAAA4CBE94F3
44716E2AC29402824FF967E18EE39082BF8181AEDBAF4001B1A75E37F0B8EC78
EE59EF00278C493EF6A484B4B9AB0A69C94BB35D55EEFC72CB446B6A3819931F
4477569210EB8C4212CEAFBC79B61186AA832CA1B97B5F372F14E95B0822D8FD
E1D15B9F63FA5C12788E6F9000A4C4A0951F09F5CDA85FDD822B626F0B4DF1B0
BFD553C8ED0FEF53FFB91E213252C58D39514E9BF54D4F1C7DE56207EB2E7480
E1207329949BFAA4259A32EBE4F85396228125B95375FEED86180A4873C30995
6ED6E63C54F89637A3099F1E6F704C5D05B3DE9003CCB87BC8721E40987A445A
D31BD84B91179CCBD40DD4CAE2EDF0BD46DDA8ED86888DDA3065C5091D99EEEA
C430924204A095BB4C89ECDA3A07157E9BEA93937C58C1343F96642F5998CC22
E782B544B4AF7127EA6D5B8FF5A07356990213626E0C22A301504A6C3B746E7F
9A862C9343898B9878E5B2E05B20D542B7E6459FA2CE8C1C8A16918BB4165F7B
BEA39629DD1DC75B729EAFF2D0541674A86A1D5EF517C159A201198ECC69D3B3
5A0BBFE2D61AC370280F726C1C9C1EF05276D10B7C0888F4FED90087BF7E09FD
39B4341967F54537ECCBC61816D57CA78F619760CD44D71FBB7259FF3D745033
E903863C24A3A01D4959844CB66C168D3636E4E4CF454DC4F17115FC318FF184
30B571D1DE58FC6F22A3C5D499DB9FE842BD6E0F2566D3586E219C55EC4EA46E
42986A204F0B48F01CCBBAB88C180322714B666A2F5FCBA48BFB38EFFF24D530
A798C9E05D7B24FADC2B17ADCFCF5FA44BDD9ABC50DAA8A46B6AAB9F67CD2353
B6F4CC7248455994D8DE10D1C286A1F7A9EBF4B766B32DF73B6BA4CDD9BEC94F
C8B7413766DDE50E614ED035D80118AC3960934606CF2CDA1DE786BAB5DFE365
D6D83366B2DBE4E73BFAF85505915AC2225B41F1C71CB8627476F7982AA3C1FD
69E166E6A53CFAB7093DE779A4C2AB8107D8AE714D95108207F8E5EAFE7A2BAF
71931BF539ED60C53E8CE08BEB80A95C546B486AA4DAE8BA43001EADB79244DF
9ADA3D34E7C21782DCCB37B719C10C5A1B5B3D5736168762EA604562763A7C1D
2F668E5AB234D6994EE5E35AB03B09A1E0F4E76D7634AB97167A72810BFAD7E4
0E192AE55C6756DD5D25D06821F2CCF1DDC6FF153BACCB235267755F01E89CE0
D1E7266A1EC1218DCDF768DED05F09BD65583E6B34AA05C0B2CFE5967FA9E46A
F01FF6226917BED8DC26A17D663D0CBA40B3460E609061B5BBA4BD19649A69BD
A18F8E12F6F7E45FE00933038F1B6A2B99570886C4D23C717CC25690A58EEA6C
151590564C593714D3F4AE21344A081F3414032060B05F67D3DB993E2555BE59
D3CF24FEDE2EC799CA0BC1C54B05516837307DB8AC1C0D02ADAE4B0CD3C1CF5C
F71496B5A04CC340DB897299C8D313270378D817BDCAC2D9EEBC5F048B0811B8
F3BF2BBA45C9A57E7B274DA308CCC71EE1321603E2DA2759C4D5180F276BBFB6
590AD88197071E3DA7AE134145C94345A09B0EB515CA3CFC01DCAF8349C8DA94
6483840B6243103434A35902E304D55E56D0515522C449D87EEFB6F84B7EB6D5
7CDE9993D2AD4F956BCABA7F25773631FD9888257E97A14969834F1C32423941
9966C5E7323697319FE79DFE6161E7502EB575B64DD42942BFD92812863D8469
C4A3526B6DCFA81DBD3A13D927138AC671837A508EBF531591F1A56E7D1E22A6
5FB87F274F760D5340E6298B3B7A30E87F9D6EF48AFBE10EED9B1D057C812C77
64050A0F5A78522F0DBED119567EA7C79832D82FBE443764E6A62177C66ACAAA
20500A09579E6495A764298E5767D6881C64BE717E10AA577ED3D55905408D21
4494EEF9B605BC284EE34062E3B392D2CD3156BEEE971CEFA4C610DBBD02FF4F
978B68EB6C23A2082DD65589A2C997B124C1AB303E1C8AC7CE6FDC9AC1D8654E
E99AFEE0ACD9511EAF44E12169115BF4A08173182D09EDCB52276EE252344EE3
024F20E6874F82FFA0929ECBD62D6CB3F0B9E70D33C9A5AF8605160D259331FD
5F3ACEED9CE1963049E64D445AD6455037E554EAC4F36B9D3D121DA31659E274
E69B14F7DBDBFC75C6F822952C8436D8F3FB9FEDF6C6B3D23E77789FDAFC843F
9BCBBE041918B5F56D7739A775113BC1405DC8F90821B0CC40517A3FDD1DF520
AA60246338DE3D4C65A1831479A40C5C4C7A725889284D623CD8E5DF6BC4ADF8
132F779A0FF0F544CE8C5C086BEC650C87AC6908D0C344FF4B5E247E6AA58C7B
3A65D90C4598DE6DF2AA81DF1E7E153E5C905313A67FFD96DE21A4872C7A2E64
3F42D81AB35A7F44050B2198DDB2BD938BA9E0A07C349F6A296A1B68B12EA00A
F956F97BF607D65A6C8F90CDA90EB5BA7954651DE6A4AA6C03AB564001ED02C5
04E4BB48A82649D0E71DFC347D0FC1DBF51B8D7D4865F0B0AF14AFF5F6A5C3AD
8DDC670E85A8AC196F341FA0044157A83A6CB987E1C0442D9FBB38539AE5B64C
3EE1302C8851C763613B3DB11FF0CADCA84441115A0F585097E0D523D2D201AB
C2BC9C88D9709ABD02ECED38F4E4B19ADEAB05EA78E1DD6F6FE073D83ED869DA
3C345162697B92207EA5E13858EDD84CC93649C0C2A306795D2015C68A840861
A6AB8C7F48735914532F6AB4CF487FC29101739FC070DCCA88D2BC7993F98D14
8B333B227D98FD7D7AACE727F2E8F0032883B2BF8D52BA5FCB423C7FDB8A3F88
03C0342BE9A2B01BE72F9B613FA92BD43CFFF6D0AE43C637640FDD14978460BE
5E654836F18A3A1CB8A8D3424283A088E9C11222CF495C14BB5FCA67D1E215EA
AE959E27A01DBA71BB6166B299D96938F3FDF31D90D499E39E83E4AD91AEFE52
40522F519849EECC61B4FFA86ABF086446AA18D71F3202E28D1A83149BDB16A1
AFE7D791B07EB542990B7152083D917DED24E2115D16B2E47E3DC85288B93BB6
35FC7D4135351DC4231BA0D23BC56E74CAC20FF46FA35F34127EE69AD2516DB5
0A9F925106F0ED8E8E667CC51FDBC2A0536541D2EC1561421727FEAE49D0A85D
7764EBB31166A29307F6343DCA5AE98321DA74E4345EDB25665463433953096C
7C0CC05409CB17A5920E0BDE7C64BBC23EA554AAC9BA95BA57603A8CD89B4CA2
6AC95599776889FDC612F41DBE3CFBAD4384FD1DF28F9BAC4E7AA24D3457FEB8
83C7B39940588657E97EC8F77D6F54DCBD0B9EA535A6C346A08DBE65B1C054C0
587AFB35100BC7688A83FCA0C342E95FB053CBDAB825988EF44CA9EB4477005D
177375CF02D031E0E8A39F334959E7F9B0AF8E28A9BFA0254541A3FE4712B1D0
739BEA5B0586EDC6E2E7F61136E5C76F823D29D35078412923DBB3A32176EFCD
C10D9FB34EDEDC15BE430F1B98BBE7BE6677BEE12E6433F37B225D1A63E440A7
19CD8CC6D148F1442F1381DBD0381713A93E5F02E55EF58E729E06BA415230C0
596A9A9F77CA4E19A46F1A7B1DDC2629AFE8BAF9435EB8791DF666B3F4FD6493
CA2A307B3D99A7E2A0E8BC3DC6A15D81FE258589761269DE4E4E4F911E68000E
98D0AD8A4324CC9935A6E4D3B6A6E33D72D748E5F80F5808E910016246849EDF
70EF99B1C95A296106DE15CF1B4D75EC5B5167D5DD99FD599854B6929F99828A
E51D665575B881B04DC1C56AED7E3E83B767E4E968204B3BAAD1919A7B4EC086
7AE2471C93412D93033DFB7D2B2F19E582C4326645BE24D02AFF56B18D6E2E15
03E9DBC77A09C0B252E892E1E6E683D2545B0EE0343D1FF764ED045DE999337A
4E47B6AF1DA4DF3CE382EA5BE130B7D315D5B98748EF1026842941142B851D45
A67FDA34DE10D99168B67767CD4A16107CD330609D20AC2CD1754FC84C08182C
EBEAA4F656E9BC0423C31DDE18178B7CA02251728AC976266C3DC920559EE4F7
3496FDD2B58F8B140D4259F272A01C5800D5233F46E4D3D830E9CA83BABE929F
22E284DC549418D190B1C581260C7A5203CB5C00D654FE4FD0FEEE3B1A9713DE
E9400F5F752721620DB1801182B7104EE23CDA2BA79B2A09D55626FD09C0DA1E
332A369234CEB9717C549F0621404F673D424112ED9EC733BDB710492714BBF9
52A4EF7713EFC7017A63899555D3625CF1DD29199237B98DA402B1210A09757E
2EAA6F66145B9FE3C31201F240B5ABA0F455DBD4F8C7D91BE31820EA9A4878ED
27E515FED0D26FEEE69602B2BD58D146C5689A97BED4C33668C231EF31A4D575
0105FEB6F0C7AE50CEB96D1CC91AE662CB73E8AEDBE67630BE15510509C321D8
8A5B5CABE42C997B9037249EDE4DCE4030B2529A35B41B4B6200D8F97BB70323
1B4C20F5355926295A31AE17B3A5F26C726618551ED6F3B85C5DB458F830D553
9BD64CFC759E582364830BB77F218FB837E7B357C3C2EE1DA5DB1D28EBEFBBBA
F4A67B419CB12F756124BF83327ABA9BF4FC631A0C534836FB4620F25EC9A126
9BFE39931979202D3AB929B32AEC0947D1ECB82B90FB04F171DE3E154262B37B
D16AF15612ED9AC48BF60CFF85EB4E8B716C4A30853D90BE54207C2842045E4C
B16FC9F2FDCACE7C62913054F9FABFDD9A08823E4FE32710DB207D01C4AADA19
797B2A3AAC758995A7355F79D0696406789B352CAAA2E1A47767726BD5568FEE
2FC810F914909410FC060C5081A47B223BF13C0D6E72189EC212204E92811BCB
1BFFC7A1246653E07A2614E51D3DD986B213BD9D0726F7C29944270D4685080B
FEF325C6AE3E80A85AF6FE273EF9C015F22DE6C9243DDF49AC557D3B10B1909D
118F5C0299439E242E070DE66B07051543E1F47C3548E49216ED3D620588A8D3
D7D1050AF57E4ECF56C9B895C2B0CC01A76BDBF90C69DB558B26A004A3182665
3E500F71B61A28962C501FD7FB6CC324E2543BBB163DD66E89F2383C2127D4FF
29C503321536F228AD04B333EF569635D42C11E120CBD1E6B89A276648FD74B1
077724560AA6AFDB6EC9401084DE86F3A10496CD8D787202F8B55AF2922B6C71
3C2AE046ADA1053A2E265AC2F21881EE4A59FF5C5FA95025C49B023D993830A0
1CE6A4F8BA8424B999CCC8C9F3FB3FA414D0B5841067A0B618D05A149DFA4658
7DA67BA7005F512DB466CC044347E34EA72ABE84E54340FE82B7E0A624F3593A
1819CB2732460837EDC62035D7D232AD000EDAD3C893137BCE2E4D53089C9246
ADCF057578194EC0472FD2892AF19D50CFF1C8E6F121CE477BC13FB3235F57EB
2EBA7622E2E44E7C653774029E709393A4F8DDC88432FED49505395BC6E9DC47
7F6807DD209828B487303441A331C88C9A9E4F56B7C1F6417B810427A63160EF
D909AA2FFDA24456666C28476F9C08001CA1508B0EDD5F44D70814F5DB640CFD
D8221C0434208142C0B9108FBDECCE31F868C5092BE089745D082DFBA7395913
C4322BBCDE55A3B4E6D1DCB67230EFF30206CCB55EE9863BFEFA52B92FB2BAFA
29EDBDEDA20C53D363741FB1F4063CEC62718EDF4CCA777CD3B07F91EDAC559A
220F29084DD86CDAD022DACF326AD2F36FD2EB62CF4C2B70796A23BE1941E27D
A08DD533DC0E8D85F9DAFC5FD842F417265427E6AE1AB79B8A2E285ACE63FCB0
B137685611FDDAB2E8FEB60020FA526840EF5367946F3DF67C10B47377A99EBF
027B1CC421D34F98B69FF4C335B95F4222A8BAB77664299C8FC166975ED6FB9D
EE4585381F74DD1E8BE9F6E73E463E777B06DF048FAC43FC281ADE45FABED5C9
79A0B13651191055025C731C764200BAC03D1AA472AD0AC9E5E0237AB288B5E6
B4F9091D3510AA88179260F7A7B648ABDF6D983D1E4A85C06190EF3A270698F6
B9230D2F73C76DE6CACF4C3FF495F0D3B1317D4933E1E097ADD2EC8BA4920936
32772BF8651FCEC755AD3CEF2F12B824BA83AB4B5C05CF35E2755E402A65D0CB
629EF2CA6B939B4B19E81AB48787322CC28C39B007A51A697ABD5B0453A790D3
EE4D718A152ED97CFBAAC74BD47A130546199EA7641B86A59DDD0434D2C6361B
3B70BB6434BE1E50D4D584CAF5A2D3F57EB5C1A1E86884E926C0C50B95EAA94F
686169AC4686EA4A7B2197B65E328BC84527AC60B148CE6F2CDFA31AE0398C80
3D07914840A16F29C0CF174AD039C511BB5D4F13D7B1D160C7C20F9EF9B7CB7F
1D174B2E94953F541C3B84D435D989A4A79CBBA5A0F7542C816802F29485EED0
1AD9631F2AFBFB1F3A49E2B149F0E5A7EAAE21CFC17AEB484AD4D7D309090171
9F072158DF40AA7C78D128AF38AD30D48BE6D0DACBECAFBFEF8E1885081943A7
57218D16DFF034FA6CA3E19BE891AB08ACE7DA19E2F50FAE0EB69FF182B652B0
0C5A00AB8705257A86E59953642D6C2D2169C422DCC6B9CAB13BBC139E9487F3
38415EFA2C253B8B9A863BA0A83115E8AED878484FAD3448F4BBFCD65FFF1960
76AFDDFABE9CC46A2DA6AA3E33A045451587F5143B511B47B3B6FDB110BF87F8
ADA28B1791D942396499C918F7D2E8FE4BC43AFC8D57D4D7F60F0329462D2A60
976CDB2035BA06E80AA6BE0A001415F381236D587307FF1E78EBBC6C56A8E448
153895A30B4A82AF5946FE5642CDE557438DEB07F64FBD7B73D99CAAD492FC6B
FC93955906D58BA77D787C4130038FF6AE864A21702963E549C2500A57B2A13C
CC8B93FFC4B86B56E844E60A4DB4CD5F30D44985135A7DF2E17B25EADCCFCFB6
2238D8E4E90FE38F5643412C907A02188361D42ADCF0A5F91A2B74D14AD3BCEB
50B7E52DEBB6DFC02D0CC6C2823E35308E1496F53393D85564084FE5B4D637C3
A90F49453FD3B34C1A1746F411E9C397C2030C75E1D7F4D8AEF122145CD0F1C9
8A2EFCA1A117133DD39BC60F687306A103E5404CB67F2E1799CC7AD881CD1277
452731409EE7F661AC6FA01EDC9F39CDEE603C8F354C7EB7BF8F03165403B5ED
D0897269186E9B9BDB90A1C44D61641030BCD7567E943CAF8038C03C57418377
255201AE91F48B7FC2A20531EFF98E8EF876D73AB1D963C8365E8B0C46E6F7E3
85AB9527A8B91C3820738A70AC169757D9D3424A06C71BCA24662FF0B6783E35
7BF2DB29034B3007E7EE6D7951DD24BF3CADEE7E8C956454650FC6D9ECFF2EAD
25C8BCE3D6EA26F2383C1CAB8F5DF91B2EE1AB581503A048851F5B22B3595FFF
15A403AFC2AACE049270C259B40DFF9DF2E875C0EEB4E1430CCE3FF086F5C4F2
85F9BD614A00DE9842C6C1F543F61BE56DE0798926A2D0D47BBAB55DB582FBE6
03D54C4AA7239BDB7977AB83D8D5B8ABAF9BA83AC5497B24F1A2DE89A285CB72
13D430B15EE3D6A229DB7481E2718C4742058FE11EF2D0FAC6819F13BE58CC19
0AE44353384AF650C7105EE5782CAB781B51642A598587A920DB4968B8550B85
434D7D0C9EE4E43D7F66005D683ED5A0DA340280B48ED4D5BDB2F0227AE436F1
8332DA52D7F05E28FF7C0A5760CD6959497D1CC581BE192F053F1BC7F4504566
A00153759083DBE7DA22DD8C4C17450AFEF42308FEEF82A82AFA37AF471A3511
17354F915A9099A350CF1C6832291A93BC3000724A48038E108CE3421A588FF5
5CB4D60960DB2C39A4253788981D39008C1B42369BF74E804A63CB5CB5045BC5
122C44C947805CEF8C112326B50E6890573E7CD802FE8D4EF438F9E6C14D8F4C
6F3DC64A21D4A1F98616A25FB91D833E5D65D79F326770380E23CA7A537D3233
776E5CD4242773F4FA925855637E5973906C82D5AB21CF4734F72302597BFF0F
12D71DC0010A18F657631B2D61A42E560A9D1D287B568CB934F2B0E7F1B5B2EA
1E36E44ED52FA2E21E18326C4DD7F02DC51F9FE982D4B29DF4C2F2E5D0488098
BA960D5725BA4FEAC0498BEFF3EFFA37A158457B984427E44E87E9E4467605FB
8B7A51E29D47553DF9F2DAA6268584F43C8615CCC673161306F5A21611DA2F7D
7711638D5760569498B6A789D70DA091BF19F9C05A2251437A1B9F3F1D15222E
BE8869F9128BDB69EAD71FDCDDECEA8155FEB712944BB0331153413AEF95B995
A1A91254FAACEFB0CC1B6AC4DE2E96711618D3D0425B8BDA2CEFBB7AEA561318
968E917CB900F7ECDD5FB29B08D5DE58300B8E435E38CDDB9642B8DEF4187B29
488FAE43C553531B0BC71E99010E11E6D49C77FC5E4EA38B957D4D8125F4FEB0
05030DF7DD0CA0992EF4B416398EC370DED80B0C4AC46FD25C7F1D73DB638835
D3E1640678FD4ADFBEDD8AB7DADB538E8A5E9E81BB1367DC2424A3DA074D00CA
1DC65618D023D2A1B0B893FEF024FFC8DCCE3963A88D8596FC07668BB2D48D5F
F91BFC2A2F04AB5D1627FF62CD21A7C339A3AF1F6C38AAEAA92175245399658F
955BF73F3817469670BFFCFEB36C18505ECED9D627D1DC79328B604A672AC20F
3AFF6F33E7FD0AE1D6D469DCDDF85393830942FC77DBB1E77FCE0D9E7AE7F117
DD96D2290579FA26175A38CF69B6128DC610ACFB174F32FCDA4BBA198AA80B2B
2C237098947082C68D85829F6F6F6D887F551499F1D5E771A67C2D7FC5AD9AB4
DA2C553A5EA8C4DA9C56A0E7FD54D572B947B7989B8E6B1094BDE969A3210FC1
CEA674D566371189CCC47A423FFA5074442E88CAB1008F7CA2D22A5CBE741A5E
E5D819BF39D75DC383C412864B9163562F10D223B99C055C72FBB4319EA53F0E
0C2177AE5ADDCAED64B9038DE55A1FEC08FC1F1DD8BC44AC78B5C98E0F9F2CA5
F1F981F4E5DF503E2238EF2F7929B84705A8E9EA09B917B47543E5EF25C3577F
E4BCCDD3AF4B0DBC9D59A5590D7EF5BD630A3AD42E034DFE431A13ECE527F7D5
E6AD2D407E03DD4B3C95ACAA44D2F769CA8A9D06CC117CC2C4B4725AE5824D12
46F33AE2C1233DB7DDDB64411CF3A4CC36BB8CB58E9803C5C45AB07F1F2B5111
C5352B547357EEC15473C3646255E70F4136FB2273FF484B9D28914EE3E742AB
405D1C25B8E2A246C5417C123B9FA786420D0813DF05311D1AB695270182CC96
9590A8601993C43E0BB8250E0F608A5737F03BCE6C46849C30D8C2C3A8788FCA
F0B9071F6A775A675F955B0182228D0313BE7D3D4B447A4226F1187EB1F3CB59
F11D42512830F1B35818EE8ECA30D88785FD16B1DBD9D5BAFA76F6CABE1061B7
C27DB3DB2D7C6910354BDAECB0ADC7797C5AE615CAB495F8B030600C53FE956C
2991F585015CB00AF5E63CBA059196F5B0A437485B2E7D3CDFD62998657F73B1
2A464DA6D0E685644B58DB22AA980A4508E6990A096148E2E183D43A105DABEE
54A879DDBAA9230C3B2C0290212256ED144A3FC0389CD21E1B2166EB861F6518
5E68D1F5145B5EF2754DC02FD1F48CE28F360CA368EBC5F3BC1302CBC50E99E3
26BF61D7681C2264F9311C0FAD646CAC923551093525EB5729D8AFEAF26CB0F8
6D1708550812DA122349E112AD7776C005EFDB3183DC205ACE22DB506EE50652
74F071D21959828EF41E87595C6030C88FE3B6070C72DC9FD612C0EB4F33E38B
18024A9D83FB4E3E7B24174A0A674E38482121877E11976377BC6AF6680CAAF0
D56B7FCA5EE6542DD925AEE6FAD75D0B8A24E649F9FC87745C930DB3E8BB4EA3
34E5EF22DF92B38211C41DC18F39A688C0CBAA6606E892B24F519DEE77856E69
64B875D8FF128DB3D74F1C781FC229D94F294AF4E24B62F02115A7D25AE63FD6
4C0CBE946D059C108E44AF61B5B6077448B3C72507AB54A30648078C00877FD4
C47DFCA68CC48966F2D162A8DEEE49513DE1CC3A5CAA128EE082C60CB97E425E
AE7257437AE8DF721F24886CD4EF6CA5FB72C08F37F22E9CC7226231E843720E
CA08F60B751A788C81555A4EFF89213E0188AE55926C74AE38DA27E9BADA0CDF
82AEFBBB276DD1F199A2583ACA595353B1984A9145540243643B9C3417305B29
BAAD2D8760D8248572497A3045A5FD0B5DBFF8C2B4F0A827A94CF2193CEE0961
7737B02A39C4A3EFA61109283067A8BE6F356E70EC801569E010D6ED313B9280
A297B81EF6439F23C86C9C67AAE295BBF092CF681DCEC68F22BFFAC25476C8FA
C3A4706EFBB8ED0EF26F2148169427A2660BE4637270990AA3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktional)
@start /Fa 205[406 406 49[{ enclmrm ReEncodeFont }2 664.176
/LMRoman6-Regular rf /Fb 135[530 17[452 102[{ enclmmathit ReEncodeFont }
2 885.568 /LMMathItalic8-Regular rf /Fc 173[959 82[{}1
1328.35 /MSBM10 rf /Fd 185[723 4[830 12[553 1[553 3[307
46[{ enclmec ReEncodeFont }5 1106.96 /LMRoman10-Regular
rf /Fe 160[909 45[606 1[606 47[{ enclmec ReEncodeFont }3
1212.12 /LMRoman10-Regular rf /Ff 201[0 3[886 16[1328
31[369 1033{ enclmmathsy ReEncodeFont }5 1328.35
/LMMathSymbols10-Regular rf /Fg 199[470 5[470 470 470
6[366 366 40[{ enclmrm ReEncodeFont }6 885.568 /LMRoman8-Regular
rf /Fh 203[993 52[{}1 1328.35 /wasy10 rf /Fi 153[288
47[470 1[470 470 470 470 470 48[{ enclmec ReEncodeFont }7
885.568 /LMRoman8-Regular rf /Fj 194[1012 4[650 1[650
650 650 650 650 650 650 4[1012 1[506 506 40[{ enclmrm ReEncodeFont }12
1328.35 /LMRoman12-Regular rf /Fk 135[739 12[676 4[641
1[676 560 28[842 2[931 7[361 59[{ enclmmathit ReEncodeFont }8
1328.35 /LMMathItalic12-Regular rf /Fl 241[470 13[732{
 enclmmathsy ReEncodeFont }2 885.568 /LMMathSymbols8-Regular
rf /Fm 3[723 5[650 17[650 105[578 1[686 939 686 723 506
513 506 1[723 650 723 1084 361 686 397 361 723 650 397
578 723 578 723 650 6[795 2[1336 2[939 723 4[975 1192
813 1011 668 2[1021 849 885 993 939 1[975 1[614 3[361
5[650 650 650 650 650 2[361 434 361 2[506 506 6[361 5[759
27[{ enclmec ReEncodeFont }56 1328.35 /LMRoman12-Regular
rf /Fn 138[1196 837 849 879 1[1196 1076 1196 1793 598
1136 1[598 1196 1076 658 982 1[956 1196 1046 12[1497
4[1616 1682 2041 3[801 2[1353 1412 1[1554 1530 1625 11[1076
1076 1076 1076 1076 1076 1076 598 717 45[{ enclmec ReEncodeFont }37
1912.83 /LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fn(F)-239
b(A)717 b(2.4)g(-)h(1)f(T)-179 b(emp)60 b(eraturskala)715
b(-)i(MC)h(-)g(BIFIE)p 0 TeXcolorgray -741 4800 a Fm(1.)p
0 TeXcolorgray 651 w(T)-108 b(emp)36 b(eraturen)374 b(w)-36
b(erden)376 b(b)36 b(ei)375 b(uns)g(in)19571 4318 y Fl(\016)20097
4800 y Fk(C)471 b Fm(\(Celsius\))376 b(gemessen;)g(in)g(einigen)g
(anderen)e(L\344n-)921 6792 y(dern)433 b(ist)g(die)h(Messung)f(in)14635
6310 y Fl(\016)15161 6792 y Fk(F)614 b Fm(\(F)-108 b(ahrenheit\))432
b(\374blic)-36 b(h.)921 9338 y(Die)434 b(Gerade)f Fk(f)576
b Fm(stellt)434 b(den)e(Zusammenhang)h(zwisc)-36 b(hen)29428
8856 y Fl(\016)29954 9338 y Fk(C)528 b Fm(und)34015 8856
y Fl(\016)34540 9338 y Fk(F)615 b Fm(dar.)p 0 TeXcolorgray
0 TeXcolorgray 12165 34894 a
 currentpoint currentpoint translate 0.30904 0.30904 scale neg exch
neg exch translate
 12165 34894 a 12165 34894
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 657.33104 a add def
/d 0.0 a add neg def /h 678.02501 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 12165 34894 a 16965 21281 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 17.64055 510.0103 17.64055 -0.56917
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 517.81032 -0.56917 17.64055 -0.56917
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 472.88445 454.67471 472.88445 -0.56917
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 17.64055 454.67471 472.88445 454.67471
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 17.64055 198.60002 472.88445 198.60002
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 188.35701 -0.56917 188.35701 198.60002
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 502.6236 481.4399 17.64055 44.95538
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
16965 21281 a
tx@Dict begin  { 28.46402 541.65971 } PutCoor PutBegin  end
 16965 21281 a 996 x Fk(f)142 b Fj(\()p
Fk(x)p Fj(\))433 b Fm(in)21449 21791 y Fl(\016)22196
22277 y Fk(F)16965 21281 y
tx@Dict begin  PutEnd  end
 16965 21281 a 16965 21281
a
tx@Dict begin  { 498.33415 59.61678 } PutCoor PutBegin  end
 16965 21281 a 908 x Fk(x)g Fm(in)19655 21703 y Fl(\016)20402
22189 y Fk(C)16965 21281 y
tx@Dict begin  PutEnd  end
 16965 21281 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 472.88445 -0.56917
  false NArray  /DS 3.0 0. CLW mul add 2 div def /Times-Roman 0. [2.3
0.0 0.0 2.3 -0.6486 -0.5819] FontDot /Dot { moveto gsave 1.  1.  scale
<2B> show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 16965 21281 a
tx@Dict begin  { 454.5119 -29.24463 } PutCoor PutBegin  end
 16965 21281 a
0.25 TeXcolorgray Fi(160)p 0 TeXcolorgray 16965 21281
a
tx@Dict begin  PutEnd  end
 16965 21281 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 46.09329 -0.56917
  false NArray  /DS 3.0 0. CLW mul add 2 div def /Times-Roman 0. [2.3
0.0 0.0 2.3 -0.6486 -0.5819] FontDot /Dot { moveto gsave 1.  1.  scale
<2B> show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
16965 21281 a
tx@Dict begin  { 34.55043 -24.3756 } PutCoor PutBegin  end
 16965 21281 a 0.25 TeXcolorgray Fi(10)p
0 TeXcolorgray 16965 21281 a
tx@Dict begin  PutEnd  end
 16965 21281 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 188.35701 -0.56917
  false NArray  /DS 3.0 0. CLW mul add 2 div def /Times-Roman 0. [2.3
0.0 0.0 2.3 -0.6486 -0.5819] FontDot /Dot { moveto gsave 1.  1.  scale
<2B> show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 16965 21281 a
tx@Dict begin  { 178.18956 -23.15822 } PutCoor PutBegin  end
 16965 21281 a
0.25 TeXcolorgray Fi(60)p 0 TeXcolorgray 16965 21281
a
tx@Dict begin  PutEnd  end
 16965 21281 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 17.64055 454.67471
  false NArray  /DS 3.0 0. CLW mul add 2 div def /Times-Roman 0. [2.3
0.0 0.0 2.3 -0.6486 -0.5819] FontDot /Dot { moveto gsave 1.  1.  scale
<2B> show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
16965 21281 a
tx@Dict begin  { -22.66154 449.1462 } PutCoor PutBegin  end
 16965 21281 a 0.25 TeXcolorgray Fi(320)p
0 TeXcolorgray 16965 21281 a
tx@Dict begin  PutEnd  end
 16965 21281 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 17.64055 198.60002
  false NArray  /DS 3.0 0. CLW mul add 2 div def /Times-Roman 0. [2.3
0.0 0.0 2.3 -0.6486 -0.5819] FontDot /Dot { moveto gsave 1.  1.  scale
<2B> show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 16965 21281 a
tx@Dict begin  { -21.44461 193.5178 } PutCoor PutBegin  end
 16965 21281 a
0.25 TeXcolorgray Fi(140)p 0 TeXcolorgray 16965 21281
a
tx@Dict begin  PutEnd  end
 16965 21281 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 17.64055 27.88356
  false NArray  /DS 3.0 0. CLW mul add 2 div def /Times-Roman 0. [2.3
0.0 0.0 2.3 -0.6486 -0.5819] FontDot /Dot { moveto gsave 1.  1.  scale
<2B> show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
16965 21281 a
tx@Dict begin  { -11.7061 21.88138 } PutCoor PutBegin  end
 16965 21281 a 0.25 TeXcolorgray Fi(20)p
0 TeXcolorgray 16965 21281 a
tx@Dict begin  PutEnd  end
 16965 21281 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 17.64055 510.0103
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(u) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 517.81032 -0.56917
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 270.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(u) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
16965 21281 a
tx@Dict begin  { 285.31021 301.8554 } PutCoor PutBegin  end
 16965 21281 a Fi(f)16965 21281 y
tx@Dict begin  PutEnd  end
 16965
21281 a 84929 34894 a
currentpoint initclip moveto
 84929 34894 a 12165 34894 a
 currentpoint currentpoint translate 1 0.30904 div 1 0.30904 div scale
neg exch neg exch translate
 12165
34894 a 855 38878 a Fm(W)-108 b(elc)-36 b(he)530 b(der)g(folgenden)g(A)
-36 b(ussagen)530 b(kannst)h(du)e(der)h(Abbildung)f(en)-36
b(tnehmen?)530 b(Kreuze)921 40870 y(die)433 b(b)36 b(eiden)433
b(zutre\033enden)f(A)-36 b(ussagen)434 b(an!)p 4730 41837
36925 45 v 4730 44900 45 3064 v 5438 43697 a Fj(160)7388
43215 y Fl(\016)7915 43697 y Fk(C)528 b Fm(en)-36 b(tsprec)g(hen)432
b(dopp)36 b(elt)433 b(so)h(vielen)26515 43215 y Fl(\016)27040
43697 y Fk(F)181 b Fm(.)p 39245 44900 V 1 0 0 TeXcolorrgb
39953 43701 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 41610 44900 V 4730 44944 36925 45 v 4730
48007 45 3064 v 5438 46804 a Fj(140)7388 46322 y Fl(\016)7915
46804 y Fk(F)614 b Fm(en)-36 b(tsprec)g(hen)432 b Fj(160)18410
46322 y Fl(\016)18937 46804 y Fk(C)95 b Fm(.)p 39245
48007 V 41610 48007 V 4730 48052 36925 45 v 4730 51115
45 3064 v 5438 49912 a(Eine)434 b(Zunahme)e(um)h Fj(1)17017
49430 y Fl(\016)17544 49912 y Fk(C)528 b Fm(b)36 b(edeutet)432
b(eine)i(Zunahme)f(um)g Fj(1)p Fk(;)p Fj(8)36670 49430
y Fl(\016)37196 49912 y Fk(F)181 b Fm(.)p 39245 51115
V 1 0 0 TeXcolorrgb 39953 49915 a Fh(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 41610 51115 V 4730 51159
36925 45 v 4730 53964 45 2805 v 5438 53019 a Fm(Eine)434
b(Abnahme)e(um)i Fj(1)17198 52537 y Fl(\016)17724 53019
y Fk(F)614 b Fm(b)36 b(edeutet)432 b(eine)i(Abnahme)f(um)g
Fj(18)36666 52537 y Fl(\016)37192 53019 y Fk(C)95 b Fm(.)p
39245 53964 V 41610 53964 V 4730 54008 36925 45 v 4730
58815 45 4807 v 5438 56627 a(Der)434 b(Anstieg)g(der)f(Geraden)f(ist)i
Fk(k)414 b Fj(=)26352 55728 y Fk(x)27091 55927 y Fg(2)27912
55728 y Ff(\000)296 b Fk(x)29980 55927 y Fg(1)p 24557
56317 7743 45 v 24557 57538 a Fk(f)142 b Fj(\()p Fk(x)26585
57737 y Fg(2)27111 57538 y Fj(\))295 b Ff(\000)h Fk(f)142
b Fj(\()p Fk(x)31269 57737 y Fg(1)31794 57538 y Fj(\))32802
56627 y(=)34315 56104 y Fg(100)p 34315 56317 1412 45
v 34315 57085 a(180)35859 56627 y Fm(.)p 39245 58815
45 4807 v 41610 58815 V 4730 58859 36925 45 v 47992 4800
a Fe(___/1)p 1 0 0 TeXcolorrgb 48228 6792 a Fd(F)-123
b(A)369 b(2.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 62887 54804 45 v 0 TeXcolorgray 24746
81281 a Fm(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fn(F)-239 b(A)875 b(2.4)h(-)g(2)f
(Charakteristisc)-60 b(he)874 b(Eigensc)-60 b(haften)874
b(einer)h(linearen)-2331 4515 y(F)-179 b(unktion)715
b(-)i(MC)h(-)g(BIFIE)p 0 TeXcolorgray -741 7823 a Fm(2.)p
0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(ist)h(eine)f(reelle)h(F)-108
b(unktion)433 b Fk(f)576 b Fm(mit)433 b Fk(f)142 b Fj(\()p
Fk(x)p Fj(\))369 b(=)f(3)p Fk(x)296 b Fj(+)f(2)p Fm(.)921
10368 y(Kreuze)433 b(die)h(b)36 b(eiden)433 b(Eigensc)-36
b(haften)433 b(an,)h(die)g(auf)g(die)f(F)-108 b(unktion)433
b Fk(f)576 b Fm(zutre\033en!)p 5416 11335 35552 45 v
5416 14553 45 3219 v 6124 13276 a Fk(f)142 b Fj(\()p
Fk(x)295 b Fj(+)g(1\))369 b(=)g Fk(f)142 b Fj(\()p Fk(x)p
Fj(\))295 b(+)g(3)p 38558 14553 V 1 0 0 TeXcolorrgb 21821
w Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
40923 14553 V 5416 14597 35552 45 v 5416 17815 45 3219
v 6124 16538 a Fk(f)142 b Fj(\()p Fk(x)295 b Fj(+)g(1\))369
b(=)g Fk(f)142 b Fj(\()p Fk(x)p Fj(\))295 b(+)g(2)p 38558
17815 V 40923 17815 V 5416 17860 35552 45 v 5416 21078
45 3219 v 6124 19801 a Fk(f)142 b Fj(\()p Fk(x)295 b
Fj(+)g(1\))369 b(=)g(3)296 b Ff(\001)f Fk(f)142 b Fj(\()p
Fk(x)p Fj(\))p 38558 21078 V 40923 21078 V 5416 21122
35552 45 v 5416 24340 45 3219 v 6124 23063 a Fk(f)g Fj(\()p
Fk(x)295 b Fj(+)g(1\))369 b(=)g(2)296 b Ff(\001)f Fk(f)142
b Fj(\()p Fk(x)p Fj(\))p 38558 24340 V 40923 24340 V
5416 24384 35552 45 v 5416 27602 45 3219 v 6124 26326
a Fk(f)g Fj(\()p Fk(x)8152 26525 y Fg(2)8678 26326 y
Fj(\))295 b Ff(\000)g Fk(f)142 b Fj(\()p Fk(x)12835 26525
y Fg(1)13361 26326 y Fj(\))369 b(=)g(3)295 b Ff(\001)g
Fj(\()p Fk(x)18471 26525 y Fg(2)19292 26326 y Ff(\000)h
Fk(x)21360 26525 y Fg(1)21885 26326 y Fj(\))434 b Fm(f\374r)f
Fk(x)25623 26525 y Fg(1)26149 26326 y Fk(;)221 b(x)27470
26525 y Fg(2)28366 26326 y Ff(2)368 b Fc(R)434 b Fm(und)f
Fk(x)34354 26525 y Fg(1)35249 26326 y Ff(6)p Fj(=)368
b Fk(x)37368 26525 y Fg(2)p 38558 27602 V 1 0 0 TeXcolorrgb
39267 26326 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 40923 27602 V 5416 27647 35552 45 v 47992
7823 a Fe(___/1)p 1 0 0 TeXcolorrgb 48228 9815 a Fd(F)-123
b(A)369 b(2.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 31675 54804 45 v -2331 36976 a Fn(F)-239
b(A)634 b(2.4)g(-)h(3)f(Eigensc)-60 b(haften)633 b(linearer)g(F)-179
b(unktionen)631 b(-)j(O)-60 b(A)635 b(-)g(BIFIE)p 0 TeXcolorgray
-741 40284 a Fm(3.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433
b(ist)h(eine)f(lineare)h(F)-108 b(unktion)433 b Fk(f)576
b Fm(mit)433 b(der)g(Gleic)-36 b(h)g(ung)433 b Fk(f)142
b Fj(\()p Fk(x)p Fj(\))369 b(=)f(4)p Fk(x)296 b Ff(\000)f
Fj(2)p Fm(.)855 42829 y(W)-36 b(\344hle)429 b(zw)-36
b(ei)430 b(Argumen)-36 b(te)428 b Fk(x)15200 43028 y
Fg(1)16155 42829 y Fm(und)g Fk(x)19491 43028 y Fg(2)20446
42829 y Fm(mit)h Fk(x)23565 43028 y Fg(2)24460 42829
y Fj(=)368 b Fk(x)26579 43028 y Fg(1)27391 42829 y Fj(+)286
b(1)429 b Fm(und)f(zeige,)i(dass)f(die)g(Di\033erenz)921
44821 y Fk(f)142 b Fj(\()p Fk(x)2949 45020 y Fg(2)3475
44821 y Fj(\))269 b Ff(\000)h Fk(f)142 b Fj(\()p Fk(x)7581
45020 y Fg(1)8106 44821 y Fj(\))421 b Fm(gleic)-36 b(h)421
b(dem)g(W)-108 b(ert)421 b(der)f(Steigung)h Fk(k)466
b Fm(der)420 b(gegeb)36 b(enen)421 b(linearen)g(F)-108
b(unktion)921 46813 y Fk(f)575 b Fm(ist!)p 1 0 0 TeXcolorrgb
921 51350 a Fk(f)142 b Fj(\()p Fk(x)p Fj(\))369 b(=)f(4)p
Fk(x)296 b Ff(\000)f Fj(2)370 b Ff(!)f Fk(k)414 b Fj(=)369
b(4)921 53896 y Fk(x)1660 54095 y Fg(1)2555 53896 y Fj(=)f(3)434
b Fm(und)f Fk(f)142 b Fj(\()p Fk(x)9649 54095 y Fg(1)10174
53896 y Fj(\))369 b(=)g(10)921 56441 y Fk(x)1660 56640
y Fg(2)2555 56441 y Fj(=)f(4)434 b Fm(und)f Fk(f)142
b Fj(\()p Fk(x)9649 56640 y Fg(2)10174 56441 y Fj(\))369
b(=)g(14)921 58986 y Ff(!)g Fk(f)142 b Fj(\()p Fk(x)4646
59185 y Fg(2)5172 58986 y Fj(\))295 b Ff(\000)g Fk(f)142
b Fj(\()p Fk(x)9329 59185 y Fg(1)9855 58986 y Fj(\))369
b(=)f(14)296 b Ff(\000)g Fj(10)369 b(=)g(4)g(=)g Fk(k)921
61532 y Fm(Es)523 b(k)-36 b(\366nnen)522 b(b)36 b(eliebige)524
b(Argumen)-36 b(te)522 b(gew)-36 b(\344hlt)524 b(w)-36
b(erden,)523 b(die)g(sic)-36 b(h)523 b(um)f(1)h(un)-36
b(tersc)g(heiden!)887 63524 y(Jedo)36 b(c)-36 b(h)395
b(m)-36 b(uss)394 b(die)h(Argumen)-36 b(tation)395 b(in)g(jedem)g(F)
-108 b(all)395 b(k)-36 b(orrekt)396 b(wiedergegeb)36
b(enen)395 b(w)-36 b(erden!)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 40284 a Fe(___/1)p 1 0 0
TeXcolorrgb 48228 42276 a Fd(F)-123 b(A)369 b(2.4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 67257
V 0 TeXcolorgray 24746 81281 a Fm(2)p 0 TeXcolorgray
eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fn(F)-239 b(A)717 b(2.4)g(-)h(4)f
(Charakteristisc)-60 b(he)716 b(Eigensc)-60 b(haft)716
b(-)i(O)-60 b(A)717 b(-)h(BIFIE)p 0 TeXcolorgray -741
4800 a Fm(4.)p 0 TeXcolorgray 651 w(Gib)431 b(den)h(T)-108
b(erm)432 b(einer)g(F)-108 b(unktion)431 b Fk(f)574 b
Fm(an,)432 b(w)-36 b(elc)g(he)433 b(die)f(Eigensc)-36
b(haft)432 b Fk(f)142 b Fj(\()p Fk(x)292 b Fj(+)g(1\))369
b(=)g Fk(f)142 b Fj(\()p Fk(x)p Fj(\))292 b(+)g(5)921
6792 y Fm(erf\374llt!)921 11330 y Fk(f)142 b Fj(\()p
Fk(x)p Fj(\))369 b(=)p 5204 11330 15749 34 v 1 0 0 TeXcolorrgb
921 15867 a Fk(f)142 b Fj(\()p Fk(x)p Fj(\))369 b(=)f(5)p
Fk(x)296 b Fj(+)f Fk(c)433 b Fm(mit)h(einem)f(b)36 b(eliebigen)434
b(W)-108 b(ert)433 b(v)-36 b(on)434 b Fk(c)873 18412
y Fm(Alle)i(T)-108 b(erme,)435 b(die)g(eine)g(lineare)h(F)-108
b(unktion)434 b(mit)i Fk(k)416 b Fj(=)372 b(5)435 b Fm(b)36
b(esc)-36 b(hreib)36 b(en,)435 b(sind)g(als)g(ric)-36
b(h)g(tig)436 b(zu)874 20404 y(w)-36 b(erten.)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4800
a Fe(___/1)p 1 0 0 TeXcolorrgb 48228 6792 a Fd(F)-123
b(A)369 b(2.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 23880 54804 45 v -2331 29181 a Fn(F)-239
b(A)941 b(2.4)g(-)g(5)g(Eigensc)-60 b(haften)940 b(einer)g(linearen)f
(F)-179 b(unktion)939 b(-)i(MC)h(-)-2331 32203 y(Matura)717
b(2013/14)g(1.)g(Neb)60 b(en)-60 b(termin)p 0 TeXcolorgray
-741 35511 a Fm(5.)p 0 TeXcolorgray 651 w(Eine)365 b(F)-108
b(unktion)365 b Fk(f)507 b Fm(wird)366 b(durc)-36 b(h)364
b(die)h(F)-108 b(unktionsgleic)-36 b(h)g(ung)365 b Fk(f)142
b Fj(\()p Fk(x)p Fj(\))369 b(=)f Fk(k)201 b Ff(\001)156
b Fk(x)g Fj(+)g Fk(d)365 b Fm(mit)h Fk(k)45 b(;)221 b(d)369
b Ff(2)g Fc(R)921 37503 y Fm(und)432 b Fk(k)414 b Ff(6)p
Fj(=)369 b(0)434 b Fm(b)36 b(esc)-36 b(hrieb)36 b(en.)921
40048 y(Kreuze)433 b(die)h(f\374r)f Fk(f)576 b Fm(zutre\033ende\(n\))
431 b(A)-36 b(ussage\(n\))433 b(an!)p 6211 43080 33962
45 v 6211 46151 45 3071 v 6920 44948 a Fk(f)575 b Fm(kann)434
b(lokale)h(Extremstellen)f(b)36 b(esitzen.)p 37763 46151
V 40128 46151 V 6211 46195 33962 45 v 6211 49413 45 3219
v 6920 48136 a Fk(f)142 b Fj(\()p Fk(x)295 b Fj(+)g(1\))369
b(=)f Fk(f)142 b Fj(\()p Fk(x)p Fj(\))295 b(+)g Fk(k)p
37763 49413 V 1 0 0 TeXcolorrgb 20205 w Fh(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 40128 49413
V 6211 49458 33962 45 v 6211 52528 45 3071 v 6920 51325
a Fk(f)575 b Fm(b)36 b(esitzt)433 b(immer)h(genau)g(eine)f(Nullstelle.)
p 37763 52528 V 1 0 0 TeXcolorrgb 9946 w Fh(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 40128 52528
V 6211 52572 33962 45 v 6211 56327 45 3755 v 7052 54181
a Fb(f)98 b Fg(\()p Fb(x)8498 54304 y Fa(2)8959 54181
y Fg(\))p Fl(\000)p Fb(f)g Fg(\()p Fb(x)11503 54304 y
Fa(1)11963 54181 y Fg(\))p 7052 54491 5277 45 v 8334
55259 a Fb(x)8864 55382 y Fa(2)9325 55259 y Fl(\000)p
Fb(x)10587 55382 y Fa(1)12831 54801 y Fj(=)368 b Fk(k)479
b Fm(f\374r)434 b Fk(x)18165 55000 y Fg(1)19059 54801
y Ff(6)p Fj(=)369 b Fk(x)21179 55000 y Fg(2)p 37763 56327
45 3755 v 1 0 0 TeXcolorrgb 38472 54782 a Fh(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 40128 56327
V 6211 56372 33962 45 v 6211 59442 45 3071 v 6920 58239
a Fm(Die)434 b(Kr\374mm)-36 b(ung)432 b(des)i(Graphen)e(der)h(F)-108
b(unktion)433 b Fk(f)575 b Fm(ist)434 b(n)-36 b(ull.)p
37763 59442 V 1 0 0 TeXcolorrgb 1373 w Fh(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 40128 59442 V 6211 59486
33962 45 v 47992 35511 a Fe(___/1)p 1 0 0 TeXcolorrgb
48228 37503 a Fd(F)-123 b(A)369 b(2.4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 63514 54804 45
v 0 TeXcolorgray 24746 81281 a Fm(3)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
