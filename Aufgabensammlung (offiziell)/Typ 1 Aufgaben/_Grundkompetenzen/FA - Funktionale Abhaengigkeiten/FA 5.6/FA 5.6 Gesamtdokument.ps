%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktionale Abhaengigkeiten/FA 5.6/FA 5.6 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 08:57:02 2017
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ LMRoman8-Regular LMMathSymbols10-Regular LMMathItalic8-Regular
%%+ wasy10 LMRoman10-Regular LMRoman6-Regular LMMathExtension10-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktionale Abhaengigkeiten/FA 5.6/FA 5.6 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0956
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A229961ADB1D5023BD93644E4C23176BF787664F
CF245203C8C3E557669BDD382731E334C06F4B6EA145D5DF351211A0511605B2
8C540290A08A304CB1279FEB8FC14062F495A5EF2072B2957D98A1AB2E4B2A21
6F53829103F9CA4A8B6EB5766A44A7EAE4D5967EC3646F54568E9FAB28736D70
AE87CA7F3E445B1F49315332AC4AB47D5296FC1D3B96A166865C2FCBDEBAB3DB
6CDE74F5FF556BC9358EFD0B43F697D889D0331D1EBEC40C00DAE0BAC2DAD9ED
755E5FFAD0632FF3D5CE92C7E1D0DFA7642329EF410BECC288F0C4D1D0E6FBDB
1D2F7DC87DCFA3E12F6EDC2CA29FB19DE4183834020D1D5EF3C8297647447CEE
E330B23D8B1E1FF228FBFBE9C3CB8228AF6F5670423AE730740E6C8729B71F3D
32DAD5793A80FD1B6F3321CD3296C52F9330B735A0E65D7C343B1A03451B3A9A
19623C4B099EA0177F6CD6CB3BEB1F72FAC3A0D0989E1ED1A2EFA01D70A9C4C9
29F4BDC03FB1E4663874849B532BE5D89A4DCDC978BAE505BFA5D94B9F85270E
EA10883403D78F8ACC16D78A071DE8BC0EBFFDC300D331F427017089C77550E2
CF35E1093D08837A23AB0CA867D97DD34218260D2B6B9A4E247A71B41391B55C
0237DA0E25D4B4313CE372668A4B6BD7362B99A641E690E301E06C561BBE6ECB
41B1FD9922DFACBD3C45554A6F59E19BB0FA6BFBA035C07D0D10084CA3724040
1EE3312EAB85F8AAFB0991CB7B5831AFA6298E43DD37CFE29072A6C9BFAF41A2
FB4DC4F80E20BBB9C959B78F2599E4068E7E7F3F825C6C28562E37D841F7165C
7E17C8FB438AE8E402D11CB5AAEFFDAA439F668494BBAEBB53B2974E20BFC9C7
3C2D56B0AF69956685D2F7B9D7C0DB95FD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A110651C32F48C68DB80F2291BB2008E75C7FE5D6D
A654AA4124D577D7F15D0F072C365E8335C5459AC68D884E15ACA3BA78223421
2A72336D6DAA37601703DACAC3F06DD1F83FA50C90C89648D46F2741B3A99D5B
30F9C2F540CA75E18B3418B41564ED71BD85AC96EFC164226B9C2EEA6B96662F
16D8D0CAA47078D98F848BC47519F457699FFA65AD80CF22E61904C92A4FCD68
F8C5389BC7B4DDB5E46728AD90E833F397246EA4C44A12EF33A54D251A9BA5FD
E6D30F9B08478DF3844BABF04CA767E3A772D2111082CD9BFCAAE019C01BF1F6
E94DA8BCA8D91896E73AFC4DA03A52EEFD6EC22A7391465049C3FBCD1349304B
2F9EC4D5C57518E8210FC2C61DA668E21535FA1B41FCC74614129FECD357C3BE
8A037CD5A71A87D56E0B63BB3E403B2EF8C1E77099FE3EC477B523DA5C966FD7
221B1B7FA3B477C5D9CA00AA6DC57B7C497318CDB711169EE774783650F59A03
7DF825BC134B927467A32C20AC38D1F0CB9EA474CD30DF727985D1D1F0CF0362
D02534F7BD45AFFEE4A2363AA76233947EA65F1B8A550DBC58BD7F145B7364AD
FD3E68160AE0D42A628E9CEC9E0B59788EB9B9FC1305223713165281177A7AD2
4B7591C4260450089DCFBBBE49F32A57A4764E0C948034D90F8FB896D5153BD6
F6D2AC9B7BBBD561F2B3C590BF9140F7BBFA9FBCD5FE24BBE088A6DF3EE50851
FEEA89C68E3509FF9F8361B6DCA9FD280D47041722BD6712420B4B56C7F6C303
9FC62C37DB28EBBFF30F651543A11127279FFE3FBD0E0093BE719B29629D9AB3
4F24117C71EC058857C29CE13701A4D4D4C96FC5035DC5AF1E9B08909DABD7EA
C66D120A3911D284DCAE2018F883AA804CCFFC0437C82A2FF545602010E02FD2
8AE7F2FDA0209D88B57AE69AA5EA146A5F40DEA2745C6DE79084042794AF8485
F01346CB8E17CD12A285205B2D5D6FBC199B88728874706381E06CAB4FEF345D
361E6BFEB0F1EC0768C4B15D651FA8B720DC21DE0755EEE6F50ABBF8F9B50806
C8FE8DCD943DAF3FB4E3A363CE18EBC6955139CDAEF7E7417850981E2FC2BB60
E3AB70FBF5503D2A6D64D19957837EFA1C39730568765E65BE310A747FB3ABDB
D904B66EEC60CED2867442F5FE445763D9C876462297A0EF40FF882B18A11687
8F50F7F3C3D485D93D8209C94E8875065A8D2F7D8A673AA44000ACA51328C628
017AC93638DEA121647C09131AF70E9AD8E790239E1C1D34FDE64332DB4C9AD7
D440864CC4D39784ACA3F8B9058850A3350F75AD6D546AA602FCC642AD0C59D2
368A1CC3967DF6EC4140AC4E1D0433250B7BA271234BC69D166FE6BDAD5E74A5
23CB61F6535ECC5875EC3D858E3BBC4B39C40DE66DC5EB6F1998A08ADEB2B51F
D97C947F3CAF4A17CA0F8BE7EA6A42BA3AC5B28DE4438375EDAE3E3567D66FE5
AFDA8DBC9E21BC24DF15E8660B29B60E86360C270402144BAB54FC694EE1CCDB
9282B9049DF9BC1210AFA140909B92A16E8AE2275E83777297529C5ED2573FDD
10B435C268C6BB20D3A288E01E2B9173557BD09FD07D31D66FAFB55B92D9F7F7
887E49FCCF051A2EF3F5A86B1D157C6B3945F5898AFA302E1AC7E7711B193DD5
2979ACCE3F578A0B968130EAB268E561EACD360DA23F52378FE5CA9D10043E0D
DF5406C0316645AA6E75B204E643D52B1C06099A4518FD0BC54C4AF901907B75
F55315AD3CCA107D2129DF2865142FE8D1300AD2309CF4A677AA4C9C1866F183
AF78CDEC59A4699BD8B59B8A9BB23D4218042307E484EFC0157825F1BAC82050
093B5BC70574DCD9B6A0297ADE74569C15471EF357186D5A3C8B16A8D896569D
2046591B5C19AC80EA9362A11AA9B3D13D06C96DDE3F4C9C56E6C9F316A51C9F
3EE6A9AF7CD4F34009615C025BFD7D46F4D43E272ED4423EDA32801D0E9ACBE1
FCDB7E7C02D08FB8AE2BEA81F9C2737FFEAD2689AEE3E930BEFF447E37E2052A
9E884984EC754AD5FFA2A1DAA2649DEB39D078225DEF89BFE7329F2B420491CA
F1794C18EF099C11F12C5F8A59DAB86CE7477658A608CB758F210271CD71DEAE
81B54335F2AC0799F32A0BAFC0A4A4680BD629CEE07E06DF83614E2E11CBA560
62181F7E5D54A849C5F2F57D79D880E13273F7A423D64D16951A557BB1203F35
A16209EDB6024DA5CF1F78C47030152B0B4ADD1D974400A8C2642147D4B652A8
F1A7E48DF7AAE1EB3E34869AD5A9FEE87CB3C125AE6CC4F3EE60FF37AC502125
0FBD02B7D5DCA774B841330A2A25AA9CDEB436DDAD0590DCDC535482E11336C3
62AA9E874F4F719293D0B0EE58BE36458AB3CC02002C44CD8135AC83ACF355B3
085E56A4087ED0849BE7D623321CB031F09CF2DFF49E3A9A25496738EA0E3A81
2228C2A1D208C0429066EE18CB0870B0DC25F2E34900A3997D5B146A99666D5E
C0FAD6AC9F5398B1DB51531FD2BCF947E22EA79D2C8F57868E2AAB61A3C1D0E3
23EEE764D9AF9DD776179C1F610A95C6BAF7DACAD55E3DF95492E74983439AB7
5BC7A21F225F83C4666063EF638E901A58EDEDE22FF60FAB122193F8CA49A403
53405970223332F61BF1660842463FD6E80288B1D4B191DF57AE3A4492672A3B
30BB7DFC8DF26DA8F6459FE6477286EB7914B7BF4A14D94594408AD11281F46B
0D764C6CF527395C123A1C5329F2EFFA0034D24410FB25DA53070C2BBB4411D9
608F4FF0B2E17182083A2BF0E6BA1DE5D3B93CCFFD454B0717C5CC75B5BA255E
1E7ED6C02676970CA89DD69B3DF37ED819FA983E63E5097B3C418049903E3F36
885AD45509FC347D7D032690907A7C3E858F279C4F87B0EF573AFFA24DFAE3CA
1C359295C7D2967195AFD2D94BADCE1E9D01BCB6037C927F524EE70AD24F140A
F825F8A370871FC9CC925E6B4450D61534122A2BAFE84F9E953A9CC9D9B0860E
6FC31462CE7D19968ED81AA3D7E7FF5CEAC097236F55AF6FBCD9AF0E167742D0
BD0E131BE6F0AF51FF07C966B61B01180333ECCD5B3FE94019A96EB493990B04
C3257D9AFFE291DA3EB108F3896967A2A31A46F239D6F7BC4BDEAB3579B57030
F0E4B1F2BB015D885BF6FC74B2621802B29CA16DBAD0A2BF9A151AF0CFE69B0D
F425F90DF8FD6B5003D9C6C8787A337728D79651A32408DBA3FDE5447C987605
106CC743110373DFD833544A0768AF6483293056805F5D584C42B434EAE97D37
91ABB04CA2D32CDD53F0BB71EBEF1D3FAB9CEBFA1E7142F0C54E24B71C822123
61760FA0A3A619BAF5F4AAAF767441A835CDDFECC3A63A976DE6A6C17253F42F
DE32042B5D49A971F125238DE14F4F908066D56D63B907649431C05218420DD3
0B791B1D7359CEDC67F92DD22938E33921DA5D3F2E4484D88CEF40CE313C8754
B85AB5EC4C96743A5C20DA6A81780AFEF209FD02965BB8288C1787636BECAFED
14399A3C13196138C2D5C101C3118210759FD67200DFF251DB7C95C09E89EA1F
66EADC34314619800AC8ADC2206AB30653430174D252E3FA207717F1FF43DFA0
932B65C1FF7776FC2AD3CC8496259C1C306102CA1D10405C55F6EF17EE4D8419
8A9E10E110160D4B90CAE05FB023A6E44AEC660E02AD5C0E438F964712D0CF4A
70145D467EDCC0085445CA815B0FD701A99E3407EA49C7DA55875A3CCD94F522
EDFCAE0CBDD9C92E4592E6B82EFD33741743178CF16F2D4E2880EB4A142EA2C8
BECE3E39354BABBC6606B1DFDF91D076228D14814BA657945BE9186686583FA8
B733579DE8AAE808C897017A7771FD3ADA7DEE0A77B08D7963706DB8ABB55A63
87E3A4C2C7E3F1538C8476110D7949AC14E89E77B4C64E6618D058D7B7A624A2
4E9ADD421346F6422F76D7CD23E6B3F84D362136D36F0B0755BA39708AF351C9
1197A87C065465257FAC9F7EE6EA74F7C07916C7B7569E62638FC5F5D55CA10F
93D53C35497F93A5550CD9DE284046AE1E09D56A9947DC9406DE7410672590BD
7BAD05176C3402DEF40DE082B544B4AF7127EA6D5B8FF5A0735193644B86566F
C91D67AC3F4A4A96E256FA1A3BD35F446EE3856CE3860D1254AA7843EAD0B3EA
BF78597793E07857DE4855462F941DE00884102BCC0F7095A3289150A301B15E
E37DC5F4533724D785C22C645809C6B3B4BC04059C4CE22205C8F61EE2068824
B4AAE5F3D674ADAC988FD470A860D205AE370E3BF8733F2268AFE2F77E6FA649
CEDFB38717C0D90AB406A2F62CD9027E5A7B4D110A1D87636BECAFED14399A3C
13196138C2D5C101C311871C2704622AA4BA96347B69E844752017BD93018663
FDB6255870CD61C8CF7AA8DE567D174EC90945404C5B91D51541AC1F598A5843
D1CAD6C5A53FB3BDB005D9CE279029D7F6B88EA20514F3453A08F1898F30FB95
88358955643B31245412952085C699EF4D7E65ADC8CE164B8C424798C06E05F9
BEF1443CD00570B204F24BA7D6B0124B6505105669122D86E83B18D074889EBE
0E123F94BC424E3E8B5854442C5FB9B7C287E2FA10D86AB5C6B4B22CEEB6134F
D6F15A5A9ACD38589F75C1C940C0650ED4A843732C0F5C811531DC9DBABE5B5A
768FE14AA8B72EE4AB32A13A3DC4FAE0E34E485C31FB2952DAD2A6117490A17C
CED52E42690F9808BF40C0FF302E4E863FE6393E0337BC20639E8F4C770B3CE8
89C0627172D10DD0A2C6C063294A1C509A5A29792615890E71699CD9BFAC82B5
E134E17AE9565160895CA8D5C119C9E649899F6B7CBCBD5757C07FB38DE5C5CB
5D530CDB8376E52631A1B7707884C5430CF379E657FF3FABB6D3F28ED73B0109
8F68DD5646D48CFD2E30464DDBD18FFDCE2100BBBED8B9CED529C5B2F5AA9447
65B7D49D7C68A5870CA8EF1EA479AC0BAFB2A9B3C457CB0F90009ADF7DF22E72
1B8D3B0D985CD093AC0BD5DFAC3AF0C425C270647B327C8CB9FB86F3270D22EF
A230C261DA2FB591A3D5C55971ACD869783C493794BF12502E04FC52064E63D0
05F2034A1D481C37D159D01BFF4511CDC412A885258111779F35F0F44FBEA760
D3604F156ACD003FC6AE2449B2B06CC7D54C53EA2F8C915BD95CB67D9E25F9C4
C27688B2FFF7C9CA74E8F4E4BDF74C53268E1A7ECA73776BA42DACC6F9C1C424
B7A487A48EA5B567B07AA8D634C702038C72157D3639E79466007C7BAED2D2F3
FFA02D3F4C69964F7BC8B589686F3F263BC002C8884F38F3BB6E09768DA019B1
942225BD45F6FE01CB6C10015841B66CD6BF4C764509A2A06E998BC239F96D24
325048BACC9ABDA9206D0D796F2E34212A72336D6DAAB732B3EC3376BD946A14
3BF39D2292437D16B4AD9357894F39EEE344BAFC620947A6B681F0C590D7FB9E
51E09C85C5BCDE30D15CD9A847814B10A9C5FDC801B144AF82BBCCC3E63B027A
4C34483DA48DD25CA2B8A0F318B7334DFAAE85F18EA6508082C5B58E23AA46BF
02AF43AB380F539FC38FDE31F2AE7CB47DC42357ACB54C3E68A53FD4A142CB1C
1AC5FAA3CEE04A891389ADBB5E2C2A35A0AE33581C3E03AB9EB6611CB213854C
B51175B088CCFBF6EEB46D7BC3B3B23956CFE35404B02EA8F5DDAF71C4BD05C9
2AA7C03A7F8FC091F00955FA377DFA6880F5D6F64FC185A3BC3BA69BF53864A2
37BC0486514F6952862F207136E1E16B41794793E433E0EE5E69DA51D0AC505C
9F715607A353568DF3D441E21EFE2B0B8A550B4264FBEB14FF75816A9550B6A8
9D9AFBE313E2AA15FE976027B15E24EC8B8568CA56640688686E1B9E4ED6EDE9
D87E71ECAF48A29201593045978F194F0502B7E610DC069791E52CE628CB5457
AE157C5374FE3D6DE742A6980C8C55A9DD737F2069BAA2841830A4581AB3426B
888F236D57DB2F5A50B37FD8EB0619737DDBB167F06DC088C78888EEBB74C92A
C1A3CC8822E82DFAE6D7CBDB0C2F268BB8BFFF2897D515673E5EF7EDC36C78E3
0CCCCE4EEBEFA2169FA75AE50BCE1DDC6EA4D637174260A2DF58AF4C523FC0CE
23DD088430D43D7D6E50620550430364C88A1DF224DD3EE5110EEDB6DA4C5DDC
0D361A5F467481B87ED7CAB30EC2B8DF68A9F0B84DAA951B4DC882EA2055C9C2
8A70D205D419BC5D5AD7808EFA961ACF185DC1E322EE3406C35EF72CDF1A08D7
FAF7B601661B2E2B92D08E151289F0E62B8EFB64C5AA3D8E7009B621DAB35992
D9A0152EF4B01166924669083FA1EEA841E5ED4DBBC73231DA05B8B2A0D1F6D3
C48F6D4440488AE7C9B57B85DE61CE78FD29960A8A394D15E091902C8368DFCF
9AA0F11EA6E3E3EEAF3022CB91AA2F7760754D8ECEA334EE267256720D6CE4B0
53B1D7E3D0134F6C1FC75839D5376E904B45150CC89145A4D622516B67987197
DD3E233670D60B90AD71DB892977E32FE4D1DDDF485DBAB9896AE4BEC89701F5
53B823D775AE81DD5C91B731F89E0191BF23AECED19F8E9187BCC8370CBAD587
3329B24AD4A743F2CFD18B26B1128AAC030369D13477E95EAA9BBC038E0530B2
AD398A9B022B762CACDEE383614D564D3EB1A4DD9D4C46B9DBC9B9FC68A2E719
2DAA0D6F9E1EEA8D75D9A93A375C05DDB7DF3062C786EB15A5F0DEC6366D20DF
ACC9A51E37B9380AC96516FF99B484797CA92E65EAA84B8478A465C11B88668D
17B5DE1B8D5A413287D9E221BF6768D98EBAB45423B661222CF4987285667421
2EBEFC4A56D4A62C5D249861009B35FC4F352864D039E8B2D4E72B037798617A
F66FAB78AEA057C18ACF58136C94A428B207C286DEEFCF107F0A4307D1188289
12D14C9792317664F111BC37A76E627AC2A9170334E4543E1B4C48129E8EA2E5
6D8FD8C88367330901C5836918C005010956C520A7F051617C22AF294B72EF9B
B34E10042752C0B839FF9E5DE53618F95B4ED5492982159489729ACF9368F03D
8099B701120CED49F055C3AAFA37312F9BCC4F4DFD7397BD67D415F31D64C36E
7FC9BF48ADB04BEE66877A7912E5A582CB80336AD198CEF5BD22A14C556F08D8
BC9DAF2A528610E8001DDF0750125FBCF26095A320A1071176B333BECB978FA7
AE5136969F149CB186E27727E2C39A28F272127793DC4DFE03595BBF57B47B6B
47F36194429193438A398C7747EE66624D0A4E0C9EA14D8FA65D54D15B07BE8D
DA6AC960A3C9C90DCADE25C9DCBD080456E2ECE3EA9C9864F5210408AAF96AF6
6F3FCD94A42895E27F90E79C9AE9523AA6DBBB526995C1C0A3FB8B3BB426675E
27D97FCB8387218CD94EF127847A48B648FD0B6360D29658A72802D8947A4232
D64CF617A8BC2687640D21DBD55A0BC8ACE6E7972CDD9318A247900C698EB3D0
853E0A5557C1E0913B055F591F8F2E8A74B365795F75831AED2460D9A9EF2A95
B7D987384C7D5E552E41C995D065E0B5F37A43352667CAD340C0D42D850BD31A
8B49D7DD12E47FC03B333A7F09E8D2547F6D8D16CA42529B1378AD3320EFB4D2
DD74E2FB2E5B86F89160CB448A634EEFFE8706B22FD2E7357992143F65475F26
BF0BBCAF464EE855754BC800985A57640B2B6105B2D2C996F6D57198B0FD8762
0B527100738DD02FB92820F84DC9A924C6E60903D75CD251701B242F82E2205A
FBF3D4BC3AAF78D9901D7508E17C81A5199A57BA3B720C1693D02E3A52F74A81
9BD094842D0A31DBD42493D2DF8A406D54E4AD284BAD874D4FB7581C7082EA16
7108BEF6F7E34D94D818731DC3556B48BF53EDCE1499F3925DACEC43096BF9D3
5A3FF6C97A4C03D57349A144ED9D6D717DBD75D431C028E89C5355F29E7EE697
BFFECCAE75C27AEA6C7104CF272BE4D277E12829BC46E495118969616EE7776F
AFB13C8EF8EE35119C43CD7FE068E1F016AADC734D40A0C7E8EF9FF13E29DC06
4F3C70730B6B567A9AA1CD0DAEA2ADE57429E440123D5273FD55A6DAF28122EC
CBCBD74CE166A88EF1032E139530F126E04969167E33E7B429516AC84A719DE7
A70642947F38B33B5D36C221BE8D5693605EDCF4CDE45EFB46A7FBFCAE9A895D
47D5DDFEF08A03B8139B8EEC22BEE2E8A1A721E5A28DCB5D3CC5B5F8D53C676A
E01DDFA4252A5D7186A9CE74BD431A8324E40B5916E65AB744B6FD259CC8D48D
85F6692F09891B010353B600DE2A8E1DB7A520128B320F2E0F120014C1C62380
49BF932E05C2EED82EA1183B102B4387AB3B6A4FD103175D288DA1003B76C9A1
85EE6A8152A3119C6FEE9F97BBB4163F5A43A0861A9033ED76B763A8DB65CCFA
AECCAC87E118B957A9E69DF5E8274DA59750A142C6689E24C566824C8AE99CCF
0EA0BC1407B202F3CD1A935E6C0086C730D91093F42EB0554BE826A2F95A986F
8A6EEF3CB540265026F4B11B57E008B91248D7C626A9B4E47BB26D54A79EF718
5729FB95162847620F355DFF8C14AA35A3A38930B1009E63C4D6EECAB8E869C0
1D1E1ED52BE55B48962C844CABB7BED489A190D1E8539853C0D0506E19FE361F
E6870EF2EB19DC31D08B3B506F8841C96DB5842407EEF346C76EDB1A1853D019
5D5E74DFAD52607BEFFB46A920E00A5BF781176BBEBD60BFC9B6E3BDF89E6CCC
1D40F78A28ECC992859F085A05262EC2330DF6987E91F6CE46BCB44E11780E84
8DC601CE3DA1551623F4584FBF0D451CACC5142CD5AAC12ECEA34356E46F791D
FFB4FF1570574EAC7E17C772540440EA91FE9652EAE86EB7E2DC73C347153B9B
9135A79D2898CBF6CC4C225B77A88166768942CF7E11D8AC59AE55F0F7D1B1AD
36B4369B8114E1BDD480913E76BE4F94D9F38EE46F97448ED2EDD5640F536A58
88CD81D75B60865AF75FAC62032E94AA7E699152CA8A979DD0407F40E90051C9
3B8BB9806C19B7E9E550F0962A137CE362192A347B619765400D8E584A4CA5B0
B05E30A69C32BAE697C2969E09E2B257EC47B8086E763C186AF4D368749FF7C0
2F4DF879199029B3C52A85E3A069D5265B78DF1E8A68FD34AFEED9E605286115
20249698A92CF23C5E8F45272A01571E027BEBBC9E01AA7172A8F67A678714BD
90C887E7FE74419F816A5CCE657A26E927CAB2BFFBF4CC1A24A8513EB6EBD834
70905482FE174288EC9F9541B875787774BE4CE97E870122A0A46CCFD6B4158B
E06C768C73F34B0C1A553FF47AEB55E074E0A7EDCEF6F7111078FA6AA058A1B2
912109796C1C7ED9476FD94CA6A05BB8C3A4CED9CB8A2F8972427A47CE65C557
91AC67DF9ADFAE736B2A54BDA112352814FB6FAB913472DAB4547A50C2C29BDD
2FB808E047BF014BBEAFCC7772F7F63D27EE53773E2B1E5F5EC98D713D700F44
28E59C4D8FDA511BCF64FEE45366520D713D1D90DD8D9C53C9C4BDD0F3E0EAC3
581921BBA4C2DFB31D17A60124EE8DA6CBDA94196D7C79400F322E752B75D29D
4A5C6F7445C5A0556A316E34520C69050ED2476275D5384CC384430A2282A489
8259F8D91F2A22AF9E5DEDF038F2FDBC3E20D463BC757AF978B588D1E4902CBB
38AF4DFA01B0AEE3ABA7AF04C8C6971CE1BE6D51D46599D8C2DDFE94A2105FC2
D898DF5DC5995E8DD698B46FB83704ECCFD2A6E34496A866D0C83E5B5C5C1331
150CEE1B942E6A555049252B35E96149490129546000672DD480C23948FBFFCE
C3E9374E5D2DBF46839B74411B7B4A3385DA035E9EE81724A19ABB7DA3F28BDA
D01BC664D35CE925F6F04405595BD5A8A009F4892CBE46B808969D5297401F7E
CC7509B4399402062B66C5ABBE84D7A5B8293A52908D4E4216283297E4F39327
1203840F037B4146F2BAB25A95E1B0429A0F9DCA30723D2FA6CB6868AB239B55
60E23D6BB679838CD6D59FCF4042849B0C4B472AF45ECAC8C709E28262C17C0F
E1646767B2D94549A80ED3563868A3DE6E265309F8628FA48EEB200BBBC5CA50
8A4D744580C7795F7B3D063DC69EEE370423883BA857C54F7B3EBC20098C6212
DFAA3ADB410396D179DA4C1E7F5C7BE4EFF59D55B381ED8170D6C204AE486801
2441E36CCEB83971E3268925E473F7E75E5FCA9C45F47ACBA52FAC5337E9C92A
7C28E1ADBA19BF43B26DD53D90D015838F8040DCE919A3AD39BC9A2589B4B60A
5055543FB599415C638471E3F0B4BC379C73F746F550BF0657B5DC660728C942
A87295109A91F5776A7F1428C5CC1E86F6821160698242C7566FBFF983A4DF9F
1234B69484C237E2D1E2E64C0D48329329AF97F6576A0FA938B0A6615694D1A8
3741D4F258C06B01BFB8E94DCD2FB69D65D8D970C3C755E6F464E2380291D65A
20EBE7346738CC89DC5A220E4699C15D3972B2F0681977A77CD77EEDDCF5D5FC
B463D7EC135192132945CC923882D94F90EDEAC8A3A8DCA72E26C987F09AF3C4
A9EA77FDC984EFCB4556AE25FD1C98C243367B2619CF5478C103AF60D5E05063
DE4A025FA5007DB8F3314CF7DAB8E2F2AC97C7A8FD33D6DE81F4ADD3E77BFE2A
F010F273C4EFE61F9F8E88832737186037F9E5AB161B8A220E0193D6FD1729F6
AC863145CB3876A239E92B6F7C3A4F4156B59A0A3ED243DF5FC4465A19DCF6C4
1EF3B024DDE5DB602A670CA6E94C8BCCF83DB0AC7B39632F0D44069A1AEBA592
BABA2DB6F3D663808C2BB6B3BE5B62FAF50ABACCC9B5C71D0890A63667CC5AE7
66518F978EC55C6CF62652F79150A2D35BD4580DAC8DFCB09C9B2F0E0C1F683D
AF8038C03C57418377255201AE91F48B7FC6E0AA56D0136C16C2109C87627A1C
FEA2A6707D6B09AE13AB2AAEA8A45E9A29BBCF83E95F0C65B2D60169538F820E
D3643461C090498AA7064CD84DC256855A3DFCCA8C666155A090BB954BA3546B
B6DD46E8206C04B7C5285AA995BB4C89ECDA3A07157E9BEA93937C58C1343F93
DE971536E174784D21CA938B31D8127B9B6462C898A1C03D6B904264A92A74FD
B2B29ECD6CF81A54A36382179506FC97731F1B39A4924822B5265773A5E86A17
A41F26DB5368DB7C6022BCC5A3A6599E8440DC37D853338BBE92C9474310F30C
C0E33018119B0B5BFD2BF4004B8822875FE5D7BC788EABD2A7459B0FE262EDA1
72A99BDB57A5A346307E3BD497D7F1E2F51B557FEB6AA32E84F25EE296212167
ADE22B5728F5F9B1E60889D97FAC2C7318A93CF7CC2822A913F10B226B6B3502
746636481D87070CDE5EB05DA5C62E83934C9095647DB2619576A07E6F3CC5E3
B553E8D513719B4467FF2EBB5C748935836307F6D868F16EA1AF0D72D7EBFD84
02278C70D65C679337469A9EB4D699114A950D536C1C44746579957E65509C06
8096353108C24171429FA99A086B51ACE37A02D4B91F9E7A09327BEB82BEC7BB
8F1C1D8540FA065E4DE78AE4C4991C4113C42430FA02F1E90315965D9823C35B
00CCE9C4F13CBD9D331F2084C125EADCCFCFB62238DC3BC945C80493B3ABABB9
11186600AC62FEFFF4F7754E39FA1300CB89C57B1EBA597184F5E0582C2DB209
479F0E7F85E67FC314037C7E13F3D146873CB848F7B16C9B43CBDECAA960D129
95838CFB34935D47F55ACA000646B1DBA9ECBAD801177B0EFA572ABF4EE6F29D
00C325FC89DCDE3716C5B0A87BC7ED856A77E3AEEB9912B64A5027A271890B36
BD310D1A184C084913958D22575E85F8E8D4045F576D9C446DD56ECEEA07228F
0B0DD14607138CDFF18A27E32FC0C1E0FBE416FA1E1DCF959B81115627BBFF30
E18A42C47DD0FA1EE3521C98714EC451AB5F18AC249E8D39B75F2DBDCF84D5BF
3AE6795B23AF56AD8BE92D6FB9C6EA7FCE6A387A1572B379E2B0F9F79399A63E
AF1486D8B4C3EA3E0655E47BA098A227DE741A6168D96FCABEAAA6D87458CCF2
5F198AA55DBC4F8AFB243E55FF97236F55AF6FBCD9AF0E167742D0BD0E131BEC
9809C11FCA46DC38197B4C4EC375FAA5F614C0F5FF6B2F3CECA97FD68BE71AA7
3987D570CE2DDF953C6EC97E120E1FDDF6B44A2552C20E9C17F1F3478D685F97
2CDFDD1CB498D32C9487CE5089F7ED4D8217F1F0DB37E3FB2270CD8E5870230E
9DA69ABC80788F2F72CEE5F5594E4E8A8D4DC7D81815E0260D9F69D2E42819E1
44C777275E2F2594DF545E359F2932DB2764780688C794121E4C3BDB8D1FFB7B
94C354409D0DE2BABBE2D7EB6B950A98B2C2465D8B2E2FF21241F38A49661542
85C49E1046BA80439367406B8CE651196D0884211D48DFB521FD15331B556B5D
84723A0D6B9998821A9350D76CBA16B7A86496B0785BEEA5DAFF02758FB7059B
D3600C7881088CC0147EB51B3B89D7A218954721CABDD00A51A9D83D24A74710
B5FE7A5EFD43BAA7D48BCB87B1BBECEB0B630D6D0C997140E4A5B6C8C04E68D1
5FD03379057EE574A1592B696189F016B1FEABC10785FEEF0F4B11C7658A59CB
21D974B5722EB226454ED2621A96F3414D8B6EFD08CCB0EF3DAEC24B4B105EAD
1D89EE81F7216AAAB067235901597A08E6EE8D270015A2C4DC01CB803F2D05C4
51514439970BD2C42A98D7A5D999219FEB6E61D1FFCF627C0348224493F2F2A1
B0D13FDDF7E6129D47AE0428B20E18E10F4334B48EA578982D5FEB53407BC291
92867A15843EDB2DB97B20AA7D44F776816A160C72924E4113632DBA9CDE22BF
421C982054831B13C0CCD75CFE65E1071BF0F85C86F68CB548AC66A1F21DD103
F59F2FD46684C1684F5FAFA68FDD22AD422869E28828137C706B0CC544BAC474
C4781B457EDB416CEFF6B6CB9AD4F9A371ED999028F67F64AA534A2AF512C1F2
BC5BEE9F218015157F6BE7D74A4E73C9B32EA493E60787AF090ECB75DCE07D87
E21F13FA431B7B117E787AFD9B6F938D17831150AE4EE25938A4D87BD8AEE6DF
7CBE80059C2A83B08C6E6A9A22E5EE37AB81456EDC2766E58C7E0919F96124E3
D6208850466A1FE663624FC26E88758AC01C1C98B56824712C6BB5DBF0D3698F
B728652F3A6571CEFAAA7EE33FFEA6B639498953B52390D8E594B9E7BED1D13E
534AEADAECD20D18649F1C1EB7535779A5BAB5D82B422346AD121679BF791A68
09164532D7CE3126709FF083B86E7EB78D5035FA46F719B503CE4B2E2D3463B4
68EA893365491418D3F7BEB8183EA2211316C0CAAF127E30074B1EA5B2C3E56A
3AA42584181DDAA2C44C5A7E3CF176DEA49494FE31586B454CCFDE1CB0F17F31
B2701321F8D9A86D225FE24670C9B44536F724F83C7A7563D090FA93D8B5BFDD
664B7470201E0B68633EB54DE3215CD1B5C04258F1ADE67D3AF7F5940E561FDF
3EC104AB6EF99A303C46B5D481AAA4E0464F52F36DC07ABAD3F725A7708F8790
EC4B4A1BE90C3436EC6C1A358168848EA6901ADF99AAE5F6D4A30E73C8888AD4
4C29C75FC575E5270DFDE6584B55C3949FF9CB12318E20B680A50E700B9A05B0
5F25F724CCC2FCF1A0B58CB89C444F4564C1ECBC4CA21E08B76EBD1D860A54D8
E656ECEA88768396EFEC282C1BE71A0BE95CC782FFA77F2824E6051A7F871A46
4775B8627AA0CAB0E8D157F6BED3C1D0FE8A4F802753BFFC06960F2391FA6B63
F2E6A01890368EA8F0D42E7A93B6EC3C83D46B10EAB91C83A0C09316FB0A6FF8
81EF3CF53196A536A97D54E9EB5D2927F8DD71C97EB8FD9C28D4E2CD7FC0DDC6
8A26E11D7A9E290BF2211ADADF1135C30435787D2C5D4E00A09F155BFDF971B5
A4D0AC102C2CEA0A7253875DAE598DECD3C4C26E19284730BAEC36E4387A9AA9
2597EA9D1AD450057586164C355880DD260F8B962183036CEE800D650FE2CD2E
74C038665ECA680A63F99043CD9EF07F9D957AB251D62164BA463DC0714686E5
508481B52D49C5508F0ADAFFA72527A156F7C471CF4B33496F8D1A112381C573
C14103789F6FAA26FA15EE87E37C799EC63B8FD94FF5D9A72D8DC565D4EC2468
D6F8158F4177AEF0B44D466103BDAE0D6DF3697FF03EF87ABEF7310F51AE03A0
F69BA3A5A4B36E62F6AADF260E7895453D2F151439B2CE1C5D8B76218DE43DA4
2334D41BDA602B025CD7197FB2EDE22202B8A17630D41B7E889703A53677964A
D1AE18797E6AFDE5CE9750886C816496A254984E08E607269086C7D6D1BAADED
E43E477E2BD01B33CD5242B5037208B1CBC9EBF18103447074EFA448E002852A
4462771ECB673D09949F54FEF7FD67F6B5E1772F6385CC9AA8C7C3F9F0BEEA3D
102B9C651364B7B87784C67E58AB7F8DE615CB09E909AA836C2B4F58E7E0A4CD
33F1B71EA3C7C787E612AFFBFDBB75E53940825D8697B33CC8C54E71E075F169
3EFA5483DB7DEBB6D2220D6B6B3E6330059159C189615897A97EB497CFB451BB
4C05B524702B8A8B07AC946D02E3B7D57D8AEB1CB809A4598A0C9C494449C69B
415B8A30C5BCC1A675A7C1F25DC095FCA2071BE8C67EF945078DCDD901074A7A
21293979C77A24D5FC81E9B9C3FA269C8553905A0D81ACEB05434845636BBC2B
8F77CD1CA62FD7E5AF7951E96DD89C6BEDD2A467C58639DC0E0728CAFFE3C5B6
A3B4A0A8A32B801E4AF89319F6B0B5F32883144D56858DB077EADFF45B230623
DD994111A1E8B4BFF9EAB5E6E85359ECC07A0BB1C59B638E677A4FC26F9D9A17
F28132B8BD89A3B3C4C135EEE52000473EB5E85AF7F296FAE911FE9FAAEDEDF8
7704921CCFA16F0DCD60F522EE900DA8858177266B06B756BACEB5FCD36A0F15
3536DAD78AF97243CA1BB277BE9F492E4D13C3295C2234F3CC6854ED27383501
47C2A6074B263DFB6FE58624564DABAC8AE8CA083F74813A6BAA4F7CF2CC57A8
4CFBA77156ECFCF5A26BDFD810CBF197D55CE63F12950167935869EC0E79BB87
DABCA7D280DFAB8B0B3ACC533B21FD461641C4FB0DFDC4CAA2849E39805EFA48
E9BC80F485B7054999E0185C979B400C493522A4B260C55A31AA1939D0287301
15AB53A1067BAD45E3F4249AACD8AE81CEC8190320BFBE9DB96AC5AF66FF278D
296FB8094DF33E7E363122863BCFCB15BB5C340A21B4537A9834C0B57F6B0404
398BC82285F06F1773BAEB6FC8CD2EAC6F0799C903D18C621410B9E35E4E061E
D9980FD99D0EC0BCDB65EACFBAE4DAB04841BCBDA07C5B6CBA1D68B91A79A645
5ACAD8340CDDB4DAB92AE722C326065E48F4EC7FBF2E1158F0540B7793757530
AF7AD352563063A1A6B764F66CE61D11CF7551DF3DA72DE6C083E4FDF42A5452
0864E06191CDF9E259707EA00C3BF24A9F25549196089F79E7494DB407CFB55C
A9534511D08883DE4ECD76DFEF5D2616577639C8107F0C02C44EA6960180786F
9261D70E7EE6B325691B0BB1CBF198EC9C64B9689AD5A4315AE0F672BEC298EC
AAAC0AB3727E59F1642789A1765F02944B8E689D5B3EEFDA76E57E0A60E1ED9E
FD4BA27631BB1FCFAC5142E793F5C403C5A91AE20F1A22BBBC1B1166547B3068
06F0B6F107F10F868F5484EA21898DC1DE852E6BD09E6CC49C38F2C2F487CA8B
C0696574F4D97784BCD075E7208F7BF88EBC67BFD892E35E6940E94893E1CDFD
279547F9EBF34DE46C25EC04EB599FADF1FB85E56461FA31D9ED5813BE0FDD6D
704EBF12819DB3A790D521A76E0393AAAD155659591F21DC0446A249375C2BCC
E37694D9DF2B1AC96380F50E484A18749B4B10F526DE12D88C31036D6900D5D8
FD1EE5A172D0792811CF61B3714077B9F3FA13B1C5E2DE5B1C88FADF22976279
F1B8285F5EEBDF887363A5684BC68E8477E5CC1E500A3F795462BE64AC92644E
EDD4DD9074727F4FBD3C035BAEBD18239DAD5E92215C2ADFAF9C4ED4EB6497E5
FFC3F42F921D984E79E112FDA41F34B777DA717440229035A4BFEBFD6D37CE42
6DCFF82529C7CE1504213EBD9FDAE57CD482A24C33F6E8FFBEB84FF65D8ADDDC
0995B117009E9EA4FDDC02011CA24A56DA1CA78A8AD61511F8DC678BF43D83CB
A8EB5034DACDEA2AE6C8D0C0CBAF7A73BF883DD295DD61CD011408B69C1EBC55
A5AAF402D6CECA4A60E4285F8F95B998D08C95132383C7F8125436CDE540B3E4
D26FA3129B31AF7034155870747FCA1150FF64B719550BB45F5926E5ECB3811D
95422BE5D90F0E736BB7657CF2A4FC9C3C140BD64AB6CDC615EF85C7747CFD61
EFD84E2F7CAACE7FE0771E71BE78E2AB1A89214DB807EF6AD45233FA1CFC8F0B
7C147EECE12C88DCECC3A88A0633B81768859338F8D6BEC3B63C5E9999C06B34
A79E0D131D233CB876DEC31843EA7A77D900709AF60D09B87E6267D0118BEB3B
C5D10BCAD79538BF753AADBD6ED7BE07C01A80A6A317218DD1D5EA6436A0224D
41C842816A59F027C5E709015324C4F33870BE5C171E4DAAE3B96B8C7AE5766F
AD6A19F8F0894C659A61F005C6FCE1A0E9700362C1B721340E3C283EF9BDDA94
48283E6E547DFFAFA5F5B64579051CB9421DE1DD7BC5D109B52B7093D785F439
3C14EE180161A5BA285A634784B5C38BF0CE1D0963CE99CEB47B682220859C95
7D0B8DD0236AFBCCF1DE7752E40A1F0068E431EB425FA04DD315AE10FD3A72CB
DDE3AC2916750CF10C2510688D9DCA5C19DACFC81E5E9F5CAC7DD2A7A9362E8E
DD114145042751E6A5DAFD97118C9F81D2559750B2FC25423470B9D3B0C902A7
D952D8E492633A10E2F8C3EA53645E2E7FB17FA52F6950C20211C2692AD681A4
2B64A8416AF31F516695CC2F5DA0FE327504EBA2CC4A176B1EE20A0A0709D6C9
E30AC4FB02F557F2EDA8FD8E3EE8BFB0B49A2AC41080DB9F3D8ED49B289ADF85
84D5DB0E5C30E5A42DB22DD8E13A29F907ADB825ABF7986DB2B81B6BAF0E2287
7388980DA220197BE732DF415EA8334CC2F26CF23323EF301095C6E99EFBBB32
986C3C0AD8EA8B2A01CF36DAC1A90F491152FEFB0D73FCCEAC871356DAF0CB20
5917DFD1A8F1216EB43454A33C2377D779DA1F0DE6FC09910A13B23860D75CE7
491EEBDC06BF2865C58437568CD734EFBFA8702148514F60DCDE4ED63CEEB367
F9F821BC41A7FEB9BF2AABE8A7FF57542D61CC0DC9510C95183E2D5DEF063454
8E872165B8F9BD9F4C10B1CA1196BC062E04A4E5BDC058431AA3614941E5A2F4
73A7FB099D3D51EF85BE0B5CB468847E6F2806FDC4B192CF6530B8FFA0CFAA2B
CB8FAA7BAFF6D7A718CF5B89CE505A8BF1BD7240594784DBA4A078799D08C8BA
6318DFD495A3A35CF506520D6F9C1CB57E1CA0313F667360FF48673C8AF8EC7D
3A808EEFEB8069D8A6BDFA633EAD07643CB2C30CE907623303ADD6052FEEF481
AB03494BF75E70DD28D091234019D2E2248560C04A4271358133833A505F8549
AFE87D9E1FB63B895E17C0834D098E20114903155F14A3D27477386B661F8872
455394437C3A7B477AC27F75850CFED5BDB2F075386E38AEC5E8546E530DD792
843E0D7F4F38ECC398D6B8F0B408A5B60ED6EDC56857F05D41112F42CB9955D7
96F9C3A7C06483A7FE49E9118C94F79ADB280E5CC3835E4E42117D866ED4D240
E2EA767CC9DADC195E944C67735CD118A878A8B1402116797149C20FD36B3158
3A25EFBD028AEF75F0F20B0C305C92FE7B5799FCCA94BDE3182DFE2AFF6BE57E
0827E470D7A1547ECC7FAAC1BDF36CF7FC11A7338F380927E5F20F65E61032E5
3BD00CF3EB88B3F10988657C17162BA1A99670464FC59801746D4B60C32FE86D
15E6D7C8B374DD4AC964B2D7E5430E4BBB27AC19C9A5E1CDCD8281564806615E
4AAB5EDB62C5076046E98FE1B7C6884418C2E63614C86A5657A6F516A21BA12E
05C70B6412C4E4378D0EA7DB19BAE8A38B7F60558B4C47FE961EED2A60C6C7AA
F4C713ABB3BF00C649B981E30CD562DB316843A053F82CD8E6D7EAD84B4F8405
EC3002A3F4BECEDB9ECDCDF9312F10982381DDEF1FA6FC5624CCAF849E6B6879
F8ACF46AE99859DFE8438D5B8C71D2EB776CF2220E4278937457D1394C3551DB
7C69C67D9F08FB6B47E3A34E8C393D47FA9E290824DEF94AEB99CE2F4B04BE28
94BE6109E991F85B9E5DF2DFE90F0717C051536B9B09524D42A033FB29CDC717
007FDC65E1504B71D787B8ABAF047F7975EB8A53B85C2945C891EEED585F8945
2CE7E8563A89903B9CC708AC29FB85738DAEBE2F8813556E9650467B3C8BD906
62D0076FFB93ED6F592D61CC0DC9510C95D412D23D0768390C4E96B6EF266CA2
6CC81145C03769EC3C358029C297C62ED40F1785482B2F32D892AAA863784853
8283F565D7CD7F5CB9B846D3CDEA2675896DA3386DEAB34C8F5BF6B1F819CF68
66353F400DA0137E36F2BF9F7DD28335E316D8E6FDB0A5DB0A08C4DD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE279918B0B31E08031DB686D518B4CBB8A4D0B
EBF6750A452A7F706EA676E3B3237FC5656B29CD5A3A04F82AC871B526CC28B3
A61D985EEB3610FCAA433B9C6D4683C512F0FDBF3EE6FF552D7BF0BBBBA37050
FCBE3F164189FDC8446ACDE8D0D4050278151B46E56AF826A0C2E9389C2B8BB8
E38579D281D5142944D3322E1C66D456E4C5DD727AA41FA5B369D5E10CD71832
A7DD40DE855B47289C449B6AD8D5F1D557102050EDA5F1641EAAFDDBC082E579
A06D8A3A323458808BAD0F4B8A2BF406DBAC4C5F555EC96E760C8245A1AD9F50
881DB475F892F868823CC55D4859C09148529FBA57A392127B68F5366491D1BB
097D8FF4A71966D42DD988F48C8A1F4DE0449E6AAE79500C42B4EFE4936D0D00
0FB339115493C54BA1B0981AFE60C32AE5AEA6F1BA42EEAD2C89312DA8D4EA9E
4728E8FE799616C7F79EFAC5C4F5BCA65317E45DEAF86873DBD525C29DA1F2D3
3041FFA2445CA658CFAAED3C30CECE4F2514A132C95F5CBCA3A139F60B929FB8
72EB89B9E71EA6161CE4DC61D1F0FDB69AC593886BB0459536ED20609422AA71
AB51589A018331D25E5B0F5E48FB91D15C10357563DFE608A3CD20A80D08E270
1A520E35CC383CE5CD307D419B5EB603FC44D6869D4A1731673EB4D084BB1534
7693FC31907FD6094EC7065BED405AEAFCB4783DAEC99BC7A3A82EB333E78317
ACD72DAA3215E2C2823903980506A9F523F673BA8CF49FF629186E5AE8335042
BBEBC8DCF193CA3D40E5337359272C890DE990FA8A632DA2E3BC27F9476CB699
295F324F6901C647D65547A0EC71D4169ECC5A9AF15C361F4CA0CB8ABF336E7D
8DAE03CB25E6664A35015FC9684B7899AB6E46C2AC119FEE2CCBFAE53B96143D
E8C23DBCA777AC4E842F3A5247CD38F0C8DFC61D9996A8FBF914209AE12FA680
17DD0820EFEB02CDE5BF84E5F1E8C8572A5A86D808FF1497362CC036695A3B1B
CCFCEDA9577FB496F376710C86A02109B864FE34566E17B4A1A09F9BA10DED06
0F5AE4AD3C94DEA662B7342EFDC90B3BCAB589A88641B4C53C0D65940F2D3916
FE46C254C25AFF36E0A79983B5D27B079F4B1FE2A89AD72D1D1AD2BF8BC6B31E
4ADFC2A90B9A7B70258F993C87F2C75BD72B5278CF84E2A883DCF21F61FC2EE6
DF51A16B4969B5619E2B15FEDB0F7B5D8690F5323C48054E47E3F61DD358C698
35A31914818EF301DB98A91C6F34AA573BDF47829A0BD0C1FF5D6BAC2210992E
8C115F926BB8BDD04004EDACB8E3A599A56D93AF6603E7BE95D2B9E8B9F50EFE
02A94198A795EA3AA8F36F17AEA7B3CF3B80E235C0C70C895EDF6B031ED3CC1A
7DD250065F3ECA5C4583845A6E0F89C9EDC2F8737A0C119FC35E435A69079A46
C84B3CF54BAAB62AC19D25E46C51D541D23F9D2633D0ADDAF128E4E336E41C0A
F1E31DC3AD15631556A6C760A49679FEF8377A04BD2709C556F99D6D0A7E6D0F
72BA8FBA57162992D855DC8EE82E1FD21984D255DAAB15D2530F5004F063AD76
EE2FA09287295C79AB17E0EF4C7AFB5ECDAA96392891C296D28D5263EE631BE2
0CC1F6D56A03DFB8DF16CC64DC2A4BA25C78CB3BED5E7AD9383F870121370795
8220C6EF8004033A4C316ABB86A95F8FBDEF27B9FC1AD3259CE2A9E4027A59D6
FA0607168B4145A22A5CDCA376CF8F657942D643E7118C6FB8485C3B49DF8D5C
B26E31B287804D9E5DBE8300564D6210CE95546E90A839440D5347EFC3DB1019
7E7C1F9FA4153F56D8354C28DF9541B60056F95693A5DC3207DBCBD73B067552
BD50DC53426FA7629E8518074632F6BB0639E2AA1DBBF34708FDB80ADF685477
F1D1B294824781CD883EABB77A8D8A93CE85F961413148C812BD4323EB029D02
1211373CD1ACCDACF821F97F498371BAEDB7B887A8C6479AECBDAD3753FE1D35
BAD23DA4DC7FC3B4C147A3CA6B939B4B19E81AB223EBCA7E622D460701760E74
95135D6EE1215286E75E64E9F4333B259C51DB04F83FB8A8CFF5EA08B850563A
283BFD9FEAA5AA98B091AECE8681999D7C8CE7081C63CC2F99FBF847E30932EC
89D7AE31C15276590ABC46672EEF02B2AE8F89259944B1272B1259D760D7B237
396F4F3D80745A2E1EE8BB1E2717DDAB52753B36705655AF3B0E97AB1E6E22EE
5A58C7B3B5A46A860FA2AF035F558B5970DE1368D2F20663BC22AEBB8393C4BA
41857657A780F301DB98A91C6F34AA573BDF47829A0BD0C1FF5D6E3E3E23764E
9A5DBE640CA98585DA2A4AF9DE5A50460EE4626641060E55159270B4794F9C09
45FEAC295D142BA5CAD6BD84A5074B5832023E809B80408BB9B61C2AB51D8CEC
6E67F64B36C58C36A88F60969A764BC3650C9F608A3D911E2C01E031D302E806
1FD13C0751886DE01BC4780E971D3952648BE3ACB42BEC6D5B5DA0CAF19F96ED
F6BE77ADAD22FF83BD861FCD07E1302D6A3AC106A2E43A7E81959D74397B05AA
139C11D8E49A593F43BFE84E32554E529BFFDCE98C901A79E3E0354517C3D95C
E9C02C72E8CDDA3C6402606AD16969621B7B86948DED33D8870DE90DBCD8AB39
72CEF5BC502DB98B9C81A16F71982B56E3D30B195E00D83250BCB311128B7FEF
549C4E2A1FB5DA9475D34528238FB664FACB2DF3175DD6744B6F80332CA317C7
C7F1E95469943D8FA54558F298E38B7C47A25EFDB18D279D752527A0A701EBA7
3263002176824B16E5192FE1E7C6EF0989162AA88D31807317CEF7334C32EA38
CBF518502AC8917F8C0C4DDE1AA36C332BB853DF3C8BD16760A91B02D5E8D679
C227DA8E3207E226A8165D453AEE422EFF10547CC2E44F566E8880D7BF75598B
33B68992E7A2F38FC0102D37B14D7743D97690DE073F312A8B3CC3ECC121A487
2C7A2E643F42D81DC81DB094A39F0AC8535F07BA31C71CA5D158A149F9312B73
E4D32170A9DF0ED814B56FA36CDCE4CA26E456B7F80E01E965F2ADFE1F47E8AF
B7E2430FF5C29D2907B641B4829531FB2A32A4C0367F3CDAADB9A370228BDD72
D36A310B38B163A986ED841B89F943386A45621E129B313186B14136429634E4
766722F56E044B37BC6D86BD2B25404BBDE5111A09F2F70FA32542FF1E83E1FA
20A5DA57D8B97288C1771381D3DAF5B148F098CEE2A1576FA4E08BCFDD164C8A
2DDB6E607138E02333C892AC77F693FF450B0BDBA1789FBF48822B33BFC5FAD7
3A5F027F88EDDC45179F7225B6871B570EBE05C9D95D8F947BD0742B90BF5407
FBDD9646E0166601B3481A982BEE3ECAE668C682BA7058FF2B516EE6A1F62AD7
88D7A56D82E27037A9D4634A52602A4A406CEC3E6B836FA313F76E5D3BB8FDB7
30DA86C9CA2049211DFC67FEF43680759C5753F9AF573A9C560C53F4EC10F01B
24BD3061707FE66ECD490C249247B1EC843A51C18F15B98E16EE5DFB6E5EC238
5A2B60667E25B40CE5F8CFB9AF2BCA1DAD558C1F217EF746F550BF0657B5DC66
0728C942A87295109A90C9155DF0BE682193E60B2B5FED8BF8541250B992E39A
E2E7E3C936A06A609F48029307D8249FEAAB72F6E1CC2C7A3875079EFB568ABD
139F70C1EA8869611D9D4D5ADFC1463D664FAF1E15D2819ACC236CE307310AA5
0B8B1F887BF840312068D7236450B39F6F363E3AB6F8FC5A8BDDBA070CA8F456
2F321D000ADC343E2B1931854355DD892B5A163785EC96245A45B4ED6B5BF9F0
750DC175E04BED0223734E5A7F68B96A1184091D122ABB1E3895721160D7C2D3
174873F55307E929B392CE3475109E22CA5A270A188A7649D8D1437039443AA9
46A7630D1877A6697C2FD31E9717FE5EC1A550EF9E2FDEB0F43558C7981EB189
B81F8D1BA098074266404D32CBE9E1B8220BDC4409274CE1CD02D148724B2561
AB1E54A672AC2EF7F6BD91147CE9E15E1B72BD078B9B595DC4936FCC0467525E
BA8965CF383F4F4AE6DA98D1611D05E59ED9BE06C7BA2AC655DCDFC20968F5BD
12B078701E01F539C74A0B5D6AC9CB4E4BC1D7C2248A8F6E5A7695FE9B0A14BE
253B4345768F4A78E26D7BF1AC08BDBB8351C7F5C1C66C9F9BEDFEE780E04042
3DDC5E3B4876FC8A9E07B69FA56A32CEBA6D7B35526797A8C94EA0723B306240
918211E0EEF0934AD0C63700B4526A98631477A19FE5E168BC242740D8C45888
D4A0CF8AE610E7017E11E78CF5E7141AB9009DC1FB985090CA164DF0AAE5DF99
7D62692FFCF574292909EE79FE294598B8493F9991DE93CAFECF7231EA8FB209
39EFAC81F69FEC9D92AEF953CD07A639CB7F9A7CD9CC027EE23F3B3BC61A40EA
57044322C232BE97AA1DCF6B0E4DCB2DE2BDBF0495BD0ED7DD0EA7E72267A508
FBD0C338ECAB53C74DC4E883803F2FB7FB3A3A802092EE50089F30F3C4ADE4D3
07305271D998208A83D58F3BC00D46513F0358C43A22C413D9A6BA6B3E100EA8
03E2F0198DA96155E68E8F6CDE3F99D19B44295188865207E8C79FE8C1E98BAC
BDDB68AF7CCF8E9071B691DE0DCDBD7CBBF0BF03BE50426089EC7071143F5177
610D4C2683129C912ACDB47AECE3F9786E47398891C3990700F3123E5BB8ACC1
07D8B722419A9C1F8EBE330D7A360FBCB6540E7EB3B2ED0460F81AB38B9240BA
E845D47A0BD6760B31870D69C4C15EEA09E1831354F7C4A16212A067BDF0ED84
C9A5735368A09CE46A5C17CCAC557BB69FD42494D5D2B9C1ED812F3CCEEC1BC0
79E837DCF4EB4E495547C25D2893E35E24435F55A2D66CE9FDEC1A5F81FA219E
49C2F4D2C8EC80D9E187F9E15825F57826DDB17A35CF2E4C380E50E1797F8558
26EAB926A051DDBBD93F907D31D6709284C86F0542486710BCF518C1B5D1E6CF
23E0D97980F20EFD24A6644AA26EBAF342B36AEFAAAC0AB3727E59F1642789A1
765F02944B8E689BF03404F5426F7148BB8FA709AF1344271173529372AF6DA3
83511770EAC39ED55DADB32778CAE943CE6E928C9521FE45A04F184800733B13
440F514AF796BCDD85974E0AEC9A164C369C237DD28FC4BE2843036E872B2A03
163F0CAD1BCD5F7FBC20299D5C6FC1EDDFCE777B796FAD72EEA5713D78F437DA
E50160FAC28C1C21FCF83DE1B5516CB04C7CABC1D37D26ECC85EC180EB8EED1A
6E85129293842B429B1AFB33D68BC88143F92B5D64DA3F8DBFB0D329C7450A21
E4F97C8FF528ADC2F97F87C592935C07955C1F1B0F125261DA0D2F7312CE5B3F
3A1DF65DD60AA679945BCA6A71E4329DB73E7F29098787D96D89D74796C6908A
EFCAFC2C9DDFDD855116AFD66EA16F96AA4B9F040771F86CE98994E113749F20
47C28A0906100EF57663A483AA7375C850A31668037014979D53F051CBE5D246
FC0CAC7850013FB3F1B075D4754A82A584DF54EDC7C8DB59B77CB7A8592B7CFA
7D097BB4BF8EECC6634A8112ED925C55E4B0DF0E5BEE4B29E5DA8177D46930E3
E90AEA7B324350D5926BF3AAB7CF462B8C46CCC43F2AAB8ABEDEF76AD7F14CB4
16CC957E016A4C72A6A2FC3DA24AF084E7544D8A76154942ACCED03A7785D88F
EE716F2A7D77A990393CA5CBCA996BE2E5186292AE634456B428623FD1E62155
5BBCA26C986ACA69714EE280FFCC692113CC15C94DDD294049748B473FD5F4AE
9C321F8D3A7609539BB1E313BACC161E4DFD3BBD84E1216F1446F95F7E0B679C
0D5FE02E0CF9AA45628844A54275C0E5894655E7B06095437FEF27B81EB14663
E3073EA68F60F1D5B1A01C9D57853580E6F180343DA29EB6D4908FC8959A9D4A
0E2A68646E9583C8C060D55A4CAC0C79F590A3E253519DC09411034B2ADE33C2
4A26C32A540E57220AD7ED50090ECB75DCE61AB204ADAD9DBC56B76E85B7B6A5
705502F55E4CCF7708A8443BE79704632DF95672602E1556207B8E2CF3F0153E
1FED95A43EF0C9C39205BD0A525316943C6E16AF6BEB604E3D7B784BE985DC57
7101E8C0B884FF5107FA551FA76B2B182FE2035F15CEACC47B532E2A0CD7BD28
82E79F66AA416492AE025B1C8AFC1072F7FB0206DFC09D50CAB4224C27161748
515EED8C9C455107A2D2C943E5E4F0786C7F4EF8C2A5A242E84CFD4DC50ADFEA
0C2ACBBC7CBD5840EF7B3457F381362AE29CA13ED2AE02B4A8DD7351020E4304
7E47CCE0BDC342A927FFF8372D4AD59076D886295D55E47D1905E2BEB07286F1
3E92BEC1A6740EEE7E8463FFF7B0A03F7B5931AB2418F069ED566D63A5D9A7F3
347CC0D290E551C3AE29362C779ADB839D99248049F215BB0F1087E6E52CB4F7
4973FEDDC9FDEACCAF41206F504F14DD921D63C229C8B7CE8F110BC2336E6B8B
93E5E8FC0CC4A121C38F9927527A4AAC3ACAE0525D049BF9B0C16328F8992A12
87FBE4016ECACDDB4299AAE2811E499C038D545584A870538E2AE9A38C558930
FA9FEB325D9B4567CE2EFECCADDC8A013BEBF5805E9E3773D5B68C6FE65EAC53
411AC6E7E26E49BE5FE4A249AE066DDC7393F29B4D933306793C754111044E6A
29E55361250C0812522FC5B9B91480D75B36CEF1F23FD6B2F1AAE52753EE917C
1B899C55451B2E0D7EE6C0018E21B6BF4C790B5512330E38997113EC573B375C
F75F77C4B4ABF7BA88676DDA7A420EDC36732A2D6D8EC2BB525C8A5673B23AE1
13B27C840C2A5C22FB0CAAB9C889435DF35A5681980B77285AF53F0C37CE0014
2A9692810D9AC64B5221A4CB065B2CE1ECB841AA4263EC9EC6DBF5169BCA3F65
DA6B3517623764136A5FA5E4D9C692932CEBDE9CE7F7DD4772C2C44C18B52E70
7CCB800762D20E8C52EA30A8EE16315D4FDF3D2B521CEDA9446FDBF353911A1B
884CABA6261D560571CACB5F15D022A8472E89AF63852F2DB69C1C1CE080F690
90CE23089253F14C079EA989CA1551A47537FB356B805ABD7FD9DBDADEAB0C58
89C672AA53D222D84CBC9EB9BC1C8ED0033F5C236FF4F8224C30B0E7AD46A088
E256407A554EDE8CB0A377637DD7BAD6C8CF1D70B9CA4381DA2CCE50261937EF
4226A8155A2B4C4BFBEF1E1A860AC2A2F2D25C1BCBDAC0AA6636EFC35F225CC4
9082CF4988547E3A45A4DA0C188AE5FFCD111CA5FCCCDC961E318A14A720257F
FEF1954D7437D9D11E55BDAD6163341BE08A9EBD674FA754E3ABB38BEDA28D35
D73282D4F1F9A15C4403B7C69C7C2733A8F06A7361E0635EF78EE2521C2A2941
8764E4E7007342F3BD4C077811073FB73D34FE110BBDAAE3FEAA377C8CEAEDF7
D117235385BD69D068F1BB3C6B565D26A548F04FF20C785A6F46E7AB1852DA3A
667B138DB0BC131C3D50C16C7ADA4B3A932692615492C046257CAC1CB9480A19
E8CBD37EA99E61CCCBCC0B39312F234D4D03C43C5BBC8DE4D1B2E64127A9EECA
F4EA40816B2D839549AB213E0A0CBBC22A3CDE0856BD8640D2B9B1844E01C771
01BE51E7B3C0453409A7BE6F53829103F9CA4A8B7DAC0134127BD0D3662E05BA
EF2FD08793AFD1D55A7C9AC7A60043869CC3E1517463D978B1858E5E38F0CAE4
9D85E5F85D01EAD4897E07633CD81079013A159A4D59897B332E793EC734534B
91EEC5DDE1D8BF68483C3D2441D5610AD600F9E8DCF29FBAB913FC133D751551
E44D6AF809E9D38FA9B51B9C502B708FA3FCB767BEFC65B87AFCD0D7ED057508
2F7BBA62D978020F67B8AF0C407D17BC9A80227F7ABFDED110C7B0C9E17F1834
BFA8B62FAC22B5F5FF47117E5E9AFBA7839CAE44964C974F08DA9B8ED288A674
3B653E336231A46C9B5B2153B097CC1E9B1CA76B2B182FE2035F15CEACC47B53
2E2A0CD7BD29BC0BB206DD0229A2B37F520136C4E3D2C9EADBE885A927B2906C
4E0310DF2D64F17FA59D0ABEFA11CE987CCFFB75D5014387B064500C857F06F9
0D95C79E5BA65FB63124190A6962680A04A5CEB915B8E21F640745A0AB645430
4987D800FF2403F3A9C6A02B03E13DB99D69CFA382141F18BF75E71B5B6E7022
B99AA55C94130C7A4AFED5D0A0AF17B08759FB45133291C5B945CB12B0259765
76ABD4BB062B0690FEE60D4517CB8EC6A76EB90F760AD1CBC7562FE4F387C6C7
9B00E2CFC11D750B8B9E9AEB77C6C781C4F4C411F79B1D23A87ADA31D3A48C71
90B1137FA082E96BDC5D82872E30CA63DC5D4FC31B8B271330180EFAA41BF0A7
F27D2A274B1D654C2683E8F0DF6391A4751C40846188611E976891A2BDFC66EE
858D35E4F676BFE94D5F6B36133B9FFAF07082110264E4B82391D4758099F23C
BD507627DA64EC50503AF8F80D819705FC30C76B0EB28FD20AF1751A73E37D52
00F5A884569A60EFE4263866CD683D9E2833DDF7F0F8E5B487EDC7DC7F17580A
9547B6CDB7F4CCD34EAF4555F34F8023B15C9E7B1729711369CEDDA424A9E19B
ED13D137DFE3F01D4298CF2556E28A2DEFB6371422CDD07263005CD57098D830
4AE5CC71BA9B8CEA1FEBE62D888E525888557F6B08239F5407670A26DB1F7F5D
67C4D22790BCD0F1E86E7EE0B94537D9CEF904EDEC7EBFB0E60995CF6457CF09
A76E3FCF588EECDACD25533064A51A4ECDB83B64C9DD4DBE903FB71AB68FAD4E
316BD62804CA36D4619D8881B8AD0AA4B0933C1D7EBFF54013A009C9286A3715
937003263978467D18E18B8A33CCE59F410FBB89C699E9A53C43B277F6083ACC
004F7639D008DF75543A50B6DEAEF38C67E74FB71F2025DB83B2808CBCF67068
F475601FC2ECED9F4F6608EFBBBECF32F886C8D85857949472AE0AB4E86852EC
0BD581F6982995D8A72DAF160394A460747DC8A7FD6219FC44CD0E30CF5FE94C
5F95054EB0C8DCE57FA72987C464D5A507A40F2C061D1DBBC2F811A66A74688A
14A7841260B37F8ACDFF0D911BC5AAF7594FC0A426D5808F63FA1F4464E1DB49
23E44B129933E3F8AF2A88263213846A61C260DEBECC1EF70DD55434CC93B5C1
7DF0C8EE88C508D30C7DB7017BEF93A6640D1BD5F3712B76EEC6F836960BAD33
020C74C503851F015D1D97DE1F2A22AF9E5DEDF038F2FDBC3E20D463BC757AF9
7039F8B104C43A87080E37D1D7305E7308D2A3984292BEFDDBC9F587FA9AD60F
F1DD01D820488450336225C14872946E83F574F370790FF713D5F12B0141EE5B
103BA5D598C052BFC0B40FBFCA767F3B1EEA76B1520772E3C1203F0A6154C198
C0600BA373C0C613DF501477E2C13DAFABAC0AC6A605C61E4920319CB934901A
A2D80ADC8D0E7E71F8C21BA46E833E6C0DCF6556C1CC6A1C88EA8DD67FA9B2F6
2B5E5B84B16072EDAFDA40B773C7627EA6300083FAC01F1A052E23200E94DCDA
8807FC3021A470AB75105E60AE0E07D48E52A869C40EB55CF31782DA1F2139AE
C4CC7F1EDD5CB4F89760B2E3AD1888AF21476ACCA139680095425AD8B4DCE63A
5845CC77126DF2D80C0684544DB1A80833D0831D0F1B5FF1501A1E6B6B3293E6
54887E4C92240A17C421F46E0A3F76D92989550E6E90D533F1948A36F07F2E64
2E6FEE5FD39DCBF8FF3A6A139AA1AE684E1539E549972C97321FA0710759B6D7
C394F9FBAEAAC3B3A5CC1C9744253567A7830362372D90B2C62F58C1E729F224
EC05FB4EC009EF48E7E56CA0C3BD317B507875E601E6C0BC1BEE8EC0B014E2B6
5B59A8AD04AB2C81845DE64C387F3AE3EA8386A9CB5709C82AFC7FD009C263E3
011779EAF2101F7D6096E31DD04673015AE75FD5A8955F09EB5CFEAF9C0DB75F
5239E01207B63C88BC5BC19777A3F38F7EBE31FE7F66E30BAD235FDE236D480D
9250A1EEDEC54A0D75E0C853808E0E444A9089848CAC014692B1C29B425E2C44
7E62AB58DB1417C45C7C1E25C98E92979341A8857C6032426D3A136BA5640595
1627A6010A110BB390AA5312E192C2AFB9293C1FA1F83312E0CBB7F34D361C8F
2FA6586429159B59344CD8765468462B9AADD9F877A33AE08A7D848E5EB4ABCE
28B2A6342E7FD23E1BFE1487D82689119BB8567382BC3F3F43205F6C7A1F1D0C
DEB9CBABD7CDE1BED4A8C541F29AC54033E2AEA70CE57180265F10B9458B6B7F
029FD4DCA975DC5053D8E9AFB6600B7E2D72C3661E53D8FB212EDE3106862F54
A3D148BD88425747EBD84BF3A610F149B5DC15AEC0C2F352F81DBD13A9278925
57DCF6129494C920B4FA5FD6B15306114179484431F2E228355D76EA2AE88735
DBF65744CC3CEAC5D2D7334976E4F7671BB4E92AF0B9183F250A60A7950B3939
DD7709712AC8051938DBCF63442E4E1621C7B4A3EAE77A96BC8D7AF0D61D9E03
581F22C0D366590BE5F0147D68C3AF6E90E27CDAFA51827C5774CF4579CD6557
3E89FE3A8E51D18A41176C4A8719DA2C75A3CE10FCC29EDBE9205C3B59D4F9BC
3EBCE5D8E8EB108CA188CE10DE7EA7B134857857EAEAA592F499107FB92E22D0
7071D76B34DBB96F58E6FB24BDB8485E39CC98CB7276D8FF902DFA75BC447401
DA6A271351A831E47B7741A1EE4FF0706BCC02E5E0ADB5C3E352E7F66C743DEB
4EC14A3AE0EF469A2CDE4FF04A5390F0F2133D75491624029ADD4A9209DE8A48
5058AC94A5007B4F76265BC8875392B5354BD38DDC12C097644D376A01518956
381347C7BD2E67F7F7AFF76065152407698138FFBB16C5A1132F73A6E14E09CC
B4A51D8F938F1BF07FCE3AB280E335B51827382C234F843E59D0F54B3850227D
2F6D538FEEBDD697C394F6F3B8BAD6261395B2F35826AAAA4737FDC0FC2D9258
1F94F9BD935489C0361768A3432BA668F5301555CB7F97E4D8AED28DB578AE72
62FC845FCCF787429F4A3995CE61372E8860EE0A5930150D0AB4682B25D8FBBB
10124FFCE4795B5EFDFC1D6678376BA32ABBD39841AE090FAFC229BF027816CA
6991ECD1873495FAA5C7CD44201F5886E3878E5E2ECC45C985F9C4EE95BC32C9
C95EBFF0E7C2CE97CEB430BCFF5A9055C76EF4ED2A397E30973F13C9C94E38F9
3A7ACA2BC270E4E404F8A08B6EA22077FDDCF0DD90C5A765E76365F3143D5347
21A8FC57B1DDF4FC0C5AAA936685E0AAD3A215685A828CC8BB2BC61D42A9ED9D
B1670176F8C33FEC0D845F72BE9148067BB63A9677122E5CB055B6F1530D4C0E
5E38467F77261BED14BB65720C16BC1371BF8A5B0B825DB940B2125C16F98224
8B458B28036A4B32B3491B7D4E0731012EF40527BF0AA0FDAF62960B857516AB
6D71E4B00F202CBC7A829EB9B31462C60752E5E4D9771C3B3FC8F2156659677C
BF68EEB49B94CD1BB0F246FCF1A109CCD37C2993F63B6A23D412CC5B8A3A8F91
3D84D86273C5839A1220D9B2CCA344F91CEFB586ABCDA6A329FB5D07459B7E6C
66685144EA49B7DA8527B5ED5B7E5005F73C09B2279ECF72E1EC79A5458EED77
B3191FF2B7FC8BF3AE8B6F5E9C82246C7F9FDAC984C1C89C0B70F7654DB9EDF8
305228BA8CC82092B73301E425D4E2ABE4A64D472667986D6BBE1EFE790034E9
2CA52C242507921E828D5EC28B1D352911A8E507EDBE81B4BB62B6863A4CFAE3
7F715EDF3EA5A33679F948828E0034288E97C143576D2AD37F46E21F017D2EE2
1DDBB86841E16F7904932F13EFD1599DE95328D3083DEFEAC15DF4DA4120AE6B
B7424A76B49084DAA4E59973E63020451636E19BC9CEA795AF21EF3258E5238D
15F8987B946387E6DF677C977AB426EB6CF686087DE12B387B4B77C3751BE6F4
55B48BB452D8EAB1CE63B736201EE55ED960797BBC187FD33134CEDB86D1A599
2304E471C0EEA5F5F22A250609FD5AB0DE238B001B405B496D09DC0FCD8A2EED
DC7295EA159C11B1EE977C88AE260A1D2CF74F0EE0986BD86BA865BB11FBF008
D13A744CAD68824962EB5F60AD32CE002FE7F15CBA8F8D641E848C5D57FA674E
EB53294C36C60F1F06698D3E30BA3AE1061EB1E70A67FA23F60759FECFDF1379
E61C1431AC809D42FE8A0544484883A0F02FB4B3781CFF5E1D1550A313D1A03E
53547C266FCC8764025ABD321F25418074615F7699AD0AD677263F336ABCDA93
6F1A9CC881DEFE4AFA5C608683F2F595DEA5468CAAC2B78E5A1993F2B6373BD7
4533511B47B3B6FDB110BF87F8ADA28B1791D942396722FB58FE75BAE3363E92
9515DB75E5E51D982CED26A7DA263C09AD0E674C1D486D4F59FC3F155A19D63A
97CC6C8AE21C0DE4F85E72873C443905211783CCC1B4DC534513C8EA1D6D8907
13607A2C117C07604B899D0465B7439C83453029710375D9F063B335EECF830F
146463EFBC37511A142136A1277E259660759953B83813C9BC6CF05A10466AFA
5462D276189F7DACE60B2EA02E66EB1B1039C84C02E1F9C93AE270A5448B0F38
289955FF8AF08AB359187DD339A1F2AB6AFC3E79BD199CC74C43983E4F3F89B6
ED615FB1A022FABF29074FF629E2D24F4B9E46CB8F5F69C06C718EB5816676A5
B6D7BEC0ECBDA8320C05ACA4914DF3E56D335825BD5474328B7AD72AF93724B4
0E7615BAB550A8E0F36D01E48058D763BFCEB4A42BF0A25399BA8CDFA85E1E9B
8163B23440457B886316FFEB29AAF2916AC16E116A1D79D91316191105652877
A7E02F04CFCB0DE24EA6A803EA7D37FFE87238BC7637C03AFD9D65C06F84A291
CBEAB880B16D7DE7352BF4EADD09B46F002A6EEECA27573AB03CB34BBA039100
AC64CF3EDCE6F520A16FEC6BC543657B58D17313B32AAD5454DA998BA0614001
C00F5D36C5A8CBF1DFC11F715B1E7A19DCBCA6456FE76D34AD5D4D314FCC5389
84EDC708CDFA2A8570054C243ADAB55F1BD0A2AC1D73029F6E0A9006616F7B0F
6A30D36BB285E7955CFD860345F16D91D299F85590F436635DBD68DDDE8996FA
2403795AB21241CE9D179FEC22D258A9F7CF063183A0278A8DE53E79A6879E11
EF154A08C869BA1CD17D9F4DD939425066EC1F3B3FD4544A636A804D2FD6F7EB
7DAE639A22D4B5C4F2F76BDC20E5809F5CAF01982ECE47288EAC8F6969FE7391
9802D87AFE17F524BFEED6FE363BC5E777D703D7ECA0D268F5AAABF3E48C1DDF
045E80CFE0284337B73119D0BAB01501D07654C470FD226F1E98C07ACE01B113
C27351DC45A1578D2C46894326B7A8A4FB5B0B3CA97CD97BD03EEF6C753F57E3
4AECAB0CFEC7B07A150D7156EF5BD045FA7B95DE5A47A7CAEF9406DA16A1BD6B
4FCA65F7D89833D8FA824F73E37CEF5B7B63DCDED18D6B7C1CB3F310794A648F
0D3CD8F51792E322DAD8CD3CB42637273D6FD47324B47C81CE0D182168ACDF7C
EF71ACE4E202C7FA4A9154690E3F2ED8BD1AF09AC4E8A0BD65C24B73B8E5DF37
44C86A1FE55F5369B12A05851331961A7D6FF38A261A3524EA3A004092AFBD59
A17235FED8ABCA9EF22B950DDB38150538219C18735C6FE1823BC63806F39BEA
09B37359A4EF5EA889861CD9A7048BE25A767E6219783CFF9219C646A8008D65
CD6998E813BAF9B49526E50B6D68148DE8830830C374D6FD6BC149DE1D1B6B4E
05300AFD3858A5D2AB819201A05B39F1A395E36C483732D26A845F4C4F01F4E1
5975C89124DADA58C9CCCD72A36E6529B303BA1340739846C649BBE1B4C581A3
393E9A1BA19F0B7113FD506109A7D13B39DCAAE01F984E0EC960DE81273E2CC8
7AFCE644D65932A5F34BD97794E7411E624530F2BF04F22CEA7384122E6DA850
F1FBA04FB9CE4FA973134372970A35FBF96123FBADF96FBC7F0971C2057CC381
94BD297E4FFF27C7AAC514A42B421E076778E69BB90B0D130A32445972FA4421
3D14B429F0D5EFEE1980413950EE4337ADCCE3606B1AB98B58BBCDE9B1C02DE3
23917F5A206046CDABD9D54EA413DE4846CAEFA0457F1B420AA61EDADDD60410
CDF5CA46C02528B30C3B28B0F44DBB92FD793EA37DC67D93D0487E7D3B9D5374
3A9984EF36254D60772A0EEDCA800923461E0CB06447F7DAF2599EF2718C3BBE
737BD085229CD7C1990141AA674EC6C36A4EA424C5C43435870DAF71D9B1EEB6
40CFC45DE1634C04CFAAD333FDF84E0F33A2EDC941295267627FEF41D96344A0
5EEE4C43E2AE2465717099CA86EDF3B85D6028CFB8B7C3087738C87987C4699E
2313E93097DC4238C6FCFD622379032A2CA2E5FCA74B351099FCA923AF2346E4
69D4BE600409713AABEDFB91505E5AD4BAD7E3D516D09D38D4C49FA268C0A6B5
EFE30AEDBD1CE8C88379E352496A755F2590068032B92725B4220BE392053C4E
1985A7557735458BDF077449CCC13682030F577C091CE0F82D95D2AB8451DB68
3159A39413315661954DF160077B16CB4AFC85B4C391418EC9A310ACADF9D24B
2EB524C6AABD7EFB03CF1B8F6668C8B60FA8560028155EEE6FCF95F2CB0E3097
CBC8CED728F190BE0F386E1658C134D080C501D3D8DDD816A28D7BDEA7EF6C9A
7DF4EFF9DA9D4652CE666141182F86363100DD42588D6723C4036D41DA43164B
ACC8ECAC6EABDE9C4F583892F7C7C03F1D5F4748B5DFC1F8D787F99305E33667
FBBBF11FC3780E630A24EFB520A6F60B505174A513CCBF5D498496818C244467
171449C73BABBAB53F4CD61907FC773FA937A248D6B91A6FB05DCC02A67AFFD4
8C008370E116DD640AAB59DA1B39C21AEB714781BBC953A7A8CCB0C007F4C502
42E48324E9A31040AE138A8468313D857D0B6044853C5346456FD749529EC1FB
00BD8DE46F67ADE1CF852DD818F07DE0AA5CFA497E5760A1526872FD1AC6CF81
9110E6FEDED3E62A92EF184C7B9340E3EA6C08A27AC43C5AC2A55FDF4D6FF38C
1F6ECCD8E1C2581B35BA7E1B6B3DEDD1321936B04DBAD95818B4FDB6BA2059AD
DAAC725D06E4441F403A9D105E4738D27012AFB22E52F8C57F195F6E652413F5
27B2581AA05B04597ECFC5793EB1C455C989AD024EDEB72F0E9058E0273C176A
E382C902AF1A86C6E9E498361675D2B472AC5B632C8E5DABD16A1F78C77DCA12
77328B7AD72AF936794595E12032984302EB1804481D62AE03D554871481CB39
F8E7D0C2F12AB40F3AACF57476FE504CB17DF50585647BCF853F35B63BFA9563
6839FAE545333178DE2998973BAFA952017B5741C790CF583B76FDFF2F201A28
1366FB1FBC6CE37C66C374D3A1ECDFF851A37897F8B7F679460E7A369F2BAF62
A351A9F249BD6B587778C77D7D803252E700C7C5109B7E894CEE84014645C0EC
1102BE46E5F8B4EA43B83EAAD9F50ACA8ED0329849998D3F95098FAC842B9A85
8C33D4DC6CE91B83AFF24BE6DCF6213C4F8D9EE3A45217B2259C4A076BF58F08
09EB152087A89E5F2534B32D3AAC58C2BC29E4E3E882D4C609DB6C5BF98E83DA
93D05D9AF0A0DBD5145F0FA9B6B0420516A5F818A212DA6F1930B407248B6665
B55A3FA9B6813DB5D7FFA4D0D4CE63891BF0A2BB9F3FD7239C84C5F70C2E0052
13489EA21075A3BAB4C488358201D37EE340AD3A923D8C7BCCBE3D2F962C2514
671FBE422ADC3147E7B4F682116D96D8E1D86A54EFD1C11F0C83BD84355B43C0
6B19887EB524D6E65C5726EB9D729F32B7A795B91553790303BC2B34C61FA82F
21D77803AFDB520FB2B7658DF687C9A775D9EA3C72674A561939FD225051424E
F20F1E31501B20811C18584A9796D33103F65F28E9625E1034CCA473A6A7414F
9062FDD08665FFB9AF944A6EAA92E985B513F3445ECF5D8352F586DE03A52E88
941D7387A2F92A69CAD3FFA9AE559D3043D7128042DBFDC63493D8B9EF337119
47B65B0C07BB7FE129E07D832CEB52B1DF86A32A0946A3BD1E8ED4B742EA9056
76FBCC1D312FE2FFD0CF3E5B55F0A7492A8E73B103DCA5ED632E4A89ED435F4F
843AEB0DE2D08746E18A70170631208BBBBE8FBCA23F602F13B2F4140A0A7DE0
8278D574B20567CF3F09D11A879A1D9EA992B3FB79991E61CF3316A3CFEB9E33
8EF0D7B0FA721D7D11990750232DC32ADE213B812D318CA5B73E42806472E799
644A90756E6092487DC47818C92555B5FA22B8E2D726EBDC0778FBBDE7C7AB5E
8E17519BDFA50EAAEE490C76CD606A0FBFFAF82DC5B0B8383ACFEE3B6938E48D
3D951EE81BA9237690ABB168FF8DD6EC74957607DB3ED0285C3F4525E986AF6C
983D4950AE2043610480AD2469815377244E482E7F9F8206F24A189E57A0B5C1
78B7326860AF2A31E962AC7D3A94AC08354BAA8752283AD7D74A6E8A05E91BCA
CBF8C2255DE4C035D2303AA66DF56526A41CB141D6606C1228B9B2F296281350
C23CEE1D869C4B895050C4AF383CDDF2C69A19ED006FB09A05CF198DF82D4F2B
787EC5C0F3F1C293BBF681F43E8C4790E17923AC043D204C2521EA9578696F57
047C7CE41C119A58C91E9E8C4DF630C7855C59CF9E782CFB09DF52F10FD38560
29CB2DFC0D761567EED3DD7565C4419B7D05BCBA0D2CDC7C8388C5455C976C40
C6E24D239FCFE9CAA763CD150D454FD0D94ADD48BCAF67335C61B7F2B2B654C7
0F5370E5FDA039402546DB208EFC3CE2DA145B6B40DA1DF5E91F763D625724CD
4ABD2941B3FCD5A155C783D9CCBACC11268D7A5C9C23C87331C9579B9F24D5E9
2800023AB3B4495E08DBB8B1630111C49DAFA1C1ECE1079AC65D8CBC03DFC3BD
69F1FBE5C86EFBAA13E5B1927A3E9CCAF3B087B653442514C6FBF185BC23EEBF
DFA06700E07023F2897828CCCCF0512FDD24CB36B0C860D332BEF4530B351B69
7B29C3DFEA3E474F6287CAEEF770382359AA3162320D340D735A86A08EADD2C9
1282EDDC406C8C00B476F321DFBDC8D8B289265FD8D018113158BE14B4C59A1A
D1EFBD0B82213FD463BC757AFC81A0FC5643B5EA52C15F5AEF6F3D61FEA77636
9098750B6B07B21EB66B20C3240507494F7F10B401C9A2671D8823EC7B74F1E8
A369DAAB3305C440A686E566386C4BC5914BFCE14913B22B6848FEFA6107790B
E7B3C7F55A72B711D3EFD92B56C3AA4FCE302713F2D03E73FC22FF6ECCE996E6
DFC40960E118A3C99F54BAD880A38BF738EAB12B9B0546E7C1E9D971C61DDB4D
12E9D6A39B9579C9384C6DA654AA4124D577D774A217D4897A26101713D728A3
7996DF61AE7EAB1C061FE75A0149C4A665FBE767CF7627ED3AD4456E3A67BF5B
B49920F6FE6620D69A578A98A4E666860414F5C000CFB1279FEB8FC14062F048
294EA3DBBEAA7A63B0279661F69F181917D92AA630A90531EFF98E8EF876D73A
B1D963C8365E8B0C46E6F63FED1F2D0C671F4637AE61246D8B9A0031CCDC5B2A
CB73397C1A8F8BF6E5F7F2B707FE561D2367CE212F2E8663B3BDFE2AC52DC034
50FAC89753930076206EC4695E35E06FE4414B62E148DB423B884CB7154B119F
06D1D9D25F5879A0D67E879353BBE9CA0DC50F7C36E945961043BD8C7908EDD2
15CF0A0F1770DABFA09730FEC742F9287F2792B92D6C6C8751C72D0408F82D4C
916BEDC1C82BBB16B64D80B5A672E2C284B9F6E0CAD92C3E68A715763FC442E8
A3E718DCEE6D998B0F691FE4DEE7BABDE53BB0D3F91FC914E59AFEE0ACD9511E
AF44E12169115BF4A08173182D09EB6E0105B8A4443A373C8DE253233006178B
9A6BC69828E8B89FDEF364C224B3C87F241CABC4F995455BDBF10A35A1210E15
5E83ECB2BF4F04E90C4A82F810D4E6740D34126927A9E59B7B92FF780C412A60
6D33C0739CB88F0463541489F56666025C854B28533F3D64DEFAD261FA16E106
C70A097035549861A8B6D57670833F82D75E0BAD9CDC3302D01D7138DA8832FC
DD816A2AB41856DB912A7CE1109EC7BBE8E5B7AA2CF43FA2AB8EE42138BD9665
75A8D085F14DE63891EEB88FBC9E57392327D5E0A8252CE482C82696E65DF2DF
E94B2D54B072450D22C9EEA215EBDC5652B555D498479D289A015F8545F6863A
9A3F8AF10CCEE6956ECF413DC3A85CAB5CBB66B4656CCE6F30ADCFD2D364E623
338F48591719102119E94671D6D948E55FE0FC7F464A0B2D3EF7B704F7641BC2
638F23A219AAFCC0FA245C6731A2E8E561C63B7BC3147C442F6B34B5457E6E48
141D58E82D248A206E80EDC58ED6BB11A7D7613AA7C519BCE1182B6C30F93DD0
D7DEAF244849D5E120C8C3C96A3D38A88E5D4A955946519162745BAC903B06A5
700A7FA1CB7AE5F53FA2E56F84C54A89B408876048521F937A458A63396A578F
0213154797BDF8D0D1FE3262696586A92E10FB3E8D7353FBAFA30D7D0A00F411
01A7F4A280ABE1C7F736EE916ACFE714A76C37B008A73B07518B9EA8A3028D7D
A9987B6DEB3551DF422DEE880A6518C3E585EA200884B051300C269B27A98493
38056AABAD822CB4B0D735D46ECAD9B3058B11680497C58B02E3C78C0813A7C7
D2AA4DEAFD87E0B80F614A199A24E73214CB9E341785567E831ABB7D7D60BB92
2A1A6F8D053F2EB3FA8BF2C5D6EFE5B2BCDF1851781E3A244986E26AA8396D69
6EBD94E6EF1F3ACA5708D6123FB16DCBDD75C616ACA08F8F6B3AA1DE3502DDFE
96AC2CFCDD9467958904FE0CDB65F52BA057443EC42BF773A7F2231E35FDA906
7DECAA8D338283FA0AD9DA6CA8658A573D81F89504703150AD673C8CF43B1D23
ED27CA35A9A6476263DDCBEB28AC7A2843FDED360191CEC83804BE5E310182F6
6B217FD6CC9B23CD9DBB08CE4B28C0E2B257C2ABE940D44DB17131A820C6179A
8F984CA140588375EBAB53F758648FB82BC37BE81D825F1372C739AB5082DCE3
042DC9767C407C0DB4D0FD1A4881A34FA19C7B45812C8E9EE7A622F66300B69C
5B27CC34FCE075D08481716368E01D9130D3010FCB203D50D9D28E4419820791
990C201FA4DDF49EE7703D9DFE30FC3F11D35020DDD30DC18FD7A0C09F19E9C0
302071E598DDE8D6256183E9BF5C9F1644E40B2B0C342B848B632D0B88E14D1F
A48F7F2648E1819966BC2476D4AC4E4347E745919A7061D05C8F655BF7D16123
17DF305BD7B385D4952115E28D49AB56B74E9D6E459220D22D3C6863DF4ACB9C
7A7BC2B4A83F47864D1624747054CC3E674581B8E88963C476AA8FBF4E30E12A
ECD486887A5B6CF74E1B52DDD91497DEEEB591E9437D0C1F5CB8EC4F46CD349C
F1C09C101E4B254452598EE5E6713394B2FD8E279823769BB41600F20CC561E8
A2CFF9963C615AAD667D1154066661038CF2C93BEF8D83E143656B00CD218973
38EE43D1D52CFD0BE1557746608D91E065D219AFC343E9A52406037E2B86C88F
3E83C98EC71CB8627476F7932734432EF4A7BA2612F343751A68EA6CC4FD5FC0
220BA2743ACB24EF5B77E0CA5AC1E6F13A8BA831CCF52D25229AB9C410CB04E5
A931F0D876894372B84D03D1BFAA10BFF2F719812D43D7807770C92714301844
7A70FD1B979C71DD0FF87700CE95F21C4C1C9C326172364A0B79235059BFB3F5
AA27D10E337086144AB09286BE38216E755C86A375AEA1A0FDAA7D46CF5216AD
CB21A84A46EAE0987D5C3329FCBFD894D1F2FE8AD1BBC6A27EB822F36F8C08AD
FBD34C9842FA826114DFD201B608B578EF971412A59FD8BC7A0FFCD765CDC64A
4922496D357B64FD8AF55CD5CA984E3974776725AE1BB7E5593DC6B1B8D74817
19539A584A375CC8B9C4FDF77D301680CB83FDAB83C77C2D7887B361297AE1D1
E38DC82512E4336F16E7EE6CCBF43EE9C02CB6F255587300FD433C3B4D9FF296
C8FDCAF439138776E7DBABC3145199DF6DB27C986FDD9B00082942A5C533BBC5
342091744EB5AF7CF0ED03D9BC34C4BD614EA7496D58CE8BF62247CB10F89304
8D5AA7A9F799FACB6315A2110148ACF5E1BC35CAB95FED39EF8AD50DCE139744
B3A47D3AE4434048AF94643CD8E08A18341BEED641D1DB07D0DD69386DFB3D81
44988BA830044701CF8C14B23128617137DD98E2016A73BA0D374770AF05EE7F
D59641A99D3529DD3B8224D77F85F0DB9441FEB9433AF21E8D84C50F75043419
1ECF16684E013184794B06B2827C2455060A8B4F2DA480577C0B4E1A274BA19A
AE11A355F36DDF7FCFE363FA0259A6A32D16232B7CF6F28B67273E4D7BA2F155
625FAC1B29BAEA38C066EC2DF48850581F6F92828BE7CA89BFE85B99E8947803
9DCBAE120891E15F5D584C42B434EAEF15F5B71834D2BF6EFAC3CCC40D3EF3B2
E2080F1484476E8C857A01BAA2C5C2C79D8578DF1E5081EFB6EBBD8BA37A62E7
E0FE022796E62FB435868B8E06FFADFC82ABA8736FFA1AC28B04BF3DAC8F2DD4
026EFD3B57466FF4196CA02456FD03F4C387BA30F95648B600B3975941C66248
9A683647271CEAFB8023DE1604FD41C754EA868327146CFC9D963D769A957C8A
11CE2A8DC48181C93F2C5485FF5C74F992A78703081772B16091B3FB2C085ECF
3334C12B31833685258242CB84997044CB1395A056C2C32254EFDA69E253507A
388DE74333F6462EE1DB7FD780B6651B2647FE0CDE1A2258F05CBAC20AE0C9F8
0EC2B8DC75AB3D8F141B95F3251B6DABD584F17C7524786CA1E84E4BD9FE4147
21789A755AF4B6CDC2165E496FF56CAEEB32CD52FD99BDC3BE161F4C1FBA9B85
4899BDB2E3390971EA74DF32D730CF09DF4AC89B211985D09A39DD1E688F4D0A
F596BDC1BC902B99F8314A86E70CD8A5A80A20F81AC3AEBEB0996DEEE69DC68C
138FB4F7E2FC2D97790ADFB7D4AE2DE1288F04663CA7C2572E92D9489E8B02FA
0753A44EC9E581AE3691C027FB01BEDE9F757EAA1BAF3ADE6EF9B4205BC43BA3
CDA488E512ED42BFF0999BB3835BC4726C4B6FB6896DB37C83C52DDB8358FB62
C4B72BE2093426677988F8AC9F7FCDE0DAC8BAE3D0847692B21D5348E3F6FBFA
F7313B1FA589C0DD6CAA6707694BB35AF8B365EDCEF861445EB8E445EFDE8E00
9BE49C613EB234EA2AC527C5E0F43C29B797B00D04ACC7F5F3A7A5FBADAB4FCA
85D1E0E9149E638845279D7FFC8DE54DCF5364857EA20DB515C86F99D9F39C0C
4E30EAC75CA96A594D27DA3C1237C61DE1A5F5B26FC8966C83063681D7BAC7CF
BD831106C2C195D22E11BFFA2EC9FDF7060ED56A9947DC9406DE7410672590BD
7BAD0511BD8187E3FA1A4B633CB6598F3F77F3F0723B3CED8B0B9807CB1E35BB
E7ECDDDA6E7FC363C345F8B3ACB722B0D9EBA19308E83F0FA487B7233DC677AD
402B32E799CF8B038A3519D4236FC473CE71A6377E32DF8E4EF595077E9B8AFE
456986F268ADBEE64EC4EA851AF4CB1A21CE90AA0F5F03741B47E291575E3BDB
0305B7E996AC870C05B6D04E2831ABD0593ECE983CB5E976DBDB2D13A7F91E3C
52C1F8296D44549A5ACB293CCA55299C1B7FC3C95255A0F474722C2C0261EBAD
EF3B9CC4DA476FA01467AAD9AFFE8CEA10F0641AAE9B0F35673D34FFEE27F8DE
15AA8686137C75E49C91A533B409E0D086629220B4262A9502FC88AC0C591F66
241ECA8269A34B5441CC0CFADE64BFB3CAD4DA410E69C542CAC64B65F6B829C0
8A4DE571AA5D31B8CCE697B76D97367E36C22EB474C88ED4A7A30DB09562E828
63F6C001ABEACCA36DAC81C30C179261B3C02C1A29F4281D565836EAE57F6804
90FEA4A7E3B65B377EDACF6460DADCF9A3437723B4437D05370D06605F551CAE
397EA2AD7D021875710C654D9E97727909E6D304C8D933CDDB280F05DD157E37
A6EB7BB451442CA415CBEB8AF6D8424C4DA14793F99D78494432E4D0D52BE27C
86BFD7AE2B988A390BEB352917E28C85B86E837CC4E3B64FF75E77E11FE5D50E
811096ED908048766ECA0A6302AD9FB72610F1DEEA39D2699079347807F7C8DD
C8461070445E6F16A2C5B87A779636760C9A55D6BFAD5C13BB58F03A57E07433
C1EE788B3D96A1500441FBB717E2FB31CA9E6030B970EEBC3219609CA323FA14
90AB34AEC76C7E9268E3BDDC3449B8D34C34ADB130C2E53FC694DA7DCA8F8DAC
F03CB8AAF73775122C66EC7D59E036BA2DC0FDCBA1C570AB49AF137953153675
A67627EF07980663D7D88B4AA2BC479768B32B9C059D3B59F555AD3B58BA1879
35BBC37DCC97D12D866DDBB2E9D321CC8D0624DFAB252E4B92D1F5C455E889BB
F1CBF88BAB99C91112C266328D8A85976B5C34C57CB8F2B0FF22485F954C332E
781289C284BD763ED301C3A74B9A9894BA8EFEC9B4891EFECCDCBF04B7E803E3
3F9FB1AB34A21512EF2B618D7BF15201B69BF2301E0BA418DEB2EB2B18262D52
9DF138ED95C0965F6EF1B4B9F54FD6F36E4650BC04C0AE0FB4F043144C99F35A
215B53DD2A8F46512E7CA9CF68F93D6E03DA4AE6A7E98A7920B72534DFD5B474
F411F9A7083494C09998FB17B13D8773D1003F35771D139F61877B66CD0DF79C
3AE123796DEDAD425BD8CCE939B8F4BCC31426317D3E07E724EE34CB4317FA4B
E766854AA51DFECA58D6E39A107ECE8A3EBE7E645FC46B99EF5AE62DCFB82C50
EC9EFD3DB2AFCF4C308C9E0A0E16CFDD2E70DC54A2A26B1D78582A33F5324815
24AA03C4A49BBEB1B913570A51B2F96D302EF8913C6BB60D30347E0C0F1BB457
048ED47325A221E91DC93BC429BEF4B5C7D348B097477DF8C6C324CCCF965C39
7AF1B7F67E6FD1B5C4C56944521E76439B5DCA7732A29F37A08E67A149DF5058
17CF5FCBEB7DD5871EDA1C1A7482861DA97EED414D6FA40AEC9E8A3D579CEC77
37F9D9CC8536613C961731D322161500E15ADA373D503552C0B76FC0B3D6C0C8
BB0B9B743486E0A343D68682DDD7E10A9FB78702FC95EE0653382141E52322B2
5F345E5A426C7878838228291F60394C911E30A29AFA3052DFAC06AE4085AADA
E69D1C31BA552A09B30216F9A60D1F58E74D093D94D71820859189DD2064241C
0568E46CEE6FD265E71EA36D74CBEFC62A27FAAB38B52465EEE09E12C448292B
BABE08876048521F937A458A63396A578F021315479918C5E42AF88FA2A7B54B
F0E68323C210385FD72FDE47BE227298A76611355D1CC1178888C7F0600AA23D
46443C32527CB28CE97C9CAFAC45E9CB3A9D5F4D96CDA00BC95723B1F41340EB
97BAA2AAA2D619527A955C5840EEAE966F09BC62E0B00A93FCF87163199C3E19
E8142BC294BE33E255DAD15F08252EDF5979C14C46A1ACCBBC6FA8D113BD09F0
5F0B9EA64E63924637F445C82F37BF4505C90DE7B0E3C5145FF5A3A66EBA7746
4747016A56DE1360969D1FE1E23F0AF49750C7DB9939279A093CEA32F30D8B97
15C091CAF8D0B988C07151AE7AFC6164414F82622BE90E015D2F2940ED551440
362ABF983E4E17BC5EB1B9A6B368AA1AF3A022DF5BFAD47A1798199D542502CF
3455678E261DD2E57766C3B48F0AE2AD2EAEC84A3320B7ADF8AFA0646A4031E6
2BA78021D66F223A6ED2EAE1534A139466F7F62EFEB31687868A864914D7D81C
56574A8A37285AE9629E2F0292329EAC1935F8964877EA22D9E5D4256F3134B7
F3A888AC9B4B308A8A510FF245BEC7B3004A57E094DB56B720D616EBF582A3D8
0351CADC60B733E50FA695EA1ABADCBEC3ED6251A095434D81B1A68AFD88B506
A966D12FDD1BE0161CDFBF8BBE8490F57E53C78E97517EF7FB75BE2C48943F40
72013D02D833EB5FBAC0C354CE0EC0125D91C47F34D796FA5A2DAEE1C2B993E2
DE87AA82D15BF61516A90F3B8A854B7EF90FA0DFA208E4C47AEE282E191401E0
6D4E3A5D9B158C2850D3804A3FD46D6C80A24323148F4213CCAAC483B43BE2A9
763FDBBDBBD50A065425E4B46F8EB3B207344F9CA52989AD8A876F1338710D36
87793CA934F06A27C78C5122CD9EC73E29A912FD7C4492035D2304EC4F908371
6CA7906B80486BB5C799325FB271BAF42325A7CA185A61D33A7E3016DD6362F8
E070BD72698FF688E5524612DB78B0EABFABD3FCFF3E6BF969376ECB29BB35D0
8017FDB67ED9FD13987E8161D5E4D9461D2390B36E5A8B6279A5D2569F321B44
C35CB0B883825D1B428F0698672E8720A77B1E74ABF75AA0BB7C16CA6991ECD1
873495FAA5C7CD44201F5886E38BC01F7C83B6356A4F1B01317BA227DE03A9FA
9242F6C789458088527CDABEC674B13580A32722BEFDA8D1EA72A2906D8EC97E
89ED5CD37A5D14188AA679C8D06FE447E4193FAF353AEF3EB31FDB3426D23D1D
73D277C764EAE89F6CA9194A2EB640F2E213494457C432214A3172FA5109795A
6CB08AF08E8E864A163A4B146C1704927021CA706CFB9D939CA9DD44D88E2919
69747968A767404424181FEF198165415498597436449EE0F9445B4C806963E1
FCB5F93AAA169C140A332092187F94485C9684709C709D0F7855EEC149F95C85
3E0ABA4975049E84F39C7D464B8E802A47C2278F2BD50DE2A806B0D7FAF7914B
1F5332362D5CAAE2FA4897AC1219601CFE32E4FD82A4934566ACE0BC38C60FC5
3EA71D91AB4A3446BE332D431AA32C12BC77E3A4F5DBD8BE9505E7F66AEAAE95
52AAFB17BB3FAC62D2051CCCC0A389D730EAD6B05AD28D49C2BDE19E62A2BC0C
99138A50E5C0F57977D929DC9CC8264AC890618A9B5B66A7E7AF6435290BB201
78DA4F0C8F564185E66A3A161EED1F99B8496A9FCFAC13492DF7517E9A7B1D4B
CD68D6563014066201CD07BC78787F62262706317C9D469E6F95FDCDF2EFFD6D
A6341DA7AE43CCA38B94FA65A14FD85D083356684586311579E86AA85E504175
D3CD2015F0B47D3AED696EC627ED1D0751D53DD154953C19A2E022CE824BE8E3
23DBBAFD077E5237292B221C3E656F55B1396D17FE01F2FC42A6B8FA247320E1
FE957E9F8C0386FC64BD8C6B9A426532FBC2C52F2FCEA1823378147D8FD3E01D
BA055CB17E0F1D15ACBA33F3252C7B94550845C0BC778E69BB175C5BE29A1438
73C172AF41C79FCDEEC9CF81023F7D480F5BA2AE398B952239556B453472AE5E
7DD351536DD39BC5317C637EC2C0E29AD1EDDB4500AEEC2DF9522C2367FD268F
72ED28D348B72E28D92E56592F27FC27F1D42B382C47EAB4E1169392307E2D65
B9D8249AD739A01187780A5F2DA35DB56DAB3C53646E49A14FC7F230D294DFD7
C250E639C1B5AFA18771B90D119D08D137EC6AE2AA3470A31013226E188E3206
807E95B814AFCF12A840A967742614C43BC446684FD111C608C81E9BE8E6A1BB
E631CFFC65A4852D7920EDFABCFD4E274ED28D7E54398EF4AFDAB565D85435AF
7584B0430BB45CFB02101EF4AC95A98C4212282BB7BDFC555E17D6EAE709EFAE
B84B0B22BF5C9B7CB9DCE571C0AFE3A4AC17817E48A4442A1CF37E9A8751D100
5486C545C90115D7C9134683BD7AB587193516DF2890D5A2DA7AE0CAB2AC5B5F
CF3A211021A192E3252EFFDC6F753109AFFE2AABFA16FD112A8E2A572A4EC1F7
8928F8E2F602A1336C9A1BD2D8078321A34E414048F729D337FEBF0EE12C8D06
0C96F547EEDE65F5E99BAD99D346B25D47CCDB33CAB7AB3A1B1AA027E1A67247
B9234FDAEBF076B113AEEF498BF3047C757EE0C1E5C70A697C14DF9484FF1DF4
E1A737DBFF7373F04385675D25C929A712189C350C90DFA1C2854A7003CDD3FF
1C35D5DA9755BA29B20A7FA8A4BE1580D9A6A399B4B892AFB196762AAD8CED68
F66AC206505C34F046EC417BD78531EAE279EDD4BBFB4C965413
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890A7D49B0A6C7268E399C6C68B6ACC0D1E9F5B2
931BAF9EEEA6ED985835323E85D72C6A607A99212BA2DDD24D57809EDE36890C
F8121121306593CBADA65AD9EDED7740C9A2F402E3908B54CB4AED249AE575AF
E64C76BA802490ABB489275E5A3F2B926955B0D961A0B9B3AE205C074AA695C8
68FC2F6997531FC328B8FC65BB06C17B212C8C06D5127A14D7989D24912D1CA2
1FF37457E65829B6E1C65A09C1A101047DF20ABCD57E067A7298091C88C4B587
84409C67D00F7D95FFA0D125FB938B5762D912E1C0E116AA0593B1231FDF3BB1
498BA3D20DF13C7EC6D40091B789C9FB7CC872BB73E6B9D4ED8A555CA31581CA
0F057B10C7A8CE1D7CDD4FE2D5332FC533158B8CE6CD3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3ACE7772980137BBF6A5C4C136C45CE680D23B992D7F
7544FC9F70CEB83E2B66980ADA7E13488B61554D8CB264FA76074355F7FF6C55
FBF130009A03EEABEEFB1ABC2BF844196D67F7A6D7B5F71162E03FFD780CDCE6
720DA5752962EF6FFEDFCD9C2CEA3A186DFAC113892B6E7F1EC8B28E99D09742
86959C4335F1C11135880D99DE3058ED5BEE1336A698A994EE977EE325510BA5
289969A95A9A7AE95E3F16D464B4FCA2D8041ED6B2B8238105D63C34D6B78522
899CB1E7D70F65BDD51642005217F472F19648952443BAF4349B730EB09E3E8C
BE13EF4F591B154CC507B65A281DED4D4BBAFDC36BC0A6FDB4E02AF62D84B034
F194320DDA1C0CCC61CD5A79F375776B07BB5F4B68C0704E6C52DF0F6F44B7D8
EB40F218362CFFB21FF4B4028967BA94AFF20952F8A76D14913E6E625B550040
BF1596D49A42C4E0F1177785A0821368D4C6990943ABF0C1FF211AB3DD0D4F79
7ACD181B67B47055DF1C5F8ABBBE8FBCA23F602FBCD06282F11AAEAC023BEC96
8ADC02CAAFF90E05E5DF05B6836A45821FC74F1010D748B87E42580DFB244F84
89FFEBCF4BC9A14A39002B60B89D3F721322A290718487AA1FDE98EB61806171
22C663E8B4A10771D51065C34F92D3B2330A9D7D6BB23579C8DA8C7B9C945782
61F2591BAA2C33AEC004B9C8DE6E85837B04BBED1821EFB0BA657DBB7E5044AD
C14C5BC39C2F755E9337560610DD15BFC5377560278D00122BEA9BDD21D039A3
F591BE868C9F411611BE6EDB47FE6F556CBB2686B0E939DD0FB9D5F20DE9AC41
06B8B86C458CA31F594B539E3ACE742C309F11F9C4AB22C5CF8BE79853CA96D9
497EC2FC273A149780ED6E904F0206637649CD79F2246A93BCC2F7142C53C16B
3C1BBE49A3E509C3952370BAEE4AE9083503B11CB97436EA7EAE1E2EB2BC100C
BEA84F832EBD79207DF7F604322DB2D82B713633F839BF367980CEEA60AB8718
28584D677D90DF72D918D0B403A418F5986A664058480592F01C4B53019F3EFC
CB9F480B444A5E8403AF2FAC610D0E5F010D69E73EC385D64857FC6B5BABB5E9
823572047726266B57577B804718FC3856102410C69EA74CBE6CC810F4F5C9EC
C86553765CFF384B7129F38CAF5856CB3286F48B617BA3FA14548DDB7074E464
E2C4189A1B7C29B33ADE2815E1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5020D74C7714FF08F5AE00F69DBED351708B1C760171CE5
5D0FE3BC5F6769FB19C7951CD5DCA774B841330A2C8CF59CF458230A1642F956
21D23843C4332F05F5AF14E70EF052F02F7E3F51D6E7D68A4FED8D2C4A733AA3
8973CF4CDF768C31E35C395C3BF67A79F8B1AC292F38AB2EF22A87A8ADBE2C55
747D7AF3101C5F1A2A1BF6C0E245AC583FE784CD69B918457FC63ACB5FA24E41
CAE39AA9386736476F5C0BD3D01ACFCABB35BD346B884B97EB5F467C93A2FC7F
82A0B3682C1D7B0CAE0165D6FE43CBD8FA5C85EDCD122FAC36F59FDA7CC4EFE6
1F9F8E88832737186037F9E5AB161B8A2090F5569529861FAEFDC91E823E0A0E
A92E7F1118BCF413BD355CD844D0F88C47B267EAFA1585B4ABAAAB9BF885D233
DE4656E4CCC1AC1A5762BE48F5FA88A0020AF17A438014B5902A55EE220152C9
0348CF590A07761415D2F53A866C95D4A6848E2BB7970D176670F90765843635
9C2461BEA57F9CC512BDC51EF25496B2C2253AE85AB38889B26761BA509C7F63
8C6CBC4BBDEA74FD3B43A178C86F9A97423815F5FA2C09BA590B8371D5B7758A
43F98F4DC4792308CDFE2779CA6F20ACEF23FD8FC11F483C0CDAFE837D984A76
1286C4DC5088F5DC4B8D59F781ED48736CDB2D0B9B51340F6218CDD622544552
9BAB6B88481D111091C2CAE5E19903BE5F2C90E79E2469EFE314329B4653D49A
0C4443075770A91CF9303D9A09D90460D4094163FF9D5B9B8328B7D716708A5B
C5AC3BAB6258E19FA15BABC01C842507B425F413F5CD32933AF5DF44D51787BA
9027C34FFCF0EAE1840E691E7082F8BB15A4E9B2BEFACF92CB46E229D1C0201E
E1258C35478E5DDA1B9710CBFA65D1C788E29BEA16B3FD2201250686F02CFBFA
121208FB74F6FBEB770091BFE8FCE0D7FDD0B632A343B6E38A279C2993F343F4
8465CE9DC9E8C156E559FB50C47152D1F35FCEBC5FFF400BFCC336001F8F863B
26115CF5F0CD1789FE566B01F668423A7E374D082D8E0C1181013A82551989F9
0DA6EF9FF06FCCDC760F21283DA5D165F10CC2B8F46D9CEBA0C03EC78BD0FA36

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A31644BF123DA78DD615C4287ED7DD43B6
79CAF0EB2F9F428C431683A41C2C61A429E3DC0D87D76AB6294CF8CC9918A6A4
6873A1769ACCF25B59CB4365AC451FE1D956E1254970C706438805E25284C7CA
AE679F2B7C58BE9909CBFCD273EF5617183CFA64757627D2D567877FDDED97FD
7C9E73DE4D6D4ED370EFAAB4E52F30E55B902ACC35DE87E70DE8EDFE7D803CB9
B4F8D58998C2ED6B93CF62F8E991B754899CE46B900DC93C5A58EADB30BCFFA3
A71EF23D13FDAFE72642854A3340E64896CC6DEA0F7E3AF4C39EE4E68AA31889
A372F02266FE65ABCDAA308258FCDDD13DCBB18E462B56F956B94CE97E870122
A0A46CCFD6B4158BE06C768C73F0377CE3F21E030748189C553B9F62C83765B0
149330C96EC3496F9F2F9B289307D7E0C33BCB7023200FC3221F12B5FDE01011
87BBF9960E56CAA899438C90156BBF2B14596F131B71830D84172E7CD7C05B25
85A53C7CB0DA5729FD6CA218A1CB03FCB945FC24376A45F2DE0C21378769921A
72E46589CC08EA87EECFDF36B819B07306C448777163A723A9E71F504DA5D447
AFE8CFDBD88089FA4802F449B477BE528C3667F06EC5479B0824B87C47EEAF1A
0A23941B8257A2A5EC3F63FD62DD09890F4DF33AA1E70376A9CE8E4B6C4211CB
FCF9709AA29144F3A40001AB98BE816619AC543753969AC5B540ED39E51F5869
98342686761A7C070EA75140331D7A0DD5731F0E395A6CB0412028C2FABE2E9D
C3B57F412A5CC05FA7599948E6B8B50BCF16EF9825F6B20090E4D6280C528375
4EBCB42B38B7ED6634AFE0B2C249699E212509817638845B5604BB526053ACC5
C0FF6206B2953C9350E57657B374600DA75FB8D5B00DB7BA78FBFC5B95E167C6
CFB9A2275128DDCE62E56BBF35D257EAE99D627535F8E5ACB4A4D3E1E6D9D24F
9CDD9F80028D37C9CB4067A28D41E879AF98739929DDADA413EE35894A6A5B14
CBB136548C4B00E47FA77732DBEA89E10E98CAED50DEC8AB2536A447F7D46D4C
63A99114EFD23133E2FB8243221A2E8AB1CB892DE716CA34CE544502ABC9526D
F48B0762B57F8AAF2E120D5DCD70D140B498BA43863C45D94E6642DD04CBDC31
0087B2FC75CAD18883113AAADF162B023352069DD1BDEF229E16DE8D008A4CCC
BC317B47BE42354627EC77B91564A034FF2F3B60508154B08981B62A2E9974E0
E9A46A3AAC7F87B1FD8620A5A695852F2FF71CD16FA34635B526265F1A635254
75398013F04B49F67164F03610FAAC41229306EA37B9DF6E8DEB1C6C2BDEC9E6
EADDEF6E99BC482289181D89CF74F9995B40E5C55FBC81DC7686AE740022F764
C49FE9B49A108931E3CB077A9C53C764DBB47C789C795E97A537F013BC2BC786
BDA32DCD5A856714ACD5D2BB98B011650B2A5D8B881D6854DA373B002BA279C6
0649618BE2D9B1E10DECA9090F66F089E4D7C6D8087016FCB998B95F194BC9B6
E95BA14850E251A4EFF1C66B148E036AFB7FF007F18AAB4CAA2CEDB34F65F327
D58731A241E11468BBA16BA3494A4E80FF16410385FF17A1444B2D1596343B25
64124D648B1E0955CDCCE027BC9F127F79622FEB3A6781181EAD3F02101364EC
FB540C0B2473F20BF05A8315BBC31178398C4DF5CA482F899FBE7654F08D93E0
29994A566CDDC866CD6A1CF5DA076F94B31AE4EDE8237218A12D5E9DEEB9EB26
7CE99EEF40ED1A5A247FA60A89A2EF6AB95CAE1FB119500650FAD0C18B03564E
B61A0D261812A3EDE5BF402542BD215541E3A478F0933EB129EAE44484E084BD
DE7D2CEEF5E54E2CBE14A20F56A27B70B9C7DCBE9300AA2826EF2D6E38C9EE32
60EAFD1C1B7E9CAE9EE810B4C7934D08C44E8A3EDCADDF8FCD6E289C19A7056D
A716700F391FBA6480099E8276173D443884AC0600329C607B7521B1C1C0F575
F4A979FF04F1B3C17864FBC8B92B77DFD068E53CC9111E290624DC39FB79FEFA
C07D2DA7DEC9642694ACAD9C980FC6F26BBC4B98AA0F9624D8678DDD10596E3F
55CAF2F4419B78FF39B929627428C3A6736D8777332C017A9411BF924DE0E40A
24B0E1B797094DDD8EA17A7A281D007F1F6EE3CB17E0FDB167D05506A96F7296
047E208835176F3154E8757A1C21857556EE412F4434E8062A9F9101ADD125A3
2195B8CB98C9B19235FE35E0DB6F1FBF31ABF448C9261B75BF1EB61260DEF86E
BD69F26D77A20B25BE10094D4C196E26034F2577471EF7CDEFD087BAFFC6C93A
F8FE338E70387B4F1BA2119F24E0AC14D6C89D60DBE2E17850FEEDA72C8A882C
F268AA853D036C7633EF1DA737CF40C5F170EDDCB3B5518E28C971EBFB43D842
99D336736B15B05591122AE51D1486E1F2FA31E9C9379F2B3440AEB83539438B
B83563DD61FA39B66B4DDCE39F3E590823590CD7C75BBE8B58EDC2F2ECB1E684
00C6706D29DF0BCA1B5C649CF209DAFA7619F27D165264869A4D5EC574FFF640
76FD6BE210178957E86D8B7303BF3EBF660879783E563E5FD42AFA2E2C523957
8183B066D5A65BAE4AB038087E40257C1FE6F484941D7387A2F92A69CAD3FFA9
AE559D3043D7128482D9ED343F64C6CAC65D8218E75ECDA7292A0F2FBB4A60FC
7025B92E55DD5D5897F13EDBB3356F9E2B9DE1FE09288B3217E226202117CFBE
3DE2C6DBFB0BB25BB13A128CECEF9D4D51001EF6E00C9CBA158724AC4352EBBD
4085CC2897C588A09FDB14647F570BBEE55DC7F2AED102A1134FD48A8C8480D9
137F359E6287C5369650A06422FB0B3B29ACF32F3DDCB4DF8B5AC385B0E99329
08C1050CB6DB39BB10C1F4D149305E6D442E7D8B58020A01C8A417B670A41F2E
B01A30F2AE8C73D83360E849EC83AABD17E084BFD0A3606D42EFBDAD44BB98A7
440207EC9597D409FBD1E6B2429DCC30846293BF3060E9CAE54A81D21AAF3BFA
BAFE773F095BA4D5A0F9607E25DC3137296CE1D8E2B8FB0DF6B5FB6D5C415495
635BDFF798B08041C566CF1D783EC7B15B4330A37FC9C1BF23CE45EF19471FC7
2472E528053EC041E396333C90480C82F2B80E740D5ACBCB0882F35AE8A3E3B1
FE3903A941EA20902C10B0C3E73DF25106052700653849C02805E1C56026FA71
302E87A45A22ED99B04853D66E5A22B56F79FEF73918B7CBCC65CA7DB3E410DB
1AB7AAF9B483A4DB3B333B158517971542915D70737B3F22C6A831A9821624AD
61DC8A0DE77A1F4BA087E7E54F4602592AEB49D4AEA40B81B7B653D90E146B6A
AA318E165C8353C9CC1F0927D73E21ECE52D9C3EA6DE3CE70352D2ABEC8E3DD4
CCF226A6829DF67E37A242C5E0FDF6AFCEBB0621A8ADE7553CCA3725FB707ED9
526ED054C471B82AA52B6C090D4C6C776B5610954A6E5471F8D8344C07DB8E45
BE34098668A5FB9DB4D49F3FC041809ACDA455C62A76B51D730D8B124BC6B76D
049B17736CD9E28DA73506142B6AA54FDFAC9050332212CD062A6B96FB18552E
DB51B991870A6E579DC68B52DF7F950CE1BDB15548CAD879752198F3A2141F1B
77DCD2B7DC83E662C19DDE6A5207ACEA1E0C78CBAA7A47C5F3D0C745262B88DD
F05E7E3C1682E8E90674B781EF298DBA6CB1758D22EE8A7680B01DAC100D3748
CA1BC047117E5E9AFBA7839CAE44964C974F08DB4C947F074F5B3644BB3F93D7
F96770C73499AC0AFC3E20F0BBDFA01502C9A1C30E9DF357529D99BD156464C5
D64ED5C7BE1C1DB9852E09F62BB22A3A51BEC8BB98DE63D6763E8225E9ACAEE7
9D813C62B96A7CD2247A269F53AC59E3E886BC531628CD9FDA87188135B3D6CE
0F2CC637A8F2EEEA4C05990EB23142620576551DC347BCB2302D5D5FCBBB04D7
7DC4955E84168F9AC6EA2E25C8C38B8A36B337C6925E0CB5BD963CB791E28CB5
4B37655D9DC3BCF1F660E8262CD10AA45C67562303483314B5B71B07C7F8C598
D226227FA8C178C10D90A2F26A639CF016B843ACE6B352A0B859AAEB15A52403
FBD562D284EFBCAF3553CC5A757FA50D53E6AF18AF09A1B9C4792EEAB445547F
698E0DC00CC722B65CBD277C5DF3B4B1275090B71A4D4B3B7961171D67F8F6B2
6EBA8AB37B5C35DB16D8B776255132DE99F3F4B7530A72C49503FC4D5C84291E
0740415B51E89FC1E4887D1912C7FFB218D23A08172BC11116C8028E77D0FE5A
DDEF0931C9EFBA2B76B78F6A90C0E44F8236F55938C3CE5A9EEAA8379EE7D879
D13C3E2D204512584029A7E941946AB7D45710ED4396C6C9816137832A56C48F
C89066B9FF63B80A84B36F75AD6D455B580A4BBE440839A54B385C9E4571C466
AF1C084F04AF31AB83EAEDA618C70F735DF746994341A37D17E8AE636315CE9D
47B1A020296D23FD0A59D6AD28E34849187D767EDE855B520ADFA07DACBEC45B
BF0C25F00DD94C798C8CF098F26C8AF48B458803BB26487C1391BD9A5B51F33D
505FE3ED168109F1F39AC5C3357E48CB38906275AAE8D8CBE9ACD7740ECA4A47
A985E2E16051FA4178F6557DFC8FEF287CB787EFF59E86B4A72A199F16F2C24D
D5A6AD833A4BA6F96FE67FE603F3DE0BC536C9A2A04B73CB2E4EBCF70184C5E1
D9C9E3DF6D0AB7F44E679E8518074632F6BB0639E2AA1DBBF34708FDB8092FE9
343274DA68CD751A72052D4FD983EB8C149E081333B2F0E0A54134F91D7B4ACA
E954658CFEB3FF04F3F9F42C57124BF3FC0BA485E050DF883E4B2767E236BE21
9FEC94EF94D9F2096E76F1C558F40812444C6F0F4DA995C8C03162375AEF5BBD
6BC3B250625E4B5C2B2BF9879F853460339AEFAF4FCC58EA396431BD4F95BD5F
6DA31DDC13D860842BAEC5EB5C217FC685C06C5AE447C991137584534EFDDE0F
7BBB3FAEB89D737F9FDD69B4EDADB476A1E588A8C8499A8917CAB23F00BC124F
D93096D1B365B754E3D03ABC8B3DA3F4F6C2DB54682F72DFB7E665EF36DBD3B8
9455CA9BFE2FE8ED26203A2B353C3C9C7AFCAA09793C8A74DA25396CBC1484DB
565607911498AE56FF61F2AAB48F1B954211AF0A38D6CAB3BCD6697C7E56C29D
62A325714D3FE8C3DC019CC01E8738CCA2596AB05857E4B8F9D6695EF332BD3B
AA9EE551A4B142DDC13600318F45CBE1BB1A6E0CCF1CD79182D3B235B457CA9F
B713822F634A96C5D1923710DB4B98B063FA07A5FFE26234C70FF6EF6CA2A853
FE0F76AB1ED5B97A1060D13911F4AC44FA5358837F7CC6ED863F0FCCE5F79065
D7AF0839F444CFE8AC2F2FF46DB2B95247BD8261F39BA12AD5E50433EF517BD0
FD04C73FBF1058A8907ED43B4C144BDAA3C4E6BE9637FC8BD3E94D6257BE1B7B
FB179A4479EBA92EF2EE4E7B73DD295274E1D416F7AD7338FB3116A3CFEB9E33
8EF0D7B0FA721D7D11990750232AB90B60DEF84924B838AE79C6689275697225
1698C73A825EAF77F8C38CA8468E616771E6C9093D7E3479B0DF3F3160EA2059
B5F7BFD55E90340B4244BADD57DA5902E2C08D00E814009234E2A36EFBD854F8
68BC9301D33D0203F8D1F59EBCE526B06B610DB1B028D29F838A52AEC3BAA982
56BFC6A306ACDD86AEFA6F4F2AFCE55BF27AFC96D93AE476AB15324149043E71
3261671835DDF163EA8D3DA7CB1F0514DEECC225301813E4ECE6D689B0A04229
04F28E6DD3CAF0134F9E19DF8F5ABD86CB0F8CDD3A059F2F3421FF99BCAC2D54
03D67B0DD5ADFC6174D559534155A42F6626A6E7CFC849FBFFBB17679ABA8C34
B1296EAACD7DA7010ADED0D6A83F04F396CE83F0549B1168EB7DA7468011420D
BE034D5AB67817DA21F12130B85DF957C636987F2ED81971E9FC729AFC1E778A
3C062A85C2282BC39C571BD45057FD09085730695ADEFF892B4307BB163A248F
9A2052CB8980119F3F2EFECCCF2C04B55F44FC0D155C1E04055D6F81AE5E20A9
E98ADD7649142C6CC2FCBD09F82ECF0716F5378A8C51C139D72816DA8B61E413
EDA36A71E7B6110CAFAC612E3E67F979E774BA9C7A580D605929D6D790A34084
7DD751CF51F14D89B269A940060FB0B603D3A2A6839C1C36A3CB55707A0663E4
D7346CE1DD000B51AB4A815FECF291D3E8F573EEBB83E6F9DECA82BEB3F58558
67B2B884E4A9A334BC95558E4C1A9D0B93E9A8C0D83CB8354B69357920BEE4A0
4E464B774D6CB4588DE10B3DAF9F7E546F6AFE62D85E8D25FC1A0039346F9156
82672DE85AE82551277388BDC62DE6FD1A3DB14805DB66731CE5CE34765A6E35
825C99CB7AFE5A873340B50AEE34371B1D7C90AFB517178C9DFE59CE8B036E3B
067B364E0F77D36DC299ABF128FE2511732602A5885A6CD283AD3C1C87F360F7
BFF771183B302FF55667390AF2E314BC8E0EF10504B5612395461652E3B2D6B3
BCCE3F5D699B3E2227DEF786D7BBDAA2A35EB13FD17790793B2B4A9E06AFC15B
8B1E7C3534BF816D19A02789F1E1BE623EDD5DAF54733EB1AD965E8A5A3ECEEB
F44790D57FFB857764A8EC459BFF61D9A893DA0177CAB77BB183F54581052B66
D6CB569F8C51F03E409DCE0717779DEA582740E49F088BEAD6E482EB87350926
910860A95DE4100D2A9BA91424DAD1802F2EC862FB85A143D7B299223ED85252
02C31B687F2C19136157C6D83B33313266F1BA8B9E065A0E64509902D75FF0EB
AF919567B7A1CDA5E14FEDA66F60059ACA0ECA3D597FBAD8C7EC31F3C1C46E5A
E79F74B3589EA1C34BC2A4827253F72CEBA7495FFD2989718F2A54E5D0EA1719
ACDE43012A2AAA1F71550220B035B6AE978341404C817414D0579308612AD113
219204CA43994CAA4671A6A97BD8C6807C21360D0C3F7742F47CBC2D74EF214C
0B15C50A9B5A26205F096D63762A9B14F267CE0337485EF58E37EEF30EAB487B
6E7AB230EBC988C382F594B4D4D4B92E6AEC4A9F07841FF93433615B89BA1272
6F5B01CD5715C6432452ECEC048DCD14814E47DC1226F723CE25814E30876470
F16C5E8F87F74CFB89CA99219C25478E0A63F78F3460EDD4F64B4D2A5B3E660A
B83C0CD1BB032CF0DDA97FD7C35218928C48545178CCAA9646C6C89D2FB89665
3CB3AF6C9466BF2240E2A71EBEA84FE2BA8B2BAD7C2F670BD9087F7531490409
D02F3D87BE05852F9C004219582D45949B8C3A7907A725B1DBB3F1A92E0A0456
D103AD819382A9EB1E201AD6F522AF0386A30A2693B607A67E0AEAA7E969E420
86DC576CE06532479E48E7E905FB5E8F9FC3DC5F258FE3C18E7464AFBB0B0757
2E4E438A2F1A4E37E0909724BDD52F4D4B98C4AD8E1A1528BD444DD1B0EFDA76
FCA43DA6DFF11E72D5BAA35CCDDAB44EBBC0C71C3FD43F21DBC6904AEE4B01DF
4F1005122C3B92BB93F4E9CA79A797C3A4F27AA9924D6616FC860CCAA3402216
64068B6E7C7CF2E2432A65BA21DBEB0A83FC660BEB3F1A3357D218276A5D0FA4
EADB3616CBBE98428D5D811FF6FE99AD7ADAD0922C1BEAAAD9B337968A02FCA0
1148C302E8E3AAD1DD61DADD7A1FD82F0C2E744CC3B65AAC7C04E9646515EB8F
EF55DBF964A5C2AA9623B8674C8259A681E27E2C4AE26093689327A256571CE9
457E795AB6B63D78163F227F1385113B9D2A2F0C56DB55B7317231C2B2F371B1
559D8BEB245FFAA7955250F08E8F5B149E8F97D25635B98E9B51FE570826C75E
64296714597A74010F59376FB1AEB72D08E929E1630A7750DE134C6BC13E5AAF
A36ED9F7A8E5D9BECFBE4384E04B0D6FECCB0244DB29A8B801321969CD052FD6
1493FDA211564478C68C592E158DACD4D9005B983760C79C08C12658303A3F51
1EBE5F047EE68288BF3DE1225D981C287FA9BE1B690BA0F8059823BD2AB80BC9
DC78BD724DEDA7987A6DD44876D3FD2B0A21E719D5677DB0E64C7650DF6FDDAF
6038DA9D24DC1978AFD87934AF5BFEAC00EDE5DBDE3D585DB595D29361F8253C
26C37E09B4F87056EDD8C90917EEEB978E51957475B5717AC1BB4AEDD87AD40D
D35C3449819CCC9366AFE79A48A3BCA95DB66E5D14FE0A8C3FFFD51B5492DB49
BF8810AF0BDC54BB1D08740818CF45A63A694C8F8DC44FBA5607435A619684F5
02CF60F00AB8418D0C93AC7EAA9DF793A62FC3E0C50F55A84F67D932B8062860
39E75042D590F24D8FE9F50D35EC6FF30384385CF7C56DB4A483D83D7CDB2BA2
48A366D5E0651560A4BA2299074E853FEFDCE9480F0E55E126E1DE7E700FC3D2
2EC26F9B2761469B0EDEE8BA22F029985C6F5C6E52567706CB28468A9A6AD9F9
B873F1845718FCF81B2A15BF986954219C2577014CE55CEE9E4D5B2FC43C7447
A9605D5D86CC06E8029D4F57A392D2738F846305E8F3AE5B5E2BBC2F802F00B3
A75DE53FEBE1B7B9272A951A047119B40830A39909494E86AEE21694223DF5E4
A7198F31E2B8282BED7392C7BE2B61691EA52F310E0367BD918A9DB9077118A0
42EB52EB7800276E7502D8CB8A68A46889B0D2DAC7CE9E40D84F17B6ACCD8743
2BF87A6B87D3297452BA7EA1CA9EACEC454312EC1DCE09A40896B78BD1D5A73E
157AECB9F3F59C0D736946734C6DF70888665716037A35F574BB08A82641F363
6C82E2BB16E686C92C60EA329075C30D3F97A3214A478933678E9C5B2267C747
BAFD5934D95FBD2640BFF7E94C4C260BFD0FFF9D966F224AA72C22207BCA2267
52B21D21999E31A3DA1E51A3282038BBA7F7FC70987A57EC73E5A6B9508B48DD
49577EF2E015E8D9C0F64025C76E0550BC5D75F5C40F7C7768A67B861D5FC288
7F1635AACF2782022D039A8D49085ACB83B160C466909F562BD4C26A26BEE741
ECC847467858898AD528633F477B739EAAF07A516D86CC678FF6D5A199877F04
81B1BFA806A353E3270334E0880843F700FC1F6065FA37F248AE52A1FBA985A3
1F28AC72D636AE969256DC91944150153C99FBFF35539B5E3CEE76DF3204AEC1
961F654E12385D1EC21D1831C177FAC71FD55A5490C89142F2844CB7E6352B01
A07303DE29B299AF582319835E23408E414CE2299CD46784E6A7AE912C213D0F
380112FEBD737CFF6C1483C4520BA4A4B904A4031C519E155A116C14F576AEF6
6E86BF55B83AB07C8875DE7D96261C02AF3B27E36352F8DC981EF838587C80FD
855F1733F50F636A4C7426584812DA63B5F0B1E400E9F96CC34E7E2C3CCF88A5
17FE6F9C5FB51F8737E0EC21F7CD596D42A88458B89786C2F6D96AD2D415402B
06C2CBB2CB91B45D00DF27E5A47692A30A7D13527A7F3FDF0C07D30FB6436D58
753F6AE969F7207578FA40B7457C36BF9A0846A0C5007E8D72ACF2D32F854BE1
642416405BCCE8D41818D663AFDC9CD1C81B91D658B398D4C89F58C854451014
68001F40721E8DADDCBFCD8BC92D0D26A7DEDA6FE09F7DC39F9F2DE66A66190C
689A73A26C5E0137C208DCF1A7143359F8EE27AB1F3639B4C997B3FE3D863BD1
FE2D56BD513E5BE907EDBB61A117B7F1BDB61AE87F1906CFADE3EFCF095AA187
EE498BC5455C976C40C6E24D239FCFE9CAA763CD150D404C418B12590B6EEA0E
1A19CD139622317F5DFD2EFBD95A7589BAAD70364C33665F90E24D35581DA77D
776D1EEB96F837A3A2F5C501AF422A313B47DCEC7A019705E05AC514331F7A91
B4F74898E2FAD14576F81B1D688DD8F61B1E4450C0C994D2FA8F4EA0B31BC626
75775A139B54949665078867B4A024FC24B16AB6474F370F7F61C7A430AB2303
FC215B5B353C8B1D386CED0321AA1103F5F4CC57F15121A5265A4B316901E61D
0B6A13CBC0EB3B038B56DEB99AC4C60BB469AC2C2CDC1E415746055916E409D0
85688DEBC02A6E020EF5101E41C289C854F7452F28FFBCEDB0E2DEF7ACE89539
7DFAF366B982B1E79ADC6523109832853C664B53C4ECDF81B0004DBE82B86F5B
A36A3B2DE83040B16BFFBBEB73850E2199B8D101C85CBAF179EC5881CEBF7EBC
3B30AC8AEB18B09AC7183771066ECCF26590A7894CA6F91AC2CF4A1420693935
9518C6B25D2C97192E8E1F0AE8D3882052CD47181C522E1F417F28A12064034A
7290750EBC897F11987CE12AC4C09643CB0B9D921B4A6980F6B22FE3C7B7CF63
57CCAE079ED34837B5A08E55E6319BE14383542B9F6500CD29B4760D5B4C77D2
5AE31C4A75BD8C7EB02722DA8D894241446F05FD5DB3815F144E1EFB2D400AD0
25F1AD7295D531787D2C5D4E00A09F155BFDF971B5A4D0AC102C2CE8A28E1A82
794BABD4D8814B53865E03C0C0D6DE7B16FE54A2CD42AEA5FAB6694A64B334CB
750BB6A4D0230ADC13EBBF5AC7571B0778C0E9D25358DA06B20DDF35F409AF15
997127DFFA9ABFF8C858A51C83CCCC572024A6243D6BC209B8D579F6A057A27A
EF243C4B389CCF9382BA5143D6359D3BA2ED407299B5C9E361C08AA256350ECD
82F3B38BD30286E0A8B3E42F7CBEC366E60C18416B956C6377E02A43FDBC78E4
627ED79B16862D939F3A3000659AC050E7001000B2C6848457D632AF0F1DCFFB
6E5F5F586F3A72BC1E72A5F984E7235607EC39E49ECCE85A8E75B8B18D8D9B9D
2227C7649133EC6A81002AE7A4E697857358F58A400549BAA570F95B97AE0BC5
7BB244A80105AEAF034D50D17F2A2913B639720FF4675597704DB7721A0FB87B
BE7530ED3C037A517E7F4D92C7AB7A2B373039EBD068D131C7F302A2F9FB65EC
CCAD4616927004178B7B2CE55A8F36653841CD79FD3514557D69140D6E7E9813
2DE2FD992965837E604A8B2C51E4FA23D38F0387351BEFEAE26D641D49B7A349
0F09BF16B8D179FC176D0735CAD73632F8EE970DC0EBA43D2C700A1D58F29F7E
F1487F54EB23A1CE0AB8CB768EDF04DBF511A3BEB1869F9D5F0086E13F8C3349
8D55FB08ED70950200C50B7E71F8C21BA46E833E6C0DCF6556C1CC6A1C88ED2C
49C1700E8AC2E1EE384B0F6907DA0232BF5153AD600D17DE2777D5CC84335A77
6EC13A25F0B85F0EA2FB526C4A6975188599D789CE1B95719560247100F68FEC
756F7AA110B22AE36B9518755C2FAC2135E89AF71192E8CC3776F553A88FD966
801A249712B98F8F6684D7361A1286AF3E4083CC9E64F40A500F045A27CDFAEF
A66D28B966E7D491B5803E4E32D24FDE0B7C56732957AC35E7CEA2C1AA00C6C7
57576EA0E4C8F0F14614231A275836A622235EADEE4F56A388398B1E3B8EF7D9
F110CEE189C26CAAF7990882F149552ACBF1101C0CC34540AFE14778BB219B59
B3BB99066BCDDBD6A90DADFDC11833C934EC4E446C77F005D897D944251600E7
A6B304DD76E088EF97077EDE26FD1456F4EA599CF4C4B22F65104F6D0D96CEB9
463A89A504AB57C377BB062C02225DCA03E6485C035C6247166107D6C1A4FAF9
AE46BCF6A6475B4197423EF9DE9959CC5CDE05CA9B914F8749608248E964F913
5155384A2C0EF7347C378B111AD792A90E38E1552BA4D6E36C5AD7B56F4A5D0C
F8FE219670A817942121C56A6E64555EBD682B2A587F38458944A0E355F989A6
D77EA1E24367EB14A7D28DAC9A22E2DF55C42D244D9DB91ADAB25927B9001E6A
DAAB86BA6B2B4E28F3C65566E2DF0AB84140F348449C01E851C4736321D6DFCE
20133ADC7C1C76B14667721A220ED3DAAF96F20E29D2F08BB07743827690BF7B
6E45B4F8674A6FA270F14B4944F276428753AFF93D541651CD027D5B23BE4FC8
6005E73CF2508994E2244B800EA15AF8C16B9B8329E91644DB1EACF0C0C781C4
F4C411F79B1D23A87ADA31D3A48C7190B618659D7D0B64A40FC4773482AF8C73
85F80E163B9463C38F611AF4987F7203DDCE93170428CB54EFDA16BCA724284A
ECC3A2904C546D6F2ED297BD3D3A359F69CD6D9D92F5265392E03264AE22D81E
75A04AE68344A9F152859C697E93BC968A3F78C8604FB03A0AF394E19A0E50D8
A50838734E691BC16C50353B2441985488F0E70612603E3F0722046046DC94B5
017D456E865FB2E416C4E91494CB6FB74220158EBAAD27211EB43A348E7E1F83
87334F443CE79BEBA97AE481AD4AB1DC86D8BDB89DADA068799547812B285C06
A7820642245A91B895E018395581C536C3CA5680F622117252D1D72A6D9D057A
413F73C7FEA1993B5020F8574CE0C8B6FCE43E382AA3BBE0CAF9620ED0ECBE98
14BD19184B2C0F3B04B2D3ADE2358EEB27274D7B30DD69E1B2C3CA70F2F79FA2
9543F526BE2A04C6309DD3E47CF1FA44EFBAA756B02E839A6105021CA9B728D2
7C8018BECD829ACB6C3D9129E976A2427E1611066E0025917D1BDB7E9E37AD93
5833B94133FD5C6E5F76EBABE1C94999A54BC260661FD4DCE55956FA246836DD
DB17F52681C14DE689A8C6F2576DB779DA5064C8743100C8DA1A4DF6C8B7B019
CC31279CD27DDA52E1DA4CB052C16E049D2E6645239263D0B6E6419174661478
75F99B35930AAA74A477AFE29B1DAD0E6BD33735C477FB9BBFF2EB908D91B245
11AC525E15EA2EB389640906449D7A0A2979BBD6460F393365098CA717F915EC
27ACD59D2F35DDD0320956D2148DC7C2D7EFE859F41ED2661FFEFE5493FBEA5F
B1D26743416B6D20BA817AB49C66552CF7FEF8C99C29BD310590E1B613AAB89F
20B39C67B801932612BE59E8C4EA4B47A39D9D73EA96FEF2811F36BB337D4E9D
38D33E46E3F79F2BC92D811CC6DAB392EA379D23BED8DCA6132D76C53B78A28B
C434AF4C963E047E7CA794F2C7E845FC08034E600A9A20EDAEE67F65EBA7C2C6
1AFE1C7FD58404CCF6E173D56F8D3D3CCEC06A27BB12FF9B399DB1AF4BA9A570
5502F55E4CCF7160C54F7BC202236296A9052306639F4672E90E3B9DDE5FB364
F7BD728B86D3BBE1E37BC2104E79747402361416DDB4C1AD10889CB7851699BF
FD28D02FF638853114464CF170F3EAFC1572D2E56F2F0F692831903D20979257
C35CA8E92DCD33C7DD73FBAFAD2A3EC3AD445193BEC19A3ADD031C747FA67225
34BA34991AF3F1BF309ADE33C2780E971D3952648BE3ACB42BEC6D5B5DA0CAF1
9B5792A3F832853CB465BB8B66C50948800458912B40D3D1C93BFF447255A99C
CE4EC0E8B418284452650AC9F595D065353A0D84229C2226465DBD27291A7AAD
14E946490AEED2FF28FF48234265B4759B50D24BD711DAC55620DCFDC63493D8
B9EF33711947B65B0C07BB7FE129E074482B62CA26EA8970DCA4F35C139CBABD
4FFCF1E22865F11E640D484E5F57C00B1336A8F61DE8919B9F5A5D3533D903B8
948753E873822FF2E1C8DE9834854FF2955EDC15456438FED1B333FC882FEA17
CE5ECA50FE1EA7907A9A79564DBFFF9566BEA8DFAD1CD13FE4F4BD5FE272043A
59FBC65D5C5FFA73F59AE22BC7A9DE94C8D7D03ADE5D6DC0252CA2E3EFEDE150
916661FEF85C14B05424C0C51BC3E784E53A157C5192135A7055198A66789574
CA9DE18D9CD69BDDB4707F7B2C827516C1A6B49353FB7457EE57EF5908241374
2A4CD1BB78156D5809A689085E5EABA02F60389E94F86AAAF2B7E9E315B157F8
BE66C4AE3F0F649948253EC51D98A20B1C4150AECE1B644EF4F9B15154D3FF75
4428AE15D0D7F8837386F411D0FB2C1CEA22C286B7F058E8F48EBFC36AAD3511
F899A93419E74B4EEADDE0FE0B5D86C9538B9E3260EB814969E2E48645E1F5AC
047A8204F464CF29A60BA4DEAE3FFB984843DAA8E9420BDA882054B68A169C3E
54FF994669E0E0A4CD33F1B71EA3C7C787E612AFFBFDBB75E53941B46165FF34
0CEC0051A4EEF6A495823192E78065FD6060A0F7D8ECB4EBAE515878A31F197F
D069F443133F6271A817B670A41F2EB01A30F2AE8C73D83360E849EC87FE9711
CE71D9034EE8704CED9534746FB31E330BE53B043CBB36B38CE86196A8838829
AA72E7DAB35155314A35C56475A9CC8CC6267A6C8B55512546ACE6437740E677
EE22A40C38BB1F69F691122BFE48E6FE4003BED0D4270A59532C46091584E9CF
7759EF3E2FBBC0EE740CD2622E599A513A5A5F8F39BBA8D08AEB6465A1FB1258
980913106DE9470F037FDD15E6113A181DCB5104577F6303D8AFFF0D1623C49F
3A52C4EDA18B7B6BE5C494D3BE6EED741DC2B9D578DAF502D940AEA08876BE07
1C01DBADD0EBFBC4FF52507C34739FC6E798467FB71DAC5EFFE0D7BBC8114201
E03961015596BFDCD08FBB40B1153AB6626767FF1A48838221A3FAB6E8027A10
873C04482CAC5129F1D102860A54D8E656ECEA88768396EFEC282DC3DA70208D
6884BBFA2D4ADA174645BF47E448B703ADBAAB9F0DF2A0805C9B140D8CEB4474
0442AC4891051195B0B6624F3DB00520FF4657F7D127A24EB69B4ADCA04C25DD
A90364C4462F8DF7B588398EA6C9D82EC5A2888F03FD399BAAA3890E4F95DAA8
3D88BC9BF79C0F2F5A0752A8DC4E816B78B9EE734118C991282B1240D3E46337
C1FB2DB53C79D16B085D8400FFC9324014BE2A1D5CF3A0CC22E480CD066D1019
6C05A0EFD97EE57F50C5A59D1EC020C2C04DFC9F36C8253C4346DBC11A9D851D
A3A8E0D478DFDC64095D442198D9D530581F1C40D357CB03A7FBC28AB07B83B1
800E41C9104A62A074B44B977A4E4A9974A30FD61E80F89DE77282D37856765A
2E3980461481535061B2CC994D41EF6AC07B567DA70D25CD23C25C7D0B103312
B17D16087D670D7F854D5740F601C12493300841AF0F3A67E1E6093BE6DCB400
BDF8C5B29940B3CD12C56C7856D4B0ECD4E415CC9290C79FE24F1ED92BA45398
9EB7CE1FEC9D31E66BB00C09B952A829C5F56AE313967A0B57292667588D0A60
A045AE5775EFA566735F30BF915A60F7C027C153000E975E7513D0156C73F7F1
6C034A24BA4FA16E84B73917E43FF456B5C435C17071907E4739469EFE5675C0
FE6A19FEC026975039D81B532DE5BF0DA704808D7B0878A09BF1DCA721854AB3
AD69C48B50DDF960297D39DF2B708BEF605075EE12D7754830200D0EF7CB139D
07454666A9757CAF11889CBE919842FE4D30A9DF8ABD4B79FF6BFA7B048F1F20
3BF39512086211B6ED4A0CFB76CF072638DC21405F5C12971456BA64A3519849
2E0C81D7EC5306E4ED168682A02519583C8A4D3449A80F06DD05E185FC24E756
14597763D2683A5DA582CD0C910FE12D8CD6A6C6A3E4A1518E2BCDF099DA7A65
D2DA2A30960687F2DCF03E8EC3B3355440F8790D36B3FC528CCA877F264F9CD0
A9842A9410A0895DF75E1D19AFEEA0B92BC6D1851F9133071CFF77F6B7BB47F5
FA2D280B99D60757CB814F513009C4F8EA0E7C610D9815F6C9E2E43707530FF4
46F58B37C73CF2857A7ABB31EFD03F4B11BB195452F6D1A1689A2BBAE0007448
F08E8852AA459B4B19F3D15F6C7215840AB673F35C1710F16152A964659C8624
1FE188A2B151D9D4FBA51E499C40A5F15786F4013542378934CE6745950AC10A
8C4A87987B83CE655CB01D4BC720F615D2874151604C63EF27C55069691886F7
8658A9AC63CA56E11D11678037EED2015BB07904E8B990C4D5EF4C56AF5F6951
8408611B16E532E3B6BC682A6E6DED65CF47C526D11EE5004D6FA3DDB14AFED8
9EBF8AB8D09228350FA1B78965F80B3C62D89B2D0784FEEEB23F577D0A4DDDE4
ED68302B79382DA071F327EAEA9874842F0E87C18D9F2271B366B145AD783FD8
DF7AD5697ACC8E1A0CE811E0CA2E52A0EBB9F4998D40FD7B001C62CC5FFE0DA9
A33F1C12A392750F3D1D4FE99AF4D9A171086E867F79996954F36C5C090B0A18
F81586A94C0686355CCA4A8185E98E9577DE92D32FE7CCE94227FF4DC358E29D
4469DC7E5A9141AD2C56C395D1B1542BDDF61D3FE9D16CFA4D5E4A384094A1D8
4A98A21BD69CF349E8E66B38A8D691D00141839F0032560881EE58F413163284
3E5355FD3F86C2DB87EC77133C97128A29F68619ECEA38FC0AF60E785B8B723C
16F77F4F3568097B60E1B123C16A048C8AEAE9C9724A170FAC6BCF6A85AA31C1
BFBD625AB22364382116A593A43A2564A451C9C2B5E8F202B0672751D8A658C4
5E07B9558E776E94EC0991B31C23E8AF27AB9182812F516DAF8BF9F0F7D986B1
D435214BCF2D6BB43FEDB7C81DC72B42DD991040DF4E03CF67252F280B4BAA64
8B722688FF72D47CA87D03ADBB9E19C08FF9E249F0DFCD212314A379EBFF1332
1BA7E3A23D39AB1C3DC43E4C2E379C5976ADA0586431588D2E791653239ABDBB
7EF226F862C9EC8392AB9CBD174CA5E3CB77E80513060E41BF0066259FD5D04B
B13EECD9C28877D9A02C1038DC6D9C099BBBC65678CFC402A2AC1D7B822FD27F
DEAF4B0DBC9D59A559B2BDBAC48EAA0CF06C09A711BB8EDF5FEBD36C6E600300
261D453EF3794BEF6516CFBF539E5E9EF9CC77839245AAAD3B5A54FA8DD24EE1
6D07B099BEC7CD38699015DDFA5E32143ACCD729E9429F5E80485291FA4017E6
74E4633CEBF96D3D96FB89399A4596637A802DBF64EEFFFD42981F2CAE5E128E
846A15828BC895221ED017794A61E36FE0C47B959195E825A0BDC115FB344B19
7882C2A5B068C235C7B09C2A0BF66CC262F476D76445B4E57E8C695048396089
023AD8E73A16A49262295E2C7E90D9F8BC683B0E6836BA55FCDA27DAE5454C13
464DF6FF5DD37C779B8D92F22E3DDFDA20460C55C375A40A34BF6BDF5B2F6F8B
442492E7A89D2DF0204E657D0E44FCA5F79E5558E0B832395706406F4352C3BD
0299E2D51F2FD2AC78587540E1F13D801C5535585729C06A53A8E6819D40EFF1
30C54E6609CBF4A5DC01AD6F3500F327B50EB05EECF235F3A681733DAE65FD33
F5535C1235C62F5FA08756E122D3505E555EC90AD1EFE819DD2DEB414DFD0EC4
C0CA8AA680463BCC001CB36929605008F4EBF2D95DDA99557521FE23F4830EFE
D86917C5CEFF9ADFD18C0FEFA072A274E3990DF25D88067CCECFDBFE75F52D20
32CBF88EE46A66C1D73A8143C8A24C4A470432BD989259D9208E59BF949132B1
C6D12D3AC919040E598853720D3219D71FF78077E0118B0B9702ACED9DB6F115
6B5FE389ED6A47C6C7E144918FF662A5EE19C1360B5ACB813FEC2964217AC161
371032BE4902BBD57AA5DC285EA30F1F56C4C9A28336603006289544091C3074
E04673F0EF8FC6CB0A83A7C6104A8983F9D910D2510DDF5F456F6AA3C87CC876
39FCFDD2D0C3D928471C2065C639FCE1C3E01E391798EEE3E80D9DA51B1F5E7F
7E9925E31B3424D12D997F1B2D22E3BD0A364F4AC9FE64C0836B09C6744220EB
9C879E76B74493C7D5EF38E01CC031CB4CE13C213AF309EC096036351451AE74
25A26CDC319A31BDE48F7A269AB8431BBBAA5E86057757808322DF216865D48E
0DB9754CD04E4FC6B1E3DE635362BE899C415584C1F6F7C383B143CE5C2E92F4
A9C78C0B074F8E374100814D4329A9B8728BE7045DF33975EC34387F5E4BC4A0
44F9F78C32FF24EEC1BFF998C589AEF8A7967E94CBABF8F62B0EEC9B4A0988E4
AAE449964323B79BADE117A3CE6F744E3864E8AC0F394CE7BA861E4C1E9EB7DC
11D65798BB9218CCE8DAEC14FC13ECF3F5FF91497ED22632592501B5CBC71F9D
A6B570B4451375B9EAEDEA1115846E0A5840EB67966E9B6F104FDDFF62E82B16
CBE3D401AAFDD2F30AC01C286AE887979C2FA424A13E91220E40F11FC7A24787
DADB906D7B046B3CDAECE9B693105C7086E241BA8D8E2CD968BE1C5333D260CA
AE77A647138A1D733E16ACD19EB566F647A9138A2AAC3F60F99EE1E646A0A118
66E1A10AF87B6F4ABF63C36147A10C05A9672D2FEA312E4CA8137E90503E6314
0A7193C83DE369C48C998677E1A70B539A55941E830ECADE50F091334DED6FD7
C5681B042321505CB0CEE9FB7E025E2D00DFBA1D8FDE175A1FCDD83C1A9473DD
F6254C62013FD10333512A45FD0865F63B59B384B2E592B01FFF35D433625704
23EB4C1C42383009136CC91A8E901BFAE877E4EB59F3F56BBC6C85EB81A89AE8
928FD7CC9AA2B9F7983C12F76D650A3B09A0F921F59D19BDDEEF94B13807520C
8B4F0FC196B2C92F57789B62A14E6495133A1B3B110F97D9D17F116556F9C9D4
DB5C342277749E85C7BE53D7191ED687D496709CAE17E12419D4535D0FEE85D7
AA225FD64BFE25209F568B9ED225D9D69B6581864E351CA800EF635678FD7994
E36E7F3CB0F128274D559A0304705FE55B6ACD9B46AB571CB1AAFF7D49756A20
BD84B70334512ED7B0A856D3CB4062A0131EE8196600DAF4DBFEC49C4BD2E223
80D960765CC29F3A81304A92BE0788C6B0C64D6D58F18C3CC199450346ADEBEF
ECD59D1A435C79BA92CF68E88DE4A9808979B2FEF19018012754089BD49AF82A
9BB920D1573622431044875525ECD8442F250E6AA8CAE74147521C28E61B36DF
CC6C950661338F1DC89EE9D1048316C1D869DAD9578D90A16FA0CD774495B817
3869F51C8E207036E3A5283E0BE1CB5F883B5FD6AE51F1C058F7EEC7F87E5FB5
F9B4D986B6E975BF8F27A17CC467FC1B985F869B5ED92BF513ADD2A34677D5EE
DE8D2D8E91445B5926A7AA84A5E96521F3A544426A80EB40644AB9AF9F9428E3
695E72C64B3C2EF23BE1C2A88F617A2F7F035AAC02B40590A2A6EE2542B885DD
D5652727A5A498D4D2B1F245E01C1F36626E3819E7DCBA9450A2BAC256A5AC0E
023B88222494C12651894A8DD97D27867CD8A117072BBBB3CFCB08EDC07A3A78
A397E95820907D80E91ECB58DF2E318B41923E8A047553D96C8FA33E8F3DCD47
E34E287A975CDD8C4D720EBDB7C7064D39ED400D63B673EFFDF8F0815D7853C6
F61278341A101828612A41219DDA8FD87341F337F112E6E649BE407C85D3D3F1
E5E9DA87C76277F092BFA21E98BC014B32DCA80DD8E9E35E585BFE9A91F93EED
D21F0716A580A7A43405CE88FBF46CF47E857A70F21F9D49C9803DC0CF072AE8
CF50211840299D659144AFEF2C34824615385C77FF85DB107EE98FB2FB022AC9
85067A0609D61CC9E5A66071A39FFF6D8A110710DDA85C1C163C513D25B9264E
3890AB745C86927A0A136D522889627824ED0DA1BFEA292DB32ABAA3FD6B68DB
45CA7603221DFC92E5223EA5D9B7136DD805E79A4C0D6B71E487A1D6CE824F51
6B1C688CE6E1E70468C51E3313D057DEE8E8AB8DDCC0064FF0FE093EFBF374AA
EBFE99BCDFD32EB647D987E1423804454EA3455F2161F6EC1BEAFBCFDD9C8B33
5E025A19848C2AA2DC5BE02E44D31A948E810B6D13391FA794098F3F01C35AFA
1FCFB9788F34E0A1E814732B482450562384204B7D6791C6D077E0DF80AEBBF9
DAD1B8299609C0414F82348EC81D16316F21015487644B55DDA2E1146AA3CE08
BCE6E3FE51870FDE1C24DD45E854C664AE533D0F97F47BEDF2CAA0892F95549F
D91B3AE9ADC39A0CAF0B2E4370613010F099C9F176D1881A42EB9D13F4685DAD
3727BFE3D7990C7022449B767AA3A9EB2E5C2790F8B11922837B15464E7DC2E8
F4F4B83CFF8B1EA27CF25FC106E7DFF2EF4B85A8EB6E1BFDF26C7F98168197C0
2C4AA2ADE2929121E532C6604C059CBABE2C9A512F7954BFF1300F50E7F3BC91
F69C38CC6212DA06A3A0C730A82EF1EF0B7B909D0C76D10D5196DEF2A9C12CC2
D82DC13588B1A82F1036043824B686988EEF3E3FE19460C85EA5E0837BE1A6D7
602606094B0C91DCA122F0BB3D4FA3AA0FC26869BF76C5EE35D36E883E3362E8
151A38AD6FA6A129BDFC5054A24CC597B395DF8F165DBFF17AB9A8B5840CEAA1
32F5662F97BDC23F7979F802D54822CCEF7FB5A8C4623DB3DC17E5BA3907257B
07761EDD4E519CC81635B1CAE365F6E262500B0209CCA5CAD7328D8654B7678F
0354E8AACA4ACE065E9060B8ED8671BA724909C1A1EA923C1458139B6B81B360
926330DF4CF4B6A6A8635BEB9BE60C6C736077F129F899D9D42D0C2EA7C77884
CA4B7158C1A66144F836F8EC13A5A32A91CDD341E13F803A0567CE7B6B5CCD4A
00A4866D2F89FB374260E9C0D491E491DC3F7E9F8BE834F74A616E8415CF27C4
5923F22069065E6267113421BF6430B94091A2B42A2CC2C3BBD5C6B1CEE17957
997FFB4B64B2B3B6619FDC7541557D9AEFCFE19EDE2E31F837DF86F1800F59C8
9EF6401117904D869AA4C14468B701EE11DA0468E18F946DF99C0B8829E3504C
2A06911A7FB36E5EB80D09C748FC43A0993286784A4EE507A70844333C992103
556ED89F984EB08D139B35B4AEB6B72F30468065D1A2ABF1AD34324CF35395AC
55B87A0E337A5DA9985EF7DBF5E1072D4D4BCFC45DD80EB4EB2331FB631B71F6
9D6310046C1F5388F7E725D5B739495E4D6B5FC5AEC00CBB631666A10C443D02
38118955D3C26BDF7A0FF8FFA29F8046C929210BD45E15D548E83258BA5211AF
692F13ADA5048B28F82A74031DC5D98A6566CB91770EC7F8004DA518F5ADAFBC
8A6D8511C0CA001BE9D46BB30653430174D252E3FA20717D5CF32A144AFFD8EF
0F4FEE2DF1F839B2A5D900EC885C5BF8C644D13204FC2137385BE0D5B2387345
C9FC4E5029BB3A7349CE7BAC7CD903D0AAFEEB0DD8B306E7A1E0D70DA9A2E715
D31B2A9F95A6306F7D5261C85D4A03FBDD54FC01407126D3973FE22CD3AC4F6F
BB0AD7B9694E1BAD97AA7AA98DC6CB5052261D715735810768798C9AF0100DBD
C9C4A58C2B81EC99E8E966AF3390E3FBCF40858235ACD6743E692C1E52E5FE51
543C5E421C4498F98DE51E437A784C051E021D36141E5F1B0E6F48F93654CF5A
27A0AA6E874293E89DC1292F3A57FD6F3A111FF8838F78B618B457D710C2B8DC
5914E90651FC5D7A19F2C4F6A6210EDADE29D28FD21894744C824E290A945EEE
8302167E6C23C85BE7D3C1625DDFCBB59703CCC55800F77B4949B3B5E1DC217E
8A1FBD9B828B8E5DDE1170EDF491BA1BA0D16FF764CAD09F99A6F73C71DC1C0D
161133471B9BFFF791C452F098F3E8AD8814BCBF2ED9C17240B6CB1AF0CDE7B2
7ED2707252504B6C74D1B121580E429D7B8B274B84BB526F68F932A96A11C32D
2AE1AAFB2D81815B465D832CF24BB166B5BB5360EBD6263DF42E7025644EF64D
C83701888603B69CED4B47ED59DB28CFF290F08E13E483D3EB2263E895FA3541
582667A78168FEBC879A3A7321FADA299277D8D09E8CEE82386558628B32496F
7EA8624C034C349973AC1227D16964F9AD6F5E4859D2A47248BAAA2A6D433009
4BC0F348A0C85F2B0C854F9E45AE5468512B4AE9BBFC307E7A820AC17F487820
4F116B2C354852A9E33D2440FD85E483A0A0BA77EAC2E140433640B24F4ABE14
345D6A3A253C967BD5CAE0354074074C255686B775090A16F6936C9A0AC65A00
695476BE47AD79B88BD1B66C5C3736A07B54B45D91EEE5A61B9F3B463DEE44CB
A80C234D6D7E0D6A70DA974526263B84FE05778A419576E82A56E760131E5075
9B91307230AB37C02E120339A1BAB7493AE33853F181E225594498C221EFEAE6
B514EF820ED6185E535DB5B4099509DEFF8CEB2BF67DAC531B53256C34A5211F
AE935A10BF9A33344959BAE4CB57E6FF0CAB1468DC84FE0F3B59461F951D8397
2DECD70AA8987112F05C939A6FB073B3197317D00BE0D30EB7BD4463F7A542C9
A7373C3A40A8852450F93030CB5809EF98E9F48BA0752DFDCA4C0A46F22FEF08
9A4789357324B3FD9B04D3B5FAD58C121B5677419FDD2E8385C7B35F69B77E21
A859AE4D1F70E6222BF06F8F70856B3604D20541B0ED5F4350645D8AAD1991DA
D483854DAD9B7BF0F838A6DBEC4C32C53061C3350047FB20E3887F514B5897FD
F225685BBD8E76C329FAE1045C5C6E47DE0F7213002E5CEDD409F5A9BAF9BCE3
D81E2CC477721A7B7FB7820D5EFC490B77F2EC00EC532870FD72E532671CF904
2E72CC4F329541793FDA4BB0C1257FE26C5A5FE4499B09CD8F1266A55292515E
2D8DB7DA53533E244DE3DB1C186C1DEE5D7654D7390E6ACE54B7E7A9CF3D32E2
78603FDD8C754C6245A58E052072B433E5041DF32C69E0D4F050660F51605B06
C5DCC0AB2D5635020D26B524DACDFE0D8DCF2F1F54EDF248413B9AB45604C203
7E471BD24485A77247B7CCFEFF41E8E1BF7E9CB02F2E46976B514E496BB4EC01
DFF352EF68138905DB1BA7858E3D3676B51CCB12AA58F72E7D428653FEF4115D
F9458B70D2A89EF4E1B65D923854F6254E6A4D3B38558C6287C81A6FCAD90C56
8435123040E6D6832E5BEB7383E249556A7D03753BA53A7D0FCDE788036B4867
F90D40C1E4FF7460399F1F08F98CE8E2CD0B91088F3DE113E86442C14C4F1692
6330A6C97A3E38B6B9A5998D6BF35919DB26271A70FD551FDA5BF96315A78771
D1404671122F21CC9CD151557CD0E2166B87A92CBB0DA163D9689FEE614F9556
097D62031C62596BD4E5526B66BC38B0CC9669D8D3BCEAEC9258D51B9BDA6239
FC12D3BDAF7171A45B6434D91BF070E12C427CF72392A08E129B014465B50CD7
EF528214F30327AEC8689E24C566824C8AE99CCF0EA0BC1407B202F3CD1F96EE
480FB4E80D0BF82E819C925254830DA1CB099A6A8BEDDC406C8C00B476F321DF
BDC8D8B289265FD8D019CBA61D1009AFC847156F96D9CD38A764D0EA70E5E9B3
5C9DBC9B79B94FA86434DE032E531FC86C88467D82424C169E94B65D99961EC6
D92ABBCCEE6BC4333D0135650B78F352DE28FB8FEA0015CC28BA9335A5931164
6193ED66B43A8595CD5A864952411D06BFBF4CB5A7293D43EABC023B8982C1D8
E1F97E4787BB31E0D5EBA5C71470E4D9118698B1F3280F90A2FAF82D4125EA3F
A457A2B02D79F2C952C95AFC8907C102971780D4F48B74CC49AC3622417C1865
E2E3FBAD3BBC137FD522CEEC5B7CA9EA08218DDE862922A8F80A0DD8B36675E8
3371DDD080484D77BB47BAEB51200930F442D8ADEC45F642DD8A886405385BEC
D06D47F6B05A5E7A47526378D488DE309608295C0F633FA842B9DF64946EA241
FAF1EDF500922031257EACAE40009D0682CAF5DB88E408B799859A65C14EEC41
446F93D7DB91967163946D69B591F051D0C01363F8824DFD7C2D5156F1A07D64
17A9E6D93C2A864D5C13E0DDE8677BBEC48D51C674C8122D4E4821CA58392871
4F3FA3D08D08C1A696775658C9F5596BF3B46FD6A73D31AF122A7D4310010C92
022ECEFDA1A1DFE6FA7EA168F4DDC5FA86CADAD2636F675A221F417F28A12064
034A7290750EBC897F11987CE12AC81A07C7F8C598D226227FA8C178C10D90A2
F26A639CFA05EB817CD17409AE305169544E48CDBD4BE66361F75DC29EF58A98
13080D0D13DF2D681EDF7F07AF550F3C854FC940404DBD9689044B71F710D0D5
A3B77A6480E97CB4CB566C9141C06772C69C039592C660F684D61B364A013ED0
65C5F3A6A112882F7F37638E5B2B389339270F0DFB42ACE7AF59B50DC33F7A65
D806A3FD22988D440863ABF1C35F6938DD79049927CFA9BCA1F6164C53B768EA
EF5E2F884193E1D5FDC28A8A7F6FA6EC89007816AB4B1270B7ACF83DBCFB1298
0956BCE2AFF75C864A8B5185CF07862C8FB208DFAF36E0098EBEF6C27AC84534
15E0F31490796CF35B02E38BFB36CBF2E6D0D7304344C8AC29CD6FB58B840C6D
14EE78FC84B1BD61C526475C3F93D35EF2022EA1DB12DE17BED15E6180B4FD49
2079413D3A93B7DBC13E8E66984826F1301300FE37C74CE400343F88820DBEBB
45ED454DF0B009FEC9F8CA76F86843D9BB0C58945E6ADB0C8D23AFA307C8FE29
5002855331762AEA419D1F6A957DAFD77599C504C8B2B7A6A708F39D9583F7E1
3FF8928C4AA20F6198921EBBF6A5C4C13E659E84EEF820A7ABA051E8F097B3E3
3D1E180BCB0A71ABC90DC252CCFB36274DC69EF2D60CFF2873563D5F8961E826
65CFCF412B99167152D35BC0E671E657EDD87F0B8D7D36058B06F3AABB121CA1
540BA17F0A43DF8A433E0E19C0B80BA5DFD09923F16F3816C9775FCE5AEB020A
ED506B23D781375EB5AA3EEA89CEA29065AA87E8B2325189728758241D75D2E3
989C3BD46A0E19F9B46BB3C783E5FE4C18CA96E889C36DAF2D9A65E1FCF4A665
9C20BD669D367C6FF13C336537B67F235795800CA8EF17DFAD4848B2BF7ECB9A
E457FD7712E31BF529DF94657644DFC5E4B5575F5FB13461FBF9606133FA9441
3F30FE86BA92A43712108520D9CE9193DA216221F842FD0F35D710C5A5886DAD
4EC3D83D0BF1564C00C405693F2839064D1F9754F99DBAC7890C3C93363CB681
B598F26B27C076E4D394658B9062D5824C3AF67D0CCE1A4F498B52E4E280B4C9
3C463A4D7E48F5DAAA4F97931494D07E5ED0093B03BB4ACFE6940A2A8ADC1CC2
AE21BE2B997350E2AAE133E2A1C17F6B89FAC0D0D8829B994386AF75787A3790
B7DCAE4B0B3A76793F902E074A6A6FA42F3019E12C6DB04B400916A09531A939
92036C78C8D01D6B2D18D77D26D98C3AE27C211C8C4FA5132D2B427B8583B023
4BDD88C4018836F196A026E9814413F0AC533EB8F6F8ED275DA79835FB54EE41
B2A2CD8A8DFB529EE12521D348CA1F6A10254698BE7BE357F70AA574B9258017
9EDB460C53D5BAC0B89EEEB9E2F9CFC6BCDFD9A438C100391C9185FBAC13AC58
FA76B08A81656DD25A7835DD64CC4FF0ED1666CA8B3EE1411D7260FB5697836E
E2A0E94854294390E2C94CCC44A38C2CE2AC5E22AB57C488CB6E26339E773A52
751020EFAED66B1794B1FFB686D3DDBC4AB7F085A9B20DB623915950B4C87D72
F27B03AF99B9E42C731B29E7622DD2B7FD26CD40F84CEAC26A5FC9861877B135
3B6AAB96A53B05A89D2F49DBEDDCFB6CCB23152AA9A94E60E77B216931CDCDA2
C23501A34BB3758E1DBA39A33BF6E31C06912D35B5325787BCD2131C6FBF3FF7
8A508A19E94681B83C008F8EFD2907AED07343D916AF9530A26E46DA576F4248
A6B99017481BD7ADCB7A010CE59A29CFFFBB42222B8F089859928A3DFC7275AA
E61315A1E9FE6C033BD8659138F4B2CD0CD9A60AEBBA3FAD7EB8644D8FF60232
7C2A5E0664B522C7258A2CA5A73F5AB50122568949E624D8FE98C39819A0B776
9E8C100E5E20CEC72D44E040FD046F7B3563A0FACAA3AFFCC71DC7D8A57AEB2C
6A0A9185A23E0FD6496A20064B27AD137206D6DE6A2C02C8DE601F114A50F920
7CFA0E86A9A3A7B7B5C1137E04A7FD8656B94E361DF0EF95A5BEB87EBA53832D
9F09C1FC903A2516CFDBA35FFF40CB08F2D9720B07F7987D3B29988CF1E3A90A
AE766FF2D072C3CCE63B59C4E9EC7DACC19F14EA2E40AB185A3FFC3E24F11681
92373772971C9FD6098A33FCE7E9833C09D18C7D921228018E96FB549F250F92
67F8C5C5D1F58D60E5A6D3E5D93A52C18E6375C325DC0C3E91C38105790C646F
130015ECB419C8CE23C366C15273F4290B7CCDBA211FE102E18CE865C1635F97
864D20B25B083F7B219D8F28B66865F8AB6DDE6D497DC037C8D89331BEB8362C
60B30E3CEE97402BEB74731035202384CD1972C7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAED089845046259EA79899713DD1E567F28
531DB889CA3267B2BE5B8178E6B7889A33771F86276E66C88613DE9300FB2099
A0299A8F743D418E1D967FA5973B33A45B38CD6A223B219D9978D3B9FA37E805
85EC0B2C0AE9D1AF457BA4830AF3BC5AC25B6E250D20D2FC1957B5D7BC7DD0F4
37F141CAF83DB0823CD6137CFABA19629F9D4EDF961613E545DBF5CC635D3B34
FD5F89F09B25F78633F8D269EB8BF7FB2277CC85D95A094415358CA9BAFB89AF
BEF2079EE97EAD72E34963B05614804C9235E28F5D93FD74122FBE17C96E57D1
934E148831AE7C815BDCFDCECD662966EBD98F467990C8FADD97AA854076AD6C
685EB8A77528D0A206E2A1040FAF2DE1FD6AFD5FD97EAAB6149568991416783E
6083A9639E040D0976F90B757C56EA7762B2EAA7055CB375591EC4D3F37E7B7E
75DCDC8A7A26B0F7D23D2A4E5099310672F0813810DD9E7F6F481796A1CFD9F1
FB69E5350B281CA2D855D54CF0086FDEE6B7CB2EADC49766F44593DF86D497EF
920655B93EBBAE2BBD038F21047D0019EC29C9C067E081B140D7E73D6F6FD77E
A8CF1DFDBBD7C82821D7082423D46EB801F8502449684418493C3E0A8BE37645
E63963E93778DFFB58C420EFE7799210D7F82D9A3DDFB35C8A0EECF06ECB140C
8592B6B7C3975718BD945FE864F86B64A7EF9D4A06D05AC262B13AAE003BBF15
4760DFB17D881195B07090AF1501080A9395F9FCF7BF6A594073BAA763F1BA33
86E0513B32F4FB51831EE3BB8A5EE17D855A697253686190B11EE8A79BAD25E6
C7FC5E0F303D7F8E28635C669854E0BF4C6437A849A661BE37BFFAE9B62353C3
A97B9B3AB6A2F5A045C39AB7DFC251A781C16D58892AFAE029F13F53F63F4E59
8C7556A28280387733ED4BABA813175CFA78F7FBBFD715358384AABE3C413318
6E59F396F49B8F0463DE12D9E67929CF4142CD507DBDEF28FA8AD3D0959B08F6
6BF4F06F03F8D05C388D9E36B7F9D25EC5DBAA47E6529B2B2DB55D07EC31C9C1
64F9E822038086DECC51BC7D8A8567D1E2A111C77BDED2B8F8AF3E78EFEBAFDC
88074933F8A072F7520F60BC12355C3872CD092F77FE06EDC4E1678E8C2C0994
92C4F071336D985C0C360B2F5A5877FD00B6F80FF2954F87DB65F4634D0B2A45
A71B64D702BE1DD5D307E8700632CAE05390CBEA0D372F447F46FE7BC050925D
F04E7136EF4E084C43A6139EAD2930EE95ABAE64F5C6D3D07BB06DA228963921
9FD191769B35782143BD997003F4C29E1240F90533E281EEEDCC3F5E4DE80BCC
DC5E15ABA01F09F3A1B09E79620A13F434C99327B2F7898484563598C97603A1
D749F9D9178B421B0DC4AC696D621940B728B98BF9BC188EB653A8D1AA3B2514
DBDAA7E161684BC69B06908B323669CC4A60829A6261940CFC69863D5903F651
76285D4E9B753CCFA4957DD02E552A8128B74271D56AB58F0E19F1F69F478CB6
31739B54CA1EFDCC281D68285B52DDB50964D061A19A31DCADB49DC2FFAD1345
54B5D4147258DF2BA832668C1C5BCAB1E88453D7F25405D4AE825E06177BE84F
2C538F9A9E4F63186E4E2F93B117F6072C42F07772A589F8D9CDE093216AAD58
70133F24B7EB6B0AB0B14A5C4009D1AAC39B97AB1FF711D174E4A549BB5801C9
FCFBAB33098D1A52C209EB9F518C3969E35AA9F2B08D984DC8F14BF056FF0804
DE76474D0EE084E363C8B70C5618B92C2A5B63978E50C74C43E30C3627ABE7BB
B6C04CEF8BAAB3E33AFAD299FD002D2C1A74C79697847603E9F6DE291BCFAAC2
BB1DEC703A7CFAE5AA32CE2A35ED9886F51A671DB10D74D95084ACE3907DCC79
E6B2C4743628A004F1DFCC0578C321A250C9B349B72DCBE46E01DF0E5253D461
C07824578BA0079ADAAA937D6625C1BB3C8FF08EDC1D254AA9E355048C87857C
F229376A770DF21490796CF35B02E38BFB36CBF2E6D0D7304344C1CA22970884
DD7583FE4BC0A3A3863877968B25E0FFE06F9D5BAF893D63BF4546BE91FD761C
26A48EDBAC843CFF43574FB0FCA1D202E8F9D29C5A367C2500F9C35D5DB595D2
9361F8253C26C37E09B4F87056EDD8CBE9CC7656FBB56319FBFF3C92D6699B5D
BAD91EF84736673B3FD40709EACEB5AC116266894AFBA1C099D37DCA4B570AE0
677BDACF7600C3D48CF22FFA08EE54E20F8C1CA330A52AA3E631B7417F217B0B
E86CEC32409D8B634A6FB84D28932C527FEC90A076CE7F1A8628F744091A2612
929E4D12CAD8C3FD4053B2D53CFE09B1562FBEAD4031D9AB62657B8C923087CB
8B331C0524C9A54F1891759DBC564CCC96F07CC74AD17A93D3206EF4D481A294
B8874E016E003BBEE29BBB9093FDB99991507C71753EE604A02B591AEC919B75
ED0EBBCCB03EF5F13BB2C4F0EF5A35DB8AF6D9FCD676BB03B407AAF88101D7E9
CC89CBAD30CD2E34A43E795117A9461C92DE7128C4DA542974E9CA93C64A9853
3BC710FA152DD6D3D916D26EB4017C11A630FEEA705E77AEC7686E7239AE6BEF
8873E2414668CB13D10B3C95A9938EF236F4147C250F6D7F8459AC97D822D96F
8D931C372B3188E10E45154767656838EBC4A31636F25B281A08DB3C631E9591
0F965940AB8DB67D03309F0144C74A96F6CD2A907CD9398069A573964AB81D04
B1A69D34319957690CF7CD568224E9F66B93EF3B53FC96447E3605DECD9D47E4
669B250CCA42F8428E27DB4E0086703365E481FB19B8877BBBF6147B984B193B
34B4AC4F407A25FCEA468F8E5B9780310AE4D7EBA4461B4F112325C5E2BBD41E
82C1E2B1EA057A0446E0A67EBAA9F82A70ED2F6229EBB4FD0CDA78C655E71003
C12938ACD762BE89617CC9B46FBF2F7279FD6A1A1A68C4191BBCF60DBA7FDB86
4CFE04BD7CE6070FC5EF576B1DE985A8C2068394FCEC5A6398F275C832B03154
53DAB180934BD736C458BAEEF21A985298437D8A57AD995C51E6BBB99D87B98F
A1CC5E64E32A94C5625B428CFA7F34796250271952CE9D872CD46D534EAAFA2C
BC4627306C582578EE1C813A22F039CACA201AB5BC51D79FF8D818EA9EFC3F35
D82E71133EC8B444B7E7DC48017132AE6CD2829721EFF515B0167E8FC7306842
AA09412CE50BBCA640F35CDF020468EA77EE29E32F04AA6678579818D3B7D3B4
07B020A30ECD347E1717AA5D4CB03B26C4A34300BFEE6A20600DD87A29F1884E
7C4B715935E2B9D435CB9B0147086A083E8592BC01483D8DE50B9A6AC86F872A
CFCD863F45930295F6BEF10FF79D278FFC3C51BE1AA7278BF0737DEC18EA9CFC
6E0E14AEB374E80298F0AB2D166909D690490D2E07EA36553A97F164D73EDD84
489A998F8D79FBEAFF9E13E90690A80DF614F24E9D390EF7866AF78B5B8AB1BD
C2EA8159A3D4ABF94655F14D1AEFB4E889AC19523E6B184E1293F5E245E294E0
58F3B1FB5B81A3486062D88DDEAEF972E7B7FD99889CB9DCCD3FC716150882B3
BB7F5B0B954E7078DE3E31D8AE65F9EA55FD1472262F5C1D848726B4230B4F8D
878451CEFEAFA495EC02C1EEB328E08ADF89735A59A4A4B48ABF4B835D37AA30
084E34C492105344559784EDCABE56305EF1BEE14C7AAE14D431D216D9C57B7B
8A99DC6A5D903B6D5C7CF8032AFBBF507E6262226CE73BEB52C2B8F5123551A8
D1D9E080DE11F6E7425DED61E06708EFFEB57E167D0E0ED4C3D98B00B67B9CE1
D0D743B5B27A58A5F889A5F63211C8D5C8917C242C02A331EE280CECAEA7FE97
0E571682EE52AB8CA4892D103A1F8A42531DB4F6556C5291CEE885A87C7CB48F
7401D1DC162B7DBB1040A7B33A306ABC34F3B17063DC90997A714004EF4BDE48
EEF6E0EAE7BB26824CCDB55B8360B58E240BE1E941CF7170EB90C3EBB3655EE6
08F66AF873FDD624ED688CC9A6DC06F4B0187CC87BFF999C1D49919570F2E5F0
6D721403053F2058E88858EF43B3967BDD5BB072E876DBD7E310E31D3CC5E760
B82244A6FAE90AAC299B0A3174D32B6A82C3B240CC99E5EBED6C1EB45ABB32D6
4FFBE3475AC402B3DEC385C5933B6259B5D0CAF8AFE2FC900790F7F6050818D7
27B4FB383FE2EA6949C50A99F058DE70A32642CE1D6425BCAF928D26EA25EB2B
7699E573E26B49D2D6F49D3F86B762B09723AC952E913B46560E0EEEF7C44065
50C1E5A2FA97FF27653324215D2855B6722FD5B79EBFD3E213AAE60BE02F6612
384C843D0E259287C53F346D5AB105D58467672DE7A653070E680B42E54DF0E1
2EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A65F301AE48959C0ABC289CDE6
55EC5D586D483DA69A54637E6544A4F7393C18B2E5098B1E6B0D879A638AA96D
54010BE1C4198E61EF35377E26C7418C9109DED70B710D34EFF7F7B0C53F8780
D83CFB474FC0F1CD987D57C256001309AE34EF4E7CF2799E7589449EF35A4408
0F6CEFD19252843B5D9A3073EFCA93AB9C60B4696B15B6AF35E277C79BF6BCBA
6948FFE6410BC7E74F3FE437C2816BA7155A9563A3B3009F37E856E1E39ADD6A
B74B4CF997ED727A6719ACE7D439CCE123247E845A80DD99625C6D231350953F
ACECFD82FBD821919E3542B33690DE959C1BC9F2C3BA6E6CD5AA138B967AEF6D
F9B370245857F0E6D8CA3BFA442F4C4542E7A4A8617B8C8D0965FE016BFB78E3
7FCCE0FD2B0F2D46440A38083B9CB3E51997C1D450F67B0FFD5674E4853E4D6E
A1976DDBF39EF6A58DD1A03FCE8732DE541E5E8A41FC87E1FCA5CB21DD31F7AE
1F58AE1F5CC02281429B33760498C875E936B753B9E976DB2E19A8E62E5AB640
B072A8E2493D8C13B355F4D67B93EB6417582B7D7B8E44EC96CA2888B29CE3CF
410380BF34AC17B2E42C84A0B24C1063C6147A0B9B6CC50A05E7BAD92538EB40
128CACBF5E2B298143F34E53D4CC2C65CA76AFDBB19363D152800AF844B9D080
4EEEAA337C69B5681BE101627FCB6E622B8AC60B8740CDA906BEE8B178FA9743
947F46A3C3678F4DBFBDF9CD0086D1E58C2B1CB5633E89A7CA6CFA4DB4C08432
BB3D57FC37A0CF7D9AE0D0933CC49558A514BA3CB40E8387CEFBFFD76DF58E25
5556FF3CF3DC114009CDF5B02493BF3898EAA4C17D53E4CFC681A17DC79899EB
338C00D38499CA4D93546A29395A5BE66101EC0A83496AF084D25A19331CDA93
CF358AB9FC23F12BA3BAD27A85825E8A09144A1479D489B8F6CEAB4EFD6651FA
60211DC3A26BD62E858A706E8D43FC961DF131B7BA85EAB1DB96BD9851718C37
C2FAA67FD72FBE822AF50BBED0BBE3BA7055D5F66C6684D97A8CF925D1321FFA
0A340E32030F66A40C5371DDAA9C09E3D4651CA0ED458DE1D79798BDB3E2A467
353702109CB3A82C9710CE97CA2774F27737D3366AE98921E493A2689450EB38
7AFAAB7294AFDC10B4183E480C41EB8241AB194C0896546D749C9790693F9E76
2ED1B628E6C5A586638CE50CBED2257B820AB36A4DB90887AD84C2E2099F73A2
E468110AAB2BC8367164669433EABF0FDC11E0564EAB95A2EA372DB1166A15B6
DF69618CBF17DA633529C87CB3C92433F492602F87E373A805CEF06463201B00
F833E5A0135403B482CEC1C97B589ACBF96FAF8D7E62B2D2ED75D075CB5D8654
BF55FBFEC09764D1659AA3FE7A18667B975BF873F442CDFFEB2BACFF590B3978
121FF3198077812DEE6B83ABFD905E60E745D4ADD1DE222DEBD64356E2CB8AA5
061C799C864363D8AD4842E9334EF9A5C6A3C3D207F5AE931B852C51102F30E9
CA13D9C379F6286EBDA78B99FB2FC7F6FF7AE5716958FED94E2D6944A68175A6
562C27F3F329340297449691767018909002301F06A3028D6095729C8D6F0483
F6F80D9218FFBC094202CB50C3C6E5F571A54743FE7636586E35780492AC4ACC
EA843EE25A1DDC3AABEA121C0B5BC8F426FC260ED5511ED5ED3EB0D122400B6B
7557EE57EF59082413742A4CD1BB78156D5809A68E757843EE4CF762927CFCCC
D8769905F0F6CFF798BDB48E622A041FD896A90E8613DFA8EC49288F55CC3673
E8D972B3CD9C5A5BE58B59C020B81A403D3D17671E1578021BE293B4D500F009
C2ED820B75D4FACAEFA4489F27E49688A398780F0D7BED62F3C026F1745F8986
516493A84EFC3E579C96D321F56326AFECF8E97444753F21C1F5629514793A83
B7CDC6E6F044C69648A0320DA6B89071C132BD7E0F9B25F3B832585776052FF4
259FCEB702BE2F2595A07CBF1BD05B68870AA4FE5CEAEFF2DCF0046536B4C997
B3FE3D863BD1FE2D56BD513E5BE907EDBABFF4BBA92158C3CD36EE89D88A6AE6
A070411208FBC00AD8EA3096206A3AAF487403B7612F26C8A3AD9D182374C169
2092402C43865262C00410BBB31A89AD23AC78CC5FC3149999D9417CC312E8D8
7F14AF3DC280BA7B1A44834C770479712E2A5A618FF3F138947E9552402C349F
D22FE8977B2DF4970EE03C65448E5F85C74B44F1EBD38C8FC94702548AA33E45
BC2757ED43E372C66EA1076660C825D1844988EFD51CACB7464459C786747C9A
892FC7362A5B2537EB96BE26E0342E4165D30208448C93177EFE64E859A01465
0DD9C516FFEE68BCBEA7419EE8EFC242CEDD2F6CDB3575B617296CDD6A514F2D
BED85F170FEBCB53A951089E15F99959AF4B4F93D78FC3C4F9450CBC525A740B
80BB8B3C209EEAA6A4B2422F75140C6A569C47382DE885B0C370FB1049461E4F
38E19D26A7438DB118C372F8F801A548A930A46DBF03CCAB754A76FD96BCB5AE
2D6FF99C5A65AF5D9F1D5A2F357435AE71B7F75DA8A0DD76EAC1477D781DDF9E
D17BF1BF122E057F5F737225B84138B959B5DD39FAF86A1DBA1C615E69E794B2
392D71113C43E1AAB21148C4E64E81EB2D210E044292697B0FF2A4DD9AD740E8
CE533A0528C013A3BF811834FBF02F853EEC0EE8608BF8AB26E73803C83FC4B4
155591F5C6DA1BF602A2FB59F293CFEAD3E55F65BF2C4318ACBDA9EADBAD6D72
67995C72ACC0658E69A52A6925E69355F02E5AF8CEBFBE4C04DDD8D401BCDCD2
B7C56C4F1505B435236F590D801EAB3A54B903C0437B2D679953E3B7347E6124
ABC3CAE648B69A462510D09253A010AEDEACE01E30D3CB3FE2944C3A15D195AF
ECE4ADDF86B859B45AC35F6A24C63CDE613C9A7B1368D9CDAE093B74A454F11A
F9AB265445B1B28D923B36ADEFF4491899540B30F28B8406513C7C1DB5FCB996
39246F6BDFBB08490E8968CD02762CE02CB727B8B6F3B71C986F8CD41141C599
FB05C3E0E420A591EA95C8E236E80733A0130442DC94734B633C982071A7454B
6CD9DC64DE1112D9A7F5B61F8CD458C787BA1D84E2EBE5F45597EE0694AF84B9
3D4B0DC8EDFF1D2DE22DE3D1C72ED10351054AEFE6C9D6102F1D3AE81299F97F
B671441D15229D48C1FEBAE3F022EAAB02B5C3ABE216B843CB8103899EA8518A
D559FDFE2240087505CFA912217DD71B230401A550980BF7F371F7423D2A3DAC
EC303A032718266FC1D0E4C1A6FB95CEE8B2EC957EA523BD60F37EE2857AFEC4
7E25004966953009C2A49FCA5BB62E5E51E56CA70B16425B302035A41EA7745C
4CCA4E75E460FBBB1875E59CD940B469AEFBF5F66F1571346ABD5D7CBD7A792B
3DB4780894586A7A534BD65EDDA5B466A2B687F0998FC59BE4B93F44B1B25853
B9F559CA683A3E78C4073B5E4ACE7DDDB9C34345C13693EC4D92DDFB20630ED0
32C4E96971E635E5C093708FF63164A0B2B27C838A1EE984020F6B9FFA26F1D2
82EBC19257DBC8AFC1D266C3CD4D3AE7E1A00A43D254FE64BE0E05DD157E37A6
EB7BB45140D0548BFE44728714E2A1A31368CDCB906BD6C48510742945D5C00E
90C1BB3D58C1A115B39B76EF792F7CCB4B880C2C9A833EADEF9986C1E70CB770
0EFFAFBF71BEC4BBDB27F7C1E2D97BD87B20D735CE102C0F60A9D44BFA14AC2C
E3DB0B46E25392CD6FC3BEFB27A960CC43B18A01898AE3F98DA779BC4F16A068
9AFC47D623761A3ED9FF155CC80D07137085C70F00B4AA2A3F38FE549D72798D
3C4C63ADE304189A993413F74081530FBDA87E66FF9EEF16B6714320149241AA
D44B2749661CDE6521332B89DBB9FD75BB548E4988A580586486CB75E1C4E4C7
A38DE3910BD6004EAB05E713C3C62B0853381B561B1DF0A64A04D9389D396B33
9BD81267D36C0798F5C481E2DB21BCDB0B2EB573082BB774BD3A77F09FAF5C0B
EEA7B888D14C64ADE6A55284AD768E0D17EA1EF887E36190EE2CA00EAAA554E6
4ABF5421FD338F17B562E955B4EB29D9003F713ED73B49F038447B2FF6C27CB7
4E69FF8C7A833FDB5C7BEBECB25E8CDC093203DBED8E55CF8FACE133A2C1CB73
20494E2AB777F5981D2AF6FD54B8C16389D63745928169754EFD6DAA3219E5AF
8DFD8B263DB0646FAA5AC49C5FB383963A3220B4F4CF20328415B220602DF74C
AF0BAE66C0A862D6B27E0F1154A9EC0D95BEC366D54EB2796B5E04D757ACA1DE
7EA3B5931130B648EC339988728874706381E06CAB4FEF345D361E6BFEB0F1EC
132A17F6F69DBFBF14DE59470962F632C45DE55DA79BE93A9FA6483A5FD23A43
27D12507EAC72A7668ADC580E116B7F259D4D3D6D1F0B06737D3F368BFF332A7
55370BF3392FA10B969C3B0550B11B99ACB572EDBB7274FCE45789B071CF0454
074929A23EC014E6F3D1E6E16AEC61289B557663D53DE4C578F6993FC10789AC
6FA67BFC1871AB4D0073D71DC38239BC688D3F5F61CB43AE2B1C3F61991A2B68
A1B09693ABF5D32908C9E343AF48011855AE0F42623456E577D8AC3D262B24B4
BA84860123DB51D12D3FA7A169490D0A7DF4E68AFD84071ACEB30C5D201167F4
7D54729781A48D0EEA39A25635E50C9603CD2141A57CD8B6B56E6D899A4F43A8
D839B656022769E77672F7B2EE79EE107C0BCB9928307ABC049C8004E21B98FA
DE70066A485F3B1D0C21299E38A93996A0EB7A3357E893B799094BAB7F914BD3
96A653F4E82869F192A288CB1925271677B03D7B7109D7E2882951375BF8E9EC
27CF6413983A795F6783F803312AB2DCA1903A7216A3CE3FD96C326F696544F6
B1F129A854A81ED65184618E12186EB25E63C8A2951F771CC656327D1134617F
6B1B60CCA62A31E0D294C0106CFFBED9D2EE977BB30BCE49F1BAB31D2EB98A95
7D3DAE33E425EBF9D5BAA0923E22CCCF644057D9FDA066A17F3ACB2DC5B156DC
85AEA94441AED2B4249616263DAF8DE30E99B6CD54AD4C1F93701CEAD20B9604
5A86A6B2AFCF21664A704661344F2B8EDE6E62541E4BC8065BAF393FFAB92463
5579E7CF52B739B780CC02A5371334CDC01EFB707AC25F7C9EC4EFA5119F1E37
F06CF72D76D460EF34B60223FC6170F5DD66C146298F09EB0B4B6D62DAFF949F
576A5621DBB3569022BCAA68FA2AC17072EA6C9F52E42816C85AF34C21215E75
56B2639CC4A9200AC342D2CD79E14C39DA6BE2D421840BC1C1F4E3A05F05F21E
123CEFC8CAF8386FCB9239BFEBAD507680ACA37850B30D1BBCDD128AC4835989
37228808C8DD404ECE7B7EBABB8F8300601476CD50E2FF86BED94AF36B6E5454
3B4114855461C83881CDF494C2B25FDE74B16E236B1704C8D6D26B3226DC5DDE
BFD668003B8FE82871A1FE5717DCE2CA2B7311E8AA33409D7E03A90AC3870220
EB3399E9917CAA5683408D3AFC33820589697F2C19136157C6D83B33313266F1
BA8B9E065A0E62F4E2B3BE9F4381BB511B7EE8981BACE2173FDEC779D980FCFE
E30388380927E5F20F65E61032E53BD00CF54C89D4719C81BC5432D45BD5453B
13AB738A656264761044393BDCD349EA093EDF3861D8055DD7605F9D205BD982
6747F55153715473FA5E181828A4C12A71DAE2B30316A2ECCB35B69369C888AA
39917CDDB8858606089A764071520763D6FD209A23F24B713F90024CC452D451
206DAD507F97671C9D7CE4126A05403331F8E710D103F8A0C70AA127E851A7FC
F927153CC53609ED71175C559033F378DCBC7DA169D8A9CD4C32816A189FC1FB
F3E7B9B7EA71794E9FBD38B14F7FC7DFABB3BF569214525F1FBADED75739A29D
DAD519705EC0C3A425F84078E97E4480DF9B5AAE73A04E1194CDEBD673BD2C25
E906446F9D3CB52698068476B55C10426C6B620BF1890A7406C7A0502BCC4781
77F585F15CD2912847D0F53FF2986C6907EE08FF2FD416DC8EF9BB6EAC27AC7A
411BAB23A8BDC2CED9E3811F6D24F00B3EE58C56CC7E9CF8704FFCAFA7128767
225E00D4DA958B0CA5AB955CFC82B4A73B24431D44A069A6EBCB15182FFEBA0D
3EA2F81423D30DD38D0086D3DC4FC1E20A83DFAE731EAD0363A7BBEC37D8A750
1711DB3D81E0400F776034AA7370C867BDF8F8CA3FFA96832AF6AC529FB8BA5F
68FED42DD602A9644C826C62C7109103FBDF1B4DA7CE2B7194624D33B42527A7
442B1F05A2B5F750ED1A437DF6480BC21F9903195EAF273C7D2E516520C72152
0580C863AEB9F26D0EB2999BCDA5CA041B9C52065ED9868BD921AE2E19E59DD6
207E0C320361D03B248E7E7501BC64297D3C8BAF3BC9C0D4ED6F8427C3FD5018
65604B85880B053A592E36D0A0488A876BBA3C4AF64523F37F176F3256E298D2
2DC5F1CDAD67E643D728556B4481C7F77B18BBC1EEB43200DB09D608080F0782
EA3B1142C76B364D2D85AF83BDA04D51A98F9C7E0FF099162109E4C8B505BC4E
AE56F9DB92C6A337DDC53442C8E081852C775C29606A3C2C73438904D50C37F9
582F33B2E198934294E52A2A25163FDF224DF1946276AD0A5D2E23697DC5DFF8
96EC8C1916D52E36CE8D769D9E25F7D20104D4A69C2E05352428D4C5BDF7957B
96B8930BAC7BF095200979771AEE3F8BB74D1B1FC085E82C2813504CA1EC0B3F
467B33A9A1DEFB7346253435C0982AA51F2D946ECEC0CEE91162DA66C9C1C9B4
589A67F242B92F71193D204C1179E7E5120F911D26FBDF6F3620836DA8BB5CE3
1BAA722DDB36BA5642CE4117A9DCC54AD1666090276C020D0983979A82009507
CA1FD434B2464C87E51DC00983F964BE9851244F76C015801C32E33A9768290A
90A5FC5E18CB58532AF7191B77C84A1EB82CD75A9928C1AF342926DC21B33111
A188A5FC1D4CF98C1530A3598F35E26F2E8ED5D8A0B0A4EF9503F81CE4E8BF0C
3E801B7169500510B895BC38114416C1581D265D1BDC9AD9DF4202E2704E2D85
5D46F32DE1798E244BC0892953EAD550817FB700822EB157C4BE8DE6F152F624
CDFE1EF9A647275BA31FA3B1D4E0739E94D062321F42CEB4203F46DD2D9DAF8F
90CF4F43A855888A663E1B5D69C1D5C2AADF0E960552D2FE27E75213E3B52F1B
A5EF7511324A8C312CBD99F9FC9ED41C012CDEFB706711B612B1422C44EFC191
00655ED39C0697ECCAC86E91D4DE13A58C5F12F17BF58C54556EC8BFBADBAD04
5C00A6C3887E0A00795C37141FEC5428ACD8ADA7B3025203AAB593E649A4BCED
A329849DE9E9A23D08ADA7F66A3DC74D6126B8BC8E30EC6BF352F924CB26E9AD
37F597241DFAEA7979DF9E1754DB80B7A26DAFB54B00702F9DC177B9EA20E7A3
98A633D965AD4B2E3BD35634D69BF594B4985F9921A8F5693E16534842E099E6
B189D865497EDEECEBCBC1BD6A0E937F62DFBC521F183EB59FD003AE5E0B175E
A87DD3836D15656C3621049928B01E78C6FC5FC52B1CB9BBE02BB81F2CCDAF43
172EABD8D0C79104D2E173B080DD050FC4AC632A7BD88388082E54DEA0654438
F36357E82DD0F83630772890D8FA0E198FA27CECC7A2DE2DE9462DF47218993E
EC9553C3EC0EE8DDC9546D4F64411F413D11D4FBD04A00B4E36A89586CE50FC9
C168281F59F45D49BE820190FC2B423322A0AE12786688C1D5C8740F766D9190
D5D878B8619DA47DA7550ECAAA8F63C6C2A74A199E3E4173C749CD28214D84AA
201E7A8E6D59B712B2AA3D782537544A54A56E887E7148911BF9C48FBDA96A50
1D9F08958AFB0F2BABD93922C7DB78C54E81C2E4C11086C3583FE8D6C826EB32
307A623C8DFEDA68DA9A52AB8891918851F061DCC9970506D4A778672A022D19
35DC96848E920F2210FD68718C39BD2CADD6E7C35AF7BF31F66FEAAAF8303352
2871198AB3E954EDD88B5059BFBB42AFFF4A3615DDA5F458D34D1C7FD302D31F
1862C85C6ECF16AA72BDEBF90BBB7DEA2AF943FDAC97E87B957DFC0B9087A475
D567791289908F9708D1FFA5F4099812BCA110619A73A26C5E0137C208DCF1A7
143359F8EE27AB185D08CE1EE6302C0AC1C7CA421B81B6DDFEA56902F018B1B7
A2993AB5D0F5A7DC3BE3B885999BF8DA87335282148AA3E68A7D3D06321D6DB8
0CD676DACAB1311AAA2950A1EAD84FCD983D5BA6719DF09FFB7D838A6B7AD798
F33506C01F9FA087F96A56472D20E36B733F75CF9D51B866C0FC1BAFDC2E4B2E
4ADAC57AC4E808834EA5E1F20BA26FD50B3DEEC937526816B7138A75DE35C74D
8E8836EC39B563558C93AC71A4C6A0E0457AC2A59B07C199F94E3D08301AF343
C837324B9CCF7C6DA36565148F3FC891B295E7A73C62066CF520A349E917A88D
9339CE85E9CFCA1E8F117A79DFEBA746360D0F977863B5BC5F2ADD55C74DB7CA
7E9EFAFE44BA7F7D9D5E8DD698B46FB83704ECCFD2A6E34496A866D0CF869EB9
69C1C36C72AA60D2759B3D6FDBD9B88CC93C4F0D5DB8E0E6CFE66CE1B4C401B6
E1BF9E9308107E3B1013109AA2644EC087D61BD7F509234968915C6A9FAB3A9E
6DAD544451DED49EC8F5DAACAB636082E7EFA02DCB81D58DBC9E21BC24DF15E8
660B29B60E86360C270402194AF4D37C1876C615489F76449C05CDD1A3E63136
680DD6B92C897D83ABBA76105BFF7E7929B8B36A0F3C3F842D9470EEC62B0333
7F0CA3C59EE43951BFAD362AED77961F33CAFF807F256B31120CF711DE24CAB5
3C624BD3789CB482A3C065CE71C64A50CEB925808E57CB966DDD260FD16C0FC1
5C0DCB4C59BBAE3A0C3B766E84C51B06C0CB5B20DC64095D442198D9D530581F
1C40D357CA5E6D9D705B1AA8697A500C943F702F820CCE6181B6115D43C92466
99909AC060DCC4606454904FB9E7BC9FCD5D2A623B7F1CA8D7E45983976ADBA0
F5A42385E23E7907F1AABB2AA1DB6AAB259CAC63412153E8B87D7FE41087972F
E7916C69D015E9FB9765648552E6BA4CD3554D42236A08ABF3FC731CEF46F384
CC2B338F524F029CE350307BA2D69CF9041D0CDC01961AA2DEC534073A1677B1
BEBB261F9455052A015C29B12798F81CC07CB996A551C47FF9410112F3373125
EE1C159D96F3A6E755C499E85913D6BCD438DB9ADBA78E5C750B32199EF93DF5
42349C7657F616901F95CC769C98CE2CFC8BE093E2435B87F848D06FFF1AC368
5C5C83B1A5DD23FAD620DDAF2FEF01212568AB4F445DCBAFEEDDB480B4934F7C
C9D55E6C9C74EABC4672C592EDAC00D8AC3E45E737712ADC782430C9A1809435
FEF402FE317FAB705146DA13AADA0F24C629C0A660A0E705AB881B94F0352676
DD613C27000B0619A71133C264823E4DCE5C2701B0ED4447C061B62C594F56E7
2E06691381D548000ACCEC13E8786E350C2611B5E92BD626A47323AB40CEA3C8
50BA3C17FBAA2AFE7164E5A8728CCE133A3E200898C442A8D1A58823A8558429
C60423D8A2EBE1816E2F9F03AE75C7DCB9B098205BAB34898BC846D7487083E9
876F6C98ACD198D7BB99DC0D3B069C0B73FF1F25421CE8F3B546ECFFA73AA67B
85DEF50472FFD810B09C947F93B637CCCE7D00D0CAC33B0E9F46518FD1045222
A83F9E39E4E85D2D868F650BB1C59B638E677A4FC26F9D9A17F28132B8BCD94A
F7BDF2C98A2EFCA1A11713BDB29C7B5DCB39B69ED600DD6A756FDAF3D0077B30
DECB9A1CFADC5E756BE92F3604400DF4C8AF5918F8DF50D5E6305D93A003432A
1CA55739BAB3794BC2CCB149546CE31C73654F72169A23B2548364B56CE82B34
B72354F54412630686BDFFEDAD5DE56E8269DDFDE7257A996A3C01266A2EC892
11036A948610B847E0172545E9C688CF881AEC76681F6046CA40BE07A3380750
5148AA40827BA1BEDB5E73042C3231219FE33DA95825874F264CCAA849EDEDA3
4EEF0F14916DBB9DBD34FAB0D148E1843D354DEAF11EE8A8C89B4602CFA5EAE2
D311ADDC90116D1718807F079AB667F52A4CE54DEAF1ABFFEA0BCED3A9A656AD
B47677DEA2B09194DE8CC7CDABA851E89B3DEE4058BBE84AE75D41CAA5EE1C17
12AF40F64CA6FEC03BF21F7365BF0D30300053787EFD8D60FAC3AAB5CBB9A7EA
417AF850D09049767B913768B9619657B6743E5564D8E3362F168C2485FB0AEF
EFF04710BC281A8E2F3440546601665F16EBC05419624F2D37588D4EB86B849F
E87E5F06B3D95BE179272D5B8FB2DAB060C7BAB8D5CA9EDDE9670F6B3DA15660
8670D539232432EFF4F81DB0D208C04376E91A9734A4362DB20B0C8089B94450
0C32DA0B90C3F3C665E41C26E33119FA7DCC0CD9C98D60276DAB1BF1AA9B3530
FBE0E3579F8D02EEB4816B15E65E4CE2A27B59696858B76EAD1688912556C111
283F4DDBC972C2098BD56ECD9359F4D658F378F5608F7ED3E6F4CDD7A3544D77
2913B7857772A1E2D66511734BE4D478851E4A34CBF598F3E703D4B55DED2971
43D51F70DD8C15E81F4502C0826B0F593139EDDAF8BF31BD05D07186A8CE4A3C
3C75D24BB3D1B624555B8FAEDC06CB78AC91A12B75E40683DC69AB239DF3F9CC
D4842E21A10093137A276317BDC48F8E503BD8B51B11F149B5DC15AEC0C2F352
F81DBD13A927892557DCFF5DBC745D9DD932D6CCB6FEA6BA11707DAEA11FC315
BF3BD9006E55D091A144CA7580597A74033BAC57D67E9A05418B36D50BF599C6
3DDDAEE80A0314553620CE9C57564FF4261ED380F523A18C0E029CFC5A1F9DE2
F36668CA823D47DE0D346C929D9DB05F155966B176D9DA50157D7599260349E3
0E228400E4A0560B225B7126241264DF066C5A32E5BEE7D12386578C9339223C
A016F83455D51E09A737B9B70E542BAF20AAB3741FA0DCF2972EF2DE6940AA98
663DA46206E7DA3D4D1F68E48A9F9D1E39E3A22D4A36C1D7DE016E6CE0D67D31
DF5E0307EC6810426BC5FE375F5C446B8EC62C2209CFBAC9098AC4C4E1A4B9E6
4DEE35EEE3E69CA961158531C96DCEF302F31397841C091F2904FD8B7880BDB7
8E6837D9D42C4863CA1C266A106F7F5C8A57B927865B6B5C664BE5E5504EE60E
C8092316BCB4094E563345E1B359FE464B7A9D1865BA949517E141EAA4F30857
5CAC041C7CFF7A6B95F41BF0D8756627E883BF55FFD0DEB36E07E00C8DE370A7
A81686B08F4C0FB061EBE5F2DBE68A92CAFAA72A6D89ACD9214BC7F3D1E370B1
330D811FA76A32154D39CB677FACAC67E92124F124742C145648C991BF826AF0
9C10A29C6503A854932077E8E6DA946F3E937E64402C3D3CE887E68B7A26405E
BBB771F7D08177EBB07F7B8059CB654241193A8C5F8447276674DF7A9F65F9DA
FA745E45DAFF5D601170487861A3AD6BD019414F950BB282356BC85C796B8067
8D9B343360B99BB8C7BDE678C8C538CC427EFB142877788F1FDAD0E8D7CF0AA0
407CBD721DBE9456E2FFB8D9DE7D61B852388FBD8FE079572A6792B84A068542
7245BA83111AE8CDF2EF7AF32BD15006090ABB211CA483473CA9B728B39E500E
11A3842379B00A5C8564FC9A915C85B66EEE33EA460AF4A86949184DFFBD829F
18A73BA4F63DD61268757A651EDB74195CA967B7C1D5CE9CCB165253F29E5B83
4C00B4C5EF9579E21AD4455F05DD578CA4EACF111777580AA6A085050F718BED
4F62A849CE9611369541AB1E271CCB9B4BD838ED9C08220E7376A160FB06D76A
5089C50D262922D006D7F5B607E37504B48CC0A3678F3DD4155CA06EDF48B41A
FE961425A18051A0C0C4B532B7A87BC0ABE940D44DB17131D5EE6798A3C23693
A064F3383B7D6E84BC93A4F9FBACCBF54B156BF00EBDCFE3DD9DF3E2DED85638
C1E22BD674B921576419DE1562C0BDA2286B0D0CE45408B34DA8D3AEF595F6C6
DDA28C27AEAE99AED13FFAAD7085EA5821C4CD7A6799F18319BB14DDEAF56C42
8476B287E7E8ECABFEBA72646220218117D2052BD8AC5860B8D413F3B60D0809
828FE05A5F3C346F9DF35078D01A22737947C3BC861490851A156F34387F5E4B
C4A044FB59B2C31D44C06BCC58D737F7D239EBE3EEE1A4F981B6EAAE675B53D3
C3462AE5E27D87180B64478D3ED7AAECC75C60CB5607F9E5696F13AF91E4D7C4
1B245C81CE25FD7D7B305DEBE880C30EE66110F350364BC631B1BB6D49959394
617ED5ED9FC82455685AF1FC748ADC8805349FDE516A79AEC07A647A8105085B
85B801842A1536C1B056A58C447B8F035139DC316D486353EB1B015015EE0F1C
761F5555964D94C4DD2390CB0BB126367CF1EA5CD9DC9693B7E09A9EC272BEC8
3175F9BFED2A90CFB909F8BD7DDB0F22404FD823A7CA90AEEFAE182074DCF944
0E61F72C3299698DBBD1E4F28DA6B5C4BF78895E49CC127130647177335CBC27
40192638830EDA2D29C261BE4E086BA2D8C9458622E79171FEB66434BE0B003F
A38DEA84D8159A6B5794BB90C95E7679783042B43984191432DD462D39A98020
2ABF283451B5A6CB0255044FECE036737251D35C5FDA994255A30947B55A4543
0E2A91062B29574EF9BADBAC864246C671FABDD190FF6E8A56A25FF1CF594D92
62359DCB02A4143BAD46BA677D91626F32B8C850633A13C303EAE11BC43BF6B9
24338C6C1A9D5A4E40821E686A555869FA54F7604A6052C715BF061E080AC10C
6D3E4735C9D6D8DA09C6BEC8EBF436C5E963DE0353EEA8B784F1D633E01F148C
DA5A0FE9BDA9A3853E60772B604BDB151B7F501DB453BA430D20A8D70AFB6DD4
DDCDC3C62DC52398DA8740661E5C86F3E67CF619C4C056857FED61381C3949F1
C83D46DF6D80192C2787656EB337272EDAF5E261C77D4130BE3FD062801BEDEB
1BA9153E1F10079402E2BD9735E61CE48C7E5A10B6E3F940722D69FBBE9CA08A
DEB2B51FD97C14B17D94EA1FEF152DF2C2BFC6978F277D8D077AB5551698044F
2F6D46894CCD61CD328248C700433209125CC314AE0F16DF7EB4DF9B4EDFD175
34D3E6452C04682B3A5400845843ECB66CF19ED706C9A768016DAD14D283E0EA
8B856F19653E64954506D0A8B3A07635103DC18987FA3753452310E75E400E69
3BB995CF92E92777F8479C2702E2A51842212C02802E7B6F96B7359BF24D2951
ED1BC2195F11D414400F81FE0DBC73CC72C9FB4F8217BA5121CC6684A838216C
6CC0F1EAD55278BC73DE51289FA09AB025F532F11E7D21A9720A16CC6433690E
84C86699E376F9E880819E6670F0B8C9455F21216E02394D4BA837B1C80F67AD
57E1671EC567EB3C6869AC17C74E3C2D1B7B4A424B3F309B421E599B0DA38EC1
0281CB2BCC1B9A9D500856914C19FA32109950F8964B3F4C1D06126E587E8F5E
D4F4BBA81F980F96B20047C27BCC7AE4EED9C98A5C5AB82F9F65682F5BB73AB0
F969475F70DE958D8375C870C0EDCEEE0B5CEB236ADD3EE6CBE4BF59C55C82D9
A66A733F13ABA4B3B1BAB7C7F7DB532AD430356241CF4E33C90F571D786D1D16
BC422D720387117C705692B57470B27CD4C39A97E6F877C0BAB2E39FE3A9BC1F
33E28D0984E28BD14A275618D6412A3EC44321EB8458730A633C45D94E6642DD
04CF18575F8CE28E3035136C15642D6C4CBE8F3AFF39B372ACC66238E8DF0319
D440B77814459DC22789FD8542DA7CB09A7985D1E56DB2BD3794B36143BB75C2
76DFB0F2E7DA02989FBE0DBDE9E59287A87EE3D8E65E1264C855B56A14B11599
C2BA1A0ECCF80160E9624926534FB62D96D135D9EF3E9DF124BB30D01E9D54A3
CE7AEC90F312D10C33E5EBBDFD2E68B4ECB6B14BC9F45190E73B45F78AC1CE5B
A5CFE547A418F6F57CA48BD50D1DBCBD3EBEE7F8CCC05E4104CCFF117FF25B50
8A5673B23AE113B27C840C2A5C22FB0CAAB9C88F79B81298F103318B37BD96C9
AC146B7A62925850B9E2CD9FC64AD1B5758927CDB6327E76A8D8C8454C7E9ABB
2C0A9DD79D487A67EA1D9A22A508EEA8494F7BD45B8D75EA56C23836C6CC7EF5
541D2082783F1293F49DB2AB92956296D92CBC2D7C6EB1B06B0BF51366458924
FDB36E7C8584DD8D2D2A52A79D4CB52B7850290566E7029D80F4E12061AE70A8
46862A001B68DC22B5AE5D239143ECF9F065195F76C2063A6C4E1EFB8DA97CD8
8E339D33701AA496B6E45EE44ADE611CD1C473F55900D5D1A34793E173D032F1
60F8125BD6CC9327F84018CAC0A22609924F3896001F7D23DD2F804A1E9F413B
C658C5ED616897CC83B1F5CF5434453C8EB84AE3228A2AAA364EA416471D9239
DA040E0F164E7C8566C04C9C8AD6918C139E2DFDBAA8555F9DC67E4C2B2F5193
272A413A8D38590609298144D684738ED85902DD23382FDC5D31193CBB7F49A2
EDE5601617D8E22E8300C0D48C8315AADFE7741AF0241C7E866C012EEA31EAC7
B82F5C8566956E4D1C414475F525B44DBF82B461B9E0724342F67C1E9483BD71
4267BA7D884E972EEDF7CC224F6841FC055D94068253F60040D82FA8992ED90D
00BC80093906A8689D473312B52F7DEA36CBBCB95F1DB94246C17DB574601BE2
1CDA76FCDFD463544CBFD504C4DAFBD77F93C5C96E3314B7E1AB100CC5369D48
E773C04CEA127335272EE8EDF83B37DEB70C29FEE7FB0606CF662F0EBFBB4BAA
626492E0B7088689309E1BB53F7FA5378CE3A260ED7A4519DE28DB5A5A706638
02395A5C7144CB68CD9938194AB1B6CDB235A2B9BA1B02ED5C61FBAECDD052EC
4A3A79502AEC66F92CE39EAC51D0AEEFC585247CB9B93582A1E5B0CA27178CC1
AC28819DAF0854DEB0AB344AF757886F3D0F91F4CF12E6302C0AC1C7CA429B4F
29A1B4A730742A9A11E953A5167E5222F07667DEA7952186CCB6DF3E3A8D1D13
6B5EFEA9D1E913DDB3FCD9E2996E821CF33FF5F9E3ADD85220B93B365E73EE8D
E3C68D2FDE0741F35734365F0077EBDFF23A0BFCAB7FD90E2A9A4EB0103B7DFF
3DA3EAF20FD08453F7D3A3463ABF03C400D956B8CA050F6008A1E001BC8E2514
FCFBA68C85D65867F2E51085284591FB0CA548C59B516A6F90EDA3ECCF105054
A8D2DDD11968FF8201EA1B9FE49652AC5B0FCB5EC07E83A6110E1684F79DF43E
01D774570B9A1764F867C53D8D01EA1FD7906E29B36B983ACC12A1A6B105C6BB
3E5A10D9B51173128ED3E300037B96246131CFD1BFDEBCC3A12194BA7F26E7C4
D629931F1AED0A07D62FFD5623857E066386B41C9FFF02060B5175A63F67F21A
9BAAD0BA05196D442FC2EFF9FF9D6F6CBAE21678A45BBA89A25634CE85D85551
0F82FE030BA21E77B1CB3D88A6DF458EACE52EE14B5FE74E9517AA9CB08B2F89
72427A47CE6545D85D2F060D4694B26D79D442F04836C99B5FC12AA4984DB027
9DE31F7B204E81E72D649281B4730E45D82A0E7C15879DE6F95D59DA13B3B7F4
A84CC11277A1BCB3B720149CD600F2979F2D9258F0D649A97D0B704A6E71A3D9
5FB9A29B3880D41F8B97C82B1A763C654095598D2752659DCB7D2970392C6F09
11FDFD11B254DA5A793BC04AF36B6E54543B4114855461C83881CDF494C2B435
71B3AFAF00AF6D367DB450F76362FD9E1C29E1A347A3EEEB45541CB32FF7D147
CB85CD34424CE13529BC00888FF1988ED744BEE85F2CE3636722B3367C1932A1
1379C3D85B8B79F8673150E70C9BB7F30A18D69C4664999F941BAC42D9E660AE
FE482ECBE92C7CA2079B1EEE7164CEEFD087BAFFC6C93AF8FE338E70387B4F1B
A2119BEA22F1173793087399AE2CD42EA3950E8C685E163317B1059E9C2DC8A7
CFC020FDF6FD6D60F4F5A5B281ECA2AC6EEA071D0061F16D88796C4BA0C670D0
E715ED93345681F773884705519BB0C8190FA1709EB76EB84DFC08C14BF69D27
E162C7EFA67019536D12E804EC4A3BFECE17E6248E2876E8A89247E3EBAFC1BB
BD253037BD7ADE87164B34202D198CE0956149077FCEEA7ADBE6FDA2B8AF913E
FD52EFEBE485D63E70D29D7DAF29F8175BF09489F1624631A0DF31C325C39CD8
8E4B559CC75FC7E7B0BFBB6DC2FA129B42626576E6830DBDEBF0F98DCEED2C1F
42FA02022FF73FCC4D4B9A4165BEE70A5225A740BED8FCC5BD7173B3560C1C25
02F0E994FFBF8BEAD0F544F93B2BD042D87F8EF756293722771895DCBC5EE755
9361C216A316964679846786F81718901D53F6E6B228CF90B576495531F82687
29CF043CEAE0BC8B48F75185A4E27AB9BE3CA4B798396A9BBC60637B398B1B2C
5363D8B47474CB3A1DB25ADBF6BBFF134DCE9BF1A0775770518F23D88BD18143
BB8B891FB44BEEE543A21CAFF562A2F68E2C5377EAA25FD52C6C751A12C7791C
24EC4DCA6590BC1B59E07FD2309DEC0DC725C04969A9EF331BC571005AAEDAD9
D7CEBA399B3FDFF494D78EEF9EC6AEE67AC5C84455373F4A5B8F17CE7E4163F2
428A86617F058DAF31472E5DD98F291A969DC0523AFE3DE24BBD235FC08F19BB
6779ED373B99142820A4FB11648ACF4E6E9D6A049CFA261A823FE17AB5DD8A09
E2A2BDEA58D2E4739C4F5A13C722603FD1A9BABF2E59FA1E9BFDF47E63B2FA3D
45790646F8B3F94876E420A8B4EF904FFEF935954AFB9BD2041241B1BC8519EF
B937F20B8A0979A0392D5BB3A2803D4D9E1E9827411DE4DB918CC7F575B33207
EA520F822048369B6AE3302E9EAF4F591D1B5F9A663991106E16D0AC7E260C74
2B7E0CC00BFFA45D9ECD6FB54B770993227F4627065C7BD7EC1712F3A40985D5
8B5CD147BEF30B992E9915AB4D160B857AFF1FCA8294AA33E53898AF29F5266F
82D8E790239E1C1D34FD165579E2B6B1DB540362A319F1E186488D5E71946F78
A27A5E30EB869BBDDFCB7643CABA7D23EDBE846CF6DCDD7FA56CF1B229BD1CE8
DD61861FA778168BC30CBF14CC1D41B2F1E0107DF86CB762F07113EA2FAC998F
9E08DF96B22911238F2315A9E94E8D31831EC6E569358F9DCE264FBA8B088EC3
6BDB46E5704EA4193FFA47D3515231FD12744E86F853E144990D3DC471A332D6
D55BA5658692C15EE339A34149DA12CF4B70D0D79AB0917C744E38018D02DD6C
8A6C94E8D94756DED9D5B0BE7FF690E9EF8AD44480694E6D688F745FFB4F9E56
CF0F53A2CD42AEA5FAB6694A64B334CB750BB6A4D0230B883745CFC13D346DED
4E5C41BA28ED0B2D4F7D552B0ADD10366F26908FC65500C95AF25E8B9EA36C6F
3DEA4C6AE63531890F5701AC5242F22291697BB58347AD58AC787D00AB09D1D5
AA15F1AEAF4F3A95CFB0B0A47062A1AF2278A653351CD256F855C2FD13CBC109
16B81A108032A38F4DEE911C60F19E2D9777719D6D10E5E59DF8999D582ECC15
19AE9AA3BD710A4E94B5EA9E1DF931394853ACDBB0A3B914F7046FEAD362F58E
D664A77DBB2A7C87DAFADB6FD0638D08DDF86EA0373C2C27AA4C324AC6756207
9DA0553EC6B346E0AF1E96BE405AFAA1D261EA408E23ADC66BF831DB6A524CCB
C84E874B160F4127D1975F2CCF7F0A72701A3C86544B95B6583129FB837AFE9E
5EA65226535F722426F29DB1C1C4FA538D03872375F0733AAA9F00AA3A998A0C
72E551FC4F6A4CDF352FDFD48E76C5737253FB5D2AE4CE1E789C1C478C407682
B48DBE953B8C0761D113BDC81A861B96630F615DD92A73EB8E89EE80310D61F5
70C117FE0B3B5D8032FCE0B50CB70DB3B369550A8DEEF3DF6D157176FF86871F
1D4B302E2790D274A16F6F764B866896E8AFF2B064C0CB1966BF0DA960173514
330F99F684EF2D72A51B14D6C1A6EE4513CFD0AAD34FF119AB2483CCA3B3F340
C8A71E60B4CEB9383ED0A8391D817BF93003DA4150BAEEAB1893860BC643B4EE
C02BF0E32A9F659999488F762EC507A3BA71D96F18FC65FC73BC484C694A2706
CFDF6E6C87AE283E6F3B631DBE41BF5B4CCFE7261A430D9027EF49D5CF34A0ED
75A0868384D51E557F82BC00A7EC92D1A723D5C9C3AAE37D1F6E05C408B8CB6B
AC8CA269F6D9EDA2E0A646C393202DD8EC71390C4B91E6F01AE41F2AF5D110E0
4F7F274F09B9BB930A88335101F127C739B01CE8927FEB98EF51CF8D0035C491
341A5D440F6A0B4F07D779D9E64F1C5DD66BD9E9151B4B704964E5695E4E519B
8F99CE69629348110FEC95AA7D0D01C75662C98980447A957A4AF5C53A738678
187297E19648E0A061500EF45DF0359A6E6893877E82F3EF18D9BF8CEA98F9EE
8836B49B696EC24147FF72C8662A6949F5FAE1A7AE912C213D0F380112FEBD73
7CFF6C1483C454EF93EE334C06B1A622591040A4D13176649B1A4C795BFB16A1
15ECFB15B40092DC0D71B8C221F564E3B93CE360C5042325A2CDFDC1DEF6D30E
5A58D65A8E6DFD583AA98799CA4D93546A29395A5BE66101EC0A83496AF08324
B2DE076C213ED883C1B4C6F98256B66E608AEDB1B23A24B58BECD547D0B2CEE7
2323E53142FF6442DD52B0E44AE554032B01B0BAC6F6DC730EBA99792F176659
CA85E06F64A790E8A8404E0245B8A16885E34E0B8426638B473F81110875E3C5
D851094CE579504B342D7C187007AFC6E60280C059CC0E94509CF71042BB999C
3503426EF1C5A7521BA1931A720F8766D9870909E55260CCAC9627CDDC310F93
F02A275B7FC81D91016286600E1729B8FAC5FAD85359E5F1333234596C49C820
995EEC23C66A5B86B76513D1E2943EE7A050036F946C66A0B188B533E41F80B6
7A03356C8E3D527131FEB3561BEBA4F76A0AD5DFDBA6EC952A4F37948B632638
DC1F11169AB412475580FD13F889686967136E64075EC34DBCDE6BBD59183375
28F0D0C73A81FC12A743C715DC0D141522AEFA4CFC0784FB2B61772130B9931E
01AAEC08CD8A2EEDDC7295EA159C11B1EE977C88AE260A1C7BE8E062F1DF68BC
C50EAB2B6C8E7EC2B798E2E8BBB25CFF64186EA9C5E4B14BF26A5DC40551FDC7
2EDDF855875D62B091F4A70B95334C2C9D504C93908A1F794D2180616E180DAE
9C40E3807199F2B8BB88AC0050C36F02E6AFD677F6704E48A9E4DE1A245D9011
0A5076EE4AB6F441BB79F4EF6247BF3498071FD8FFB624D48DE91F3946643456
AA60531140633AEA5DEBFAADAC6AC4306F13059F0E2D4CC01A749FCECBFBFFD7
6DF58E255556FF3CF3DC114009CDF5B023EBD76AE2154B9227AB5D9DB4B7284F
A0E58F651270745D2374032BB57DF31DAABB7DE1EBAE20A38DC804C236964480
6AB267581833A721D174A65B51E3E8A909519CCECEB30566D330813BE00F185D
8EC22BF69C7F3C7B349A44FD4C20AE318067DF78B8FBC71956F3248BA6EDFE7D
7C15641ECD390E62B54834FDCEF1312411951039EBBD2DE29F68A3852CEF855F
9C48D3F1D0D99E7CDFD58175C9081FB7353A6EBFF04C43B7DE10BA964FB0353B
91D6BC325A4A9A39EC2FC5188255D81C06AAB3B4F0DABD4D9B9B81355A88754D
EA7BB00AE903052C76F0A8A8C80521F1BC2DB88928F02840A535293AE11674A4
BCD8C424624F77993F272D38BFD74002ACCCB0B8509D9BB8356D008922D156CB
A40997B3DC348356498766D584654059FA3B78B12C2E65EECF460CF82F0336C5
0EA3275CEC691B569F94A571FE79E91898F2C33359E90FCA1315A49D636DBE30
6D71AB9858CBD4185359724A0F19A790B00D04AEA9F94EE4F7878D974AD04A77
091207FFFA48D20926EF420C532B067A95CC97B43C97CBB53C3A0B6EBACB56B1
62412D757008C49C1A637280D4C1F8628E21B209878776598BCF586586654038
EC562FB8C340A7A231DE2D065C844A04DEE0846EC08A76EA5C2063CF35D5D635
357C693E248DFFC3DF82521470F722162B9D478A97132F31FBE6A26D6C97D2B2
A4775F08DCA2B139A1D3C411D948FB905A29621C6DADCBCE159F7C9052074BE0
959711884D54979C5CDAA9BB98487988764781797E2E36F85B97FB489A5D5A16
19D7B1C75D54053884EF88586CCB05FFC5891EEA9F031E9B6413FCC65C406B8A
7DA92EB22F6DEC316C58986B24C26C53D90433C03F373B8956556A2AC81C1A18
951E31E4A25B05B36DD4226A16A782DEFEB48942FEC7423381D0EA430052230B
8D9E4D25701F12734B01CA83718D2BD1E626878B61C5DF6B84182D37165755AD
9DD34821E1E756D3DE2C18EC6BBBFE29C193BAC9D1FC83063FCAE5B90560D4FC
5965BFA342114ADA73978E9616FEA77F88CBFE4CF8E47F31D3AD7F99D549B1B7
F8CC6ECBE2A7F253B8C9D81D367F9AD151992C8F2C4F7F4CC4B644BC420077B6
9BBF4CF013524B33F86AE3F4AA3557F832DEC885B2C1B86F3EDC61AD43FE9BC1
77C7DAC8DA44B2655D8D1BAA3DD5D71B748F6814D308FDD1F2E214177FB453CE
B7074DB176BB862C29749077D7104BCB313E5C886A06CC3717359D83BE8C0811
0D8A22EF63CA3C0FE9FB37A6B6CF692113CC15C94DDD294049748B473FD5F4AE
9C3651429CD1F0FAA258942085741EE832FAB1F7ED83D154E16AF040CB1A2E88
CBF064796261654AADFFC21A7377FFDF2D3DF2B2E1C33F87CF7230058028CCE6
999E7FAE29C10F1BDC6572F468AFA03E9E5100E258F1F9695B023674EEA1A00A
C6A605C61E49209BBCA60FDC5DE5BA59BF7B76C1D49108F06BC3CD172192FA5D
BC9C64569C005709ACE53634C19F764FEA888C1D79AC2FD0B8F1E65AA3C18D2A
74E9C9F9A5A88270AB62A0C11DA4175B9F63832FEDB75A7C3C1703746104B8D3
FC68C8E444AD667F9BD757CC7D708592EDA8C2818B00ADAF0618554EEF9AFB8A
B20F0F05BED00FD102B0D4B64D2691AA7F9267FFEE493220E94BAEE03E778487
2F16A93415E4AB2DDA6FACFBEF0DA0BDC9C27F08A72D7D61258987AA90C5C8E4
8D91F46DCD26A3B71ECCBE2890F823A8F53E28312DDCB7FFB35DC235E2C469D9
A5443BD8E8BD8CDF61FEF2585E482EE3E77A37457FCD38003882A66A4CF8D7B1
E2803CCFC1C9FB7FB5092E52B88BFA9851F59C636BE10BF7A342363B858A6C4B
29DFB0A457426CB6BBBBBE6BBBF8EF5FA488E0E51B36052EA6F1F0EED470FF6C
CB06177E357EA977B02A35A36458CB05C49E10091FAE714FCEE675AF20C91D09
050B5B735D665EDEB9495492B9D27723608B0A9923656CED03E0CBDB1F14C41C
FE8BC06E9C8F4C69B6CA2CFECE06BDAD244234D9352F12B86CAF73070AAB6E30
F0B8BB53066B97C690432219EB1228CE1C2C7E2A04120A61CA1B0B7B8BF28155
0578A8AB0BDC2079BF025E410AC75C24ADE77FDD9B95C46CFE09C77254D06EEF
47A712FFAD7D84D027324E19202BBB259CEEF568C0EEF0BF43FFF326413B7F2C
F52A520E05B686D18DE4B36E565249F7377CB96C1F4343B94FC448D03272BCCA
D0ED1A976CCAD20691B072DF2BC2427BA56C5D9812FB9D9682B78BD2C6109E3D
5255F458DA5AFB17F821D067FF0B60A68E26EC70B39B88852462DBB4F72CD410
E0959D3CAD3E0E76C34ADF2217304387684E11B10D2D52C6A3BDD0098133B858
871E03760E7D7C6874E3604189C2FA4985EF3243D6377C8BD13E54A8D3264A1C
2683C4F28A50892333C2F277D6AD07B14DB2678B695E5F6C4538B22176DC5173
D292D26951E3178749EB49E56E3C1D6D6590F113C57B5B2DFA65BB66F1D17B99
7EFF71C0B00B951A7570A341DBF602CEDCE9DC3CBFBAF55A6C5E200BE98692A9
A5F86C5451738B6A4F50AF142B5AFD97B1677456D418BAE07F40F6B58B98B070
534EE83284A1BB4790D57FFB857764AC3D8778E8A4F454633B52B445FEA99105
FB06994859518F603EE8F7214DC47D57754E5532084060D2A213D9E7283C1B41
A03484D76D204116B7A456F4A733A604AA76593A60743C4292A6623CE272F0BB
CB847B235AF81D9C07C40E35E977FDC984EFCB4556AE25FD1C98C243367B2619
CA6C93D1AEA02C1033D9793F00C5BD05B748D152049364C645609C13D0B931DD
6FA82AD59F2493F1D943B4F4CD230BDD3592E809E0C72380B92F4B946A7BAF34
835CAB0677DFD709C036188AF869E8D791FE3DCFC3E1A07E4EAC0EF1E3DEAC7B
4C83F112CD36CE63E1E3A6AD863EE548788E9A10592074ABF169468982C2A293
9B3CDC2CF46628ADDE1AC4852F5E60D2865163DF916E4D01D192DE23582B9DE3
55520B7A0962E508D13B8240F8F3732DDFE80B8F4A66179756C6668E13716D0B
B5E169FC53F95B10FBDAFD939D8FDBC0EBBE7399C359AD3AD70EE12EA881FBAF
0BDC35DA213A632E31089E6A97621518824C0E0CFD58F98944A2139BE408787C
213A7253E23C9BAAC1A26E8CECEF80DD0406AD12525F587A76C922E6C21FCB0D
6273EC47C32F5C3E5A85F1CA9C7B6AB08978C77A5680FD5D8DE8B605ED3013A6
9E65112F7090128C8B11A8B9D7DC54F36AFA934E907162B395A81608A666A75D
C11755A2A3EABA22E56ECAA04A3A1E22224C5B9C8B90914BC1F3FEF8A76F0AE5
1F86ACD4DB04144F812257E06707845F796745BF4C4073DE5E5C9BF3DE7CD518
F86A00F9E86AD2060CFCED7F3FE511B0E3121D9767CB1B68353073B6E21D6106
A742BEB4FC62C641C7F7194DF94778749C15A5D266457AB05C2639EDDDDC4D77
83B72EBA367A6CFED0E82E5F05D1F9603565BFBD5451F2BAC4AF89052666E690
F8ACD132C6B29D5630C6C64282C61FCB9E7659E240C818B312DC66BAAA47574E
133D26B426EC8621558E6581A270A56B9A952A894E9C8C9645A6132C0F36D15D
428B44CA3FB3E4038F50162676F6D777C370DDADAED2C7DA43C14F797DD77D91
4D1CA90A891506E015F46C94312527C5D21F6538FE84F63B96AFC78001B0EE82
6F6408B067A09EFBA8EAE43C63EB7DE0F5AAE4F89C7720B587045EAFDBAC88BF
012B53F8D3262E9BA4F370699C8678DC9F1694965C94599C82A40C1EA9D81D19
7C13BC7486CEDBD264D2C2FA2C8377720FCD7A1C02C0134821A462AFF7A8E0E7
BF712435DAAFB6961E52B16E445AC9DFA7381C5F099F7DE1C5F2918729214C68
FFEFCA21E075E745F09A6F1194E6402236A45B846FC841F389967FB667820A7E
B294B509BC0D071EB31D4454D5759DE14B907CAB448E3BA63C62251D029F7F2F
3CAFC7DD736BB0C487962473013F5892BC1160B468313DDD88F234A71888DC49
1FE3D8A3564704EC854DF6ECBBEE840F6F2ADCFCD12B1DE13DAA24DD16DE0947
6231B11E3005F3FCEB33E7227EC0C4F85CA74278CE1F76F4545C11F06147EC75
CFC70E12CBF14A1982227A421E114A605C7BF2C75A451B45EAB5EE04A556299E
4005BD4C423BE9939122274730652EEB5F6A664391B7B84E2282593DB0D84487
B7BBEAD90EE57EEE0289004914281741465D00168C2951654FE508877366B89F
6FAD2BACA4908E64FB0DF8B76F97E3AE0BE60A41AABACED09631FEE405D8503F
417E51D901EE474FC853C2AB07216D78F7D05A72AD883875C556169482B91CBE
0183BB62967CFF9FDC75B2189C5F1C0A4CEA754835087AD14CFD0DE073DFAB69
1726819D04F3A68E45B06D0195998E840EF5724BE7A1CBAC44E9B037B6EA815C
3D70DAC34AC084B1A18093397942ED0508663E38B7FF05556CDD7FAF7FD93CAD
F3059366F293191CE257782F236FC2299F6C6000A397CB9DCF4060DB7F42F339
AB93A7432453B6534ABE95080EE9D06FFC2BAEC08237395F6037F0180333B6DD
B728F08668C26FD29AB6E849715BFCFAC2784D902D6CD768878D79CAF427454F
554B6B6182B53B81600AB819FF56FDFC1D6678376BA32ABBD39841AE090FAFC2
29BDAEF7C3D113DF45488C62D0F2585855BBE79443A489F07A0DF7F2B693302E
B8A34D972A13ABA38387B2D6B71165BE3B79B89DE7E561195C6853D22BF99D85
992FEAD685BB713B9BA50198074FC701F826FD1BA4B0BA05782749DEDA7C2B33
0B4F75B2FB0D5A8CFA1C6F2A3025018DA88138FE4365FB01B297CEEC9CD42A03
D4DAA5AFDF22EA839323356C4D0F7AE36D6AD94AB07DC831D900C096A492130E
CBCFF7F3E58DE3BCCE78BE93A462A9C2B7BD7171591C710366EC9E9E9C1D03E2
D3F25F5C304BF5FC0B6D5703402E7D79C6EBA90AE3391FA533F088793CFCFCA9
DAE4E27C9A6A4EA27E3521C498D494DD54226B03E4DEFB70112BE7F4212FB8E2
A9BA73876C61393F94B97579D351D72148A95277622125B11C5D45E65E2E074B
3D3BE38D9FB4F96C2C54591C85D37B40334B29F8BA7E405259E681AF12CAE9CE
1679120CC4D1503B7BD18D8E2D9EADF26324E6856C1174916E4B587F9460D575
E02B6676D6627244791BD8F881711BB870248B896D211148FEFC69658175AB69
C72C13AC5E8C97D7F9FDCD776A189D0C954FF3EE09787595D81BC7EEB5750FCE
45AFF99462BE3D409D7DBDC1BD04167407AFAADE41741182C0D74EAD76C42601
32949CED0F2982F8DBECE9BA427104DF3E018CCD592792059D48A6754B77C375
1BE6F455B48BB452D8EAB1CE63B736201C0EEC72C6FCD6B3EFF627203630AF2B
D897DB3C7DD9D714C39EA414304723A557C4C0F1998A81C240F7532AFFB34DC1
A9D175C3896B41A9E8FD6E85A9EBC77BD548B0F71095BBCD0DD799B68C4C0514
7AFDEB6CFBD05B125B80E3DE0D2332FFC0B7C8F5DE3F19D69B92A258F59B5856
3876557608FD112CBD9D5965A315C8185A775120F6056E61EFA9FB0EC1E5404C
91135F45A7FD930B941212F45A30FA4E011443ECFF92062F3A78420C99A96F76
D86929EF63E805F182CF24AF0D0A9AB99764A5D4515C0B2E6535060C264736A2
E78F2BE1A10D729953C5AF9BB470D331B026911E60AB6D1140D4C0B94741D38A
9C18114D2952D05A84180BD1D23E7D4743E433AB7201F6E31EF557FDFA2A7348
6C829264B058D39E525A51CBA7A97B8B09755D3D61875115365E93E4896FE778
AF0FD88887EB7830EBB7FB142EE14E7C12BD59A16E23C44CE065F147D6F231B4
61D768B6D1752286025D25320023D54900AEE049E7D1F99B466B0D86747EBC66
4B1EDC79B20F4DD62943166FB7AACBCFDAAAE5494EADE3C6BC417DBBF9D78458
3F562C0537A0625C655CE74A62A8B7F8B07E332C596821BA109A68DA7345EA0A
8C55940D576FCEA2EE15C91289E4BA6D7A8FD58058F896EC8C1916D52E328E87
D23BD53C8E716505830E4313B7C71893D81A60BAABA8E75C4335900F135117A8
DEDBA3CC3910028C1CA1C71004397AAEA7FE4E03637B459F870739619C603E8D
D15D844ED23F35468C43BE484A57544D2B9DE37651BAAC8272003A63428B2245
66AC254C68F112736EC85AE93439096C12DF1DBAA8F8DE600D7AF5903242E1D0
703CC64848D9D249A47F06FB0F6649973C2BD86813295A3683BD51D67648F059
6D3201FC4FCC3089FBA6492892F4EEE9EEC82408F6478493439E3E0CB35CF3B2
FF97BCD8C90F3ABBA5A8231299006AC1A169F8CBB6E313016221878340DAA18A
A6AEA3BEC7DAF2EF4B85A8EB6E1BFDF26C7F98168197C02C4AA353E96BA7DEDD
798652E630C7BC349B1C750B3E0DD99A9FB0549166AF006B75763481C3AC0CC3
3978205427B492EFF8F66E8C07CC430D70EB815B198890C950FF790311F80155
EA8DC3F8EA9DB943789A191542089E218EF2A89C09E492FAA534A5F317B3A7FC
1DE2085C84C5938A590615B92EAFC12BBFC57263DBAF97EE00178A197211AD3D
0334C3F081F0E15D5D26A72F48979F8C3C01E7D0A5EF6BA1E22403433D97EF14
3C518E3BE33F0B756348F7E9F15625EB7644E1AB35FA3515F5BE16817ECF497B
7A41EA00ED4F37F9AED0A35B7DDCB537976E514621DCB0F0A3070335F65B0542
7E6D300B417DF52C331B842809843B6F12B8489CDEE8BC223CC240AC916848C7
B41C7498E5DC33A1009AB963FBF1D18AA5D7413BB849EB24169C104A08C2E2C5
6EA5C8F822C591411144CE72E06B401B41754ABEAA80881D2272C1B9691FB5D5
274499BC130135160742C63D2919166684309A799D3BFF11CD94CFF8481CC386
BC4B9154DC2390AE007AFAF21EAE79830E8DF46D2CEDF84B40EAE9A93A853FA7
63979AFE88E5CD4F38FBF245D7B5398121A27E9544BB71AD967C4B8437470E4D
020FC6E86772574A510342C8A67BDDBD597BAA0DA4E10D0347ACAFBB96F9C862
83AF59375E5857479642EF670263A76E5B77B8180741AB2490DF33BE62AFA47A
7AE3975DE4C8A5BBD24C9B95875E260201C80ABF729A4C5888A33E48E04E3BBC
63DC2F36A8B670FDAAC8CD81508F047FD398F9E2656F5EF06079D713EC4FA968
02BF253271D01B35F8B14C24D03A1C0CA332FFAFF78B8C9CD398677F7DFDAC34
DB448ECCC2B849CE44EDADBE1EB035C42C067B09C7EF4FB3B136FE6D1814F9EF
1B683181F9A9A50CBAF55D1D835F0D3A9FE35512DB769E87A6F529C011058521
F650AEAD8210F7AC185E87A3C2593CE3874702EE51D15B14730C7BE579410022
DFA2F253A0ECEFC2D2E76DDFF6D7128E80DEF90FC98A1B5153E0404213C6A94A
7AC4F217E3AB4BBA8870B2F327006C46238C6F9CDB39DD03203129FBC6B353DA
579B3FB5A65FB886A2F997DE9F53EBE9E23072972E05FD4E2729BDA07459F115
741BF4FAE80E86C1DA16AD59958A54A46CA36601AA0C8052945A3865D41F6872
019CDDD091EC1C4688DAE073EEB636927885DF1D3AFF4BF6EE7B5969B672BB20
632C49E4671C9168366BB2CA30F4D8080CAD322C021122E962CD756DE48DA937
98FBDD034F425142A4E2D29711B655EFC1D043C7BB99785482A577FC645285EF
2B7412F43F6225EFD82D88C1D80B654968516ABA9E4132E2BF7FE56CF6503EAC
88E8B4F4DCE6515748790028E65449802E6C1E310E78A4D28ADDB131FA20F926
57FFF7AF3CDADCE2FE6D5B7E562DBDCF13F0603F4B12399D2282BEDAE14864E4
8C57D0F833DEB0CF206290F753CCA5959665E40FE323256A366A45877CF940CF
7E665586F5EE36BAA962D733EA6B1D615D235898F90EC15F0F9CABA13C6DE8A6
4BC21FA255C664192E8B8D0453078397B5A160648F764407E576569F1014CFCA
5DCD789EDC250128312EE44F7079BB05085A8791024AA398B5F7AE7EEFF90937
C6FB7A0C27C56B44B37C97E610E127940B6F71FC815A42A6DF5A23909E98A97D
D3D6B5942F68BE5E4D11753CE4F2239662ACFCE740832014D11A47F9A6B4C111
BD7B2A4307A0C3F611DF40E7AABF085DE2DE9B7719A3F0E4A1776137664AB17F
D0BB8F00C3163C6A5BAD5992DA15B29CA142C74AA42E67C2669BF1485957E3E2
8481BDAE6CF706C404124D8796800A659DBB171D760667E1336DDEAEE5B7BC46
BEFAE400803D67E797DBBFD885DC2D0897E4130FD9E3062F4EBC4405EA4B88BB
5F97F04924E8CAD48609EB0B4B6D62DAFF949F576A5621DBB3569022B853F979
C3B26730051EDAFC10D212310DC949FDCED6F8EC039BE39346DF44036D0E1100
BF5F2E3E38D6F064C3BB1A935B75D26066B4A25321F57D54F381DD6C91D62256
283E14632E6E0E89FFF22F9EEC3DE906D2B833A60F5E1CE54AE464C43E72994F
AB642033FE02C2F3871F71E8F76323CDB9BF590BBDDE3789C01ABB9E7F1FA53C
4A2010D694B95DA29C67A81D03C05564A945CFAB8B67E25ECE20563520EDC5F7
67BC2913350165BD7F5004512F73799FB6E7753CEC0F4D58005511B0874395DE
DE4D3B78F8F31A5A92ADECF6E7F3706A4B080E88D90DCDBD7CBBF0BF03BE5042
6089EC7071143F51727B0558A9BA49B6BBEB3D840D306FB8997B2A362028377E
5C820A965EEAB01EA2E3783E2CA283EDBFC2AE9F9EF49EA6CE7FC910FA68F3FA
F5B967AD9B188C5CD06352E7E61B040DF20FF72A54105E7A572D0E3BF170FC88
20E42942921814A5363FDC8E86ACC810DF5AC40D910D311804686C70EF9B4B5F
24579852564EF01DC4AD98F15D522BD15FB90439598E29EA9053C5F3EFB0EA30
7483F841C23B766D1920A19360D03B570897C7A52CFB465919400C21CE472263
03CFD2C2636C0FFE8BCDBE3CAE02701424A6D49E4DEB63867F79996954F36C5C
090B0A18F81586A94C0684478EBD47B8D37E3CB1D5F4BC78BB3017EFB793B2A8
6D117F136AE676E52680371D036D1801406A3A5009F8A99371AE47CF016E3B3A
D1A5C090108D4964C7FD5E57B4175FB2A341ED546BB25A11C28B5846B2474652
316918D28C3181C825BB0C4EE70CAB7CB66FBC3B8E5C92E61821C30654698314
8968F2C71F0D8AE19B6AE3F6B9288AE899BDC29B75D8D0F5C57950899E634D20
4A29B00D189D64756B4B5F2119B2735A33B2FD432B612668EC93D3B908A8A5F3
35407EB0B13990DC1D46DDF039702D195C154A9CFFC7F3CA7DED3AACC615C962
0B72AE78FE27B02D35262A6EE0E4D02B2890915E2D2056FFC6E8E7024752660F
E91E25A1441BA45DC6A679FDB1CEB1B515AD0D894B83229B061C7012D31A539A
98799360AB339F12F9FC42C764ED53277C75BB83DEF52C8FF0FD4C6DFF4687A4
6C712D2346E2C3E9C5C3CA5A05324B5C765784A8F8A66DF467B74C04377337E3
045243BD1E611422A6023C4B88777F963E353E87CC73930FA820CD4BAA48A2F2
8D8366B80E6E29648CFE5658A9FEB3BC619A513AD790CC4414365E96559B6524
13093EDA5BBEBF135FBD729B95753C08B6A4D9B9066552B9BC9AB1583AEDE01D
A61BD2103F140509A69EB2EC5B668827F14502537304F2135DDC32E7B0E59496
1BF319A0FC1DC76EF835B105FA2CAF9C8884A0EF41160249126C5CFD0D18E39F
1D5BBC858220ACFD8CFF4F9D5E46CDCD068ABA3B0FEE7561EFEF4F462A4C6CCF
EBE5E4F7B2E24C4EABC52213CC4644D83EC2CD59D21B751AC6F39F6F1B11FE61
C93211A08E6F19C1804F3D9BA50198074FC70153B3FC7A0EE694A673751DC460
50B7FCCFB373DF0ED07E337283A88AB15C445F0B54C41CCB802C7937BB91558B
54F6973C9C1BD16EB61FA0D1A454DF1B95999C6C4D31E7E7036FAACBF59803B3
459AE0F95F4550DCA843AA8630714EA6AA05744A1B31458A6035245792E1D122
75F7C2BD48625306BFE7E39856C79762B90CC41CB40CD9CB081E5B0BB919B204
DCB0FD7EEAE3894CEC5C3F9F1C85E6682E55E48B730AC4D06F0D28DD18B20E00
BCABA2E4F0BCD9090A4B43664EF00F9CD7F3A9FECB1C5943EA2B1094B847F010
998CDF5ABF29885A69D8D51B474586A07BCF399C070A965CB031B361B70C281C
79F911F04EB29E1B749252AE0A7A3FA7DE007C73C17FE9ECC0763AFCD5514430
8B73EBF4DC5A0612EDEBA04E01562378A17F61CCBDB52BC0CA0990AADD63DF68
C3DE2065A772A35DB8B1CE1E6158A2E6CB57D47044B25C56E083B4CF40E3A55E
3888B18F831A98BFCFB4CF3D13A7D2F8A0E008E372889738C1AEEDA5148E9833
952198FBB9E92415E4A1A7721C683D7C2BC7376D40662EFB95A837A88AB333DC
710B29410CA46516D6C3DC2F3D4586EA5ED4F2805F142FEF03DDDC3192AB78BE
08F7F4D8F4172564EFB2B657A26EAFBCC1ADDBF31FC79561D63CB497B34B0CDD
5F70D3DCE99ADBDC2C094421077E4F819340C8B2B2268739E7E98C6F089FDCB1
B3F3ECD6D8FEE82559F0B7068A4960021F8BE410E69D456716CE0278CE7145EB
291167964B2063378C94F87B2DD51D62767FBF36CA51CAA8648D0FF17ED232DF
30C5D5F2918C5C51434EA82B3F801DC626FE3F92613ECE799DAD8841D2BA4DB1
80C579A2919A13A487FF44731B6DB80077E84DAD828DED2A3828C250D13F4606
4CCD32B59512CDFC2C63659C31F4F6F7DECBF008DC329156A55E09B721023B0F
C31BA45F6F7D1BE0A72CAE0B2D7E09542DAB422AE75903B923DD1AC7C1A6F85A
9A28B8819488FEA484AA3CF1D91700B280B4A3E94AF95846572DB885ED214D83
54AF969DE26F268EA7FDD1E0B129DAB08AC5B121375A10F08E7FD3B64DD0E349
6C121037172E0D94517344DA03040064EB66EC13EA4B59EF9E6A36C08ED75998
F97766D02123A278C36ACD8EE0839D5BD191CA654211E7A12290EC38C4ECF736
DB15FB171337AC5E8807FD676EF9385F55CC4DB3E0C4FFA22E4348C9F9E0EA22
B5CED22B129A26D5CBCBD4411F7FB73510AA1278BE5AD7CECDD836942FA8779D
5DB43110D277B0B280FA7700C903AA94AA26918D19FCD376B8A64478BEF6D824
40EBD930889D5BCC5C0B83DC56511701AE0DA8BFCCD36CEFB1A5D5030EC5A88D
5F1FF4EB08D630764FB7A5CC67AD24D847CF6898BD321F86C8F5658F2FC76B88
AC16F1EFB3FDAA1B0E7CEB4BCB7371B88408589791BFEFDDD470B49659BADBC1
061CE8BC3367497C95A46299088972E70B33DBF668AE2DC8C506754600BEC3AD
F58C2E33E48673BA1DEB5E17D7CDEA12446524830AA79B7BD8BB67903D937047
25F307A64B286C02403E23A2EFAB48138C78C4D61CBCDB6F4A0003FF67E86860
7963241BE5718729B559EE4F6AB256345B5704023C2BB747A5F4298C0A7315E7
9C08908A0030F9E64079A3BDC35128E3DE23AA5464D301E27CFACB172726FB5A
65A63E1D83E532FE08C779A4022E49E1D5251E62755FDA85C11305A52EAD535B
E41404D14CECE400FA9276481ACAF71812E111D747EAAC05C04E3DA61E08BD03
1CC382BD91BA2A47CE5F6F5A319B1B27AA35B5727F7E5FD95C202B75B0FA3DBD
17AABFB967761E6D1212487BDAAC89BE2271369AF7D4CEDD99545675E7E3A4F7
072B57701D9743C37F3604536D015E7669DF700B619168AFE224086676AE09AD
2F2CECAEF2F5FB2F8C4580BF188D9D34E2362280A0D8BE1AFD7353053B24F0FB
4971050E3D030B2F44455A0909193A9FB1B7F441285F38A67F8506F5E212668F
F435412E6D4E7293B9AF8D66BF6DA67285C29CE561373FFA66D06E9C46FA5F24
B076A60DD6F365E8A409D82967A48507C49D2A572DEA8CE413B15973B753858E
C6E018DC402C0F5A95973D1FEE4857D6DECFF5AEDCD46FF84F3C5238A6CC0BE0
4FB563750245E20320270133C6B8E840145D344DB11348FC84249D77FDD557AE
2B78484F24970A67F37A374B0993AC3BCCB840F66FDB2DDD223779B1E64B03F0
DFCDC27D4DEC34A87A25FBC92DBA7F37EA9D6DAAEACE72D47D75003BFD62C9C1
2518FAD2C49204BAF11200737D41A2462FF847B76AB8F86E6B1325A2EC69C379
2B08478EB4C7620BC601262A711742C32F800D82B83DACC78A0FAFBE0D5883F2
EB0A24DC953E18E8C835FDD00E72930F1AA7AB3EDBACE354AF6C72C0B100BF7B
F21AB5F585FAC00BB53DC040B82633D626A6917F2D0A518545034562267D1912
D719BBDCA9FD280D47041780696A5FFCEB43B2D869E5DC54B318CFD583EE45B6
350716E528D61D7937837DF8762CBE48E16B7A0DE1285A3C8DA84EBB1555F393
57856A38BCB61B03E6DE12DDB77BEC61055208F3E7B93067625337FDEE1CBEF2
1549E3D8B242EDF64725BB0E552813EFEC1B8F700313913507B30195F8097624
3A3C56541A1752995BD899D9C44C9E97545146FC1E655D810C587853B9F7A174
3BF148923F356644D35CCA7E1C20AB41697FCFB8DDF59E2A6972D24F9BDDD79C
91CD8FB5E52B587CFFA23D9D2F841E0E4539F6CB3AE0D5556C7DBB6D889048E1
49FE49C6EE0412F2F92A2346803D3A8A5788FC480EB4128D58D73942A546A71C
68505EFDE61EDBEA0E3592665354FCB5A6C2DA0EB18ECEDE8A65B2D1FFEA6748
DF7BFAECFA06FAC264656D37EC5D15F1882DD6E7545D9E535AAC540765A49739
0CA42E455074678DFDBED7C4AFEC35EDF5E991D6715CD464F965262E26837D11
B23F17863C68E8F5C3B4E206B5F04E906BC8DA2777C6C9B77DEA370AA83E7BA9
1ED0BF76E4426FD55EEB04A0DB023A8D5F5149C7A0AD3537B683B16FCEAFC884
4437F3286F616E5D31B4F143251DA877A9BCFA4D7E89E2EE15CEEEC213D70D9C
1B413CAF15F56FF5DD3AD6FC3414BF08C22F8EABE887398449C39D495555BECA
544046EC388E9B1941D253229AB243470B8D0D0B17B80FD62FBB69BCCAAEEE6F
3474A97042C30E7D89A26F6957D245B96A0F7F8AF38F9ED97C64626C373C0CD0
943892D0FE7A2A3460A2D11CF1DCA70741139BB419DB47E76E874994C204F426
76B9A9BF08DDC6975295B58A30174857E84958669B78C923F2B0C18A87E97408
467D4BEFF17EA0FF6E7996794836C60EE0AEEFE4AF9405202DAA60E20B2B7E87
F4E5DBD00A4913204E6203B8537DA4F0ADC036A86869055EA7ECFC1F92E66D2E
F4295A004921807BE8D27A51C52741BF812CC854A3CA5AF7C209F2F719CA0DA7
E1502889F2374BC0340506DF0B71412B038E4B52BEFEA352319FC8BCD41124C0
0307FDA827DEDA7BB548579CF5C161761119FEEE92547E05FB70571B4A023488
EBFB3C67AF740BF503CFFA6807DE59DE0CAF5E08D20B9E54881F851FA0C7FAA5
1E187A0889F6D3579940CF20D8EF22BCE00F9646E8E084B7C2541CA531CC2F90
BD18E610D11D7249B6A57E5193FCAA9977CBD28CF540110DDE341166B29E6A50
A58284618EFBF80260B26523FCF7833CA93A9D89B629E8274D21FB952CA758AE
9B072BC7F4365E5C8DE8E1129E1F9062F899271ADF372476B82F89990CFFFF26
EC79A0313AC45993B862CCC78593458D3251ACCC0EA72250DAC811ACE2F8AD46
12B885F22EF115C0FBB3E78341F20C2C087D93E4DED77828A62E33867519226E
DC08865836B98C22DB0AEF0A2595900014F56102EAD3ACB7D7E268138905DB1B
A78529396DD97DC36AD0B2AD0048CC9F9743F0C1CEAB31DC28F04308AB95CC33
40C7BC99DCF4DBAF631CB2767650A542484E96A3790109C486623A1CAA385CE2
527BE26A9B4629C589901E24F4E04D94C12789312EB84AEDDB1172C1B53BE427
BDF9D42B3C6E079FBEE6D642BD50AA2DD4C5852DD0F4655001B2C54A27B4F8DA
CF8A13C8A46D6DB0494D0D9C25D094A5578987BDAC98DA30AD2F5DE5B80580C8
2716D326A5765A0A11117DF6244CE4295A041A019DB20905E27D47F0DD74A06E
56690218DF447776D4601A48F34F449454286807E672735634BF95F29663AC2F
91C06491EFA4A116CD5314FE24E515FC80AB9A2868A0A57D85AE23407B7C9F47
E99811EDFAA0BB5ED772B88F5CCD73F70E47664DBA7EE3D4D7E228CED75D1778
92E98984A8CD3EBB575B774DF18DC508EE910A9010C431E2D5BD264D918746D9
8E2A4E35BB99A55F33643A68755A7C08F3776B20C5063F1185F84CC1391A302F
DCF0CD703578DDAC5F405F629D1EE1E0C010E625BB6C70C0B8B64F82AF7EF41C
93F70B5565FA3E801436FB5D9070702A47B44E6C297833E63D5C4645B19519BB
E72B241E3183528DF5405BD8B617DB77175F3C7A62B7D26E60E0162384112B1B
37D7E4B2EE116849C6245D91C72212AFDC081C7632579339272CBE768332794A
94CADDE6404213C6A94A7AC464687C4E2489B72EABE3303CAE63B1FF1D9287BC
5B59BA9EC748B16D0FD8BDADDD4A39F037A3A54A0E7BD5B1AB2314410CF6A61F
DBF7E3F474A3EB63BC8420F537CD1601871DF7295F2907EE28609D2779828971
02D2865B910D12DEA36667228019EA82B9EFFD35F1B01BDD39F7187679405B6F
33D9E1FBAB0B73BADFFD25D850722CF6C100E79C911E6A1227CB2BF44CB5360B
DEED9CB06B5AE7D86843AFA7D83B4F89F24E742ABE05386D05E5D1BDFA989699
1B9D58E642CA53F668188AFA33CA3291C9CFBD716B2401614188ADF777870760
EC1E647A1BDC887B4F06533444339D67ABFEAD4DBC1F8478082081A5C39D2192
8DA8F0D710EFF7228FB28F17E9272E891A5BABCB5D2441ED9F742AC352EA5C33
DA1C3486BAA417DEDF15B622592B5C40CB4E75D8F06ECD802AB49D2A086AF989
71581D7FBFE395ADC954936DFA1A1721CBCFF6E5833B55E36D0BE570765113A4
226A9186FDA8396B9207EF7850988A3A96DD1F9476DD32C7C8D80A077A857695
207594157E319F201B3935C68FC557406DC0E94D73E324BD022165179F1000A0
E37897813ABEF019F699B29ACC7C3B27BCDD9A2A4F2CB04C74B2961D97A17011
CA559FA4F4556CB83D200EE21A0E7C7EA17EAFCA05F17A9A92A09928C5FF77B5
5444FF52C83D2A6A1A90FFFD24360BA0FC93815CB4580CA637AA381453249B23
CBC689F4AE6A775A675F80ACE49A306CDAD972101182099F4EFC36195748DC01
BA0731DBBAE797A3258B22FE64732C28D576445C5771F65470300F8C6737601F
9E9F68AAE1940543C5144CD6A49333AEE7B897F107662E238DC03E98D9FE97E5
B779E70484CE49A300DCAF4A97D806AAFB90441976CA94F846D342CDB4DF615E
2CD4FFFD4DC45C2CB139A62DEE5471621E91D72A3DD78F8C5C97D5B1A0270E1E
6BDC680A315C373C02990CF649A28E1F2C1E7B254C888083D2FB8346AB9C30F9
2138B5DF114D5DC70F3CD9D15F9DD4E64651DC9DA320F7E38E2859F77074C5FC
C9F6E8AA362BBC02E2DC418D27CCE73329F774EF842F9F6CBE05FEED28D61D79
37837DF83DB0E7E514A012E7E3C8B81F0C630DA0181F9725C44520A61846A906
00CF21FF058354D1C77574B08C5E2EB9605A7F67C3AE2DDED0E34ED553D3E7A8
7BB0D0E004FC3414502FD81E519C314EE056F853184C82BA0FC48D70723C14E8
C618EFC04D3B8AB4AB1DEDE1D0203A9C1DC54E92471CC183245F1B733C1773B5
31996DBE8DE0C937748827FFB9864404A723CAB996A48E9279771C154A23F785
96A8CBA0AB445B040F6BF271B4EBF74E4EEB0A57D7442A14239250698823CDC7
F9505D6A30C786A3318AE3DE7E6BDDA0F5D121FC987469E3640A6FB13BF52C54
89AF08365A1307A6D16A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4ADBD0F3C645F1DF7055DC28C1B3D94AD7621C7DE55DC38
5B2EABF7768090FDF7617699DE6CA9A8557DFC573A203E4C8FC790D933E2773A
EAEF57C22D912C86CB6CD5BBDF84D236FD0B0E5186F6949AF0A7D30E9F9FE438
356399B49BEEE8FA92FA6A07625BA11F8147B49DD7F33D5B4AB70E7066DE7A30
7BF33C3021A3C3D207F5AE931B828DFD8D71077571051F78E2F19FC9A2805325
F9315BEFD663C5F21C125165A6507983B4F3E713B1FD61BE07C5DCCE8CDBE1C6
E174AD0D12926D48FA52C23CCF67CA8BF1B1274494E363BF0890FF5C1FB42070
C60DF4B6A87B879E66D5E87D245B9BCB88933B6E739524DA99E494D9E1FE8EB7
03797B611CDDF0720D8AD16CFE8FC26805B455408F5A6FBAEB64C95D242C373D
12E65C73C398D19ECE87B3B3A3E3EF296D4905B255A51A32D475A12CFD537EBC
5118CD82413D837E09E4E9513326F34D1792C17E259DA17DC79899EB338C037E
D722504F0ADD190335B8794C3100FD08A3A0E9BFCDFCD66025CFCA26CA6070F3
F138947E9552402C372136CEB7BE8A5C27AE952F4946D01DD1D65C1D50D03710
90691FBE1D0A38FAEF19EEBACE5CC1F4363981BEB79B110B7480396A95AE75FC
21FBF80A9B051A938C19FCE06A92C2410EEC91481431DFCE80045CD073A8F0C3
51EFC433256002D2028492F3978EFB0530AAAF99A449E85A7F0AD638861633EB
4534A06D07B90AF608FE6B1358FDAF4056ADDF370F3C60678E741C85026C53E9
C2300CD61A81954576B522FB442A4806BD491A18FC70CAF6FFBEB70AE878B9FF
36AE86FDB44E9C724CE688CC8C9B7E56A46B87152C61E3E0084B6F5919598FBD
C52F4A2DA682DDFDD93588E13B19B08630E5B4945F61D09DCBD7E32C0027AEE9
CDD8F6C7C11A67ABEBED27BAC915531365E910E600652D4501E140EF3ED7A1B9
C2E885C88F882E29F4C4CF1B466FD2FC56FCDBA67796E5922EA398BA501DEB8E
DAFA3F8FB9BC10D0639D7710C64BA3EB80C1911014F052CFD0BF5B51960BE192
4AAF769087074C1478D75C27FEAE58EED42D6AD80F5A89D260CF53FB5ED388D1
CEC8B522256D5B8BA798306DFE612047BEFF50CBFB93E26427FC677F67F7EC0E
80F6D3E4EA5563D046BD8990230C0603ECD147E6C60C6E787C9EE67B7425DA83
E738D0309BE8BB4EE3D617A1F01B379B076479A6C77811DCB812BF8718732695
3D036177D2F0B00D9ECC34309F6FED95A7D71E18CB3B9635AD1C9F21D8B349AB
3327E170C392543686BD28876BFD347992BA956EB6F385D20930ECE15D46B693
4AF292244B192D1C5EA3E5938392744935809DB10D6951FA1E96D0AA36E80E05
4038B9C7728EE212DFF2F1E5F00D6CFB8189E3845E30CD6C404A02853B6B48CF
6B7A64057EAF46183513A1C50203A63180924839EE5C43799124B2BD98A7715B
8F40FFCC2D4740FFAC1019EEBEF540DBF0991EB689854F049583E57729B0903D
7E8BDE5E7C3CC8EC85F6E1F2493589C8074ABB3041634AF61883B80A9FA23D88
FEC535172585640195A8D8CD8C9466233CC8D10C607D615B7296D66C299A43E1
B01AFF30F41517EFC1F52FDE6D30A1C97C2979E88609E6355AB03001242BE5B7
0C82005880DBF21E1FEE5FD8C7D8838637B263B4BB7857DBE552A0B1FAFCB134
DF9F2775CC988E204DA5B7A0EF4ADBB6334233C58E0EDA747326067B6D21727A
6ADF68B8532FD2107FBD3E671483DD40A979A9396B4FB0B604958DFA1A78758C
63657C6DC4B0AA0A1B4DA8ED444D452AD47CB8847DF95DF9AB87BEDB036F7A4B
314D34D654CCED140BE689EA4E766AD3AB2CDAAA6FD10816832AE10E8E5063AC
DC1CE4A52004EA35522B5B9E63E4279039E2EB5B2A76BF0339C8E418A51FC16E
6CF809B6250F521091B414CB4EAF55FEC570A0C718ECBD9BF3FACC273774FEDE
CD93CBFFBC1CF39F6DCF1445798F601CC748943DBF38F0914D38059DD34FD728
80716E925D1EBE0567E55BD74C5CFB73070451816C8A3C09663628418034087C
4956D773DCBE4EDBAA78FD6FAEEB459B2803FA6ABA921C68FB998478B46CA715
6F6A9D051A9D830ACD65744C62B48467E062880818A38841C83D43ABF98F371E
2A1EE3FE86942CCF512D43A0818A61BFD38C35137901D41E5327537AD4839DF5
2667C747BAFD5934D9E7B72EA58AF27642115B6AB7993460ED3D5CC11BA872CB
DE3F82A5DCB7FA79BE2FBC4E72FBF079A84666521E3C862C267CD6588C3B6F23
DDCCDB02EA91AE08DB1E74C03786CCFBCB7546A5A7981FDF4A9B0F7CF4F2C65B
B22A2EA4A4892992CCA2919D1AF60386478ACB299D90D1F42ED61A24AB8FC1BF
1A7BBB2633417E0F064C4882ED8255776FAE78B583B56DD4C96C5E9375BE479E
A3A74A2E1A7282E6F4D36D362634903BA7EEA202AAEEB270DBA3A299F14FA4E2
C5BD0828A865BCE7D65EC5779B08EA9204C3DFB9A0AB29639D633EDDC0E420FA
41A4DC1F5451E906E35508CC422647D4051A5DB4A75F7348FD5C7825A2420538
0AA3408BB8831A1BE19C644C00A2E784019CA93C9B8C01EDEEE38B083DF4EE76
A89244EDE2C47F0215A06AA28D025AC334E77CFAE367CDACEA3F5729D61E214D
4DC6E35631E53AF3C3B0E490A9202B46570C0565DC26CBDD537A407F400023C1
454B077FE8CCCA646242D6B8C4BC1488297D9FEDE994C34689F3046F047A6CFE
8B0DAC8BF9B4624DAEEA5D9218A6B0B12DFFBADD793A811D09F506C40A2BCA20
D7F4B773C4BC79A7F7A7F677AE819378948BA5432A49686301BFBCC5A73061F3
21A06C94002259B2148B0300B732D19B04C78953F995CE32E11955F5FE1E1ADE
B72B28744FF8F1915261F903336AA3A84DD8126D5798AA17F1713520BF87C103
341F1EF528D1D26090BE3FBD880D104C0986D2781F328932344F5AA35E05D1F6
5C1DD9656F3B3327BC8DE5AC2E4B11D22D404B2BBC9486F88493051012A93E52
8DCF46510A1B3AC88E0A382A5AFAF5D0D529EC5E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD39C
FCD0E8A6224BFA03E8C6D73F4B8F480327701262285C527828E5E203F328AD95
5AB433987B229534C53061C3350047FB20E3887F514B5897FDF225685D18D679
9DC141B7F6830D6771F1A3CAE655CA173FA57D400530CA6FABDCCB4325478D0C
93AC7EAA9DF7605213DEAF94C7281D9AC68D884E15ACA3BA68034F897A2FFC1E
F76FA2A69CEE7F1E9543904F1773969F65553C3469FD85B2F2F89F0E547BFBFD
F62A3E47DAA4EAD6D47F0305CCDB297C320A48A3655FAFC810CEC6F6D68ADA4F
AB5DD7F61DB94072B0AB8F1ABF62A78E43E1578DEBD2D05109DEBBCEC64AC700
4C28C4F0A5E3A003423B9958C73D306B2B4A7C67A95F8B4E737992642BD3701D
39FFAD94524A7752560FE97B8E99A12AFCCC5044D989BCAEC863BD15CAB7CE63
0194962E4183C3838D9401260A743447DF953444B29D7CB004560D0685F73E87
72FDDAB87125F419F90D165EF1C2A06A9B7500C6AD185B4115777C6BF9C24D88
653589B431FB84E4DDB650C2F783594DE6123D3142FC5C99973AF211F2A2A05F
5A756073B85FEADA4823BC1467EF2FC0E98A2BB28E5933E2F6E50D3580C547C2
54FBBBDC95998DEF2EA825E3BB2AEEACC0F30841835121B7A7D7A973F2EF67F2
795E6DD8CF55B9823AB2B15ADC328CC3AC493DE8C2F022EBFA14A2976D8E3559
B5FEDADF4E23A07F6C0E1387DD54F5C8BD071C4E9A716737B6BA413F846A887B
D1B3B89EEF73565F3D0D2D1E40E4C2811D37C9029692DF8E94F6FE39474EE13A
EEE65EC0E77188C18435A2E7FFBA595F0C054E96CC44F56301F6CFD2A7A42C7C
33C1362D901AC2B0FB255262754024729BBB2824C33C2FB07B4AB0E5BC4EF204
E240345C69F37D577CA917AA50C3BC9004C8FC0A5A8E517D39211861EFE9920B
3939DD770974B1929E48E48EB82274BCFE2E9D5D484DC7068B77CD864557E702
E4EB0C301062DB793BF0C98D7468E7D2C9EC10C2B121966B68222EB067A7E3C6
F0549768364D1935345EF4D1D5F8C6AE3C09162E8A4FC6CD4741B38836CB599D
F98A2468DFC2198D16044BBA796678C9ED23D6194A5CE79410133D40E5604C95
80910F6742AC40A7CB3E08E73FA1E15DD6E1179C390BC240DA061C9D539B20F4
FCFB72DD0EF634FB4137D55F76088819802AC0ECDE469085BCC3A24122DFFA52
6840EF5367946F3DF67C10B47377A99EB96C13C332632CDCC750FE6081ABD0F6
4DC19BE13680CC29CF0EF52F885E21F4CDF14F8A5BE651118D4F2436599ACD41
A728EBA6AA858A62BA34015E2E2F851AF557C8CF9586F5A809952F25B26C6557
DD62C2B52388A1B7B84A5BDD57BA0C39ED94DCCA571CD82C6E0BBE3DE5134649
8CD7D6DAC8936854A0E9B5873E0C43A98002905B196F919D54550933FC4B7290
C8C71C097F48AB5C03B5D053459D7E0ED44D117E1C942F56B51E615267D9FFC1
91A694BEB12CBF4EB3DFDA6A81788A92B5AE75375C8E3BABA0D234C04500AA3E
2F28C4863E4C426DE4581143A54D0EAF501057E3A9FF7B3D1A0671ADF319AA50
F054379798BC3C38137A81D75D5BE7E359EA0012AA5588403126BDDF5FC2AF9A
36305E36C2A2DDC690256D2085B1D4CB4BB93B1E736992E995B8A4F38FF8E7B6
0DC1EC1B6C746B6AEEC9D5B0D1C9641E59CE041594E0396A0BE7DFE162363F66
C0DDD904FAF6AB01A82A5E230905B36A862A8E30DE59B50522C8AEFA5451F931
870F2A99727DEA6C228DEDA6C25A88C4897BB9BFCE16CDE9E5F075FE4516E1E9
02D53E24B71DD4F1CC13482C48FD1456BB3B6710C69F0ABD2C8E0CD7C3900863
69D35D3E5A083C3E86374A2EA8847CEAAD3690C5D7BF9EC7DEE3705643B5F064
C6A8ED4630A58A2C74FF212B0A35CAD73632F8EE978BC33C8CB05AC2BCFE82D3
29D3A95F82D98F5E335A3E0F3980CEA094E6903FF9BB24FF67FD9F8598AD4F75
1527050258CB8B3F35F8ECC07BBB7E68F4BCB0B429D4AA25A2EE0287CC9B31D5
DDCA74AEC3B0951BD68B348D9C3656853E002ABC509706C00E045DC552B2E5EA
058D326D17411EDED514F2420EB640B4AF9CB0844D53C5BF81667E78A1837931
98838A2416018B583A55803F83CDACC6647227DB9302337CD98D1FA385DA5005
A64EA3E34E0AE3F5B34DAE23DC67DFE7BFDA027A952ED903E7B54769B3C48544
FAE2FEE14143654B5371B4E2EBF9784F8835D49F4E72B78BB5DFEDDF9BA465BD
FA74F2FF3B6E50CEAD45ED2C0C24E1B13B03CBA0C37EC251BD452805722C04F1
9A3B3C950F5252385EA3E898611BA9C4C8A5E0A6AD4E40D06FDCD6EC46527591
BFB94442A0146D8F93A35D8AA216357D0F96B8C07983FFA8FEC41B589A018331
D25E5B0F594F5C418739003766FB193DD7B97DF0F9A11121F9383E9A4D7A4220
2DCE9AB3649C01936660D3CB62D4FB6261D9D30EB70B6B0E91590635EADD02BC
13F010CFFDA00810855BC4D8EFF39ABAA0D3138F5E51E6484AF6EECE850DFFC5
2F6B458208BEFDD79BD8C4C6E6394AE72B8A73A9D1D8F443AAE0A3F0C050249A
333A1F83E14DFB045589F3D6D1DEF71CD3173441F1C3E12B9F46F91C415D6C8D
7FD5678AE5C1B8ACC9DC66783428D06E458F96BD48CCF7CFA30A7E12255939EA
6CF81055E5330CC27A4CF7A4C462D94D7EE9B48626D5D425D400528D5160C7E9
F656D93EB214E1FA04F01B61B295058E0FB0EB3C625259C36BF9AD2EFB5C64A4
540E4207BFCEA039DFB0F7E2C38F138EE0922FBDD3D7BC6FE12F0550746CA3B2
1B026E261F8D920C2BA8F9DFCCB31B1A824175717E5AD6E1C381A4C882B3C87B
0D1E0807EC239961D451D10743B0521AE48DC71EF5FF7BC09FC5E091BED2FF36
1ECADB0F68B3324E63C2C65B6338056AC11ACDDB5CD7B1CBFAF76EE833E519C3
715CFF2AC385F9BEDDD9296863F46279D85E4AE2BFD687F8117DA1A2235FC498
CC9E2C9F57EF881D478600C807DDC7F0A468EB61D185E06F8741AE6FBB6DDA9C
8EBDE42F5C0EB3D3524DA157F0B3F4ADE8D0DC6B9E205C7C32C27241713021B7
91DB1A56767B0A22F335A7A5AD395D681A059A12585DB05D6BC44417E8CB8E24
72EF2624C23DF65B82AEA0A95347F2DB16D3390FBDEFE059EC4B154FAC3E5668
263E11D3AAE27591284292FB1BF22EA7654C2797659120CEF28087F4E387C70D
495388068F4741728D4C96EFB433E255DAD15F08252EDF5979C14C46A1ACCBBC
666E9BAAB3B2C8FDB9A87D88D52B68DA57097C8EDD95A5F29B98068F254ED1A9
1F7031FA0B828C89F0402B564A9D9409103DE0E095F7129DC64B4012AC9CE863
CE8B7119AED87F3FCEBF2730D812FDDDD016B803C38B89238227FDD612653E3C
E63C5F1C17D7739FEE56260D0D7AC77995554693CD027EB52EA2DC82F92564B8
09A3F2D592898ECB9B4E44FEFEEDCE7B6160978ED7FF4A5199B53C97023C9329
B221ACB437B465EB4CFC51C2F6AF138BFECFB31E0322545CFE3285AFEDD87CF4
6710EA0724F6555891218D3B32A636FB671E4EDD08ACB06E6C5B432D12D54368
14AB3ED796B8189A3F739C72975C388195E802ACDE6BDDDEE4231FA5F99FD382
E78F26D35C407837CC1CEE9FA13A8BE69643BB244C9BB935BC5E655B8B3F2C6F
88B1A5F5559692B7327B67D3691BEFD6FB43CD0C44EBE127FED3E0DAD612EBA1
FE7F38132B7E187B4F875CDC2D0810206BBE5A325FD8FB253E24FF4AA72AD911
7A726322FD0A2F50DA64EF2BAC19C9A5E1CDCD8281564806615E4AAB5EDB62C2
F49106B027A1E5D547A55BE0E8FD19AA6BD9207104404D9D85C6751EB1F9F31B
DD08499CEE7A9B2A3369417B580A83C684F7A17F8ED87A4177E1103949CD1271
5E4C12A4DEBE298B7883E0DA25554FC82FE4E94B900DFAB447F083422F93DB1A
210C6917BB6A04E89C45507BE1B5B82BBC1E2071131FFF47E4533DA66CD99164
0317676F0EDFE1E7BA8E5424C8D0A899F621CB490A6823BF8235C4F5CA76EA74
AD464CD041B7CBB8892F2DBA833118BB45B377CA6B15C104868DB82A285837E6
2986F81259FB7E37A3AE935126E72E876B043B371F75F8E4BC40BA7CF7014A07
3BD9C333C710AAABDD27CD9B2644983B1A5F84F17CA924ED3AD4456E3A67BFDB
4D9096EAB6583EAE32168C76CBC040E6B64CF1B5D624465CA3E544394563D24D
8CF309A212C5233C2A0B17A9F410CD7D061233667B370C93FDAFC11510B4437C
6332293F726D6090B596C9CCDDD789D38C97A0BD58FA59AEE4B633747BD17756
5DB8149016E6CDC41893478EEDACD50FA61FD2BB18812A646476EB57C65182B9
61927DE098C08A66D1E33FF54A29BD63FD92A8962DCCDBA5432CFA52050EF03C
0F93AFF4095F9A6BFAE54A5D3FD3AB69E247AC2F1758689851A9537DFBD4BB79
9E573A54E8C194DB4365A224C9813C036CED2450951FA9C6175486F899AB7865
91690FFEB4B0BE0C5817E8DC0876544B886DE6851A9084E4B8F79E73AB556344
DEE23CD2ECF4E48D9C7B6CC669411D14C90EB2DF3B03529C635EF4F0F627F510
F88B13609014E6BC5060AEB964443EB7D0F6C3883D195661CA3A1BBAEA7BCB4A
04EFF9EEC52118FECA4C326D9D8B30A01DDE65747AF9A60BCF712C0C0CBCCB4E
89492ADA71B9168C6AA9E4248327D48861BDF65F2F5EE2960A41D94C3C235735
1318A6EEA62C6EFB3A650362A7A748A63C6E807E2AE4B46F8EB3B207344F9CA5
2989AD8A876F13387B7CA053A38BDD33CB568EC4546F864B98B8FB2B09B7F5A6
B4E3D61836E7D79DE62BCBF08F883DC5E7C0AE5E2557DFFE8BC6D819708103BB
963F6F0BDA611B948CBEC8CE75848FC0CBAA6606E892B2E41A173AA590B6C92E
23EA935D0A9226ABDCDA689F202F60831F7B4783DBA1C7639DFAA4A7C55BA8AE
A0523C6D6733A719062A770E224D50A4FC0B6CB64557C4E1D8CAE8DF942AB2D6
8B5B75961FDDA498D72C45D8B8EABAA30CEDB329CA121109013769EC79E2F70C
1D13F66105F277E5B6745FF4A5CB0EE90FA42E1529460722D841F078106D54A3
3F97FFD30E36E69B3F43335236BE3F3C8B5968E5E82DE931CA6238DF599991D0
7DCF2F24B073004DC08552B28BB3769FC5A368C75E39517B266D624F6F7CAD42
42AE6C63D047AAC8EF82134EC41E817E49FA6204D5078361834AC6C0217AC498
87C1D629A285290893C0B359EA0DFDAF09E423761E70ACF40ABB2DFDC6D11276
2B8527CBE3381953B0908617A28D2D6DFEA958596D1ED1E381872EFDDF551E2B
35040B728225239C16169714AEA697245BC6BE6C302F0411B5ABF76573579455
69610079DF9E96CDE8D005FC25E59B029C016D4C1C365040B9654679EE7EBCAA
F81EF4540E579EAD11FC6108525A437F4391E79987A4CCDAD31438FDA626C251
ECF6832A4659B60CE2F2BDA759AEBB19B020FF7847EAAAD917FA419662D95A57
9ABE56667A9B1875C81B24313E2FA52F65CB925BDA5C98E98C7BA5E25EE152FE
77C81B3B924460D9FB6C2AC28C5BE853ABEF6FD03DEE66690DF3FC71E71DDFD7
EB126901EF35FB6F71300BBACD762C6BB5DBF0D3698FB728652F3A6571CEFAAA
7EE59DF8FB821CEDEFB4941ACB6488C1A608FA21A2EDC0D3DDAC6D550B6CE019
0281BA4CEBF16ACFA4FD94730CDA24A3CEAB6B77A4F4A47CB6269D49966E24FE
51C7D9588A368F2C21B7CBDECEDA8B484FD4DA121C010A40A2D5B66B04B0285C
7AC913CEC83CF9F300831FD25A9A7CC8B9BCA4D76D2BE36A796C72F84C716C2B
263C3C9F1B5086D11C140E76FBCC6C6AD664E159FE319894B6CBB34434A084E4
FBE6EDDFA3B58A343725C742A8ADB8E2490AC75CEB919C11032728BF872D2B0E
155A92A4F88A8132163D67DDA456E1B85458CBF0DDB3DA821FD33EE749DAFAFA
346EE621E1375BD57EEDA0239884B2F48FD7E2FD16C8272CA2C2EB39D37D7481
2CCC7C746B13C31ABE7A39F3D5D298539F5FF372801684D2C33542156E1B03FC
3F773B665ADFF013A97583D680123FC3A67A517E7F4D92C7AB7C81AA04600F1D
E13371A453BD5E03E0053CD116A828ABDDDFB3667D7887C9BDB503D538F6666A
3ED9C1AECFBC3AD200383477D05545B04A55AC284A49E4A05E2A67BC0B4901E9
BCFB5BDCE3DFEC196E304C6DA654AA4124D577D774A217D4897A2610171727BE
61F886966601C53826AE17074880519DE36B7F9E56B95F59DBDB9785489E1FA9
D96C57DC4B7603038D6D6333A798B6E803A0A99CABA87DA35B532BCA16C510BF
BBFB37CE6941F05ABB349E75AAE8B306CEE64EC490589B682C529DA22A5A9F0A
F66B44344F1DF681219626C8F3AAC1CB25B5CE6CF8F99399960F1808B44418CB
EF1B314FD668F20AC79B6145C924520DC0BDE78AFE39B3C877425EC39AD71A9D
E6DFCA062CCDA135B14F4F03D05C46C8D3DD9EB64CA74A51274134606E73A0D0
A9ADE7860C401C62DB2DDD223779B1E6F7503E0C8A30AA00FC9FC6B9EB9ECEA7
123064ADA03DB2711DB0E843C914E2572B506E890DBB1BD9B8AE10E2D6143D56
3819EB1ADD2251099DA18BA2EAB53160E97AA6FCB3528C974B2109A1815E69ED
C02C1CB17CAF8D1ECCAFDF62AC15B5B4B0C5D6D1D0BDBC1A0A79148DC112BAB4
C34E8AE8162B8FB4D09237C2396A5A7BD8631FB75ED5D7729DBEC548D2C42A9F
225184AAD4E80B65440B36CFA372F46BDF132EFF5804B010173C6EAF9705DB9D
0980BD338B7A205499F8A49EE079048596734F0904DF5280531C93F0F9BDFE65
CD47B50A9B5A647481D38402075B63859D2724FF4E21CFDB94D3869EDD3934C3
38E53FA772562F0C9B1B0E0E0C9F50780932C8A88AB1CAC0C3F2BF7937F8E559
6DD159D558B69CDF906BF67DFAF2B0FBAE9B954327317EC6124527ADA78E407D
0E670E2F2454556BF3881045717A0F98C241E6295881A5A2660D5D253DF6AA99
8ED755447C426CA5597BEAFE42535A8C88F9F1937BFB87FC8AF4E39FF00D0CA4
B0D9C960AB1EF0B82A4941404FB4F2450F881884C223247C65FA99AC139A69AC
DE989B3FD5A2D5CC13AF4DF00F86FCCA06B7DE925085317CCF8666F0742F48C1
0B221A923B06DEF64188BF962845DFF2C1C6C813AFEC6810EB222118B1E2ABED
9BB47F7475D676AE0B5930B447F5378B37F05D535E6759C193D44CE02071FCA0
117747BF9CCB78F9F8A3F5D44459BF81997F9E7A3C710A2B0B8180E5389A54B8
5BC69FF37B8CE078CBF4BD4EC7BDDCF92439A3AEFCF1D503F67E5C1F345C050F
2161C3528793C574A33D7CCDB6F875BBA9E474804EB20DAFA0B54708441DE5A1
A15C14A676EF40F0B1FD936AB37AF2C8D15D47E5854CAB09AA63DB233A29CEF4
525CC0EE3F158978ABC35805453F84CC5EEC991A5CDC8C322B7F73EFB24394FA
5C76CC0DC9DB83B6F549C06ADBF019994FB7B037709082441C1FA1051FD25853
5F8DF45FA4FB81DBE43CD8F459770323F9A29B49C2FF1894F73759B68CA8085F
829B9F9E0B4E360140E2EF8AE58083EA859AE2FB17A3F10D2A23E38AF27353D2
850F28C2C134D00658A9BA49B6BBEB3D840D306FB8997B2A362028333CF62E88
1F5CBA918F299A849F5ED006AA52A23114FD60F4AEAFC0B15FEA65ADA0703D3F
8956FDC4CE39D271113BE2976CA3496814414270F4A67574C6667EB5AE7FD916
F7288C9ED1C9D6B0EA1CC70460A406C10DEEF837590EAE23F42736A00B539A1B
3D810EBDDDDED6C81C8DC7F61BCA667137A76761CBA2FBFFCEAFE3E98D5590DB
37F745B93F5A05EA389DAA2721AC6E6BFF0015EA347F3D692F3DA3BE87F87ACE
26A40B708D9F5F4CBD9F351E2021ACEBB94FF5664A8B29A07AF0C8BA954FF5FA
D57D345659FC3D6D52D2220BE7CFA351EA5D5B43FD74F3CCF72EAF1E82280926
09828A232A2187CA1F9C67869C3ADF02F2C0591B4C878DDA7F1FF47355D41FC4
B41FA9CD1FBD20A5DA403E3B41787E1449AB50AB5FECB1804E3A4948F92E77FE
67DB74F9F802B57CA641FF604401CF5235CF67B5DBFD92F99E847FA7B0D89CDB
8EB4D77A442524FD095BCE883ED6BD93464B2B029C7F649FFBA7CE880FD80F40
C3AC18AFF7308E78F05DBA3BF968DDA3BA4388A938211DE2D15D82E557B5534C
3EA7ECE8B725ECC6514500A943D03D2CF5D7821941B189845E416EFD2327DD04
06D7E014791771EE369B64E66B6892D4DEE182CAABFBECC9B908CC9442636D32
5E79F7BB57ED4B3C59B2A879FE85E298C8D2785749531EAD89CB0D53445D7F23
FA6CC431D0EF8DA2C258BB069706DD0C22628AA5581957F2D88406940F199116
B6FFB4B9505BFE060DD19EF66DA5E780DCCA30F180F8DFB0CEC461D3E8EDC955
695970C7A1BAF6614606243C6256300F77656D6F1D13F8419547DF2F02374450
EE7E26F463FD6413071333ADCE3E7B71D76A21D2795DF38545036C32DE553AFF
05318CC3F90635CEE5E03D4910567FB7EF2CE1E91CBF10B71D8253E6F8FA7AC8
DD1F4DA7BB92EE841EA0BDA3F13B59EEB1F57DFD4ABFD20D4BC6325B8C959977
EADE90B816AC700557576242C3771C9529F24EB9BD65435DEBCF72D18F5BF366
FF93135B6C6C1D10C8EE6FF0029A7596B1FD93AAF111F2F744C434C7EF5B7A72
311053449A46CC5716E1BDA9EE77AD3E44DB02447082F8D49627634E06E3C459
6AE9DB308E70E59DE86300C952DA92865704B3CC39DA6270DFACA8C3611EDBB6
DA767ECE13625CE37D8AC7115190CB24C6C0D49BA6630E74863127CC7533EFB8
92191B63BB1087A81F73D0BE06E4C544918D8BF548D0B7DECC04E1E7C16CADF9
53706FC72651A851695D849A34A76E3E3EBB629C16842398C0FE625A8250CE9E
6CCDD4233EC7D5B8DFADB5303CD0D839FE2F15C33F871D66D40597E4F20CAD0C
C21D2C3A118208CF0593D387BA2AA00E3247B07CD9148FACA61B7267B9FB1311
44E5302C584C766900ACEEA1303B6B728350843C1E6AA5E7CF174EB3D7486069
7B255C72846F1570C10C786B54D8D996A9C156F99318004EC02D5CD155CA571F
16FC73173819BABE5F350C8F07C35FC6931CB2408498BD8711E6E10EB8C1FA2B
DF08C42D510A67435DB54B76801C3AC2B15DB2DC33012FCDDFC8ACF206EF6A61
60BB574A7752560FE97B8E99A12AFCCC5044D989BCAECAD82ED12658B7FF166C
507B49AAF6FA4A71C74683F2BAB17509817055B8EB3707429558C69FA1F3B656
410AF707C329C31F9E8C66735C59EA38E3BCACCC6F85A6E455F6D1BB7BD6FF34
99F108BA1894F24E9568F4F1D5E43BF93DB520EA9464C8203C7331FB8C8BDCC3
564A45CCC51B6128357EDBB00B60E26CAD17086C48CEA3FF695D58D976809AF6
881F745EC71298D454AD31AB998F5821BD18D378A77B3B6BA95434EFA3EE1B88
A190668ED326BC779FC241E6295881A5A2660D5D253DF6AA998ED755447437BA
D83120E618BBA0C7F201C3E6822BF981212D16D54D73DEC5D0A23358A5F1BAB4
91FB81688BA09F511126434DDA1570B980F3596906BE0D23A71396BA0A0F3148
A8737A7AB1D63393DB4A3AADCA389CE1ACBF20AE2DD09D9C7719F6BF954D1E7C
03B05F4F4BA4A66901948F1B7E5F377C51A8FF392A822244F5550DDDE2FA0394
88DAF5E51213AA578A8B93C301A831AE893172B7D2FF2347AAEAAE3BF5ED7407
6F822C416646829BEFCA4ABD7E2AEA16013D5C0DD01B294BAB96A50CB449B649
7FA6DEE5CFD5FE5DF0E2B12476968B3C810EF05B694C7382FADDEDFB540C0B24
73F20BF05A8315BBC31178398C4DF7A247BA8C5B968401A3CD81976D2140ACC6
FA3F605EE9E992A7B240A8362813974AAAABC799660EA942EE4C05C638F7535D
D0522F8F045946921D5ED344F7B975795281A9EE9ECDDE8DD5AB6A6510CF16E8
CAA48D18DE6EE02A94C16D93CA35EB458CAD1AB52FE22BB8ECA12177C12EE584
D89D2A4DF5237545DAB95D8159F2A4C5A3974A74CBD16802FFC00814F797D3B8
6DA474B23CB8650C76D9DA86FE951954F01AC80A442A6A85E1184C2837691F38
B1BC7E59ED22D13CFDF599DD43370E6F28DB5DE1087BA9F47C936E6A2C452093
DB4231E1B05E7DAB444164A41FF3842F2C9362414E03C6C3EE7BFCD2D8C6A8AC
5AF1B9E7ABB9AD43927837F9B19E1BC01AD5D9081E247ECC61523AD01F7A76DD
5424B746A66BA0A805CF2EBE2891A4D59D6E77D53634C137AE6A6E83FC0D04CA
55D1476E265FAADE6BE18603642142C01F7924228A89E06459BA7E73BD5D654B
C8C65B80932130021597309113785E86C848DB26F515B6576AE85A29BA651121
21E1DEDF84E7F36960009A11B4D0E76C5DBEE655E470D2748EF9770F83551149
3E68C762C83A6DA63D6CEA621C8FEF38317F79D5A6991AE319D33A4379586D40
97FCAED8EC4159A04192035D2304EC4F9083716CA7906B80486BB5C795F626C1
4C541A79AB344653C18DDDF57E5E5435E5A6F60BFAB561998935167338ABDBF7
E8DDAFFFC3D0003ED2963886E184BC32D3AEC992B620A98338F962CD1669D6F0
0207E515398CF620966AE73D22C7312708911CCBAF60304EE8FB43AD7CEBAA1E
8AC903FB1EF52F939E9170E2FF3B5FEAD9FB2A1398CD00188333431902E82B66
A2FB357A49497D48C8C7F268638053911B05AB6F7A67DE08F5F604C2CAC70727
F24CB5F2B23E93A3CB703B62F91579B1464DA2E3E3FA4916BC5A352D4237219B
C63DD1BE7BBA30853A9B90DDDF7AF372B76FE598D19AC35D7FA31C4AB1851091
6FB1C6590D4B83507C352E4D83A16917E6BF815D1915037B194077E47659BD7E
30F41CE95A4EF278BD5AC554C7A94BFD3A91B3FFD4F252EC70527FD74CD02ACC
BFEA0148283EAD2E621FD650A01D433803DA687839C5D78446E98286E8AB5BBC
C5A8C431D8D7BEF3D526CECF8B700CE9C0415271514ACFA19D2B9D2E2B8C897D
314BBF92D3F1CABDC48E9156123182A8C935586E106495CDB33FB4366285011A
FAEB151B1CF06B7268CB26FA821D890C325F962342C0D2A9D3E105A19D1B5078
D62C0ECCA08F6B29876C079943A661301405160F9D9491ABC6BBFFEBF0F70C0E
DD2BD69F1C8B71B7D3DB7D07C8DB89474563B87923D523CFF87D0A87D9C2A2B7
BD0781EA95E281B0649DCFCEFD969C7AD4DAACB1EC98ED4990D65B8C14C8A12E
A2EF7637B63E912F9A4F2FC04764DE3B5B32E6F3D5BEEB8A2D7BF5E58BBB7249
5C099F1B8E935C61493A5EB7C06CE21200E286D079DB6B4890F9A4CC53A8BAF3
9883AE261391BB667719D9F90D45119CEC4D8B491F2E775A0495EC4C7C74092A
337AF574579FD9191951C3EE46B13C8E08646484B644D0C2556465C3C140F24A
30B1C3E6AD87C7D4424486F4D2504B0448EE10815707D016DF2EFB584ADF8F82
E270D23A90373C84B4FE0B28A607D5242312EC254311435101EEE86C71F83126
54AFC64543D4BC320843A4BF30E82A78D0E0A8D2BBD7EDBA8A10A7639C03B6A5
76CBC040E6B64CF1B37D2E6EAA1B1F13829E41C922DF981188F09E377CC2D086
915F427B31F18A672D31DA3CFAA35DB22ADE1210214D37B5216B01D916D41DDB
32513DC4ACFCEFE43D6B25025E168648D7A188149E58F6C806469FB5D13A5E99
1D7A71EAED1AA2DC43E40AA823E706B59A366BC76F01E2B147B03FC0FD52500E
8D21D81154899B9DF267A4626705BB697325536F506606366AF6E50E03D6605F
4A988CD0A922E3BC4257933F986FA58C106E98B256E229329E88275101FA3EED
B73500B7AB35DD7F93E4DF60BA32132C431F911994E458787505F98C38ECCABB
39F621AF0D3B56897308C50EFF8B523251AAA1CEDEEEB5C5AF1853DB8B9FD8E3
0152DD5AF9200F8AC8B8FA39413858E8AFDD4F2E61C5CD126C3761032C19EC72
3FC47C996EE35029AA9F0286C64F328339EED21D83604BCB1609A792621E9B58
F15005486CD1B3524B6AE0717B818974CE81701E630403683A29AB26EE2212F8
8A0FE66EC27CBD74FE979A80FBF0CCA7BF4BADB8D4AE414A1410886EFF8D51D5
716825CB278DBE285E67328F96BE577CC30B6CE0F112741D390CC7B93D114349
060759E600067CDDEEC947CB01C0F4E45FB6D1A0B2B781EA1714CBB8EF011768
F2F0AF4E5800D626CC47D247CC610668FF164EFBF2FAB6A712D093863223BDBE
2E7116E4E76EA817C93F1C9D947EBDA87E004E59B9C81FC990594B82C652B101
F0BCAD653AF06981708E619B5116A10310B9B180DC2074E44D0A2FA90D318A8A
0384439B38D63B94757252062EA44B67312D38B92F3E77B55CE291ACB8321BE5
3A2C7D274E265381FA6EDB08674679A39EC0A7F739BC533CF768487653455F10
27A249EEAD5580BB3D24651664E84B70E8BE54BFD46D9557B93C7270D113DDA7
7D46B69C49C3559E013BB2B2CB9369704CE85F5ED2FA84096D5D15D99076AB1A
B7A2A906A891187692144C02E84D49BA4784688634B3BAA3217EE0DAD89D3DFC
2D420C6A12D63EE1C5CA6B9E570D265DE6182B00FBB0A75AC7D17C3CF29FD48F
54C3415855EAFBEF4701909913270E0060FE23E1DA94D47D86796BBB29FF3937
70A1678C7379680CF66AA5B255F675282382B8884526A4C51705BC2B2D12DE6B
FE191DD233DED07B26D5F76428E38BD2F8D7376D339EBD5A922ADA97FB991005
A147215E8950B2BD4FF487D039711A2ABBE5FFC4588E12BD42A0525EDB5804EE
18A925894749091B516CB5CBFB6841A77933985490ED9936F3A6C75EB84AAF83
F50604729BAFAD45D1547365645F7B69516A763F48972DC4D26A0F94D04CBBB0
3AD36D0FC19F2B72099E65DEF6A3696DD13387024C177D239ABC3A605343DF72
2DCBF1C27AB8A8026A725FAD751786BFE7BC6EDB0E09F822ED7FB3D64D0EAF70
FE2DD9B753B86879DFE1185BF04B4E527C706E114259F9918B04470BFCCFEF0C
622CFEAE7F4AE740D9D7E24185FD75DDDE6028AF926E27403033E2AE41CB905A
EA0B1984ADBF1D42D04C4D41FEFB65AF81C51D429FD0A49893F8EF0B06843C11
493BCFAD6209703B9A953EA5074582462FD6F8CD1423392B0569F7FA05B491C9
C0A1FE575D3D0379830052E62D6E3C24D0306EB2F82037E3BA49D9D96B261FAC
80294630979B8D50DC9AEC332E7648AE0A68FDEAA4B1828144D3375B804F2B55
5A794E59E82F71A9C083C20ED44DF8E7FEC4E80FAAA7A9452A8DD361E18A5E0F
E96048A76C96CE2AF97C02DFBD4ED657A973188D45A91F0BEE736BC487CDD03E
B236E3A7C596FC6B185EA5F624F38AFA789C22EAB60C529737ED09A882AF7447
5DB676698CFD9496C05FE65908AEF3DECF25ABC9AD8033FC8EB4655A46507A85
23413DCE2BD54D2BE12342D800225F12032B09CC8C03B5E36BF1C3018FBCFF07
0BC6CF3E378F6F37D1C83C410068F0946F81E00688FDB4A2797915381F38FC0A
C287590858877861AD8F425262CDB92B5750B5707AE1C101A6A585DCE4AA3D56
BEAB08ED414E4FE60B2B36150A2E0782F56D700DC25A3255EA7FC3178556BEF4
F973014BB999501C745244A95B90B4BC01006417F2534B4C31EEFDAD1F6C1F49
67A21B3B8BDA7C73DED6BE41EB5E40E2D512B9650B6E4630DB75833F1CA2486D
BE00A1B1D69CD79839D58C1A951409B0E69BB7A5E73B1FE072A14326A0A7D04F
D05BC1821215A28E566169C7E50A7938EE24B62FFAB0707D8714310D0464F59D
68DDF9F686315353E62E6F9666A914DF2F8726205FC0AB0AF407A929E5ED9777
BD6BAD999D571C60F2C5366666D230E51BABE5162461E3045A19B16AA98A6D6E
D177D13D70FA192ACF18766A59C58A84CE4881106DBF9080C896AB196EB8C8FE
071099715E1771FB176EFD1763A058EB04CC7A84364374056EE741F16B14D606
F5A6B7E50CD12E44EDF8487C96BB6F8052E87016368ABD839A2F6A7C5420A724
85C0B5A4E71FE972B95CBEBBCD8D95826CDF94DB106B97128F758B77C252AEC0
B7D6B659326692898F58E15FC8B1FCAD7C46CDFDAB9F6CCC1A71D1997D395C50
67DC6DB4D2B732C610EA65DAFCC1FB995DC5478E4006F09DAD1096ED3B58E2AB
C3BF47575AE808A5C2717F61F7B3D68389DA6FA260357CAF8519881DCD5400E7
2B2A64F2F989A6D7AD7C875D0E0E051ACBDD92C0B7D87FCAE8F8712E1BEC7272
951D9CC4ECBF2DCAD6ED2FD56D9A2D450A755AE435B474352A65C0756F87C13E
71A3D5AB85DEB10D66DFA6700C73551F9B07B443D7402DBC5256BE48C3686CF7
2E980591A6F94100E237DA3E00122D58B85A5AE13F52C6E2C7F4D4F0838BB614
B84FC1B7B53C70A99673B1C39B55100713A96D863EC24B68136DDDACF909D54E
6D79430366DBF201500BC8700B9885A4D5D8ECAB312CE79EFC7B871F39FF409A
107A5C102016F478F1BEACC9CC6C518E7A872A55E40001A7DF2E63C1F6088D95
9D339DA261515C42555EF75A03385FDF6C7B1E2A7AE7E876DB7BD633B37F1697
CAB4A74467D7EB57BA6365FEB383D33D3F49A3708F6B3AA1DE3502DDFE95FDE4
F91F88A6E4AF287350B0376215406D90F5E577C782D4D35E422BC7A8AEE96C26
D6C2CE5C3FF483ED8DCD059FCCE62DDEFFA5DDC4BFA1CB524DC16F307AC219ED
44D7BFA2A3417DE91AEAFB4501EB3AD603D164EDB75AECD4ED185FA4D184112B
0888BD86CA2C173736318BD035DCA4B4E7C91EF8DECC0D561BB7EBD1947F5D5C
546598DA7F3AA6199F1ACD75F30E88E5589A516BD2A55F30A8C49CC0C11A4959
D63E8165CAE721F2B06324FFF8FF02A58EB57540F4BD86085B5D044EBCF26BF1
541090FDE196E3F97A6B18CD17E1A147579752BCF5C8B0040059CDAF1118CE04
D238831C3CA6745372290334969E9320AF8E7330A29CFEA1099D09ACA51328C6
28017AC93638DEA121647C09131AF64171434E6386F36A6CFD7131512E5387A2
B8506248FEE96AB7197181C828327091D392D5441A9A39116C3E89E5B119B9DE
6E6FD9DC6091BE084B4E6BD56F8DF9900D48866DE8F318E8B98E349EB5FFD260
10CB6890CAAE3C8539DA462D1C42AE558E572702909F4036E5F1ECC53573683E
6392BE0788C6B0C64D6E0A4945467840B0924C38AFC428BEA8F26ABAC1A2B9F5
ECE89F97BBB4163F5A43A0861A9033ED76B763A8DB62BFB57D73304B66C6BA83
5EBDDFC19E88CF11D2E7FBC3EF94B99A0719C9B9B45A2EB7929EF206520D6F9C
1CB57B8C20932280BC552ECD04E2C33B76A0F6172098AA71DD626B8E5958710A
EE88575D0024E7D581ECE8169DE53DC337120711DA80BBA6244D3B57AE124063
6911163E1A27845FAB7AB8D9EC77C20D5C2B971F16C1BBE3F76565F5463A67CC
70A60A17FDD971245A2B693F913E9E6DB61053EA010458E262F8846F4F600B7B
B0333219CE24F73388774C314606D344F33FF9BC0D97AA6EA7501115775FC8DF
DA023D6C9B8FDA3B5B38B6A1E05D92F3EB9F247C49F595D50FFAC056863E893B
F9444CF7B7D097A4CB6A5FEA11B2E0602DF3458E5497143BFFDB6AA4C64140FA
5FDAE4BE2290DAAE88B4B3F9D71A727104B99762874AFA46C6A261EBC65FDDD6
68ED797672701802084B94A6662A5AF99AEC18349F4F4FA7CD633F91D1809894
254A673C8F331608D80AD51023F998EC0463F8BB33809D26D164F56C66036F67
ABE94E6578C83F273CBEC77D1442A3374474F1D4BE72735447331E5A77B668ED
FE028C9C539A042337B5562C6CD0C85D80B4B11525BD2B8C3F6F760C8245A1AD
9F508C5476565A7154A43D5879042740352282BB0DFB8085256C53163D152A71
05F942DC1CB22923131131AE570FDB7AE3BA1FA26A25992856ABBD718CD5D9CC
EBBD7DF399D08A3529BC281516BD1A6C353C9BDE6BCBBFDF1728620B87BA1373
76364BAA5845DF9C7C6A2240AFFB2EA9963E3050F65DA63402166F691C9FD751
5D76F88B3EC71D279555F2557F29EEE84D0D1410A9669D374DAFE46B194C65CE
EA19D0BDE898CF328861C3CB4423FD2C0C1AFED5A0CF82672026B3122E379A00
12322A325BEF16B1FD946E0EA766F146FB68007DDC9950CA2C63425D1BCC31DE
87711419BD805E1F6A2B94E8823C3996FB208C3A9A337EC71D425F9409954DF1
68966159B2A302B801CBA29120ADCE1EF73CEC5B7877077EC2EF18DBE4717FA4
3527C926BD8BEE761A47DEEAD3A81A8B4886E21C60D449EBB605E91017887B0B
E2191205F7EA583A9F4CF015909F02524ADBAC94BC766F91984143CAADCEA822
E88D3A429D9AC37D58038CF1F8585D1C71CE4F9FA406446CB1C05D1E9C7AF3D2
FD8A7684C6EBCE093CCC48C6AAD854092B751CB6731001CA6BB946ACD475163E
7B985867E45B64B0FB924488D16C201E8705CD976388FB94DB155C7814059BE4
0151661FC1D9590B7FBFB3D6DB7B58874307FEAF6FA40181B460E2C9D83C519A
233F14B826CA0D40E8FCAD6181F82F434ED89CBC9C093CF2C222DDCB85D19E17
9DE6EEE684BE3A7AAF383B10533A8BE1080729D86FEAA2193FA6D6C34422C348
20D91DFF2AFD3D6C9E852E4F68A9B5842DA9D5A68363C0770BDB01FDBD7E16CD
415A35CE6B21204791A977E067184C1E4786C22436068D4D0D0DC31237CF33F5
E6F6C48BC02EC83469F915AFAFA62FADF9BC836E8235929C770E5C0E76652C4D
EF6AC97D36DF981E8C250F7EAADE45079B9D2570EEBC4DB8F927012AF0700976
E556F3B35B60E7795A4E3B234FD1F20A908D3DEB35D08E2EAF4EDE0C0C64A45E
3F43EE5FCEAC1D5CD3409002CAE1C904D94C1BD474D756B1A0C855E60C30FBD2
AFE9D5F8FF6903CC39A1209B39E9B1BA970D3DFD02F2AEF59B214D3955E87505
80E9327D18C12C426D846E98B8B593F96DCCBE971552EF3B2A9F41692482BC55
4D7A0EB64057C76EFE5BD2EB58AE58E27F1A5FEE14044962F0B4269F80FD7B5E
55DC55BA97DC1907F643040264442F31881E3DB985834F028AB83D63885121B7
A7D7A973F2EF67F2795E6DD8CF55B9823E8D27F5EB9256410A727E47F14F7B9E
530ED94405E88728985A7B3BEC05788893041F84F2485F24998DF3B8F5A88029
5B23717BDD9483149F81CB5A5CF23E7B84224731107871594831BECE6A0200D3
28B39ED106CB2D5454E059D94FD16C394343CE43EAB0BFCE613686104ECC241B
5D274EADCCCF0ECD5A5EC5DB63B8221E3280573DA8890FFC9FAFDE8A85854A51
2F7F427979494A189878F20FF7D0A11571F69B4EC965F20B9F0CB3A90CA3FC92
18AA9AA6EADAA600263BFDB07F4B7C072AAB94BB4326765DDDB9AE25A9E91A54
08F9831BE75E5873BE2F2FFCE2D78BD500B971D49587D197EBA9E8EEEE833DE8
DBA8C635FBF52BB5EABEE18E5BADF3C51C6F5B8FE3C6120372B09EA216475D75
EEB83818EC09151F95CF27A15F2821E50CB705B7AF38674F518A272C8078F01A
BB42EE3495AFDBE5EE5A284C0F9FE1F60826D207E87C6D7797D04593A978CA0E
595B83BD56AAD7D64527692DB80E870A4AD588A2032938B66C68DA69B1C281E2
48D4D9F8809DDD97C73CAABD412EDFFE5FE873E98EEF629EDAA77CEB12165D4B
F02D8A470587F0A463EA03EA14DB00A6053A07A2EB0584339B4F7C01C3A2960B
79F3821EA813D29C1912D786B64E25775E1FAD536D552B67C3733C000A6B1CD1
2C55E25406180AB5A3D6F8F92146F0CA7C1BDCA7EE799616A5261E5174D5C13A
D7388AB72585F3CDFDD67CD5C91F34A57F7C05D3E98909B5A0D210AEAA109DE3
204E51162D0EB3D87603743336E5E28287B336118D6194A2686174B25D07645E
E87CB36D14C6543D226AA9DC216155B580E24BE611F92B0CA6010AED767ACD26
978FAF0FEBB527F9ECC6F59A40285FFF938F6C2DE1C98C764461E4B63D21E475
F48E9B78EF3BB036A169C07B390E50736AFBE13949804A54789E4AF25AE8D29E
63BC4D26CE4804515CDA5883534D7B8680D0D3062AF0E81ABC55AD1243F00E4B
CD78BAE1B1255B139A4B50B093D58C17846DE6DFB807A04446B293912B31CAF9
7D404DB52DE3B94C1D44B726383DB67105FFE374C1228AE63ED3093AE2F8D9B7
EE89A820892D7C86D98F095A1B91121C35D8C24E7F31966E2A5969FF1A6EE697
90520DE8F6E9775A927F2EE1F7E4C0C1E57D9276D25B1F67A774A2F29FCA27A0
FF2804A2129CD715979B9CA82584EFD984C4EB461AACAA942CC740B910B0FD09
AEB44C4D5EFCB240D1AB2B6A6EB57E4C8BCFAE9329CF2A1E3F1A6D322EA90B70
E3AFE457088416725AF1C99F1924CEF582FC4386A476FF23ABEC02DD71DC4957
B75533AF719D4DE187F45F883CBEA010B3C6F6AE2F5DB222525CCDA88656F64C
44A83BB1EDD10AFE529E542684F7EE03E3A023570BD17A6941C8D91CCDE75BDF
3E9C274FC1F0F59D7A86D619FE03EBECAFF795B9397057D3AD58244783E4BB00
36D7FC595BBC198881C0D98302B116A463934A5A28E8EE8C15F8CA7583AF5C59
27BEDECACFC93D541ED3285997C211E960873FFE3FF71BD459C5D81B120C7859
B025E337E9BD07CDB19E29C86FE5A06B7D60DBA34425072CBE84AA695A7871A7
F1AF225EDF5D74EAA158251DC88345CEF5127F12FFFD90D2021C2DB6DFCFBB0D
B98D62FD50910E4E655F06483D263D298D8F557C47FDC817988D12CB00AF22FB
0FFD17A2DEBF8CDAAF3BBE27A706D93FC0A92AFD4064A9851C64160128599814
DFAD5B256F2C3CAF550ED277CE1BA768C832EBF7B966B0ACD23C52BCC59343E6
DE1E4E642C465D1C13F689FEBEA14D761CE30C9E31EFEDE8A4D341210E77F5A4
AD01355868F716DFD2933DD12B648BCD4BD052797D8D7F77C603238D840EBA4B
8BADA09E8D0193C054CA021489BD478A54F4F72B36C253B4D09D0E34B02F0258
FFBC94F4231F74BB0F654D05CC6C73386232C4BAB2EDD5D7C20A4D8F00A31109
3A151BBA519A28156BE81507A056772FFB7615A3D0A5659D2DAF9A0DD8587BA2
0E0CCADFC9489CF6BF32D2A17BCFF842EF5F146D57D0287D62D1A34793E173D0
32F1675BF235BDDD5F24949CEB89A93916C86B2A9DE768BF601038B976C4056D
FB27F053921193C59DB289A4188EE8074946298381C2DA705BB5069F19A58075
5318BB1D7C2A07591955B78C0CD5DECDD2FAF1925C3BE1C67CD9E0165A405419
1383E77E963DAC466447028F139D9C69A2B49FEAFAFA01CFE20B5876AAE7AF8B
B5042264B6ECC1A2B7E85E5D6312A00545B4AF5B1278E585D9B6D2F757E48B7F
708974912DFD19EFACDC5926D8AF0AF7BDAAE8A2E22CE7F6ECEE9231DFC0117D
3EDA1CA0B989B538F2528D47F3E11242D8C1A192A778B81E196EC52BDC1968A5
CB15D60358CFAD6E6AD8769DB51580A64F9A0E72A8C67EC09A5937D26A094C74
0B8964CC8C708298C154CA1CBC5A2347AC28E960123A0436591C6401D2862D91
2B670A8E4BFF4C49067AD2D7F9612A84F491D6FF2E3E78D108E4C7C8175C8237
BCF5B4CDA1AA8BB26E8171A2820119CC673B84AC595B4E3A2CB973FACBE14B9F
6330FAC9972903C2C35C5D1483348AAAAB1C585C5CA1D879D6B0244310C2A9A0
787B15ECCEA3B3DCDE6D10A492BAC74F574E5AF7CF7F368502B037399E3D4A06
14F792804C8C32AF13165D47FEF1D6AA91940F93EFCFE19EDE2E31F837DF86F1
800F59C89EF64011153CBDF25CD74F91C9239CF4C16C523352299DA2A2209BFF
9B28448FB6E92B0345E5D3AD7E0009212A52D33A0F45F203ADAEB988655536D1
4EF7DB560BFA91ED654B7201701FA14432BFB817DA2C19F0C868A3487600CB5D
CC0A8C65DEA8EC1D37916398FB8CE955E12D8A89ADEB1751D968C6CF9374D76D
A1237A4FF1604CF5F3BFFAD4DCBD522D4F3F63C63CA321E87915C3943BC2B08A
60DF17C2698918B427E9E02B65090D330812CE5EFC5C614588CDFFAEBC8DDB0D
4C2334C2D0E64590A420389F3D9B1A1CA16D9D51FFEEF04B7AF5F38B219ACC99
3ECF07D050F04D4CA153663EFF8A63016F79C7D0E2F9B582DBE4730B36A9B890
06981089FFA13034B8CFFCAEA8BB0F3C45A58A080E74AAE48E4BF0E64BB02BEA
41A2A294BE1119E82259BE9D5E47C3D715E311B8F3FAA545A73EF81285F6DFB5
0219B2DF9254736C1A26E028D54DAC118352A61410B0D669E3C92FBFA5917C3C
83CC4049B8C28C85E677A8066212A342CCF58A2AA3AD4F7F0FDEC8E3C00B283F
88E1135DCB297E907713A0E7D64E3FF15818BCDB8EBBB4684A007F8DAD00DEDE
034B037E80136C17261F201B5741C6D22060BD5156085158817DF6D23A8EA5AD
8C236C2F7B4B88408FE3160E3A68C5B2F1EA996FE71CF6D1E942BEE46CEF32CA
FEED23FBC0F7AC58195BBA28B11394FCE9E5959664852D66255D2A28B0EA5343
19E195268F9BAE4BEC545BF465C1E966923DCD1D8AC4D0D2CC09E75AC6CA9CB9
988200010B28D99C6AB4E6593B6AB680AE19B5B1485DE99814AD4A0798392364
FE0BEFFF89A5599AA348E722D6869CA086DDBE5411008C57FEA9755B9041BC71
85E737091B05A3BAA49FCAE6E32DC9D1AED22C2EA983FF5B299B012DCADFEB8F
E99007AC7E0C796555994A6C738CD7435C20A34F783A4273244DA0E4AB11C078
B7DD24D76EE0D2C62329A19C7084F6844963608ED2BD5CB3C22056377F0CF94C
53FB691309C35E6977332CCC6DA4BFF317214942404C46943A76EC104A1C6FBB
3537DBD6002936E08F0975192FA32BB8ED839A076121A149B14562795F70057B
A104B5A3216F6459C1489A004069D61BCDDC57296986480BBE938102CE2853EB
F17B2BFA2E5CAAA03C4BD9808AD19A577AAFF1AAB5EB6BBB58BE6AD339C572D0
B9CB60F04CC0C6AF76A0DF223531C12CDEC349D2325D6FAAC3C6EA841E7102F7
491040C32C0313CB8CB171565D669B924C08661B3D733C5BB74352D824360C04
B0EC8916D515982C410D483D3FC638962AF1ED2C85496CAC74182713BA632504
E28C7FC82B5037EF1FBA08754B39258D78B353A31A70C6614DA60CB12E6534D6
205BE2434118077B908451C4ED8341D28934375C9A37ECA08C8BFC9A9956FDFC
914BA114981044677B9D33B9C0E2B447412F3D2ED6045145E5FF24BCF41E3A11
DC49497E2B5C8CBEA6FCEBF1D6B1FE0F34F9CE669847E19F63580964B7BDB6C0
7344713A087131E889441E890CE5EF1EED2985EC52C26E5B8E62CCB918D31AAE
BA4E0C1139E3F29A74CCF7D97749A925E0B2061A82F8E826BC7060AFA7B325E8
9FBCE55E6ED5D4DAE57F1728E0EE4ADF486DA47F26E4ACFAB50C13797D8DE1CE
072E7BF9201470872CC3B630E8C3074159CA6521875473931B83035C520A049F
D62FA123CF803DF01FD60551C5ABE3B82F4A439AF0F1B4D45E4DB17DA98F3388
22AE94312273BDAAA73476CC26A32F37E719C0931FB872A1972D1F048699ACAB
EF284C19F6BCDA0F934D7EE273C86BADB30BE244D598F223DBAB279E69813192
A9B25F60EB0072DC444A8F33E9E9B69F8B6E3C20910E8106CD48DF3F81099DA6
3D302CBC4D88604D9DCD36F3DBB365F8183CDA5334CD37080785B567FB35F26A
7E2017F634A8E9E3BBBD952ABB1C8DC8FC6BE36CA3CB2A6C2C4B92B73D7AE87B
13F15EEA6A5B354D14CE1641FF11B2D34F414BC7B96B9FCBC80E5862FBFD0EC6
B3A6BEF092856880871A1637F6F987D22B85C7A9369CC0E59AA2600C6E968E82
CC6ECE4190887421339F6D451A5535BD939C8FF15B8532C33BEB4193F5455BB1
0DC043CBEF34345EBA5995673CB82C886682E6E3EB568F46CBEC3A606F4C6196
46B14A25BB40D57C2B958845B8788B6FEF101A30B504C5DE06C86869BD5A8864
8CF9207B127641DD94546B03E4053078033B0888D63B97C7BD873281810A1C4D
EE0D0823CC7AE57E32E74E3103CEADCBBBD612F687597341C495742D52B8E636
25C5A7D11765025B17440078EA97D139EF9C1D2BEF7AA1E8FFC5DDA0B9E9AB2A
77FB310C7106BA2AFDA9CA88D41BEDC74D4ED10F2E3D5746C73EC0C2DBAB3BD9
71C726ABA7C4DA265B6A223D0ED3DA7075C7CC37961DC7CD3A088B16AF31600F
395746F8F5BA9AF17652D2DF02DC55C78884D74573E716CA2E20943BFAFAC56D
CBE4A2012EBFC628F3181385AB916E2703E48117AD594836AE449085AF0FB4A3
861C67A4552C610497D442E859E06F40F537F260EB79FA98C230E7ED5D4E5090
39E8A40A1FCDCC09A325992C686832DA19FC075EF37F0EF642E06AB9703D5B6A
403051E8C9A1969FD535447152D893A32ABB9468B5528F5B5DC8BB1D3F9F80DF
0DFDFCD73F99971EE31684D721083208D084010BBA2F4993506570FC63D85FAF
EA149D2D9E0920D9EC99709F734310107C953FEBC4C38097F7AFC1655E83D5BF
9B94EFF646731F4558685B16F3F33A59C2AB607CE269640C43F5923329E440A4
BC1282B989F287F184B8FF6E97000B07382B048A26F9C28D387E31A317966D89
6FDB91167A89F2C736DE82F77A6D8F10A45FDA84F502F6875890DAF09D18C3EB
567019261C42C5D429181F7E108E10DBD043E7B7EB3031418152E3EF415F3BEC
2E7ECEB15B50C31F5DEDAA18EC159AB6F03107E692DC5F60CE0650766E29A79A
D6ACAE003485A4C21B389F46A3733BD68E1479AD4C6B5471862C52AEA4D824C9
B26A36B9DFC9A597910685A9BEE4CBA868D352ADC10A56496302818B57560C08
868F0F26B2DE3A8A834CA315127C46337F970B0E4652883F787218F676D60FD5
560B7E85C930DB5A8D289F60FFF8C73282365339EE23A138F7DE29F4791E7FA3
8CF954DDBE7B35D3B1DD79746590B24E5CA3AD0E78C5B1376F4B8098F7C8662B
9D0DCEDC4378F61ACEA4E6965EA49BF04626AC67BF02C3154852F6F06F6942CE
335B16C884B82391D097750AC8A9FCF35DCA4A6C627ECB39D5BA7F8EF5773E76
50F7DBC0BD35492B39850A6127A5F5A8B1AED73AE15FC7361E68464322DEE90C
3E0984AC155D42F9CC06195116DFE7AC820A43CEDF664BA6DB13755321233449
C37F2DA97E67DE675CCD2B4FE22AE09DF3F3600FE89631FCCFA1C86D5277452B
33FCC33D67A75F80431D059BF7D7804181BAA542806A2112D15D025321F8E68D
D62EA5320C3DBBAABD8AAB1A072AD2D80D229BA32F5A687B74DAC1CE89B91332
54FC3044A166E2E533F1C050BEF3E4274A1B5FAFA1DB3864879F17F374574105
CEE8BCA7CF4827BD84AA0ED72955F2401870A7FA0303A0269B0BF57040200E62
765CB57ECA2162BD29F0E926A1042B12AB5CD1F90DF91C526DC6BBEDB74A1AC5
4E8CFB3F7F1037CC31EC94CB409A8676469E4D943A1346DF9690FE8AD2479A78
55E11A0B43FBAC73C9E79FA7CFC54AA97EB2D854AF0795DA1981D2AC2EEA3475
82E7D7C3A2511C0DDEB293BCD89300800126FC145DF78D09964E0888E198090C
6A8C6C0B9E471E462993F8969C92CBF462E749510911690343CFC2B7A4659EF3
49B964BFA4E8C577857F27E6671E663C8F925F1926F3A7B21A391798EEE3E80D
9DA51B1F5E7F7E9925E31B3424D12943BD6FED82A8EF986F4F2479D1A838F1F3
750B8A5A1A365BE8A68E408A503AAA09FC4FE60646E7AB730E5A34A28BEEA68C
46B8A633E82E5BEA048E3AAAC107F62D2D016B3234484519287C20D811074449
DC64461585BD4F2B798DB0749A09F2EE7F6697E406B507D64CFF4549CBAF0AD6
2AEA3CFD663916700C95E0023599AD8BF5E0F97967CD85EF39D00AF0F37FA297
1CB3884245656DE120E0F2E125D61FB011C8BF9A79F4DF0F83D532C9C58973A9
29B05F928AEEA1E61BC9AEECBEB048D7AB3640B31C8AA7F290D9F24F06FFC6C3
5C0BFF717997D3F2644443AB25F2FC7037C629831516B51E655C54F2B88C06C9
28783AE7E32CC7F03BDC40696F4BA5DA1DC8B1827C5718D640FDAC4491E1CD4F
338B90F2186A550FAC789DC46BAEA1D028891BCE072BC404EDC7C45209D6F3AB
7D037E509CADA0C2312FB28BFB4CD5BD804E7883902029922326CC86CC685286
D227B7855C5F5D156798E31BC66636B3D504EE78BE77AB036D3DF8249C4B1B0A
47FD3CBB7E16CAB6D2645F8EA27F25C4422B243192B9041EEFDA22D90B7D8908
2D383212838E3FFEBD5FBB076BD9BD0A4DC7B965D9AE82D16F0DDFA0306B260C
5CD4D9A5847E8453A83C906F22B71C52C912A550242A393A1BBEF0D613B60357
631E8FCBF5BC6EAB714EBD60E1D3B1927B8A6CCFCF46E43E35EF09F568E615CE
94158D9E0A162696FEDD0536E7C70D3AC58AB2DFA3EDD496C18C8974E905D007
6CBB9E7F70CC4ACE14D54BD3389E38DA769C52368AE43A964D2311F07753D0CE
4ED2AD6198A473F1FEDAE20F1D5D95616CD93B93D45459AF43384C66A4610188
F82DCAC6A4CF31407A555660E2681176CEFB2BCA13F66996BF025CBC117087F0
702F0B228D76EE3EF3F92E8AA53ECF59AA38B2FEEB448B4CA0C8726ADC87E473
C69F9101C91B92DC7295EA159C11B1EE977C88AE260A1F8E317C67CA2A599F1F
4BA039BBB26179F2A72599892B3C188C1FFC172AD2E5ED14C9849A1475958C80
45F326069FA7DDD0BA909EC99E655A0385F2CBDEE99868A3CC178011C5B83FE8
8A4C5830E729B5DD43F2EAEB667A4D9E6320146C7B6FB63A8908C421C94770B3
15658DDBEC0DFC94BBB4DBBFE13B37FEC33DF3B23FC7BFEDA3E64F66A9CCAF24
7C1A705A84EE6DB91C7C0A0100F1978183BBA10BC47E59D475EC12451F7BACA0
32DDDFC1FCFDCDC15FD9AB0F7B3A0929E777C5ED85D8B6502C2D4185C2F068AF
583ECCBE6FE0329A031820D4D1DA9D11F02929515DB05D6BC44417E8CB8E2472
EF2624C23DF65B84048159EC6B6C845E2379D4B42D0D84A9EB74AC0C2AA1CBDA
A5A5DEBD4133BA0EBB834E751A7C35C7A8EC3A02D70409252C64B4F5C0C775C2
5AFF4F5099CD3A2FA59ACA7357160BBFC19723A2CF351CD97D9AEDAE2F10DACF
1B88468FBA2E173C9382A085A2924AFA002FA83DD86D63E9FF54F4E54026D827
6281725274B64C9FBE525B184CBFBD495EDADF2A680D97649B531827F6A27FC9
1200176ED1F287DA93FCFBEBC586BCB872E666A060E4D9241802B72EA452E6FD
2A16CF64A53CCB17573E67C9D436915EB621FC52FB9F13F140D6339C01FF3B09
97BE3AE95EEFC42A22798C2F7EC4992C1B5044C152197BEB399437F35D23DC09
0B4F34EA6C8C692D1817DB2CBF1BD72762423386EB0B5C4C24C03B8EF5E00BB3
C640A57AF7F52A51C69A5A7B343CA98F9438064838B0C11BBD521661DB453CAB
EA327D694A24040C167E9A53CBE6064AAAB3B89F357F7F55A27125882003FDC5
DA687CFA43C0D1856C461F97C7AED87C08EF65C161371032BE4902BBD57AA5DC
285EA30F1EA965023649E43CFE82E4F6D74AA3696DD13387024C14EBCC83B0C2
426B358A2CD7AD380EFAC172D225FB2071332012010094DC211CB2CB94A27524
A4C2516A81623CCBDE819DA9EE1F6F67A0D65D35E3D0EF63274B611B200CAF6A
3AAC7F87B1FD8620A5A695852F2FF71CD16FA52332A799EAA496770AD10820A2
51ED7BA1AFC4C0016F8FCC00366AB2D94549A80ED356A005752A1B0DF62A7029
D64CAE7904471F5826C90CB7FACDEFBB4B308AF80B38573BB68A4A83F1390445
F24D94D894852289CF2A52934FB785216832ED4D8713381A34814B4A2A12EC0C
72CF5BCD528976C224EACEE915F5239727C55EB86C8253596C7B89B6226EF1B9
E6113A1C31010A4BBD104C7E5AC052F3F8122E2FCE170211469F7558BC017FE5
C1072EA4FBD3D5CC4D3D16C08B047148E29D3901C4E624361C719F12AF34FBD2
C3988A7A1719720C6FF3A32F6B29B0EB5D56B7B7F48A86059AFBDA2659DA38C1
E1A9A6055C175408088B2C23380A3492F87E469A8D4A0B9D7C5926D1B3FBC2A5
F2B26B4DDCE39F3E59084974107F8789B2D8DC5782E80BCE0D871C75F3724577
6D54347ED6114204438B29FC874A64F57A6FB752A972337863809416FE9F85C9
38662C95D21E3C1AD3600CFE96CF3DA6D620CC127B35E5059CAFC3C4323302D2
F0A66266F46F921E77DDBBD2391EBD6625AEEDB22442CCEB8407C234CFB15BE7
E79E6A34DAC7C3ED5734080B57E1325FB13F3EF313DA6EFC55D3AF10B647078C
A66EB88EEA8A42CE50508790F5A5BDD2DDC8AC150F6BA142E6C2CE61FAF98E09
E02E877A0218F8865BD95D620CA9436FD817A7B2F64D6A0AEB2C3DDAB25909FE
F00778D7003A85E6F60ECA5AED88EAE8608354A27DA79FD0F96B3E2A4462F629
BB87283D668AE7CFFE59F18F5A18743210743F035069BB2A55F0027B42AA97E4
C570951EB81044DAF538403B1B5CE76BDCEBA951B61BA48FC22AEA6EAE2B2167
E994EF1210D3FA09466CF2D7B165B5DD990E11A1F27479762BB9B95EB3843AF6
5C527286B794BC017FE5C1072EA4FBD54E6679DAEA587D36A213850242B44D3D
3A0124F41883E33904BB3AC4563D3E778E0C96590D2D4DA46741AFAC0EF6987E
91F6CE46BCB44E11780E848DC601CE3DA4F90E11F95F8ADEFF72173E9A5F2AB2
F62C427E5BDC0E9E14DB44241A363F1061FCCF54A096175269412516696F9970
6D5F0FD13E5C8B5F2421AEEB7D24E833F7B8BBF81C2B0A1601D78E215DEBFE21
6BADAD8CF8DF891E555E5DF95714D15C261A3AEB187BA1DC2BA013A2DD2153CC
EC6DFFE2645458F781186DEE74ADFAD3428690834928092A4982A66063942F6E
01E70B9C6C42162729D742D91E428B9D34331BFA9C9A08BD09FD5054C8388DA8
2F586F779566ADCB995B47A4712422DFEF01EA631F6E50B92BBAC012FDE6ED91
38A53B0A2B1716335B8D328BF7DE82E75C8EE51D51D97D17102E5C5C5D81FA66
D93A7A74FAF4F5F0B3545C5AD28370054C243ADAB55FEB09CF839B3818EB2280
149A8DA4225BC8358FF2B0B4D2ADF82AEF307BF2FC16ED5DFDB1DAE428DEA1B9
CFB2466A5A5291B3685E33DF228A30472879778F17A9ACA83E5A413B472B6341
D637AF4AECA851A7A930E83872D8BFACE8ED6ED5FB70782DB6F0897F019FF179
2D1D90B755AADEC14DB871F3DD0D5AB028F2EAA43216B0952408D5051FAB8C57
8E0ED532A99EB95412E90F370B4D2F92C01428AC9051C9F5AA344BCA6CEC10B2
358B44F0B691350DC0E4B38E4B5B5868A34E643E60718D5D842B769850D291C9
D92C836531BC2351FADCEB261ABC94F4426E5D273581A6D2844444D82093FB03
482EB54E0251325AA04438BC14D47CD354A980A539A617A8714D42E099E6B189
D865497EDEECEBCBC1BD6A0E937CD3095F91D2E7587E9F1005F29EA021579782
8A9661A6006AAFA20FE86DF13E7C83431A4CEE4425C40ED537AFFA5B416902FC
22B7ABDC397E50AD6499394EE2DB30DC1C1384874886CC9C2DCE86D7F37CFEF8
9833AD1FC0B6C43D6890443C692249430BFC3D84DD1BF24F80D0975963C22746
C788F104490DC1B3A97937AFE44F3CAC59765203C4FA4B7EE1DC737637D95CC5
287E9A8700D904CBE1300D317A2CE6B61F2E522FBDF3F7D10C8785024E6D282D
4AECB69CCD0811185FA0005893ADDD71F0378DCA1F3DF9DD5B900212A5FC7F4D
B2FFE02D2F15D6E803B49E95FDD817CC79D60B765C014961B96B98EED757504F
229BF22A1434E7D661083C7F8D02F91CCD580EA19FC1BE42F29D666701A93047
6B878C7A8CC0104C1D5F6315FA5582701B2752A7FDD9458F6569C96112F0C604
16558B1482B53CEFEE5A5C18087F2C3B28BEAF58B3EDA563CC50407665202077
5EC86682E5ED5A50C4FD908EF3674B634B84D116EE6F2F9709180CA6A8CA11AE
1447F804F1E6DB6C19A96D1D48EE4A4DD94D6443467C61CDFECCD52458D14511
9526B2C3D294FA26FF1D3965B4AF6566FD378C431D3DA016F0C8E94A5C3AA242
C9A7373C3A40A62B1DCB59FA342A2BEF7518AB4AA9AD3CE8818625DBC69D6804
8DA6C65FAFA840F4A393D9BFDB9BE58DD24FA70708BE4C8F5DB698E081FD5E43
1E713D3FE047C7291B804D6E1B63D9A188961A3A75B1638F4C12EE82A602381D
25C85E30D00D4C62F1885A5D4B99D736900F6B3EB10A45BF20EBCFDBF3132C75
1487D10C538FCE75B0B86193ADE849F81BA6B221FAB4F9B0133637410D9DCC9F
CD627C93B1E5F58871A4770C37FF36CB0C02D6ECAECCDECD8C1283A38A53495F
E8A1EA9A7FB3247EB063AAA1E730C83F72ADBA8F04A20CE6BF9278F22DDC2C0F
F09173E1AE5A8EB7F383269056908BB3DAD3E3298A79FCAC93832B0AE9E566D8
3B5113A3A3B4A3E5EBD5E8469AF31C7BA83D2E4D3EE87F365C916B392DFEE4D0
465DE8CDA7DED2529D11751060F8455EFF78AF17F8E102DB5BA4D07355836584
EB4BFD30E91C69D7E878E238A3AD7D542066D983A951A097CC873EA93D08FD0E
AEB026BEB5B10BE16563A4C1F981CCF913BE71AA7BC35A38A96C9256AFEBE5F1
4FF089AC97D2250DB42486040D264BE8DD6D34019C2F5E6F73AFBD4DF4E92E49
E51A14455C1951CE5667D25908F8599D45AD18998324BBF2DB3D036F6C860BFF
16F12F7D242B1D2696165EF8CD5AB28782AEABAC9A92D40584726C417B9AB97F
F5690757274182D67A369A7CA0C345CF4243D578D7D1930D80CEE3030E26876B
8039CA04B9FE133C55AF18850EC88446B3ACE4FD590DD439B91520C652F119AC
40736F74F9DB72A799FDD4E0218D722F6FD90C65E2316A8F2005ECCE7B2E63A1
0D35DB68A90F852015D266976956284029B943D7E93FD438234A2F082933CD47
5E2C3F2B3D50580D513C685C6F11F665CBB805AE3C1C0D764B198573DDB07F5E
27A4B122C6B7728D09B140DFCD1865ADEBC0349C0CAD84D1F64F139FFFD71204
ED4C0CB825457E99D0B5FE39F6368CEF8799CA4A72074F8CA99DF12CA4E8190C
C3FBB6DC2F43DA30AA1E47A08C5A40B1B2FAF573190B02D431132086E0CACF4E
F9AF58B062ADAD8F59A5855F3F7804FA2E37CFC371ECB00A223F69BBB7002CC5
8A1EF741250A33EF9A2D57D7912ABA82E706010410A20A572CEECDCC3E1EE480
FBA01761CC3B5C9E6143C2C5A552C5D89FD39D5361B2874B193C8F04071EFD93
17C3F00E4F8DD342CC67DBEEF428A345658CB63CDEEB728CC5B35F80DE9D541B
BC07BA9F50E7933AAD5251EAE5A7A6AAC3C0B686896681B23F2056163813FA99
ADADD0DBAF6979338BAEA01E8F5AB5AD374605DAF80D25CA254A152A17044336
0DFD758697FB3BF5246B62B70C50179625001494175BD8D68BFF393A433BA255
C2C2D56E5CF1A7B5A2A46FAEF9273CC1C083551A342B76AFCB9D7D949C0CB5EE
6F265232A084D1A7C53172A7281D00C06B862A5D63D60B7AA3782DC536F366AD
1E26A61FE58B083A58EAB64D9D5981F7604B6AAB4A2F162EB6FF10EFE70DA09F
6BE93A39AD0CB856C39C72D7829D331A53A80E058C1EC1F5E3EBEA93EE2D1431
BA9338074B6FB027945A2C0355936A2A7FE74702F6538F88EDDBC3409859E6BB
ECBA7D37BB861A2D0758D0CFDADE01C2CCAEC45A0E40AFDD864277E2287AF1D8
91764C0B0B032931AB82AEDD0BDA8C76F45BFDBCA01EF49397B18D07D95E7E96
E2A8194F643FA133E8E660EA4D08A9E7F57F8131182FC035228073239BF0AC4D
F15B45360120438EA7A93D8CD6E466FADA44EADF048353DA9E35593A21E9FD8B
32A9CCCDD641A2B11348ADB3D9C7183B8E7B1A1FD5596105EC5E3AD6DB6C5417
AE7ADC4A8340F9775CE3A205C3F29825BB211541FA5019E8020753E668F3F4A2
834D38C52CD196BAA37540BB83B3C77432EE20A08933F1D45D8F672F6AA68958
DA57112F10609F3E8B659C2E814B6F228B8839DBE35AE3DC710945DFAE6D174C
E5A3CCE8845FE1EE72F4C2184084EBD46242BEED5FBD7EEB87068AC37F2528D2
0EC894B69C7F2B05227DC9B41169F218FC3499F108BA182A7F8D346E4724AD72
35FE109F81F828964A5A2926F0330C2C7EE3636F262713AFAFA8AEE419D40E7F
3C66C84FD6E49F846C0182F3F6BEF9ACEF0B5EAEB3CAD4DA410E69C5426B2531
ED0563F8FA8DB4B7A9039D2306E065B76C3326A6B95A84177C7FE3B82C6176F4
C4905DA22BD691C03394BB0E5C1584D4C188A20430242523C97F1D68A5FCB9A2
A011473CBDB8FA577449AC69B73BD6C9BF9FA5BA35128BA5F92C709C1D1B6949
7BC3638185BF5BCDE647643F4E500ED847121008BB29A96EA9863F5C71AE02C0
D5FA455E652387799E88257E97A14969834F3AF48C74CDB12582750B6DE3EEDB
6C6C6D1BE1097460E8510A92BDFDAAD070C2E43FFE8183B78BB673E17CAB7854
A7B9B0334BA66B58106D90AE46ADD9252B11B87EB752375A5DA9CFDA530C6D1E
86379F959CBD9E615B9BA9A66085258298939EFA329BF9855E6661C56FF4DCCC
3FE40BD3E6CAD3DC403E755FE896AA750B03C443C7B3F231AC01F986D89CDA2A
7E6FB77ABDC6ED915C94599C82A40C1EA99ADB5AEAD96C9DF4B37500129025AF
9C04AB943963B1937E2FC158E08E8641C30244BCE84C994C51A006E2FA12DF15
48D2A52464AA07468A89C5F438A2F4FB7BF43D7099C4B7D232328EC393FF9874
38937A54FA22508C2E224C75A2F56EE8C25D72DE810020692CE11196F6E63059
D9620662B77732448E0B8CCD3C4D769C7121447AC13C838F61B3FDBD5B667B75
31FF9730DFDD8B9C9935E7097F89713BE704A122D8346CBA980F2F7D3138CA50
0DF1DD5816F5F9AD2CA365B07EE4020336D3B50B8BEE40900C2AC7BDEF8F116D
9FC2BDB24B0703477E8992BC27116A2EFD16B0249C224326962C7FE472EA17DC
A185547E628F6167A4D43F1958A2812A92EB897587C41C1D47D3238E1F98DDE6
3AE08A3BBB92170959BC86FF94A10B000355A53737FE594054FDBF636754DE20
F5CC3595287D7FF88871D63C0C9F3BAE71AF7D05216A07CEDB6B6AB0E0658B71
C1442ED3DA847C72623903EE7804F7F069E5B8522C693F71D90361D08A515A5F
3783A29193BD96CFA843C47C97B5CD143E267619CE78D646B3A0114AB9834FBA
0E0BA464A286CA9D0D2A3029098E45A2AC8D75831040D96D2E6FEF420E755F5A
71861336D2D9E75F9D9DD1A8CB72CED89A997C5059D53D4B9640C6CE8EF29878
6806E9159B9FA2648112098F793C04AB7B898778AEE81861CFA7ACD6ED9F9174
F007DDA6CDA8940102A91B5E3A19940B1877990D3DCE36CF9812FFAA0B8D32FA
F9EFA97C5FA817A3DE4A68855A381E44178818012494657613FD6D52BEC23C21
50D9BDA3EAB709093660399DCAD3E21C2D75D09B5BD744F8EC7C292C78B86D87
836838B4F60D9F47BBE8AEDB799DC85F902C47DD4DC79574CA5F8CDF238B6F97
41C2F47B58783D230F3C927550F1185546B95E902A3F15EAABA3B8818274C0CE
710498AB95F100BA74CEBAD8E8087D315D7A32CE417611DFC2FE0D9C997948C4
0B10E0857AE7374CAD69023D3ABE3DEB6027F365B4E1A0EC1152CAB07F6B18F5
CAEFACD0BF10F9EC7CC8B460832EB26F219F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktional)
@start /Fa 238[661 661 16[{ enclmmathex ReEncodeFont }2
1106.96 /LMMathExtension10-Regular rf /Fb 207[406 48[{
 enclmrm ReEncodeFont }1 664.176 /LMRoman6-Regular rf
/Fc 185[723 4[830 10[553 553 6[307 46[{ enclmec ReEncodeFont }5
1106.96 /LMRoman10-Regular rf /Fd 160[909 45[606 1[606
47[{ enclmec ReEncodeFont }3 1212.12 /LMRoman10-Regular
rf /Fe 203[993 52[{}1 1328.35 /wasy10 rf /Ff 135[530
3[340 42[408 73[{ enclmmathit ReEncodeFont }3 885.568
/LMMathItalic8-Regular rf /Fg 254[369 1033{ enclmmathsy ReEncodeFont }2
1328.35 /LMMathSymbols10-Regular rf /Fh 203[470 470 470
470 470 48[{ enclmrm ReEncodeFont }5 885.568 /LMRoman8-Regular
rf /Fi 194[1012 3[650 2[650 650 650 650 650 650 650 4[1012
1[506 506 40[{ enclmrm ReEncodeFont }12 1328.35 /LMRoman12-Regular
rf /Fj 135[739 3[470 18[683 16[838 1[1042 4[574 10[1012
2[361 59[{ enclmmathit ReEncodeFont }8 1328.35 /LMMathItalic12-Regular
rf /Fk 650 2[723 5[650 17[650 31[975 73[578 686 686 939
686 723 506 513 506 1[723 650 723 1084 361 686 397 361
723 650 397 578 723 578 723 650 3[361 1[361 795 2[1336
975 1[939 723 2[885 1[975 1192 813 1011 668 469 975 1021
849 885 993 1[921 975 1[614 8[650 650 650 650 650 650
650 1[361 434 361 2[506 506 2[1084 3[361 4[723 759 27[{
 enclmec ReEncodeFont }68 1328.35 /LMRoman12-Regular
rf /Fl 27[1046 105[956 3[1136 1196 837 849 879 1[1196
1076 1196 1793 598 1136 1[598 1196 1076 658 982 1196
956 1196 1046 6[1315 2[2223 1625 3[1605 2[1616 1[2041
1293 2[801 2[1353 1412 1[1554 1530 1625 10[1076 1076
1076 1076 1076 1076 2[598 717 45[{ enclmec ReEncodeFont }43
1912.83 /LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fl(F)-239
b(A)717 b(5.6)g(-)h(1)f(Relativ)-60 b(e)717 b(und)f(absolute)f(Zunahme)
i(-)g(MC)h(-)g(BIFIE)p 0 TeXcolorgray -741 4800 a Fk(1.)p
0 TeXcolorgray 651 w(Die)434 b(F)-108 b(ormel)434 b Fj(N)139
b Fi(\()p Fj(t)p Fi(\))367 b(=)i Fj(N)13094 4999 y Fh(0)13914
4800 y Fg(\001)296 b Fj(a)15262 4318 y Ff(t)16090 4800
y Fk(mit)434 b Fj(a)368 b(>)h Fi(1)434 b Fk(b)36 b(esc)-36
b(hreibt)432 b(ein)i(exp)36 b(onen)-36 b(tielles)434
b(W)-108 b(ac)-36 b(hstum.)921 9338 y(Kreuze)433 b(die)h
(zutre\033ende\(n\))d(A)-36 b(ussage\(n\))433 b(an.)p
3021 10378 40342 45 v 3021 13441 45 3064 v 3729 12238
a(Die)i(relativ)-36 b(e)434 b(Zunahme)f(ist)h(in)f(gleic)-36
b(hen)434 b(Zeitin)-36 b(terv)-72 b(allen)434 b(gleic)-36
b(h)434 b(gro\377.)p 40953 13441 V 1 0 0 TeXcolorrgb
41662 12242 a Fe(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 43318 13441 V 3021 13486 40342 45 v 3021
16549 45 3064 v 3729 15346 a Fk(Die)h(absolute)e(Zunahme)g(ist)h(in)f
(gleic)-36 b(hen)434 b(Zeitin)-36 b(terv)-72 b(allen)434
b(gleic)-36 b(h)434 b(gro\377.)p 40953 16549 V 43318
16549 V 3021 16593 40342 45 v 3021 19656 45 3064 v 3729
18453 a(Die)h(relativ)-36 b(e)434 b(Zunahme)f(ist)h(unabh\344ngig)f(v)
-36 b(on)434 b Fj(N)28751 18652 y Fh(0)29276 18453 y
Fk(.)p 40953 19656 V 1 0 0 TeXcolorrgb 41662 18457 a
Fe(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
43318 19656 V 3021 19700 40342 45 v 3021 22764 45 3064
v 3729 21560 a Fk(Die)h(relativ)-36 b(e)434 b(Zunahme)f(ist)h
(abh\344ngig)g(v)-36 b(on)434 b Fj(a)p Fk(.)p 40953 22764
V 1 0 0 TeXcolorrgb 41662 21564 a Fe(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 43318 22764 V 3021 22808
40342 45 v 3021 25871 45 3064 v 3729 24668 a Fk(Die)h(absolute)e
(Zunahme)g(ist)h(abh\344ngig)g(v)-36 b(on)434 b Fj(a)p
Fk(.)p 40953 25871 V 1 0 0 TeXcolorrgb 41662 24672 a
Fe(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
43318 25871 V 3021 25915 40342 45 v 47992 4800 a Fd(___/1)p
1 0 0 TeXcolorrgb 48228 6792 a Fc(F)-123 b(A)369 b(5.6)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
29943 54804 45 v -2331 35245 a Fl(F)-239 b(A)717 b(5.6)g(-)h(2)f
(Insekten)-60 b(v)g(ermehrung)715 b(-)i(O)-60 b(A)718
b(-)g(BIFIE)p 0 TeXcolorgray -741 38552 a Fk(2.)p 0 TeXcolorgray
651 w(Eine)433 b(Insektenanzahl)h(v)-36 b(ermehrt)433
b(sic)-36 b(h)434 b(w)-36 b(\366)36 b(c)-36 b(hen)g(tlic)g(h)433
b(um)g(25\045.)921 41098 y(Ein)426 b(F)-108 b(orsc)-36
b(her)424 b(b)36 b(ehauptet,)425 b(dass)h(sic)-36 b(h)426
b(die)f(Insektenanzahl)h(alle)h(4)f(W)-108 b(o)36 b(c)-36
b(hen)426 b(v)-36 b(erdopp)36 b(elt.)921 45635 y(Beurteilen)477
b(Sie,)g(ob)g(diese)g(Behauptung)f(ric)-36 b(h)g(tig)477
b(o)36 b(der)477 b(falsc)-36 b(h)477 b(ist,)h(und)e(b)36
b(egr\374nden)475 b(Sie)921 47627 y(Ihre)433 b(An)-36
b(t)g(w)g(ort)433 b(rec)-36 b(hnerisc)g(h!)p 1 0 0 TeXcolorrgb
856 50172 a Fi(1)p Fj(;)p Fi(25)3167 49690 y Fh(4)4063
50172 y Fi(=)369 b(2)p Fj(;)p Fi(44)921 54710 y Fk(Die)577
b(Behauptung)d(ist)i(falsc)-36 b(h,)577 b(da)f(die)g(Insektenanzahl)g
(in)g(4)g(W)-108 b(o)36 b(c)-36 b(hen)575 b(um)h(144)217
b(\045)576 b(zu-)921 56701 y(nimm)-36 b(t.)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 38552 a Fd(___/1)p
1 0 0 TeXcolorrgb 48228 40544 a Fc(F)-123 b(A)369 b(5.6)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
60177 V 0 TeXcolorgray 24746 81281 a Fk(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fl(F)-239 b(A)717 b(5.6)g(-)h(3)f(Lic)-60
b(h)g(tin)g(tensit\344t)715 b(-)j(MC)g(-)f(BIFIE)p 0
TeXcolorgray -741 4800 a Fk(3.)p 0 TeXcolorgray 651 w(Lic)-36
b(h)g(t,)327 b(das)f(in)h(eine)g(dic)-36 b(k)g(e)328
b(Sc)-36 b(hic)g(h)g(t)325 b(aus)i(Glas)g(ein)-36 b(tritt,)327
b(wird)g(abgesc)-36 b(h)g(w)g(\344c)g(h)g(t.)328 b(Der)f(Herstel-)921
6792 y(ler)g(eines)f(Sic)-36 b(herheitsglases)327 b(gibt)g(an,)g(dass)f
(die)h(In)-36 b(tensit\344t)326 b Fj(I)431 b Fk(des)326
b(Lic)-36 b(h)g(ts)326 b(pro)g(Zen)-36 b(timeter)921
8784 y(um)433 b(6\045)h(abnimm)-36 b(t.)433 b Fj(I)11792
8983 y Fh(0)12751 8784 y Fk(gibt)h(die)f(In)-36 b(tensit\344t)433
b(des)h(Lic)-36 b(h)g(ts)433 b(b)36 b(ei)433 b(Ein)-36
b(tritt)433 b(in)h(das)f(Glas)h(an.)855 11330 y(W)-108
b(elc)-36 b(he)508 b(der)f(nac)-36 b(hstehenden)507 b(Gleic)-36
b(h)g(ungen)507 b(b)36 b(esc)-36 b(hreibt)507 b(die)h(Lic)-36
b(h)g(tin)g(tensit\344t)507 b Fj(I)612 b Fk(in)508 b(Ab-)921
13322 y(h\344ngigk)-36 b(eit)435 b(v)-36 b(on)433 b(der)g
(Eindringtiefe)h Fj(x)g Fk(\(in)f(cm\)?)921 17859 y(Kreuze)g(die)h
(zutre\033ende)e(Gleic)-36 b(h)g(ung)433 b(an.)p 15014
18826 16357 45 v 15014 22044 45 3219 v 15722 20767 a
Fj(I)104 b Fi(\()p Fj(x)p Fi(\))369 b(=)g Fj(I)20475
20966 y Fh(0)21295 20767 y Fg(\001)295 b Fi(0)p Fj(;)p
Fi(94)24270 20285 y Ff(x)p 28961 22044 V 1 0 0 TeXcolorrgb
29669 20767 a Fe(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 31326 22044 V 15014 22088 16357 45 v 15014
25306 45 3219 v 15722 24029 a Fj(I)104 b Fi(\()p Fj(x)p
Fi(\))369 b(=)g Fj(I)20475 24228 y Fh(0)21295 24029 y
Fg(\001)295 b Fi(1)p Fj(;)p Fi(06)24270 23547 y Ff(x)p
28961 25306 V 31326 25306 V 15014 25350 16357 45 v 15014
28569 45 3219 v 15722 27292 a Fj(I)104 b Fi(\()p Fj(x)p
Fi(\))369 b(=)g Fj(I)20475 27491 y Fh(0)21295 27292 y
Fg(\001)295 b Fi(0)p Fj(;)p Fi(06)24270 26810 y Ff(x)25152
27292 y Fi(+)g Fj(I)27033 27491 y Fh(0)p 28961 28569
V 31326 28569 V 15014 28613 16357 45 v 15014 31831 45
3219 v 15722 30554 a Fj(I)104 b Fi(\()p Fj(x)p Fi(\))369
b(=)g Fj(I)20475 30753 y Fh(0)21000 30554 y Fi(\(1)295
b Fg(\000)h Fi(0)p Fj(;)p Fi(06)g Fg(\001)f Fj(x)p Fi(\))p
28961 31831 V 31326 31831 V 15014 31875 16357 45 v 15014
35093 45 3219 v 15722 33816 a Fj(I)104 b Fi(\()p Fj(x)p
Fi(\))369 b(=)g(1)295 b Fg(\000)g Fj(I)22748 34015 y
Fh(0)23569 33816 y Fg(\001)g Fi(0)p Fj(;)p Fi(06)i Fg(\001)e
Fj(x)p 28961 35093 V 31326 35093 V 15014 35138 16357
45 v 15014 38614 45 3476 v 15722 37211 a(I)104 b Fi(\()p
Fj(x)p Fi(\))369 b(=)20033 36688 y Ff(I)20441 36811 y
Fb(0)p 20033 36901 870 45 v 20203 37669 a Ff(x)p 28961
38614 45 3476 v 31326 38614 V 15014 38658 16357 45 v
47992 4800 a Fd(___/1)p 1 0 0 TeXcolorrgb 48228 6792
a Fc(F)-123 b(A)369 b(5.6)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 42686 54804 45 v -2331 47987 a Fl(F)-239
b(A)717 b(5.6)g(-)h(4)f(Viruserkrankung)d(-)k(O)-60 b(A)717
b(-)h(BIFIE)p 0 TeXcolorgray -741 51295 a Fk(4.)p 0 TeXcolorgray
651 w(Eine)516 b(Viruserkrankung)g(breitet)g(sic)-36
b(h)516 b(sehr)g(sc)-36 b(hnell)516 b(aus.)g(Die)h(Anzahl)g(der)e
(In\034zierten)887 53287 y(v)-36 b(erdopp)36 b(elt)433
b(sic)-36 b(h)434 b(alle)g(vier)h(T)-108 b(age.)921 57824
y(Gib)442 b(an,)h(durc)-36 b(h)442 b(w)-36 b(elc)g(hen)442
b(F)-108 b(unktionst)-36 b(yp)442 b(ein)h(derartiges)g(W)-108
b(ac)-36 b(hstum)442 b(b)36 b(esc)-36 b(hrieb)36 b(en)442
b(w)-36 b(er-)921 59816 y(den)433 b(kann,)h(und)e(b)36
b(egr\374nde)433 b(deine)g(An)-36 b(t)g(w)g(ort.)p 1 0 0
TeXcolorrgb 921 62361 a(Ein)312 b(solc)-36 b(hes)312
b(W)-108 b(ac)-36 b(hstum)311 b(kann)h(durc)-36 b(h)310
b(eine)i(Exp)36 b(onen)-36 b(tialfunktion)313 b(b)36
b(esc)-36 b(hrieb)36 b(en)310 b(w)-36 b(erden,)921 64353
y(da)569 b(die)h(Anzahl)f(der)g(In\034zierten)g(in)h(gleic)-36
b(hen)569 b(Zeitabst\344nden)g(um)g(denselb)36 b(en)569
b(F)-108 b(aktor)921 66345 y(zunimm)-36 b(t)433 b(bzw.)h(die)f(relativ)
-36 b(e)435 b(\304nderungsrate)d(der)h(In\034zierten)g(k)-36
b(onstan)g(t)433 b(ist.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 51295 a Fd(___/1)p 1 0 0 TeXcolorrgb
48228 53287 a Fc(F)-123 b(A)369 b(5.6)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 70079 V 0 TeXcolorgray
24746 81281 a Fk(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fl(F)-239 b(A)717 b(5.6)g(-)h(5)f(W)-179
b(ac)-60 b(hstumsprozesse)716 b(-)h(MC)h(-)g(BIFIE)p
0 TeXcolorgray -741 4800 a Fk(5.)p 0 TeXcolorgray 651
w(Zur)620 b(Besc)-36 b(hreibung)619 b(v)-36 b(on)621
b(W)-108 b(ac)-36 b(hstumsv)g(org\344ngen)620 b(aus)h(der)e(Natur)h
(bzw.)i(dem)e(Alltag)921 6792 y(k)-36 b(\366nnen)433
b(oft)h(Exp)36 b(onen)-36 b(tialfunktionen)434 b(herangezogen)g(w)-36
b(erden.)855 11330 y(W)-108 b(elc)-36 b(he)411 b(der)h(nac)-36
b(hstehend)410 b(angef\374hrten)h(F)-108 b(allb)36 b(eispiele)413
b(w)-36 b(erden)411 b(am)h(b)36 b(esten)411 b(durc)-36
b(h)410 b(eine)921 13322 y(Exp)36 b(onen)-36 b(tialfunktion)577
b(mo)36 b(delliert?)578 b(Kreuze)d(die)i(die)f(b)36 b(eiden)575
b(zutre\033enden)f(Beispiele)921 15314 y(an.)p 1062 16022
44260 45 v 1062 27127 45 11105 v 1770 17882 a(Ein)483
b(Sparbuc)-36 b(h)480 b(hat)i(eine)h(Laufzeit)f(v)-36
b(on)483 b(6)g(Monaten.)f(Eine)g(Spareinlage)h(wird)1770
19874 y(mit)448 b(1,5)217 b(\045)449 b(e\033ektiv)-36
b(en)448 b(Zinsen)f(pro)g(Jahr,)h(also)h(0,125)217 b(\045)449
b(pro)e(Monat,)h(v)-36 b(erzinst.)1770 21866 y(Diese)439
b(w)-36 b(erden)437 b(ihm)g(allerdings)i(erst)e(nac)-36
b(h)437 b(dem)g(Ende)g(des)g(V)-108 b(eranlagungszeit-)1770
23858 y(raums)434 b(gutgesc)-36 b(hrieb)36 b(en.)433
b([Mo)36 b(dell)434 b(f\374r)g(das)f(Kapitalw)-36 b(ac)g(hstum)434
b(in)g(diesem)f(hal-)1770 25850 y(b)36 b(en)433 b(Jahr])p
42912 27127 V 45277 27127 V 1062 27171 44260 45 v 1062
34373 45 7202 v 1770 29112 a(F)-108 b(estv)-36 b(erzinslic)g(he)343
b(Anleihen)g(garan)-36 b(tieren)343 b(einen)g(\034xen)g(Ertrag)g(v)-36
b(on)343 b(e\033ektiv)h(6)217 b(\045)1770 31104 y(pro)460
b(Jahr.)g(Allerdings)g(m)-36 b(uss)460 b(der)f(angelegte)i(Betrag)f(5)g
(Jahre)g(gebunden)e(blei-)1770 33096 y(b)36 b(en.)434
b([Mo)36 b(dell)434 b(f\374r)g(das)f(Kapitalw)-36 b(ac)g(hstum)434
b(\374b)36 b(er)433 b(diese)h(5)g(Jahre])p 42912 34373
V 1 0 0 TeXcolorrgb 43621 31104 a Fe(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 34373 V 1062 34417
44260 45 v 1062 37859 45 3442 v 1770 36456 a Fk(Haare)h(w)-36
b(ac)g(hsen)433 b(pro)g(T)-108 b(ag)434 b(ca.)17663 35933
y Fh(1)p 17663 36146 471 45 v 17663 36914 a(3)18483 36456
y Fk(mm.)f([Mo)36 b(dell)435 b(f\374r)e(das)h(Haarw)-36
b(ac)g(hstum])p 42912 37859 45 3442 v 45277 37859 V 1062
37903 44260 45 v 1062 45024 45 7121 v 1770 39763 a(Milc)g
(hs\344urebakterien)434 b(v)-36 b(ermehren)433 b(sic)-36
b(h)433 b(an)h(hei\377en)f(T)-108 b(agen)434 b(abh\344ngig)g(v)-36
b(on)434 b(der)1770 41755 y(A)-36 b(u\377en)g(temp)36
b(eratur)458 b(um)h(5)217 b(\045)459 b(pro)h(Stunde.)e([Mo)36
b(dell)460 b(f\374r)f(die)g(V)-108 b(ermehrung)458 b(der)1770
43747 y(Milc)-36 b(hs\344urebakterien])p 42912 45024
V 1 0 0 TeXcolorrgb 43621 41795 a Fe(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 45024 V 1062 45068
44260 45 v 1062 54181 45 9113 v 1770 46928 a Fk(Die)357
b(Sonneneinstrahlung)d(auf)i(einen)f(K)-36 b(\366rp)36
b(er)356 b(wird)g(st\344rk)-36 b(er,)356 b(je)g(h\366her)f(die)h(Son-)
1770 48920 y(ne)463 b(\374b)36 b(er)462 b(den)h(Horizon)-36
b(t)463 b(steigt.)h([Mo)36 b(dell)464 b(f\374r)f(die)g(Steigerung)f
(der)h(Sonnenein-)1770 50912 y(strahlung)597 b(abh\344ngig)h(v)-36
b(om)598 b(Wink)-36 b(el)599 b(des)e(Sonneneinfalls)h(\(zur)f(Horizon)
-36 b(talen)1770 52904 y(gemessen\)])p 42912 54181 V
45277 54181 V 1062 54225 44260 45 v 47992 4800 a Fd(___/1)p
1 0 0 TeXcolorrgb 48228 6792 a Fc(F)-123 b(A)369 b(5.6)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
58253 54804 45 v 0 TeXcolorgray 24746 81281 a Fk(3)p
0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fl(F)-239 b(A)717 b(5.6)g(-)h(6)f
(Zerfallsprozess)f(-)h(MC)h(-)g(BIFIE)p 0 TeXcolorgray
-741 4800 a Fk(6.)p 0 TeXcolorgray 651 w(Die)426 b(P)-36
b(opulation)425 b Fj(P)605 b Fk(einer)425 b(v)-36 b(om)426
b(A)-36 b(ussterb)36 b(en)423 b(b)36 b(edroh)-36 b(ten)423
b(Tierart)j(sinkt)f(jedes)g(Jahr)g(um)921 6792 y(ein)450
b(Drittel)g(der)f(P)-36 b(opulation)449 b(des)h(v)-36
b(orangegangenen)450 b(Jahres.)g Fj(P)33878 6991 y Fh(0)34854
6792 y Fk(gibt)f(die)h(Anzahl)g(der)921 8784 y(urspr\374nglic)-36
b(h)432 b(v)-36 b(orhandenen)433 b(Tiere)h(an.)855 13322
y(W)-108 b(elc)-36 b(he)310 b(der)g(nac)-36 b(hstehend)309
b(angef\374hrten)g(Gleic)-36 b(h)g(ungen)310 b(b)36 b(esc)-36
b(hreibt)309 b(die)h(P)-36 b(opulation)311 b Fj(P)491
b Fk(in)873 15314 y(Abh\344ngigk)-36 b(eit)440 b(v)-36
b(on)440 b(der)f(Anzahl)h(der)f(abgelaufenen)h(Jahre)g
Fj(t)p Fk(?)g(Kreuze)f(die)h(zutre\033ende)921 17305
y(Gleic)-36 b(h)g(ung)433 b(an.)p 15133 18272 16117 45
v 15133 22349 45 4077 v 15842 20740 a Fj(P)181 b Fi(\()p
Fj(t)p Fi(\))368 b(=)h Fj(P)20930 20939 y Fh(0)21751
20740 y Fg(\001)22415 19455 y Fa(\020)23209 20217 y Fh(1)p
23209 20430 471 45 v 23209 21198 a(3)23813 19455 y Fa(\021)24474
19762 y Ff(t)p 28841 22349 45 4077 v 31206 22349 V 15133
22393 16117 45 v 15133 26469 45 4077 v 15842 24860 a
Fj(P)181 b Fi(\()p Fj(t)p Fi(\))368 b(=)h Fj(P)20930
25059 y Fh(0)21751 24860 y Fg(\001)22415 23576 y Fa(\020)23209
24337 y Fh(2)p 23209 24550 471 45 v 23209 25318 a(3)23813
23576 y Fa(\021)24474 23882 y Ff(t)p 28841 26469 45 4077
v 1 0 0 TeXcolorrgb 29549 24763 a Fe(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 31206 26469 V 15133
26514 16117 45 v 15133 30396 45 3883 v 15842 28787 a
Fj(P)181 b Fi(\()p Fj(t)p Fi(\))368 b(=)h Fj(P)20930
28986 y Fh(0)21751 28787 y Fg(\001)22415 27503 y Fa(\020)23076
28787 y Fi(1)296 b Fg(\000)25483 28264 y Fh(1)p 25483
28477 471 45 v 25483 29245 a(3)26382 28787 y Fg(\001)f
Fj(t)27516 27503 y Fa(\021)p 28841 30396 45 3883 v 31206
30396 V 15133 30440 16117 45 v 15133 35048 45 4608 v
15842 33191 a Fj(P)181 b Fi(\()p Fj(t)p Fi(\))368 b(=)20582
32293 y Fj(P)21420 32492 y Fh(0)p 20225 32882 2080 45
v 20225 34103 a Fi(3)295 b Fg(\001)g Fj(t)p 28841 35048
45 4608 v 31206 35048 V 15133 35092 16117 45 v 15133
39699 45 4608 v 15842 37843 a(P)181 b Fi(\()p Fj(t)p
Fi(\))368 b(=)20225 36944 y(2)295 b Fg(\001)g Fj(P)22672
37143 y Fh(0)p 20225 37533 2974 45 v 21386 38754 a Fi(3)23627
37843 y Fg(\001)g Fj(t)p 28841 39699 45 4608 v 31206
39699 V 15133 39743 16117 45 v 15133 43820 45 4077 v
15842 42211 a(P)181 b Fi(\()p Fj(t)p Fi(\))368 b(=)20092
40927 y Fa(\020)20753 42211 y Fj(P)21591 42410 y Fh(0)22412
42211 y Fg(\000)23873 41688 y Fh(1)p 23873 41901 471
45 v 23873 42669 a(3)24477 40927 y Fa(\021)25138 41233
y Ff(t)p 28841 43820 45 4077 v 31206 43820 V 15133 43864
16117 45 v 47992 4800 a Fd(___/1)p 1 0 0 TeXcolorrgb
48228 6792 a Fc(F)-123 b(A)369 b(5.6)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 47892 54804 45
v 0 TeXcolorgray 24746 81281 a Fk(4)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
