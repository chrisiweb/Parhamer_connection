%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktionale Abhaengigkeiten/FA 3.4/FA 3.4 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 08:48:28 2017
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ LMRoman8-Regular LMMathSymbols10-Regular wasy10 LMRoman10-Regular
%%+ LMMathItalic8-Regular LMRoman6-Regular MSBM10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktionale Abhaengigkeiten/FA 3.4/FA 3.4 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0948
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
dup 90 /Z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA852
EABAEAAADE1EFD16DA13E367A6FD05F6C5D61A321B185BD0D596400C8422C933
BF332800160813A68AFB7152FCFAA4AEB9B5B81AFC43E9A300ACDD1427BDE5B8
0D5893CCBC0591F9F5CE793D0E1F724351C5C5C9A3A1CCEBF7FF3714E6583082
A36EF53DEB9B1B1A3B7727286F9D44570BD8EC91F9F0FA8582A30E6C46B3B7A8
3DDA07BBFFBC518DEEDB5696E3C8D0FC88E54BD0FC54C60DAEA0B344BCFB186E
E214640DAEB7F010A75680A3C15376F4F7D0B2E42110941575991A64DFC40439
39C3BC080A089F21FA3908F12425FDB664D6BD53DC1D31F58E2DD0AC3264B0BE
1D609D058A09F8F110AC4CA81D9A737B3CA879CEF1F4C1BD0D8B544FDAB25C64
686BCA1A7BA63A455D3BDE025B5DC251AE1748B790BCD307FDF8341B4706FB26
D62AE2E4D33DE35A8EAEBCBAC4C90704498E500DEB4C2CF96C331A60C8838288
EF65DC7B65B4591B37A14D09A5CA4B607FA077160ABA270123A72697AFDE8DCF
CAD3DD1EBBE5E79C53C00D98603E14A0B61FD99C4A6D8AC8138B2C0FB6C7F03E
D13E4D4407A04B727E8DF0B45697DC409EED6D354D17449F769AAC79E028B9C8
BC62E59A72F2999AD5EF909942C19F6EAD23F35F97E5713B2F358847726D3FFC
C0E7944696484EB8C25B51A882CC9A041E4E7D45DE9958C2F8344716C0BE99BB
61B87E74152B25C8069EB5036FFAC3DB4A8F9F407AF8F40634E326C360762A4D
AF354F609B6DA61C429791600D3A5FE9A8E128EA357F21BEA1AA23ED92EDEEA2
91CD4AADC45099E62D0EDB437B3A2C03D34B8B7D370D36ACA398451DC17A8C76
E01E537D1CD1E229E6ED42EE703C1FFB852ED974325012D973A6FC079EAF9617
31EAB278A9FF15D1A397B7541239DF020EFD56A0D5CE62D17BC0D92406697044
A2C322D9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A110651F4370133E3968EE80FF9C2E54953EDACCBA
2549852043B5A93B09ACDFD025365A4F8FBA3FCC4DB60700C22ECDF23E95E01A
4C7B87E4F5D46CD2AEF5D46CD2180E4304BB80E17A83397A677D32DEED9BC850
B4C056641799994DEBD48FC73D616143FFB85D78805A95B8CB191C775A2DDEB5
FC8B803AC7B461E0FB63D746090AC3E759366E115437A8EA8CD328F309EC0960
36351451AE7425A26CDC319A31BDE48F68B947574C1DB2834483C460A5B2429A
D49BD462D9C9F75FBA92ABD47A5EF18C3A43B9B7A3D1EF1AA43A6A68E4D42CDD
2484CF47C0FB3A68121F424FA4B29058841D9821D7F955D3824CB1754278E8D5
847116509B7D3B960EE375F1DCCB4CAA1CCCDFA0E61FE01518738F7E6B887898
261117EDC211226EB3A9E0B251FD4CF4FD2543B7E6F394D3D262DDCE224AD9CD
BDE8CDCEAF38C0BC9E406A35F44C6B412ABEC730D9DE3716C5B0A87BC7ED856A
77E3AEEB9912B64A5298C2F4552CECF63C84F805508C4A0CB98910441699B722
2BE7727547825EFBCA21408C5F84E3E7781B5BA336E0CF740BE6D85F8F6F8631
BDB1D0AC05ABE2EFAABC930F472F93E247E29CD9852001BD2E16E51AE3E1A77D
4B05540EDA577F3759A940D23E73451C967666B5EE5CC6EDDB55CFD4CD875072
FF79F4ABDD8F935A11E83F9D6F40978896B8F7A0B472D1F9FFC68F7C2F5EB1DD
447832B4E1DBA7870A949E48C9DA6B47BA581F7D24C5A0B90A66F0FFC044D1E8
0652D0836E0FF5980A50D39360DC793D9C260F9A68379C031C3F363054F84888
CA17948C9FB31CF86E555B4815AA6C826666025BB984A519FCED4498E4A4CD61
BDDA5F652B54A3270DFE501ABDEAB9327E296740F0DD9B42A45879E285C8E0D2
DD61A71643555DD007B6477A05334C6D7D079DB00F337979DA04BBD485BD5630
0DA794E86C9815AB3FEB37E78106CA0A3441735AAC9EB49CCA33DF4322929D86
32C4BD136C89169D45718A88BABCB2844362B0652A6345C6EC83DFEFE0994552
32455B3CC14F0D2FE83F60403C598F8E360AFD7C3A3F37E771BF49F20E7ADF22
AE9612796DEB9138059A4C12D4A8B8A37DCC221CE80014F807A53945E21FB479
4956F9E37B87EAE0447EDADEB00764A38DAB429277B779104D1360C711A40FE7
FE508CDB795A3BFDCC677893634CF91C45816B9AC1146B1BB7AAA74FF92F4273
B18D515086F457B5AEBA634AE5C75971733044D64738F071F82148EC95F4E53F
D20E5A2A4479D59A73A9D61F3E4E4894BB92AAF0AE56AF9ABB385D300EAA72C4
388B62E7C32A29313EAAB849169FE98FF9B3CFDF3FC9692113CC15C94DDD2940
49748B473FD5F4AE9C34F0554E0BAA2290B2082F996026ADC420C676AD59744E
3D1C8132F311B70AE10E12E863CF044F38542BB9CEFC017BAA8166A39AD8117B
F368B91934BC6F0BB1B2E7C4F285F9BD614A00DE6825572189A19315AD397814
2E2E61CCC0992B66DA71D8BE22836E6DE06A54674E34DC85646396AA84DF28CF
38994138E0F4E0A3F1604049D39F50717E4670442DBC451B029ED37E22709B8C
11F4DC6A1EE18BFA4AEB8E8FCF1565480CC3C141D6375466FA0272B67393DCBD
86FE4CD039BB44D2BEC68717E95B7597AD7CACDA2A6A4E8808BDF0ABA0997D0E
DBD2BA7C8586E942973B8ADC21BA304ABB619E86CEF1C8D3D84C9892F62613F3
FC722D561C0B4D707CFD45E588F7F0CEA7717976FBB04E6A3577A2141CB8A8CB
6EA47F3B1F8BB5B13D7B90A4F95E54057A005AAEDAD9D7CEBA399B3FDFF494D7
8EEF9EC6AEEC046812CE43B02B9A8F4A127E7C98CF0C088786119EB7E0E7EB32
C428F531FF5E355D691E098D1FB67AEC40458600B1A87AE31E65B7EFE7B1CB02
5613E53340E473C1D5495826470F3A1F450D1AC2C81C876EDB818BA0919DEF1D
3F443A32A724A003C23DE44D0A1774265B27B89FAD2A00A0F8325EF3029125BF
0C973EE91DB8A81E4164F827F359A4630C2955964D0D808BE8D16D2EBCD7AD30
50E68B2F5B879433A41FCA23CE3D342D8157822D42F334B8793F13FB6797C5E5
249834816FEB195E5FB218CCB914449B44FB92C6E63D1999EE615767510AADA4
364CC2035DB3CD08B107110C866C7FC5A1A8A411A597335E6BCB62888AC8539B
369E5FE68D9DEA3C0DBCF7C332C1413109E975BFFF13E7D0BA8720C1A7936015
028480F2CE7EE814B92E5BFEFF479612753E3B373D0E5E288AC7CC5D3A751095
4895B6583129FB837AFE9E5EA65226535F722426F039917C6C2E033240C86703
508D2380278FB9B8E12B455199E01A4C7B87E4F5D4EC84E9D21FC68D0D1359FC
7996DB1B6A97E165EADC6CE23BD6CB9700745AF7FB6DF76A2251C779DBF0649F
15D26FD05EB16A7702D79D42364FC91AC88F98EE11E8609E02E01CE344598BF6
B0D1B1310C75AC850FB4C642FA3710C2C9905F224C87890C9DA4E53930BBDB54
CA2AEF866BDC2071045C3D71BAB3CF386AE54D6D57ECEEF7A86A51787478FAF7
EDF2347DFCB070CF8E3093B06D0B80CED641940DD7A92B277C63B178F5E81127
0F2F4E4FB0360E4923BF1A75C78A77CE2BB4368A7C8F48639FC3A0BF18262068
E043BAFA2CCBCACE0875E368521C0D91FF9ABF781BD5C69282459F75ADA02D7E
D5D348F7CB99C78CFD41D054B08B9AD11A4F25CE3652A01C7033683D9A1ADF85
5A6BEFC921B4896D04E61B913B6C417E0AF5A4EB59A67192BCA9ED8B4D70ACD4
EFFD55C41DD3831AD6161DCDD67FFB74C773637429CB45EB3EC279B505D8299B
2AAA7A05FCEF74AADC754D33163A47C93361B58F38ACBE8868CC263D0793FD51
0BEFD0B8DED7C00CD9A60AEBBA3FADDCA48E2745359AE31AEDB60F54D334C1FB
8CE7C6CFA4536829527A871675F108B3A973CC43AFC2BE532ED012C3EB58266C
BEEBFEAE16F228285B627BE31FE6BEC3F374AE853CB3E511385FDD62F98D8CAA
ECD64C7D8468DA6DCF2767A73AF89279E81D9CE04C5C360D7677FEFC0BC3255F
01003FBC34C53EEDB7645170A6A6B6C1A85D0058926158D713B29EF1F9D60352
A41DBE68A7816F315788F094FF4AF02F686A3D22F12830D995534A8D82E4B822
F07B115CAEA24F19126C17DD16A3913F27F12C896BDE5C6BFFB9251338B976C4
056DFB27F053921193C59DB289A4188A942F2D2D868F92B8459BCB9EF09ED7B5
2B92B00BCC6ED4FE1BC82E285FD99B6CC9808D4BF6C5E91C51725CC94A1958AA
70AE9037BAF2779ED8034237F25540F71DF81701B07933495A954F676F7DFA49
F81BA6B221FAB4FF6EAB642A91F1947AAB4A780D034BC00B16D7C4D77CA1AAE7
242CE5BE6A645C2653FE55D062B786BC3C6651B6A1CD604A45763B67768AC526
1DF9C7E081A7F60049B5EE91E7C3F3F02E3B8751E078517F614A52C9CF58B49C
1D1550F2589FE68B29179A3E97A3F0B35A3FE8DF5B26B0E8BABDC5FCEE3EB404
54892CE429C3ECA8635B7A013061A8BB2B0EB98CD8674AB5A33FB9835B0D1EB4
B6F550DC77164C5F6B43342A87FF745965DC919A12B63D7058BD4F4BD90D4EC8
361D3DF55B5BF4BE1765CD19CAB0F92A94AD2E091DD7659A4DE4DE812FC92035
4999BE909721075D1D40A984E6E75ABA2F4AF1A7D59300C44EF44E7060A9FBF7
B5252C0274C581A2005CB515170BEC2C09C3EEF80AF06A0B3E3A704A3B79B914
B6737628E56BCA749F4720DE9195E8559ACAD8346F7BD9DED0B9584FED157922
B29CC828ADD9B2582CF6C3178700E56D15B3AB9AFAA3E9D10D4B47F75D05CE2D
81DB06B129721A9135C29F9C2C2C9C3FC2897183D705A37702223D1466A03D24
67AD61286FBBAA4725D698612300458A151C340BA68A9106225ACDC6D829F002
A20624B2659A7011A9657AC8B869C2FEB82AD03AF067FC6D600734F59939234A
15ED0A6402505729BEDFA52397A053B37ECC29D2E0AA06A2BF72DB85657F4A35
58D4585AD1918E86DAACB86054F56F7394088DC50A1C1FC14A0F8E5003D4703A
071AAA2FB6B31D984F0072AA303D33D5478995B533818649CC62032B5D3A3F48
0437323E1DFE2E69212EAA61EA27F9EA185D6B4A80C1BFA827E4F15E623A96FA
4C467943C618A5E35267223F46AB148E74D8D1B986B2EBAE55077A0E54BA5F4E
CA8379F7F7BFD9CD497E66CBE3728B6CC761E56E90A48FDBEA688E80FA438D78
057EA80AF988C8767E67C90E0CCB24824503570117323252722787576A552F56
5387D8D2176685B1A58609AEC90E71132EABB4AF737A7AB1D63393DB4A3AADCA
389CE1ACBF20AE2FB1EB4802C331780943D1C667EAC9A01B6176AD76F2D3E88E
98A5679207C76C999903969568B43673A80D0C5108E8116E5F5C2F25A54FE587
E55C037EDF4C9BC1D95FD0DE382839AE8C789A6339F7D36DAFE163824896DC2C
78FC9DF1F980D05D8533158A7D1941871D0016ED45EA05983F88B9E7E3262FB0
36E1F51B26BFCAC3915932A9CD8EA9FC589975823965AA4D2FC6AE27B27A17C5
10EB9072FFAE0685C7C24E70ACB8564454277C41C28075ABDC428D3809A6BD65
49A52A6AE38C80AFB8C867AF2D6B55B800BE51509F685173FC157CA62976128D
48E72C15E739FA6D2412BFB5783DB3C0F6D60E34BE594B65D769B6340202E77B
33EC7CF4718DD267EEFF4C0000F2F317ADB833E0D0DDA4D02A93E18795A8AA1D
4994D871C6C5B81488F425782658BDAF63E8792D79340D223C92CC01B7E355BD
A077E525640CF211E7A3B8DB7BF746E85C18EC1FCF0C423A86C57CBAE8F9F82E
65EDBCCB17469C47E7B6B66DC8BDB8552BA01AEE38E1205B077C2F2C646FEE57
99A02E0F53322EEE450F6DC39A4F03032CCA7A8320F6B01B4C39C37DE56BA266
2E21344E73C74148C1ECA7D4F858CE686804C3F119899F5BB3DC8DE39690B59F
D2708ACEE9F19DCDFC2F1E54AD17895F81828655204581AF0B98038CA5F5DFF5
D325975F280CDE4402EC81ED6EE1D304C8D933CDDB280F05DD157E37A6EB7BB4
51424B682DB6CE16E840BD0577CD58A2FC5B7D170AAA239E07DF91A1C10223AF
53A16B1DCD7C5DF152E571C9E7318117E3200AEF170495FC898F22ECC3CBC849
8CF1AED08F797E67C90E0CCB24824503570117323252722787576F4CF1A672DA
6A04C28C460DA2A483E9826D8813326765D2A528C6A92646975A56E261E3C169
37CEA1C949ACC063FEEAFE31C8A721C2D46AA00C10681BA9970D09F1EF4676BE
5E02D7DC4613C87ABA83D059ED0635D5874A3671EC6B08F2A0B3374650DBA970
A8893D25DCBEDF56ADA1D011C03BFC4D497466C7F09105A287FB8C8D3083CAEC
5B4F7B332E904266FCB27950759D9DF1DC35FC7A9C4C4799419A851AF73C1978
E6ADEA42A238CF1150B5BA091FD30CB05C0AAC0D6FD8486C034DF78B77054829
D7A079D7BD85B9A80845B563220566FEB8F341AACA7DF6DA060ACF1112FA31D1
0565B2B293E7A6C09E2E8FBD459825415B084F754454ACBF44DCF4961F68DBB0
644E77613C9E96ACB55A77DF4812D900F42AF9770E51EC98088D8FC81C7A93EC
9FC3BB5BDA3619E904570286AF49CEAEEAAEEE0AC1EDF4DC2F53275011EE991A
A96DDF4C96A9E0D8E354195A2563759DFE0183C8D67B449516EEB59F22B42BE3
2D7B1631DD1E36137B9C75F2C99248D4FB86CB367BB50ACF8FBB2C8A2EDB17FF
267D0F21C35BE86E068F98C3564F42D2F7F26014DE37C4DCCB6B30860F43089C
0A6E1E7B4D9287CE71718F81073EBCBB4386C5F4957F220CDFF1BA5AFF56910C
49B957170DFE24CEF8234658524B0071B5582DB34872C321F5D6A82C3B0AF842
D748E7160373CAD07AAE053155493BC317F89A8940552EAC2159B49C1DB34B25
67B50D0B0F2BAB32DD9D471FDFBE9B4D20B0BE8BBE3C1A5459A27799E63F136D
C58DA8682674E24838BF99B06FA68C91E1797DB85D924C037C275BD496F93E01
565EF63E388BFB5372277A752C858F67901B52715557491B4DED0A19A1E6464D
99B41FC0AC101E91B84180444A0A928894F8FCA116CFFFF88C6F1C7BF34A0E25
EFB2AD7503D23492E7E980B2C4324A4918DD087768EC44A893A7EECB6D95C35B
B87DA2B112A3E5F0257A53249617F3F4D9F5729FC7C25090211470F9D3B10BF7
FE4019611CC67279792C59C002037F13240A333B2039FDA78228FF7FFF776789
5FB02F823B2CAEFB944B42D689B020B11D38ADCBDC1AD716F75A2C6565B6D04F
A90E615D06A805EF2EA704243FB382621C005388966DBE3F4C2EC9888B56E962
41D345CBE471FFB3B78C4FA50EF1BEBA5095045ABA7952457E62E4081D5CA62F
44DC287DAE5C2DBBCA73CAF31025A3FD47B8B313E59528F2881E4C77381AE42D
708DF8E5C93474AFDFF39C78E4003E7B7FE30D31721B0ADF552294F3AEAF6C9F
4EEB4990475FC4232A38D8F3903D81C9A329939DB5396510900CD5D522C5E9DB
C5C59AF4C51B407D44468B5E2614DD937194ECD03E78CBB916BC57037DBE008C
F0CCF784147D8580979FE5FCB204DC95F10D6E5571D4EF121855C1086E047F04
3F4D780E9A34C3E671B402F789C9F3C869F0FD12D2A1FA3458D37F8CD2E85194
7683E050B6D2E4F51FECC9351B42923E388B70E7C41B77DAE3DB6C579E3A28C6
3E8E38D62A92755377D1274604BE610997CE121BDB9CED994238C39531CDDC19
7EAC2414615E79137C52F372CB9CFAF7DA3CAF003473DBA5C03B5BC597E5C182
CBE1F42E739B6485473B414FCCA4D5C10FF38CCCA54DA33831938E9392DEF759
4DE827864CD1D0B2F50FA679945BCA6A71E4329DB73E7F29098787D96D89D30A
3C961F55E64983F69651D5206CE47CF745E42FF494201D7BF2AEE8664D6AD229
D31B6E7713609222EC88AD13BD745CE175B921697F9D9FF0803559FEA2110988
23531BE96D98F0401D2545E9FACD008B4ADB50EB9F049AABB576738EB12DA190
F7B750529BEE0764347214528AE43CB7EBFD4F38C31CF4FBD46EB44215D6E646
EC32B1031A6A54A6805B7F680B56CED7F1984220443B845A9FBD9CB9C38B9396
02D8F7A3F70B39F1723B8E668827FBD165657C485FF7D48E2C2AA8284ED768B1
555C02AFC9FB543ACFB65DB1A10646D0762B400B49288C480351F7DC67048E5D
A26AC7D0ABD2820C2F4E7B76F2F0D593E7F8D1CB8EAD24B2F8DE2F54038936FB
2D9659D413E08C97C832D3A03EF24ECB073936A0C035ECDD9681A52882BB4E55
C113EB226EDBFA60AF43C7D37311FA695AF97F91EA727C3FD9D0C0217C057987
87881D07CEFE01902B0D0F7D8913B4E954FB295B5ED5498C4A68B73340A25409
4DB0024341A7BA745D8F3DF3DD0D5AB028F2EAA1AF13F4F8F96019FB2822AE4D
7FFB00D18FF44D2B0659D8818C847E21917F8043CBFAD9A3BADDFC68DCCF67E0
FEF88AB76E205570691C6063359CE9DBA2E3ECB7B59435E44A8B4AE46E1C2BDE
A679FF899B2E62D89D132868CCD003AB7AF9961F0943FF5F02016DD6F0563A26
851D5491A897AEC52D74BB6747FB9CD5A633DF53752834D3CE0EB2B7D7775E39
5BA4BAF7F82F0850D4EC408D5FDB7470CD59E8576E72A8186570F0EBCAA0CCCA
D7FE46DAFB0044DB29A8B801321969CD052FD61493FDA21156452D2865572235
B8CEACFD7733CEDCAA991212FC3C15A7E8CA6E083C0034671A4E268BBADA4583
A16C3C57DB5F720871CFA9672BDF5356746638CDD9FD68E308DDAD15D5676372
A863F05EA4BFEEBD5DEDA74B52C8EB0BA716FF6C6468BB98385F009C20BB8434
DAA8EC8FC416BB45F9DB9C98773585EA5E4D316AEAC8CB4182A887EF4B289F0D
3573D61FA865EBB3E287937147C9BE9926DAAAE4C59ACADCFDA1CF32A9E980DC
7946713AA2B67ADE09E2FD2209974B99C3A0363AA5CAE125EF0F3B74E35560D1
6C07063DFA0A742BFAAEBD91144D26AFEB983E71575D89DA575AB19DF8CEFDC0
FA2A5EF2622F879D80738E31D04524CDC4DFD91254F5F7DF55FE68CAE7989878
5FA31D557C86F93742930EB43CE5F45809AC88B5FE9E89C2EFFA64B2ECAD898D
39DB7D202BB69739202BD31EDAA120CE54ED0DE7EAAC5065B4F48C0B7DBD8AD9
FF3B7B5B4A1B7CA0542072597BA50F8F45B3B08141DD5CDEB790D76C36E9CBCA
5A955285C130E0EF728A401986C50D3DEF377CAEF216A5A795DD63F3C6659BBF
4D2971663D0AB84621F15C186C06199CF885D233DE4656E4CCC1AC1A5762BE48
F5FA88A3AA47DFC0FAAD37018CCA129A4897876302C02AD8911B3371DFA6452E
0BAA0519CB64DDE6282787A7F448D78DEE9271F19E6331D554E6829242F1E05A
A1A3BA678F42355A6F1123474D93C05C07B8689FC4885699E4BB766350BA721D
100516CB839EDAEB4DFE011D1947F0D4874EBFFA5673390D853D8277AB6758D6
8E11567ED38212B204347BD00B461544B85F64FA6D6130832DC718E26691AEFC
1DD6435FC6A7C2B91B672FA23D9F875C001E76ED42D71E62DA447AB71A060B51
99BF7899D41F602E326BF53E4F91B77B22E158BA172BE33861E18AAF3A48C72F
9BD37EB716ECD75C6A6CAF0F0FB5F6A73A47FFFB9D6414E7013B7D984B3A18E6
75655F4CAAC54F1F933DE269C0DF2BE55B48962C844CABB7BED489A190D1E853
9853C0DAA181E59ED9410F4D901B9CD2061595FB27C9B1720C97C551826A537F
BE9B5F897B957CDB27ABA4802F0BA02D8DDC0144E7C1BB169635270568E060AD
7BF221339567C68F6B8CD63633DD6BA618557B6798E9F793E6C866B334A71EC2
3B34833BD3B6BF56210B6FFF3953D0944D30855CB73E7A7A981C9CF9174322CC
22362D93433F8D716F159B035A561C376465F9331E5C7BDD1DA502EB95C716BF
DCF80180EE6DC71C01AC6AD353810CA7938D83B174577EF9C645314BAC0C5D26
C1076AA31C8E894713849EB6F8AF8007B3F27A59C82174638FACDEA968C7A123
2104B287170D086BCAD5C7C2BB9C184A5F3F9186E7F3B1D843EB1118F160769E
D9844B47A8A2CC08811B93D94B01FE7AF62D56594BD31845DD8EF67D1D889703
646420B074E222B6426D8AF577A5B7F2B019500E8FBD9E83B2C925BA9BF62903
24C59F30816B248D320852F6F0BC092B0CBD2223900A5A4D8EA5A11699365223
82A3D7D73CEBEDF433870C0523C3C8A7F3AF5DE044750BF9BA8D07C3D70161F0
724055E78899DDF3BCC34D14196B1E24BDDD67D0110B8331410F1DCF9E65E733
8B42FFA0B337AD7CB84CD7CC7795A8F1E7197309DAD0349A9659540C28723810
DAD7CE08EB085D29AC7925CE02513B4E614C0862D035E6AC70E1B1B5F02E969A
DF6CDE36D67EB79A6BB67B5CF26F8C6A61D41E773D3D0004057BF9DE91B80648
FAD40756621200E43834B0CCA28532BB1E7CDD3327289EA1C3C455D8E7D7F669
5055586AD4366A741031698AA060ACD6CBDA8D00D12D8F361B497A5239CBC501
43E098CA65841533DE0242731B79A1A82CFCE9E49B19F5D32E2386B247139DC7
37A0C0E3D0D1237B3FD2E75B2DEB5195839A638DE491FEE467F68D25CA5115B3
81E6D61A9C9A71CD02986992B15F4CAD81E8CD4B2A1E85BE0192A4B722775DB1
D43ED534CE92916843FD101A6FE4D552944258F3184E28421EFBF0F6600EFA1E
7D08A1D454FC01407126D3973FE22CD3AC4F6FBB0AD7B96D842474D1DF235DE8
9D464EF44F2C9297ECBF2840EC61A089DDE23DC9E3DEF6471946061D0DB6701D
0563A3792A1FD51E5460CFA0338DF1F5726862FAF91505153343C3BB0884A7B6
0DAD17058B8E88AA568ED8E38E0955579FE200979E292B3B57E1F7A9FBAE495A
2A25D5A813D1536D5471C3ED727BE7E559B6E54B0C7A64D4A2C86BEC799E6806
C49C1636A77020753AE9AA57C1CCA7866F6543CE1B25AFD261C434D1D4CF4FE9
C907B8468C530A546D701A3B92313C397F0A208ECDFCBEE936D0293C010457BC
056BCA70A7E3B757A8130BF3BC078B17590D62EE62126F8F3B0DFB89AA1D0FA3
717BF3CD52E7FC86C8FE3A9FE76321F3DF1B8D279AD66877E0B05E0220FB8FDF
41ECD551DD326E58FE258D0E268FFFDAE1393586EFD449958C91252156984401
2BABB5ADF93891FC191896A755CBAE3F0F649948253EC51D98A20B1C4150AECE
1B62EDF28AB0B03187728AF15BEF6EBCEDDC19B9F7DB2512B6AC7FE21F478248
CF21986DC483EC4FF27307585A474DAB678B23A7EBCAF98097861710D733B551
0790EB12F5FE80B60089D4C18F187D265E8494A80BDB1FCB3ECD6DE46267C21F
A581E86060A00DF7E387FE4360955D6F814A0B72EC09A99E846384818A44E541
E4E108DFE5E34573DCA40F5946D9266E07CBF681164FEAF332C19BB771979FD6
A842FF6BCEC22ED954560FF7A1971E39FD57F8460A1AEB659C973D52B28D6CA9
2DDED5BE33EEE8268324F6C902D9715E9D5EFF5814A8F3E1BF0B7E35DEF6A9FE
4F0D2A2E9848262290D7F8E5AD77A3AB32CE9C79E9F9F074AB70369ABE28B707
8F57A4D6313458E50D05A1E91DD6435FC6A7C2B91B672FA23D9F875C001E76EC
92FB6934B5368C099B59A7114410C608C749D1B7D49233688B150E779FDD9DB7
3AEEA11615E7DEF726AACE340AD9F2EECA199594CF093FB8D49DAB28DA0EDB94
63FAF413BC1FA14F1FE0237FA942F76F1157480F336F73452C9C15322A392131
FB96C14CCBE65E59BB4D23F82F28E6759E924266ABB0F5AF2002DD17FB094011
08241414A916807F8AFB0BBDB5417E6D852FF038407BC405811993C856601474
FD3DF4947137BDEA68BE33B1C86B31E1EC5E2E7ED6AE24C15111AEE8B0120DD8
E29CC460BCFD5BAC82C941C2774AF399F6E93075A7A0EC5AC289BB9A3C004C5F
FE6777D6E374B40FC2ADE40888C5DC808B63EBED348D07AAF2D7F7A790A0F099
8C80FAD9A265F84D5031EBE0F523F174D1B87F8E5A06CB2F03B396D8F523E783
87EEA92C452CE44D0E6A37CF3696FD8206E691FCCC9FF002209C1C76C4C64695
6668CB64B378A98BA5F5DB1F67DB7096EFB1F419D84A061BF099B8FA36670B16
90CB69F17E9E3BF1E15EDCC29B7701969EE4D07BC78F07D63D7D6E5062055043
0364C88A1DF224DD3EE5110C0D94DAEE6E66D20397C46FEA9B6EF288668FF3ED
3835171FF4288E56438EE91BC7297A8469F567938D322537FA0A8B5CB3E29020
7065992B084D567645EE4D2FC29814CB1D7082661851B3D94D71719C73B320DC
91F4F64B9B942A7CE1109EC7BBE8E5B7AA2CF43FA2AB8EE4213DA7C6C4277079
D25627DCD5E40E3E202D7176934072863EEA862AF354FC6CEB056DA1425749E4
65FAADFA4BF11DD6766C8D058CEB08DBC89FDCFE829432331073236C67785257
36974DCC85E7CAB9173DEBE09BB23B6885F25CDDF3C2DDC16FD131C7F302A2F9
FB65ECCCAD4616959B80FA764F314AC16BB1740C1B9A34534A154E2B04009136
E4115E6073611BE138AEBDDA44E8D1AA9ACBD47097BA31643A74F5D36BD72480
8357D4FD1813801BFDFFEAD8D918A30005C31F177816336B74AF8B9931BEC0C1
8AE73FE1F01FCCC7F5399762D1BC994E94B6179B1A7982129C594986C30DCAB5
11686A2C699385B3CD763CA12281B1A5C2E93E324FF5545D0CE8972C2431411F
730D16480AEE8D2E2DBB374BA8B0C30D5E782C9B7DB4551CB68D0918B52AE133
CC3977DD3448946BD058A0C86C7B26309AD5A80DC8A9A5AB7918FAB070E18406
BEC009B1658A7A314C04B7546244474F513F8F91E616AB868D055C8B11CD6EBF
9453B2F632E36A15B373FF3FAE535328CA8C0544484883A0F02FB4B3781CFF5E
1D1550A313D6A7835FE456A79A38623745FC7BC778B3765D421C915FDA50CF9F
04A95ADF3F80F3C4CE59FAF95451251659F4FAD3B928D141B5A50A3F5E9A303C
99A80E76CF38AA5B4C4F8D3809A6BD6549A52A6AE38C80AFB8C867AF2D69FB1B
0EB44C2CBF703208747659F0C260A6B4FD314B9A936D089493E3B7C7A3BE9AB3
1FFD0D9227EABE61529552E426955F25BD3D4181C84D03DEE36C9F7327962802
9C83A000941FC5F85C754D5132402A0A94EA3D0E37D4DBCD22AF7C60C6CD394D
7C4BC204610D3A92541054C0574496C4587DF29768E6F31E94A1C96D41BCA87F
4236846933F03C778A1A810DCD869D660DC33865B7E7C25A8F933A0E69D24DA2
92AB092D52FAA80F47282D973F48A92193487C2944D35418E9E9DAC3479D3309
DE69137DFBB7833E98F45B76D98F7F115A67578C90CE30A316B6D535855E3BC4
95EBD55052F31B47841D36838D978E70BDDB5116533BAE1B750318362BF85D9A
4FED0550257C16C0F488A11DF9E9251C0554FA532AE3CF6B4CC492912397B565
5117DB31B989EC2622635377629CAD8E550923A84F19126C17DD16A3913F27F1
2C896BDE5C6BFFBCB03C94DFA8ECE2B7374827AE168634FA007F8981ADA54F05
501654D663389C4B5A8891EC5F847FD143664560BC4C5FF77A0D68AABE3A561F
9B19E9E4F465753B660F494EE3BD6829B0EF25EDA2814492016AE68E31049842
FC608B1612C379841BC04CA5D5C9E7B9326E24A0D47AD9A7FC20C44470BA5BFE
CD08F2E9B0678F1C75B4349B10E0C822E7774D2E36B7DC679E91F344E2181C96
31F0E06FD50B7F3208C3AAE0F19541EC977DFB9A5ECCECE193800E322F11492F
E2D4693CDDA5926F4D6643907C7A8A5891F445DD18C42150008FFFDC9DA85E46
A319CEBE22106497041C6BF0D15CEBFD453284869BED4F94E7563A22D9EB3820
144C7EADD2B7564578EE778AB577C5BC1E44C3FA9956F75531F04161B2C21F34
CBE80DE64145C23FC97535A6E4F812454833BEF05947F6414AFB850951A3BE1D
DB72B79483DE686E68A33CE20C97AA3D34B75B9B69C9CC6AA7EE629D85ABD5B7
B3158D44150D249200D31492FDDAF610CC80CD098D1E968B18EE09AF09D593FE
3D0A62701D18826FEC47F867C4FC966D23A12CD634C1FA9AB34BBDD9983E5D44
1DF74B89E58514FE8D5100151D635CECB8442177468B4A69E269481F40D0047B
25617D002082B89E2DD0885CA956529EA49D7B9133782E80CFF57472F27BC0D1
11482C5E2407F0458D28393284DCBDB7835E97EB66928F45EA8146164441267E
54185239D9D66638FDA8BDD4DE1F10153D551CCD732503281837C4897D51AF17
B9562670633526DA154F2FC6BEEBC0DA2A57657BE4BADBA11C52E735C2C981DD
1A51008E09E7576B43654C207F12B1FE9D0800C9DA440F8F4DF5248637C3BC95
98A1164C54C878B02839FBDFB30634D2C908A201142248276B7E4F8924750C83
61FDB1FA328EEC43A235F6F3C221A21FA27814F2945BD12376C76382F3C9C3C1
7519E46F82998324BBD0131B32482D403D243A54E251CEDFA01A8BDE36275E76
D3407C62A81FAFC5A6918FC0E56BDE223615AC1316EA2FAC998F9E08DF976658
5D049BF9B0C16328F8992A1287FBE4016ECACDDC72CCFAC8BEAB0F3CEC7B118C
A007C99ACB3A8CAF71B0FD53F0FBB4B98CDD23C4D7A4185722A4CD1DF2EFBC64
62DCDCF81DB674AF26BD3389F8ACCDF1DCE3D915F0FA21593561B3F793D4ECDF
9B17AC4E1A9871B927051015616FA105CD31AC2704D9CB29783F12C090F7E38C
A5F15406029C0EAA200C1BB9070C7F6833CF29BC0C5CC42B68D8F370F21DC097
78880C3CE4E08BC8EB4F995A09CD0E77B6A97267F4C63D4093BEA8A34B315CEE
932B40ADA36F26410CE158403B4CFB64EB4D80157F57E05097732B4DA0F2F3C2
F479FA651F01F72A57705673E627FDF5A0598054506521227674339C79F366B6
CA9EA7CD06B8D0DA8E969FB1F684291242494E52311C02C8A34C0A5B3C13F380
2AF740BD9C765861A95092B7CED26EF1639CA2DD130E71A587A3935D91E2F1ED
F54D76932130618C8D76D20AC022026C6F2643128B9155F977871CC667463212
4F6F9B939EE1663FD02D1E1D74F22C4DA4143A4BFA7B3D22F58FAC1115AFF937
E1A8502296281BF8389A348484028006F3F3248B5454ED6DC729CC5070524D1D
B08A192A26EBA06EF157958C1BC00554409AD56FE7142D333CD1D23D5C8E17CF
1B43A482C44FE52E57AF48D3E9B3D32C3D557ED2F6F284CBCF8856B2A22E72C0
C525500347775505F87BDCC02101AFF38BA1917A296C2BA59D189CFCA85A1AB4
7D180AE3AB5EDC9A66EB2152A3926D74DA3E0E484D43621E697DAC8CC5B7F6A2
587F0A3ABCD8C3AA3F46E30A2EE663C2CC64E2DA3631AB809AE250FCB0B7661A
99E3BB1BD13565961B1B3760EE57E29C8BE8F4333B259C51DB04F83FB8A8CFF5
EA08B850563F1082F302DF65A337A60C1F7C2E743954A17D26C0DD1FC6719E6D
DFBF4CC6E06F7F4E221AA17F75D36F7194C41BC7659CC291CD5DF9CCDE6DA0FD
3C77D56D063AD44CB7970DD572CD605F5E64FCB19D176C24DBEDD2808DB3D785
BF794EA774CAD2ECA4581BD58ADB6AB154DAE7900B7D1A5831CBBB712BD4433E
492B5FDF3908E6BED58C9765976D71E22D7C32DD6A251141C84EDDAF6793DADC
A8DCD7CC7C04DCA33030F187E88F3A42403FD4606192DB1E65591E8CAC11A84D
FE3F09633B0FDA064321595BE68894E2244B800EA15AF8C16B9B8329E91644DB
1EACF1F12425A26341AA5AC2DCE2E64092DCD8A43E347008B7D5A184688CD0FA
CC7802A28ADB7907E056D20AEC2ADCB43DE6F84089E6E0A57A6AD525B4FB469D
4FDF87EF60080E1EA0527DFB9564EBAFB4292516657B11080A18CE326D18DB4F
C12F7A8E9820207DF26473C9C949A2D6059CF772992C5637092710177BA2E331
993DF752B5F9DA8A06B993088E210C91279AAD5922A3546551F93A06B3BB0227
2B60FFDF4B8A791B5B54E5E9D98BD5B3A86E909F1A18CFBBB502CF3C1C33D64C
241B9F161DCA2420C4E62A6FBB9EAA77C3E1CD4050AFE0CF39A32316087A9435
4D471A4D7A6449D75188F3F600D5FE70576EA42629818DF9894AACCF6FCC5C78
714AE6F776AD12743DC8846D4A70232F0EF82F448559F8CB85DD9909A74AD696
B4E706A3B47E119413DD9556FF4172F1B18271FC2435C354C3F09D46C1354E5F
C1A63D9D5B91BB6B95C298D03B35B604E4DE22C24947C31261DFE88A93AE4E6C
759BB40715E971D4F9F578518E37E431CD2798239CC4C949013F16A197425EE1
20A17F7791554750299F7A6109C5FB6761886F19B5B15D74CB098F56CF1CB341
A140660093A3A260FFABF332DD702AC4030A4AD4B5F9F13F05973139BC1471A2
E5D6D0C62F0ABC86BEFCB1F65AF4CE77AF74BDCD3B48EBBEF3576781FBB7D433
B58368D34E5E37B9E2FFCF9AB319C9F3BCA04911B77B657C0E6ED908335A1687
C92D7BF00C6F8129E347C6489FD4FC798ADB86B0C865CA2BC270E4E404F8A08B
6EA22077FDDCF0DD9D585ABA5B3216B772316E03AFA5A27E6F5EE3F77F4D523A
7A4D01199AFC3C88B0E2AB5FE014A8437745108009D13B449B4A055214DF69D0
218549440B1C5F19476595E964EFC9B18C7002F76150B70E79387F8C338AA7CB
A1F3E799A32B23859A4CDFB52C22ADB4DB30D313BD85B3214F6127B0F5A90B25
E1B529E86B0B4656620B937876139F8A8EC00C8BD6EB20AB66BC1FABC48E4ABE
10D7B7E8693AAD1B25349EC43DA3811A83F1E546C0CB1649868C14720C008F4F
FA8D3075910926C632218410359E389D874F4F719293D0B0EE58BE36458AB3CC
02002C46A704E345E7CBA12017897EACD1FB64C1F829392A430C1CB8E88CFB0C
AD53BA7F20DAE648EE34DC7CEC39CFC55A9505206C3C604F4F02C815605D0AD2
FE07CDA8A9F8F0DD0C048753FD98816588DE9C8A2C78E7C8BA614F66F38F9383
79CAB93ABE05747491570EDB80902B818F3E52B84BF6A1ACA730BA1FA90C0D7F
09B3DD6A5FE918CBF88B2CB98B7D817311B63766ADFB7099864428EA3580F26C
C4D4978813067D64E0DF70541891615BDCBF3B5FFB74AFEB695F8C92EB33721D
D3B41058551019C4E12555C4926B0116F86F88A7E9660AA8253D564A36E96024
8C4168E113B6C0C725E49331DC85507BDC697A1C20A553A349DF9D95D5D24C4B
6B2795D94BDEB015C731EDFD27F3823CA2D05633BAEFF23046DF458000AA7477
BE93D17A85E0519FB0B6C5BDEEBB9554D34547816955434DFCDD0733C148B5A0
52196AB08680F5ECC44BAEB2FC41FBAEBEBDB65521D0010402575DAFFF833C4D
59C1941D6160B8FE78D5C3354C17511541D364CA8C1F27232312DDB771243735
43A2C18439DB2227247B30A41C72B88361E10B8CDCEE93DDCDF5BDEFB5F08872
C77BA070C12B23B2C6FF837473C372E70836D4C5747C4EEB85DCCE9246271769
E060E6EB754F8E89B075418D032D7BD972EA6B859338F8D6BEC3B63C5E9999C0
6B34A79E0D131D233FD3CA93D8F5B1DFDCB271329400CAE5B90560D4FC5A1154
EECD0CDBA01C3098332FD8CE6C0A393AB1BDCB88B84A418C9D3B15FB9ED1330A
B93E9A8D466EDF09418F46892F4FAD459D4943657ADD842FF3D6D1143830B378
A3EEECB91EC67FB176F2ED906086FB7518C7167965813AC101434BE5D692FD50
2589F7B14BEE15894121E8CB7971ED4DBD5A2DF213D85A56B1CA85DEA53ED029
9C1E8516B0C02E9F97305FC7E43A31E0002A2F803A30B1202AB55D0FCB8A5F3E
321815C3C7AC714C3DC89D789252A42CB2F981BFA79544B1A2F756D81ACAE235
A58C64DB60FD25EEDB5A9E09F469071BB0F203F5D8ACB7A816012ECFD7947438
5118652EB37CB7021F80792262A4D2F2AAFBBC879A3A7321FADA299277D8D09E
8CEE8238655AC752A08A6091BF4B9D6AC543B626847B574F60E61F9C0710B5F8
3F74EAFFABC289CDE655EC5D586D483DA69DFBF9E2B6F50F1D8890FDB8C56DD0
6D24DA09F845947871FF414A3BF0C1B89EBBF3860AF123D485799661E8A45A88
8FC99EBDA38E539D9345F4B58F6B8E3E370C11DFCA06C381C6793D5574AF08AE
5A4FC89880D4A8DB59D7952F55C1F6110A42D0F70DAB4D6B7E2187A3BF218A62
F3B4198881C0D98302B116A463934A5A28E8EE8C15F8C89E5E3FA70B901CD5D2
C49144778CFFF1D5B63E099BE878F99C34FA15687F78572C5BEBFDDD80971DE3
920CC6E5D47ECED72963406AB79426A14A17B3118E50A9DDDA6C8BE52B95ECCF
029A6B18A512D30CEB0B6ADF80F97EB95E310182F66B217FD6CC9B23CD9DBB08
CE4B28C3754678266A6A1133D8151A000D95E13EEBAD4F2156298B976E43EB00
1FA13E44683DC6CCED04122D1FFF56BCCBB9A346307E3BD497D7F1E2F51B557F
EB6AA32E84F432B9B5D24ED5D673E26A25811D4BCA9D693EF8ABE780991240E0
27E9A5005DF162A28E497C231A0B0AACA773466D924AC2337BEB55ADB1106E0F
F4863C43F7B4CC4CE5008B883EE21D9BD24B48E4D1E03E7378C05B62DC04A3C3
61DAF3A67012298FFD77760AA9C0611FED9B670604C24AF36B6E54543B411485
5461C83881CDF494C2B43135E8062A9F9101ADD125A32195B8CB98C9B19235FA
FF7822685D87B84ECF255178D2D2C4B7F7857E7F5572D3BE2154C076B263342E
8A6977987E6EFB3DD2AF1E6F9CB166C25A47C770E62C69C131FF3870C42B68B1
0C4961AE98EE106D34CD0D4E15BC0A018DED92CC65DA0075E384D92FF2BFB06C
A814AD933409C99883AA5D858AD143961AB8AA828AE35FDF411CDB247C03750F
C0A519E36BDCAF2DEBB2EE0FD69336E7070E3EF345D6D1EDF0B88D08486EACAA
CC508B9D267C79A91646478075E259EFC03C3504BDBFA2B4520DD6104F783317
388D31B2DAD1BDD5B3ECD980DC8CB9A9D9491DF42A8678BEB35D372AA9F49EB5
0246E1D3C022B0C181F21093450D19267E3515B8A1080BD883DE8D9798D30A9E
DE6936EA527F5BB234A8CCF2825E654D39A6BAF9C116EACD0849C62658655B0E
080F0782EA3B1142C76B364D2D85AF83BDA04D57515EB1FD87B119E547047F43
E9CCDE1C1F8645DA03EA702EC5D6CE35E7D5460EF05B1A5136CF2C1DDEB46F73
8CD632EACDC90C78A145838224866EA5C1299D94203D107EA052190509727D83
85E5F898B7E28470245FF4482B8A2A6094E407A823BEB4FDBC9149EF33A77FFB
B7146C2E8C4A133F7EE497B6EACE17516DCADD90525F5041C4CDFA9AB34BBDD9
983E5D441DF74B89E58514FE8D505A1638BA2C25389A4A4289945B806CC14F19
8DBA7A8AE3C9738AFF44731B6DB8007749D1B605F397413DF96CBC1E7C80FE52
EE1275B05D19E6DC95D93914B713820CA0517B8C2E43E8716526220CE629452D
507C04521B474F40D8A1DC5BB14E21CA654D970958EECCF947B560471E2B661F
9D677552B91A9CF74F2A195EAEEEDA16C981DBA60EAB988A1C23C7B8940F5D25
68FCC3524F6F89EB6871C1BC5F3C7795791EC9AFABB609F395A7A9484BC96D0B
47751DFC2986440D716CFD5D2E9A57D84846762A320128723810DAD7CE08EB08
5D29AC7925CE02513B4842EB1E9D4875A753BEC3BF97265F7C2DB58B320496C4
4192E544643B9C3417305B2906D26756132ABB51B16AD09C775D6F86C4640222
DC394CB7CAB104F32FF3156173DE48D766399192B5E968035E7DE5E0350A005E
4C5E642AA0C21706A33CCB741E91304FA287688FF87FBAA13C3B3D9E96E3E096
12F99B100345D53EDC134D23DCAB6BD08ABE642223D82A657245105757BE84B5
99C63F2B0325B83BF619817A00CFE9FC5B0A0FDF982B147D2294ABCC25D34DEB
46C4AD0D21BFC3A9A11405B0873D4E91B0F787067554D464306A44A49AF8095E
431F91B8EA995AC6C549CEC434910D8AEAA207BEB7A8B227217A2572029B1D1B
86B55D62ACB72C877AA2E3437B035F7E7ED3A541B6CFD10F1A79C610ADE46912
115330743692D0DA147586A859D490BD6B1BFE492563525B99F0A8D519F3DD43
0BCC3E3E57052444394E46201B34B583A55D565EE540EB9657AC7312FAC9897F
56ED09E02AA857C6FF5F8E402EC24D46F92C99498946CAB6DED8F5DF0540063E
98DF31F529B5CCE7E07337D8C589AD71BD8F24699F277E4547CE7E8B4444F14C
80FCC7FA5791A50EDE1850046FB56C0E793DADEE301792A7EF4CE1047C153C87
C51A4B39BAD23DA4DC7FC3B4C147A3CA6B939B4B19E81AB5B11C7C817FDF26B9
5211DDA7C94F44637ED9DB8797D2DF5E6D7A8CDD807B3CE00CC05F6CA1D87A1C
83530D8C784A1FC3204748B39BBE76D32933BFB3185C3972FFB69493300C455A
EEB30CDD6E6108747FD778A0042C6E3B4244948F1B06A1B8A026B3CA477D4CC6
12D0DC8CFFB2DCBC8B1A8430F7C7563E306B853097B47852B119B42F57BA9A8D
93E92CCC167DB36D72585E112E6E8CBD8C816E92F88027568E1C088F279AFE03
1CE20930C273EA5AD065F5AFDBCE03E88F208A05B41A2507A6E6908560B2236D
329FABA01826377C35067A7C6785ECE0C669C03CB875F999FE0159797AF521C0
6B9CA7915AC36C9EE0852CFAAF230E92948EEF95C118FA39AE58F8CE7B0D7EEF
59EEF91AC758803D0E4B73F10FFD9EECC0C4A801EEFB0932FD5E0D205C19C8C8
E8A46BCDE4D72920AE03699B75B6ABFCA418241E9B027E28104D22A3702E2B9E
F6D164CB498F4A7ABD9CF59BBDB7B721D7440302D3F5788779FB6154D819C083
EC14CED56021B719D487D49C3D836D47D72E3B76081E2BB65A9799C14504DD4E
19C5D371BE546C3286EE772322BDA67D447EE7C7648F82B339C1351E66B47C85
4C59D6DF7BC4B1B15D32EE1442D960EF520B1C97FA7431055B6BB25DE7DECADD
E32B536BCD546709A5DCC6E9C1C32DC043D28239E5B6F2CCDFEB403080EAADE2
C215DFC548BAAC67797FCB1530DD6EDD1689FD3081EF38C1F9942BFC3262E057
CE26031D846064A6082D5C5ACFEE84BE1DAA388C29ED456ECDE57C81CF06575D
66FD8EEF218CEA7E07BA3FB71E41E67E4889F953706FC8A5069768FE8FB5A0FD
27E00201FFED0EB0C511389EA07B5CF1708760FD26B48D0190E9F3C691BB581A
978506DA0394EFEDB077CBBFC4AC6F6FE7A374
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE20B44A2BE90
C36DA2687DCB7DBA40F6B99E51650B25F4E51941B49774F8273B5E98306C87E5
3A03E6B35B82A143A76D58265254C13E6E1A9D0DB17A1D9294C759AEDDA6D4E5
CB498912E3AC15AF88E6309CB00AA35170DBDDB43739D05EECE15112FADEAFA8
DF7BB6157C5374FE3D6DE742A6980C8C55A9DD737F2069BAABD6F1B8A83AE84F
8ECCECD0CDFA74FD3C4FA486433D06974C660A27F619ABC0E178D15C8C217270
1E6C1493BDCD772A1B9A9CB8C1205F7896343973FBB99481B1A6B865510896B0
133C9D9C98E813E0B142027A215FC75181A42E65C3E1CF5269B00E31FB47B4F7
7FD95A823A176D8387CA420A441980D3E866604325998BF88E4D0A27D4DE5AB3
F44DF52033A1EE28195614165597150B847315C78C3871F7DF0D5B8BBD40BB58
C6F12D16BCB3BE5B4EB51671AE9357176D5AC14505504C43A33EA29CBE2AB98C
D0305DD935D8F0F5EE3205B6BA139A251BCF348F2A19EDEBB709068CE066960D
6D0E7801038F92981250C3BDD77F02C296953F4FE2ADEEEE96C2499E4D5C40DE
EFB9EEC8853BB3E2BAED185D6B4A80C1BFA827E4F15E623A96FA4C467940BECA
B15E072F4D80E6FA1492BDE59F46CA026F44D74B0536463124DFF7ACBDE3E03F
7063896D3B578B229735564F4BD7CF18486E33C6AD14424873AC44919FAAE46F
12CC16254F52A26FE47FE41504D3E851A066522DD56FAD7828E5E203F328AD95
5AB433987B2296EB3B524700CCC455A521EFDAB11378FA57CAB556A4F4B23D7B
C51D926CA86263840FFCC3BAF798B72E5EE24715E42D9D1AFFF7AACCB3BE5EF6
3B1C4E79B49A3CDF145253BD827ADB43D157A1BDFCB3233B9397EA3C8B3217E2
26202117CFBE3DE2C6DBFB0BB25BB138BCB5DEBDD171A3100D4D69D8A56566C0
FA3EAC58EBE319E7780B64A40FC4773482259B8CD68CAF88862A991C7D684414
A1851EDC442490FAE839FF9DF1F980D05D8533158A7D1941871D0016ED45E8A3
C001792669DE7F11CE8CACBF994B414731F0AA40DF1541AC1F598A5843D1CAD6
C5A53FB3BDB005D9CC4F9085AF0FB4A3861C67A4552C610497D442E859E2C91A
C6A66611427E0CF66D0C4D588B8B2DF2FE325EAD0AA769A4E94594F9B3831E4D
F7FF4491C8A266242D2E055113753D000B13A98CC0339E144825766BC2EF9A48
78ED27E515FED0D26FEEE69602B2BD58D145124F6B96B585D142F943EC5C1B04
0C1139273FE87959CBAEA46819A8980A28067452810D07BA9A666A01F4F60647
C3BAA80761E6D04B760635771EFF726D496EDC79C164824B6E3E3C3E69366B75
9B352F6AF5B900661AF17841FDBD5D61718DE52EB4F11723D1D647621D5D682A
CA36360AC99B9205E4D80CF55870847A5F88BFE7F399175DE7D08904B7A508E4
89571C79B533F45CD6E6F5099188C9604E2F35B3EF9BEE08C93A2ED5FAE581E0
4BD937DB4BE342FF23E08F149D9FC8A4B936B5445A26A913FCDF20A0A31DA98B
FBB545B8AA7BF24E83A08486E779A149C3C0D7EE148C9CA55FD3601DF73CB1AE
4D50A2A0557B3F4FE24C8FFA00BC0CFEE246506B981C4C25D9FB5C08D065EB27
2EEEA926ED5C68257D75A455702A4E56A3BE26B082645338532D192FA4ABF53B
D1A28704B84939C7E339BA3F4038C39721EA5C3464B0245E02013E1666DCE850
44D2187BAFF08E59FF2A6D83FE3845C1983D8258B5632515A1560944DAB55372
7A20CCE7DA7B86F602E1FA74D8AD1C8830A172D59CEB63338D52AAA02A40BDBA
5FF88D813D0B1EA301EE8BF7F102D69F47EE35F889A7107E9AB76C0FFA3AA93A
437BD5C68850DC71A816B0D51004C77A4408AB95CC3340C7BC2658981FDB476C
67E8BB411627374B958332C2B80265369EC9FC0D82E3C7A643BCDA664730F3DB
30CAF94F2975ADF1AC50E6BA5AE8297770D868CC596E737A5234E91EA9C52A86
F394020321EFCC75626861C86A9C0BA0E70C944B3B21C246E196EB37B5B96787
29BE3572DAE3DC844BD3047A9FEAC0EB2BC5CD3AB101473EC3D862D62A647202
0DBC317ACFCCA3C746EAF40469E99A48A7862A1246B03D3995AB14CD756C4CA3
7202E05E0BFE9B8206056263F1B899CB78C94227A3AC6A6F78E48B81A8CA1192
705280C8337FA283BB4340DDEBC4D256E13F78F42FB28D8CF41DC6D30C3B8744
042875AD434486947FDB4665E75053BDD0E5EB1244331BE1138C61BAA39B0E05
86770FA787F267499DA09EB7239641CFED8CA46B4AC56399DF92F05CA2B9F3BE
AA26E847A4008486104AAD2281EB809E218246596A46D6570A9BD7D364418674
F4D2E991E7A981F856409739885A994617FC3886D4A0EABFBDB7FD8AF98AA7C9
4960293D71261F05666C1D1441189CCC7CDA06836DE75AA40C0171FA92648DCD
56F58B5B0B4F975E854961290F30C0BC06D066CD22E3E4A8E70082F0C085AF03
D89E764E467703EFCF16BB5E61951DAFF2A3E9E9B46B9A5B29A2F792977BF3CF
980657CCE5506A7AC923DC5E300B27F32A58F983099DDCF12CCC343C8BC889B5
0B1740D741FF57ADF85AFC287E9C2421C80985FF17A1444B2D1596343B256412
4D648B1E095D5D5BCC1229AF428F3F75B728D844E94E773764ACE46868298CD2
6E5B9EF345BFA3EC2911E2B96A0B40A565F65058FE9B3AB95CE02D75BD2FCC77
5E27EA9786F58C38918D3FF52E73696F7E145A933E3B604C9878E68CDF824D9E
AC0CB38E3BF0CA5B1D239243C2A0366D689AF5C2267D7EFC43396D36D04EA9FD
20CE0FA2FCBB7FD36C37C00D46513F0358C447DB50DEB94BE6DF697D585DC3C6
EA1CD068777D347A8B6E42E2F1358DC3238D11C2E2B257294A090AC284D54EC1
25B3ECF744CD59768ACEE9F19DCDFC2F1E54AD17895F81828655204D139D0184
0D01F61B3059A4FFBAA46BEDA4208F9A0B25489676BF3970EAF03D028CE2F1E9
211460C2E734C20FC8D2140B854F2E7C3CCABAAE3D2A80837BF7F8CB13BF53DF
3C8BD16760A91B02D5E8D679C227DA8E3207EAB767209418ECE7B6C3D02F92CE
75A5DBCA388B710C6451A729387C6E48EFC3641A1DC59A816C933FF53193EB5A
F7BFF995DC20E067EE6B3F7DFE0ABCEA24D63DBB3890D89D6CBF5A82C037D70E
BB73931AFFDB7E29FB0A6487739C1FE770576F4593A1DD7ACF15A1E166892EFA
7C0C9C46EEA673F31E8E07AE5C862F196EBD7415B5064DB1EDD7382241D8087A
946368F8147A7C3F74FBCA0746170A26CA59DDA6D011F79FEF550DF52C435281
D079306C4AA1598B436C0190DB0806D6AB666B48CEBE7990BBA0591DB59BDAEC
C087BD360B3B50F5CAEA8BD4F3ED59D91463EF5833E8A17934308127D8C9E0F9
93C4CB3393FF00C1313C220BFDD7A30DEDE201C51E84D9573C79240EDF00FCF1
7756073A09ABFA792C31C37AC9C62DC747BA5DD0C1451610AA956E22BCD5AB67
777E28EEF2F52F73764E076EEE81285FBB3CCD86DBC5251D2D3848356181BC6F
EEB9C1DE2149724C015A2D62C7ACB01966717F840544484883A0F02FB4B3781C
FF5E1D1550A313D433CD9AB3D1B01DEB5CD178D85E3DC41AE8930680CCBC9FDA
F2E90F712DF8533B2B6D42AEA28A08F8A12C4E61B49202FC7A5CF34A17BA8BB8
9EC9287B3729137F167043AD2DDB65A8FC8069D4D1F6A44841B901C028002479
685787257CFF0651F978A09800A142DAA73B7F1B157DE8C5DA714AD9D987DEA4
5368072750CAD0C9ABC3F49106C13D616143FFB85D78805A95B8CB191C775A2D
DEB0E6CF3361C2AC17638689E052523D7558A09FE3BDAB68B0A34CBF2A115403
A2E98751715251D4CF99D8DB478D5DE0B86605F30BCF8E570B4341C3751A10FE
6C3304ECCE1F01E72A0F5EF959C8999D23D4B53CC87F94ABAD0B8CF29E4A1FF2
7FCF565E8219C397D246BC15C0F4E463B20786A09422A17124B098EBB0C3F259
94A35168628CB4398ADB5170FC710F29B4CF6AB780A4E2A1732B3626527E761C
40DBE2A9AD81F7002A27F2EDE3459E49C2745452C4A588DF3F3BE1452F230DDC
37DCBB64B8EF98BBDB649608CCA03A3BB26BB18234A5285B5517039417CA27C5
7321C05CC9FE8D9AD16D04DE108727FD7C001FC636D9DB57BCC78C196AD7528B
A30D88C54AC06B816316A50843E21DC3DFC0F2885961670BE2D2CE87F11B7F45
E8C9B94DAED0347805F77FC6B9FA59933EB429768912CD0EE8C7AAA21B870398
665A53B912EA2C1B0D9C8DE6BB5FE7DD8A6BA568E04DBF11A5A431F7134EE52F
84F17BC409DEA299D4A6039BBF02B59DA7903EB695333746F091546B931512AA
015585BF3EE444A7F201B20F79E87AD650695EA35917AA672E6D9215D742F720
6D3F2AB7C759561784573338B105AA4ACFF0F2FF4693372BF296931E568DB64A
9868E32D1914694E5FE0559BB3918BC5FBD55A3E75F00633AC163348296494D8
126EEE5326597A5D4DA157F0B3F4ADE8D0DC6B9E205C7C32C27241713CFFF604
C2CAC70727F24CB5F2B23E93A3CB703B62FCA7E61B6F8C699938631B10B51FAF
536FB9508C5F7EAA21CBB304E5A7B771CDAF55815279A3B8306D923FD97CDDB2
EBCBDBEFB7B277D73B3383ABDD138A2812AC5E29DF9AF25AE415F460780114F9
E0E089B3BA3FB5F7E228E769CC9D816852D5C351BF1456B1AF4BA063CE6B333B
4A6DB20FD6F05AAA14D65952774531A01D08AF8F6284258F4113B5988AE71B8C
B269364E8216D5A4DD597644CF0B54B9E98555507F9422DFBAC2EA874D558B0F
46BCE2A775E6B7DA0D48A6C441560EBF2842E7C6E6AB5690770BD037ACD19E72
E02132283C34E1C1C2771321F8DC33E6974EB6F862421F6F37283AFD0F95C4B8
89F3E306A60CE1A21FFBC5DE2429EC0989A3F2B6AE4290A005FBE10DB2075FF9
7C68768B4435372423C4BAF6A443C80D8E6A5F69FA82D22266532F87CC8DBEF7
EEBD525766E58CE7183C93D0673EDFDBA3BC461510B4437C6332293CE3987FEA
9789840A5620C8DD4F4FAEADDF737EBFAA0D70C6DDA2DC5573FF5275FE9BFE03
4BA22E904A0ADB02D6F83E3C8B0A5A5124AC92D53113C9773D6E27F87E6CEAE8
F46D76D5CDE0830034E3BDC2EDA5AB4B0FD9F3E9CF36ABF1E9B1553BC5666664
6FB94D3EAD77C5E883525C231843E1F16F6C67D01B97392F95B302B8CFF733E6
98C91C19E6F01E28499677DF13CE90508E6F7E71682299F18E9CF41816B188A7
1811E198D306F31DFA9BE2CC11A69306545DAE42BAA1B49A56CECC1712AFC2A6
34AE969489CE1B77A3799F3D710DBB5880C9D7D3BEC1CCD81D28BEDE22CD263C
60160BEC9FA8BABB0702F7FEE6A373F4674AD17C39E1F2030FC5F4F3B99B116A
3BD94BB607BAB73B0B10D6049C11BCB7A16C178B118C6D2348A62293E5275CCC
13243DF7B68E47AC505191E11ECF5CCA202965C0AB8D6671564F796B070A2B32
126DC80B22E64B31388226B5C052471F24909E5601B473E31B6D0787C187D537
0B60DA2F07494E52C4BB7A8EF00FA5043B8BD242CAA7C7A5AE5240299623E394
1AAA589C3E609F9F4E94FBD66E7C1E56B18A51C229D30915E0B2500EE02F9B9B
8774237EF1899A326BEAF8EDE7CBF1248DD9CB93AFEBDCF50001F5A56EDC3630
0057302416D931F529B5CCE7E07337D8C589AD71BD8F24699F20926B53EC634C
8BD5A7A63F99C76DA23FB3E8BE62FBE2DE0A6D0E7801038F92981250C3BDD77F
02C296953F4C5D485C14BB5FCA67D1E215EAAE959E27A01DBA71BB66608A29BE
4870FBCDF58BAD19C9CFA9D528D104702E4876BFF0B15679BFA992CA2D8945B3
8A4BF8B7E599354F87B98D5C6585CC4C3D373AB6530B16F574AC8B12D7137A20
A12051DAA179BB6B4BE6A66885E271B68EE25C4B18E71F232CACF2867E6F462C
044BC20DA885EDCD4803DBF379707A651E8B0FB5B886111E4913F65D28D29FD5
3E96C7D9899CD1C8BBB6BE999AC3384E76924D0A6D986FC37650BF614C6FA1F2
C4AD29A363D2E0F7DF3CCAF8583B5CC753581597B69E752603992965170D2945
846FC7C3D9EC38276EF001BA57BA20A70626B00D4EDD0244D59D9A8B12EDBAC8
6B03B018F77D84F135A1086B85438692B7E26BB1730B9E3B03982F0297A1FE85
2B945B17B94E4B508A313AB9EB6E4911FC465A7F3884C477F6AFD2CE2A88AFEB
F38541AD1BB12E1C38C34B695E681E542D05A3CBC14D8D087E4AB1D89F945EE0
6A5FC0B48EBD976AF74AB56C301672A0BE31E078D0A011258412B970EF32D822
4F50981EB928B80AEDE3F65A005A1EDEBC9E1AE15BFFF4FBBB8CD834845AE5AC
C4988201897A622108B961F886966601C53826AE17074880519DE36B7F9E5EC9
19B26AE1658A5516E42BFC4A9EFC0F71935DED5D023738B6B9A5998D6BF35919
DB26271A70FD551FDA5E1D832781BB126FFE6BE23910E7F181D048F238829D47
07794A0E31DB990EA9E24711FEBDC472571A697785540A16C8EA1D6D89071360
7A2C117C07604B899D0465B19469D2A9E4FA7FBD5CE49A470899F4F83517B5AD
2EF698B15856B0FC7626D42E7B65AC7ADC46008D953CD80125571E4BC8065BAF
393FFAB924635579E7CF52B739B6D7B4249616263DAF8DE30E99B6CD54AD4C1F
93701CEB85F7EE897306A92F2BBF8556983A809C6A252FCF5F1CA33A9EAD4DF1
F0DBB3869B74C2373223236E809ABE92C763102CFA346BF944CBBB0E7BABC041
3F6782048119C4113148EEF22BEEE604EF958923630C1C7B9AA0F2E63F4F7E56
A90079CA7DA18D25F3681DD0131C46E14DC7CD797DBD0A6B4CDE1903873187DA
86D2C1B5D227166EFB7BA7F37032B4A0537D0FF9969EF7263D44ED08CB74503C
12B33D86F9BFB8222C59284721E202AF56F30705D0A5D6505B19161F50094F3D
0BE9B8A33A421FAAD88476630A1C6C94BC37019E22200F1550FDE0CCA34E8FE7
4709175AB73AC6DB83C3B9D700E8C7F303EF9E789002A18C94E05FD7AA1B7388
70536B18D3082F4AF64EC931902B4BA3DD711DCA361EBF3DB4F6F633CEBB85B1
388884EF116B684BA5B21D162765BF1FDA0BC109AB896DE248F867F9F68D7637
DF0982785DABB8684A5525C6D23DB178201D3D31032AC8A1BB77DD481E807EF8
25F48414FDC74E0432141A22A82D5D319CFD5357DDA5167E3C0DC8173415DE40
C492F1036351910FE6B93342626EF81987EC411FE48CF96BCCFAF7A173C1BFD4
B934D3C3358C47DC438E60940A1A7B10FF68354C043DFE6F770C564C46CDCD61
0F1DB2D3873514092161A9C9F572701A3C816B332BBC0F0F89FE477C2413903A
61E139B0D0A1F46AD9B4CDE0AB54DA1A6F332BBBD2160632D7AC1BC02487F37E
7DBD57A449D7BA28B98BF4F729BD36137E834E00472781332CF1D679F5BC882E
15EA2D1720BC5258423F37EE5EFCED1CFDA18F88CC3A80133FECBCCBC55A4DE4
0D1A9E6473D42A8B3B0186016DA79107228DED1B4AC24394B87624BAA44583F4
C358AA5C43A6D04453B4590ACACF30862318FA154E5C882BB594473D8295F50F
1F619D3858039F45D87E787DC0EC3562E8A8F95F922F3AE258C28AD0D4F49F02
C538FB890DA8254F3350F4C6708A4CF32D668127F480DB722E014B646C4EBC7B
0BE5614E5D7766095405FAEFABB436323DB1698B2D68147D6DAE8358BF8F8EDE
8DCEA01C359651BC1BCE6F9DAC988C56A71701327FCDF105ACBB80265F10B945
8B6B796928931E76266B15CC8303BE2A0AD1AA715ED5ACCF101F66FB0900929A
29FC28C508A73216BA87955AD8BFAC31E517AB457A7E88D94943A49C2FFA892D
362C124A71DC61B757E8F43E9AB9006DBE11FA1BE1EF8BD9F3DBA0A454E70B6D
BE472F83389D74C3B83B7437FB44CE9358616D0F784F42F625DFE333507C3CF7
B820037A908ABEA4872F4BF69B1C7A53E2783D1DFF32E3C4E6EFA07A89BF285D
2F897CEF40BDB87367D2BBF7925050F10F1BD6CABA10FE1BFDCEAD62BC0C4D9C
FFECDE469085BCC3A191C484AB125ADED1FD166E096F4B23E203839C340D8FAD
93DB7C4531253BFAD3180DBDF8DEA31BD5BB3282B65A48E00DF185FA99BA638F
1E44ADCD03F326227FAD7BFC6B7A7737256C6A801B16C8ED115437A8EA8CD328
F4CE7EA69DEF4F35816A39E65B1528AE7D952D4A4FBBF77E9397295816C4E27B
8AC0687914C658CB7CFAD7871F54749FF7E73259966B461435FF38987CDD4CD5
F214B4DC3CC9776C9C34508263844E00D8209A0D7CDED19AF21E49614685B523
515EC158884E26A6EE6CFA5EEA25F5237D994AB0353B91D6BC325ACA18621F9F
14916D8DDA010274ADBE880B8E044E4662EF0AF221544DE5DDC61DFB5B340E6D
6E4BB80425136F59F84D8B2D3548C5EA91475186C2BDB0D1D481F6C795803332
2676DD613C270624CBB478AF69608C3DFDF5EC927C6E79972AD10D4E8A4AC577
FF9B10D3594B52234E62C94EF915DA26237F479F71B41BA1B553E3E790208290
81CBFED442C6CA069465E5A64A0E8A150835751C717DAFFC7441C8C0F00248BE
459F80EF067A8069A068E7AF13A23123931BF330814434F81A3EB16EFAC41D22
D1BF4B1E0BB28EE172A61824E037AD5F12DF23C63FEF39B8BA4FCEF61CFDC3C4
81050EA61C554759720D87D83B605BB516AFB1EC678BB3B45FBEBD4988B5ACFD
71B15DD33ADEF91AFEFC1C4A2C31FA7F4F89D337209EC858B9FFC47295F2927E
A35B8E19688E347F3F9356111575D04F9AAD1F78FAF66CF529D8F9233B2279D2
01F6E6DC038F50278454B2D60708010670335212EF1FCC3EC47D7DBBF0DFFB54
F718EED93425742D97CC0F23FBC88F8CD4E4AC3117CEBF51DC1DBAA8F8DE600D
7AF6A779EFCF0F035E3B3344E586341B3122B331A3242DF9092F2197E212FD7F
C4AAB63663D90BABBCF967876F1548DBC4CDD4A598B751353D2D5E0BAD4BE963
8387D148A4B6AD9421173210852F8F396C6C7B8A77C6A60E61E211E260A55246
56A9A5A6F65B2A057418C1033DD020937F7239E30D2854A4FED61E8C1CCF9056
C2ECB6269D49C44F2B81E829F2BECF44A362DB8F1280C76F8B0EEDE11F9FED30
6645BE24D02AFF56B18D6E2E1503E9DBC77A09C4FD744226D66FF0FCDA9E9B8B
8CB59150CA66DB631E5BCEE9B5847497338CE30CADE1C5BF81ED48361530BFB2
C646F3FF6950333AC92AAC280B543D226AA9DC2161522C5D11EB0574543D4AA0
D04B945257A16BA754214E96997CD277D9A29A3B03EA96BC30446FA34F89ED18
37EF84C29EBAB74CD0B46A97C588C298F92C73A3CA86D60A1E69DFDCC87145B9
C3C3C5CE0F22D4B5DEC2A17886B3F025C5A7FFE787387CA91D863A9A8C9FA8CF
7BBB5FEB2690A34EA77677BC935500722066F025C1104FFC3258222C762D9F0D
08C4C68BC2EEFBF1876B38E8830BDD590B97D92503E01001F5FB965434B51BC5
C9FE203C53FFF132F73F6801A8D444C47FB698D76C578D009485AFF57D94A255
19FB96600D087933CCE5EBBDFD2E68B4ECB09A799460CF1F7B521628787B8D52
899DC4EE64CEDC5838DBB61383CB768E1E738FB619BBEFDFBF09F285EEFF048E
D929C309009C30F1C356E5AE411E7EA01A0FC4D537CB3E28E86F10868948EE50
7B47172D7B52B0982803E86943B94E33878035A0109F73B9E8EB51C53056C2DF
B28814AC473001A6EBC721B3AD347F9CC5C2A27C339D4105425E913F25E79B7C
E6E98897122200398D64538CB1D66FCE28DB743BC92B2EC376370FD355FA08C7
4EF09936AB5346654275B55B91335200711ED945E18B4BBE40CD04F4C1E2AE75
8EB7547FCF4ED34903DC094F76FF3869DA27795EFE5F6E32A89FFBC59649CC75
9617E7091C1CDCBD27F6AFE6B8BD4E941D2FC154BEA826E96D9E9F0CB07EED26
EC0AFF52F658087D5C67D702AEBF0B8E2A90189D99F221F2160539A2A7A5A9E6
FA0D8EB2C07432DAB28ABA82980EAAC6131940026E3C2297E197FB8DB59D6E45
FF7B8B46C868D6D2FA1C908BDBE80E1B3A11B6921E24528947E0FC5069D469E3
70754666B2F86576A7470796FBDAFC3240BAAF0BE13964B0F531373F368AA906
0AD063FA6F0D94065A3FD6FB30C31604D96A1B2A1712683E4F0C8ACCC73F7D8B
3B2148B81AB7A9DE66411EC11874E8F570E04190A05366683D2577738F553F81
135829F9118F4BFE20CD51190F2E3D5BECD06D47F6B05A5E7A47526378D488DE
30960323A125FEF9D2CE5A85658788795EEB8265C7F2726F8638D965998C53F2
8426E5E4E2EF70665FA751137683D11FE66C6577104F6CD1E56B59747A1FDFE7
AE75FBCB622577A052190509727D8385E5F898B7E28470245FF44EDB7BA6C8F9
C33E90BD705474E6FDFA990C996F1A54AC0E89CB8438407EBEA5A06488A7CB70
74776AC36B43FF555EC3149999D9417CC312E8D87F14AF3DC280BA7B1B72563E
0ED910DDB31E7B4B4B6529CF2EFACEC94B27E997DCB17BB6C4BE1C39B7DAE297
CD9ED4A59FE7A1E816B7267ED6396F2DC0C27737DA383EE310ED0B6E1698FF18
0F05AC2BE886D9D90227506923ADC66BF831DB6A5426B804C0AE0FB4F043144C
99F35A215B53DD2A8F465563428FA041ED197EEBAB524642B77C830532ECC754
850F7C2285757CA11233A368C666168D45B8D27B59565987AB2859A2F650ADE8
6CF4EC93FEA60A7F5A9873AA787CD0239E8ED5BAFCF31C113777EA71DA655F2B
2974632FD25422B85C36411BAB3D72DC17FA6DA648A6E954823662F407CA937D
4D90887795B84C8A54C899C531EFCC207FE1C67BDE0D385104C7C0730BEF94DF
3D9BB21619EDC35A5662DA978663984B2C0395E5756C0B3675F3CD7136EFA43C
454B12960451CEEB882BC04DAD2CAB995193889BD474843E3A99ED6986DCAC79
DB20904E41A09C88B61F645AD8CBABFBB903B090ABC8D0222F3F3AB0951488E6
DE4164A97731F59B6017188D449C867D7B28D78AFF9D264A7F4B1C259E4B1010
AC355CD9D1DD0C6F1F641092454C7669C9B96D0089EA127B4A5EB38E31C7F9FE
59B06B4BFC89854C6244F22A33BE2AB996C5E600D4A59472D7CF83F981822020
847F53C4901AE23B20461D6C794C4335E864486842B6FCA4D27652569A261559
7E96B2F1F8E4D0339BA19C8E3E5449510B39F1E3A64CC6AA92CECF2BE970E6C4
DDF9212BD1C6BDB9FE7824823E37DE05592BCE6FD4F9FD1E39274CFA840BDE34
CAC6B57A04D9EAE9B90595D13545050C7D8AF83A20F9F5DB0FF74793F3C52637
56C50C1558A354975350DFC0455852748C0477712A9A9258B51647872DA7E474
0F8BBC91379EE330A885FD5F1BCBA8CD6184230B776E9BA0BF1ED2545A0446FA
BDF17C6DEF483C71AD80915AD23EC75C7511B956691BA9E1F385716F3F28D682
4049DEA9416A450BE02DCB55908E37FAF553E52CA7644DAE010536B0D6D72D3E
BD3C54FDC1061DDAA7FAE88920C04B03D5A1861D48AAC7C0A4EBF72DD6DA4CF3
4FF074D3C2790A24CAC71A4186F17220066A6A8404E985C4FA7BC557214BF927
AF2133A00A362456FE08A799A2B2F592AAFA87A5D2351E00F3470C278AC43C3F
83801F5FAF474A0F212719A259549EF7BD5AEFFA088E9E41FEB9433AF21E8D84
C50F750434191ECF16684AC0AFA01B3042CB34B1025509BC87450B4FD9E8A02B
F474487DACEACF1625BDF902DBC4062BE896D00A355A1F83AF5B882DF746F950
5BB13D08E34AE233023A69E02635910F501A93455644ECF8414F66199ABA373D
B1AEA8BFB58E110795251CEBE01D7F81D61317763D0C226C1A536900439826D9
CCD763F5BAB3DB9A7863049488C39B6FA4D011C03BFC4D497466C7F09105A287
FB8C8D308157DF08473EC5AF48825E4C875F9484343056C8FE000A13AEE13E9D
2FA4B7F5017C5C7A63E930C37BAD138D373E78A4F372CA460F99E254F7B6EBEE
687699E1E4C2583935ECDA85428419DC74E5342FB54C048336BD21D97F81E25E
5F18BEEFD51455661E67BEC675BB4B5754D6ABB7F5C85B224108ED3708C50B07
0833B9DD6E94F1A57DB15D5CF204E6802EAC46A0352A8472EE26110DFDBBE86C
871B93E01E80D140B1D3E84DC0A52286CE9CF8612CA50CBC070B8DEE5D8ED323
ED64D790560A64E3B93CE5CB58637A6D15736C339C5BFB43AF47577453FF94AE
63E0D68861E5F87CDBD81FACC7DD80091F968191E7B7F8BA5608CE84F249A107
8F5584B2FCB41823CD2AD4627254017F84B345CC06DBE98FE9E52BDF3CF8FEC1
18F0FE8B359647817EF7F9687F33316F8CB6BB8FC96F255C8CD98EBD16A82F64
A29C7CE76B354A5CB2A662E847B43A02704E7D438DF32AB32B6FD323FB5A0D23
6560437256FCA3276706EC7C748A40418CD85FD323D46131B9284A05F16EE986
726B5036C8C278A4AD1125A2196D7DBB861B7E6FFB9BD8BF8D23D9CF65C4D61C
CEAF43758D9EDCA066D08C1F42ABFC97E0807C576F7217728F913695F0FA187D
B592B3F96A630B7322C6C94C4A4E5211BFDF55472ABCF83A1DDB50E23253920D
112AAB2211BD76572C678D2BF4F9861632EB43F94C377753D001B0349E045249
D03480E431C10BB4D94A38E4E2071E750A972AB444A989E37057DE0BC5B2799B
4A6B62A9C9BBCF1FC0273C38FFADE8B24223F5B5025384B43478A75304F3BBD8
6E4215AC02B70EC670E711E2A392499AF8F0FE17ADCB2C137380C942FE914BCA
7ADBD966AC2C2197D2C3D6D004AD32FA6CA3E19BE891AB08ACE7DA19E2F50FAE
0EB69C6C9E1B7207286751F44FD73FBE5B089E1B9A97FEF3E5391F9497CF3678
0916C17E86D2B97BBBFE571A3C0D5F41206B65780C56418B79CD715603DE5C20
7FC70D3700A7FDF4988D4EE57835BA400792D78047E8507EF8D68C911E120836
0D54FB3283AD67590ADEEA3F5BEE429EC9851640E21EA8F9253E6CB7433656B8
7E1B0A17BA09BD844A09F6354B95D1BD84934D7CF51227EB120E320A2A6C432B
62CA26EA8970DCA4F35C139CBABD4FFCF1E22912415F579F25F6F6C8B0D9FB1B
359EB83E52234275337055A0F72CD410E0959D3CADDF1CC54C45BA2FEE00D621
D63BF1DECD1AE4FDF62A5C8A02F9CAB15CA07878703F7C79FF3F279C52F72F03
E439B6883552A1F042947A4C4E2ADF6C0B8DC625164B44742676C8A12E7009F4
D750990CF3FD6DEDA4861DE9EC3D9161B027F7636E06CFF39FB32CDAFA0C2270
679A62DD349CB6F6A20E796E73309A5541D8B6827760CEF6C16DD3382967877B
FA0B950007B15F64E9D8CBBC9C0FDC4E1CF1B461902FD93DBD38BE6F0CF35F09
A6B82ABDC8CB1CA69C62E1DD1B3237E974CA2826E882D4FF6143BB5933AE882A
540B806AB74A2CD45D0E6D3576CC4E86F0FE73230C8909B1597C819E043BBEE2
9BBB9093FDB99991507C71753EE604A02EEAD4D3BE7DA00D170B6C4BE782A1AA
F0D752E7FFF9F0F102AB1256EBEB0D9B5DAB1C7D96028198DFD7488D9565BCE5
58B560043129C527722B4E3302256A988111870A6725698F88ED447A4930E6CD
9EB2DECAE11F3A66BD5ECC2BEE8993C4CBE39FBE83BD728E3724990B905664DF
7DD440BE21B75A75962A0675857389A433E787DE9ACA9652EDE5612AB895CEE0
901707F717AB92EBE58A40D825339E298FB3B1EB9C376E87B346CC0210DCE05E
343A62CBA576C1AAB84E08857D835DC38388AF387156321ACDF5E31A6C44A32E
A4D1CE1214192029A2AA4A73048CFEF6D7E6A9E866BAE054F5EE51C829C26F9B
88AC10905CE9465971C6B191B8D3ED752968F923AECB58B21CFC4BC236DBEBC1
8195D4BA3F2D9C1BA99FCFC7C1AA0353DE520BA8D67683542DC17CE2EE3006E0
5681BFA0B947BADDF0E45977B41B9BD11B28F3A10DC9BFDD5FB6A67CC9729336
7D03DB34C8C4302985144A0D49172E098F6510C7F09BDD64FB6D29C60B05D141
EC9EB0B23BA7F201AAC6E6EB913B048A51E14C827B5CD6956F4B75F6AA40B867
3AAE3772C82AC0ED80420E4BCD787F6C1979B65F0335A3193B3E6C9DA14348B7
A46DF7ADB6657DCEFEB60270D5990DD9B4CA9726CAC5224C853F2229F0B332D5
D52D367E68EF2C3F555A3B98ED30070CE54B0FF342E639F6DA2470A8B638AC77
41273AE48C115274A883E4BAC1889AA37879A65DD2F8F5CE470E7F992C0D5CC5
0F3C5563C55D55195909B820B4965C880D6A11F2D202FD43C78C2EA7E6A19A68
B64EAF236A3468C0F9453189A7882624E0B4B5FB1029C16FE8241238B7AF2503
A3671E0E909A8B5F2E4DF2F0E9273EC494E37324F68F2914E2EB5187257CFF06
51F978A09800A142DAA73B7F1B1578E729462990DB2960ED2C624CAAA8C031D7
18CB10253D472D417C1865E2E3FBAD3BBC137FD522CEEC5B7CA9E9565B61589F
84D291DF298C3DA60FE3CB7207E56E71C676414B5CF90D1793F98D7EAE541772
A11F0A66805BE5710C7ABF905A86E2C6C10C1694F3526F0BBE8E4F5D2931D779
9FD39F88612DF7540C1C9D857D9EFBD289AD0AF60A4610AC6A84BD327150E6AE
971A7E893E368B849477D55A8E69F4E4E2C393803A98EED710D6CEC48A28BE2D
37A9D7DC4D9416C47C0CA011F85308F5CE10B99E19A2ECD882D4C188A2043024
2586F243EA5426022112C5469E67FC2D028D1969F2D9369CAD8E757BA5312E51
95ADABCBCC9086AB4D09E359B41CF74AED5B75C01085EF937795453D2F151439
B2CE1C5D8B76218DE43DA42334D6F9124566BC16EC17989C1052F8E184590223
348E5D25B9522BB3CA2A986A3005BBCB68F9AE872E75C24EF24DB8549621EA8F
AEEAB5E745E5CAF9DD3087C4764D440345DB00FE7A2187D2562E08382F94973E
E4F7F6CB96D6A86EF230A314B3E55EDA5E61D1A1451EDD31135B79628F44F0B6
91350DC0E4B38E4B5B5868A34E643E6072BD8F06BBCA66322FD2062E1691B9BF
3AD43C472CC0412304CB1FB6B146679A710039E6666835C2D79EC99FD9A5D86B
AA1D80F1562BA19D44A904C99B2005FA7E0F006451D2CC7FA44044CF1E14A026
561FC62438E51FE64B8BE213EA8230F0AF49C0A222FFE340112C6C063B2F99D3
F7D774D00F1B54515F06E60CB81420DE1D91BA2128FA95B6383FB3CF998B8479
6AD4F1646204CFA8DE3948171480735B15D36B3AC0B08922F007FB1F6127A9A6
19B0AE6BECFF82024F043B8A1F226BDB844639C5C1AAB0B42FBECBC70DF469EB
036B3BFEB3C0EF048513FE8AF1F527D9A45F49A8C83174A9AE3F8171760BB6F1
6177BC9438E33C17FCFA759A94FD7AC95E93FC68EC79AF7D8C4A895BF5053CFB
253C24C65B5AA6221F458A151C340E38E223C9A31379FDA9F7BFA8DE2C175AED
055189493E9627E809E78AF0299948B51235A529766FE954E0D7B514E0090D82
8A45ED4B9BC742CB47DFC2D5B30A8AD8594A7141CE42A834F186D3549338FDDE
A07BD62F4D3D8F9CE893453EB4326591833D16F6FDE8749184F481435D7ED4D4
914D53B8EFF347467DF545E945F3E231D1BB0019084EAFFD8C81AC0484F0C033
36ADBFE356DDD6B358016AE2808F1D8B26E038E11B8F39F3624BFAB0758A0BAD
24EFD83E5C0CF4C2A2212001F3EF1EFE302F694C5516A8BAF9BCE3D81E2CC477
721A7B7FB7820D5EFC4908EF81797F629FA6B66BFC686A71E401C3D7EFA3F690
6CED021336E30CA4C05B1532C6D15624A83CB86FC4DABD38C406AC2ACCAA6366
E6F24A603AC3E2B599C47DE9C874E59C613EB234EA2AC527C5E0F43C29B797B0
0D04AEA0B47DC06CE5CAA36431889458C7A33BF68EEA18E6E4A15055384A2C0E
F7347C378B111AD792A90E38E1552AF3CA5FDCE14D56D38E2618E1383678A6FA
47A599EFBC420D9B6FA5B8477E9788C5245492BAF032951F69E7111F1317800B
E4F9C7E39DEB8A92EE0816009F72EABFC1DB61EAB55F935906BF3E2F584CC148
386F9D80E0B6812D38012A6AB0585242A0053D207E6B6F6BBD25829C39367F68
F6ECD6D8FEE82559F008F29690D07706D953C5BED1A7C08ECDD2D12DC0BC5DF2
433F9D5D1004E5B7F82C0B6210060F6439E9CCA612DC7ACE7AD12F478F25D35C
E00F42B30857EC5CD2FB4EFA5A8E48AB87BA6E9E90EFE96048C1152C515E8E92
2D80ACB29B5D11AF2E8209532F1CEA6F1F25312B41B125B4A46DA4550DB20C26
1EFE3BB6E81F96156EBF5B7D624A8032161D54A462A9BEBF75A9A9D4DE33CD6D
813D150A71DE3CF9D20F5FA4599B24533B0353A7E13321F7E40BC45B765B5434
116542AC6B0A4D308ECECEE20AD96793284647ABF2CB166513ED165B0B156A0E
9BA31F748D236F1FB4954BBC196489B3E47CC5A5483BBA74C9D298392EF18220
749D58D424977B0028E65449802E6C1E310E78A4D28ADDB131FA225847519E5B
356340C7C6192BE1C168153D6BC36B369FBBC25BB71CE21A3E9C1D1AB20BD6C6
CAA328BF57F4FA226111B33EA2D57539AF4AA14612F04C54D59077B886BBAB0C
FDA85B3EFC1C18FD44FF2BC993B88B9FDA9A8F0523E4E17B87024BB6B520B3FF
60907094B45EDA06B5C0FC0FFDA5E4756A2D4B952A209C4A54244D0B32FA23D9
56D8DD9B16D9ADDC30CB7ABA76327DC13E282819C9764B317C507CDB27EA8A14
72D4E8D917E62C98DFB04D1C011A8638431CE2A93113031EB40F0EACF9094936
9A63BFF3E41B0F3C4A5DD8B590DD235A5E32DA7BA7C543C8D66534B98100C8F4
D680C94DC3C4DBE573678A57F49483B2C925BA9BF6290324C59F30816B248D32
0852F1F215A5191B4D7908FA753D997501EA15183EB324BA346FE3E2D4221321
8F2ACBB2F5361C86BECDAEEEC705F7AA7B8A6F0B10BCD386D19E8EEB424D3152
712B846F6DB3513D2BEE7D6858FD8EB114AACBAE769A5115F7BFDDCA2EA12456
33FB7A71090207070B9EA26895B88672C2E4323A3F94CF0C7669ED9E365EDC2D
5A99F18C212AB1B6FCDF5DACF00BCE930F6409136C1793AAD1ECAA2A3F6D5280
81E9DA1E05406F8E32BF80E146C917E2B53242EF7705C2E449112DC5C3C2C8FD
7D537F9884A1B726C3753E1159C5FAB5960A2E3E913CC7EF0A07843E37CFC58C
90C22134974E27D9D89CBC802B4A9D803BD635C059299968D4F70165A8DB7B3E
80326FBBCA7D915592A9190DDB7A41D2F69B4CB22412ED01BDAC0BE83554A4BE
A338E53541F64F647F4B19276732947EDEC47841C0666F63F640579BEE2F1E3C
E6C907B94D63283D7AFCA6D3D427A7E5F7552F82A6C3CF2AE1EEF0F6378AD6C0
4DB0C932CE0390DEBA757BEA45FA3171095052B839F7A2A9E417262CCB48CC57
C8C32E97CDEB89CF5E0C032E81DE358411F8EEB93F1C143489363330FE17A7CA
C73B25AA241630B2405D8C11BEACC5DCE371CE0F825A65B22E682CD7057C56AA
3C9B7FFF11E9378A08B9D0AF0BC5CEFAC4193C28D33F7DB0985F0A3C2E9D3791
89360FED33DD9ECAF2E67644190D8CF1B2A6E1B907827B56A62319E860CFB1E1
8517BEE8BD0756D51A9FD918C74D13C349F41CB204731B90C4F19A0999B940D7
B30E13B1118FD1A28786A87067ACCAFB470469798AC194B31AA1E693DE59D4AD
67068F252FBF712D4F6AA9CA51714523FC48BFBA1E37CC1D71F65EA74CB0A90A
62A05E0E6853A89537F382B8CD56601474FD3DF4947137BDEA68BE33B1C86B31
E7992485F79FC85E67561B3C73B9D2DB0F8C6FF6FA866CF4086AAED5FB232390
D7239C22534FEE644AE96C571C207C4DB45714804C0D1084597F9E36E64B601E
0F04E3F117B5C2E3BB4BF94A25675B4881C6603A9CED9459422C5AA30B71BC5F
5156C4A9425BBC0431AEEE1D60BA16B26969027CA7F4AE56DCA3968E1D4601C4
B07D0A442EEDDF638E3A57A9FCDEADE7E915C71CF7BA25F20CAB7938D921D33E
F8D0D5F4EF8A2692CCA84735346B765194A8895820108CACF6FA2E3AEB47A9A4
3B5CE1EFD56DA9F09EC524516C9C3E9D921679ADB9E1D6EA11EAFDDEACCA9972
4FC2EBF5ED79EEDD6FD3B6613D855D5E17D6020D27DC30DE4D0D18ECF3CEA7CE
7763657F76AA9E4557B07D11A728A0279ABC3A605343DF722DCBF1C27AB8A802
6A725FAC480FF297872CFCE56CCE1582A3A05CBC51647CFF73C1E4EBB6295484
3A34841FBFEB762EE097D8190E80B9F0939E1D48109C2E5D22864BC6AD983C24
93CF1748613F2FA7CED8F5284B730B33CB7C3EA0AE08492B397CAE811540DFC3
24945961125F4E43D88E06F214B67EC667FF78EE9B5C751537FF8702F5E018EC
FB991371A5684C2BB0ED1966C93323C6A1851B3C51E34EE7BE94274230D1D759
772EE7B0A9C02FC58493878A884FBC5E8CBB8EDC05C68469EA1007DB514EC8B2
3BCFB74DB6257D735D44AADF536996DE05F3A054F30B708017FD34606F622BB7
ECAAC2F97771702134CE77046508ECD695FB1EA39F4AE58671187FC42C3968E2
808F1D8B26E038E11B8F39F3624BFAB0758A0AF174380AB31CEA643513D89845
184EB5F9852A13A2C2DEEE9F90FEF7B4BC08EC3D1F16089A6C4D67EA0050A78A
49D749F627B8433BCD698BFF4B151A5521AAB19309A8D80FB0F41F2B493CD874
50A371E43770E44306B80F40ADD31F5BDEF34911C51C408D05E4CA5696FC0F3D
D11BA040B56B4179C550E27D499788BCEBB6BC3EB105FAA6E064EFBC3E823904
F73C09996A7966E7CECBFBA773E01056FE6F09412CE50BBCA640F79CDF8F3807
EF11C82E84E736A060EB4775CAF210654DF10D1502018D0F42D2C05275C5EE7A
C03CDA298908B5CABDE52FE335CA9BC02E9932C4295E25982DE1DC5A7F7D4E5F
27105260CF2CDAEEEFEBD12888FF26D3263B0A7C8129BFC949FFD786A0AFE6EA
E3F7751A3CE5CF1EC4C7F7C6B2F1CDBAC5CBB4AF4E5AB320A83EF5F8EA548518
7E4831E9033E6406E6904C934DDF1025D0C7DC1250D444B447CBC5C99131B436
E3695F522B3A9F1E34262BFDCFA21CE1DE2CADAEE76E1540527E73B23D9CB14B
B7AAF4B4B95F4CC83D93AFDE394A7F95FA260EA13D49E5999A73CFA7ACD6ED9F
9174F0C5658D20FB0D8E059A991EEAAE916E7598848CF32F6904205FB31C974F
C3B578B752E6174C5C555DAD5EEEB9110AE468D1CC587A732BB764878D79CAF4
27454F554B6B6182B53B81600AB81AAE8CEA6615C296181A2ACD808BC68EC947
6D35403448F4EA6E06C0403F858582A754DCBF8841FE81D39359DB59770BBD39
451AD0062C6D1CEE3D463FB5F6588F7627F435E1B0C7B5C121106509D02C6FEF
286C526C01951098D7AB3B5903F65176285D4E6B602D25520914622B04BC4BE9
FFBD9C7300D3C2260F9633816ACF8132B8CB3B7F764CF806D75CA74B270861D0
A7533E0276932A73AAA271C88960010F9028E3F2674C6288C0D710D40939BF5F
11EDD8A66E49EBFFAE38A90B7365027C7594C6BAECDF48EAFFA75526D8592383
D1631E51CF80110A540CFAAC7AF511CE3FCF7D9686A1CB8CECED6A1DA3F0E669
411F15753636DD983FFF4ECC07C3999C3F5AAE87122DC4DF7738F78702789C89
D8733DCB45320A5463A006FB22E2DE62772999BBC5CE732427D4891F19DC862F
93B03A24C94131987565B60AEBB0164EB9729CE649F61D2F19A8BB7C0505904A
9ABC8CCC9C7D5177FEE63EEB7EFB947F6EF31DCC61CDDFC39A277187657F7DBD
57A449D7BA28B98BF4F729BD36137E834E049DE32B46C468C443FB502408ED32
71A2EBFBC82BDC7DFCBC88BAAD3DBC74CF2C7FBF0C76FAA4EB347390DD0A95F0
EE897306A92F2BBF8556983A809C6A252FCF5F186822FB175658468CD6ECA301
D7DF996E76C827664C54CDD384AD9356402E391761E1DC4C45CE37AEBC396E37
815E0C32300D5004DB1BD238141F6E74CC0B13B522BEE394CE7C9B35D08E6D3C
3DF11ED0A79F0D71E2D065D215594FF0618901DED541348F0B921090A5DCCFA4
5FB0F877DC7593B0C2426B358A2CD7AD450F84A0E46FC35C7F7F376ECF980E2B
DBE01F419660E649FFD774B3CA2E26B6B6DE911A6A06825161527E3E8C9359E4
C400F0D277FCBDC25DE869B3E3C053A98E154DB85F66C0C29AA0FE6ABA0B58CE
A32351B738BA93B21252699638D9A7275FF20FE1EC843833534B15A83431B7CD
FDAA4F84C57F6D048274CC2A30435544899E9BC5EF9A2A7ED8D31983B6A9DB00
711B0A471A98DEEB675A8F66E0B13BCC0C763CDD3627A3737DD41477A8BCF7CD
3CF7321C6361D12879D78AC6396BC3936BD40FF1476FF2378F2228C2353E88B7
86F963BB76469CF7937893E6E63D0F01017DB6D4137018EEF6C9BF625A1596A7
A3B8C21E57E6DF36D3705E771E93F9232FEB35A8AC6CC6CA7EDCDF58803390CA
8D6FB9CA953A63369889DAF8A3F3379AE07DFCAE1DA5FBE871D8035F777CF210
384EFC66691A62FDB1B825834687536E08910D311804686C70EEEC09C63355BA
19E2A651B9017BC1B8ACC9DC6678342FBE29B0AE7E3BA41EB7AD90518763B64B
0B422DF1DF7927891B60E509C8F9D526BC97D4E175B21A8A8651D780380A93D5
FAF5B4BBEC5416501276491B79153F8DF73AE8E0DCF166E1670F2EE9B93192C9
2AB0367DA074BDBAC95C583E778B16E21B897C273B7E55B37F756E3299B76F9B
1AB8AA828AE35FDF411CDB247C03750FC0A519E0C3260C76A425B229E5E3853B
8297F5961E95C2924BB3BDC1E50275E46460F6DBAAB372244C84107B983B1A5B
4FAE4B26BBF76DBFB5783DB3C05EE3F8ED78A5672D1DB3D50464902DBE724DC8
4F0D83C3A2282C98614CF7B2E41F8FDE71F15E174D364AD5E42C807EC303483A
6F7081E060E117DB5B5C97660D155E0D3948FBCA832DBC2CA5EDC0F65B8FA6AB
F40DD1F36D63BA938593FC3F87DEB0F663278B252DE788A0B966B6BC325CA8DC
4E816B78B9EE734118C991282B1240D3E460A30FE2849516AAF044AB17C70003
E7F89D4B6E8929907014305197AD48A99FAE28983406A9C3B59D1F0962E90470
302E87A45A22ED99B04853D66E5A22B56F79FEF06F4D1D296DD7D44B615A6CC1
3CA81763379F634CC44C8B54F987566C2B8C83D91079238C2C778E65A3C355E2
565DDBB970F1EA2861AE50704AD81C1F42AFA8C2997B546B2DB74F828CD6355C
CBBFD6CFA982D1EC42F237D2255200E3730E533349E8F1489D91F013E82CFB4A
AC748838DE6E9C8E81AE5C0DA212DEFFA85E2C93AB0EB509D955612FCC6F434D
3202BA66D3F05F8128A99ACC3070BBDD9BC68C3BB28D26B8F81746443B45E380
AA81F51CE14A35845B44538A8917FFC77B69D538E9731D8ACFEC8CDAB569C347
165E8287E05176C4BD9E405AFFE33AA79530992191A5A26154CE54AFD9DB3C8E
9EED4DDD03E825283E14091FB92373C71F3F9B1649C5F3C80FF3CBC7915A4498
C221EFEAE6B514EF820ED6185E535DB5B408E7F495A812202447C343BAB5CF9D
C6933820D2B68C3D8456715851FDD9368B0E211AC670A50A3CE198E3EEE3B949
95395C7ED6945E3FEC427DDFEFDB97E1F78BAEF6F2EFDE0A207840D6DD0F8338
224E3F9B5EEAB01EA2E3783E06B4B229FFB653DD37739D2E9ABC3A605343DF72
2DCBF1C27AB8A8026A725FAFDFF6C0C77FCFA3DEC72E83650FA48C2F8677291F
8B2FBE8E7C83A4356A33117302FAE5AFB2F7266CFA2605504C42E6B2D780A3AC
66AEB8206D90AAC3190DED2F6FD33219F1CB0B16A56F8C10E9A6894D99C4BE9E
6EE4B6A91F6ECFAACC83777F9CB34FFC91036D876108A668735D1B167CF5BFE1
61C8612D66A783164ECEA734E43C233C791E1DF9F4914F8627CD9EF1D298299A
9FA9873769C713DA63302657F3B8E1D9231EB1EFB3402C2A4583C3E56D84F1F1
088A69A2B74058822221B090CCB46C0A8E7AA7DD461A4C66C31A6EE4CFA2D059
4BB2CF6CEE942A7E285871B3187BE186AEF93732E6BCFDDC80F39F89FAF12B4F
CA274C572FFEC24BA30EF9DB07054965BD2200EC193414EA231376981947B804
19C6552BC98F10E25115C0E384947A14739733F9011788FF8C76EF12390D5A34
D483189F38A0A6C8F8F7A09788999967CF3BC505F44C66CF7E1E27CB13D8DFAD
0E258D61B3C4F03884D52886F772AFBBC416441356F36BBC49366086D449DBC4
CF2E1AA47D1EE91CCF8D568072236BDEEAFCA648411B38D6B4119E652C4D9A1B
B59707159875C50CC350E50D7DAC5E7FB52B8D21B2D924BEC557EAA7D13B39DC
AAE01F9BD0E9BF9B7735371FE5A2F54624315981DB9E59213A103808341CD443
E0F90CC36D65565B2A317094CFE27D96F4C7ADA4530D2688EC215913999F2E4A
767AE32F87FC412738E33BF8A818AAA1C36E75713243A8AFE6FCD194A972BC21
07F3AA014F43215A2BBAC77AEF7388F7F8E978411F0262434E5810C493EEEC7F
9BE98C8E56CF86C591B3C07DA362436980B6D47AD18A9ED91BE5AB10A28CD21D
C2E11B6D55333607CD127CA1A62547D23D19EED0D64297A22CE1E3192849C439
7A469C12B20727A4CA38A6CFC4FF5C039DC0E092573197CFB0B7FB990F7F393A
62B6FFADBC66F5CB056A88A3E2D04DFBE0E746C1915B6A771A3343F145DF5577
981AC9E0BEC73764560BE3E6370B42169B35B4AEB6B72F30468065D1A2ABF1AD
34324CF2ABC97262724BC9A9A578B3BC9DB5CB1B44B1BD592D429207A73E9234
8FE74AE5B8CED1F61DE6B4F56754BB3D041CD39204AC35CA6C6957C87931BC96
DE8BEA1505CD1D0FAFD14FA0E75A402A26F85854113E102AB81806F1E7239881
A50C3765942F2321EB09ED414AA9861BFEDEBA1E568C3403D78F8ACC16D72E15
5435171FF7A740F4D2331DC7260579C7DDA09A0A30BEA55773FE4972A46E650A
5BA96B75992D4B60F1CFA989A08FD2A8CFAFB7D00CB210F9A0DD26B8C9021222
71A38B7923957A15D11BCA50C3F6D99AE73789CA43DDD61AFD0A6C1ABC42F11E
E049FE778149E5795166423DBE5D30C0453E411C9392BBECBE735CE28EE4ABC8
1450157CB7DDACCB72A0FB5112A7DBDA97D6000031341B9DF942E732F5332C61
6238CD53BB4DAD4B0FF3779D39D39D12059B64E8C6097B57863A14550395F5A2
1DBE11C89C293AD6CB2415433D3964988D8A747395BE885E484B64A8BB08918B
940AAA4FFFC36C8D1379D5E50809FC7E1269F6B0B975FC09D8A3A861C8776DB8
001F8685FC95EC7EDD60506506EDE0A9AC586ACE79E7AA6D35E67B782D81D57B
F7FD8227DE28C80A526228AE299C9352CB5EB8F2D1664F33B77E60BB67FF4EFB
E0FD24EACF7FE3DE94CD50C269F967F3ED042D1D038EA627ED64658353BE1CA3
769040F003E92210630B1697E7A5AB01D4273EFFA969966A789FA2F37D7346BD
3AD161C03E8F8192F4605E1B060F6543359812162F3DD7C87633FE6492E65F77
E77C47A81E657F371636EA4FDD5882CA53A2CF19DD076C943E28A9601946489D
831AF0241EEAC306DB1C2695D6DAFCD4F28DF3EEA1A007810B33FF636E46D8D0
0FB39ECC497F82E037AE6F7A21534DD6E26CC3DCBCC1BC5DA199C5150098DA93
0609E2665C39B92C18AAD0147814BF27C8FA6DCA0BBA0FFE903386B770A53280
1E9DA5E812EF756E96EE74ED62A402F6E2BD69C5BB80849B85FCC583ED6BC743
C7AB0E8CA470447FCED40BC94E7465C365A2FB21BABA09D5377C37F8A31828CB
16281037C9A723C97E1E7DB9D79E66212C6C00498CA25084B8F3F8F2614882C8
8512C1729003D5BB65EA8FE3B2E77F515CF05968797241B5BA06E1941C764A08
F51077748D1F0A951BF74B76495AA9C0A31E6FB617E37CBD332EB57640CA4878
CF17E822E395763C37FA98D8361B713301CE67079CBE840AB7599E3003269043
07EB59A046D1AEC79030AE60BDA3395B9FCF935EEFE548BF7A01BD97F34FD6BE
425970F8C35D3B49240C902A020A1FB4687EFA685543E21302A9E2117BCEDEC7
82EB92308EA9E707B012A05EDDED8C8CDD04159971074A64F2CC880FBCDAE2DF
CF164BB944C5F227B5BB965098937B118F9C0019B318CD3A83CB0A1E8891BE5F
6A0908B5F1AEE9D2A6EC2B2AF1D74131FCDEADADBF729A077B3BFA3C61AAF973
165EC8BB8D255A909C780017684ED0780345CA2E6113E992D2BE44DD9B12DA39
4FF35F464A3ED15F945FD3ADC0C170FB5D4155B13472B51A20A77FDA4294E6B8
0761EF5695001E3C2213693BA1CD5E80D49FD32D9D1C5B59004F65BD116F200D
0FFC242AB630FD85A75A12565C6F5FC2D898DF598F8E3A7609539BB1E313BACC
161E4DFD3BBD84E1216A28AF443B35B63BFA956368397A69D41DD7156C5ED84C
561F074347A9CD1C4F12145EAF482EEFF168D3385ED1CF6308C65A376E555E91
177C25C29D6E749326DE674F561341C515735F1718E0BB5606C2C61197C0E5F9
1567AD33FD9C3107DA232FE1FB923D3ABE78293BF063FBE53027F5E88C40FD32
DCD9EEEE0F6BD53770FBEAED00D5BB28308D575A409EFBAAE5D96D65773EBE8D
69A606A3CD3B0971EA74DF32D730CF09DF4AC89B211985D09A39DAF753CD993A
736EB7D20FB5673360B664F6130809F44D0A486DA8D9109C6B1726E4FE8C3B7F
5F2F288CE75C07524F22BC2F6FBA41D80517257610CA9E08C0A5CB8F541DE293
B4D500F009C2ED820B75D4FACAEFA4489F22FDFCEC04A31DFF256C6198A819D5
5C36D2C5556D4AEEB434AE81027650945A5FD5CD86CFE17B5C184328F41A585F
7C1141A7903C924ABA53A4B5C7C390F436CB4C0BC47E05915E0B9DF531CD017A
A860B96CA41C168548C6CA1DCD50EFE1EDDF114903155F14A3D27477386B661D
15646485E1467125B7EB3C9EEF561001051A26F3196AEFC2623EB67E43E583D1
80C5BFEEDDFE8A7E2F2BFB0D474C7B572C44DC36C236272FD4CDFC8923B80543
E5C3D8B0DBA7C99B203A6F69270539FF862BB27F404048CCF44B5241DB6573D0
A1958374CFE21C11D4C3E93796E924ACBA295200A2222E49919A201DDE448D6B
0B9DE5BC55DEE08CA054509D31772F680EB7CE81B842B4C8FDA6F94509F348F6
B02FEDFEB2DC056F563A7E9AD3E9D8A7B2911F95231CF1CD8B0CC7E43E676816
D96CE5EB16C8B38FD1EE596E98104052940A23C2D6CF236AEAC9059DB1F04895
DF000C2F81D492A9799B23B51C822C12D7A68B20551C36E556EE217DEE75884E
F4B9C063F70C4CAD4A6BE24650D5690822D31BAE22AEBB9DF49C6444902E54DA
A7B54F9E18148A72E167137E7BD5DEAA132AB6B3B2842E017337F843B4F7A367
E9409A6A1F6F3D9F3C94DCFDD133DF9CF8D9A3E6F22197F02438CCC1953B78E7
D9D431A1B5A04A73AF4A83C50DFC9047E25E4BABA9C7632E6A494A8D19BBCDB9
75BEED49ED20A159AC35C33C30A8AEEE24E80950D45FA840D3627125014CC1C4
571AEBDF9A96304B33046CABA812615A9F8669CFFB98AD6151A16BCAA3540A85
AA395D5B9496B046D999B464B9D996437C978A252CCC767AD09AA9ED8348F564
7C4B7D10A12937EA59229885DE2FF1F9AAE48B9030B807C46BCAD3D070403F49
B5B89CE4D14F9ADBD2CD25DD384DCDD067444272BD8E263B7E189B0658313B8E
EA64DE714E59438AD980E0B1FFD51EE19692ED60A58C17A015A93C68C30AD52B
57382F43530354AEBAB1A9A5AD14D52C8ADDF2829CC78660199E665BDCF1E6EF
114447CB082ED09958E703F7C6D723B9765172D5C831BD785D4C7454D57F3670
A11457E550B1E5EB5E4E0685C62004FC79F789D849F04C06573FF3B1C6FC0878
C367E07F15D0E746759CD77594B3C187E1943876B8DC19F7600DA0551BB23269
2DFD2E9CC177779879FD043775268A91EDDE2F6F2B8DBE85E4FFBD1208E5F29E
E4BC9F702C257FCB0D067F058809C206D19C54BC03C10FA55CD24658B39A5896
4B4CA44CAF45F63AF49B330AB3DD8639AE593DFA0AF0A53861A009796C15E07C
79096EC535587D1A175778EACAA24805B0C79243DA91D2701CB7A4AC2E25FC08
BFD08FA0800DCC0592D879092830CE4255CBA5B2A3FDDE1DA1C862C9BDC3A2B1
52842BF8FE45235800B8056BBD534984BD9B8D746C1800A4C8C647055A09A10C
3CC77027D8A3C0A06A48BCCDF5D6D6770402B4F12847BB4AF81F71E37E6A0C5A
09FDEC8D3678C1FE53DDB95F26B51CADA6D39CFFDBA38C11C7238C738370C489
C115E7FA939688C11F16242C23E01471E9983CB925EFD877F38D9A45A973757B
C16CC50504033125D2A68A1A33207DF24CCB36C662C7BB5E8F7DA664D1CEC437
E17370E6BF35ADBFCF366596F5E3DC4BEC30136B8BBA284FCE0245399A1B156E
50676ADB213263B3E2DBA29228309DFE16CD25D2B742B563823A458C7AA2B570
D7C2A40545F973870CBD398A12F59FCECF6F9848B491C64BE4F4D111C5CA3DD4
29329DB48187EB148AF69215DAF450DAB3F60B618851B85D5C52A951BB4ECDA9
98E774FAAF6542A07BA3090163763C99DC40C53BB0F0A68C7C49C128507F6482
21B8C86B747BFBDD92A1472065234C63F6B47A88AAEF32FD7B40B36B4A177BE4
26AFE898EAF72DF4CAB8D51ADCCC0C75655A60AE68490AC4A06DCDB3A1F3237F
7522F4090983E6DE4164A97731F59B6017188D449C867D7B28DCF6D445756209
587C4C0799B8DF467029603CBCD3315B06C6DFEA1F92E76699D1EDE6D16E7073
C91B7E0A8261D59369E689494276FDA4925397674A4FE6721018EDDF233229D7
D60AFC8B53499262977674731F47B6018CF32DB1F7AC0478F0A9D13C11D38C10
E4CDC599E8BF2CE72DE9FEDF547B68A41FC346A142BF0E88F9D92761A5396B67
E8C921751FFBD0822E7A07A35E6034C9C7D5C18FE5C273C0C08E671CDD80A6E1
FEAE907813C88DC88FFB06B300935D7C9C8B8A04CFA8915FFFD946AA9B0461A8
F29265EE869340E8E24E1526ECC248C1A3099AF1EAB3652298E6F6E87978C490
8A372877B2AA469E3B149F0E450313D8BEE3496EA31276759DBBBB77853AC5A9
598B71BD06AFA2D779C29225888F54344A8807F6E0781FF8233AA10DF72E6E09
BCB6C2DF96435A4D77035D241AD41FAE4BB693A50E24F925F3A8D57A31D8224F
50981EB928B80AEDE3F65A005A1EDEBC942BB93C8FC36080F745228EAC9B57E4
586ABAACA734FEB9CDE1CA050199F230F79DBCAF0228306D2412D953F7026829
65F05FF35BD79F3811FA7BF788D1C1CF4A6165B8EEBC6994D56C69EA7D6BEB27
66F72027F15B498882338B830F2E6823E36E65B9D87A982B8858D24BB0C12715
940D7405A7FAE9FD184FDAEE2BB532708738312865C1F737ABF60219A4386FE3
C16131FF2A0F150EC33F916D3BB8643FD7604611D087713631FB0862D172EDBF
20A1212B1FF522DA5E22B15E61901AE90C61C7BB0BD60BAEB18A4E15591C0409
C36F63F51819C4206CB45D52E88EB1C042E28A6DF72F9272D69BC62743F758B6
7B1B1C6FDF84C9B2E9E9B9665E4C43A33EA29CBE2AB98CD0305DD935D8F0F5EE
38391B7DE0296D4F6D3AC184BDB890A0DD4D7C62B15DCD4C76A332F3AF83E868
0C4298BB02E8DF6E257FC47206F972AD6D1B60895C289260E878ACE4F6553610
240BACD84B808B5872580E379881BE02909D7E57B80AD9F0008277E29873F960
0A094DC3C4B0CB7DE48870D04E719151CC67B948739931070DE3741576F7F6B1
F20D320C6DD7E0B018FD9D9192B03A578FBCE20DBF53651B28FC843AF4D88781
1EE08AA1051137570C59CE1144636E3562324DADE28954EAA105F14AFABD4CE3
DABF1C2DC348AC0ADFFD24417929120E0E9FFE9D3E0F8C76F8F6008A2138B9FF
FC3CE074F149C2EEB29A96CAC030E18A42C47DD0FA1EE3521C98714EC451AB54
634646D6E615EAB58E98ECDD495C31A9A03517B41611F88E610797BDAFFE1E62
6FCD53EB2EB03400B20F87F1AC8D0AAE1F0B28330E00E9D210D7B972D494AFA5
BEADFB4118A9A740F6E8A33CC915D208565193EB385557F146784DFA64FAA0CA
AA1038E787DEF42A610E7526B1EB48057A75EDF72CCD4BB1D8B10F8D9E69858F
434C7BDA1221DFBBAA1D7BDCDA73F9FA72DABD6F0BEA16C9CD94D505A6491047
01909913270E0060FE23E1D646A22DA4AA9C9A46A036505D0E6D9CF486DEFFCB
F43833FEAAB9F2E527373DAF483D0CECDA8EF1A082C93DDCE47DA4417404AEC1
040C62837132F24B4E513D791E85D20E259066AE6C0078B7695BEAD59A29D4D7
3780FA77F7A1F5832E0D2619B8C1EC0024EF9121CCE324DBD53C1FD42BB5CC5D
17CBF0E1965C0E6EA3DAA2EC5DFC975ADECAD88BCDB45C0778BCA0D4AA7841DE
13466DE9FD149D6C884B97EB5F467C93A2FC7F82A0B3682C1D7B0CAE1493A3F9
B3823FA6ABB6DB6354661340033C94E7B93BA8AC737A8881A9C92C09B14BB2D8
7AA395EF6E1C8A665E808049F20E7ADF22AE9612796DEB9138059A4C12DF4E9C
75B5727D400344644D0C16A555C50F6826750E25304804AEB03FEF3B12D9AE0D
47CF5332716FA25C28A2BA0713626E0C22A301504A6C3B746E7F9A862C934387
289300A4C4A0951F09F5CDA85FDD822B626F0B4DF1BEECA3B8D6466AF84A690F
56A09A30E34DCB6EC3C516F73E421771A0CF25D56B37A2FF5A4821E0B3B7B18D
5993F4D76C578D009485AFFEBA7C35C3F66205E89A7B698F02F22041691140FF
E5E19628A74DAA95A2380199986AF601B1BF43FB526365DFFE3434F215C8394E
B5DDBFA1AEDC73E86B6D6C33B200B97E698A6A728947C0CBC94E7D4B65221FCD
5EC8E5188BAAF325F38D706CA6E53AB311CB14125FF8D460A60C2AFC78423B50
228CF39F95CCD03A3C05D9FBA9CA9AFAAA9BC22BEFFD7FCCEB9C4C83CA508BF0
AC3739AAEF332FD04AFAF0328D5AC48F64CE4F6BB06BBD2C84367BF94BFF8169
ED7468F5AC77C22F598466D34DF4622A117E5D91A9BFEB479C6E657A4D8874B8
F05C53B3B0C36B42C0A77EF54AC96183E21CA4B1C221EEF950403A7738170DAF
B08E5647FAAFDDDBEFAD59BBE61F195FD28D15B574FD5BB57AEEF108C793DE29
AAF3F488EE35AC9BD82B02B27E9D2EC33F463025923F1960C5F28219D8B0BC11
18A216AC0AF733341B45FDF97D0584BA3D4A763ADD3662C63EA17C023E505FD4
A933262BE464006BE4C2800D5A6FD4BCC523B0DA9673BC3B50FDACF722FFE9D9
60DE86238764B14EDE6AAFB6ABA0012ABE409D8A42D1352B1E5FA9BA05826979
43FD7A36C37E8DFE3EEFA96E8A0403D9E7CE75883272A9D0E27D26CEE694CDE7
FE3FCF2EB2698F1F6ABDD226FA7AF2DF62C558D8F48ACFD2D5D4175148172ADE
1B48DBA023C04C2961E758C277E50FBFE24B4FC8353951C043940C946EF1F816
6410EAD0EDE5A4B7B4A554CF552C1C87E40B3BC167422AC143488EB42B699CE8
F3219BC2F0583E05D0D396D780DC39ADEC4BD65527D10BFDDA06D5EFE76637BA
E61D79B5459CA361CBCA9D1CAEC200AA98096C787A0020E96FC95267D57702D7
593ADD0DA2B0EE56CA02E6B38A7217D2044C3F197A0C9CDA58DA10F3C8136655
BA97CF13A43463F32BCCEA8B60905C58C103692D486EF1D4F2792ACA6EE48DB3
BAE32212182AD697CFB0CC58F08312F2DD4F478C5DD8D9A023238DC795D994FA
DD493714DDB6EB1C00D771A29C4CDC5F349E318B847503261A401BBA1C2E9D3E
35B9855BE91FEB685F1C2FD5CE27D03AB6C3E632A66B635FBE64F21F59C099D2
14B9AE78C6D8C5F18A64BFBC6D1D74048212B5BC2D98E607A891E5DFE6871161
740E35CBD8DEAC8B733358415D10745127001038D6E6F468B53A18067FF78EF8
F45AAD2EFBFF02AF965F8EEDDB3A17DDA890DC56AC7CE1F8CC0CCBFB3CB6957D
F5241539B03B4C3E9643BCFC5CD0CFA687E9C43A866EBEBCA67A7B9850A332BB
C01217DD58E08D96670DEDBCDCFA76FD6EF1E6DC152384467BB2DBE631D39D42
820D6E8989B397614A0E71F85CD03E763C33EF2676FCFC40E81F13C550BB5B0E
515040EBAC37C346BAAAE8DE024A4DFE4D9174055561CE5E48A6629AEAC50E90
C1BB3D58C1A1DEA895350FDF7F8F48A11C5BB8BEFEB84737056D289596D758AA
2C2C0417446923BA4C8A3A0A49A7D380C9A702B59568F07252F31D10B25AB90C
79852DDD9CADDBE85D76FCF9EE4DED1841F7BCAB7825329C7DE35D390B428E7C
99355B4BBD66014E57645949706C496AA530BBD6A8ABF4D144C62EEAD5295AB5
8C00B7D3CC86A3E9A47C59CD887AF89E2C1D06D30C1599451527373E3666F7BC
E7F32F3762023F76E0A35C10164D5ECDD968BF69660E1354FF486ED3FB12A35F
865D01A344CA719D481D32CE02F3AC77F5C15F409E59E70255718DBD78FC30A8
791DAF4F6F08185D9C758A5409E78B227D49E1EA41A942E3B4633F5505
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3CBBD9680055149E77366802EF209864131735F93F08
95E007A0CF0E3E17A31E9010308E3C61FFC3830922DD361789BEB1F400FF4BBC
2B92F641CB231738B40E635AC2EE52C573390EE3B12312F51BB5D54985C36022
B74C47E0081BDA281A3651C7D7C71639084E0D77352B7963829012FC72968C57
83506819BDF21F6A3C2FE3B76F5D2F891B54B03BFBB05D94BC32BBD9B63477E6
294229BB3A7349CE7BAC7CD903D0AAFEEB0DD8B306E7A1F25624CCB6531AEC9E
3572FC29CC7319733165F9BF6CE7C365D68A64D44FDF8C65B8FF346471992C0A
3F2FA1D88A32934AFBECBC8527A737E27EFD9663365EC63F65DA6B35176237ED
D7A4482A126EACC74EA636E86514B679EC97CB3ABD427DC00C46B1DD9401B5ED
D5FD5F75A24D6CE2C9DEC732E897012B6763F7BD23E04177E95FD3D500D0B015
8BF84E6D46421306C6B44AB69D26B5BF8D90B5765A1E6B0EFCE23A142BF2A61C
072A22F9D743F680B433ED8119F306CC5F2623BFDAF5600168775DF39E2DBE9A
04F9815DB6DB1EB3472A1CFA532E87B80606CB36C4BBAEDBD7CD236E6D2E8F4A
0A24C4BC96A183F21137667331B98B6E645E4CAF177E39995BF7AFC83239C136
173D5D9EF4C45B087BC34E8F14FCED37AC06E10F28A51822A85F52582848C432
424122267304E30DAAA5011FA002E6C13D9623AE2DF25F912B8E435545FFF865
ABCDAA308258FCA26FDF8E60674A3833A88BFA1F83B8C54B5156775000412F49
AABA8382418A5FE0E5FDE72F24DA6293BBF968D0A6F156C128831334CB91B399
AD419B0CEAAE1F48EBD87D454CCB482431B09DA765DDDD846FD612DC959E228E
8C6A5EF12F662572A2EF5242D59F0745EAA8E7D305ACCEF9318B2C17CD66AAC3
8D9B31F6E5F40BAA30C228F2115C76EFBDC95DD5EEE3E0445EEDB85A2CD479D8
AAD2A344BA34F255697A83BCFFB14F71A1BE0157AF7B17E3AA0B6E105F417E15
11A734690337D1E07BF07FE9597F480B70DE4B734466D9801CFDCD58A6D2A807
E62CD47980F6E3109AA1D23B78D070B55FDEEA03A4F44D33ED3FD2DCE11C82A4
1F1BDD657A40C8CEAFEDD8E2EE61074545C140238833B9028263E4C9B61FF7C7
DC561130367BE8E18BCB395AAA4CC561CDA3963952C2351C95D0CE6E34D41D5D
A6528B5A62614D9684248F8A2FD91054BA0D10C1E04F08251381E0D3619088D0
9CD76DF7C6B31FDD09F67A093CE1EC32C382FA87A92192E15B14D298DC01E627
12BF9622E8B147BE9ABE1D4AD60FFF6B16F53A59321B13EC57797E953183C6DB
69EDFA7B966C3E2A5C8601D6D1AF2E883065F19E9BA75B2B762C4A23D34B775C
44BB647428AE74CD1BA9392C614D16CBCFD41876132F119751FCC36E692DD3F2
5D5A9F620298B46944F76EB55F9C73002F6C4F9DFEC05EFF14F350200510966C
B3181D5FB8C1B0C80415E775E1BF14B4816EB41BB7CF66575F9F11FA0669CBF5
66EA7F81A2939D892DC3739FDFA1FCBB073BBE271F708038E9F8A93ACB7CAB0B
ABC9E18E41073C91520590685C0E5387D55D9DB2C7FDBFA001140EFCBF790188
48A9BA46EF9D3780CB82E7AD235AF1F50DA92726A4E68ED1B4F65DB6602244BD
3E31F6CD0F489A9D6DF31909A3DD942441B9032C0AEEE1B179B6968951FB076E
3BEB9728BA6EA73AB67657B756582B60BEA1FD3B8D83473F1FA6F60375EBA6C9
B53CF9B164F043DE6129387A016B76AEE7E54C02E9DB0044A3CA3917FDBF68D7
E9DA9C5FEACD79CEDF990FA10437C4C151E156831DC75594605EF78428F8B532
A773756DA7F10D3FA3DEC75528276565FD05F91ECF08BC3A3B595483C9C9C044
ECB769874D146CE5899A9411CC3748C48B567219F39EAB336855506F2BF0A4AE
6B9E1AFF44AE11F2DC1B0F59A0258902D1FB6D18F72106B4730058CE1EEC8CF9
00D44A6EA5A19916F0FD560CD8DC42A6A9AB2B85BFA6067406426656B2B82296
0552F88DBCCBA8B3C92BE288DD7E7CA8B2E980F365E27052280A79DCD9BD4F7D
480B79096CF504A15B448E48191B73C023A053648AD0ED4B8148AD6792632206
89EF8498AC6F81BC39BCEF8AD8EE896761A5398CA51CE9AA6D88A2300EF558FD
304FEE0A28B38C66AE05B06479DF7C267029A94FA779C79F8FD76E0CA9868281
033A681EB9F311FD7162E11700EC309E4C1D3354C3B4B1AABD0DAB716CAA7259
D8ACD4C10E3B60E4A56C9052619600053DCC3CCCE6459B79CFEFFDAD6174DCCE
777B76B403712243F3E619E56964F915650BC6F68BED2489EAB986693CAFE9BC
22DCB7450A785D1CCF61CD1A19D9DB159D89C09A2E1AE8357315E7C333FDC6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE279918B0B31E08031DB686D518B4CBB8A4D0B
EBF6750A452A7F706EA676E3B3237FC5656B29CD5A3A04F82AC871B526CC28B3
A61D985EEB3610FCAA433B9C6D4683C512F0FDBF3EE6FF552D7BF0BBBBA37050
FCBE3F164189FDC8446ACDE8D0D4050278151B46E56AF826A0C2E9389C2B8BB8
E38579D281D5142944D3322E1C66D456E4C5DD727AA41FA5B369D5E10CD71832
A7DD40DE855B47289C449B6AD8D5F1D557102050EDA5F1641EAAFDDBC082E579
A06D8A3A323458808BAD0F4B8A2BF406DBAC4C5F555EC96E760C8245A1AD9F50
881DB475F892F868823CC55D4859C09148529FBA57A392127B68F5366491D1BB
097D8FF4A71966D42DD988F48C8A1F4DE0449E6AAE79500C42B4EFE4936D0D00
0FB339115493C16412F1D6DCE02BC7B485CC108C6321EBF1C609633933A576C6
B0758D49F3155D448D505F73A5206EC1C8886F5949790A7E4B850B6B8E31EC18
B7321E63AC75B6588774961F6B7D313B850AA4B368E48DAFAA5693CAA236E150
E02FB2831359FDB95792B2E6431DD24BFA8F2B51BC21E2E5AACC0CA211F50A13
075ABCF9F440CA468403D939B91520C652F1196EAF1BC975E26F8057F69CB972
E976F99070AD3FCD958C1EC54B3994EA142AA0615EF7BC00D85F75BF5F32B350
E2CF46BA0E8D0120BDB54910E5C27A27B59664E856EDDE290103A0D490FD76DD
09B152B3AD1C4754696B239D4B13935AC19769600943C7343A5E7A06C9115395
DC2F92EA95E5ECE5A08EDD16DF74B6297EC0220C91F8BB9AFE742FA96456E131
7D41CDCE88A8F9A12D46B8FCA50DF4433B0B8AED6A63BB5FFDFB8D48D04F9849
2972699B5667C0D2D206F4785DE20A854E1D4C655A690689B7B5A19F8162E5D8
454B7A1CE94AF723F47C6B168CB7269CC802B14545C8448B5C260C6AAED5FB23
2390D7239C22534FEE644AE96C5718EFFB9DF1AC47CB3022D3751E6B7123FB71
403E154150FA4A14EE2CDC8F0BD084CAB30272E8F065218BA88536F138B94AFA
D750F6EA9BB43271084CD876A14CEBEB86283BDB500BBC0F9E152C30059054EE
92951E4A202AB409F7D16443DE00ED69C1FA674BA3664F8BD00C08A27F475C00
E6AABE35B01B991AE910B7DC821CFD8A6B5C7F4B116E78065CB219C926D45163
EBF6E81EF0C38076871283D64FA5F2126CCA7E93636A7CCA2158B99A15CD405D
4AD290CD8F7AF8845CF78D4BE9C7F2E4DC00372530C64BBBB785117A8AEEC190
9F49C82BAD55AD174D38A74582CB367BB50ACF8FBB2C8A2EDB17FF267D0F21C3
5BE42CA518272C9F9FB2DF0780C957CF1B9734E9F49C0E6EBDB5D24ED5D673E2
6A25811D4BCA9D693EF8ABE784D2BE46DE1E57E1B738ADF6FD49E6A53BF48C6C
2A73026234D3719C72C2FB8B8274AB54A6853DC6784398A6B994BE424B6E9078
6C303D590747608AF3CDD6A51B5612DD5D49E1153A25EBEAC76FEC601CF4D10F
65DAE3EDBF9A163BEE244542BFD2849D498C239237ECDCB23458C7C3B9395C7F
900C2AC7BDEF8FB9D4574698BC8D4E374B34969A885A0A4AA26F19F8348EC621
89B42297868AD2C3E80D95C41FA4A5AF7A016D3C773E040312AA0240DE24C7F9
D662FC2E59673DEF563AECCABF724C09CEEB5DCA64FC6D24A091A75B5745DFEE
F5C1162900B5F1EF5A7102C27DB1918679E7E354A5DABF897D9C8EF5A14FA8DF
FA3A7B3D47542FFF5987268E60E7FD64B017EC6A8FDB4BA5AB5B5B58046899C9
C5993E7302C870678DEBE8FEF3F2438217BA5121CC668458620DB3D381D56770
19CDD612E5C0A267BE4F707ECE93B3E1E8BE65922315729FA5513AD13B562C5E
E145AB39905815D6C3E8B60AC5C1D4D7731E2A6B122C6F57790C42B0368AD7A4
99EE5F029AA6F8E302F4CD994EC08C00AC6A66C51254F71280CC722402E200EA
D4F6F489DCD61B81CDB85804A5EF00CDB09D9C2EE4F3D571285E319A78F90942
1C31359DDF81F38F6E8615BCD0E6CFFE077688C365888921E45608C868A0F6F9
D726CB2CD81B49A9F47C12FF76284D3B07E2C2E788036B4867F90D40C1E4FF74
60399F1F08F98A05A579D00D1ED5E8A86BE9DC1CEE3FCB03B9A0E4BBB81C849F
AB1A6089E9807455A5DD78B2EC3090E36EDF4D19FA6BBEF386127BBDB53D25E6
8448A975CD56BE0A93070F848850FB9B3B0285C7FADB28A3711C06273B79FBD2
A509FDF7AF81630306D67E0AAD0DAB78243E1B814F745234BA7CD57325B5A34C
C3F984018DC9653649786481788A6F58ADDB87DD0D883AF60455753850A63756
5EBCDE76329F5626E6328EBE3DB5770A4C3E21341C304F38845FE70E091803D9
D14037AC4AA8C4D17EBB62ACEFE5344982E0F489D72EF60183D8F2A79A3AA765
C18E0479B0255870CD61C8CF7AA8DE567D174EC90945404C5B928EAF3E8DDC1E
018442474EC6B0B42DF539EC1557722299347DCFF0347BA4273054B8062D3DF6
FF094944AE472D60DDF6CA62288E4E780F8614C7749C9406325C82715C866134
637DCCE4848D2B051B8E0EC7B88872E9AE68BB5DDC30F4A61119733F6F6DE0BF
4C6437A849A661B6A233B1C24238BB910C11D2A8024C89FB5DC745489AAC2570
4C61242B4B1983A5D0B134C8052495CBAA9D2E2E014641BD58F0EC389FACADA3
08A1723A5C2492BA0615B0222EDD152AD19C307118AC0086653521EA59D676CF
C36AB586FF1FD4C383E2785EAD36F41274FB0BFF9DFEADC612CA44A7392D8E79
1DDE1DE818BBF26CE3BCC2569F5CE6DC91D4F8B7800A05DECB300CD7A8C38D77
4C1DF436013901C9671F77F34A63F361C5579EC5E00C5A8E2FC97874F6459EFC
C1760E9C6C78E60CC0152340DA6F26C67B2E10B620750E2C44E5CB9DCE747E29
6F7E716E6BB12B699A2FCA90DFB3DD730D96D100DC5B1BBB1632D7015235F4D5
1C1C753EEFDD6ADCEB45DF4D00713744039C43B860B5A9C51AF0BEF11CC8E85B
067A402342896C9B3BAAA570C4900E12D720F2812F28626DE3BD3F3426B82718
259AD02CDB518BA4C4AD8F261CFEBF43857EC7A543ABB1E059247E276E206CB0
0BED125C8F78A665901F80068C9B0AED83074C6270B177BAA18F1975F43E9160
8B75D86D9F7C1E986C2DDA71CBF33FACEE675B943764AFE71B5A359C4A092916
3E8EF660794518DA4307AA5B38469000FBF31BAE9CE8703754A099D21B332D3C
A19A842755A79DDC1E281A8C34A969B80EDC946658B7579B5BCF07AC8B45C2A8
3664140E70CA62DCB3153CB4A8E46F12CC16254F52A26FE47FE41504D3E851A0
665AB60BC0CE5C72512D196F8D1BC0B3FC12DA2D13F4B9AEA2D017EE7E574B86
2576F5EA495F51E1B3A86090ECFDB57097EF73BFFD5E41E8AB6BF105F87986D4
95940A8B4A29E4DC974554DF975D026EA92FC09DBD65783663CAFE414B6F8C06
F00A26631D7FCC4527109F177093E7432F5FAA6CA14F1654ACCFEC8FFC127488
F604E972B695E9EF18F331A58BE4704E5130FB4984C3FE2474E6CF0935F90B79
7221D94774689E83E5406F5D9554C1284249C687A6CF5A6B4783F54267C48710
32ED406DE854CD5E243C0BE4656E35FA02FAF5101E1AE6B7CB286C9DB979D763
FEB468FC7AA2DDBE2E708D27D89164B12BD8BDF0418BEDF018EA67683158D1B7
73C6EF553EA897D5F2D53E75902E57D7C4E06D7DC83F1C557ECF5DE83748370B
00EE03A3ADB919976D4DBFF11B246AF9C2FE922A8A6F8CD47656ED2CBC816B17
3B01048BE9D1E4B54ABC0396D5203D088ED7A1FC7CC863AF414AC14AC2D75E5E
EDEB706CFB2AFE24EB580E55BD31B793E4065CE83795F047004ED88F5C38BDA8
7F5FA8880517429B9C4E5FE980448EDF3BD57758FD145E769D4E88BF43D19050
DA58F5EDC7B4AA76BD8CDAF0B8639BD5D2C7552AF5415B7F35B957F02B962930
D3D0C3AABCE7BF840A7A035F2CC57FC978684570CF6C8FDB960B9CC6E9435D65
77D1CFB71D362BAD7280AED8771C6EE2F7E2D86C5661CDBEBB354B84249E93B7
7A0E409B4D5E17600E1E43F5EA1F884939C0AE467119F1E155676D10A8A35955
BADB667DB10180DF404F43A166E2E533F1C050D35CE4AEE92C35EE391398EFCF
E19EDE2E31F837DF86F1800F59C89EF6401112AB73434A3938E1970D8EA3CD40
C7B8FB44205899626FBC269C25478E0A63F78F3460EDD4F64B4D2A5B3E660B64
D293F803C670E243F0B0EB1C548746C08C7F4FAC0D4A7FD8B7369AED2AE9A79C
74C0FF0E0B0C1AD3B59BEF79753FDA3E929B52F207382364B1C62AE8311C4337
297E030CC0CE93ADB4E2FEB60E28FF6D4AF0010D422AFC137F2254FFF6C2929F
CB76A235705EC088049C1F1B0E78FD2D357BBBFB0E12CD481F96252AB7402213
DF9BB4464515CCEA5FE4C0CF761E921D7D2992EB24625547D54E3F2C644ABABB
47914DF3ED2C719753BB1EED9C435F2D571BEBA4F76A0AD5DFDBA6EC952A4F37
948B63263FA4097587802F6C66C3BC6E9DF45A22A24877E4A4499697D46B779C
8609E85E4BCFE84319532B3AC9D62BD413CC127C8DAEBC28D7DE5CB57A30F23A
2859902409CD4FF43EF6A99E9FFA2DB4113C12AB9C616F074276C4840A546A73
0D24D8518117AD200014839545B1078F38D7284FBFC473C510CA28AB90147613
F0EBC94C3EA0001043705336F16E783FDADA674B361F951D5152C0011FE0BEAE
51286E4979DACD3F5A953BD9E918D5E46449525A4A597FF0F091B2B4794752D7
EE5D9B94524DF768ADA1377760AB1ACE2D780F5624CF53DE046A36EFB35B52F0
566623440D7F364C4030648BC39783FD7AE189510DB572D01093BC4C7EE0C09F
389FF828AA7585F9B7FAFA718DAF925AA837B8C0B647161E5C322CA820521400
5D234795C9DC1354D1C0E5ABC997C64F3C84D2C3B7581BC9566EB6D012B6B784
F740B8E0B360808C984DEC73EF57328A2347BC752EB0EFF7BE8B688A3622826E
C83CC42DCA4A26C504AB95C5232A86199FC1295D8BC52BBA9C5089A346CC5760
009233FDE0B38CD4EC1D07A9F817ADBD1AA6D303AAF94D5FA688675B55D40FA4
3C6D97741D9FE4C964FC6D24A091A75B5745DFEEF5C1162900B5F1EF59402CD5
E4D0C3953C9493D87F46CE4E9C7A543364A9B82B34154924F4739C650A8EF8D2
38C73BD6689A0657D8427446E44E2F5C77937234D1D6AFCA63944D3FE5126940
8ADA00FF11BFB205B9A42EC1F50B435E4D44E14E22056FEA071D0061F16D8879
6C4BA0C670D0E715ED9333A0FBBD15F19CBCE5F93259A6C4A8CAD50B9186BF14
62D3AE2AAEA8A45E9A29BBCF83E95F0C65B2D60169538EDFAAB935FE3468186E
CD90E2F15FDBB395191E6C4659910683768F80764D94FE8A746FD06C08F15F97
3A528084C73A3416B7D9498707C04E9115D411FD74AD771B5973E6D0A573A1FD
2E01CB1197990EDF8444CC83F1AF789DCE5C7F64567C9D80D1829D7FE5F45647
ED6B99C6D96B728840A77AAB12DF037473065B62E9F3775CAEDAD9508FA92283
6FAA01D50CBB9B12B543AF2A86A99F4D544B8974F01B52945FC6ABCF3ECD8410
335AE6CAAA4F740EFA8AE1742B115F4FA7FD8E330D0B86B191FF5B038A5D0C32
91053A42460468F6A1700953700663A85229385FB9BC726979DE858914A95826
CB2A8F0F17773C8DC86EDDB610CA36C8A6051774DAD79E4E3DD10CA06A919430
0B6FF769550AD34A047DDF4DCAD48C79C13C76BDB9A98E254804C9126F6A007A
D697659D0F4B9B7BE0BE1E74DE179CA649DEDD316A452509D2804B5BE0F6C5C6
EF94B0FC821BF1E02C91C149EBC163C14366CDBF3C81F57A352355320AB4F3E3
A84E4B60EC6CF57A1A00F90F224190D7BFAFF83C13AF40E46F7154198D7BC2C6
F10586634E82705468F167630971BC01DC641766DC254D9E9B06BD62DEAA105F
CD48375C11A3207B5A381FF8E1C163001513CC382BDC172026981E9CD05FD8DD
83503D108FA0BF72ECFAAADAFEE78E1D8D2B9E94AF57AE0A20570A74D0C84155
353C360C86120BE8A6A2B0C9D6550784FB8929369CA329F6A6D89A7066E845EA
FE223A6D26B84EE6B6ADF0D9950A195F64FD3209C6D47B46B7708F855E501D4F
6F9B939EE1663FD02D1E1D74F22C4DA4143A4D523E32A0A371A51F64CDC4E06F
544F2055F67F0ACD4E9D99C47877168E8977CDA919CA86D82794F04E7E98644D
98246CC6E5F85E045FE750DA4A9B403FD293CC436888B75949007FB2D0557A88
D362014EDFD3445233A03A005D3F670E67B8FE790851B16E71241433FEA5650A
3908D0B0BD195F64242395E6C807B7D00E12CC9CA711980842040899809A443C
00042C681FE3F9BBDDA09127551CC4780E971D3952648BE3ACB42BEC6D5B5DA0
CAF19D34A8BD8E904BBB589CA901E79BBDB311C102F70F1D2FE7EB3609B14BBF
10E66264FD1E6EAE175987CC0DE53E3799F86A71F96165AA3EFB39B7B13C5FCC
011F38E349AF6FB76AC51841B39F02662AF720242D74012508F26C7003A39A3D
65A8CE04E1583229836D0DD8CA390CFD14E80FC0455F34F89764223F7DC55BA6
69B8793F48CA8E9FA4C89E877948CA4CF92F1BB9E3825B748C865593BAFE4D25
F58B6C3937F7A3D8165EDF4C74CBB662283EA3FB964084B345CC06DBE98FE9E5
2BDF3CF8FEC118F0FE83A621685EA394047116ED7629C74E8171EE39B9968596
DAD2FB69E0425E6B527C4E25D28CDE453EF7A4E0988B62CE07D14F620B90A67F
273B311061BF2D3CE3DC3A689EF85714824E939267229AAFDE9C8C387F15F064
F68627E32241CA1AE9D54F1E3710F18FFA2F912FD822B05DDC146FDE82B9FABC
A9A986683FF9CB2E1937937AFBCCFCFB821CEDEFB4941ACB6488C1A608FA21A2
EDC0D22ED3D5F6735067D8C0F31C456BB35D31B98E4DA0CCE45277DB109D6A95
87CD6B0C5BF54A30D4E3072F05FEA72A3C39AA0DB177C37546FF0FFE8288920E
35A3B84D87A21F5043A04BE41F18B2CD19AAC871DF4CCABC332ED75E1657E2B5
531B227A3879412434F68276BACEC7094E9C4779051CB9421DE1DD7BC5D109B5
2B7093D785F43FD6DAE693B16645D354E54ED6C97ED4F591623645C99097F1BF
66F347EE1D6DB95461595C9938581921663D3A3DB29723187596489A8894E037
3BF6D0E1D56EA24BEE873E68313353CCEF779B6200A1047B20647CBC2F42292B
825608A05FCC5A87AD774203738D9D144919E98326CE01E4BE6B9E623761D24C
0B7CB02DD90DC8A2CBBEBDCC9B7EF3CDC194DF7541D34D08480F1A1CA16F2E2F
8A6A4A00EBEB709BB571CBD6D51C00B349268DE077F06EC59482927DF994271B
1F39BB29575F0D72916AF4B385735E3409FF6CC8F3C38638084F8F4F7DA8B4AE
EED926F2DEE9A34E92E3925484E3FA45344C7FD3D4D3A68B7A80D27AF606694C
DDFE9C6DD15D99ED151912F966FCDFE7AF5AC66080F745228EAC9B0EC2C3F650
1F4BA0C82814EE1605F5CA9D62127553EE375832C57F9ECCF6D8C3FCCDDFF2DA
B3612678BF24A2450F6E99DE896F7F3E4563B59A33344959BAE4CB57E6FF0CAB
1468DC84FE0F3F92EC4E129E00BA3BD9CC0870FB6060AAF40EB540CD50D3198A
9127F8B594F29CCFDAEA3CA1276BFC8969DA9B9A00344F1D4D782CA0ABA98754
1FFD5934A377B4E670B933462098578BCD5050EB47A9F4313EDADA4845CD6C72
77041939F7243D600CF7EE179BBD3BA15C58FC4736583A4EBB71EFF383DC58FC
1C6DAA3105C475E5D473CD591B11F1282E9A80CFE218A4B5FF0264F1EC9818FC
81ABBFC92DD26021738105BCED3E94CECEB2E6E552D1F135733C7ABB72957138
4824567D6D1B2BE5142DEBA285AC0DF74D696E55B08B672A1118DAA72C369DAA
397883491E11171B2040FB6637140BE927369F803A4FF311D52A74289065C1D0
E2663FA57A88150633F3F937E9606D75A53BC9AC8678874FC3486B5EC7D278A0
D5DABB7B1BC64C3BC771C29C5837FFFBAD42F40083C2E412EE5E6E050E99E1DD
8C3FC2A00E05F0D6076A34A4B833ECB05F190B1444E379817760012E1331E9DA
B047409E478B58C1E5D8811E1799E40445E29A10318D320D2C81AA5DCE6620B1
3159F6F0DA988C6FF06B7DEF84FD26D3794264CB02B2E1B8F18CC386797D2A9A
40DD7EFA8609D2E30899DAC9B8553DB4FC96FC35ECDC38C3E3223F9E340C6745
0386D3DC4FC1E20A83DFAE731EAD0363A7BBEC37D8A9CAECC16CEAA06FED505E
C60F7460026CB419574319DAD73DCF5A465E9F002FA79AD452E2CCE8D95B6A53
88F29F07A9F37C84D143DEDCFB27AD763C746E1814DAF2D759976B3D2246EBC6
9353B083453AA83AB1657ABADB9A30C6C52A33B45F9C7B9361F7C7F4EBB939F4
6ACCC32B19C5A5886DAD4EC3D83D0BF1564C00C405693F2832BA5827DBB7103C
432EDAEC18CAD42166EDA7834BE592C3B7C87AAB2CBBB8A87C093937215405A4
E4D84599E4674B52F65CD9EDBBF10DF518D2436969674D4C79B5F77B8D6FA2E2
26B8B932A195CC0EEFA8E39744C2315DFC0050BB4DAD4B0FF3779D39D39D1205
9B64E8C6097B5281C359CE4BDF4907ADA234C6DE77DC4957B683947D54583D09
C01DC47D2CA3D7E500C9BE47338665F1538F2F645757A6FECBE5A1590A6EA831
635F1E7946F9ED34797866D7479F81B25C8B73BE5EDF2461F63CAC91E253D461
23B796965124AF855AF2CFF8EE38436E7C68C48BA02E9F78B4EF39EC5CC133D1
4C2E464C13F5C41C3C5F8114A5650C07838E0D553E7E840AF3EA2B0E8D47E025
299E048097B778D17B0AA1C672E2020C946F0F8E03A35E76E81DBB60E01D4CDD
FC2E9BE4709956583F3B9EEF0A37F30434C3077A2428BEB3FA5E46ED9C413EF1
95DB3159AFA04AF25F0A82F1114AC09880F80827DBBE528FFC7FE26EB04AA53A
EAF4DBDBF6F0800EBEF9EA787C014E395791F73DC3A126EBEE67B036D93D18AB
91F771A43F256843EFCDCCACE4627CFE80E82179579BFE305B9AA04A6E9528D7
57CE24139474F15CA1082CF6930F992BFC83A4D983558086958FF839797DB451
68A9F3FEF6B8BEBD37ADA98518DD604EFE6715F50897F075509F64E99F3543B1
13D3A4716D2FC8CAF0DAFB63A8C28130E1591BC17273EBAD6AFB646F54CEC76A
C98678B54E6E3A103F615CA05A901D8B991528CC1ED3B30CDE23A07FFBB7128E
66FC9D66FF7CD9538565425DCD900AC231610AB9789DA62AC41EE688184BFE66
41C0D34DC5F77FEB37954682979666FD919D83DF85BA4F4B14D6A77044767539
C0C38F4EF65E5D900353EFC3A7D5BA1EB1F51ADF85A244CF55CE0EC7494D4247
243DFA8385DBC5760B397F0EFEDF9EF7769E0A6E389AD0B2A5D10CD4C41A4009
7EF753FAF0128954373F9718877DA7599DE0AFF6ABB520C27B9B698116A5787F
E211379BBC3E33DF49A031282BFAE588877B2A9A6426F6010B1050C5F50CA931
A8AED0902642383EF313DA6EFC55D3AF10B647078CA66EB88EEA899385122089
2D97DA2F0E5BB1BDD5ABD40D988B018FD18F5ECE08D9A100CC4229A4E33FA93A
0FDB1AE200E2F6C6B899AD9D53871027450BAA1FC67517CD5B69EA896122FDB9
20E721E0DB58AE8034D8C75D758E668485BD05C356D3255479B96DDEE53455F4
1AB052F11C588936C1837380CBC611ED14FB2F017FD1CB7E1E23C1459E378627
F323C6E6F04912979B3850CAACDA744B25D6FDDD4207C80A3636F3B7AC37F415
FD2F8EA734FA949289DAC5813D5C91D4689F7553DE7432E5B553BD7AFC2D8E6F
3071A191FA8947D12382B17FDCEBBC82F61E5EF76E8793195B9D6474F0070FE5
7D16CD12153DE8F377028125088457135DBB27457FB4CAE16197347611DFE63D
A3C7C9266F7ECB5B7E091D1B11EFF73F0B5E7A5748C8AFB555D1E26CCBF43EE9
C02CB6F255587300FD433C3B4D9FF1E96935A959D465B74109BA1843085C27C2
69C751AB2AFE4B15C13C6A0664475C3A9C192169487905DC47D2022934989F37
1A8F30B1B39DA9B1F203A2814A200FFD11E14CC70C954BEAA33A81A5EE27B922
0C89DF8C7471DED4067D1AFB8A49609DCCF844AC7E03278F56A07C3423C5B2B1
4B8D584BA7468DFECCF5BE1B12A00F107E3B1014C01FF888A9B1E40D31C73F5B
4E253538C5E0D0672F042A01EC5CB1BE74CE9522C06896B9E641673A87B47BA7
D4A91ED4903EE143F0FF84E3670B8D1D046FFC2E8400E63C1B8315BF63C3BA9B
849EDD5F620C7E451943A157C7CFE362567ED47BF94B63D67A9113921AAC23AB
1B8F7DDBE6F6DCF9A3C3CED6842C356858594C63EDBA2EEC06B6756F2281E040
0F776034AA7370C867BDF8F8CD40540C3C28B45B30772EE9FFBB8D00718C3430
10FAFA41B507DDED01318BC9A9C8A9E8D714B1A1D6BF89D4CB98136839AAAA92
BE85FE2786437E6FA70BA428073349AF15F2DCF43283BCA59F109E9740BCDE6B
C5813EA8EBDB20FC0C7682845F3E4266B7D327312EFB770916FBAC97E6584C84
9A9BF389B403CD6FF5F8366F9D36FB76A217CD9C3F62414281BCB53CA46A8161
D536C2D0011A2B12B23165BB4DE936CC3A4BF19EA1C5D6C0D79F9DB3B28A9266
CA8402BD985CAB49BB651D6FDE79EA92A7A00FDD42D5701AECD409DBEBF0C9E9
5509BDD99A537F5C974ADEB4C564C26AF25696553753718AE0425FD9EB6664B9
516671F04ADD10C478B7F8D9A562487A9FAD8D2C70C21A4F3ED7F9F55C21A04F
1A6DF8168FA2286D8C7EB897EC741C41A0BDB45D751F6641FDAD6065A36614A6
86D6A7B3543205DFF5A31866735EB1A931953CB0EDF319AB319EA996076E3AD1
F6363E18CEF8715CB464AA160792A95431549FB6A4ED42741F9996D7BB1EC714
A2F30863F354F78FF9D34A41EA24E7A2ACB665959298984C7B4B72564646B091
0BA9E173FD2222DDED8C4BB4813D97384DFAB387977946314C2FD50B1EFABC3D
291F4FDD99EB7C0EB047051BE634D62F6F164085EB045535E44A67A143EB6391
3019CCB8D949E25D7DB43EF32CE21205C9B33BEA2D1B94DAEE18FD20F24BBFB3
A2C968EF269DA1ECC28C2F9B079ED3CF9C315BA95779D124604AA59F92201234
15DE40C492F1036351910FE6B93342626EF81FBFA9AED252C2CAF15D3A748549
B6F6A61F79CC9DA248CA8A674045257BF43591473F853FE3A2A43B7CC317DEEA
02FFC7B4CDCBB6A5CE017AA860B96CA41C168548C5076500FD0985C57E723DE5
5A2ABED9B40D7BE674118BCF391F130DEA693AD05F6FCAAE4BFC1F60C355698E
32DED416EBF582A3D80351CADC60B733E50FA695EA1AB682A056B226DB767392
0A2C426EEF8DA67E650EB7B1DE643531FEA419BBA8067C6D0E964143A0906762
197B8DEA764ECFAE0BC6723E560B0FDAFB34E8AD48A2E4BA5979A58CCC637332
22D0687E1BA843C2E0831CC5C994179AF2BA4B7AA7617E2C8E789C621BD307B6
477A05334A8EFDF778DA38E54F972D6A17B932EFECCDDE3DE2B354F3681BB1B3
E49E42E7B668D99299AAFC1A4965F05C14791FA73964C470E1FA471436D8C6E4
4AC4C5010157D94FC1250822504BFA173CEED4E2DE5B7DA75EC58D886E9D64EA
069C9432AF8F2B50A91B0C7C55571DCD924B0C089E2515829D461CC7AC00155E
932FA3F5B34063E5095402C6368C2AEBE26D3157EE874CCED4EDBDA26B381A13
DEF3C35E4DEC459759D7D3575F6FFCC6B27F94965BBAD1D2156928CFC8EE865A
632AB4A611CAD82809B7204C28F45A55EA03A132AAA54B5AC1B745CA3E8A11FA
F9612B74D2950015F2EACCA793E7888C26EE723E78F3C894D26D13AAE036CEFA
B476721A2E3A65C2C5B0C7A8C8B2206E76CB6598DFD42AA22CFB939A914FB803
C324871E0BCF73B19653C3BCCAFA1AA748409D3C1E1A165DB626D7429709776F
04C4D5E4D04DAEBF5C475C7C3EB2EF7410CA53A9034999638C65F45B0F57D760
0215E8FC2552DB72CE2772DB7D5B3A765D09AEE0F0178E20124CFC1D434822CE
24ED6438F2103F4EEAECD38BB01B2C6F42C4C1B222707A748CC97785174C6E81
A614B95868CFEAD3BDB4FB04FDC4FE2F15947DE72BDE539DC79E2EDC7DDE5151
78FBC21A3BFC4E230375D47F4691E0E9E35436DAAB48FAB07CE7C933BD984EB7
13405D2B3F481244379A40283186D67327CD487B978FD50D9BCA2508355C508E
8C22EEDC232CA6A04E928004BD90C2FCDFB6DD8955D2D3B6FCF5943BF5BEEFF1
F9BF99301CB61CB5FD95EAD945BBE7141CCE4BD29366A97A5D740CCA11DF380F
90656717F2270C0F1D1D5A0C48774E2E3E1308F919F597CB24D48FD50D1EE2A9
FEF854CD6238126A0B323E6E84D554F59DB81033F4F4AEA1BF99F8070976D754
85DC4DC5F3C3D020E853171B0D1612A3DFA5264D6B64371271FCB4A74B2157AD
DE421D5F51D813B577B8741B68891BF8FF9BBB484DDA6371DFFA6222F88F0886
C7F8848E958C6F74CBEFC62A27FAAB38B52465EEE09E12C4482926B22743E5D1
A94A301D3ABD6010E43C4EC19A0D63112FEF67D69CEC2F78116EC8583ABEEB71
D9592AFE1D648C347BD72FF30455B7E6447D19E2611C39EC0DE9AA9AF9629976
79755C4CBD2D05F9A170FC269B792E8CF7A0462248EE95527AA116CF31B971CA
F5DBF65ECCD01FF04E6148A80BB2611AD6460F73243DB763DEDBF476F3516136
578D66103E6455B244B9BF9C400BC802A021411BFB80B334C4BD614EA7496D58
CE8BF62247CB10F893048F37A2FD1E4BCD68D656301406C1FD474D98B7555DAB
FC469D633FE91FC8103AC6DFEA6F007AF4A42C0A08C4DFD62E596AC1DDC11E23
572F8A2F5CAB5CA87E7A6693182B9561E329A3E67F23EFA6DE495C7C9D966924
F124603446F01CF73CEC5B7877077E421392293506C391705D62EEE3CF25BB0C
4EE70CAB7C5DA7C9BCDCFB67F1B66DD991E2E4C0A29284FD2C9A8740851EDC44
2490FAE83FAE3DCCD4447BE0C2D6DE59B1BD629F479924757548799EA068E215
35FA1B41FCC74614129FECD357C3BE8A07B61BA51F5781CAA9A414AEEA78ABC1
7DDD10E2B4D776449896677E02D47DB24D4967158F415484BF9D6A2AF010F8F3
BACF583EFBE1FF3856DF768AFD7C810A269760DFA831CF3CB5D0A73CCC6B41CE
8296FF0C92CA794AFBF04F8BB3B65AFFBD62E1EBC63C182EFEB487A03399B496
9F863BA0A83115E8AED878484FAD3448F4BBFCD65D1EBFCB6494575BE7C27F44
B99EBB6713BB8306E5B5A0947A00F952DBBB63C0DA21C717E348E0BE63120324
CF402F90BED39B54D866320877A767FE000D8A3386EB1E20F1194FD049F28B82
F4C2D73E41CC73C1C9F668931E64C8D467ECE84CF7A8C288F9B22E0AE6685047
D8BE005ED260ED9488E270BAB33AEC2A3A055F6BA3C3700A868E92B4E26D499F
BE545C804154DD343D0FCCA88D299600B0C26ADE2DD3774D903024A13EDE0D58
B50937201CDA9C1EA23BF95C4A3A8932F7D47100FF8A7D4BDE1BC37CE16625CD
FF321ADFD514B2BA1B66E7CFDB8FC93B6A8EE952D196EEFFF2D9E6B8CE8CF9F3
2866ADCA85FACAE68E9C7954B512463A86B1623BD5433F6551DE2AA71475089B
3D2BD411FB9BA4C621F23724D73B1079F7FA07AAFC9BBEBE2E4AC9E2B9D11603
4191A1A804EA935EF390C90783F6DA40C59AE09ED22AE971884911F452C33F94
F3A9165CAEAD2464D8D80FF6C61F4410BE7699FF1E5E942546C8A4CE88818DBD
E72D030D8E884D315F56536F6A8756826B7786F35D21E3098DC9CF8BBE54D707
A866B52B55E06213C9491954D1A8509555EDD6F3AFA7710F49EB3706A4BC08DD
6698AB78D7681FECCBB4BABA1BFF3FCB4D8216D136C4B20B96065574316F2EE8
2417F28EF33242AD35C5B3A99045B99EC805E25F46A0C1D1C281BA23D096EE2A
4B193612337A6D180D9FA91E94F858DAD0662FC9CF4D1A5F32B6E6F0DB26D2A2
BEF33383AA86D27BEBA7169F949B08254A985398CF9DE6AF7875967EE3CA79A7
97C3A4F27AA9924D6616FC860CCAA34024F5669DA02ABCD1BE3963D734D64B01
82A6CFCF064906AF5C9ACA3FD626CC47D247CC610668FF164EFBF2FAB76ABC57
935C81CF7CC61260CF2B227DED699ADDE69F0C644DB1B12A15889917716A5491
0E71FB6278604A400502100D8CDBF2947CE3218574CDAB399479F824738B690E
8189691C1EA942403339023DBC4A50793CC443112BECFDD6E018E867FDA253BF
15E1ADBB05F04614DDA701D1CCCA3404EDE621A85F81C42418F86A00F9E86AD2
055F1A4587DBA063C52E8210D6F5B3C5C23A608558756F8622A8FA6643FCD7F5
5E72948D2DC55AFC5016FB2C4CE14861F1909488B3C1295FB381FFE037D9126B
AEBC8B4C6A7EC8556845CF97062549BF859A34ECDE8AF4FDE1550774A9C670A2
833CC6DCE45D2E4898BBD96830A113AE69DA214B1AD5EB1B5B430AF25A20A0B6
36FFEE11D9F45BCA484AAE98AF60C2AEF608A1119AA13FB6FA40C2B7FFA305CB
793241192FD9C1B01AF5CD5388A0802D80FE1FB499545814BC2B3B2ED508A554
7C4B8B182CBE28D8B46C0FFA3AA93A437BD5C68850DC71A816B0D510076BC298
CB824BE6E3FEDA248248457A91624203BC9932A5AB72BC6AE0FCA66760484CFF
4BA51454712FDB8102D968755E73DF40B4E922D522E2CAF63FA0A8D22AF65683
9B0DBBC50EDC121CA1ABABDCA567BB9D28CB3E5AEC098EFA7599D096FC928471
D2FE294C8173E82B508A73108E3E857C6FC2C1E3CB2BB26E7000AC331BA4ABC5
12DD810F40E9426C8DE97C2E08CC0185E1B5040F60956E929033853C3BCD247C
17947407B92E406D62814013DC8B7D07EA8BCF6B09E1993EEFAA3FCCF263FE48
D2F58612E2E0943E125B1209029AE09E251D74FE3748704DEB2E2B9758FD1D18
BC412B0D1B1410EA26EEB7EEE691453DBCEAACC6A77540CF459337A4767D25AE
29D2578676B7D52AFDD05A75ED3B76613CDBBF70DD34936C6953124D7433EEB4
4C724ED69C8697D06A5246DF0D089BBA43C39DF8A664335F67B9DDE36DBA793E
C77E5A7FC825D34DEB46C4AD0D21BFC3A9A11405B0873D4E92793CCD7B29380E
EC1C415FE398C7CEFD524F132A4B84C65FC4E875136FFD709A15AB5222CF808E
EF614A4179397FBCB81937127A6FF5F873691FC0CFAED955407B4A4A29E7F1DE
E97F58B29635395093DC0FE475ED0F753578F30E9371DD9CA0CDC20C91ADA66F
BF34ECD143EE0A05C25A8B88A7D5631C8137A4429E4ABBBD40C3F3B7513C1CB4
AA3659056F519B328AAFD7EB7C61AB5B5E99A0AA08A5999B899A7A8B565A404C
E6F153EEC4FDC93D0FEEC724C9AFC18168AE7D0CA1334C87FF168A700D04A730
3BBC67E6A2F4D86D0A690E637F0954645CE99CB2DC823134BB06D2AF45F42DE4
DB1437C45AF1C4FCA0277DA2CD4148CC8195477C862FDDFDDD8B976210456F13
FCD152FF9102718D0FC57EC5B6B14A6A3D61AB9D446CF0D54C7E7AEC55224601
E8C869921EE29D1FE4523E35F76D248774FB0F3625D327174D55594839AE3421
349C49878E3945DE280110D3161CCDC1452D0C48095FD5C0F11B0EA6601D83CF
A2183777A39D99BBA1F76ED06C85C5B8042D50FD4A7194CCAAE06FBB4378266A
6A1133D8151A000D95E13EEBAD4F215629875A951E28C90B605565901359632E
5C132EF0798C4181D98F3A8C7100DDBAFA847E6CC4A1E70CC7CD343C785A5CFE
027D7FF581F639942945245D8F3401965C9467947B70DD11EA6E1A14EBB1BBB0
62CE726E106E133718029EA62939188C01706215B1223128DFF2F1BECFDC5EA8
010AF57E4ECF56C9B895C2B0CC01A76BDBF90C69D9F21BD06D7C952B12E66466
62A651EE4185C5725607F0118BE73099943D762D20ABC42DFCCF4ED0E151DCDC
69D9DD0E215A49782F144DD9F51611FADFCBC48EF1AC9C7A7EC712C9A80195D4
C3A837404D1729BF073E5071C7F434AFE676E22268D7F0CDA4C121A77AF3F5F7
9161A2016A8A31A1E5D8CD203F49EAE52A38D32ADDD4F13836B7D53379CBB77C
99C5099E69C8798D2CDD59871A3049B5B17E55A6E677F0AE7D565B973C2CA3BB
7BBAFD7E3A80CF8C2DA31500445B3ECF6C6035F883EFC0DF2AA759A0112A1675
F9914CE626DA6431204C74CBB662283EA60520AF1B3FC5D973408F12F02CB8ED
DF6CE870E720C7CD89FF8FBC05291063120165B4379B1A4DC9D967DBF300ACBD
89D50D48DAEEF9CBD343B8D23017AF0E768DE8D3B7AEEB6A7BD9A6606F445444
542B9E1FDD366E1A6F6E83E5FB15EB0718985144596D3F26675EB99BE87FE544
11EE19827EF69EC670F9AB7C93E25949E228C80181E60F8CB130D5640E351CBD
65394E3E0D962690F98D5F810E0CC0CE93ADB4E2FEB60E28FF6D4AF0010D422A
F8D62F0BEEED200BBBC5CA508A4DF406BB9A8CF5A98E7DA172BD604D6734A992
F90C8202F59731DEFB79D6113EEF0375A55B2AD26E1B9891010B29A54AEF93DF
B375A54A9FFAA8BE2E92C3A83537485B3D7C83EB1EDE11C13A6E1AF3EC5C9D4F
03D038DAFC289873AD62E2E8ECB211C93EA990B3B3C43B7AF86F4EA27469108F
44975B7A94588215878E6866C71C6FE5F3B6CB97B0F3DD668BDF76A5F474B850
CE6400C544CDB707D38318331C87CB83A65571AB482E2DE257D768E49691D5D7
8224FE93C933C34C64E6009ACDE37643E89D5BE4215E15ADC71206D284543B6B
22F3D56B15719B27BFBFFE79C742585727C12F16E867F7B692C959CDB7A45A98
B420011EF6036096398D8D10ADD46B3FCFC12980C2E8962B76FF010D2AD94168
B2D6D475471A0373B8D9B96BF9A5F589B02817E893DF04072B5DC03535E54BC5
429AE6B3F66168F20C1495C063AB529DD1316EDD39528AB05DD4A87FDD9324B4
89B5ED253A7801E21387628366BB15669E37FC65D5888DB9458B8C803FB2F9C5
7701C6C930B7C230A739E4656327AF5285A8BEE4C5272B15C12E63FB163C68B6
13755AA32928A759EF4887FC5DF0B7AB1BC8DCE622DC3FABD85B0F740A559E54
26E55FDB1971BDE1A6280F1008E54F55752CF017F9EE9AFBAA6E8E69A5E44A9A
DFC78DAF0D43570783568D6BB73A83DD53F4D15F219219825BEA068392E9EC17
FEF6048173F52CB3EECA756C4D24FC6054D922F59B1491D71904723580D78094
F93EDF28D317E2E8A88736756EF3A49579DDF488E5850C8DD4EB768A107FD11D
6C07FBDCADD19D99093B81444B8B9DD5A72FD601B4C22125351301E72A0F5EF9
59C8999D23D4B53CC87F94ABAD0CBDE967E0DF4748B39BBE76D32933BFB3185C
3972FFB69671FBD42AEA82D51BF9669126F15AAEB8C9587792833E94C521330E
EFE173B3C0C54AC0A20438F0184647B8040B652D4501E140EF3ED7A1B9C2E885
C88F882E29F089C3D2FEEC635A9F1E67D57FE919DA0F8D433CAEDE90D12335D4
E8D2A7C864119F4A76CC251077A31A0D8D3DA2397328F6F57B13A373A9E0DDCE
6E0CB20084673720DBBE673AAE3772C82AC0ED80420E4BCD787F6C1979B4FAC9
E273105CE6378A2ED913F14D20C272D14060533915A9F7DF1C9C512BF46E5E8F
8DE7D91802CB02A1E204104BB33CF9BDE4FC610FCA4FC9ADB098BC3F1B4162F3
AD8216F8DBFEF20DFC415BA88A8AF0C5D5B18E333F974567E89D1BA848F9FDEC
C6604E7D488ECF152B69493B4395A3191D04A56EF39F058FFCD7E189206F6568
173C34EBFFFB1DB6A72890DA790C2691A7456F566A83597CEFD41F47078FEBC2
62C5E48B2E6766322DBC0244B0797D6D1B1B8750ACC4A585E0A394813216C09E
4442D08255CFEC77B4356BF8281F2D2B9455F611A4113AB278EDC7A223A7B79D
E04D5E3E9E29E2C6B2A27D0F7DE207733628E1D422DC5B6D2629ED8A93225B7A
50361D743D990536B0BB982F75ACF33109F8AE7ADE4954D0B1E18022F0F9B9F7
42BC4FA62D0F0B04F5A4F9EBBFAAFFB7CC416C88A4709DBC3A4A5914E16F20DE
B6E28405DA733CA24B9258F3D4BCCF3638857C25C73B78F5C35FF0DD1AED0C94
D40F3798E2D544C5E1B1EC8AD43FF8FD3EAF38474303ACD78C5DA2B784C8F19E
B20D25FCECB0FBCE04628B2142836658B42A04DBCDAFFBAA05DDB016BBA5D319
0A875FFAB99043D683C060DCE93729098B15814D6B80E7959E49AA24CD46FC03
CFA9F7FA4985EF3243D6377C8F2B8DD2561EEF396F36AF158A0D81A491ABEB40
18196CA017072BBBB3CFCB08EDC07A3A78A397E95820907D80E6F3DA733618F0
317DB8FEA73BA241AD8A569A91A29991F3BE8726073C5E069241A906F0EF1588
6DFB61E63C16FBEDC1EB396048F1CEFB12520FF93A69F6F9AA167135C81CC037
0D932C4A4120E2197106766636F542497B64791C7EBF6F454E4AE91268CEEF58
C3CD492EE4DBE92CC116D193A3BC7B6EC649B9923A92343BFEB7CC1CE9BECDE1
2CC0FE27A46BEB41E9CE8687F60FAB8BA54F5A5CAA5E3469EACB167C30F7D776
3F20D741FD762A5A78F36418BBEABDA877B61551AC2513F418199D8679339352
258C6A96EBFA86A669F671B2056B5206CB2889AA4D105F792699F15AE7E181FE
3ABC4B4C70E21F3AD9A809754009D7EE630434645AD290F47482AB1E4868B8F6
9B4B0EDE5FDD27935452BCDC35CAA1362E0BA23C6B248E6C72FD1AC6CF819110
E6FEDED3E62A92EF184C7B90328D6A41B74ACA861AAABDE11879E3ADCF4CE614
7FF00C024B7A4389BF54308B3DC9D10738D919BB73128447C2F00C4EE4A1724B
ED4905EDAA8A46A337EA53E087127FAE896063C7418B4BCFC127A9AB30BC2073
A5FBF9F09355BCD6F436C7390B71822D2D464A10A1B14C33FAFEB7EEB86605F3
0BCF8E570B4341C3751A10FE6C3304EB161AC14AD4D5221259538F0CA3263BA0
B22C5E531A602A003D8B8116D143E653C64F79B9B48DF5E401CBEB5BC55FB06A
1720430E0DE1278C559D42176DEA4E100EA4B74E3B972E55D57FC85CD2C5AFCF
02DFFB4445692A4E11D832EB0138177F7BAA9F7B6D47FD3DC952FE149189BA23
79384322597E9E2CB635DEF9BD7118C237E43BCF4234E33B1895F8F935628480
AE0BDF7201D4C38744B7AEB481E30CD562DB316843A053F82CD8E6D7EAD84B4C
7121148F4213CCAAC483B43BE2A9763FDBBDBBD50A083A6DBD7AE08722DCE6A5
762EDB87EA4AD820C35920123352525E2C91A8525079B97D9FA6FE5B7DA4A263
813EEB043EEDDF41DEBCB1FC8F4F3B288515CE437135700D026B4E967263E234
E7803297A2737C39EB7D148F457D60613BBA2AA0C064D2781D90569A2444285C
D25977A670A92B3DF3AEE8D8B385478AB2ACD381539802981F4770A7A8CF68AA
2FDB9A09A73FCB008956FDC4CE39D2756CE58C51B7EF9795E9EC65F8E9447202
C94B089B617696136B997B7696988A9F2B3AC897A10789DA53D2DF6469A48279
4DDEE77B66101DA8FF6A94D45653A3B13169C530462119C3AF991B3613B485BA
2B63E25767C311C0B5985FE68D9DEA3C0DBCF7C332C1413109E975BFFF13E56B
C96E44060C1D4CB37236209050865DB7C42DF62364C634590D81873D531DF4FB
838434FC4B720582050524D3B47674AA8DE3B033E16BE48F51A34D8ECD2F289D
7397874E1BB50ED4D6D27399B516B372D050288238FCA493448823A4D524A0D8
95539C05B4FFB0432DF191F3FA00C5DFB99BD8677BB3AECC0277307A20B641E7
7FE3177E92E69D23E9FD278CD5F26788A7E5D8476DE8E2112BCC3034F758606E
5E751C2EE2B67447BBE17AE78CC09F62624F6F7CAD4242AE6C63D047AAC8EF82
134EC41B780A9C1070D7CBAE9BBA72E82EF9914D3AED6D1A553F0E4957D88948
76F46A2A4BAC73AD3C0FD804C49181CF8796D349B8B2ACC2214FCC5FA24D7BD9
FE7580E9094F9FEFF5E54E2CBE14A20F56A27B70B9C7DCBE9300AA2ED8324FC3
7E8EE4EF7F2450F67A96D44A2CC71B3B327A66682F3C22A1B53C2AFD10D395E3
6081D1ED265E96E1AB4715738C62BBA2C6AD31A0D44B1E9FD3E9E8CFBC300CBC
8416A3F738EC0C9FC2350C3EF29619FFF3F800BCE7F4388F7B9FAE2D16C78DB9
78CA99B7CD78F3DE7518A263D411B0A68EC14DBD5769EE77792DB6ECF45EE984
CFE8D8505BAC70FF538C735C2E787D64F993B882B6138945CC6BFED98F0D54D9
3AB3AE38D3F24C63EFD772D6E12D4644F4BA8AECF2933CFAD5F041561B6E99B2
17713C1B7EDEB0675981A56FA092FFD7E0ED86A61279D5420956777974A0D88A
7F5668837D1D8504766072E48BEAD594361A53953D75312631D6F07794B1D853
251462B09BD7BB64BF892EFA6AFBE9077095AE36C2D6BA7DA1206A97E91BFC10
A5D5010758C6BEB975610A063D6DEE07604A5162294547525ACA6C964A1E0842
3D9BDA91822376234DF91C9B3CCA3AE3F31C1198BF3F62049435BBF6C4772ED0
42F0A9F8DD7CBEBE018E1F056476FC098BE08921A09287295C79AB17E0EF4C7A
FB5ECDAA96392897FE980B9E3222121B24B97DB7866E8CE52B81CF44DA56FA76
66BE037BAFBC79F33E07B315ADF614ACAED323D8FC7BF4B60F3312FFE826D8AC
AF741FB1F4063CEC62718EDF4CCA777CD3B07F91EDAC559A220F29084DD86CDA
D022DACF326AD2F36FD2EB62CF4C2B70796A23BE1941E27DA08DD533DC0E8D85
F9DAFC5FD842F417265427E6AE1AB79B8A2E285ACE63FCB0B137685611FDDAB2
E8FEB60020FA526840EF5367946F3DF67C10B47377A99EBF027B1CC421D34F98
B69FF4C335B95F4222A8BAB77664299C8FC166975ED6FB9DEE4585381F74DD1E
8BE9F6E73E463E777B06DF048FAC43FC281ADE45FABED5C979A0B13651191055
025C731C764200BAC03D1AA472AD0AC9E5E0237AB288B5E6B4F9091D3510AA88
179260F7A7B648ABDF6D983D1E4A85C06190EF3A270698F6B9230D2F73C76DE6
CACF4C3FF495F0D3B1317D4933E1E097ADD2EC8BA494F850BD820D668E9F913F
1AAF8216CBC34C763C27238EF01754016A12EFF81B4467D35C951A90ED6F706D
29FDF3DD6C73C55A1E990A07F8B008FCFEF55C2AE36261251DCF8A9302D6F53E
D0F720442A89467CA60BCC40A35FC77F7364BB75AE2083C7C66E6C13CF179158
47017BC06D801AA613EF09BCB258EAEB5620FCF9193BFD36F90B797221D94774
689E83E5406F5D9554C12847B6EB4BE2CA1FCBEF057DEFE3269A3251B16E5C93
71B5D89028F2881E4C77381AE42D708DF8E5C93474AFDFF62E6FFFC184A3C6A1
82563FA8F8F6A0A210405C9B5CD8779A37701C1041B8A59CAF3791C219F930FF
9F42A78A62D9090B4F34EA6C8C692D1817DB2CBF1BD72762423381E4A2F6AAC3
F6FD242C25F6952AC55C24ED123A69EB70FB54F55883D5717EE6278FB49F6EAD
48DBA338B09FFDDD52A48A918EF0FEB00E6F5C40FF92A66704671E5007E93B5C
31BBE28C4347C76E89E28C2D4AFFEC504700A3632A00A885E1179E5D7D63E5A2
950ED9ADA8C30246316F001D01D1487F4031379DB5C7666F555041C9F91147B7
57733811FE1F00D6221A3F0677E7155A03A55E5D797B30FF26A1AB03592F9372
AF27DDEAEFF8B80E1A4B673256360E4DA56184BE9677D3547C4F276566523743
1361CF7B9B31610B918ACBE6C1B4F5419C8704101CCBE8CE825FBE959E9D0FA8
D3881BC3D0263B7E30221D3FB7EF9D5815188ACE4CFC939A219EC7A7DBC94418
D962C203977A5BA6FBFAE1FEB947C50CE8BE18F24922B0636EA1CDB5133E5A5D
0B5019F9E1D426843264201C49B1B50615B9F74BD0F89D7775B3BA413EE02A50
A008E8BE6EB3F73659E23360D2FC16E5838E9590DDC2A7874BA7F535020C5205
4F76ADC3DBFF65EE19016B50905C922CA1B223BD957C4C8051FEACE2AE27DD3D
CAB49534A03FD3DEDC48E4F63B4D8BCEEAFEDC4E0DA7BDECA4F73DB14E5D73BA
E98757D532FCD5AD3BC6C90DAFDF8EF8BBE9600CA06878E9B177DF9D1711C665
3A12A443D87E143C683C2934FCB329953875F95C55EF8381B2F5168DB2F0A91D
19A9C0B0BB98EAD3B5ADABB830C68513A5DFAAB1CD13B5F20B5D4A4856E5013E
BDE652B37E911AE0E16A5934050DD2BAC23CA90A1B3F48F7BA02A2AD093DD440
00BAD3FF20536ABDFFA429B820A82AEE9A73D7DCF772264652F06020F0CBA556
F3804ACAA98571E34DDEAC3DAA7888115812329ABCADAF9CEB29E09A792E3319
4C41DFABA1DCE0E4AA6C193AEA970F45D01EFCFBBD18095FB5D0CFFA37FF627F
4756AFF88FF10A172C60310C10F8DEB9D895F5319B213778CE74065A5F5E31B3
86BA7D571A65FC9D66FF7CD9538565425DCD900AC231610AB97CE7925F13BAF3
8E3BAAA063840B26EBF6A5D43602141B28D3C814493C6D26742E16DC57FFF25B
29C3CD32B814027005C060D65C25FEA1A5980EC3B8FDD9F568AF987C1B2F9196
50F00D4F0240AD2B6D0FF2710FF55BC9FDDA1C29510D2933E0819A4A0855E5AF
6497F674F2BF93FC3C2C62591F159EB60B490854F94FB62D0B2C30C2F83794A1
BCC1CDF4692D601ADE5D83133EF0A5D0FEFB9C02EDE191099EF8CEB0036F3218
1F4A5475392B4B1F92BE12C2E66618B19A9E2827E94DBD4BE8F8EC4704BD05F3
CE505777F048D317210A6791D432094998B144BC6FCC32B688D157388E7C54C8
C90CEEE5A3E69465E58CF7351070F107CB781E2093B59BD4F441A42C82FFC652
D3C14F6BF8D96D779B654150041D379504D771158D1D328D707BBA61492F2D6D
5F5916537207D9E97001EA90FE5B5BC9F2B061733C8D4C355955D7C8C2D6C002
F68E91A7C0DA74E7ECB2ED339DADD6F39274E7E8B2B3B84C5D1808B414037556
D6E9C3326F8592F1A8E23E12340D6D9F50D0AE3798F900A467910D50BB0E97CC
FFE2322734DADC51700A71A73C6C9FEAE12AC083BCA92C8994B9C7698E2DE5AB
C80AC9D793153E99C4B4F9467A98BB2A1B0969B8FB7C41FA5ED0E97D14487C05
FF5462F53B8B701A6C56558DB6348134BF9806C1EAEA5B4D34B72ECF116DA591
5F10B4FD088BD3BE37C6200E44974C097DE0CF32BA76FD530C5B437E27E5E435
083606FC3B43F0240E0B00874D9DE7F43FF60993FF317E2A0B71D337DE2F7E95
FAC752D88DDBF9A752EA88550C3B52F81E88195D837F4692C0EAAF3DEE913741
16092E029686E4AC0E2699E2DA7F32352AEFD997AD21C556376D21FB706D2625
1A219577C1BCEC94950AB01477110CF83586C3FD9DDFB321297A943CAF8038C0
3C57418377255201AE91F48B7FCD4B8618616703E6A2A1E2F8AD42029FFE31D7
C09F9B7812CCD07363BE4D70DC6BD22ABCD043224B3CD5900AC4D2B181B63F09
F7197EEF370E00450173B754650E85ABCAAE42B4AE0ECC103678173A5EE50F21
B39F560877713BBED5D627F25EF599D8260F6B84FA8B027CDA419307054D3C04
FC7F5DDF178584A2403AB296AF649E3CC9D18701E91F5A47FF6E933E21F0FB9B
939E49AA24CD46FC03CFA9F7FA4985EF3243D637729AC6CD901ECEF7777382B7
7264E93192E37A07A6CA7630C7B58FA4A388D48E279B57E7E5D223D544568AF2
BC6076C7FCBCE1A31F600A210F389D595CB86D1556BC1E03EBAB34218E6B25E8
40A594C538AA8052854792C3A54F9D2B21E65976588BA3E06BE510E51FB6118C
98378E3F166076AFDDFABE9CC46A2DA6AA3E33A045451587FA1936BC29504830
F03AEA815ED1812E2D15E5335915D85F96A988482D22A585867F2B8469A5DFC4
AAE701C1A456988EBDD1C6675850CA8195A4F9FA9C539B62C9F30B8AEE0CB685
10666968335DE2BEC50F225ABA2C969656039E8590F62933B22EC8CD48D81CC0
19C9B4E41A8088D8F990460372E170BB98B788972C8F37277FC53686C8880F78
61DD577C9C65D7561AC7536C61F215557C0D8844A9F47D149B38A0D7E4E4342C
FDD22C780278D973C31327F39F3E046E39B6FC8A72A7B743ADE3EA140A91F1CA
16C38093EF9DD5062FA35EDA346E927271617DCA63B042ACC929F6ADAEEF5E7B
AD6D744227137D55E6CBC5BBB6DBA4107593EDBBEFF3B140B7CF51BD51B09904
51D5F0AAEA38232A732EB571E1337FAB56A5B753DCDC299D67C96FC51C30FFED
CECDFA28A951DD5211ACD684E3CC660F7B5550CF4F6DA9B7EECD4C294E2AFDD9
CFD8971828044D41E87D9F04F4FA78553B4C7A0BE6DF82C2E5DE82B7B079CBB0
EF69EEE350BBC9CDCCF124774D0B900CFA7B471467378312BF4CDE3A8179B371
AD4B29657E24AB53C073792BDDCFBDD2ADC283662BF9868534619212C17B4BFC
DDB4711C6BE3EA3B0276DA96EA1FFC3E8E084B77A5362A2A8AA3CA1F4E851390
6816EFC9DE8DDC2410B0A4833AB0EF27D079BE2D7C75C3C9D9223ECB8EFE2CB0
6CDD6AE2E4A8353EC4D8A721AD540AD5692097D4B232CCF84F4F1DE4A1BBF7B6
C7055F241735E7D9E211F45C87EBC5D06204B2AA6A8E753312F7A56A81CF6613
E15F8209D34B2BD6185EBFB7043EAD685DA0A877ADCF80941C3623ED7314827C
84F48FEDA77A728130C15F4055431D1BA0B4FDB6215924A0ACBA83E181BC0CC4
9BB557A3B2B266CAB53BA93A15B889E08F46A2D9C6E1A8CD84DD0F411AF1B78D
1545F4E574A8B3C5BBEC36AF98DB76749156CE93C909BA57D8DCD505CCBB1AD9
1515605A9EE21CF836BD43FC7897447535E417984949356333FCD505520E6EB0
31F9B55544C8DE84D5E8187471F202487188A7BAFA659ECDDD39AD2CD716EB4D
0D49C9B9B8A2519D0B9E784B152D9E7F6C5F66F06BAED34FA3D65179F32EBEB1
C78AD064BF35067F8099CE8241D9E6A32561D1DDEBA5E675D43BC1C44DB5A00D
306E6CE190320BA4BFAC54D93F05357FA55DA4E381B6A57B8B004F0810A2C8DB
E29863B263B5C69ED3C0D79DFBF046ECB880D581E82A50E8074F6F67CC8EED59
94D2A52851EB2AFE07958D93D266D7CC1D73863967A4FF7FCC4D24ED4F9E4879
B625073BC9F9148BFD817C59D33A6689B0C5C924C3BE1656340F6FA0B9A96718
3A2EF5EDE3F056EDB39CE42F8945783542DA95454E8B89443F5E8559C588DFEF
7E169435564551BBAB01D80F5DFDF777C42A2A8AF7781694224781171DD03183
662D6DCFB6BA6D7AE6E801BB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890A7D49B0A6C7268E399C6C68B6ACC0D1E9F5B2
931BAF9EEEA6ED985835323E85D72C6A607A99212BA2DDD24D57809EDE36890C
F8121121306593CBADA65AD9EDED7740C9A2F402E3908B54CB4AED249AE575AF
E64C76BA802490ABB489275E5A3F2B926955B0D961A0B9B3AE205C074AA695C8
68FC2F6997531FC328B8FC65BB06C17B212C8C06D5127A14D7989D24912D1CA2
1FF37457E65829B6E1C65A09C1A101047DF20ABCD57E067A7298091C88C4B587
84409C67D00F7D95FFA0D125FB938B5762D912E1C0E116AA0593B1231FDF3BB1
498BA3D20DF13C7EC6D40091B789C9FB7CC872BB73E6B9D4ED8A555CA31581CA
0F057B10C7A8CE1D7CDD4FE2D5332FC533158B8CE6CD3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5020D74C7714FF08F5AE00F69DBED351708B1C760171CE5
5D0FE3BC5F6769FB19C7951CD5DCA774B841330A2C8CF59CF458230A1642F956
21D23843C4332F05F5AF14E70EF052F02F7E3F51D6E7D68A4FED8D2C4A733AA3
8973CF4CDF768C31E35C395C3BF67A79F8B1AC292F38AB2EF22A87A8ADBE2C55
747D7AF3101C5F1A2A1BF6C0E245AC583FE784CD69B918457FC63ACB5FA24E41
CAE39AA9386736476F5C0BD3D01ACFCABB35BD346B884B97EB5F467C93A2FC7F
82A0B3682C1D7B0CAE0165D6FE43CBD8FA5C85EDCD122FAC36F59FDA7CC4EFE6
1F9F8E88832737186037F9E5AB161B8A2090F5569529861FAEFDC91E823E0A0E
A92E7F1118BCF413BD355CD844D0F88C47B267EAFA1585B4ABAAAB9BF885D233
DE4656E4CCC1AC1A5762BE48F5FA88A0020AF17A438014B5902A55EE220152C9
0348CF590A07761415D2F53A866C95D4A6848E2BB7970D176670F90765843635
9C2461BEA57F9CC512BDC51EF25496B2C2253AE85AB38889B26761BA509C7F63
8C6CBC4BBDEA74FD3B43A178C86F9A97423815F5FA2C09BA590B8371D5B7758A
43F98F4DC4792308CDFE2779CA6F20ACEF23FD8FC11F483C0CDAFE837D984A76
1286C4DC5088F5DC4B8D59F781ED48736CDB2D0B9B51340F6218CDD622544552
9BAB6B88481D111091C2CAE5E19903BE5F2C90E79E2469EFE314329B4653D49A
0C4443075770A91B2AAB03B33ABB45A0C22C491249120F6D6784BA8E9E1BDE1D
E49CA8078E716ACFC56247BEA146E10516B2AAEA1179D951CE9BD051F9323250
9E52940756E59CA4A375CE1613358DB3061D125AF6741D6656C98B1F13580C2F
BDC52C98F920CD77B868E69DDE797D6F4E0072FCB2A687156FB7496E839044B1
D5FFC9BC33457C2C37B25358D12727AAAD72E74D67C9154F75D97AEE6CBC90BD
3134AA1484CFA586918F6CCFB9076E3D36DFE9DDB392685584B5BD1C76BCDB39
127FB7B4FB464BED85DA4CDA5ED8C470BA5B76B22D093BBF07F73FF5BBDCEAC6
93B8D643D231EEC34E65CF2F765628FE826574F0F0BB39F960A0A63590C1E03B
6E6ACF8659CBA06FD67D5981ABC431EB97CAC6901029CEABBD3785CBBB456DED
C775AAC582EFA5A0D994D27767EAECA7582BD2B47B128490DB98FF9401981C33
53F53C17A67DDDD06D0017B39B9A8C5882E168AEE56063AFB461ED9E7E1A0C7C
DACFB4440891678FA0B8E67022F3E49AD8F46BAEB340CC9836AF2BF69DFCC4FB
45B8FEC8FF99C43BB47231
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4A2DE9AEA203B209385B88D9E708FA615ADAD672C6
BE223D5855C0F6753649EFC00A7683A9EBCDDF1610B2D942987DAF090BF54FD4
E7304082BF34EBA0169EC3F6190879D5D8DE05CB5C6CE7C2212251BFE8824A87
3A277D0CE8C588611AF4987F7203DDCE93170428CB54EFDA16BCA73256C1FF85
2C85996873C9487906AB70DAF5E4FF2EBB5C7489358365EE072EB45FE7328E73
5D241828F39C98E813E0B142027DA0842BB3BB3A4EA8DE8EB34BB81AE7BA9B29
193A289A9EA7EC158512A268417204F047097E042BB52BDA0AA3ED16B4315244
E3BB451A99B211EEA2F1CD0A5709AC8CFC3EBA9A0C45B48925B43CD4417517CF
6F42243C234413756CA68A0F125A0E7C1CA1F6166685C3FDC27532C931AC8B86
E81FB0223686025707E5A69C6BF3D0C6660E636D6AD25B03A44355855B2712D6
F84E63A541739B3F161891F0FEF72180DA1546675AE16824DD84B6CA375598B6
C439A2E90E30B7AF6043F860D5D548B166C25921D8DDAD3398299D23D94203ED
FEB2A8899B078698314F08981397316AEEDFAF486F58FEF25284B5B5618A6762
967822C2B91D421D3C8CF5D76D071D3748C32BF1C779E9131603E8C0EDE2D696
E60DFEE5F15D5EA092DCC4D49B16373FD58807C44B06016EF5E2670A911AE147
CC5A9756F870A1716B4DC3D868BDE539079576E5CDFFAC34E165C063768ED394
770CF07675657587CB8A56596847362B00E9728B7CF7F5E85673E4B8C4F424D5
94F93A6861828F6251F206B9131C951D1ED4364A9CCE5383C0DD92E3E329CFC4
E2B36E704F5A2E99A7CBCE624FD99EBD4EE699630BC16854CFB80EDEF8A6A652
03EA75BF1416D23DA37B18363AB001813EFF029266FD7220DF1315C0E76AD8D0
3FF4CAB5E5114042B951CB9E36B323D53B28643AA12877E269C4D95E1ABCE508
4B1C0EE6096E008A5C34BEA647B937325FBA2FAFA9F834FC7F5DDF178584A24A
214283F53AA2D015BF620BA5C87D84E4607F3A29AD8DB076BD9AE6E949DB069E
5A8CC9484A18CBF278813319FAAF6C66177F200389C2015EE81663AA56EABEF7
C4CDE32059DC33368DFCD76D138D0BE636CDDE883E1CB4ADF94B4DFFE102DB0A
43842EACD9168B620439F55FCA7313B67CE7FA22F861B2BE1B1041C5C68C45B7
1A717B81834A23F54E80647B84B6EAB895BA6138753EF23A95D41A8069B91B9B
0B327E651C06AAC2897A2E839E3A2225EE93EE41B03F3907EC73E5B4F9B71156
B357F62608909B7E4D0D6E6DA17D2763E1E130164942DA5F704DE35D983D12A3
6140B8DA142FD05AA44E8034AB75C30DEC81BDC725D2CC7FA26EF0C059090FB9
3A5747EDA57889E0E402EF14AE8BD323700B083E6FB9B54FF40B63FFEF520AE1
5B9882BDC14A6567C19ABE55F8186365B30C9002FC88AC0C591F66241ECA8269
A34B5441CC0CF92EF7F66E79D3B2B7687683D34954230DC6E93A7772A7BC9056
B27636A3AB7844D6308C174441730ED96BE3E09FE4561AC4F28A2C7BEDD716B3
3B820BA74356DD9FC8C589974C55513AE70589392CB5599C789178CD1C1C86B8
FD8EF3FC186A8EA4C9BE51D592FCDED41C3662B6A487F14B9D9A5B20898C25C3
4DD931F1B09E72D4167DB96B594B7F8296FCE3845ED8FAF19EF067F6572E2787
8BAEE83AB15A7D8416623122579EBFEFB21DEEE302647D68DF3B50F5CAEA8BD4
F3E91ECEF9412CD96BC9190FF4B231AA728E36BE2546E81C23F4584FBF0D451C
ACC5142CD5AAC12ECEA34351F85390338ECC499C043E346A4DBA66B7EDE932FF
D84DCEAD5F98337B73527537B8FA58F86F01329F1C4BDC2FBE36276FCC5A538C
B4A58590A3D15A7909F012E909D4F3C596C6F28C2EE0009E717CFEFBBFEF27CF
58AB01C17F7F53615F79D689B6B02532EBE773369461C682C841008292750A37
6D0398DA95DF8AA168A0A9EC40CD9E45022A81934CE5B9973ADF81D7EC966369
AFD3D36EDE20B10EE93517665826A01E9F0C9B401CC50F9B0A3DF60AF84E3C2F
621C38C0CAEA89B2205499005327DA99E494D9E1FE8EB703797B611CDDF7DB31
F62CD736AD7AE654A7A2D892EA471590989ED2A8B9CA97C357ABD25D6B8DCB78
E81FB5B8D5C70217A7BC930F472F93E247E29CD9852001BD2E16E51AE491BFAB
A39D0F2725E0DBA7C8CE305DE7C1B59DC2184E09F7B7B2AC0F915A89AB253EFA
653E29CDBE7BEF9D40CA8BFEAB9B506088DB3CF99C78613AF62054AE1A32A95B
595E32FF28C330E73A2D5F605E33B1B0E45BE31A8DA7AFFA42839CC734E717BD
D52F97832A24A6606A5065F649FE81E6B3B1E8D0ECC21206BB80B2FCB7BECB03
39036F3C3B3A2FB108872E8860AB6F67961567329F5626E6328EBE3D35B8883D
AB6FCA8A2B979837A433DEAA348233900A5BAFA7892567BEA46F08D78E105FB1
0252DC8E0EA149DF9D95D5D24C4B6B2795D94BDEB015C731EDFF85EC1CFA93D5
D6087892FEE1D0B7EECA805A8ECC002A4D483ED01D7F56D4B0ECD46EF72E02F9
E238A7C7FEF6E38762888F2912920CD0C00F393D1D07D7CB3A34A45E59D1D51E
5A94212F7E51FAE541F3A3FFD18F24A9DEED6D18D629AFF0357AA99B59A29F51
EDEEF0CCD7039E630D0A7BB94ED4DD307A0797DFC4CFB7BAF1054C5CC65BE701
7223DEB980B829E667D375A7C4DA8EF1641407D8477DF5922A707E00F2E580FD
FDF210416B978EEFC2D2AE5B546D0D66BE219B213B093711E103C4B0A6A113DD
AFB9FDFE11D1801A468119629A4FF3EBFE0443F0FA19ABC04AB7DB52EC413C6A
9C8B367230C16751E103E2845FB38FB2C15A7BCAFD3C85932525DED921561818
551B6F7D1EF656DAB9F2FB5A92DA2D93B04417CC9240E9C692407250EF480CFB
D7570E6AB5CC9A07D4E0EFCE364DD0022F77C5C52B2FB301628AAE6F318BA2C3
64A97378970788A1957B94105A98E5ADBF4795A108E6C6E15097AC8DA2598CC7
670A7727DBE62414E31BB813F06C4EAF69B6C54FBF6D7855B8849431293D83B6
41558DC54C58F3538B774AB5A9B5311C2E7E474F416A08BEA0FFDCF8A9063866
0039D6EAD9A62213E7B5EF3EB9270EDD6CAAB47986A3DAF03E4052937BBFE94D
5F6B36133B9FFAF07082110264E4B8239BC44D22CA556E23D42C79FFF7E1CB0F
2199F55A7B7257E9F6D23EF60AF9131A1E73E0DC6575021FE4ED7971837B8318
DE7C223C704B2759BCB427205FD7F4CC1C9B35B4AEB6B72F30468065D1A2ABF1
AD34324CF5CFE4A4CD41C1092F4FF2D03DEA8AD588BCD2CB6D686E6786BFCF71
D9D041AFE0416F4F1A755E97F12D702630C11723F2D92A82A96482D08216DF53
ED0681C548295036382338CDFCE1F3CB0E7863E79AA792B335CB8D72947A66E2
3E4FF64CEDAC326536CA1F75ED1BC7113F02600AB7A2CE3879CE965818B9269A
90EDB58ABE5710062BC99326BB139B39BC8C210F536D500872FE961C62995EC6
4BC62A60B503C129D7C618C217F049B4D74A7E4877C6211DC8E05DB6D173A121
3F53DFFDCC9A06088B42CB9967A72BBDC61A3889CBC27A6CC70C03D0F641ADAB
859A9CC9E5E6BC6F373161076941FBE23CA6E81B848B31CEF3DAD1AAC6417E96
A34888EB46F1175A19233DAE11DE65BC035327144B153EA7313133DF49A03128
2BFAE081381F10079402E2BD9735E61CE48C7E5A10B6E3F945620C16907887D2
92FA2338E978F80268BD269E4CA2A3B5775A1CD44B65F245F3C8B9875B9C19ED
27B1A4F421F02414D050F7488CD982CC641D41903DB2C5992F25C80F0D181CDE
1D7F5ABFF5C667E68122F16D74177AA0FA429A05A90A1BA848B1657D866CA510
A921B50D54C9FDCD35EA07A19BD70782CA4698367A46BB367C5DC675D76CFF4D
A0E6A71B9AD2504260D90D3627365692531D25AD1A01EC4C31819D2DC7B35CF2
D9F0F492A16FCBD52B4A8B1AA257C2DEB9689E200925D85FA2343A78E4BC6AB5
DADCB2E3143D95295E23EE37E497C4CE64D52EE682C4F6C7A55DD17959CA1906
30ACFFCDE63ABE76C30D9CFAB56CE8F8D14472BA883831DE798AD51B78AAE73E
8C72692DC12B53503EF1433CACE72E04427C53E3DB03C91AF6BEB934EA330231
52C25C27C3C771B555F5B36E5ACD4F6DD29CFE584C5204B59BAFEC5FB40AC71D
11A2B290053C9BD61070EC189794018F1B9C5650488CA308980547FA5474AE86
F48C3C5FBA2F06DBF4356F4E1A9F8B0F4C80FD9ED2073D21FF50B841774BC20A
AD8C70DC0B2D9927036898466F9D8909AC81BEBBD5FDBB7D086D0BF513155727
DD54F457E9C2D20417DA2D04D514E5242EDDA8146103B7D094FC1DBFA8012920
F318C56781442568CEB21A1007D6F0608EE68EDEB961247A3BD77436FEFD841F
DBD456DF4A716744D3D19D518EEFDB602A670CA6E94C8BCCF83DB0AC7B39632F
0D46FD3E5FA1F1AEE941D71BD74833CB42F7971264162BC99CDD74E7ECB2ED33
9DADD6F39274E7E8B2B3B84C5D11A7B2F64D6A0AEB2C3DDAB25909FEF00778D7
003A85E0DD45E3E872BD8F6DAD70F1143917DB990826700ED99DFE738B431ED8
640CB015F6CD3E4A2D87D6BEE02E18BECFE7FD7991475E53DE754050D7EDE5CC
762B08D7EF897EBC49BC42FFAA5E1D52D8F88DD49EE0B288D2CDA4FECEAFBAC6
248DB034361A3B0305C8382E437CCA2158B99A15CD405A3622C12CC43134F7A1
D7DF1830B72582897685656AA91D922CDE36DCC0F40361ECC45C4D38BE8911C5
0F40EE48070919A734F426D447CDF8EFDCC1C8AA92340FC593C5CB450A2CD44F
6ACA8A6279180A4873C309956ED1FA15C20FC4BA8D326A49A911B31BE30A8BE1
B949984D97DF3E9CF58862FB095884CAAF0ACD628933083F0AF8FA211E52EE1B
89F32F409EF0A0DDFBCB2C1F45FC45FFCB716F2BFE4CEB6EC3DC2047E83B6CEB
8E578476FA6B36E33DAC7D1D4D52E872037221E7F6EA9377730189C3788D44FC
3311F94CFD6BA9FBE309D08FC9D7497ADCB26C3D9946F115492C8F03055C8292
7FFAFA6E43AB242632348DA70065D910943A34F7D5F2090FB4AA42ED70CC67F4
30C7855C59CF9E782CFB09DF52F10FD3856029CCDFDCD91C1A57EC7ED6348793
71972B69D0EFAD4132C8E9D5F766B2D8A1776493BF6F949889654AE58EBA775D
E4295F958A4D4D40C21D7643EC0724B2284CCD6B34423F1F93B3630A4587FF77
8F661590642D1B53CB86D76269F2F240C9426E90F57925E6B90462A69B5B7B8D
3A9F8E33C334560610DD15BFC537D546370C27D93395AE33047C848C07A52411
21B9AA216185D4EFB2E11A6248C7DCB8850A360CE3634B20601321CA03AB14E9
73ECF6FFFF7CA97CBB23010FE335A955C6F50EFE02A94198A795EF399D48292F
BDEC55AE303FB7ADF8AFA0646A4031EF6AFF98DE2420B3E3A28D735CDC6DAA8E
1A598B5A151C1AA178F29CA500BCCEFBC89C7C7BF1CBD87891D4388519B704A2
4122283CA1349A39B3F5A2A5B1C8CA80962A9A2E726A5CEA063D7B15889A18EE
3DB6D21E88914BB723EE9BDDDF3C1D6F6884A5D19AE93D67F52670BB3F44DB2E
039B0EFA4F3DBBA7D50C464E3F297A0F2C1AC23883BA92A43712108520D9CE91
93DA216221F842FD0F3CBFCF3738D894770AD27F2BAA1A8AC49D55D311D7B27E
79BFF4D8EE4C10D079E09DD0A803251DC175E7ACB31D283E0F00CD0DE83A89CB
97C7E6E5D5C17A42A296FD7204AB6C70DE2A317DF81F62E9625582A50F194BF2
33190A324BDE1B3734804F72600587293247C5DB2C5FA1FDF973FBD42AEA82D5
1BF9669126F15AAEB8C958779284ECA30DB1C93E41DB7BFD00B4DC5CE3355A50
ADCBBD4368A195BE82CFAA6481E021CB53EC320AAD6CECD064F9615BC3F6D99A
E73789CA43DDD61AFD0A6C1ABC42F119E7275D2E086709CAD8F9DD76D2D48C10
4ABB6F15BD9E29A13D06A35317623DCC68096360101378CC2850D82EEBA2EADB
08865836B98C22DBC04A91CE237B8ED9D9F07DC65F098EE928C73D0E6F2B209B
A791971918903CEEEB160F0845EA7DE0DB3C13B8C18440DA54557DA4B62E891B
4EDA14546CECB44BF33E814414FE058B297A459867E1A9FA65A75E27349DDAEA
619E52650F8D44A7B98CC54DC3FE8D0842DC3A9E96FD7B3FBE8E830797078886
BF7FCD383E27911C67DEB72FBD8794B3F51A1B1E83CF4013F473EEC8A587B776
06673E231B81078DF37959BB36A10B51E964B88570819475E9E4A53BA6CD4FEA
EDCF8266D724C7E7F6B1DA12624B76F586D52B66A64F52700746CE52747316AA
4848B2BF7ECB9AE457FD7712E31BF529DF94657F808762AE673E6D288CD2A309
5CF4B93D2773F4C10B37F24B6E26BE56E8D48A62D3F86B78875F838DCF959C9E
2C4D0172004C2C2D3E3F4BA139245E95B76F3695B0B7F17AA8EA3AFB5F2BF0AA
18CAB0C73967BA45AADEEAC43CF30B21C34F1BED103FEFA843C55AEB37893377
CB5B9372FE2EA0AE19698715267C8AEA3DD0AEBEE39082705FB9BCCC4C8A05A2
7D7C70596EE39E400A6F1FD5BDB4B0313E4A271AD388529B2769CA1AA720EF89
C5F6C2D5127DC290BE40B827838887E38A8EFCC84F58309DE5AA26FE416D6FA5
F5C34F34E8DC39109089E1016DF8FA12A8A16143D6FA33885C9B9C1C3A989246
A3833D50F1C7E4A8E5E5D0846017DDF49641121A3C45F85184B78E26180BA3DB
B0466C507369F3F61E8FFCFD6FE8447932BEB150E3A400CF8B83ECE8517F383C
BA2984EB136ECA5AA00290C864B2640E654642D97C5049538CED34E669A162E4
22B331A3242DF9092F29208132F886170E2417CD39A79265C7EEA862D9DF3350
6FE408B6BD71BFC42CC17B0608329D093E1F99904BA59E67FDAE1B24D89C50C3
C54B4136149F76989E8C5F02294926859634E33BAC75DC4AA0C96E6DF7A1DFA8
3305AFBDF5ADD237D911F846A5870C5C77B675F10EF345BACB79335D6145863E
BDF0C4ACCD190A846D1C156F8B1F07AF698BBC6013217F8B44445DB2A5F3876C
929BF63ECDD2D8DC8564428CB884782AFC3D84143127BB5283551604753DE51F
4F79713F761AEF5A91CE7EB137ACE538F16D931E1077F87886858AF74DC1D5C7
DDBBA30EC3BABAC4A17EB9CE2C7E3E02F715161E7C7DBCCC14044FD35A0D801E
AB3A54B90340EE129822028061F5D30E3AD9D75A595F0D4A93B656B4510871D2
538ADD45B681765231E213BCD4A2FC290AB05B0BCE4285A33BC2ADE60A73B7AB
13AFD20D5219A7156212A7B57DD9965B165C790656EA8E2A01FC1F322750D4A7
9D8878681412796699F3BE8726073C5E069241A906F0EF15886DFB61E2E35E91
5E59246A382A2EF44013126E9745030171081F097FE0E24179E719D6674DBBB5
12BA97E4085C23730AABA58CCD5790DBCCD67F292584BA2A471906D47C25762D
29B60CCE7E3882E49DE831CBE33E84ECE1BADC18658480720839AD6ABE1A0B43
184BB79D88C960053AD6CF7BA3DAE4BF534FC07180E277C771BBC84A300794A6
EA83C7B9F084C0D81A912ED19C84EAAAE99801DDC5B988EE44195777CEFE93AA
BE6BC49EB010086114F4032A084FEED19C3D69EC4B6AC687A6FFB981919CAAA6
57A12C8E41FED1A401EDAFBE8A3F9F871320D840B1BFDD84BB716208C19FF9E1
F570C88012D54CF7E096632B3ABCBE06DA2CDEEA31C5C24F873E1CF9AA03DB3E
75DA4B8ACD4E78BE258F901A0B50141288B7EACB5C756637C9164F1482273187
F24F9D209D78E0A2FD3FA71C28EDFC157CC1BC07ADABCA84E043EF7C2EE7F2A4
AA9EF432736C21D75F9CB382BC332FD121959382B860EC40872F3E7AD6858DBD
42E9864D481F345ECF4F253CE68ABB4F2ECDA9E18697829AD17E91BD78559AD7
C713B6D2A746169C413A36E8107FFDCC7D031824121C42CDD5CC1D1590690039
9BC707F7B649DD3121EE2A58C54D8AB7580E1F808E7AA70C98658F7A1077A179
C997DD19DB7EE329B15FE526F0C629088FFFFB13B664BF15DD89A0C4A36CFCED
C4BBF488820C613495D7E41390556DD94D1FAB63AB6E06193EE050D093AC0BD5
DFAC3A0C882E8A02AB9359A878A64E913E8401DA815A55EAD0550D79E5E418CE
773A5707FEC935B8AE137A7F48B332D42B7A634C5F205E8ADFDB8B4CA7CDB26F
7B813C87BFA3B6AF75D4C6415B9B58B35DCB07261AFC2B0A6F5BDF6CC77C8E43
C053205C111186F73D71007387C697011834635F86095CF4ACDCC4CA2CFAB3E5
70ED47DCC59E67DF990210DCA0B58494405E78E96287672778A3BE351E58E961
E816262EABE2E3D2FD32033648C936C547CD0C796B110C4FDCCA3F1B81F9C928
ACEA37046A42AC0058159FDCB85363C9140E4CB2C5DC5442DD3E19B955F0154D
A46F6640F1B0930466DEE13CE69FE01A114E444C1F097F6AFAC7606ADCCEFE9C
A6AC86874739CF1FEE0F4E6D22A4E99CF1D3366F83D8E376792EE1B00CE037E5
4B6EBE4A725144D8941A967747E26BD1721DEF363B65AB012522DCF1755737BA
5394AFDCE81852FE74F0D0781CDC5303AE631B7AA2484EAEC347E0BFEF4ADE6C
53BED1C77634A0FEFE1385D456D329BA028AEF75F0F20B0C305C92FE7B5799FC
CA94BDE4C948838796FEDE5D81709D1B3AC99444E7C55F697AE7C8D7DDD352C3
ED6A78D536740251CF1F50DC361C2E7504CBC51FBACD7A3D7D91ECD821734025
EB13E3336B8078D06C9E359039CD693DBE128ECB081CF766695B7646CA2F97A2
B342229925F735E97C672C57F9804BD0F195ECAC2F178CC8426FEC458D2C2A7D
57C642C0C22FAEECEB62EAE603062F0C30E8B947926300A898F0FA2804E0BBCD
CC9F6E21CCB01746D41D1EC44BE55DF5BBD8D6B0F9959C276FBD020EE4F28EE4
92DADDE9A7DC2F40FF95BD60E1E42DAC8806F28F4191E7D48C94F67BFD060EE6
1AC59B14DCD688554EFA8D7F2FC0737E4E6A6C452DDD57F9FB895EEC9052E9BA
886A31F31DEE53AF2336D298BB7BA5DE0E622021E0CFDE12AF9ED20945DD7A6C
6B173AFE0C12AC95DA0AEBFEAD38B6016D9F92BAC170EF577F4B6D362389632E
BED7ACE79296A1765F02944B8E689BF2AFA7ECBA85BAD11E560633221700A5D7
9FD0452BA820526D9439800B20C7E958E434402D7B35FC32C14EF505C427F7C1
E2D97BD87B20D735CE102C0F60A9D44BFBC5D8A60D34799EB0CBF974F84DA510
FC82C8DA6CA3CA9E5EC4BBEB0896586854605D658D8C7681595D0492047B0B1B
4F8175E5232D6644A2260837F172756F06AD294CF5D941EF5C3B1C10287CB787
EFF59E86B4A72A199F12A8EDA9ABB98A5D4359E63E89BB202AD08F4F7DA8B4AE
EED927B7C01F2F469C662760414C0140C0DCEB0F0F8381DD3E8CB07193D64E3A
EC89CE84D6F731457FCD38003882A66A4CF8D7B1E2803CCFC1C9FFB04B110C3B
D4F48D0BBFCF33E5B44F23F5D501BDF6EDA374C74C039D6C2D64ABED52F0A005
B15A39141AAF7369074000DE38DA7BD7171FDE19B2407F893D523EB7805E9CB8
74ECFEE099B33FC49D08807696374A4A48ACA2FFC1A3A424ACFE020F88E66521
00EEAD11886F604C81552A5AFDBEB9631776656663828AF4AFADF09D8FCC0431
EEFB5691ED61BE4D288EF4DAAB5311C545967F311A35D1390FEBC79E7F50D3DF
9F3E5B6EB1E7F5517A860177DCC5FBCB5BDED0C269EC967551FAAC019A93A7A1
648D21A0CFBADF5B6E4123196031705C8B89F0F7E115CCA0CB3CDD0260801639
B3024B7847E996039601F6AFC868799E33319AE8172CC0EDD3FBEE6667EDA6AF
0524CAF6BE7CE2AEF79E27A7CC1D6B68A5B9F504BED3487D1FC2C17EEB19D151
D290E50A0B9EF24A5ED767F4D533BDF1CD923FB543C420F7ACBDE3E03F706389
6D3B578B2298D345723A0792C9E78F1F0B69BC4D807EA91EF46B8D2B6F11332A
AE28B10F20AE27AC8CBABF042A6A15F0CB3762DD40053E9187C3C5BCF6B1BF7F
26AF21C21D9B1B916F4F603DDB68D189470179B57D2AC8E9DDC61C0E9BEE7AD5
DD407E9C2125CBC03359F62327FEA224A856E0B7309A9711146DACE82E15B672
7F4289C6C81A102A7E38178ED36221E23FBBC8CE88A8F9A12D46B8FCA50DF443
3B0B8AED6A63B9E0AE5D766B378FE86691BB1283618D234ECFE8B485CFD8562E
AF9A4052B1A382AA2E1E1DA244F00DDD16CEBFF93D6F5741E280311FB6537C61
1BA2451F461DD52B566D9076A84492BF9B8D010255944700567530AACDF0700A
E0AADC4D382F584A2DCBCBAB1022DC5EC53C2689D8E2CD8855BF64EC9BC75371
A98095CB51BE7FF107E4C6C2004195851A0A7FAB1BB9286229CC3069BE68899B
AC693F8499F0BB7ECD1FEB1ADB7696B6C8FBA9A8C1BED101E7BBC09AD7EF03CF
8A2EFF52CAA34C7B703E7A2A59A98F3C4C1207108F3D4D7AC6BB7F5EBB84447B
363870651958AABEDABC7C47532B4B80F77BF6EE43CFD08C97ED63791DFFB4FF
1570574EAC7E17C772540440EA91FF4D29CFB9D2FE13E54BC833576A95C2262E
AE7BF2942512F1B3177C55E3ED89E370A620C414D729AB077D7C9C391F3A2478
F6F6C9DCBD03608C8041F8BDA4312FAD22069E1B7D738B10F304E91752899F9A
3C1AA557285C8ED056676B729A5C500D76AFA2763BB34CC63167197E6A39A6B2
C1AE0F7A914ABC04B6F4E9B305A2A3A485C78049A3A9508F6836E3CD323B86F7
C01070725DF295DAAA3E6A65493243EE607CC5E8C7189E78D019562D5C0EFC5C
2113AB4829EF58D62DF6C4CD5658D8DEE558D56E15149395D378DDF5E3879446
BFA1B4F06E2C329AE0BA43F5D547FD647E044206E1567BD589C6D37033A588A7
7E89D683482101C0940504D221F9A3BF31F4584EE9B2969387ABC9772F8502DD
9589879DD872D4747775D5CDEEEB7A8A986B66DDC9D43486DF7BBC05B79A1E96
F4F6F60543AEB0F7B210A16F187998265FAABEC625523524D5387DE4A6886CC4
3455C6C44E9FB7F55FD5649526F9355BAC65D46DC51FD6C3C5A6F4755713A21E
DD73F99E54AC2EA12BF0E8C92A234BC804959F8593AFE260F9E5F5A40A469C04
64406B7A1AE8676152F9540EC304140C4E1569529D433336951DE4EE9AF8E820
38CF6194AF036EB3090451311D2E0315E7E138A9D3727A7BADDD084CBD56E873
024034AE2A2783A9B4CF079301654412E6D469B1819D69ADAFB7ADA60888B65B
FD2FE2575EFBC3F9FB951E4C6A881D35642453CD3672C4A375D6039F7E33C33B
3E6BBBC51039331DC4E3A6A4F4C4345654D7C3C442D34EF5E344A819CFACC305
F7B52FFB4BE67A1833D36D09829FA03EE7D559D5AA9874D92B80A9DE69E7B499
C26BAEF2BAA95ED2BB89444614997199B4D1B770A950A36F5972F5167E392EF9
711096063E8169AFC52C182BDCD360996564FFC6E338390623D353F870A1716B
4DC3D868BDE539079576E5CDFFAC35AAB0A013B9D7B1B7E0041EF68AB5AF9B94
6FF93660780426DFE775C4064934FB530B35AD9155EF03D074AB5536BDEE786C
28CD4389FF766162CED489D8BC112D2C546E06E403F7991165DCCAB03D5ACE06
172EDD2479BDBAF079CC7AA9A891145C34BA233888D0E850B1508355BDA995C4
7EB3AAC7B89EEEB9E2F9CFC6BCDFD9A438C10BDF9E605F5D607CF07E8D14736F
1E0E9C2118A055DB5C4233ADD8939BE7366D1E3226749B9E23E4C2AE4B9E9909
3BDE82D0858691207C805D468655AD998EBABC0D77641C90D3894D4E5BC82400
49B266753B194C29B9313F949ACDBE8E8271BA5A9A2831669C086A3590309D99
8E6463CCCEC733780A7FAFA6321B6945B95082E1FB3C5BC0927783C7AAB8029B
889562D1C9B79325BD873AED46F6141B2BA61BF7FF7AA0BBC9A98DE40C3424FF
349C13DD64BB28D0F8DE5FD8C8FEA78E46DFB045457F8D3D32AE96CA095C56B3
D62783960780B31693596869FAF56B8E6D27746C9DC827B1E08975F998B4C43E
15A84E7DE8D0AC99C68DD7459A21336079126C17261F201B5741C022BFC28BC3
65A56A38449AB75BC7A21F225F83C4666B00AB467119F1E155676D10A8A35955
BADB667DB101818C2861658CDD33BE34ED09BB1BEF9525DBECFE5A994BC34754
7BB2DC104E45B02002887372A7028342D5DA1FBB731E40987A445AD31BD84B91
179CCBD40DD4CAE2E88F6BB6726DB5E056F1F3B6ACCD076F6733596101264C73
1B3FADFD7E2B2575116286D1C2A40545F973870CB9F0D28F5439374C40C301C2
01A9B3E65AA5E0D230265D9306D129C86166CD167E327C8D51E5EB5D7DAEC7FF
5B0FCA0B1528BD444DD1B0EFDAF667A918171169D8669E3631B3BAA3217EE0DA
D89D3DFC2D420C6A12D63EE1C2B0A79A842755A79DDC1E281A8C34A969B80EDC
94665962450F33AF7305F28FF3FF34DF7BD592A865F81614B3C8254C8608360C
B80F0E85619073C13E213CE2CD96398B95CB6110398F577234A79D34F58AD6DD
FFBC47882B01C67C67CA2A599F1F4BA039BBB26179F2A72599892E489619F123
F67EF19870CEC1AA22459EAB183A52F3375630E2718B446C08CF8E15487FFEA1
EBC887F047AB45EEC4DDA6930768FE6AFE6D28C37D65824F530A6DFB4D5B7408
A3B2A7A02BC29585F87992AFD400D2F662E02A86AF1F6C849635FF109BB34E10
042752C0B839FF9E5C304D7A737F5F96413EFABC51DCCE51FDE3A2543F979469
64F320A5D28216384F61DB0CD008AB7A26A46FF9CA821E3D57BE4BE182B460E8
A72F356B76A6157DFE18939D9ADF30E5C68667C0DDA575B44F8CE8CB67BC77FF
034C57BA3D75F1EFFB112F0A4D9FC5B6A797EF69C179AF54C93E59F95D036444
FD4729538BA939C3A82BFDB44CFEFF4E4A58E17059A66A66132D35680501A47F
FD3C2A08E76D2988439EA96FEA19D808A4FF78BFF8C9AE5A3E04452E938C0184
77D107652BD59E002C56B3DD423BEB88CC86EC72A3F81C7EF13974554B395E50
287798567FDB4F0C578D5760BF6A389251D6969B8AF3AD360A8CC197D57FD9F4
0D12C0D6DDD6E89A3BA6468B6322EF1EDEFB245C940ADDDBFCAF37BA25002132
39F12DC7E00B63810E7863A2CB3801592D910C5BEF6F915697207FAE560C62EF
334C554737AD7D5994236797F4308F037F64739305510BA9F24361EA4C887331
85E2FC5BD3720DAF799ECDD85EC1BE70A479FCCE5C4093F4AA8854274B18EE8D
0A489CB78AE75236970181644F995A049EEEB890422FF9AB9D5F77E601BED695
A5684A1B63876F4735431B68F6FADA219D372F01CC90343FE1258E92C87FF224
61B608FB00086F33051755365CE32646351A7610E9D59DD98EC0DD45A62C8B6C
D6D07686293565232BE739AF0A42172DF3066AAB60C5346E0446E0EFA5A94853
1F89C7116441812F2FE368F51654EF115AF46CFBC3800C3ABC0EC4A6A61A8631
F03986FC4237D845723C5BEE9525EB20509454E8F5D1A42D40CCFBC093AFD3E5
7973A0090CE5202295A1C5FA6CE741245155039166B80818F6C1C7D13FFD9D65
C06F84A291CBEAB880B16D7DE7352BF4EAD58D1196B77BF70874462D6D951BC5
4D61D6DEF2B38CB1D89C68348CC174A091791FA74520C8614D4FB1125B871CF0
27D7087025B8D0B9391BD706A419CACC1FFBA74E534E8504F9815DB6DB1EB347
2A1CFA532E87B80603A20F2D284D287BF3AC834D9B77849C378DB01F63F4F75D
69B519B6B0A216CECD233B141C8302FD0F5B244B3604FF1776C2F6C05BA5D4AC
D895E0C36E1FE15AA93FE513A07CB3A0749412DBBE8555BCC1C9301918B98CB3
04191BEA2B28A2CC54B4C09D2633D0ADDAF128E4E336E18F17D42609A279E8E3
D4698F925E037E82E12B021B0E80C73B29B8EF5B8C6E1FB46E5C40B1D2D23D99
FAE306F29543618A5A822B0BCDB03FDEA6BBF79910583873ED68D00C0508DFE6
1EFB83EABD0A4E7C207A140B2DE6461F65A8E9366E0BEFB97591F9BA5D835B77
624B250F7A953503609C7F9164990AFAA86C04ED313ECBFF60CA38A5FBCAC0A2
25B27791F6AACBD6B7E01D3C30B3D66BB265461591F94EF054A7FEFBAC66BB7B
B9B715C44B89D09B67F1B899CB78C94227A3AC6A6F78E48B81A8CA1191451A41
9689E7F2ACA8DA3625DBDA1B37558100D7CDBB4BA09A51613E3E6A46C9B7B105
2C0A5491130E312ED1D024947D5EB4DD00F5FA142DA826867DE93E13CA2549C1
A8D6F672B517A89E498488371938C573B40D709C82D81A7EAE6E28CC683E82F7
54CFE79598457D94ADE420BD4CDB063A3C2559073D8ACDE59EBD4B0EA25D371B
EC05FB390137495FA80D6E1F61199322E0D926876A97AD3F4D03E79C04FF94C5
059BAC10947BA16CC916C66B1A006DD8D4E2DFC75C0F145FBEBB48466ADB7CE8
34363921F49BA565DBDB0D2052054D416203219903AAB916ECB3C4C8F811AC5F
F0A590473E99DFA97D901589C53187E4054C2D37475078B1996A964DD7A632B0
741C67B0A3848B97423A8BD29076BAEC3567CD7EAFDFADA9448F1D978CFB6BF1
69D424EFB12A1ED6ED2383C65FF6ECDF6339B449EBC45A95688575A4D2874AB2
992B9433D889854F5EF1DD29199237B98DA402B1210A09757E2EAA6F65628E8E
D60E3AF7B679228139BF6DA9A74948C3504D1E950B41AF35091B05A3BAA49FCA
1556A81BDE20331FEB5A20398638809DC388263F3564493308EF1012183C46DC
D920BFDC0E43AEE3EE3CAE1492B4ECFCC3C7A7D26021EC57199E79CC100592B4
2C03B93C8C441C04A64A0C41F8C9F34807DEDDF20BB1BC31475B26E46BB5B788
713FB8009CCFE62C17E001C96633064B00055D90094EB79BF159A65B012A2EAC
FC2FD63C985BC0B476B8B54F5F249AD4F43487F61D3712FACEC614206EC7409A
8676469E4D94CAEFECD0EA62D9FCAEB9E562D8D4E2DFC75C0F145FBEBB48466A
DB7CE834363920C12057B8749C89D2581040E9CFADDA43C0BE6B4EA2182C7AEC
1B59EAF96BDFE34D6F8F05A4CE0421600A3A09DACB21E1D3D968967A1447E5C9
D5156F2043E9B5723733686DF2FAA0615532EAE59C82A4B95D495FEEE1333962
453AB36E6E325AEDAC9D82657F8ED07C3F4BAB121F883185DEC6C4F8EF454A0A
41DEBAE7BF7A16F17D727460F8D9DF3E4AFB32361ACAB13BACD3E465D094B64E
709FC7ACBCF38CC4A173A9AD53A10D1FE691EEBC3E6D8A924459D4296BC3A584
610663AF1C2FF053C1379F452087B8DAB677BC1AE4BBD043BA99CF39FDA56C85
6E0F10F36686E31B66D8C1D7E8DAA6804AAE5DE138E8A314CA3213C77907FC34
4161A50B22D67F4575D447A186400DD6CB474275A39B8219128B170DB77DFEFA
DB83DB6A8E6BC7E4B39FED998FFC3D6487C777AC252DB48967E972FF698762CF
8FA6C070280D10B1EE2AE166B7E7B5735DBC028B70E194489B1FD064E515CD8E
ABBCD4488E89DC244286E9DB31983877FBC16B4E5EC481D8E9EF87B4CAF33778
462E0B1CFF4690692DDBE68A92CAFAA72A6D86016778E69BB90B0D130A324459
72FA44213D14B428C2191CDA9BDFC1467C38F6BFDED1AE247D1A7C6DDC8AE2B2
453D3A76BC9FB7B24EF5BBE141B9719C08F07D0F8FFABC667D8B88F1F2D11F9B
C3EEA87071990B124308EDD184D1E2192CACA9A2EC0D35327B189944B95B3AFB
F0B364182F2956A7323FFA76B5C1D8AF0FC67637F6899A5E84079647FE42E42B
9AD5982358A4F1B8F2F454A090CDF59739889BCDD1D2299B2F8D5A75EB16275F
38D9C041C0B2FA7476501ED7E8E88FA2A67C8E21FAD781B97BB26C3DF76EEA9E
1F6C0E05569D59F0AE2EABB8FDA695A994080050BDABABC12A9A9EB514E0D481
E774495C376FE6622ECEB154CEB8EB9420FDF9ECCD02991C3147ADC484E8EEF4
1F2D8029CE459D0E16ED373BA3443387C2E44844C4909C14F1F958E4CE9AC3DE
2B05735AB009AADD70EAE6008EC67338E486C6931DCD2CB401FCAED75EA83E73
EE485278F779041C9DC9FF583ECC92CBD1BB8D4671711AF7065A15D10E48EFCE
CA7BE338105D81832E6862139CA041AA20DD358D505E72B6B9197A04FFB22A46
DD9BC5ECD2D7197E67E875A9EFEAD37A9D6F171C03E90F1186A7EC6476E034AF
4B2F5A103BEFFE5A89AF08163D303BA91EFA6F582058A1A772349CD0DD5A6672
32605BEB38346E3077810822C69EE98FCF9B0FDA17BBB1D8A58D44F36E9E39DC
4218BCF52F435BC147B221E802ED24616EC0353A0FE625CFC4A34BC1914C58E6
67593DD144505F337682E9E6D28645FE882EF956AF8B2704DCCA8A00C5DA0A2F
358CB515166D4E9B5F6E9BF7359E70022852C70B019BACC33C364C57B541EEDB
D58192DE07065B86D2569FAD76676408D256A15A5F75E348B23ABD46FC012C85
D8312030AC47671AE8DCC523B49F0509892DB13CF1F66B25006092EF63612A71
AA65EDA5396A41AC406125BA6082ABBD3B7D3D3849531D0B61A78FD0AA9593B3
C4CE5BDE7A2C9A124900DD8F1732791A32ED4820F9318785646B5CED0623606D
46F4B4E8EEF169B785AB3E5A81AC8D11DA20E5809F5CAF0198AEBC4864B6D827
91194C47FA93AE32368AB9B27DB00016C4315763615A9D3D7ADCF9C54A4BFAB4
80946B0FEBF1773204EB0AB81DE2B4B69143BD661290D12021A8E473BA722906
C1649239FE38852E54EA412B82982DDD95A5955C5F5FDB21F23D005D2D079823
5777C4DF1BEA9335B67DAC3E8A89F0904B2B9DA3BE5F70E9C2EC844F9EFE1E76
0903FBCDC5F128DE46B5A4EEA61949A873779B1EC4B75707438C76848C07A524
1121B9AA216185D4EFB2E11A6248C2DAD326C84771AFDCE72C9225DF20262CDE
216854A267997C5328125068092DCDAC7C0088115DD2B41012BC3B85215F11CB
32712F27E0DA6D886B6ABA60D9CA228D1D7016EC01FFD0251EAA31574085168C
7B1D4B7D799C7B399E00076D38EB1AEACF07FAC9720B398C50E4843B485C92F7
16347659D462E9FE2359058EBF5CD53A6FF6D83D2DEEF479CEE6039B3A174843
5D81F007300165BB5A0EC5D4DB5B10DC4F1B720778974F7916CCE5E7925EA64F
F66BDB45520D925068A13172C31064177821096329B3C09E46B3305A3AEBE2C2
AE3872B19C67E028E36BC5BAA44BB4F42B537DE4174FD68DA8D6B42AAC6C7232
97FBE313E2AA15FE97E0A53FDE4C148E1A561DB7027B8A26C4FF15B316C1F8E3
2898D9BF381523788FEE5A9C541D582EF1D0446409F5FF8170D587E14F21F219
E80CC35001DBA4B97699A6789B67223BD544817A1BF336130B3DCE63A837F879
54D3CF049F284B0EEC12BF3C67C06E8A5C5514EAD6F95FFBB1ABC4B479AF1933
FA64384D75CD2FE149A71C704046365E713B0C80E4302DB3EDE6A96486E6277D
6C7E8EBAA6B7366CA7884753D579F0C1983CD89E35B3B1E5D24D46A3421492E8
8E3A9E51A3CF9E2912A94B68A6588AEEDA4C0DEDC3F920483BF5C259F1077761
401EEDFCC3686724B47413EAAB39438EC5CBA2591FC9F09048B2D08ABDFDB4FE
23B2125079B63675822E91DF90E56D56317778359B29E661AE2C2DD1364A5AE5
EA1C6798B483F986ED2BAA93AFA0F806A2A335EB700D2534D5ED66E96E01E451
402AB278A8099E2C372994ACAD9C980FC6F26BBC4B98AA0F9624D8678DD82575
7DB0E684B3B6C374B0615F4E274A69159AE7D5CC36BBD8D8A22E4C49A366DE4C
CB332EAB20A47BA58EA8B5C233937CC31688C203C69145F8F20DBE256AECFE72
230EB608160740F68F4364E12D55C4EF5739C880241507097B964907E2062837
9DAFADC673AC6C453C8A6DE87D4FE46F5D2909A31F3590DD5734F02B7788DF25
56CAB0944EE84F56312AB972BCE33B3F56886661D57E4A7881C5938E94863444
09B92FCCC2F4E1D135498CDC331751FFDDCE42D79CC7E67FE1DCE4CC858A26F6
E927A473A2DA922BDBEAA783FEC9E678862176E49A62756A9F2DFDF2BD6DFF14
11692A72FE9A86BB74EB11E606954B3A36E32E7D4C8766EB4F2B7245E26596CF
31A30BD6C429490F0CC591217AAB40D20E731A6CF4F33A128481FFD5458C1DDB
C41DD11C2948C9C38B055EA3C6C07D381709FFFBBCCD0272675B357BB68E76A3
0DFB7CF20E8E40BC89B428C02ED3E702633CC3E231878836B54E63C4D64E9994
26B1017AD6E5C282FADE74E2FA101F227471ED00B9EF4D60E34035876EAAA34E
AA0A62AB09CA2A0C0846390BF0A84DC6C775634620B31C20F135C96B5A2B0C7C
18BFFCFC40D0B68E4CD135F96CC59DA7959D63924AC2337BEB55ADB1106E0FF4
863C43F7B4CC4D988C7A87E38C98B0DF87DF883F9E1CF9647DE74B3C0037B54C
9BEDC7FC045ACEA7A526EB2CE4CE5B71D45DDDF32B191C8F65EABE0D6CD021B2
DD858B69A2BFEA8565830324C0C1B692E1AD59AD6DD2FD1517B65335F0DDDD9E
AC5725C121824521380740B7A41D44DF204501C2FA682F9B081DD1298E9D27CD
8103E590D8E591BDF4B842A27AADA0208E7B262024E28822E7347A99EABC55D3
E78A9CB5BDFFAE7EC801AABE09A13A36895E69B81DFFB71A8598FC3ED02114FE
DA0CDDE5F322582ABD238B8277C7AEA40C10AE725B3311F77BA8B915C4D0D47E
08BF58D5B6C9A70EAFEAAB77D1A4CF6EA44D7997D57CD80AEF65B614442B0A13
A261F15E7E433C01E790BA8D1B6937D039D9D9097247C635D0556690B3A79692
EDB1CC604E14A5B06CA5F6DACAF1CE55BF344CF28D4940F93FA5B9E540389080
72C47C3B4A2404A102FEBB173400073C25E8A8748EB7607B9877A4729FC7697E
EFE344F7665D584B2189B469CE5593207C521F9CD08ADE0BC6985291661DCB97
EA0C66A69497113958A7DD2A69D1C3EB0FD639F3C7ADA4431436009135FFC380
700782F7B3423A172FBDEDDF24702BE0D79C81597D49BF022A2D851A47A2D77D
9A551015629711BE7B3BC62F7F0C2F956BA1A8B0E9F4C4E03A260F2E92C7807C
74EFED2B132A2915E0454B7C4B9E5B5A1D97174C8AE0AB3479AA86E7B85E964A
EDAA2CE4F223E25DC96F1629DCA838AFF2FFB98FF297EEE059C72EA970AAA654
68D3201DACEA1B9C88F4A34F78D41A23A5E63F6C2C9DB63143FC8791B3B84B91
D508A878D24C341CCB4F65E321724415941A810C67E57D4FC715CCB51CB65FEA
DE62B4252E780B4BF35199133EC014E6F3D1E6E16C4ADB0A965AA7222A376CCF
5AEDB3844FA63C69BF1E47792AA969606E30706E8D749AE83D53E5FC6DE212FC
DE1418D084A0CA87344CAFE8C35F7A752C768E82ADBD7C03740AFF9648672EB7
37CDC781C9EF7F0518270438938D8EA24ABB95B697B6B05D85DADD11B59C6817
1C0C1FC36A67C7DCE712646297F9DBBBE5E51DD112DA5FDF21E5146709D05B9D
7A41CB46536E564C0E1B94033EB829FF65F8EFED2F5E4EE9CBC27EBB769BAB1C
9AC1916036507D6D5706237E6225BA82A0966EE14C3A109B06D16AD87C15B5B5
0A62F1BD31C30EEE3D1E814DE3B944B6D8C5498863204F994461E296F0005710
4035AF0B9213785DED2B4DE8BEAF87247A939868B78DF1134BB0502FB98B13A1
497862AF02948597F8E7D36F25E6CCF2C1077CF67F63D27A973743521EA5B0C4
1133C69AD75946DBFCC4354EBD365ABE9799BD387E88D69A8A594FC91EFC8641
9D069210D6F13A9482B847036B5EB3D9B88DB3B30E2BC61FB7D5DF29EED0A036
C3320F3F5A264802133C0C66643AF7538DA6A84A6CFC1F3AACC69A7983D379D1
C9559346174568576D7589F40E474369D20357FD2332F205D4E5649756644481
2DC01679D8FCC6BFFC528CCA877F264F9CD0A9842A9410A0895DF75E1A80ED76
32008080C78C427E8E051B99E95D205AD9D2706D783C493794BF12502E04FC52
064E63D005F2034E553A8C1156E9E9885514E2A5093882805A678B1DE0EEA1FA
F3A6713E67E7C08467C617E31DFA524A30DB697E8201E71D7EBF3D9A4DEFC8E6
7F6FC526DDEA73EB9B18FA2CD09F038D0ED98EF867646E3844ED0AFCAF621675
ED5ABFD726AEF8C7E481B772A9E7AD7684F4ED86640AC6E226DA4338FB27A18C
3E1F59CD606322500181269074CAA82F74B03FB31AB682BD691D38C22CAA7DC3
18330EBF669D367C6FF13C336537B67F235795800CA8EF1A653C4987D800FF24
03F3A9C6A02B03E13DB99D69CFA566F386227B12FAA9D620113A18D118B97965
0E646A0219129949AD45C84F6C4592EDE71F7E434238E2CB119069CA09D8B386
AE9C4F392FA8A590BB59A0C9F513CAE64EA4B02AE905C518E634F6763DEEF59F
ADE7248B21180239B9FC65C7C268C6BB20D3A2886AE01B50DFC0AE151D5F67AD
8067FCB8983195B32340743538B6AB7061264F0FA07043CA6D3EBA8F2B7F1DA9
493FFD8AC3BB117F390F7B7A942C0225EC4F5BDFEF797E7136840ECEE1FE0527
6CD54DDFED807E3E46CCAC1B89944F2D8970AEE5BCA9D64E901EAB91A00A621D
BCBB84ED8420D9A8353F2A4E5099310672F0F25775E97C8090F28E4F55FF9976
F745B9226304EBBC7A88B5509F31240DB756E69E0A9D04B525C6F2A7B820D5CD
78EF0EB6B431763DE308CE560CDD1680E824AD7F28D15FFF0501EADF4086D0F5
0466836E18DE22620990695F9AE998462D6A4AF1D7EDA91093BB09E4575EFBC3
F9FB951EC652BEF160818E27908BEE3171BD2CFAB1FC575C176F1E3A573FAFE0
5E68E29D767401A748D02D251FCCFAE98AB32B7F20CE3E3275CF24D3CA2C1FE3
34205F772E90E86F134DA6C0E3D88E8486418F58D51563E11EFCBD3151A4F8E7
831AC3B7FFD7D9F18A6BB60711B844DBEE7918EA727DE4A08DE4BAB4DC996510
F6E87E3B4D75685B2E9BCC9EF5096B47E1CEC03E6BEA635B0822CA65809E6C89
352E343F633C84B485B8512504DD803698BF9A29FC7082F67A2D8337E84C2F60
8AF497E7F55E5A60AA2F1F69F1DAFC367FB9544E1EF6197AD0A968728583360F
766EC9371535BB2068CF81A31FA9CB3C0EF588E027AF6777C1F13EB8BEEADA42
A1EB221CAC3DCCD5D84A6B348BDC8F75DF47CCF6216626AAAFA4DFC47FF9D123
C5F74540D7595927081BC5306B484C145548578B6767F83BDD69B044F798A948
706CD08F89EF09DBC7FAA7D89755C4A100304A8895F1B972877F303A7BB6F390
EECC89A2FFF44DC55428B7AFC38E54693EACFD6726CECB2A7F7AF3F1756FA927
9363190DC57F6E76D88B7756FA99164500A4FF96C938775DDAFF6F38DA8F9700
BDA3E95032E362E2C41D66B0539BA350B2560069D92BB2D6E1D129A456F67761
54E4CD8CA1D73D08A13D9EF03BA128D26D2BAA369B074819E2234E70DB1EBFFE
54483F5AE9D45966B940319ABA106798FDE9A87FEAD82E3348E3B6C930F03724
2EA8FCBFA2BEAD5B882DF746F9505BB13D08E34AE233023A69E0201F76990906
FB840B9089E9CABA03C1588D7FBD2408ED643AA62C8B50245F8EEDDF4DDD5D0F
BB4C7D4AC59BAA1E98793F61FACD0B518112D24657892E8E64C7CD2C5976640D
4AB94E621A138F7E6F8AACBC7A96D2EB8F33C0A3DE629B57953C802EB073719A
DA7DD31776F0199A192B5B00DAB7F7EE9DB5D5F94F4D4614A4A5DF9DDA78F227
14FB9DE80D3833DEEC7848D7C0B821DE0A63C5012428ECD18DDA85972F4E242A
8EA28C66CB3790723EA35316D89A1867521D08E5D925BDE25B4775038A99BF3D
C23A4B01E873EA0B753E006175B3424085CC188522D0C531293155E8A672986A
092C0835F32AC83B6EDAA5B66DF0C8B309694819EA9FDC48E5D94B73EEC62B03
337F0CA34519789471F196ACB68A3EE3C21D3400C0C48D8D0731F2AA52DCEFD6
BD8684F12A1385F346993E82E31251BD2CF1D40A543289867B9FA9D86ADB121D
75399635EFC8F9D2154496E5F3E03A522AB2FC15A745A76F0A3ED01796438B88
1CEC63901513D317665645A9F6F964C0FBC114419BDDD8E0874E94EA4F222F7D
3D1B877624D02C9500FC55993875C377D3C5C7267BEFE151C52A60427176D702
F3056F5E76DD0CDADEFC54FDED78A9446ADACB1F10AE19DDFAB92717094ECB69
3C6A287E40B44F6435D089AE6F4444216D4AC5F199ED0192910E15539B07CFA8
8C80D1FCDE8C59C40DF4DEEF6335403E66A78247FEA65494093F9506756C6A18
2736278562ECF974A3ECDD2A5F3592EC3988056A2669944F08EAAF73FBB05A01
237B2DA1BFD579721DEE39B32EA6076937AB4E5F15B78BC249D2BAB2839181B2
9BDA8B9B5B38E548162584D2EE4508EC7EFC0B62CE493CE47AEF92E526DDBCCA
E6410AD33B1E67AF4ED0D74FC6B5E80C2FBFC8F75ECB495B1941E759A7CA7866
3B0059ACC41C860B70833B929ED919746BD3E19CE63322E96E94E382DF9196B7
BEEFB7B46CFB6E0158AC6DA25F65290AC33486105C87F6E744B1F47BA590ACD3
7C26451EC51FCF39F8156079D51FF4F4448B2A20160CF3D1B745ED98CBAF9205
7BC238246CA61F980F96B20047C27BCC7AE4EED9C98A5C5AB82F9A750AFC75BA
B14B817CE2AD91E5FB8C735C681B612F0F44D95546DB11FA32359BBBA7F8046B
52CB4BE2C7A4136911B6990EAF782A3DD97E9D16F29E0CA06C833D6B8F37553F
CA12C439EE25027671C72D4CE1486F91642013E3BC62F9B09F3A5F16D3FC28E6
456A22B1CCBCF1FEE50A207840D6DD0F833BB432710CA44BD9587ABEA3DB9951
EE94DC5F5AB1A611F5A5896369D59A6B8297CC9EFE00FCB9EFCA2D26256818C2
27F4098ED71484E84C012FD6CC57A37DD72D5A0030E771ECFB467841EDF6F53A
943B0997BE3AE95EEFC681423AECEE97ABE431A8D1B05BCBE69CF10EB696F21E
3B8AAF325E7F5EE733F3C2D65261C9D49C04819363FF2374B09E123754F77525
07DE77C8B35CA1A3F7D176D8C5D54712304723A557C4C0F1191116F1C8B82758
E419C39F709F66FE8B0BADA48B50E47EC0AED73FA6DCC881D4703108EE08CA3E
40FF22E495081BD037D90CA05D54EF6266D0FA445DDE7EC6D0EBE8AA3670BBA7
C69430EF18E799E7738CF1EA97451514E205417A4497E182F151909283C0EFFE
3088817BB131747AF0FBAEF0AD78E8DB2014A617D910FEFD425A427ED289F754
D9FE17F2EF406C679AB2545FDE7703EAC3383DC100E071A2775BC54B78E23B62
E3A2AE32BC724EC6D503D66BA5ABAD8BDF3E922245BAA2CF9289D68DEF6706FF
9AA704C44B538EEFBA6788A85A9A6F9957642C677B94DFBF7EF3526C66DCEE49
52A6ABDFAB54788F786ED03DBBBD178F29EA26BC23A46914E13ABBD241984CF6
E0EB6C1020B7C6D8EC60A3B5480C9045F9998AA0FF1D6E807959E423358E1925
32476CD8EA1F5AF507CB853A32E8C53100526D14762A1CB6478A4891191970C0
F0E81DBEF096D92751CB83D8B7162B0D094C496CBFCDB3349C8583C393F8FDF3
2AB606E96406B1D826498AD8C1A7E08BAA09DF0B1C0F88CF918B11C0F7401997
BDF13C716981D3287C7289956F4B52856ECDA5B1BEA21B3B623BBF6C652E969A
DF6CDE36D6788816350FED48DDC2782659F1F50E85A8AC196F341FA3A47B53F8
97D3B64D079A3BA8A991284F36B0270A75158F13A9D2E305965AA02B8A67AEB0
4D915DADC1B84A575001660613071727F3BA34DD98CFE4972844FBA682838A1A
25CC981E526F1D803C93B2A2A07D4200535F51BAF62AA424073F982C9EC093D7
F96770C73499AC0AFC393144DC6268E2EB3DD88426FB226AE80C296714777CD8
ACDCEA99E2F07CC7CEAB595843680BD0940F1800ED17B861FA70EE5EA4A87E58
9123BFEBF9503BE4B01553268152DC3FCC856FE7D20B081263E8C8FA6829EE2D
C1118746EEA199A8723A18629DC6566BBC3CEDEA4B58FBBC6384935A2B2DC2E3
EC562E5F9BB90E426EB851705669112680B52E27F5D73A3A8022D705471568E9
5FDE6C8C6BA0904815647968ED4CF408AD2EAB027B77952A40A24492FCE443F0
13408AD290A34B2C9CC0F6E3881AEB9427D41672649FFA80AF584E040F89694E
8ED8652E67291FC29FDF36F4CA9447F773555D13EDA8A66CBD1741D7D901F032
669CD619D75B136C1ACE2F6860194B2F17CCC2739DF94265B01A26E44E7E264E
1D33E1502768563474285F316627D5CEBB31035A9E3E8BB383E71B844AAED444
8438D6157BC58F4469DC84B9CC6157BCB7A92B2BE3AF10DAFFFF013A09A11232
BB05764C514F783B1CAC58B04CDE038E5730D1EE3D88940F645CC893A8ABF5E1
A2260C9BE2E316B7F259D4D3D6D1F0B06737D3F368BFF332A75351CBFA99AFFE
71134457105F3B8D3B7E33F4A6CAA538FCFBC85F9A53572AD9D9D1A64FF25413
026431BC892DBFF4CA776BE19728358229BBD2A420CC2DF232C2F7C1931EFA25
3FC082B0DF92B1175F139CCD692C12AFF1570139D6D1B8E53AD1E9C1EA0ABCF2
4344E001BFC89B8DE137CDF2B36E3BF55D7AD79B973336C459BDE519AD03E692
7907161F6E8D61C3458BD2DEBCE9DCC9B566E6F5710FBA343D16CB4D4EE13666
736CA653CE57E87281CFFD52BA729213B81982F135BD8E491D8F710C5F31260C
5AD761E6DF3CF8BEED149E2D19C21EF5F5DD745F323D016D893B5198863B98A6
F8E302F4CD994EC08C00AC6A66C51254F71287AF235C64C813191764C9BA8B47
371D202C7DBEE60611E5647C2C1AF8F72103F1A7415F526A2CF3C16B800781B6
6881142096A7719209AD3226D3C07F56A4A43758911C6B9124A8719A0B094E42
D3CBC480EE553F8D12679BA4A46A3E632901AE636E9402AFA574ECFC7ABAAB13
A4BA8D3E65D7471AD16F9AEA07C2B3D39C45726F023EA1D56605670BC7B94A33
650BA6D2C2D5C7681ABEC649A917BB481771BE404BA26E352CBFB7BB0E515B5F
9228C93DDAFF2D1EA8054E2C37E7698CA6603BC053C1892EEE4F45EAD90CBFCC
FBEDFC4E919967F2579E015316A5C9E6931FF02AA967B12AAFAF747C6DA01FF8
F441690E196B19402154F4AD4A152250167989757BF11E0C4E8875110E2FA63B
47CD66DC8264D609EBA683342B306C3691BF4510C724AB326DD8B68B4F7D9E32
B069607E2DF3CBEF32A8490B9FA9CDD72ACD2F6431A7612CA3111694728D25A6
65667628C2257AA4DF95300B47BD67CC8C0C1792CEF900D2AB0171C4832ADC48
673FF78F09714D92031E4865A51F6C6C0483E533281F345AB8A92B63CB22F736
A2E177BEF631C94EF3E7B09F022DB132149330F3DD0498D5CCCBDCC8DB585D05
EDE10CE27A2FD4E789818F8474AC309F07010EB0E6EEFF2407BDB5DE5A378F10
A4C2EA0A0F85AA86BA81D264BF6131F701C9014CF2CCC3DDDBF18CAA66642298
1EA3F1B5E500B9CF8F2F189EF5DBB6D8DFB1C4556347E4AD3DD69438DEF22BC5
44FDD4A65861C14EF64996DA77A1826590288397894AE2A7085A83B52549546E
D0A4774AC2E87DD835CD75D5DC991110A3E12D641EF4DF39B1B26B053ACB629A
504D494B6DB09B9AF7699D923086DD9F4FA1AFBE74FA415199E01A4C7B87E4F5
D4EC84E9D21FC68D0D1358CF460283F97B956C132DB5322FC30E5BF06D0F86AD
77BEF5ED95F5ABAE00B92DB57060C9808443938EE6A1F9AE0881D4636823F2B1
23AC7CA1B591BFAA746BDAEEF447E9ED24AC4B506361701D99AA82119E8EEFA2
55C802BFC18B1D5BC0A9F9A1E005C0B371C68F5DA0B1DAE9A7A811F242F04C1A
7A93E692F5644C796AB1268738E72FE01AF12F277906E880BD939FF0D03AC1AD
45D28C639F1DACD2549A8AE864481D4F76BB941B1832E3FDBFA0927FE34E92D9
90338D4C681FB007359D8626B1224B97E08719EAC031F428780A0ADC31553E54
C59811572C11A8C73C20B8BB9781AF72419F4B45BB03148726194B8385124758
A2CCBA6604E8F72BF2316D92718478B7FB6321A5D3A5906E2108DF5E38FCD9C5
5FF41472406EFFCCE2E3AE152D3552B881E82055EF9B1B335ABE3B0B7DF717E6
E7FFF7B1BFE2E98D872573C86536F65E62028907C3D70161F0724055E78899DD
F3BCC34D14196F530AB07933495A954F676F7DFA49F81BA6B221FAB4F88AD9B6
1202F272844DF92CC28D8FAD80AD511F464AD4BEA8513836B221D2B19CA0C3B7
796C82DDAD8D440508BC84BECD215E6142BF5B9F238A9221890852CC605AFA99
2D51CE3CDE9E65F11BDBF496BD4066CB69B5602B0B37EEE3486D38BDEF3AD8BE
DDD43FB8E4CB6DD2FDFF0966F0AC0BDDAA98F66B8D3BB8E6FD0781F42A504E56
A4ED8BAF6E29CAFBDBF11307E00CAEBA2E643BDD07F61D79F78746C5238C5504
416B1E218EFAA1CBC2DA26BCF2A5DF594688D1714610671D3927F0B349BA0106
9A1C345B4B82287AF5F0CC81333957BF5CA165BC8048C20DCB99FD2BAE685387
7991059EA43661E4C211161F1E96FAF30510796F922E69F5EA83BF80A1185B74
E8F1633C58C6C2770DC561F2703F8A109E6B4AE409B098D1AB782C8AA31DB9E1
DB1E435130296CEE19AE1DE03775F75823778CC45324BAC7931362060D4E175E
24EB2F1D5D9870FACD8212F36216B4E47B0F8FDDB7EF4FAD26CC02C214E7D6F7
E62C13B7F3251D3A910DF8505ACECBB6F919ACEC8D5987FFE37899D4D3327F08
F492656C7650C071B1FB57CB36234BEA19E44B9DFE0DEE815B76EE3E932A702D
09248172CC282DA09F7880F8A51B77F4804B3E1CE5A9DB30AE206F94F302F903
C70BB29D852EFCF3751A5D80A8849721E337E33905FDCF258072F733DA1A1F0D
566FBF4E4248F3B13FB58100DECA7B375CB5CFC088D8246F4873485F30BAB04A
03C9C18A3317A5BAC5A91122F932E1DEBA4603B10AF174ED81CE62A0F4C860EF
57F9251F416761C44FB6FB1AED472D6022A104C77C47DF84CF1E155EB629E76B
67827CB6415492127127AC959F11255151D5EBB6B84F3EBEBEBC0525A583A918
D339C1DFB90CED5EB0FC05B94A228D1385295A2D7EC427E6C56FEB77781CB661
0E2A862A8FF1CF434ACAFE2CD3A2F2ACFC58B89215082CC252E5A115243FD749
FA8CD5B651B72955574CA96C76CCF23085F7ED4D85897E1BD84820F7BAFF42A3
9CD659F3596B941EEE41F2B7A300F9966CDC68C91A336D0A414DFB7C45F95B60
47EEA394E50269FB7EE6D6FAA81897DB45AD4EA68C83BDC1A51915D3126F5C00
862A548DE99D8304BBE985CB6DC92F990CDA4AEA0D5E6C596E8FCA11443552C4
912617C174C738B45124AEACE067104A948A8A4D6FA56E8D15D6EF75E5FFCC10
C18C1BF07FCE3AB280E34840BA5CB917B565005511EF757E0A7E4D8C645CF829
DDCC885BE1AB40936F02276A4FB94988A1CA0CA8105E89909D76D034CDFCBE5C
493F0DF9044517835C5A18B6EDACA49FE842BD6A3451191055025C731C764200
BAC03D1AA472AD0AC837DBEBFBC4FF52507C34739FC6E798467FB71DAC5EFC51
E40090213BFF2DB659ADD1E9993E2508AD48902A8F8460D1B15ACB8BF11769DA
BF2A0A1C3058ABF1106799A4852CE89A2FA7CAE9AC02990882F3E81B9090CF23
C3C04C479EEF9C03F89E026963830B08E9BED0FDF83ED8B4C7D5FC6630CBFAF0
BBB88A5D0EB528D09D059CDF5A9453D1E914FF9ADD9B3C8745E15C012902696A
FD064C1CCB173126E3FDCF7D711DAC380E4F048050E3FB3B7A8362D2DBAB0E92
E04D408557841A846A1C0EBFAFD245F727F0334BB921CAC1B40E52D2DA4C776B
B4C86FA06019F70E84A37A7B2C720348F83ACEFFA78929F4CFB5CF6F6D5AB17F
F86FEB25C1ACB3949CB980737300FD581DB025285C780EAEEB987C5335782052
A209C266ED5FEDA7D91A4CBA9563F02BA4C1F8B3B06D2483D6FC1C15B283E295
9F3E1394F6212E9CD5D1200A4C1E86F6EF3C63A26C4BF383C94DB6272EE22FA8
FBA3F58D70447C15B671D342FB4551E47E0FCE419E22848167319FD9F7A5E8A9
C1D5460FE747D637C095D3A56B3D30FD84BBD83005D8EBA6244D7FB96F3E09EB
156246842615114702C42C30D07D729FD4F2FCC3A6B97E1F5FFCC24D2BE10579
91478CD587D08576EF5B4A94B001F198E4F794E079048596734F0904DF528053
1C93F0F9BDFE6182A8BC94C08DD5DBFF32556ACDB60C6F6DF6CD99E6C05085E2
1B5C084E19F5F28704CCA9BC6F5B8E11C7467A476DB20FD6F05AAA14D6595277
4531A01D08AF8F62837A9F706EA336F89880CE4C5B805C3C54F112F7AA206AB9
B034749A686303DAAB3AF5242B00CC6DC278C3052EA2BFE052B94E9373369E8E
B1D88626FB881271C516F4012AA5A54EFF73A2FF2F57FE5DDAEF20A8021DD3C2
93274ED2C5CAD0C162EBF98632D63BC149D98E9E42015EDF22C12D9BC0CEBF5B
09B91DDA2DC1E859C52863EDCCE05FB023A6E44AECE6878D95ED6EFF3A9071B7
81A0CF42790A55BFE40BE2D8E15C481356E4919B3B178ED212F0ED10593EECBC
997193BEC484CE774E1519B911DB91692758999BD187335BA5E9838B2BFCB934
F661C86361A2BB48FCEBB27EA93683D6D8545E45B4D0FB71C101B8228F8A1BC8
386DCB32F24B4E513D791E8B858D4805C5B9CB8D7554C988C0146E29A3F34F31
7554CB96E43D4BB95CF70387C6270755A3BE7042F6E114D4F549135B483BC815
5E7DAD9D85DD27CC7D9729CA797FCC95047A69D9A3FBAE9FFF93696892D33569
59DB61E26BABF1C35F6938DD79049927CFA9BCA1F6164C53B76607AE9051B56A
295964903BF471B2D638EFEC915577D768799AA96BFD919D83DF85BA4F331137
6551C54BE2B30AA9AD9A846E4C6F1E72B9DC4AB0B525BBBB4FAEDFCC54DF9E2B
768FD8108F6013F7A3948232BE5AD2A733DB9E1BCF08D885343D6DEF53574FC7
0B3CD1D2048FE03A2EEE177F4799C3807A01337FA4930380D3116B710D39370C
66122010B4F21E722AB8037CC55D8AACB5E7149F8FC3526705D3BA1CD115B700
DDCE8BF6642AE971DB809A152552F2DF957BF35D580E8F3BA9BC94F131ED0110
C946D421B42790E5E90E2FF796770CE972003A325ECADEF2397B2A678DCC6C18
95D9DC822A966A7E2D95B3E1DBA2AE7E974C5A29C373261FC72D8949A99CAA88
00B6FB0EC0FF339F0BBAE4783CED0DBDEABBBDB8D65E26AF2253A40B40370642
34AF0D450F577D9ABAAC33218BCA18B0B8D728F5EB7AB0D7C7210B02524B2159
846E805477C60F2A8D3C80999E98D913AB360ACA1F2B0891085C832DD6168B66
730146AA18778921197D4069DAA10D9AC7B96C817AD352B5C4397872ED1E0BA1
46D265B61AB7EA4EABB4E952B6F2A20051ADCAA1A9D024EEB6134FD6F15A5A9A
CD38589F75C1C940C065083819B0C75E7052CC504F68D10A2CD9E15A2FDB5D2E
BB779B33B8F8F8D5CC79DEC61DEA41D406A92BC9B8385E810876FA16D597879F
762BF7CE394D18DC76D206301CEED684AD461AD0D85D554182DCAF99902D2D66
F92DA1DEE4610C0904CD9019197ED8ACFA6F3D493DCE5F821C23077892630923
CD601E96E722DB1BE432987A61FC0B8CBC2154C076B263342E8A6977987E6EFB
3DD2AF1E6D3F6DFF75EAFB346A9DF4B7B0F08001E67965A4560AED18BBB80969
CBDBBB151D689D6E53432F7D4B7B7112BFDD18FCBE092A8B31395D9C7991FB31
0C65922E86F99352A4778D745ABC6D79FEC5A3BE33A9A0285EF5BAE463184117
BDCDE0AB54DA1A6F332BBBD2160632D7AC1BC024828AAA73921F5EB3B83956FB
260336C6B479E3BEAA929D5823D4D5C43B0E86B3A7C19520B344C548BB40F66A
20A7A28FD0AEDDF8F56DDDA705388227EB31144E2AC7B506403215A33E829F9B
415FFA1920714E0C8692F37CF1D7E3DEFD43B2B428FE0EFB8F63D88DA381B78C
531EB3A8617F33EB313E70DFFFE001887AD5B36C3AD33E1B31F0B743AB3B150B
A97C84F00C935182CCBA4BBE7E3CDB29D8E0BBC36301F0BAAE257E1828666471
E5408C44554E7437B0CC8968652EDD710B648CC745C2073E440844B3071B8D83
CBE6D296099A880A85A43B9321331BF8B68B68C130B429B1AA2136415FDE7863
4A49E9A0B90629040B2BB97622C5C5D8B3E64238578C1C39BC40C99E38E0ECB7
3664581B5D562D2E63A88DD74CF6B948FC70E10BBC2C76B0AD8C86915E218C0E
CFC7C597755B7DE0751CEB8AC65DF6188D622CFED081D8C2F3EF98F885D233DE
4656E4CCC1AC1A5762BE48F5FA88A63B8D13EFAEF12DDF571ABDB6295AFC0E29
09211E814B5D2D12D719D38E452C6038C70A372CA658D6D67AED8C1613532C64
A6F6DF70985F86D674A24D8765F6AE4E1FB56E621DA82801FC5B137FFA1FF15E
E53DE97B6341ADD0C9940A5254D2E380A2957A352FC808C54FE793012DAA276F
6A5EA2F0320C361E061DAF254B3AEF3ABB186CEE60A75A8C17EE6E339E5C3279
B78C4BF98B23BA5E89159DFDEDB2321F0A36B1B1C0E935AC84696C5AC192C623
BF42EB1662963564B1A7B40E5DF8F48C433C5CA5E060679E84979B100B84152C
F6E0E17EBA2352DE294B8539C6E057FEDAF53561D04A85898C0BE02B519493C9
EA955BEB9DCC214E61E8D1E091AEEF1864ADC733AE203B395C47AAD5F49FF530
E9B2BD87EBB101E1FB697AD8FF219D251686696A7A3DC4DBE0138393426D1B91
093F9854481230A8942C6B0834FB86AD04CBD02303654E4D18ADB200B9245368
3899ECE7EC3DDFF5B0B8CCBF3D9CFA592906645116C02BA07760B6EB83C36829
DECE216E9846EE668AA3D7DA417C906CBA807993A9162700BC9A154712BFFCA2
44816CB6ECBE72B39A04D306436AE494478F2FC6CF9935D1EAFD4894A600072A
CC70C91B876A48122B7EA72AA2C2EA54482A16933EA760142ABF564B950CAB68
BCBE2C4F28F49F023763109ABA63C19FE1260212346645BE24D02AFF56B18D6E
2E1503E9DBC77A09C16CBF911105DDAB231758BD41BEE389B057A1F7D25210E4
37A8FDDAB24D8508BF31062B17EF20E492C02A138DF325DB20C9F233D885BD42
C04DC9300D4CFA004F89A3E4B8C62E64A0059FD24E9E54D410482DA1202736A2
0973637DD7BAD6C8CF1D70B9CA4381DA2CCE50261937EB0044D74E23D93A69FB
240C1D824CCCD268420F8B91D9B52B4B773C65E04C561233C3E564462D91CEC9
5ECFCC887ACE9E46C2FBE261BAE36338A7B5DB568AEA4891E6ADF40B927F3F8D
BF9D45D7A3FF6A4CD12AC044F4F370698E8EEE87536259091058D639390BC3C9
2416107B1E59084B5E40545774372A39F5BE217A815AE85C56C97C347BE7F0A8
4F7C492D7A8703A70517C9FE8607702A407E4481C1FE897E8725E809703CE80B
E7AF4E13911272789134502A046C41B5B2AD6BE04FA169800228BAE3E6D4040A
1986B3D8C4C44741A535D965E48F0F4AD114076E79FD9D1BEF659682F45187EA
AD570494103D598F013EA14118D8E5693B2E8739D9BD57A4D67E09514EB3A1D2
DCF49365385B1E6A133B6C9AC1E9461009C0A078862017B2A1F273D9DA98CD07
113C4269F06F393AB1B9A792961906D8EA963A7A7BBCCB0FC874E908FA01CD86
DB9A103623F61113CFF149F643EC607E69394CA5141B1DD5E631CB4A20075919
55B78C0CD5DECDD2FAF1925C3BE1C67CDB43F6C157C20901F88098B1C8717533
1A8FB62F312B721983A310B15DA4EA154E2A1ADE60DA0AA5FD94C653AC8C54E3
FA951B817B69BEDF51BE484A6FA1B22079BB33F5A479D18E171F04F6E164C2CA
9F56BC5D4E3E633D6F3BF791B896AB101C8EBFE4A0E12ECC40657518624A192A
F9CE32D937E623426B8ACF22C7119C02EAAB57EF888607656120EBA94E5F4346
DBC130E2D4F590AD34FB8C3B3250CD475558F5CC54AB3E7570F2D1E8F38E8740
59231160DFD4FAF72ED917AD905587E879497455F80FAF60D5E05063DE4A8272
04A0FAA8ABF2E15F63D0971F42EF56F134AB25DC0C54BCF32ED99A9C688D6628
BAB46E0B810E550C064FEA8E670BFF28E60F76A4510894000670ADC1403DC97B
D5AE7582DC9E68BEE94ED6B0F0658E742AD06CA4428C1F5C4C8FC12744123F29
46E71B116A7574F0235737F7399A5DFFF8421E51DE92528BE0352B7ED2F56691
3F9E882B910F7650D50BBA8FF7064FCEF54378961DE665ABEDA4D7E1D4778C36
F688BCEA64CA67C9E1FC785CE7F17C29766D53974BAEC57D519C152225024212
A017962DAE61C76BA319517FA7DF43505BCE5B357A338182A98F621287472F59
54FFC5850810B55BC2F52775753D2A58030DF5626219A849D53640C5E5321C8C
5E924E0976C820F2879E78E563A9A0DC6C75234514C649869F6CCD8766C63791
7667A5041DEFAD3E087C0957A2D7E0D8B7505C2C98DCEECBBF9359C98BA2B64A
D9EAAF0B8B5BEB3161DD1EC2E60DB34D049ECCB4C4F93277DA36967B6A3C1AB7
44BCC347F3A7117269F7015BE063C2D777139D34426F838F7493FFA2A96BE684
3D238B7DF916D800E46565B643EAEBE255048783E6CC85D64EFEFA51409FC470
F79C4C42DD1CE48A007382469C5A20154149819E2B3BB97476A97BBC765D5943
DED9084F0C85F003B5702447D1EF22B0E95C678123B4BDFF5B7982BC3BBFBB38
2C839872D3B6F4FC89AC2D82D3FF5BB22F4F9BB812FED2569BCE77642CE5C553
1C1083C3E350CBFE067F1E8560FD4D4EF4EE78F9F4D94038235A4FE93755C89B
01046C3E370CF89E6859F882C6728C76D972D523E8A164694AAA040E804B37F2
AF3A9D6368F86616E866A576A426BFABE398082B9EA463C2FB76BC88795F9D36
26521DAE899BEEE7663D0F10CFC93ECAF4C9B7376D89F756F8716BA589405892
9CC7B18EF7F7B2241B39F326137453BDD035A33114037DEF99A06F6CDE38AB47
A7B1B09DC8F7F43224EF86C6BAEAC5C1A691D19645DAC334501EA44E059B0024
A9454A638608AE3CA17E70D5A0BA04B0D29C57D5B0E7197A128C18D5980EDFE1
9D10033FCDB7C19CFA7AC24EF21BFEFFDC1D0FE872F1017ABE2D779709B3A073
D7673820FDEB51E8A4093C034075F592C1E287998D078384E3993C420847FDEC
B667D695CEFBA9EB98750EBE78236466166962ED20D61D18A404A92980CFB4CF
3D13A7D29C884DB895C76BD76B5B70D8307F0B7F5EDF3320CF165D8923687C01
22CAE85754998B049C7CBECE158F9B472078A64C03313F07E43D09599C1D7D2B
3E7242097C7F8ACB2CFCABE5D49648D858B508179B26E17EE69FD0DA59DC84AD
D4D3C8623D8ADB7BFCD249190CAECACF735990FA3977BE458BEF8AE26A582F13
1E736B9FF10C8CF64FF2799C5C2E186F5B8DA00ED4579DEC036CBBDAE45CCAE9
4DC6DBF98B932A74BC63FEB2156EC33ECFB6365E4EFDDE0F7BBB3FAE720AEF4F
D78733C003088D42899E50CF14C2871AC70A5CB44907874A1B286BD07ECC2B4E
5FC13F7808F038D2D4DB1862316F3EBF1106E3F4541A074A6C7255D6C18153BC
AC36E8CE04CF93F3D815B045C9B64F5B333B3186A3EC06CB5B3688D841125F02
80FB01FFC4048ABEFFFBCBEC6817CD828E6DB40B1B82D335EA5618F63AE20DB8
1DFE34AFB7F3FEDC7FE5FB788877A3104070C29C276660982881F879E3DDE46B
3CA5D12940E17E74D71682D23ABEC2E24FA89977E7CED8168CE85C9865126290
C289210DAE5C79083B1CE88F98FB2A66A330B97BFB4A6AA6CDE8B17AE6874110
ABD7D2FDC9C4F65F8C579607E1D298277FA99FBA99942BD8CCB61F38E1CE4247
7DCC7E1BF02B20A8813B6E3985AD9BD74BE43A6CB77FB3672C0FC7F5F964A4DB
7905615986442492E7A89D2DF0804DB24EC3652D0CFD85EBB87ED4850CAC5B5B
538E8AE91B0F3C4A5DD8B5907F37C895165FD319B68EFC5ECA6DD12F251752E5
67BD60FD2D25A3E11EF9BA85A52D0453C2E96B0461FFBB78E637F191B6AC3224
A31B51AFB9511EBD13E6A5D558CBD660F09DA02BF166A9C9FDFC114EAE177E1E
D046C58D64411A41FB44D0C45B9C2D52E0D0DF002F10E8C4D5407D6CDC670AE1
75B17404A95493EFF0AD4A64CABB008F255ADC53D6C1A91BB9ACB3C6151C49C0
7088AEF9809C077D5F5C793AD0A23E2E2797AEB39A37DFCDD16CB50ECE3892E3
34662CEE775E9EF54725BEC5C5F7C6805379FEC6ACB45B96566D8EF15619A425
7E9EA9F3989B4DA1C2336148BDEECB2D1B1FA5AD64017E55F0F400E535022C99
F0E1643DA1B45B2D78BDEAEBECC31DA7EE58ACFDC242C0854021B03C085EBB1B
CD3C63DF35E12968A18AC5925BA2BD7F7A352B19E1D3FA7F24924E4E8902E593
D4662B3A7E64ABAFDAB5F42BC7204A95516F0897673B93BBFE9E10F37FC6D46C
5D5B0E48FF6461914E1F0C6547DA84DDFB75ED1399512E1B8B700112D4628CC2
F19705435B803C7ED5A38E56777D08DB445C5D2D5CFD8435E18EE42B7F0C2CD7
BABCC608F6961B7686E5D59609CE70ED043202DEAF99FB08B59FD161ABB91C5B
7874A113035EBE97F26B0B587E87ED84AFBCBE01FF1BA16834752BC34BC449C5
7AE4C128B43A4F2459661222EBE767BCD2E34EA73462A07D8A8B9D7B904874A2
FBF2E0B9DAD3F79F9AA79A96ABDFA3D6A5FF981B9436689FB75397C9909161A3
B335FDB8BEB836E35C850EBBA5FC4D98554AB839480D756A2CF99CA0CE2B897C
7A9CE0513B859862808CF09DB8A92774DAF5DD8AE5E9FC69D8E52339EA44C189
FA18E46B2736E3DD0E8B17FB08B90C2C5D332E54C56E6DA975EB495416F13AB3
750757C7E6E3D5588166A40B4561CDBBAEFD2044CA9A82C42C2D5C7147659961
D1EB62006C7CD348686DBBF10688A679C6D882366D9D6E4FA7281BA1B9AC1B23
2B9834A62C77CFEF9A4CCDC2136A98CB60740F7147B817C918027EC7699903DF
13586A66B85CB1C4C1938C2358B6AD13AB3CCFEC630535D01D32A5985F67F96F
6B7CB7D1FFDA09950CE057EBA5FACFFDE1CBFAC242380FFAD477A1C5FE7CD9AF
3FE8E4A61F72B5C41AE12EDA34ED3F2AEEA3A4D72E9BDE7FEB9720E7A610F12E
948905E2D85073D2AA70CAC081BA9B6001D44A73A2A4A0A7FCBFDBCE739ACE9F
56B1616DF42007CC509D288414168B47C7A424B50E55167F354C8629CF21D9A8
CCF9BC6ACCB21E40908069B12CC057D0FB53FE4C0F9D74458AFE461803ED153E
D010519D144B376DCBB33351ECB06289BDA3FE095D1011BC65908100B126838C
79FCB9AD3420A908194A5E085564FEE58B104017F28B71E71FA61276BE762B2A
5C456551ABAC0A35627907FB28582CB7F628FEF7E2E78B993955E5172734AFC4
7779ADA1118A63CF18840F950494965B459505146B3B6EBA31DD3D93D59081DB
08B5E3C1BE708EF232D480ECA155857E21C32B7039E11CFDD4CA50B16275528B
CBBD58A4AC723764BF53BA5BD10F729E361B1106DFC7430AEEC6C50A09734929
B7C2F2012BED1D35ADCD8FD4931DB838706D1EEE91B7BFB546355D130309ED5B
BD8EF809CB1B0690856F4F227C8DC4FCEEDD3576279964352239B0A57C6A9D01
12961D017DF8BEAA095D7D12E4FB8347F67127A0FDAD1A5FBFC3841694DA923A
41056E559F0A88989E4E3A8B89814C07AD80E549B4B00C08F3684FF1A556CED6
B2856C49C4E083791A0C19B01A9646A4480B1EC4E4126E4EA38DB57E28F433A9
02F544574D7C04AE51AE0FBA4E0DA34BA15BF619BD57C434D7B5A89F086298E1
CA1DA5AEA445F476F26965F8C70B883905D587B4490B790FCB7715A90AE7AE52
05F98A86B922334DDC919218233C3FD3496E09E27986D6872872DA6255336DCE
7AD95FB0AEFF3E1D7549BB1576896640DB5A58BB3CF494BC173FB2D17929EF7D
DE182CFDD100F298D0573CB9F6515B6C16F95A17A9025C1F223E35FA27D4812C
68EBEB7EBDF4AD4B8487F359686AA35142F698F4B47ACEEE24CEF4E4910654D5
47D7F9B17C6629FD835D87015BB902E9FB76074355F7FF6C55C41C8E27D0F4D7
3EAAA4D1D693AF358EBD3CF309455F2EB89361BD52E079F065DFE64C173EA936
E0ADDE03EAFC493CF63C63F7359C21BD3DF44AFB3CFFB46E594A5DE453A00A13
8B9A2B46DF97AE05915EDFB86B108BAFC35DD4DD14ED933E282973FD2E45CD9A
9C532C76511DEF7A6B1A0A9755E8BDC61B6082323B383C6F413ABFA9074FA6C9
6685BA42B289BCF564A8696DD773723043A004F76BC36302ABB15FACA5BEE6D7
0129426DB1EC0956473677BAE7F380805DF31B94A7D173D3C7EC6A7B9EFE3617
18A8BA88E0F22195AA6231BFFACC0ECC5674EC9D76CEBFBC2036AC75A44D12AC
584B5265D3A019145D40D419A3F86C101A7BE5FFD0ECC29DA624590C9D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4ADBFECA756A185E977BFF8C37BE1840CF90BED14A3164D
A8B20DFD9728E6BAC7EF9A114A217DEE75884EF4B9C60C040E8FEFB94BDCA9B0
43F8F6EFC1F52768B6086C41EBDACF46445AEEC02EFF10D4FE13601C3FB16EBB
96A0A60B69DE009F15549E0A5D45A0357FA8A5AC12E289CF2D907A6EC2FF53F9
8821703295813331DA7761B1A0D1337F0779776AFE85BE8A59526694A0F4EB05
67316863FA73E29895CBABEF51AFE1EB024F24F6FB79332C017A9411BF924DE0
E40A24B0E1B797094DD456CE9AD3AB8669A69121B16C33CD949DC6E4C61EB730
176DA74C7DC0D0D0A18384F44D6DFB8677161B8174BE74D7309B15320537D3C6
8392988141F31EE4BED3833D341B2ED787102912117E89C1762D1D58C522E991
CF63E027CDC6072975BBA855964ECF98B21C50DDD5F5BDCF9DF9A815A47BDB3D
FD957F7E5F58E9F0233288E360BA518797DF10D86BE9888BC2427FF8F9282B5D
2B115E8947123C8464BC5F4243F63B1C1767A866F1F9B4B27B64CB3D44108486
E457FC565E44F8F0808F26A82E25AD6B4176B3BE5DE5567ABD3D9951F55183CA
0B9098477F133CEE733F92503255CB46F8BFDF529A8153C8A96379C955E1252D
5ECC5686326957B6CDF4492CEC50E13EA4209CCE5A26CAC268C6BB20D3A2886B
C987FA400BEBDB42372B16C50A933DED7D5350B3CFC502EC6A1AE2E5BD633F32
2EFA680547B1A0C5F65832BB36B7D1004C0ED17083673CC00C8D3DD2466AE78D
D26E0EC1C981E7FD9DB189ABFCCB2CEFA37D76A87BCAFF4F25F6F651E6D754F7
78234392CC428BAB2FC5E1ADC07470D2EEB0AD4AA0173B83910C4656BC172C22
CE9239790F6B0B3DD6FACF052D2E1C0EB34672AA7DA6484EA1B609F6A9259F92
472E432712990194A6BA6E50EDE5D2768687CC471A1EC7186D318D849C05B0E3
60FB9456DCDEE6F046C925A4AF4B62DC95A6A12CC0D2D01E680B2A76BD75B219
AFAB48705B96FA972425723F0784C550C1F7A12ADA429F873865E77FCB36CF08
F0C3825BC78C601A18AFF7605F9C0F5FBFF0300C0F8183AAB17B920AAB6FEC1B
5DCED2A635506B1FA069835DFF7AFE7DC3807891D039AECEAC3F500A09579E60
53D5AF919E01757021B319D0FE32E4E03247DA0244B3A7B1F4CDC7CBC908A3CB
FD813901771DC5F61155B31A9B8A6F57B92441EC771F171FE2E88A868BE15DC1
5B3F1BD2BE6F80D32AF623CD45448B65ECB0B081BD7E0CE1711192C298191FD1
92666D3AE1746F068CF254E12C6D1DD348C4979B7CF2EA8ECA91635F88DBBC73
AD3CF739F01FC8848DD02B00553FD89EE21A8F93E8BB74CB357380D8E8F86EFE
336A4857C9A140DE9C1742088B6333C67F9F9D06D00949BDDB68ED33D84B4B19
A07B70982580A211C195036BEA720647F11AE3733C15A969614CFBFF0A2E1BBF
0DC5CAD5E59C213600DD4878EA45A9E7CFE0E81B23B6DAE0957174A1C990366C
02D61B8353BE24FB30F1FD5387D759B9B58D8AA27DF906BF23B97733F036DBB7
581121CBAF30D4E1EB9A8D05D849BDB4E6F6CDB983EBE93512B86F0547D5C79F
89C5B89395DB45A2A748E70917DA5C31434E6D9B13E567F02E11D0AFBFC16784
EEA57EFD198F4113E873FF06E066A1F13DC6939EFD87310A16DE351AF0FE5CCA
9AAF4874E532CECE214E5E5958F9B7FAD528213665E4CF968BC0A50FD5D40EA4
63CEF58B4F5D3B5DEF8E5553A2B10117E55CC30EBE3D61EBE2DDC0D6793F32DD
75385D252BF672A198E00CEF135B4E3E200035D04BBAC000875AE57374C2503C
65DFA2CE505BAAB3030A6104945B7C51E8D98C9A0E03A0FFDFD3D5ACEFEDFD72
D3CD3DC00E64A79BF50F1BDCCB7995F933500942437B122767376431A66B1C83
8BED46E8A6B092BDBD62EEBC7A401BDA4FC9EB01726B4371791952C0E99834F6
C0A31591F615DD88DACD66C5B1602CEE775E9EF54725E0FF6BD1B97A60B0EBAA
13F77EEF1C55D190026EF75C9CE8642FD950F1FE3EBF5F7044C1AE6267491ECD
CACBC3E8E03EB33C1C3A81E98E4C95B0E6E2B36DD4DBD8D9AC1151749D3810A4
DA431A97D62EF732C63FF2EDD8423F8A5945BD39BC39B9643C87DD94CA2BB136
5DA0BD87808B8DFEC5FB5D14F3C2598A0E5D670DC0D05666958FC05FA7526E88
85C0C728373657755DAA82C5A510C407CECCAFE7CB44296028C33E4B27D39F48
FD9D2D31D2F5DA371434C9D0C0D24086D032C0CA271472F43E1A74771BB448B4
FD8ABD14037E2A853A9328138D891C5034A0C5B6DEDAFE91CA35C19DE8D5032C
94663D9391C281DC16719EB005DAF1D8065CE3EA73E2DB4A0E425FE2683EAD24
CB534BDB215B03D47AAC4FA396EA32875920630BC791A6723DEAF7BA84D12702
B18886C27017B167B5A48B0035CD2E481EB4785E10C7200AA6A5A3618E0FA5F9
8D554FA32AF7D8609655F56E5D85E74D54D95DDE3D0583176988A7D9A7B4E366
3AFE691ADFABBBD2300AB4E95FC3F449F0B6A93E4D7B451F1907CD03D517D0B7
A04EE8CCA19E42E89618A95FD37FACAA723E2A75042FD5A2F2699F85C460FF68
E6B50921C84D9CF00148FFA9A3F5DA590187E7B1EC32E2A60D3F4DFC582D6115
F600EDEAF128C36BEB37F1C1EBFC5C75C1A824270A4DD22A819EF8A138C87A2D
FA306FD1C98213E27E8529912E11B3D0CD0E83722C2B2096C4BC977F12F996A0
1F2C0CBAE843AA40CA08DAA83FE6CB3014F51279FA66E4062BB91F5D925DC253
92BA5572B180C1EC1F1C487D5972B5511B7CAC21BC0A75B35C51DDC8923690B5
B617184C24C26E34B574558AE492242413837B83E0C89E261DDB855F52E469ED
BD07FFCFB5104329861D5E7B8BF5384AF0562C85694C5654EE0BB95631753B8F
1FCDAE7FACDD0F5CB3ECDF53897FE1B50D60A749F7567A3489BAA7612F0E03F5
61F15C8977361A847AD458BBA1A43F4A4F3D3F7127E714B652A4A45E67C4B305
844AA3FA8C852BD4BF1C07C7F2A2DAA1B172771722DCF1454FAE5CB1F683FDFA
0AE264F75152CE0ABE085280F99595AF845A0A91A279DC13F7385B2E1DD26CA6
B16C4B8BDB17338FF2639E09B96C287F187762C971F4D32DD059836018422BBE
01EED4E45F332900323BF76C496416569CC25669EAAFFA16B4919E15599274A3
C0594FF5B901E742D9651A73C54FF815444950CC179E7BFC3CF2D29D7155C987
2F81A703D9252C25B6C98764780AB06E5D38C378DE4E6B8835C9175DE55B4806
661B8296F47F9067E3E71AAF6A16C081C0E3E6E5A7996D4A669AC4E4A93CB36F
37B02E384C43CAF7231C7913A7813B8DF647E09FCECA268F5CA683DE0CA9F0CE
FAB01390A6845CB92650C147CAD5E8637D4DADF326943E2DA987609F2CB89D87
F0948ADAD7BC0E0E1100FDB4E2ED542E8244080DC2820C4A41868892095C0BCE
4A1D6A687F48C98498D83FBA08BD0DE46DE5BBACF904F10FA35180EFB4AFE2BD
11BAF7FB92516CCB66350B3F4367A710F8918F1B56EB231237BADBA46282B232
AF9A2A3DEF4C88BFF005649AB55DDB7BF943323DC44F5C67DE25E937F58B5C2E
9316C6E01AFDF2DE3FCD6AE36B993AC1B8051B8F55210D73EAE3EA9B7668F235
32B68AEE779AE3F18894E19828D7CF962940EA7F0C28C51289CBE561978373CD
2A721EE347057DC571422B85FE650C589858E9D2ECFA165B3CDB7434DA9094D1
1421042A0F2336B50ADC8A522780A8F222F989C8B78DA0D8E1A117AB5BF684FE
A3C3E1664C8D6CD9A1D7CEE6429888330EA00692CB35D89CE066B25BA7FA9C2E
3FADFE89B527B2D71A3B1997E503C9007C9EFC36A037F937EF8A7F4CF5C001DB
CD3533C7B4532B695187CC044527E85E6D2279346E448A6082F9BE9FCBFAF670
4772CC435B59D5151999CCB4199E7C559D8D33BD17DA792056B7D96779E6C2FC
910C02E66685DF4A71C05A477200D4276D6BAB0B9B80BAE99973FB846AAACE74
A333A25A1CE7714D56A1C6E8F0CB8BF5D3C6CD22F0D13370D06D5986865794FD
CE7A85B0BEF7972529AB8A17945446C0DF96954B799E3C2109F4AC19B97D8C95
BC3A3D85E4B9E21098EE1C6C2B63CE1F7417F650A81137EBB4E020A324375095
739BBAA054AFE8600DD7512D2216C7C8E85F8B70DBEF79D5A3471DE996A1FD1B
0F954C7B4592FAD546A35C561BA1CDE1912B6E2B224F5E0AB2D3CB220E9C47F4
48ADE7C88A67FDFCAEF643C241DB5AC90CB6619E2C005F3D81FD73B0A108CFE8
084F433F6BE745E7D1C6A3899887905CB994A52E3D131301FCB01637C2CEF510
DDCBA64F583AE0A1E2D2C7B2C9446F75EF4EC6C555532120EE05534022050EB7
0DB4465D0BC89E8D4C226052DD74BF7D904BCC626EEC5F42F21BE2596FF27A76
905410032162B540DEBA12EEDA7A905935F4B0458DBBED8A00
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC660D7704664695A83680221C6397E36FED57827D0CEC45CCE9134E1
20F85C107CE5E670014BCD3D09417B18667B975BF873F4BEA9022072655ECB43
9ACF13725A79EF90AD4FB0073FF142CFAF4290F2BEFCDF56CE9AD3AB8669A691
21B16C33CD949DC6E4C614B2D1A0ED127FEDDC4387DDB2E10EF3FA3985EDC86B
243368F8CA936A6B93DE729493EDC6FFEE039CDB833C0CA3B0223A63BA100BB2
B4714AB955DA07C374F097906ACD908F1A8355BD40273AB986F80E6021E31427
AEF512224950615DA2039D4EB3B18C87BC21D80345EDB06493E9849967F12E63
19295F104EFA71C12917DFE9B08B5473DD51A322ADB72FBD8794B3F51A1EA076
A789F59B3D595DD347079EA1554A4608FE9440AAC9F04CC93440E1A8B0ACC1DC
ADB778837360339F16EBBF5AC7571B0778C0E9D25358DA06B20DDF35F40C2314
035F52C165A49120D5332A136461B27E1D641B91CA52CB6583FA4C6F64BD28EC
6F839F95D74E2FACD9500D776DBF675838C2E27A9A1C75D9786FB52F7B15A017
61AF688C996E2561756B8F923AE34B82BCFDE515AAA95D76089B8C6D8CBF4863
3095FC397712BF000B4F2852F1C52ED15534409086E06FD6BC39007057B13EBC
E5D8E8EB108C21F7A32F8D0DE181A612268EF75CF1AA6A436B3DF24E7DC6ADB9
39B89E2924D0A92FCDC2AEE877BDC9CC108A18629F0D64BA727A5BC21B42B5F4
1E8F864AC5FCD0977D31EFCD46CFD2F60DFBD4B1B7E0041EF68AB5AF9B946FF9
36607E3512ECF70AC43BB1D4751F57512749F002E1148BF99DA5CA7EDBB00B60
E26CAD17086C48CEA3FF695D5E829EE6473F0C657F7655A674B43152DEC8B2E9
36E490A4D367D68214B348BA51DF871A83CECEDDA1F3DA646B38272829C49B77
DA56D8C3459AEF9356949ED2BC8CA8085F829B9F9E0B4E360140E2EF8AE58083
EC6DA4E70BE9D053F69949A8E464ED478A8E037FB132781E4D3BA60B95605DA5
5C67C5F6EF7AE2049EA3D2EEE67F2FFC49FDB8B4BF1A5B55899A71BFFBC96D20
CF2025F12147C5C8D5E39937B03356D453D819AB0EECCFE7DA6DEB238A87FDC4
1A647D79A3E56C4B5AB6B245E707523349225E6B8EB758ECEDE8173B87B4AA14
71C5FA50EF20ECB3E3080FC6D8B395542D5E464EAD1953BF60A81E14EE323080
F4DBF77A197944E1DCF0738600BFFAE3E467BEA9BBE6258A20D9E32E17451282
4E1ED5C40D3C40923DA150C493699F0E68263CC98B61749221081D1C75F39CBF
B348CC853CECFF1489C53CEBE1A6915BA90065A1A95764E697057F013763621B
17F36B310B47B715FAAF668FB7F142A6C7682F1CA89CECD0A14CE3BFFCCAF634
AE7A1DD365AB9D3569F5A96C3FD32EB201189D07FC46F41CD2FB9B1BBE515CE2
23213D98659912424520237D41AD0A00728D89D92DEEF30B110E58570A966383
AA9F7CE59375525369CA6A559BEF0CA0B802D43F883E1C794B9D3EE9AF8A5CD1
0A347EC4A862A6F0B3867EDE0A050EF258A7F49F5081F1FE098F53AC01525217
1C713B12582F6D29ADDB80A225B11738EB3D1BA708653BEC6F7AC682EFC32633
1F40C5E8FF16D3AB8647D6542B4C6CD77F4469A676906BA6AC776BDA43E4B128
3ADC30DB82832166A9202C67C70817F41B505FA0B5F906C537EFCDEE4C69AFFE
F891072A4BF938AF76A97EDD40B7F6F9D15E91CCF9B8B2DD85257EB6A2C747CF
7113878FC1B094729613788FD31ADEFC852D2E598734CDCCCFD8C05DDC3040E3
87C62F0DBAA9DC2F6628F61497ADF417AABEAD37062A126B997B7696988A9F2B
3AC897A10789DA53D2DF6BC8441AA916C8F02240634E21A4E79A7C8F9062C2AB
821ABC614DA8C5DE3657D1A80350032D19862612D6C80422A4362A89E46F7DC9
1B557A4C8683B5295596D591703D3A1C188354695617AF56DDA1FBC56DBE898C
9AF2FF244463C0DA21C717E348E0BE63120324C3F420649F82D4160A07270010
141602C3A6572740D06F3AE476ADAE3DE5D771C66E86F97387D4AE97D6E59A55
4057B9862A120162EE8B3F4E8DA71604E6933F27729A2C7FD9A30D9E8FFA9D0A
9D090B86A2B91B89AE3479CA9B27527C68B896EDB1FAE22EE3B71C15A10C1971
0517916D0CF980211650F7FD1D657C3164611037449E390AE607F3790491D6FB
BD58617B4FAA8341C4DFBAB734E78912D306347C0DCDEBBF156308BED3E724B1
5646DD2FDEA523D863CBD4EE16455CEA2C0BEC9873A424C98F8E905C9CF80FC7
24E5A519BBD1CFD777EFC9548086229ADAC4953EEEF78155D1AAAF6A197A1B14
F0A5EAAB461B7B4C814D7591163219389B0F4E74CAF6C646E9169D885AF04A62
7278E243314F53B604C87763D8BBACAE4B22606DF4F87EC63BD74CE9504531A6
AF606B83F77678B642E1E8A32C268DC6FE77C016E19412B6011FDA90BC02ACDE
8A3A4BCFF003E895AA05182617BAC758B30905B56CCEDE37F37167FBCFA2CC9A
F628BA1877424769AD11C53BED092CD4C17A17A44068884BE4DFF69219562767
BA09C44B8F1E68BEBF387FC14BC2377955F6408A0F6951FDECE16DC97E999840
09138FD539C739477EB1F5370DD1D26E6DE100B060B7E57DAF6051F6254E6A4D
3B38558C6287C81A6FCAD90C568433B94F8088527CDABEC674B13580A32722BE
FDA8D1EA7BE286D95B7DBF3D2758D029FE6D1EC1336A154B5490D8D794DA1A9A
16DA891583A755B987124713CD716D916700E68F601F6F8A63D0FCF3135BE7E4
461907C8EF7DCF59971DE42B2B781312D14C0A9051B17B14FB582DDFDB57287C
55A74F13B01343474FA3B865C083A61C715C777F8117D2DDB83815E3868E2F4F
86F53BE69F3BBA3D0FCF5437EABD8B2A042FABFF483882103582209E9DB25ABA
5906F28D71D53750ED0F7B30F268BA2559C0B2578592CDF1FFB8A486483FB09D
A826F677BF6ACC2410A685CE4603E79C04FF94C5059BAC10947BA16CC916C66B
1F0E9688D5D0902E5F8BA2960305F73009B515E452D2D31C8C90A97327A337CC
30676F20323942B77D128367B58E865B50E3D3D80C06EFA0CB885B25C5A09B80
AF43A5193CC00483AD73DF76B3A98861623AA82E746007C749A903536B037F3B
E38C32B6B4033AF21F958826C935CBD7BFE1A109C80D6CC9DDDAEBA47D41956C
89C887314DAC65BD644D41E91ED8A7C9D0E4788741DD19AEA2119A54FA0B1F4C
1571B843DA66CBC040648C9619E46683A783F6AD576B69A5B1171B748D0E32EF
C302B9FA50903546BE455D07E984809CAF607B7B16433C9771683A14590FA240
7BAB1E8BB563A9C89C0F79AAA61D4787F91C173784900699E6CA7B672D208B1F
D63B002DB247E7A34F7B469091B4182B33BF1DA6FCB815622C7FC932C36022EF
AB437A48B1D7B2E5B2D9E2935768B1805917B485F6884A7B560FAB7F0EB5F6FA
72DABD6F0BE34EDFE97DF65B0612857F360BA1F06AF09DE5CAFD23D542686901
564423F1F8A3AB5AEC5A549EA5707353F50B147BC02FE9FAAE87F5A611B1D378
B62358BF5E25F6578B68B14596130968AFB5284AA776CDC3942819204B34B399
C3076661D0BF5541EEBEF456FF9B867B6994E2BA263C151D0BD24017EFA1DED6
5711B579E0B60F46E594F20832C6028CA6D11849D17B5DA8ED647B79AB412E0D
5ECC87C4EF6591D09F5D7A2B86EE1F5B5FF3B7B7D949F18EDC5E1913F5F6C757
234D7E5D66B8CBA85D7EAFBCC8202EB40685BC1112199530E6FAEFCAF25D9965
CF6BE7E5B6F3740DD98E2AD199D39C56BE85889670AB59100899E7CC878C86D8
63F261E8969E275792F7C38F61C675D75F43C6AAB7520FD896CEAA4303C754CD
B848EC526A1BD7C66F1DD1922CEC0B0CFF983D205AA1489DA13E2A006BCD91A3
BB5F43BFB1535CCD1672FBD40A3D1B14BE1C985EEA0521867422FD82022BEBE5
4D643F7C2A0D75DA3CD7FF6637D1F434B962F404DB3C6BC318EF55B0442C5AA2
F385A84BB64B27DA576A7BD8350C2860940B78C4E23576F354A66710A4674F99
EDFA00C510884D59CED6D3E493C298926B2685A94983E273B0780533FA7C32E8
02E47E2507EDD79BF25B98F65669DE8A867F5109DDD8D9094FDBA1613FA09E04
EEB0580D75F5873A6F378444C8F10562A57F0E4F5DB21413104C3A8D110710DD
A85C1C16BC219DBA43D41226153ECF720449E215CC79D786E57CA1229401BF63
4D445C93FDC157796BFA55045EF1DCF52E89C267EE4E8925F675BC0693A324D5
BF27B500BD9B73E650FFB71DEAFD8526EE87B9D9597313805DAFC433A6E5D42C
AB2CD2AB08BA4AE24FEF2B67CE1C07108699ACABEF284C19F63C0674C9CF6C25
22C96DD57EC103AF60D5E05063DE4A025FA5007DB8F3314CF57AC360E1F28340
DF37AA75DB61EB4929AB62872DAFA7DC51BF0687ADF56193C9D6D357122AAA06
C55A90405E029F608C27E76C984E054CE25800DD25631C8F22059305E17D89F6
D60C6E12974DE347D8B3E4C85105D879DFD29A8590F62933B22EC8CD48D81CC0
19C9B4E41A808171BE74577EF9C645314BAC0C5D26C1076AA31C8E8944F6C103
9C0EF935042D3049867723AA9551FFD58E493632205936FF6131D4CBD8880F04
0048728D0EE1112BCA85BFD5CB7ED892F1A55E037E4750E6F3CAB9CE75DE3AC5
6B9E570D265DE6182B00FBB0A75AC7D17C3CF29FD17C7573EFB24394FA5C76CC
0DC9DB83B6F549C06ADBF2FF608D9AF9E4E987E770A4A751AB2E085AA126D1DD
57996F0B9D3E8F573D418002E701CA4270B1E945A70B9ABDAD8789152867B1B2
679F374F0949AAA3222DB82A1C41716BBFF2B4E2F28C0A843F9A9F7696B2DBD1
8DC081E29A4DDBD91DFF437FF75780139E94B65D99961EC6D92ABBCCEE6BC433
3D013563A2E138F69A904DCDEE56EA78FE086797F74F876028A5A6C5EC77B435
6BF8281F2D2B9455F611A4113AB278EABEB511D16A77A401799D65079F767F68
BA44B66A84663D877A814008155FBF4ADD4F2D8EA4169C9682696B332BE9BBC4
518671B8D6440A282859DB641ED9F940FE49868C6BEE434017BD459FCF89FA30
E0281A08AB3702679765E6F21C48216AEEE4D31209BD7AD01EB17C5D14F3300B
4BCD78BAE1B1255B139A4B50B093D58C17846DE289FC0A908D3DEB35D08E2EAF
4EDE0C0C64A45E3F43EA0A34072495E724E633F2433A5ED9413970F91DBF8F67
0A15F72B455074678DFDBED70D546BC7E2C50ED4DC55DE4947780ED76337619F
86AF1FB6373D0CEE6B4671791A7A5AE99A990B727C6C7020F14175225EFEA392
02B2353CF4F2C664871EB1A07B3A6946D45571FC760DFF6C3BD2A4967C8D4CAA
EB97FCA86D77E3E150439D42F68306097ABE5C9E7302EBE72B7927487B8A16E9
7D3649103104D396FB0630AE944938B0FF61097B8C98ADDF1867805162B26492
00FC5C77003D22C3A1E82B87DC2C2C567D046ADAA0169B6A38F6E8D65D483940
C97544F888EE33CBEFA0457F1B420AA61EDADDD60410CDF5CA46C021D83D1CBD
E299B90BC0E2B108C96B16F9E60D3EBEFB8407807BFB460751C04ADD2B18096B
A2200DC10ED188D5D5882CEF0A5232202C7F74C30A4646D8726DD73FFCC525C2
C786BFAED952676CDC7856F14D7D59BF5FA6EF027A167C8DAEBC28D7DE5CB57A
30F23A2859902409CD4FF0FC828FC150E294DA02F9F26195C7191EAC5BB67EF9
A3DE7105AE4903D01C0D1793AA3387F7383D154BB5E75D734B94AA9032575B28
91FE7B40E914F225FED01111B5C55A60A69C415DDFE9A4CFB08DD920920702B3
983C218DDD110F6F37AFB159DC12966CD3C9C455742A3D17A3AE0601DB63F00A
EB6AB5BC7E59ED22D13CFDF599DD43370E6F28DB5DE10E11FB506D16094E18D9
C77CB25E04053E0552D1570292FDEB5E5E97328618BF64DE4BEE2CB0F263EF78
2C0D4A924813475DB2A5F3876C929B0A05304A6430A70EC98F4FCA0E8BDB022B
99F26C5F42A789D622CCE2408EC849635AC71A40D7AED32A610FE0495715743C
9519AD6A1827DDAF2D5EDA062C703A602B82325F6EE7D2BE04AC7FB769029856
DCDEE6F046C9253F3B443E5F62AF90BB935183B4D78854124B117B2F35A1E2F7
24B9928D3272F3427292110510B81B1D598AADA642549516E6C4E63F55B39E1B
CCE6038D184DC74E2E186A664391B7B84E2286974A446B78E89DD66F9EEEF258
E53D698E3F2B7FA8438BAED10889B11F218E4AA3703DF2398F5575678E145031
FDD3B48E76DC5386F7163541D0C4B93E527C3FDBE3E2630C8526BEDF26F171C5
F4C80871ACD7CD327CB21034816EE5C6B153BA55F194E998B6EC925AC28831C6
53381AD8FDCEC4905B7C195F49CDB869324B3FDF5668C37471FF491ED33E9402
07DA38B857E80BB677C002F5B67650D9D434956C7787AC8020A21BE20597B630
23FABFE4B71A7BE9CC5266299990ABC7DA8C3E0D42D357AE25A878133A558079
225EA05A971DE42B2B781312D14C0A9051B17B14FB582DDFD8C916C5D8096F80
B49CA3444CF1294FBFAB57DFACC9D3AA8F209DDA78F22714FB9DE80D3833DEEC
7848D7C0BF89CF55D9FF7B893CC31F7949ADAFA7FD22C8F9537DE79D305B1E6A
133B6C9AC1E9461009C0A078862017B2A4036957D1460D9C3B07AEDF0C9286EC
4D7E02795AFFD6B818EEEF4E78760F8A25C60981E6372E49D71614BB4A127ADD
3CD527317F3063086D8B6746817FD31B267DD687896CCCF3F2280D3158A253F2
2466A7F758FCABEA3ACF3F410E44CC26D3A3E0F450318BD182CB6F86A942779F
B4C1C003F982B905BD7D67725C83EF7119C2C4ABACCAC5CA3586D515B3B84D45
2B1B71CC988759AFEF42B52BB86EF5E578EC302A5C63F547BC4619E5041C903E
565E255059BFB3F5AA27D10E337086144AB09286BE3825A53412EFAFED3434FA
017B58EFA18D7DEC9E43F0C01B2206011A3E283257FA60C5AFAD3B71CF6D6772
E5E77E1C55C26B53011358C467EE03A9A751126F1461F2062197718EDBF37032
06D0B11F7745CB403A18A60B7E07595400D89642FD87369EB94A51F6CD7C3CAF
A1D053C1DFEC6681A6414289DFE464B94AF73074469DCACBABC2031D1E1CF627
EF6448DD59A9B9AD1018F245F33A42CF224F327CCEB361EF2B99C162A7229546
436378570253F9314AF146E6642E8264B129E5CFE6B9BE5EB2233EBCFB29D09C
214FD2D176F6831616C926D616D11FD3302153ECFA01B983205650CC30352B8B
7F8EAC363D0D75730D6DEBDCBF85188D71CA5051081C696B4BF2005313F6D6D5
5387C03EED177A7AD399B8A04327DC057B08DB8F80AD718FE0C9DB92520F5BDD
B2E9F6600943B0A5D3440DC803BB2FED2545A9AFAA1897A0F984F440B9BB0EFD
D09656C615245BC3D9608EF6CB0C009BA7E3C884840A95B9429D4882427F1133
B779E11299E7A4D9E7D8D370CFC9EAA5658F702DF2C98ECAE216DC09694D2406
245E84F4D47146CDB5CB5ED80B225FA38BB516F3DCF11B96F0A32E97E31CF40A
8AE08D4B46DF196E1C9BD16EE084196CDBAE8F16946CDB3DBD0CC90695413FDE
088379EF2239E77CD65AE295487D6072F77720ACE22C9983B434CD778C286374
763D63FCA6B543CC272FA607C489AF7A0A9E18497BD332F0DE48F1C1DB0CDB39
307FBDBD27D9816175D196832A211AB9DC6F1E8397E0BCB164EDF10B35BAFE57
C97EB0DBACDD698F4C6FA5667BE5D25FFF2E69922C496CB4EFE46C1615B5BB2C
49EC8DA7B66BFAE6FE28C81DADA7046E58575DE6DBFABEB6C1F9A8F6BB2062C0
82C2C9FBA011F1D8BEC1CCD81D28BEDE22CD263C60160BEC9FA8BAB8F38A03B8
139B8EEC22BEE2E8A1A721E5A28DCB5D3CC5B4C95508A0084305994178AD6CF3
CE058A3D5FC2F1337949AA4C9145042A3AAC758995A7355F79D06964067D8566
5ABD0F0CEB9B96FE8BF57624B10D14CBF5119218D10488FE9462E903CEA643F8
ECBE4C52A10C03486C10AAC67A4408AB95CC3340C7BC2658981FDB476C67E8BF
86762C6DFD3966CDDB526EA5A1B0908C8F539B147473330B7AC5A2CD72BB06F9
1A48B2F0FC09296D6F362929938FC52C0AEA6475D5DFF3CE48547C99A445D200
A4B5D7338A9FC7AB43949362A6F0E358BB96C89BA70D972174AEA48DEBE26D77
6E7C37283F3A63DBB32364C794C6F19B2493E5C38C5B17861E28EC28D50C1982
A539669C3098666CDFB1E317462647319E38C8A691FC44E49D23BF85ABB2031E
C08E44F09A3B24E4E4C867AA33050044E0A9AE1833F6EBC9A1374A20F1FE4123
9C37891157769C8BEA7D15C98753C1756AD232C556098B5FC0E53963712A6EAD
0F218DAD2781926594A4119F4F032D289A653949F11C130F37E27A62B17E62CF
33D6750CF41CA70C6034C319BEB9D85084AA21B81AF837A15EC4DE87FC4B5664
55356E0523E89C9E9FF35BC5013525647F5E9284AF035C5C9DB4F8EB9844FABE
985F922B080279458A5C88DA8147804B50CD957DE5C2AE9D179A778D42A7283E
F893A875CD8F019F124FD73991B3D28B5605428D1D8869EFE48A460C0BFB2499
E7ECE43FA2D905C4A3A61C59E99D1B38E65A28397F992408E3E8BC907880CF8A
9FCFE2C2D547F1B703A410FDAE034C078C73308010E9811B2898D889A5814513
95C7C58186048382FF558363BB9C7DEB8602373CA4D8C3ADC82B06160E722D06
0353B600DE2A8E1DB7A520128B320F2E0F120014CE4752233B804496666ADAA0
D84BBC6A705A9C77B52189008DC1F1167A6CA229FADA3ED1B2F9C43C76B85D7E
691D4473594BC46DCA84DEE96EBDEEACBE2D711F4EB24E6647BE39F450F94735
01B4718B426C20B5288AD0347968808E0C31A589D070925AB665033E87DFAB3D
CAAFFA291CFAACD7F664D76B5D2C37F16E8F256567CC438CE60F0E21E28BDFCF
66851956359D2571426A9D9F41C2C3F1C6B7F475D7C0E6D8BA1AF14E701BE121
A6E3C832FDC31C1546BF0855A67723B2B8B88ED06339E508D2D18157D598E87A
B110217E0343E5276BF0D28259D561A5E0AA1BB9792B28DC9BE7E2DC01206EA0
A9CDE765E680474B9F978D9375EE8C966BB8FAD51EF554621FA6B22F0346F9E6
D4462EF7D04B85A781B87B3FDA2CC3472D6D40775CD82E40FD770696E3CD8771
D2C0F6AF4B088734E7EBC09BD2179A38B82C2262E87EACB8F517FB3103E52595
BA002E0282E54CBA841AEEEF4E78760F8A25C60981E6372E49D71614BB4BC137
E1EDFAABFE069E371FDBB88E24E61EF1A4425F98304DE94E830C6EE76E187817
1F4B7B88EE5C9EE0C92452D30DC8451E14281069DEFC52198F984DB16C7147B2
713EB77D59901570F600FAF4342598828BF88EF4FF6B556E867C819B0ECFFF5D
5FFDC582C9A36E053894012AD008C9368A1290145D1809E0F89C2698D9FC0D30
D42AFC17CE4ABFBFA159B07ED5C93D976CCAD20691B072DA20343038B7147771
5A00DD0FF50F7A508EF9B24E26437A99554057B9862A120162EE8B3F4E8DA716
04E69335316B93A2B631360664A35CE2BF47D21F6A7D4E95C2B3D90FBFFA6FF6
1693FAF103AAC05C4BE35E62AE2E8112562869FFE4E931E8A25EB1ECB77666EE
D9888A92A58D3C3E1A7BF337DA8B9939021638949FB0039DA5F622FE22633B0A
640B2DC602C756B5F8EAF453A6D82701E2F193F39D218F20C4027148117CD407
3D0C3B04A19E77E0F2187F823364608FDEC37438A55BD0F593DF24CA8DF4E3F9
5093EDB58EA45CEC2AFB0B16C4540ED9969E2054CFFED6102D91AFEA73069FE9
38E4401000284F0663CEA0BFABDE837B551650E889285442AAB9A29D15BB6651
EE652DE0616473D1DD73635F2A6D25FF8F941042919CFECEEBEC25616CC076DC
7279B83FA125D6DD423540BDA2201203840F037B4146F2BAB25A95E1B0429A0F
9DCA32D7E2BE6CBABE23A220F662247DF70428C1F79C796A3D33F90B797221D9
4774689E83E5406F5D9554C12843753169443B176D766529787C698BAEEAF7AA
D1263C9B254EF34BAEA4D87FC5875FCA20AA262BB548E9A2A410797B40061F6C
88AC57C62ECEF68A2BDBED290A173D71588A0C196A8EF10AA930D4601BC0E2C8
6E1C7A7102779082F718B9B616E07B5DFC25F6092C7C4F3B97E1E54D62049C3E
64858FDEC0A2E08DB5A22BB0214E0D2BCAA31920271BE74A082ACB55C3009CDC
F89618ABF9D3D0CBFD6FA67EA6CCD740525D51D713CC656537B64B7D1A70D83A
06C101AB379CB47D6A72839E71552EF44778414BA221720F4514C580ED490A50
5250FAE7D47C78F097A9AC68499A6705A30F015D9A88C7B5CE6D30A6B88161FE
C445841CABA1D2A59B405B86983B41A90E181C883DF60990A47DA285D767E651
964E43988E6606EA1FB40DAEAEEE7AAC19D63E621833FC3E90469C806EF327D5
8731A241E11468BBA16BA3494A4E80FF14ED9C6A2CC174B667F18452EBD489C9
F1DE58AC98337B30EE5CA476C09617B1CEE6A2B48CDEB0450B99E5E00DD8D92A
50A8BB96DA9DB538695C4420C98D80CB40CEFFDFED79C967DC7FC302C4D295E6
06E3BEB5DD0B068D6EBA416DCFABE8DF63BF39D4B882FFE5D7E305A01C620628
2BEE1A78FBCD55AFD5FB30944EE4F182641F051987B79B25E6A38C407C126D97
595C9FDBCDAC33916516C280389E7C89DC19215FA388179DE4D224F19182BA7A
3E0C50EF516B3A2F5A8284AA2FA9187C32D91D47628C123A10B82E0E27702BF8
3306A0C3A89D9AD2A517E03616AD44E929A44135D556625B52750D9902A9FB77
DD43CC70B0CE70F9F9E81159520DC45679D35E06C8A1C712F0DAF1BE0E00262B
4D50A92969F863CC4E2CC4BB97B92BBB73256754C40290FC6BD7E6D48C69F042
F7A5179B5F77E3769B1E1BDD616AAA66BF5B6754EE7CE90EE8C3B7908E7D314B
BF92D3F1CABDC48E9156123182A8C9355F34A1FD185CFA65DF3DB858BCF75E95
321A7131547E0E7BB29B16AD06EF339B64B8E72EFAB4C6B2B00EC3212086F4BE
DD6767403F244060F6227466EF360755DFBF7F7350E7D9853223CADF1D781A7E
4D07DB3D4F16AE2503105691883AA61465DFA97CD1B0B290B6AC144B55EBB993
DCD79382F68E3993AD0B93A7C03D1020B9FE9F780FE5465221B68BFBF3F265B1
D1A1146A91079B753C8F0218EED7AC8A23E53D9E640BA6D2C2D5C7681ABEC649
ACA69C7F1AF9F3739F063D8D05B59B2A9DF0298F4DDA3C2326C069DC184B61E4
40D2CBB0B97445265D1A8ACA3131E953CBA6C0A0CABBB72135572EFC8D9D95FB
B46A115A9294FE31586B454CCFDE1CB0F17F31B2701321F8DE9529C759EC9370
03750C28B4E54C10F41BFFF224FF74664F57A83A6CB987E1C0442D9FBB38539A
E5B64C3EE4480DF9CB772EE2FF1E31D915C6626F6E421543DC7754F809B84243
6D3B6DB6ED212E9BFFEDA7D3958C62CD98F538D799B5CDCA5A5527048775EB15
B80C65DB647AEAA6DF39DE075AAB0F3F214029548ECB03F2BD47F248474A956D
3B9EC53E7FDFA26F060FC883892586428602BC6D301CBDE299B90BC0E2B108C9
6B16F9E60D3EBEFB86E365E1DB5AE4C1D0D766CB53D0E2E96A6B4EDF5FB545E8
82D6F9E2676A7EF904B019D3B6AD98F74FD037431E1126044215A4E5D214862A
F46F37A1985054494397927373196716FE8513C83EB08846B77ED8D6A035B7F4
9F8EE72A393D0F37B34C6F2DC9293C9CC3BE2A8F4CFEE63C3E7C9BCC3D58D6FB
6BD665CA0D2C509270C53B5EA44BE4C822E7774D2E36B7DC679E91F344E2181C
9631F74C093A2838B2856305810D0B9F73DE3B805A31F7B99B06BA04C0AE0FB4
F043144C99F35A215B53DD2A8F46556979878FFEAF3702A7C45E4B09188CFB4A
C98BD8AEA0288AADB6E7A170134489283FF3BAD56002C296953F4E38E88860B1
3FEFEEA3132FFA2D59089F700B3B3780CF01D9177FFA919FFB035784ECF6CB66
BF597BDE3FAA267BDE75D8D40163288D69FFBA0F8D78760DEF4C5AD393C2FDB8
C09BBC8863D02E7CBBC3F9B1AB0D125837CA2DBC42A38E88BDCB7DE042AA827F
E25755A808670251993E7F7F89A7C2DC604FE2331D47B4DE87E586BF27CA4095
FEBDF96D3DC8C4527837DB241EE7FEDD285F249B262EBA4E26746601530E5DFF
5859A51DBF625D59CF3FFEA30CCFA0EDDF6A0122789BF66501B14680A3B9650D
6A4CE432E15265271E6E9F502C0B057C5A3F63F8659F55C5331784108F18DB3E
CC698A6A7443C25C291BF7DC984690D9F4ECD7FC05D11830F0D9F78EDA9E75A7
64E02C3E22DCEB3669E8934D1DFDF43498A55EDF16A009E3EDE99989847F8EE4
A2A279348346C7BC326C4FB78A42CF01EC870F6E0AE9A724A3310C3CE8340FC7
BF20C853ADDEFDA2F13C74F4AA95AB062740E852B137500A6F32D8DEA6D10B42
4A89E22465768238A66AD71FFBF5C9832D12F1D89E6F6C4F6E56EDDC40F93B34
767BA45CBA4B1B37FC81DA63277A28B6891DDC5350D347DB0724353AFD4A5FCD
14388C7164E96AF3E71BE046AC145BE61D1F72BB5C570A966383AA9F7CE59375
525369CA6A559BEF0FCE47AD21BDB5FD900A5C7E66942BE868212F8ECDF6B7CD
AFFE7F38132B7E187B4F875CDC2D0810206BBE5A343E48707FC2CDE157EC885E
A0000B6E49EA8C144C8F106A82C3BE2298DFBEC78BC36F7746A67EBF2EC7FFFD
4B20B92DA0F3D2CAE3F2C028C5EF249DA376F0F22997606180B7B126D8255F1A
0F1BD08158F94077D191F62DD10389E2EC78B6AE37A5F519398B89ED671BAA88
D51C5154FAB17F6F9D7933AFF638F6384AFA1DEED784AF774C67EEFB20C5604C
70DC9E98857AA358B5F754BC18087846AA26A634CD2D2206519D53EAB53E924A
60ED01FD4FF8171C0DDB2999F26EED9D32C373613F2E788C56EB08C50043B1D7
8411D194A831BDA3ED9E2F2B40A297D9484B09EBA300B5D5882F227F5EFEADD5
82C932F59D55EBEF81969B4128A52251DB3EBDFA8F59FFCA5E7FC82E25FA5014
B6731BE0B8824D2C9D5B6CBFF1A9034F40380DD1235D8BE44233E4E54C8C0255
CA77AAA035608BB2F37A8DA28F5870230E9DA69ABC80788F2F72CEE5F559495D
E43CB1AFA9A96D3518E5AD9ED32CDFF084D1C0E4878AD0CBF04B2D213C133F54
4B68A92B8918E8357808E8156CA38792A39B1620251961C8D837DE3CDB0DD546
C54CD4A3D368F2DE00F49673BD3CAF2983DABA4741F36B4330E440AD490C5F12
862DF943B06B1FEDAF188610CDDD37DA7B47189AFD58B3DB618F788D9A77FD6B
341C7754802C193040C8E053C3F1EE0BB0AAAB446819939C845FA7C9F352DFF8
3B4D7FCB6B79C54E4F1776B782CB44689C751B8E0C9251DD4C68226F267C021C
A4C0E99CA3257B9E8398B3FD21D1FE47D715C304B749B5A65638B997EDF517E8
BE682D617EE310A79C945126847769D6D8025A90655801BA3ABD21A88C7DCAC6
BF7C344DD11ED86503E1DF1272F75C2009E475FCD3BD7A526CF6AA92618B95CA
DE34330BA317B27B4E249F1A8C5DABF4E62D74CF42261E3C176C1A1502B45433
C0BAAF6FBF4238921670ABFABFF62611EF483C9711E1B0D84F44171C48CF73EB
1ECD562BA8E943EFC02ED8BD1AF09AC4E8A0BD65C37C5A1A47585A4736B10456
40800B0984898282CB81A6C67AED4385B4BA6D903E3DBF700A77387EA8EC4184
54152219A54DA73A385F9AF86EF6E3F5211BBE23CFA17964E08B7C706A15EA93
F5FA7800171D760667E1336DDDF8D536DFD7A74045EA1843CFC35BA7048BA6CE
8FAB83C0F7CDA274EFF21A2BDD528FEF3E6AE7CD6EA694886606A9D8A8D2559C
85177C31784217D6A61BCB560C5AD838DAAB8509D015C37A6F48916CA33E376C
BF428BDA9793A0C56E93C4F789008648C187E542A45CD9DF12110461B0B66DC8
BDB8552BA01AEE38E1205B077C2F2C646AE51B9AA02D13551FC49C9344082893
62F2470B36B6DDD0CF74E8F4E4BDF74C53268E1A7ECA73776BA42DACC3524A5F
F77A0D68AABE3A561F9B19E9E4F465753B660F4F6193DD7163B09607810A06BA
0464A9EF6D1A994028D03A176AE382C902AF1A86C6E9E498361675D2B472AD0C
0E38D3E7419FD02E246015A49306DA63E60F1E730A356BDD8CBC0A878608407B
9267EC9FB996A19A7E80098617C8B9643D9B7EC3B35E1F3AC6C95F14FCE71364
3910CFD5FC6630CBFAF0BBB88A5D0EB528D09D059CDF58321EBF10B71D8253E6
F8FA7AC8DD1F4DA7BB92EE8419BA4EA1D6ED0451C01DCC92B8A4010A5FB94633
C8EA9538567B3C3A5E09A7D4D6CAA68988C7BDFA12A30C42E7F435AE3D8A6FD8
E32F1B23DAE7CA267896578F46BE8C1C5C4C43A33EA29CBE2AB98CD0305DD935
D8F0F5EE34E60F36578304F71C1FA2FDDE88E39346DF44036D0E12337FC388FD
C131444CCE5F7F1A98BB3A8572F20EF1C65E724F243C6CBFC3B5D8C8D09EA509
188421C00059470512A45A8E98921EEAFD82A9516D47CC0D6183D68AFA588CD2
8B1EA00128B2C5D7A50545025A36185A5DC746AEBB13FE192599F5C1BE52AD65
C5F78B048C0028AFD378B0AC9F95B142AF31B68D3AF480BF49C4C5B41E4E69F5
C702A5371334CDC01EFB707AC25F7C9EC4EFA51198BD3E94AC3881B51EEB4169
41DF53B5C87350646B741F39D384B7B2F2717EBFC8E19DFBC96C728C9C1DA6A6
4C1887DDC24C5E57611CB93EE550E272A494BC093D6A8E97D185B9C42A52C9A8
A95616B82538A8F29D9DDEA2B81D521C10140187208C8A9D3E03C697A681D17B
62708868B4D38F7F9655765937836E2DB872B29EF2A9CCEBB4FA47CD473142C3
FC0B32CF71D0699340064B40ECBF937278DAD4A156AAFD209913897502C88DE4
0D1DB7CA44DF229BEDE68273FFFDDD071A0D756B5C7A48824E43A20200312698
3D7EA0A161D1C416AC85C18B09D4EEF5BE6C97FB75F4A3B4BED6B1E3AF1B243B
7AD22E42D05958084939B1D3211509BAAF2B79E737AF4BB311AA95B893F42B5C
037A98F21B48AB50B63BC616BA3A3FED545BF465C1E966923DCD1D8AC4D0D2CC
09E75AC7FBF29D23C61FD5E78CBFE7A6F095480314679B3B1965755D059C0C21
80824BAFBDE47BB46F54EDD7D7FBE6B0700CD3CA0B9CFFFF0802EF93C18A0020
7C13BD757BD22FC5A735A524C8B374AACE6AEAC8CB4182A887EF4B2EB9FB3903
23D1D4F5B3A38174526CCEB474FB4A7D51FC85D9E3708159F6641495A62BD16F
4A456675F17A937B9229855C16BAB8082651DD95841C68C25AE33CBBFD142871
AAD91FD2BDA84FF6BC729E037F297C974F1D75E129C18968F34535FE65051692
5935DD6330B716492A9D79A8E299D9BAEBE631D3D47B3EC7A83E8D9A634AE181
8E919C487725FE2DD2FCEF3CD14A2B9AD00DA6EA18CC4684776583B0667FE31F
FE529F99614E8C0CA46861422C2CA51A1F3646AF22FF551AD6568B994A4E1BE6
BC8349599C4A8E54DFEA06E49A5D6C28791965DF6D1B4F7AEBAFD456DD376E01
0D766FC9783F7725351DE8C848E41EFDCB5AA16E80F3E8005C9DF7D4EAC31050
D9251F1B24106844F618686BC264EE55864ACE6B2470149BDD7D69E60C9912E7
02280795855F5DF477FB098A471BB132FBF01FEB309F822C3A97F428D811A8E2
223D39F164AB89D8FA8B8A8789084482E860E39E40B474717A6311192B6F4AE0
0B6066BBC5B5609C4C7111B399D1EB8274CFC7515F73F867269BACED0D83FDFC
77504661892F6065C85D445395DC2226766C439AEAB018EA63BF5515551EBFE5
CFA242F50E0BDF6F222901BCF95282550B4E5BBB764BEF517106D7134B9E4A67
C24BE0F6905DCE6543DCD1788863033E15F69D068A35578A9CA1AB1FB5316599
E86F1FE5FA7689CE936AC31C632AEB0F563F0969A7D8427A846EC2AA29D1C3DE
33D429F66500955A065D24CE5001DBA8456D54EC229515111E9538F61E5FBAE6
13B8F5874447F68EBF491EC59243FA3601462693C32FE5B20E2D3CCCEA810BDD
121279DFB71938DB4AB8F86636C0AEC29115B1A100E0941B8250C3A074E4B55A
869C96FCA78117347B9CFA480FF4A7B4467CFB38451B2B5A1C0E218AF54C91AF
BF843352314531F9759ACC9DD14B661CC9D209B631F3FA28B1C6B2E18CCD0299
84DEC1EE34F30E77F7C3174AEAA273A07A8B49AC9BDEC7AD1230772D7B98333D
5398A82465238CA88325FC152E5E87BFE61302B759636A119AED705FD6BCFEFB
4812FB6F7E30CCD765DF01C8C0728A3264288F7912A09FFCE3815C5C94BF8F67
DA3F166626CCAF24C69A8A4981E048F306B24EB5997DC21EB8CCF21E75E4225C
7406DD018B286FBF63A18DB6B40EC3A429015C3C9BA698F27C6C2D7AF28092FE
682443A763D8EC3263A7CE8C062BC842AB6F300D800C8BE29BF952010C593C95
1F2EAEA08420229C0A6AD021C6AAA5F51012EA1F4150530DDEE9C650C13A327B
5FC154114ADA73978E9616FE099066621A67E74232CDA73F87ABC3D34172433C
C652E9B2516AD0EEC9F4521797B5718AC1E0ACEF9AEAE22E5FA653C2698E05E0
E07401764830B54665ED029C213CF3BB4A518522A5EE6D6879FEE5E2ECAEFBF5
AB2C8A5AF1CBED50963044BCA63C892D5A0B6C10785C1CDF54CC4F42F483E898
2128BB968A39BA1BFBA2389CC34B504563F7508B6A5D5D43312EBEFAEB5B1962
C84787CB25F36640838FB286937F0B77CB290FE97E2B939414E8A37A573C035D
F780F0BAD12832D74695728E3724990B9056658B1C6F2347D9DB0CD7293EADDD
2502C915E2823AEAE1665024AFA000D75FF0EBAF91956737CC959CA83ABA83D2
5866C80893FA9AD49F5BE52764E6A5633012E2EC28F6DDA28B9557FBBC0A4F74
9ADABF99F570F24E3D139D01F713E2D48F2F394381C98B324435BBBD7D90AF0F
ADEF932649B488DF127F80776C83C6251ECB10AA3A0B2D85AF34ED8AA0E33C95
10F18204616B97E39D14DE0E4409134DC478749FF92F0863167264EFABA47570
BEF0615D7AC52C9370E6FF771E2E02319BA2FE3002FD381AADA097C8E757E0ED
ED2910C66D6FB986F2B7BF0A0801FE00A1B25F2BC121CFEB5F61B361D1F73009
71E95B3BB063E588917ABCCA5F01F8C810199D0CFF914F01A7A3E8A7E16DC251
25FAEC69D9235502D9EFA0278EFC7C11F8B3D4C4BD57A5D4E0AF754AF77CBC92
1E5DB474A04C162170C74DB3C19AF74ED35156E267DD5F55682032E29C25C1B8
45B6253B7582BC58E333D690FF44099A6B5FECB85A43CBE9E05C722E74BA919C
491911E6F18D04547F1BE5AB48A4628EC391F4B223D61B49F80041603CE71AD9
7292D739B305B6738FB13198643760BA6CA14463E8222704349FD78767FB474D
6CEF54245F6C1CE2F461AB3138C87371A810E33FFC50968D211F2C25602B0363
06B0A76A25E3589DCD717154DC6F2FBDEC8AD5212623108721F9A8BA6917F812
26D8EF9BE6CED01BA71517B8CDCBB40FEC3A501165F70CD7D9CB3B51080A868D
FCEAE061855719DEEC0444A8E0BE7578B7A682581FDD7668540F756B0FA472D7
92847AE57C85675CF04BFD1410B56E616F68C39EC534236B15BCBC0DB53FC2C5
48880DE426AD26EBF22646ED5A3839BCB53FCA127E78284481518A84B2D8EFE5
8D40D655952F7731CBD3FFDDAD2B1EFCD4A73CCE9CC8D59E7A62922FC625AE3C
F4A4D2C34A38B9F346E5FBC29819CEFBB990105C1DED1E18B1755EDCEBE41A65
28A56E0AE8C16E6E4A5CB4922F133136AA81CB3DE0F664F4A59C633EB68D3D7E
A4280488512449D5D23CF6D17695755D9F1C105B41F92F125E3BEB0D110399CB
8EADEC0BCE704A0E31DB990EA9E24711FEBDC472571A697785535E787B6593B8
270723603F097803324E2127A46E9DBC2A80D1712BA7193FB92D21BB87ED788C
589CB8815BB70F07D086DF326D7CA50C1EFBB3AD48F21DC7670F5246850EE32B
45F63EEF3C0ED308210EDC23B9759B19DE7A42370B8A03F995DD2FFBF873DE26
2C62FFB30FEDABD85E9D7F23B091CBC8677D77084DB6A5443AC81EDF15BE5541
0D43EAC47B9ADAE233786028BCC4F4A53086AFE2F18C1272626A0CE5CC78D995
CB8F38CD281C0407144DDE0595D248BFC8240A1AC1943F3D307B5E355D091E88
C8DA7B6DB0BD18F325C047F4BEE47D9F5C54AD745B5DBCA941B97DFB12DD077C
44E38097B0BC11DB5459301DD88029D2A39739BCCCC5B1B5B60319EB467D78FE
A24FC89A5E029A0857CBE5A04DACCCCA92F2364F3533BF130FB46B986BD69FD3
9E64A4A4FFFAA99B2B376BD412C94EEE2A88B057773FFB718AD251FA4D4CB398
D2CCD6A88B0A67BD9B9267B63EB2C0526B5C31049B29DF5623F25D63E5B2DB34
FECD94D58C954D9961018260E6F9ACDB96BF108CD05F34133F2F5A67999C7CEA
DDFF44DC96D9F9FE99D5B3DAA74F3C09057654B85B81105A972EA5809A9783FF
7652F7440955C772777ED030724D562B44558F331E55C9A167635D1BBD76C721
2DD2CE8D723DEAC3B21741F76B01D4AF9DA22D298DD2EB8DA49435FCD5DC7125
636170A6397C207E8E00D86F6E947BDEDBC250D239084FC366A0971B85996C53
A6DED5EC9BB5553783A2B65F6B0C241F37A2707513901E19A370D380796A76DA
8AF18F67A56B87C6E7C4A15317417CE1AF2515987C5E96C2EEAC66682E825B83
7176BEE6E6A8F6BE649539485C226284125367D10FDC376F2C32D769F3639FB6
71890B36BD310D1A184C084913958D22575E85FE82761E4D48476D645F86023F
E852EB25C98058B68C3CD5DDC6DFB8FFBAAE1AB34DAAFD32AA716301301AF68B
0C362D38B92F3E77B55CE291ACB8321BE53A2C7D274FD47E5D4F2D6944A68175
A656514425E96DD970D81D4A5361D415FA3D94B93A4C903A65E8469207C6FB37
7B33B2D09C168612388C797CB86D0D8967A6982350C64EAC3A33F145063B1310
E21032E4F30D473BAF1E1DFE94A8945A3D7E234799ECE9CACE8C7EFF41AF9276
F64C53ADDD0E85EDE24F0BFEBB487EB6A99689C4C0410675E4F28CE1A3D33D15
FF20CC36B41258849650DA129DC0FDC4BE50D5A5CD8DAB4109CD47BC069E4586
675F1D40A984E6E75ABADFF4DFAB4B55FDF7436BBFBA57F2FA3823A4A9EC434B
EDEBD4AFF359212EDFAF3BEB9CA81E8B1CF213FC0515425E1189A4BD17E93F26
0DC0E6400A52B0C74452D1C3FAEAADDC6A8BB2E0E96BC0FF6BE1358E1E5E777D
C106CB4DAAEAB310E5B64BC7930302EFDF314A04C0A0CE8E8EA91D75BD2E7203
8210F9D4E8C7CCEDAE0E1DABA022ED8855537B4C7CC0F04B21D26EF4290EF358
6434763AFC459164C805566E4CB74B097CECE7E548847AC4283EAE9973A308FC
31A15F849F425C90DF7BEB2428FC62ECD6E97CE1C7AF6488D173C2BD85685EC0
7D36961915EC6AF51ECC4FC7D2DECF61A9A586D6ACD54ECD9CF44D919C62CD22
3AE394778D9FC91B3933ED728A51603C3296D8EB916107587126E4AD778A84FD
EC71FBE86B7E524BFD3E364DC46A51E0C8C0DDE26F94636839CF10752CB965B3
905C86A50983300D3372FD9E8B12B4D67F849EBEC771B99FA4149F93605BA3D6
FE7BBC1AD8A4FA4B004EAC39D8EC078DFE396B0E78728F166D3BA82F05FDAC49
54ED0B776881C6DA372FC7F9FABC59E520B46BCC20F6EB3DF1910A201A7B22CB
9F95E3DEB9E994FF0C6A601558023F4168EDA727CF0DFC3ABE725F0FE01EBAF6
D438047AB860E131ED9AE9AE5186E222EF53C533AF3B273AF944297DF0948B12
0920D7F8E98C995FB78330B6EB054D4CAE5AC6944A4DE21EE5FF8BA6CCC3A4EF
4FFA4A4DD535A39113FF72C6E04B7079989E48267385A1E63EA86A7F590C1F01
7346709C367704F1B6CE3B19EA98823A34ED67EFC7F9128A17CD447047E6DBAD
B7AE9A7B205866F2ABCCAD6C82EB09720475D09D7B01F32707FA6CDDB5B36B2B
C184BAD23950B28C80497E259F4634C7DF684A25ECCD5B627839105D27A32EB6
53BD28B7D7315231F709B2E3F01E5BC22E802FCDC4A042888BFCC7D504CB8801
4F3F0B29ABD81E289B58C0B3D0FE267EE0682D2C131FA9A30376ED2A20738269
41E9D21C908993D86ACBDD2F42B1EC166834DD57B06E066FFA790F83C0123758
C4BFCF5BAE9B4E21546637E66E04746C1118F3CF41FAF17D3F856BBFF13B8492
45D783C7EDD0F89A69755893E13DD991AF7F05B2EDC3B41FE77292D6B2EBDBE0
69721E56D09289DCDCE7725D038C8D5F44DE6070E8E4AF63749C21237117AD4B
234438CDCA4A7E25421A64637FCB1BAD76C17FBC484DDA6371DFFA62AC23B292
0EEAE0E428875DD89EEF7653115C13C94499E6908A8B91567341B2254F8DEA17
EEA582877A507FAE7C4B76D71230D508E8644BD3FBB0857136797B68CB5D6FAF
45C495116B473465C9AE8C0BA04191044D150EAC205110AD5CE0645E03723A86
69F6E924D719F68847BCDAB4F38A44C189BFBB5CBA860F9CC900EBA7EF65F7D9
FCD676BB03B407AAF88101D7E9CC89CBAD30C9D639CEFD39D11A9D53C18C3435
ED03A52149BC1B5BCE5C9F46C5C4317FA16790393D8EC03581AE7F5CFB6E2A68
BB9D9C2EE4F3D571285E319A78F909421C31359DDB485E15AECA8C66082082F5
9C3DE71163335BECDDB32F84F594B4D4D4B92E6AEC4A9F07841FF93433615B89
BCF72E341622FF8A2E7844FB047452524DE681D9A7E3C921362BBC0F0F89FE47
7C2413903A61E139B0D0A1F46D61AB20C533F5B87A0D016B3A67CAC1CE1953C9
CF7330BDA8F833EB86ED4836767BA4F806B84974204A324D1886147C8E65CC1A
E5190F1A6FB4565049E8821D464BC817A76F02FBD40708F6E4BDDD108241F68A
7BCA1C18DE1C4F8CC62356886E9B27AFB1ABFE628A6567768FD3A70CE0A9F8E0
AF2AF7C74DB79A2B45A47D4119D363B0ACEEAB4DC07A7026EBE9E2D290B1EEDF
E0322838AAD2F66DF68BD84BB1AA7F88CB97755F3116CE5E9F6A43919B8955ED
49C5513696E3AD894BAE642F2553ED0EEB16F304F33C1C822EFA66A75E01A687
58FD97C5928BB2B1DB241C2C327A2EE0888831119F214E625FA0CD4248B15D34
B1EE3580C618C1814F112E445F32C0970817BC4056BF40F170F3EAFC1572D2E5
6F2F0F692831903D2097925F5142FDB50A831C0AD845A66211A1D23A3F92B85B
2A875279E430CFFFEE1E8B31F501B401651FBC69B8A863AB0892FDA628EBA6AA
858A62BA79011C7957E51A6B577CC9229C418872A7DBBE44B0A57C981A39DF83
70425BDB84958227144193DE4580DCFD0C76531CB7A42029643B77CF543793CE
67F024A5C4D40921603FD78A00379FC4B64991B4D1FE7795ADD2B571F1196BCC
C8F6C18B52DF7F950CE1BDB15548CAD879752198F459D1FAC1883222A1C90CA4
E940136520C8AF7DC481A2B034F1F1F99021DFFBB66ACDDA443E0B47FE833769
50F35C5D10ABC0FE231656AE2036AA7536E9093D07E613D85EF22C5815A40084
8F0861C2BDA71F87FAC83FCB830DFC65F06CD3FA959252B8EDAE8D827A01740F
6FB5A373DF534177FCE8963A695416C667735DD886214500C2A7D4A0D418ABCC
749DE8077D5FBD9FDD70C88B218F2B901D1AB7995D927C91A74430E36AD81470
9D8E3354E849C3C3F534C3CA302F34E1AEFD1990B6E8CF001E06ACD96AACC54D
1CE78A7045C4A310E38EBA2D3B88B585A260DC483EAF72E4A3209B43465CF0CC
2A5FDBD2127762FC7080DC7C4B1328C68D2D685289C1E61D4BA2CF57E95EE1FA
93CC299990D52793E668C744D688071444C6EBA6D73FAF4BEB87413961A8E6AD
02B6123F25D2E5978D05E9EDF07B8E6F61A8159F858C9B2131051DBED189118B
9279A11243BF04609A4EE3635A6261D204B3F0A74072A491F62A09D70000B46D
6C5885F0B53FB07AB5935CB1B851B96CD7BF88F9A223A87FB0583016699A3FDC
333B26080381352B13A324F2B14761B72EFC1FD3A889B724B04B772E843D2988
576684C188F6A0F26167F82AC5DC8D87328F23C662F2AE5CD280623A14E0A0D1
941A832444DA8895A074D4CB6915E864651359808C83599EF46DF5A7E855ABFA
3AD220F62D948C0424762597BA429ADD5A422D7570CAC22BF37AD03C6BF5FF5A
B60CB740C9C49ED9DEE46462D608C32E9A0F7AD9069C323AD2E1AE28E0484DF9
2D8B8F5CEE39EFA7F4B85C04D8BBB173F3A1285DEE9D690E2258AEE74BB288C0
DD7AEC8D6A3452F221D0151ADB4DC2C01374A806711890C1AC5997F21A14E752
3CEDB295474CA9FB7384C9D2DD211B4E26DD455B8C450A3845A543555BCA8137
E42846577F66B459169FE19DCF73C5380BDEABFED22DCC6CAD9D6A335B2BCFA6
D000A7C579EA6EFE3AD03730EE75F1CE4473166C04DF344F9F3A90FFBFA062D8
D6BFE942A797547F96F920991747740E15EFE49C4CDC57552E99065D4980DA7D
AC639CD54A18D12FF8CBCDA975C4B925E11A787E13488B61554D8CB59E6188FA
8F5B9A516ACA5FB0217CEF8518BFCBA0E1FCB4B720D21DBE1EB344E7ECCD28B9
8FBB721C2095CA9C8DE1EA63DE4D8AAC6484D208FA185432C09B97FD98064AB1
A1BB6D9C7AB9BCD283495FC749DE0D2B04F32E493AF4230C8EDAAD2A984F7422
94CBED2C9E3B9B77C62737A3A6D287F1A1B6F6E39BA58B7826881DF340EAF1D6
0DA79EFC3468AAED851F1CC40481634C777018C2E5F8ECF12EEAEA3D477C0433
ADAD9AA04C4B6A9E56344507DFC7CF7F24A0ECD8E58D2AA0A9A702837098C8A6
97CFED31A9925CB1A79CA07149D208A0D4EF51711A2929B95BCC523931E5E83B
FCEC8A756DD01569B77B5F48CA43060FAC5E0321533CFD004B4F5149C158AF33
D829D1175A2215EA010FC05250C78CDA020565D0739A7FFBA9CE76326D3A51D9
AC67EF9E2FDEB0F43558C34258A338E60FB97E9B4C0A2D50833E3CE505A453E6
82CEF7A2521772F4FBEE308CEFA450C89764BF440ABF08022140493803D47C96
A2745580EDC957AC4291730A86E7439843BAE4CC2325DD56CBD9B4B1C19A67CD
1792EE7EBA67565F5AF5CEB41549C09A04AE62FFD20D8832B1252935D6CBBEAA
A6D87458CCF2D11909B568A43D794651A687CCAACF3F82921321B4E43A8CEBB7
3E64310D59690222DBE40AC1CB2874C86BBF6F8C0FD6219720F1781BA4CD3A2F
985943BD3E2A4E824433934B7C586B986BD69FD39E64A73021B6EE5B2ADA989B
D741693A0231D55B37A2370669A9989A8F17CA0C871AAB3CF16015E2B1785CC9
CE17A0B0AEBB0354C2C995CEF3B811A6A753C14253089649C85DC2B0D3E1DC26
4C9B58E9057C80C1120B4717146C1EC432FEF0BC97A7E568F1202BB247455402
12CBB6260296C37C0CD1D0C11221AA23BA0A302B0425976C12C80E4D9A88629D
E47E52E36694842D37F3A5EAE6735DE2C4F5B27DCBDC047B3476CFB27A79C0FE
53F7656E408CDD8A3C8215D594C6B911EBCC7BC52025F12147C5C8D5E39937B0
3356D453D819AB0EECD65720326DFC2A455157B1BF595EA3E14929085DB969FF
CCE2E3AE152D3552B881E82055EF9B1B335ABE3B0C2B734CD2063A1D0C54EF86
546024BA90631557257C6BAF96614FEFF85A48B3A327275F7C9A433ABB0C95B5
9E09080C4EC92A953711D45B6F82B5A3EA5231FC9E4780A81BA87D1EB408C340
D047061DBBDE1BF5AD5D038E65462008737F41AD8DE10D42B7A8910606700D1A
B8E22217C72131764337AAD0A5DFE27C4513A64DD33E5170CA60839F2C2FB225
29A38153E830445FFF661BCCCA717039819C41EF4267749FBDF55FDD969AF078
FC4F4F977374F5C800AAD9257B7ACF7E5EC57F8CA4EBEB57B2DDA1814B058ABC
F2C687251E8094854212C9219CAA1C24BC0B5461A798CED70E0344FD8A0C5735
0EF2E7D190DBC5A1ABF890E10BD139B4A0897807AB1C2EF74A550D5E0FCBD81E
0308986556C728BA46265C2617B2D56C016F2041CB837A1F9DA29079555C1002
65D82C9C1FDF318198BD448FDFA6E376B9FE4D21FE10DE7B57D14490275C958C
053897ABA5BB7950FDC9E0867CF4C02FFAD3558727B404136F691BE1541AE3E6
4BE682605CE4EB881B5FCFC898D707553AA90560AA32BFC1FB1353D8E6C5371E
69891C3D766B48121BD2693B0E935DC0E81D5B94FC1F593E41B8DBB0DE9C71CB
421335611E203F584928BE699FA9404AC5DECE198EDC7A5BEE0A11630066630D
8595A47913D246893E3D168283351CBBDFCE5170A0DB6BC7D12AE19D05B59A80
05C796575EE1D0F90C321DF278C46A4F26DEDEBA5B7562F17D4819428880EA18
E652288F56CE075D0DC22886474BA5193F757A3EA34C529A61A2B6E6E7439909
2BE61D98797E7938C8CBF6C128C00F40A3FFAB37B236E8C2C7C50C790C530996
FFAAE8EFC16C92AEEDDA1D21ACAAD99F49AB24458E798268BFF32DF5977ED677
6A0BDCA058EF582CEA8D6D8D1D374825390142BEA3D785E677FECD107853612C
B37BCB221B328D41B17F7A1FFE9640CA8BFEAB9B506088DB3CF99C78613AF620
54AE153E6581296F85483FE343D54EAD9D29D5AB7DC23CFB69ED4BECB5E1A837
A3ACFBBA005CD72A3772B499539CB98BF0763049644039D1D3CBB0C7646DD33D
9E3568F57D39504521FAB3A35463DCC628BED7B28B217E936D4F98BF603192E5
E9D8452B79FF383823BC168252F57DC0AF5A5F3D6F311C1B235558B7CEF340CC
BD71BA5EFFA3E96C491E1E20F202321AE8696A2B452CFB700401591366F3E15E
84FC2A842A1398CD00E485ED620CE8AED47E0994843D417F4E3E6132F3EAD264
4A058DD2D7F2D4064304451D1EEC0AFD83A8D88144B0BC7E59ED22D13CFDF599
DD43370E6F28DB5DE10ADF46EA0224D826BB690432609A67E306F6F7C2CD4CDB
5EAF5AC51DCB571982706F101B216B4AF3523974378A0B8C7721C014E7CC2441
89592F49B3A2EC2BC1AED9C4B7592E7D03AEEBDFC6D29D4800634C54AA3793F4
F26A774718D8325FC31ABCB8DA953444B29D7CB004560D0685F73E8772FDDAB8
762BADE7C9E61D62CE0FCACB72E14C2FDB87A97F47425FD21D0E171DF8F5EAB5
E059B2545EF6BE61C442FAFC51EAF36980A50FD5F5176B9145F76EB89A875F63
D9207D460D1660E8AE443837A2E5276E15E31A9CC66B827E1BF9A7DAE500A0C9
0453F042B71ABEBC19EED2A4EAFE70F35481FA219E49C2F4D2C8EC80D9E187F9
E15825F57C75383EF292A9E582B78DD2BBE4BABAC7DD277FC23AA3D02AD1F03A
F0C294D7A2809E166F1590BB741AE73DD7D9F456AFAA29249BAED5FACE19CDD5
A5FEBB7411F952FE4DF62C45574E546C1525E0B46008400A3BA5D6D7BDB4FE33
760E8BAB3C99BCA59162FD934D3BC1ABC8DA0E66D672C96C375C212393E44285
47E4A313909459423B4473B7813C99FA7B6D02CFA938111A092D1DDF35FB190D
FE4E4A58E17059A66A66132D35680501A47FFD3C2F005400168C2951654FE508
877366B89F6FAD2BACA4908282EFFE384B94A8A7F314CDC0E477C500A7DEAD96
3849F83E6CCEB0188A1309F39157CEE8D09BA136B97667D7419E5A801C93F72B
D152843B02B57F310DBAF34642CCAEE530F6A8052A9CA05B67EB5F859BEE23DA
A95BA801B07A36EB7B608D2AD018C84F470192BF326C93EA7E55918A719C5B27
C4DBBE2DD951ABFE4DE5DF820F1B96175BD7BF099E8276173D443884AC060032
9C607B72900E8F1D76243E898F2442AF858196ADD0AB7EC59A2FF33F3CA7CC3A
03996EF52A5BAEC9459623B4C55EFBEECD97F8849E760494BBF70003BA535166
15023DBDE2030E09E0FFE81013818E5121FABECDA261BCC19DB5C2F37AE07A07
362FA41E4EC900D23D50546BC885AD7400228FFFD7B54A33F81075FB9C13F241
8FA6F805C3413C81B051C4432432CBF94483C1D7C5CED7572391776C13384D3D
A97E086411E38EC99F57AD5A1601A6C2E44D2B6799B72E8D6F970B69424ECDD2
BFCD831C74E5262430E9787D1CB453B5C34C538D56198355E8F20A2892462936
DCABA13008D235B437B7DD011061B1EF585D7190F2C24F9A9A1008D08C8C9140
E054811B3EA3F55262749A2AA724959C2DF14A2EC844F95D9A7CC1CE8FC29833
15F8958917FCE432B5BA477D13141991A518561E2A2917CF1B3F65EF24EFD972
18971819C58624089FE39F416FB3FC681CDA766C4B6441404AC18D779818EF92
077DEEE932B207D5B7D3297C7100747C7353F4D46D69CF7640FB9222042848F9
BF749ADD801B7A45B482C01FFA79BDD25F22AA73784984EB48070919A734F426
D447CDF8EFDCC1C8AA92340FC33BF355187F54782429A21E2A52099C6E75778A
369CE6FE7EA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFC2338B6E81F9615
6EBF5B7D624A8032161D54A462A9BCC0EBF07D174E63681C9719E498C62A7FF0
0B01DF3772BD9B32F7AD63F5716194F5E321DB16C380C5220FFBD9A97CE29873
F9600A094DC3C4B0CB7DE48870D04E719EEF0D86770FA787F267499DA09EB723
9641CFED8CA46B4192E827694FD82DFF58B3F2848D455ADAFA8F7470F8AF06D6
C6490988311A5C70DB60B784FC038F6DAAC43B35F668DF9A75ED5B78C49642E5
1A141C5F34F7579AA11BCABF21D70A72AA4B05B19BC6EA6705003370A63CB702
B7F6F5342BD85578E1D63F8E33AAA89DD9A74BC836AC24C718B813CAAE8E5356
3FD02D1F964FE83ABBCB3B8696192330E9CA13D9C379F6D4BF688ACAF9F67A36
787D226B67B0552D00C4D3114908981F51AC4E66A3F824B40DFF770BD44F61E2
E7C76E18CABA2E84526A74A1D0CB3181290D6A8C5AB572A6E3ADE298E834F916
9527F3F6F2ECC8B700F7978878EF7D37A5A7108083F9DC471ED6488AA685D042
43BF460051DA59D4B0840F47ECEFA53F6F3A6467C14C2B8315219CC600DC0BA6
86820E071214352072B64F57198BE7F11898B3E082109C5E04DC906ADA525375
7383F401C518141E6BF045A029B2195F29379C4B88C50DF01F591763F16FE1D7
E0729CE41298E97164C1FF24BE58E856FE5EBE3C809B5C9AE5E533A30B97B735
B1A91FC71909D220C791738CC836EFA673A3FFB3D478EF32B286D1738E60C074
C6C417505774372A39F5BE217A815AE85C56C97C347BE7F0ADBC65EB106F3653
21CE68091E6386CC913D455473122E758B40A5A2EB1BB8C26FE9004BC127FB73
67DD9F75AECABA75207C66D0B692FE7C9CEED9A54EE6607CA152AA9BF6198C5A
A562591C396976F01961ECE20C1BEF4EFB2B6F779BF00085DCECDE6E20C4A627
67AB1AA8B1F9F6B746B56A056405F1094AFB2137E531F829BC2AEDC874B4CEE3
0827EF5A0FA16510FB9F6D14FC983E99D27F9136DB6CA4754D04BE163B9E964F
6762BDF2BD0ACE10B99E1A561E62FC7E2E104143923BF639CC3241D6FC539FA7
659BED472E3D5495B799C5ECCFACC357ECF91A391B8055ED810217FF65747517
4496299457BECACD36404D977AD40263BBCF59D252D989A249E6CB9ED4F7A4D8
807C9D3CACF1CE0E233DB1C4888FE46B96E78A9D5B7FC4BFCCB43F74037920F8
422F3E911F2A28969E9BBFED7EFD6DA850A5AD8F1B52BE124FAFF443C0A979D4
8F768640F1348C49780E6AD8333F289DDC7A499304DCD9A5B9FAAAE2C9A7CBB1
F832A94E176F8B529878D4C5E8A0F09E24F9F326714933288FF3508ABFBC079C
AE838B4EBF46863A47B02100A33FAAB55B6E69FC735B8DF054B93168079A22BA
4F3C6620554CFB97C2946D5B9FD8DECF6BEC2C9B37E46B75F88E025B90AD5DDA
45EF763F251F5A4E3AD99E41CFD8EE2EE7AF9382824A4B99122BCAB93CA73099
7F4C092C77BE896046350CFB7E71DA6655FBE35856A1BBD2139CB6629EB4A14A
37DDBBAD42B63FD021660AC16BBFB8823A7BE796EF6F5A2748B535FA0C83D65D
A1540C542553AA134D9B7F37A36E9FCB7A163DE6523F9E660D2CC6B59F7AA87B
0624F57CAF4CF7B0D095E5B3AC70F1C11CEB9E9EE9523460F11272D8EA873AC7
B461E0FB63D7C1CE62B8FF34647199222C5CB4FC04E017597D1E99ED342D03E0
C4B5D0A21DD6FF6B7B6B8B82733F531FF661381DC983DE2858E791F976EE7294
3531DD69B4A14D977F37DAA777C91881793FB15E368A519148EC8E8B05282FCE
440A2080394DE1A095AFCBCF96948C6A0F57223555F70B4116FEBF8041047915
D06D7C952B12E6646662A651EE4185C5725607F2F262C7E0FC2DA6ED47D61F83
DBF89585DAB88E81AE9AD72D7D4D3FFD95F32C14424A2B5AFE307C7807A8018C
0E9A5F4004BFFFC328F44E8D61C0AA41A67D2613F71BA95AC6F11D65E7B61ECA
DC94491C5FF034CEA604CDFA49B10EA0A815B73988E6499808D0DBFD69C75FBA
4A24308A7E5ADBDA2E342B4285581F903204BE86B52C36213B243804BCD6CF66
E574064E2B0AEEF95960D11499003AADF0EF972526F12590D8A23907A945D19A
53D7B01515BDB550031DCA109120198BF18CE19198772CD7C7AB8153E86320D7
836FE742785B93336E939EB40A8E211CB43FC971F56E79D3B2B76876836C221D
D645697FAF13FD36C37F7A0B01B98041954F6596749D92671386A21E69C9B19F
9211DE8E3C682C96BF0C1C0F16071FE6249A6BB1389BA3791CE905ACDC05A47B
154D50CC20D94E2E060182EDF66FBAE371392DD0E59980FA8BE2BE136F139892
AED19CFDF430F8365C10C7E6F5710FBA343D16CA96F1DB7B467C0440CF4F0702
2E542342964D3E11D27C6B2521012F048B4760A6C2E62E07E1BB1456C23EEC3E
B9F2963D2E756662799AE13905C01C16BF373060EEE59FDD617477CB5EB50F0C
CEDBD79DAA0CF6254C627A1F1673DFA6452E0BAA0519CB64DDE6282787A7F448
D788E8F9B1A20E03DF07E27D18847771F3A1E788724EE04C61B5BCAAA3B2F79C
A39D61350D4F6D8C1BCE5DC7AA0B0796FFE5083A220F5BFE9E280162EF4A0F49
A3F16C549E4E2619AB44696D80CF4535A1A472111AF636669356E19FEFC798E1
9561FB058BC80A856A9A0BF24F7B5D369356534F422E7F9553C125F8EA589A67
C6E3E108892F23FEFB87DF3CE704766F5D1DD4CEA42A6A7062B3695AD1F129C4
18F37AABF1FCA0E3E26DB60EB2FC8C85A4B5C75D5B24CDB8B7C3329209D10062
33A321B64EE225E57DFEDEAC9A8B724E3EDE5BBAEC09A13ABD8E522C7F9C7310
848F818ED4DD4EADBBE2BBCC42B985EB4DA70BEAEFE2F837333E6F72CF25E5C8
C9F78F041A7DF0647C41F5073CE3AB6F8CF0B8BC190ED5BE12AD723585048D44
B9BD942C9CECE5B9EC4F2782545ECAE057491D127B5775AB70369ABE28B7072C
6D3AC2FE21487349BA305BE847D4C83B15BC578456A2FDB241511F994AE235F4
F872E6364B07839C15AF729980F129FFFA25761F9BACEDED0ADAADB956B9C987
6181C57D2ED2D7E2109B23B0A17BEB45646825F673A897242E4CDFCD19886D6B
2B42A5344A56638544FF5C7BA1EBDAA89F747DEE1312FB9ABF4D5F7648B747EA
3BA2ADB4C3F65F56ACE4AA37B938FBA1AD1140EC58EEC2753F962EE0BCDEF279
2ACA6EE48DB3CC90CEF58A6344235843D9EFCAEFB06D867A7E23FA5EA0CD0A56
FF4F02F5645F555C3BA182014CF26B98D311500F2C36ACAB88AF9A74165F6D36
35FDAFCC1CE16BD7FAF439BABA916602E0325211B8FF7956377549EC4DAD809E
EBBC4D0432D0AFB799FAE0443E5CBB4265F321D4DB400083880449E4F3F26F38
4E9B7E61249B8D76A82990BC5ACAE2670ACEBBBC896727354CA8FA3176D2658A
5B99F0D546C75EAB7764693942E51B80CFC620AAB21F3D225B67573891636ABD
43B0EF8CD01CB4AA81D7B59F9127712598F3AB400B1B043A0929E7770755EA1D
8FF9872C0187BE9BD990B5D92DA3928067435286C4F1BDE50770550A55B6CB4A
3168844930BDA0EE37BC73E6AA38AE80C8172EA5A0D2716409DB43633B91D9E5
9E61D42020F13E744AF02DFE29104194F281AACB502E69A6259F5A35FFED0AA2
66042D0B1E3C83667441D2CC230EFE2E52A020B113BD5F5B45E5CC5FAAAAA64B
A87F7B622622026240AED468CEDE89A145D61D1106D54B775C59F8B035A437FE
709C2131051DBED189112A161FE3B40ED2E0C31C0121DA581D3CA5B47C1782CE
FF81A72F7B7736698ADBF730B5C42C277F794B70A5229DEECEB6616B0A4680D9
D8F14F0ADC8B45A3428403C0D444145B567D87AB3DF83E8B14FEADDFF4A35FA4
D762F1E727D1D83A3FBA86C7735D5E131BF7367A3FC93019F975041BE9CDADBF
CF366596F5E360D5D58E61F380E448DE730F295244C4737276525CE255FFE9B8
B266A4EAEEA0E6B037F632D2B05CA0B5A20F3F019137A7824F947569DB155645
ABB75134D45257B1D4280F4A81784BAC743DA14BE0C3BE6B8F0FEC92BEFA9086
2E8BE39841EC80CBE0D0E6218801EA397F2D5227829487D42E554B97738315C0
6B6DDA49912C8521AB6B8FC85ABEC99CCAD7AB7656A28C28B2161C4FADDDFD8C
84161E560A865E724D3FBD1051295BC0BF6141A734DB83D8074B483613764DCB
DAA74681BE30C4E6CB25CB82C4C1D3DD38BD2EAA12321D64F72274D82150F15B
2262D29D155FBECCF4AF9638BE93A3DD877DF26358100A5E0429C3339B2ED952
D2CF8DF96CF26D55FAEA9A76EE41A5A44DDE5D9CC01AC6883ADAA208669450FA
C50214F56660121DBD482E55243BB605755173FB330F07F4B9A9AD9978D95109
0105568EFF6F286505A4FCFA03C91124A94D7758C0F25EFB04B77CC23C3DA6FF
12E97AE9E2B9BCE3ABE649EC28175B063238E1BAC375B92B6343584A754ECC3B
4B1EE7746C85844F142F297D9A803AB26BFC629A5B5F28EDE4B3B21A11F43568
3D6F181F748003BFBF7C47C540603DCBE9F91D2E18B548E83EF72C6AA4952929
100C91D97AE1BE4E50984A83B89B80D119B525143CBC8BEF7F29D8A190D249AB
2B813777C0A64597DDE632BE130C67E362A48AFF9E7A2A052E98495EDC109FD7
AD4EF1B1C11451CCEEEE8D687D3648326FE2EBEA0575E9534219C7B6ABE149D9
AD49B4CB901556E63B68407A0CF832A58123E5128E0DA1066779D6A1FD2918A6
C6BF97D3E2B7B7ED4834126C81A38165042EA9ACE067104A948A8AF1362B46C1
0AB5B1BF7F58699882A170D6B7ED090F8C49F770F576B90E0322226A12D075A7
187099EF174DA6FBAA6FA28A2B5FB965983F5CC52C0F2FB38D56FA241ABB3B91
9B7BC0CDC64034CDAE35FC5DAB7C909204337D0E1B185531B8DB73758D78F350
9A2BFAC68B4F1DDF1828A186C696CD7D575C2C5F66A95B6EFCF860CADCDF6449
8B33F1EF4E3F26F58070C11B14066AA9A7C0179AB80653E16BFB7ABBAE73CDFB
B18D1242F557B812D84518B59D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktional)
@start /Fa 165[886 7[959 82[{}2 1328.35 /MSBM10 rf /Fb
204[406 51[{ enclmrm ReEncodeFont }1 664.176 /LMRoman6-Regular
rf /Fc 141[367 3[523 4[261 6[523 470 97[{ enclmec ReEncodeFont }5
885.568 /LMRoman8-Regular rf /Fd 133[438 12[832 9[408
12[548 59[482 26[{ enclmmathit ReEncodeFont }5 885.568
/LMMathItalic8-Regular rf /Fe 185[723 4[830 12[553 553
4[307 46[{ enclmec ReEncodeFont }5 1106.96 /LMRoman10-Regular
rf /Ff 160[909 45[606 1[606 47[{ enclmec ReEncodeFont }3
1212.12 /LMRoman10-Regular rf /Fg 203[993 52[{}1 1328.35
/wasy10 rf /Fh 205[886 48[369 1033{ enclmmathsy ReEncodeFont }3
1328.35 /LMMathSymbols10-Regular rf /Fi 194[1012 9[650
650 650 650 4[1012 1[506 506 40[{ enclmrm ReEncodeFont }8
1328.35 /LMRoman12-Regular rf /Fj 199[470 1[470 1[470
470 470 470 470 6[366 366 40[{ enclmrm ReEncodeFont }9
885.568 /LMRoman8-Regular rf /Fk 133[604 634 739 3[470
6[1138 6[641 2[560 553 683 10[758 26[361 32[671 26[{
 enclmmathit ReEncodeFont }12 1328.35 /LMMathItalic12-Regular
rf /Fl 3[723 23[650 105[578 2[939 686 723 506 513 506
1[723 650 723 1084 361 686 1[361 723 650 397 578 723
578 723 650 6[795 2[1336 975 1[939 3[885 4[1011 3[1021
849 885 993 1[921 975 1[614 11[650 650 650 2[361 434
361 10[361 5[759 27[{ enclmec ReEncodeFont }45 1328.35
/LMRoman12-Regular rf /Fm 27[1046 110[1196 837 849 879
1[1196 1076 1196 1[598 1136 1[598 1196 1076 1[982 1196
956 1[1046 16[1470 1616 1[2041 3[801 1[1691 1353 1412
1[1554 1530 1625 12[1076 1076 1076 1076 2[598 717 45[{
 enclmec ReEncodeFont }33 1912.83 /LMRoman12-Bold rf
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fm(F)-239
b(A)717 b(3.4)g(-)h(1)f(Indirekte)f(Prop)60 b(ortionalit\344t)715
b(-)i(MC)h(-)g(BIFIE)p 0 TeXcolorgray -741 4800 a Fl(1.)p
0 TeXcolorgray 651 w Fk(t)433 b Fl(ist)h(indirekt)f(prop)36
b(ortional)434 b(zu)g Fk(x)f Fl(und)g Fk(y)22185 4318
y Fj(2)22710 4800 y Fl(.)855 7346 y(W)-108 b(elc)-36
b(he)364 b(der)h(angegeb)36 b(enen)365 b(F)-108 b(ormeln)364
b(b)36 b(esc)-36 b(hreib)36 b(en)364 b(diese)h(Abh\344ngigk)-36
b(eiten?)366 b(Kreuze)e(die)921 9338 y(b)36 b(eiden)433
b(zutre\033enden)e(F)-108 b(ormeln)434 b(an!)p 17800
10046 10783 45 v 17800 14576 45 4530 v 18509 12462 a
Fk(t)369 b Fi(=)22787 11563 y Fk(z)p 20861 12152 4516
45 v 20861 13373 a Fi(3)296 b Fh(\001)f Fk(x)g Fh(\001)g
Fk(y)24851 12989 y Fj(2)p 26174 14576 45 4530 v 1 0 0
TeXcolorrgb 26882 12643 a Fg(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 28539 14576 V 17800 14620
10783 45 v 17800 19169 45 4549 v 18509 17054 a Fk(t)369
b Fi(=)21089 16156 y Fk(x)295 b Fh(\001)g Fk(z)p 20861
16744 2818 45 v 20861 17965 a Fi(3)h Fh(\001)f Fk(y)23153
17582 y Fj(2)p 26174 19169 45 4549 v 28539 19169 V 17800
19213 10783 45 v 17800 23965 45 4753 v 18509 22109 a
Fk(t)369 b Fi(=)20861 21210 y Fk(x)295 b Fh(\001)g Fk(y)23241
20728 y Fj(2)p 20861 21799 2907 45 v 21178 23020 a Fi(3)g
Fh(\001)g Fk(z)p 26174 23965 45 4753 v 28539 23965 V
17800 24009 10783 45 v 17800 28804 45 4795 v 18509 26689
a(t)369 b Fi(=)21178 25791 y(3)295 b Fh(\001)g Fk(z)p
20861 26380 2907 45 v 20861 27601 a(x)g Fh(\001)g Fk(y)23241
27217 y Fj(2)p 26174 28804 45 4795 v 1 0 0 TeXcolorrgb
26882 26739 a Fg(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 28539 28804 V 17800 28848 10783 45 v 17800
32049 45 3201 v 18509 30846 a Fk(t)369 b Fi(=)f Fk(x)295
b Fh(\001)h Fk(y)23109 30364 y Fj(2)23929 30846 y Fh(\001)g
Fk(z)p 26174 32049 V 28539 32049 V 17800 32093 10783
45 v 47992 4800 a Ff(___/1)p 1 0 0 TeXcolorrgb 48228
6792 a Fe(F)-123 b(A)369 b(3.4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 36121 54804 45 v 0 TeXcolorgray
24746 81281 a Fl(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fm(F)-239 b(A)717 b(3.4)g(-)h(2)f(Ideales)g
(Gas)g(-)h(O)-60 b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray
-741 4800 a Fl(2.)p 0 TeXcolorgray 651 w(Die)478 b(Abh\344ngigk)-36
b(eit)477 b(des)g(V)-108 b(olumens)477 b Fk(V)766 b Fl(v)-36
b(om)477 b(Druc)-36 b(k)478 b Fk(\032)e Fl(kann)h(durc)-36
b(h)476 b(eine)h(F)-108 b(unktion)476 b(b)36 b(e-)921
6792 y(sc)-36 b(hrieb)36 b(en)623 b(w)-36 b(erden.)626
b(Bei)e(gleic)-36 b(h)g(bleib)36 b(ender)624 b(T)-108
b(emp)36 b(eratur)624 b(ist)g(das)h(V)-108 b(olumen)624
b Fk(V)913 b Fl(eines)921 8784 y(idealen)434 b(Glases)g(zum)f(Druc)-36
b(k)434 b Fk(\032)f Fl(indirekt)h(prop)36 b(ortional.)888
11330 y Fi(200)221 b Fk(cm)4757 10848 y Fj(3)5942 11330
y Fl(eines)657 b(idealen)h(Glases)g(stehen)f(b)36 b(ei)658
b(k)-36 b(onstan)g(ter)657 b(T)-108 b(emp)36 b(eratur)657
b(un)-36 b(ter)656 b(einem)921 13322 y(Druc)-36 b(k)434
b(v)-36 b(on)434 b(1)f(bar.)921 15867 y(Gib)g(den)g(T)-108
b(erm)433 b(der)g(F)-108 b(unktionsgleic)-36 b(h)g(ung)433
b(an)g(und)g(zeic)-36 b(hne)433 b(deren)g(Graphen!)921
18412 y Fk(V)289 b Fi(\()p Fk(\032)p Fi(\))369 b(=)p
5400 18412 15749 34 v 921 46436 a
 currentpoint currentpoint translate 1.59503 1.59503 scale neg exch
neg exch translate
 921 46436 a 1355 46436
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 199.8747 a add def
/d 0.0 a add neg def /h 141.79008 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1355 46436 a 4983 43911 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 16 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 167.0936 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 9.10828
T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 14 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 118.98378 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 14.22635
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 167.0936  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 167.0936  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 118.98378  def /dT 932338 abs 65536 div viceversa
{ neg } if def /DT 2. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 7.11317  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 7.11317  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 118.98378
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 167.0936
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 118.98378  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 118.98378  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 167.0936  def /dT 596920 abs 65536 div viceversa
{ neg } if def /DT 20. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 0.45541  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 0.45541  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 118.98378
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 167.0936
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3738 44196 a Fj(0)3267
43188 y(20)3267 42180 y(40)3267 41172 y(60)3267 40163
y(80)2797 39155 y(100)2797 38147 y(120)2797 37139 y(140)2797
36130 y(160)2797 35122 y(180)2797 34114 y(200)2797 33106
y(220)2797 32097 y(240)4748 45257 y(0)1105 b(2)g(4)f(6)h(8)870
b(10)635 b(12)f(14)h(16)g(18)g(20)g(22)4983 43911 y
tx@Dict begin  { -30.85345 110.4271 } PutCoor PutBegin  end
 4983
43911 a 5724 49741 a
 gsave currentpoint currentpoint translate 90.0 neg rotate neg exch
neg exch translate
 5724 49741 a 433 w Fd(V)209 b Fj(\()p
Fd(\032)p Fj(\))314 b Fc(in)f Fd(cm)10779 49429 y Fb(3)11554
49741 y
 currentpoint grestore moveto
 11554 49741 a 4983 43911 a
tx@Dict begin  PutEnd  end
 4983 43911 a 4983
43911 a
tx@Dict begin  { 132.782 -14.04335 } PutCoor PutBegin  end
 4983 43911 a 610 x Fd(\032)h Fc(in)f(bar)4983
43911 y
tx@Dict begin  PutEnd  end
 4983 43911 a 1 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.6 0.2 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 0.1 def /x1 23.490720118471412
def /dx x1 x sub 199 div def /F@pstplot (200.0/x)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 7.11317 mul F@pstplot 0.45541 mul } def
 /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy  dup
1.e30 0.45541 mul gt { moveto } { dup -1.e30 0.45541 mul lt { moveto
} { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not {
/x x1 def xy  dup 1.e30 0.45541 mul gt { moveto } { dup -1.e30 0.45541
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 1.2 SLW 0.6 0.2
1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 4983 43911 a
tx@Dict begin  { 17.5106 52.17587 } PutCoor PutBegin  end
 4983 43911 a 572
x Fl(v)4983 43911 y
tx@Dict begin  PutEnd  end
 4983 43911 a 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 23480 46436 a
currentpoint initclip moveto
 23480 46436
a 921 46436 a
 currentpoint currentpoint translate 1 1.59503 div 1 1.59503 div scale
neg exch neg exch translate
 921 46436 a 1 0 0 TeXcolorrgb 4537 x Fk(V)289
b Fi(\()p Fk(\032)p Fi(\))369 b(=)5570 50450 y Fd(c)p
5533 50663 482 45 v 5533 51431 a(\032)888 53518 y Fi(200)h(=)4753
52995 y Fd(c)p 4722 53208 471 45 v 4722 53976 a Fj(1)921
56064 y Fk(V)289 b Fi(\()p Fk(\032)p Fi(\))369 b(=)5533
55541 y Fj(200)p 5533 55754 1412 45 v 5998 56522 a Fd(\032)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
4800 a Ff(___/1)p 1 0 0 TeXcolorrgb 48228 6792 a Fe(F)-123
b(A)369 b(3.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 60169 54804 45 v 0 TeXcolorgray 24746
81281 a Fl(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fm(F)-239 b(A)533 b(3.4)g(-)h(3)f(Gleic)-60
b(h)g(ung)533 b(einer)f(indirekten)f(Prop)60 b(ortionalit\344t)531
b(-)j(O)-60 b(A)-2617 4515 y(-)718 b(BIFIE)p 0 TeXcolorgray
-741 7823 a Fl(3.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)488
b(ist)i(eine)f(F)-108 b(unktion)488 b(f)i(mit)f(der)g(Gleic)-36
b(h)g(ung)488 b Fk(f)142 b Fi(\()p Fk(x)p Fi(\))463 b(=)g
Fk(a)333 b Fh(\001)g Fk(x)35182 7341 y Fd(z)36046 7823
y Fi(+)f Fk(b)p Fl(,)490 b(w)-36 b(ob)36 b(ei)490 b Fk(z)523
b Fh(2)463 b Fa(Z)921 9815 y Fl(und)432 b Fk(a;)221 b(b)370
b Fh(2)e Fa(R)434 b Fl(gilt.)855 14352 y(W)-108 b(elc)-36
b(he)621 b(W)-108 b(erte)621 b(m)-36 b(\374ssen)621 b(die)h(P)-36
b(arameter)621 b Fk(b)h Fl(und)e Fk(z)681 b Fl(annehmen,)621
b(damit)h(durc)-36 b(h)620 b Fk(f)763 b Fl(ein)921 16344
y(indirekt)434 b(prop)36 b(ortionaler)433 b(Zusammenhang)g(b)36
b(esc)-36 b(hrieb)36 b(en)433 b(wird?)921 20881 y(Ermittle)g(die)h(W)
-108 b(erte)433 b(der)g(P)-36 b(arameter)434 b Fk(b)f
Fl(und)g Fk(z)59 b Fl(.)921 25418 y Fk(b)369 b Fi(=)p
2855 25418 15749 34 v 921 29956 a Fk(z)428 b Fi(=)p 2965
29956 V 1 0 0 TeXcolorrgb 921 32501 a Fk(b)369 b Fi(=)g(0)921
35047 y Fk(z)428 b Fi(=)369 b Fh(\000)p Fi(1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7823
a Ff(___/1)p 1 0 0 TeXcolorrgb 48228 9815 a Fe(F)-123
b(A)369 b(3.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 38632 54804 45 v 0 TeXcolorgray 24746
81281 a Fl(3)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
