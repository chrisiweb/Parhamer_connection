%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktionale Abhaengigkeiten/FA 5.2/FA 5.2 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 08:53:19 2017
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMRoman6-Regular
%%+ LMMathSymbols10-Regular LMMathItalic12-Regular LMMathItalic8-Regular
%%+ LMRoman8-Regular LMRoman10-Regular MSBM10 LMMathSymbols8-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktionale Abhaengigkeiten/FA 5.2/FA 5.2 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0952
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E08614769C017F6D4F14C52D7189D4AF8CDA367D8B04CA8D3F2307C
0A7A179419A80695912F456637F539123745CA8E696E250E0BA6B7C6277394E5
98A8799C29B6272613C152B0CAB05F3C7795791EC9AF2BDD416861A3D13FA858
BCB6ACF5BDE40E5DFBC1A171A7280E8FF4AC0D4C8A2199E9E2BAB5CB9131A76D
EAC166A7C449A549EA5111F1750CA2C6E1EC6F00CB6C62BA52D17FC66E06ACC9
1E6B858F9393AF9AA5E69F799E01D301B647DA57225C2920E3BCEE9D09CA5C60
F22B07F24A26DD8F4D6F9C78BFAA8D12A21531E713B80CD03A5FF4F3BBA2AD82
3BEF7DA8C97C30F1452006AA3B1A168483F6EDC4089ED02E567923AE6DBBCCA4
8C246A080448200C2A29C34AE6255BC79B73AE14B980A7C357681BB0962894CB
DA32FF2B70B21AF4D158E0F74652684A7150D0967F83E13EBBAB33588541AEEC
0DE8C53851845A44FFB46A93CEE3E8A0263882542F7F103D13C367EA8E1ABFAF
6486A9DBF6668550BE7858F5790BC87C66492C0FD34DB08EDF842E1AF58A09B0
85A9B7FA402029FE2439769D67DEBDC8AD8C861E90E5322951A2904FD702766B
36916DBA8F9C96141BBF4788FA435556B2B4E1B37DE4506ACC4224CFC00A8F83
33941A050B51B9508758F4EB2DC074D799F5116296B8822ADD743A043F9A6426
88D10767A9F99A072BD4C88CB579B34687BA4953B96DBA29F33211B12A0215F7
5F2F873E5074A7D593DAD0EDD97270FB9A87BE870321A49958B10E3353D075A1
E740C054E9AA191CC6A2B8E854AC7E02D6C53ABB1608ADACCABE3D5AC2F894E8
5E234F72A1C099901DE1E49328D413CEE1295B615F37F139B70238D0C3177995
99A49939640D06478EF23B0FA6C4056FC2D15FB7800AF689C6868DB1E0A5D946
81993A3B3C100B5FA02EC334CEE85D1801AAFFC4A9253F6BC832A0E63EDB6F31
07FCC58C94F34096603C9E8E3719950691B4B5D8C0BB08883E09585EB7530664
C79582CCDFDDA4B4E487A57D8207DD18420AF0A75C5534B47DC12F571F827CA7
B93D28D1B195DACC47FE5FDC29EDD6C97DEF92E40FA9F957D6EC2A2902F7C4D6
8E837E7D573068C55D4470801D8E2D6B5972D30B54C54E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA853
B843CABA76BDE9582090299F423519EE3AF8F83AE7F7828B314B6E36E9127419
F274E9FBF5622C5E48D7E95664D6C0C1006661038CF2C93BEF1DE34A163A2C86
693A13F4D0F052D2E183F36401F0C29862BC1B36A086524F76C7EE2C6D436A23
7009F146F1756DCADD3F70C51FDCE610E30C0F4AC538A2703423A07976ACA74C
25F4CFD6A92969E206375FB0C672E45948B0E832F2BE688EC22FEEB3E06BBC3A
272F73081A30830AE4214F2F029918FCA40BAEBED6299EDBECA01E08F27E5627
F53BC56F4AE7CE2D6273B27323AB829E2D51672A4990E3AEE84331583A99DA4E
63610AF8F10C50FE6196E3F4C1E4FC9BA6BE0ABDC81A0A7BF6A5792A97BD0A7E
7BBD31C3FDC01D734550843C8D84C6CC0B492CD1A6CCD57428F03A863E959C77
457D401028FD00FFA9BC422FD09D8B8A70446A61CB256A2FA0B59A2646D9C5FE
961894DB8B315C52008B4416AC35439E010BF90E43A05FCB2FBE8E62385E220E
588B7FE5509F1BB71150E159D01D24EE28008D4213227FE9BCAA34364B1039F6
BC142AAB19C8E9B15F0113781DF9C9B3BC145955552A901AEBA588D39D7E87F1
CAF27D315E168807021B0CD1B2CE13B611A7B5FC28DEB4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE279918B0B31E08031DB686D518B4CBB8A4D0B
EBF6750A452A7F706EA676E3B3237FC5656B29CD5A3A04F82AC871B526CC28B3
A61D985EEB3610FCAA433B9C6D4683C512F0FDBF3EE6FF552D7BF0BBBBA37050
FCBE3F164189FDC8446ACDE8D0D4050278151B46E56AF826A0C2E9389C2B8BB8
E38579D281D5142944D3322E1C66D456E4C5DD727AA41FA5B369D5E10CD71832
A7DD40DE855B47289C449B6AD8D5F1D557102050EDA5F1641EAAFDDBC082E579
A06D8A3A323458808BAD0F4B8A2BF406DBAC4C5F555EC96E760C8245A1AD9F50
881DB475F892F868823CC55D4859C09148529FBA57A392127B68F5366491D1BB
097D8FF4A71966D42DD988F48C8A1F4DE0449E6AAE79500C42B4EFE4936D0D00
0FB339115493C54BA1B0981AFE60C32AE5AEA6F1BA42EEAD2C89312DA8D4EA9E
4728E8FE799616C7F79EFAC5C4F5BCA65317E45DEAF86873DBD525C29DA1F2D3
3041FFA2445CA658CFAAED3C30CECE4F2514A132C95F5CBCA3A139F60B929FB8
72EB89B9E71EA6161CE4DC61D1F0FDB69AC593886BB0459536ED20609422AA71
AB51589A018331D25E5B0F5E48FB91D15C10357563DFE608A3CD20A80D08E270
1A520E35CC383CE5CD307D419B5EB603FC44D6869D4A1731673EB4D084BB1534
7693FC31907FD6094EC7065BED405AEAFCB4783DAEC99BC7A3A82EB333E78317
ACD72DAA3215E2C2823903980506A9F523F673BA8CF49FF629186E5AE8335042
BBEBC8DCF193CA3D40E5337359272C890DE990FA8A632DA2E3BC27F9476CB699
295F324F6901C647D65547A0EC71D4169ECC5A9AF15C361F4CA0CB8ABF336E7D
8DAE03CB25E6664A35015FC9684B7899AB6E46C2AC119FEE2CCBFAE53B96143D
E8C23DBCA777AC4E842F3A5247CD38F0C8DFC61D9996A8FBF914209AE12FA680
17DD0820EFEB02CDE5BF84E5F1E8C8572A5A86D808FF1497362CC036695A3B1B
CCFCEDA9577FB496F376710C86A02109B864FE34566E17B4A1A09F9BA10DED06
0F5AE4AD3C94DEA662B7342EFDC90B3BCAB589A88641B4C53C0D65940F2D3916
FE46C254C25AFF36E0A79983B5D27B079F4B1FE2A89AD72D1D1AD2BF8BC6B31E
4ADFC2A90B9A7B70258F993C87F2C75BD72B5278CF84E2A883DCF21F61FC2EE6
DF51A16B4969B5619E2B15FEDB0F7B5D8690F5323C48054E47E3F61DD358C698
35A31914818EF301DB98A91C6F34AA573BDF47829A0BD0C1FF5D6BAC2210992E
8C115F926BB8BDD04004EDACB8E3A599A56D93AF6603E7BE95D2B9E8B9F50EFE
02A94198A795EA3AA8F36F17AEA7B3CF3B80E235C0C70C895EDF6B031ED3CC1A
7DD250065F3ECA5C4583845A6E0F89C9EDC2F8737A0C119FC35E435A69079A46
C84B3CF54BAAB62AC19D25E46C51D541D23F9D2633D0ADDAF128E4E336E41C0A
F1E31DC3AD15631556A6C760A49679FEF8377A04BD2709C556F99D6D0A7E6D0F
72BA8FBA57162992D855DC8EE82E1FD21984D255DAAB15D2530F5004F063AD76
EE2FA09287295C79AB17E0EF4C7AFB5ECDAA96392891C296D28D5263EE631BE2
0CC1F6D56A03DFB8DF16CC64DC2A4BA25C78CB3BED5E7AD9383F870121370795
8220C6EF8004033A4C316ABB86A95F8FBDEF27B9FC1AD3259CE2A9E4027A59D6
FA0607168B4145A22A5CDCA376CF8F657942D643E7118C6FB8485C3B49DF8D5C
B26E31B287804D9E5DBE8300564D6210CE95546E90A839440D5347EFC3DB1019
7E7C1F9FA4153F56D8354C28DF9541B60056F95693A5DC3207DBCBD73B067552
BD50DC53426FA7629E8518074632F6BB0639E2AA1DBBF34708FDB80ADF685477
F1D1B294824781CD883EABB77A8D8A93CE85F961413148C812BD4323EB029D02
1211373CD1ACCDACF821F97F498371BAEDB7B887A8C6479AECBDAD3753FE1D35
BAD23DA4DC7FC3B4C147A3CA6B939B4B19E81AB223EBCA7E622D460701760E74
95135D6EE1215286E75E64E9F4333B259C51DB04F83FB8A8CFF5EA08B850563A
283BFD9FEAA5AA98B091AECE8681999D7C8CE7081C63CC2F99FBF847E30932EC
89D7AE31C15276590ABC46672EEF02B2AE8F89259944B1272B1259D760D7B237
396F4F3D80745A2E1EE8BB1E2717DDAB52753B36705655AF3B0E97AB1E6E22EE
5A58C7B3B5A46A860FA2AF035F558B5970DE1368D2F20663BC22AEBB8393C4BA
41857657A780F301DB98A91C6F34AA573BDF47829A0BD0C1FF5D6E3E3E23764E
9A5DBE640CA98585DA2A4AF9DE5A50460EE4626641060E55159270B4794F9C09
45FEAC295D142BA5CAD6BD84A5074B5832023E809B80408BB9B61C2AB51D8CEC
6E67F64B36C58C36A88F60969A764BC3650C9F608A3D911E2C01E031D302E806
1FD13C0751886DE01BC4780E971D3952648BE3ACB42BEC6D5B5DA0CAF19F96ED
F6BE77ADAD22FF83BD861FCD07E1302D6A3AC106A2E43A7E81959D74397B05AA
139C11D8E49A593F43BFE84E32554E529BFFDCE98C901A79E3E0354517C3D95C
E9C02C72E8CDDA3C6402606AD16969621B7B86948DED33D8870DE90DBCD8AB39
72CEF5BC502DB98B9C81A16F71982B56E3D30B195E00D83250BCB311128B7FEF
549C4E2A1FB5DA9475D34528238FB664FACB2DF3175DD6744B6F80332CA317C7
C7F1E95469943D8FA54558F298E38B7C47A25EFDB18D279D752527A0A701EBA7
3263002176824B16E5192FE1E7C6EF0989162AA88D31807317CEF7334C32EA38
CBF518502AC8917F8C0C4DDE1AA36C332BB853DF3C8BD16760A91B02D5E8D679
C227DA8E3207E226A8165D453AEE422EFF10547CC2E44F566E8880D7BF75598B
33B68992E7A2F38FC0102D37B14D7743D97690DE073F312A8B3CC3ECC121A487
2C7A2E643F42D81DC81DB094A39F0AC8535F07BA31C71CA5D158A149F9312B73
E4D32170A9DF0ED814B56FA36CDCE4CA26E456B7F80E01E965F2ADFE1F47E8AF
B7E2430FF5C29D2907B641B4829531FB2A32A4C0367F3CDAADB9A370228BDD72
D36A310B38B163A986ED841B89F943386A45621E129B313186B14136429634E4
766722F56E044B37BC6D86BD2B25404BBDE5111A09F2F70FA32542FF1E83E1FA
20A5DA57D8B97288C1771381D3DAF5B148F098CEE2A1576FA4E08BCFDD164C8A
2DDB6E607138E02333C892AC77F693FF450B0BDBA1789FBF48822B33BFC5FAD7
3A5F027F88EDDC45179F7225B6871B570EBE05C9D95D8F947BD0742B90BF5407
FBDD9646E0166601B3481A982BEE3ECAE668C682BA7058FF2B516EE6A1F62AD7
88D7A56D82E27037A9D4634A52602A4A406CEC3E6B836FA313F76E5D3BB8FDB7
30DA86C9CA2049211DFC67FEF43680759C5753F9AF573A9C560C53F4EC10F01B
24BD3061707FE66ECD490C249247B1EC843A51C18F15B98E16EE5DFB6E5EC238
5A2B60667E25B40CE5F8CFB9AF2BCA1DAD558C1F217EF746F550BF0657B5DC66
0728C942A87295109A90C9155DF0BE682193E60B2B5FED8BF8541250B992E39A
E2E7E3C936A06A609F48029307D8249FEAAB72F6E1CC2C7A3875079EFB568ABD
139F70C1EA8869611D9D4D5ADFC1463D664FAF1E15D2819ACC236CE307310AA5
0B8B1F887BF840312068D7236450B39F6F363E3AB6F8FC5A8BDDBA070CA8F456
2F321D000ADC343E2B1931854355DD892B5A163785EC96245A45B4ED6B5BF9F0
750DC175E04BED0223734E5A7F68B96A1184091D122ABB1E3895721160D7C2D3
174873F55307E929B392CE3475109E22CA5A270A188A7649D8D1437039443AA9
46A7630D1877A6697C2FD31E9717FE5EC1A550EF9E2FDEB0F43558C7981EB189
B81F8D1BA098074266404D32CBE9E1B8220BDC4409274CE1CD02D148724B2561
AB1E54A672AC2EF7F6BD91147CE9E15E1B72BD078B9B595DC4936FCC0467525E
BA8965CF383F4F4AE6DA98D1611D05E59ED9BE06C7BA2AC655DCDFC20968F5BD
12B078701E01F539C74A0B5D6AC9CB4E4BC1D7C2248A8F6E5A7695FE9B0A14BE
253B4345768F4A78E26D7BF1AC08BDBB8351C7F5C1C66C9F9BEDFEE780E04042
3DDC5E3B4876FC8A9E07B69FA56A32CEBA6D7B35526797A8C94EA0723B306240
918211E0EEF0934AD0C63700B4526A98631477A19FE5E168BC242740D8C45888
D4A0CF8AE610E7017E11E78CF5E7141AB9009DC1FB985090CA164DF0AAE5DF99
7D62692FFCF574292909EE79FE294598B8493F9991DE93CAFECF7231EA8FB209
39EFAC81F69FEC9D92AEF953CD07A639CB7F9A7CD9CC027EE23F3B3BC61A40EA
57044322C232BE97AA1DCF6B0E4DCB2DE2BDBF0495BD0ED7DD0EA7E72267A508
FBD0C338ECAB53C74DC4E883803F2FB7FB3A3A802092EE50089F30F3C4ADE4D3
07305271D998208A83D58F3BC00D46513F0358C43A22C413D9A6BA6B3E100EA8
03E2F0198DA96155E68E8F6CDE3F99D19B44295188865207E8C79FE8C1E98BAC
BDDB68AF7CCF8E9071B691DE0DCDBD7CBBF0BF03BE50426089EC7071143F5177
610D4C2683129C912ACDB47AECE3F9786E47398891C3990700F3123E5BB8ACC1
07D8B722419A9C1F8EBE330D7A360FBCB6540E7EB3B2ED0460F81AB38B9240BA
E845D47A0BD6760B31870D69C4C15EEA09E1831354F7C4A16212A067BDF0ED84
C9A5735368A09CE46A5C17CCAC557BB69FD42494D5D2B9C1ED812F3CCEEC1BC0
79E837DCF4EB4E495547C25D2893E35E24435F55A2D66CE9FDEC1A5F81FA219E
49C2F4D2C8EC80D9E187F9E15825F57826DDB17A35CF2E4C380E50E1797F8558
26EAB926A051DDBBD93F907D31D6709284C86F0542486710BCF518C1B5D1E6CF
23E0D97980F20EFD24A6644AA26EBAF342B36AEFAAAC0AB3727E59F1642789A1
765F02944B8E689BF03404F5426F7148BB8FA709AF1344271173529372AF6DA3
83511770EAC39ED55DADB32778CAE943CE6E928C9521FE45A04F184800733B13
440F514AF796BCDD85974E0AEC9A164C369C237DD28FC4BE2843036E872B2A03
163F0CAD1BCD5F7FBC20299D5C6FC1EDDFCE777B796FAD72EEA5713D78F437DA
E50160FAC28C1C21FCF83DE1B5516CB04C7CABC1D37D26ECC85EC180EB8EED1A
6E85129293842B429B1AFB33D68BC88143F92B5D64DA3F8DBFB0D329C7450A21
E4F97C8FF528ADC2F97F87C592935C07955C1F1B0F125261DA0D2F7312CE5B3F
3A1DF65DD60AA679945BCA6A71E4329DB73E7F29098787D96D89D74796C6908A
EFCAFC2C9DDFDD855116AFD66EA16F96AA4B9F040771F86CE98994E113749F20
47C28A0906100EF57663A483AA7375C850A31668037014979D53F051CBE5D246
FC0CAC7850013FB3F1B075D4754A82A584DF54EDC7C8DB59B77CB7A8592B7CFA
7D097BB4BF8EECC6634A8112ED925C55E4B0DF0E5BEE4B29E5DA8177D46930E3
E90AEA7B324350D5926BF3AAB7CF462B8C46CCC43F2AAB8ABEDEF76AD7F14CB4
16CC957E016A4C72A6A2FC3DA24AF084E7544D8A76154942ACCED03A7785D88F
EE716F2A7D77A990393CA5CBCA996BE2E5186292AE634456B428623FD1E62155
5BBCA26C986ACA69714EE280FFCC692113CC15C94DDD294049748B473FD5F4AE
9C321F8D3A7609539BB1E313BACC161E4DFD3BBD84E1216F1446F95F7E0B679C
0D5FE02E0CF9AA45628844A54275C0E5894655E7B06095437FEF27B81EB14663
E3073EA68F60F1D5B1A01C9D57853580E6F180343DA29EB6D4908FC8959EC547
4049A693CBEBA4E07CB9B5D8DE5E0B1C2257A8DC4E816B78B9EE734118C99128
2B1240D3E464E928369FA93FB926139676774399E370879B537E40FD383EFEF0
2E3CF25222317FA36FFFFDC8DEB8DE95405EC7DE4C780BB7B6AD8195784DE96B
ECF95B625F9BE81E96E51EC9602D4654DEB38E8E94225D8F864E791EA66CE3A7
B80CCCA6788AEF25264822AB4D94FD51449F12FDD58B76CFA594F3223C22C504
5B028700C8710E6F425220C975AF0249835F399A5539D63AF043C136465C5C6E
DD6AC0425D8F374CC51FCB15600FF7A49A4104BC29A0D7D3B555652AD4E14D41
04669F132B4584E73C21F2C83078F5D96EDC72B7B9B4BCC12F4209B1951AF23F
F685C14584FF171362B3551FF7356C84CF0F2434A53A3873E1326AEFC575FAEE
1B5EC42CDDC027C7AAC514A42B45A190590663C03DB348ABE792DB5E7DB73311
A007ACCC65F1BE0CBB445E9DC99DE3BF32B95CA40F19FE0EEEAD46783F79B52E
24284B8FB0941BF71DE5A8C04AC209B2BC1057E1B23131263F844B18EA91B956
02F465D1AD4EB85656E66D39C6D94C1DFC732A196B89AF8000D828F0B96CD1B5
C4C56944521E76439B5DCA7732A29F37A08A140F8C0036E35125E11CFB8F1E39
7508BCB97A2A87578E15D147311B7C07C17737878305488298DEF3FCFB79A08C
1884C223247C65FA99AC139A69ACDE989B3FD5A2D5C0A6D3663AFF2DE36A2249
BFD2DF460161D3EA5C1B998A83F2F595DEA5468CAAC2B78E5A1993F2B6373BD0
E80C86A751E25B22ED67B8950124818EB258558D55DEB25473A60B53D4B46DC4
CE9B9FF1A7480F80EC4A178CF4CE94A7EEF8762859353E43AF38D0D4E667A801
66DE5FBCEE3580C618C1814F112E445F32C0970817BC4050803AAE8411778D4F
0A4E88A0C372EA9D124E3E174D7A6E4AC41A6D48DEE36C9F7327962802952738
032819124D3640CA3A1C4A1EA19A4B5C54680A95BACD1D974C8BD85FCC3E5A5B
A3ECEE5920BBAFFF7CBB603DE772DED3D1A91AF4D9F034FC4E903FC910C2DD83
A9EBCDDF1610B2DBCE8D49A89DE2733B985650ED4AF7BA55E5268D7DC50499FB
10A0A8A89270ACDBB7167F1EABCEDD9532036DC8B0E3082C0CA07D5E9A31F28B
335C772B3FB6E71E7B85050753F3D80F49365D5006829FED63CB9571B219B383
0B4C3BC3B926DD8420D84FF4FD6D3263FB9E97AEFFFE3C5FCBD9790B301E9CE6
2B783B68773C3A3673AF8F575ECDFA99FD6AC36D436B89F0FFF57ADC4D7D461E
CBA91D8497F341825ABD849980EBBAF61719BC50DFACBBC2E6F6CA74B31EF41D
3CE547C09DFD50B9BEA18D947C78041EE981FF38A306FE6BA6A35630A7D636C1
FCDB936D8F9829E91C20F24FCFF3B8645ECC3AD0C5EA2C6E6490285C3230F195
AE7E6F4D20CAB9F8DC6E18CFAF1B031677089C11F12C5F8A59DAB86CE7477658
A608CB758F249771AE119EF37404C17535023E73FD32A1EF0C6595575A788842
2B0051C282B4B49CAE5BEF89C4830CF8E3071B1378999867C5F0970BAAFB320F
87FC5D14039580BE01C8B223F173BD86C842D1C9ED10B006C9498D723A6E6E4B
3D1F7A62C216ABFEF928F1E2BCE051279788C2BF2C5A059989302773F0C3AF78
609DFD6173CB81DBA26D9F0E44A8E0BE7578B7A682581FDD7668540F756B0FA2
90D7710104D3FB7D11D7DA737251FB47D0B21212E70DAF86A6F2EF86E2824686
D085BBED345F7E6EB57D050B66ABF0B89AE754BF7F8203F0C857CFAE8A868BC6
58413CBAE52F30E55B902ACC35DE87E70DE8EDFE7D803CBB126441812F2FE368
F51654EF115AF46CFBC3800C3ABB4326F97319F3EC1C7389F3C9A5D9E476DA32
5EF015908A6A5B958CF632FAC74FB900E04B0B13B26BFA8A80D7D9C61E853272
B9CFC744A71B4001F9CA02A6E5FE2C44486145F773517B790FFB540FC1AB69BA
768310F537D16FB73F6F857EF419616A0D2E3D646143431C318824FC38A41EA7
745C4CCA4E75E460FBBB1875E59CD940B468FC2DA90F69D361C31826743EB62C
444271924C89E11E79BB215541E3A478F0933EB129EAE44484E084BDDE7F825A
F68920F678B5C4584A1EAB39443FB4126192FE52BAE06F64F51F736877EF6935
ECA18A5F86EDFFDAB7E4DC0F173A13F0CA0B415712169FDB95DA44EBE94ED148
050EA8B17C7BED0D9F20225C3C204A716744D3D19D536F23631F2C05A884542E
408BFDE756C91AB084E55076BD130A5C4DC3BE1FDAFD9348548BA85064FEA8D1
5C17D8D796896A9318D430B2342B9D3806FAF0FD8C3F73BBD5F1FAD85D58F4F2
0D8814C3C4F34403C404C616BA3D47233BE72E4B676F7A211F72225DB3DB146B
DB01C7EF6BB5C62F58C1E729F224EC05FB4EC009EF48E7E56CA7AD3C50F55A04
1447594422EEFFACCE6AF7CC9768F720AF8E10B97F7BE3A270405594D3E06C17
B47719E2678D952E7AE2B08EF5ADC765E59DC22D831094E3986C1F01D42BFBF8
A7CFA315D2A1B0FA5117C21FB2DE99DD2C1D04C2BF832196D27869EE01D169FC
58F743CD16C8F0A7582D5FAADE6BE18603642142C01F7924228A89E0645EA557
455F1027A249EEAD5580BB3D24651664E84B70EF18FF2BFF7603BA3CF4C6B4C9
5926DF2099D19B442950D8AB6B10F2CB000A0D128B232D9A9E24006A4FCB9FDF
2D13FFDD939E001AAF11F61EE5D6A4303ED46CEB347FF787F3B3D95ED3FBB8E5
63C2CC64E2DA3631AB809AE5E76F88B4B726AC41950EE2F482555BF740EFD19B
85536774CBD1C137BF68BAE02943FAEF0D36E3CF03D2E7C4D82D9E93B77A0E40
9B4D5E17600E1E43F5EA1F88493812847848165C1548740C594BBB157B9A4291
7B94466C45736CFAA9723223CBAF554ECBE4972F8B408FFD530B29D86D466F2D
1A2E8D3BBFE5B60766FC706C4DF71BA27A4F68E496316C1FCC57968F790C5E79
48B72C4AEBA609671339A0AEA21D2A485E14007D8E4377D75506A96D9F8DAEAA
879FF07E6137447A43961425A18051A0C0C3881682FBA1FB7D44FCB548EE2EF5
6D3E57F221A0D2242740AD2C6B1DB8C539FB20F08257D40F890FC7E35E82992D
202FA0F4243D324A5983198F2A73CDBD54D8633E08ED08F27E984ADFC4099E16
10A8F1ACBC0DFE56DEF2E75CF68920F678B5C4584A1EAB39443FB4126192FE52
B6ACD7EB3AF8B955FD3EBD100CF8869DC7CCA5CF8B0C5A42A669A86933F8B05B
9236B04C3C0C757CA37AFCBD555E2F519849EECC61B4FFA86ABF086446AA18D7
1F37044992D6FE3237635C58967037C7008FF67D6ED281B9794EC7BF14B5D93B
49BB30825F972433A4B91739103EEFC3B4A83F47864D1624747054CC3E674581
B8E889665FA7F7D2F96BB74F5E3F01C4FD8DDC8DEB238A2554A642DE34565067
23A8F726BE1BF3BFF155EBCFBCE24CBF9C4BF174AB871C254B8E7CD77058113B
702B2C13F3430EBAAEB86F6B295849968F489FC8D7ABE2A5C860D9ECB8BDB44B
7EE36B8356A8740617776F18D167F6AD72DCF39081BF38FF9C114D75E7B894D5
074110BF19A25FB469353337AE55F39C5E29D5D432170FBCB19B4C29CE1C9256
73A60B53D4B46DC4CE9B9FF1A7480F80EC4A178CFD0E70EBFC7E2B72320948A9
C1DE54F4AC61F328BC0529FB4747AB61EB86AFC45B70EB42F8CDA0BAB89ACDC9
A880F301DB98A91C6F34AA573BDF47829A0BD0C1FF5FCDEFBEA026619E1EBB71
D61651F11B54FCE233A82D98E15B31AF98893672C3DEF7A733E839622CCF9361
5936A1F0545734DFD39315573A9888A0522A1F918A31C571CA10F662FC0A6B5C
4998421450718AADC5D397035AB899A16CA36601AA0C8052945A3865D41F6872
019CDDD33DDAE45BBB76C8EC67F7132885ED7689F4D0D4F5A7B7D63407279BF5
7D4634F96E28C1F94FC02C79B3E9EAA99EF2DF8EF298786806E9159B3578C98A
E81C073AD4F231647869550C5C73D8A9AE183F083F4068CD684517F642CECEF5
820C6FC3A77F5F55D30C021BD7151232F1B7CF51FF6660A4443CF494BC17A9C6
44FCC9C73820477D3324A450DFC5A23E03EBEAA640CF23D89D1C2F0FFAB141E3
B9F5FDC218C305A5CF3A81942435388ADD4BDCA01A2A600DD87A29F1884E7C4B
715935E2B9D435CB9B04EDE8E06CE9466B313B6255925F7C908937E3BF94DB37
B53A8FF110BB19E18B570DC8E76669D1D95412A61ECE9F3112EFFC2E3FE1428B
2DAA1853FEE27EF30CB0A494BA68716A5D86A42D4AC9B54C9D41E0DCB52E6475
55DC24FEBA1A6971678EA3492A1641851FF8280D2C1BDD3B727C90D83A01C80C
7E195EEDF6CA42F8B32E1766E711FBEE9BDF168EAB3B30CD4F93304E9E0DB55D
D4D84976976A531DC6F43B3E523AA8313C2A4ED52022C5D8E515B1C00F1BDC65
72F468AFA03E9E5100E258F1F9695B0058487B5426761F4D258EAAC34ECAD9AC
58CA06A6C90641725DFABA79257C6496F5915596B31948B3D449E96A9A344C6D
A654AA4124D577D774A217D4897A261017117AEB0E8C8D9AC87926FEC30CE2BA
0C6CCCA12416589FC533154FD33D8E79B4C628C92AF3A011B67DDB6DCD3D5BDE
74E4345EDB25665463433953096C7C0CC05409C9B1B2B808156B223C138CE7E8
AF1736B1BACD469FC37CF091FF8A4427B00164D21F816708436200C6EFF66114
A3F8BF6138BF547EF45B3D8111AE4E0CBFCF1D5B4E0BEB298B81071A62AE7E78
56ABEC91B8CD1DC24AC1E0C34104FF77CDEE3F0D6C30D4059BC9F9DD82CC123F
00F897A1BCC1CDF4692D601ADE5D83133EF0A5D0FEFB9C0EB9176AA65EE3A129
8A8BB5A1E6ED5C525EAA1D903FB4454D07BE4DABA9BC0A35CC617B9E8BB69476
EF2221C470C6DE35DE090F1E6616D745D03C080D30E00F6F43487B15D457CD21
4D05982AE778AEA1330D4DDD264FD3CB9F221FB4599FE5AF10E3513D141C31DD
7109BCA7E9DB45CE19BEE7F28684F2C4E0FC0D4D59A75FE8DFEEC83EE121F03C
B596517EF1FC465570CE0EE6B820385CA367A8284DFC9F1A12A9E6EE68B39465
9A11BFC0ED3E34B67A5ED2C3154FD5480E88E9BEEB2499BF34A46C864A41AE39
961731D322161500E15ADA373D503552C0B76FC3C1CF42CFC3F4C56D472FCFB5
C942F5517FAD1909D38932713638669FD69CF96073C3BB41E21267B2924E293B
DBA71EA4BB8B2A51EC364937FAFA1514D7A7E2FC165E3601882C720C27834570
C10BF892F79B30340EAD8530826BC5955C8503A6BCEE71DC4F50B5B3B4962E06
D9866AA67CD7BBF2244E10185F6D79C4D91D269C6E4A2F66670D01EE2009B8B1
BB2CBC48AC2F425E8150E0A2C212D9275FC498CC9E2C9F57EF881D478600C807
DDC7F0A1D0D8D463346259844571401A131E488A004961B9D77496C0A0C11451
CCEEEE8D687DFEF89A24B00F079E154440FCF2413D29D7315B04929385712AE1
4BA10E2702CAC526593508297A962130FF121C9621988B5909B8DAA7B13EED89
742286B3620DC94A514FCDCB1CE84BAD1779D94C9B4238067509B89C71E9B881
551E150BAE5EAA9920EBC6D70148E8DD6A47962A2FCC9DCD6848CF3FC5DB4E6C
FEEB32602DA2B5FA880C537F60E1394571392C3AB231BA09476C504EF844C1AC
FD30E3C6ABDAABB083F360A7FF5053D505D1698DB2175A63130FCDF172B81136
4183EE54F083421685CE1D1A785AA70597CBD2D2F8808CFCD3060095F7271512
8053E9B14A055D9F688B1F48A2DB4713B15C80A2764EBBD622778943218112CD
853458D8DCFE0B5F87FB1A9C5363DF6ADEEEA9082B1AB14D189C06B5D21D7E2D
DE51A0EADDBBF0BCE98AE75735D8D8135E0753961BB2255BE5E98ACF4BB25A38
30CDCF5ED01AAD97AA7AA98DC6CB5052261D715735810768798F23A21AB7A2A9
06A891187692144C02E84D49BA4784688941FDFD9E7F97A02DBD8119C5CF0B4A
A548F1F5EE792C48D99AB786A3D5D0C5AC216EA68F8F7D3A5BD929EA924D833B
A22D2A9012287D8BA8C4CB4307A1188ACC0DB7DA045C9E582DF0DC455AD6DD65
F47D33F454316DDF33BE4BF722D8207FD68296B4ABB049ECEC181FEE5B3DDB98
969A0D6C120A6621BD68991FD5593F3197223C9E5E06922C91F5C99F9CC06418
549D42176DEA4E100EA61C8048B6413766DDE50E614E2022AFC909284A4D43B5
CCF136D6DF2322FBF59875757C3637C45159BF0E1C358D8CDC3952A5684CAA59
C47C33F7B3E17AB8FE9F86181B23F111FB284F2B272BA1D75FBFD124F2BFC328
DB055CA8ABA2125F364237560ECA59253BA1D99F332378689E939EFCA683A83C
9AD337F4726906EB3D588F93D21723E655BCDFAF6D1B30C9499E1D9BDAD32E10
DA7F6F6B7522BA73EC097E978C1A3277A9E33B6810E923D71617BDB18BB720CB
E08D7F586D9484EFF2E090F2B7B83498F4D84D520D7684646F54CEC76AC98678
B54E6E3A10388B3AE294B3EE43660E70D22D1F9F4F865B7E3D72C20C80671023
90DF6D9D25468C1E44FA0E0EADDC2F494179761C106C684EC5E7511AECA5B6C1
7D57EBCE1572CBFFD4D7CB24653006874B7FCD22DAE8A539CD906C75020C1C17
7F628F8FC7B19054CF4917BC54655EBA7CAAA85783F40E85979BE5B243819BC3
EAE9E2425C10CA412987EC49D8A696A7DC3322D57784BFA903DC5A829DB662C2
16B676DC8BF3605D078CD0364E3DABB886B3CFFA939C2D6437E6FC9CE04E7AEA
2C7E4A824F8054FE402799ED402F8B86C23DF95F6CEA4642F2409E506EDBFE9A
A184974FA35FC77F7364BB75AE2083C7C66E6C13CF17915BE49975B0394B8BD9
364298FEED3B9CB12EFD2936C1B39A7E85E67FC314037C7E13F3D146873CB848
F7B16C9D22BB89CC650B5F64E2C61EBD43DACB4DB6017F17589F9A830ADC6A87
A8ECF7BC89E2A66A0139EDB6BC868259526D63C1587C09CFB052316D4D96E574
40D0CC6DB888F476DFD4500F7D6E49783E9FC958D3954BB4737612ECE7461B0F
A00E3C4B798386E997BB6A8F931D012BC2CF39B98D52BA5FCB423C7FDB8A3F88
03C0342BE9A2B0185656225C2920E3BCEE9D09CA5C60F22B07F24A26DD82C13B
901BF499128ED228A0548CD9FCD5194B302D289E9BF52A984DA973A1690BC030
E6B9994F0DB9A2BCFB820CE177FC488E0908556D21F5AA813B81FFF08BD037A9
1AF669317FF0AA61E1DFCE95DFCA2DADA7BFEA7C740D35C075AFF4CA62754B46
5E1238245E283972604E3D586979262F0FC065D56EB983207F1478ABCD112D3A
CD5F8749D4EDBC5DCF39D8E6BB078AA738FB22CAB1E57CB6870163EA909F25CA
31C33A6A466CB9B777366802EF25F12883D91F721ABD116A40698F26610853E7
FD07547F78C26311866856D9CE093F651CCB5D86A162EB802053D062CDFD3ACD
21F2431580556CCDCCF71D363EB5DBCB6B8E560E9C740446C3D311F71C48ADE5
2E53620833497ECEF488A11DF9E9251C0554FA532AE3CF6B4CC49297C361D721
4CE3CF8764FDEFC9ED5DF5588991BE92E4F67073A75348EEE15DFFDA2503C447
72003487DAAB5D9A5C6DCDF7F981B9F838C1352A05CEF380FE489886299D95F7
78ECA92D58BFDC557BFA114FBEBCF9B8DA5DE015B4A5F17E1A3FAC930A2C3C2B
EBA86CD8754FBF01CDFA2AF9E48CFDB00A1F9F478384EC4CFE5347BCAE3BFFAF
952C80AE99A46FE5E911B5391C8D67CDD3187B1C219ECF06112A853D45909298
E74BF76A741DB0628FA575A15C61F74AB56C301672A0BE31E078D0A011258412
B977B6701E42CF50466C0470B236BCB74B3C640C7DE47E8E70D2AB8488A7787C
D10ABB9A367CBA8CED2BADB20B5545F35421B6DE423A1EF22B2D0A83C48263F8
87FD33B355612DE3DA6F20B5957F6F748928F9156100AF21730CB04A46A4DFAA
157D2569CF91936714A6AEE5697501FA1B5B2A091350294B1A1AE1533EAAC17E
F92DC3567F629C6C028579B8E643B13A8C83AE0A66FA49704D42BDD9BCA2DAE7
7864042EF587A6D6C04DCE664BF83492D16098A964FFE70979C4696B5B05C07D
62E428A3895B80C3119FDF37152EB582AC94ED5B10EAFC22C750752A6B891CA2
AF315B8E1DEF18FEA368F63489F8963D45A7BAEC93DB1F14FF6AC2C483CDC83C
4A31FBA4EA515DB7EB2C8D407F457962C3723BF6E61E3C3E10DE25AE1908F867
2758570A24B86F46D7EBF24DC37681F484DC7088B6E7B1F113BF6CBA03C00D2B
B80CB291F8E334678484A169ECD811831536E2F66A2B9F9683381C56776D27F9
5AA36C2FD5E5514CA68BB67B6D0DAD8CC299A8CB22ACF60EEBE771122518F8DE
E14A3BB7EA013687ED3699AC741303A4F58D99A90B43CB8C1547939EF2F31348
D48E48DE0895325B92D4A4D63EC9131ADB2503521B69B90ECD4C2BB7224E8FC3
5C43DE0D5A4F0514FF307F5ED154EE1E3AE568702079C5036C5C41344CC7081E
8B778B0AAFA99654D0F1BCE51275AA635695BD883B2F6B22C897D1302ECEB47E
EBBD07669E815625BCD3E38E09D1CFA5C82221100BB685C2140498296402770D
C7262C71EEBF9EE911B32E357A9FAF092F7C3D4B36042FEFA70953AB89F48200
54EBB0D8A2E015FB9A9070A5B29F6B69940F415DCE68EEDCF7E1E1A36E82BCB1
0E5E51B131A7CE8E5020518389691C1EA942403339023DBC4A50793CC443112B
ECF3C52D61F311C2EE3444CC6154FCFFAACE818BFCD031062049D5A06F34DE23
35626096EA26D57B94A928E1F09E543C02BAA1E989E1BDDA6F5B1252670E3523
8A3D870A1F0321B90C4DCB60A818EE4D33034070935EC99DC708559F8D4DFEF8
1A9B1FA762109D5886BF9CE95E98DFBE6BFE61D8947254747CF9848901DD6006
62AA1242A493F00F44CD3A74129B0234BEEFB556B3D8DA07F98984334705C655
69101693F0D22636A00F432618538762FC8336BFB4D379696E73B84B015B308E
FB52EB7278A0DDB6BEE58EBE61914102AD4E5AC0DEF18BEF1136AFB878168B8B
045489489D680E10D295F544E3FCF67EA5E71C1A6589A066E3C09DEF8C946669
EF2C286DAB56E327AEABBFC6867B4BAB0208DB3C5DD474D8829CFB026CD53EBD
14D0E86241AB753C32214F6A8B3B924B6F0B443E7BE8D19252843B5D9A3073EF
CA93AB9C60B4696B15B1A0D49C9B2F9CF07D450B0C05DC94EA274219DDCE0C4B
B93BE4158BD4F84D580E64A869F7889E0FA038EB917797D692C993A030F91D13
9E6D3A0D9FFE091708D07B39E9AA44186B40ACB33269EBAB277426976AC3EE44
A0B9C4A91212648C1ECB4A2F3D56CDE16B6609FFC2D4B0BBCB39E9E73ABE757B
81CD6E2C6956477B17B1D1024AD43C1EB0325C16BFFB59E4616B447EFA22C8AD
FF3328BB39EA279076DC8AFFE1D92099E1AE77B2AEAFD75B82A2A9463279CFFD
CB820EB0DD10EA298634FAF2A230634A369986740FF81ECD6153D837C0983422
60C249D413750FA4B723142BB074DCC9B55E3A49B384006CDA79B9B90EA073F4
3ABA5F319D31A2E23ADE6D0B92044B9AC916BF9A6BDAA24DE24D6CD65831B8E5
0C195D06CBD0ACF89FABF737E42204D7CA411E72AA4240AC0159B2BEE2F21ECD
8FA6935F9367B7EE0E503AE7505C3FADA8CE2FA229D61C1DA78B0DBF62A24D47
AE5385477AEF78E4054D332ECD422011A3968D9FCAC28875B34AB84014ECFB20
C5604C70DC9E98857AA358B5F754BC1808797BC1E661EAD3B9310B9F706A8642
CD6EBCB1ED62EB04BCF325EEDB5A9E09F469071BB0F203F5D8ACB7A816012583
61B4583654F891D0E725E80010DDCCE8009580EF63115ED77167F4136DE68EB8
EEAF35EC68871606D4EF19FE7D9A4A08F4BA36665A80C7DA15AA557C55E72735
664CF1752C33E6FDC967E75503D554FA90FE87FF6A55439612805B4180127D39
4BF0B241179F8CEDA90AFAE008585C22D9DC361A0FFF2CC6C99969ADFAB57808
4798D956DBE9B37E12F0638352EAE8A9C56346AACFAD40459F4F9DC93AFD9020
BD28B685E2E5D38C7AEF7CB6D89E3B9F101A5A71706506E71315B27AA869B9E2
AEF564F4DC9C2C483F0D2B4266B025DF0C80782B325A0B3CF63323B51048F325
F95AB5F5B11C33DADCA31A2CD474FB4376ED082C0CA07D5E9A31F28B335C772B
3FB6E71E7B83AE7827BC12E2F6B422FDF15DE326F58C22DBBB9B75A88281CE91
51EF2A4AFE4FA32112954C5B86EF7AE3D01251EDCCB420B5C9593B11A499EB2A
59858783B57BCE2E8DC183BC31CDFC0DFB5D8C14F78D70E6B9048F394009EF3A
7359B9BC53654E4EA1BC3974206D4EF92EC1E601B60C652116A3472CE2059E67
5557E53A7F82EE005221FCD6C5144A85A9C6F9FD6818A4915EAF14592EFEDEE8
9A42A8A74C8B1939A6DA38FCF89EA2BCFC54BB19612DDAA810B682BDA4338A2C
02B3423A0D61F6BBDA5BA84E32601B07293724911F271963907268939A7077AB
632AFA91AC3B5951B557D62C7728D6E3F13BE05939C2A6FEFB54270C0A460B1A
60291840DE9F00613A8BF1EB189EA3198623E2807AD0625ABB835D6262BA0EC9
DCCF5ED1E51A7BDF2238AB4D4080BD7A221A701417E4B05BE3A7A634A3AF9098
84B02E1A92EF3C0364A498186F24D1D7F5607F5C0F40697E3C26E75123AEAE8D
EFA794C79E34B8A905150CDFD8CD3732FE16DE3909DA113261FBD64985545A41
071FAD8EDD01651746F55BAE6D20F11DD2C8438C13AAF1AD1906A8487D16E595
7857BBF821DB8E4116388E7C2CA43C281567835CF037ACE47977ECE696F5545E
F380958DB049BFF3E0257C0292C8A10A9685832CE9CEEB9F0E180D18E9C1B129
81937937B0E438FD64DCD3BCB5CB9131A76DEAC1E627061581E58C7E6E1AD9A3
1BDCEDD8741D0DDF4B50D88E61C8B69B0A58F9C9A9980BA9EF48BC87BB400731
2B4C8F6662DBA8750C164F5D576268275BA0F94135AFB0C35ABB66C7744D4478
0D6F300ED416C5B52DCDDC5AC3E9ED931F56CDC90C677070565126AD56CB4E65
D9B9B7F1BBAD99AAAD749454CDC40CBD7F0339D4128C54E4543B617FA7942D47
411ADA0246E296E2D20F02C44D6A7D43B6C814E2F47D48B84F12297AF2D26727
9A477BC0A83DAACD2FB45F5ADA40B0A35C687AEBD47B97E2543553F1ECB1E684
00C6706D29DF0BCA1B5C649CF209DAFD9E0FB8418D0C93AC7EAA9DF793A62FC3
E0C50F55A84A78AB2B83EF282429D430CE35AA150D692C3EA405779EBEA74A61
785C42D2C746A98194782D9A504B2A0A92D33FEC9D5949D482127CA20F8DD56C
8A500C6E34DE1ABBC735CCD2C4E4103FEB184076F816ABF37783C71E3282271E
7C8D6163DD185B9F341733DD7D909095F94F916FB94C0EDC6802C21B5561DBC1
B19BFA4431E2C56478971CD1441C2957D3FFA255A16DCC32BB7BB54CE2DC59D7
676B5AB120CA7FAFF1EA78D0D6FD12743F6BC297629A4F3455AFF970CDCEE36E
FAAD437595AEFEE8F2884ED4B99E4A6E1D3A4BD9F0B7E0B28447E741364E315E
7A1B23A1BF716407E9F63873237D152347D3AA2C575D1C0CF4606859CE690C15
F43EEED6AA77BD1AF52AB3DA276F632EFFBE254FC47E726FFAAE2C2A15063C65
B5636B62112E3A5247CD38F0C8DFC61D9996A8FBF914209AE128DC314D141F7D
EE6553BA479B6B5969C0D267A71A2DD62E092626A434FDAA2229EEC078C2116A
4D36295BE3F438D6A7C73EECCEC90B036F773A35572FE436EFCFCB56ECADD7EA
C66D120A3911D284DCAE2018F883AA804CCBBFB91897E7F8734C7573B0B32868
06EC59743E29682A4E2FB2FE7C11602CB8D4C3AFAF72544CD891E6D1911BB38F
55B7605AB38637ED07E35BF8FA4A27354C1D5E7AE14832250C17C02A844CD9F4
2A31F6710DB8CE763A3870C38F8E2A06C327B57108030856E5E8BD7F439982F4
62B44ACD79560771B58BD38E2D621DD4DFFB6670BDB920B8721A0FB87BBE7530
ED3C037A517E7F4D92C7AB784932877B819434E200FFF0DD0E0604021508FD51
080757995DAA6D0E2DB7A9939B29958A10424AA8ADEDFF577D885BF10131BC89
69A7E52BFC97C3C1CC59ED40A975EFDB94D205818CD5AC4E30E92D0294839099
39354ABD8E97189F1ECB563D4909081BBEA2BE164FD761EE98BDE7EDA160FF15
2DADAD834A43DD5CB510F4E2813868F4D78FBBDB361BAC20A85E1E9B8163B234
40457B8863141CA8BEBDC37B3AFBB141634F0D84EB6821FC9B0C4B5071B1FA07
C6576B9697457E6FF9E0F1EB6964C2FBF179818DEF4E72D2F2EBAE7A00ECC0E1
A922D6DED5C4F0A0846A47721CA641EF5203F3FFC1C5D67EE73F5B8935EFBFBA
9A82A7C1BB8209A249087BFCF44024E31AB358F92A7F7539145E1191730E2CF1
B8B86DAF7D7032AA640FA567FFCC739143D56714D28650F11AB8528DDC7BB77E
71850857DC14178B61206A62F645EB9ACC9FE97D51ECE8C22EF9384AF0562C85
694CFBDDBFDBCB94A0D0218F33F2D774D00F1B54515F06E60CB81420DE1D91BA
212A69DB2CAF2834CBF79C38818226FE2A652AC7CAE0A87C00766826CFB01F22
A944EF21FAA6C12D3BAC92E531CBFC79C5700C01A3F0B7FA898E8BB044B83549
541DE2277B1AD90C2E6ADCEB16B34EE0E57E0CD0B4B58826FFCE958C7D36058B
06F3AABB121CA1540BA17F0A43DF8A4D29679157F082AE2BDE83E736F2993D8C
048393BD80B203B16A36ECA3A2B2AD548B7E6BC11F3404DFB91962B2389ED4AF
92BA5D627FA697E110BC240CD8069D8039DE08D0F858CE686804C3F119899F5B
B3DC8DE39690B59808130D8D0F224B875C05157CD351DC708D082D9A9FC80599
A8342333B1C402C5557E376495A1AF897DC7D31CEEF2DBCB2D43BE46A6C48C36
FA0865423AB9F2CFB10AE15729158018D91CA8EF5D527207AB1709E1A3FA4C1D
179C8EBED46020CAC298DAE701CEF14BFF0410C077533233D54CEDD5F0628C95
961A01AD0EC4977851FF7A79BF2CF1E59D922BA5E4D5BA20DBDDBB8359030780
CCEC3F20327790BC6548427F7E1247C8419214AB037971D10D7DE1C40444E589
1308703A1A557D6AEC33EBC7046F305A17FB9397AC08625C202E9BB2A81577A0
BA6A227BFFB8E07695968FCB1C0AC1B004ABF61B57863F0A872C98C09622969F
5488761BF2229D98546B4D60320FA0F0D17C86AA9032575B2891FE7BB08E2B6E
F58B741F645C37EFD3D5B4171074B0B21AE18BE393984499418AFFE576C3FD7B
8E466D657A804EEF1619902225A0732B430F73EF94BDCD8A5E225D29D4532B04
2E06EF181E6DA2ED6DB370C2F9C77266204AF42102A97BC03FB86E4321DA4654
A964659C86241FE188A2B151D9D4FBA51E499C43C4A0AF916D59437C10F28C43
761EDC0E66A5E026E1A9D1AD3DD5D71B748F6814D308FDD1F2E214177FB453CE
BEED3C0725FB5461B64AC3151558CFAD6E6AD8769DB6C8921DFAC0A37BDFF530
845861D5E5C2EC7E59783CA7684D2E9107BF28D8FA0786B28FAFD19C449E201F
291657EDFF15CFDE8CACD53D969020B1B90028C373D3448A3C310A55E4B99D27
A83093738B60E3F89F806F12DC71615F875BC46F1E7A5199DAE7BC7EEB4C5C45
1EDAB35E17F83D0A62701D18826FEC47F867C4FC966D23A12CD507276B67B055
2D00C4D3114908981F51AC4E66A3F824B6E12694DEB838C8B360EBFFB8D45798
018A310214E8886912A911BCBE921B6481C78754B67CD39A57B621289A1B063F
32C69E40D0F63977B44DC57D2D73A7B25D906A47C1AE05E9A2A4432B7BB69C46
7659C2247A0B25272EB84B8AC85C7E817DBABA0E78F36954E9922286067DD39A
4C01FD5FE881F9994498B9CA251192A91D5EE10C07E17A5CEC917631CC377558
E376564CD974075C1670BFE9FE8117BB1D0B81B6B95AF00DB190817A74BFFE3F
3E6AB081015A048EA8A5BD31E2FD4A3C65E04F45CFA084E703772A7BA6764A30
4F98143B209C374E832ABFBF03AAEB334EDEE61F171B62E7EF2085C8D7EC43C5
3CFD25712D4CF64802A82227ED89B7E927DE87A8D4ABF3AC1D4A2D01D9786E29
0974F9FA28767EB61279E07A0B48184A437D4916BE724208D4B4DF01E60FBF63
F44F1E2ABCAC1C928E011C74099DB70E9A4E99B1B92A311A553CB287761B69D2
B21893CC6AED960159774FFFC79D1737F71C381E4D26F24F0DF0D44204E2524B
171BB8159D69CA824B117CD99334626049A9AD892D4D31764965A5DA4ADCAD6C
3F8A80A011F4D7127CA67B6A9665C86478BCEA52B0C480AA4A7B456EED703C27
AECEDCFF8B783BF8E7838601709849377A17A996F6CAE997608D0A185A98FCAA
DF807C859CD6AE76596420C87D291D12CFD87FD807BDBE8E13952104D6EE0726
B4A298F819F4B0E89D91E2735C4D26714D3D3D8C7C311322F4B3113BDD389BE1
217FAC6ABF3636ED201011F687AA6A1FA145DD11A3C3B0BC1BF93B1F0A90C03F
AF28E738D0C557EC92E52583758D1D5AE4904590697E8612476C7782BF11CACD
C257F15121A5265A4B316901E61D0B6A13CBC0EB38FA2FACEEEF8DC018E388F3
C9F683C1D32DBFBCD3D646C01B27E723536914D2D3F4BAB062831E02CF5BB04B
E70869A8BF306700778714A8D7AA7699529CECBBAEF48295E5FDDC127244ECE3
A3762DFF4EC57C0138AE5277D57C4B53EA2F8C915BD95CB67D9E25F9C4C27688
B2FFF11B3C5419C1D2AF7F8A14A61F8D65CD6998E813BAF9B67722CD6E4153DA
1EFE6296246F26ABC2AECA993FD69A810A540B1A42B6D057F6EC11DC7BD2F474
72592808C6A1852CE89A2FA7CAE9AC02990882F3E81B9090CF23C214185DF77B
2944603F47BEFFD06259B256CD1A08F62CCC148B8A82FE0584ABB18035737DBD
A92F6F61640C74AA4A730E278828CBF869D7E5E8AC6296D5821F1DFC98C1A3BB
BF3C3B3194AABFEA61341C59B612180E4E1C70090D5C31014F7CE5B394E5C468
943C93A222AD65F8064A8F420A8C664C6F732F6D1E62401C3DAB3E3D1F7E6221
188218E072C7DCBEBD4A57F54C4D5DC893C92249FB1CB8C3EC2E951DE42DD440
3975B207A05DBFAE8CCFEFBDDB4EB630D529610944338E20680DC1F1C80CBB6E
EE4DA32C1045FD7E0F586CBF2D967E468B2E8E763415D05591F5241B4557418A
1528BAE9EFA0140545252B0FC94BF0F2137F05F524A46A9757D94335F9AA9F42
C1330D4BBCFBA99B7EFE1571BB537FC01D4EC43AD1B8F73F3C70A2DAE6040C15
0F8FCEE87A7483F92277B32B4863B8E4E02206E93022A0609D842ACA6AA03E96
F8C117951BDF30182971A143737D515EC7EBDAB4AF1ECBA1C6E90D2CB592BA1A
84845B61318A6BEABA06D2F8C0210A261BCB5F7E6DFC059ED1B7F70513D93F77
59CDB6B3F043A91F4A7B256530D4492AE7E4E3CBA90F50E8BAF9435EB93AC0A2
43FA85FC190E9A88B6C8B3BFEC85B8FA4718EA5EEDDE9C5A1F80D025B7A76595
ADF5337F8F93BB3B8E0B9BDC870ABBEA04BBABAA8BE01DB2E526AC429EE5BDD4
7A77ADBCF0EEE058EC5BEC0EEC08C56D322EE6880C1967867F79996954F36C5C
090B0A18F81586A94C068446DCC815CA35B7EFF8A256212E9EC4897DD4F12C79
12FD3C94AEE4FB12D9EB4B069E3C6460A7A1DFDFC053A83297BF954050C48466
C4352C79BFA265F992C7BAD1C8A6045A1774C2CD4D57CDD31B28A52A90545B8A
2B4827BA43A63E203F6E03A90ED01EDD1A46782159CD556302D5D14985545A41
071FAD8EDD01651746F55BAE6D20F06B1CD51E5460CFA0338DF1F5726862FAF9
15051533471D2527E0B32C249A45664F725B8465BDC62636823158A3595F3E25
1647F3EFF443E8CFD42368663888593BE9064A1AF90C7A388469A4AFE99F2BE5
CCE86EF8B6EFE2149B8D2AA2DF53F6E853C7037FBB63DB74A5D79874B30F80D6
FB660D65C6BBE76370F0389AB1DC905D2BEB7CD957F95714D15C261A3AEB187B
A1DC2BA013A2DD2153CE4D6CBBBCA4367803AEC14367C0AE98F43E185C1A8172
5F0C32300D5004DB1BD238141F6E74CC0B13B522BF97C5F755919054DC900685
CE73A8D5738C2BC3A5CAAB84DDCCEB9BB7623FF9BE5D7D99B31E627EDABFD4E3
0D5E8A43C98684CA1AC7ABCCE6CF63DE924E16D4177B3F0FB0B6338D8CF73088
1326E27BC33436A35995B50C4D91F52849605E11C8A3D3EFFAC71AF878CA4FCA
F4E57537E0AAD3973FD703CA127A8B5037C6005C87CDC11863DCECAF5A7A1EB6
8C7AAFD6A174B76EC9B4E80F6AAB476FB79CBEBD3391734CDCA6773634155264
287B2BE4D8630779F4CF492E674B2237E61AADA9E11209807CEA508D8C155787
439EF62CE27FB2A049346C8F1199E124C9259328F1D239185EE1A379655DC7A5
3D88C875A3ECE8DF83EE6A858EFFA9D7B7F99764E3718CF5AAD7E22767B3C693
4C4287B17F5613AF6A0821CF81AA3BD93F1BE4CB85ECE0F571B108C0E17D4C5C
38FAD743973C6C9193A77F0987ACE9F2A8EC2DB98F85783C01623FD3612C789A
B8AA14D7E4EA34B5C7A8E7CB19D8F9ADB4ADEAAC85FB9569657AC718C065A32E
F7CA8A1FF5880FC66196E76DE4116B684BA5B21D162765BF1FDA0BC109AB896D
E7BD10D6AD5984693F8721BE6B48E82184EDC509992BB5EDA97A9996AF4B0A1E
4A219C2559BDAF6F4C56D862C6A332FD99AE1170DBDA9AC3B3B72801E011B0E9
D84CD4E1D479981672F5D7278419D03E92B51E62CE40C25D7B9DA7ABDE837B55
1650E889285442AAB9A29D15BB66552ED4929B90EEFB3B1EF3AACA3FCEE17C78
35239CD827F9A88C7DF0449F81590719B9A9284E841009D3C81A01DA6601A3C4
BC74CE6EE6409F66D517503270F802BA81AC408758FEB44D814C92864D76CA7D
E4DABDBB839179EDB098E7CDA3D88B9B026AB9A677D0A13C4AE52D0011F14087
597F21C39DB6A2CA7C80E5410BFF7EA073A18048BEC6FD3E0945857ADD4428BB
CE969610A7732C5F359BDAD07C9A198489AA1D0FA3717BF3CD52E7FC86C8F5F6
E053641BD62DDB9C5117227E44F8CC4B092D9A527940AEE0DB5B83CAAAC0C03C
3F55166FC377E829EB5FFFADD1C816801ADBE116E0E90E6199B6C6B3594E3B70
0F66D216BB65D88A7AAD93961976DE90E40187EA775CCD4F370CABA65F94FF12
D08902EE64F57042FB05705AA92CFC8BE6BCB7150550D4DDEBEC22A3ECA17655
D3DB634F8FB534CD778C28637476374F3EF5D7E61A400BDCD15EADBEDE387552
3CDFFF0F344B6499B844379760DFA626612E7199553D3194EACC2E154CDCCAAB
3B05CCB2CB624861704F5A2E99A7CBCE686079D36E3071F631A523CDEF3329DA
1D2427F462E1BAF3E4C0C52E4C859121606C72C3B9DFF296390DF42837878FCD
DCAEADEDEAE8FD8460B5BB21912F2881FA513A2C7F18B1B44DBB0703BEFEDB36
81A2B609063302129F6B78DEFD5442EBD1557B0BBDE17EDC97C7C86CEDB9896B
A67FB715F0C8D4F478D007CE9EE3809379FAD31892F027493A637E055EFB1650
93E904545A26E9C5B2E795A5634DBDA5AFF5B06734DFD7E18BFAE98A1C243F36
81F4D0E6CEA274C554B884C3BD0416A6805C6D9831ABEDAA38A48DD25CA2B8A0
F318B7334DFAAE85F18EA65089C4AC7E5E21F91A0181155AAE4A63F71D9E321A
C37670A34C8D3BC19ADEA42AE0AB3741CE1DEF5B751D3B44C179A3D9809CCFB1
80F8017A84BA6BFC1BA5940ECA307F7300C11E494882452EDB6FE1780BBA9BA0
5B63D75B8F758456DF3A066B5ECE33BA7514F45F9F618D77B66A18459ACCF686
45A68F72285FB2A586B7F622D5A2C8DECC08F04441BE2105B861FAC6C3D38F32
F29B1DB2FA3169112A5BD3BB0208A83E16FD4236560DA1C968928FCD6ABA9F19
8A053D9F362D8D251390471FBD381152783F096181EB3BC5D10BCAD79538BF75
3AADBD6ED7BE07C017742DDE517DDCD66E0A7FECAB76E8F772650F2F536D0BDA
6FC57B2F0CBD35C95A1C147437C1AE23EB9CBE993DEB6C3FC235888D9E3D24C7
DC65F407F99A68AD7AAE8D5A951A05A5DAB4C473CC5665A315BF1B163C9BB372
A29A8594E120FF8B0AB25D953DAEBE2006856F96C88934C1E80CE25DAD0B3425
02A60C0CFEF57A93F60E383D21DB0D204854AA899ECE4676D80F8AAA5305D162
D03F2BA004DA541162672A62617B5C7D69D73B3D107D4E9FFC5D5B79B7190C1F
0C4DA4A69D35761E26626ADE85A212CAAD639BC4A5B134D08DAF80F9403CAE2E
FBAEFD9CD40BCB32D2B7C11EF06056690527A4EBD1F1355C3BD6C42AC9AAA9D4
6DF7133E8CDB0682EC53FD322AF0C980403A644884D32EC1130C4E43A7FCC0FF
CB223701D90520007D607CA2BD6EDA120F1EABAF82C0383256CB3670023B3857
458FB78C6ECB6460A281A80F502523BC022927BD30ED8E2F79999D0D5FB2D1F1
0866FB55664AA7D6B952B55B81368A8E087D65343CA790BAF08FF13A5A6B6425
75DC74CDEFD3E5D7C8FE54C9A6EC3722200E42295D312B8A7EF6E8F024A22179
4B75C8B06B4A4BD034E3F24618E657FA9EECBF40F78F9F90BE865F80AF8E942C
033B50180832F10589F0FF9F1D002A4194A89B0BE1A6FDF20867C965580344FD
EDCDF9C6305341772A2A0E6F96C15C4D94D24D75A5C6E24391EC255E271D0FC7
B8074A8B93EBB01C8184C83B7A28E66BEA64F6072D7C4E74632D231E334490A4
C168D2B6742820A38B7DE79A37D30A27D24D3B78F8F31A5A922D5223BBBF2490
202E91642A122E21B15AD68CAD7284CF66EF2F61918A08BCB29C4DCCB93B4A01
33D40F4BBBA35573620A2E105880A087F54B0DB592FE6C9CA48E2B7484D25C5D
5BA1DB2F0531FC3A63A2F79D66BD5FC18821E0B0A5F28A25B6E803CBD812657B
D6D7B916AD8B4CDFCB20795D3CD68BE3AF0F3D54F6E0E8664538E38E9D33ACDB
D417FB9B8A0D889B12632E76C1755D82791BAB5BAF14605D68EC3D711457BEF1
FD7FBB2D6B522C4D287BF3AC834D9BC1FA32F703615390FEEFE9852831A47956
00DD228EAFF47BD685BB81AE7053596C698160684095E83F64C9BD1169B71A0D
27DAD19CE89C2E1F6F7DFD9466372B64B42057AC02A201DCC57A7C1F8D88BBB0
79B479426AEC7CCAC4AFCD8E9B9CC0B23E37F7B8318BC73D4EAF7CCFF6026D80
474C75B9A4BEB397A4CD79B78925A26F65B8FC21FEC40FAF5EE9A2C021C2CCD7
FDE5822FDEE5098FA9AC450FFDEAFF4A66DCCA05B4C5A1AEBED96CD54F0555EF
5A53AF1693D077F89B4A7D70CE39A146978516202981DB85BB9B82D69AA1D690
9585C6206EB2542469ECEE4E91D55EA29940282EDFA514351EE0893C86B81DC7
B1A6D09D63613EE02D87601131FF6E34C2364B7262FBE65988A198D84083A7AB
40DFFB62FDA85247332D251123CDD8B49EB3DD7A2193C44B91B552DB894A28F0
970A965692F4DF897F431C21212F698DECBE0DBFAA2905995D38EBFFD2CD037B
26BBDC64D104505946EAAB86199035BEF9C1CFC4C0F4C7A421734301012B06BE
A8F3F58E202E85B88C9A58CBA4A7618222D12C4DAE11F701223AADC5D58E4730
72865E4E96F81272ADDF96C14F3CE0B2B745ECF6699D1C8B420BE27F1EE04092
AC219F01D93032296196F464DEDAEE3265F9E18433F3D28E7D051BFDA5452AA9
CA782A0CD1BEB91F5C09D7B77C26F1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A746147F456517EDB169157DAD9D8AE5D7
EF2661E266C5C812B03E2569E0F138C2D58E38EC9F0B780C298874616D09E399
6CBC81BF2A98EC7A9A573A79CCDB6327D0DD0F821F886FB4496ECCA78FD1A2BB
CBF0CA1255799DF587CE66F042F7A5179B55075FC89BDC3302D01D7138DA0828
4C8C35A8E26752CC2EA8F3AC2AC68E70946C3E8F46B9C2DF790F79269566BF9C
9A6E54EC87BAB7D34EF99AD642B738312FC6F300093EBC7669C934250A5CE240
A1171441D03FD75811F371B3895AA29DDC6A984C0E944711C77542A66680C933
9C7F2D5A30471C6693CEA46EF483D1046E1A9FE6EFFA27CA8C9ACE821AB92B0F
5D9DC9D0A91B93ED65003BD0C4D6608A6236426C7859229DB42614A54EBFB4DC
8097C0D9B0FB95A5A87CC9FD874959462454B5D439C456BB55FB81B09E3FC5B3
26D850A5DED9EC17E11FCFDC544B2885995B5EA543CD7E8E17FCB8B4ED57D7C6
1B0C70972F86F67336647589FB0EA874920BAFB89889071729076D755021533F
B886A9483867A5E3CB8A961CEB372CDE1EA852052312ED4484491532ECA79ABC
3EE60C00312665A8DF22AACCF0CBD84EFD9EC148AF4245BFE780E23BB321DA56
DBB416890407B39D34B68BB61B00B146D2E8F794C1546CEA6E037D7CD767AE50
843AA610583CC318C66E25ACE786FE7B406E5F1F232517AA77DD3875AF98FB1F
E6FDDB6323E23AA93628A6B5887CA2263BF3F5A696EE86831C603B0AB1442AFF
5FA6C191F7A83C324AF0629A269BC5E6602B15D0B8881E6F37D510D53C60AF3F
6159041212131F18BF75E71B5B6E7022B99AA55C94130C7A4AFC72E016B43A65
AA522E7EF3FC6134D5F715878D99130DE16A3ED40825C75260C7BA8A5A084766
1FEE0F6B8798F96EB458F2E1ECB61B6A2C9887A5D0541AC711EC68B79C2CA3C6
175D4A90F08ACA408540796646E0DAC8220792B3FEB61999671C1DFDFA0919F6
35FC2CB139762BA4D20490AAAB168B00EAE492D1EF564F9D4A077B526322E8A4
4E42451F694443F3C4E2FC9541C8344D3575996B2C50A6E3D62384F9ECC1679B
6514C107D7B3A613F7287269594865E9453E9B6EF227867D9CF9549B3B5E2A6A
F748308BAE99AE06106D90DE65FFC15685F8CF6DED13F50F406270CF873290E9
9A3BD506A8578376F788CFB65E372FC69FE9FD47150A0CC019FB7BF22A3B979B
EC26787BAB2D5F893EE00D41CB48E35CE9C08D0BDC30768CCB856C1CD7DE9E9C
0848692C38D1E3016BF4B4E37EE291081DE21AF12C1240C57540E73362D1F9A0
904081FD330AB6BC5E2CECD68B9981B2BEF1AED8D00A3AE7ED338B9E18F72045
7A4AB35C68C07865063A2AFC57C5F2062F908641625F5C1C0C6A364E3100A357
D10632538A2A0CDB6AD680DC773ACEE840A11C866CC356BFB3FEED65526A133B
8800E5D9734B24E017A2E354045A20128E1705A76CC4A6F6FABD063ACE8A01DC
45383306CED62F67716BDE9F3379CE9878306CD4905832A6D7971824A12374A0
CECCAC565C16B53C7C5E1A202F5363892C77B74A200C9DC2E2179D79AED00A2D
FDA9B22773F34FFE430F51DEC9D81F1FFDCCDD178A0CFDE0E7E46CF99B117B55
B3CA9B1F3952D101D6CE60D1A0A97C99EDB3FADF880821AF7D1CA940090DB589
20B9219284D91DA3BD4A61CB3BFD0D14217EB9F2CB21F0FF6087C7308074735E
E35C87F51AB5DDF2041BCC6827E45A0370F0F2D6FDB8A1FC5066E1BC3F1D7B12
B234F60899F20EFFA823A8ED6489E6A04A0110DE316A16B9A8A6E831396813D3
F551F18C2D70B0FBD115BE7EBCE816AB40D2ECDB17E15F2AD8D3BAD0B94BB1E9
E4397ED46382B7F8A62CF533D4295155716F96B850D6FF61144F6A9E51CC1B8A
86A35082D9ABEB8D2DA4B491536CEF9D1E9F4FD8C0003E6F23293B82B65EE0DC
F0830C02BEA2CAE21DFAAFB537D8D9F0A74B63C9D0A6A9BFAA49F87C4FC0A724
1808AB8A4938BFDD1B821E29E560A86CBD5BA5AA8C53551510D12755ACA9204C
74CBB662283EA11853D5AE1081304809DF523EFE64D400BA4D22773660E8E3BB
C09AD7EF03CF8A2EFF52CAA34C7B703E7A2A5B009C02439875EF9252089FEAD3
867827760F7091469FE7B63C2CEE2DC1118746EEA119D9804673924FC20C1079
ACCDB798809B5F2254D8267FC364DCE291E8AD7A2834E2DEC9A6B3ED3261CF76
52215E55CAD75EB726F41E767C234D8B851D3FE8B9ED08ACE959392226C2D9AF
9F03B2C349CFAD8F885A3D4CA30C74613E0205AF23AA2216298DDFFA015BFD11
310CB2B5A43C34CF9EF4889F6AFE5CDE199400DB4E7D4AB056669452D995D8DD
5BFBEA682D9B6376843D91DA00229226A37259CFB0AD3BC263B05E0F9D2C2DB0
A0E3EE99F74006929E48045A055B9604291CEBA3DB1E042443B665E915991D93
2209B3F4CD6BD43B5B7F23CD96597C5D225B4C7A3FD940B5B7DAD0B13F91AEE6
B2BE7557A33DC06C5284A9C8FBCC63BCFDE21464AAAEB4B0BE5CE51D102BC0EC
8B0E3E69D117EC62DE45DDC1389985CB4F5A32039A8CF4FEBF59A3EE6082C415
EAE6E4DE704433E40FEDCAF3E4DB41F8EC929149A119EBB7B5AAF66866B56D76
99A53A1E601B5A0E104EF4B33FF03E3541AABACED09631FEE35256F2333DFCF3
D97A98FCA949B1DA71AB27885183DBC39476DB8C3F21E3904411CCD832A4367E
A9C08745ACCEB107DC6C0B52D99ECCF89764E3718CF5AAD7E2276182E6A6B535
FC4DB5D4AC148F5011054948A10FA9CA7D3915CA53F78E8F619A6D4BE86F4F67
B2BC065A56AB2AA02F5B0798BBC1132A2366F877160EF25F3BB17BC4FB2F6354
B7B4212778C05D50975BDB44B28014E719ED2A91AA7F9267FFEE494EC073F5B6
CEB63F376AD9409E9A9B000E4C14DEA17736D0535B794E7FFC25381AE15BB678
B965D41F6872019CDDD64018FB1FCE82E67CF096A37FB3376B747F197C1A3A1F
139057CBA36D7147522078C91D8C4067EAC4C723068CBAF6518AC40027D89A07
A5B9E4C87FE8878535BCD86876FB763554823377B7A5001036A96F08F6F5F52C
89AB5898117D87585797FBD853408549AFE87D9E1FB63B8D9D6D0C68C026458D
F297F410F90CA7DD41C4F4F49424821890A040F61BAF86BE97F8DAA8326EB1A2
B451142621CBF9D1F4E31FD190E48BFC120426B62642CF23F4014166881AD3F6
D51D65318915D4C9BB9730C4539A8F3EDF4AF4D734347F11DCA2502FBCBF3216
1D54A462A9BA6D8BFEC8BC27F761240BE476D80CD1A96A3131E15A75F2D45E42
7C2DF89FFC8F337C8CD0510F06A63566E4E2E57138A64DA6519EE828AEFE91DC
BB846531D5935D9AA612A159D900FF96495BB9B54ED7A963CA7625C148E51B65
88E67E7AC8E934D993EFAFC5D3C280C6065CC8EA31F1FAAA527B45679B55EF87
316782B17F7642785A8FC6D478A504A6B8528B9F2B8D803C41812E5A530C0BC9
5C10E1B8311D7B50DF95864E0159B477B94FACFD9D64EFF871F9A24136315988
08E0F91DBA758A23E515E9F2B35BDBBFAC0581982D7EF27B675C6B14C5440F3D
D5A181DBBE95414CC366E7F06A8C3056096A34BCF507E7A76C7D5348D04809C4
9896E18909ECD6892BFD2B0D73A84EF6E15EF46B077F00A027FF49E581739F38
141B8B48F87C289510D008B8DF64C3DA9E1191B06F159BBBE9A003EA82570766
76FBC638F830426328CF13180FCF152245567E99942B3C03C01091F2CD93AAE0
F435AC4FE8C333DBDF2A680D97649B531827F6A27FC91200176ED1F78F5DCBD8
F89F81127D86DAD35262BEDCD4DB77132F847E51D5ACD937150B85ACF4262B13
7D9E0FAF538F88399C96D532709F7A5DC180608370FEA2F20521FBF91659A5CE
D3A71BA2D3F48A9951FD6B2822789384F7D9EE81BE17C1E4B7DBF60FD0870068
140DB45F90DE9249C5AA853B535735FB2F12E8DF9C6EF0F015C8184493FC6CD5
434C7B572C44DC36C236272FD4CDFC8923B80543E5C669E66957927B29F06CA3
2B3C4F6D28AECD410B347F3D33614F5A768CB488A01868F8F5FC71B44F27AD67
2FACE14329E55D03F4CD2CD99AE5AD22F3797128CDF10221B3DCD0DEE307C326
99453037732F54AFC0BAF60689938C92C6052D73F356FD3F3C3F55166FC377E8
29EB5FF5BF55479400C1A59CEF4C8770D3E62C7EEA9759D337ABD256C3415855
EAFBEF4701909913270E0060FE23E1DC7BDEF3C31130737273FFB6429F1A3DE5
52BDD61FF28011E44D25BF3D41D92425E94CD05D880C4EC59B599F5E42ACF6E4
CC84EEA24F77BB33582B268EED29D4C4A28C70732AEC53509E0DB0167996518A
834F071428116CB7236EB39698DABB64FCB88168ED814934A247C30339F27E1A
B9011E4D789FD52E782C10FBF3263FB1CAD0893107097C56AA3C9B7FFF11E937
8A08B9D0AF0BC5CEFAC36FFE39B1FEBDD9E80690D779E5A9A4B01B3C370E48F7
0A534B6B26741DC8FF8BCA6575A33B49AF35102458632F1E890C67186CCA0576
C1BC1A6D881BB06CD0E30160BB1D7A18859EDE149FF3F07B59EDA5362CDECCBC
03A7B12C296D44F1431E1CC382E7C032E8B7BC76D60B171916C60E24908FC655
00C95AF2DE68429C1654F4C983FE3738CCA62C7535209C546D9201261AA71B05
F2E629B6B88DA8993679CFF2A83F7C0050DC2F5DED04CEAD7FC2F8C0931D7371
8B854A1AD40EBAF21FEBEE568D8F67BE43250368C63A0FC9BE16947EC364E70D
5006C95117852836D3D8F28B38AE222BA56673DEAC2DFDA9F9A96359C51ED9A2
DED98A79B1993FE3C7F50F9AAC0E3EBD9F74347A327897FA9A2049428812234F
0873050F420D81EA8CDAC379F90BDE98CB15B4BA24624E146098A7CC2A61AE66
9E8750ACCD1A381F3FCE07B3ACFFB8F392F4F47359EFB958A1D5AED112BD7193
A3047D23C8AEEAC26C7ECA66D7F3EEEB60A6554A2CEE9C22560739C926926B70
233F4950D905D6AFB4390B62A3173B522240F0D3AB71AA75B7320CCAD9722595
E7497392C3C46C5FC40BB4144755449A392E7CC944A3871301FF9B6D68D84C4B
10511558F0E41DB036202EFB584ADF8F82E270D23A90373A26B2364E9B25F123
5800DC8E790D62F3EF215E559F8E878F2B58DE7BC0710161190BF4DEF69775FD
BA752963A886F30291FED98B2CF78378088636FC9AD91DF5364B52EBE9DB0873
3416741C77C30A39A9B881E6454A48685DCB55D9FF7B893CC31F7949ADAFA7FD
22C8F9537DE79B5034B978482F9041012AD781066C37459250D860882F536E8F
49CE50FF9DEF3B4A4C1BEB3848EAA347734DE980BEEB85E4A31E174DA9330491
EE2EAD0AE6BC9EEC1FD42CAEA78801DFF16D0C5CD183D626883D5D0AD261A4CA
A3A1A1BE80ED8FF0A9C509420006D2229CC525B2E4F23859FD9E1D5455234F36
6F8919BBA377177966FD70108150989F4B398FD87BC27EF47166DFB2C258B6D6
447A881064CCEF0B4600A60B7582D25C82ABE700E551641EEF931EBBFD8FEEC4
E60F4D0691654349BB1B5868F563BE5BC93058B9C9039598AB63D805DDEFAFC5
893CC9517C467E54790062892C274817774286E395ADE502A87AABB5325CD9ED
FD49E8901092FF6B232F3CE2B321C9241843E1F16F6C67D01B97392F95B302B8
CFF733E5D664D4E608481E853CC710141A10A0374AF59FF5CD1535733F7AB9BB
690B3F1F8D5D92B0125D3D3408D17A9837E628E0B2301D85F0FC49AD0DA112E1
99447E0C516BD178F4B598C541D7616E6DFEE90FB30CFE6E3118BF5765A6C01B
557FEB6AA32E84F30EDE5806D6A6AD7618A93DC4A85C4076A95944ED748BA651
D637338EF8385B45D44B095A00B2FE323070C638AD031235BBF7B1784F2126C0
01C2367F047F360422F59F50625FAE9DD08A8BB3C39D282B7CA721BB85A417BD
2D7204CB6ED99662794202DE1BE4788E6686A98D901BB47DE5D3C0CB6239FB2D
5B4AE3224A770346123162295E5C1B8D5B1F8E0AC21F2EA065FA879DF16FC37B
6FC3DDD73B92534D457C93E40ADB929E0723FC5B5BA2F0E744ACCF23EAB3C9E0
437A2F11AADC402F26E63FCE4B2955A9C7950E7043D775066794A2DA0D7E0695
2F48F61E0B528F4873A53214B80D797AB7E393FC8059EB1F91BF9908E7115E5E
D381D39E07E0422F97721F74096C801AF3D07AD30F9931A19C1C8ED262075EB6
7EA2DB2E8385C7B35F69B7D06F576D7570D2B23AC29704EC36C10444E5891308
703AE98207B03DE79A76D37A389F508B9BF9B653BD28B7D7315236F3CD432471
1D33F7C872EA5EA5DA84DC11C6939039B07E93E7BCCF78FA1F64A4276E5D5B34
6A7B58AE451A30542D813C360E9E1ADCAED6ABC75FE3EFA208A412BC69A7F7EE
5667075BD68895A3AA3F3A1388DF56F8DF5F924B32A54545AEA28C50779A9D43
55E0C8DD27C89956CC3D78F4E31B08DA208FE08B4C8BDE976D18C8F669EFA9FA
FB6FC103AB903AED90A1F74937B9894F811BC6D7D597091E285ED697D69314BF
897C98CDE5B9CAE03A7B303ADE4AFD6391E81ACC544000E97C2E4598BC30968A
BAEC2B6AD2765B2D3E2804A6BACEA3B04BBA7E1930694F0B9A9C97BD38382FAE
8F93AF77D94989AA693B55069806B99BE412452247B0D8CDAD32D6982637028A
7DB25D4C40E5276BF0D28259D561A5E0AA1BB9792B28DC9BE63D73949C41999F
A96E8674AEF974C204054B3D7DDACFC32EA1F13D100A43CCF1E496D5D564C917
583530C8D56B90B27BB61B4A077FADD338C2A01580D84E0135EED2F2440DFAA5
37CC1DD8B32132A2E7C1B93BF1A2C1CFF3870FFEE0C28522DAAFFFC84B3AF701
CF1AB4DDF4392982E90CB1CADA541EA9D47C168251145C17626EE61BDEF30910
5656270A536E5DC0236DA24612993121152E7F222CF5BA8160DABC41DA079DA4
A751DF9A6109796D1851BF7F1F3334AAA50B56D05D29B98C9D152D6C0DC98D1E
DF93FE7FB1065F435BE8A39EB454D88F5BC45BA819AFB86367C2521F9AB5BBFA
9D7776DB2F6E82348B86E474569ACB80B0D6348FD52552EFA531F6F7A78A0E6A
3503375D38373B81323A7E861EF6AB8AEB55CEFDACC6BCA91115B56E93483B35
2882215895A743EA5E07ADD887248B5121B7A7D7A973F2EF67F2795E6DD8CF55
B98238D22B61668F7F6E96C8E7829242F1E05AA1A3BA678F43E0D362852F9EF2
C32B53258B6BF4A4A856647C3240A2856E29FD01407126D3973FE22CD3AC4F6F
BB0AD7B96D8423A6AE92C834411DF3AD020FCA1CA35CD9827AB2427B6920076B
0AEAD03AB485F43DD669E9F6D78F7F3A3BA36DA5DF56AF1251E4AE08AD7E1623
F4679CF2B600CB956F6737708255E193225BC60051CC6163A409D01F65FBD18E
C47F767BBE4F5917373199BB36E15C03ECBA020520722A4B1FDF7079CC28BA77
D9CDEB063F4E4C22F60C6B169FB2DB27A6F5A9CEA8B83F85D3382967877BFA0B
92F417CEE3F43AA3B9AF63A2DDD324DACD4756FCFE0A64065ACD66BEE070B61F
A8A6E1CE59C21C7ED769E57608B34E65A38D5E0D698D574122D059DB404A8AFE
19078D46C9C05D271E4C2EF3140B832016C4BFE510F180C63CD039D399B1D9C4
208BDE9F28237989F985FD759D74577C6FBE9535A5203A13070094D66BA4D8CF
21F49B9F8E7A7FEBE37CCB1B2D86051D08074F3F0B29ABD81E289B58C0B3D0FE
267EE0682D2ABA9AD926F9C979230DF7CDA80DA5853EE294F2BBD70DC8EE39EA
BBF38DDFA77AB23C7F16F5BD0A9CCF307F6D779F4A6F9E339D15083D5CC2C528
BB2F8DB988718ECE527462E49A4D20FE29087F469ADA8F5D5D8547404A00F0D9
8886C5917EA8C3D12C66A4CA6D951C5831F822FF771DD1156AC74542B942B0A4
F70B64F7A89EB8D38652FC052346CA7C8EBF4325EC599D755882E751A70A0EAA
286265FF340CEC0051A4EEF6A495823192E78065FD661AF209EF0F76FAF05335
51DD2C8C2BDDCB8A5F93239AE905DCDD4B660B0241841E2F7BF40CAA5DE3A730
486549E9EF069977E88971C070FBAE2C25A7104589EF3884A60B96B3D4677A6D
2AED73403C90884F55AF936438B3CD80CDBC0A6BFF8EF29877FA13D418CAED87
9EBB382A0078CBD3460F9E803E409065E158DA49560DBF90604A7D3CFD6F1A44
EF78C167190F3326BA35B2A0F95CD035454C331FDB4CF16123266B94843C4586
F7B0914CF414187D6514AEED350F45EB766C4ADF2EBF18F155CF537B4107E625
33F9F3689D9F8CA2BFF3F9D381CB388A15FD654B86C8AF21A16EF07218D080D7
65E4DF9A51A71C46A439AC1B4EA21D07C4D7BBA3AB19B14F1490E5EFDC8670B8
43ABE7ABEA5FC37D43B5540F8A198ED3BC4DC805EE87DC5EFE67A2DC0DF375C8
32B0315453DAB180934971A10C5F511EBF1FD9998E7633FBF77EA98E5F426168
65821586488177A8C8F976CFDCECEBB8152B9043D36781803E670F03DE2BA917
E3284D54F612C02DD4C626DB4E69621DF565C08EC5B4DE3CADBB53CC6A863D33
150646CE4F7CC1656BE602CAAF7D89959658835F6DD1A7BA5BEA324A259293DB
485A3997A170DAE50451FC90F48754FE4414B228B69FBCB0E5DDA96EE11F6601
3629BBFF479D7FD542A150832F513E2360F5FB6761DEA090CC01299A0B9FB33B
AA1560B6E30AD78DBB5CF7F1BDCC7E2C634E85D06552386049D59AE3294A5EC7
D40F53AC32B37CB8356EE5059463613DD36491F24D7C3D634B25C2CDD9A830EB
4F11749324C15349A500674AA342E00623E844A9712FB54DF5652EDF278BBD93
0EAA537516A6AE9514780BD2721C066F31553E26153DE9FED3B3F6B887D06AFD
C600F30F1DD52DC3204F710A77E590211592D6ECB53967DC7095561010539589
76A09D4D8F15D1416F278F27813F1B3849E1959EBF034CD9229C35435A18684B
1C982B24DC6056DFC1DC238085DC4E78C139FF3A8FB31F150AF3FEFA06E2A011
5AFF8CE7D87C6097C7690E4584D30A6EF16CA75D4D5D0A7358BEC9A5E384E2E2
7B5A192D0BE15AFC6D052F79B8FC23A4E6FED2DFCBBDCF4A0314953BAEE17979
7D5517D20678D92C7CB15ED7A62F0A9A6BB1CE1113D64B375A591E5B6D177A3E
42525D2BE20E5A4A032CA6EE62D04B060453F94317D02D74E2C7418EDF3BD577
58FD145E769D4E88BF43D19050DA58F4279A81DDD84095D579B1DB60F4C2AA92
B696284A5BD9C4175FA8E7A8D4B829F179558121181543EC7117EABEA27EC389
7E4DB66CA9AB7408DC9222E1E405A7ACDF22845DADF512EF4559B770873C6CBF
0A66D8989A6B0115F2FC932D12617F4FA5B2075ABBFA5B9682D05205EEC0D92B
FCDC136E434D7FC5E7710559B91756AD1171ED3E3B292E0199771B95DB671D4B
2AD846EBC0109861075EE30BA8E1CC861B8131DCEBC3DD83D4918D2C6FF35AD4
3CFC9FCDF14E112CA917B5EA3E96F99B310834A0C6D02E437919FAEDCC9135C5
8F8F73D47D434DC4A4E0C2887BF546CD7C05F0C4B63DC1C10E03B9D34C6727AA
CF104F87276116F95A17A9025C1FE808C6FB887E79634230C6376EAE85CBA7D0
FCFEE888CC7FFDEFCBD57372571277E7D00EC6E0A19B83B0FD74090B3D09D499
C3B01F3F8C1004167D8701702BD3C055F8CD1EF6E60FF70CBD8B641A2B0ECD5C
73ADBDA46E862AAEBB04D578FAD47378B141A294068183459B1E9CA73B17DD9B
8D910E195BCFBC63E6F21C48216AEEE4D31209BD7AD01EB17C5D14F155ED5F07
05BE16EE2E8CA3CB7BD913A9FF9C2E54953D12296000683AFED2AF2CA96FE37C
42758397C311E01CA1BECA031CB50E8719471BCAB0BA1876010405CD72D836D7
A544AA4A74BE19F45CD466FCF191E7EA641EA38D36F9929C90ED629A87C033A5
FA7D5041605D5F8BBCF794F3A55216E5C0F451BC1C6C550703E84C757F24256D
BD9E72D4167DB96B594B7F8296FCE3845ED8FAF19EF1161070E08C365BCAA589
B9FB46E97AB020DD38D71B7CB546637F1864CE423FDF8BF9B3AF739FC73D3407
7A739DD65C74E7DA1FAE6C0E145BFA019E1685D4F82277751FEED7AC8A23E53D
9E640BA6D2C2D5C7681ABEC649ABF3109002DD5225DAD211F5C72F3127A60A33
D311387E651DC2AB81DCEB396BA47EA5E363C4FF366CBFCD58155CC33391041E
76B7BC14C0E3C03464CEFE78EFC1A190E54DC5311F7BB5FC964939329982758E
8D65F2566D051BFE9CC2D4E00573CE94A0263AFEE43CF04F81A4AB337FA1614F
BD54B3D4EFBFC63A3364659A91DDBF843D604376A6CFB6830C394E62423A0D22
D51EF24DCBE949D2F15C00B1ACFA385D9CAC57566163FCCEC2157AFC8FDF1766
D69C399F75811DBA593EFAF5CDEA803796A28C5358DC01F1DAB166058080D42F
90499B415AD8AAFD99AD3AE612FC23069DF8D162A2B400EDE05DF412F5D3AF86
BE469BFCA97676A0BE66C3DC66AA65B67B6294F4F8C95FA2650C07838E0D553E
7E840AF3EA2B0E8D47E0252E9E0D32937C8CDBD216CF480044F96A1C9F166E15
6FE2A6BCB7463B16492EC628DBE6D3D608A7BE0B7EE204C61E7CD2A71C5E47E6
EE3B813136F26CF1BECF1D09D6246535634A43BE485CE2877000075D2B7ED4FF
02B658FA62F56653DD40C4DF8D976A9561F7A2A4AAA27D75E800B37FFBA5DB6F
27CD6299CD0104E3E19A2FC8FAA96236E052C3F09D46C1354E5FC1A63D9D5B91
BB6B95C298D031C6597F66694FBD2AD81BF68FF2E378BD8357CD1B665443F4D0
7774293F14F28ADE9DFE77CD3E7AFE2BCBBA6F91047E208835176F3154E8757A
1C21857556EE412A5814FB4EDC1C8E833686E124BE0A5584281A2A331FD0EA1B
6C2D330B1CFC47ADE896255DE1FFA8CC1A09D2602215A73ADB4AEAA456ACCF3F
A9FD5C0D7DE2197E5C9015AC1F6D0503AA0DE9C012E610B9840E263707E73B9E
594473D95745C61429907F1246475B1ABE516106FEA01573A274E3990DF25D88
067CCECFDBFE75F52D2032C91FB8669D367C6FF13C336537B67F235795800CA8
EF1B1515D3CF374279ECBE4F14E8E62E61026F8AC2417B739F016ADB2182BF36
E33D367D772C362F558A7C977711CD6CA4FBE9DD385505F1A589CDC08A63016F
79C7D0E3BD8A22EEDC232CA6A04E928004BD90C2FCDFB6DD8955D88067443C33
B97B28C87C6082D9E03E2570951103F252BC047D6A14598F301B6A7E97363ECB
B7CDE475BB60AE37C5BDDEB04079726CA43FCABE49351B4A5FED8651B7001031
2A3CFC4AA9737766394E6DCD202B31E51623984C16F41B02982895820AB47D0B
EB5D5BBE6577DA7AAC12977271074F78E59A64D710D418B800EDC6B8980F9CDD
6013FFB560C6B96CCC5ACF55B7175117B32C326E4EE2668AA3D7DA417C906CBA
807993A9162700BC9A167433BC45355460BE4E0C5D87B5B3B91F8CD458C787BC
F6DC3421056677D71FBF913829720B6BA3BFD44765F3068683FD214FC6C24EA2
A599EAA9C44772E82AEFCCF260C530352B8B7F8EAC363D0D75730D6DEBDCBF85
188B92523BDCCE31A358933C39B527DEE9A6B13A3E53D1F5D844FD4C57C95F8F
304E10ACEC91E65F8C929000F8C5CED66534B98100C8F4D680C94DC3C4DBE573
678A57F540BC3BC82B897C7A9CE0513B4F6ECFB861950F9DE73BB75966C50E41
E94B66B5CE1ED0AD1ED3B185D5177C10A7AFB05BAD3FEADBE50D2C43F9EB9960
CE79D16F587729CA7AE564889FC5377F0B6CAC75F4D86B9770C52BF4B9A46CA0
AD4CACBEB2E1DD7F47029E1579A62B5E34F8CD43F62C45574E546C1525E0B460
08400A3BA5D6D7BF1C54E958B2C005BC3C75F49FEFE3278F08FDD23BF1D755A0
E7A8C1AF60D163801D296860FFED817B1F5B4DE27952D4B4413564585246569B
CE190845D2E8BA2A1A227677D75C8A0D05AD493E6BAB4100D265D42EBDD432F5
95CF1736E18B657D33C2B9836FB5DB6A0D80E2FFF6175734244852267155E959
5327E348EA30C10EC4FE555A339AD534F0FCDBC0CFA816443196F92EBAED840C
491B3176BCD5F146D480050FB9734E92EE2D81D708B1BD152918A364B615D9AB
5795D2A08D94F4FCA4923CBDE12C3B5B5DB1DE6054E882EE083ACF0B95B9F10B
0111760033CB13DCD7A4A26181DFED9C34F6913CB64A1329228FA82E31E48946
3D4C939967DC46EDECD2123FABEF33D44BEA1ADB8628B9430467A2B760BE974A
EB670A7EF504A1918EECDF403BCD3BC892094A5128E251260C8CEE4E32BFF3E6
526AFD58333B551D1907126E0FF3D8FCAD45316A3879C816B9832580404505A8
57AB1A921E3786DBF68807C01EE33C0FA51EF3A6487E8F7E09AE2D7E508A7C72
6E312F173AC1563A7B1A7FCE0C514064DA918220ED0CD2D33436B4117694575F
D284FF8E0AF8A0ABC2E7DD9A3B63E6969C1A2E0A8226817F537D50344486533C
E216EC6795729C8D6F0483F604EE345E522AFD19F8C258E3AB60AC1B2610D72B
F5C0832AA63EE771FA86C4255DCF43F3BD83B2EB3BCB16D6423550A709D944B3
9CCEB19A420111821EAC567FC09B4517D9443FD0145DD754DD97BAFCF313178E
02D3BFFC709F92ACB6CB2BA47A5842032C81B8CDC9315FC86703508D2380278F
B9B8E12830862817F889315EE92C675CC9143DE91EF77879A07F7988BC3D2799
234B4CA0D09D1FD373A0A1698FF3E494CF5E676EF647EC262E4C15BA42E855E2
49A6382402358B5ACD46FFAC1019EEBEF540640ADF732D0F3522AEFBFB9030D8
AB0E6034307C674D9450AF3670C4E6AD8D4F81A89690102DE366BDBF007C713A
7D9687EFB4149F1D727E136E5D846F2E9EC0646B0DD0094704C02E2FB6C5A90D
0A15769A52588647510A48CC6E0EFA905AD6481C544E386569D9DEE8754EBA55
1B635693EC4FEEA9CDABA3745E0D4677DE8945C1299AFF8554B37C97284940D0
B7A490837CBE55E8818A643F3F3F88BB227E90541B10E4BF1A1DFB78BBF223A6
0624E11300A768C5D30AEC5F779C0ADB6BBF5B9EB427971BED47970A13775BE1
50A1FBA6C22D64A78A0997962F15B4FF0502157BE9B017A0D1D4CDC225B90255
441E9155C36D7218EB07D98F1093513037395900A64CB18DD6F7DFE62B1720EF
D4515E01071B08A4B2AAC060163819C8EA58AB5E2D77FF400C7DC7B254C32DE3
5EBEA2C0396510E19C70F988C08B01166F40A63B5D9247DCC59E67DF990210DC
A0B58494405974943EC236A4D9E44AE3E5B44B2AE9041C1553FBBD54418C388A
50FA32AAD7B87B3235EFCABD4B5009190D163A3D29357D3C3A6403B9A7675DC6
9ED861AA0478A60A228B2DC6535B2BBE6757B9B29A5ED1EF6243E79654FC11C1
C061A44DE0154738DE06D361E0D9154FD2BB8D149B7104EF1296B760C254F4D5
C97FF8BC3F2B9A920ACE927F58619456F282EF53958976A09D4D8F15D1416F21
D37977A0CB1994B8B6D5F3B8EDF9D4D1459A3A389B803018DC0FE5F0495F5493
1E74E8794276F856200CAA43B9CB5417866EC07D54C89A8053FB4C205413CA5F
8093EE6C138EC1501C46CB5B5152192E8D337A77D60A3BC760EE32B4466C509B
B5BC7D669663013EB5F73CDC4335E0543AFB8D80C54177E7D853363B246759EC
16209E803169BA98CF908FCD532F97CED47ED2F24D460DB6E43FDE75B786AA64
15ECAAE9802FA36E4096D06B36932CDA23F82E8BD8E2B0B0F2D0749B78802208
CD8C7973617F0B65EEDA77819CC32E81AE692C5AE0C53DB380ABB864DC4F2C28
4EC40EC00C947C89359505A0025D7C70D0C4048BADB0F8AE1F2AF3BC364351E1
FDB12AB959E9C9421845224799C0B710586D3E3DDF28A5864D566F5C5323FFDE
E12B7A80FEE1AF3DC958B687F6541DA16CD6316DF7EB29D97E62720614F7C286
4E75927DE4EF96AEFE845F19489A37A541ECFFC41F3DD3FD2EBD84B672F4AA16
496BE647DC066E3BCDEFE3928BAA8452E64FE2DAD4DC0EBDAC9272B3DEACA29A
DB69140C90980A2147208D9F8B3EAE820590CF22DA6BD5621A494EA63AB3321C
9FE29C4FCC255951E05DE00CDDA4763AAFF2692126B4FAD8F94BCAEE609B63A2
2ADF574D314348DD5A81B96A24B03616D3CDFF8645F0BE1E25404BF8131379A0
57266485F2FABA49F5AEEE14FACB8BE46D1A9DE46A8FA9ECE132BDFBE37B87EA
E0447EDADEB00764A38DAB429277B77FCE74BFB53D74265B5E62292B895E0497
B9DF2DC211CD7D33D9014102CA922C49DE8429FA026796EB130B5C47A57F44CE
41C30BB402DA4D3FD3FC0AF52F2190F679B233D0CD7D1C12433ED9CE0AF54C73
172253EFC739D752811A39CD650B2CEBB80EB68DBC5D82F253F83F629581E002
C27F36EE9B552645B83D67BA54D4C2D3463B8205967B4F243C6CBFC3B5D8C8D0
9EA509188421C0005946503808EF1012183C46DCD920BFDC0E43AEE3EE3CAE15
42AED1D928B222871F54B0B774CB1F93F83A7F1C70D8C3E7D479130F8EDF7905
1836E66810A1779ADA929D2F215AC23358698AB2A4E7319B9FF1A7480F80EC4A
178A1365FA1663D6522D775FADD5344E8014531CEA9C31F562B3C959EAD81262
3B5135A85BD472D60840A71D8CA105AB5E846B6302B1D58E2DABB37541DF8804
9C1F1B09706C3EEA6B165B1476641279723F476C0235F3CD2DC7C1812C193040
C8E053C3F1EE0BB0AAAB446819939C850F9F52B0F2EE315A2ED05A5189E0C5A3
1E35448577FAD21E456B77CD97DDCF704455215B860BD0241DDAC2F74EC77BBE
0EA117C5B0FEF0DC222600B4AADD0F5E3BEE31A6358F8B109526FF86F3C80A36
08FEBD0A9B6A9928C0A71AE075C6005B59B995C39DFBD7CECA844184CD93C328
9163D796AD65EEE0ECC9ECDC61FB079040BB1135F44C78F55191FA8E82F6C45C
F4C8984AE9658C1D31ACCA8F3E3414334298B97EA049975816ECA43567C8282B
438300AA6E8134070BF82CE46109BEAC90051D0408939FB4548639C60C1C0F49
A1F3091812DF3A657313B6C59EEBB40310AAAC6479F8D040751DD9082BF276F9
41A2B22D035BC8CD7923F3D0B39A9BDE7CFD751793E3582F12ED3CE864EF64ED
200D5BF3252D58726BE0351C60DB70AB7416A0B0E9CBCEF9D68490B149A89F9D
55CD08694481BEE42BA832CEA7F618376F2A7E57C762B495380611A770A8EA5C
DD2171192F05F1604D417D317F5ED51D2DDB879C25D5BBC88B466FB34E747D6D
367BD00B461544B85F64FA6D6130832DC718E266969779CB0124DE9784FF7538
DC0F88112C0E8D91E533015FB7E943D5A4A38A97F0BE22AFEF4406654946B67B
1EA2E907980663D7D88B4AA2BC479768B32B9C059D3B5B698061B4583654F891
D0E725E80010DDCCE8009580EF6D0C5E04C347849045F8F1022939AE4C6E6463
84ABE43A1D69DBAADE0CE030A9A438B340D56EA147B7726912BE0F1DE470DAA3
C048BD1AECD9A50A0489FB31E753C3E323A23646D11151731FDC5AD78F8697BA
E76D52B19E6078EB413660349CDC166EB0FE9619D3274F12D211A3EED9136B5C
14EA33A95ABD38C513CC756CFBD978A0F7B87BAC9C37FC0940D4B37BF2280FC2
BAD982FA9A2288CDA6B20E3526986995BC020FC00BB090534C11B89490C5C722
2AB103E938237A8AA3D32BF8D6E1ACA3F8030312588A121BCC86FF5C74F992A7
8703081772B16091B3FB2C085ECD52FBB1AE30C228F2115C76EF1ACD02C15015
37F65F5AC8584C1DCB2C662679D6B692A04DA68DAFF042AFE03FC56A1D5CE7BE
A436FDAF8EDFC92BA4E94A33671706207C33C200F6E27BB35E591601EBFF9580
F378E3BF2E5DDFE3B4AD782AAD5BC54327ABB731AC87BCD3AFBA75DD1AF361EA
49BDB74CD0B46A97C588BFE583D7AF69EDAF179511ECB34F8FBA9472DE068DE9
246EEB70A7B0DCE9D793875D60C9DAEF846619C4940AB82F0A205B2D5B4E0AFD
B4E698B7AB8CF2DE0967154B7F7D826A304AD2D62E63AE6ACFA7012145F683C2
FF6C7FFF6893BC64A35A09B3C0E6F6E5A6196DA5B6DFF96692B351FD9CEBE70A
D76C57A7A427C7A0739D133D693D788758DA1C6FEFCABD4B5009190D163D4063
7F1864CE423FDF8BF9B3AF739FC73D34077A72E9AABC930F472F93E247E29CD9
852001BD2E16E51AE72561449686339482AA1837850FE2D62A37076A214FF543
276F39A572823382D6DBF390F03121A932BFA4FA7C97C5A0C6CF7962A86B26F3
AB70A8D25526BAD00D4DA85521BA7D57D89A691D2FD404BF90D03657FFEAEF85
7D1ACEAF469B9B156B1E15A51D08E78EB2EC86A50DEF893DE25E294C0DC2B645
CD0FB207639CA85E0B9CBB39B7F4BED8D8A22E4C49A366DE4CCB332EAB20A47B
A58EA9635841387F50C5E0F59E80EF4B772AFD59D0135EE29164B3C585BD959F
F8D0CB69DC465F32137D1B4A8F90B64391E43028BA9A4D1C6453DC9297E371A3
B702F504A3ADEC55E337FB59EF89B24C28163F9270AA4C95CA0F5B5300AE2EA2
8F6657C76F77B64D605695615950B45A6657A694147AD18E43156C122CCE24C4
A474BA19F3AFCEFB8FECBDD6394953021068450A1F811E0D5971206D720D1672
3C9A8C553E6568071AD4B97DBD73F6B1AC83B5224CC566CF1D783EC7B15B4330
A37FC9C1BF23CE45EBDF833B9ADFE2E68556AA79171ECAE7B9E1E542F60192BD
3832A4A77CEC2EA60645ED4604487008618C6D25AB6CA52DA52C7BA6298D3869
752420439E590EF307E3EC6EBE8FDA806B70BC9271B58F35434A12E8F25CC476
CF01DB4FC6B5E80C2FBFC8F75ECB495B1941E759A7CA7B8E2D8CF9D68763C077
C0C1C3D6CA8DADDA97A4265D117BA2633A3826329C3AEB150A348C94DD0671A3
B7C2C35E19D06BCA74C76F5F262865786020707DCD9DBE80746D06C77F7CA3D7
27968871ECCB8547585E193F41FD503AF943049D21F33DD75105F2B2F18A1C80
D91EFE593E976039ED53E15238A93F53D2EB2D51359D72B23BFC19B9068B0366
3A126AD84F84BBCC0630BE9C77E57EFDAB7374603762EAAA72B0B40EAF7A1FBC
684EEAB78BC994D6BFFD0B156FC492F6BD7B6E7079274F6763C471FCE09BE830
EFAA1848D82076C95BF2DF3603915F269B7B231F5D9B1F61DF7CB03421C5F464
9A0A0BBFBE2F6D421DF42C12547C70BF5637F6D5E46385008A7A3D4787A96519
2CA6DCF61AB5B28E406FD90DF502F7FDE2D74F96310471B9A1B8341E49C62DDA
A700811BCD866ED15BCF2FBA48D153E56EA98C889C84F43BC99F252A64F071A7
ABB75A726F1EC0AA65DDC25283DFD19CB1D7893DF52D57BD6C1A6B744024CFC6
5AAF320769BC353F976C988D6CD724D33850E9238163713290D8847E144FD3EE
6ECB3F8B59115379A09AEAB66EF7165BFD401A296FEED926836406E96C49A48D
AE1DA613DD577C8F3DA314C3781B6AD8A675B3985D96DD31C832B482DDE4FDDB
8198D8F05901C89728822BBD59746887DD35C538AA0F8C0C05A86F0542EF2D38
F19F69A0DBA4634B7F00E93B20E891D9FCF03B7AB998D272EAB038A2FC61B872
1924E557293B6E7B49BBB86C1D4951EE7288DE66BD3079BEA5DBB966EE316700
226C7D4D2921499A68A8AE15F7CB952A412712D4145F5C6FFA5C5AD63F2CA0FF
6BE3B8CC09301BEF5ACCDD50E32046FCBDE45B9E7C914E0074C4F6D3A398A33A
4BBBB1AD73CC89431FF4B1DF0930F442D8ADEC45F642DD8A886A39A7E604A759
8180C7599FDC7A3CF5B6AF26E79DF06353BBF899FEF3A2EAA4A823554E47293F
E9A250E723A77BFB826CE46FE7B2426A09D38C007F28E2F992F03836E70876FA
C83B213333DAE658B403207D2824F6E97E8E3C6E374A2272E6511BD0987B6E4A
1FBAD528ADB4433F015939F71C4F0499935074B5B5A3470CA5F34361AE55FEAF
46A067EF4F5587DDE44F3238540F57899B311D578825A9DC9B110374E5CAA612
21CB271314CCED8FF73DCBA0DC335FC4B589DB92B21ABD5F4A1828236BBC63F6
06C708B4506841CABE171747E211861348BFA5BE91B83051F8A3E9827F6E4730
B1F9745DA9590BA94CE6D342DC4D294E7DC51C69967B97BD1F1DA360C4CF05A5
F07AA82EE633517EE593A104F3E07F80277BE4E8ACDF170C244CC893D942C145
C2204CFCD6A5C69FEFC25B60E41559DB97B19C6DB033B5C6294AA6F5B93DEACA
DC3D74926CD6C3D98B00B67B9CE1D0D743B5B27A58A5F889A5F13165F96082DD
5C44FA3993D3BD1D10C217EA56B73B3F2B6140D2404FE29CE4952D5E50B1AB34
F96DB9F031C40AFAD7A5210CD859969CBA45FAED42F2CCF34A25C1D515B7B661
98ED9793D2F90CD7D79F27B15F50FD125C5FD883B65FD333DD6A1DFD3F3CF247
6231B11E3005F3FCEA0A3EEFA4F53DBE3356BE438546C0FB741303E40B36D50C
02C0EBA0B810C0D8253B24BD2189BDEBFA9D0141E43E4E1496977C4A8DE96749
2B26A2CC62505033C4C42E803DD8D86EAF121DE3A186D64763191B8EF26BFB6F
32504ED2A679F7541BBA28513867EDA173A2E28A8CC136DC8767B74025EF5FAF
470A272F57F548D73AA56F03FEFE0AA5201A69D83BC517F09C0F7D604CB8424F
CCA097C1FEB8776D7F800C040270B499862D6716D9921141C618EDBEBF74CDD6
8340D52E137B1DB6FF17B5B6F587EA3E36D8081D645083CB8C992985DB99D9BD
2EC2F5F5F1B4DE109C3E06915E3461C79E71BD7FE5E52373C6468C4C6C87CC69
3DEC50289A51CE9FE17DE9159AE7BE0AD280D9197054727BA157B2B027B791FC
0398417EF442DEAEE261D53F2C26FA20EDE4425DF4AD5D504222ABB2C6694A81
6A7E158615829E59EE73573363006B95C11844E1F488FCC359CCF33B52931EBA
13F01AD5AE7DF0FD754ADCB4B3957E1B8A795D720A30B7DE482DF97B32FDCEAB
EBFDBD63C5B7CE8FFFE1D3D4047BC3147C442D8E30DE59B50522C8AEFA5451F9
31870F2A99727A4668071283CA52467F731C2C1AEF95781283E70978F408AE36
E536F9CCD4063B8984C3086470DACC5931E70A7605B52720FBAABFAC813E0307
195496F9091F1987CF096E1DBA0FDCCD9E831A50880C63D289080860674DBD45
742809064F8B894B76E97ABCD37C128178A0F79DFA48B69B228159C424B359AF
A8060165F889FCEABE46D0B6C858BC9E7F6EB4D96358825EB11DB6BD5B641248
29E5B43339633981A05156C7D4AF1EC673CD4212387432B272B5EBBE66FD9C0F
5923319454FE01CB0D62649724427CEF3A9F1990A0DB13C2E33342D40AFEB24E
186AC11358619B264BC4DD2BAA7B849854C392E05AFDC82F982875389F81A0D4
8BE5C3635E2D9351B18EC04D2B8F47B7A0AFFB93BCAD415AAFD831E404573C58
60E877242A03C53DEA5C69B29620BEBF01FD780E0983100AB715FA4B4C97C55D
F251222F772D668981CD337C68CB9F4DBFB4012BCE46FEB009049940F99D24D7
050BB8B6CE2AC29861917EF38084D649289E4600F5A67256788F406EFD3422DE
D5F57036E8363B3393229B149ECEC72C43393CCB42D8FB880F4DA4053549A930
53833E4EC70B61444F8C83118186169D71BB76457D1ACE41005A314344E385DD
EB10F1B7FAE9C04545EC61E19111736BE1363E8E841F7734B40317D687AB3CBE
FAE092296B7A96959AE52B94BBDFFB2BB10D3A6A1DB6E036E34C282C2E57D258
9EF7423C74E0427640157D22CDC9FD66DB92E9EE5714245B92F4DCB589B5A8C4
895D9EFE1182E11CC0E7AE75FBCB67288BBF928B644276D106E370C9F20A1601
73B95A0508317B32C89BB33BE4747AF13D0399BBD0371CD117D61327565F85C4
F5DABE2DFACD498230546FBFB77D56A6FAC5E483CA0C2FE1C3A59D70A428BD5F
F8CF3DB923D549EA4C8FD59E00021831DDAB3D794484C4A85B8F0097DEE9BA39
EBA94867E63CC03ED3A5C17C70BBC9515DBB6667A0E963FAE4C9D1BB679CBABE
4996D7829CA57157A0C21E03293BE377996B8BAEB01F0F81E2F33E81335F7086
B1713BF9D8EB2FCE5DF8E873AF92E7A41E0400C3AFC76DAFADAB7D3BB0F9DC7C
E31CAD25EF631C48E3B2431BFB2E12B24EC39E1164A06C9A13B541EB4AD89289
FA3EDB6AE5206B17216756AC75CB0A6B8FD43C58490E5807F5AD01ADC928DA51
82335875E90BB3CA6110F6D46D625B11ED8BCFDD164C8A2DDB6E607138E02333
C892AC77F19A5100E0BBA7D524EE4C5B5C706FC45D40CFEC0BABA5239706E15D
1DFB6E3E5386A1D75068986D021414BCA26F01818E8D945FE492C0C783EC9AC7
A95C0832ED8BBC34D48196354727A942CA3BD03B589E59FD355EA0AEC1FCF3A9
40F07B363A39EC579094DD434C2DD9ED792657C284D585D80669DA11F81BF32F
6FEE0C9B3B76B029D122A423A7B79DE04D5E3E9E29E2C6B2A27D0F7DE207733A
657AA48162E543B16DB287AC83E59CA6CB76F70DEC4DF12D6702537543C6E39E
8226FE2A652AC7CAE0A87C0F6F8FEEA3D9137DF428A563CF4C5677613BEA94BA
003031FA6CA3E19BE891AB08ACE7DA19E2F50FAE0EB69EC0AE666407756E9A84
93C6DC65A7C3623AF761979564CA2EF208D2B653B93AF76866E38F6F5B4953BB
6790BA3F971C27E56CC157560A9FEBBFE627DFFC6E90B9C4C9567DA50A40B29F
C17AA00DB566B2EC94DE5934CE2EF7C544AAFDD92534DA0E0876FACE36FE6F39
331DC4E3A2666E5F38361FB563378D8C5CB7F8729D436B65B80B38DB6EDD500A
80ED96EFFA1CF769F4A2A6DD033D6A0D6D82A0322C021122E962CD756DE48DA9
3798FBDD034F42559E3D0F5BB813A1200DEB0CEBAB8C20F82F494A32C5376C12
AB9606859F8B88CEBF2609ACB01D758D8C8839A5ED408AAAB31DEC78FDB04D36
F53B8FA747C6D9FF89781ADD9DDC306C60835972912D1C8B91E37BFBA6D076EF
3ED3C7CDF50D3E9219F908B315D8FC4DABAC6A8F16766A21AB851B2E87AFC42C
04FF587430F65BA9DF1582278E8BC7A54BD90BBD4607A28B0F49CADB5F47D4C2
F1165EAEE32DBC25BAA1ABE59A48485818EDC760E59C49637892E65FF69427CA
40665CB88C17D3C55F455CB0331611BBD35ABF47688CF50C2D10A516197F6204
5A81539DFD46DF15584C129FE982D4B29DF4C2488BD8767D1DCA5D48CA8F1094
905F21CEF0917E1CC061E828255CF22D3D1FA788A02E68FB6A91CF63FFD32B56
C4B9985F1D7F03B111381601E3735C1238FB68520A56BBDED554E575018D9926
74AFBAA5AA9EA029F95B828F816484772203F3CE739B5A6067C4D7849494E3D8
50852D77FF7F663D8A18594ACF496C2624F6F7E45CD885C5E032FFEA7C337BE4
10A5FAF21119B75206A5F117077B1506D0190F52DCC410E4C74E1C680E2F6548
4865CE1F09ADD82FDDA6F3DA99247284C06F2701B9D57754D643A8EF8A7D90AF
B517178C9DFE59CE8B036E3B067B364E0F72D0DFF060D5DFD66F262A21B9BE85
9DD27CB4B23D2BC73C2974A0CECCAC565C16B53C7C5E1A202F5363892C719E87
905EE7B82BBAABDD0D92BB5351D3A0B3071E8663561FE29233DC3E92F5C73792
78D200DA126D47E4E008010685FF17A1444B2D1596343B2564124D648B1E0953
6E1E8B3A8EF59F0297765D3E4DE71F0CC30B63C9F478D18DC1335904DA22349A
847ADE3C060AEC69C2987EB7A9C3D48458246B14631585122452AA1469B0C3DB
E760D0A47CB1DBC01B15FE8F820FB7BF9216301E19C025E759EB42C213CB237B
187A7B54F41B54433526B5BCF13F81804D9E5DBE8300564D6210CE95546E90A8
39440D553C01F1EF89E96563219F82D9EE50E2EFE26CDF2D15B0BC1883A592F1
337515A1AE127E2FB1B28258940F7F2DD04C55A4A4442B766DEE34F7C92B167D
B780BB6D7ADA1E291A67DA9DC8C112D33C10AA89B07A4B66E4DD3B35BF998937
89063BF7B01D5F186B2FCD9958F098EBE1BDF98378FC182F3179178C832026C9
0BDFC8354CA90415FF7BD6EB12CEF0C6CAD71F1B2EBD99389CB28D411FA03060
44C1EAFC503A0750027042AE2ED4D5A30CC2AA08330B9FC2E2E28374916E358C
45A337172A08BD49DEB714141A10B4334FA5A5B665E0B3FD76E051EB9DCC214E
61E8D1E091AEEF1864ADC733AE203B39580E0ABD18DA8559D7632BD41D1B82A2
8B48E3706617BDCEC417F721A1CA704913C49F8BC8243EB937E8A8FC0753F60E
E0BB86C4FEE17290D7535F0BAD8499A55B738A46C803F4AAD1A3DFA06621001C
51AF2CA7A39AE7654F667967F1459F18598E3CBAE1DD000B51AB4A815AF858B1
1C3D30681A1387AD17551FFABB11F5F0538FF9BBF73B38D613433DBD22FDA50D
F4433B0B8AED6A63BD3E5407065C052E245CC5136B1D3C93DB62021467C39BED
25D21BAD52D2348CA838B3A1CA68A22C5A5134CB0029D50F4BACFE7CDA4FFE64
DCF7591F16BFC51EA0DB9DD0C49F9E64756B4B5F2119B20D5BCFAB27289A93B3
10E14C6CB937C25EC824808E7EB83C015915618AEC56D17B695BAA6E2A79BD5B
4D33EE5265DE91D14A68CE87B38548E4C62B2ECAE693F327D25D98C9AD193F94
381CC4DC09EA4DBF6D7855B8849431DA4E0D14DE737964EB183F8B67152D4608
394B82E83877E96D5FF7F7C34ED8E167228F47D393DD4DB22595437E8DF94EED
DE8B754982ED18489A37A541ECFFC41F3DD3FD2EBD84B672F4AA14EAC2B0A503
8BEF688E70AC347AE630C90E7911C68F724E3FF7B75DD61B861EBFB5E76B20D7
5BD51C0CBAD97B9CB069A4937FD6134B13935AC19769600F7D6FA744A9FDE44F
9811361F0B5E6C8C4D85A2B9A83FAF407CE56323C7E4428D2EE1EC6B1C465BE3
5668B0A1F36E127B065F507D69BF5E60C95A6FAC2CF9D670F1FDCD837750BE4A
783198354DC5C16AA511B556E660B7C092DF351A4747AFBE2E6D1929EB42F285
4609E3B649C025E8A4EA0D3700BF9328B205457DA0DBF96671CA3F0EBD59487E
D52B6B910BECA3612B880E6C090FD00A9985A13B16D058121778E93631D91E3B
D5243E7783B012534B078982F2C051BFBC92187B119420B8FA8FC09F69B43CCF
1D69F55D56BE380C358B794C2EE6132CFE6936ED5F15962D7DBEBEBC3D2667AB
FED58E96F34C311F13C03AD805AA74F65566957680618C923BABB6186E6CECFE
E6ECB6AD565E77920BD3FF425821DAAABE9109FD3C1E5807203C5389F960C226
2A263D11F3C1C2454065B11F1D1501F7C4FF2686F1BF27180E6F9B009BA1FE87
D55CC27E5859EA562E211A70BDD212BBF5C835B85614B43BF2C33DC31FCA94F5
6F2EE78E51767F35D45441CC84EAF43DBF2F4F6B2A4626DBE86A8D22EA4755FA
CCD9BD76B717A8CC0B23758DE3959BA8CA4E6635A5636E6B895C8F3034F885A2
99EAF758FAE0CE786342819ECA0BE5124AFF65FA70E2F9AB3F0406D1C9E5F430
B07D3D7954754A34A9A04FE68A437B8306B8463247F1E05B34A3A9D81A503AA8
244A272C16CAEF6B64CDC70B83D345D9CAFA0CAEAF0A927D5C7DDCE03DCCB229
C4467A21315EF9B6230D3123380AADC1DCD8BD9144CC9C39DCB28457651B54D6
63389C4B5A88110A8D5DC91D28E13881C51FA679B1C17D29F23F0B247F8F9004
87DE2D38AB7BB422EF4E1C481FF3F7E0CB583C8605FB1DEE02FF872383BF08AD
69A42D29B4D95429C7651244276269FA38553136A95E6B7F441AD12126999FA7
1ECFDD70607C4FFA2F0BEDAC2B6D64A6930EF0F1FA9BD328DA2BE70941CC71CE
BB1EA14529BE16F9E7F147B0E3379E2AB5195667C671E24A5B08A98A05DA37D8
F2B76F82DF1D2DCDA032E13518293F790C556572C54BA499F49459A9E1106658
A184E91DBA9FD950A59116A399EDAF32BB5631E17975945918F2A26CC105BCCF
12CF0E044E911F74366983E8ED1BCCADDB4CAC9D33FC49E85EC7967F0BA0A576
E48E4A737AB1F794D067F16FD0E651C72C2CC8CA56302BF109369CA866EAD30E
F58F42E5D1E417F4D4AC65FE25D9CB4D188D70B744E5D336C31BA0F1EC42AC30
C4633B7C7D4AC816DD046F5C767292FBEE91127DCF762E6ADFE7A31326783358
C15744EEC16AD24C4603D1BA3E926671E31842C759229E2D66477D9526E49287
6E68EDFFADD2E4AA3D5831D8B0B7277F6904B70062C170FAAF08633A13C303EA
E11BC7548456DC42009DF9CD5B6E99AB623487EF308B4437F6C486C3BF163983
67DD2F1A199FDA3C8FA50A35202951169C8E0D58191070F485D25B61D216B6DB
369724746BF41A622D9415114EB2F3FC4EFB8EB31E6D5FC58CADC884CFB19E11
1895943C6CE54E4990F54783F3F123332EB9160F0C00EBC4F8E80A54D1109362
3B9D9481EFBB21E123D87B9B9CDD822ED16BC6F57159D2EE67344D9661BC9B67
4FCA8FE2C5FA3DA9FAC147EE57882F78857C87E574E30710BA9731D8F27AE694
4CAD17D45DF9C35CDF69EF9B49CAA77040D3798224191A7888E67E7AC8E934D9
93EFAFC5D3C280C6065CC8E353C010C25035383201CDE43E7D913B7CBE1AE481
9EA9FAEF1C4352941A09AB5A195A605234B9D3F08D50F8E41238F42DC735B1B3
247719545FE88D186373488719E197E6C18FBB6E93044CBB83EF48BFB08463FF
8967E3518CDE6EBBBAED8A49B82FF79AC6EB0B36E2F4794FF8D8C97F27012BC8
768DE3DAF4BFD84C402D527E838E0D6C4ADB40FE6D22505EC7C1DEB88CA5BE13
F85373A87336548A1ADD075B1CE78189E52FF79091EAF4D42CF6A8D325CDEA39
425AE8849A4C0ADB6473D0A480A00C51EDFC22E9A3BC7AF35466DBE6B6F7FAB3
90C83DE369C48C97243377ECA99EA55B3781A7A6A992819907C8F393567795F4
AECC1EFDCC281D68285BA128E09B840E807E6F675229ED23AF7CE0B126BF34C1
FA896B079B06090CCF8ADE92D32ACA3A0D44585E55AFD968135F6492A9381FAB
15EEDC45A5A65A71E268231C07EC0F3AAC23375364986AEFFC1B16AB69F3BF05
75F598ABC5B57218EB1A6AC348BB6970DFB390317A8F1B0971C84FBB39F5FB23
5267F5E3FE834E9627551D1B7ED85A415293EE84EF32C0567E82A56B2DD3F25D
5A9F620224A0A463B7BC2C470BB6ED03D6C6490988311A5C70DB60B784FC038F
6DAAC434506A256A93147E40F3C563185662EEE213EC867121113BB124644F92
E34598BDF81AA6149CCC4D1063186038E5DC9AED0CD76DE2B8BBFB516D51E153
44DE6832985E6BDCFF1D94F0F773B7D545F7521C2C0B0340F42BAC7DD6CA376B
60F312DEC324B31B9925463626648DD1F19EFD284536F31F7CF7D9EABCB9960B
D4C526766BCE797E0C76622CAAD46DF7133E8CDB064A235D595438D4440C73B7
41EAFF937133C1D05AE1D2A7A3BB2D2B83D4BC4BF4E448FF6C91B34553FB0541
AC32F06515CD7471054DB6B5D91521166A1ECE7D97574CB48B22F57E2E371DA8
831020047591C4260450089DC548ED86155ED051D38CDE37A997758CE0433307
E5B68968F9E9BCD3A9292428B936828468BE2DDAEADD2B658E8897B4D35486B4
C49FC3AA19BECF65132321BE7A9DCE1B9456A8F32CF3C51892454C7669C9B96D
0089EA127B4A5EB38E31C7F21577AE2AEA2111F06336C394A67EB4705D5E99A4
AF288B736B50D4D2004F7295D860A2974B73A9E8B594BC82820B0327C6F3A032
83BE32C9F784FEF5680B725E71870103DE95B5A9D1FD458D0F58D3954BB47376
12E1CC382C9224B27267DDB7191C87A7641E61E310CB03C6EEB56FEFFCD94410
4D7438C35B34B587D5A7A3B506BDAF29369F62CB7814140B85422DD886BB8C53
B28E48E232FE7D29562B3B035E86FC2C330B4F75B2FB0D5A087CE736B14E6BB7
3F40DDD73F4B11BB195452F6D1A1689A2BBAE0007448F083D5E36BD0F0A7165B
E3EA9261F7BAD646B373701920E638DB8C5BB3FF454B2C31CB7BA76413412F70
46CE910B889D88A21763A97B8040F541FF2DF0E7AD1E993050B9A735495615CC
47672C970844D8AC77865702779FF2E08D87B013D4409759831BE693C4C5DB51
05D2463C9E3DB2B8F1AB6653D30FAA959DAEE60A27AE7D7116F771FA53175E07
065AAB5CFCACB826EFB41D1A7A6F59DC8AF25EB21E0322545CFE3285AFEDD87C
F46710EA0724F65F4DFF506762286E5F5AA0B73BE21C91DC891ABB0F75E835AB
865047F3FE900978937F5C97252EECA5CA374B6FE324A817DE43146AE4E04FA7
9AA91C814B18ABD2C5503CF3AE7934D6F3B792A1257B9FF5EB18BB80A6425EB7
F509C11C782AD411091E49BEE1DE2CB46924A8A29A7F56D0E22ED3B0BFE76C29
3493FDC208CDB8B9DEB3431DEB2E1D93AE15DCE29691B4AF941055CA2C6701C4
D3E399D99D353DE3D826AEC3B4A51F042F72D19DB266A3E209D801CBDCC8DB72
5B8CAC69C8674BFDC2AB5EC4B242CCEA8E4E12D00EC9C82038B79D6F803FE750
71D346914E10FBA0CF39B0D6E63347F1864F7B7C2234DFE67384E665E4BF2D4E
52AA0049D9DECEA18F0C1BDF227CFF0651F978A098BCA4B7309A00C3DE92EE2D
81825F17A1E0C9BA9855142A57C24333E7E4EA352900A291520B6F976DB8F317
8EABA98705084A974D42AEB97F6B9C22ADA0BB59CC9C781CF4A55D77AFDB8914
9FDB6CBC044E71F22C338D32B80D8520FCDCC73F168DC091161C2B5CB0CC16EB
E19CE4982BD9F6863986287D59419257DA4D95BF116C42EE72D283128CAC3B75
7C9C9687F5F2FF169EFB179F351861CBC0F205D27CD5C7CAC8FA03759CDF65B1
B676C553014014B20A3A70468CF7592059BB1C4112BC7A036D8AED5459ADA2B4
EEE7F2B9A3F2CDDB9ADDB0AC8966D334F0147FAADB5E7FB3E3354743EF8C9327
13E8F0FCE12A683AB99DFAFE0BB0870D2D82DDF444B3B1D6C6E005D398AF5C0D
313CB0F8C088F35F2C0AB85C22D0EB2A7EE782531F82094587286F696D58FC1A
2560DA201BAED75351B15CF7243DE7FBB851ADB2C72C0070C8B53E128BDB6370
FA6152CB4DC76C5BBA284A89A131130161B6B8A000F6F36FC8C08D3A9D2A099F
00DD7C9BE6B7C56C9816ADE07DD7C75929D1E308F40896E01CA8B7580ED270E9
C1651D6CBE4A12A24255C8D0D2A8ED3F2017C27A1415A42EBE158BF5921B120D
9A3A1700FD955C0F2EED9284B21756D5BDBBFBA778E06BD621190E75633EA1B6
7629185D47DF913B56CA7FC94997B7E1485430DA42F43D2EF7B5F545D305397E
918BC4D7F3AA612E0FDDA62113E694B21CC024BC3BE517DEFA8274E46E4038FB
EC59517FA597B8C84C9F775D1D8F996FC5C48A047411D20CE0D2BC6E8B43F32B
C900B78FF899E3E1F7CD612281B14D2CEBE6E909E403BB596A6AC5CA32C0F83A
92B78DF0ABF4C3A4A9BF92E2EC0DBA344B2B2C8739EBA56B967D7DFCCD49308D
07503BD2EC69D7858D0B941C0590F7708EF679C8D086C0E64BBFE2F06E058BA1
A9BAC3F57096665BC78578FC4FC999D4FAAD38EAEBDF686CE777DC6CCB1FF4F2
D6C6732A26F381A7C156F179F82ADD2302ECE2D2AB820C56397BE7E544F1BB9F
79A89CC63464826D9CD8A075A903C83A270FBBFFB159F8D4EE634E969D614648
345646919F373C832AE1EEF02B3BE1B474666CC063D08BA09A16A538C42C264B
6F3A812E0C17F5C1D43315A11FB186D8139E79B42733E7EF1E7779E659E5EA63
D989094DB14DBBA82369F70F9E298B3BB482BB1C182279F1BCBD4F3021CA857F
961B8E4325FDE281E9F630142195A329645353A4D410D0FB619C4B3777008953
22CCB28CFBAB2136EE3F61E802CEC66E8711AE658E732BE8F5EEEB27215547DD
0F4A42C5665AB55E09B9C43DBACBC1CBB32F277CFC10E7A19E9099F172BE00B4
815120EAF900563B903EC4550F28980D4266E020EC7358F960708CB1658111BF
01A82BD5A8144CD2BBC630B773BA6B0482D4CF6DB8D47845023608C12677161C
4F2892833EFBABB8A46651B7430FE1A3412AF408FE10B65E138C330B2282E4CB
0D551637E2C480BB8A583854FE1842F2E4296670E801D70B624F27AC2F653AF5
59E27B46440C1A00A15D95936E6A3072828A7A26CC9C10FF5EE9782B26B562D6
A61943CC502DAEB332EBA1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3D688629145C12242C6951438E3E6CF1B83239570640
6F435246C135BE54FDDB47DFB318A7885941AD2293441971A713762B780529E8
CD5867D3111E875E03774474BD86F6AB95AE1170DBDA9AC3B3376F9E5CC26905
718DDD07C6D4A010ED791CB407A7959F6668F66D3D48597A0D1D29BB25924706
B0BC0F896A006470C97F9C400CA7E283E58B1EFDF083A5E8E4B299607534E588
FF88BBE199A76734AEC487BBB103A8547A0090F0342D4DD266B9B4E40E5BCC6F
9D38A98AEC711A55C6C0D1727985D1D1F0CF0362D02534F7BD45AFFEE4A23EA1
5D91EEFBEDFFC59EDA04A147FB51227A5AB0C13DBB37343980D51CDD3524F0B1
46BB99BAB1D6B99D6CD383E6B58BC879DC734DED754FE99DED43C5EF4A2A2877
24BBB8E65FE1141502C1218C55773CA3C6D3D4F54BEAB6227878AB001472B32B
D540B24672F7383D02DD3E4310B29A262C08F61713E439B6E14230F12883D91F
721ABD116A40698F26610853E7FD07547B399E7C89DC19215FA388179DE4D224
F19182BA7A3CAB49A2EAB9CCE57B8B14C53BA2265A495C28D22DAF05587DE20C
6A2FB7BFB3FB3ABF1671EF09909A6349E72679AD57294AB13E45AEEB8C6EA105
696E341E48CBDFFD0665DDC72FE8375C91FBD9035841767258B8213D6FD47324
B47C81CE0D182168ACDF7CEF71ACE336CE5F96174DE5818862B948215A40A87C
FE2F881D6C455B0BC940D1ADE3C4488AEDC5005E81BF78DA7F67FBB9B9F62E3A
3E951935FDC18090714B60E3CC558A1884C223247C65FA99AC139A69ACDE989B
3FD5A3852DCC46E5D1FF75F727D4D0BAD12793CC7A3BCF93EFE142E628F7D0CA
F26937B4FA3A237101EB114A76071C72FA946AC005A24A5FCF05D552D01A3184
68CECCA9B3B3E4C94830361C8115DC829905CDD01E94380CBE521E7C994D1D49
ECEC8ACD83D9DC1A32DA0DBDB32D0639469326883DFB3EB92B8081D4F116117B
5E44642E107D796634544F74799E94AFCA4CD4A23F427075F5E8274D8F615AF5
5B76696861205BDC0EEFB21E7E4B7519072BBAF2108731C5E1A93ACE19B1629B
9449CC652316509D8ED5D04A63D7967F8FFFA8BCBD4D5D878F6EEC72494F56E4
ABC6C4430B84AF5C150BD216209890529F5708A1C3CD512333D424DA1F7ADD10
1326738A147D19F873C761DA5A6E6902F40F0A17BF3476DC9A77176B014C8DE8
AC821E530B42AA5CEB1256CF4F2A098B5809C23DBE0A77F14D53705D2881EE5E
4AC20E54A8A549208482AFD00118A810524C6FD42BF9FF661474F6A725BD5B1B
18A571B26DF49A205EAF6BF967F705B6B2A4470119A70C83773B931FEEA3AA29
8D271EEC3102314C95116F1EF8781073900576158B3D282BF990AACCF6C73993
5AD265445D83723D28F9F86C7889ED8FB692EBFBFF12E07A2504231AAF759267
2DB6969D01D82D7C399BF9D8E3D3297883AA09111A3D2F612CECCAC82DB2029F
334D1FFF95FC37CD6EBD92AF87A01002CD57C8961D1E0E100F69D87B66B62D89
0526E6E2E61409F5440BA9284C17A700F88409FE2961D077EF68F0F7D98252D1
BE180EF721F122C9B45273EA88AA02B6336223E7B9236644672B2326F84B3EED
492DA68F2339F882AEDB4BAF9E18E3D92654B1711B58359CBDCE534FEAA49AFE
E00307FDC5A7BB1F0CA0E7A4840A7C5B6F048D3878291B6133218678AD7B448F
3B23249A9AB890628B57BE9234791F85DCDCC1DD2F0D454DA8CBDD8E79A6FDEC
0F45B3D604D84385DED67BC161FF34F6A889A1F664547102CD80F6037C66DE28
C437DF19D232789CDBE833BDCEA57B14915605D791C8BDFD7EE09A72B7778FAC
ABF53671ED0D841106DFE17A9CF65FD4B3771CB7FC3F3A83FC86EB39697E5050
B3816F6E7D2E7E5B19B229D572855DFF8EF3B8AD9FA34BCAE53364A3DA473519
C670B0BC96B2D6A2837F03B381B6927C7ABB0D5AA7429027820FBC9366C0B9B7
60D8C0A0CCA356CBFC3F7C51A289C9A207129E01DFDF751E7B54D04F5353369E
80634E95D855F559767C0AAFA889D77A095A03899D4E2C28790825FD42273F49
E0F8EE1DA6B4E652B388C76EC544A0EB561E8C6DEDF7591D0E7D3C46F627F7DB
2DAB7D0DA1DCC9B457FBDE7D6C901C33ECB7CC444F98906AC32AAD738BCAE839
75773D322DA93D9B52E7A08BA1A58C083592420DAC1B26489864CE5BFEFB2860
6C69D5062B695EDF2CC29B1D9DEB2E287C6D6D81E6D63C6AA51F31C0BE06AC72
F5EABD1D68E37763832B61387E801530CB9A6F9852C63AF8422B1B9DFBC7D547
D96627A79E218D7D9CB3CC42FCF52DF514C9AD8CA82BE45B6BC59A3702FAEBD7
A00B8E86734570FBD4F17FE4A065911C71CC394B2672D0E67D963688B56CB560
4B5E19EE17D15989C93CA812E1C611F41C280EE0327A8197F5924E8E14DBAF76
EDB5914FC36784FDBEA97EC5A6A4CA234FB4D56B85C44999AF3F1F3F5F0FF9C8
58DCF484A69EF26BC8822389227CDCE27D91EF20B72EA1C102662EAB1EFE3AC6
D2A7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4ADBD0F3C645F1DF7055DC28C1B3D94AD7621C7DE55DC38
5B2EABF7768090FDF7617699DE6CA9A8557DFC573A203E4C8FC790D933E2773A
EAEF57C22D912C86CB6CD5BBDF84D236FD0B0E5186F6949AF0A7D30E9F9FE438
356399B49BEEE8FA92FA6A07625BA11F8147B49DD7F33D5B4AB70E7066DE7A30
7BF33C3021A3C3D207F5AE931B828DFD8D71077571051F78E2F19FC9A2805325
F9315BEFD663C5F21C125165A6507983B4F3E713B1FD61BE07C5DCCE8CDBE1C6
E174AD0D12926D48FA52C23CCF67CA8BF1B1274494E363BF0890FF5C1FB42070
C60DF4B6A87B879E66D5E87D245B9BCB88933B6E739524DA99E494D9E1FE8EB7
03797B611CDDF0720D8AD16CFE8FC26805B455408F5A6FBAEB64C95D242C373D
12E65C73C398D19ECE87B3B3A3E3EF296D4905B255A51A32D475A12CFD537EBC
5118CD82413D837E09E4E9513326F34D1792C17E259DA17DC79899EB338C037E
D722504F0ADD190335B8794C3100FD08A3A0E9BFCDFCD66025CFCA26CA6070F3
F138947E9552402C372136CEB7BE8A5C27AE952F4946D01DD1D65C1D50D03710
90691FBE1D0A38FAEF19EEBACE5CC1F4363981BEB79B110B7480396A95AE75FC
21FBF80A9B051A938C19FCE06A92C2410EEC91481431DFCE80045CD073A8F0C3
51EFC433256002D2028492F3978EFB0530AAAF99A449E85A7F0AD638861633EB
4534A06D07B90AF608FE6B1358FDAF4056ADDF370F3C60678E741C85026C53E9
C2300CD61A81954576B522FB442A4806BD491A18FC70CAF6FFBEB70AE878B9FF
36AE86FDB44E9C724CE688CC8C9B7E56A46B87152C61E3E0084B6F5919598FBD
C52F4A2DA682DDFDD93588E13B19B08630E5B4945F61D09DCBD7E32C0027AEE9
CDD8F6C7C11A67ABEBED27BAC915531365E910E600652D4501E140EF3ED7A1B9
C2E885C88F882E29F4C4CF1B466FD2FC56FCDBA67796E5922EA398BA501DEB8E
DAFA3F8FB9BC10D0639D7710C64BA3EB80C1911014F052CFD0BF5B51960BE192
4AAF769087074C1478D75C27FEAE58E6B3FAE70993905473E9B60B722F93662D
ABD7072274FCBCFD908169281C6D23D511F2C19DF28D4147030D9A25BDD519D3
49966A098D8A2AF47162F944EE37DEF93B5658DFAD581A26EAF3FC3894D534EC
1E9B32A54A1A75D295ACF8254D998CC5A24DFD585E73160D630EA5E9A96BD92C
0E1DC957E823D6F0E6FAE11FE13FCC7E4FA05ED551F5FBDB72F86D67D64600A3
582F6D8402CA44650FDDC48A3B0E1CFA30BAF3D85448394C40530503AD618447
8B839BA2AE3CEBFF28F7CAF65D0B80EF530570CF99BA51CA81F444127107E276
E50DC2226187F94F040DB0D1E7D209DF769A26F28D71C7D151C6C2E1BD0DE2A2
179157B31E77D44F36E87073A104A0E1D85EB60F480B23556A58CCF1997CC381
E569EE781E2BB0399DF27E93F1FC116E71C97F7FC622B9B0E2EE4AE89A6CB076
3A7D4046572A526984736C745269BE8109A2762CC3C6A6BD392087449645EBD6
74F3CCEE561D69EAB8A297515B9F7AC900CD46FD2AB458830B8ACB2631833685
258242CB35540743D9DA354A3AF4115261D2B36D484466A0D5AE254FD32221F1
D5ADB32DC5CD7782B93B748F9FB2A8BA0B548F4C4421E2D4CCA802B481834ED3
2CA896B6FA49BC1F99D109A71770B381622CDA4F98D8BFDFDFBC6E712E496CD3
D6AB3198D2B13730FEBD3DEEF58B040730A79ADB6A4CD1C5409C152CBE125680
AB02B561FF49E6D90C4E52B2FD26339A5D24CA831B3DE11966B36E1847B7FAEF
80A1BEB8023428D1E9CF2B72C4BA5D9BA648CDBE6038CF2FAE66BBB365E1748F
FC7327D3A1529F216FE80E900846BCC248631C1EAEE1762BF07BC3F9DB5D7472
BCCA68025DCB1C8D2F2C2DC507F319A53422111A1EA1C880F2BF3B92E37F056B
B06D0605163309B4A0DA9F9BF6866B3F97048294C10D6A288C1083A1898C6774
B3FCBEEEAEE4958E430DA6FAE14F6AB4DC3E1A6A768489B0ECC9F617FDB45C9E
86B4BB2DBC3FE8F787993BCBC48FFCA6139351E7195390ED9C304002CCE86388
39F86A9706D4DBF38BEB7EA692C996E85A151CEECFDAE05B04DDB4B27952C374
E30F2D092D82263A6E7142D9E89169B5C3DBD4B116CCAEF9C64F99FB07A49FC9
87867857A00D35207D81F36F83DF9CCEDB07D0B7AC4F10479488B212D5349372
8D56988EBD88AD4207A66B9F1C631F0FE382955D3F41D8B049F89EFB23199475
A4132AC03A25067F45029CC608365802B8375C0E6E184ECEEAE05E113E328886
90A9B157C9CE8BBB39A75090A74C3878ED8FDC272F4F01FB562BC8F20831774D
B7EFBE683E8509A589E072D28273B3BDA805AF58F4A97B524B541F8D0174D63B
34AF95BE7C8539E71CF65E15AF6774D097C79D35433EAC35A9E7B2F8BCF9CDE2
15FD23D3CA12812B4A38871C8672F7C48577E51625F3AA8526F2F8588E9B7292
ABB7AFA3A4D41AC81FF17F5057267CD33C48D327DF1DCE9FDB4D5DF12E9DEA57
EECA6EA4ACCCEAFDFDD407199CEA7A928591D8E6B023DB72E70E7347434EF705
99E8E0547FADA630A6E24B708D8E39500C84B45C732C1B43D0285A269CA11819
A924864C7E8B9641B549F53A6273F8FDDA104F5602539DE8DCD7048EBB2F6CE2
A3B9A6795AF42392CC9EFA4881CD5764301578A85CAA1782BC5A708A68262B2E
29017C7BBFD7CA7103CFC94E4139435E0007C20005B39C19BC5F33D135CB418F
442908EECBDBEE8BF7132796CD52CF5B4DDED9E626ED968C6FF94850939ED254
4031224E53766D0906B2214AA8F0A41E0C78DF960FBA471B71A58D5A5F9567EB
712FE6F7D9B37F18F574D5103A4647B54B935EA59FD6A8C125C6A24EB2B19228
96850FD8FD93DCB15283690F4A66591282662C045A929D02B3094E858445125F
B0B933ECAB0AB431C26AC08DA98886998BFB2690FD01AEE45085B173D37DE42C
7BD1706C8FB3BA1A8ADBDB33922F2ADA4D28E1CD2184AC8F9323691C5539EE46
A7DA1660AE2A9F593156A8408C24B0951A17DA3EABA0586D14D119B6A283EEFD
BE5D04EF4257F2975CDB473AF70D66ACD060FB4C134A8580E843B5ECC7A8F381
53E8C8CA1DDA1E5F9C4C5B93344203A06EE3ED1C9F23AE1BF4A1495BD2E0791D
D8C79B884AA8E442AED5122C55EBA8E8ABDFB164462375A4D53E8B08D8FC8B56
21A1E4B941BD463F94C3AE6CF31E030748189C553B35BABD1AED134EFEFFBC85
51076A6258AD24A0B00D03183DA63392D6A3B73A38E89426A344FF66068713FC
8D066E63B3463F47153569272CD7A8344CB4B3B9D15EEE713EB13E730B5BC528
9017192EF09A9DBCCCBBD9826CA6BB15FA686E1D70D92F71F94B435D75957445
B588790FC63D897719E116B36C3A204B2087B98BA602CA9849ECDF40D71D79AA
6BA9699D0DDFBAAF08C4AEC2E22C4985DDCA0F92E6907300DED6A5D946C46D8C
9B9B1A99CA5FB9C59C7BE2348F24EBBD16A3B5E98A9054A22C4FE1720CCABF99
0B67FDEC02C0EAD2C2EBB1D501AE6C738789AFE57D2523D3DB73A932A089E96C
539285A931128D37424BBDFD3BE3A9AA79BC631AC9CE32944FABB93613CF0A53
7DD0525F35ED5422EF2018E81B59D55739EC9B0DD2CDFD276C74147D3B225013
809C558276C7129FE5DD6BD084659AB58C8B1D8ED216722D9EA18CF949CF83AA
BCD705EE364CA623D0D79BACD67C708475DA4A866B7507C781182B8436A4B228
0AF0C28B2D1151582F6BE18C84382AA0B718C604E75F78A8BA13BE81FA01EA0D
D819AB5E1EE045C9D703FD3399F5239556FE9D273533009E9EA4F24C1CD4074D
DDBD17863656676E9652077BA0CE5BAF20482C9ED13120620AC33BC7BD1E6D1E
B698901FD0AE5B5A1EB3FA956193418AD49A395A9BCB8B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BEE85BA2BB40F538F55C11D50F882B739138
48C40C08476F761BDD8D791CF23DE48A9C407138837783A7A619EA936D0B6239
F72579B0E99370DA9C9AE14A6753DCA4A6667BB22C841A91A8AC118812C9BB04
9DCB608F8DC52CDD6C52BAD1A1502779B638DF933793E463238A36732C3ADACB
0EA238AB8B29F707E615837444592036A2427850EBD6C17EF1545EEE457EAEF2
8C8D76A53677E7150CB9A33D3DFF3946558639A6DFAFF2F6BF055A524058940B
CF1CA8D16D9A2D6E64C044BCA10C564EE265DA452D7B6433E5816135B31CE8B8
BB9FDB01E4A7E246A98E073443AFCE3DD2B1B8A93DF1856620D7CC501580BD13
E4F0D19684EB8773549BAE43FF1AD0726CCEE70F1AA9CEDCB21C2A3B0DF78B09
19481C505E451409F058C657B3502B5A26E753AFE2700E52F39743055B62F027
5AEA4719416FA35EE1C53E92313C397F0A208EB0D328555C5B86713BA4B827A9
6E1EF33A39173CC1AFCDF3D52271D6CAFCB00B7BEF6E47AC23B920F7B535193D
B8FEBDF4B87DE5AC09FD05A1762B36FA02D42C15F455167DE94BAF94A4BB66F4
0FD286D9769861DFE1683E2CBBFAFF817D3382959C18A903DF75F4A3D5762C29
295E431425372F765EBB37367CDB40EB73F4BE5C47E19B535F7EC7A5A4B9F621
4465171F3AF111E2722605554A46271AA4F65EF4832B592CBC9809C6CFD90AFB
12DB06411FBB41B21BA01325A524D676161B14D376DB237618616EC4ECA8CBCC
9086AB4D09E359B41CF74AED5B75C01085EAAC4637BA9450F00D4F0240AD2B9D
62E41C0BA3054383C5B9A3F000EB0818CBFCDA2DFBE8846E142A9B2CECBD5F40
713999C97BB9F989AC66AD864407F5DEC4738283E0B8AE0F0492EBE6CF79F6A8
AA99949CA91F15452DDADC572A39FFB35AD715BB0DCD4B3C7CF7FC717F01C74D
1384B83A4B674AAC70539F7866D7B3B832190CC928E89C5355F29E7EE697BFFE
CCAE75C27AEA6C7231D88ABE642223D82A657245105757BE84B599C63F2C3356
6C0086C730D91093F42EB0554BE826A2F95A986C62764C4627CB1675AD8F922E
6C8CB669074E47393EB370E4F6B9BD413D4CC15B85509750AF485DE8DCE8D6F7
3B297700711BE194DB6748FE4F98AFD044877F327F213B076606C6576B969745
7E6FF9E0F1EB6964C2FBF17E8E01D202966794ADCB2AADFCCA798F2E57C0566E
A3C791E7B530885A508D2B610CA7BD6C31B86706637E25732B52A08BE1EF71AE
0732F89FED1E26BE5DB8A5BE44E0043B5C73E7D6A82461ABEF2983B43D784D9C
57675573A5BD451532B9E75E499A4499A52A7E549AE4DD1FA1B75F4FEF586267
439F149549A6615B4315E82C359BF2EA82E2A4CCFF81E8B58F2F29E19F7D715A
D567F556BF49627C8CA24D6B70426ACAB0D7234C04D1325FEBECEED0F2E7B9F2
A677FDDD69FF7796C609FE7A9F107A419DC162A7229546436378570253F9314A
F146E6642DDBB13A00B6103D5F03C92D885953DF6CD1C03F7CAFFE1EC3D3A270
530780EEA08AEC4786551B7514AFDF162F23DAFB58CC51647721D4F7F3FB37F3
6472F6B02B8A87D444B44DFFFCBF4181A86F0A4BD25C3921CD2BA8360EFDC5F5
E0141EC96BDBB7F712CE93ACE28EE2BFE7B05EA1E2F07973A741653B6DEF9E37
BBA262BA683AFCCC03AEB3C59CF1BE5DF4BCEFC85437AD39454D6756801D8EAF
F2CB0EA7EF8149006D72E2112DB78EB51A8F97264607F6FEDF59F6220F55F834
2930A75193E883C04AC3D262EFF196C10136869186AA71F0C1ADF3AA8290123A
8B67E6AE08325E059D8D3F20870038B6EA3C5E41A3E6E6EAE70E60AC2B658B25
7FABC2CF76D35FADC354CE9369D5B87FD457EB152606CE2C64EE3D49A20E05D0
5F4726AB5F175BC47A65836982C22CF80AFDADA54DDBD91DFF437FF75783A636
10E47DC498C33F37E0080DB96070BBA2BA84700A9F72D598A43D47BC25601681
9AE4E9D95853BA4CA95968595A23B2F32A46B578F76FE7027B3CFB43CFEB5A72
D5B3B22BFF3FA494F5FBFA38486197A1CED5292DB4D90A425D8D532C28479972
3DCC04CE3A194D0D05C3E1EB84CF88A7DD5419F12E32DE866604580CDC0B07E9
FC526286A98D901BB47DE5D3C0CB6239FB2D5B4AE3224947D5AB54453E6A4C7B
7F667C14A284047744C14EDA3F079C1C56F4D928F66027A6667ED51E045924E1
8F0722353CD43932C02CA9125AA09D290C96D22C17CD43FFA008B07D7667FB38
5C61FFD25725C9AC23F19267358C01209DCDB8524EA0501EAEC5D21617E9E56D
6801FDCB619BB7F179EC5881CEBF7EBC3B30AC8AEB18B09AC718320C8210BCB5
B93E04FAA62C2147ADCC67517C05D3140DF950DBEAB698898B8C456B760EC883
DC7C18994FF414A4D04A28C0E938F608AF10E3B31B98C36E5AAA15FF93FCFC93
271EE576454A86A0C216B224E0DE81D66ACE456B5583332BDA82C4109E89E7CF
D5C7E6C184E7BB76320865DBE500F74AB96D945E03481E0640B8DD548160E588
2EC03CD003680E92F0D10F566B7D87C01ED5E6E49D89E5B89695B5862C96EA12
43561331C2D9EE7B65B8214CE30DC4855D7D17D059958DB2A907C0843B26BC24
8AA34F0EAECFE4448F77D161F6228107C92BBA3269401CB8439A69B75DCB34FE
C581E5FD8846A45307AC3C6AC7D299276FBD020EE4F28EE492DADDE9A7DC2F40
FF95BE12BDCDE0AB54DA1A6F332BBBD2160632D7AC1BC0248462BEEDA6757BBF
ABA93EFAB83803A78F22D80EDA1C2527F4D25F4667FFDEE2AF8A30E836B33CCA
7986436F2254E04BEE398F16E09681886CD627610737CB42966EA3F47DFAF030
A10ABB310B4D67130AE7053A2C227BF147EB916C94394D91C7EC0AA568F7684A
6B37CCE936BB42E84547CBFB95D27536CFD0723A39C93D6B5D08E759E6B7FF6F
C207372135B875DF11865C20BE5944EA064215A17CE3FC168AC57D5611ADE424
14B45B9B2E8BF75D064C594859D2A47248BAAA2A6D4330094BC0F348A0C85971
366F841806A3EF9BCEB1A196F9401A0C475D1D0471A1018371D5B7758A43F98F
4DC4792308CDFE2779CA6F2168BFB249DF4AB0F974E93CB3F3296C733FC7489A
0FE4C2303174D9022512B07ACCCCD0FC88CAFA99839629CE4F187D767EDE855B
520ADFA07DACBEC45BBF0C25F3911A9D0164CBC2FDCDF94E258881ECFFAF1B94
A89FAA41131DDBF8D91B3909AD56F61099321A702FA5B441C93E902B34C98007
58D65193AAC2F0809E2B80041259D760D7B237396F41862B58DE7BC071016119
0BF4DEF69775FDBA7529600A4723BCA2096671FFEE9B7C4B058BE8B5CF61805B
B2B82DD1F047911BB34107E71F1884D692FB4BFA8E2E4B6D5180825F9C769CD6
11F343C793DEDEFB0A2B195538DEA52FF18085EAEAE51E4D7B7D66B4481823B6
0F897FE01C80C6855C94FCC02CC2B21C06BE83AEA88DAF729136220B103C1BA0
F0E522055846D636249FB28B7C58D81EA17C03278F02394F4611CEA11A59B78B
90C463CFD3ADA9A893F6281F1192BFFEDBE544A95183E9A00F23B8C22E9557A0
9245577F997AB5022480252D5611A19652FD2A24E2ECDD3E91D91C57D855D818
C86819DA7A0A6E6B1B0A5DCED9628B01EC6F47232DE5CB73A83C1B82D506C62B
19317FDE765000BCE9A1A61A802EE8ECB4D53EFCB45F457DBE548C32954C6074
7297001747473ED6C9BB92BC653F199BD875EF9720D177DF67BD277272563449
43E4728D195114A9B35634AC999453690C2945D129AA68326F696544F6B1F129
A854A81ED65184618E121919A6E882C369AEFA43E7A19A87A47BC3DF2C960468
1138E2B4D24E86C0ACB8FBDA3F0FA3DC2979E7E5A36EB4C1CC67BBCCEA84568A
BD139F70C1EA8869611D9D4D5ADE1CE046EC3D22FD0D29B686CEC5D71A81C043
CC0B56F71A0412854F4BC16A4CA2BE0C84BF4624522F116E8F602AACE82221D7
8213984E0E17FE6AD3693457C215FE046796B89912BCD081546DAE1EE9564A9D
3E07106E80147D7FF2EC8DE42D3BBDAB958A4E4E57F1F0D6386B53A681558677
A7ADFFCA03CCF78564288A3818DFA72AC5160CEBC4F8E80A54D110435B8D61DF
BDBE592A1205CB465393A7DEB7DA08B3012A99FB2FC7F6FF7AE5716CE3E2D422
13218F2ACBB2F5361C86BECDAEEEC705F0C5EFF3DF1F7018376F68D27AC36660
F8B1F03444A2D704393995AB14CD756C4CA37202E05E0BFE9B820605676E8CCF
447A19D91B8CC30481B5C49B6ACB4DC451F9C5269002F00B43F697D889D0339D
2FFBA5F17EF15B074734F791D5FB42C42113C538E707C16EE24A3F375E7C57C1
D17A23326CD8E2332276F32283CF0F7169EE52BD767C7CDA8354E5B65B92A631
0EB3C3F577F2A16188D249CC317F91CF44D7D24B679F3F71A5B3BB3F340BD76C
DCFC533D2835DF0D37360A9B5DE91E2557AB5F1B0A2DBAC4019071BF2F6C66C3
BC6E9DF45A22A24877E4A44996913DCA6807D768CFFAB4CB966B5DD8436D1ABD
C3EBF2B08543C98684CA1AC7ABCCE6CF63DE924E16D4177B3A02310786B20A52
DABAF7035C76955A8160C768A454647DB379C4E7E452DD435E23F7395871ADE2
D0C28A16DD5A422D7570CAC22FCED0CB242659ADDAAC725D06E439C9CB1D7B5E
9AD902909F64DE5F15DBB6E43E79928D4D84C98B3D307BC94A41300492CA1038
FEA46BE4C39E04DDA52A0012383B0425D73C6432E51AEFB4E69ECA96FB516F11
23474D93C05C07B8689FC4885699E4BB766354F7CC4CF3281A312EEEF077C86C
3D5EA3A3A506531D63823DD3561EBCBF76153BDFB19DA55B3F6335426B6A2405
F03BB593307B759B93432F1A710625681DEB0AA097E3AF25260F2E92C7807C74
EFED2B132A2915E0454C2867C4B777B147C85088703C68330FC23480D8FE136F
0D89CEC65B1BDD6CE955627282CC6533F36B62286E5F5AA0B73B682401EE3774
ADB723864D60C8C50D59D0F608E8471A5D00FC26DCEEAEFBF5AB2C8A5AF1CB91
E74AE3AC0A92714494A92CC67A80EA5DA92DF6E28BC6A05471D5CB6B24482008
2C75FC3219A3777E7F5B09A27FABEA630145358A35F0C0C7C1A5357A7E9CDA86
B3581FEE6673C2CBEB28F470193CA13DFB563457636707754E8553266219B02E
502B266293EBFBEF1509FECEAD45D7BFC98BAF84BFE6EDBF2589FA35F5DD8965
D1E08ABEC2E6CF74853B93487296C53751C3AE9F7AA5B9A9AA4522C68E504583
8749BD66A3B6DFD76BDE579A02AF74678F6F31F5CF266753287FAA1AE38EB626
E9A41CDC6BE62BC7B6E2617AA502EECECA267DD00B5CF3957699F87206A02BE6
B9F4D8EE4C10D079E09DD0A803251DC175E7ACB31ED9671EB45ABB32D64FFBE3
475AC402B3DEC385C59338C49A448917C5B7C0486172439C132B32E829D10EA9
68E574E17058A7998FA34AAD8C78DA36221A147B7E77E5C891B8A1F921BAF0ED
78D89F33F144043D0FEE36BBF245FAA6E7FC9D84A0F5D7D4B35D4E24AC4A11F6
D76800F53FF9D85D052DC85A50080668D9F648ACE56F31BE5677F0B344C69264
CCFC2E9F45921E62AEB13D93E84422B2D2E4F51FECC9351B42923E388B70E7C4
1B77DAE3DB681E7ED881F1319F9405D222E21746799E8B90B384D31B046075AB
71CA71ADC08570D5DE3EC220C719B63A930EE9346FDA4604790E97B39E274197
FC6E23FF8368CF246B2C8E5DABD16A1F78C77DCA1277328B7AD72AF931700163
D4FB90366A4CD61AC6757F67D7CFCA851396A5C9DB466EAC17E200523B2AECD6
C05A0A8366D4EBC86B696E0C68B301F3F440B7ACF7F73486DA4826CBD2C1C82E
285F936D0EB0525FE1A4F80270BDCF2F7B1453034640C0D59189A954664B53D0
10212ABF10E4EFC417FDB11ED8EACB517109806DD2CB6704EBB0D4389D121708
0B750E12DEF5DDD4EFF63ABB930D45973AEF0CFA7DD1FF23FAAEB8D23F7C9C77
D990FECD8CFA96EB61F444122611ABF70A73211447F2F4AD6CB5ACB2C7C5DBEF
5E30FD859045B57570D9D15D84CF9F0FA89B2FF059336B57B9B7EC0E2C37B291
851D973D08D99E12B578C4992EA47CC22DB897502F351D81614CD73E27F23004
6F89E913D02113D5076CBB9E7F70CC4ACE14D54BD3389E38DA769C5670DCF188
F011DB32D5B5240EADD9B21BC2CFB46A86BCE81FA6C6BE1F33A0DB7564F01C4C
D135F96CC59DA793300F9E9F33DE6B1D442AF96EE9B4EA9012AD3D9EF3C729B5
651B2647FE0CDE1A2258F05CBAC20AE0C9F80EC7A5ABAC56BCC6E8078A53B445
AC303B1FF6809EBBEBFB2242D1BD7BEF204EEE7DE594518B78765EE60502B5D0
83E9AC47D1D84DC1DB866DDA7C82EF6E646CAFAE116B4E04649218FAF36BF070
45D62BDAC3AB80DB4844F2C7265268FC2C666FA0A35C4C8596AD22AE7F7C5F36
F10197DBBF89D41141C599FB05C360657857D5364B1D5B9E4D81ED70F659C90D
99E1000D0BFB5359042CD7CD34338188C0AC818C4D8691E084B841E6A856A4DC
CE229797EDABB10C1E4E91CA5F7A54D5F433E3C4634AEA5036686CEE30C90E22
1969257543026AEDC02C1CB17CAF8D1ECD5F37EE910F34B058F08F66F90E8042
042D06EEC87F7819C9B2FFC41777F708D49AA47248A9CAA249DF505817CF5FCB
EB7DD5871EDA1C1A74828618B0D40F4BACFE7CDA4FFE64DCF7591F16BFC51EA0
DB98E428F51BA75F725249C5FD6FD166C835E1CE79E47B29535AF7EF3B475667
88D4D5312707E5F2A9026BF3585102873B54C7D2A3108D8678E9172B317EEF73
133F01DA8AEAE5062D720A8E05B319FE16FE42ACC4F8B1F8FB7F76418C718267
3C9952DAEA93C241B03791FCCC1431DE2D5AB635C14CE937E8E6D9D3545AB3DD
A93F1701EF6CCD19274B0804CDDDD6A456D0CD4BB0433209DE16CC3A5D816278
E938D44472C1F01883D05533EFBDACB6C761DFD3EFBD4427CAAD11A769127C21
5952AD3FE615AB73C98D881306BAA47E84F8DC5BEAD980DC8CB9A9D949EE34BE
57CA9B8B3BE3C0168ADAE8A1716BCB6AB82CF8B8A7D71C1B106C8104BC8DB6AA
0E3A664DF810EC91026982512AD84206EC1ED85DD0A6F34D79C331689F5675B9
DF64FDA4CED248E08BFD87A911D1923203B461E4BA66F7844A77BAEC87EF5053
D888D6C101B6CDE7178E873523346BD5A991D00BAEE2F2A82E2D45D45D7AA610
13A492F5F4B1F0A6DF35BC2A47CC76393F477AA7FB03737388C01B84BAC1F8C5
D2AA3A3E6BCD63BDDB9B0AB12CDCB2FF190C5218260AD550106FF1EC540339BA
D733AF49B4CB901556E63BD6391B3C3C3C80C467475F637B69537505EEF3F9C3
0855C6332DDD58A2809F9D9A89394E987600DD4D04CC5246DA7AA16DAD7A3EAE
2C56610596CC91711D12A4155E5D1DCFDE9F4ECD69FD36D7962079FF1E8C00E7
541B2DB7C9E5641428336BB88D561CA9A74CDEE023FEA051AEFEE5DCB52CF065
EE27C82921A8459C662760414C01404043E413839CF8C96D5069663FC828D5FB
2C9832772C15EB82E86734FF9C269ABA3E90D48806219B7DB3ACF4427FC7D6C6
40672801A6331A12B93067B327601606A6D5C8C3F294CCCBB0CDA4C00DEA4C4B
3A668FDF5AB0BBB0D489F4EBED7726AEFE772D5D5B147C74880C06A2606E3AC1
E0302E4E863FE45E9473CCA15E5A7A95BCA7166DFBB61BC0923B6B653D9F2023
88B4C31B161A28C88FBF14846ED8CE716D43F84646171B8AF167A7725902F93A
CDDBFFE23852708838ED6E72FD1AC6CF819110E6FEDED3E62A92EF184C7B9521
388E9F4B2B1B0E82CE1FD16B33CA5A42CB96345F37C46A9CEF42A595CE4B65C8
6C104E9D92A4299653008B072D77B6268B7AFB245DE6EE02BF2A97B0542A5CFD
6CACAEA5903F42AFB4E19A95C7D9B71C7D637420B70C1899600A1DEDED6F24CF
C1AC7172514CF1F4CC942F4B9DD7AF017AB7E3A91418DEE48399ACBA6A722432
4C88FB21342EE3D97319A0009DA311F4899F65E76D6828EC85825DB2A739244F
7A69BD5CFB4178614E6B47EE5C6C44056C592C606AEDA97EA7194967AF4CF6DF
30D6963BF32B0DDEF88F65BE4CC71CBA58BD7D6EA85C54D343E6336B53FEE16E
ACD389622F0C68CB5268FFE584012272E231983CB5E976DBDB2D13A7FD5695D0
B51251CD17976C798B58D0CE0AAEC52AD93ADBE0C6959A0DD9A52F808A67779A
BA1385A3D821F31923C0AD439098D4CA52DEB18C0943A39B48A6A3F499993F18
C2AB3F113FCCCA9588C7FB72643EAB8F6D8AEAD1DE9976B6A37EEBE2BAD7DDD6
3A967148637DB317EA3226FA59AE19C8899439214264336A4E41B544678A9B46
3ED1D4BEC44FCE8730E450F3EFF5C5CAA72856C1E8748F34469BF2B1CFD04E1F
92DCBA540C6A44B3025DA828E62F8A97423A8BD29076BAEC3567CD7EAFDFADA9
448F1A0CE78EDFF965C6BC89419523301937AB8A80B7AF6405790E9E9EB25202
A01894C458AB9007A524E4F3BEB894798299C94A7162FA00F6E05E273B5DB895
49315DD15D78A668E98A8E2FD588E84A9C527CC34D63D1FEFB4F4E23F047F772
C8099CDDB5F3D586B9B5A9D9CD9D7AC971426A7D01A19BD70782CA4698C639FE
6EC028F530815A7D39702BFD50EC8C417FAC1D67BE98E348C2215C120D8C3825
73BB9243648A1BE2569CF68FF78E4CACACDB34DCA486825B401F34F07D2CFE68
211086CE3F6D272193D0A733B445704A546A9A1AEAFC042118AEF126FCEDA04B
9F61B3592F325691F2D2F42F6F1D7FAAE03EA53CB24016F691487872585C1734
4CC47AC7862F32859E7D2045BB706170B67822A5FF7C730360CF6EB23BC007F5
33841532A95B595E32FF28C330E73A2D5F605E33B1B0E00405E0E543E16D028E
46BDA9BAB2618CAEA3A6093177AD7B2C6A41E086DFAC2247BE094A885352C70B
1CECF2FA8E1E71F5A2332D9A7C14479025FBC64489304F694DD5312BEDD3B24A
29EE505F477B50A2864C72187FB7CBE6C1E7F5D065CF5DF7846EDC43649EA9B4
98E23B5613B54B14EFAE04EC52C52383F18AC63FA2FBEA7BB5AC274296BC35B0
12882ABEE02433DF7CF95A00E8E775BB344F710D5ACBCB0882F35AE8A3E3B1FE
3903A941EA20928479E87AF5CED09CF717D58E2A1C8B5E7A2AE4E28D251E7598
2DC211E841D87FF88EE386C0489B9079103C34648CDBAA54FF0F25A13DAD4323
2F7EE4D840B43621750DB7754D51FBD5CD958AC9612B37E2792B04B2F2B9CBF8
E3E1436754701F9823D97F39E01DFCD7F73BDC406CF4B69C0B81390C67B61C83
5FBA29F185C0181148D2DB15B5E4AA470CFF413429B3CBDE2628B4A301C4AEEE
F17BF27B4949B3B5E1DC217E8A1FBD9B828B8E5DDE11742F334930B4AAC76A13
2C32DCBECD227134E7F747AEFABC6ACDF6788877A3104070C223170140A7516D
83EA6D24692C522BF8E5FB4531330E02C9A8EBCD6C3AD71A1F70D7632D9379F3
0231361D03BF91F74904C7106B6F8EB58A772567B5B1997AD2FE0801171A58B9
43DF0EA5ADFC5381FE258589761269DE4E4E4F911E68000E98D0A89DFB88A80A
C3CB19AB4DFFF39AE4D2918F2F1BA6CCE09C79172E2CA9514B84DC676A2EDEB6
AF1FAFF4E98D22D52E5597A2E3D1C3964D8E87EB47950899C82E7D266C3AF6DE
AA05EBDFD7F0B5FFA9569F0CF2DE5F44EE9D9C4F06FE1D485308E0C75646145F
A22FB2C8F17F0895E0DC8398A66A0CF1DBB35482658BB9D32B03BE83E191E150
C802089B5BCDC5BD2F44C8D37EA22C30ECDD19AEEA94E3AADF530E5F627D5E26
22D22B75FE01501A8E79807DA059E26789B12EDD6E57CBD83348288C778F0F49
D31C5BF345F4642D12EA28AFB297DE661883CC13A06C37DF5075F3602396A1B7
C3D1906E2827AB2FD80B579D05FFD99ED6A97910BAA4B9435F706D1C44139CB7
9AAECD100C839634A81ECF5A229D2B16EF77A39178507E41D90037081EA4EEEF
C3CD2FE26BE20AF71444421AD1DED92177679D4266E65DE1A3A418E02A8BE169
C5D0B1206054EBC2B1F1F3CEC338951D7225A3C56702C50A9C7BEDEE2651BC21
E2E5AACC0CA211F50A13075ABCF9F440C8E317571013AB6B2BFB92089431CEE0
931D3D2FB8641F9F26593740768B842E6ED564E3DD0991CB9AB9A40782D291AF
9BDC42C781963830BAFE4D6CD2356A3D2733F54BD11905A6F1F8523E200FA546
107734B276D7DF579C95ECA77353823CC67E36721E6AF0AFD9EBAB73776E7CEE
A895BDCCEE38F5EC170D3BFB792D2DDA7E57BD2FB14FBBFDB6FCEBC5799B4807
519B038B56F26A59DA0607CEB60CF5301148D3FF60C0D208A8233A0200CF7F8E
6E6A6F90C3EA5DDAC81A713A91EC4033F88EBEA6F5C4A74A3B3FD58807C44B06
016EF5E2670A911AE147CC5A91A0D385848F038485EE701DFE15086D6492464A
AAB6F909B80525A583A918D339C1DFB90CED5EB0FC05B94A202BD4901C01D1FB
2F383414084419552DBF048D62CEF35E3CD189289C42A534F59650E8320C3937
6D90BA2035CCBB718A0E50345F764B36FB60C10262CEAA93B5088A0090F92B43
98FA2E1D6CE1F398ACBABDB5DEEFFFF4D8B04BA35C0F08B752FE2134FF5A862F
C683DAA0E0C0023E5EF235BDDD5F24949CEB89A93916C86B2A9DE768BEB96534
02DF42F2E66AAA8E40FBBCF4605FE088D6BF859EA911178F9A75F3504749F150
DC2A53AD5E8DEEA70B9D144D3E1EE72343AD613C0AC70C8B5CB3E29020706599
2B084D567645EE4D2FC29FF6585CF385FF18BCF6690415AE872823D8DDFFCCCF
5F33F132126BFE88AA9BEB654A3785E63363B41F13C01058BCF28924410F04C8
9AAD7E74745FF9DBF2BA7652738748ACC8F587351A0F3247039946C764BD2088
A3EF065EDD99885AF78B5C2649C293BD8AE327FCD17A869E7532CCF812AD00A9
31626533380BECD9A77158110E3D13F7FFF543805C6423089BBA44118BEDB82A
BDE31558989266A66D60F7565B29F58249DAE03DDA74A59A2E8C0DF43CC812C8
8D7BD2F3134C9817F45FD2EFEBB92545F55BF8780D21BB0FE151482CEDB0C21D
3167BF901A46014E88865D378F10A4C2EA0A0F2F73418E78E3ADF09CBB557530
F27565EF2D8812D285B9B59F8C8A49FB435D4626A6D6F7A6719B66AA3E4CF7A1
0D86C2E63BB1BCEFB77DB90F25C44B4AE7D581455520DA75F0AA2AD71C12CCFF
A6F70F7F30D3717A2301CA0EF153FA9D4AC7A752DC24837E468A5EC54C6E8CCE
A16FC07D58F6AD35B345B989CC2997474241F59317F44A60ED73DAB72A2F1AC1
D97499D860792433C3DF19EE7B5C27E7BE0538ACEEDA4A9C883B6818DD0CDAAA
D67F1C43F8454EA7BABEA8C3C5698A865F6EE5C93AF3AEEEAADCF49E7EA788EE
6EDCE8F042FD4C57C95F8F304E10ACEC91E65F8C929000F8C5C835F4F2C66487
1EB1A07B3A6946D45571FC760DFF69A4852D938D3CD79461408ED21846E10838
205287C2EECC39ADAFC1AC17B04381C6754327FA7C65AEAC1A283C334901AC2D
6DFF8A36587311BC70C65EBE1D5BC1466470530F98F4F66C7DC21C2259DCBC68
8CFD5AB16724B208BE7F1DAE3FE9FFAC261F75826E8A50B36923BF75D17F5559
2268E393BFA04605EAF9BC3D8611E3607832D6802C90BED39B54D866320877A7
67FE000D8A3386EB1FD4B3291F6F4BD470436D8B76E381F808EA32F31C594177
5C7C15455276ED0FCD4F407B558A3481CF70EB9B4ECD3A847F1DEDED9A2A1841
400C496828EEA88D3AD7B9AD43EDD51510B4437C633229395EA69A3A2A4B3708
E7272F426F700148DD7894AB60499A5EDC91EDBB7F76DF9C9448A778F4D62307
B2F042B65031B6B59E943262F2E6EFB223B25C16F0A20E27F57EA88B8B767D8A
A14EC60598548762C14482191756BB89A4F1FDBA6E4F0859AFD74E72167A3D3B
D86F381ED2C17ED936A297936EBA8F80BF5B2ABD3536A2450AB5778912B39FEB
7B66B0473396CC9E439029D8912AD08CC15AB01793BED1C39420BFA3EDA081AA
379231DB5D3C332F12CFACE301EECF257B1E9BA488552799E40E102D9E54EFD7
B610CA36C8A6051774DAD79E4E3DD10CA06A91925E22003EC198DCDF49410976
BA86BF45182CD5488E3E219D00082942A5C533BBC5342091744EB5AF7CF0ED00
48E19EEEFF9CE68A0E1D6EBB6A6185535F8D8C67E5DA6A46D8D1ABFDDAE449FE
68185327170B046B27F59EF7237B24D048B1ABE83933670E389D2A9C9BB8FB1B
2B937EDBBD01CE2E917A7BDA0F67D62A81DC7F29506FBE9B93DB55A488DE2435
E8E5567D483E1C52CB78A2F6903FD2829412F9A6A7431DF5AF888E3C414F7332
1DC5FF5D46E422D1183612B014A7687524921D1F4D39C1DD6D8C52287DFC37AD
7469C554F21DA9C2007FFA851430CBB205E8B8905961E7C6928B4A4802EE340B
1BE67048A14D178B3DA3C710044C03A37A680D1F806296BBF942428E917B3FA9
05E88E03863FA67D3BD8E03F418C44A895C29C8610BBB651EDE7B5DF05C844D3
978F8A4FBCC99D5D8C6117FD13D4FC5220E86C5E9ADFD6664348C7A8ADBDE233
487A06CE71D9034EE8704CED15467BC9C738C6468E222CFAA6FA14EF89B97F6F
1F1A640F9EA4DBFE00F5DCFF9E556590328C6A7D5FC5A85BFD1181F4E1B80F96
284349F99C4BC26A8658335C1D68CE73D4B1F2A93B78BBB4E206E39129D51849
AFA6C822D9BA3114A06B8ED203302CD8AE42247248B2E14B6ECD21CC0F9308FF
DAD1ADFA0C45EA052A963B765007F045D0ED80FF2F38BE622B72E4324750C77E
298E0E6EDC6EEE27D799B73A6C3D10C392A119519D18DDC5218AD07EBB2F326C
74CF0C0F042FBBB8155EC868D4F208148F477747952EAE7F8E5034DE6A025ED6
B0D28ABCA1CD62167D300930B9AFD95430206B01D916D41DDB32D112C7570AE4
9C8933DB8C0CF716FD0D0691BEAC7455AC821617033E93163ADFBAF2BB008843
93D5E0FFAD5A5DA8317A2ED639CF8AC96889F5832030E3A6ABC4D9D973064234
738CC7228A5B5D6832F42BEAF56466D6A84DA646C9F1BD494FD3B1110258B8FF
CE7E20DD2B1D20789D96E34B5716242C82AC0947B23569418F685B9B61829CED
816CE865FD5129536E99CD6F1CEAFC39EEAB716ADD9C593CECC7FA63C45923D1
9CFD489D6369DFE76D1B418B9E7722BB69F89A10D7A1D9ED2B0DD511233FAF2E
08AC61FAA1C498185C88751BDABE212A040FCA30A0B41D2C99272F1877C3D424
555938A751986A2CAE49AF5C57CD8FF2902BB93EC415B53749670D275B6B7287
08162470A81FA9ACC7849E8E1718DCFE5D8080FD25ADD88F62D374A256167E81
B6B4F3505854D90577CDC5F0BDE5DB680CD16FFE5E994456A7ACAE2405A30BB5
8D11A1C4721FA48D80B02F0C1052B7586AB4C438C9952629A21EDEA0B09B60CA
3FF90ADB2628B3E1E4DD7072EDB8AB4BBAE6CEA35185CBD227868B463E6BDD30
C2AA301D190C53452E04C1BED0A97B079C5D107D57647D707D03085C7A4A171B
A07B47D7EB1B0EBCB743ACA057DA71B7ABDCE13D9B38CFBBDD8C63B665CA594A
4AEB09A8C25C72216D96C9CB51264A9DF525C7577F2777C5EEE398AB8F282BB2
53BCDA0B89BA94D5F089140850A690A9F791AEA0F62451D64DC972D031D128D6
6EC35F67C883708D81583E49840F337E643144928CF828FC71BD799118B25E4B
D69A17474E5965237B92009D0AE4FE1EC175A3896EF8A36CDF5D0EBFC39A1E08
456B17A714199755ECB6365642604FEF1DFB8DBD2C66D0237B3A24B9D36C6C2B
E5D1E12DE30218C82917D167A542ED2B3E215C61559BEB46A5C38E81F3C5D75B
370C26D658C0E38FAA73E8838C888366F69A8998E40C1BF5F3CA81BD316D9C79
F0F918D0AC073F48F09C55D3B1F861FDCACD37631DE5F44584BC05E9003EFC65
930140F401B25D0E5FBECFF33156722B50E1B9B05980B905CB5514B200819D1C
058A757BD08C26568EA9E6F9DA691BF9A9E6071C4E70269785C4159FC95DF4DE
F45EBD5830D400C3C6F065B73FD0FCC22A6C6A17DB3695A174FE7F443649411A
F208486C7A18681650CB58C54BCCFD202D7E9E05EB536BFE61B2C5F5426E8862
29B475421E7F6032176750C08CAEC183E289918FCC37040DD4771C1218921FD9
78D542B082094FF058B2C005BC3C75F49F72C0DB287824BB1AA0BAEE35315728
D7FDA538552EC3614832B8B363CCC602AC4CA5484D13DED3A3A8A200D5988682
3BC91AD0DC5396775FF597FB3FF2D1CF24AE472F94923F6CF54754783ADC21A6
2CE4316C6E75885C499E5521D240058FFB79D07A4A4C482D9D3305148865BC2C
BF7AF9608E74A16E429A81946E7DDEF1ADCE23AB7CB63BE8CD10CCDBDD066B95
2928B1108EE858D9F6453E1A3B31E31FADF02B1D9D96D8BE5973BB8EF5C96EB6
9C6D040A36C4C290CA0DC98CF6D73E648BB467DEDED13A24A22858DBBCA637CC
D068A86773A3FB74D01A7D06D59729FDC1A5F87337547E16A8CCBE3E2F06D0AC
19AC3BF7D7673F89CBDB96262FFB975F991B4441F230A4475D6D1491234DC4F0
5A6F764384305899BC25F3C148E408E480737A7AC78EFBA2F4BC23223D700BF6
8E3126EE1435152E4D6EB144D6B211098445277944B1857A287965BCCABB8185
CB23EA6D1CC961FC69C2813649F52E5A1B2A8559A3BBD8CDA249B16022E06A76
1A641725EB007CF791635391B81544B00240A4632AA0A66383CEA9909C60736F
E1E4186807AD8CBDD62FEB4B95B36CC14192488F5A35812788CAABBB1C01DCDC
788072022A8DF77E71195B59B57C440CDD485177A9C32932005200BE93D30535
713567B880927C7FBFEB3E17FEA49C7F9F73FAC4318A430E9FDEC4DED4C96587
B492EE234F3456BC7224A5094635447E2FF5BBA53E1612F0CE9F5B15FC4EF700
4EF28052BB04D360DC8FE43F5089973539E16F9E0ABDDEC4210CABA6A4A185AC
11BD27F60027459721E0E7D5BEC1C0E35C4E07700345CA2E6113E992D2BE44DD
9B12DA394FF35F45937F068AEDF0FFEB7DD80B2AF0AD023ECB8F8B6686EABDFC
6A2A1FC632DA85A0F4F3096C2ECE396A7252196F2DC86B00909D2AE9C32112AC
CD21A680255C1512B9102248F051C128A936D38727520B50BDFAB62C3F6EC567
DBFCA605B67C6CFB567273BB1CF1BCFC830D521301AE81D1F35B6C0AF6EE22EE
7430BF7924FAF151BD805F76A0A82AA43AEE029695B64C5A62522D68E63851B8
D2686F1400CEA29D9E91396474C4CD5B59EAE2CA3FAB4CC546327B4BC36E956B
52619C4DF20EF2F1C2208673A3ED40B5F2ED4DC998EAFF7D4D0C2B5249F14C52
6D44469369248F3FD23D5127081F9A80166040E0BD359926A679B088C6A7912B
26CC2D8907136E3BC05DE49782AC94A56E57E740E2461887BC9AB530ABAA0ADC
C17B7C8C7120EC7FC1F0D37EFD437A967C8BF79526908C50F69D47784F809E29
21609B1B41398C24B850694016A438449E2FA91242CB6D2FD2A56ED2D0871981
B741117E7055670BEFE6E2A283AB20AC92EEBB2367FA8237C7E7E95A09301C44
5C3D827D7D89908CA7594C3123B0239E2866CAD3C547A39CCBF195D690C0DC97
C9DE70ABB8A0579E8B2914A942CB0951EDE41D93F7CBB734D3C80D68E4B8AD0C
B99EA9F2153E6B18AA60405BF9737AC4A8A79F509B230805939B1137F999FDC2
F20AEF88393E75038DF73ABB20FFD4CC00ECB33088B68BFF6EFD3B15B98E16EE
5DFB6E58225908CED279613FFAA3D65FFDAAB3B89F357F7F55A14BEDE5062D72
0A8E05B319FE16FE42ACC4F8B1F8FB7941215A2B45BBEDB380026F89F98A68EE
CDE36347AA5674A85E5F72A35F4CBA12022212F572737488056BB3C901D82F2A
D5012E1C386521C6DAC8D67BC1BFDD22C9AD2CFB78B0244BFF7617A6CB10D88D
B93F868121D7D48B83344E41974475063E01FC7F658E782274E0DB5C051463E1
AADCC7F1E4316E062D577E91CF39DEA4EEF6F0BD2F880C4CE44112BE9A50E823
34CC332028385F0CB64264C3A44FEED14F9F31633A7155A83360304FD4175BBC
50F3077109A2FA24ED24F0DF8F0DB5BD23B4507466C8D5F3CD8D4424464B0BF8
3F5DE16007D60FC7C4EFDA14CDF8EC8F2DF30BBFD31FC8655CBDA052652DD4BA
1A059587D8D434A0A410F56D43CD63B8357904A0FB1E05B0651734B54D1F1CF5
7E6CED6D42B4DDB7412EA7633EF487CBD5F9A9807116A4C30ECEDCFDB5150E7E
4AFCC8B3F00F4BE170641C9FCBF021AFF70C660B41F45BC90AA3E784D31335BF
56C3BFA9A6819731D70E62616DE4997D1E4060CD1A0F83A667BB1C52FFA3C5FC
D0DBCF84A5F6EEA4D72D454F62529D2398B8972E6AF14AE8D276328728A07A7F
90C666FE859A34E60D89A735115B072AB717CFDC74FF4F507E7B981C80C1C7DC
98BD5075CEA288158EA55CB556326A42858C59B5E4D281A0618C1FBB4CB03D00
DD125026D6F3B58B4773BBF0E76465FE2C63ACB77850F858A12B91AA5E9E0544
E4AE8839EDEFEA9D648A7AE9B8A56103CFAC549F1F999AE8BF9E2E34016282C9
72EFD6A303D3640F19E1DF421EA196A813F40E327601BA24507686A3DBB6C8CA
38463713AEAD82E7A9C3EBB1B36DDA28A71229D337F317422FDD9EE57ECAF41B
B31F3B2300B4D8EEA04FE8EE1CB9D9789809D4D33D660FE4815BF0C3554D9578
9F05F225C7826494441D0D8C52190FB9EC8360698A45EC064FF735101C9B16BB
7545CC866E8256FD47AE6B7F72EEB3548BC968950BF26D4EF5C8CEE96180578B
8F937B8A29891AEAB0DA74232622D2B48F6DD3BDAF7171A45B6434D91BF070E1
2C409766C63CCCC7D4581D1D357E52311AF227B3E316B42E4EA6E5F7552F82A6
C3CF2AE1EEF0F6378AD6C04DB0C9373FF9C097D99788E039C0BD01FB33916585
7CE5953504F1316D22FD27A025EB17B17B3BED0BE32BDF1705F3893DE893DE53
BF1C5B92238EFFF9221D35CD7166BC3EDD7C8CE42FB48C666B865389310ECD0D
9B0F4807C18A811119674BDCA715E294E3BAAB95BB712227AAFBA786EE884787
A096D9F515470C807AE0ABC9A7B1E133C7EBA836A58B084BEF188D776F1235BF
56C3BFA9A6811D5A526567CF485B81AE262A236108FCE15CAEE5B5882A8531AD
E2DB8A15A79E4DAFBA6CBC294F567D517FE7B5638DFDBDE399CF275883C70438
C64AF51B11A63D36BDF6E1149BC6BFFEDBCF0C8EC89A56C0711417BD3BF8C933
A41D529021B29D34C9781D4DAB0F4FD5F09069DA69065DF4CF81AD466D6DDE33
6DCBF389305706F037517D089A8A5FBFEA93E1C51621BD82A2B5028558B288D2
2E8F35D9898732CDE8336F656E68BA94AB7D6668C545E8E8AEFD963D5B082173
FB9F84BC97B16457F81C2ECA3F62AB465C46974DD56EBB1CE095EB645E7DE669
0C5691384385B26B293730986F354C75C1FE36DDE0BB93632D34BC01C38BDC5F
6044CCF6A507B5E6518003483080B5A4F17FEAB60888778836B2C37824D4C023
33AB0F9A9DDD4B765D10F4EED8C9C15E3C9E06D3FAD451B9C70A959BB929C09B
F76E053BDF96F7DE3BCA5820744F19964C22D3765B651E6544AA50CCD1C773C3
E37F71A4F15397D26E5EFC2EE909671994DF18CB5D38DEDB8611F3FC1124EF5D
553B25C967BDB869F409A8EB7EE9059A345774EDC805E89241CC6D2AAA1A78E6
6FEE5FD39DCBF8FF3CC1B2C31FC9AABE7ECAA5701B0D2575AF8A8596254E97B7
17DF199365941F774F8CB1F07D5498B68A580366AABCD57C797100747C7353F4
D4ED064CD9EF59E908C9F4403BF8BC3AE42B64F1DE8F7B82C6872B7131358327
C9B8F18FC67670903FE3FED6901577876DD59AE6815A05DE7984CA94D7C02E8C
3E47DDAC0751204810ED38B8E3BD79751AFA3D5A076B258A8FBC6D320DE0197D
458ABDEA23528CF7544A494827A98338F962CD1669D7BEBD255AA72B207266BD
5FE125257C0338F1FC200265C4E2D240805D78448DF7E49A11B2F211A64EB78A
90B3775055690D94B0C8DE37ABDBF7E8DDAFFFC3D0003ED3444AD103175D288D
A1003B76C9A185EE6A8152A3119BB9DE1E3194BDA9CF6C6CAD374FBD8DB58EF1
E81CA38A0C5EC4BE21FD88A9327C3609D8888F174524917B75617FF3FFF6DB1F
D83F056774CC7F2283B249B075479600F0A993807490AE8F1F598B619C5ED0F3
6B9D30ECB1BD0A919FA11D215B6637907005DA0F70DE7261063D6763E98EF19A
C67C5D8A87CF9D8AA008BE82317F78E19A878D84829B757D4563DFA8FDC2A66E
45C96C8FFFBC31898D22C6C9EB8B8A0357B309DF51CA751548BE122F6189E3F9
085FC6F2A247A7399B354B0E54AA5E19BD20D37EC18DA458B6816A73C0DB8C6E
8612EDA5BF8ACB354D27A6AE11998118F7EA9413B435899D7198FB2845C7B925
4CF2C3AB12982D9E560322C3453D2E040AE18A57254D1B7A5976EF85315B4AE0
D023D9CD514ECF34F07E2E167CAD583F7C82F0EA9D4D841359D93CC99884F7BB
A0ED09B49109257898F10024ECEEF8654DF43E190FBDB25A9436A992CE2A13A9
0F7020DB66F702D91F59DAB2607366C349D363470DA50D0316AFF6B2C5C6B9B6
31765B31915064349CEAC4871EEF1EDCE8748EF0676F5E84D770606C0D76A0DA
715D98398B07BE82827500CCB8AE8D2A5290A308BEE713521F94935F94A8827A
323A5C828CDF3E97BBD2D65C57A232978D44D72E36DAD4E43714A4506ABE5E53
71FCA84DE5A4FC2B1DD60F5F938759778A001137E59BEAF253C8F185516CA0E2
4A1C36D7AC53325FD644A3D33F025564FE265F76A8D7485F2A59A59648FA4F2F
32F610E1523AD6B688226745D82323FDC64C170EB0C9274D38D73921F3A811A6
C64C5B527ABF1AA55F1845667C83AEDF417E0B7425A46616DC2FD080DCE51FD0
BDC2A05B2EF7ADB09A9E4C199570EDB32F7761B3E824FBDC816831C97D83653B
9026111245463A34D746821505F198D91414BC8F41133DEB99FB73FB6B772FCE
58AB1F13A65B51E3E8A909519CC58CCD031A30A0F87D7BAF534E49D137723044
84CE3A2AB1E6B23B1DDA74A819B97A3F23EDFB82C88901DD8BAE3C4D18EBEB70
9BB571CBD6D5EC26E46B16C49BB6286A25E7195A695BEF40DCB73D3209A512F2
2568A83A65EA23263C71FE36E7CA559913F7A58E5871ADF3A53B90C14BD2DFC3
9793042D4C8224021CF77726186079367FA795BE023E40968E85C3FE71046BF6
F9209F6A6966DE25D75B644AE2C16B463727A8AE10C5178FA4794941E5A2F473
A7FB096D961CFE845D4EBCFE87707273AEB1BB70ACC414111D4452BF5C4DF94D
371470120DC8DFA2EB365F16F8FAB88DE5B998414C0FA5FFBBB41F768AFA0EF8
FFBC7D8C5CC0667AD7274E7F5243F7435279C0DDFE805F33EF3FC77FBE182C31
E78F5416F58A9AD099D024AE7F293E55725E48A84A7603128EE29FA14441B9BC
1B65396043CE088BE2B125193C42F7045F89AEF36930F23D7732ED373E416C80
0B34B4E181B6C7704F841C1A885D6503E81EC48B4652C4645534EDCB7FCE38DF
294683EE0B893E006701182796A430EC75BB509B5085445A66B089B5AC6C9B90
F80A589C2C8E6BA68B8A9403FF86C787E7B8F17AA2B92A5D200A6610CDDE242E
93C0AAF406F89490F924E018E892C350FCADB5768D4E42BCD48DFE9870BC5B19
024D170034B233F2303BA07A6DAE1A1FF8E70238778F85599105BD777F615E9D
726F51F868E800D7DA9B47DF865F61775A0D06B45E0F94BF53A893CAD056D148
09DFBC820983048E041466A7C86EB5622D9F67E8ED0BAB636582D10302757BE2
383E30E70CE96383E93BB1C6486C512AF07BCCDD7EDCA3A5ABF4D130524B555D
0E09C21F745BC44895F3961F4FF646F3C36F3CB25C41B5814E5CD0E0905B4E6A
20BD6A2512B6B77E53C4A5CA974479682124CD29D18419C6EB3D7FF335AD00BD
F147756C177D2FFFAA8396C207721948C8026F8DC0E546617BDA4097FCB8FCB6
35C4EFF2C2A82CBC29FEDEE39359C351BA8960636ADF062E93983904F5426F71
48BB8FA709AF1344271173529372A886B64123E160E65D2ED3DE1E37473F9BD9
2D3BE4E778AADF205240166D84A2C48EBA62A63C347D512DAD1E9D80C7468E64
5379B9BB4962F261C12F88917D9FF7F1AEF7430F95946A3D46460ECD7AF36996
5FBBB151647D7AB44A381D4BEFF7D26529F114843F39E0DC86E2E22A127F485B
34CBD40BB40756CB4C0EE17940A22B15E6DAC8C7C3BFBC53DC44857A0915AAED
5114FA1FE6B5C9AD96FDC3E89B7FE85F6072058BE81ADADF5A3B4F927CABF282
C59493FFF566E7A6ADF80D431A13D1F870E79B3C0A8803E46BAA87B223687C5E
2EA01816B82B7FE368E9CD3A7A1A8720D40BADD589BFBB28A9A5F99051FB6CCE
52DB35A23B0B05557DC2C08AEBC219999E39FC83AC6A97959FF09CB82D15A422
28EB9656901878D232244DCDBEAE5340D8259D05368499B19687E50260F00249
8AEB3445D8CF8CEA7FDF03568AF44E2EE4D846E784AC125945B02F5E350BA327
DF3F4F721BB714972315A366ED709A0C2579ECFBCFB7E7721E07C9503B4B0514
4959C94777DDAEFA56B2701BAB0B7CE4EE0E59EAB48045F51E993EECA0C3836C
CDF6151D7448E363809850CF8CABE9A22C66B70FCF092563283EFDD3A00A9496
399322E0D926876A97AC08B0AED4D3DFD03392F7FF3652F079A5DE65EB838002
946EB6C6D9888690D7D2C56568F77049927852E3D982C2F1DF8E3F4824B95459
4A1F97194B19FA8DADD21641082811FD1710119FDDB6C7098134D90F8FB896D5
153C83B6585663A32415FDAB3631BCC8DB50AC1CC00F6CBF65CC3CD2D68EC656
3CA73B0BF0D53BC5CC5DE889C15A16775230611A6A981DB0C6D6509CBD4D31E4
45F889CF7DF623651E77725BFCAB36FEC044A22874D19630E3F93656BE423233
DA8ECCD888428F7B2D2B92EE24D950AB135973BE329909D0DA43B3B6D0936441
B252D39C24EEA0FF0D95B5E81F0E164FC3C61C102370A0C0C07F4FDA63316BA8
3B4733F3B5E7C2A5461FE1EB54BAD33E75CBFEC1AB56147ECB11AA938DDF7A6D
7A4DDBF94334DE1E6989180B6B74914F95FE5FAA9DD81AA70BFDF570BA380011
92EAA0F063AF559C5D4B1523B43DD9AE351314503CFFFCE5CCF041A02877B760
50B071AC9BF85714824E939267229AAFDE9C8C387F15F064F0D7E2DB9CE98E2B
1DD10F21A0717E5E69694C514BF8D6A7711637D595DA5FD64C9A6AB6DE6A5023
EABBFD7F1DB97934B1C1A7E9468FC101C5D9C6E566A9FC1283C090A462A9C2B7
BD7171591C710366EC9E9E9C1D03E2D3F1AEB2F23CB3DF353F11454B8B48314D
CADEEA7CB4E15E16E579C8E653F92046E1E5B36E223885BB7E1E8B28BC068FC2
1630DDF2C69A19ED006F4C9CE0592D05DFE3BA7E2A3BF43526D8674D7EDB9712
A5FBD232DF584539868FCC4EE0718213EDBC80EBF61D90713F9F50CA71555142
888E0C1848A38941222B0244BAD66A8E42FCF78FDE76B58C9F90C924CE07C99A
EDADE9D0697AF1F8426A6927D11568D3145B52CE854BAD2281EB809E21824659
6A46D6570A9BD7D3644CAE0A2409A4459BC9CF7B2BA769BCBBE17E81F552B603
4F8E13EFFC7DCD6BDD329EC69AF33E7FAFCC19B3590D8E3A2D595F3A3E6DB94D
42D2EF8BFB8514BF6888BF5349E92D9C03B22996536F2532F29BB6C55AF7087B
A48DCAACB573B3D4D75F85620061EBAD92CAFC44559A6DC4AAC1EFCCE885E4CF
33B84F4F4D467EFE59C2F8132C92E43C644CFAF66B7C622F8F991C51231D360B
015672A21189AD4B0D08E8929D701409826BD3BC8CF6EB4BFC8540484835B2D2
0B232EDAA65DD656594C70587DB28B4144DD493A5E21B4B2A13963E8F95C905A
DBD598A7EEF15AF7982DED4BCA89861C3365970329E0E02C62C4CE72A35BFE6B
0540D4C0196027C17B8EE71D654F0E33C5E5A80542DFDC7D5373C293BC00646E
FA0A96570BAB2AD4C3467B0C614244F63F8367906C7C4648EF33244ECEF4405F
CCDA02AB4D46CA8A2DE0CD63FF098901B0A5C55B6CC882373F4F880821979733
08EB895C399355976E5E8AEFB7A2FC02565A75A6D71BC570A6EB77D383688537
E7372AEDCD64105C4987B4DB7095DA38628E622CADD9CBBB97E58F8CBE0BDA26
F8B6F0422F3340506AB055DEC393FA504263A4FFDBBD411D2631F7D61DCED303
C2488D5DB37CBAAE1081E32B3E158324CBD53A2A72E3910C4F8CE8CB67BC77FF
0528A88EEB200BBBC5CA508A4D744580C7795F7B3D063B63AB3A082D9EFCADC2
BDD04583C106BA3812E50702801922BF2A05C08668FCBB02FD86B02982BFBCD9
0A5B6251951B7E7717A11CC251BE93DADCC5FF31D71DA9FE810E901F83FE1FA0
A1A4419AB592E0C0708320E8D6C7DFAE697C2FC6F00331D9A24D10FE48633EA5
26E2C0AFA725176DD660DDF9AC730F5BC3BEF91B016C4E869CCF9581F0B8F59F
A5116D0901E832E21348756EB0C562F342CE36CA69164AC5274A134565813A44
1931DA182401251F09576C023ED3EBE987BE66FA501D5DEBA893368EA3FDD3B3
A4201D3C9FC875CCEE298E96A59755370E746320CAAA9DCD5DCE04FEF30A0957
09F949F40490F6751FB0E9271CAAD9E4DD110E171DF8F5EAB5E059B2545EF6BE
61C442FAFC51ED0006300A30CD7AB167F8259FCEC503AC5A3F9D962A771D9AA6
69A78FDC06810D5E546CD334D3DA9FE95DA7F174EA13910335910CA61F5B4984
C9A127C4BFEF9A390C76EAE766420B9C6EF72F6CA9EE71D716A2440083847B2E
C2A589FAC56B303CD63E243AE47A34544330A9A8F1902DD8ADC647BA2AD61970
0D1675405E1C9A35D8B32394FE90DBCEE75B91B36DB308B2F5C51E0918E54A88
8A33D2DA81F4FA1F5B7634C32CFDD6784D24426CAB0373E1F607566B78BF8CBE
DE8D16478BC9D38F0F15B48B4789100FDBDC187A480D24CFAFB38A6CA58290D5
57AFA6B2F76D3C2C0D7C2FEF3284913880F2E57B82E05FDD5FC478815AA38FFF
525AEEE57D1964C8AB17AC7C8621844F1BC52E713901D9676B19CFA2C9328325
38D6A87F5AF79D193CF3AEFECB4B8196E0E86919291E3E1C55BBA48E5A2702DF
DDDD4A4A3EA5B0A1FA84E55ECA7617A41124595A2AA64CBD8F0520E9FC0BE0D2
AEDBDE4E3D5FF817C2E4748D2A135FB2F965715DE8F49130B3AFDAA83C38D628
619679A8C0FF2C18E8994C9F18990BB92DC1E14375C99FD201F00239C075E11B
BA1D0821C1D35D62F7E54C15A992BD7256F92B621AE360A3635EDBF8E9CA1C1D
F9A1CAD2BC6E812806D30B4821F1AE919689039ED1ACCB23E3FF07B8CD35DFCE
6459B54EC036637D968DB74356135E5DF3C75A96685B062E4D550B54D487371E
ADDB86F6B380D2B3B41C3B3F6A53475186BB44083AEE2CDC4B008A03876588D3
52DBB7DFC3FB3B4C61697011D89D9F74FEC10EDE96B37089A17D916F0481E30E
93A4F7730126857E926576548E302DE2B1939F6AB0C051090630F0A41CC53865
D00CE5826540512950F15A01A7FAD03CA7D7C84C9D94ECB95428EA07C289A642
3053338420449974F44D20C6F4746219873FF496874B580841DD96234356FE80
143D43FDF0757B126C708B47E63C5C78AC0EBF0D1163E70F1D87DD13B937807B
27E7BE0538ACEEDA4820BE421B2C55A43C3D7FD8317443078E3A7FDB6B955625
98101BDB4E2E6650DB6CA8EF4C2CEBFBE5464EF410979589378BB9E71EA6161C
E4DCFEC19734764B763DF53FA0281D415D21998E35175813CFB26259C924A6E3
51D0CDCFDFBF87CB54C47D6029ED2F2A0D5809CDE7B9CB64570FFB62433B1B36
B3293999774D8710D7F0517922D03F2107B67E924263877309E3D5908FF56E28
C6FEE6E15B01735BAA8869F3DF7E5D5879638250E227FB0ADDB9FAD51EF55462
1FA6B22F0346F9E6D4462EF7D04E1284E124C3E2D81F48F04CB32D17A0451E63
FFF6B99EC53E8ECFDAA3BD67CD0E79370BEDFC209C63DAFFFF812C441F948D0C
9FCF40E7E8AF25572726500F57BB4858A430AA94ED2FF4BF9F9247E5E503F31D
D8F9DEB2641F49287B42B78F6A4A3FE320673FCB8DAA46BDF6734EC628DD8089
53B09BDBA7F0E23C8F5E5270D039B409D504203A4260D9D5472EA4AB02F0D34C
0B2BC6AC92B769213ACFD90EFD6B038CD50943CDD5B32ADA56F50A1E47F15513
CF05B1DC9A68B2966D7BB767D71155AD4338BE2FD18655E6BB4F4E0FE6344878
D0FFDBE4C31485F2D4DF74A8F0A4B9101C799F22D433947287EB80E9ED13A34C
EC8779263BDC4EA81BAF01547B57EEB6ED5B4E2B03DB8821CB2D57ADEF1C9FBB
3D95181E06C3ECA9745AE1737BFEE1D7F1131781D82A3505EF6B7D11A6879F75
9226E53B46DB56C91020F69669CFD455CCAD3109004751FF0936AACF2269A8BC
7443FFD645E8EB8FC4AB9FBDB8D9EB3BA37CB97F6454E1E4F307C058B82A71BF
05857737320021137710209806D7C3E7739FF062CC04ED2B999CB46D339DDD22
319BC0732326C35A3B1C0907AA38E2F36A0C5AE69E84EF52EC5EB1D04367A1F5
3D348B6DEA17CEF3806A39140C5AB2A323063DA490645095B9CD77A42CDA969F
DB07EEE89490A551DF63C3867D3C6D0E373DACD523775FB1F5F0A0500DDF6CA3
483C695EE2F3B9EB652878D2D7EDFBBF328D40C2E6E1EF0FCFB020F2871B0C25
5A2AFB868AB9EA7B468746E961BA7F6F873D2970D835E356A5441D73E86DDE5A
9437DF81F57BAE4881B094120D99CE9BB6F317D1927FDB8BBB46AF5D119EB97E
CCF4099E01BE746CD9270154ADBD07F11C0D042EA71759231F734DEC345CD2D8
9D3393C238C004D790FD08D7626C91DED95EACB45ABDB654491642FA5C332261
1B802E5B34CDD28BC5C3BCFD26A7241379C2955D9BA1921169B16ABD7E4F3CE6
C6D74E85AFF56B0F9630FF48D6569DC5C166ADC1F2387D5B5D62A97BCD039313
15E78D198FB6DD459C417C781EFC40376739E8B514227E913DB1BE7C905652C8
2E7D4C5A856537C06F75BAB024B682FADA1E3A01E31DA0E91FF2877170F11E54
7FC3D3530C21D32AA9F0D750988B4B213F264E20FC3BB5F705161999DAE64BD8
EFF0CDD6517AC7306CC95BFE7B09A2C472C6541B948B1BCC4E6AF1E4BC42BD6E
C84074893F360FD2D6411B23B1660E9A35C5BB3031385E5D8C909A325A8CCA18
C7CF590C18431F257A7F2941CF997BCD65097F4DBFD009F8EB5CC90E30105A01
DA4A94F447A97175E18373A7A108C2925DEC6550DA19186483F9A849BDD896A9
427992D68183DFAFAF54EAE20A9263495B042116C9954EAA3BCAB125504D2CFA
501783C98D28432BDF97F5BB6982E04AB692DEB484A8B9100A31AD1DF7CE7CED
F45D8D75B8008CB3D078C3E6CE58D9397D49FB8AA4E9F5DA3571A0B67C51C855
90FA525E7EA8B16D462FA2E099171C592F2A45A738AAFA5D83EE6AF31BEFB5C2
6FA79FBFF0662B93B2096355DD002464B9ED9AEF4D67C21DA8495C2305C7DA73
91F7F20453206FC27D3F8F06FB3C3429BDC7838A9410E7B2D42EC2BBBD4E1BA2
5E5DDE36B240D4A68B20551C36E556930644B1B72ED4F2E67871D22CD8004044
DE4DBEFB6027E9E23E1C7B46B8EFC58B51E46D3B47F0C304F4186FC14FAEB626
F325933F9AEEC1EA50C522B5A42C4A99B079ED011928C2CAAD6F23E6F1E40C7F
AFDE5C8CDBA5644BCEA126ED773A8255460212B87A1528AD133A2681B4DB647B
11B57057251DE4EAF66BB04493942F14C89F5758FF302C10135FB0476204DE3F
6F1EAF14CCB7901A3C1C54A705AE4326F777BBF6FF970DF619B5B1C26C512FD8
E7AB105F0C7FD4E05A6A0EC066319191D8B1E41B3BE2BD081CFB9BE4B6C3A82C
6FECAC5AAAFCF75083F65741B1017E96CC181023A6AC0D66A5B90CAF2EACEEC8
CD965F1F340A8D3841F285C8B0DDF9A3963D0B1161934B23A5C5C87D078B8510
01E0BA8BF96F5B965079BFB307BF0331BB6CA78557D5EBFA43E63A8CFFC8027A
FBBF5CF2C8BFDCDE2A9FA634ECDA777222349B653BB04139673BB3B8D170F099
2F2B3E2B28FFDB880385A86AFA3F37F8646FF569B152F3B382CDCA141D6009BC
624C9AB75FC3D8E11453B3C9823434B28633CD541DC4FCDE2F9A9ED55A02C0F7
5DF58F1327470CE1E04D3505DAD2B07E1DA89EC2468F5262055B889245BB6661
679F7EF91967AF1883ABD40AFFA292D1BA24E033458D3727ED4B961BF04BFA38
2BEC52B478206ED9F8FAF6B0A70F46877976C12C6A1A74BAE8EB31E9DE3C11E0
011F85024F749A571A30E8DAA6B241473F8252E34FA911185BBB34A6EBF5F641
68E9F608D032C4E96971E63516E5C4D6123C4813ED06BECFECC16CEAA06FED50
5EC60F7460026CB41957431C60613682D938AB70D416CD39E8562FD546F1E50B
FD438BE933AE15F8406C71B2405522123900F1EACF0056E45B39B13210067E9C
64F38B40C795864961669C3B1CC78169EC516DCD30861254E68DA27DAF5CF84E
5E6E11F0198C188706BA18A9437C91EF10B8C6C7DB5BF768241A091E79800033
DB04CD56E6F35F31090B4F7F726720ECF17E5B7152EDD96D66797292AC7023CC
CD5EFA9E04086D86EF34DD686EBD47A517BB819BE47672949C11AECD6390F802
7137D6FCA1F8F1EFF023267467D672D38418A26A509F71696EFDEA5F9A2EC4A0
3826406DE4B61E20CE7DCDCAFCA901C85933E00A597DB3F1FC9EFB411038E665
02F62FF768EFD891834B5473CA29B40E1180643F164F81F42B813F61CFC0AEC0
51151502D68C35D9FBAFC01AD3904BCBF15BF3298A2F4EE23165A41FAEF853D2
ACC7F6DF9C602D423726D9BC891653DA634F15F75B73C8B7C24B02BE2C38F2F6
127FC1CF3CB7D6312A88A3A8A141C560FBE6E67010169847D33CD7AE3F0C12BC
1BC9203607970B04647E76585DE57A5FA47B1E218EFCF1AF6A6DFF38E77DCACD
3AC2DD0892424B3BCF60A5112A8F05E7258AD6BD59ECA9277BDEAA7708B467D1
D15A151E76DB702FABD13F17C5CE687C5658ED8E5B44889B553AB3021AE0C071
5D60E8D68AEAC2B06F8BE03AFC1BA88831D98BF3CCF251C95E554837A6D9ECBD
29285BEA0FFF15B69C94ECF3E11548FAC848874D3C653EE424952488633D9415
A7CD4BDB28FDE74A7FBE28278EC4D4DB7AA125D0E82E5F05D1F9603568CEA5FA
E7EDF433870C0523C3E9B7D309C8226CDCC00848CAE45BA43BDDC2624ACA09FD
5BB8F6F965ACE6DBD6528B9E913DB1BE7C905652C9DAA9C25B056EFA8516683F
A3A393D5D8BEC6EF1D5C78ED48F5654A5C8D3048BD4810A3FBC96E21AF32EA9A
9AD2A517E0361251EA13EA8230F0AF49C0A222FFE340112C6C063B2F9A8AB7B0
56B9A6339D5B4AFAE1B7D87F43426B64371272A35053E0404213C6A94A7AC4F2
17E3AB4BBA8870B2F324FC90F1D929CF844F9CD60DE0C8E17A841AF0E5E96E00
0233801600EF6D3CD33861F3602082C04BEEC7772DCA1432A1896C537B440CFA
78A1197FCF102CBDC87BBA433205A585A85AF350AE717A8EE630761C9167994D
589C2D49FF1BC82E285FD99B6CC9808D4BF6C5E91C51725CCF60B2A8AE90301A
28BA4D14E7FACE24737C044BBA551CCEEEE909E6EE523A79CA226648EB4159B8
6FE2842D85D8A78BEEA68C46B8A633E82E5BEA048E3AAAC107F62C7D2EB88965
B8D22AB04A724DED273BA060E797C1BB76598C1A03711ACD7355594B80602145
9FB6F81F2408C4ECD8B3E036DC6EF898745860CC48E55E625906298C0B6F1A60
76AFDDFABE9CC46A2DA6AA3E33A045451587F5130063EA909F25CA31C33A6A46
6CB9B777366802EF276C2558D0C4E5F9C7B68C529D474D4703C51FCC2F27B9A4
05FFA70F58A3967DE26F93EB7C1019B8A18D4135AFFF36FC0C1E9FEE5F451325
24C39B658A734D13F4ABBD6C2F19087F29A47323110559E732143D99140C4304
0D8CD863DB567A2F0F53E5FEDB788C961BC74FFAE2E26DC36DAB7AD44D6F7D41
AC91E8404D8AE952C3C78E4A6BC9AB86E51A75FD38ADF1D15D6A0CC02BD9E266
5DA9C303BAE2DACCECE245B4D5889C9730D65F4E4A79CD0DD9AB4844653E0CE4
5FEDDF3B38FEA5180905FFCCAD2BF26C3ABC2FBAE79527F0C7005F363B42A810
58C34BC3F8E4098C22E5A050397513C2B448DC35209300AE63A15A7D983219EB
991B300213F41796CCF68645A68F72285FB2A586B7F622D5A2C8DEC3CBB9A627
49EC3EBB1E4EFC65AFCF0C135649564BA8536F857CFEA4086573A0315F39779F
25C36800685CF9F9F62B3459F06EDC967349244C62877E0FF37056A220A6D249
F9A5AC91D72DF74378EF3D4F784EB48C428F153699BBF675F7118BF736FDF3C0
850F26BCDA8611F83205458D6A172A4D014595F0DD777666B14EB7C80CEE58DB
653AF6DEBC59D2FFE1AADBA811CD2BA1966F4EA3F158136E070D0793B5E0630B
80E5D4816509D57A5FCFC0882DFA9C2B9E0A6F8432E5D617A93CDA0960657CC2
31C6F1D98278F2222A9FE0BD49F4C1524900738C7D8D50C123883F159DE083FC
C54BA3A1FECBE5A1590A6EA84483A22096BAE7B8A68E3F16B5AB5FCCE10CB239
A2CC0ED4CD0660EE756778EB04790C03B7EC3A7359B9BC53654E4EA1BC397420
6D4EF92EC1E6008478D6C9F82415A6493913B6F85C089DFFF3242324740628F1
E59D922BA5E4D5BA20DBDDBB8359030780CCEDE5B17A975BE804C5563DFC3C67
C8166A935E2DFDC56A275574C96A7C7E77FBFB92183A182F9A56C4A9F408650D
57FA1928840A34635EA134C51535887D8F637E43DFAF2E7BFA33BAC36705EE03
D2FCA3B38CE2EFF349B5AA436EFD82606DDBB42F3F97CDE0C047662BE6A3E589
86C54B7C387D0F8C01B7F90577F737DE05F728DACB7AB625353BD3E91227E46A
9E6313BAEB3A19493375F93917170A43C7E5F3BAB4CD7848CB68A5110310C59E
864A74877AB5262A66B6CD4EB0C76133C8726472EB129AA699D04482ED897FDD
3E0DE35AC5CE15B36401360DD1D3A7ECF49D9F1814F331C5D81A4CDA1C29ED60
1BD069927BB266B91D07CDA13FA454AB5D18C53458547017249A28B7C05C05EC
BE9C093CF2C222DDCB85D19E179DE6EEE684BE3A78CB55C7197DD01B0793031F
C9D38B8E7970871E4B60DA0D465DBF44E16C267512E5FC0B16726FBD945DDA55
43A0C177E43287690007B115A105479F9AD0DB70D626775ECDAE3E8EF86BD5CB
D90AAA608A3F65C0FB12D24CD0145B1F7CA26FAFD56023EEDC6A1D3AC570D6CC
1CA8D3684BA27B1BD42213757E16CEFFB075813DF7B7BA6C6289EF8F81F85DBF
A44D2F9C0DE26C2417D362C41DD7FA1FA4B0F48FFEA848817AE1569E2D6156C2
EBB31217142C4AEC29A28E43DDFECF131E27A82FC1B8BBE36315E1F42F0BE25E
49A815619A4F69E6142B447900FDB1DA05CAA08BB827F30EABDF8E4AF75FC848
456161BC77B244FAD7BDB7835E97EB66928F45EA8146164441267E541BFD8CE0
92A428EBA6AA858A62BA8F5280A7AD16E8F2F58F21F35176375348789BE20EDD
6DC1A2BCCCE8FA93A71128B880A222B201FDC1E78A8388C5359DCB668A309A58
7EF02CE57A08872458B63F686FD09F0DCF93161AC8DC5C4427B7A47F1C944AC3
851405CFD6E14A9C739E91CBE3832CEC47AC2B5451ECFCA7EB8C905A1EF63014
89DAE02563F58C4502DD29184DF50F543D8DCAF96FCEFCD034A78C125F11E4EE
52B0CB1EE425FA28690F74C36A4D19E204F3A450A0165F2B12779ED4DFD82CB3
1B77F1EEDDAEDC037D47054121F74B76495AA9C0A31E6B78EF9F001245BEE77B
40CEE6E191449727385DBF10047342F3BD4C077811073FB73D34FE110BBDAAE3
FEAE09AAD8CF343D8A73BF2B8DA03BA98D8A95E7D14DA39A03B827C4377BC0C6
309835F84ED7143F2BE076522E4D9F84F116441872906745175226DD75F28870
9F39BF447532EE2A7D49B0900ECEE7FEDD7AF151DA839911CC18B953BEEB04E3
9FBEA36B40494782F1980452358F149704EB45943BF6298E9EB779D89DC56574
6F129EEAC3CDF33EC8821B56DADEB589B5A8C4895D9EFE1182E11CC0E7AE75FB
CB6666114864FD966BDC275557607AAA6AD59AC21FC387EF58E598A2B2A68C8A
932B6A16DC2B71A6E1B96BDF81DFA288E784444A8879B3E25D0FCADD4C7520B1
1492D5F4812224B32B33E7D9023B3B8CFB63CF6C8AF962394554ADD729A86D0F
960927F3CF2B91CE7310630D01C326DDC8D62D6CB3F0B9E70D33C9A5AF860516
0D259331FD5E77B3B63088E9F9B721677A8C942404CD8541CA185C2F38E69596
8976A44DDDB0F5E05E83802591455B08E3C8BE8E04B133317FDFBE5A381E9880
69565F7B9B681D827E3DA29A3A4117DDEEF5925608991F06827266A930ECBD16
393EDE9646B2D9079CB7D09975C9D693E704EDBA2F805CFA321B20566AA58618
2B16F774ED4A53C3AA91AA4ABA0E3C5378E60BCFCA61CCF072DD55DEA13C8E5F
8C2DC042A6E80C15BB542E4BE0532A46C15455B106B5F1761FEECDB9037DB424
5254972A9E47817CA48C60E67A0651897D4D77E9E33CD621EC0332FA046769A3
6E329668222A4180880D93315CF697D2920568999A590B5585CD861B5C480BEA
D2D15B2FCB748E21659FCCD5CC2250C04B6B260C77F5F9FF4BFF8E7C58441C72
FC2A1B27D50B5F8E93AE36C372B1FD9897333E003650285F7FDC653B73F9A2EC
DDDF0946B32ED1BA2B407F3FEE4B511E9B9AF858ED2B16B3AA03DED520D8A429
FCDCA4DABE7A87C7DE586E8AA4ED2230C345F550ACA771B2E9CB47AC5E49E92B
36BF61DF6DF06E372B5DD7F2FB2913C56BA2878F37713A04FE73580AF3792A54
4B285BC1D733B8493BAEA217304D7B8839F8F858BEAF47435476DAD50CF6F752
00B8E0C1FEB4B297B2F244857BC11010236592BEF906B94278F2C4C70F6E9EAB
514F42CEF86B2442046589322A8681B50F4A77EC86D6C143B99D5E6336B4EC76
B3125F5E6586654038EC562F139DC7D44F9F7A46DC3A7E2B5D6AF2093B3D3A04
FFC1F11DEB327D244682FCB21E93E55878B9B2E27D14F5D380BEC3D6A3B60F32
108AE4AFC151DEE394A863CB15BF120F7DE08045E8AB3A7D2F085566D5441D42
0F989127A04BDEE8497ADA4ECABB71B237ED7897E105638F8B2B6DE5072DB24F
121C8790175B7043826C65189C990A17DB0EDF2AE11A74FF9707E3342C2640F8
F7692588A73F26704FA979C4B32BD355DFCF97E8BE917BC227E6C8A97D3495D5
29CB15CCAED44EC2D5409FF6FCAECC5C71DCF623328CCA46C7BABED5E547BAF9
80D09A83C893FA3087C88FF4DBFE406BE8A446B2FBB5FD90136B78B1C6A46703
7A4B35747A40946A508A7EC16450E008B9A2A963DF1B1D373DAA7E5083C80484
6D31FA7EBAE664D052E3419DDA40FA85D99501B429C2291E1F1F245C0000AF45
E2031FA425F6F57B13A373A9E0622FED0898D570DAC7FEC7915F04E211C018E8
21065343529738A30A70037134328E21F2C960C06180B113D3B0D56E5E7672D0
A4B8CEA2A7E0F99491BF8E0E23E04AB5A2690C431988E77BA2E48958369E2D56
4553B1FBE8710A83CE8BE82F32B8650A1EB5B30231C6E02644045A1F11EFFF8B
E9548D50D30E8EE99A4AA20F129314870B5A21174F46D129EF8B12AF06B5CC5D
7B3B19416E475D1302AD5FD050E51D9AB7F5982BC714DC6BE7C4AF96C73DF3E5
0EED85DAD34D92140B3C35A02D4F78464A37EF792CDB83885040905ACD2BA13E
4425493A4F7D7B66AD1DB72A41D5F4349BCE010E5D73D5C612DDBE67D35AB46F
E7DC1545CC159C28E0FEC0C5E96A980AA66B6C76F121C5842C60A76661576524
BE0B1B9D79181F551808E011CE46E2F5C48F18E01FFE61CE2F02803FA6D68180
49B9C03CDFCFB1433DDB8CC2EDD9579276F61DF8CB19EE64BFF4AA07A6812CA6
897876F1F604EEE1B4E0D235917049025F3BB8F045CB589D2DFD2DDEC8B9CB42
4E4D14F9C989C7B3A74727AD8BD524419D60A3398BE1E8D4BD227AD73CD3384E
9E1BA6DDB34C139317F55CA58FACBA796076EF0CCF55283A1A571C0B6EF84342
931329089BE7D83B814E4113FDD10C7734772ED76DA2955D665AE6A46080BF02
15F9353949EFA06712A5A5072A1185B5ACD2E0C19E4A90F7F2DCCB32B9CDA8FF
6B3A569908587DA7A93B760B90926E9CBE345C00FE8C404268F1EB6516837B41
1F19A6228445EE6695730FB7C6109A22C27A92BE696E02866B9DF7330A5164D3
711BEF1AF57B30934D331113235AEE426E54C2F0550A8FD5C4713502E7851D49
FFF387F89BC483A4632934A3B1B1C5A5059D2A564215D578FD3B4F4813338810
FBDFEE64805E3AF26753B8A0D52F77EAE636179846FE3501FBA24F0F56A44CB2
F2A844209BD5ECA72138CECD5A4DA24EF7379DBB56819E8949D0C2D2AE64840D
9C424DF1F1C0966487355C6EBEC5FB6BB76B0266BAEAA48B24FC661A1FE4BEB8
0E1A916BF519D9CBBEE7D9D8E90A5614182B322CCA22D5217172BE3C44C7D5EB
2C285965F4DCF2A0A842CB2D31AB8F2B46C8FCEECD303525B426AA9253CF87DD
D4BC7CB4C9ADA5A6630FCA7C35A5E775E24AC9BABF203C9F1ED402129D68CCF9
4195191D65203B57E9426509BA8814849799FF0C0F3F972CF03CCEDD992DC76A
5B640A07C6574405EDF3196E32BCBA48BDBA520EC066319191D8B15B2B4BD77A
CA9C1E0776DF1432B6D4CA90EF82AF071808C1B0F6921C309C1D10D824D3C7B8
748B83CE002865E5FD3391EB48088AF361B99666BF29F46D5584A82EF285414D
87A57F6321322D47D70B1D24B6F4BFE1AE855973123B8C6DC415EB9A2EB698DC
68A78A2C01EA493D5E5C825E46AE1AD7C1FF4861724371C78811B49A2D516465
46529E46CF5B95F9F9FF74F4FAC1302B33DFB91A9344D81DD5ED7A37CAB33A26
372BC73562DEAF06C832FAD7205ACE22DB506EE5684E37F33F8599660B430BCD
0FA20196DFEBD120BC5F9231246F319071BA781BB3CFB41FA79E43C7041E5F63
6BE8B5326A82DCCA2CC7F0CF10A24AE9AA4C92AB051365E8574A7008246BD341
8936FC5A88DD0DD5C5D9E6C27549767F9B30D9B71AAFC23DFF1758081F61600E
93B5F6A58BA5F515AD52442C96DC9D6D374C1D7DB216EFBF9A823C7B971B60D5
B1716FAE37F5D9BF9723A99540D4DB24BDDE668B56C389FE7F3EE23DC08501A1
80E0B03FEAF2CA1EB56DDA502FF9DB6020FBEECD445C8CA91A951D8E191BAEE0
7B38F1FCD327512A39DCDF405D05FAEFABB436323DF899256AA1F88D5155B251
B5B3C8B070CB6183130F67B7C6C21930BB2301F82B2C2ED98D937C0188580A47
7A63726A6B72AA28D437380348831F900B429B2C4BB3ACDDAD7620F714D8E01A
D61AAA65F3C48B35492A8B95F8859E92DC98B12AD0084B2621FC56454B7F3659
77391085325906C4FE874946E5460971A53273FC0F14AF558F3F7AA73C7FA8F6
184ADA90B0EDF34E349FD027E5CBCF249EA07B447D45695D0213773D7469300A
003031D41F15FADEA7E948C122C39C2C54DFC5488C6C7132F0955172EB9BDC59
52145BB55AF31A875897AC325A8887FD37168AAEE8C8F11A23976CD9F1CB0513
0585068D192AEF08CEBBD2A608C5D1D371CCAAE3889563AC146453E687526917
685D51C32A0213B97BAA69DA24410DCC3F2EEA5FB92E5500215CF459DF5D0F85
F31CE822FFB46E2B456813E56F13C3E39E8841E7080BFEE48FE3D74785109CFD
C706AF9E17A089ED3847FB2F9AB05D6DA26DF390554547263F6094BB83F7E296
5DF8322A004109EE251B9DE588618D56012162BE998F60CC1BB1DB4562267D19
2EABA04BB1867C8B7AAE5705BBA5D79041410ABE99EC6DC2D9E3207351C4DC5E
C98D6E36538A30F38BE428EA58714A823C6A873A632278208A4887624B8F8F91
51EBA5025A9CC7C841C2AABB131E621D3A3914FBC08CCD628A0A6ECFB7A437E2
DA8C224AF4AC0353B9F7B9FA2187E5285AC5812EEBCD314D4CD71B8E3F941A43
2AB78BE4B973BA7C6CF9951DA4CEB26EC86535600EAECF9F14D741DFE84C8F1C
E78060DB989AF3F538707D423936BF42997A79F4F5B8DB4852FDDB6D62BDB6C5
E09D9DBDB61230348EA053C515CC8642119304F78AC6F20FE6E86B1F67F0BE6E
A10617EFF49A79EEE4959FB534F69C90F89CE8F44B14E54FCBD49F72E080B253
5166C033BBC1FCFE662995DF052A792E57A70A0A3FE57DCA3A9612929D96D7E6
2DF096723887618F3BFB742F9DD69B038D3100A412291A7C1B410DD215C4961B
4BF564F84337C6D664472750D36CE18A75F39F7E751C943600BA2C011CFC1BEC
B114ADC9B886FCB47CED33BC1C4F99EED5B916F5611C5DADBFE09E7940305473
04F47B42C022B6A81A6AF96D953CB48EAF5F4F92B73D7AE87B13F1BF1A1E2775
BC01171F0A1CF31BE997BF475144A6A28BCB11237C62112912B0167E8FC73068
420ABE7762B7D514D67A1640D97AEB4B2AD2E9D108C15E44F1307B350AE2CB6E
20BA951EAA853F32F2510CB4697313FAC857C717A494F7EF28CD84E1EA278574
D835423CB7075295FF58A208F597F2C2200EB4376C51356E41B9B8588FC8B191
2923FA7C30B8290DEA490463BFF63206A37B3C7511479FE79F0BA794D87D96CF
D0A118604F9D73BE0E18EB984142182C353E469E9F0C4CC400FB95BC4E32AD21
AD4187C868BB9EAA77C3E1CD40C72F1EE02B3CB8C9F5301645B0B3F60397BEB1
B913570A51B26FD97C635843A02709C6C2549B31937DE3249939D14B305A1CF4
B2482D465B58AB69322ADC665BBADC1E64D8EA99FA640C334C8836B506C484C5
2B9655BBEF44DBC066CC158E863124C4CA57225A27C2B50C4521ED8D6EA8018D
B9A40B2F7361E909824C41EF9F5B739482380CD97DE6888B9C5547CB7BDD8769
D555770AFF04E1CC0713C857332C55F65D166A4F78ED3FBD377569075DC90523
8BE97913B45977BAB50BE8C472B2858AB00173DDC7B658AACBFD7DE72D07AC48
96E5FC6F2C834BDFFA6C64A308E995BBF31E9B9BD16D92F3E57FFE678EEA272C
2F2843B0447A5AFA72419401E89538EFD7943B22DCFB4C6BFB66D0F948A83C0B
7AED2826617D5DA71371E02612427D6F4653F89D40895C2AF661FA1A5371ACD6
9FFD25C55A4F377EFED0BE51B5BCCD56E3A1EB709481DB8D13169A137099BCCA
ACF7C59ADCDFB637B2AE286BB4DB5012B138751FEF3929893A7CEE48D76FC363
017804DE2809825F7172B4982E93ACE9D88D255C467431BEC05F4B774C20784F
648F296F3B9C4C522317B8EF4498694C0884FB84CE3D4FEC5F57307EBB8EFD9E
852CEA992099A5AD674B4A96A45D91E9B00D3D0E738AC9B15C6DC9A595D1B76E
F03AE5C85715AF50911292FF3856D02EB1217F84E492F9670C61BF91E453095E
9C9100C1A59CEF4C8770753CC7A31655AA112673D9EE047BEDA799176194EB38
C1122A8C13655A78E86B5C0AE3B8C07B05F01F0B65314C56D200CE6150F195E0
4AD14EDCB6AEB34AF11B505FA0B5F906C5959B3322B6470C0D8AD2CE0C8B5766
EE22D0A90DC89CA6BBBF1A3A081A5AA9B0D4F30F1C3EF5D1B535FB458E7A10BC
294031B44D4DB9DE1E0401C0D30608D45F0FDDDE4A343A2A1F9076034D4589AE
E33BB11D17556BC99FBFC1E7735072BA6B5B915309F0C25B42702E0BD44AB2BC
79C0B83BC4440D12FB6E5277211B9A10B5486C8E81E172D34CB24A417C521A94
21ED0CB414BB400AD66BBA815FD6C511
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5020D74C7714FF08F5AE00F69DBED351708B1C760171CE5
5D0FE3BC5F6769FB19C7951CD5DCA774B841330A2C8CF59CF458230A1642F956
21D23843C4332F05F5AF14E70EF052F02F7E3F51D6E7D68A4FED8D2C4A733AA3
8973CF4CDF768C31E35C395C3BF67A79F8B1AC292F38AB2EF22A87A8ADBE2C55
747D7AF3101C5F1A2A1BF6C0E245AC583FE784CD69B918457FC63ACB5FA24E41
CAE39AA9386736476F5C0BD3D01ACFCABB35BD346B884B97EB5F467C93A2FC7F
82A0B3682C1D7B0CAE0165D6FE43CBD8FA5C85EDCD122FAC36F59FDA7CC4EFE6
1F9F8E88832737186037F9E5AB161B8A2090F5569529861FAEFDC91E823E0A0E
A92E7F1118BCF413BD355CD844D0F88C47B267EAFA1585B4ABAAAB9BF885D233
DE4656E4CCC1AC1A5762BE48F5FA88A0020AF17A438014B5902A55EE220152C9
0348CF590A07761415D2F53A866C95D4A6848E2BB7970D176670F90765843635
9C2461BEA57F9CC512BDC51EF25496B2C2253AE85AB38889B26761BA509C7F63
8C6CBC4BBDEA74FD3B43A178C86F9A97423815F5FA2C09BA590B8371D5B7758A
43F98F4DC4792308CDFE2779CA6F20ACEF23FD8FC11F483C0CDAFE837D984A76
1286C4DC5088F5DC4B8D59F781ED48736CDB2D0B9B51340F6218CDD622544552
9BAB6B88481D111091C2CAE5E19903BE5F2C90E79E2469EFE314329B4653D49A
0C4443075770A9194DB7D3777D4901301AF6DCED2A2582A84CCDE87EC3D05D90
115BC39699CB7519F3F5F0804F97F09DBC446660D41870421604A0C358B2A020
18ED03A898F2EF954BD52CFFBA974BF4F328367BFFB792B5D9C892E36023DBC6
1AAC4B0C4575435F2D1F805151CD6B4F4DBF909B2858AD23DC09FD78F9F30C3F
CE412F9950B76D767FC78C7D03EDB704B1E2EDC615A72DD6C19F2B72D5554592
5A4A6F9A16630E5ECCC72C7611BEADC8F9D55E27BCA1589504504D344C2BB8A3
9587D78FD74CFFED06693843EBBD6285170CEE126C419497BE0413A52DEC1EBC
40E971791A3AA8A06DB3562548B1D7C2589571F6321D98FFCCDDFED51B3B1175
B78DC2A289AB53F249112CD8901A4DC34BF037073432CDE6AF38A2A69F5C24A5
959405EB206B78132A77998D4A8AA65908C33B61D8E1FD052AF3FBF6C63C2901
CEB65CB300271BE59F909C57264DD7748847A4142C3D7DE8EA8869DEA4AD2115
1D24A0B9E64CFFC6A3EEF665E04341E401CCC89C2086F9CF0D58E8CB2C05E27A
056665917A78723A9984EF36254D60A83199432EDB89F92ADF839C75F1610594
839B67CA9E4865A4C8F85AA2C195EEF61B8F3AFF9FEF7D22D3100AD58E654DD2
A4FD2BB2241C320CD742812EFDF018F54E27B0EB9D946A2DA51A9C712155E037
5C2350B0A6DCE3051C4370EBC74BF8D574BF1E2F26A1DC2F0B2D4F93B0373422
913991D666C13817F1F465DDE558013A8DD909749C8084BDD56F5EA63218F271
3E89967A2EA7D3745DDAB434D323328030AFEBA01962AAB38AB8F39AA668BE23
0675294BDFD7C25E6B0B717DC116123298A80F59DB58FA03AF2027B2EFBB59E1
15C325
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A110651F4370133E3968EE80FF9C2E54953EDACCBA
2549852043B5A93B09ACDFD025365A4F8FBA3FCC4DB60700C22ECDF23E95E01A
4C7B87E4F5D46CD2AEF5D46CD2180E4304BB80E17A83397A677D32DEED9BC850
B4C056641799994DEBD48FC73D616143FFB85D78805A95B8CB191C775A2DDEB5
FC8B803AC7B461E0FB63D746090AC3E759366E115437A8EA8CD328F309EC0960
36351451AE7425A26CDC319A31BDE48F68B947574C1DB2834483C460A5B2429A
D49BD462D9C9F75FBA92ABD47A5EF18C3A43B9B7A3D1EF1AA43A6A68E4D42CDD
2484CF47C0FB3A68121F424FA4B29058841D9821D7F955D3824CB1754278E8D5
847116509B7D3B960EE375F1DCCB4CAA1CCCDFA0E61FE01518738F7E6B887898
261117EDC211226EB3A9E0B251FD4CF4FD2543B7E6F394D3D262DDCE224AD9CD
BDE8CDCEAF38C0BC9E406A35F44C6B412ABEC730D9DE3716C5B0A87BC7ED856A
77E3AEEB9912B64A5298C2F4552CECF63C84F805508C4A0CB98910441699B722
2BE7727547825EFBCA21408C5F84E3E7781B5BA336E0CF740BE6D85F8F6F8631
BDB1D0AC05ABE2EFAABC930F472F93E247E29CD9852001BD2E16E51AE3E1A77D
4B05540EDA577F3759A940D23E73451C967666B5EE5CC6EDDB55CFD4CD875072
FF79F4ABDD8F935A11E83F9D6F40978896B8F7A0B472D1F9FFC68F7C2F5EB1DD
447832B4E1DBA7870A949E48C9DA6B47BA581F7D24C5A0B90A66F0FFC044D1E8
0652D0836E0FF5980A50D39360DC793D9C260F9A68379C031C3F363054F84888
CA17948C9FB31CF86E555B4815AA6C826666025BB984A519FCED4498E4A4CD61
BDDA5F652B54A3270DFE501ABDEAB9327E296740F0DD9B42A45879E285C8E0D2
DD61A71643555DD007B6477A05334C6D7D079DB00F337979DA04BBD485BD5630
0DA794E86C9815AB3FEB37E78106CA0A3441735AAC9EB49CCA33DF4322929D86
32C4BD136C89169D45718A88BABCB2844362B0652A6345C6EC83DFEFE0994552
32455B3CC14F0D2FE83F60403C598F8E360AFD7C3A3F37E771BF49F20E7ADF22
AE9612796DEB9138059A4C12D4A8B8A37DCC221CE80014F807A53945E21FB479
4956F9E37B87EAE0447EDADEB00764A38DAB429277B779104D1360C711A40FE7
FE508CDB795A3BFDCC677893634CF91C45816B9AC1146B1BB7AAA74FF92F4273
B18D515086F457B5AEBA634AE5C75971733044D64738F071F82148EC95F4E53F
D20E5A2A4479D59A73A9D61F3E4E4894BB92AAF0AE56AF9ABB385D300EAA72C4
388B62E7C32A29313EAAB849169FE98FF9B3CFDF3FC9692113CC15C94DDD2940
49748B473FD5F4AE9C34F0554E0BAA2290B2082F996026ADC420C676AD59744E
3D1C8132F311B70AE10E12E863CF044F38542BB9CEFC017BAA8166A39AD8117B
F368B91934BC6F0BB1B2E7C4F285F9BD614A00DE6825572189A19315AD397814
2E2E61CCC0992B66DA71D8BE22836E6DE06A54674E34DC85646396AA84DF28CF
38994138E0F4E0A3F1604049D39F50717E4670442DBC451B029ED37E22709B8C
11F4DC6A1EE18BFA4AEB8E8FCF1565480CC3C141D6375466FA0272B67393DCBD
86FE4CD039BB44D2BEC68717E95B7597AD7CACDA2A6A4E8808BDF0ABA0997D0E
DBD2BA7C8586E942973B8ADC21BA304ABB619E86CEF1C8D3D84C9892F62613F3
FC722D561C0B4D707CFD45E588F7F0CEA7717976FBB04E6A3577A2141CB8A8CB
6EA47F3B1F8BB5B13D7B90A4F95E54057A005AAEDAD9D7CEBA399B3FDFF494D7
8EEF9EC6AEEC046812CE43B02B9A8F4A127E7C98CF0C088786119EB7E0E7EB32
C428F531FF5E355D691E098D1FB67AEC40458600B1A87AE31E65B7EFE7B1CB02
5613E53340E473C1D5495826470F3A1F450D1AC2C81C876EDB818BA0919DEF1D
3F443A32A724A003C23DE44D0A1774265B27B89FAD2A00A0F8325EF3029125BF
0C973EE91DB8A81E4164F827F359A4630C2955964D0D808BE8D16D2EBCD7AD30
50E68B2F5B879433A41FCA23CE3D342D8157822D42F334B8793F13FB6797C5E5
249834816FEB195E5FB218CCB914449B44FB92C6E63D1999EE615767510AADA4
364CC2035DB3CD08B107110C866C7FC5A1A8A411A597335E6BCB62888AC8539B
369E5FE68D9DEA3C0DBCF7C332C1413109E975BFFF13E7D0BA8720C1A7936015
028480F2CE7EE814B92E5BFEFF479612753E3B373D0E5E288AC7CC5D3A751095
4895B6583129FB837AFE9E5EA65226535F722426F039917C6C2E033240C86703
508D2380278FB9B8E12B455199E01A4C7B87E4F5D4EC84E9D21FC68D0D1359FC
7996DB1B6A97E165EADC6CE23BD6CB9700745AF7FB6DF76A2251C779DBF0649F
15D26FD05EB16A7702D79D42364FC91AC88F98EE11E8609E02E01CE344598BF6
B0D1B1310C75AC850FB4C642FA3710C2C9905F224C87890C9DA4E53930BBDB54
CA2AEF866BDC2071045C3D71BAB3CF386AE54D6D57ECEEF7A86A51787478FAF7
EDF2347DFCB070CF8E3093B06D0B80CED641940DD7A92B277C63B178F5E81127
0F2F4E4FB0360E4923BF1A75C78A77CE2BB4368A7C8F48639FC3A0BF18262068
E043BAFA2CCBCACE0875E368521C0D91FF9ABF781BD5C69282459F75ADA02D7E
D5D348F7CB99C78CFD41D054B08B9AD11A4F25CE3652A01C7033683D9A1ADF85
5A6BEFC921B4896D04E61B913B6C417E0AF5A4EB59A67192BCA9ED8B4D70ACD4
EFFD55C41DD3831AD6161DCDD67FFB74C773637429CB45EB3EC279B505D8299B
2AAA7A05FCEF74AADC754D33163A47C93361B58F38ACBE8868CC263D0793FD51
0BEFD0B8DED7C00CD9A60AEBBA3FADDCA48E2745359AE31AEDB60F54D334C1FB
8CE7C6CFA4536829527A871675F108B3A973CC43AFC2BE532ED012C3EB58266C
BEEBFEAE16F228285B627BE31FE6BEC3F374AE853CB3E511385FDD62F98D8CAA
ECD64C7D8468DA6DCF2767A73AF89279E81D9CE04C5C360D7677FEFC0BC3255F
01003FBC34C53EEDB7645170A6A6B6C1A85D0058926158D713B29EF1F9D60352
A41DBE68A7816F315788F094FF4AF02F686A3D22F12830D995534A8D82E4B822
F07B115CAEA24F19126C17DD16A3913F27F12C896BDE5C6BFFB9251338B976C4
056DFB27F053921193C59DB289A4188A942F2D2D868F92B8459BCB9EF09ED7B5
2B92B00BCC6ED4FE1BC82E285FD99B6CC9808D4BF6C5E91C51725CC94A1958AA
70AE9037BAF2779ED8034237F25540F71DF81701B07933495A954F676F7DFA49
F81BA6B221FAB4FF6EAB642A91F1947AAB4A780D034BC00B16D7C4D77CA1AAE7
242CE5BE6A645C2653FE55D062B786BC3C6651B6A1CD604A45763B67768AC526
1DF9C7E081A7F60049B5EE91E7C3F3F02E3B8751E078517F614A52C9CF58B49C
1D1550F2589FE68B29179A3E97A3F0B35A3FE8DF5B26B0E8BABDC5FCEE3EB404
54892CE429C3ECA8635B7A013061A8BB2B0EB98CD8674AB5A33FB9835B0D1EB4
B6F550DC77164C5F6B43342A87FF745965DC919A12B63D7058BD4F4BD90D4EC8
361D3DF55B5BF4BE1765CD19CAB0F92A94AD2E091DD7659A4DE4DE812FC92035
4999BE909721075D1D40A984E6E75ABA2F4AF1A7D59300C44EF44E7060A9FBF7
B5252C0274C581A2005CB515170BEC2C09C3EEF80AF06A0B3E3A704A3B79B914
B6737628E56BCA749F4720DE9195E8559ACAD8346F7BD9DED0B9584FED157922
B29CC828ADD9B2582CF6C3178700E56D15B3AB9AFAA3E9D10D4B47F75D05CE2D
81DB06B129721A9135C29F9C2C2C9C3FC2897183D705A37702223D1466A03D24
67AD61286FBBAA4725D698612300458A151C340BA68A9106225ACDC6D829F002
A20624B2659A7011A9657AC8B869C2FEB82AD03AF067FC6D600734F59939234A
15ED0A6402505729BEDFA52397A053B37ECC29D2E0AA06A2BF72DB85657F4A35
58D4585AD1918E86DAACB86054F56F7394088DC50A1C1FC14A0F8E5003D4703A
071AAA2FB6B31D984F0072AA303D33D5478995B533818649CC62032B5D3A3F48
0437323E1DFE2E69212EAA61EA27F9EA185D6B4A80C1BFA827E4F15E623A96FA
4C467943C618A5E35267223F46AB148E74D8D1B986B2EBAE55077A0E54BA5F4E
CA8379F7F7BFD9CD497E66CBE3728B6CC761E56E90A48FDBEA688E80FA438D78
057EA80AF988C8767E67C90E0CCB24824503570117323252722787576A552F56
5387D8D2176685B1A58609AEC90E71132EABB4AF737A7AB1D63393DB4A3AADCA
389CE1ACBF20AE2FB1EB4802C331780943D1C667EAC9A01B6176AD76F2D3E88E
98A5679207C76C999903969568B43673A80D0C5108E8116E5F5C2F25A54FE587
E55C037EDF4C9BC1D95FD0DE382839AE8C789A6339F7D36DAFE163824896DC2C
78FC9DF1F980D05D8533158A7D1941871D0016ED45EA05983F88B9E7E3262FB0
36E1F51B26BFCAC3915932A9CD8EA9FC589975823965AA4D2FC6AE27B27A17C5
10EB9072FFAE0685C7C24E70ACB8564454277C41C28075ABDC428D3809A6BD65
49A52A6AE38C80AFB8C867AF2D6B55B800BE51509F685173FC157CA62976128D
48E72C15E739FA6D2412BFB5783DB3C0F6D60E34BE594B65D769B6340202E77B
33EC7CF4718DD267EEFF4C0000F2F317ADB833E0D0DDA4D02A93E18795A8AA1D
4994D871C6C5B81488F425782658BDAF63E8792D79340D223C92CC01B7E355BD
A077E525640CF211E7A3B8DB7BF746E85C18EC1FCF0C423A86C57CBAE8F9F82E
65EDBCCB17469C47E7B6B66DC8BDB8552BA01AEE38E1205B077C2F2C646FEE57
99A02E0F53322EEE450F6DC39A4F03032CCA7A8320F6B01B4C39C37DE56BA266
2E21344E73C74148C1ECA7D4F858CE686804C3F119899F5BB3DC8DE39690B59F
D2708ACEE9F19DCDFC2F1E54AD17895F81828655204581AF0B98038CA5F5DFF5
D325975F280CDE4402EC81ED6EE1D304C8D933CDDB280F05DD157E37A6EB7BB4
51424B682DB6CE16E840BD0577CD58A2FC5B7D170AAA239E07DF91A1C10223AF
53A16B1DCD7C5DF152E571C9E7318117E3200AEF170495FC898F22ECC3CBC849
8CF1AED08F797E67C90E0CCB24824503570117323252722787576F4CF1A672DA
6A04C28C460DA2A483E9826D8813326765D2A528C6A92646975A56E261E3C169
37CEA1C949ACC063FEEAFE31C8A721C2D46AA00C10681BA9970D09F1EF4676BE
5E02D7DC4613C87ABA83D059ED0635D5874A3671EC6B08F2A0B3374650DBA970
A8893D25DCBEDF56ADA1D011C03BFC4D497466C7F09105A287FB8C8D3083CAEC
5B4F7B332E904266FCB27950759D9DF1DC35FC7A9C4C4799419A851AF73C1978
E6ADEA42A238CF1150B5BA091FD30CB05C0AAC0D6FD8486C034DF78B77054829
D7A079D7BD85B9A80845B563220566FEB8F341AACA7DF6DA060ACF1112FA31D1
0565B2B293E7A6C09E2E8FBD459825415B084F754454ACBF44DCF4961F68DBB0
644E77613C9E96ACB55A77DF4812D900F42AF9770E51EC98088D8FC81C7A93EC
9FC3BB5BDA3619E904570286AF49CEAEEAAEEE0AC1EDF4DC2F53275011EE991A
A96DDF4C96A9E0D8E354195A2563759DFE0183C8D67B449516EEB59F22B42BE3
2D7B1631DD1E36137B9C75F2C99248D4FB86CB367BB50ACF8FBB2C8A2EDB17FF
267D0F21C35BE86E068F98C3564F42D2F7F26014DE37C4DCCB6B30860F43089C
0A6E1E7B4D9287CE71718F81073EBCBB4386C5F4957F220CDFF1BA5AFF56910C
49B957170DFE24CEF8234658524B0071B5582DB34872C321F5D6A82C3B0AF842
D748E7160373CAD07AAE053155493BC317F89A8940552EAC2159B49C1DB34B25
67B50D0B0F2BAB32DD9D471FDFBE9B4D20B0BE8BBE3C1A5459A27799E63F136D
C58DA8682674E24838BF99B06FA68C91E1797DB85D924C037C275BD496F93E01
565EF63E388BFB5372277A752C858F67901B52715557491B4DED0A19A1E6464D
99B41FC0AC101E91B84180444A0A928894F8FCA116CFFFF88C6F1C7BF34A0E25
EFB2AD7503D23492E7E980B2C4324A4918DD087768EC44A893A7EECB6D95C35B
B87DA2B112A3E5F0257A53249617F3F4D9F5729FC7C25090211470F9D3B10BF7
FE4019611CC67279792C59C002037F13240A333B2039FDA78228FF7FFF776789
5FB02F823B2CAEFB944B42D689B020B11D38ADCBDC1AD716F75A2C6565B6D04F
A90E615D06A805EF2EA704243FB382621C005388966DBE3F4C2EC9888B56E962
41D345CBE471FFB3B78C4FA50EF1BEBA5095045ABA7952457E62E4081D5CA62F
44DC287DAE5C2DBBCA73CAF31025A3FD47B8B313E59528F2881E4C77381AE42D
708DF8E5C93474AFDFF39C78E4003E7B7FE30D31721B0ADF552294F3AEAF6C9F
4EEB4990475FC4232A38D8F3903D81C9A329939DB5396510900CD5D522C5E9DB
C5C59AF4C51B407D44468B5E2614DD937194ECD03E78CBB916BC57037DBE008C
F0CCF784147D8580979FE5FCB204DC95F10D6E5571D4EF121855C1086E047F04
3F4D780E9A34C3E671B402F789C9F3C869F0FD12D2A1FA3458D37F8CD2E85194
7683E050B6D2E4F51FECC9351B42923E388B70E7C41B77DAE3DB6C579E3A28C6
3E8E38D62A92755377D1274604BE610997CE121BDB9CED994238C39531CDDC19
7EAC2414615E79137C52F372CB9CFAF7DA3CAF003473DBA5C03B5BC597E5C182
CBE1F42E739B6485473B414FCCA4D5C10FF38CCCA54DA33831938E9392DEF759
4DE827864CD1D0B2F50FA679945BCA6A71E4329DB73E7F29098787D96D89D30A
3C961F55E64983F69651D5206CE47CF745E42FF494201D7BF2AEE8664D6AD229
D31B6E7713609222EC88AD13BD745CE175B921697F9D9FF0803559FEA2110988
23531BE96D98F0401D2545E9FACD008B4ADB50EB9F049AABB576738EB12DA190
F7B750529BEE0764347214528AE43CB7EBFD4F38C31CF4FBD46EB44215D6E646
EC32B1031A6A54A6805B7F680B56CED7F1984220443B845A9FBD9CB9C38B9396
02D8F7A3F70B39F1723B8E668827FBD165657C485FF7D48E2C2AA8284ED768B1
555C02AFC9FB543ACFB65DB1A10646D0762B400B49288C480351F7DC67048E5D
A26AC7D0ABD2820C2F4E7B76F2F0D593E7F8D1CB8EAD24B2F8DE2F54038936FB
2D9659D413E08C97C832D3A03EF24ECB073936A0C035ECDD9681A52882BB4E55
C113EB226EDBFA60AF43C7D37311FA695AF97F91EA727C3FD9D0C0217C057987
87881D07CEFE01902B0D0F7D8913B4E954FB295B5ED5498C4A68B73340A25409
4DB0024341A7BA745D8F3DF3DD0D5AB028F2EAA1AF13F4F8F96019FB2822AE4D
7FFB00D18FF44D2B0659D8818C847E21917F8043CBFAD9A3BADDFC68DCCF67E0
FEF88AB76E205570691C6063359CE9DBA2E3ECB7B59435E44A8B4AE46E1C2BDE
A679FF899B2E62D89D132868CCD003AB7AF9961F0943FF5F02016DD6F0563A26
851D5491A897AEC52D74BB6747FB9CD5A633DF53752834D3CE0EB2B7D7775E39
5BA4BAF7F82F0850D4EC408D5FDB7470CD59E8576E72A8186570F0EBCAA0CCCA
D7FE46DAFB0044DB29A8B801321969CD052FD61493FDA21156452D2865572235
B8CEACFD7733CEDCAA991212FC3C15A7E8CA6E083C0034671A4E268BBADA4583
A16C3C57DB5F720871CFA9672BDF5356746638CDD9FD68E308DDAD15D5676372
A863F05EA4BFEEBD5DEDA74B52C8EB0BA716FF6C6468BB98385F009C20BB8434
DAA8EC8FC416BB45F9DB9C98773585EA5E4D316AEAC8CB4182A887EF4B289F0D
3573D61FA865EBB3E287937147C9BE9926DAAAE4C59ACADCFDA1CF32A9E980DC
7946713AA2B67ADE09E2FD2209974B99C3A0363AA5CAE125EF0F3B74E35560D1
6C07063DFA0A742BFAAEBD91144D26AFEB983E71575D89DA575AB19DF8CEFDC0
FA2A5EF2622F879D80738E31D04524CDC4DFD91254F5F7DF55FE68CAE7989878
5FA31D557C86F93742930EB43CE5F45809AC88B5FE9E89C2EFFA64B2ECAD898D
39DB7D202BB69739202BD31EDAA120CE54ED0DE7EAAC5065B4F48C0B7DBD8AD9
FF3B7B5B4A1B7CA0542072597BA50F8F45B3B08141DD5CDEB790D76C36E9CBCA
5A955285C130E0EF728A401986C50D3DEF377CAEF216A5A795DD63F3C6659BBF
4D2971663D0AB84621F15C186C06199CF885D233DE4656E4CCC1AC1A5762BE48
F5FA88A3AA47DFC0FAAD37018CCA129A4897876302C02AD8911B3371DFA6452E
0BAA0519CB64DDE6282787A7F448D78DEE9271F19E6331D554E6829242F1E05A
A1A3BA678F42355A6F1123474D93C05C07B8689FC4885699E4BB766350BA721D
100516CB839EDAEB4DFE011D1947F0D4874EBFFA5673390D853D8277AB6758D6
8E11567ED38212B204347BD00B461544B85F64FA6D6130832DC718E26691AEFC
1DD6435FC6A7C2B91B672FA23D9F875C001E76ED42D71E62DA447AB71A060B51
99BF7899D41F602E326BF53E4F91B77B22E158BA172BE33861E18AAF3A48C72F
9BD37EB716ECD75C6A6CAF0F0FB5F6A73A47FFFB9D6414E7013B7D984B3A18E6
75655F4CAAC54F1F933DE269C0DF2BE55B48962C844CABB7BED489A190D1E853
9853C0DAA181E59ED9410F4D901B9CD2061595FB27C9B1720C97C551826A537F
BE9B5F897B957CDB27ABA4802F0BA02D8DDC0144E7C1BB169635270568E060AD
7BF221339567C68F6B8CD63633DD6BA618557B6798E9F793E6C866B334A71EC2
3B34833BD3B6BF56210B6FFF3953D0944D30855CB73E7A7A981C9CF9174322CC
22362D93433F8D716F159B035A561C376465F9331E5C7BDD1DA502EB95C716BF
DCF80180EE6DC71C01AC6AD353810CA7938D83B174577EF9C645314BAC0C5D26
C1076AA31C8E894713849EB6F8AF8007B3F27A59C82174638FACDEA968C7A123
2104B287170D086BCAD5C7C2BB9C184A5F3F9186E7F3B1D843EB1118F160769E
D9844B47A8A2CC08811B93D94B01FE7AF62D56594BD31845DD8EF67D1D889703
646420B074E222B6426D8AF577A5B7F2B019500E8FBD9E83B2C925BA9BF62903
24C59F30816B248D320852F6F0BC092B0CBD2223900A5A4D8EA5A11699365223
82A3D7D73CEBEDF433870C0523C3C8A7F3AF5DE044750BF9BA8D07C3D70161F0
724055E78899DDF3BCC34D14196B1E24BDDD67D0110B8331410F1DCF9E65E733
8B42FFA0B337AD7CB84CD7CC7795A8F1E7197309DAD0349A9659540C28723810
DAD7CE08EB085D29AC7925CE02513B4E614C0862D035E6AC70E1B1B5F02E969A
DF6CDE36D67EB79A6BB67B5CF26F8C6A61D41E773D3D0004057BF9DE91B80648
FAD40756621200E43834B0CCA28532BB1E7CDD3327289EA1C3C455D8E7D7F669
5055586AD4366A741031698AA060ACD6CBDA8D00D12D8F361B497A5239CBC501
43E098CA65841533DE0242731B79A1A82CFCE9E49B19F5D32E2386B247139DC7
37A0C0E3D0D1237B3FD2E75B2DEB5195839A638DE491FEE467F68D25CA5115B3
81E6D61A9C9A71CD02986992B15F4CAD81E8CD4B2A1E85BE0192A4B722775DB1
D43ED534CE92916843FD101A6FE4D552944258F3184E28421EFBF0F6600EFA1E
7D08A1D454FC01407126D3973FE22CD3AC4F6FBB0AD7B96D842474D1DF235DE8
9D464EF44F2C9297ECBF2840EC61A089DDE23DC9E3DEF6471946061D0DB6701D
0563A3792A1FD51E5460CFA0338DF1F5726862FAF91505153343C3BB0884A7B6
0DAD17058B8E88AA568ED8E38E0955579FE200979E292B3B57E1F7A9FBAE495A
2A25D5A813D1536D5471C3ED727BE7E559B6E54B0C7A64D4A2C86BEC799E6806
C49C1636A77020753AE9AA57C1CCA7866F6543CE1B25AFD261C434D1D4CF4FE9
C907B8468C530A546D701A3B92313C397F0A208ECDFCBEE936D0293C010457BC
056BCA70A7E3B757A8130BF3BC078B17590D62EE62126F8F3B0DFB89AA1D0FA3
717BF3CD52E7FC86C8FE3A9FE76321F3DF1B8D279AD66877E0B05E0220FB8FDF
41ECD551DD326E58FE258D0E268FFFDAE1393586EFD449958C91252156984401
2BABB5ADF93891FC191896A755CBAE3F0F649948253EC51D98A20B1C4150AECE
1B62EDF28AB0B03187728AF15BEF6EBCEDDC19B9F7DB2512B6AC7FE21F478248
CF21986DC483EC4FF27307585A474DAB678B23A7EBCAF98097861710D733B551
0790EB12F5FE80B60089D4C18F187D265E8494A80BDB1FCB3ECD6DE46267C21F
A581E86060A00DF7E387FE4360955D6F814A0B72EC09A99E846384818A44E541
E4E108DFE5E34573DCA40F5946D9266E07CBF681164FEAF332C19BB771979FD6
A842FF6BCEC22ED954560FF7A1971E39FD57F8460A1AEB659C973D52B28D6CA9
2DDED5BE33EEE8268324F6C902D9715E9D5EFF5814A8F3E1BF0B7E35DEF6A9FE
4F0D2A2E9848262290D7F8E5AD77A3AB32CE9C79E9F9F074AB70369ABE28B707
8F57A4D6313458E50D05A1E91DD6435FC6A7C2B91B672FA23D9F875C001E76EC
92FB6934B5368C099B59A7114410C608C749D1B7D49233688B150E779FDD9DB7
3AEEA11615E7DEF726AACE340AD9F2EECA199594CF093FB8D49DAB28DA0EDB94
63FAF413BC1FA14F1FE0237FA942F76F1157480F336F73452C9C15322A392131
FB96C14CCBE65E59BB4D23F82F28E6759E924266ABB0F5AF2002DD17FB094011
08241414A916807F8AFB0BBDB5417E6D852FF038407BC405811993C856601474
FD3DF4947137BDEA68BE33B1C86B31E1EC5E2E7ED6AE24C15111AEE8B0120DD8
E29CC460BCFD5BAC82C941C2774AF399F6E93075A7A0EC5AC289BB9A3C004C5F
FE6777D6E374B40FC2ADE40888C5DC808B63EBED348D07AAF2D7F7A790A0F099
8C80FAD9A265F84D5031EBE0F523F174D1B87F8E5A06CB2F03B396D8F523E783
87EEA92C452CE44D0E6A37CF3696FD8206E691FCCC9FF002209C1C76C4C64695
6668CB64B378A98BA5F5DB1F67DB7096EFB1F419D84A061BF099B8FA36670B16
90CB69F17E9E3BF1E15EDCC29B7701969EE4D07BC78F07D63D7D6E5062055043
0364C88A1DF224DD3EE5110C0D94DAEE6E66D20397C46FEA9B6EF288668FF3ED
3835171FF4288E56438EE91BC7297A8469F567938D322537FA0A8B5CB3E29020
7065992B084D567645EE4D2FC29814CB1D7082661851B3D94D71719C73B320DC
91F4F64B9B942A7CE1109EC7BBE8E5B7AA2CF43FA2AB8EE4213DA7C6C4277079
D25627DCD5E40E3E202D7176934072863EEA862AF354FC6CEB056DA1425749E4
65FAADFA4BF11DD6766C8D058CEB08DBC89FDCFE829432331073236C67785257
36974DCC85E7CAB9173DEBE09BB23B6885F25CDDF3C2DDC16FD131C7F302A2F9
FB65ECCCAD4616959B80FA764F314AC16BB1740C1B9A34534A154E2B04009136
E4115E6073611BE138AEBDDA44E8D1AA9ACBD47097BA31643A74F5D36BD72480
8357D4FD1813801BFDFFEAD8D918A30005C31F177816336B74AF8B9931BEC0C1
8AE73FE1F01FCCC7F5399762D1BC994E94B6179B1A7982129C594986C30DCAB5
11686A2C699385B3CD763CA12281B1A5C2E93E324FF5545D0CE8972C2431411F
730D16480AEE8D2E2DBB374BA8B0C30D5E782C9B7DB4551CB68D0918B52AE133
CC3977DD3448946BD058A0C86C7B26309AD5A80DC8A9A5AB7918FAB070E18406
BEC009B1658A7A314C04B7546244474F513F8F91E616AB868D055C8B11CD6EBF
9453B2F632E36A15B373FF3FAE535328CA8C0544484883A0F02FB4B3781CFF5E
1D1550A313D6A7835FE456A79A38623745FC7BC778B3765D421C915FDA50CF9F
04A95ADF3F80F3C4CE59FAF95451251659F4FAD3B928D141B5A50A3F5E9A303C
99A80E76CF38AA5B4C4F8D3809A6BD6549A52A6AE38C80AFB8C867AF2D69FB1B
0EB44C2CBF703208747659F0C260A6B4FD314B9A936D089493E3B7C7A3BE9AB3
1FFD0D9227EABE61529552E426955F25BD3D4181C84D03DEE36C9F7327962802
9C83A000941FC5F85C754D5132402A0A94EA3D0E37D4DBCD22AF7C60C6CD394D
7C4BC204610D3A92541054C0574496C4587DF29768E6F31E94A1C96D41BCA87F
4236846933F03C778A1A810DCD869D660DC33865B7E7C25A8F933A0E69D24DA2
92AB092D52FAA80F47282D973F48A92193487C2944D35418E9E9DAC3479D3309
DE69137DFBB7833E98F45B76D98F7F115A67578C90CE30A316B6D535855E3BC4
95EBD55052F31B47841D36838D978E70BDDB5116533BAE1B750318362BF85D9A
4FED0550257C16C0F488A11DF9E9251C0554FA532AE3CF6B4CC492912397B565
5117DB31B989EC2622635377629CAD8E550923A84F19126C17DD16A3913F27F1
2C896BDE5C6BFFBCB03C94DFA8ECE2B7374827AE168634FA007F8981ADA54F05
501654D663389C4B5A8891EC5F847FD143664560BC4C5FF77A0D68AABE3A561F
9B19E9E4F465753B660F494EE3BD6829B0EF25EDA2814492016AE68E31049842
FC608B1612C379841BC04CA5D5C9E7B9326E24A0D47AD9A7FC20C44470BA5BFE
CD08F2E9B0678F1C75B4349B10E0C822E7774D2E36B7DC679E91F344E2181C96
31F0E06FD50B7F3208C3AAE0F19541EC977DFB9A5ECCECE193800E322F11492F
E2D4693CDDA5926F4D6643907C7A8A5891F445DD18C42150008FFFDC9DA85E46
A319CEBE22106497041C6BF0D15CEBFD453284869BED4F94E7563A22D9EB3820
144C7EADD2B7564578EE778AB577C5BC1E44C3FA9956F75531F04161B2C21F34
CBE80DE64145C23FC97535A6E4F812454833BEF05947F6414AFB850951A3BE1D
DB72B79483DE686E68A33CE20C97AA3D34B75B9B69C9CC6AA7EE629D85ABD5B7
B3158D44150D249200D31492FDDAF610CC80CD098D1E968B18EE09AF09D593FE
3D0A62701D18826FEC47F867C4FC966D23A12CD634C1FA9AB34BBDD9983E5D44
1DF74B89E58514FE8D5100151D635CECB8442177468B4A69E269481F40D0047B
25617D002082B89E2DD0885CA956529EA49D7B9133782E80CFF57472F27BC0D1
11482C5E2407F0458D28393284DCBDB7835E97EB66928F45EA8146164441267E
54185239D9D66638FDA8BDD4DE1F10153D551CCD732503281837C4897D51AF17
B9562670633526DA154F2FC6BEEBC0DA2A57657BE4BADBA11C52E735C2C981DD
1A51008E09E7576B43654C207F12B1FE9D0800C9DA440F8F4DF5248637C3BC95
98A1164C54C878B02839FBDFB30634D2C908A201142248276B7E4F8924750C83
61FDB1FA328EEC43A235F6F3C221A21FA27814F2945BD12376C76382F3C9C3C1
7519E46F82998324BBD0131B32482D403D243A54E251CEDFA01A8BDE36275E76
D3407C62A81FAFC5A6918FC0E56BDE223615AC1316EA2FAC998F9E08DF976658
5D049BF9B0C16328F8992A1287FBE4016ECACDDC72CCFAC8BEAB0F3CEC7B118C
A007C99ACB3A8CAF71B0FD53F0FBB4B98CDD23C4D7A4185722A4CD1DF2EFBC64
62DCDCF81DB674AF26BD3389F8ACCDF1DCE3D915F0FA21593561B3F793D4ECDF
9B17AC4E1A9871B927051015616FA105CD31AC2704D9CB29783F12C090F7E38C
A5F15406029C0EAA200C1BB9070C7F6833CF29BC0C5CC42B68D8F370F21DC097
78880C3CE4E08BC8EB4F995A09CD0E77B6A97267F4C63D4093BEA8A34B315CEE
932B40ADA36F26410CE158403B4CFB64EB4D80157F57E05097732B4DA0F2F3C2
F479FA651F01F72A57705673E627FDF5A0598054506521227674339C79F366B6
CA9EA7CD06B8D0DA8E969FB1F684291242494E52311C02C8A34C0A5B3C13F380
2AF740BD9C765861A95092B7CED26EF1639CA2DD130E71A587A3935D91E2F1ED
F54D76932130618C8D76D20AC022026C6F2643128B9155F977871CC667463212
4F6F9B939EE1663FD02D1E1D74F22C4DA4143A4BFA7B3D22F58FAC1115AFF937
E1A8502296281BF8389A348484028006F3F3248B5454ED6DC729CC5070524D1D
B08A192A26EBA06EF157958C1BC00554409AD56FE7142D333CD1D23D5C8E17CF
1B43A482C44FE52E57AF48D3E9B3D32C3D557ED2F6F284CBCF8856B2A22E72C0
C525500347775505F87BDCC02101AFF38BA1917A296C2BA59D189CFCA85A1AB4
7D180AE3AB5EDC9A66EB2152A3926D74DA3E0E484D43621E697DAC8CC5B7F6A2
587F0A3ABCD8C3AA3F46E30A2EE663C2CC64E2DA3631AB809AE250FCB0B7661A
99E3BB1BD13565961B1B3760EE57E29C8BE8F4333B259C51DB04F83FB8A8CFF5
EA08B850563F1082F302DF65A337A60C1F7C2E743954A17D26C0DD1FC6719E6D
DFBF4CC6E06F7F4E221AA17F75D36F7194C41BC7659CC291CD5DF9CCDE6DA0FD
3C77D56D063AD44CB7970DD572CD605F5E64FCB19D176C24DBEDD2808DB3D785
BF794EA774CAD2ECA4581BD58ADB6AB154DAE7900B7D1A5831CBBB712BD4433E
492B5FDF3908E6BED58C9765976D71E22D7C32DD6A251141C84EDDAF6793DADC
A8DCD7CC7C04DCA33030F187E88F3A42403FD4606192DB1E65591E8CAC11A84D
FE3F09633B0FDA064321595BE68894E2244B800EA15AF8C16B9B8329E91644DB
1EACF1F12425A26341AA5AC2DCE2E64092DCD8A43E347008B7D5A184688CD0FA
CC7802A28ADB7907E056D20AEC2ADCB43DE6F84089E6E0A57A6AD525B4FB469D
4FDF87EF60080E1EA0527DFB9564EBAFB4292516657B11080A18CE326D18DB4F
C12F7A8E9820207DF26473C9C949A2D6059CF772992C5637092710177BA2E331
993DF752B5F9DA8A06B993088E210C91279AAD5922A3546551F93A06B3BB0227
2B60FFDF4B8A791B5B54E5E9D98BD5B3A86E909F1A18CFBBB502CF3C1C33D64C
241B9F161DCA2420C4E62A6FBB9EAA77C3E1CD4050AFE0CF39A32316087A9435
4D471A4D7A6449D75188F3F600D5FE70576EA42629818DF9894AACCF6FCC5C78
714AE6F776AD12743DC8846D4A70232F0EF82F448559F8CB85DD9909A74AD696
B4E706A3B47E119413DD9556FF4172F1B18271FC2435C354C3F09D46C1354E5F
C1A63D9D5B91BB6B95C298D03B35B604E4DE22C24947C31261DFE88A93AE4E6C
759BB40715E971D4F9F578518E37E431CD2798239CC4C949013F16A197425EE1
20A17F7791554750299F7A6109C5FB6761886F19B5B15D74CB098F56CF1CB341
A140660093A3A260FFABF332DD702AC4030A4AD4B5F9F13F05973139BC1471A2
E5D6D0C62F0ABC86BEFCB1F65AF4CE77AF74BDCD3B48EBBEF3576781FBB7D433
B58368D34E5E37B9E2FFCF9AB319C9F3BCA04911B77B657C0E6ED908335A1687
C92D7BF00C6F8129E347C6489FD4FC798ADB86B0C865CA2BC270E4E404F8A08B
6EA22077FDDCF0DD9D585ABA5B3216B772316E03AFA5A27E6F5EE3F77F4D523A
7A4D01199AFC3C88B0E2AB5FE014A8437745108009D13B449B4A055214DF69D0
218549440B1C5F19476595E964EFC9B18C7002F76150B70E79387F8C338AA7CB
A1F3E799A32B23859A4CDFB52C22ADB4DB30D313BD85B3214F6127B0F5A90B25
E1B529E86B0B4656620B937876139F8A8EC00C8BD6EB20AB66BC1FABC48E4ABE
10D7B7E8693AAD1B25349EC43DA3811A83F1E546C0CB1649868C14720C008F4F
FA8D3075910926C632218410359E389D874F4F719293D0B0EE58BE36458AB3CC
02002C46A704E345E7CBA12017897EACD1FB64C1F829392A430C1CB8E88CFB0C
AD53BA7F20DAE648EE34DC7CEC39CFC55A9505206C3C604F4F02C815605D0AD2
FE07CDA8A9F8F0DD0C048753FD98816588DE9C8A2C78E7C8BA614F66F38F9383
79CAB93ABE05747491570EDB80902B818F3E52B84BF6A1ACA730BA1FA90C0D7F
09B3DD6A5FE918CBF88B2CB98B7D817311B63766ADFB7099864428EA3580F26C
C4D4978813067D64E0DF70541891615BDCBF3B5FFB74AFEB695F8C92EB33721D
D3B41058551019C4E12555C4926B0116F86F88A7E9660AA8253D564A36E96024
8C4168E113B6C0C725E49331DC85507BDC697A1C20A553A349DF9D95D5D24C4B
6B2795D94BDEB015C731EDFD27F3823CA2D05633BAEFF23046DF458000AA7477
BE93D17A85E0519FB0B6C5BDEEBB9554D34547816955434DFCDD0733C148B5A0
52196AB08680F5ECC44BAEB2FC41FBAEBEBDB65521D0010402575DAFFF833C4D
59C1941D6160B8FE78D5C3354C17511541D364CA8C1F27232312DDB771243735
43A2C18439DB2227247B30A41C72B88361E10B8CDCEE93DDCDF5BDEFB5F08872
C77BA070C12B23B2C6FF837473C372E70836D4C5747C4EEB85DCCE9246271769
E060E6EB754F8E89B075418D032D7BD972EA6B859338F8D6BEC3B63C5E9999C0
6B34A79E0D131D233FD3CA93D8F5B1DFDCB271329400CAE5B90560D4FC5A1154
EECD0CDBA01C3098332FD8CE6C0A393AB1BDCB88B84A418C9D3B15FB9ED1330A
B93E9A8D466EDF09418F46892F4FAD459D4943657ADD842FF3D6D1143830B378
A3EEECB91EC67FB176F2ED906086FB7518C7167965813AC101434BE5D692FD50
2589F7B14BEE15894121E8CB7971ED4DBD5A2DF213D85A56B1CA85DEA53ED029
9C1E8516B0C02E9F97305FC7E43A31E0002A2F803A30B1202AB55D0FCB8A5F3E
321815C3C7AC714C3DC89D789252A42CB2F981BFA79544B1A2F756D81ACAE235
A58C64DB60FD25EEDB5A9E09F469071BB0F203F5D8ACB7A816012ECFD7947438
5118652EB37CB7021F80792262A4D2F2AAFBBC879A3A7321FADA299277D8D09E
8CEE8238655AC752A08A6091BF4B9D6AC543B626847B574F60E61F9C0710B5F8
3F74EAFFABC289CDE655EC5D586D483DA69DFBF9E2B6F50F1D8890FDB8C56DD0
6D24DA09F845947871FF414A3BF0C1B89EBBF3860AF123D485799661E8A45A88
8FC99EBDA38E539D9345F4B58F6B8E3E370C11DFCA06C381C6793D5574AF08AE
5A4FC89880D4A8DB59D7952F55C1F6110A42D0F70DAB4D6B7E2187A3BF218A62
F3B4198881C0D98302B116A463934A5A28E8EE8C15F8C89E5E3FA70B901CD5D2
C49144778CFFF1D5B63E099BE878F99C34FA15687F78572C5BEBFDDD80971DE3
920CC6E5D47ECED72963406AB79426A14A17B3118E50A9DDDA6C8BE52B95ECCF
029A6B18A512D30CEB0B6ADF80F97EB95E310182F66B217FD6CC9B23CD9DBB08
CE4B28C3754678266A6A1133D8151A000D95E13EEBAD4F2156298B976E43EB00
1FA13E44683DC6CCED04122D1FFF56BCCBB9A346307E3BD497D7F1E2F51B557F
EB6AA32E84F432B9B5D24ED5D673E26A25811D4BCA9D693EF8ABE780991240E0
27E9A5005DF162A28E497C231A0B0AACA773466D924AC2337BEB55ADB1106E0F
F4863C43F7B4CC4CE5008B883EE21D9BD24B48E4D1E03E7378C05B62DC04A3C3
61DAF3A67012298FFD77760AA9C0611FED9B670604C24AF36B6E54543B411485
5461C83881CDF494C2B43135E8062A9F9101ADD125A32195B8CB98C9B19235FA
FF7822685D87B84ECF255178D2D2C4B7F7857E7F5572D3BE2154C076B263342E
8A6977987E6EFB3DD2AF1E6F9CB166C25A47C770E62C69C131FF3870C42B68B1
0C4961AE98EE106D34CD0D4E15BC0A018DED92CC65DA0075E384D92FF2BFB06C
A814AD933409C99883AA5D858AD143961AB8AA828AE35FDF411CDB247C03750F
C0A519E36BDCAF2DEBB2EE0FD69336E7070E3EF345D6D1EDF0B88D08486EACAA
CC508B9D267C79A91646478075E259EFC03C3504BDBFA2B4520DD6104F783317
388D31B2DAD1BDD5B3ECD980DC8CB9A9D9491DF42A8678BEB35D372AA9F49EB5
0246E1D3C022B0C181F21093450D19267E3515B8A1080BD883DE8D9798D30A9E
DE6936EA527F5BB234A8CCF2825E654D39A6BAF9C116EACD0849C62658655B0E
080F0782EA3B1142C76B364D2D85AF83BDA04D57515EB1FD87B119E547047F43
E9CCDE1C1F8645DA03EA702EC5D6CE35E7D5460EF05B1A5136CF2C1DDEB46F73
8CD632EACDC90C78A145838224866EA5C1299D94203D107EA052190509727D83
85E5F898B7E28470245FF4482B8A2A6094E407A823BEB4FDBC9149EF33A77FFB
B7146C2E8C4A133F7EE497B6EACE17516DCADD90525F5041C4CDFA9AB34BBDD9
983E5D441DF74B89E58514FE8D505A1638BA2C25389A4A4289945B806CC14F19
8DBA7A8AE3C9738AFF44731B6DB8007749D1B605F397413DF96CBC1E7C80FE52
EE1275B05D19E6DC95D93914B713820CA0517B8C2E43E8716526220CE629452D
507C04521B474F40D8A1DC5BB14E21CA654D970958EECCF947B560471E2B661F
9D677552B91A9CF74F2A195EAEEEDA16C981DBA60EAB988A1C23C7B8940F5D25
68FCC3524F6F89EB6871C1BC5F3C7795791EC9AFABB609F395A7A9484BC96D0B
47751DFC2986440D716CFD5D2E9A57D84846762A320128723810DAD7CE08EB08
5D29AC7925CE02513B4842EB1E9D4875A753BEC3BF97265F7C2DB58B320496C4
4192E544643B9C3417305B2906D26756132ABB51B16AD09C775D6F86C4640222
DC394CB7CAB104F32FF3156173DE48D766399192B5E968035E7DE5E0350A005E
4C5E642AA0C21706A33CCB741E91304FA287688FF87FBAA13C3B3D9E96E3E096
12F99B100345D53EDC134D23DCAB6BD08ABE642223D82A657245105757BE84B5
99C63F2B0325B83BF619817A00CFE9FC5B0A0FDF982B147D2294ABCC25D34DEB
46C4AD0D21BFC3A9A11405B0873D4E91B0F787067554D464306A44A49AF8095E
431F91B8EA995AC6C549CEC434910D8AEAA207BEB7A8B227217A2572029B1D1B
86B55D62ACB72C877AA2E3437B035F7E7ED3A541B6CFD10F1A79C610ADE46912
115330743692D0DA147586A859D490BD6B1BFE492563525B99F0A8D519F3DD43
0BCC3E3E57052444394E46201B34B583A55D565EE540EB9657AC7312FAC9897F
56ED09E02AA857C6FF5F8E402EC24D46F92C99498946CAB6DED8F5DF0540063E
98DF31F529B5CCE7E07337D8C589AD71BD8F24699F277E4547CE7E8B4444F14C
80FCC7FA5791A50EDE1850046FB56C0E793DADEE301792A7EF4CE1047C153C87
C51A4B39BAD23DA4DC7FC3B4C147A3CA6B939B4B19E81AB5B11C7C817FDF26B9
5211DDA7C94F44637ED9DB8797D2DF5E6D7A8CDD807B3CE00CC05F6CA1D87A1C
83530D8C784A1FC3204748B39BBE76D32933BFB3185C3972FFB69493300C455A
EEB30CDD6E6108747FD778A0042C6E3B4244948F1B06A1B8A026B3CA477D4CC6
12D0DC8CFFB2DCBC8B1A8430F7C7563E306B853097B47852B119B42F57BA9A8D
93E92CCC167DB36D72585E112E6E8CBD8C816E92F88027568E1C088F279AFE03
1CE20930C273EA5AD065F5AFDBCE03E88F208A05B41A2507A6E6908560B2236D
329FABA01826377C35067A7C6785ECE0C669C03CB875F999FE0159797AF521C0
6B9CA7915AC36C9EE0852CFAAF230E92948EEF95C118FA39AE58F8CE7B0D7EEF
59EEF91AC758803D0E4B73F10FFD9EECC0C4A801EEFB0932FD5E0D205C19C8C8
E8A46BCDE4D72920AE03699B75B6ABFCA418241E9B027E28104D22A3702E2B9E
F6D164CB498F4A7ABD9CF59BBDB7B721D7440302D3F5788779FB6154D819C083
EC14CED56021B719D487D49C3D836D47D72E3B76081E2BB65A9799C14504DD4E
19C5D371BE546C3286EE772322BDA67D447EE7C7648F82B339C1351E66B47C85
4C59D6DF7BC4B1B15D32EE1442D960EF520B1C97FA7431055B6BB25DE7DECADD
E32B536BCD546709A5DCC6E9C1C32DC043D28239E5B6F2CCDFEB403080EAADE2
C215DFC548BAAC67797FCB1530DD6EDD1689FD3081EF38C1F9942BFC3262E057
CE26031D846064A6082D5C5ACFEE84BE1DAA388C29ED456ECDE57C81CF06575D
66FD8EEF218CEA7E07BA3FB71E41E67E4889F953706FC8A5069768FE8FB5A0FD
27E00201FFED0EB0C511389EA07B5CF1708760FD26B48D0190E9F3C691BB581A
978506DA0394EFEDB077CBBFC4AC6F6FE7A374
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39829DC8A2ABDFC584BBBC8AB8932CB
FDFB9FB917139ED02FB419CDEAA892CDB606C133DAA908377AA57FA5E2A16FE8
F9DBC207EDEAA72C2F7D4B7B7112BFDD1A5BC950F254FD477654C63037748411
037887C4B65D8E1DBFD8BC7F2661AC6E39CB510EDF4CCABC332ED1A5E5FD49AB
7955B7A0C9770887DA7B5A123239565BB1D04FA90E615D06A805EF2EA704243F
B382621C073D18FEC9D5FFE44F8C791C47B490C8E3D8B586D529D30A9E40FF7B
C1C8059928ABE24544F41569DAEB26F1186A550FAC789DC46BAEA1D028891BCE
072BC4077D5280C8337FA283BB4340DDEBC4D256E13F78F42DDED30EC42990D2
D7674A62EACD13CBBB381247F44161A0539A035AE3749991DEA439FBF139A16A
553429E039046EFE39B6B9B33D252B140142EE927CE5E607C1F2BC03785EE94A
E63B97F0E34213A1B0A55054B02E9C5BCE6B0E9B760FAC62828B9B2C3BAC419B
073E6FCA10420F989127A04BDE01D71D3C32869196A7C486DD1CCB62FEC5AE72
4457E9628C077A0C7218B75BD86AE495A872463510543EFFE5DD50FFC2FCDAB7
133032D62176E87C9CE253A193BFAD2575B7B23BF4B47D1997E6DC26B83665DB
71ADF03DB565CB3278F5B72C3E42823F4F7EDDA13852C3D2523C98C6613FBB7C
5DFB870023C31C1FD013E274504CF62EE88454734AE583D443130A9533C9769D
375E5A0DFE646D603F49A26F9E5F210B120CA7EE5A3EFD38C40BC343C18EE38A
6E5EC1E16F206873FFBAFA03266BF0D28259D561A56EA1DEFC0D6891AFA3D1E6
DE83FBFEE99829CAAAF9FE809C13BE788C42E74A8A162BD9BB26137253BA8B58
1941E759A7CA7AC42EE55AE3ACF0B696E4444DE0BB3491FE84A6315E3725A28A
20C7E32793E2DDA8ED6D90F8041298B7A4C1E2A2D16FF35C3D8F5FD37B1D5760
3AF1ADAD3760CFBDD46FADABA26B5433D34C2AEB076031841EA0296AC711128C
794F77BD223CF144C0FDBF1576BC1C20D6A4CA7FF78D906699CB9C2B43FD2042
ABADEB88D3FB46627EADDC9F2827BAC12E0E45B310AD8C11FEB1DE5440585524
AD00C04BA139245E95B76F3695B0BE5FEDE9A0B810C0D8253B244EE74C47F8B2
0547A2ADFAA6E40432CB09DCCF5C286D5EB04E5A7D952E7167268B30DF26FC38
1D8D871D0D96566F0E4910D1712E7151AFFBF5AB2C8A5AF1CB6DBF0B027ADD1C
2409375ADE1F82292CA07F3948B726E9D3DC6F3AA19E84CDD50D789E56263362
340FBA8CA49B9AD210E2B4D77B4553E8ABE6A6FBD131E1691F749DEBB18A5B5B
90DC695349522715A6B6AF951007027352BC7C9612CFC105C8BDDBDDC8BAD0B8
7F3BA50D36D20926718FD37D86663C2F134BB4B5EEA3039CCD3F02DB45E13804
E3B7B4E4EE45019BA6FF7DF40D9FE58108584C65DAC1D387D9CF2FB4A626EA3E
546717AE6E23981338327681221810546F0009F98531353C9A8EBFE7DB9C9A1F
83F6E3CC814D6844FF1A23AB32B521C1A09010973B310CD03A0ADA22C6863683
473B13FECAED39B923980E1691F99CB068EC99B0F5292E5450773EE1769530D9
051181315AEF884EABB76C5B134E7E0185E7D5929C128293EEFA925E555E77E7
2F0216B34D71875B4FED0EE2874DF99ADFD2E19382CC90DFFB25E67F6FB762DC
D3C3A8C76F4F6F7298116E7FF68A8348389D3052344BC6AD77FA9B4CA05CEA57
E184293362DFBD0B5D90A7909896CBD0A038B6BA98B6078C9FCA1556AEB8E16D
CEE96FF74BE92989C382E8FAC254F543E8D3E7146C9A0600F9A0BE530EDDD8A9
01220A971045A9A8FC9239809D764B6036E658222897A77DC3394593C5B714D1
EF72E72786BDDE985D872823D8DDFFCCCF5ACABF850C801E14FB8153C749EF79
3EE03A1199D0A9EF4C5D26725C6A658DECFF150A9D0FD7AB1F56F507EB972BCF
356EDF826023098738D40D1E2F1976A39CB1DAEB62F9F7729E6E985765D126CB
E7FE55D3E2DFC75C0F145FBECF6A2D130D4840A799889CB9DCCD3FC716139294
FDE93AA5F2D8120ECA4E117C31227384B1C5B443F68FF78E4CACACDB36B7C4BC
FD26A7241379C2955D9BA1921169B16ABD7E4852648FEB205E020B27F5307E54
B6F4A4858CEF9F21FE9A561AF418FD9D6B8576F8DCC579206AA9F21A1C50D38B
556542BD5BC0BB3EBCE2E7C56E180C73756CCDAEAF24840E6C6A01AF6C1A517F
86D2C6190AFE9B31BC89297D17D4564C28040B982EBF82D0914F7C33F549D305
58B5E8ED6D88D23E7530C2BB5B2FADC5B34ADE0644C0F54B03AD9E14CF669C7B
38CB2D16EE53FCC59444A3FDDB80E6632FCB86E990AD1C8A0331513E0B6F2A90
442F6791C4741A0ED35AF47FF40F2DA0B75EA8C8FB72576304008495771DFFCF
89E918F1702F5867DF3636C4F5C221A18AC30E1CC4C35114DEE607734D0910C3
0DE2682CCCDB283F082A7EC77AB52B21BA9B8D4A0B9D7C5926D1B554B27D7667
FB385C61FFD25725C9AC23F19267358C01277ACD2BDFFDF6C33B5F6934EB0309
218D450C2B313029FCE2CF0251EE1C689CA70589839EADD20F9A8937CF51FB16
F1C47539D72BA1C4B1D25AD3B03234E859CC8B2A72266D6DADFFBBD1D06ABF2A
905EA2C1A854E05F9811643264D84794B53E78FFB7A45A990CF0F174511A28A2
99E8106180DFCDA1E7CC4ADA95093D064B0E6917561D7DD13F68F7BD1366A3E9
9D1D6124A3B4D95382B4EAE5B353BC6D9643E64B8A3796A3043842D5E8D3C026
93DEB59FAEB3A14C1547C6C46C24FF3513EBC971E0EE222D4B369FC3919EE24B
8CB02E12CFFC2AF1BD142036C87B6AEB753E58DE961F654E12385D1EC21D1A91
A03C2377D779DA1F0DE6FC09910A13B23860D75CE377E967E216D0BFDFD8EFF9
C41FA280CD6F62F72BACC9B4FDDAD562E249FC2F1392F7F378BB1754A2E80DE0
D9F16599E907FE5C491EDD336C6F661DD25A5D56725C7732CC830280F33CF486
D55618FE6BBBBA1457A7B9AB98F76F6A94470FC8ABFD342B6906A5399825EC88
4CFCAF1811F2A2BA4CD7BF56A6A10DEC60C98145A281C544F8B842C9265E8ADF
DB8B4CA7CD4E69E70AB0073D6C92F19F6E0A1170816ED400EFD373D263AA62AC
5F6B517959F2F94382E4302DB3EDE6A964FBB99F8AF170A5FD7DC048F85C0B2D
2810B26906E9E6BCA2757CC7FCAEC0C164C6A5D0E6D1814CCB0EA56FF036A434
FAC6E77F6A0B96C34D21C73BF7B55D769E02B6E09BD7F56D0235ED49576AF71B
A6A38E10F51F646E6A282516B7800BA8ECBE1A671D3C420526F9A0BB461B4C6C
0582F6DF048C0037592A5AFDBEB9631776656663828AF4AFADF09D8FCC074085
D3EC4901E6A1582683A09AFA8562972C5181D180B9BD26EDD6D2075A3EF22C10
8F4E44649AF6BBFBFA1E09D6B8C8131539566D7BC863F004227E862427E6DBDD
DBBE101270D15AA6590DA4E9FFFDE23B9AFBDC82C3C8FC7641CD8C4B451A4376
6C89DEE2E639514CB1CF6E1FD870D2A628392368D68C28ED60CDCE0CD13F54F0
F6F9BCF0DC2BA3169B38137F026528F5A2C526F147B5A3E7FB5A2572B1FEE2E0
E999C6052FB2F4C661672919A4E35223FA2937BB5AA042CC8FC0A8317E7AE5CD
3390D061C2FDBFDA95B4D949450224B287FF05556CDD7FAF7FDE2799170E21B5
9E05661E646D8173A5BE71EBC504A63CCB5FFC3569911E100A036EF590EE09FF
D84314D9394E0E227D1243257B02B8CAFF2AC2FB7868A7FC61E6AD2CFB6EB203
E65CC1462B7C3E811E4FBF589BFD5C15D966FC84C490B04B0CA0A969E41E3F04
FA629E2B6649661FBA1C1C0B922F821C28ECD4340F6C8EBEF4BD16060B9389A7
211AD7173A71ECACCF4E002223D1B4ACAB454C6CB74F0B3E87512A6237605D7B
E1D821C6FC022FE1731DEC1CD1E149C6D8FE899D287AC34EA039D94933409D49
1DB422E2CF38247F553154D22FEF718ECDBFD7503A0750027042AE2827F172AC
4C6B37FEF23A47B5A4038752E723288E6C559819F448337E748995A74E9D3DE6
0DE90966B9A2828946DE70F22F8738FE52A7252C221F88F1846293F4F56DE1F8
963CADC84DA9CE87D81D4F2306F0F4CD8882D55D5723D5E5514CA68BB67B6D0D
AD8CC299A8CB22ACF60A9294E3D854243B2D272CF5C16F0AAD1815A417E04377
715BD2CDC00635411C8F8802574F7C72914BBE9E892BE746547E35CDF1465C24
9CAB870818FA5CC7B9DE5158ABBD215534DDD10D943833A0D213E955D2550A1E
22227BE15D33B938FCFE2DE44EF169F237FF87C2D340EBF5AC170988E763C2B1
A931953CB0EDF31C3D1675995DB61CE89F8184AD68C29359BA34A76C8D0D5425
759623A9EC97CF7C183FA6844ADA6C3E83A31369277E9FD612C7762E866A6E4C
83D0AD28B58A619844BAE8B3FD4009BAC6562AB8309895AA3F6C1D805FE2200A
5873FDADBBE53F14CDB6F5079C10E2B962DC71B1F613DBD74DE4AB848D5C8A52
8C92C8225AD84F80F8239798DB5F75ED2150480DD677F5CCF1CEEE6350FC773B
D1D3D9675E23EBEE3478352EAA05DEC5A67729BDEBEEF0934AD0C63700B4526A
98631477A19FE5E16BC289EDC69939DA7ABB6B1C7AAA577848C5DA4B9D780DBB
3C1094338DABEB6D84A0136B85A552A80AE3E6451C0622AB8ACC2E93B1551E75
0DB24390D7F0804F28A5DD4C3263B5D810DE8F57625819D86D7AE834D7135E30
F2EC0C63B8163B3830C989DF40F9ED122BE1D03D9328B13965334076DFF12DE7
2E6B99AC66A919321FFC39B4523710B82E0E27702BF83306A0C3A89D9AD2A517
E03614C70620FA526840EF5367946F3DF67C10B47377A99EB966610A4FB421D0
79F3741B296A58F0D5B4E47DECF583B5CE7F92D2E6F78D08128C27B99705F112
76660C3F6ECD18CC7FE20FBBC297B1935A3A5DE94E8681FC68428328474213B4
FC74A1DBA9ADC2B4D6E38CC1F7D36D1F00FE8D7D3382959C18A903DF75F4A3D5
762C29295E43142D4CF17763694941FB4E2282F97FEA50082B956F1457E54212
907A0811E8EC4075D24EB0682E7602CC252BAF075A9F4234B7ACFF3C578C6363
014E8C987DEC8B3BFACE967FE85F6072058BE81ADADF5A3B4F927CABF282C205
B89E4132E2BF7FE56CF6503EAC88E8B4F4DCE65152443D05B3E0C76AEFB69565
A7B7347B45770125B5D86C68E6B62A581199E65B1D8E5F59136D8FED9BEF89C3
950435FCA4597AD76B6A7DCFF860C3CAA881B9D885A0C0FB5580832196D27869
EE01D169FC58F743CD16C8F0A690993F8C15A7E232176C51FAE62F81C3D8E55A
F010FCF92C891528A4FF537B0B85B7EB377EE389508C28BA77CFAF4745DDEC90
7CE0F42652CD47E05FC7565793E8665E1581310C8DB07D33E27B3BA7CDD616DD
17877C265E77F708D49AA47248A9C2193D8003DECEF9D76FDAA33B1AA9CEDCB2
1C2A3B0EA503661B25AB58E9494F503B4CB5024B73C130A7853A78B912859424
AF93DB66C9EE07FCAD6181F82F434EDF6558B665507B45B50783C0B7F2B149EB
C1EBB02C3344ECF1D538637FEE65804AD9F47FD5D09FE551F142955862BFBD26
9418B1FAEF148615D78265BF0E0150053C6C3A56561C360675567594570C1D1E
194D5602761EF93D1D7DD752928AEEA1E61BC9AE1093546EED14DFE8D5981F69
68FE648FF1F57DAC9EFBDAA60B1ACC4627E104C1456DEDE5E0FC00A2509E14D9
A5BE53CBFDE07B162D1D4FFD4692CD8E915D11A05CE124A4E833606410FDAF95
8DE213EA8230F0AF49C0A222FFE340112C6C063B2F9FF0F89043CD9EF07F9D95
7AB251D62164BA463DC07140EE243E46D03CF4D270C2C6037CC365F8B761A852
76F43C8598A66A0CF1DBB35482658BB9D32B03BE83E191E0A86BDB4F825D18AC
DF7E2D344284A17DEBA187C8407C106556254A8A71F70C8CF982666287346459
4EBF58A0B38A156331EEAA0D0BC5EC0005DCBA60B400B92DF30A2BC7B06C5679
A64DB5E1CE4FC658B8D7EDBF8D085F082F84A35063986A42B547E01DD15A5BF8
28FA3BA2E3A39502476ADBAE3D9D97B7EDEC61DF2CB89CCCC1B5422E7D2C8513
35C54AC440688818B0C3E73DF25106052700653849C02805E1C56025C68ABF9E
AE16CD83AA19B621749E3F10736FACA7F6BE9694300841AF0F3A67E1E6093BE6
DCB400BDF8C5B29E4D360972EEC0BAA7EBC8A05043E18E63517FB66E333A25A8
7D78EFF8A0D27FEF34B60223FC6170F5DD66C147D970AE464E0B88E5C5DEF5D0
A094FDD4FD1E74329214194BAF79410A422B9831F443C48DD0E5B0B2C42BBE59
56B65C153CC87BA98F5A41853CD3C9EA826C974B4D03A117E323C2C363E3D499
F3DC7411DCE3D20E2E9F6703EC79CF77DB7551ED76B595C1196354909804319F
1E312A10647ADF120FA59E478203E2CD1905166090BD81AD58D32A8D5B964914
1BBE104795D5D90AA454C1E99D802D4E1BA24A0313720ACE3287858A257253A7
06922273FAA2134FD48A8C8480D9137F359E6287C5369650A067B1DB74E017C6
F5DEEE483B14BACDAC64B0FE4B4360CD59EE645307338EDF702D160C3450D2ED
6030CFB7DBF6C4238A71C1F3516BA88CCCE79B5D6979221828FE4A8B71B870C2
E63B999B650BD6760B31870D69C4C15EEA09E1831354F7C4A16212A067BDF0ED
84C9A5735368A09CE46A5C17CCAC557BB69FD42494D5D2B9C1ED812F3CCEEC1B
C079E837DCF4EB4E495547C25D2893E35E24435F55A2D66CE9FDEC1A5F81FA21
9E49C2F4D2C8EC80D9E187F9E15825F57826DDB17A35CF2E4C380E50E1797F85
5826EAB926A051DDBBD93F907D31D6709284C86F0542486710BCF518C1B5D1E6
CF23E0D97980F20EFD24A6644AA26EBAF342B36AEFAAAC0AB3727E59F1642789
A1765F02944B8E689BF03404F5426F7148BB8FA709AF1344271173529372AF6D
A383511770EAC39ED55DADB32778CAE943CE6E928C9521FE45A04F184800733B
13440F514AF796BCDD85974E0AEC9A164C369C237DD28FC4BE2843036E872B2A
03163F0CAD1BCD5F7FBC20299D5C6FC1EDDFCE777B796FAD72EEA5713D78F437
DAE50160FAC28C1C21FCF83DE1B5516CB04C7CABC1D37D26ECC85EC180EB8EED
1A6E85129293842B429B1AFB33D68BC88143F92B5D64DA3F8DBFB0D329C7450A
21E4F97C8FF528ADC2F97F87C592935C07955C1F1B0F125261DA0D2F7312CE5B
3F3A1DF65DD60AA679945BCA6A71E4329DB73E7F29098787D96D89D74796C690
8AEFCAFC2C9DDFDD855116AFD66EA16F96AA4B9F040771F86CE98994E113749F
2047C28A0906100EF57663A483AA7375C850A31668037014979D53F051CBE5D2
46FC0CAC7850013FB3F1B075D4754A82A584DF54EDC7C8DB59B77CB7A8592B7C
FA7D097BB4BF8EECC6634A8112ED925C55E4B0DF0E5BEE4B29E5DA8177D46930
E3E90AEA7B324350D5926BF3AAB7CF462B8C46CCC43F2AAB8ABEDEF76AD7F14C
B416CC957E016A4C72A6A2FC3DA24AF084E7544D8A76154942ACCED03A7785D8
8FEE716F2A7D77A990393CA5CBCA996BE2E5186292AE634456B42FD60FD32FA1
999CB88E28F3F2CF4279B8F78704EDE708D0273EC0988A9F5E686E3579298F89
116461454217CB82BA0F84935D4E252045F2E8DA32F2389255B0491056F383EC
19176153A376198EB6A683C5FDF4055A1353F715969AA309C7949989491D8139
792287FAC65EB8AFA03089FB64A4276E5D5B346A7B57F280B011B6C12327592F
8B086ACDB860B1B84DB9BDA587A92DEFCEA2ED44A912B6F9DD0E4282AF3CC8E8
2EE23827FF79F6F5EE718D4A499D90EDC8267492DFC164EF3C32A4A77CEC2EA6
0645ED4604487008618C6D25AC1C98AE71CA49FEFB4DB99E5ED0002957A9E2BB
AFD0DC63B649E80C67BA35C6FAFBFD9818C21E96827534175EA4D23CEE23A92C
79920EE5FA94A734A30DACA484EB4BA47235C7751E074BB831F91F7CC5FE7EFC
FFF578C1F952B11F7BF097E4599421048329FB29BAE351A07AFD9B7B5E0AE4DE
1B9AFE745FDD97A8AB335A47E3505ABAAD48479E200D0CF4B7C375321C5B5410
02722DAF3AE4D0FF41AA2DEED29B985455F21E95225D7DA4780BE758897B424A
A89CC62667BD404A07E1BA0B051AD3EE2DEB7BBC29ED2361F11621E0685107E8
F6B2C78F8C9B34FD5A5233C20F9EF9B7CB7F1D174B2E94953F541C3B84D430DD
D2BC5993A39A3AE751C54B3F34E026863F790FE3B5B1EA3A9CA1A4FD2C9CF6C8
98EE6510A2EC593B475F955861C04DD60F4A12976872F59B63BFA4451E0260FE
F3CFE6AC43831BF1E02C91C149EB32F78815880D3BFD8A9A7B82BD519B639D87
A4B103CA5AA04FEDEFDF24B58001909B7B03761FF2070A016898F440E5A3CFDD
A5A71F8DB20E14DC06904F0682085D477B14256AEADF217F5E4092D1D03ACD2F
ADCF124AA3F70B7ADBB35E0F1641F668817E64481B4479C7387C9A87184F081B
E4FC920915ADD1CAF234CCEE71ACB00E7ECFAAEA1E34B8938673AA6D760A80C3
8EFAE4126FA999515FAE8AB259EB719E1F850331D50EF2E7C281D5DAA5779A9C
F33B4FC3A6252B39AAAF7045B8A0E597F173CDFC07B7FEA769AD6DB847C5FFBF
83A9135CC1969E4FDAD466B82F3F53CE916B65496DF9FE3E1C4CA1744862A1AD
FB56116FFB38C388F96143BA870537CC8B3E5840C5373BDEEA5E6B5F5897445B
471395DF6F39D245EBFB3C3A3F46401469C834216DF6E346AA93E42035387776
F07CA200B432D886A12EF6332152F0E30D38E2B0F3A28CBC3D2799234B4CA0D0
9D1FD373A0A1698FF3E493180CAA3D8DC20F6C6B95C0CA73AA6E6C1BAFA50300
B396D5EA82C272AF1CDEBFD659E89F2DCC71AC39F4869854AB585F1CFAF1E6F7
EBF70A7BFBD098994ECF216FF82A32EE1D2D26278D146F968614587DBBFC546E
899C896EE487BB2F45F6465F5186BF3C603D347C7DE7F9C6FBFF55F68920F678
B5C4584A1EAB39443FB4126192FE52BFD98E7284386F6082C2362E4CCF3E66EC
C33C744626BC9BE7912CD3F2EAB2010152363BF9CE7D96355721BCAD238C148C
2FC26E7F7C2F368DC2FBB2303E5FC195A24A473BC0C120073E96DD4AE86F0222
60FCFE119FD46170F7A6E1CE59D2E0E0A1A24075AA9F2EB2A871F588D26F5857
0B17EFF49A79EEE4953A33DB4595E959F4D0FB1F2210C9C4926575BB9B8CF2C3
9F8898FD8122998475FA12DD92F0686CAF993FDCE0113E5C9A994CF761789725
219ECDF1387960FB843E1A31E4F20296F2B4608AAD4DCD0F1EA0E1A5E0185A71
AEA8FE63A64949A7BD674FD5BD5B80B51EEB416941DF533537B33C794385AC24
25D8AF01C9A84A76F6A2812AF0DEB6AAA7984479B2CDD0F72435D5DC734AE3AC
5EEE6658D792EB62131E1DFBA0143F6584ACE94087B06C61D5FBECBF2AB8B276
9C12E223E6E90BDE98DA5E4D2BC78ED4EBA41C83C1D5DA810B4DBC7E6882D804
A6EEA79B7034C1128484ADB7FA4120139ADC25F4943B0272AC32A384E2225C7D
16114E1380D28A0E317930DFA18ADFB81C8EB75B0BFB3A2D301EF97188C83BBE
06422D1C075D8455E3D5C3ADA2C37166118FD7FE3E55C525FD30BBC70CE036E5
186A0F8B4DD788A8A5E82231873F15E4EA92B37F9045EB711B4939EBC2D2766F
2BFE4CEB6EC3DC2047E83B6CEB8E578476FA69515A558FEE5CC4220F3EAC70DB
16034416FCE7C04A3F221CE2917C8DFF1A287DA34EBD4AC57F55BD24CFA4DD6F
1C598F5E312DB3A0237D88483418CF7B8F43A76953A52BB76606EF122451DD23
80303854FC141326A5EA693E67035FE4CA3A87DADFAB3665957769CCA3FD911D
0EACF01F8F2DA6B617473941A1ED19DF2F6C55C06788274FBDE910DA5459627D
2B60C7A3E39A4C63D2D2200714748D73933541E1D4FC806643893A641C49948F
BA78BBE98888C044D049E9EDA646051AF86E03D22C944CF66D44167BA9B47ADD
AB87D35514B4C0829316E7B9879BDEA92491C3E9A1771E30988479F2DCCC53E7
22341BD44F152E70ED2F6229EBB4FD0CDA78C655E71003C12938AE4AE4FF2B32
BE0179DEBACAC5A6DFD51F6B504785768072670DFEAAD917E7F290E617903792
223A2AA23AE7069324FC0900215EC34D0BDA6BDD5326FE66ECCCCC22E846B31C
9A95C15573DC6DD4AF01750636932A81F9283FC18EAC5CFCE312865B20C7D9B0
ACA5FC06EEB85412A31793F4901504778CC6CAD142D172F4DAEC7BE571C0316F
D703C8994A078ABD9F42C5727A1DDD62734BC085900AD3D94ADD48BCAF67335C
61B7F2B2B654C70F5370E0F283C5F6D8FE4194FEB6C80B02CB53E12CE148077D
A9CF66C2CB7205435589588FBD166C47CD29BEC5AA33AD7997975E55E8D643E8
CE7C64CECA3ED61B87EECFBD108777FA201302382872B3C31E86FACB377A7425
8F2A8E531C9BCB80C73C09D36274C91F1149C89024DA3E3E029829204D8D0EC8
AB2AB23D244FDBEDE098610F35EA16B43A4345768F4A78E26D7BF1AC08BDBB83
51C7F5C1C71BC9DA714AD9D987DEA45368072750CAD0C9ABC3F493E7AFE9B6A3
4480102661BF79A0F1C27F54D9D00AEDB42F8B4FBAEF47BE3700BA5638E8E3F4
588E2F1A25D33A9BBDE199F59281F5D884990D92861BA0BEA5DA5691623BE6EC
A43ECEEA7A16305AA88B0B054DF589080FAE039A43F3F8F92DA0B1B3A34E9BB9
BCAE0E89082ED18574A4040BD574848C85BCB7F3D74FE0BAABA30A31E9D2391B
9A7A33D1EE6F74FFBDD658513660C7E94D13D9E8F2E6488F77AFC2022271FE62
05D65C1785F299C80FDAF4DFCEBDD5F0AAB6C7A4A26946E9BD79B50A9825D71A
ECD9ADB7F83DBD4E4A9038636256EABAF8BAFA31DA0FF51CFCF240C9426E90F5
7925E6B90462A69B5B7B8D3A9D26CA51B4AA746B4C7A1B45353771645C01C2E1
A15A828876AE44172D12B6548A0EF59C6710A1C0E5BB406AC3B70E31BD7F2AA1
DE45FC978490BB69153DA6D6161F780955AF7684E8E036205B149DA99B2CD2F3
37147B5D3CD3DD8B61E413EDA36A71E7B6110CAFAC612E3E67F97829442F2792
469D4BC8FF30DF62EC6EF7FF5542CE8F9D77861B9D9865887D4EF8AA7AE6AB23
4B252A506EA2E9F52B3E14091FB92373C71F3F9B1649C5F3C80FF3CBC2A48577
F7D6244DF68CE4F1453DC12F039BD581D96BB0EAAED9811D78900B7D347046FF
9C2A9DA7AEE1F42E31821301E1EE4498B7F8AEBF68A600694C245667C46D55AC
C5E661EAD3B9310B9F706A8642CD6EBCB1ED62EB02DEC90FEFFEE1167C08592B
4FCCE767F408BF16665982C60A01EBEA544FAFC0C3726112DAD8BEBC692D09C8
962E6336524AA186982F47DA47525569C373B4B066BA7550F36BBCBCAB0832EF
073E3505C3EBA20AC324DEB563EDECDFF165186D73C5275BC9638D8A733D3E59
05EB61E617ACBDA9EADBAD6D7267995C72ACC0658E69A52A687AF7512BB3B786
2EAE8E10393D1987095FCA5160EB00DC4CD02ACCBFEA0148283EAD2E621FD650
A01D433803D9B92ECAC588F37BDF9FEAB7F85B65DA6E204268BC4836203368F8
CA936A6B93DE729493EDC6FFEE039CDB84E845A8770A4C835ED0BE381CA8423F
9E792CB7C220CC5E259ABC3A605343DF722DCBF1C27AB8A8026A725FAD7DA0D2
6FB26AF884F5A45A2CA827AA2574D36EF0070C12D4051181315AEF884EABB76C
5B134E7E0185E7D59F10109E66AB7D8607B409619E79F242CF52E618AC0DAB36
F1AD1ACC1A2DACB18A8108B8CBCB5FDBD2B0B197103677068AEDF0FFEB7DD80B
2AF0AD023ECB8F8B6686EAB4B5BD269418B1FAEF148615D78265BF0E0150053C
6A5E05428D1D8869EFE48A460C0BFB2499E7ECE43FA2DF23F5AB99E8207FFDAB
C084BCDFC2A202F15B5E590EE6A839241CB9D6C81C4D965F85EA14F4839C4D3A
DAFAD20C044C2D37475078B1996A964DD7A632B0741C67B0A3817944CD7D9208
74B55A2F393F513C09D57D1775AAC8BB31EBE17799381128AAAE1918D55FD463
E2B69CE5BF2824D3ABDBC8CD3907AD5C96F7A59C33C614D69D0A6D59F1DD017E
CAE805053934F6E9925B45CD4B58AF33AED937DFE6F45BD57DB169FD3568C8E0
44865DE7308E8CB715210B2B158F31ADAC46B63CC00BEED35638A2E810526D8A
808785ED46B2205D9BCAEA85DAF9DFB14F50FB8C69329FABA01826377C35067A
7C6785ECE0C669C03E153A4EBF29885A69D8D51B47E08C814B5A0C25055F21BC
987CB81EB2374992009A28B699901B1A6F7C9D6983B84AC3FE03C7D9738E03D9
B5DE922234C3AB8B2DCC9CE13D342C005EB85B3EF2E1DDAA2510837ABA7A29AB
1F41A53252996621248D67285AC42033D55934F684959BCEF1C1557DC315AC89
1C390C8A1733C2DE844A1F915F759C3241F8F05D06EF7BE0D60FD996223903C9
A02FB6AD5ECAFA473DD7934595BD999C3A31DA2377FC5BF66519A2614BC64F3F
70591B8E9107DAECC5D0D48796C482AFEF0DA821EEC30457B3DAE010CAE9BB7A
8372FF751F87EAE5062D720A8E05B319FE16FE42ACC4F8B1F8FB794B1427B753
DEDB0BBB7D3F03768BAF8691733BF48669EAAF6636EFC35F225CC49082CF4988
547E3A45A4DA0B6F71FAF2B50A51B1A4E64F58210DECF59C716CCB290C2E90BD
2EFE727F36708ECD6D4CA39743D90725B633A6427DDCC5357E6ADF9AD8C35E6A
43B6823C4E3D2E01A5823F4109D6F3AB7D037E509C5DA4A954235A57F0F59821
5453B7617187C50EE0D0D7941F0841112068656197F48BD92E7074356E75788B
2AC966CF6AF6E8408A0C0E629ED62843999D71C5599F89C29824458186DF6558
A2EDF7968D2279C49A48C6301E226CFE1D3E3239CADEC7AC9EE760683E6CCC89
ACF2A120155637A9CDA2CC27863CA4608768C3033D0A0FB4B6D89FF0F0727643
4B5F901764534E0C331CAAD340B7375427190D9ED5D06C044CA6A69082FAC33D
B46457E63CB27220DC0FC981DCCB6055431D45D2F5BD0ED0868159FDFB3820D0
2F460E2C2908866FA2E226B8B932A195CC0EEFA8E39744C2315DFB5DFEE5EDAA
BB95B187A4643893395C4BB175F1BBD9420D89CE673D94DD4A12913ECF9F9DED
12CA0A3B389CE4D11651D41BEA93204E6AD3AADA6F2415A8BCD5C987B3D0BF49
BC7317AC222D65C592DE9810EC5627944F56F5F677A11134812A55A8E3C9062E
52A6DC77BA1872B605A7C332BD31F29F0681E5783F91AF0CC0EA7062B322BD64
708D79386D23C7203BF068D8A609184ABEC0D139E6BB4782A39CB410107BBCBE
4B5F3F8CF3C20A8E023AE8FC0941C9D59948E7D6E5669C0EC13FA59846364CD8
ECFEFD10DD5B870EBA459DCD04A9B13E4174F27F5AC1B43D39C5EC2CDDA3AC6C
0C12D644B9FB989674111A603479F6DD017ECAE805053934F6E9925B45CD4B58
AF33AEDE266E96BC1C1E95DEC7CD47FC235E96D3BB3D354DEAF0698756826B77
86F35D21E3098DC9CF8BBE54D707A91693BC653F199BD875EF9720D177DF67BD
2772725632EA397689FA12A11F62529180060272B7EDC9492C1FD86683CB3404
20EAD844C7E336A2E47224D29972E8478491DDFCBFA8C93131565B1EEC7EEA0D
39805B15434A042322AE2678F0058AECF8482A8F9FCD33BC5F0C3D63ADE8B22B
6BC3946C4099D1340D27C4479C144AFDC37E46262412D7A68B20551C36E556EE
217DEE75884EF4B9C3F7DC4264C1B79D2B64DD10291FE16F35C17D22DB84BF21
B7BE4AF7B655ED7915395A1A52DDD8F6C69AD7377D0D0D93A5B74FF64283F15E
AA51DF4C74CBB662283EA4AFC4FD65AB2CF6A54F79BDB9DB56F26CFB3E6591E5
D4523B34FD5F89F09B25F78633F8D269EB8BF7FB2277C0345EAD89BA80630FFE
3EBAD70FD8F2302B44FA2589D828A92DDB65A8FC8069D4D1F6A44841B901C028
00247CF24DAA4D13204E6203B8537D4D7B517D5067DE39B7815EE477F25004E7
BBF5D14982D974DF682AC54E1C4168637245209973E0142B0C866367FD92E407
301632F4E255B42E7A1E745CB4426C0B58421A76F7F4C0C7733A693FDB345784
23B70ED44AC6EFE221ADB5E725ABE897F5DA14A9A21324819CE85AD51C124ECB
B70A98762196BE6CDF6D10F12F7D242B1D2696B3210D7958A6DCD6B2649C8B55
4E9AB17DA441ED1B5D4570C6FD0EBA5186024917D7B6BCFE8C34B51B8C7CD6DF
99A42DA93EAA12D1F4748D1D2F9BD791BCBAB91CD2321CBAB3556384BEEBFF5D
6283F5650C1F50AE77E07B4AA62DC12E2EF7FD3367ABFFB41881EE1DDC63DE5E
4112C883DDDA45384686DB6C60C874B049DF0D965F5BDEDA309D0E206EB9CC30
071BBC459B253E1BB5DC77C9FAE352BB36AAD99D7DFB0698703FA630FF313B8F
DFA2C4852321C54E81E7A9C13E431DA7BB6B59B0CFEA0E0036FC3CD9E2FA512E
3CDF862EFF46EB7DE76BE0D3026F19A2F1C3406F949869C9CC6AA7EE629D85AB
D5B7B3158D44150D24920910459E66D395F0F61816650594B2AE290FBB54193E
E14EED0642E799113EDBD78AE32E22A895F7B4929DE82CAD9983E5A27B083EC2
88674307A1871F05B6C665CA8B75E16F1C240260CE6BADB55A0B756930FB1F1B
FE8585E59175C8C6FC29401C0F270267AEA0E0B4D917F36024B524B06ADEFACF
2A4926DBDF5D9F5AB9D6653D86E13602598E2A3842157F5D4205FCF589201AC6
B9C0EBA43D2C700A1D58F9692C89E288479664226DBB6F1171F9EEBC7E1273D5
3C19FD8546B731F3B29979ED65F824B69D3AF49FA82FB2E8E817A3DD0E913C71
101E7B258D132B6944688C665BFC943063181606BFD3850402C3206EF978460B
CF3203E47C2BBCB2C1716893BE0D75674C6C7B64F4F66B0365FB8E22B4188A4E
A0EAC7A081068847EB01465088D87138338804C283CE2B2C6B69DDBE8D6E9335
A6AF38812F26A1A486116CD9258DBD6524B9800BE929BB4C72B39352D31114C8
AA3078D1B6F429C51EF5E604C1FAEFB04B0461DA82FC026639CE00ED9FD3A6D2
DE6260F4B0C4032A9800E5888A245527E79C94D2B2371CB90DC223E0D97980F2
0EFDB8A43014EB8362B35A7D4C1A911ECA4B7BDE568F1E7188DFDAF99BE1D713
5964826EE343BDB3D3B4E262AF6319204767AD5F6ADCDF4F3F45D05D2FBEAB3D
F97E41E575D8E694BD7316E861B3A4F1BAAD32654A8BD354DDD1A86097DDC078
C72D2BCA3A936A294B410B70E9F4C72E4AC7A14F146A8A1734019A0824DAB908
752E5AAC4A1C1D4585040ADE506AB7EB436AFB1D5A4EDCBF93B35022D9098A71
0D46530B8F3B17B14F61D5378232BFDA81B93CF5618D139605D06B8EF066B8FD
FF0A4DF05E09E365C063768ED394770CF07675657587CB8A56596E72555926BB
3AB4A5A4E1627BAA96569D68D96217269EF7E8FCDDA0AA1D173763E3FC982AD2
E5B7EB0C7E335C08E8E1D2AF4E620B38F0A1B7391572C22E7678CC15499A71BF
22D22356D5FB87DFC040777EE398842B2CED0C083C8A30FCCACF0A5D38570BB6
72BB63BEE8D54ED394FB6842982113C0CE83AE18BFAF9FDA0BCEDF56BA0C1C89
6238662FAE26746448EE247D51ADDD10C6291FCB24936B5E4FC92F446EA47D53
B6CEC3EA726DEC25C9A0A7EE18F2A477E83CB499FE866757A5D9BED21ADFCED8
74A7AC01CDE909E2AE00EC642265B5EF7059BC1063DB3004BFD229E6A1E22554
AF326DDED0D5EFEA80E9604C9580910F67422CAF587F193DBDA3BB69E2682F74
2FCB00E056722F834AE8667F56FE891E4116E0D15B7A64E6929B7C37F665F34A
4A6CD8F80BF030A9E0C7B70018C25342C126FF88CDC2FE120EBF588FECC4A7D1
0193CC8A38AFB5ED8658B055AFBAE56E2FB9FE5C429184F818F3C304BC62697E
E13F28B7C6F76F5E050EE25B0AEA955B7ED2E30077811C49C640C409CD5FAF11
77739126415A79617181B351A03EC3CB9F9CE644C777B29CEC8FF56B5D3E8D37
75052BC6F49A7574142D0F2C04F75DD8C99B028E68B85C1547BD4256134273AD
43832CAEDE6F806EA13CFCE55D3C1661CEF2C0B0A4CD9F89F7193C29F7468102
C4C3EC5AB5309CFB63C8046C59B248845F2A2A14F3A3E486D156E5B46477B740
DDB656250691130C72D8E6DEE984CCDE9FB92FEF1C822B1144A46DAD79043E68
FFB9229EC6DE4ED5A8DA7D9D804EE619D58FDBD331C9F459A557AD41F0DCA7EF
476B65B069DC218126956CA9B66DC23FBDDBB5FC550068466336DCB084771199
CB1637834749038663FE94C57805BA777E94C49753C3EC0EE8DDC954ED20170A
EDC4477D6A77A54FE6CC8C97C02B3275E7CFEE7658F22DDBCC754EE78953512B
F9CBB9188EB2B702847FA6B3CF9B133B5C94D48B9410812D80E62EBFD3FE8F2C
51458999BA14951E65BC3520B4896E08EEAB1DF337F7378751B34655232BDFCB
5911B53F9ECBAD39A0B255FAB407D3AE8CFF77C0C887E205F088A386CB77A060
B529FF519061D19D1AFE2AC64593385012AE5A91462AF79767E97FE4DB2686E9
0AD4E2A0358C8502BCBDF10E7427ED7C134AB29DCECEA53F057535C35ECBADBD
CCE20808A874A3A699AA8174A78B26282497AD43BEE40EE5B99C5E308BA2907B
87C8D1F63A632F5DA0AAA17174A85B86CE443B88C139E9D836997DC96BD3471D
1BF826679CC5F3D317B899588D8901BF92B9CF56160C7ABA20C066BEC19C96DB
1C631D3D4D72D3D600C6F9E38DC1325FD8788E299E9B2BB608B96EE0FDE9B6EB
6B93BFD51F684D6302E64F3C4DDAFD4207DFBC3D846C32C53059265A7954C1F4
0252D9ADC935B91393839C6B39CEAFB6FFEBE6A556CD20AAC23DBD644F0B3F94
722F0A1B4D56F61C5A387FF65A63CF2A927E5F2D7313EA2C5610209DAC0AA585
AD457EB21EA14C919CE9F13C2BFED1652493DD604C0862D035E6AC70E1B1B5F0
2E969ADF6CDE36D67881B02AA46C7BF6E525B3131283597BEBB44794D06605A7
73E33F320E4CF5A9BA5EF0B7D141B731CFCF68E234E609AB4A7A9EAA3C0CF87F
B4D4219D6066994B0CEE8040D4297ED52DE1BADDC491C664E0A2DDC3E7553410
CEBD49CA709355B4AA405BB1ED535FAF4D95420E7D94E9BC461E9884277891B9
231F2830149111A91258DC4B7C64E3174050B7C8FAD56DBEECD756A7BF74CD42
C8A71E60B4CEB938BEA008323340025A9E5B6C7ADB28F6721F959B0265C1ED87
3F5C611FE92E36DA9998476306A967B40514C31F20B610DB77664C0C7FA81311
29705F80816559C22EB86B82EA83400D7EDF7F4B524FCA820A3E85ACB0C2EB35
80818A75F0F09B06A38D51FD985752AE8348F559D6AD28E478FC9E18E64198B8
41D7824E03DE11101493975ECB18E8D8EB4893ACB7DFDCE534023FF4E38A4235
86327557218C6352EA88F4538F64D0A08C138EAEE72D20F59CBEAC9C1F817AE4
8BF7E9B86B137CA8D14ED5380FCCB5CFC3591EB1F10732A74F141D8778EA73BC
1149450499D433AD5AB5629967800C799A446DCCDD17B6C43D5EED0C0FC56F59
D57172F76AAFD4042E2B1424C2AA6B79B17E69B624CFD99A96F2710F8090D606
6E4B4E7DB2585E30D69250EC9A6C3122E84FA4B896823A4C93C91845BBD50A3E
BC1864DA22B491F7ECA1212AEEBEB05B714189981292366F5FA334B3F136E6B1
CBD09075410844CBDECAA960D12995838CFB34935D47F55ACA0006409D1C2983
F1E3EF18481EAF1EFEDA0068BCBDB28A7FC384779F4720DE9195E8559ACAD834
6F7BD9DED0B9584B94CB59CC14E18E553B4297FB8FEF43EC9F59F293550677A9
D0E78C357CFE3565DAF031EE25D893676DE50259BBB7C5843C9C56FF9F371C82
FE3E8666A274B7837405BE52C4BA6A3205AC2EC474398195C8B4556A8BBB0484
E5479C0185280F62DD2CC436E9D88A6B89D36D0DCAEF46172BBA8FCE74076177
D5173F560768B3A8764F0BBD5569C6897CBA116BAFB72AB0EB87071835353368
D811BF1D4BC5C1902A3A3C1935CE66C4007EDE6965BA42DC3A3075C377D3C5C7
267BEFE151C52A60427176D702F302DBE5B9B0965C52B191AE01721D88A03BF5
FAA2C6D75DC207827493FFA2A96BE684835558D9FA31B09CE361FF39E69B1669
2BED62E0FCE274E73E971B1626EDC68FED528F8AE902910DD52BE72FF8E87A9F
3395CA8E873CBBC74E1F95C5612B5C00B8955FC6542B140936FA9750495B6AFD
689BA17028FD35B404F3D5CFDF184A537B5AD4103C9AFF6CADC2E25204A35A50
B3DBD091C7D41BF62F616CC2955417F5F1750179370C188338E3444A6258D65E
E23D0DC4E9B19FA17C58AB61A349999D8483F42261C1EFDED63C33615607D2AD
0E7AEC61C888B8B1BF036B2D21B99911379A3753113844B2DF184189E3C3F6EC
92CAB4C76E76C9ACB795F41C809FF70E148347578054EA42D2D04FF154BED027
CF5CF061EE965DD7631276D51652A77823CAA8C4DFF3B24BA1784C817AB37CB5
2D23205066E2D80EF7C7866BAEC726AF4E55C6BAC0AB21DF14947C8EE7B04B8C
7CB57236D3CF9A79E86CB2013046FA6AC1C4DAC1BFFA6B468A07DB2453D2D0AE
60E4D388FDA2D7F816221CB87E5A80D5C6008961DE49BE819C16AB6B2553C652
9D2E175BF469A0DCCB5D3676DCD0F6A25A8F6EC94EE52C403005290ACA77EB0C
CAE9BAC29780672EA2BCC84F894F31BA9383F375C256306A3E2B5F6EA64A779F
D556341061CA3F2BE8EFA332637AEC878C2F883AA43E22F67FCCE2BC52AB9C9D
BF4EAF2A244A3D88AF70D75CEEA20BAE66C0A862D6B20A5BDAA76D38DD6FEAB9
4F39BDED84D95F26FBF577D14B1AF5B38B3C8FF913260E89AFB7D49A872EDE3D
C1C5C8054E5AFEFE52FB1AAE63CE10984AFD2D7CC221997916964EAC418B9A8B
8EB2AB7A8E25A85A19CB82E31175A7643DA1A0B296D5AB617C938CE44B8D8945
B4C35D9741698E210F462C4BD3D9B4215B3F48BE16A730E9A1E3EE6A8B541D60
19ABC39591932BCB3CE33C17FCFA759A94FD7AC95E93FC68EC79AF7D8D7405BD
A85F2BF3190FFF5B3236F14977546B1D3C5FCA9B20A4540945AFF044845F16B0
2CDF9A1FA95F0203F9260C46BA239EB8D99759F70F23D7148C3D5FEAE0FE2A77
80E502C108546C64F223D5A71B1CD58014D88943777D406411842230BAA17D2F
90D9A06F98BA0C94881EFDE3AAA7EA69DA08C14C413173D7A9A49339355B305A
C6606092C40D437F3DDCFAF43197566DF931B38C1B6DE01DCE214039661FEFE4
192FD104DED5EFBA6FAA42FD34136C4017432A59BDF8158CE8095734D1A21312
7CD3294164720EFECA0479B76282579F37CBF3CEB3E1AE58B631254D52B5831C
BAC38A51568B92CD21C01380AB7CDA310E5B5CA8BCF180271426F6EA7CCC0E74
977CC84366F5AD6B381EC379295DB67EFBC5C328277A45765634F87F8CF0EABC
A87BE3E1B5AD525F13C67EED21789B038FDA027770B6C9E1A39437CC850B1CE7
89D53F048A3329B5FBF6ACB75BEF880128344562102515FAD29B3E1ACDAFB837
23A5AC56BCC6E8078A53B445AC303B1FF6809EBBEBFCD067D74BCB98ACB47E3E
F8BB1A8B3ED0D59B9B8CCF69E9348974ED46769B7422E1DDF25227A0C64F7A34
EE725568BCD9A9B02CA3B78035F6CC60FE9C124E78B19B3160375BB6D9954742
5ACE1706B4763489716826A6C2074A49BD6D39C517DD3A2B26CF6E6F11EA2F34
5629C406F137670FFE852DE1E90FFE9325EB3E9F8552091831DFCF860DDB5218
6D5A3C8B16A8D818E094C9ACC51A54A9E59917F807726B5FA4801C051A614EDD
9117AEA89A2E2972FDE20B044116D6AE1496C4A4B1E9DFBB1A5F53AE561CD9F0
2D816F7465DA8517A67F7FB50EDDEE2C8FEF820FB12D5D3E73DF2756AB6AB85A
6184278D32B64692D88881A6612CDD70EFCC77248DAC4E0D14CBF511921FBE2A
5FA89E2F9F96D45D538AFC935D3B8F1AA66B46EF85ADCD747E9C3949689CD700
7EB8A9B38E1372428594B3DD9475D0C60C9351FE3DEB7BBC05B7B298EA9970B1
70460A702CECF9734D04412ADAF44701718F0AE43962FB6B13C416D00ACCB288
3C2384CE146E963EE5EB69F69FFA98DD4C5A69890997C8243C404AF7E10F76CC
FFABDE964C81EC83D03F502E7DBF202BA558B4EB271C57922BCAB541F14796F1
EDE6041ABA9018A36364CE91AA02E3302DE4E17B87024BB6B520B3FF60907094
B45EDA06B5C435020DD3039902C4D462A8936D00AEB4CF601F6FB7EC09BFE3C9
C35BD1C45D2C5729760D6CD9754919FCEE7160C3A6E57AC0E3AE935BFEBADD04
8836D82142EBF94B85DED9A880AC33D8A53B76828912E7CBE58A8239E547D11E
E23512B195D560F415076B0B8F8AD5C611519C9EE1F87AD6BFAB88ADD731A95D
277F3DD5E1407CF35E098F1CA0469849A108C692B4F44060E1394571392C3B64
8498D6C5D53E26C4F00FF61CE0CBCD216720FB255F6D13DADBE80B344B0BE3D0
370A4CAD2280DBC8F4392C5FF129F09DF8F7116B4E6676D606D19C5CC234B9EC
1CAEC1352EB0865E97288DAF2056BEB470520F2A73510237B819027F6319E633
211B57F804E335F3DC475FE76A44ADA7F253E74C4DC0A2FF698C6619C6A2FA9D
E4334D0517CE0F6B0FE1B351A9D0674E58DF06D4AE6570EE9DA0B697FFFFE5F9
C310A08DBDE8FAD4764E833926C32925658CABE2D0C6D77DE233A6804FE95D80
7D6DB95A1A53B01FFC475722A7928BA4181160906A798C390910578AE30297EA
D2323771F7914E4613130324722C485B61922DC4A068F35B9E7EB17E895A9862
CA1C886497A17CCED52E42690F9808BF40C0FF302E4E863FE2E4B2FEDA920DAB
D2DE584E5AA557D8472935F85E54D7C4E1AB315D335B1A481FE3DB344A5F50DA
95EF3F0F95A3483F34131776C9B68E5403FD61065D26EFEA3434E39F04259D8A
9FF6BA35CF1E1DE68DD7DB418AC5957D5364491987BA74CE27B2C4557D4B04E7
F771105122A7F435EF92678E9659F6B7FE5E0C68D5B2CB4B0A01DF450099DF54
42DD3E19B955F0154DA46F6640F1B0930466D9FB34F20697F3C699FD557D7E3C
DBB0C43BB4DEF74A9C7F88DC8F75DF47CCF6216626AAAFA4DFC47FF9D123C5F3
0EBDAE9B7F9240D271C1B9BACA52194DCABDB42849942567AD61286FBBAA4725
D698612300458A151C340FF92CC8B06B4FDF37FC4C6C7ED97BD15B1763422CB0
86EB2CFFB9B77297F69E0067FDCA793A1E9E31266FDE276F24DB214A7EB7317E
53121418D9CE58CCD3407F0502400ECF76E7D4AED20EB63AEEF38F8BDB6AEC7B
66210137F842A963FDC006DD6544A13A283363FABB71AEB4A1E3ADAF3797C2EE
47AD35BBA52F360E387AA6DBD6AF85E114527A7F3FDF0C07D30FB6436D58753F
6AE969F7261C13069C0B0ABC6B5C2A2B08E8F5AE4C1E037041529C7B50C0149B
514B077E49CE66A190B6B90B72719B3548475EEF562670AEF2CC724BEBCE5172
ACD5C2F5178693B6300F0E2B026D57E5E0A4FB5AC08D4AD96F6E6E2302B507AE
76DC839BE00235A01AAE3227C60983FC758E9C816F7FD4B89ED12762E5687A45
75697A7D0971468CA85631472031F292141F7BEF7E58F7B021A36F6C1228B9B2
F296281350C23CEE1D869C4B89505366ABC22C30EA308E6A5C8EEB5921F493C8
F5B7691CD414C2D072E20D0E000DBE4A0656BE7F021DB863F63DE1271FAE5D9C
686303DAAB3AF524CBB463BD18B17BEAB05EE887C7DE95C8BA99CE6C1D4930F4
BD126BB48E48A7B15DDD9CE9A792D8CB4DACA5F6A34975EE072865DD0F429F2F
48D6BFD87456E6E9DA9EE898CFC296A8C56462C7AC76F1F350ACB1B3BE57A128
D43EC71195A532EB2E31A10AAD282E3B73A24FE3E02D8AA74B9CD3DBF296A645
CC37A35FAC068D02A6F583B7295E9A364BA6AC02592395BACD1D974C8BD8591F
DA5FB8D395DBC847CFC3AC4C36967A941825BEAB6D053A1034AE5A4971F5EA76
6B6EE55A0255EAFBD3CB9D9B48BD82A1F2E2B2402299EFAB09130861D974DC68
D4EE26A9B9F38145F1DACAB2F44A3C82D04E639C8A3488D77CCC674C4D0ADCFE
9C9883B5B532CA46FBF88721484AA28BBE6306D6B1CCDE4251E736E6B1CBD090
75410BD095BBD139D828045042809BA99DD7B637802D663A80F0BCB963CE62F3
3F0C59263FA14E1C9A0A271B585DF16407D81FD490832AEE5010AEB42AC994C4
B96D4043E15E53643AB0BB89428A16AB1066530BA1C89585BE48BADC9488DD86
2CFDC0F7B123089A4524CC7CB3DA0D395A9A7001BC195E409C760F618296AFBF
EE1989A09F9F98920EC80C94AF55F5F1CFF40A298F1BCC155CDC51FEF9DE758C
07A6F0173EF1350FBB689E6F375A57966CB2FDBED9DB3168F736647968BDA608
B66BAE07DEC4257E782CFFC249D0492D0BFC40D8DF6B9D4B8299B2399045A587
A0608768C3033D0A0FB4B6D89FF0F07276434B5F92F17E41630F1CC9B82B395B
DCE1885A1D5F3441B03AC4D77CFCCDF6A6A155F451AA39165591ACB05A205779
2099F97EFDB78E1B6E1C682B930F48BF0A28301B463A5BF4FE3E6F861A0A32EE
23534ECAB1259C875ED86B498958515AD7DA3440CE8EC1F099A6A3D5C971CE7D
A129BF60A394E8D2FCC932D03553E9113332882FFDFC1F399D965ED456CCFE55
A7AC19E4B17930F75515069520E022439DD1C79F8A66F62E5E27255EFC242397
6E2E739B82A625B0F2987083E1BEC613BCCB763A23259AF1C50B2852034006B7
B521346BCEA349DB71A2FBA7498029623AFE9034E573034979B6D0F7D62021E0
5D2623819A7F1B2D22E3BD0A364F4AC9FE64C0836B09C6744220EE0769453DD1
57B162EC914D673AA42D3DC00BB1E50A8DB1080C5AD05C2736E54B1CB76A718D
D1EEB3512A01A4AA78EE5EAC2E204B4F9BFA0F3B8CE22E0DEF84433445048438
33C3C274A3A5E0A3C3356C5A1D611E022AFAE52CB025D5FB9D1D24641DEE5295
E7342DBB0B0BA84EE852919ABEDC15F21B510E4C5CB8F12AB39270D29818C4A2
9A107E125B6CB952450083363E4CAA4E7FE81F9E65B25658B72BCAD7D79467CF
33AA28C60E8363313B43A5F8D52C4171127090BBDF79463F5DF820553CF5EA8B
06F25A3F6B00078E3705F3BA75FF916C582051C40825AFBACE98B6666E294943
43FBF47F4D37A641F53EFF9021D9D4C491F26BE8F54C61165CAD797B6AC8AA3C
212DCE2D3E93D61D8095462EC370ED6038C48AF3D1F83F812FC70D2989F28114
3AA4BC8822F5ACBDA4BB02C59A86D8858830DD506ADE68640D18A15B0CAEA811
8446BC15D85FE64D88231FDC2F43FF16BAE55474C2A6912D67A0558FBB1A9BF1
5AD7DF23B36C6D1F2666797292AC7023CCCD548B14ADDC5C6C2F44BF832E4DDA
89696086DFB1077FA73682737E3E3A4CF4B2957E023ED885EB17094D855D423D
52D1B64203CDD227C5BC2F92C5DA201959F58AD6DDFFBC47882E928A06EE909D
E8C5040FE630E1FAFDB99DFF29348A9B5A99B1D3D27326EC057B1883DCFC095C
CE0D9202E1901AEA1F20265E06C2E2E8DF9532840F5737838DE907775ED0BEC7
08838D311CD7A6C78FC4A53F0DC10ED188D1982AA2E9FA04E24C582927E6F47D
BD6F70CF0680299309D959CD0D6AB16EFDD090B4A823907A119D2BBC0CC3F59E
2B432997073759A48B1792153D16C17CD2F83B971005CA4FBAC0E247CC0DDF55
424B8C2BE6541F493C035A9B3F845A083D37F87E69BF5832DBF710D4414A52C7
822ED3160834A03DF0B8FAD740CE9141EC9A6EA52C2A5F71B7B183EDF89D009C
F92740FB36C17030AFF437BF74C63765722036D41DB7078682986F6F6D887F55
14996D92A211B473C0606C8874A2B749F802FECA58D6E39A107ECE8A3EBE7E64
5FC515D3D2166C4A311A0C52ED00D2305C70A416567F5EED63965E3FA70B901C
D5D2C49144778CFFF1D5B63E099846EA797BAA3658B8AD58435B34B1D7D501B5
61D3E1807F32D82E71133EC8B444B7E7DC48017132AE6CD282904643EC5932E7
9727ACF464295E75CFC635036CF27FFC563C350147C2A6074B263DFB6FE58624
564DABAC8AEAAEED7D8FE529599D9A44FD882E692EEB4A6CBD4832C2022DD121
9D78BE4FEC3574D5AE3388DDE9AE21AFE518F5641D548AEE0ECA2F070C601E62
E07DDE01E7947FF29DECF3420118FF2F2AB6EEDED6C7B34DB404164ECD823DC1
A34D6B1BF2B6BE30B6BEE1AC0B42621E9410F431256DBBEA0571DDBCA03876B1
01CB3DC3A55E0A3F93C4FEE26E99D64B2C9F34AEA94D956AF7ADAF6F36A1C76A
4AE4F16EC3A864D83862DCF9B71A8FB3A6411DF4ED7BB718A73402A90D516109
F565AE039A41DB1D19632D563E8545D12267B73080D802BE7341B5F4E5D108C3
7D26FEF8370A38E142AAD5349BC4773E95182C70A477E219164764D83577FFB5
0B7976A5BD188036F0ABB98C2888F1A24BDB900338B4131ECC60644983811AE2
22180BF296EA981AECE8D13DC653B82EDEDFE055AC7B7DEDC4D46E300C25D5C1
FEA89265DCBDAE88D0EF28B45AC7FD2881AF6359D276DC4FAACAD5A1706C656F
FF53F447D44E968A8B29A84AA5CE3B159971069CE028E065F785A518971A3B51
EA08C6894F0E5A7F31AB6DE6F02589CE8192748B28520B4499C079D5A6DCF4FC
B4132F40CA781F3C47C0A4F9EC73E03D47E7B8D6EA455EC7C2147E876B31056D
79F10721BE5B9F61D8A04FE320F75EE1FE8CB7B7F400EC21AD443BE79704632D
F95672602E1556207B8E2CF3F451E41DA4CAB62EA76CBCD8DBDA1CC34AC36703
68299DB9433B73858600C7D9DC544694E25F259B039558DA322EFC41B7C76486
02DD62C32CDF44DD8E430DCB7638E00CC139ADC11FA69DDC5020CC3C14EACE61
BCE6EC7A9B9791AF85F92849EFE0780FF6379CEBDD27A9EF99E1293D2335D569
5E1B8D43FB421979DCB016E5CA2765235A9703D2D33436B4117694575FD284FF
8E0AF8A0ABC2E57B5E04A4B42F39A4935E10F10BAABF5FAAAA47A65D369002A1
FE2265A1FF6BB0F2511C6947BCA4D4E4C32BF7A5BFD1A350B2C75F20D8EFF9C4
E32A8B54BA707657EA2BFDA7520E477B253AB00DFB60BF8A80F857726C470AB7
625CC4862812CBA7D49FA342F8A1993B5020F8574CE0C8B6FCE43E382AA3BBE0
C80603A812E51B64E0D3B325C15577FB0CE39BEDB251F472209550308213597B
A3F10B16F3BA05F15AB776E8050B06A78E7413E0EBA099CEFFDABD2CB0C63DDE
5C64BCBD04E1798517A5D5AAD0C39B88706835EE66D70845FF3465E9F0918267
336FCC2E3A8052D228572ECF09F29DE98EB0A544672A851A3ADA0A6CB9C78D82
1B3F22045E7CDE9AB12D3014B697AA21E80AEB1757E191DA795FDF71D10E1D5D
11BD5A36C1CCFACAF58611D2FD16232973483E312CDAC16CA061AFAE611C750B
87D2A920F3A7345EF355E8BF2AC5122496FDC169DB7C35DB9645617AFE078E03
BF9A1BCE4E47D414151A57D02371497BA21EA208A185D6B82C973F180EB6193B
932D3B9A492B777AA228E29D1EFBF5767C3735B79CB84143FBB248AA643CDF29
4849D3C2F1DFE0CEA6C583EC747BB813857F88843B1DC8E80EC1BFEB6B1103FE
92CE0AE4FA23E512640BD887EB65D2F4C5B17E2ABC5A332849ECE66F8102383F
02F7401C3481B529E3E240F75FE356A32BB5F337C05CF64D81FE3741D9345280
0D07B2B5E0B441059B8A96B9D06EB37B67A972F70AB119842E541C1A3AFF4C57
B0BA196BDF885DB63DEB07C4A88C70819475E9E4A53BA6CD4FEAEDCF8266D724
C7E010EB7BB169CBFADDC4BB1B1552A81FBFBCDB24C77A85743F7ED241D48F5D
B2174A712F0A1E33ACFDF4F850DE8C3B09C111B1422C44EFC19100160653571A
A33349BD9C4D0568ED83B1009D26390D892585597CB66F5CC8F14F0533C3038B
97DE960896B497E6EDD4B4ED1204D7B6240024272A6677F20E75A8F7FB6C1EC7
E50A4654E8EE24F4F6BD72C6B3158EB82AE67338CCDFCC0B6C535BB1EF4BECB5
E1A837A3ACFBBA005CD72A3772B499539CB66B1339A0AEA21D2A485E14007D8E
4377D75506A9695ED8C0CC72F52D8F279E4959BCB2AF9EFBBFCE77154F68EAA6
1ED5799165E2C781E6D9C2BE397CAD1E44C4FAE1E19981F1AD5778B2FD0FC05C
B4C628A1F09377B85116CEADDACB20AB6BFCBDD95D322B8478B7485BE9C86CF8
A51C6CD3EBCE191B0F1897F45E676D2D16E9493A2A85196DD528D0DF17F15FF7
8FCEB2CA616D526C530E15DDDB610AD600F9E8DCF29FBAB913FC133D751551E4
4910F23606F42819D52B47DCCCE8D129A4C05778EA6E4CED79D14B3487BDD4CD
96EEEAA889CB814AD5A7DD4D39B18C7B5FDB2698A5F982973070E30002CEB014
4F2E01DBE1161B20F3AB5E3A7507F25CBDE0504C023A845F327AE4A11A816466
C949FCB88A21E889779169F0062A23E40B5916E65AB744B6FD259CC8D48D85F6
692F098CA9B14ACB8C01E76B80E3B89A014FDCFA1309C4C91E6030D88B0E6471
FB8EC3718DAE2E9EBA03C134EFEBA19BAB5C24E9191DCB18F9F1704B5B90966A
67F84AED0E31A74143E110E13B53BA096EE9A53EFC3D43014A8761F3B973F45F
251167C7920FE0D18A619F3B355B53B61EC3285134165679C59720CF563BC402
453DBFDE39102D154693DE6115DB953444B29D7CB004560D0685F73E8772FDDA
B877DB18268DEAF39F0654D590E6E8AC9068E04A0D026206AA8AE124C3E2D81F
48F04CB32D17A0451E63FFF6B99FF4B7F643BFDF588DF93B6925100D074E11C6
D288042512A5C7A579B470A9E340A6985189FF8B6AF914A6B0EA1F1324014A15
156A99395CC93B9285AC9FB11F8AE71B4E8E04C8CE47236EC5E9AB8098172627
AA405908C7C1F68227F4A0A389F9BD1A40751BB52DD043ECB0CDB6902BD6E949
5DAE0A3681F695188185077CE767994941E9A5D75A8FBBEDA2F3FDF20CF64BDA
FF1590691CA69CA1A46C02395B157E0CEFBE5ED70ABF0513CC65CA9A2C5E3C53
AF1EB872D568D5B95B28E613E32638D350F86FA328363D1B4FE236DDDD5D327F
BFBC81B4C8002485CB219AD22C6E76503F3FE34DF9C988C441A5F11E5AE7C363
134DA775544B63D281D68BDD0DA7FA0EFCCDED873C969BD830908D6F35C06A00
69B8B31697716DBA03B23D85CC8B701EAA654C5EE74F40D782FEC37141AA3752
05EFA304780653717F1B35DBBA40F6F4AC2679EC035DDBA628E6C4EEA8E4B391
FE883E5AC603EC3117E38FB2A662D90BAA6234DA26D0C1005AB8A2F2C1557DC3
15AC891C390C8A1733C2DE844A1F915CEF000714F6F7B0126F2E1EA686D7693B
B1BDB187E14BE4D479CF16BB1D590CE52AF6E35A84F738681252FCA06F8E8A12
5A27BAF0BFB58CB89C444F4564C1ECBC4CA16CBB9CB84143FBB248AA643CDF29
4849D3C2F1DFE0CF5E42F1C1DB0CDB39307FBDBD27D9816175D196832A24A3E5
EF041492ADB51EC95DF8E053F2DBB854C4BF36A56774C5712A0C1157555524CE
D29270EE046E0D4E64A84474FF14FF52258AF7516DD2F5B1C2045E93FC68EC79
AF7D8FE9F1D538637FEE65804AD9F47FD5D09FE551F142955D6F38E8D6C826EB
32307A623C8DFEDA68DA9A52AB8892453B9F874FB0C605A3CF549097960C1297
C7925F24B85025D2B10C931C8D48A357518AE4B9309B6B5FE9CAD70239459302
95F6BEF10FF79D278FFC3C51BE1AA7278D50451D8B7790DFD1FC31D5878E3D65
36EA9B9EA11DD57CFBF4C903F54E22E2B141D5417FC4E56B370A5320412CCCAF
F39097AE400B8999F052AE0A8CF6038EB3DB7AC82BC369DA41DAB8861155A0B4
8DB7048568AD2767358668C65F2976481C945DDC14D93FA25FFA4F3241FE1D7A
7773EE314A42BEB6D948615230A58165C7A0F972EBC651371BD3F69A70793D05
1FFF5B94C59304876FAEF7FBB20D1BD326AF9CD9C35372E099D1452E980CED26
1D52A7C82210412B98C62023AC1D2D07522B41935246649BC9B0113C31AC614A
AB95EDB58EA45CEC2AFBFB1C0734618A483698A7808D9DC9D3140895715DD729
2B4C730C54CE14F5B95750E76C73BFC3C79DD89CA8D4A82540F9B0799C142F96
2545CB2DF125DF0A2A7A85617CD023533D99D222F957C11749651C5E0371FAF1
4E7D75424289F369D14AE927A6C0E605AFDC16E18A3D3992522CFB5F3D8EAB19
0FBB954E10D29A3BC4D7800CBAA90F3BF0022E66A54BE1059BD5D224B671075E
3D2835DF0D37360A9B5DE91E2557AB5F1B0A2DBFC9711387CB512AA64E156D06
0119C53CFC33D924B3925033ED380CC6A59CA288380A1728912DF333DFE05DD3
C9818049F20E7ADF22AE9612796DEB9138059A4C12D055720292A4CA563E6403
B454E1F43DC5C2A092953DCFE923C8B15FECBDA4BB89EDFAE2D6A52C31C01B3A
D72E811CEFC3A15FC3CBB1E614186292D44DCC6A69F94C1BE6364D416B911DE7
81563E26C08538E038DD8EF92434F11D66B09DF5739B4A104248B717850832B3
812C0405540529255E75A98EE2F7A8F5203DD557B868F8B5469F807BE4D32170
A9DF0ED814B56FA36CDCE4CA26E456B1DDE8152D77D1880741555F4B089778D5
E104CC29E7E95C0C2EDDE58958E4928D006C5017706C1C0CE6A08C8275DC02D4
0576568262B2289BD805DF76CDB22E1F984E996637B6BA413F846A887BD1B3B8
9EEF73565F3D0D2BB858A8A4E7CACD4206B6511C61A7FBC0F4B0DDF0476B8549
A10BA06D179344B0D52ED2A928EBE46A46B2BF92F31516A90F3B8A854B7EF90F
A0DFA208E4C47AEE28219885E4804FEEF0FE8FEDE01A7A12F83CF0C78E0B40A6
01998E5C687CE52F35722C203F4FED298A68097564AC9E74E1A6D7602606094B
0C91DCA122F0BB3D4FA3AA0E1B36205EAFA131A73808C55EBCAE3C413ABAD61C
11EA8B751A8C787CD363A398058AD4ED21814D5132E07D95B7436F4AE151FA3B
1FD7795D169C15DCF39B860BDF96D4098CB2E68751997E96F9ED7A2E4DCC52B5
5ED92B22D9E28DE4A9808979B2FEF19018012754089BD49AF82B44C72D87A629
277C36A190BCE3C3128378B8FF538B68994ED266B9B4E40E5BCC6F9D38A98AEC
711A55C6C0DEF6A1B967861F6101C28B72DAD6AA1128F196627E2411EB76F9CE
FB9B43D1AB67E0C1B90B74C62FF8FD0FCC272EBC56BF685D78CADFEA384D74B8
092E5A5A0B4CD51BBFF6AAE362AD1127A26C1B582C18F20888F8EAD564D3E502
041E33BA921D3E005374754793669924AC8D5E909A21D522C4EB36B543083F66
D46763503CEDE0631046979B154585E86456B993FF4BE4888870B8470750E5FF
72B40FB09C99F2A1E9243940E9A0046695FC59C4731B3424EA9E2548F65284A9
C8FBCC63BCFB01B25C2D18469BC954433942F7D7DEA7BF6FC790E756EC838EC0
A38A6A74DD71C97E92A00956438FD331D312EA80DB41C09229FE46514DA639CE
B2D569D85887EBA8C2C9FBA0411ED784316C54764DAACC4FED7DA6A1215E012F
EE2151C994873C08B4F8C4A4FEA85CF336EDE19437423672A26BEF4CB63E04D4
EF0F5284D9641F2D4BF9F754BB73F03A9E7E9767A9F5DE2E807C0CD1AE2E2C97
2387AC319C89A54682E0C388F51002B8E25CAFBC5640701891DCD212C9FB7D27
203BBD668646FF5C4575CCA024DCE463A3028BF82303AD9E5C8401B7AB45BD9F
352F4E5E6B69CF13BB939E97F08614F3D8E30F489A4DDC4CB95CBD6F8277EE71
B5229719627C23E6B5EA2AA6481F58F99CFD04793350B8D250ADDA023460E61B
81F1CD4A50F76DF79B4F78706A40F0BCD6C390E730A901EFB788B526AFD25783
BDB0D28201E5693BCBA645B0C4F983FE358445EC5C1A1375AA8F52741621BB4C
710049BFAA5E093D92D7602B523BC804C1C80599280A84E156373842B249C467
1B0F610491C0C07CA0E9259DEBB8F52BF8521BB232692DFD2E9C7BBCC68468EB
CE654CA5ED658A3BFFFB7229629C2757065B0EEE993C2556907E85B49876EE48
3A0D7E1B9334C6F8300BCB1564A21ACCB9D35D7CF34D3EEEAA08383062A6B8C4
A643BA06D0FC001B17BF6E4C88709E4D04A97BF8AB62168DFA63E0B2321F0A36
B1B1C0507342E30274CBAE8531CFBD3DCCDBD710134A6B4636D7EA94F3E2FDB8
3CCE8849508A71EDC5920D4DC8B9EBA89255D3AF0D32BF4FA3EB6385EDF758CF
56F35137B5CBC73E1DEC1D2F686F1E4BD750AE9921F89E4B87090B21947C8F69
8CB11833DECDBD9DB63BA54ECE31A9EB8F3363D5E5CE42A80E90F33DCFC28E9B
9F1307B1A0040EE3F44CDDEE2692461560309A656D83139769F56BE7702B2185
EE39BA4736D54DF5E9A213465FAB03D050F04D4CA153669F79EC103E8ADA41EC
5E5EB020F47A808A11ECF97BF83B733533680E520CCD2CA876BFF9908329EEA8
9D71046FBC3354D1F4F850711210322420F04817962B707195E3C88E4DA41A68
F96B8F9ABF6DA76245E86528FD357F2F73ED8F6D737BC1C6D3C02792CB44A20B
9BF2BC514CB6D72E95C222294D4E0C291679EC7A9EF8445391785D8B7393DD61
1F3CE69BCA44FDE0E0EA6E0F5EE1A7347DBD549E97E32CB025D5FB9D1D2435B3
A0885B0C00C7D7FA9589C7E8ABB5D387BAFFC6C93AF8FE96B3AD5C3C3E67D881
A3A3E9CF93360581832561225A9E08866E460D47DBD3174757F18F7E29B00D62
AE0ED085E02E826536B109B4D5C4CB6F717113708859C9659CC8ABA3F9958FF3
EC69029FA5B1B135A3E2E658BE0CECBB4CE93DCB18B1DF5F8B13ED251DA175DC
30D073718ABC72107302FCCAFAAA50F046D3975ECF78BB858369D6D37C370B58
24DA5F3505F7BC9B2F671E16DCF452F2F9187B14F569049E4A1196327A8B1DA2
7601A418753A54753D8E3637C8A7E8C91465A6E7350F1CFCCE63539F621DB902
297323E14879B711D904BEB535ED66745241D15E61AAB0B67F4D8EB849189DD4
D7294A1473B478E42C859A11A21AF471518A86FF22789C3C5A3DDB5381CFCC78
4D7033ED4A32F3F15B1FBF894772A9041CABF18F34A808E0C5F17E4921E8B4B3
365353AEEF2AAAD9AD18C7FA88804EF50410EBFA7C068C155A069CBBCB52913D
E8E26E48E8AFC37B0D3B6E75527C76230560CDCD1A56F810AC6B0B942C82E3E0
5B19390AFDC09282342D9481EF540B830EDB1EA3CBE37111578198FEA3B8C3CE
065B69D3B652524ECCDC9EE6BC84F0E24AF0950A053175173819BABE5F350C2A
813991A26551C7D20B5AB9EDEA8E59DE37735F9A0E978D7878117D0E8E78872D
230493DFBF07281D692DD33459BBD68B677F4769983F41A7F49FE4F517C7BF66
BCEE943C3C561B0130BADB2E68FF9744B19ECDDC83DC092E21BCB7D349062CF6
5DAD2C2DED0BBB566796165B9F5560381BBB7AC4BF3E5DEAFC8BBFAED952676C
DC78F35ED4DCD4BAD9392DC565DB015018D067426BB1B17A999BD281C73F1DB9
69332CD70A72AA4B05B19B7C44CEB24676C8124408003FF02549E54926A456DC
1F9ABFF9E9FDA9267A28E44BBB2745D1470F3720C748B4B70D4CECBA14AB3966
51345FA0A1CD3B57FF391D88896B018446520A91088EF6D57C97169DB6ED254F
4E9B9E29C3F10787E6F45DD3D78AA60958FB9AA9CFEF6B56F97C7A96A550AD93
84EE0CC8AAC15778A298CE088ACF6338E585590AD22AF4C7710FBA65198F1453
C91E060047DE2283C4F4C411F79B1D23195C2145DCD8A2A312AB510AC6083EE9
2D2A75664A6B6DF4F4C76D81664FBF544836A858659387E555486BE66778893B
A825CD9DAEDED6BDFFDAE15C0BC433FE7872DFF98D1E8342F233A0F99927AEFD
0B89800CE59E2CB61228CCFC2A5AB8D715C5F340CC73D713219AE0E97B07319E
B421B553A9CE02D931F9DBAF997F71E7447D6C33880DDE718F6F1EC80C371DA0
AB3868D3C2D03CFCB895F3EEE2EA332D4845DCA65D21CC25EC736FB0CE6EF3EA
BD4FB85ED9D3AA1DCF726405C39EFEC6960F3D9F2940586C1AA916BC3CECB660
C03B7A4809B64373AB6861718FC67EEC6E49375F08EF3C614EF4069EF405922E
E8C146682B38C65D74508073CC5473C3646255E70F5120B2B0BE035A7B941C77
41B77853E5505C9ADA3A4321C04AE86EF9AA7355E2D2CDBDA36CB9BF29E818BE
A71E1A8C4C9711158B2E915A97EC1C4248095261A994D5368BF9DC227BD6C8FC
0147380677DB8E34D65D1A0244D8B4A9652E4DBB6D46731826A8D4BF3A921442
A35829199D986E08682B5FB6A32142FB497C31EB088D7FBF3222126B894AA7B5
EC2411E674B5D6A8B619C893305799AA4759A0033C8350BDECDA3DF10438D5FE
CBACCDA3927200C8E7FD89F68BA5BDCE398FA9D013F2E88AC81E0ECB690120A1
F50F90CC0741AC52D310C58FC9116EAA96126D71EAC8BBC6EFD05DC16910E895
016E38C8CBB946801696E0A9A370F4BA2D99309758E4C7AFCAD4B0F811209F71
B28A882A60B8973E33ED4A7B6841893C16DEAB3807D93CC35809C351E9061052
6995A3039D9C57229F2CF5AFA156860FB6F3EA75B1504B8E1163EAD5E6DA8078
49DB45C4BFB7DBC35A9A603B4FA2AE8742FDD7378A013D787AE5BE75AC2A3B97
E29D01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktional)
@start /Fa 254[261 732{ enclmmathsy ReEncodeFont }2 885.568
/LMMathSymbols8-Regular rf /Fb 173[959 82[{}1 1328.35
/MSBM10 rf /Fc 185[723 4[830 11[553 2[553 3[307 46[{
 enclmec ReEncodeFont }5 1106.96 /LMRoman10-Regular rf
/Fd 160[909 45[606 1[606 47[{ enclmec ReEncodeFont }3
1212.12 /LMRoman10-Regular rf /Fe 145[523 1[261 50[470
470 470 470 470 470 470 470 470 470 4[732 1[366 366 40[{
 enclmrm ReEncodeFont }15 885.568 /LMRoman8-Regular rf
/Ff 135[530 3[340 34[740 597 20[261 59[{ enclmmathit ReEncodeFont }5
885.568 /LMMathItalic8-Regular rf /Fg 135[739 3[470 13[641
603 1[560 553 683 15[1030 838 1[1042 18[361 59[{
 enclmmathit ReEncodeFont }11 1328.35 /LMMathItalic12-Regular
rf /Fh 145[723 1[361 14[361 1[361 29[1012 1[361 361 1[650
1[650 650 650 650 650 650 650 6[506 506 40[{ enclmrm ReEncodeFont }17
1328.35 /LMRoman12-Regular rf /Fi 143[1107 5[369 55[886
48[369 1033{ enclmmathsy ReEncodeFont }5 1328.35
/LMMathSymbols10-Regular rf /Fj 204[406 51[{ enclmrm ReEncodeFont }1
664.176 /LMRoman6-Regular rf /Fk 3[723 5[650 17[650 105[578
1[686 939 686 723 506 513 506 1[723 650 723 1084 361
686 397 361 723 650 397 578 723 578 723 650 6[795 2[1336
2[939 723 2[885 1[975 1192 813 4[1021 849 885 993 1[921
975 3[1012 2[361 650 2[650 650 650 650 650 650 650 1[361
434 361 2[506 506 2[1084 3[361 33[{ enclmec ReEncodeFont }58
1328.35 /LMRoman12-Regular rf /Fl 135[1136 1[1136 1196
837 849 879 1[1196 1076 1196 1793 598 1136 1[598 1196
1076 658 982 1[956 1196 1046 9[2223 6[1470 1616 1682
2041 3[801 1682 1[1353 1412 2[1530 1625 11[1076 1076
1076 1076 1076 1076 1076 598 717 45[{ enclmec ReEncodeFont }40
1912.83 /LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fl(F)-239
b(A)717 b(5.2)g(-)h(1)f(Exp)60 b(onen)-60 b(tialgleic)g(h)g(ung)714
b(-)k(O)-60 b(A)717 b(-)h(BIFIE)p 0 TeXcolorgray -741
4800 a Fk(1.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433
b(ist)h(der)f(F)-108 b(unktionsw)-36 b(ert)19215 4202
y Fj(3)18883 3717 y Fi(p)p 19990 3717 651 54 v 1083 x
Fh(4)434 b Fk(der)f(Exp)36 b(onen)-36 b(tialfunktion)434
b Fg(f)142 b Fh(\()p Fg(x)p Fh(\))369 b(=)g(2)40297 4318
y Ff(x)40882 4800 y Fk(.)921 9338 y(Bestimme)434 b(die)f(rationale)i
(Zahl)e Fg(x)h Fk(so,)g(dass)g(sie)g(die)f(Gleic)-36
b(h)g(ung)433 b Fh(2)34131 8856 y Ff(x)35085 9338 y Fh(=)36835
8739 y Fj(3)36503 8254 y Fi(p)p 37610 8254 V 1084 x Fh(4)h
Fk(erf\374llt.)921 13875 y Fg(x)369 b Fh(=)p 3041 13875
15749 34 v 1 0 0 TeXcolorrgb 921 16420 a Fg(x)g Fh(=)3543
15897 y Fe(2)p 3543 16111 471 45 v 3543 16879 a(3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4800
a Fd(___/1)p 1 0 0 TeXcolorrgb 48228 6792 a Fc(F)-123
b(A)369 b(5.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 20354 54804 45 v -2331 25655 a Fl(F)-239
b(A)717 b(5.2)g(-)h(2)f(W)-179 b(erte)716 b(einer)h(Exp)60
b(onen)-60 b(tialfunktion)712 b(-)718 b(O)-60 b(A)718
b(-)f(BIFIE)p 0 TeXcolorgray -741 28963 a Fk(2.)p 0 TeXcolorgray
651 w(Gegeb)36 b(en)433 b(ist)h(die)f(Exp)36 b(onen)-36
b(tialfunktion)434 b Fg(f)576 b Fk(durc)-36 b(h)432 b(die)i(Gleic)-36
b(h)g(ung)432 b Fg(f)142 b Fh(\()p Fg(x)p Fh(\))369 b(=)g(2)40173
28481 y Ff(x)40758 28963 y Fk(.)921 33500 y(Bestimme)434
b(diejenige)g(rationale)h(Zahl)e Fg(x)p Fk(,)h(f\374r)g(die)f
Fg(f)142 b Fh(\()p Fg(x)p Fh(\))369 b(=)30850 32977 y
Fe(1)p 30850 33190 471 45 v 30850 33958 a(8)31887 33500
y Fk(gilt.)921 38037 y Fg(x)g Fh(=)p 3041 38037 15749
34 v 1 0 0 TeXcolorrgb 887 40583 a Fk(x=-3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 28963 a Fd(___/1)p
1 0 0 TeXcolorrgb 48228 30955 a Fc(F)-123 b(A)369 b(5.2)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
44058 54804 45 v -2331 49359 a Fl(F)-239 b(A)717 b(5.2)g(-)h(3)f(Pulv)
-60 b(er)716 b(-)i(O)-60 b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray
-741 52667 a Fk(3.)p 0 TeXcolorgray 651 w(Ein)420 b(Pulv)-36
b(er)421 b(l\366st)g(sic)-36 b(h)421 b(in)f(einer)h(Fl\374ssigk)-36
b(eit)421 b(ann\344hernd)f(exp)36 b(onen)-36 b(tiell)421
b(auf.)g(Die)g(Menge)921 54659 y(an)403 b(Pulv)-36 b(er,)404
b(die)f(in)h(Abh\344ngigk)-36 b(eit)404 b(v)-36 b(on)403
b(der)g(Zeit)h Fg(t)p Fk(no)36 b(c)-36 b(h)402 b(v)-36
b(orhanden)403 b(ist,)h(wird)f(f\374r)h(einen)921 56651
y(gewissen)361 b(Zeitraum)g(durc)-36 b(h)359 b(die)i(Gleic)-36
b(h)g(ung)360 b Fg(N)139 b Fh(\()p Fg(t)p Fh(\))367 b(=)i
Fg(N)28759 56850 y Fe(0)29431 56651 y Fi(\001)146 b Fh(0)p
Fg(;)p Fh(6)31607 56168 y Ff(t)32364 56651 y Fk(b)36
b(esc)-36 b(hrieb)36 b(en.)360 b Fg(N)40747 56850 y Fe(0)41634
56651 y Fk(gibt)g(die)921 58642 y(urspr\374nglic)-36
b(he)472 b(Menge)h(an)g(Pulv)-36 b(er)473 b(in)g(Milligramm)i(an,)e
(die)g(Zeit)h Fg(t)e Fk(wird)i(in)f(Sekunden)921 60634
y(gemessen.)921 65172 y(Gib)325 b(an,)g(wie)h(viel)g(Prozen)-36
b(t)325 b(der)g(urspr\374nglic)-36 b(hen)323 b(Pulv)-36
b(ermenge)325 b Fg(N)34134 65371 y Fe(0)34985 65172 y
Fk(nac)-36 b(h)325 b(drei)g(Sekunden)921 67164 y(no)36
b(c)-36 b(h)433 b(v)-36 b(orhanden)433 b(sind.)p 1 0 0
TeXcolorrgb 921 69709 a Fh(0)p Fg(;)p Fh(6)2582 69227
y Fe(3)3404 69709 y Fi(\001)295 b Fh(100)370 b(=)f(21)p
Fg(;)p Fh(6)921 74246 y Fk(Nac)-36 b(h)443 b(drei)g(Sekunden)f(sind)h
(no)36 b(c)-36 b(h)443 b(21,6)217 b(\045)444 b(der)f(urspr\374nglic)-36
b(hen)442 b(Menge)h(an)g(Pulv)-36 b(er)443 b(v)-36 b(or-)921
76238 y(handen.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 52667 a Fd(___/1)p 1 0 0 TeXcolorrgb
48228 54659 a Fc(F)-123 b(A)369 b(5.2)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 24746
81281 a Fk(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 54804 45 v -2331 6921 a Fl(F)-239
b(A)881 b(5.2)f(-)i(4)f(Exp)60 b(onen)-60 b(tialfunktion)876
b(-)881 b(O)-60 b(A)882 b(-)f(Matura)g(2014/15)g(-)-2331
9944 y(Neb)60 b(en)-60 b(termin)716 b(1)p 0 TeXcolorgray
-741 13251 a Fk(4.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)405
b(ist)h(der)f(Graph)g(einer)g(Exp)36 b(onen)-36 b(tialfunktion)407
b Fg(f)547 b Fk(mit)406 b Fg(f)142 b Fh(\()p Fg(x)p Fh(\))369
b(=)f Fg(a)238 b Fi(\001)h Fg(bx)406 b Fk(mit)f Fg(a;)221
b(b)370 b Fi(2)921 15243 y Fb(R)1880 14761 y Fe(+)3101
15243 y Fk(durc)-36 b(h)432 b(die)i(Punkte)f Fg(P)550
b Fh(=)368 b(\(0)p Fi(j)p Fh(25\))435 b Fk(und)d Fg(Q)369
b Fh(=)g(\(1)p Fi(j)p Fh(20\))p Fk(.)p 0 TeXcolorgray
0 TeXcolorgray 921 41806 a
 currentpoint currentpoint translate 1.08398 1.08398 scale neg exch
neg exch translate
 921 41806 a 1355 41806 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 370.90027 a add def
/d 0.0 a add neg def /h 201.07469 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1355
41806 a 5789 40328 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 8 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 330.84215 0.0 -40.05812 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.4523 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -28.45274 0.0 T 14
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 187.72404 0.0 -13.35065   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 330.84215  0 -40.05812  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -40.05812
 330.84215  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-13.35065  def /maxTickline 187.72404  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
0 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 187.72404
0.0 -13.35065   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 330.84215
0.0 -40.05812 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 187.72404  0 -13.35065  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -13.35065
 187.72404  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-40.05812  def /maxTickline 330.84215  def /dT 1864650 abs 65536 div
viceversa { neg } if def /DT 5. abs viceversa { neg } if def /subTNo
0 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 5.69046  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 5.69046  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 187.72404
0.0 -13.35065   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 330.84215
0.0 -40.05812 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 4544 37464 a Fe(5)4073
34314 y(10)4073 31164 y(15)4073 28015 y(20)4073 24865
y(25)4073 21716 y(30)8703 41673 y(1)2680 b(2)f(3)h(4)g(5)f(6)h(7)f(8)h
(9)2444 b(10)2210 b(11)-38866 b Fa(\000)p Fe(1)5789 40328
y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 5789 40328 a 5789 40328 a
tx@Dict begin  { 330.84215 187.72404 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 5789 40328 a 5789 40328 a
tx@Dict begin  { 5.0 6.2015 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end

5789 40328 a 5446 40614 a Fk(x)5789 40328 y
tx@Dict begin  PutEnd  end
 5789 40328
a 5789 40328 a
tx@Dict begin  PutEnd  end
 5789 40328 a 5789 40328 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 5789 40328 a
5789 40328 a
tx@Dict begin  { 0.0 0.0 pop 330.84215 187.72404 exch pop } PutCoor
PutBegin  end
 5789 40328 a 5789 40328 a
tx@Dict begin  { 5.0 18.93042 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 5789 40328 a 4741
40660 a Fk(f\(x\))5789 40328 y
tx@Dict begin  PutEnd  end
 5789 40328 a 5789 40328
a
tx@Dict begin  PutEnd  end
 5789 40328 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -1.4078815442964723 def /x1 11.62777159795149
def /dx x1 x sub 199 div def /F@pstplot (25.0*0.8^(x))  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 5.69046 mul
} def  /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy
 dup 1.e30 5.69046 mul gt { moveto } { dup -1.e30 5.69046 mul lt {
moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 5.69046 mul gt { moveto } { dup -1.e30
5.69046 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 1.2 SLW
0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
5789 40328 a
tx@Dict begin  { 117.26205 73.97598 } PutCoor PutBegin  end
 5789 40328 a 922 x Fg(f)5789 40328 y
tx@Dict begin  PutEnd  end
 5789
40328 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 0.0 142.2615 
 false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 5789 40328
a
tx@Dict begin  { 2.1369 145.52959 } PutCoor PutBegin  end
 5789 40328 a 0.25 TeXcolorgray Ff(P)p 0 TeXcolorgray
5789 40328 a
tx@Dict begin  PutEnd  end
 5789 40328 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 28.45274 113.8092
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
5789 40328 a
tx@Dict begin  { 30.78806 116.87906 } PutCoor PutBegin  end
 5789 40328 a 0.25 TeXcolorgray -172 x Ff(Q)p
0 TeXcolorgray 5789 40328 a
tx@Dict begin  PutEnd  end
 5789 40328 a 42412 41806
a
currentpoint initclip moveto
 42412 41806 a 921 41806 a
 currentpoint currentpoint translate 1 1.08398 div 1 1.08398 div scale
neg exch neg exch translate
 921 41806 a 3984 x Fk(Gib)433
b(eine)h(F)-108 b(unktionsgleic)-36 b(h)g(ung)432 b(der)h
(dargestellten)h(Exp)36 b(onen)-36 b(tialfunktion)434
b Fg(f)576 b Fk(an.)p 1 0 0 TeXcolorrgb 921 48336 a Fg(f)142
b Fh(\()p Fg(x)p Fh(\))369 b(=)f(25)296 b Fi(\001)f Fh(0)p
Fg(;)p Fh(8)9125 47853 y Ff(x)921 52873 y Fk(o)36 b(der:)921
57410 y Fg(f)142 b Fh(\()p Fg(x)p Fh(\))369 b(=)f(25)296
b Fi(\001)f Fg(e)8067 56928 y Fe(ln\(0)p Ff(;)p Fe(8\))p
Fa(\001)p Ff(x)921 61947 y Fk(L\366sungssc)-36 b(hl\374ssel:)874
63939 y(T)-108 b(oleranzin)-36 b(terv)-72 b(all)435 b(f\374r)e
Fh(ln)7 b(\(0)p Fg(;)p Fh(8\))369 b(:)803 b([)8 b Fi(\000)p
Fh(0)p Fg(;)p Fh(23;)221 b Fi(\000)p Fh(0)p Fg(;)p Fh(22])p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
13251 a Fd(___/1)p 1 0 0 TeXcolorrgb 48228 15243 a Fc(F)-123
b(A)369 b(5.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 67747 54804 45 v 0 TeXcolorgray 24746
81281 a Fk(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fl(F)-239 b(A)623 b(5.2)g(-)g(5)h(W)-179
b(ac)-60 b(hstum)622 b(-)i(O)-60 b(A)623 b(-)h(Matura)f(2013/14)g
(Haupttermin)p 0 TeXcolorgray -741 4907 a Fk(5.)p 0 TeXcolorgray
651 w(Die)618 b(F)-108 b(unktion)617 b Fg(f)759 b Fk(b)36
b(esc)-36 b(hreibt)616 b(einen)h(exp)36 b(onen)-36 b(tiellen)618
b(W)-108 b(ac)-36 b(hstumsprozess)616 b(der)h(F)-108
b(orm)921 6899 y Fg(f)142 b Fh(\()p Fg(t)p Fh(\))368
b(=)h Fg(c)295 b Fi(\001)g Fg(a)7137 6417 y Ff(t)7965
6899 y Fk(in)434 b(Abh\344ngigk)-36 b(eit)434 b(v)-36
b(on)434 b(der)f(Zeit)h Fg(t)p Fk(.)921 9444 y(Ermittle)f(f\374r)h
Fg(t)369 b Fh(=)f(2)434 b Fk(und)f Fg(t)368 b Fh(=)h(3)434
b Fk(die)f(W)-108 b(erte)433 b(der)g(F)-108 b(unktion)433
b Fg(f)142 b Fk(!)p 0 TeXcolorgray 0 TeXcolorgray 20466
11850 5885 45 v 20466 13842 45 1992 v 21265 13244 a Fg(t)p
22489 13842 V 1553 w(f)g Fh(\()p Fg(t)p Fh(\))p 26307
13842 V 20466 13886 5885 45 v 20466 15878 45 1992 v 21175
15280 a Fk(0)p 22489 15878 V 1620 w(400)p 26307 15878
V 20466 15922 5885 45 v 20466 17914 45 1992 v 21175 17317
a(1)p 22489 17914 V 1620 w(600)p 26307 17914 V 20466
17958 5885 45 v 20466 19950 45 1992 v 21175 19353 a(2)p
22489 19950 V 1373 w Fg(f)g Fh(\(2\))p 26307 19950 V
20466 19995 5885 45 v 20466 21986 45 1992 v 21175 21389
a Fk(3)p 22489 21986 V 1373 w Fg(f)g Fh(\(3\))p 26307
21986 V 20466 22031 5885 45 v 921 25130 a Fg(f)g Fh(\(2\))369
b(=)p 1 0 0 TeXcolorrgb 433 w Fk(900)p 0 0 0 TeXcolorrgb
921 29668 a Fg(f)142 b Fh(\(3\))369 b(=)p 1 0 0 TeXcolorrgb
433 w Fk(1350)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4907
a Fd(___/1)p 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 33475 54804 45 v 0 TeXcolorgray
24746 81281 a Fk(3)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
