%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktionale Abhaengigkeiten/FA 1.6/FA 1.6 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 08:34:26 2017
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ LMRoman8-Regular LMMathItalic8-Regular LMRoman6-Regular
%%+ LMMathSymbols10-Regular wasy10 LMMathExtension10-Regular
%%+ LMRoman10-Regular TeX-feymr10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktionale Abhaengigkeiten/FA 1.6/FA 1.6 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0934
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: TeX-feymr10
%!PS-AdobeFont-1.0: TeX-feymr10 001.001
%%Title: TeX-feymr10
%%CreationDate: Sat Jan 5 18:49:54 2002
%%Creator: Thomas Schröder
%%DocumentSuppliedResources: font TeX-feymr10
% converted after April 2001
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /TeX-feymr10 def
/FontBBox [-178 -195 823 877 ]readonly def
/PaintType 0 def
/FontInfo 12 dict dup begin
/version (001.001) readonly def
/Notice (converted after April 2001) readonly def
/FullName (TeX feymr10 Regular) readonly def
/FamilyName (TeX feymr10) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /e put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3166449D69AB0542CB99558019EE
97CFE9FA87FAC14B55E860B5663A3D528CD3784FC9647A2EB72CF1AF4E31964A
3073722CB69FA5370CC5D9CDBF105662CA6188C1B3BFA7658F71EA5765A0D152
E60FD5E1DE3B99CE70C03D8CB4F775B5B17CE9573F5046E61444C0DAFD894CFE
E17604820BBE5A8FA11A10565933C0A8320DC5D116C780706E315C54E72426DD
AF1E6786D883AD182ED327CBB03C39C1A2602471C39296B7681215EC4F0E0E0B
264FBAD453DD3B112065828DC04E265255F9FB51F5EEC233C6A752ECA0246E0A
A2BA69049BBF94E6C8F510D29A7735AE4D122DCCA7B22929270D51C3F1E68174
E38AC54D6418690C765264C7897AD12A84B2C5269A6BFBABF05C20A37C94D927
81FD24D7817897529ACEDD9B062949D02FB9B0E1B2D0BF765675BA16EBFC1C7C
DC437BEE4D9FAC437C6B9E5B0C00111499A90E1BD29C52263829FFEF1946619B
1C81623A436D2FBD670D126855C400F38CE0C88122C60EA0D331AA9636B27218
0CC9B0EDE940FFB5EBCF83EDB330F8E83C7166452669E04F2E95A7718ADBDA8F
F99C2DC815F7ED17655111692621430D077DE661F297A8B6A33FECC10B3892A2
4F8E139F3E446CC7D7F5D64E4DBEFDAD72AECAE4D64289A3E2BE0212CF4A91BF
04F60B14E7522795440054CCBC40C49886656B6918198778A498EDBE40AF4536
7F96E77E40A9D65B1D5447D2596B382447AB5549A11BD5B765F9133E1C5C3071
32075009D2AC8147BC53B4C07B14D548E0F914E600CBF320E1639435733D7563
0053CC74AE3E7F5B9741E8CCB3DAFC411B5F846FC583B7771A7088B1C9B9613B
86FBCA1EE9E8263406C1894EE246BE87CDCAD2BA7ACB7030E45B0866062055D9
EBF7F562FAB6190196A7B8AA1B61F407B2BE0F537129E27376C8DDC7C6416358
384B2A676AB3228144586258F2B82A5BD9AE9E5442462DA626088BAB0C29E8A8
0EC75BF6E5E897761B5D095E2A8EDBF2CA742F3BF155B4DF28110FB8B7FB9A6E
9229F9D0B47376BE7AE5CE6A6AD32F50B62023CB32E8E0CBCDE2110AD8251854
5F8934CDC91E522248E019A6DCA06A0C2D005D541C6ADFF72812F474050C709A
5ED08B5F83DA1FD76037AFF77515188E13073B30F9A49A970613659071E0A130
5A4DD21C42ADFC1DF8CEE802CFAB2A75B7460E9F46DAA8CE31D5F287D3163B98
5966C073653074E89114B1B8A097A43E58DC5E49AC1F70F04A922FF9955F9FA7
20A6FCB10A2670BB3F44D959FC897BA487147A0FFDDFD368EB1A41F4CCCB619B
A362730B373EAC754EF5CE2692576DE100E10402670F41FD38F11A1BB43B7F42
B4BD7BB5F4322C4A9D04BBE445358F4B59B1A5C85FAE03B06C950485E5B304E8
BDA4BB926C21E17B3EC2D4DBC9353CFB90DBC6976B566C310DC801A28907CED3
2126B72E26578DF77022D969D09E111BC1C489E88E7B0315E926B0376B085BB5
3CEAF925AEF208D454C49A6B239924FA18001BD1A7D3EA4E7904830A6A948A79
F50CA56EA772D92627A8380A37F3C30845647AB612D5F6B5CB916996A0EE6697
BC62B6266F4314BAAD796EF51EB965F7C30C001F16442E0CB7A6984B78AEFC46
7D6938EFB347E3287600228311BA24326714E77F1932B80334F933C2926274FA
21BAAD0605BBC9A01BDAD6D5ABB885A4E651B8DFAB60487319C1C386CE6A17CF
CE6F1E639526FE52759F1C88A2B52EED4B93C0AEFE101EEEE8C108F389F9D1E3
205904304DCD3F06198594F313F1BFF10CE7F410ABFE3BD5F47CC3D7DB91E197
AE2EFFB9015482D6C79EE33D31EBC91E7797ADADAB7F682F72DFB7B0B0B6AE27
CDA9C0538E1246167FDF86008881E9F917291B498DFD93885C05A1AC6F3A7C11
57128C3D6CA767C80C7AD866074879C24CC063341E85B910ABD13E4BBC7A48B1
53E24D05C43CAC6F3337ED734614EA91EBA620346F23693C7FAA9F488FEEF7DB
E525E547787CCBE1B9824B1CF0B92007A8884194388AE40560BE9D79CD4DE9CB
96359F98E85F2A49F75B7B66C6444DB0ADF62964CF1A47855F8C4688F95EE5A4
50C96A072FB8069A59B20CD2FC703F2F90D3AD1BAA56A93E3D2E2F33C6E2A7AD
258451B1411DD8DBF07CA0246640732F5ABE58B44AC29D9EACBB671334A141D5
FF7CB44C5D629EF4C3E479B76B6A11B47AE63003DE140FB162E88854291E52CD
218D3E70E007E24FEDE321E5814C501169EE40269A4130721A95CB23F48C32AE
DD7B0B4F6320A76DA8A605679B0863982D6B3D4903CD8184B2B829CE9FCBF77D
6CC854455B66AA88CA78910178F748BAD7A4F32521BA7CACB879CFC719BFE2BC
13CF49FDAEE217C53CE31DAB6FDCF81ECAA2E72A2CF15BD84D275BE55251F82D
C8A19F36545C0BDA65AE10E063F5E05A8DB056F7A41D4DB694C98E4246E3B38E
230D155F7ED10F13F00679BCDF5604F46E28FD15B81B55471B8262F8A2F72AF4
E5387E41E401274B350EEFA6C4F03A1E6E4A6B16E528088EA3C7E0299E38DF46
D345559937225879790AF29198B2FDEFE6FC99C66C69959F3FF98F67C07CE90D
F2993F8732E88A77355D4A186BBC8C299C85DB3CFE829BF9F22AA8D3BD63F0D9
CAC57A7CBE25193B289D8A9A614DA9202F69ABA8FFB96F4281592634A7FC4A21
456B69BF77848502657B7B934003418D2BC937720E67D4890E00A199636842D3
DB74B2F004A6E3F3EA6972D62C62E5D4F096AEB2F194E77B656822D9CFF41D2A
7C14F16D7F07E90306AC87B528175244B92D6C10024132A3A1FC2FE78F688904
3568D0BD312C635BF2C024B53B5624F8B17BEEEB424E619CBE804E24E6EE1BE7
3F159A72AB7ACE1C0347278BC542E4525E503DAB0127B4DB6D8538634CC60BB6
7851F14F0753BA3838ABD61E83ECC39C427E62AD4293F672F8E7C2A49B534F60
E877F23EF5EE0E849AEC5F5E12463F6F05D059854D701CE420D546867EE7E6C8
7CD2553F33682A0BF985671C6433700CA8FFB638E7C7BAE78BDFEFAD10DC5846
AFF08F08956041F2912B4D70FD34495C96D3F9B091293B9C738CF5C9563277EC
3C6863C4A69B09E4DDD525D77FD06C322DAE13FCD48A4EA7B1B6C8F0256FC16A
3B47A4BF0DA1C49EF53974B4BF01C9BF194CE7EEC2C3AFA9E4CECD8C4029CC6F
377E4269806EB0FB78AA812F1513C2CEFB8F50CD18615EBAC10976BD12CBC1CE
8CCAD0333D455C3ED1518FD7F80539AE63A5045D34B982ABB471ED8EB18B50D3
1A150C82182B6C31CC9B161A87361A6D96B63CF0D97A286090DA8CB72991B175
EF3D690C64D9CB5EDDFF5B00B7C179825A1794CA054B6F7A8CAF03DFD7E62F10
CE5BB34BB02E50AA4DD4FD704F147DE3DCEBD3B1DEBAF3483E01CA3076EB19A5
FA2A8815CD360568A9A05176CF4111CB27C54BC8B4B991853982BB7307283D8B
93E5A2D6DF853B6E17BEF7C06A182456EB73D4A1B77FD58A853B07B04ACE12EE
D04046A4E977A39963B144EAB63C7D27F2EE65F677B9892C999BC81B3BBDA70B
E7FFF8E673275F9B84D39E641BA990B9AD160BB73CC391B6C36A7C1D68438243
1606D2298D58EA3879D2CAE2D285011E229372F7FA98F55556F0C4007621168A
A3C1F9A9DE81DA70AB287ABC70C4BAE94321D94FAD2DC3754CA39F689C8221E1
6E7E57EA41F552EF612080D82122D5733CC48978F6BC62E40728DCB3134F4536
C33E222D0E79486EBF9A506F92CCE773BBDF3A764B3793E96393DB8EF1FF0FA1
F3801274B7B982FC53258A752D43261486A2A94B321D90C9393EECE5B3CBFAAB
D0BBA6E49ED462B20AFB384AC2D3E290BC8FE7805D5C0B0D37F04586BDC8C812
686C653A47B40A803819C86FB0C8EF10AA1344350972910363FC0E3DB49A5D75
BDBED15C823E1E870E2F0EFB93A856F3A63E28CB7ECBF17E444B271FD92157C5
8727745CE16AA9376735A8B02F2CB426BB91CCC365CEE49AE5C9938B08DB12B1
EEE55B954D3694FA0AEC0836883D86F6EA4E10ACAFB7CE5D16F858F6DFF1246F
B2135837B67DFE58003AF012885480947A19B0F90980366EC245AE6D8D33FD30
E080775680F701952B697FC8FC07A014B78DEC48017E46AD78EF6EE80BF81760
B2ADCBB63D91D25DCFC77F2B8867BC0092BD9DF8EDD0F7DEDF2458F1F938D05D
DD4C3A7D4B3008EE86F787EACD7C687B6BB09D362E814AFBC75209C457A19F37
C9780469DCD173C5E5BB7C88F4A8FF1E664AD95E1F5D005B4F15416A320366E4
41E5CE5C8A53B64D290AC210490EF404D08C7C93531FF8CFB841AFF5A0E5A8DE
1E25EB0D03018A76C701E737D941569CE252FF92E3C0A05798F47B75B501B03C
D92B56739CF0D76A13E06283CB4F55177E3D6B28C265954DE0EC80A4CDFD91AC
A2FEE87917A4C63BCBDB24928F99D4836A62D3793411FFAA4CC7B12C934350E8
0C241E5C83E1BF8BCE56FFB67F9C7970CD00D64E7CF92F0A9CB5E672852960AE
8959AE74D4DE18D69B095F9F83C2D98F5D6D14B13E76E4686B85A3B606479B6D
F3B52D950EBCFE01639F6B0D9C205C947D60F2F0540D0E8B1B78AF3C5376F94E
D5769B92FC21082A872ADC4BE261FE71F0EA2422B17EF9C0338F63F4D4BA4AC9
D6C76169A46B500885E2CFB8671C053163F186C242F539453A72E3CD4F416A30
6C7A154B28FD021A13A11C78D113E65FAE2A6602D55510502603AD648CA7C698
E61A5B8F3689308EF934594FC5EFFDB86BED8324C690350CB92005EA3EBBB9CF
83EF65EA37BB27D684B89F18AB93968DBB6D0BD835EDDBF6F9425AE707A9E732
7418E39DC60A6EB89299E14D62AEA38D7E1ED70829196DB28D4906BF73574AB4
5DCF1FD068BE2B5B597021EC43C0396D5F172A723556BD8937D6800A6CAA33F6
A061415D49DA0ECE5C1959D9AA8513D8E616BEF8C9411F93E9FBCB6D2637AEDB
B0E719D54E5840E6F71109A5BFB26839255C305080216C0FD2477BA7613C8198
8EB16ECFFBB6D745422204786A17705DABE8FC123005E476FECEBE1C3E240E66
9EC0C64922C42D88A87D2D9766DB3E6273110B2F9281D80F004D184E9484EF54
222058917A0DFF5AEDC9213979C8716488573FC308948F839BFADCA37353F9F9
C7FC6FF049F4DD9DBD476228E880E779C7122C3823385F85F86DA752C3E01A8F
8A103A854A8545E4109BE8AD304A60B54F124EF2A6AD3E5E7EBA6AE533E22954
261017699960A1E27D714C2E2D370FB1449ED84B4169EC1057AC8AE70B3962A8
2A16D2F5EC8818734A52C2211FFFB785AC27000B218464AAD820DCAAB31DBD3C
2F0ABE99FB90E8A188E9E95E3320B650E814FA72E425FC6D0B5E245330843CC3
DB6AB767C90E8EDD41E12FA1973E681A7180A3917CACA630FB0BB7A62FAAF292
EE1F836E10730B4797B72E335F6C291A3BFD7F71EE335C3A6233735DB2A379D7
4D1CC655A657023C0B72C819D778F70D9654BDF7C3DD44B733468029F6DBC37E
1D00A80D8D9E7DB37593FE4C2AF5E00949062085BDB51E9448A41DB88FC7401F
725593E1E2281E1F880F829778EEE4197E71F8E59420EAE7964C98BDA67D7224
51A7781696EE91A0E6138EEA37EEA66A29A778841BAED8A196FA2C9DC4DE9BD6
4915CDF114F441422F0FE6F6DFC899C05D171FC0E370C9D27025B9407AFBA04C
19CBF35CBA1E6328BEB3DC8BF3F27EADDDB063543BBE32195A9AB39C791A053B
9D6B918B1E101C98DA8A4EB26FB47BCACE2863C768381DF68C4C8033BB3BBEF5
E93514207A5AA561F78B3F9C70C691B40F4ED7449650276BAF866B77FC16D797
B91398B1797FC8A8CB148D5C234F59A7E4E6F661431598B68DBA780DC8B34A19
AF4EA912CB694B86D5C7672E57EC16F21F87944F7585ACC0847A31E2777D0068
69A9C658B4729A5A2DB08E093EDFF069067F02F93C4495F9F171AB52A1A5BF64
C71D97FA60A71E3E705E51531028D02B1AD3E8E032AC8E599DE4DA19227401AC
F79915BC3230D5D90FA77C29DB133FB7B4ED7B0D7BDD3B018BAB38126626BE19
57BA72362A12E23AB2C4F2C20CE67ADBB39FCC59111A7A0A61ABB82CE1711D0C
193F0D086B49494669F901CA6013B32E0160B72239DB3C2E229535BEF14DD08C
A8E603EF0B6A5D6FD9CE8EB6DEA304E959E394802B82E7C4BC31E75E1CF077A0
6F520EC408B4237E2C5D41DB0B4395D891BCFD008BDE2F5936C9B7D3D7F7F9D9
06FD7B552B784F7814AE16D8351899FC23B6772BB69B5BFB57D118FFFF07511E
8C6E994823E198A79376EF3E24C11B6FA1F6DEA71942741038EB332490625EED
2F92A7EAA26C64B36C180E45C35457FEEF8039855872511C30AE0BD536024FEF
2E0F40D53EB1845EF5EA9E10FD5C63E01D074E58590F0C8112BC26F1969F9C24
6A4027E715AA573228315FBE916274AE6D17F25A21DD9629263D6D83E1C5E6F0
D0A42464C558BDB4FDBF9201F57C808EDE384E12A8235EC30E90CCA8AA3C36CC
C09C6A6D74F9A30B50CF7D4ADDBFC902F6A006AACD90582B29ABAC673E1C6D67
3A70B27EEDD61AD0C422B387CE691F8ED807C137C5841779A540211331282F9C
2997E5A81A6BE710AEC12B347D9238B584F24C63DD4A34D620644424F315D15C
C710ED000B0D28DDB19A4D99AC1E0E5589B7A6F7B2C86F2F7FA4CB217F201436
991656F10224C5AA8341E6658ACFBCD76E73AFAB6E5B0FC14CB8AA60A1E845E7
5AAE0C73DD9F872EE3D28075C27156BB8D803A64E4126866360A54D16EFA11DB
13E7E52C0693982399545875D6ACAEA88BA0A3474783CCEF9A4B65EE64958091
8951AC0C438C2B0413761A253A43579B0B640FDD1497DE8C21A0856E475510E5
142E3842906AA80914CDE9402E4B37D2A6E53BD127D2D3AD5149AEB5ECD8CE0F
A7609D35FB71A5E542B436D5C7D71A4CB29EE71D11E0C2769C4FE6E728D24E56
A0169D3676D3B731B35E37C70B8015A53A9C15AF4F78D0FBDCE03FDD2C3D52C7
5D852346EA02BAE2FD29487245DE75FBAB597E741336005E4A549429A51271D6
5CBCFF634640DB0D056DD5EC6D5A7DB00E37F666CA703105ECCDBC670A47CDB7
48FE6D422825339A8CA5AAB0B1235F8D8BD2F5D6A3515FEFD32540521E20DA01
A0141AA1F8B223BC02156AE4E096FED912A6C33DF4E150052091700123102EAC
E6AE38599BA0A0CB94E1099475C28A540D3EBC4EEB382E906F6B4A1CE6940F16
77D474945B0DFDB54731F85B138577CCA34AD3BF8B7677378DCCF3999EEC8E5B
5BE10FE19D636B006E7D7290A3DDAE1DCFD312C2726B08676AC7B03A9E5BF580
BBD88C779EF23B655F9BBBC31F4D54BCD94E4D1FB85ED55AC4475DE0DF309494
49CF2BC0A9C60D7DE24DA0C0AB8F50953F4DCE4B2FF8E60DFF1EA75F4BAD4B11
3C735758AE622B81CEB5A8F845B2547C6A43812D4ECF9C9E042425176A20004C
2C4A815A38E237DA4ACD903D32B7F9844B2E42AA7F5A5008C4CFBB51F2A20C24
C4EA6D69F6CC5E79CC490EBDB8A9D4AF6103A6CE3906449DCD35B922EFBDE023
3D5ADD67F4F5BCF49D61F67FB313A8E2F92D29A0B15C6792D299B9510A5DFA30
56DF9000191FA35C2999FDD7132B3EB5E95020B032C8EE2BB4543DAAEA0DEC97
3133A99719D7ADBB2678384749B7E1ED994548266CF51E5DA1E7D78283F24197
0EB74E258585FACA9CC47BAFA7AE9E116FC4A042404FDEFC6D20C8510CDE6796
BF13356BC9A3EDF5DF353F6CB8D21EDF5EB9B50AD6BE2804F23B1727C373DC13
E4B7B7F5F1A0333C4BA7842F4E9F3D067DA11B64EC3D1EA2AFD82DAF0087AD2E
0876AFC12C5777A2743F938C01847747CC7525DE041402CBAA4C45F273A75DE8
528FD3BC80427F9E3AA1EAB57E9E2F625484D388DBA06AA511B556E660B7C58C
232E6191D34214218E9C35838F7532579EF7430063A099A176DA59B024B2CE56
FAD58E3E9AB280F49EFE8B13EB67D91B6BF3BBA8BD16CB5EE0B3FB9BEF37503A
F4114D06702D250FD78E921D8ABD0BA3647C711CB3FF3CB1EAB2DD7137A9CA46
4E545382727CD0F1D75102D7BEB5737B3D3009136C2DD9950F1DEC8859F21328
330224F695949BFE58241CABC4D378ED409FBA824D76C2EB94A55575E0B44B99
5F05EC9CCDC503CEA55FA4032192CEB9D7160B024084A468FCE4AB2F876A1B22
2FCE1702E00029F29A50C636A6C59226685F2B7F885CE26FF2D2836BD9C03367
13420C1A8BCFCB324EA9D26744B77B4BD9099611FC2209A53321B737E518950C
751B2F929CFD04EC824A2439E9BE1C56A3A02420C2B86C24BB936C7752DFE88B
A682B788BF0113BC92352E873AFFFC279F2F3ED949F3ECEED537F134E3C8A2C0
13BE80DE36288A86E93DB390E241AC83B926EAE86FFDF45E037CC3794DDFF403
DC64962FAF85B9714D399C221E36A633C0BB26EE127EDE93B54A6C34C1B1F322
7503847E9CA4622FF6CEB1E9828DABB65D66D658349E0404BD3E7871E3952C91
81DA87EC0F40B008BBE4253D7E8E7EF16C916674FCC41131B68BA2A9FDB59917
8206CB366282C90FC91B59C8A0FBBB26408CD0110EA1587A07E4FB09130E5B0B
852C429A88461C2C51F924B919B8C4F98BA8BF058EACE6ED42C208AAC866A1CC
DB9FBF4227F1CCD9FFAF49713AE4B85EC34FFD123CC49EA507D36DD69F0072CF
B01CCFDD0BDEB72A427A0485F0FEC84B315C854A341951CD338D8B4E7A77E3B7
41ADBA8C621DE2AEB91E65A0D3E1BDEBD508A0CB08F4C4E57D8481592C817520
4B6BCB5196CBA074
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE279918B0B31E08031DB686D518B4CBB8A4D0B
EBF6750A452A7F706EA676E3B3237FC5656B29CD5A3A04F82AC871B526CC28B3
A61D985EEB3610FCAA433B9C6D4683C512F0FDBF3EE6FF552D7BF0BBBBA37050
FCBE3F164189FDC8446ACDE8D0D4050278151B46E56AF826A0C2E9389C2B8BB8
E38579D281D5142944D3322E1C66D456E4C5DD727AA41FA5B369D5E10CD71832
A7DD40DE855B47289C449B6AD8D5F1D557102050EDA5F1641EAAFDDBC082E579
A06D8A3A323458808BAD0F4B8A2BF406DBAC4C5F555EC96E760C8245A1AD9F50
881DB475F892F868823CC55D4859C09148529FBA57A392127B68F5366491D1BB
097D8FF4A71966D42DD988F48C8A1F4DE0449E6AAE79500C42B4EFE4936D0D00
0FB339115493C16412F1D6DCE02BC7B485CC108C6321EBF1C609633933A576C6
B0758D49F3155D448D505F73A5206EC1C8886F5949790A7E4B850B6B8E31EC18
B7321E63AC75B6588774961F6B7D313B850AA4B368E48DAFAA5693CAA236E150
E02FB2831359FDB95792B2E6431DD24BFA8F2B51BC21E2E5AACC0CA211F50A13
075ABCF9F440CA468403D939B91520C652F1196EAF1BC975E26F8057F69CB972
E976F99070AD3FCD958C1EC54B3994EA142AA0615EF7BC00D85F75BF5F32B350
E2CF46BA0E8D0120BDB54910E5C27A27B59664E856EDDE290103A0D490FD76DD
09B152B3AD1C4754696B239D4B13935AC19769600943C7343A5E7A06C9115395
DC2F92EA95E5ECE5A08EDD16DF74B6297EC0220C91F8BB9AFE742FA96456E131
7D41CDCE88A8F9A12D46B8FCA50DF4433B0B8AED6A63BB5FFDFB8D48D04F9849
2972699B5667C0D2D206F4785DE20A854E1D4C655A690689B7B5A19F8162E5D8
454B7A1CE94AF723F47C6B168CB7269CC802B14545C8448B5C260C6AAED5FB23
2390D7239C22534FEE644AE96C5718EFFB9DF1AC47CB3022D3751E6B7123FB71
403E154150FA4A14EE2CDC8F0BD084CAB30272E8F065218BA88536F138B94AFA
D750F6EA9BB43271084CD876A14CEBEB86283BDB500BBC0F9E152C30059054EE
92951E4A202AB409F7D16443DE00ED69C1FA674BA3664F8BD00C08A27F475C00
E6AABE35B01B991AE910B7DC821CFD8A6B5C7F4B116E78065CB219C926D45163
EBF6E81EF0C38076871283D64FA5F2126CCA7E93636A7CCA2158B99A15CD405D
4AD290CD8F7AF8845CF78D4BE9C7F2E4DC00372530C64BBBB785117A8AEEC190
9F49C82BAD55AD174D38A74582CB367BB50ACF8FBB2C8A2EDB17FF267D0F21C3
5BE42CA518272C9F9FB2DF0780C957CF1B9734E9F49C0E6EBDB5D24ED5D673E2
6A25811D4BCA9D693EF8ABE784D2BE46DE1E57E1B738ADF6FD49E6A53BF48C6C
2A73026234D3719C72C2FB8B8274AB54A6853DC6784398A6B994BE424B6E9078
6C303D590747608AF3CDD6A51B5612DD5D49E1153A25EBEAC76FEC601CF4D10F
65DAE3EDBF9A163BEE244542BFD2849D498C239237ECDCB23458C7C3B9395C7F
900C2AC7BDEF8FB9D4574698BC8D4E374B34969A885A0A4AA26F19F8348EC621
89B42297868AD2C3E80D95C41FA4A5AF7A016D3C773E040312AA0240DE24C7F9
D662FC2E59673DEF563AECCABF724C09CEEB5DCA64FC6D24A091A75B5745DFEE
F5C1162900B5F1EF5A7102C27DB1918679E7E354A5DABF897D9C8EF5A14FA8DF
FA3A7B3D47542FFF5987268E60E7FD64B017EC6A8FDB4BA5AB5B5B58046899C9
C5993E7302C870678DEBE8FEF3F2438217BA5121CC668458620DB3D381D56770
19CDD612E5C0A267BE4F707ECE93B3E1E8BE65922315729FA5513AD13B562C5E
E145AB39905815D6C3E8B60AC5C1D4D7731E2A6B122C6F57790C42B0368AD7A4
99EE5F029AA6F8E302F4CD994EC08C00AC6A66C51254F71280CC722402E200EA
D4F6F489DCD61B81CDB85804A5EF00CDB09D9C2EE4F3D571285E319A78F90942
1C31359DDF81F38F6E8615BCD0E6CFFE077688C365888921E45608C868A0F6F9
D726CB2CD81B49A9F47C12FF76284D3B07E2C2E788036B4867F90D40C1E4FF74
60399F1F08F98A05A579D00D1ED5E8A86BE9DC1CEE3FCB03B9A0E4BBB81C849F
AB1A6089E9807455A5DD78B2EC3090E36EDF4D19FA6BBEF386127BBDB53D25E6
8448A975CD56BE0A93070F848850FB9B3B0285C7FADB28A3711C06273B79FBD2
A509FDF7AF81630306D67E0AAD0DAB78243E1B814F745234BA7CD57325B5A34C
C3F984018DC9653649786481788A6F58ADDB87DD0D883AF60455753850A63756
5EBCDE76329F5626E6328EBE3DB5770A4C3E21341C304F38845FE70E091803D9
D14037AC4AA8C4D17EBB62ACEFE5344982E0F489D72EF60183D8F2A79A3AA765
C18E0479B0255870CD61C8CF7AA8DE567D174EC90945404C5B928EAF3E8DDC1E
018442474EC6B0B42DF539EC1557722299347DCFF0347BA4273054B8062D3DF6
FF094944AE472D60DDF6CA62288E4E780F8614C7749C9406325C82715C866134
637DCCE4848D2B051B8E0EC7B88872E9AE68BB5DDC30F4A61119733F6F6DE0BF
4C6437A849A661B6A233B1C24238BB910C11D2A8024C89FB5DC745489AAC2570
4C61242B4B1983A5D0B134C8052495CBAA9D2E2E014641BD58F0EC389FACADA3
08A1723A5C2492BA0615B0222EDD152AD19C307118AC0086653521EA59D676CF
C36AB586FF1FD4C383E2785EAD36F41274FB0BFF9DFEADC612CA44A7392D8E79
1DDE1DE818BBF26CE3BCC2569F5CE6DC91D4F8B7800A05DECB300CD7A8C38D77
4C1DF436013901C9671F77F34A63F361C5579EC5E00C5A8E2FC97874F6459EFC
C1760E9C6C78E60CC0152340DA6F26C67B2E10B620750E2C44E5CB9DCE747E29
6F7E716E6BB12B699A2FCA90DFB3DD730D96D100DC5B1BBB1632D7015235F4D5
1C1C753EEFDD6ADCEB45DF4D00713744039C43B860B5A9C51AF0BEF11CC8E85B
067A402342896C9B3BAAA570C4900E12D720F2812F28626DE3BD3F3426B82718
259AD02CDB518BA4C4AD8F261CFEBF43857EC7A543ABB1E059247E276E206CB0
0BED125C8F78A665901F80068C9B0AED83074C6270B177BAA18F1975F43E9160
8B75D86D9F7C1E986C2DDA71CBF33FACEE675B943764AFE71B5A359C4A092916
3E8EF660794518DA4307AA5B38469000FBF31BAE9CE8703754A099D21B332D3C
A19A842755A79DDC1E281A8C34A969B80EDC946658B7579B5BCF07AC8B45C2A8
3664140E70CA62DCB3153CB4A8E46F12CC16254F52A26FE47FE41504D3E851A0
665AB60BC0CE5C72512D196F8D1BC0B3FC12DA2D13F4B9AEA2D017EE7E574B86
2576F5EA495F51E1B3A86090ECFDB57097EF73BFFD5E41E8AB6BF105F87986D4
95940A8B4A29E4DC974554DF975D026EA92FC09DBD65783663CAFE414B6F8C06
F00A26631D7FCC4527109F177093E7432F5FAA6CA14F1654ACCFEC8FFC127488
F604E972B695E9EF18F331A58BE4704E5130FB4984C3FE2474E6CF0935F90B79
7221D94774689E83E5406F5D9554C1284249C687A6CF5A6B4783F54267C48710
32ED406DE854CD5E243C0BE4656E35FA02FAF5101E1AE6B7CB286C9DB979D763
FEB468FC7AA2DDBE2E708D27D89164B12BD8BDF0418BEDF018EA67683158D1B7
73C6EF553EA897D5F2D53E75902E57D7C4E06D7DC83F1C557ECF5DE83748370B
00EE03A3ADB919976D4DBFF11B246AF9C2FE922A8A6F8CD47656ED2CBC816B17
3B01048BE9D1E4B54ABC0396D5203D088ED7A1FC7CC863AF414AC14AC2D75E5E
EDEB706CFB2AFE24EB580E55BD31B793E4065CE83795F047004ED88F5C38BDA8
7F5FA8880517429B9C4E5FE980448EDF3BD57758FD145E769D4E88BF43D19050
DA58F5EDC7B4AA76BD8CDAF0B8639BD5D2C7552AF5415B7F35B957F02B962930
D3D0C3AABCE7BF840A7A035F2CC57FC978684570CF6C8FDB960B9CC6E9435D65
77D1CFB71D362BAD7280AED8771C6EE2F7E2D86C5661CDBEBB354B84249E93B7
7A0E409B4D5E17600E1E43F5EA1F884939C0AE467119F1E155676D10A8A35955
BADB667DB10180DF404F43A166E2E533F1C050D35CE4AEE92C35EE391398EFCF
E19EDE2E31F837DF86F1800F59C89EF6401112AB73434A3938E1970D8EA3CD40
C7B8FB44205899626FBC269C25478E0A63F78F3460EDD4F64B4D2A5B3E660B64
D293F803C670E243F0B0EB1C548746C08C7F4FAC0D4A7FD8B7369AED2AE9A79C
74C0FF0E0B0C1AD3B59BEF79753FDA3E929B52F207382364B1C62AE8311C4337
297E030CC0CE93ADB4E2FEB60E28FF6D4AF0010D422AFC137F2254FFF6C2929F
CB76A235705EC088049C1F1B0E78FD2D357BBBFB0E12CD481F96252AB7402213
DF9BB4464515CCEA5FE4C0CF761E921D7D2992EB24625547D54E3F2C644ABABB
47914DF3ED2C719753BB1EED9C435F2D571BEBA4F76A0AD5DFDBA6EC952A4F37
948B63263FA4097587802F6C66C3BC6E9DF45A22A24877E4A4499697D46B779C
8609E85E4BCFE84319532B3AC9D62BD413CC127C8DAEBC28D7DE5CB57A30F23A
2859902409CD4FF43EF6A99E9FFA2DB4113C12AB9C616F074276C4840A546A73
0D24D8518117AD200014839545B1078F38D7284FBFC473C510CA28AB90147613
F0EBC94C3EA0001043705336F16E783FDADA674B361F951D5152C0011FE0BEAE
51286E4979DACD3F5A953BD9E918D5E46449525A4A597FF0F091B2B4794752D7
EE5D9B94524DF768ADA1377760AB1ACE2D780F5624CF53DE046A36EFB35B52F0
566623440D7F364C4030648BC39783FD7AE189510DB572D01093BC4C7EE0C09F
389FF828AA7585F9B7FAFA718DAF925AA837B8C0B647161E5C322CA820521400
5D234795C9DC1354D1C0E5ABC997C64F3C84D2C3B7581BC9566EB6D012B6B784
F740B8E0B360808C984DEC73EF57328A2347BC752EB0EFF7BE8B688A3622826E
C83CC42DCA4A26C504AB95C5232A86199FC1295D8BC52BBA9C5089A346CC5760
009233FDE0B38CD4EC1D07A9F817ADBD1AA6D303AAF94D5FA688675B55D40FA4
3C6D97741D9FE4C964FC6D24A091A75B5745DFEEF5C1162900B5F1EF59402CD5
E4D0C3953C9493D87F46CE4E9C7A543364A9B82B34154924F4739C650A8EF8D2
38C73BD6689A0657D8427446E44E2F5C77937234D1D6AFCA63944D3FE5126940
8ADA00FF11BFB205B9A42EC1F50B435E4D44E14E22056FEA071D0061F16D8879
6C4BA0C670D0E715ED9333A0FBBD15F19CBCE5F93259A6C4A8CAD50B9186BF14
62D3AE2AAEA8A45E9A29BBCF83E95F0C65B2D60169538EDFAAB935FE3468186E
CD90E2F15FDBB395191E6C4659910683768F80764D94FE8A746FD06C08F15F97
3A528084C73A3416B7D9498707C04E9115D411FD74AD771B5973E6D0A573A1FD
2E01CB1197990EDF8444CC83F1AF789DCE5C7F64567C9D80D1829D7FE5F45647
ED6B99C6D96B728840A77AAB12DF037473065B62E9F3775CAEDAD9508FA92283
6FAA01D50CBB9B12B543AF2A86A99F4D544B8974F01B52945FC6ABCF3ECD8410
335AE6CAAA4F740EFA8AE1742B115F4FA7FD8E330D0B86B191FF5B038A5D0C32
91053A42460468F6A1700953700663A85229385FB9BC76B5FD875ABAE3E6DAD7
9EE2B71FBAA76C2CF157574A30CF7D71980C9059C3D6B6A3204F03427D0C1ED0
63F935C93FEC0118A7769C3492300AC5C68153E7DC46AC75E4031836536A9FF8
F9855C80511A27D667AE834A96925698006601802F57A614BA454AEBAD5381A9
33E9E2EC6A78543582AED8FADA73537FF0C6D7FB2EAF256CEAEC65106F666E66
BF183E0F0E4775D00C05AE65EAF85FB57223FA553494EDAC82855AB977A49791
5342A184DA5589E192F08B7149CBB9903A5809202C698AB39B218ECC7BB9128F
40DFF15856E79E10EA85E741412DF41F4C59FEB8AEF11EC7D1484B17EDFD7F39
0EE3B12312F51B3512559F1D609D0ED4BAD7B1C1C003F982B905BD7D67725C83
EF7119C2C4ABACC0DFF903C17E5B0BC25F89AE84006216080ECAF450D8FF2A1C
A4BD4256B7E56091E388284DBD11F5425FEB05566B96D20438400E0E78630FD5
05A174BEB44068BDD70570D038B3D9F60F63119EC9FA765E6E318CA3DBEB209B
ACED0957B2A13CCC8B93FF7BC5FC7C7A37AE0523EEAF1FBD745CE175B921697F
9D9FF0803559FEA21109882857594189F167F40EED0DF7150DB40D2B141DCC1B
60EDED42C0DB0FF95359E700BE2DC30F248D1BEFA38DFC784CE855754BC80098
5A57640B2B6105B2D2C996F6D44657DAF5DF5891AF008F869D7AF5E4EF1989FD
377E9723C5A85CFE645109B1AA5FEDE99BBB3800D471BB00C657884722CE9678
6CC228DD6BDA9B4F88DC224D329F47D8E9A61F56E5B463649E058E104A8537D3
D81053D9DFBC564791CA6CAFD44529A22B1E1E1B4FEB64AB0950733055DCCC2B
78551535EE5DA52B7AF5030F8AE1482312B61697C4574658A3E865BBEDEF8E1B
CD305A5ACF3C44E769368D0593ED7C9E2AB4B0184BC89A05CD2D29851EA57424
D2CD1BC0281FE40CC2D3DD1B36FCCC46801180D05D76D548B4D41FEBAF2A1E1B
7DF8BD5B4735481E2E64CBDFFD53A6555556089ADAB4DAF9B826BC53D97B4166
C60752E5E4D9771C3B3FC8F2156659677CBF68EEB3D1A5D8A8D2559C85177C31
784217D6A61BCB560C5ADF83A337082F566E73C4C3C500CD798E325C588B5B71
AF3DBF6D30AE540AD4662F8457859B8DBA51655025FA11DFE00469468AD648DF
75630D5E29912CD7E6362E528E075BC01117E45F49AFB2D3E936B548CD78AA6A
6FCF0CFD5A62BD50BAEA04E96DC81F6F9F742A10CFFDABEB17316F9CEC899026
7B1BD97D4734CF37B2C1255D017F11F7E1F90542E9E515490079815C2000B856
C14AC12D7456FF92C2678CD0084F1DFA0EC2AE8B857358C6C1A928CEA7F0D5FF
99461F3A9DA8509E7EE6AB98B4BB88F672AFCA3A553C55AA3402337C6C9B077A
033B01F3B878B9E9FDE0356382226C92B9537DF8C4F37383902B4E1667123615
FF99555E34634B52F0B8B83EEF5CCA51B26403A6263FA4C55FEC2B062491590F
F01EF0F36E918D98CF7327686AF072D547A5AD7A1C457D4DE11410C601C40F65
5EA32589D03360B92ABD1BF4762108CC1B72CF4BE2B3EE78D4C5714622E75955
FF3E78C4575D810E7E05045030378BD2EF0242021D85C50EF4F0FA7E8DDAA7E0
9A5C8225E5EDAEB91BAF1279E7930E73FDE400C7E7A7EF0884DDEC35700215F6
0737ECDD6C87E2764C59C2EFFA770443E21DC3DFC0F2885961670BE2D2CE87F1
1B7F474BB9591EB9678EBB5A676561BF61FABAB8309AE123A6CE6F839C2708CB
5A55F4ED91FBA9AC00C0C25D34BBF10FD8A7676C7BDFE23406C55DD3FA8E6BD8
9DB799536EE19B0EC9C57B38834DF8ADB373A5B5BDB1D57F414F3AE5A0B573EF
AEEA5D8C588DE556745DA3E386BBD02546E44C6FEA7C1D4EAD89507E04EFB964
76A3B4A2511E20586E9E24C566824C8AE99CCF0EA0BC1407B202F3CD1B402168
35375E0B9E13B07B4D38BF176C177353670633F29EFAA268D83B462FC0BD10BB
BB8DB7B12BB1011EE8D6C0A77A499C6C2DD120123D8604D4CA0EC412240A4B47
06677B5EC78742FEFCE44BF6E8AE22EB1DFBE8CEAFA9ADCC20ADAAC3C0C63CFC
3B7ADA39C0AA97CA287AA3B1931DFAC0A37BDFF530845861D5E5C2EC7E59783C
A27D5C82DEDAC7AF97962EBECEDD21DEF42A0ACB73580FE360065E6267113421
BF6430B94091A2B42A2CC2C3BF2B7D3D23763B76BD8F81F317A7974C5A29C373
261FC3D6A8451E60C03FEB118AE510A5A4833C6878133CA085D2E443579A012D
18FD7A725B42CBFFA9B024C740B0ACC084C0DD92E3E329CFC4E2B36E704F5A2E
99A7CBCE637CE9D77ECC1C66D4720DDBEDC0E0857B057D019BB4C2132324B2A9
54DB76FFBE2AB51344990FFB38A6DBEC48FFE206A0FBA50CEBE2BE28FD8E6DE5
58224448274777692B818067213AD4983B07D42634F8840B6FD878D4698FFE1E
AAB2F0BAC298957E4172F101A12BC5F2734A2C358DB93D76EDF6D0CA24D36D57
8A8786980F7B2F5F384A126BC83CB7D22D504C13E3B3CEC8F2FA394863533DF6
169E672CE9991EB8C422B5C54257C66582997E82470623B462508AB5353B6428
ABB42BBE9C1F6C104A56F6F15D1687C92D7BF00C6F8129E347C6489FD4FC798A
DCBBE8656640B9FD8DD7D1F131D312C2CF747D35FB85DCE8356892C857A51A8D
59DE97F8A01E890DA5008479343B609157F082AE2BDE83E736F2993D8C048393
BD80B70A1B9F5F844D4988A574FB12CDDD4F1347213C93275718A7ECE52E4B35
84DDBD03B345F3ABD2897BC9C6E0948720726BDED2B572EAF23F87D1B4E33DCD
967D167E9BF822D0CB8E1EF3F81C1626E3123F65357D50494112084CE01F2CA3
AB00BAB6D6C7EC825EE6AF47BF5B6F6AD18F8118331C87CB83A65571AB482E2D
E257D768E496946556E5311B3C8D1E40676125C5C463F511124CA3AB6655F46F
7CFD366BF9B140E1940E13D7443EFCEED61617E55E5BCFCB4F3C90BFB9F256F3
160A370EBA3775F4297F0DAD9E14CF669C7B38CB2D16EE53FCC59444A3FDD923
9B18626BEF4DD08E57DD9280429B46221987A70CB53C5BEBCD5B2C139389EA1E
172679B2EB1444E570E4FB2E9CDF31D967A9782C3D1060E25FEFDA9A31D6E867
5EA9335CCD9327F84018CAC0A2ACCF03FBCF06FE08AEB149A58E488D596E212F
E0A67ADBC2A0CD63EA4F910768719B316042736A73C196D8618F85AB3F011E78
7205BE3178501911715F16FD79F34C2B0C99F08A14AC86DDA0E5E1DECC2A93B4
82ADF9BFA9BA653CA71C9BD82D057EDFB79CBB3AB0F969475F70DE15FF67FD9F
8598AD4F7784F086FC1153C84590672247F6EB7DE01E820CF9FF3BEDF7164D9A
F89DBBE3B49616C51E8265379ED8DE9A58777D57B95A15D3B8F74B1D3101578C
35ADD0A8D9D4DAD5542DE899339842E6524793E24B0D160100C2DB33B804AE5F
F3756A44F596F7FDB278CFE05F885E3AC77CD882285266E081EC6D193B6D602E
72BD1D95281E7B0971095ECE0EC7494D4247243DFA8385DBC5760B397F0EF9DE
EF7EE029A0C0B16FBD2D0C35AC8DDBA4E9FDA6D4CE4408C1EE66EF483DBA4330
35AB967248C166797ABD0873EBC07887EB84556F43AEDEA439FBF139A16A5534
2C0567C63CCCC7D4581D1D357E52311AF227B3E316B4289EB592EA5CC31283BB
51EC9FE6F2A748BDE8B927C96A7B6A6E5489C5662EF190E9502C097B3D9123E2
13615EACC95D32043C847D11D7DA737251FB47D0B21212E70A01A68BBA1FFC28
AA0B2660C443D24320003930CD82995B6CA72A3CC8C866B77F225EB04390858B
FF70300B0F425D9FE00B3E354A8F91DF44F0FA4452536993F03928FBF72C029E
FF203361CFCB767EBA8D659AF5C78794A5D4ECE06E210228390284F3C645085F
C552479B717261AC64BE8AD8FD28A9EF8EEB25F6A230DC6AB0708EA9072F69CC
6CFDEDC298DF2EC7706E9F77C8A04B529CC5FA2D3044E9909CD4A49E4600DBC7
FE9A727D18EA999ED767B6D299B81268F3A0B7F152A9EACD5E0E0D21CD6BE8E9
CD765385D8B5DE106435BCC52F1F278910A7453E1D5E4495E0ECC246A1A96A67
E7EDE8C1B81FA5A78EE7283509223056560C55438755D243C5F055EB9D6BC533
030B7B24D1CAF943CCF4A65FEA89CBD68DD7C16D019675621BB45566C1D73A81
43C8A24C4A470432BD989259DB9F6C02C826516CEFE76A20C4B77FF5006F9417
D29C701FBBB72A57757B2CBFC6F5D915C260859C43D16849F52816E963DF69E6
5809B7A1A57F9CC512BDC51EF2549329ADE9B5ED66F92F3918E329298D9F6293
E8614966D596681698EF9F5C3F9C1E9D28B71A246B043CE44E65F6FF48FDFD9E
7F97A02DBD8119C5CF0B4AA548F1F5EE79293E39D818910A1BC4CCD59FE2E917
BCC939A9173872146DBFB3CAD4DA410E69C542CAC64B65F6B829C08A4EAD88AB
78C203C6D210C162942911B3230B8D462CB20C910E977863B5BC5F2ADD55C74D
B7CA7E9EFAFE44BA7F7A772A1DE9564A9D3E07106E7C3EBF116741C894BF39A9
0453F01FE9A9C0B99A0C829B31A39E96DB3FB6450A6FA72B393C1329F91FF6E0
5E273B5DB89549315DD15AD26482EB823194818E6DE249207343C37BE9B926EE
DA3BF3D70B7EA564D92A65C4DED8966517660EFB9F77E72A4463CC061B079BA8
C8459393D8766BF4B26E479DA5A2F4C3D020E853171B0D1612A3DFA5264D6B64
371271F687804E60080A4C7FC4641AC84D9C0A610AA270C036838AC86A8C6A32
2C7FB4E132582BFB1566DDCCBD1F5DA09879D88540FA56F817D5C1B557C9C11D
2D1E7D8E9C5608F8D6639843D08FBCAFE02A4FABFE9E13B8BC0F4FA28FF4343B
283D1E9906259C74BE3535877F54B62158362A2FAE18AFACC74586D3DD54067F
7779D9DA069D78960F4869F16F458083B608409F1BC136BE8BE912F59CF929B8
2718259AD02CDB518BA4C4AD8F261CFEBF43800C3687793CA934F06A27C78C51
22CD9EC73E29A912F1956FBA6AC4B35FEAD22394C03A72D4AAC6C42C085ECCA2
83F22890699F277A3B4ECCBCE4AB764ABC44BA382E8F9A0553670CFCE11E6829
DCABA73D9CE75D74A63FE035DA6AE09073B38E8EC302C923C417F577823C0210
444C9EFC2B351212FCB66B4CE90406085978F8EAEEA93BFC81C0DE48C09B326F
64EFEBAE47B9BED3277F15D4F9690BC324B840252750485AD8A5BE240B63473C
5E2AE49AAE5B3839F3E07B66DE9047BCCE989895127AF92F2E6F7BBE20572943
FB64EF33B2776180606E79F42F69D23D83720FA9BD9CBC1F322A39EFCAF58510
7BD5A5C188A4F3E799A32B23859A4CDFB52C22ADB4DB30D313BD8481157DE1AB
55FEA2AA4FB28CD56DAE1865B46C21E0E0E89F92C164DFEC115BCDA359B58305
C56E941651E321CDA67159BB74CE9AA7E2465DF8BB191187D14A7C115822AAC1
C9EE282505EE165C67B85CFD9540F40E3918B0F36799E9556526F5E5F2205DD6
41EE39A4BD6C8EC20F3EDEC379F90BDE98CB15B4BA24624E146098A7CC2A6744
4D326A308657D62DC3F52A76832779BDFDFB3E488773EC7FA5F235AE1BA3C6F3
547FF24606651E5887FE8D860619C6F45FBB3B6B73E80D855F5EBFF6A5BCEC48
48CE05C8BDDBDDC8BAD0B87F3BA50D36D20926718FD3700DEC250462972EF06E
EB9BCD3B1076ABCC3DE786B58C489534C2490AF71BB6460BABFBADD0AFABEA8C
80E085B2BDD8ABD8ABFBA9D53C42A61026E5BDAF599739777399A670671F12FC
2A455157B1BF595EA3E14929085DBBCCEDB86605F30BCF8E570B4341C3751A10
FE6C3304E9A7D21CE731EA372572B28F41AEC501195D34460B4CB7D6A079D7BD
85B9A80845B563220566FEB8F341AACA788E3A182971A143737D515EC7EBDAB4
AF1ECBA1C6E90ED114821961FF7FB9CDC8E87628938D6D0D86F3813393C1B0F8
795A88AD6FBC2E709568E556CB4D1016889B947CBDBFA2AA2F95E47942252534
868BC0BDD3AC613B165583560A971E20D13D14FBDC71D6F64905DBB304B088FD
97B4BC957F62A653018E98A03B7268517394AEC07942847062262A67530B2F73
EEE1DE2A68B5B6105D8764CB02357D8145A1FCCBE19B1974E7D188BE0FB15BB4
6AAD04E02883BE3D2874FC615317B101D4DD8E99CEB6204BAA933445AEA45169
E6F0C558A7C76703D9959B4266FC6B1D8F2F796E97E492D77BAA5654806C9CAC
0D5C44A7F312298283B7BE5DC9E87714F3B802AD3E829A70F3E630D3712A8859
0E36B304030ADA0D2ACD2B57ABD9E5573D568776A96ACE6FCBDD69667868EF37
1BF4BF97B49DD9D0ACDC545F5E9508298692F1D7A25FB8A43CBCBF50D14F75CA
3925E9D2221524462A1F98761B4E749C5290AA347F0642DDA30F1997653E0DDA
51C90CB9815BE41305099CFC3E1E4DF8435E646688A6CAC6190A493572103C85
22892F912C82043AF80F61A293D8E4663948824B1F167FFB8DA6D0FC30521026
8A94F787E3E726E23CD3D59AEDFF832696F5CA0D4BD71FC54A1D783BF1258AF1
911F31464448C0709C1710DA050C922414669E32B9CDBBD1A4F1198D1C09F4F9
74B984F2CCE516A901673DE4B3F6F2B78F3EE8713C62E48F5C8F62344E371AF8
C17D5AAA5E3469EACB167C30F7D7763F20D741FD762A588BD02751783B75A1DB
76E63876B6FB9A2B8BC293A7C116E4411AAB9A60C2FDF1D3759ABCDA9DB4FFB4
CF7051863564D9EE4D3417DD8BA249945228E14A389F089207F671AA80D08B77
A40CB972E74299E2558DD70A36B6A8BA9D4BF36A724D7F414849B63D419F4B45
BB03148724B79E445853D02D69F06FC20D7DE3791B8FB54AB6996CB8826AF76C
F5FE7F2BAAADC3900F14F17E59A758BD75CDF6C8892DA1D9E5D3042D125734EB
53A8090EE56334A908924DC4B86318921169C7F112991FDA63181543D0E993EE
334C06B1A622591040A4D13176649B1A4C795BFDF16DF6E9B62353C3A97B9BC8
66CFBD491B08704C6DB6D9F424CFB1800057E4CD4218C88DAEE1BCCCA10DC61A
DAEA54F207742D31C0B69DDD41BA88727A8086962286D0CC1BB1EE4DD1AA03DF
C8ACC8BFD0FCCA75F4FC8D577A380B34888EFA8DCA131BC4999FC01E54A639DB
E0D7DB87DF0B96BC386A0DC2B658C25806C67763358A994E1927E1E7E81CDEC1
DBA0B63403DB209B0E863AED121E3736AA0E1ED55B70BC0079CC996AC611A934
830E2481F4C794D941A81A592501CB99EC2DA8DC9898E7D7052B6A746598904F
052A50EF84D1C46CFE09C77254D06D3E100E16295B17CF8CDBB25AF54BD452D1
FE2B0C171ED12EDBF622DBC6438DF6625367A51A814A040839172E3D856FDB91
167A89F2C736DE82F77A6D8F10A45FDA871DE066F5383FC4539D3C5601350E11
027DBFE4659DE91408807BD26DF0FBBEF346A224D073A11E3638F95D038D66E5
3CC9111E290624DC39FB79FEFAC07D2DA7DECDBAEAB256B88AE676FDC3CD9831
BE77B254972132E57A163B5355B0E26711658E3636933A60C554B80B5A7C816D
38FEF3E610CEE0821C68FB994E4EF6DCE7C566AF4918148480D802FAC4425713
97A62FF6727AC3BA11E892F304616D034B3F80AD2AD5D4E1DAE678029CC028DB
4B4E119164D6F9F6B7C3C24258D58F35232088B67BBE9656C74AF133C1C75873
1AA348AB2BD113D4C2F5C4ECEE0EED19E733A2A2B3C97F15CB4FEC940C45FCD7
F44ACD3EFD9932C19E128DB67D6F73FE591BDF942BCABB9681E18B6EE5C6B153
BA55F194E998B6EC925AC28831C654EB234ED126A95DBB4FA2D09EF80D1F2C50
7DF980D3DC0EE3F79FEEE1B30ED1EAA29FAA9DD9CB641E5BC06A2384A76EFFE1
487F472EAAAADDBC48486C5D96FF0A334E8F5667997DFA2EEA9B7EE86F7FF639
8C06F8F578B49F50F9D58FD4161F04235FEBAC54193DE67EF18181FF138F946A
8E18E1838F4BD242BC436914F8C55BBCB427552362C7E1301C609871641736D8
B9C714FA8870776EA3C4E8DC170CBF5F561E004C322217D2A01680D7EC23752E
647F5E9284AF035C5C9DB4F8EB9844FABE985F922CCD96E0CC6F5A17D0A887B5
BE606C0A21EFE6853F86A81F2294CD52B8B3CEAF5CEA7C3AE566DA6FC9118B7A
2B088D87B141453D3D3AD224EFD9AEF1FB4B72CB3030285F528CDD83794B1D8E
0D6BEFC5DCDD5D4EEFDD6ABE878DAD54981D7C999B88588E3BDEA834A3B0F645
92C48CA0F3B1DB49F96AF896F9B09E68528214503E95BA71194E435A0810307C
C13A1050AFDB5FD2070031BBBFEE53E415C1E1417E02C197B010E49F7B468D51
C05113E4DFD75D28328970333D68C7090E454AF9E45392F1B4CA74A7A89A3A2A
4B3708E7272F426F700148DD7894AB6048D55F04A4B42F39A4935E10F10BAABF
5FAAAA47A65D35EDAC51547EFE9C11BAEAB87E7827B8321C7FD25344A0A36FCE
EB4DEDF80BA158F65C546E9ABE7B6415B64E2A21E04E486126604BB3082C40A6
5639E91B97483486C428868DFE4356AB5F2F38D70FA75397E8127FD3D47DCF06
281811DA066F16583E31EDBAF6421FD5099C6A2A421B22C399AAD5D324BCC6F7
9069690BDE2D5DCAB19AF1EEBBF1786B432C43F3C7361171FF479FB4FDFFC814
7219F8BC56D7731B980EF3C793B89AD3612894309F1DD29EC2917528A1E4F90E
BE4A58DE01CD82B0B8D1C2699969029ADA6BBE4098BB47894402F0B11E12FE6F
8C7D459D41AAF3214DC47D57754E55CE6588CD0FDD9D151FAC24FC1467A7217C
1C887F89586F84CE132D460067CEF1AAB1132A7760C13A25D4F58FC0C20BED7A
E3AFC8DC88D38BE549181454004F18A348FDA4446E35C019B5DEAB90F1C88BB2
0B7662677D7CABA2D572D5EDEF408B689FAF78D1103036B695EDB12D5762D807
5F69A14582986510FAF7CC85EE25AF847626399CAA221DC09190CF963F70D6FB
253E24FF4AA72AD9117A726322FD0A2F50DA63265374CE25BBBF3E7B160A35E9
6685E39DE90AE39CDDC8ADD26CF9515090CBF63F37CA1E51253191C462F39C2E
6D1E17C5DD710E6DE3B94D853362CCB1538C5D0662C694FA028DF04128F86348
FB9A511FC9C5F2A4948ABF4FFE049B0DDE72B9F10BF392EEB7EB8AED2B53A6F2
E58A123D80514590F1A6F5EBDB837B5DF27E58C30BB0821342EB97D8A5451711
BCF10381381D3FDDBB3CB3324D30BF1893BE00AFD1CF67018D820E9C694AE14C
87D6F5F293B097783B27C733DDEF14A8F726993066F1D7BDA1CC7E62AC1BC317
2CD857F2F8CAA067EB6BACB1604BEE11CE454D7F620051B4131C34AA6A118181
DC716145F7BC7E8475220DCAC43AEF7C894AEB588BD00A58807893395E20C0F1
233B37DFFF06E80BDA2E2780E0925CBA7730842B50CBAB99A691D4BC90EBEBBB
AAEA63C90535AC90368B31AB3110CB4EB8D00DF6246BA012FE0D212D2C52F35D
FA76D8BD28B2DD16C22B540BD2E3DB1BC2F84FA09BD0F0F01A5C693C8659E5EC
E5F23D7167090DE590FABBA2C4A61C3CC62C791E25F5D42D773503A871E7003D
92A42252C0BB59671471F7A62DE9A66C35F09BA6F8E302F4CD994EC08C00AC6A
66C51254F712840B3B151CD82DDFA79D31F0B4A0485F51334BDF5CD5E85B5988
EF29BDF6223F82F41B3259A86D6541C9150BDB7276F5DA72A975945FBB6481FB
C4F25889CCCD84E337400451BAA073A1A81F8BCEA1B152FCAD7FAF84983CEE3B
6025680EB3A373793F0656C0B449E94C749BD813E5E7200FD4EF898C821C238E
F04DF7BD7343B7724669B692ED4BBF2B0C0CCADB597E641054899B9DF267A462
665996C162A7229546436378570253F9314AF146E6642996411987BA74CE27B2
C4557D4B04E7F771105122A7F43B8429BFC949FFD786A0AFE6EAE3F7751A3CE5
CF1EC4C6C2AFF25CDAD43BEC7AAED1F6BAD964197FDC6B98342DF4826F5D8503
1896D58E539449C89C4C0EAE0F92D49E447C4A3E100967B3BC7F3D19501005C1
DAF88B9DE0152320FE0AF6DB142F9D944983B19A5C42053282E1F9391D3D563D
72EDA0CB54435883A32775F148EEA9BF9AEF03C44AD20286FD9F694015EA9361
C2B4BAAC06004B091F3992F71A1B3D33AE7ACA07B528365AE5233ACEB38A5142
4F267E9713229F7B3ABA30559D9E4B6B06AAF2F4CDD8881540047B466EDDA861
0C578650E9B6EA14B973099C40B2123936DBF7D6E0C043CD6D918C8C6732089C
5878537663E0B0DD1698B9D1A2777ACAD657DF71450196C47EB3AAC7B89EEEB9
E2F9CFC6BCDFD9A438C10E66D9ADD60AA8F5B2BE8C21D7344CD8E8A6C73664AB
F75B5D88EEF54D2F40E408D52ABC831EDE8F5F1DDDA31D19D5741193D80A5D6A
6D2E1E26746A94A779EE401A85A7A83DE834E58BF6CEBE3F905291691FEFA90A
3DD11250F79CCE03F54E22E2B141D5417FC4E56B370A5320407A7883957E4A59
BB4D268C8E961A6E25E7A787826AB442B32C4FAFCE3DD2B1B8A93D032C08521C
CFFEE1C28C1EB6F7EA0F868E0B1E18FA0B629E8327A68EA20601AC9990720732
AA1A19BABCCDCD717140938D234BB2DE96AE09E96B095B4D29114FDD325E6CEF
2AE08263950FE6CFD73126C2C136176ECC1145CC3BC61DDA6C89E780F5F132D4
69741F1ADE900657709B4DAD35578DD3E41C3CCF972821E726BD4CBA7AE8BF83
E11DFBCBC20E2347715CC3E50112B4E095F2C33829E720848F8ABE694A82BAAA
4B6E4608F0FBFD2E57F103D8CDBC805E5E96565C2800203D4BA3DEA976ABA8E7
F01833ADE127505F8CF12DF9A2CBC512126729C503B45FB0D73CCF977E2D21A9
20B885BCF4574BE6FE1505687BC463D6F3A2B9511EBD13E6A5D5E64C41B6BD1F
16D657CDDA0DDE5F31C9B8DD5270A72725DB46EA6B672C3C04BCB42AC42236A8
1DA64411C9FAD822B546D0B3F60BA1D2D3AB9A24158569F13BCFEFBC700CF3DC
C7585F894578F82D9DBE70F640BEB821AD49E34383E63C474FB5CE992FDFFA64
2CEE775E9EF547255845970C5AB0DFC8CAA08AD31AA88BD8E49C55BC1B68C60B
75E2F3010CC15E80D2594ADA16D9CA01B23D71CD0AE618D84B06C1D9FE94D42E
D7326EC4D7384A9D9A09994282B995485CE83DD6F787F0D37FCFC704863F7BCB
E3A853130C1166EE98EEC9E4A64869B9F4ED56C6C5CFA68B814B94B7BE0A5F24
F74D9BFD2AE20A0FB0174DCAF6823A371CAFF56A1A6A0D51B9C453592938E507
53358D106FB48726A31D7C16D522D9A45F49A8C83174A9AE3F8171760BB6F161
77BE7A7D12C14CFFD98A31AFFFF8C34ED4505C7F6607DAFB9A2BA3CCC0066047
253D42A7FCB3C1780A0C4E8BD6024DEBF2FA31E9C9379F2B3440AEB83539438B
B83563DAD9898650D1F96A9307BF3FAEF50FE2825A0DF9A87679D1C87B317084
C82296039A2D9E5BE8B5C270923AD51301D4FE634EE1B8BA0B44DBA7B7626067
8D4A6E581FFA2C8CF72654BA38680C93EFCFC2317DF28936561AB83E755DA086
D524E547FB881B376C717628D0C32285C6D5F48BC15D9DD38AC357F60B0D5EF7
0270B40D4EFDAA421F4059C474F4BED185568423E145C6B2DD38630FF688B69F
4881D91F6B49724BD33EF52F6EB0456379A5018902545D6704FFF73534FCDE1C
8E7526FB5F8CDB189CCAC92D86370D5832665C5E989B17A3A72248A138A3CA86
22749CD7481175E0A19DF3DE86B975605D286CDD3FAB8FD8D5711B8ADB299472
72ECDD4FCACAEF0B0D408990758FE7062525829D6B06C337BE0C2A552670B49F
6EAD48DBA338B09EC96E77AAC8583B1FB0BC61C7A26294870255E4A960FDF333
2BB2178486925CDAB6942722DF221264996510CBFA13423AB5921DE8EAC56ADB
58FB18C27A41CE503CAC9F9B48E2CC80A917B83F955C00BE042DC2D87E2C0ED7
0F6F31BBFFE54A8505E005C9200CCB2B476083D7E5597FDFA3034BAFB367CE72
1AA7121C80D154E0955DF11D0B83403C373E5CDD5962599AE3BA0D086EE6BE16
83309502F36A826EC2C21F16F9071872D10DF18FCE12ABEEAFC88F8D74204901
6DBF2EBE83E22175FD33DE7F728402CEBB6FEF5567D53F5FECE23D72A9F61619
E09C9298702C6E64F5C86707D726E8CB6510CB7C057C2D55F38343A9C9415419
E0B7399145BA7A01B9D57754D643A8EEDF0E178B88CDAC56EE02E71CB861F900
BF640BE1A6F382D32A83F0C7925D10BCF081E46C55D9E7AA3C194B3B1C719217
41A4F2D840D0F744A1470A7A67AA5644EAFD78776070BF2E49EDA9528B7D8F87
24EADAB1EA2DE9F3148D6FDE14047075A8E61E672A6496DA97D96749677CFC68
8147691220B40CDED1AADCA60A7E22E14EC367428207955D53D70756AFD54C0D
F38C3D61071868A4CE3D3447803A23EFAB365959491BF8765EDC9EA745830143
28EB90E4A7C81FBAA0F51DC83ADF47D5DD8DA55B1E89309134CDB5E5E32533B7
0D1E617E255A4A7A43966ED6BE28B6B31D984F0072AA303D33D5478995B53381
864E316F70A65AA798B36A639CE4CEE3511B7633F41B40774F346250B4490787
4A1B286B7DCE0D4D5B51864B341F567ECD8FD94E2F8F2607FEE1B55382A62B35
FA16C623CA952B2158B7FF166C507B49AAF6FA4A71C74683F2BFB98BC9197C34
1105B044E7AA81165FA1B97A103553E701D49235C7430364163AEC6E911191B0
6F159BBBE9A45A42B752AF11A279BA06F821525DD0F47783117684C81CE1B287
2E31DA8DD0DFDF35008668D8257FDAEA0941211A063F32C69E40D0F63977B44D
C57D2D73A7B25D911EF17B19060A0D29AC436AF3CD4545A0917ADC69145C50A4
B96604D73F003E662859D8C0F692A22381ABB95BDB2C762D2D4B60D7A3E379BF
000C72C3891E4D22B39105011CA24A56DA1CA78A8AD61511F8DC678BF43D83C8
1B69FBBBF11FC3780E630A24EFB520A6F60B505174A6CDBAA8AE90301A28BA4D
14E7FACE24737C044BBA551DF5D54339B1552C248BEC00A15EA0644E6EA0B2D2
FC466818E419883FF01BB562BF7A8CD1C6CD40BBB35A568176C7DB2502C4C4A9
1BC788FC12516BC85BC89A23C2C93A9493873150FC6E903E8E0A2D4CB9CD1CEE
0FBECE6A4CFACD75E5038E74DD522232F5546377C9A9BE0E1BD3D94748525DD3
7049D7EDF4B3170188BA06228CF9255A6A86A6FFD1E746759CD77594B33D93FC
B5132651E228F7C06894465ED0CC37407C24F3246D0852DA7071380F22A77151
AF50997E8907E60C2E57D997090E60FC7DEA0429E44FDA335B8D86E8B704D37E
19D4F136FFEB7E81904730359D72FB1F64E3B041A69B2444C7A3914AC32F0289
80AA50C18C5C8C44EE90A4254217C635A07B1CBD85BF493182D44236C93F939F
FC5263B313FBF469BE383F47BB8E249300A4E2A66056BB18F8C1E71F0106A0FC
93815CB4580C6C918147E883F119FA4D166A8C09E1B766F6B41E595F24356F8D
6E6EC6D1476B82A33222572B4DF407490D64247BCC7730A01122D44298825FB5
9561573AA857702B2A8F48F563EDA3F739216EC39BDBECCA3D62CF8656281C77
6890FA71FB5A9839B25E59F14F692AB281984EE6A56410101576B49CE7F51C93
A584D93CEFED8768DABF7F2E4FCED47D16F4DD200D2A3D6D50D8A7B453A4A15E
8B8137495F25DBBEDCF11EA7E85280E03809D0363830D1DC7502CEE16E00B9A8
594C5E92D63D8CF4BB41CF35ADCD5851E214DC90AAA0A64E0EA22D12EC3B1506
0C553536AFA1AB550740F72BFA9BBCC810A6E3532F63C155FB86CBF6A62EC2D4
975CE83A544F7F4FE29CE4952D5E50B1AB34F96DB9F031C537925CE75D020391
179FD995E5020FB2B56B488D0D6288BDF28D9B618529F7CD8EA038A4EE4DC836
F31EDEEC9FADD9500D776DBF675838C2E27A9A1C75D9786FB52CD0C85A5D96C6
22B04FCDDB40B675F081053377364DEA4935423D6ADE78AC5156763DCB4ED134
DD502A5A78CE2A27FFB96A311FFB2A6A1E302218F9F363EE87449912DFE4E42C
2BB3C481C676B3BB029368632768C2988B95946D8D665D7AD4D88D93C0C8AB11
9B54176F13818AD16C8359EA9E653F77B478161CAFF62BA0053F44244AAE2071
2F845F80654270445BA9253F9E17A1E0823C22275C007BCD90874F5E3A302E74
4F13633E003B09BB6C630C32A3DA1E51A3282038BBA7F7FC70987A57EC73E5A2
6445B4F38D76A281E581B4391D0FCA41838CEB488F113FAB3617A13D098832C5
8EBB4F54F943DA2FF24F22848DBFBD511B8CAE488343C923BBD13695840A4B56
142475D14D8911F60949C075630D5E29912CD7E6362E528ACE41DEEFEDFB47D2
36F1DF488EA9100D499A87C0AD12E8BF9E446913C4321E200B177332F44DC0F2
A1DD706F2E3CE9C9E5B4450986908EC3E769861BB34154B0E158B295D6F56F1B
E23D9AD3885E2CF29FC8866B0F82F1596EBD0AB2CE131DCE3F5B17D645EDBC0B
373BF97CDA7C326BCA16BEFED5CA2206AF0735FDA1ECD4B5C158C66EFEDCE081
5F9DDF6E6A7F3179DD39B987048E8FBE346C1BB6FF30E18A42C47DD0FA1EE352
1C98714EC451AB5BC77457B2253F632FE978DDAF5E0A70C2137B983B1A5A9DD4
FE557EA837042CCC330766EA028CA0FD447F078CD5C070403230C4E7527EF177
CB25E684AE7DD09D090A60E928E722B7CB9131013B77B216FE145E5E49AF9C37
D1AC2904601397AC6124220C280E417BCDE241F0C257CABB03EC5B28D8121A26
75BFB1538011B31D5E979F36534284FC5F88DC7ABF2F42F1418BDFAB8210BA22
E3115454DFAC85CB745676F87833CC5803627C6DD6BE70392CB9BE4E6127C9DC
4AD6EF6EE0D15AE4C65321DD0ADB821590D104EBADB9DA09321173442805CF8F
8F6BA06F1DC58CFC0D17C742914ABDAB3161C2AB81BF9C9617CDD08CE82FE046
C615B231FD5B7731010E08A50DD46A8FE533C84D84292C1307A5CCE2837283F9
6D066F4EEC992F3472671D5A020E9A7811DD9012B45CF0DF0644B2E3DC0A37FE
1365B3985DC2DA7D7E68619337185BDEC00CDAE3B0E9313749E436516518542A
B92BC063CB94BEC63870B1F0D710AC71210359986F177C33E5032432E7B004FB
97FBF9633F89417C286FB98AB2D2D3A6081AB503E9DBB9F209D9A01CC283B773
4022650FBDC39FE0CA059035306EE8AA00BBD282C6762F07FECA518F59858868
90199ADD20EA5D10BD495D1151F4BB20BEFF60640B1083E681AFCC44A5C176DD
F5EFF2C02F57FE5DDAEF20A93CB59CB9C38B939602D8F7A3F70B39F1723B8E66
8822F5358DA447506ABCC3C649EE21863E4C426DE45811451B5430B7008EA14C
41EBA75D41C7B997E60ADA11E53094C98E78B6C552479B1E51C74F3BE16F39C0
B59D107BB8D658B0EE52466D6DDE336D4B5F9F839546983922682D5BE7DC0912
EAC8754AE29EAE5AC87616C0C26855C346BAC56857B06B212C00A1CC66C5F98D
99E6A83BFE486C29ED82B2F9D5CB5D32B93F2CA8FA546DB1A5A2BF371F9B76D8
D365CDD8FF305059C2E913B7978671AC30CBFD6D58CB1599834A73F6A7F1957B
F95A52353BFF9D31435531D92CC9099C90F2D54C2D906F5A2D07BD8A312A3101
5011999870F0AD19B5EB1B9D54BBE7593C45B8F1F63FF9D85D052DC85A500806
68D9F648ACE56F31BE53E15AF93AE1D7487E2406AD30A2E8B6A1A1DB86B1EA36
3D697EC9D666970F39E1F01522BF2FCB6B28C527C32E69C6250822504BFA173C
EED4E2DE5B7DA75EC58D886DEAE5237B3467B1A26791BB653B865750745817CA
28E72D27C36FC9583A048A83F68049C707E5FC1473E7DF90042780794EA774CA
D2ECA4581BD58ADB6AB154DAE7939E93773DCB2823847EA18AECF20E578428AF
5EDDE762D22B1FB4599FE5AF10E3513D141C31DD7109BCA7E9D83D8681A2A933
8E8F49892490A1CF05305DC3B29A1E317946C925E8C00BB3E642A64685456B6B
AF629AB80858A832ACB531A076037755496C3DF9CBE5B8211CA8E1F3112C0D6E
EEB97C9509C9294C6FDD6D4FDB75FB0AE3EF1F6099B844379760DFA626612E71
99553D3194EACC219E17ECC2212F0FD468AA3A8CF8AA023F208B63AF2A8D542A
B58A6BDC7D7E585A9C849CE54A33D63B69215172378E708DC404283546D7814B
A53FE7FA161FF626461DEEEE3C1C47A04E04279AAA541D411A0BA64BAE383FF3
3D70BF1A9594E900B2173E57F61B1537040858EB3F538801E5C3F58B3EEAF656
E361942F5BD8DFF8B5821ACFA0823B86412505B6FCA5AB5BC8937AD9FF4898D9
706CDEF0F49B45D16CD53C8020A15AE53C4E742567609F53B5B57E579DA191A6
3FAB427A45CE4DB5FB80350DBBB7323F2BB020C5A23E03EBEAA640CF23D89D1C
2F0FFAB206EFCDAAEBE72E55AB10A4980F44CC84F8DD351882DE2BB1EA71794E
9FBD38B14F7FC7DFABB3BF569214525BD6964503471023C5E8F779061500E5A4
39E880B3DF3E7BEE13D71837FB78CD002E65B96BFDE4A362D5BD17C5548CBC63
BFD8062A3915AA5CB574BC60C16FEA1B452F3C4B872F2BB2200367B4FB6C7061
5176F41A8DB91E6772862DCDC7E2DD3206F64E3C71F4704A0B43013773ED91A9
31CC43441F312F05F7E9EFDE2B0457EB8D5467C52CDDE1E7BA8E5424C8D0A899
F621CB490A6823BF8230D490D04BF1A081B8EA09254B84B347E70457B09A1F58
91FAE76C57B6AA7F5B3BF9B315C9C46AA3B83C633E43EB3D8FF394D29CF05BBE
EA60483DA76133EA5CCA699072121EF54A3589AB493D1673B1A2737590A0A17D
5D3A8DCE86125D9A3FABF08480D6B95F1A725A726F554597CAC157F3D5586DB8
783F06030B0E5C758F7A279110D60F09526D14762A1CB6478A4891191970C0F0
E81DBEFD2C0D8E8CF3615342A3944DE09291239E7CFFD239B90218139ADD20EA
5D10BD495D1151F4BB20BEFF60640B1FFFEB2399D39EF436CBA30F8EB1A6E543
782DABE3FF8C25BCAEE932D20D9A5B4779DFFAD7B3E5D447023D643A3A633FCE
D702FA11B262ECE3D4DB52F38098A03B11E17693F1620CFF75BDFD5B8B636585
D62441FCD0648C275447415DDB8B9B0D8D847664C29F8BB65B115E46DCDD06C1
BD1BE8C562766771E80C997F5B1F8692E1E8CBC367794DEEEB76DAD21733DE55
FA05C2A592D1E80050D8EBED3609FE872F662FC475BA88E84C47AF37E871AB50
A4B273ADBFA7CB2C670B71BDEDA9725503C98440DE55077E624BB8B2DEADDD47
5CAF795663765031E331E89BFE0D5AFABC3041BB44B933DA3A8336FFE9568C0E
6EFA84DCEFBC524C6B50648A60367A6A4D08FD038BFD50AFC54127A27B4B7E6C
306F51B9F6DEF9B5D3F20879DF1C2BCD0C0F042FBBB8155EC868D4F208148F47
77479522DDCA89FFC702276681AF7D03B31878FBB1F73E41AE22B9BCF6423EC6
C03F4A6F2F81BA6E4B03157AF42FDB15FB077AEF602FFCE688FA6D251EB0763B
1FFD750A614E7F4D6679DAEA587D36A213850242B44D3D3A0124F417DB192F9C
0297239DB3C1D1AFB06DD6AFF8A9A814589481EA7F756273333E84F341637A1B
DB292EADD055C97023A88EEB200BBBC5CA508A4D744580C7795F7B3D0636601A
0FDF92E2CF8880A9D1B1448067A3F9EF95AA52DEFE8A03D9465E2180A40A1C23
A9FBC0897F01D7B319F2DF237D4CBE71AC6D66BA0971925C5867848F9B3286CA
734AB113866881201429FDA949FE1F364C2F744079FB4E78204F116B2C354852
A9E33D2440FD85E483A0A0B50913DCB96FD59E23BF72280FD906E282172C8BF9
95D877B60F6AE8FA7C6A8DFEF294B4268517F1857924960379862D70B0FBD115
BE7EBCE816AB40D2ECDB17E15F23743D8C16112776678BB400C75DE3A3E70D68
714FFD80D81AE3F51F5EF7039DD184011B7B7F6505A11E4649FE193871D05FB2
9B08D5DE5830B2D48BF66CF1EDD53C5741548A848CE3BC9F4B77EBF56B7A4ECA
286953C8343C031093B2E2990ECE96EF6D712B4FD78087539392EA3BC9D01E32
4A828FB79D8915451C825FEFEF2FABE188076F7DA722852725088E187DD3349C
E83F97D3A722E1D7BA6BA5DC9D9AA36A3480552044F527BB093BBB0BB972B4E9
C7989902475E6CE9C732AAA49CE107C713A3CCECDFEAF153A18BF0292CD25EAE
9A176C9151F9C4EC7FBCEC63D2C4C8834BE9EC41F48EE50AF6797489236880A4
C29788ACC23ADF1096031DF2400A054E10E28F8BAAA5339C07A9F37C84D143DE
DCFB27AD763C746E1814DAF9B2E7AF27AB9182812F516DAF8BF9F0F7D986B1D4
352C65AFAA495A6B8B8F1919AC158DC63FF4600FDF993CE23D3795832B92C298
DF2EC7706E9F77C8A04B529CC5F6D78B7C0E94AEEC901DDEB541604DEC0FE90F
A0685AF4A42E9527D01989A45B5543596F832A953F8F0CF61F39C7785ED0C0A9
F051084E452C075130628DA275FD4F4459CFE4FFCDC2F3625DBCE62375D1DF34
71D83495B19A93EDCF15B83C7F0DD201D74FDF7F448889F2CC1668FFA597A98A
CDB7722E297692FC187C000A9E64BDFB0C56879DC4C9490D7F1783EAAB803194
131A0DDD4C69C1CEEE50D2A6433A1DCF70D9247400F5F8366FB77E42F3E6FB8D
2EA1A31ED42C785C186D94311355CB22E1C8E3601908C1845385477AB883EEA4
6BF10601CABB75E0DE4CA1248F7298D62092922F879F7F52251AC640EF478622
B6F6F4FFFF093DD4F978A2E84EA3EE8713D7C7C2C3CF815587CD7BD450098C5B
7DED6374985E59BE827EA5A22FF692A71E58E6534EDEA52AB1E9A12A4768D2F8
048FD076AFF560D47B2E423533E0A3F43A9435233B24358DEDA4A5F4A3EA5F2D
B01A0E1BC0F229B4B9F28DC73A77C70A5E9BEFC741F6E177F098C56C652EA44A
3D140DB2A0FD42290D8ACBBC3701A6364E311E5EFF4E64565BF8CF8AEC128149
B358437D0CEBB9E0DE0C2EF632DBD7F6378D544355A4050F873A6DCE28B69125
4DF65FD37B11E0EC9C7F554A634A653DE008B33BF01981D7667649523E66D810
114DE3E8040AED15E5AAD0C27B860831E4F0D72260EEDA255F520ECE25559F3B
23D9FA81540F5D173CF3236040BBF8AE8E79C861E0641C986ED7ADCEC73CAB67
F1B11C9239069C7A401D40E2918D0F2D39F630550662560F12C333CC95E5B4FE
9FC2A8A3190A35799A549FF8DF04BF49A127F12B7C8FC5B8D636D725631F113F
A5FE706787E65F7F521B0EA51DA26A509F71696EFDEA74035D067712F96772DD
1DCF63D302E7DF613C774F358CB2656C4993FD35B9B012BA18613732D7EA32F9
2A93E32F073FD822C9DDBF467A1A7B0022978BD3BEB8B79E032969680B698066
04355A234D00C9D356E29C1BD467594177A6F4D4BEC5823D589ED12F1FBBE1BC
F700CCCC6D8F0128
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A229961ADB1D5023BD93644E4C23176BF787664F
CF245203C8C3E557669BDD382731E334C06F4B6EA145D5DF351211A0511605B2
8C540290A08A304CB1279FEB8FC14062F495A5EF2072B2957D98A1AB2E4B2A21
6F53829103F9CA4A8B6EB5766A44A7EAE4D5967EC3646F54568E9FAB28736D70
AE87CA7F3E445B1F49315332AC4AB47D5296FC1D3B96A166865C2FCBDEBAB3DB
6CDE74F5FF556BC9358EFD0B43F697D889D0331D1EBEC40C00DAE0BAC2DAD9ED
755E5FFAD0632FF3D5CE92C7E1D0DFA7642329EF410BECC288F0C4D1D0E6FBDB
1D2F7DC87DCFA3E12F6EDC2CA29FB19DE4183834020D1D5EF3C8297647447CEE
E330B23D8B1E1FF228FBFBE9C3CB8228AF6F5670423AE730740E6C8729B71F3D
32DAD5793A80FD1B6F3321CD3296C52F9330B735A0E65D7C343B1A03451B3A9A
19623C4B099EA0177F6CD6CB3BEB1F72FAC3A0D0989E1ED1A2EFA01D70A9C4C9
29F4BDC03FB1E4663874849B532BE5D89A4DCDC978BAE505BFA5D94B9F85270E
EA10883403D78F8ACC16D78A071DE8BC0EBFFDC300D331F427017089C77550E2
CF35E1093D08837A23AB0CA867D97DD34218260D2B6B9A4E247A71B41391B55C
0237DA0E25D4B4313CE372668A4B6BD7362B99A641E690E301E06C561BBE6ECB
41B1FD9922DFACBD3C45554A6F59E19BB0FA6BFBA035C07D0D10084CA3724040
1EE3312EAB85F8AAFB0991CB7B5831AFA6298E43DD37CFE29072A6C9BFAF41A2
FB4DC4F80E20BBB9C959B78F2599E4068E7E7F3F825C6C28562E37D841F7165C
7E17C8FB438AE8E402D11CB5AAEFFDAA439F668494BBAEBB53B2974E20BFC9C7
3C2D56B0AF69956685D2F7B9D7C0DB95FD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890A7D49B0A6C7268E399C6C68B6ACC0D1E9F5B2
931BAF9EEEA6ED985835323E85D72C6A607A99212BA2DDD24D57809EDE36890C
F8121121306593CBADA65AD9EDED7740C9A2F402E3908B54CB4AED249AE575AF
E64C76BA802490ABB489275E5A3F2B926955B0D961A0B9B3AE205C074AA695C8
68FC2F6997531FC328B8FC65BB06C17B212C8C06D5127A14D7989D24912D1CA2
1FF37457E65829B6E1C65A09C1A101047DF20ABCD57E067A7298091C88C4B587
84409C67D00F7D95FFA0D125FB938B5762D912E1C0E116AA0593B1231FDF3BB1
498BA3D20DF13C7EC6D40091B789C9FB7CC872BB73E6B9D4ED8A555CA31581CA
0F057B10C7A8CE1D7CDD4FE2D5332FC533158B8CE6CD3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5020D74C7714FF08F5AE00F69DBED351708B1C760171CE5
5D0FE3BC5F6769FB19C7951CD5DCA774B841330A2C8CF59CF458230A1642F956
21D23843C4332F05F5AF14E70EF052F02F7E3F51D6E7D68A4FED8D2C4A733AA3
8973CF4CDF768C31E35C395C3BF67A79F8B1AC292F38AB2EF22A87A8ADBE2C55
747D7AF3101C5F1A2A1BF6C0E245AC583FE784CD69B918457FC63ACB5FA24E41
CAE39AA9386736476F5C0BD3D01ACFCABB35BD346B884B97EB5F467C93A2FC7F
82A0B3682C1D7B0CAE0165D6FE43CBD8FA5C85EDCD122FAC36F59FDA7CC4EFE6
1F9F8E88832737186037F9E5AB161B8A2090F5569529861FAEFDC91E823E0A0E
A92E7F1118BCF413BD355CD844D0F88C47B267EAFA1585B4ABAAAB9BF885D233
DE4656E4CCC1AC1A5762BE48F5FA88A0020AF17A438014B5902A55EE220152C9
0348CF590A07761415D2F53A866C95D4A6848E2BB7970D176670F90765843635
9C2461BEA57F9CC512BDC51EF25496B2C2253AE85AB38889B26761BA509C7F63
8C6CBC4BBDEA74FD3B43A178C86F9A97423815F5FA2C09BA590B8371D5B7758A
43F98F4DC4792308CDFE2779CA6F20ACEF23FD8FC11F483C0CDAFE837D984A76
1286C4DC5088F5DC4B8D59F781ED48736CDB2D0B9B51340F6218CDD622544552
9BAB6B88481D111091C2CAE5E19903BE5F2C90E79E2469EFE314329B4653D49A
0C4443075770A91CF9303D9A09D90460D4094163FF9D5B9B8328B7D716708A5B
C5AC3BAB6258E19FA15BABC01C842507B425F413F5CD32933AF5DF44D51787BA
9027C34FFCF0EAE1840E691E7082F8BB15A4E9B2BEFACF92CB46E229D1C0200C
600415C2275CAC70B1A8AB7740C6A38118788878E32F9B9DF1EE5E465A25714C
8068B316F6A8BE1F87A7CA690937C4028936489C7237B0FC30DD38199CFDFDE9
CD53294D2959BBE49943E7E5EDA7F565A46391CADE984F11BF856DF6876FC8E0
35BB6FF51C212B2DC810F6D3A53A95F7BF8F83DFD733809079F50390C3643557
A6362B61E18833F0A4D083029010C4B6092593A652F44972034038BCB8033552

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A110651C31C7E8B693D1749B15C418E45E80E48284
2B429B1AFB33D68B4D63B8AE33380F0FA4A426F4A8E0F7466729AAF35F157381
6C9D25F988B9FAE475C9BC21222AD7E0721D9B289F29BF3D41D92425E94C50FB
3D4BAA7574FBB32CA8ABAF8D9AF332256FCB3EA78A9EB74B4B091BB5B674B009
7587802F6C66C3BC6E9DF45A22A24877E4A44991BBD0B8ACA80F6E7A468EFFDD
A0F44FB32709CC57D353A47EE953FE22B755CA1B83024E916430F66BCC9C0013
59DF6DF52D943BC285B007D1135D873B6709CF1783C386AC2358F315677479DB
92989DF17B1C7CE7AF4D7985886E4D9610EDCFDFC77C8DBC0F35778E3BB1B1ED
E4A453F3188709A85504074B869A7D9CCB045E0AAAC45C73496026CFC1B35259
5ED325A37D4D89E34BD8A09FC863DBD2D14764D82C2AD229D1219D78BE4FEC35
74D5AE3388DDE9AE21AFE51F5205CF54722827FBC24AEF08F6DD0BC6A79A2DB1
FF55716866C7406275A3206C0B981EB6DC945854759B8A4E469825F31A982083
0FB63D5BB4E8414211B972FEDAA71766C9B0D3440CE049E4FD8F1183360FA328
5D8CD3D8330D96CD8F687E8947B12E123AC89F962A9530DE5AEA07A6EC2C6585
47487FC2B6844308370AEDF60F40B1065F435BE8A39EB454D88F5BC45BA818E0
576B43654C207F12B1FE9D0800C9DA440F8F4DF34BCF34F43878F7D76E5B0744
A7C12C1F974E42BCB15BE6E4B11B1B3C178225B2108D94089E6544907FDC1CD4
24D2D1E8ED86030B6F0F045A27CDFAEFA66D2E563E091E4820C12FE47E315478
9E02FE363C3191393B266A453C68C647CE8EA12552AB0F918E093F58668BE6A0
988C56A71701327F3123ED0ECDF2560422F393437B17993C173D78CA380FA824
540B79150E4DAECEBD1A67CC197C6775A117B7B607BEAA7CF9812FD8C2C90C93
B34EE07C1F1B354CC7B6A68856A2E0FEA9E06345800DD13C04021FC924C88B19
890571C60826E10376A9CE8E4B6C4211CBFCF9709AA29144F3A402FF8311E955
631DB6480CE2CCADE0F132943AEE55FAE4610C564183F2641C90D3BC9C9C2047
3D6FAEBE70E9DB326C4323F499565020467A2F2E305D6C518ACB1F8602BEEAEE
EB033229E3646B97042C0403FA6A577BBCBEBA936014055D10434972C003AF6B
F7798E9858286E4979DACD3F5A953BD9E918D5E46449525A4B02E0FF1D61A339
2B13C2BAA4F2EBC705FD27CD6D2025DA9E2137BBB050747E7D512F9C67296CB7
35C413373B421BB8AF0E7365683A159EAC40D59B99666C590B9C40B2123936DB
F7D6E0C043CD6D918C8C67320A7A144E5291FA4017E674E4E3F6B8002890F8CC
8043EBAE66593FE6A8B43430B87B8469A3FE856445ACA7820214079A40712874
93CF60835B57D688D8741902B245E6D36223AB972791081FE59397EF9D69415C
6C250EFDA6808BB06DC14D79B44B1D65CF8C2EB97FD192DC5543674EA5327A63
F01ED14BB1ED9A0BAF084C7AA806BE5556CA1B25F2298D1B77928B2565A93B23
689A9246F1420227229158747B235AF81D9C07C40D09E4BD687C783B27501C60
3CD989F14A2A0A56807349E490FA6577D5C87A08B6F333E1C2EEABC20A07088B
CD029984DEC1EE34F30E77F7C3174AEAA273A07A8F9639778A72914EB3707E9E
24D51CCB52F85814F0E7B70E525A10C58FE7994621A9801A93F1D2EA5B39AC70
CABD8E491D8F710C5F31260C5AD761E6DF3CFBCEB55C1CFB942952C5F2D227B7
A94085C657D1C6E4AC560C188EAADF0DF449FB9D09F917E5CA703C7E944A2193
6F13388CE0AC08ADC3134D1F38F37B0253074A1AF90C7A388469A4AFE99F2BE5
CCE86EF8B6EFE3C0D55955EBF49DAC8DDF427DD8BCEDFD5D15F53B6627729B60
3B6CCEC05220CD184DF3A8F645825C9F5C0ACFA0EDDF6A0122789BF66501B146
80A3B9650D68D467E0DF4748B39BBE76D32933BFB3185C3972FFB69050956E25
AC33EA5F2DB7978E8581B39E56E5A0F9FF6C603FA96532FA00F88FCC7A95AB5E
44EB877C6E9B75042A9C413C838DBAE11B315A3B6B5FC1351BECE9D1CF451FFD
EF67FA97D58086B1BB39BB1AF6C0BC2386BB3061C215420F75A9D089C7BCDEC5
0559B82CA1E9E633BD1AACE6F06A397B5D75289ED307C730A1DD3B5B7F23CD96
597C5D225B4C7A3FD940B5B7DAD66F4CFF5899A0884293BDEB690DC928A68EFF
BD0C108505F7C6D5F9A8BB59A813C66373E8E10B6C92AD0119E10939525FA2CD
9E35988FD5B8584B58D2A96BA21E71A915FB663A04001D43A504ABC776456B69
DDCC93254749D04EBC0F1106F62A30D3F714A33E4F65F6B6CE70F9F9E8115952
0DC45679D35E06C8A1C712F41EB5FFFC86409023DA0394E3CCA13502D03B122C
2166F38A261A3524EA3A004092AFBD59A17235FED8A6C0BBC9925B98CC9178F1
C644D40CE07A4E70B37A678F66822BEDDEAA3E177C5141A9845302F716DECFF9
1A64657D64B43EAF4ACBAC482D06AFD458F0DC3F4896CB93D7D9640B9469F723
C84543BEE989037E08E004B46EBFD5E6625286B9FAAFADFF8458994798F6A07D
58935BE5A9105C3164B47223A893DC58A24D65FB154BC4409B9A97CCAB9DA5C7
6148888F30AE04C7E2CD9F6CEA624002296A1EFE646E370390407746B9D96181
11EA22AA11A489B87A3C6A208E9CB0B30F7ACDF0B926969D1F898B5F9A7DE36F
F3A32F6B29B0EB5364E310DE9062984F6951B5AA2EBC9853650192211C56DFA3
0ECD347E1717AA5D4CB03B26C4A34300BFE6DB438E60940A1A7B10FF68354C04
3DFE6F770C56475E713DCF6434AE97F67BDD87E81163E68BDD4B8FEE35C725E9
A9EE151663032EE1B2834670BC9A18AEE36074AAC9214825540B01B34472A56C
5AB4179BA79BFEF0DA75C9221E3F45BC7A8F8AF3361EE4B989D3AF06335785DF
8F0B1D342FA414E3499C15F3C1C75BFD2390BC9B72C3D7C59B116F163295C36B
FA0E83CCB23BD376578942C226789972FCD53625BABFE9264F5EEDD2992597BE
968B5B231DBC59328B0F92E1CC7C2EE68241C590B09ECBD676D2E3EB556E9B5A
0507CA54A84D3343C409A009674D3973F49E02479CFCBCC6F3F444867A98605E
DCF4CDE45EFB46A7FBFCAE9A895D47D5DDFDC73D350147C2A6074B263DFB6FE5
8624564DABAC8AED352C574D062226B47B9CB5B4647CAD084A51EDF2A7B5D44D
FBC57F1B0A7E8F6FB6C483282DE613E28E0AB1E5B62028A52F9B53B3FA27F000
DD189ECC42864A1D5AA1AF966FDA5D5AF706F0A30AB0EF438151C7D39682CE21
0D8FAC8DBFABB91D54CC819680322EAB72E1250A760DB5FC904651FE75CB3AE3
44D9DDD6D66B643350BBF6D1653A9614781EB7E8CA56445DFAF3B11CEB70BC12
15DD9D1109CB4D90B6068A5235A94489F21B514032F3FBAC42EDC07887EB8455
6F43AEDEA439FBF139A16A55342EE8A56971A05AF4F329B3BF197F1CE08A4D86
35BC8BADD2AF776E11669B81EAA99EF9150B8D39695D096825DF2E102C6CC2FC
BD09F82ECF0716F5378A8C51C139D72BA8445DEA9CE0C63338837ABF0EFB575E
E2A90BF14437E63C54B529297E4E8AEB9E349683FC5E1C323236F7177878D14C
F0881BBD1006BC9B62A95FE764579DE0CC5B4CFAEBFCC4E3F3D8112A7E8FF270
331D2FB475491A51AAEF10C504360FCB236B33EA5BA6233B2973A1A4A64CB156
1CCCE5676F5FEC5AD00CF74808248E7CA6304838B953DC7DB84DEB6DA73092F2
1F04F718009DBA58BF46AAD3CD7C9BE6B7C56C9816AD1985FB7624F5E48CF6C0
C7E019E37CF0B527D14F008E134FA0711FE40BC8A926EF8BB980B95A2F77EC3E
049D527B3C51560442A175D5D8758E82FBFF5F294B5D0D796A90FB81A5A18E98
E97BE601EA4F039C49B39B0B7A38F24A31CF2BBE8A4A77DA9ABDE0A3E10B009E
48968EC723C6DECDFDE76C4A7E76FBC1463CE5C32B054A731210DF35A32EB4B6
13956531D3652BAB2409BEA0B2194F8237AB16453B9349050643D5B98B056F47
97583A5F1CC5DB3DFA665A46AD11556A9DE4D19C3D69EC4B6AC687A6FFB98191
9CAAA657A12F1BB1A7B638AD6B9A54234FE345E1F0CE798DC546A5079757062C
0D09191F8E0EEA8B2AAB1BB852FF9A88ACE76802717FB43013DA06FF41184DEF
3526C06FD5BAB6F19684B7B126D8255F1A0F1BD08158F94077D191F62DD4AF06
B5E6243B2801FE685033C7E1D82DD51B28CDD8CCEEDF97BC4AF5366221DF88F3
A15D9619D717EBCD44473B8C0B519F7B53237A6BF0906A6DFF38E77DCACD3AC5
7B34E7FE4B7CB450A9C45FCC1397C6B0A86284D5B1047CE4A5267D952A379B66
0FE3A9671DD13E01433F2F6C208E32496F7EA8624C034C349973AC1227D16964
F9AB8BFD27680D2ACC6987BE974B04232D56DDA60AD2549A0BA63F83FAC01F1A
052E23200E94DCDA8807FC3021A6D2E4C13E06F1086EA20848A8E5E5D3DFB242
4B7CC458238CAB79438F28BD4D270F57A959F26997929BD1F884756B97919179
FCDE51DAEA400AAF8982DD653B0A7794729014DE0E4409134DC478749FF92F08
63167264EFAFFBE1F3DA733618F0317DB8FEA73BA241AD8A569A91A52E003357
85DF8F0B1D342FA414E3499C15F3C1C75BF59D0F150CECE0D45E10BD736B633C
8ABF3817168828BA1ADDB86B39E7C589EF576D93988FC7CBCE8F8EEAD343E055
6CB04C7CABC1D37D26ECC85EC180EB8EED1A6E86C7054A06B962B7E28A73BE0B
2713DFD32DEABA293EEC35CA74E8F4E4BDF74C53268E1A7ECA73776BA42DACC6
FAF2215872715967549F665E4D31FA89D07F9F7B71A981F6F30B8AAC02EFBF02
3FB3ACB3EB8D30CE573EBB102DC6774E0673364D2F5F08BD9F392CA41047466A
036F13A73B9E9748CBE052AC7C80C0A7253DA38F8096C24E1B46EEC4A0102A61
086064FB56D54FC54129B7DF0DBAD470D9C53731DDDBFA0A0B019593BF22319C
02486B37F961B03210F3BF96D6BF08F38611A67040608203A5C3D09D6059AE84
C186BA3DDF8A3D03A6269D7BB2137246B7C44A4D5DDD215780BA71E493103B56
3BFF48BE11CF626EDEE4BD2E4A16523198B2E05EC8749D3D46AA1886DE2A843D
955A35B70900EAD57E09228E923A91B2F77E5DB154631BD38C0D833343743003
D9EBF5AF03297DD2D683CF58D8BBDA154BFC9348A604AD1CD1644512270E45BB
ECF09337AC26BBB0E45CAEC8BE479279364FB843554834A226B66760F4607752
DF8677C0397AF9D0BAFA292F4D4F92B73D7AE87B13F108F2C4611CD948F30F50
8E6A5E75668ED3E9929056DCE30D42439FD75C1D03151D5FE0EEFDC575B41DE4
0FC8E52F0331B58CD9A51ECAF5ACC9F1CDC63772C2FA28877F526F1F3D0ABD28
289F98A3ED752F5393470DD641BB173B202FB9C5CFBABEDB73CE2FD3EC6A3ECE
8816AA5C60500DA5759D88CA15505F73ACA804CD809616BE4342A5047C07E768
89E53BC8BFCAF67124B5CF48327FBA645C9485D04E301A710BFCEE5BE0EEFDC5
75B41DE40FC8E52F0331B58CD9A51ECAFA907A695410551EA8F0912E1D19CE24
488F510E909A96C87572C1D4B56E2EB23BBF72415D00225EAF9E7326259D3C28
E90BB62A03F77E45BE54A5F49E7C5BFEBE1C71A3B572BBED5F359EC5BC402442
BBA33B2663D564461D57DFAC85CB745676F87833CC5803627C6DD6BE703FCEFB
D941EF5C3B1C10287CB787EFF59E86B4A72A199C8226F1477A18C5FA931ACAE3
1CE6B70C0C19FF70E8B577759A7C8CB34B040C29B9DF8963000217458FABB580
220574A252291322ACF12EE7FE8A738607329268F442A400BDDBE793C16F9C0C
FA569344FE06F0B093B14CDA8AB813F95EEF8F1D23575A3C84CD3760AAE7D688
5413557D3BA5484CC6C201DF87F0F105C79882D616159780F65C4243F63B1C17
67A866F1F9B4B27B64CB3D4410848E03E71CFD33CB08A071A6A7923A63E3B2BE
941FAD5DA8002F633C08A3EBDF22FEFA476B92D1B071F54300226864F320A5D2
8216384F61DB0CD008AB7A26A46FF9C8241F9F8FC68B9043740852B4CCBDD37B
F728E5648212726C12C5F614AAEE0D8590A3A26854ED51C4A9A1C13A034DC924
6699909AC060DCC4606454904FB9E7BC9FCBFE9F1D1880A7048295A277AD1D40
22BBBEA0A9483EE8EFD959ABF1FAA17C5B39F4A20A3DEC19163D7C748C451741
B5D481AAA4E0464F52F36DC07ABAD3F725A77089EE2518409CB64E9E89BF1483
8CC8E9BDA2CDF3424644937C761909AAF09F2E35801FD76EB4956C28D804A744
68E8A493F99CE2D3DFF0982549271B429927D4775BEB5F1B3CC2370D8619DB10
C162B96E490193208D7CE9CCFB889CC948BEF8AC77069D64A294FC4B927E16F3
C2229EB5B9918C0626FBF8C4B10DFE83AF257544C70A57A8021D8B6A1ED33D19
A1FBA979FF7BAB06B1AB21AC051521CCB9177819D9A8E4A57914BF755FF8BFA6
BF246BF26D4E85A7529ECEB3758E9DFD534CAC1AAF06A06E4D4B1A20E66F1035
4BDAECB0ADC7DC3FA7B24303B3C291BAB5A582CE3CB43CD00D5017219264F47E
5F287393BDE47B047F83B5AC7829017B484553D7C7E5685138A0638CE5D37C7F
601B0E36197BFA431548DC233902D54DA503AB022BDDE741CAD677367993F1B4
E7756DBC96D8A861F3882FEE876EC79521622318BB6960F7588E6392FC187987
36023DEDB0CC9AE428714DDD6619AF0785E90C2A0EF5CFF30014FE1DC8921C0E
A428E4809029FF9F7965597AB420EBB0B19C1AD3D1F5B8685D1874C7454D9ADC
7CBB39FD5C68F4C39DBEC8BEEDA86F09129C65CF38892DA4941732B8C31799B4
E67102E1628592D5D67BC817676C3705F05C752E2CD594D05B15173D5A85A7C5
8E01C97CEBC71B33F0B065EBCC731CB2F06F856541DAF4948EC2D4875DCB885E
AD2CAB2644F1E25DF5F6EF5B5ED29CA7F252DFC48E9DD4953A244E5AE73B98F8
203B2AE4F894FB61F519825659E854A83D4E6F02B610E5B65F18E4F6A88D839E
ADD20F9A893744085F176E43E1878F88D41A08D7FAF7B601661B2E2B92D08E15
1289F0E62B8EF8D94EB3FA60EED514882C79251115EB490BFB9C96586141E225
36AD74B6819A058C9DD483677E091DCE521F60B2C866CD45B80656513B6871E5
258B4F80702ADB029F18A4891A65E0AC01235E81F308949FA133943BAF0F1E43
430A8B4B4675E598639F1E9D877F10F7C8C0EC193A59A1BDFD83F4E6FB7C7698
19702617D08C10F4DC9F85CC1D7082661851B3D94D71719C73B320DC91F4F64A
EC6BB9A6B340F5BB512DC333468FB500D860BEFB0929944A4377E4668760649B
816EFE129661D5D17037A6CB3C58556EC8BFBADBAD045C00A6C3887E0A00795C
3712A58274F19CAB46BEE6168EAED2B0EC9606F6300D6B118D2C0F7796B3FF18
1058A150426089EC7071143F5177610D4C2683129C912ACDB47AECE3F9786E47
398891C3990700F3123E5BB8ACC107D8B722419A9C1F8EBE330D7A360FBCB654
0E7EB3B2ED0460F81AB38B9240BAE845D47A0BD6760B31870D69C4C15EEA09E1
831354F7C4A16212A067BDF0ED84C9A5735368A09CE46A5C17CCAC557BB69FD4
2494D5D2B9C1ED812F3CCEEC1BC079E837DCF4EB4E495547C25D2893E35E2443
5F55A2D66CE9FDEC1A5F81FA219E49C2F4D2C8EC80D9E187F9E15825F57826DD
B17A35CF2E4C380E50E1797F855826EAB926A051DDBBD93F907D31D6709284C8
6F0542486710BCF518C1B5D1E6CF23E0D97980F20EFD24A6644AA26EBAF342B3
6AEFAAAC0AB3727E59F1642789A1765F02944B8E689BF03404F5426F7148BB8F
A709AF1344271173529372AF6DA383511770EAC39ED55DADB32778CAE943CE6E
928C9521FE45A04F184800733B13440F514AF796BCDD85974E0AEC9A164C369C
237DD28FC4BE2843036E872B2A03163F0CAD1BCD5F7FBC20299D5C6FC1EDDFCE
777B796FAD72EEA5713D78F437DAE50160FAC28C1C21FCF83DE1B5516CB04C7C
ABC1D37D26ECC85EC180EB8EED1A6E85129293842B429B1AFB33D68BC88143F9
2B5D64DA3F8DBFB0D329C7450A21E4F97C8FF528ADC2F97F87C592935C07955C
1F1B0F125261DA0D2F7312CE5B3F3A1DF65DD60AA679945BCA6A71E4329DB73E
7F29098787D96D89D74796C6908AEFCAFC2C9DDFDD855116AFD66EA16F96AA4B
9F040771F86CE98994E113749F2047C28A0906100EF57663A483AA7375C850A3
1668037014979D53F051CBE5D246FC0CAC7850013FB3F1B075D4754A82A584DF
54EDC7C8DB59B77CB7A8592B7CFA7D097BB4BF8EECC6634A8112ED925C55E4B0
DF0E5BEE4B29E5DA8177D46930E3E90AEA7B324350D5926BF3AAB7CF462B8C46
CCC43F2AAB8ABEDEF76AD7F14CB416CC957E016A4C72A6A2FC3DA24AF084E754
4D8A76154942ACCED03A7785D88FEE716F2A7D77A990393CA5CBCA996BE2E518
6292AE634456B428623FD1E621555BBCA26C986ACA69714EE280FFCC692113CC
15C94DDD294049748B473FD5F4AE9C321F8D3A7609539BB1E313BACC161E4DFD
3BBD84E1216F1446F95F7E0B679C0D5FE02E0CF9AA45628844A54275C0E58946
55E7B06095437FEF27B81EB14663E3073EA68F60F1D5B1A01C9D57853580E6F1
80343DA29EB6D4908FC8959EC5474049A693CBEBA4E07CB9B5D8DE5E0B1C2257
A8DC4E816B78B9EE734118C991282B1240D3E464E928369FA93FB92613967677
4399E370879B537E40FD383EFEF02E3CF25222317FA36FFFFDC8DEB8DE95405E
C7DE4C780BB7B6AD8195784DE96BECF95B625F9BE81E96E51EC9602D4654DEB3
8E8E94225D8F864E791EA66CE3A7B80CCCA6788AEF25264822AB4D94FD51449F
12FDD58B76CFA594F3223C22C5045B028700C8710E6F425220C975AF0249835F
399A5539D63AF043C136465C5C6EDD6AC0425D8F374CC51FCB15600FF7A49A41
04BC29A0D7D3B555652AD4E14D4104669F132B4584E73C21F2C83078F5D96EDC
72B7B9B4BCC12F4209B1951AF23FF685C14584FF171362B3551FF7356C84CF0F
2434A53A3873E1326AEFC575FAEE1B5EC42CDDC027C7AAC514A42B45A1905906
63C03DB348ABE792DB5E7DB73311A007ACCC65F1BE0CBB445E9DC99DE3BF32B9
5CA40F19FE0EEEAD46783F79B52E24284B8FB0941BF71DE5A8C04AC209B2BC10
57E1B23131263F844B18EA91B95602F465D1AD4EB85656E66D39C6D94C1DFC73
2A196B89AF8000D828F0B96CD1B5C4C56944521E76439B5DCA7732A29F37A08A
140F8C0036E35125E11CFB8F1E397508BCB97A2A87578E15D147311B7C07C177
37878305488298DEF3FCFB79A08C1884C223247C65FA99AC139A69ACDE989B3F
D5A2D5C0A6D3663AFF2DE36A2249BFD2DF460161D3EA5C1B998A83F2F595DEA5
468CAAC2B78E5A1993F2B6373BD0E80C86A751E25B22ED67B8950124818EB258
558D55DEB25473A60B53D4B46DC4CE9B9FF1A7480F80EC4A178CF4CE94A7EEF8
762859353E43AF38D0D4E667A80166DE5FBCEE3580C618C1814F112E445F32C0
970817BC4050803AAE80CE06895EACC815D11C5043C96E89E9C036E84F31BECD
3B9F74A6B21D04D33D8D6867E328F1F84E503F30CC012322BF86C75D542DF2E2
EC862783E843F9628CD09328D96F2191AEB4D4ED70395961900B71104E33D18C
699CB21CBF1E702A43C212F7FDBB168337708E78CDE23E82878404BE7530ED3C
037A517E7F4D92C7AB7DB46166D3F9D51BF73E000254A8671C3523CAB620C1D5
6647B6CB1AF0CDE7B27ED2707252504B6C74D1B1215C450ECE4FF7677CEE2603
269D5F288AB410ACA8C41E7649B66330C265A5B7F41D915514AA0FAF252C2D47
0BE8E487B5C8A276C074A1F51A8FAEF46319AB90126937F49345B442931D89A2
D64E9CEFFBF0E3792A219D478D9159272C789B363F4B77BB6F513F2D1CF82BE3
64B0469874C6EB4C3D782F2BB7EFF536480AA43F0D960075B6036943E3EC779A
517C4D6040629FA35ECF5F72BC11EC5003D3A2FBEB95AA878584A8ABDF1E8CF7
8EBE55ABDB3BE9C60DC252CCFB36274DC69EF2D60CFF2873563D5F829FAAE46F
12CC16254F52A26FE47FE41504D3E851A0670AA04A36A3BD6DFED9BC3104B7D3
1460E3FA77DE5FE016DB36DE56AE7E663E81752C1539A5613325DCF159B32F71
199029B3C52A85E3A069D5265B78DF1E8A68FD35569FF3BD8484D4C450FD2CC5
3E9D5D933D8D348873F7A02DC5A4062A9DAC0FEC368B11CD07341EAB622A7559
CD4601AF33637D19547C8D92E24C1190A50E8DCED4C7B578B8FA81CC95598564
04124F851CDAC202F133D2A0021D5BA5ABB98A5D4359E63E7B5982A26F1ABC0F
7843685481E40BEEAE93DB98DE236DEF8BA32A536C00BA8999080930FB24143D
D7851B5539E97DAEBC0C57E6CAD2FA699ACC80B728B77A07EF96201F5BC9187B
8716270EB91BC97E629FD0ED9D4987C1C3F19BB1DF75F985EB18BCA8844B267B
7610A6D157EA3ADA7CF63EAE1CDEBED0C8CF6560508A7BD68F0D6896FA97C1DE
35DD2DC448E17A060D578CBBC23C7B47CFE6CFD6EBAE3E24A85D002445BF81B4
BB62B6863A4CFAE37F715EDF3EA5A33679FEB21AD1156AC74542B942B0A4F70B
64F7A89EB8D38652FB57A729387C6E48EFC3641A1DC59A816C933FF531910AFD
36D4E7369C37B8761341D2763A1FF764ED045DEC3F74111957D7B00FCF5F246C
5AFD97D7F7DAEBF8092DFD40519CD63CE8E38A742078EF5DF4BCEFC85437AD3B
3AED02EF14AE8BD323700B083E6FB9B54FF40B63FFE88BD7FA6074CD669B124A
8333FC4173EDC8861F00421BDA29947272ECDD4FCACAEF0B0D408990758FE706
25209BE1245C285B171DAA6BE705FF575048CC768BB8F138C00B63BA4E40BA8E
5C0A6D51ED6EBCD11B5068CACB821BE08A1B06587ED0BFCD31833B1EECAF947E
67DBA7060CF90D715B1B4C7A6B386466E51305470160FFA5A9FCD721692FB97A
0DD77737F84F944EE4F182641F051987B79A1615938B81AFA5C99B02AB37CB74
92A3032BC29ED513ABFE8E6F085C4FA6A856A3B0FAE27B20E1DF3B80BF4B5911
464BA2D6CD239CAA9B28146CC516ACD809E764C8DB3BD7F80C944959B74FFA0C
A674B3A52B5E428F6A5529408AEC4A8149338459F8BEE4E3EB8047907EE0174E
9379E76128411F6F62DA2124572295D7FDF91A1B0837AA7F80FED4EFD79B47D3
1ACAB7921E974E0F025141E0E37EFD447C37DB455D2F083DEA179DA4FBC32DCA
FF9A18635F0C806A7F79AB1668CB03AA08FB060A2ADB1D7FC295EACA3E7EA4F5
ED92E78990A082ADB3A32F0774CDB0A4428FFE3F0A1088EA71BD2DB74105301D
0957D57EE4D15D0E8C5B0F468202F91976A5D9C8BDB5514157F1C88F69F5F803
FC20B59D8A94F59777FF203C063C4273C41CC2B831FAC8B35A70EB34886F37C2
D18213DA6D79F0231FD18090D6EE761B5AD3510CB3E47EEF53A23BBC9033481E
0B0BF46B0980D70618A821BAD346F807B68B77266B06B756BACEB5FCD36A0F15
3536DAD78AFE7ADEC90B959AC3A19FA9D0303DAC5BE0058B7AC46EFC13F30FFE
A970858E80ADA63052023889668F4C3E84553C56AE4C8E2478A28257BE4461BF
0D5737FEF579DD93DFA22A948E88B3B323E0DD7E5B229A8753CEACC4610765D2
CBF708EDDB1B5DEA54A92603EF47888C851EEDE853AA9F0EF60D11E54B7BA047
1056B021C03FB2A2D2262AFC1467A7217C1C887F89586F84CE132D460067CEF7
4BB5AC6ED2CEDE02799D369A01933B7A77D835694536563232D2B7C11EF06056
690527A4EBD1F1355C3BD6CFC4FFB40C1CC5E799B3728AF8D6A742D6FB17DCAE
007D8E2C41A2EF916B6A2EAFB651D0E490A79CB8484AE4B453B00318B966EB78
912997CA884D714876239501D7F89D32735ABD099F2B35842AF2A6CFB7EFD6B5
7700B114375B3A18CC1B963DFC1D7F5B9FABC9B989941219026BE888DE73CD3E
463B692A4B59BA7A760DD7A81CDDA23CD0707F8B2CDBA530E9795CBE691C141A
143280C65FB2AE0253F1E002F576583BF8FF1FEE3ED0DB577DA27E45FA577E9D
4B958FC9C413E5FDF7E3F203BD2D3299DCFDAB3D314077FAFF599A6162779C3F
18AD0908F75EE8A4B38C1C582F30C6DF5FA2097A078ADFACAE547DA5926B3D5C
9A7A59226CBC34EC86D2CA91E32214DD857E80C33FB4286BC47DC77742A8C011
C9628BED9C7AD8647A15BA064C8DBC0B9A1993A9B392A4FB76D29C0565E07060
0C36FA9FEB325D9B4567CE2EFECCADDC8A013BEBF580573F64AF5AA364DDE757
9E59AB8F63B4E0D1C4D5047F251B4AE34CA73B1499B395127BF2453FB7F04A26
6A9662CD00305B894723028E0529C6B747E58310BBA39C615BD9DD02347E6B3A
AE64A949E5C87CCA39AE1F17BCA6C77E1A59B2C119DE916B29DE7054ED785232
C74B7B92C5138A7307297BF2B08A80874CF0D889281F4761B0DCFE61E56EDDE1
4DB1462E4F9859384B15882C6B0E2214137472F7DAB6811B1027FDA86CF66E03
2F1B0D4946100FCFC2BE23B43458474D510E94FCE182C53165413E1FC4EC239B
58976F94434C1FB78334D81374C359FC481521A3784357B8E3E7B676414CF22C
D112C8DD5A99D30F55D7EE28DF2F0F6174BED2CA19D075A462526DD5D645E764
B114853CA1BF1C54B28F3591C1B05ACF3D46952ED60024BBA20AFF928DAE4739
7075327EED7195DEE9EDE5DF536ECA77341301986811B7C76940F64EFF4AFBB0
62D33A9D22D14C37AA9EACFF7CC81EF9860D5DA595CC6778A7F06A3C36A4C792
D168DC61B0E00C91D60564524D7B1F773165050913614F8EF8A85BE29E113D06
CC844D519A65F780A78E56CA9D874106924BF00029F54AC39F6331A4A81BF656
2ECE87586E03C99C4FEC726E5D5CD4281510E8B82A5E5CE852D1AB080F8E3F97
843B172D926DE310DE9062984F6951B5AA2EBC98536501922111BACF45C80493
B3ABABB911186600AC62FEFFF4F7754935BE18AAC41C860B70833B92CB7228AB
2C8F68D03B6326AAE61A8AF0431F373DF8E1A969C52A99052A4D3A2FE770C935
8686071FF45FF489BCA0F4BAA4D5D965566BCD23CC0A112E0565D1E1920094A0
509510A0DBD662C731340D67F8BEC315412BA9A18E9744CAC5F1C047BDA80392
8A286C4E76A6B2EAEDFE2FDB17FF267D0F21C35E0E6977AABA48CD601358BFC6
54F3C7516FBE690A67828F56C593686101542A0830ACA6918C86EE5D21DBD34B
2EF84D336A889395E771CEC29602496D2F4CC3005863B6DE09084927E0DA3DB4
54B1BED8CD3EC75326188E28CF534185E66A3A161EED1F99B8496A9FCFAC1349
2DFBAE8110E9811B2898D889A581451395C7C58186048384504A909B92A16E8A
E2275E83777297529C5ED2573FDC622D7D4307DFE77A4B16D1848D485679E592
C1AB0CB02879C5C4AAA33FCFA22C0A4AEABE4D4DEE308AC29CABBA411987C715
206297C0971364CC5B83001B07895F0D8126F67F4A68120DDA56FC6E466A3CA4
7F0F2383A60025C5D0C64D459276BF2D8F25F13137C7F1CC459CB3B3E945760E
98EAF5063E373A084CD6829DC18D063618B2C9C5C3C3F9B01526D9D71A749845
22CAFBAF6CD275B0F8470DB58184D56DEFCA7213829FCEAC430A54AAB1C27135
F14DBBD172CCE6CD2B6095B0157B9B295F244E6197FFF3759E08318611701B27
F723F3786A03BA85152A3C6A3620836DA8BB5CE31BAA722DDB36BA5642CE4117
AD1D6B9E368CC0191FD3EC665A0F563B55F2738B16DD43CF81342B8A5B460CF1
7342B3EC42F3EBB3440E2E602354F10D0B89AA2077894331ED25BF6955E13DA0
B4DE3740C28682534E57DF995F87B37C537FD5D25484B3B641C95A5D96C622B0
4FCDDB40B675F081053377364DE99FFAFE6D22E975678C98EC8A9069AEC8E237
722DBA55BA4214EBF66B06D640012D108ECD3329117185F2DCC8334D331FDB4C
F16123266B94843C4586F7B0914CF4136BAF49D0A85D7764EBB31166A29307F6
343DCA5AE9814FF8EBFD456F77844FC27438F6061CE0C155A07D1064B66DAFAF
B39332B22F2C43C3AD99954E96E39B52434EB13675C377D3C5C7267BEFE151C5
2A60427176D702F257ED71B2803A6BF70C74D8EF4783865CE3532C2BFC6208F2
BEDF5E26A4CAEAC397152D34458B281D8EA05D6583D2796F440720BE08EE3F85
5A597B65071E7946D81D3FF2F85F8CC4417D0D02BF2477552010705ED42A0896
ABD62805E2042E248A874E814B3D78F46AF4F001A3885AB7E7C4F285F9BD614A
00DE6825572189A19315AD3976AB880E5F0AFAB2498FE1D79954BD53619CA376
01FAEC649E37E9038CEFC41BA172055892C47614A9035E7CD93575C377D3C5C7
267BEFE151C52A60427176D702F254590A4A2E016B5FEADE1A79C0AFAD4A8734
34BA54F6D717AB58F78A4BE43408C7C2F6D4465B31BDEBFFA59EB012DB2B39A9
370330D258EE8515E8CBC0DA34E79D8085F8BD147086881CD9C9335856F5F195
FCAFBC3813546176EEA6745F62F0715C865422128A163B6C6AE0D98CA8116AA0
AF078126540BD2D435D0AD6CA9233144A0545BD34F7449237157219D79611E52
DE72B51F2BB650628AC5E429F423F250EB9E8AEB5BA66E6FBB5338F24FE4F9C3
EFD3404FB795EC4D0857AA5D6620C95021DF41F3DCF687067554D464306A44A4
9AF8095E431F91B8EA9B312FC277BE315B18312C8BE99537C3E44E721A361BED
6541FF9AB02AB229B8D20C7CCA131B23CEE3EA3747DDE3939D38A4E5DE096705
B4034226D6B5DE97BBDD742027FE22B2AA7037F55F05E547ADB16F56669A201D
A41C1DAA9B4E66C8E5A03D5F1D98DE47AB51DD77014C2925F4F0125AC8AB5385
65E06699AE5D68759A52096B795842B6283A0129D49E7E9AFCA904B37EDB25A8
0BF2A04235CD244B0A88652F5A1EC5546FD4DEAA2A82A209E244948D832C75AC
8BD1ECDD9992E9F8CF3DB923D549EA4E6D98A6FEDF3B2BE1E54BB8EFB775F1BC
E8B6B9B0696233F5AF80CD6A74273F5204CCD208C109EE75EF233DF172A38D21
74B4730947637701EFBB2FBA3063483F9E82D2336227E1D03B98C42383BF31B6
8F6A6309C9BC0124812E4286E9DB31983877FBC16B4E5EC481D8E9EF87B4C4C1
08E799E71AEE8C115164BD9BF92B1A79C9C7090465E9A00FBC634995A712AB2E
112E3E6AABFC1D6F293F9EE845A2ED6C77763127B0725900DD92FEAB15171D27
2BAF7200828B2E085A16B4BB005B30C1614AEAA2AEC112F30B3AF57D9EAE465F
BEF66FE82623DBED8135D5D1E2A2D9811D78900B7D347046FF9C2A9DA7AEE1F4
2E36FADCE69D1C31BA552A09B30216F9A60D1F58E74D0931CE5AB03850ECDAF2
01BBABA430326604E56F26766AB98A5C51659EE74A875CB811177A20A894351D
75B4E76BFF75C71D425F9409954DF168966159B2A302B801CBA292D1C07EB52F
3849F14FD66B8A34A64B53A37CF300EE316C982A0D58ACB2AB0B6D52C9A745F4
40BE173AB90CDB8D5A62492E44D2391EBD6625AEEDB22442CCEB84056435B241
9148A456405A6BDEBB44025A835D94E3FE7ED4898A10D61824D760F2B86372EC
36424D8A7581AB38447347DC26F8B6F0422F3340A01614CCC41D40D27BF1870C
1EFB412C14EBB08548C09B8594FA27E14DDF887194960B9E3222121B24B97DB7
866E8CE52B81CF44DA54017243EB1546BA7FE32409951CADA934F8896AA60374
62E2444EA33B01A22F873D195661CA3A1BBAEA7BCB4D93C90C0E83A3C7BD7646
FCB6C28886EC210A1F84DB25137A35AA5C7691B72AD442BDDAD18F30DB190E4D
004740C567EB0F86531E771C74DD3701419E5B08ED32C290A30B02CF572199F7
4645C0D9B4DB9DA965633F5DCD87B03DBADCE87FC499FF9DED0E6C8FD6715B57
97EDAC56AD49F59AC389979AC060DCC4606454904FB9E7BC9FCCAC1D11162783
57D8659BCC81753C2906EAC08FC3FB9AA3D2A83ADAAE5427689ED559EBE5BEE0
A331DE6080DA757EC74FFC5E9B1D2F70A87D381F424FC2F34BF902F401264C69
EECF460CF82F033635EB5B3A4F7DF718E0EB68A4F615AF7AD898C9CCA5105A68
7B74DAC1CE89B910A9B6D2C887A3C469F9DC2A96B15D33FE7C565961C2A1C0E5
FDAF8955FBC699FC847F077A81047021DF46F69AD1EB8532A8962EF0DB618EEE
B9F1CACEBF7299500D3C3520DA9E6E7040E6A0131184185A428C37E133A909D0
2EA7CC5DA03D0AE482ECB5F7AABF9749CF4B5BE79087218032FB6D3C67E6A4D8
646298E229C517E89E253C6E46CE01444ACD693258A53F98DB0DF475C8D74928
A381F1E74BB27AF07B164374998F867ABA7A5DFD196AC274D49269CB03F74834
07DC1F346E0934D208422226264CE8AFE6E870382132172F06F105BF2DB51EC3
DF2714104F031BF8D85907DFF2849E4C3C7B62E653903867AB470C9661EC1297
4B4B88A0AD2FFB4491A03346BB7DA151B13D4957485E52C2815090CA3B1221A1
2F749E5C4197196D48244E65F7A54E14EA3DEE4621E32EE2D28136724789FF22
47D8C7EBBE4E95D9CF6F8D4D204CC6D61EDC66E28B7CBDA7CB79240357C0AF60
E817427A9126A9C32B377627ED3AD4456E3A67BF5BB49920F6FE6620D699A53E
1F1DF8D844BB4719549E214E37598BCD577141B8DD30BFF0E275AE21DCA9039D
A02B91411A735B115F242689F50313538F4B55B04A1613170A35B4A0E368FFB1
A287BEF1D44B51773DBF726C3C3A068A6FD312637F59D0DA55F3777E4CBF6A73
D17EF7A14D2B11EACC1D21E9D96DFEC09E9230E3FC37327DE16AAF88BCEA640B
CD466BF822D43A0234ED71A3E1F6F88994686783149A0710F86A46D0B55C396E
C4871CD89B3C4BAFC0110D887303109E7301CAF24954577CAC249BA77682DD4F
CC6DF13B34B101D1E96E034AD66AC6630B20566943B798A3B63363920E22A90E
55283446AC96AD3BD1EDC9E713BE102EC5636217774935F630167167EE4A5121
BAF566BA0C2DC80C17A4E7DCEE787E2D2F704584CFD5C339DA77CF42F6480A1F
D29C8002637CAED51E2CD3ED5979AADBCC7D727237F164BBF516B03977EC5D80
2D9E7F1994A7646B1A03255BC3D74A7F9B4DA617EACDDD1193FC40DA2CFAACF2
CF39D3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3CBCE8DD618C282235CEA785C6A78D2363395579F2B2
D33E0A96FDE83A8A5594696CD718ED3BB458C2DA505105E6365BD57F140ECA79
A7DBC5BDC4692FEEA0C69754128BFF3B534AA2ED4E09E32A48A080A0528C027A
06DBB52362404C99C58A664D4ADEDF7B74E13E6D85E03E615A60A780F3788AAC
A2DC8EFBF1825630B15574DC1FEEC3A21CE1DE2CADAEE76E1540527E73B23D9C
B14BB4086687E740D8095E63F70CAAEF65D1CDE3764707A201142248276B7E4F
8924750C8361FDB1FA32821194D299ABF128FE251173268B8CCF777D3CB7717F
11B426808D7D9F477C48D7B6A7C242ADAA8595AA08E39E580442D3C50CD9E8D4
3B56D68065A97B680ABF57E74C65C720927327296C23CB5F312C82783B949195
1A63A8F7B71E650130F8C1FED4966E36E7E879A87DF95D1B75FBEDC03D02F28A
0B8845A0944098C4AA0F3D0894AC4BA9F2B4B8E959E8877C94C6AA9575819DDF
023FF06A5F3B1A51AE4850C6FDD58F3B6999DB5E1A4CB1BF6A6F67F27976C6BC
954572891470D5B7A0906CD92658FEFE5A0ADC08552CA63534B61B3AEDB1755A
0341E20E4D894D2DD8099F6BAE43C01A924BB9615DBB6786DF6522B4AFF4D46E
8B522CC9AB6FC6D10AF305373E1B87A5E462AD7A712809845D79276638214467
316210E275C4AAC7931329F212BB8B5B9215BEAF72F041F17D55B49B81F3D127
9D135C9F7A05F120B9638E9DC9E65F758F0FC4FD7904B0C56ADC1A80619F155C
66DC637B24236DAFE0AF946337B07E0D6E591ABD90B6D1A3EC389BD83EE4E884
03D84C5D8946BAFEBDD990BC58E653AA0B7567E02480AEC7EDE0CBCF1AC4B243
2B5FC671FC5A672F5C8AEA2FD7F27C852C97CEE1630AA99AFB93D3548358D32F
369FA93FB926139676774399E370879B537E40FD35BF269241C0DA67E5BEC040
A958B14BB3D7821513520EBDB60BA6EEA726EBA19DA8089F4589EB5DBF589EB1
0FC867273724D98A23040FEAA798EAB5EB11DBC60BCAF61FE849F032EB44EC04
BBEB415D3D76451DA11C81E10D93540DDC6D83A8CB39D2A4BEFDF3A7302FBECA
C599360C7BEF0CE5DC67A82455B8D7B2924AF04D87DEAD46DBA6577FAA7CB1A5
1FFE05669AAAAC1804C8AB204B239470333E347C82CCF0530A83E91F13CD5773
E59F0A2075E29408EBCB13227B1B3FF1D5CDA494461C14B83AAE0AE46843A72E
456F25F835B455CE8F38E0453DC75A172362799EC9444989CDAA5E26813EB731
3CE1AD9B567886A2174D1FD6FDE56385CFBC687016860F194EB762B4ACAC50AC
1F928BAD717868FC22CD74C0B9DAE239B0F59A1D38EDE1A6BEF6943DE252BD59
5FF4E366318FEDA27145CE81E57C06C5B1681CFF52DECF4046B208795C0D2154
95CDD27081932EC6CEC1817CE46405A02F193417275AF9B2051E165FC7A9AE49
90C85D2EF06FF5FFA52505875A13BFF0B6E93771F0654F07DF7313FF474B1FBD
86C39EFF96338FE0EA5971F7D56BC947A61E842A398B44B11E10F68D58DC0442
AB1D53D88607B0FFFB354BDFD54EC84C7DD7CF2A5D82E0237543B12548D684E6
9FEC3D84ED849FC423992291AD797DF060C6EB6939B4B36C669302319C979C23
5896E2F57739F04AD7D1FD2ECAF4EDBF05B0FDE8DEF11C64B3EC984F3E883FAB
26DE45C37CBCFD50322665B4D5EA86D40D2F43DD10B5618B7192E3CC47F2C27A
8688162DDBA3F0AFD20B8B04CD2CFE08F6ED2FEE9AEFC9FA5E5B9B611A50E48C
5E634B102BDC30F64A1761064C20A82B3E07FACA1B399B625FFF83A749CD7D80
1BEC211F01BC39CC2D384EEFF12A88D293A9F506B3D298A98AADDD65C19100EF
3E19E35618B1A649E6F5D99F9E03C459F8811D60260E23DC913D8A2BBEF37288
B5D18E7D2AF5D130F678007A70AD53830CB8EAC78BC383A47FDCC581C86281C9
E860949D7ADDB2C0E971BBA9B30B563F9B68272569A42DF60EDF3E71B802C2CD
C7FCDC882074AA1CE8F4F46580EA192DE88728685AB9799A0DA24AF8FF68BAFA
489CBC6BD1D6E9DF21EEF753F74CC18BCF349A9D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4A2DE9AEA203B209385B88D9E708FA615ADAD672C6
BE223D5855C0F6753649EFC00A7683A9EBCDDF1610B2D942987DAF090BF54FD4
E7304082BF34EBA0169EC3F6190879D5D8DE05CB5C6CE7C2212251BFE8824A87
3A277D0CE8C588611AF4987F7203DDCE93170428CB54EFDA16BCA73256C1FF85
2C85996873C9487906AB70DAF5E4FF2EBB5C7489358365EE072EB45FE7328E73
5D241828F39C98E813E0B142027DA0842BB3BB3A4EA8DE8EB34BB81AE7BA9B29
193A289A9EA7EC158512A268417204F047097E042BB52BDA0AA3ED16B4315244
E3BB451A99B211EEA2F1CD0A5709AC8CFC3EBA9A0C45B48925B43CD4417517CF
6F42243C234413756CA68A0F125A0E7C1CA1F6166685C3FDC27532C931AC8B86
E81FB0223686025707E5A69C6BF3D0C6660E636D6AD25B03A44355855B2712D6
F84E63A541739B3F161891F0FEF72180DA1546675AE16824DD84B6CA375598B6
C439A2E90E30B7AF6043F860D5D548B166C25921D8DDAD3398299D23D94203ED
FEB2A8899B078698314F08981397316AEEDFAF486F58FEF25284B5B5618A6762
967822C2B91D421D3C8CF5D76D071D3748C32BF1C779E9131603E8C0EDE2D696
E60DFEE5F15D5EA092DCC4D49B16373FD58807C44B06016EF5E2670A911AE147
CC5A9756F870A1716B4DC3D868BDE539079576E5CDFFAC34E165C063768ED394
770CF07675657587CB8A56596847362B00E9728B7CF7F5E85673E4B8C4F424D5
94F93A6861828F6251F206B9131C951D1ED4364A9CCE5383C0DD92E3E329CFC4
E2B36E704F5A2E99A7CBCE624FD99EBD4EE699630BC16854CFB80EDEF8A6A652
03EA75BF1416D23DA37B18363AB001813EFF029266FD7220DF1315C0E76AD8D0
3FF4CAB5E5114042B951CB9E36B323D53B28643AA12877E269C4D95E1ABCE508
4B1C0EE6096E008A5C34BEA647B937325FBA2FAFA9F834FC7F5DDF178584A24A
214283F53AA2D015BF620BA5C87D84E4607F3A29AD8DB076BD9AE6E949DB069E
5A8CC9484A18CBF278813319FAAF6C66177F200389C2015EE81663AA56EABEF7
C4CDE32059DC33368DFCD76D138D0BE636CDDE883E1CB4ADF94B4DFFE102DB0A
43842EACD9168B620439F55FCA7313B67CE7FA22F861B2BE1B1041C5C68C45B7
1A717B81834A23F54E80647B84B6EAB895BA6138753EF23A95D41A8069B91B9B
0B327E651C06AAC2897A2E839E3A2225EE93EE41B03F3907EC73E5B4F9B71156
B357F62608909B7E4D0D6E6DA17D2763E1E130164942DA5F704DE35D983D12A3
6140B8DA142FD05AA44E8034AB75C30DEC81BDC725D2CC7FA26EF0C059090FB9
3A5747EDA57889E0E402EF14AE8BD323700B083E6FB9B54FF40B63FFEF520AE1
5B9882BDC14A6567C19ABE55F8186365B30C9002FC88AC0C591F66241ECA8269
A34B5441CC0CF92EF7F66E79D3B2B7687683D34954230DC6E93A7772A7BC9056
B27636A3AB7844D6308C174441730ED96BE3E09FE4561AC4F28A2C7BEDD716B3
3B820BA74356DD9FC8C589974C55513AE70589392CB5599C789178CD1C1C86B8
FD8EF3FC186A8EA4C9BE51D592FCDED41C3662B6A487F14B9D9A5B20898C25C3
4DD931F1B09E72D4167DB96B594B7F8296FCE3845ED8FAF19EF067F6572E2787
8BAEE83AB15A7D8416623122579EBFEFB21DEEE302647D68DF3B50F5CAEA8BD4
F3E91ECEF9412CD96BC9190FF4B231AA728E36BE2546E81C23F4584FBF0D451C
ACC5142CD5AAC12ECEA34351F85390338ECC499C043E346A4DBA66B7EDE932FF
D84DCEAD5F98337B73527537B8FA58F86F01329F1C4BDC2FBE36276FCC5A538C
B4A58590A3D15A7909F012E909D4F3C596C6F28C2EE0009E717CFEFBBFEF27CF
58AB01C17F7F53615F79D689B6B02532EBE773369461C682C841008292750A37
6D0398DA95DF8AA168A0A9EC40CD9E45022A81934CE5B9973ADF81D7EC966369
AFD3D36EDE20B10EE93517665826A01E9F0C9B401CC50F9B0A3DF60AF84E3C2F
621C38C0CAEA89B2205499005327DA99E494D9E1FE8EB703797B611CDDF7DB31
F62CD736AD7AE654A7A2D892EA471590989ED2A8B9CA97C357ABD25D6B8DCB78
E81FB5B8D5C70217A7BC930F472F93E247E29CD9852001BD2E16E51AE491BFAB
A39D0F2725E0DBA7C8CE305DE7C1B59DC2184E09F7B7B2AC0F915A89AB253EFA
653E29CDBE7BEF9D40CA8BFEAB9B506088DB3CF99C78613AF62054AE1A32A95B
595E32FF28C330E73A2D5F605E33B1B0E45BE31A8DA7AFFA42839CC734E717BD
D52F97832A24A6606A5065F649FE81E6B3B1E8D0ECC21206BB80B2FCB7BECB03
39036F3C3B3A2FB108872E8860AB6F67961567329F5626E6328EBE3D35B8883D
AB6FCA8A2B979837A433DEAA348233900A5BAFA7892567BEA46F08D78E105FB1
0252DC8E0EA149DF9D95D5D24C4B6B2795D94BDEB015C731EDFF85EC1CFA93D5
D6087892FEE1D0B7EECA805A8ECC002A4D483ED01D7F56D4B0ECD46EF72E02F9
E238A7C7FEF6E38762888F2912920CD0C00F393D1D07D7CB3A30733FCEBF2730
D812FDA06934F16F183052D3D1BEE1F6F9E8DD2B04A1858D9B4BD21DC1E32FCB
7610BEAD29527E98C6ED10893E4B2C5725588E1C4490068ACC9773393CE62FEA
ED981D7EC957174A99C23140EDEB93B2B8615EF1D6868BFE9F953BF90D731B90
C4F19A0999B940D7B30E13B1118FD1A28A2CEE1A78FBCD55AFD5FB30944EE4F1
82641F05198CB96E1262F95B05E91CF259187F0E4A5BDF42FF18E08E64973275
A1BF22D5714E8851D93331FF300A266B618126D10754D562A97C214E88DCF08F
2838A5BEB990584A9351DC689D69CB7FFBED316BC6EEB5CDB0636DF51B3F92F4
E3681F40F1FE8680698250F9C06BCFCEC5781A692410F18B35935AA9D15EB6A4
59ABA0B05A7962C3723BF6E61E3C3E10DE25AE1908F86A47261CB849B07F5777
B063247CD0F1D75102D7BEBA6BFAE4C9D1BB679CBABE4996D7829CA57157A0C2
1189663DB06992292E4EE841E84D80C291C9516038BAB4939A9AB9084BBC0CB1
E5DE6601748ECB2203D4A58E65535880196E5F903AEB022234807713E3898334
BD99CFBE66C4FDBDD9B918062C9FF7731B8B087C0C1D51C663DBA72B2A6879C6
F5548250CE9E6CCDD4233EC7D5B8DFADB5303CD0D839F43F21E23B4554E19407
D4A864472E90A42B6F41EAF5432B60468F2EF9010C645A00CCC95B68C83FCADF
3783BC6EEB1F9C2ED760715FC38E72AC28767A352ED99299F90115184C30A709
957CE23D39B6809AA84EEBF5EA939C42C38586EAAB50B259072144CDE6AA8770
4C4B218F9B7C4B3EAA9824073E848B2EC0BCAFFA37BA5DDB9B72AC86DA0A0980
C3D80ABCB006353336ABF31A755A0BE1E13961ACDE29489B5834F149E35D6110
6C2D4029B943D7E93FD4820BB64383828603A74672FBD58998C2ED6B93CF62F8
E991B754899CE46B900DC9392FC78678B5FB7A9D371CAAB9A8A382A36EAB6BA5
CC175A4DF80041603CE71AD9F2AC7E8DB53B169D9EA548E15971B27D34B280B3
35AD80453B44C4C1C9FBEDD19717ED27662EDD238036C9A646C280EFC242ECD5
3B654B327A4F7893FDDEE3C61F3EBFDD15A822138A17ED1C6B5AE4DFC3196732
8CA6364D5DB8DCD4482272C24A3B73F8F7C8CE3CBB1DE5A1A15C14A676EF40F0
B1FD9368D72EE7E7B672905E7A4222ED648A6CA0F8150494A7C52D12613781FC
C99AA56713FCF06F2D8196D967F64D78986AF651D9F7ED759091062EED2A868E
004E417D816B7521F1173793087399AE2CD42EA3950E8C685E1633137B7C0EBA
9B930FE769403B46E2ACDF34F9434B8DE19A493228071A93B8A02275FB369ACA
798069F2B5CE2BDD851656B45E3A871E4D537100C4D8E46C60C4A7CDE9B6D5A0
ED0393A2778399297C1CBDDBCA5E9945C1442901A183560C67ABCC01E4432BE6
35B3155AEC5E74811636EE66D90B78AE999102D42368663888593BEF3901ACA1
CA80B728B77A07EF96D31F433749553A860F979D8C74B1ACB91AA5DEEB130316
3FBEE75E1C89CEF2A0ED40F34E94DC5DF6CEF62134B347E70457B09A1F5E4CF7
0ACD3DF3E50EED85DAD35B420A9E160BF7140BEE573BDBE59031726F1358D3FC
010FE9360FE8EEB9F13663E537B7297452786A54059C9DBEB1B913570A51B205
11DADA70F48E30B9D82C6E0BBE3DE513464FA096C0E033CE57E64863E0F1ED47
25EE7312BEB40887FB0828548474134736DC80EF55BB1D5A1D7873601FA26361
3AFF8C32B8224C48E5BDC02294CDD1896E3E2EB4A470671F12FC2A455157B1BF
595EA3E14929085DBE54D3D6E88FE09CC08E327ED027B81EB14663E3073EA5DA
17D48A9CAEE7F9DFF85745A875F3BF3C4B8C0F9789FA99DDE5F286E04ABE3DAF
C8C628EBF668BD3AE4E600A826CA8EE7AD235AF1F50DA985D21FEF5897DCC7EF
48D2CFACE7F841AC1F60D78689111BFA6B2D1015854A4460A85E9E413EC5AF48
825E4C87DF73902907BE0C2DA8AD2C5FDE6EAAE4042066A92DDED5BE33EEE824
203A4347FB11B98441AC98E80F6F1927389F1E876DE3D7C93970CE84EC6B9433
F84D118630A3B2233A129E3E729FBD2D073A400E7CA0B870EE6EBF02A0707CEA
BD8D4F57553B02B7017DC7778496D1A7100D9A915D2A8FEA7A25A5E58627242C
75E303F4155CA1CAC2A5CFF1F316242637F6289B2C69832C060FDC409613E0BD
A33FCCCFD92164C4098278B09BFF9FEF743052B6E8F77FBEE8B4F54407F5C5AB
BAA3043BD6D5775CC40869A75EAD85C8563C2D5E37C212A8F7E130FF36DF912A
28D99912C544BD31F8A37CCA01167F0840F3EF427451F2250A597961B6636831
EACA4A13624850276571E8BAAC6262FEA539A4556B9C27EE1E9D95B61F2140D5
CF62135B9B4EAA4D3CADB581AFD6A7C041B06172198B32F99D58E21B0A783020
26F8535B0956FE359AEE06232DA7EB44DF4C4BCD563A3EDA4929DA9714BF6EB5
9584D63211432C5D39F018998F21E54E4904438467C435361B9EE2378B0B2365
178CE4FA07BD8FD9CA0AC8FB5A2E119DAA9F80083C9BC54F4586C8A5A40CB4E9
209DE21B799AEE655E61E18CB57B816A244F2B33FCC33D67A75F80431D059BF7
D7804181BAA239935900278C6C485D0A6DA4A267B12A56BC42393BD0087F2C88
AECC3367A8436F035D79715C69709BD5C0BF324CD639E359701CF821383BB92C
2F382C0FFB9E1B52AECE280F51BC2300C56A6A6FA7700D6F6C131841B0AF2687
A28AD2EF0242021D85C50EF4F0FA7E8DDAA7E098E7A4EDA571EED8BD7ECF7829
B310429383B5497FF39BD1438FA041ED197EEBAB524642B77C830532ECC75487
EC9AD98BCC98001B381FF0A1224CBD05F6F7703414FACA424905C482B190C7FE
B04E13FC963C0478D72B62197BFE9D27CB74DB2CC263413888D1C4B8121EC2C5
D4A5B3C1DC4E926352B57E7DAE80060272B7EDC9492C1FDD6E1CC05640C1DE55
09B5BCC20BBBB289486F6C7E238C2DF74F0EE0986BD86BA865BB11FBF008D13A
744CAD6D8BF3D4C7CCD9314923F532E28EDC1F4EC3D0E698D823587398205E85
BC528D1A33F8B0F76A1EC6011368DCD18C040AF17A438014B5902A55EE220152
C90348CF590A058F35590CEA6A16E993261B6B73BC61EC9CC7B9F5F7655E9A7B
DA3BFB7599B02E5A127089473EF2D62241645536E05F76B3DC275C95EE5FAF3A
6D876536B55707F5D4744B6632FF6D53076BCA820F31513270C66D023F314DA4
AC3617AD77C899FE86E54B8BDB1490AC76FF84E0D886EE684E50997A09BCF819
BDA0F556460AA7F620A75F6B18EA72F20358E40044BA7B82BEACCD1049EE3C45
8949827690BF7B6E45B4F8674A6FA270F14B4944F2733E9B543C02BAA1E989E1
BDDA6F5B1252670E35238A3940A7325DC5A5B0D8ADB5563588D38C1151A01277
9EAA006034053FC7DBF813A96D33773AACD4000D71140AE2CB397A1F365467D5
6D210B185F12F8DC154E4B79B1671A7DE29873F9600A094DC3C4B0CB7DE48870
D04E719830A5B65565788B7370527464C55762EC46306800B756F1D4C5E6EC8D
C24FDEB0B8D539D079FCDC56E9BC4B1C026AD2A9E4FA7FBD5CE49A470899F4F8
3517B5AD2EF5E2A1D707BE5A2C968491730CC85A6FAC2CF9D670F1FB665D3925
F9B88CDE5FA2B78E5652CA2B448242D6361E955D33156C4B9AEC2DA6D2B22E1B
141B304E3316ED1F2C3EA48DD25CA2B8A0F318B7334DFAAE85F18EA650808DE7
828B69DDE61BCA325A76EDD8679EF63E7AF5DB47238DB6E5DA2D2458FED396A4
A4AB4BB2CEC3D8CD7C7006279089554DDEE17CCB13AD3D5754FE8FBF4EE23A4D
6862F0EEA2827DAFB29222D619822D08CF5ACC9DDC68D89F32A2ECD190F12397
98DB5F75ED2150480DD677F5CCF1CEEE6350FD24E8A5821F6CC8CEE36C5B3BDD
CB4B8EC7AAF5620C928EFC40B58D828722F0FA75A0F4913D2F5DB4EED1DAB04C
EEAA337C69B5681BE101627FCB6E622B8AC60B843EA3E074100D8E90D22AA565
97E52A7CAD9144F3A40009255EECCE5A74D6E6A1BE31E078D0A011258412B973
723FE57212FE29611404794589607CB7892AFD17FBD59453B739B46B0AF3DD3C
690ACA2DC5CBEE998861D1319CF4B7FFAACF9F02E28FD1594A96B28C7AB1391B
25014B55ACA65DCC2D70D668CA84B5A59A192849496DDCD63D1A2CD070388202
2626587C52E49CFEA53498B4287CA6ED92BCF2B45DD711488E4B03B3ABF8562E
1D016CFFBCD753899CB8F87ED5B96D606B374E0E4927B5D413A210805F00C8E0
2C520F949C2C3EF0203646F53CDDEC1E9BC237580394D11AC283E2262B5AA784
EDBC91FFBE6C83D561EA7818371714455C1951CE56676BAE72E477265B81BE7D
EE7B6433BAB933303A7D07625363424D4E83D3930C008B43C65AEF0DE3631E0F
EA8C168B1F07AF698BBC6013204A748192F0F137E33EB9D4A113F5BF8F391A11
79E6D23A19D1D8303C39AC1A889D7B29349C96A4FE99463D8123813D247827B4
0DC36A2CBA4A701C45942DB1C91A986E093880A3C18EC4503D3F55A3374474F1
D4BE727403F1A863B3F62A4266E23A13459056C077EAE6F2F7D011842E5031EE
7A131C5F3338814148B1014539DD31227E0736F704E817D19DF54BB114C5DD71
0E6DE3B94D7929DF5EB08295C2802C2D94E82EB2C9D5C2056F4C218D0DD3F142
900353EFC3A7D5BA1EB1F51ADF85A245F599CB634717044A9E4EDFB6081B2F97
03952C823C08E6271FE7E2B6FD928FF7E51CBB67E70B290AC88D73F267B9E435
D3C02792CB44A20B258ED67194ABE9DB2D79DE8F8B767D8AA14EC60598548762
C14482191756BB8F59D051129C48C83F18B685A34C3C85CEDAABD9BCE6C2D86A
F93DE35FB61FDFA5A4C78E426D6F68DFE42F76B1CEA0D87F3FCEBF2730D812FD
DDD016B803C38B892381628EEE397F02CBEEBCD4DECCF681450F0BF41741C5D8
73F5CAC123513339AD7F5B19D9EE63CB585BD427A742AD3C732E32BC0767B9FB
DBA0DB04699C2988BDF03477D66DEEA931F9FDD3391E0E2353DC2EA171E90DE5
650A0F5E915B631D0B097082E73509B70F0C64694B73BFF6EFC27C909C106FFC
54EFC06F76C5128203F99E12BDCC8476F4E29A9CAB9E821B14F15B5E14E66652
6031CFC63A6968FEB1C8FE95E164997DE425D07BF654BF51B4805A6FF8A99DE3
167E4031624F0ACB218614BE7415679E5731BADFA0C6E2C7FAE2B6477320DAF0
1FC329D22DD9F2B5CF6BFC015A54C5F26A3B404B9B9376E79A8034228C23432A
967E4FD41CDD60D6E413059A58FA556EF334D9F4D25F93A08414E5CEAD55C5F2
EC61150D2E80B538D8C678DF42CD3B502C8190F3B63A3AB09D8ABD4197907A32
E8062A9F9101ADD125A32195B8CB98C9B19235FD0666256B14801160E4BFA86D
1BB635E8AC746436363EB1AFC86E45225931C102F27DDA7E73EE21449B74855B
FB90047AF1D710DFEBA70819672E2EDD7AA0E5BDD528072D7D27CFF96C4B2E43
38930FD328A6DDF9FC2764F52DC679F7E5C2F5D994FBE671F6EC72227A48CB51
0FA8D9CE71BFFCE2CD7E396C3A6ADAC40C00E20BDE3BB821F3BB68A476DBAFFC
085E27E6A1CB50F4DD9A5B40AB52A3B20DA54D1AE41E82BA26DD7650B28A3212
0718E79ABD1C795A5C3295F2FCA28A1704291269248EC5989048434B04D387CA
82AC039F77FEF1C7C8CB76A42201B3B00F44ADCE246169B85799653AA4927A44
09247429AE34AB0FA35CC727EC10365966AF2C0D674C7B213890B348F1657F32
7D95A648952B5B8CD916DF50CFB85851360296BCF7742BAE933D86EF556883CE
C750C615EDCBCCDF3FA0B31F34CAE2D347A1E93586EB95FDD3D1DB7157B21B7A
9DD8913DDE9F3B04019CE0D724C1F6521925BD4FDBAC36DB8E02835E748597CD
52F41C780BAD637C4D7580CFC0320FF03F5CDC3DB656367432F670E1EA6757CE
2D6C995F427B31F18A672D31DA3CFAA35DB22ADE1210277ADD20804B763FDE96
14BDB2EDFD18C10D3E6FADA25CCBE7F7924AFEC7130DE52A490DD550A2732517
1953B66FF7FC11A7338F380927E5F20F65E61032E53BD00CF49E0C42221FD0EC
A5100F4FEE2DF1F839B2A5D900EC8D437D7E968A4CE41B89961BBB7F30C807B9
59F9270F7CC39CEC484577AC6B2EE3FF223DB92A482534A58D7FC6B399DF8584
D5DB0E5C30E5A42DB22DD8E13A29F907AA15E2CAA936824217A1FA558FEFF048
5CAF90627DC9C0AE474DAE890620BF249A218DE01B8B920F09E9FA8EE38CB1CF
69858CFD235685341F0D95B27ECA06AEA1C215927B9B509F7B8ED0F344714512
8EBAF2B73398289AC6CC9AE7912CD3F2EAB2010152363BF9CE7D96355721BD58
10723ED1EAF9B88AD6A9CCB5F6F72FC0614C2512DDD48322034157CFC8647FA8
9838045BDF8FF22D8BFD89712DB27FE8FCAAF23FE48C6D33588808B1AADE9680
49989F598B1E89DBFB2B7C07EDDFCC655BC55C28705A1143C1F56F7CFD366BF9
B140E1940E13D7443EFCEED61616324DB2DB490C29FF12165AE2B197B7E3A330
37F0AC986830F14DBBD172CCE6CD2B6095B0157B9B295F244E674F6327A57DF0
B4CC9D118666C78DD383D722EC2C91238F59135C3A2E737A9DC43C228782BC17
554B290734ABD58AB29C8C564D794FDAA23A5322CCE26B31363BDD6A79DF19EB
F3CB07A25182E3F959D47283B193B442517206AF76C4288FBC0046ABE6DEE542
E1F77DFBD40A3D1882588057567BF58497ECE9A3914678EE3A7C7BE835847D23
24E6F0C83089B39ABF01C9BDA302A7C5CB636C5D6D2B1CEBA3DB1E042443B665
E915991D932209B3F4CE1CE54715E42D9D1AFFF7AACCB3BE5EF63B1C4E79B49B
EB8100A8847CEAAD3690C5D73FC232347B4A3852F42DA9F8D89A6B610790FD82
681B0435C7EA8C1A0A48D9715C65B5B3E0C0E5F2D242B83C3EDC379AA41C5329
F2EFFA0034D86C3F619642F7D4011AAE2D2BB717838BCC3807D3A2EDDAD93411
89319696D2B0B621C5C332BE355EDAC9632EB2FB3B0007243F409731FFDC383C
E38988F36222BBAE11B6FBA29AE0A974673C2862BA76B4507ABF3F1E973E8B4F
3DAD7FA872B15FAAAB31080477B9E3B6FCB6764227AACBD15214654422D7C885
6AFD1AA195D9F12E03463930D05A3D71E1E9830AC1A4C0C41156F34797942F92
27920C2A2602C8A60A6275398BFB9D6D639858B5407E1085B1D5104D4DA82216
87F68326E6C59A9E0A045BB02C811F1ED8DA686D6B8A12ECA7752E0477CC7F94
5AA8CA30ECC8B0144D12CEFA37A93751BC46076F01E2D91BA27FAF9AB7A01A53
40A6F5EAF3867D0BA21009BDCFE0D7F5BCFA2F280EF661B999C85AAF3A2346EA
93FE7B04414B71D626BF1951E614938B3324E67788D1EF8C9E48A54998D814DE
4299F25A57BD3B18556087D7A042518C43DC9DC3A1916F7C1E4D3BA60B95605D
A55C67C5F6EF7AE2049EA3D6202102A17F8506F5E212668F41F37ADD6989E85F
CA2265E27A5968277FFB26A6046D8DEC20E6CFA49B90D49B7457E8967A96C2EF
A24E1396335316093CDAC3EF246D8734301BA52C5191C256730BF1D7F063A841
9830FC907CDEC4ABDB741828D14F79190726592F5D4BCE6738CC357F0EB6F73D
82D11E606B3AAB40F2DF4E6AD3AADA6F2415A8BCD5C987B484EE959192C6F2F6
C635A2C17CBECEC40386F048879C10118431A5217D77295DE5EA762F84881C2C
25CFF2F535F2AD4A5C73718F38A4E67E61CD7A1713DE7AD5B63F47D3182078F3
1BB1DD166D07EDE6454270BE0140F6321F45B5D6F83CE3CC63FD1CF93E8926EC
03228E7EDE8BB02B82E58BCB9BE047B377F3257BCD12030D71140AE06F9D2517
FA41ACD230B1E0CE76E289C42EAB07B0F60632D6FF1D47B7EA53FD3D3ABA9F3C
FBF0C0DE305E7AD3F9BA9D9C2EE4F3D571285E319A78F909421C31359DDD2B0A
559F8D4DFEF81A9B1FA762109D5886BF9CE95E9EF19EE528720E5C8231DD6D7E
D8FA5D2C953BD8BDC13DBC5057A7323AE9C2D18348DE00561777DD1CB32951C1
C09D9BB3D1C77BF9ECE6A91142D95593EF9FD51E9849C2333F0722046046DC94
B5017D456E865FB2E416C4EE1DDF22DBC756822E7E515F4867B0507001D56A6A
EAF02BE17442D9E34B3281BEC63A84CFFFA66D1C3CD57455728D0182782F8427
7397DAE62595E8913877434B12D4DB66F749B1803E3C1EF42D935EFB4AEBC656
854ADB4AEEC1FA85D117825A1595466DD4A1542B74D7A7D21A03DA3F52C1F829
6D44549A5ACB293CCA55299C1B7FC3CD92578A57F5FAD2717B07EC5EC512D732
AE2BCEF21BA68EAF0838734E691BC16C50353B2441985488F0E70615F0C0A49A
3C4E6440CCEE637518F5812EB351B6558150E2B20DEE7E713FDFB10EE9351766
5826A01E9F0C9B4504BA317B507875E601E6C0BC1BEE8EC0B014E2B65B5E92D2
C5E6EC8DC24FDEB0B8D539D079FCDC56E9BC4B1EE5AD7D7BA88D58E2EDD30493
564B38F53F50A4B25DC6B96CCC9896FD453CF3AF2307B191F79C5C6F070D7E81
448300AEB3921E1193A47BEAF0D9AD677703A1ECE6EC41D0469A37176FFBCBE1
C6CB58A383EAAEA0F49A02026DD444EFBFFCCAF634AE7A1D21B652818AABE247
C5D5605766723212888B1EEFA597E19191FAE2BEF8425D04CF2BE109A7DEBE36
A84A81896B8268EB0EEB0C30DBF301D50629EC6E67425303B807264A96A8F41B
387AE7E4D6EDC2658A029D0F7EE55792ED754947AA98663DA46206E7A75B1E7A
C0247834B45583EF4A5A873CA0A32864F262D4F64C91525C1DC02842F620E35C
BC11D4DFE8EFBAE640A2F4B94F244D365B740229495511637ABD5A6967E6004D
88512A8506E972044566D6607AC0C67D552DDE51BFC9B0BD6692A8644BA62FCE
5C7D9F22D433947287EB0A301D916686D396EC0BEB11232DDAFB2043F674EA73
C9F043EB73E6A0511F1C472878641424814F2BCF083E0B5BCC7BFF6D08F61C9D
E7E833A8D931D72997CC2A31671D9D35080A726673FAFA23FBFA2B95ECCF029A
6B18A512D30CEB0B6ADF80FF1679B4262609EFE26FAC8DD975948DBF39EBE38E
2A8DD0C921E82E96046449A558A88D426B6C046E9A088FA0F3CCC43BCE9B25CD
64E26B57F1DE47D6F9DAD18BE663D17674966B87AF047756C808A2F5B7E88AA3
55F27B3D83221811DA066F16583E31EDBAF6421FD5099C6A2A44FF14B85E9EEE
582D062693DF8E223CDD15B8B185AA9202DF0F1AE8C44FE31CEE80C0D8954150
DB3E2C7FAB2182CFAF469B9B156B1E15A51D08E78EB2EC86A50DEF8FE9157BA9
B47ADDAB87D35514B4C0829316E7B9879BDEA921664EEC4F30A1261A0096AB65
80B12D648ED51EAF86B3636DF51B3F92F4E3681F40F1FE8680698250F9CB0EA2
15C9B362B32A001779973DEAB1CFF05FE0BED47CE1D68BC1B687408F072FA391
643405435A09C1257CFAFD5E93C0E3E6E5A7996D4A6636504D5B341D7433EDF4
B2F4A833247E900925AB5E6CEE75B1741A3DD9230A4AC43ADA790FF3BF23A13C
2B1B69EEB75950F9106F2BA346B7E558B560043129C527722B4E3302256A9881
1180A29CE761E937B694F26909D2A34BFF70378B1A9116D2D7172DF181129DED
B9A655EE349F0956DB6D6268C6CDA963CA415362050ECB9A7C3AB8AB6C697AD5
845D58DF85B556188C88BD1E7273E1A42F36C0C6E0FB68F94CED4942530563B0
659D9717F0BB4C4E8B8101FFAC7B89E00F22D48D50A8899DD24D4DF5D873698E
71509955240311BAB41483B8FFC69B77AFA35274588303F9E8178B4EB0F3F375
2B178AD1EDC212E7FC06E86F8C31DCA9696DDA0E3D5878314012CAB867D7CF70
91C7C7FE7488B915C6A5A7191AE45D1106F2F63B7E9605F16FD2822C03FA3D30
CFB25E01E9F870CA8523DCDF93D57CE57C1759F574F4220F55F8342930A75193
E883C04AC3D262EFF1946E25B462508AB5353B6428ABB42BBE9C1F6C104A56F6
F095E46DDB637486F5A5AE16B8B27E8909626114A5A596F9122CF87CF933F558
E4660C9FE5D440B33AE6DD422ED5C153FC538358DD1EFABC84E666D943969589
6C5423ED4BEFBBF77C6C32B88FF3F1046E4EB2CD942E7070249AECB4DD4B8C7D
BE9B8A3BD00614A35B7BD9E4187D87F5321FDC68CDD7964228AD7A5AA908FB05
F63FF80FC1A89D879E84D3ED2E8B205541195129A01DF4507E0CA02A9F6A6966
DE25D75B644AE2C16B463727A8AE10C3B0D309A6E8E5F3879805D13FB270799F
DB98850AC561A1B95B9A4F63E82747CBB98970AD3D2AD2C8B193113A23FB8DE7
AEA770C4DDD15EE038371C57926BAD7877E8D288055AAA4B08E97B5BD3466C68
97065446F765344411B3F64D6A0AEB2C3DDAB25909FEF00778D7003A85E2B3F1
B8C260D0E3D67FBFF208B4187A30472FDA891AC0885CE1CEF30330B0AC6E3AAF
A7C3882BB3538E15B9C018308B9E18F720457A4AB35C68C07865063A2AFC57C7
67638F184A66D911FDA9633767CC89A787F82D8BDC14E4B56209D2B777C13DEF
AB9BBFFCB3FE9740C6D9FF8DBBA046ADD81969BB7B6E75FE0CCA1D5EF9F69BBD
6D5C0765DBE500F74AB96D945E03481E0640B8DD548160E762999685ABF36571
E020B318F484B7F7490003F8E558C25410208AC999A8717636059CBE56B9B2FE
8226C32A4BCBBF230FC69B3106F6FC309582A8F0D6A9A658BC17C8091FBF89A8
CFE1BD96B21D6EAD9E432F761AE69411053B0BF86FA14CC2242F7B66894269D7
19848F1FB5D7C4F0680FFDE98F1E5F353A07B59A0704AF6A1251535E8EE49291
21E532C6604C059CBABE2C9A512F7954BFF3969DD0E8933C0625142C335D2ABB
0A692F1CE5062648E525ABF5A06342869329971DB2754024729BBB2824C64957
7E9F8322CE0099BE78AABBE501C2CBFAEB6FE80F60C081646E30ABD086CF9C09
A6B0FEE7416646141CCDA450873A91A8C256CC17087E43475627CE5C40467BC3
63E9D0090BD9A658969B3BA995F1D6868BFE9F953BF533B57F1DAE3FE9FFAC26
1F75826E8A50B36923BF75D17B1E961D24B396DF750E2C44E5CB9DCE747E296F
7E74F356B14EC4BA6D11343AD3B5D2A864498651C5705B18F064F326535CFBC2
DDCF5DA974B2068488AE47A9F07EDCB0331D56EAD7EC62CFC83DE5D30412F4E1
ADF2D35D4A75921741A4F2D840D0F744A1470A7A67AA5644EAFFD8D987A7C50A
07E25B7ABFF7C55A23138978A03DDB1EB14399457B8CAA6F483C4A0D6AC61C4E
4DCC86D3C62FE9E069A1725AEBCC5CB1F7A93B67F683E0A69FCC925C5D25BBD0
41EDA5DD5659A0360EF5714B61218B4D73F8A9777879C585B192D0F6BFDC4689
84B238AE514B57CBEE38C5A6038B4A69ABA6974F5534F5059299ABE075FBFF39
0738673CDFF3EED771F16ABFA0146AB08A3DFE98951927F9C3A83202250796C4
EC0BF41D29EA8262E689C52530CB43926685FF502BBB4FA9DC316805EC51AA29
54E34D1095C8322758473684ED055AE5681A99559451496988B1682D6B23ACE3
10ECB97A396C1E80F1096EA9B7208B77E4C82D82F098BB7A46A9BD5B179C5C3F
2FA8A9D8446A8F7217744839EAE197BA88BAAD3DBC74CF2C7FBF0C76FAA4EB34
7390DD08351427E46A9E6313BAEB3A19493375F93917170A43C4574AD7FFDD60
55C3ED9E8BBF8FCCFE8CC04E0FDC543E6B2D1B232ED1F6A1B37ED3F17DE0D82E
F0E15DFECF3FADDE1181DD7A2DF5B3390B2F19EA4B2C4883D212135CFED3FF48
9E44C5390BA39A0DE57212027023944DD1FD249F507BC1668D127A59D1C07943
A5C720C4BE1B5AA671335EF9B6230D3123380AADC1DCD8BD9144CC9C39DFC5E3
1E99DEC48FF875F36FF8453525F3585D54BBF85176E9D9E5015CBD6DC0AEB498
62AB0712464EEA52BAC573105400776E2A65C4A068C3B5092F3E1234B3D8EF29
FEFE5FEF8673DC54EF6509D02C6FEF286C526C0195115C1F18FA11E2F7907B96
26CA16609BFEE67DB56CFE2B9EA501CA1E0C4F2554BD6F1F4C69E46C9C220B8A
6640FF44FA132CF54473AF0AE80410C4FBC3A45FBE3BA446F6D0E8B5A1C11402
138F3DCB54A3624AADFFC21A737506DB09B80F5F8576B477970D94FD85B3A745
5B4BA423F65D1A14100918F605CFE56DA8B9A95E2F71E964DFE43633E97B755E
4E02F77721A9E29F41FC78136D61A9B831FF7A3843716F052D31C822DCDF6415
E2E933F65C28D8AD2210992E8C115F926BB8BDD04004EDACB8E3A59C3694C832
D3A03EF24ECB073936A0C035ECDD9681A52EBCC900994001CB1E5F4CC8301E22
98C2060F8739E01797FBC1975B60E7795A4E3B234E204F9BF2FE0868AD5FEDAB
9A24D99EB12F66F5579AD76FD9D183E84CE1BF8F83F59D1920458000AA7477BE
9227A49CD2F27816A9E869703F94EAC7041BB08566DC1B0C2F54BDA112352814
FB6FAB913472DAB4547A50C2C40A1C53F2573655D4AA05C100CE303EBCC73BB5
F44FFB8A3D293409C469920A5E60BE73C36611705DF0DE767FEB19DD61AA4040
4BFD6BD739FEB4B951EEF8BB47854C5E8DF2FF6A4C39417962E0DE97861AD72D
EF9AED159C0F372BEC52B478206ED9F8FAF6B0A70F46877976C12ECFF137CAB2
97762FB5C45277393235C450451C550EE09F2432D8AAA1829308E3583315E31B
F70E2E0FDF33BD6862C1D1A24E7B41EBAD57574D43E06E13690F831AC3AB9A82
66F18F7C2B8810D01F7456C58AEA498BF279BED4A21EA7745C4CCA4E75E460FB
BB1875E59CD940B46F5B4C359A700512C58E83F41C1EB95705A5F87B523A2065
B4A57A4B574265A679334D5EBCB073FF6966BD9327BA1D81544F49D54A45AE6D
370441DE9711BA3E3907187FD4F730416FC7940668F722EFB7E8ECCE37D41380
81202D1A9C176C47F7AC530B409CA2BBF912DBB455D0638769DE168AA57C32E4
1FCF507E742CE254F19EC5974DD73F5356B44FF1625F8400B9041822D7257822
D94CD61F32B16F50DAA186DD0C099E81618AF2A19313E987E59FB4EB9C0ED848
B7EA062080F31768DCFBB1EA891A0A9D49713838724BB730AC3FEFDAD3EA1355
A7226DD78ABB6D9F64488B6167241E1BDD82163C866CA23888D5EBC75437CFCC
9ECD53421847E00AC610B2031DC07C2C3B6154E3BCD08D86EB6014A0B6EC013C
512E04A514D8721C8C234397D2C7175DCBA5B70CC4653E9668D6C18CD25712D2
2A2E1FF953CDB72CEEF651F2AD253AC4CB00CB3C25560D91E4B289697F0DDB39
616ECFF4159B25E01C7703B06DE82DF47FD9085A4DACFCF1239EDF21F4748581
8C70864FB3E45F678E37B79A0D3ABCC1C4DD55BB8A9AC00CB8C0D4B64A6799C8
449E97E13CA0AAAB196E8C21AEB93013BFD025325A2DEC8E69F5F1F3E3B947BC
9F2D048F3CE2B2DC3CAE36C5F93D9F22AF19E36D0C866D1823322F90BDA06C02
686CDECE9401E28DC3E73A6B697EAD7EBA8F1581E4DBA9E430E84D6D13CF0D7E
72796FB5DD61BDF7B63EF0A7A2EBA47FEB9C1B3A00E57FDE7705C7FFE9181FFE
1E43692A3D9D13EC816C0C64F38C011ECF24C176770D7615A43913C937767E8D
068933F1B7A739AB3CBF152131619584E13EB35A0BA09060CCFCBBC9E7DFB5A2
7763858C074880519DE36B7F98AF85F3B3D95ED3FBB8E563C2CC64E2DA3631AB
809AE252546D91591D551CB2D3F55CBFC84B20B5FA6E9D8FB6A1C8B0FDCF15B6
A63AFA5BB91037646C4B47A7652A6DA9B6F62B7B226B55422AEE68AB84773D6C
4295931AA3AB6417A460FB3C0C9684919211445CEE12A81BEDE98B974DEA5C2E
7F1A9546AC027C4654A0C2070916179C5504D583180FC8A07225691B9F049DD9
46A2F439F870A69E95446509E78C407E3D19DD051C9F2A8B779E03382FED3299
855DDC2831CA5CF30F080F80E68281DC2CFF8EC320455A3E59D22CAE85454B70
3A513CFFD39EFCCC0D1C60B2E56D0AD44A60403971DD61EADBDD31BEEF54AF85
EF98CF8FFC6A54701AF0FCEACCF8C983E7B0165C0537681A5E7A428D5E375F55
157390AC74C8D2B89628A04E2BED303C14B816F8EEDDE0E2B0691B9A590C76E8
4504E6A705C0E563DB609887F8BEA8225751E2BC79BE9C809716482735428D7E
82A14C504C242A2AAAD4C116404CA43A0CBE0CDC868F631F8A6E5908732E65B9
EB80309EC61C7469673A64D9C8785578B43D1F94093BFB1B6943C4ACF7678424
06B6C8C2919A07F322BD54B239432826C1BC764E18AFDFD93AA75B721E1AFCB9
DC76870A95435D7B80731FBD89086E362C25B068B06BFC9D30E83B6D86590198
C59576589E8D5FF537F87727C4CF78D5C56CC234A3E5FD062360033ABF214EF0
34204541CA927B752EF8ED9E1F1C06F483ADC863B5C87158749C0265DA885FCE
72A884E4AED01B26281294A0AB01C7B0E17CBCAA740D25670059DE4964D4BD5F
1F24AA3B34ADC099A364C8946F5F45257A59CD6FC3D07BEFFE62C5E49FC600E6
D309B136F65BA58AD756AD33DDB68725B3EC3F082AC7B43F7D79C0077947885A
0959E57C7C0CA2C7C558C170B61847B9AE62FB77A116A80834940F95AD93CCF0
74FE923436A61198D4FD0400B06ECED354546EB5A300E041D4443E3748CCFAFD
2392C817B8F7FA666FBE36129A36419D8F979D3A29E20B6B00AB8DD9C67F5C66
C86976899313CEE4512B228876FAF802C174E1A58B1E794F4E60502C75FD3C09
75C19355F38BE80B638F324ABBCE824C38167741379BBB0F416960320A4848DC
60B13B8C3F67FDED66E156E95473412577FE837B5355C5A81BCCB38F5357C741
6F5881D809ED4FB4EE8915A18281537B6FFAEA7A7394E0FC250FC5F34B2D453C
263CBA17C10027EA2BF00EB0557702BDF23CDCE76CE0D7C76E8BA15289E8C67C
C5C2902DAF7BFC20B637B2AEEA55860A1D88EF33EA9140DA5C6364C0A10042C3
1227BD5FCC801873C9B9333956699DC2E4CC374054BFDC44C3A733E252A642B6
ED0A24550C337EB49651004622D619EF289D2BA857EDA5E99CDB9CF0B306E080
E0294C6D7DF6CF64B9416B7ADCD9E0C7A2BC402F25084586DCFF561C8F696CB4
71DA3C65D9B673B8343B9EFA2EBD5F3B2FDEE4EA27F23C46B16A914269BD5317
FBAB2206A26E5633741FC7B840DA482A05D2532BE8C5955E48A41CC50E8FFE2D
993B1F104B4AAD9D0B3F282EFEF77824EA736E2F8437B384E23D060D542B9FFD
D54BDD8C7F84484031FFFC0AE8932A64548806955B8704FAEE665379894179C6
7A997EBDADE35F49CB751CA23AEC498CC84C2C185B31DA6C420E620DB9B104EE
4F29E19A00F7B879B1F65873CEA1A1CCAA4390DAC13980778DCAB862BA477D8F
F1EC9406668EDD43AD5E363A3BEA1C0C42C3C49BC419227A4783764F26FC5299
8FA9FD67D8CC3A4F45F5AC7D298D38E2F62CCA84B49D9EF53C518FC25152EDE1
DED8D76D0BD003CC63F4054A10F9C114ACF6661A6E4DDCFB571667EA9E3D0154
3760E88AF6E1BB75F33D37A54E1DA915327B0F026AA0510737079DA46B65AB4A
F6DE5CA80F909EA30CCBBE9055293B5878339F2AC0A1EA53C1373763DF60D25D
9B12FB9E6331D554E68292C29059AA00A1E6A011E5398BD4DE671CAC35900264
6B4E0FD2D56AFEC4FAC25DC55C66A73327D9D6C527BD8E6149B1844D9A97D942
4C40996B28AD5A12D394E6FDB2A58BC638C973348983A88AEC1512D5740EB0BC
0C97989B8784CE5E027491A5FD6132964767A62A4687F728228D07EE572DA6FA
CE2881EEB57843ED42F2CCF34A25C1D786EDE3CBFD9BF064FD5860CB7395141B
49C1DC73E1A732204F293395529B46CE6EEBE60998B2F91123CF21A05FB0664D
11E0596F48E4236CE8F2CBE1DF7B00EE025FE961271B82CF87696CB2350EA4D6
8C8421897127DC20106A372D70486938ADBC04BADF684E7B8F900164758D2019
8110D656DD40DF5DE84C1BEB9FF5AD11B1724BB129935B0969060645CB7768BF
6144B27866D30106488D600E07A24D8C4A05401AAC8BE8E9BB928BD78D832DAA
E5E3718CF5AAD7E22764181E28AB74393AB3183B6CFFE1D0E2948B24D2A7E6A9
88D7C6DD416A1BE2785C542D471983F136CF48AB206F05F15F182B68A1B09693
ABF521BEDA2EF6922A1E6C04292C8540337B887716F945637680F3577A0C580C
236225E08697021069A579A96298E1396BAA88C8EE706FC8EB597D02F379A015
F4D437F6357124CB9C06A34DD60E224E49B5D0A64467B5F0E351A533B3095EF5
D28F337D9E9C66D6DE550D631934B142289F7D611CADFE3ED264391A5F640245
D7A338947BB5B6B6B81BE1CFCF93D81C56C6FE436ED42DBD94BAB6B7414434F6
6195582C4E3259D3F69663FFDEA4D819419259A4E9D10D4B47F75D05B3EE6D13
64FC74F77038CCEDC8AE1397C7F21AEB6B17D6BC1C436BEEFC8913096045BD75
3328A568DE5B61F7AE250DDDCE24E1C98AE723D4DE8FB95677BFDAC77B5433EB
9E57FE139F30D0F34EA4DCE9C9EDF24632A18229BB8B1770FCBD9D58274AFE0F
0CB895195953391D27D68F5AD43F9D2166C43F514E415CF667484A90434BE1A3
0E18072B68844004C6650DC36F45E75DF699A5DFA99543CB2F552FA439CD2633
CCA613ACBB6CDB4CC51A1485422C5E37708B70DAD76AA364C95099EBD87181B5
75E0759E2BFAB30918A3AA5BD5B6107302CC61006EBDF3D7399A54BAAAF492F3
77E3632CA6BC3FA90CD7C892F8535F15D9F6E5ED85F7E89622091A617FF19920
76CA2B6DA5630C2C4BDDB41F93EFF48F01715474F5CE087D77B402934A66C0BE
341091E43356DFBAA794A9468B30AB81F67254B6E3B0B8DC46F0BD3A5958376B
794F2043A295E2095FC80393974F2D0A93D2E652A0F94D8A01F235C44039173B
9AED54EED0BCCA6315D5D70A40BB33E35AAA08D9BA67317D558899EA345262BC
5D84283D0C7F78AFDD626EE36F0339DCB458BC84819E936BCABBF3C832FCB6F4
A017CC51E9E4D6796282D572E716B46C2786EDB5EC5DA8D0288C40828C9B2CAC
CDC1D9BAD5B32587D7A7726D26CDC44762C7296D6F7CE78E79AD62BB00F392CC
BB8D7C9007F7DD5D8379DEC654C073E3F35AD3205281F2CD52B47A8CDE6A53B0
2B984DFC3BEC0A5752A5DCF73E7D2B75228E7014D516A97546C95BD1C45D2C57
297685F23C96DAA2A26B7677CCD08C2263AB5FB1B955EF0AD6864213B4706CBC
30FC6DE70A5D49E5EE8E82BFE90945F4FC771CDE849DB1A75AC0016F532974F2
2C81F36CDF766D45AE036008AE2DD15FB7B7D8A033A4DA68A402D3FD60B535FD
C861D8CE105F79A6F319CF3606B5DD5DE20F51D8053A3EE03E09B179D0A6FE35
84D7AB06A2D217BBE6B7B5AFAF57286E78D8BB50F22611BEFD2EA53EF4B49A7F
068E37733CAE82407719F13E01E3F3053275CB0613EA34F309324CB4A0CC76AD
070E58D5E51DEBA150F8E2E8EC8CCEF3F2C7661470B01E37EAAA2B15D945B380
A5033A44F477E5197D2324D5D8F1A0C47D4530D549D4CDA97EFED2D082757D12
74973411D3056BEC9E84215D4DEC3B71BBF02ADAECEB6B10D76A55BF89223880
0661A11DBBF343A8F1DF94D10267153A360C9C94BD89DFADB57108933733B646
7B506F848F65561ABD6370675C7DF64B9B2F3621148199CA4D93546A29395A5B
E66101EC0A83496AF08322D345749D6FB26B8B04890816F5651CFFDBCBBABBA2
BD8206E8E126B9954C872053CAAA120EA654C068E4B1290524BC8570A0E91D39
A856F11B1130D10B917953A734DF52AE0878CC1A1D896F74DB7CEE834563BA57
EEFAD1F1E8605068A69884DB9C73F3B12BF35BAAA7577C0E28DD869BE835461A
121E05A477A01901399B4B01FCAA7D005BC061A8BEC95E00DAFB0D04861BD5C2
FC1BBF91BECE59E33205B088E9507E7D6695194F45E7F98E3E467592D82C957C
279C0B62CF1EBBF6F6B68F3B1F7AAC290AD8E24E7EE718BABB4A5747586EB25C
06795D12BEFB7B3B077234ECED88FFA5ED8C04A3775C1BFC36618168AE3DD456
02DDD0C29C92C39C799F3D710DBB5880CD2BA9D4BF50BA062B0690FEE60D459D
1375B16D0C5E2F9B01B91154261539836667546A77560F9577DF21871DC7CD19
D97236F147714007312A998B366E06359196C71A021DC961DAAB68A08F36252E
83AFCFD9A69292101DB268EB8F6A362EBA7520BCB5954064D350F77349F3FCC1
EAB81B6825E252BFAF0D5B618356A3215B35E9CDD920B0F7E2C30FBBD63DBD88
1E2E6BBDC397BB14D547E79327339F6B15DDAA12BF825EEAB7877416064DD454
519BE2A030B807135959C54E3BA1DF2E90C7AE8FF0568C989C709CF0CAFC167E
7B1E3490703D93F5AF8A3AE03ABD1E6C0BD390D2C2C82F24212814A0AC3BA086
A8F479C48F1AB570D4C30C5DB27396549502955FDED83923C21261A194F29E20
C733C4DBC49ACB5A55AF22AF3C69EFD4BE6E2BFF68C724446933E8927F3AACE6
4BE6623CC5FD7E05940791E0192ACE29AD10E167F23CD45E9B16821D97B58B35
871E2101EF0AD9D83831767C6B438384312DD2E54C38F34FB57340212EA16F64
38A52032BE86C12B7E9634D1336F87DD7E2AB56C91015DD45169909879B54D90
97C4CE843DEEF132AFB0D7B35BF75F7AE04CC42D40267699384BA48B668D7709
04DEE275783A2C64115FCC2C0B048EE254B027E3F93462E6C1AA0F0982BD10F3
3303C7DC850159D47FF887D91836CDA168C854164A3C333C473B5608BDBE3761
2B537CD7B7F372DD3262A4D9CF117BEBE99D8921342DE77B9921AEBD9A4430A4
2C2B2363AD516D7133BAE9E3BBF95A3893787027C722B626C678B1CF0226C3C6
F0294E21F403DD3DA40F4C615A21E140A5152FAD0A33A0B56616C6B3BCDE53FE
74A224D2F07E398228F1C39D02D55E9F9811B043389363525FB3E5FF9EBFBABB
323BE55A1CFC2CD0C3A301B16B48FBD59D666EC293BFF0C3F37A1466D2FDF6C3
BB542084D2E0D338528A7CDFB873684D87ECD39465513CDE0DD4B9E334E0251B
505F9F5D2EA750C3BEA796FA9B3C3E63A7C45A2B5FAC2CE31072D9810BE63BAE
C48B4D9B88FD196805CC0F9E0EB3D1522F8708247EF6B30483687651A9764F71
B7034B813E12A69835533D2B7DF6FA38925BDC2D25D2D2DAA71CFA75B2D49CDF
28BC1C4677A4E123FA1CB102DB7FCAA85A4A93101F8649D453FCE317F53A00A7
104DE2C960FC8DD8350723042CB80FA217A89F4D2CA7134EA7452F2FF1F62874
20403A0A31CE4A66F3EC223FDB30937DAB9BC3FDBFAC578A525BF8B960B22DFF
C196470EDC6802C21B5561DBC1B19BFA4431E2C5647894F6E8971E2636028109
A1C63F58957883B5D74BFF42EB0498A2258ACC3A750E94CFD5C2D2ABD635DA7F
FE17B1A7C4E2DD8D88EFBCBE60B4A8834E49043391C768E5D8408DEDCB4BC468
C443FB5024086D9A3200F2AC9350D388EEF1D9C640D144BB1921BFA818FF2F42
11CF47C009CA44BF4BA4F1C61D962303829B61E50B8EB16EFC9B3E9235BE4AC7
40A38BA933C2218E87AA7B3909F04BF46F91DBE8E450C1E356E7E89C06FF30C2
6C5F83D2354376AEF7374AE1D33194C7DE43E87335570FA82647AAAF3DDC1CB2
A8C540717F7160EE6EA3E6E8FB3190B7E1BF4C2BD3DC8A87759B5DB33510F7F3
6C594CFE3E2D2A126818990D646C891D2D0BE584CE7957E885E308D4A9CB4D8C
6566868F7298C58FFA684AB8DC5044F7401DEBEDDCCC57FCD7BC8E73EF486BF2
1D310407AB85DB308865AEF8836A1A2B60875BF45E3404D8216CDA9D176AED8B
649994EDF63D6E7E431EAF7A9F5C035B0EA88AACAE4FC306F4CED3707111C8DA
D47CA17E96C59E864A74877AB524B2FB693BBD9618E23C7FD95CDB82AAF9A6EE
7BF2BF0F9C9F53E09BCD0CE58620F0B5417D8A64E112F75911CEF5259493C417
B540E035F2EA933DACBA36B9C02D49A8979FD510B13D4DA1411C3D041B75A1C8
CE3581A39256CA04FF60CDC8612AE363A7DB4E544D1D5BC58735B72F30CF777B
56EC22BDA032351389FA502740C1497A9C9DAD79EA26F34B8DD85350235B548E
48609111A2A2871DA9BE29B87B1C00E71E5DA5904C6D0EDDBFD97502D338FFB0
E698659BBB2BC0518BA9748E2119BF29F3070346FBCFB6F8CA8C8CEEED393F9B
048B4463527E294352269F539EFFEF3361B21075054584F644025FEE3E8FE1D8
42380D74F492CE5721CBA24721E4DF7EF63891D98E4EA24E49F1B1942CD38D7E
54398EF4AFDADA0F40666C630ECBDADFA1D0F80BB3A02FF1E914B02265D716D7
8FC9697F5268DBCC286C627C20E3F4F6844045FCBE3B9EF26BB98128A37799C3
79D0AA4CCF961AD14BC8D9C26D292E860B974A99E7E665F2C00F6E192B9C16F8
81AA21E8523BC287BAFD0D4CB5B549B69AC94FE8E976A753952B33B4669F5620
97A2EC39A7CE24DD0C11633DF78F8F194F0502B7E610DCF6C2BDB8CA306A9EC6
E31074CD5B942DFC877DF15A881A50414136907A5116D58DC9F58E6B95B53AD1
8A4545F5031EE35CD4FAB1019121D2E39F8AB7C72FF7F379AAA0FC8EF014E3CA
7558EB67F47DE0BD3892211F2C244EF9C8ACFBB71834D2BF6EFAC3CCC40D3EF3
B2E2080F148445F11121B64E133DC1A8FCCF41B7EC712153D5F62FF987EBDFFA
0017F667827D7AB268887F35AF5F422967230D7604CB39EA3629A08EA28AB073
2366E99A7CF7CD9EF075798A8788EA63891308B203853ABEE8A6FE8141E812A2
B6FE8D9F95395D66CB4F4334D8B36B6A2A041FD896A90E8613DFA8EC49288F55
CC3673EFA65537E704FD5C98BBE16C2686652952C8BBF39BAD5F2038B80D2F53
A4CD5289FCCA1BDBC8BC4DAA9FF1470F4428172063BC0554CF372A5E89053C5E
85BD8F6E0AF6C6A20E5BDA6BC6685CE4F8D07FACDFA399EADB822CB6A3CE402D
2935CA4596D6E4CAABF847625CBE427F4C91C807F1A3B23B0DD937C0CBCED5F1
63996086AC10868D2FC5921E730C933978FD31061251AA96FD6FCE0EDB288660
65801AD1EA8CA02D20E3BC7C089CC5E0CFC096697EA3F6C7B374A523C93C9E93
AE7D63DCDBF0D578E2A7D094776506C22B2F456BFB9E4828C96AF3D0053BA407
FE146DA2E961F05F1C47AC3407FBD37D226F7A72D0B4F15965DC919A12B63D74
97F5A9FC9F07CEED8885526519B0EBA098DF589ECC2DE751D0A9C6B176BC175D
1B7A7DE04FCCBE990B9D778058A8C158EB9938BBBD0F823F41D197E58AA14AFE
826928B87B89BCD4FCC24F1704F6012CF464F66760DAC7C0FE4F9AC17C1A52DF
C1F8D787F99305E3372957124BF3FC0BA485E050DF883E4B2767E236BE2687B5
319106D6558A8DDBB3DBFC5E3532E70E13657B7425B317B33A66CCFF19080C55
E0BF551F3127591BCAB502A68BBC9E92F80B744761290E8ED0E49466DEE887E7
A7E3BBC2D1323B239944FC0727155B6A248DE14B83C42ADAC9BF12FD6EAD401F
43601BCC7F39E89FD7D5E9EAB3655F6946D8C57CCF85B7887E9668347CC85D95
385DCA81B571D139B0F47372579D06D73B610D4D9B4E9A7672C0619DCD988687
A780AE8CBB9FB6CF5BBE2492512D461A81C1E7BD8BC5FF3ED05053B4614630D6
6446A85869123EA350A38CAA7AFFE06A2759DA45FE05D46494A56D299D344C6D
A654AA4124D577D774A217D4897A261017104FAD23A4FEC8948DC1EF163019E6
04B15ACE59F9353872F1B405FF214980C0563AA6CDC4ACCF24203F3386B6BC6D
CDA671B686A669453C0F49A4645CA4D82944F38DA6EB0EAD6CBDD471CA3E10A6
BEA8425E7B93CD2CB696BC6993354128113E20D9D97A8B2DF7F6665FC5889107
F82C0DC9A7CA83DFD12CF23A03AEDDC37EB446653B202C55B946A5446D29D3D2
20FA46B3B15AA3789536D912DC15385EDA65E18872A93CDA8D2A148F4EBCCF7B
A65CBB6605D4D72E11338D87D5B02C7FB83642B376C4CAED815AF7DE7C1C1ECD
DAEA0F05E5DC8A6F7240074CFF1D3AD9A57A0618CEB3AE1E72A55868358CA158
3272867ACE5CCE8D616A61666706B790FE5F6273E90DDA883A59F51187E21E92
4E15E480A3148A7DCBBF61ED7769F5DD20D14B751416C9EB562F65C3DB7A4AB6
9D26B5BF8D90B13821FC09F2A23D9835CAC736F607207AC573291E6E52405C17
2A74C3B6E8CBBA695DB33CB2AF185ABE396DADC6F67696DCE0AABC09D1B6E2F9
1C968D4028D2F1E7C1795E50D017A96E86F969D73812275C91B9692F8E6EAEC5
EDA5F6A8082C5D91442EA1B50E761A116748EF16F689E43B26FB4D5E3D1751AC
BDC1812004520E40365C85FBA9F8924A0DCC610F842E4E30C1104F859AC97006
C372E6046C2FF45F7EBA48FB20B41CF707B0C0CE7B58B15A6D9A6DA13EB15356
C4F15538F8D790E52392F4839A990713FF00B7C5ED1C6E8A84C68A280CF46D70
69720AB52539B878AD695E53209E7C4255AF091983E3B100621A4905A5338B26
158BEEA80525641A5A3DB465D40CB0CEA48F788304B246BA724F69FEB1EB7F4F
A0F2F3C2F479FA651F01F72A57705673E627FDF4F11618E47B8432BD1AD7A9CD
912F2BFF83A2C4705A25CB4EBA51AA3FB99908B46B10CB5A9D710435404EF388
B589A9F2A0B2D5DAC354F55645D40D9CD64B4D9C601190D063FC2F876B779DC3
E8C553F076877079FE2C27A56A66136E5D846F2E9EC0646B0DD0094704C02E2F
B6C4F68CE7873DBB40270A199BF4E164BA835ED8A8787359AE283E439AFE0E17
0A07F82101F2CB5681E3E6A516B1A1512F5218EBDF74EC146BDEFCFD4940BB83
50D4DA7BCC0BFB103EA24EC2BDB5A23F8647711BE049287C69C9D43DE8255E6C
D9AB506603C1BE6CCEB3010BB66356B595C5911CD475D9E18BEE3F3C1100B356
0F573DA2AFBDE6A3E58986C54B7C3ADE9BAB9170FE3FF24DE68A2A1B25AFC7C1
4D2837DC7519D6FF4F0ECBF3CF7E895CEA8918A69EE67899BFA6B55BCA60B711
B494574EF19C614345AFEAF6D6AB126067DCEC09D4F3C596C6F28C2EE0009E71
7CFEFBBFEF27CF5789100E7419E54BDC64C410EBA4FD22C67D7C3AF711B240A2
64B73136F9AF34390319F6A543D5D4D7FDDDF6389A31305D2A6CE609354C2D51
22432EBEF8FA5E8720A78D50B23E60D652C051C299846B54F591095A923FAFFB
20DC3A9A7C135A7950DD97BEEFB12A4D80DFCA743905C4D56D36D8A5FD22D5F7
2B985516FCA148A7743A09AFECA6DC008574E7EC7E0FF902A7AEBB8AA2EB758E
3FDD73117388FA116B506892CE1C0ED1AC4C71B18F67022CAD42D628046905A3
87B789937BFB7A8A4104ED1ED365E74642DD7FABE92C29B5F50028523C734F57
DBDF65731F1F37521D25AD1A01EC4C31819D2DC7B35CF2D9F0F492A5A19DD896
B2BCAA75969712B8F46B7774BB0B200D6B3ACB7C87C18C5778D95CE05ADB7F11
60BA6B3EF8F4369CE7B64AC91FABD244DECC64F733B701639BCA947ED7696A93
B38F26D1967EA896C096928C4629B442D696F081C06798EAAC2C8177D8928E28
653FC5F17DD06B2156BA0F45540E1B4332DFF93AABD09A28304BC891CDA9412F
90CABCD57ECD3B26C607EFA14CF65A22F5837D99A0013B649176956749691B0E
9C8A3CBC66C2FA69969D54CCA92FE914CFA31029F8E45D5A2095DD40AE0EA50D
2705644B8E6E4B63F8E9BA65BF43438EF9F52AF893BBDA215011B9C642597373
C612E87B273DB68A4A83F1390445F0DBC587A6CF5A6B4783F54267C4871032ED
406DE854CA3D9EFFF566E7A6ADF80D431A13D1F870E79B3C0A8803E8AFE9B6B6
4826CD95F02199EF0C8B2810943E5B11CD216877BE29DF4A45E88F1D3D26954D
5967B53944CF5B9B3DAF25AB113CF8F9B109463B1EF73336F43770AB821CD863
6B2F07B517E05A846DE436BE650FC8CACE55B67C8626FF33812CC11C2F9D76CE
FFEF39857DA6CE0F074DF55E0355AA366161223E0910BC6092E488A3488D54C0
24C9D1D083F58F56B335C2D5487DDBDC27DCAA73799D9308C7344ECF71B7EB9B
986154E767F4DD7373D2E090CE356984C42530345C7335F1B602CF8A5D6BB3E2
1369276C1B1A196301A9476B753586C697B414EFD4874CFF62A84963541FE01C
5298ACEC133FEA8104F37B1A348DD38DBABD6985C37E002A6BAC67DA45FAC0B1
339E63A2DF0854ABDADAE085EB58B12472AF22F98DC999EED472B2C2B85B60A4
D69A01694979DACD3F5A953BD9E918D5E46449525A4E978410EFE44F16C154B6
08FF63A7FA6F3FAB36C70DC10CE236731C64DC17EB190AF4F4C33C62DA326B6A
EE160D2EC97C474C60DFD23931CF93F4DCE8E884FA9DD8D7D1D1124D008ACD57
3F96BA841B229C589A8FC997026C3EA14F20143C90ED66A6DE3D93B10EBDC0D7
54AD58FBF926DA11D747742B5A89F18018C7C4DC811C80DA5445A82879757186
6668CBD4412B8EE979133044A531BFD00CCDB33EE2083A58A288E12C8C8B236F
3C5C4B36242F8D77D18D96AA42B11D53442D5C073EDEB7755EA81CE7984E1298
DD41C6E0DCEB5299D718FD3BC5A9C30DD2890814C8D88B63CEE40AA276230823
473A672E0DB63D01F7915F0DCE4B62E1EB4B2B2D85542665FDF55A3A1E08C231
45D56FDDA94D6C05701424A6D49E4C3C96DBAD092BB709FCF1D2F42F6F1D7FAA
E03EA53CB74CE47F71AB81A3D6CC3E039BD09697734840F8BD0B88A379F99B25
FAE7571F9542FC06965AC5C2C45945E0752BC73CF8E09FD7AFBEDE3952309E16
8633F7D14972EADE424C71783AEBDD93B82AAA8963E32541981B2BFC9710AB5B
8CC773B6CE6C90F7420DB2B423364F9C248A2A6CE1572C3D8E91362CC036695A
3B1B669D4DD13216CD4EC1F2CC493D3B1CDD1B2E978C78D7C1B488D01132692B
1817F49421F32127AD5D9DA8321045E982EF4E615B596C8EDB40FB190F59D9E5
7DC8F688D67840C1AE1C67A0B618D05A149D08B39AE61B570DD285CBED6FBF6D
DF0E4766CFAA575D1AB5476106110E7756EFDB5DA6D5E0B285FBD22B1CD92480
97FA2801C2394E7B8ED317515EABF66B268DCDE5A77CCA98D62B1B218C8B3718
43DDF5DCBACC2CBC4EB0B66DBB9F135BB2480E67D7AB86535C7CB519B75AE049
0F86592AD968CB3E74C7CEEDD3C73E597D5B7AD8E8E230FBE57FF46E2A7C54CD
D396394A6CB59B6948170B53C4917243412FF9E9F49E7EA788EE6EDCEA5277E6
5EE192FAA534A5F317B32D8446C095C58A646EA2E3AC23AFB0613D34E4CC006A
48F1308A4EFD8B95F229A028D62B40421AB07C39E373AB491E28F35CCCD180DC
4AF4458C767DD9B71530C5F01BE2D2611CF9644C28F3F2804EDFDBB6C8033AAC
BCBF00292D1C3D9DB4F0BD259F44EE68F27206F4877011D58545031F753DDEF0
F028A7F393FA18E8D41C2784E8FFE886214DF47B13C73E24C72235C37392697A
F95FB4F1AFD8CCF42255F3345A260BE7963049E64D445AD62EA3C034771FD02C
7C41163A2A291E44EDF3C8E24B6C3B810F597F13BCF4EF5C7569B9A32F971FDC
88ED8244072D111FAF3B29F82B69A0CD06C2E49CD8D7CF9FB27D90834AFF6D3A
F0118FBF1452881B07218CA48BC688FB299CEB1030A8A9959F3748ED9EBDB9F5
C00CD1E96EC3028ADD17368F5DDEC4C1BA0CB07AD06EB1ACC0E90B264F446629
C89058CC27A11869C00BA7E6108EEE4B3A037638C6B7DA634F76AD64DC098212
806D2D06C5A30B96E3C22FEFDB304A317373D44D62C543AB54200A68082FF615
94218D3B32A636FB671E4EDD08ACB06E6C5B432D162D5E8CA2C80ED2A7CDA10B
31AC9C631120B805962D3E922A704CD3EF0235E14156EB241070DE216B7E5249
5BE87851AE879DBB7FB52F25A5A5DFA45DB0FDF9B94F0EED6462193E2EA3A086
1A653F3F4DF8192D7A94FD4BF6AD8862796AA4E86A0917C4EEF9B96EC85F7F61
CC55F836678B1793D8DFC48E82757F7826944AEA8C61DC8101E7514185E66A3A
161EED1F99B8496A9FCFAC13492DF935D8C21BC5BF449CA64DE0C9923518CE5F
739057AE5817713C34D90FD35AA7A2CA4B5581F520441E26CB6D6443877E82B3
B0341735AF776DF4C7C70A5697697BD8211358A16A44084ADE2497021A2B138F
217A98F07B2B47B4EA06A0FC7E4FCE652FA38CDFCDBC43E28EA97B9A576B444E
00C0B19C9E751336898EFCD546DEEC0D5C540614DD882127AD674DF737129BB8
09BD64CEA6D12FDC38E3993120E9D60FD5FE71B1AE3D44CE198808215E85023D
0B7359E0EBB5F06D010E6BF1D35CCFA0D7B46DDA96A3BA24963A25D896B00AB0
DBD84AAEBDB778C939A4A204449214377999191F3DEED03F0D039CF6660AB4F0
54E0D17D043CDF2FB2C828134A614BFB94C297FEEE0C06868893E4D56954A168
C479D778C208FF3F9386A33995080EF8A98B903531306BBA4A9F9E5AB5BA7F1A
7BFB48B900C5FE63B70762F5422E41DF1519C73464514399A1AF04E3C3F00E77
6079A79D9BFE1996455980D6E89BD2B71F53AD21C32584A3BD12836A2A3E36A0
FA217DEB344335CA582344F97AAF0B4D8F5D7B069E4862DEFC8C7FDCB2242D55
B1636092FD704BA0BEEE09B1C6048724F4AD47323294281412E033B2C81151D5
3B00E3309342340AFD24EE228CDFD2AC19FEE3F3F8C55A83398125085416BF83
AD907E4ED3E261BF817C3E49510B30CB1EF829E1F901129EEC6758664FECDA00
84F4C01F1149FE56AA0AE2654BA2A1E3BE716523C67BD10AE64DBCCA541BC7E6
9DD5C47C9CAB7CB0E7A37299C66DA33C1B881AD5FA3CF92EABECD38EDF3894DA
7C363799EB64767F9CDD8FBEE45E4499C98C38644C965D3C3F58AAF75A25F4F8
3C88FCFF28E4FDFC9198B459EFEA4CCCF3D426843264201C49B089116D008528
BA5FF99B1AEAAB5AC7DD22CD157327F8002ABE342D42D52C383193734662065D
D5653C091F9262D0C3A949C547B8A5CF52D9334892D6D548E3AEE8B4ACFE9DF1
AC47CB3022D3751E6B7123FB71403E154157583A60BE55223C56908D00199B1D
2D941076B1C64D9EA0368F52B884A074C4C4441015E906C4412AAB326B539A07
CB1FD16EB3AE461EDB7CC727BC0932A6D1D0531DF0419A09EB3A99B0945A31EB
5FC267C3C244A936D5A22C7DFADEC928000EB897E7EEBD2D0C6AD574F1D736B9
E40BBBCA4E10612142E1C154CC374F2251D331F4F54A0DBCCA6A3AFFABEE704E
B7E47D99AEC90A93AAEEF01AF41FA14D10AB03AF3809856DDE35FBD460D85113
D005A1B66901FCCBC69829663359171CE6F8FE4C1AFC902748231CB4CD1A9628
4BBACD7E00195F8EF34A3F9B5EEAB01EA2E3783E06B4B229FFB653DD37739F87
9338B8626B54567266EA2FC018E91F086BEC2178735819168751B0DBBFD0F854
C69CEDC5C59C6D6B12AE5E4A96A1E8D094E42BC5614F0744B3D92FBEE307AF67
5A9D995F60BF5F23A3216557921404D644D380B87CDA9E22839448247D40B23A
37DFAB7F41DC60A0F34B381DA932CBD3B1526FD5B73EF04EAD7F459080A93C22
F6AAAA9794E65C71D45C1583799C43F169DE67EDADB9A3915C53AD8A5BE8C2B5
6F53C1931C7FC6A80AA56148C0798ECEBC9EC234234A21E0DB20718EAA78452E
891E8AF681EEAAB72E5F3A5976316C481FA61C403EE43AC9ADA2547CBDB6BCC2
0BBBB289486F6C7E238B7458F04842802CD6A52B8964407D1DDBE9AFC81FF938
EFC0FC027EC47FB0EDE4D2906CF1B55597831D98B641DB1CC333574DBEE3A176
FE9CDB0A29E37C854308EADE11376BCC01238A7371B619AE022C0B707ACCD96A
BB69FFD0B4C725B0C523895515658E2FF7B3789FE5A6C8F73844AD2292E25BA7
33171355E5A20B41DB34741FE45F8FC011F2F251E7DDB955F0E02FFB4874AC52
4DB5A7376D231490C68369D7AA11958CB98BCAC7C30419BC1FA14F1FE0237FA9
42F76F1157480F336F73403684933FD1DE0506DC5353F3D1BACE76F41B0748DA
1779B65C60FDC8621FF8D3E40289CCA0FB5DAC871E0B99A000E6B801633239B1
35EB4C6B64E5061EA7E1548B242166C447B82E7552B6C4089D9F5F463A435A23
64D0BDCFCE8256995B48B8B4AC5ADCCD86538E3FFC021B08AB0852D49E8304AA
8AA257ADB9EBABBD09BD9CD5004F410B80674045257BF43591473F853FE3A2A4
3B7CC317DC7BB6B663D03AB336534CE24C80F654A39D2C5D50CA51BE63C1D498
110DDF814AD6BBE3C4364BD1C64F9C1F1616D03815DCDC675CEC58EEB5D5AE52
74C223DF459A76BDC64AF36B6E54543B4114855461C83881CDF494C2B74BFBF5
F1B4DE109C3E06915E3461C79E71BD7FE5E5237F9CE5452A1EE576454A86A0C2
6E4CBBEF94D6E2B4AB02E383DB73A5507C9BBF00A0AA0412012142872E744534
8280C7EDE40909DD85B5F2479D704164C36B9E9D41712C8D091FFDE2A91445EF
7A5775798FBC375709C37B02A454B34B37E064D21B2BDCC1C9226F949D191FD7
E44CC80E0CC9EE6D595278E7DAF815806FDD7CAA3658B8AD58435BA1B8D0760E
A4DE00ABBB810C2BFC0B90378D8E45F321E84829EE8213040E95C59CDC172944
7917E65109516E31813AFCA02E40F03E79D51DDAF4C42483A9692B81B929CAEC
6535E9AA0B86488005E8743D9EAC68DBA30FBBB421B64622C35EDE43AB075F3F
0029A07BA8C929C9349AA529B4C12AAD458DD81E6AC79E22D4F240437D59B1E4
830FEEE405B1EEE1256555177E3D6CE648564D70534DB8F4AA0999D7F5B67BEF
E1303294F50887AFB2B7FFF2468614BA5EDDCAE6FDCDBDD46E5EDA98ED92729A
D8260FD94CCDFABF0A301EC9F7A07D6A9EECBA3398DB8267BB8238079AC80406
93DA73B025BB127F3A1AD2FFBDC882867E8C439F809D15DA7739FAB5D8E03BD8
F283FB6832C73ACD3E5E666D3DEEB203D4F868729955E3ED89CDA89CD7B70221
EFBEC908EF7DE25BC5A014E43E107F0611BE0196A31ED82CC4A183ED86D27818
0D66D97CE9B52FE0EA59C8A8B729F90B73639521BC63A2252638E44CE1AF392D
E68D7D01B39F4C5BB7FDBD12DAE03DF457371FA330459738F562EB8738D25513
C8E09E739F6A7917586A7624A731ED5E725365F007E60CC535D0775736E6BF74
53FA575732043B774507B75DA4D49C7FCD52FCAFA6ECB2970B9CFB5181606253
10AF4F5F81EAA90BC4FA26B15DD655066545362EE698AEB29466BED98026AD67
7C6C726ACC6E424FE0A4F7233DF9A6BD4EE76B603B08F34C832E6E966FC3B1D5
0D20A736664B5510BFC1C16428A6499F56A0835318CD72CC4BB057C36AC27C03
5623D80D96537DE3EB5CB0B9453291D5B2E227DEDAF13B1FAEA9797A5EE23D79
B7E604C912EA7DAC8E354F1CEA9C76D10F51649DAD125502A33F3E65A94AC101
903963A84EBD44297EAFD7EB3AF8B955FD3EBD100CF8869DC7CCA5CF8B081A5F
7CE1C4113755D38F0B959D209D6779DA94B4AA364F7642356E7FA94B976837C8
35450B9043C41EB636923BBDDE19EB95FB14040EADDF6027B020024CB98169C9
FAF20B76D6CDD0DBAFF418F99601FFC163B6191FC0B3D436935CC8EA8ADB3B6F
B45E91D383FEE2CBE95660CF4ED34903DC094F76FBFDFBB40D8CFB09D2A8E94D
0ADBE08BBC88EC6AFAAE1690789DB8406D1A72B4D90271121A152B60886A571F
A3F630FFEB6B20BEAC0ACC19A52DFAF85D068E6909E4D511FB2E2E44C843C729
B11639974CD6E02363E1B483F09A4B22385D61F5B0B50D30650FCFAE04184871
B464456A88F88F754C3FA1324347AED468CEDE89A1454A27484A481372B38704
8AF9EE8F4168869683C4FB7DF26A60A0C4F9BCA1D02659427DAC06F215A42180
5F61877ACBDE9908C3FD76A2BA28E7115CA9D7185F637ADC98CFB6061E172B68
6E9481D181CCB85B91B03BBB90B546A8132BE0FCF7FF5E36C7D6B7A59C59B3BB
99066BCDDBA37F54D3C09BE4F4149941734FC5C9662E875CBDA69E338EC485AE
BF98C3C0A0E56DCC537D9E82E0C284F01CD52E27B685371C875A6FE35B2A7EC9
A2A66B4E5B040BF8FF666F7C1167CD675098B616D5ACA08E71E5C4FEE96C8D4D
F87FF05432B5165C8DDEF25B6E156C2D330B1CFC47ADE896255DE1FFA8CC1A09
D26348A89149FFF9ECC814325EE561E11685F37D1CB4C436208849C3768E3573
2216736F1204C13633A4D771EFDCBA3D94EF3710DE35EE037A99EEE8C9748EA5
31F6F7A78A0E6A31CA22830EEF021FA259BEEDB8E53DF62FC14593FB1040C2C0
7E1B2EDE3B4418CD44C3FC0CA87635FF92F1140DDC6955542ECE174FAE1FC098
E501968631735EB5657DAE9A4FB62F3E2E7B16FF53BBBC006E3D9B0F29434DB3
C75D6BF2331624DB3C513250CE68293B2DB724600C72D0E0B01E827F8AC87AC0
DF394D385E81DCFC02B7C16856DB2A56E4CEC34D583169C4918F791067417FDD
31328873C74F0993E3447C926E20390C33B759168843DCD096071FBFD7D75E1C
F0CCBEC90642E414AFD7F129264120FE45B93F5A05EA389DAA2721AC6E6BFF00
15EA347BE0589829577BF4A90C0A7A3716E46F464A198EBEE6C791409AC8C829
9532C59403567379760EF3C4CFBB9A14C5F6F852DB888567C1C1717D06FAE23D
C20555C129BB7F60CBD4387124656831862FF01CCB867F027E95F0C222424E6F
9B5C63BE4DF55743E0DC918118BAEBFCC475352F3BB4337BD48BF04D0244DC68
43B8FAA2BA68EBD74A775DFB3BE539628048029307D8249FEAAB72F6E1C987EA
B585F5EC343516991E7834FDA0F1AF41BCCD590BA9E929D97E62720614F7C286
4E75927DE4EF96AEFE863FAE9973A308FC31A15F849F425C90DF7BEB2428FC60
0E8E7A863BE2ECC574316F84B6B883943D8D81198693C5E406A0FBA50CEBE2BE
28FD8E6DE5582244482747731419C66AA272848CD279AFD9FACD031272D381CB
B288EAE16163EE0F7522BD77962FA83589A2811D0A45D2BEE293F0C1D54B84FA
71FD4AB3216DF6AC300E0A83612F428ABE70CE37A0B71F83C986A4A0915CC62A
B92BC063CB94BEC63AD1DD090272412526349C5B4D027D07029CB775526F7741
C30AB0AE3190CDEFF5167E4E798E5C47FF1D6498E484B600352BEABE01A6BA89
65E3BC08D6A47ADF6E9BA4C0C29D4E528B6745FBA851FB8F977B5E2A42E5C47B
6FB437483A6EC38928BFBF73E85DA1EF9EB934479F0419EF545FD2F815611D14
98D2FC421934DF2663935BC91CA74CAD0F9B6FA5B8477E9788C5245492BAF032
951F69E713FAC9AAC437310F1A7D586CC05048684AF27EF3C09F76F8CD8AD0D4
F49F02C538FB890DA8254F3350F4C6708FB72082462312D15D025321F8E6D8A0
4777134D664426762E7E5AC2CB1FD873A16A9FB95B15D4A4D35B006CE68E4E9C
53DD30C82BC2BE6F136D04B95BFE76064BC7C29984A0A3954918A69405FFC110
B8E231B140FDEE25D893676DE5025B119619F31AB198A63A8378E87CB57435D9
1CBCF393CD3AEF312258C750110A03208A81CC2FE254863CB2898E44B57602F6
FCDFB887A83C42C50F08E66B611F543148819B414F7457EB664B2262987249C5
60A78F87D37908555FC59C9FC0E6CEEBF7774FB05107D8EE462228AA27C4E377
2C1D183F91D837DAC94609659451F83DAA632A2FA686874739CF1FEE0F4E6D22
A4E99CF1D3366F83DDE926855DFD7CA6FFB24BD76E7D111E689E88681EA49DC7
F8457D3AD15BA5101625F6F816A2BB469D2458518988803BD5B026CC4CE7A02F
D870EFBD58F413523E270B68ABADEB88897AD8DF89F35C69CA4627BEA4F58AFB
88CFD92119D251D8C9C41E1FC73FB55870A9358633B5D5CFF784282EF74684B2
9A212129624DF7749437F5701393CFEFB5381856F76E791843D74F11A6030E25
89C9C3383F88DE60CD2B646CE78DE6D0CA183D67D8E23B34A1B4EA7EDCDA0F48
84C870BB90419EFA4512B19FA687B50F32AFE65738940BD897DA8863231B115A
3E442C0691B2FF8EDBCD88DA0AE5504047E88B980A7BCFBB530BE7BC3A63719D
837EB628CEBC53A8F7548A602E2DC40BD3090CC00A9C8C1155449F36D38FFA10
02DB6BED77FB7A03F937852602312C5C3B07C272848E202A35D489F455B6309E
C828DA3B48DDF1D0D6EE61286085FC6AC8AE4D20BF20B30BE383E4DA51246896
D923DE6A4819F37811780FD137E25D0A06060AFC41AC20B897151B76809AB386
12FE315CDAC8483406A1455D69AE944F5E2DF6A0618101BC4DC144213DD63358
2C504DFABA37C3D35FFC59E47128370AE24068B586C679398ABAB7E2EA237CDE
4DDEF178E3086B2AD0ECD4D2E659E8C799AFE8B9EC58363D5F6E2A40AE546D52
0CBFB70A11FA8470119B0158D88F434830EC1E06DE4C60C81AE27B783F1DD02E
DC5EEFA3E68A55AD24D2DDE70CF429BBE088A6DF3EE508EF6595E41F399D30FE
152BD7BFD3C280FB7F72D8AAD6180C19791C85A0DDD17A39D1038C30284B7275
4112155A29122B47263702EBEA28DA343CAB6FBAB24B5468862D4803EBB40359
CEA5BA86B64BEEA3673E6D288CD2A309E3406835FD0B3F99DC8779F27DE712F9
E30F49E54155D93DF719778F9D257848ED61DF55D7A1D7F625890D54D7A3AB2A
156D1638919C4B0572DCC36C6DC271FE4034416C03D9795E4DB993547B7EE4F1
6299032156387F07921487FD06BE6010E9890584973A5CA21F57A6A42B3EC69E
0B908CFDCA66213A6163B8B44C50BC5630E7019772C075225A14A1CB03121733
5739834CB634CD10932162D3E91B26D530BD345E9771A714ACBA0D8FAE696CB3
95D29361F8253C26293642985A6FB3E0F3128B651588B67E055C19E05739A41D
5DF150DCF242B445994FE0AE8B9C501AE595B43727D70EACB1521BD6B89919CD
18FF4467A19A118B307916D29391E5942033F982494F600B88D25C645F20F075
0ED881E74EA9E1D0426399B4518FD4A01DEE10BC48947B51361CE7127307C16E
FB756DE1EE69042465A59064F3C6785ED0865AECA7D9AA680222ECC383DBC01D
6F8C17662E0DD63BCEF7FC6CF12FD1781B7132D7BA7FB5AAE7730DDF2E4F0311
E349389E8E617872914CA4189749A7ECBA9B15E547774CA5BCCA6E448C9BD9AE
469B9DC39A8F5B34ECBD060A0E76AC6AA5DE96D63136666EFA347E25C19BDFEB
072A8F9E3E97253DE65646D96AAF437ECD5B1C60D0E8667D5FBA6C4919A35125
099D898DD83A046840FFB3DEE28B3706F99B63BE1EB83F64414AD1FFB48413B5
1284E63192581D944A7AFCB8A6C2FF88E310F0A1DF2736B3F33FB35B8809FA06
B14DF58435D8624105F3329F742D470C67A19ECAF40C3C63DFA553241BD35097
2A34789DB3FA7137A9F56228A433B23DD4ACF69F68258C110125C9A4332A719D
E846E19E446B8C30754D90C89C3F9A8227B0A308F9F263BAACBC054A21A4A0CC
72FEEC68FF735A23EC27A31DC24F5A551F94EE017F96A527CDADFA64065451D6
26C9D0205FF2814B0DD16971C427AADB9563492E9B4E2CA28410201A72A9C3DC
4E85D92DFE73365770F1B6D819FC536B81F3F56C4471B5D01BEA7E98DE6FEE1B
0BF87A7351F26E34D8A9F3DF62B21A079879AFB1255BF69DEDC925CEDC946D53
E03CCF57F1816A3409CAC6A44128F3325EFA9FEEFB6FBDC4C445D2BF8A1379D5
E50809FC7EBE2C7D9FECAB7DDC8FC2F3559822BD3BB281379D1D99926BA90C48
1521FC9969AB99DF09C8D159E3DE89249493D935853A3CFE66EC891D9A39E678
8C9BE1774986FA796E2B0294974421903F65384A32BB430A9A3B7CB4A8C82A3D
C2AD5D1A62CB45A3DFFC82A4C2D192F43231316E768E1C54A4196977A51D2D28
38EDB630206CD6DDF2F068F062B08E676B925DC48C374BA974F6037F9F5D6331
EA10A725A9D1469C759D8FBCE77022C1808DAA09F8A7EC25D0F8DE5FD8C8FEA7
138984D1A32BCE3D3232DE30DD24AD8B9179D985186A78DDFF95F564EB7AA7FC
1966C667C7255F859AADA1827B9FDF1061EFEC871CCEF1391D72DB08B0C9E53E
18C77DFBBAA8909FD21FF602F1CDF8B66D435A15B21EB66B20C3240507E5ECD8
665E89AAB217D91A6FA454B0EC6537F402E4497FD5CBB00C72F207436108F0D6
B87BFFF9F2D14F58353B6D8FB3BC1D77EF6C87F6962AA1E3617315B1A4491290
BFA0F1C68D323D4DF00CF2D28A52BEA0CBBB8A52CD5485ADD08200C91C6711E1
6CAC97A31268E3397F3BA2784758862C3DADD96092AF999CF3F109AEB141B8E1
347CA136473AFD430D2148FF4D507597B422D73E4AD58E5C749EA791B855CF1A
0ACFF17750F0F6F0594D00761995BE6783A7FE49E91133192E7E99410D93FE8A
70DE937C5650EC3AAF74B7BD78E5E3D95D5895AEFC981B4186656E202D9AE793
AEE52E7713D92E3FB24AF412DA74590022A3D94B069DCE26BD9DF7B8C6A9F960
1FCCEF11B4D4CBE4F9DF9E9129E83B982933DB5BED877DE00411106F98E015E9
F341606C6963C0800B9C9432AF8F2B50A9F6832DA95C6DD80947DFEED9661990
9A545C5966C276A7F41A24D9B74A0FE904372D6FFCABCCEF1172454C0709EEA8
F06CDED73525F707F10F868F5484EA8D6EA46A542ED2AD8CF3DB689496700207
D129E6533613804BF3AF0B427FD62FB424100CEEA1448E167BFAD63168928140
DA211687B553035BAA3A679C2B43E8DE0FECA02A0874DC76414D1784259E61C6
FEC31B92392141CAEF0F022DD19B7D84C28B3BE3EB5561D80DAB33CB3DA34322
322EC29AE18198D23A63F6F971A8BA77AA18DFB147087CE43EB6CB140197E010
B5545B77A55183A335355792DA274CCD817FC2E5107CF2148BD6456DF94DF1F0
EFE1BC8617AAD039766309A22101AC28C9A51EE1906973F0D609DE523963925A
F57CAB4B18BB3E02BF76789C3599D4D5D6C4D47732E7F8067918CE93C6507CC4
C2A658155E925529CC09BE50158BDC760EF2927FCDFDBA5532467A0E2717B6D0
7AC154579C51CE27A4BE0F8F3E1948F32D16C42B7ACEFB33FD7C4960A6470ED5
DEA967B8F88B7AFB582B7F83CD1890524865833088036A57447F9F95890CD4B6
2A27B38D7CD816A7EEFAA3B4E315BC32264A2123D40A2013161F07ED235E72C2
6E6192906B25A7599B28CFCACA4E7CAA58228247DB68939F3BFDB2D779A9D925
DC60D607134838C0B7891DAA479D1FE94CC8CE87655CDA345B73CB7F8199D124
89FCBF2CE1BFE56472164882934D633B8D08D5C6FFC93E31499088C443C2F896
71380321DC6083E4C0F2A5EE7136A318B6F9D02423C331B84D3055B7C6723364
8E63947F3B1C012DEE604817B8FF86F286BF1C5BD3EB4EF731F9709D8CAEF466
314D348C3D8B0E3FA2A5BA929F3DB515406CDDE2C48A2FB0A8FCE8354733346A
2D92442EE8941F27F66FD2E6FAB21AF7F3DA22ADB3FAF4A34F3309BAF34D7714
1575434F14D63F7670F438D339A6196C9752E7356EEA8F720E79D06ECBB8A27F
E8E0F74079BCD8AFE4134FB57272FCAC4607A5182FC84184C8262BBF9F11530E
1E4F043B4E9C453038C54F845D740F109747762E7BF6FD8A529B163153FE9FA1
F550681C1D6827F002E3176F0A3A5EF9A0903C5A8655AC0E7C1EA5F5B6944039
E298D4FF3BB6F7FBC50C35CAF17BF76645D77D7C2D99045E4E8456D7E3E797DD
1E96AF475146F5EC605E9CEF21ADF629D187C54186ED86FA4D9B64A4C82454F1
6A6DD8DCE17FB168D760075FB99CE422CBDF87FEB7B948C254C8852D93F0127C
F3394A02B59E9120974EFB3287AF3977D2CF834E45B944B22A10019BFAF06962
361D1B6414DCF802F112992A1D8ED0E05E44BCE787F5036B43A71553BA196E64
A9FA40F3038A576941C9AEA55ED17E3EB0A8AAF477D141359174CB2838D41725
A5A09F703F857D76B35470D67E1E5FA6988F74C13F38BA2627F493C39DEE159B
254961F2325178C194B6B77A628BA29104E7DBB3F9036E96C64E99906C4E2F8F
B89E6C04706754449E0CA46B514EF657D9808972931EEC180E356B19C57BA556
1D3F52CEAE48371FEF041B4C100B1DE01FD075EA5F79CC6160E273367AA5835D
9452FB343BF0CE634C016CB97610F174DF92DAADEA3B69F71A517C1FCA6E6D12
8B3F0410981F943857B6B20A947FC12F17CEAE1CF7EB4F4849910196CF0376B6
96A2A57F6BDC12B3588D87A1BB1AAC0FD7344433C3430563981F8C8823C84D5C
27DAC02BF2C7BB24D3716CC02E518D24ADF82328E294CCD8D5ACBE6F1C446F71
F9FE454C48DCAB357D52971A54954024E3C63BA6CCF2A2072AF9BB8DDC6FFB26
F7763D501FDD129DC0FDC4BE50D5057359F251BC51CFC41C00050EA10B10A90B
71A53273FC0F14AF09591605632A7D84B743F041BD18E524B97EFD3C92095D78
733AF5225D4B5110460DCD14D90AC3DA96DDDAD2B5324EA077C7EAB551DBB952
6A96357A1ED9692B8DCAA5D46913DEF1F3D1CECD709B0B0AB50999473F3F4121
C0E1FC97842F890DC36FE10913D3DC2538BD95A31B7A57CFC38830B356A55FE3
0E1FE39CA963A8D73AEDC1E289F0321C49607E87AC56A2431436009135FFC316
085588602AE964FCF5B404747F70F913F4CB6F4D3F4AF4FE03A2EB0BF952F4A6
54DC05D6FCD2F60014CC7DBC5C1809B80DE0A4D491774E22C79EA6D840033748
62FAA75C675F8068B3A132CE7755E5EFD12EEFCDF20662236309E149DF0CCA7C
0B2576727E890322616F15166C66E800C2B5271135556DB884EE5083F3F07575
7659A9594170AA808E76F522C889AA3F4815D24324D125255A165A95FE04BC73
81084A61BE3CF773689E426A254CF57CF6BC8B15F5EB573D5D9F90BC976B303B
B134286B41180AD68E00415B7F9AFC8C3BB1A4163C7C16312C1667010E2C9506
7CCA6DCFB9F33816F74C1DAADC0335D63571110FDE0B955173721F3A465AEC02
54EAD1F6B1880FC1114D71430D6123D6EBF16644C5F57A55E38B62D31AC90482
878DC5F5652CC2AF66CE39E6B9E7BB7C5FCF6EE1094D28753AC128A851F04558
53BEF33E3D667776AA67F53EEC1F7D37BE7827B84415CFACB8ED21A226DD56A5
EE1B6E82740A953466E5F319B0384DA09F8590301ADABC1EC041F6D85DE43F62
0C1CE56EBEE16FEBB1E5070FE82C6E50B830E71199F944E743E93709C052AE29
DFE423C429D98DDD5269E773AE7C88A24A227F9A813F236EB534BA24377E655B
8E4A4733E6F9E4511C67D4FED0AFCF03FDD130B1CC1A0651A2C71D2948ADDE69
1A227B541994BE60A97A6494F32BBE0A359D93AF1F7883D0296D627370D5526E
3946CE4D33F9BCC0B4C20EADE32AB9387E5672FDDE2C2A188B2D7DE756F4C0C1
38948DCAB4D925191AA05E55F2CAC0FE55BEEE591A3186ACEAD92807BA24F1CB
6BF66628FDE3A18FE13F904DE97AAF880DF8911F21A13C3E9DC7A3DD215276C7
56DA5CC4CB9579B6B0D1133222C880FF26EBEDF7E41C89AD8661A2E45ACE655A
B02646E5BA32DF58D5546B451ABDF9B0E22A0D18C4543E2D3813974879527C7F
F4473543B3ECB6DA66225DFBABCD45A0FF8AD6A30D5AE7013F390C79EA04E411
95BFE3DC4BE1AECBE20AAFA9AF355905ABF026543C9D827463C1164CE1F68A41
6E37E2516764D1F2BCC3EB0FAE5A1E399D4768BFE770741F1F2E3CFDA673F9F6
05E02F5EAB56B44EDDC1EF185F6D9195A13872271C6C32BD676771951EEEBE85
C3E38BEEAE6220760EB994CD410902B26C7A1E1E89DB10CC2EB28D09A67CDF57
E0025CB2CC0E555B8BAC4E109AC3B64DB03398E14D2E0EB36E6AD8BF59202758
E7032E83D5D0A18C14DBEFBA9C5A5C7BAACBE2A16089527F37484BF8F42AF857
68B54408213C46
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFBB609F1F3488FCD40BC240C42122202A26AE30
EDCB46ED7952582054843C0C6E31BA266D82C8DADDFD318AA828428B17B91244
B5FFC30C105797DA893B5393E9EE1C319498E2B92C9CF390791BF3F6DCDA5231
16D64255F26B3D26D7F70072016879C1CA4E377D77797A32DB18676BA8294533
29D58214B161282982CE616442096DED79278023E56BEEA38DB7DF7AC21D9B88
457317ED0F6CF9FF5A2907997EB6A04DA6593C846B1FB75433B24AF1F6CE1270
429EA58791874E4246C0A7321AE831930F08F586A85120A40EF09A72B1959517
A0630A94699E2A1BD96AA1B5466D742363F38ADF7937A89EE47EAF9B93FAE85E
2F884193E1D5FDC28A8A7F6FA6EC89007816A208960055A88EB090534CD23A88
1E6D86F82C0A23BD0A770F19A5292DCD4C30E8928CDB1375A67FFC936BAD975A
9DCFB0A4BE6947FC780F2D4ABE4714DC4CA2CD2AF407F6AAD2DE8B745EA3CF04
14890044719DE09F3F8A3EFCF2FE109A30D87414ABA2676B03B3060A587D0E46
716D81039491DB446916FA5F10B5FF1AE7A311C6FA52E9323191F7B83CB246CD
2E4BD540172263C8D807EBDEFBB74E9894BF0EC793699F0E68263B1878CADE0E
E48913BB0C4CB09F2124ED1AD4B59F7915FA254CE192150A06A437F194A50EEB
0A766C689FFC8EDB02B3CDA24BE5B94F4D4C0FAB79CD0D3E7F890894C99AD3E6
B3AB0CEC0E6C4295F8FF87E07BAC02D3469A37176FFBCBE1C6CB58A383EAAEA0
F49A020318D51FD579661F3E2FAA54D811386573C91A067187E223CB9AD2C26C
FB2671B72D15270CD8CB1D59CA262E0355E991C525AE6E8CCDE226F4902BF46D
68C5D0FD284D7A14817DA0640D7DB680E79F9029FF9F79655353B69F7F9713F5
21697F75F4A0116546A9D962C22A4647AC1D5FB8AEBC6481A94C6ED5EAD25505
00011CC1B5A95933E7854EAD8F2C531DC518453ADF92C19BBBA6B2A5A6D96F9F
2221E85020131163F32645F282EB3A44D8C1AFEAB666552ACE170271D4F4AFF8
43079198D8F05901C897288256E71AD9A18A5544EC317B4247FC0D40A2C3CD57
E796482600AA5E73A63B568D1B97E405C045C305C9970551CE63E45D74F8B75C
95A3F96517CFF904BA2676748644105038841988E8C8182BA89C9BEFCD87DB55
AA5E0AD1D2C398A278059ECF219F339C39CF69081E1EB8FE48F3E078103BD876
70D225C2850EA487E561E61A161ED1D578B1F169DD8A03EFF3CE10683BEA98EB
2B7C1F4E93E0147DBA1946FF5CD5A93E1EF62EEA51B201D3B14BF477572A461E
B99B4C0C0FE29E6DD239D2F234D71DABD43C445ED57C494DD907E1E6DCAE729D
19A6F9ED2ED65CE7FFB7B8DC087429A3D69116B933F366F7930FEC7365662AB6
CFFF3022D1FFC91F6F2C6B28808CEB9BD6ED03B43FFE970ED2529C5E0870471B
65CEA8DB2308752A39C9AE5937EC7F21EFAFB2A43CE2B3928163793F568FD208
2183D51A95456A761655D006138CEA62A0ADA87D3D4B8954D01DDC88746908ED
B625B9FC645A71DEFD070173D7AF2FFFDF728B7EB14228DDDDCFF7E9BF9AF688
1F745EC71298D454AD31AB998F5821BBB633126AC26EA984A4660F22D3905959
11A900FED030F69500C16AEFE3A6FB08B00FEAF1D31D9470ACE414E44A1BB675
8AB06E34EF8E87528FE146C23041CE57C982B9EB2736D453D66E3EAD617C93F4
31708ECB7574708B95C16BC0ACB213112B9E6B2763E75FACD64EE28807FA1928
BBB2E6C2F219AAD63568B6B2F3D43724ECE4443993EE94A4B4016F462FEA63BD
490E187D5560A2C81AE79DF8CA515C323A63498CF6A5082FA79D34319957690C
F7CD568224E9F66B93EF3B53FBE4E1F32E3F90B51313D7430BE1825C90D88DF4
0E72A43941A65F73AED95051BD333C988C2585BBD10198214BA25C78CB3BED5E
7AD9383F8701213707958227A3F6E419742C9B7B387994DD94EBC3599E7195F5
FA120FDB681FF0181501606A23750D6CCF87F65670B25A5940553419BD119D07
F29C6889396A4489D046C320F4F438E85B8E1227FBD0ACFFB73441EE4F938CF7
199F8A8EC00C8BD6EB20AB66BC1FABC48E4ABE10D4257269E620CD953D5133D1
C98E13B084100B7D9AEBF3C073C8C79B30EA5D28A68CC2FA966F0EE721CBD633
D6D668F34764F90B5E8A643C8CA2B2F12BBDECD47B6150B5655CCF81257BB251
6467D0BC24C0033AEC86FB987B713930C957C632FC8F5816F21F6926B6C0914B
FCE14913B22B6848FEFA6107790BE7B3C7F55B3BE38988F36222BBAE11B6FBA2
9AE0A974673C2867BCC64F0A8FE98AD94A97AEDADF621368DD7980ED84CCACE0
3B34DF5EBB3885DD636E8617400D051B27DBC4514A567CDF9FF87DFBC5B77ED1
58C0EF082D34E9BAE83A478F2D9DB1F9B65E818E39285BCDB6D08747FBC52D61
F311C2EE3444CC6154FCFFAACE818BFCDDB16D6DA12F60EA605290CC0000476C
0235F3CD2DCA6DE4D9D40638251FE20A5C8EFD39DA710A4716E1706C9A97BED4
C33668C231EF31A4D5750105FEB6F0C8588A257B163EB95BFD4A92564CDFDF06
B73EED893D4804AEB03FEF3B12D9AE0D47CF5332716FA25C28A2B94219A75D70
CC55783504075A5F0BFED5601BB3973AE413955F0DD137D42B65BD9AD563ADC7
E1A2C37A3113C6F89B4DBC3027B3CAF2C6EF0A5000F53914F0800E33B06E3DF0
CA28D9626A7DEEE92DF84CF59672E3A0080CF4DFCACEE5513EAF3E903BAB3879
0E8721E8C3C52DE79214EEEDB424D767D0C64F1EBEC99C7740FED61F219538D8
185042F86BB762F723CDA26989C4C67DAF6DD7825A6CBD56048BE3943949B1CC
8EADA4325C44AC6F52BDDE513987D5ED51662BDADADD45882CBC0F420209A2ED
5CD01ACC7E1D0401A7FCD4DD0A6F4621F4C29048731516E16076F3482F71DC66
93DA281940D45D3F9B39005FE49A79CE949CEDB65B196F50EDE5D2768687CC47
1A1EC7186D318D849C05BB8BCD0EC8659948F84008F4624A4F41B8DDA112B42F
04B0675063A2B3BD3FA2B3E0E04ED9832582F5515AF7EFECB22525A6012729A4
006203BC8A46C7A6A60DA0F66A1A066E0025917D1BDB7E9E37AD935833B94133
FD59DA8617DC87B4B835C7DE472E783CF2984139C440B18BAAD8E361ECEA4E7D
DD253666AA024FFA986DDF098E47454A062B5BB10DAE3331C3E3C1B56AB32843
5C9964D369F0A58D8467322EB65A2F8BC6050605CB87F380D794E6A311C6FA52
E9323191F7B83CB246CD2E4BD54017226B643EBB1C0E4AA0EA12349BEC2C0217
289E81B36EEF2749586297064AA5C2EADC5E6EF258AB1B3B5FDEC3BF37DCEBFE
48DCB5DC6BAA38B43805207BE1887DC76027C69300A7BCA663C4328967C977B4
30B63CE6CDFE50A654778BF2A360A33A473E6D63D300577B2C99A5F45D0B5591
2308234FC559DD1F7D85A7CD3BB80421FA781D930DA82F41FA8B6DF5F95734D8
735E4A1934500BD01EDCE981A8CBB0DCE6D06FCC2E3AD7BB240DE7DFBD1F17FF
DDEC2782BEC3FA70A36E6F2E812C23119D75A47EBCE147EA06772992CC438932
91BDCEA2DBB162B85E7721E93CFCA0D4B69BDA5F6825733B48FADB06F9C8BEB8
E158529741F24A479F827532A008C4373425A53658E3D5CA68AAE9B5ED66F92F
3918E329298D9F6293E8614966D0ADE9CB5DA1D8CFD55EB82E0C85A089269EDD
6833F4E48E3B9BCF78C8BF7556BF51AAB5AD4B903096F164D60CA0CE7BDEB2E8
0D58B526E647AB7936C6997E133DC99D407B0D2E407E03DD4B3C95AC14504665
A6A8D05345803B3A0055EBA91893597A866F289B75B6C623DDC0E21F8746CBAD
EE0BAA08C4A5A3C3F3998CD3328F0DC964B2466AB73BF735DE357816B8A49779
7F6672F4FB24AEFF9D9806E15D1DFB6E3E5386A1D75068986D021414BCA5F1E5
BABDC5FCEE3EB40454892CE429C3ECA8635B7A0132C1054A7EE25762D02DFA00
29231EE1E3133136F8BEEB1C994238F3B603EA8489EF99E770EED78A968F1DC4
B1BDB357EBAB1A189F424831F6578541FB21A36E4C6CB52FD09F038D0ED98EF8
67646E3844ED0AFCAF62167196EEAAAFC3D114E7F327220DC330236F7133F753
DEF24A153EE4742916BEAE0D21F24A3E4D146DEBD198727C6E5A340FEE679C25
24FA0A0192DBC4C4BF0DFE03973FF4765BAD2311EB21056C4F23EE42FCF25B6F
007D2D8BF0871F390A0F59258E4C768AC0134A614BFB94C297F9E1876E1B2073
481EAB5035A77F9B6CC859CEA88CCE5E830DD429C6AEFCBFE9447A13D00FA3D6
E666B4AE09D366C03E8B807AB38A8553E4B5345123312D43AD2E83693825C679
F654F27464C3E04E4B15FA6FE9D0EF916A19C85B1E1B78FB92A8A32F408CD920
8A66A14DD2BDC5FB5E00308AE28AFCCCDE87BF0D9DED320981295BECA7E855C9
D5FE5DF0E2B12476968B3C810EF05B694C7382F8731D9AA669A78FDC06810D5E
546CD334D3DA9FE95DA028C1DC1FD13D5DE9B840FDD96372799EBF4C9FC600AC
EAEFC2E3B80761EF5695001EC347713986999A6BF44052A99A861E14FB8153C7
49EF0DE6EC83878CE9C3969A9F8AA643AA958B11ED879178611E0E2FAAFDF0A1
3E39C647B1160919C81067D75442072E34982759C289C8FAD39D896A60017B4E
5A7B06FF4D1360CDDCEDD19C2E11233BB52698068476B55C10426C6B620BF189
0A7406C5CF22F440BB8106043B89324AFE19A881799DEA617DF96B4DF17127D5
844580135B616405F42758BDD2C8CC2A8C9771234506BEF22737891913D14DB3
66F3BECEB3445CB1603011ECA7833E0E3E9578846685909845C2A0B991A76635
3911FD032BE7E564473F851F794504BF7C70E330B61842EF56F134AB25DCAD2B
D08AE61E233FE6F94A87F4647D674AEEC41A3E496FDEC2C0A1F90C1F4FF44D15
BF4FE23DFDA51D40DD9BF5DDD3CB175F3E1E61294DD9601006F8ECC930DEECC7
2781066085C13AF52E30A9669B2414EED3E50445B7E8B881265EF41110CB02E0
2E83E737091B05A3BAA49FCAE6E32DC9D1AED22C2EAE8DD4267FE9EB63076703
B29D8D4DBEBE215533641C03B7BE8C7B7156D2E5D82C74EFC80E31B39CE0EAE6
322687A068BF76B742AFC3A23E150839A9654E8B6B79FB427D7FDE4323899C63
7CC86D15F14C4B08FC9AAF420CCBDF9A9636BA68231730C7F28137AC3A0D90E7
81E785AA189CE07DFCAE1DA5FBE871D8035F777CF210384EFC6165DE94D6FC7B
8B746C4B214A485F9CE57642F42A0329F3AE9A259683BA62A5132CF549382EFA
09C29290665D41004EAAD1B895B159E2C905459D2697B2819F3B1BE771D8DE36
946FBFC4D184CB3471F958F98B5D41193311255A11B8FDD312B5CBFC4A916A6C
DB708E37926B072877F5BD15A44362A10F1795E0780C412A606D33C0739B890D
9B3EE1860D5F11A241C4889FC8C0F634CABABB7B430C4AD6E491C01211B9BBC1
212013A533B501A088CBF25D6CB180390D43CF505B0C6D1212CCC7F398B49BA1
34AC18C9B29574AA4FC9027AB682AF79E8EAC789CC0B080CBE539F7AEAFF7D7F
64A454ABED6233E9787D1CB2FE03262725A0904BCB5EA7C17A39552A1F26283F
54A8A2F029D04511C79165B5315320DC3DA94674E8E633B1951B51BAEEFEE731
49E7BD8C20B7796749FD662131D12A881DBC60E48CCFD9E1AC3BDDF3FB69A81F
2D36111B4186BED6A5EF82D27AC66A2F6F91819A23E4A229EC84ADEEB4A2FF37
B92CE6C953A91853B38E12AADEF8F3E4852D894A15F60EA95A74CA355A6197A5
A51C16D88F95054DC7B965D9AE82D16F0DDFA0306B260C5CD4D9A58341D9D58A
4E7668ED6054923188627F7C9D623037D39D267934B346BF63C8CFC8E9F73320
4FA4F2D087E6F867ACAB282F0E245291E60AA9A4EE1AE4B05DE49C03FB720C95
8EBF55EC09503BF1AFD89227A574BD8D6F6283BF75EE351715605A9EE21CF836
572E2BFFDD9A56E20DB4D6367956ACA1339E777504775773E5546629028DCA31
55ACE0D8E354195A2563759DFE0183C8D67B449516EEB4EB90FB0BEF17F7C10D
58787200C749BA0DFA1F5945DB13A9A6181DE0670915C269B4E77CB4ED988F59
3D535D4100055D90094EB79BF159A65B012A2EACFC2FD63A2047C40D188F4E30
4C4610FA7CCCF0512FDD24CB36B402293FB92453683899ECE7EC3DDFF5B0B8CC
BF3D9CFF45C6FE8E3C283C02A4655C579BF21B53D1FD37996C6B4F46DA2E708A
CC998C1BB5EDE3A45AB78996EB94C76AC6F4A0044C3BCE04556B6A6F524CDA3E
22965E2FA5AB9D9F9964844483F0E0C6017580365599DD3021C36FDEB1A39972
2233B220056CFAACA8C087B4C0BCC2AAE1F10C0147775505F87BDCC02101AFF3
8BA1917A296C2BA33BCB5CDFE91A4647903661FDCE35099B7A551426924C0227
80794EA774CAD2ECA4581BD58ADB6AB154DAE79625D062852F9EF2C32B53258B
6BF4A4A856647C3240A3B33DA15021AF9FB97DE82874FE58772E82FEE206948B
858C72DEC59D297CC24DB89EC76930D071A679EDCE79065760658DF839B7D55F
3F5B546FBE66063A676691C47B0155CF1C7B04436F5076398F44159AA77D2794
F0C75D9AE60CDF648F9677A2701944FEE0E51FD5BEB501509898B8C4530A1BE5
182B4F95B4988A9F5E686E35792989DFCBF68761F29435C7425B34649283416D
371874998B99CD18F7391102102F0AFA75DD8A68E88EE24ED429A81C686EA73C
A41B1667D83AD9378CA55306C8D08B09476F199FD07FA0EAA53F7F06622E1758
A5B6C86E44D4529018CCE8DAEC14FC13ECF3F5FF91497ED226325921CA194AB6
40AE74B8D924E48E8EEA7BAB1F7EF9D23EC42A02DFBD253E4F8EBA8FA68830E6
BD9979FD51C8355F6261BE5A9574D5351815A959020591659CF35B170D16656B
8D61E25B73FD1A9E54BADE8F858094DF755F2C35F72055766F3C65AFCA94D0E8
4C7FC39E73EAE0E4C162E24D15C0BBFED0EAFDFAE2C502881246F7254CB4F3A0
D2812548510A255027D81C4C17B989618FAD618572989299B985A5FCC35A8891
C300CCF87A6C602AE0AA7A28AE4E577EE64AA9725A015C1E0CA2644D426C007E
5682808AEE3BB7AB14D465CB0E4F622144E415EA54E08AF6BB995CB64D19B2D5
0C3CDB4E43E6D9185F37A0B20E81810874ADBE880B8E044E4662EF0AF221544D
E5DDC61DFF9129D43D1A3EB7D6F68685D43D11A7B6645971E03E3887A7D1E170
C47AE4059FE85CABBB066949A02C4E306E30A43C5D42182A2087CC39A4D9B855
AA0BC6B2582F1D082049D5A06F34DE2335626096EA26D57B94A928E6FD16F11F
AFD503506D77732DAED9B41D4795B74CF2912DCA278A3549585E94245D9E7E63
EB45F0D1798271EFFC92608B289F60FFF8C732825DA065D7C95992607C9FEDFF
E81393DA14560C1643CDFA74C575BAA216CEE3C693C36E0BF4740CFD75F6A53A
A50D881746BE617201E30280B1A73996DAEF61BAB889712EB1595CA37FF93289
176FD0505F551F95DDE3615B9F1E6134534A315CF6317CF3B593A0787ACF5331
99348D11730EFF7C25DD5ACE31A3B08B3C2A698E4F95DAE539B5E403A0771421
FBBCAB41D5765620314119629F3C11947884D1E3DD1A89769F0E8DC56C55084E
E590D2BD58FD9784BCDCC3D498B5E8AF0776A74A77D10C6C1DFC91DE62C1AE05
CF60692C84EBEA3D477C0433ADAD9AA04C4B6A9E56344507DFC3F6671D8C2968
A3E83FC00043F27F1E73B67016A5054B244923BE99C97D290292DA35B180B5A4
F17FEAB6088FDE32A79937141E27811C6B33694B3F988AB0C9ED06E7DA31CBFF
72C7EB5AEBA5C7A3D9BDDCD1ABD7F3AE4C917959CBDD30F5BAB2D6F3B11B98A4
3210DDE46536EAEAFBB904C0608395A9C2BA9A03945E029527E917F17E502D5C
DBBFAC0581982D7EF27B675C6B14C5440F3DD5A1846D9AC309B9E8CB4472C20F
42917BA4B020DB0FBFDF87F6013B8ABE63165ABA15545146ED2FCB21B0345A1F
37CBF48F1EA6472B994806D02F28988112405F80F2B8B218A6C042AC6847F2B3
291D30D4EEB934A0173199B032DE4998B1B1164EB30AE3737AC094373F1D2168
8137CE3BFD9E69AC60D04886D1063742D723EB1C06B948EE803031FC6D236BA4
7C5C52A83C1AAAD52E4279CEDF3E4E13CB4A80E94B9F75FA7DF1AAD0F96B2F12
90E8451EBBAF666407756E9A8493C6DC65A7C3623AF7619795608C99E157FD3F
3192252514A465CA900C0A13EE814AF701BED939E2F054666E71E5317A6E3CF5
32C4004E60ACD7801648A2ACA6D4B8ABDA4D671F194C4A1DC79F2A5097712F35
79E050C9FEA8E1EF4F3252FD330D163CF0F40F2C296FBCB5FEEBABCD6C455A13
9D565F8CE5847F75CEF39020F0544340C3B4C147A3CA6B939B4B19E81AB17115
0A50ABDAA8951194774A8B20702D160C3450D2ED635B4B8ECE515BE82B5BE1AD
90B13720D22930123109A3310A85275A7DA9E0E1336F13F8526C6BBFF2B1DB7C
03F4F77A11856B763454BD5F697F683D35603984D60BA78A94E120FF8B0AB25D
953DAEBE2006856F96C8893E35CD741B8F28EE7DB9F2761DD12FB60ADA0247C9
FB6C65754B6177A0DEC633BC444468AE738011EF30BF68A42F4C4A7FCA980184
A9366A77EB2FA0E1CC2465A94805A4E84CC1FC6577880BEFBFF5820772B44C17
1B4AF5A3C4CCFA99AFFE71134457105F3B8D3B7E33F4A6CAA53F52C16313FDE2
A91445EF7A5754713BEC6CFBE152CF0FA5C403CED5991EAFF6938C0E68D4AFBF
E14B9497864D9B5D4764FD4038BA75602EBBDE8EE1EFC998E63FA1B07DB02B54
1FC918AF87D5282D0D7BC2E56A5C60833A338DD19BA6DBBC7DEE251F5A950D0F
62F276A9161DC1DE8DB644515DD6C338BF9ADD21A60C14BF696A8E3E169D4A28
274D7B30DD69E1B2C3CA70F2F79FA29543F526B87F2EBC4DACAFE9339A0097A0
41E1401179A005AD67E59BA123D685E103F25E1F42FFDA16D4A3B4645ECC5F4F
79B38A5D350AAA08318765F1F8406A7234AB0C0FB1B1853255DEBAB6116D53BF
50D681063EA6A439F193E4F1D40EBB23114B9CDF03235CC96E832A27D6D3F9F1
E0D7C970AA83D699485A7E03E71DA50FB2096EE5DAC923CBD54A4B5390076A43
C82C91B982B19D7AA8B61516F4B80C393995AB14CD756C4CA37202E05E0BFE9B
820605676678DB1D4D77D17EAA35BD7DEF5A54D050720CEB18CF8FEB55EDE2B2
B915DCA5D50A7E3512B325253FEEE5F1AF4106F7B81B499E5B17378423822893
F71FB98D8F5A96BA2DA0F3D2CAE3F2C028C5EF249DA376F0F2299767C8C84FC9
71D86F6321DF5D41BDE10B57314C784BEE0664862731D40F4BBBA3557362AD0A
39F29E7E10E5CB785A14D37DCB6631D3AF2D287EFA3B3678FD6C1504519FA7C5
D558D47FD0D0331085614FB069CA8D80059115F5EA8F736224120CC5E432226F
BD4681AFB83A9E85CE3D074084FC5F88DC7ABF2F42F1418BDFAB8210BA22E315
9015756223855834352478CB917D70F1B0AF793AF5AC6FA28046364D9C8E8A7E
042AA371E061C368E357E57A8A81BBBAC38A2A054B57FED270E9686C074CDB09
7FE395C23C0CE33E16D59F60B06D751039011DB94742CFAA513B6861828F6251
F206B9131C951D1ED4364A9CCE52D8E309B098D1AB782C8AA31DB9E1DB1E4351
30296CEBF3A1A872D17AFBBC17A93D71F3A3D321500914B57387B807F11D2A73
FC722BD5C566036CFAC5397F2A5132D91253DBE9B37E12F0638352EAE8A9C563
46AACFAD4043380FA8E04B88C9EEEB2DB80D4D07B52CE914D9DADF80E0737B34
D0F1CF6AA03DADF006837A2C5E235B9EEB4EB84B5940C11EE1321603E2DA27AA
DBAE9B6728F479708D4C043017B3ED93E4CB52AE96BA956EB6F385D209153FEB
ED81AFB3701D7164E4100F34CB2012DCA626F8A2147DF0662A02083516551E7B
DF1BFB372B7CCBB9782678A2638403851DE425A8AF6BA29A2283BAFEC9A82E30
AAA702BE0FBC2D58E357E9AA1D3EEB75A4D20EB11412D1012AA475556665128B
99C20340131CBE57A799DC6042F339AB93A7432453B6534ABB056717FD13D4FC
5220E86C5E9ADFD6664348C7A8ADBA58C7ECA2BE88D881CC03929299117F82FE
4F8D74710B5A1ABF12EFAAB723A7C816D47A9B3FDFA93E8C92F7360ABA1DF90B
ED14A3164DA8B2883B0B2CA52A8B48F33D023CA3DB9FAE17B29A59D2C328CC6D
94A70E8C4DDA6FE92B0E407DC950C01E31D915C6626F6E421543DC7754F30100
2328111B4DF5E4EBC8057FBBA562518988C9DB46F8A1993B5020F8574CE0C8B6
FCE43E382AA3BBE0CD0A5D948BA3817DE8E54F71FAC584426F531F4A3F9C4D9F
7586758AAE0DB68A07DEF72DE86D4041A1AF04BBE7FC989088EDA3A1565DAD1C
08E402BD6CF4EC99EC3CF150B3C1C176E6909031B3B4493AF8F6443208E5BAA9
109563449350CD6DE913053B7A675D0F0519B5B7F5A9342D5980832196D27869
EE01D169FC58F743CD16C8F0A75D1E4B943D89D63966FC98D9CA32B97933842A
14BDCE8D5B9B5CCE6FFD54A41EF225416BAEC7C61A9DD8A5806E380E2E7FFE93
82A570237B4D891245EB3074E0D4D241216886E27FC021114A82B2810D3098D7
FE2935E62F9E5AD7E5031793A4E70219B6569340B59671BD93C1554D2D2EB448
9007C555A6A08B437AFCF723A8F721B06626CAC2B2F371B1559D8BEB245FFAA7
955250F08E8F5B13EB0C00D0E11B189E5EFC007B0F2CAFEFDCBD00F3FE84F1E9
D748B724F859C717553B6E62097C0A408651B00C7F85E67FC314037C7E13F3D1
46873CB848F7B16C9B416C0F7B5550CF4F6DA9B7EECD4C294E2AFDD9CFD89C00
F6D53F203F331602FE0FC138EDEFF078A89DCEB9541E0F87682AB0267EBB3BDA
CCEBD717AF3271DD9D078A574C3C3E113F7F0D00B0C41F617D1E75F9FFBAC639
19E605EF94D0D2D096B734CE3721C371C213B6AFA0E739FCABC582C832960710
8080263EB92C9DF6DAEBA5C2E434FE09BD48225E110640A81C7C151D784EF671
B669370372D67B96DEF8498BCC17589A700E889B5EDFA8FF2D9ACA07215FA15E
294C42865BCF549350CB0F18A3BAE8606CFFCF2B7B6B3CE509264EE2FF75C9CE
88D17D4C31195D4B686DA3FBFC65D4012B3FEAB06663D976949A4A1003E4EC29
A27DED0A252F40A609F513EE630DB0A4DEEB11257AB2DF361B2AF95849F3AF9E
42B663611349146803C99257A9A09A3BD8FE0C4D070656DA891F6B6C2FB62737
22074E8876405E2368CF3BC65040648818172CC78055E1B39E04D2869D597789
99DAD55652CF8B3D7C01395D3BF0599B1E4A6AD4E0C2BAB7AA375883C30B8494
03F5A1B428B4A87D42F5F09A321BED127C7018C59997C1A49B700AEFE3F8CD40
87B0766575358EC8570A242BBDA8D91896E73AFC4DA03A52EEFD6EC22A739146
52234D15738C62BBA2C6AD31A0D44B1E9FD3E9E8CFBC344FC88E6559EE447E99
03ECAEC93D5E9D3E18F4A0727733CEE0F562A8FE056259BFC7302C7B37A24544
943A95910C458DCE016F1773387D9D4D851DA35FBF5CA18BAA7455C8AC6E9BC0
C1E5143A5DCA16BBC20A5316F9F40EF02DF726049E86265687368420C97F3A41
5D53BCD1CEFB38C0557EFE61648E12A39638FB42AE591FE504A2614EB98D5035
FA46F719B503CE4B2E2D3463B468EA8934148D4BE1C7AF9702CA13B36325FDD9
0110F1B8A03CE1002D027374A41C9AE494AA74D5DA4F158E624C2437B781640C
69348DE5BC5F443EC06A1BBE8E6481A48A9E0D040A0A4437D82A7BA66FA0E5B4
D0F5D4AF7B046D11F490F1DF3F8C21D9CC04E187BE53F8FED4F33633BA03A5B8
EE51FC4F6A4CDF352FDFD48E76C5737253FB5D2AE2662E2BA4F9908402DEF9AA
CE7BD76B3D4A244E3AC7442DBAE16BEAB2EF6A77F16BBB6E90FDD676A2215FF1
19532683B879671A87722307DD8BE84F65F443B78CC753844884422EF7459DC1
146671DB157C352CDFA1107C467ECF6233C87A1B4699D58D1C7E4B5CC4377968
13362232B3A8AE43F782C9C7F3EAAB68393918581E5D402BD94D576C05FE2AFA
B5E9F03DCF912D60BA2001A2D092A40A04AA69A5BA421F382275F0C4E4791A63
71735299F980EE45721D0F6D8C3A1D8CDB3A7574A94AA0157967D88836182FAC
8B5786F0FC1A21E399530449FAB1495E0E3D51528E6E2C07E9AD472351050F94
2D4323A5ED11DE2E45AC7A467CB73043A75E693DFAA0BF9F9BA10DED049949F2
69BFD4C2DA659C00B09364F5192ED3D272734367FFA1CFBA126F0B20513119A8
44E6A8FB598FE53D030925EB04A439D43635254CFF36C827155FC7F5C670365A
3978A3833636F8B33B0C66ED837176BEE6E6A8F6B8B8F275DDC0ABF2D6DBFBAE
B8990A9BF4371C933E0BD0FD0CC2C3FAAC13F915F25CD37A9CC3103B3D14CA28
29BC40DFC0FAAD37018CCA129A4897876302C02AD8911D9175447C15B671D342
FB4551E47E0FCE419E22848165598080FF1AC67983B2E5C13CAAC355E995A962
D99270B213B77B654FA8C6FAE137AB0AEA1045EA8FC0DE95A72ACD640B08B8D5
86177DB014AB4D745196AAF73F06386467CFA865B49FAFAEE9506D2F10DEE673
E177D6279DC60D5AB417883A321FB7D218D63E37114B23575DA9A6AD10ED8A77
93FD6BCE759F8302447FB269D6C55924D4100D53435F46538BA5C30C185DDB06
A284AA5034CA2FF24F6426D134C1090F8CBFBE01DB40AF670FDC930ACE64A098
1BA264E7B739C4088A25F551F578189A3285E26AE3D478DFDC64095D442198D9
D530581F1C40D357CA59601EE32B2425551E7F03D504F27BF98F90DBC75FB4D7
E5354074074C255686B775090A16F6936C9A0AC65957DD1AAC35E4F77F9EF91F
FC9F8D4F2B7C46FFFCF9F11D18C020C2C04DFC9F36C8253C4346DBC11A9D851D
A2FF6A2BCB48B923012E45D9F0EE55BA61EFAC69501F1BC31A19DB87C73771A6
CED0715EFF43475A0FD680DDA3FB99DBAD092BB709FCF1D2F42F6F1D7FAAE03E
A53CB5D34A0533C3038B97DE960896B497E6EDD4B4ED1204D5C0DC2D83EE0CC8
AAC15778A233397B42D6F3E389C51F07A7FC26000F352EE7FCB385E722B3445F
20AE69B185177A0C3635D75B805B4F3426C6C6E12E081339CDBD4553BB61F886
966601C53826AE17074880519DE36B7F98AA9D0ADA37E382B549903534CC577F
BE9D2FBC52DDC19B7AC998974AD599597E5FA7ACCCE3B2D0A3946680DFF89ABD
230FB37711C0E606B1CD01AF00122F9A948F55A8E36DFE616FC43482D75DAE9C
9CC68C6C3135387F38203666F9F7A94394FD517973078F27D6695A95B4313BAF
9155FD81A22DE96084D7181957F70B74CB84912E406A2467A2E8357A7EE7E75B
3B9BA6FD74F2A2086B7864D4902CE55B9EC1DA6680EC73D7A0FF7A3010CCC117
0C4E39917EA3055C85D171C0378299712D1177AA7469F474796763FB6FE9ED85
1FBC93DD94BC03CF89CA2C3706B40CB2B6E400BEF294AD0BE52E0885AC6834AA
B075BD25F7D00318790443228D5891C3C32EB9D88187D73526A15E071A3AEC9E
E2CFAD51447F0D660BF7CFF7EBC4AAE2A89A861E14FB8153C749EF0DE6EC8387
8CE9C3969F81B45B9A4F63E82747CBB98970AD3D2AD2C8B193113DB2DC8471D4
98B5988E64D3F957588B2E07F07D84F8FCC7E6D882621F41648BB24DFCC97771
5E91B28FB3DC5C388D100C3CF0C05C0E30F0B3C40E640856403246955C902895
54E7D9855E01803A2E4A4A44D467EB26AD61D0E3D77FD9F40D12C0D6DDD6E89A
3BA6468B6322EF1ED98E1FA6C1C3A5B210E9C2146C0797AE355583D824B2BE94
B1BAF6C01409650E70010C2E00EF49B371BB12C5CF61EF89F79D44C614960653
34A06143D6FA33885C9B9ABB33A1539967C49407FF5E0D54358CA6C8C48F7238
12981EF8EDC3A3B494F3809BC20E03E4DA37DA7FABD00AA15542FC340CB11389
C30786897E49A974E9026CE5A9CBD910A9A02F36C06FA7B26238CF55340B24BB
B424F4EB68B4883453C36014EF066419924D265AB8A16663EE2EA9606B83F776
78B642E1E8A32C268DC6FE77C016E43A552AEA1F90A4930F07F492EDC0148725
808E9CA43514444AAAD46FF165FE342BBCBF05B837E703278B20260F2B190BEA
781C5DC9096EA7552AB60D7A00A2D1EE32AB63231350953FACECFD82FBD82191
9E3542B33690D8F8DAA460FE8C33947B6536F3963061549BFFDB8444B7071AD3
CC7E89BA81EE6E462B186BDFDB94FA42FBD894318DB980B95A2F77EC3E049D52
7B3C51560442A175D0D4355AF506D88E32379E2C8F02E1379F36DB5250CBB731
36DCE1486937FE85441BC8E861EB348CDF8229A2ACD4DE21E46EDA743CE5D7BC
A65AE29C4F00F2FB20F2CFCDF6472686B200B23FCE6AC13FAE056EA1B304C5FA
7005501808E50151C166892AA2415303D2ABD61EAD6A435EE297487AA4432468
CF994F92CBD51443ED5564F72229E7512B667AC78A09A780813B1FF02AA967B1
2AAFAD9ECF36760C06CDDEF25058065A72AADEBDDCC09B6D128D8F475D8A3220
6AEFC8BF47C1509D24027446B0481B628674416319D720E3C79EDBE008780085
38C79938E46FC4A9B3B3E4C94830361C8115DC829905CDD01E943FD68AD929C3
09009C30F1C356E5AE411E7EA01A0FC4D2AB843F28E77309B1D0E6185370CF12
61BD2325B000A305A52C4087386CCDA558F5050025A45A1049C9625FC0502D3A
8052D228572ECF09F29DE98EB0A544672A85184705E71E41A2B854305924BBD7
54AC15C7B0F3377F39199DD531BABE8865E8D3B7640F59B5C07D2CCA6C0BE09B
467FF87E2B457C41477583D580BB31F18D435619DFCE7455379066FC8C4F9489
86B1F80EFD950B74E614A533B0C4A2D4DD9AD8A3E4F85B69429085C453279987
D2158F156B652A99F4A644D178FD05C543B6DDF44F265B6D3027291F2D47B02E
C7F91571FCF8978A464394EA8141077EAD6A5C182C775FD8878D39F160B10D4F
5E8E6A9AA32A950F3554A99D33F5C5AB146659B0FF64BB5D962CB2C4A67EEEBD
A6F360770054987AD65FA54A1BD687F1CAB305D9C4587AC495570DF9C4F05525
921AFF53DD0A9A4E22BC98381243A4DA9CD095F34269A0B280435E5BD73D91F1
056A41B007AF081136D50948561FF5E7C59994442E00ECCDEDF261F9F4E5DF33
D55934F684959BC5B463939AEFC3033B88B33AB67C5499D2A60B5321A5C22576
5E25E76C255966E3C6EE159D54173C987AC6952C10B0C3E73DF2510605270065
3849C02805E1C5602361274644F4BA8AECF2933CFAD5F041561B6E99B21772E4
094C21C8D7FAD2ADB181B67A51495543AAC99F499FA516A8FE9026B4F9F6FA14
603226BDD342BE1666E63EEB0D32C78385EFCA29AAAF9A225424A889FDB971BD
BAAC6FA6337200742FB65BAE285D806F3273A4A2B6C88806DE2A8037A10D16EF
D305677B9A4739C67ACF82AAC4F0D05A8CE52E360EFB5E0ECF810FFBA9BDE380
B680E31C8BE7CAE9F2844D17BBDC178AFFB0DEB4493D2BEEDE3E396AEFB764BF
C86DFE3CE4A2AD2F1014CD74242AB6DFA6776A594A9275834F2E56C9A5C9BD35
B8B288FAC8AE20AF4B8F10C50D3B5CC763A1912FA4115BE17055D9EF763F9426
C284326BA0D4D95BC25B242C73A631A39F665385BFE8588C946F09DABCCD5FE7
4AC5D873DD414F64280275F485F8A27B76856919419613973269D39C768806E8
A3010266862CF39FBBA573AADD91993E707C30DAADB967780F749B4F38ACDF82
AA399585EDFCD485CDF9E07935058ED16528D28E50E37BBEB1D1554503645DC7
AC0D077FE7AE2463F40DA89824D1C5D17DC70E135B2AA39363889DBA63C13F64
6A21F005F985B4BAB5F16FED0F646F79745A41552F95F74536C803FD0E67B1A0
045D2C928BF1FE17EA91AD0A116EC10060344872DBFC286DC6CE255799769EED
04E800D468F47B080716ED92AD214F606EFA4CBB077034D588198BBB5D13982D
6EB249196CC7E76C5031C3C0FD6080CF97D0318FBE6A0DB8D511356EAC4EECDB
1B8AFA3CE22F8B07A8C48FDD4D1337C67285B142D255D9CF6EF11271FEA3EE1C
24530AD38988CF04261B458247D328EF400BE34A35191DEA9BD6B99387A7A619
EA936D0B6239F72579B0E99370DA9C9AED1E38EE110A34004817B886A7977690
7A475918032008619872EA79AE70C001DF32ECDFF02FFB141C9777BADFFC5A8A
6A1FCEF61CD2A5097CCF506C626B18E1CC6E48B88B9BD42618FF76B7D7477C08
779C0180E034A90CB084FD2D643CF953FBDFF9AB4FF7DAB21AA6B30547145AAB
6016681FB9477E2A1243CB87523D2492EBC0F85F5B00448C767DD9B71530C5F0
1BE2D2611CF9644C28F3F1D117652C11440F024431328D961B72BF5435880D10
FB3735C694DA7DCA8F8DACF03CB8AAF73775122C66EC7F385D26FA00A1ED4CF2
0363A4562F836EC514D418E4ACDB9CD2571CA84F117D8558ACD6BA0098C6EBB1
AD2C0A062DE1D5167D0E2E82D385830EAF3992E4D8C863BA7D440B3BB2B2CB93
69704CE85F5ED2FA84096D5D15D9912FC141D7B8AD117442D802DF52CEE62D33
3C8680E458D0AB80476A0E2F3CA21869CC19CF9CD0F897F0E26E2FA5E43905EF
F7027AF9017AD7735E1F131F51421F247C21AE6EFC9BDF91470F1F504644EE43
EDBB75AD763F0731566FB7FAD0C346FCB6CB449F1872A1C253D15626523CD873
8F398882D84DB4F253934557C4E1D8CAE8DF936480442CC8D0A0AE401F14F4BB
6F6FCBFE0F4541F5A27F7A0BD2721C066F31553E26153DE9FED3B3F6B887D607
A14D933DD82E32144FAC0F0E34F1D0ECA423C805F4D486AB65E5FEB2374FF8AA
CD9F9E421646BE14E2BC931BF7B3114E113AC272E689268C2981DD9B4631F186
99FA6A85E93C7D079350C0BAD8EBBE1FA99D924A09B208B1E96DFC9CFBED73EB
D70DE13443F8CD56E8D3510D3DBCD37D52F256FFCDF706B456B6886F5FF5F416
C079A9D79A4C01FD5FE881F9994498B9CA251192A91D5EE10EE03E670FFE852D
E1E90FFE9325EB3E9F8552091831DFCF87DB972A1991DC659D83263F3BF24615
D47A897EEE5A15D4214F56DF2F6591BA911706D3AFABBF86B72A84FA9BB96840
C512BF9AFB028AD7A598FB92FF2E8F498C5E147DE7E6BE6909BA17189DF98F28
3DA6EFB0DCABC5A2659DAD9B2E82A7FFAD8A82C46149A381494CC9A9FC4DD87B
E8A273A04C8F9210E9C4ECE00BD8D482DEF3BD9164B9D23E40724FA9C3DCE3C2
B9DED6CD9D11622AFCAA2031E01F44EC9827715D8D755A09BA38A0C320169BBD
C9009D905FDDA547F04F0C596B99077020341D0C8D0594B96F3D215F6C0CF801
85A1DA5B2DB352AAC8D929D5EFB59A09821BD121F361A0BB39E02217B34E09C2
871520EB071D57E293719487CF5D51F3F8FA688FA1B9F46A211FE7E2B6FD928F
F7E51CBB67E70B290AC88D73F5F74B8271D5613B831E9FA76E06A298ABAE1A43
2799B9D39C052DDC7F055DDF6A6EAB9E62CBD50ABE89F5DA43300A19C6F45FBB
3B6B73E80D855F5EBFF6A5BCEC4849F00F97A8A62296A2D3EE7B2B79BF7494BD
A2645D0FDFC998896A60017B4E5A7B06FF4D1360CDDCEDD19C2E1579F2D70AFC
CED406694CD0A9F1C745974FEFD29E634316D6C4567EF8239569CA8DBB4063FB
54132B4206B20A8ADDED3705DFE13EB7E3AF75001AE8C8203622C7290F47A1D3
F3F15E77B3FF03CA99C867D2C9933AE39EC90E0FAA5AC754219A606ADBFCE414
76F709F0B657C203B8B79E9E12A6A42C89543196FB8FA21E8894D2C09DA43432
557E9947EEE2B94EBC03B25993FC39020072C76104C8C9F3647E03E89E38C8C3
F9AFFB729B1B2971DBFDB36FEBCF1436F4D5CEFE787157F8CC7AC507F9EE264F
885625FB151F7DB3788BD9FF8E30545E13A3ED367DDDA8D8916059AE84C186BA
3DDF8A3D03A6269D7BB21372427F66C4D4978813067D64E0DF70541891615BDC
BF3B5FF2CFA216EE8C2D9C96FF0A04F2EBCCA2467174529C5E1CD9C379F90BDE
98CB15B4BA24624E146098A7CC2A669A0A8E3FC5D4E6634E80132D58328A139B
32C83267C24193319CF38A1BBE0C7FBEA056326E41636E17D938515DF144112F
A950228EFD70BFB209E1B9EDCF0D3DD6C9E029FFBD6E3C668B0368241FB6E214
8252F67A3160A9B66A24C5E3561BDFF89136385827B7980C2FE0ACB1C0351294
9012E5C307F7C8B4778CD3F19AC7CD4C92632D8B80A9FF115235BB3354BCDEFD
91004F3E926B74236B0D42E4C62B2ECAE693F327D25D98C9AD193F94381CC6BC
942CB497E519444446F0E2F2A2CFF9963C615AAD654F4615C381514C1E1BDF36
283AAFF8AD785A49E09115E4B96BF9A69D0DA22D0C87E46ED1BE94E17E5C4E55
92C5E49BDF168EAB3B30CD4F93304E9E0DB55DD4D849774AEA55032F07DB4C25
C0D1E15E3395B062B933EB55FE9D820F45B5B14743D409366D9B06578A1C23B4
8A90E6322A2BEAD105A169AC099700E454C9B0FAAF6F2A73D30E8F58440D8219
4CDB01A2CFC41133C69AD75946DBFCCC41CED07ED01BFADF46DA47A77998C831
CEA17602DF6C9369CA824B117CD99334626049A9AD892D4D317648B5B437A05F
4A962CF1C22D83316A517000F1073FEBDBBC6E54CC5BB12B55DEA6146132B1D5
3711E04B2AB642A4DF94E347FB8DAC6DA26FC539A5EE413D110C7CE131F7FC70
AE3BCB45BC30D0D436D55FF3C58D6214F92DFBEB710312D4A2C7E72DF6C73B10
C830B271D569EA378E4EA9C7D992EA95E5ECE5A08EDA89E423CB286B1721B357
D8D51AC9DE1E9043D7770D37CBE71F22AB20883A8D5D9620DEA594A44CAACB56
2DF442C261AAB16B9DF176051ABB7C78512D6F34A84B9DB9FAED1AC5F13D51C8
94D53C87D1C2D3C5D7EFFCD4773E5CDB4999323D8B4FF8129A8EEC3900A00CCB
026E694CD024A1268D6E761CF9B883207F1478ABCD112D3ACD5C7BC5DE68A091
232BBA1C539D46CBE0420DE457EE415AF44716F41B02982895820AB47D0BEB5D
5BBE6577DA78CA2D3BB5B470642E3F575F4CA3B9DA9E2DC2EFF49CBA805CE47C
78E253AB62BB381907EE377CB8DBD44016C1616B102FFFDB880385A86AFABBDD
E56F3C934CDBCC46C9FDC21CC470A32CFCF7AC318CDE98739B360390E9AA0158
45FFEB9BE81630C673E4900ACD628933083F0AFF42C7E696E7A4903B769EBBC8
CD538DD33D193BD3ECFBA76E494EA09A3C18863494799AB90F0B0FF8A490CE80
9A9D3D0EDA0F4F7211B5B5CC0A348F325F3E455317804962CC9C4DAFB2FEAADC
8A76E374DBD1AA2E2F1D141998A607C557462D5D23EA6F98133850F7FD4B4BC9
1834BAA8844B267B7610A6D157EA3ADA7CF63EAE1CDEBED536792D1F6C9752E7
356EEA8FB8E036E4E671E52588E61B895A935A1CB7E6B2B198EB6F00A9B4C5CB
1FDE6F0A58148AC1B7A39CBBE3E75DA003115C7416C29A27BE584CFCA0A79FDB
522AD75EBABA754AEB972F9E84370EBF7DE6BB7167FA243BFB37AE424572A24E
FC245742B43A424313F52B3921E48CBD1046A9F5D5BC258A8D370AFB3BFF5060
A568184DF72CCD4FD69BE2E638D1B9CA04603AB886986DEA740D744963AE53A1
B8DCD067A4C16051CC903ADD50592B708EB41E3E01F5978AA3DD52017F46146A
6B890F72473F24F37CDE6ED8050A9C99E9CEA178E378E98CFA10A67EC1382813
E02E7D39EBA812C50D0C5844BFB889F83B3CAD005996A6309A63BEBA0FE32D74
A68B42A5A3217EE0DAD89D3DFC2D420C6A12D63EE1C7BC77523610F60AA52F89
3F9E9B333CB7FEE6396B67738A52D72ABAA16537D2D880772F06DA0359EA4595
17CD014EACC8F587351A0F3247039946C764BD2088A3EF04FC28B9ED09B49109
257898F180D2EF55235972753696684CF01FB0F15F7D3786FE1AF77CE0C06AE1
8F8C86E08E6F228943095A0250411E81644F995A049EEEB89040B64101A88340
48C2F40563527AC4DB5221EEF1861888DBFB36D7A0CB39AA651AAF1C7B11A873
94AAF56895550455FC3569911E100A036EF590EE09FFD84314D9394906979272
74A732813A49A473EDB7E9886B6C45605686AB1FEC60D8B24E2EC871793C301E
1FDAC3E5BADFAB970BD28AB23412E7634D9B961E4D5E2928FCD08612B8EF55CA
E39AA9386736476F5C0BD3D01ACFCABB35BD346AEE148762EA604562763A7C1D
2F668E5AB234D6994EE5E5319532C303C68553C91CE83431F239BE883C519B66
902BEFD83E5C0CF4C2A2212001F3EF1EFE302F694C57F9EE506B23D781375EB5
AA3EEA89CEA29065AA87E8BC2412E960D91B6BF3715E88D977CC25DD7A119778
2339632E3082DD7583FE4BC0A3A30649486C002BFB9868A861556397053840C0
109C325E5820D3C9EF826C2CABEAD674B8113DE184E683D203AE0DA141A1BEA4
E6E3E778D94FF9594F94E973E95CD7826754E0C9F973B650EA44742CEE4ABA36
33A9BB597D6161CBB2BEDFDF7850C36FA9A15155FFF7E50BBAE6E3FF6AA5E6FD
B6827637A807B05D5AD7808EFA961ACF185DC1E322EE3406C35EF72B2D389F3E
B31CF95ECE64E3EAF374CA86C2B19CB2EA558E81289CBA896005A03A60D80350
D0A2B5882D1F9385E5997E141ABB51FD142CE886041138CD2BF364DEA37A0B88
C83A0CA3AA46BDC9F862077D74D8C7DCD2F7AF69260D68B2655D7841443F41E6
1DB63DD51641589F8C4D483C3A0CC1CFCF4A01F9BEFA8EB263C089CE1074CBB4
691D8007A8F05175C4C7856349A8B2410135D41EDCC6BAAB092BC46D3D72DBF4
A0960790485372B2196513778821F58EC322B1D86E58CE46F9982113791C051A
E66BBE0DE25CB10C52A339D233EF1B895D0C0C9F53EE1A150A2A18B1EF60A4D0
42BB742B4C08754D9F00C2C9FA05DB7E05182EAB8A2552D56AA3C47CCD8C1D6E
639E70232714538354E3EEA58F730A0094DEDDDC4A1867AE24162275C8E8D4AD
F7A319E9EAC6238093C798878E5D5263C936C0C4403C71A36FEECBB23E7D2774
D28AA4C902E3F53C13595EFAE7BFE2FBE6DE800B015E80DB2C9CEAC376E4D394
658B9062D5824C3AF67D0CCE1A4F498B5CD76EBE5F80E23A8F5206C817E75FD1
2153EF75A00DC20A7074710C0678EEF70A0C57A8D87EFAFB4289EC577977B162
BE062ED1027C7D902A23E18DC9412FC4A75203F4154BC4409B9A97CCAB9DA5C7
6148888F30AE04C7EC3CEC7A2FD4E789818F8474AC309F07010EB0E6EEFF2402
BCE303F8B56D1161CAF14DC202B636DB484CCA84025DBB3AB1B045CF5A585471
FD2528CB9881A8D662574A06EF2A8FDF0E16BA13E4A36F92147E38CD27171877
7D798F61D57DE5ACECFAE9F3CD33E155543275D8C75FF859EADECD1E30A6E774
696C251F318AC1D9EF5FB1F77988E4D0B850C5F5505B61D785C6568FD459FA6A
B02F11F4FFC9B2A2F85ECF808E3F4F73415A620F8F1D9563FF43F14E15521D25
E3923F0EED07FDB1FBF66D0C4D01ED0A35D5F26E8EBC016257E8F4D3BDBF3850
A455A4BF84751E6F52081FBA3E79CE29FCA5C502B38C86D8D507A983E83F11D2
8E9670AE565FF9CA7C5AD3F494E59E191ACA2E0038D281FC1CAE2F2C0EFB48D5
4F40616650B24D2C5F17F8DAC250A102E7404CA135B33DD66F8FF40D1F51731A
388C23E494DEC64AD151AD39923670FF40FFA2FBADF47D149B38A0D7E4E4342C
FDD22C780278D973CD0E23D43DE91F9D0922CBE43CB5782E34609B04176ACBEC
A7F01BF86BB79C1B3767BEC03FBA3D25718E8DE11CF06F0FCB3CB63E55734B67
3E53DF4FA4F2D087E6F860C9F5A86F55FF0EC9BF7AB97E7B9F607188F0F6601C
02A3888BC7A54BD90BBD4607A28B0F49CADB5F47D4C2F061746B6AEEC9D5B0D1
C9641E59CE041594E0396A0BE07F0F7C26DAA8165842A4DDD43FC3AB8DADBB4D
53C5B9D05CA8D1E0553E0BE93F884A17BBB0741AC2E477F3CABDE72D984CC099
AE441600E6BF37693F7C1360DD9CD89D5C41387F50C5E0F59E80EF4B772AFD59
D0135EE293C9193C7384EAE2BBF38828EBED58AAA2B1C95D822B184883CAA283
448C7FF5400BFA745C859192C2623460AD1D2FC1102395BF4918D09A32C2F2ED
1D80E2B3180AE67E59F287E83C08AD158AE3AC0636BFC3614812566AA6D38A5A
6DC2AE4C627276365855F11CBBA6D747BFCF40B9AAF70B7ADBB35E0F1641F668
817E64481B4479C73CB53170F9A37D5032501CA2C904FD0300ECCAD06E7BD98E
C9121BDB9CED994238C39531CDDC197EAC2414615BEC27039B0EFA4F3DBBA7D5
0C464E3F297A0F2C1AC23EBDD5FF4F0ECBF3CF7E895CEA8918A69EE67899BFA6
B7CEDBECDFB1034D0314F44164667B8993158E72300A286ADF410396D179DA4C
1E7F5C7BE4EFF59D55B381ED854D2D5294EBE1BDF98378FC18DFE2E7D56C8407
1892EFFF4DF174AB871C254B8E7CD77058113B702B2C13F3474071EC6E8B4CA9
21C1AAFC0EC3E24C38BF6D64E9C25F41219473F3E526DCE9D1B2A6BD6C83FD29
51E67E0D988DEFFF2AB13218F2B69738A10C83C684E472DF545D20698C627F19
006CC52D9E451DC21450FD3DBB18715AF5F3C0BD0689656726A6B409C00F8542
6E37C3B5EE1F61EF45174E506C85470436B32F03940C14DF57CDB611341A834B
40EB00EC544A2B7421DBDDE68976BE50D33C4665405221B68BFBF3F265B1D1A1
146A91079B753C8F065B780E0DBF8060AEAD5106824D748D9C085BAC95E03114
C667D630F8DAE7E913B670E14D8737D0FAD3B909E0D017AB2A3A44B1EB69C07B
CBE3A853130C1166EE98EFF86C7942D643E7118C6FB8485C3B49DF8D5CB26E31
B47DEEB170469C3378D351024653D623663F0C3CE8A5928FF7B8CCCB4C1E7696
D16531A5EED36C30AA15C66D513D52A72EF30480BD30F59B2EBA3B7CFAA89CE0
1362BF3EAB1341AD3BB645B0D7F97ACB233FFA576119456D0837B9356F66B6CB
DFE9D437F55F17C33AB41E835231B63793BAF2FABE7C94EDB0AA8E432CC2BDE4
7A570DB69E75F0FE9CE3B835B252BED0466F2140FF19F5A2C3548F07FD4A2705
670B0125D81F85A311CDB0F956218DA377A0CCF6C7C7E6111B92133CC1490D70
C0E83B6D78E41EFA818ED60E3AF7B679228139BF6DA9A74948C3504D1DE1D938
16DF7E935CF4233C2614BB02993C18F5228D9DFB4C6F195B123171A69B2D4261
81910E8EA5EBF6D1D51B4E6426D134C1090F8CBFBE01DB40AF670FDC930ACDB3
995DABEE0776B1A98FC2D040C14DD87114A9B084D5523EC5022CE64D636D0BDE
F9A08A4AFA85AB3502A38C6DAF3F5133233547EEDE16EAAC1024DFA2E161FB63
63A46DCC9E85F457C3BE45855AE42BDF4F94B532008D9950F16C91C246AE56ED
EBE0AA30E152B61FA64E517F6DF7C31C18CE9F5847975BD9580DBADFF18A0B3F
8ED37211CA3B2BEFCA6E17741DF67FAE0F0348D3C3EA3B0358DB387BDDFC8B9F
C564104A12E66ED0144D9BC80EFF6BD252A802C65011720B337658E1F16E079E
663932EA10A6272AF28647D31AC19E694472A215D2F495D9F2B2AB0BD8965E56
8474C617900CEFCFD0FFA610B1CCA391BDE311D093D4B9AF0E06F023949A1328
1482B8E6E927C92E7912748E3893178EBCAE7F5E1C2AF64EDD2073883EF8D20D
C8451E14281069DEFC52198F984DB16C7147B64F3C4BDC963EB1AFD6F14F0C14
6E0F13B03E76B3898FC04551CF1F2FFDC112185C677798333A695D5AB39E06F1
6DE59C9B85F02AB573DF6352E12A2CB9940DC6832D8B9BF5545EF380958DB049
BFF3E0257C0292C8A10A97B406F7FEE6A373F4674AD17C39E1F2030FC5F4F3B9
9DF55DBEF081A0222207E864C7F39773638E3BD2FDDA146B6343B94E33878035
A0109F73B9E8EB51C53056C2DB7F14D518A5849CB4888A353080A6446C0D86A6
F09F1869737C58E5E0A5E1340670398319FEA4E9FF01B22C0E33DBC54AD16660
90276C020D0983979A82009507CA1C4FCFBF509848CA84C2B35ECC10DE1D4A06
3CE605C92752E476CBA0CDC05E45D59FF354E4F8EF78E7E551F5BE888EB7B653
D90E146B6AAA318E165C8353C9CC1F09212E1B4D1C97A638B4620E485A996CC8
4306CDD2D6B4B0597316645FFDB0B1EEC921620E668D20A9C04B43955EEBCD78
ADBBD5E0735B99A6E94EC375C735028B31B846B79A48122FAB8D553CA6B822A3
848DB1C2BFD00F844046F8F0D83E93BF9A9108594816480C7CF84A535127E4D2
C0A6D3663AFF2DE36A2249BFD2DF460161D3EA5C1FD4897E2A999F4ADD8CB19C
27CA6B1929BCF6F52BAD56841BA5E35267223F46AB148E74D8D1B986B2EBAE55
0145EA55B1236A7E230F3F2F59283A035DD6FF0C002B607A85AEABFBF6919D7F
FD1E7D0B2FA582811CDA7DEB03DCA82FFDEF81158A47BD89E38372CE2D82290B
D895D386BC6D376C4643295F769C4B52529A054F6B673D04BEECFB2FB3961986
0EA3A268C57A3689F66F0216EC6995BC70F5C40F7C7768A67B861D5FC2887F16
35AACF27865608CBBF11C6D4E691AA899C9E6F9ABE2E2757402F91364C1BDC85
3394CF665F741994F2FD6C49F144628D0AE471937528F717EE2E59FD9E50F709
0C17AA2EB223C4124D65048F2AE84F226220DFBA0FBA985D136415D0F3006445
3AB36E6E325AEDAC9D82657F8ED07C3F4BAB11621EE57F309B52576A9C1FFAC9
77C255DB6E47E385AA2F13DE8A3B5D229A41A206226DA21B6B0E1805B357838F
8936BD2F492AAFE1C957383C991714D5A5640E7761A05ED2C00F79A4F0E84F0F
996562DA5BB51608D3FEC3CCEECCB420B5C9593B11A499EB2A59858783B57BCE
2FB25797CA4E8F53CB33BF9AB3CDF2BB2117BCBFDB3F880D64A1B412502AA76A
C1FBE852B7993E98FE31DC936A3D2DD9B83DD0B7A87B7A5AE8C2682A0101A6FB
C1F58A245DE6FB153E5941561360B0D964ECFE23A3DF7E176963845E81340677
8E1EC1CC156EFF2B00A8E110131023F1EA93F6BBCE936738F594EC4DFD7D5A3E
8857CABBD9401D34E6FF73120542EA25681E01597C9A8068828C25D092DBA2DD
7079F8F2368FD8D8279CD98C44DB6835A815C75F0E3BD78A7D4D948933F88524
592F028366D84A4734580E4E1F22551AEE8318E6DDB981C45E1373232A423FE3
3E4F0549473B1E0C6CFE144177013B090E0627BFF6C797DF577C4FA8DF712519
3E2ABFC8962C81205D94636C1228B9B2F296281350C23CEE1D869C4B89505E0E
7E002B5FCDC1B9E7775D3F365C784524E0BB5EC02D6E9AF0DD777666B14EB7C8
0CEE58DB653AF6DEBC59DD9C9E4971173E8A833359F48570AFB66310F41FD958
2DBDE6B0BF9E20989C124A54C79C77032B8514408528B53F820FF4AD60D7D76F
9EA312D1914C5ED5658999118F4D24DB213C6EBAE3BEFC59CCC2DCDABF2AE3B0
DF0C1AC632B88DDEA6D3A49A83886DB260065E423B426EFCA123CEA2E2D4AE26
385ABF6CC82A01F18E577035FF3499525963658B21DA28065552A4F097704520
1E64134B66CF5DAD8B3F993452076B780AA2A76F0A3ED017964386858DCB84EA
A176025BA9473610A41FA2317A4C2D8A8D126076E07BD57CB4183CEF5551382B
0CDF58AD19805C29081BFA0F2BE6C6C1B18A3183ABAE5355A146D8BD21F9CC5A
51F4D95AA1618380D5DD66986E77AC8BDFCAD1CCFE7FA13BFEFF0A5980FBAE2F
E3B3F62F20BF5C8B358C25C8B06B4FDF37FC4C6C7ED97BD15B1763422CB08BD6
19327F081595235F72C7CC477CD7942D236E72EE4EB185B8AA268D00B35AC896
44588FB8BCA8074A36098AC5875B20E2CECCDCBBDDD028E973830BDDE3DE50E1
E75F77033A07E9A06D683510CEA1CD89A67BCA5F06C89F736CCF7F52E0584157
78334C75C7ADDF2B56C066ACE3C2C36F6DA0468D5C98B4E9C99FE1B4DE04B482
145F30E141CC54A74F4E5D1F69A9FA4867386F2284702C5F62A8157926694EC4
8CB03CF1EACFD31FEE3C7AFFFF0C541EE63B50C20B037EB4C97E392E3127F872
68BA4425901D20569A5283A557A996D0EA15A6C8815A66967B759ADA14175200
8793259254CC4305A9CC69EAFAD7F08E1C60E0E20578FA29D7DD7738DED4233A
873C4213DB20C4F861E7D5122137BD1B6EE530E332A19BF10FAB381D6455C443
5C59250E09A0722970B560097CA8B45C55E1B63C73DA3CD7FF6637D1F434B962
F404DB3C6BC318EF5C19DC12E48CE6DC87C20244698BB756D8D9BA458A0FE34D
5B6798FC4EF75EA4F294EA8496D032ABCB2D781099283C0BFEABF563ECB5AF94
AE88F4A6FE4FE745496C19A58118616703E6A2A1E2F8AD42029FFE31D7C09F9B
7814A08AF61B53AFA57A14B7F2D4815E0733979B9FE7F89C8CD4C19085122B8D
39BD7F62CFF8703071D204F985262FE2C8B6D05AA6861E3ABED84D6761ACEDE7
77F2D951C6BBCE0055AF1446D3C9A163230C5D3A4A94455AE9FBD5C07EC33F36
A5E3BE297EFDF302D8E8D5CED44812C374ABE1BD29285BEA0FFF15CE9237244C
917A134DAD8B2ED844262D01ACFE1A26E6C7F496EF2D2E5A6DE680D60747DB27
91AB32CABC3FAFA58B5089FD5B584A49FBE314B46911D35870C88509B392E1B9
31F0E402CF17AD8464FEEB7FBD3285F689A85B864F9D252EAF5F5E73E95F811A
B92B0F5D9DC9D0A91B93ED65003BD0C4D66083986511B1C7B596DBB8AF64EC15
A553C2BBCBC65EF99AF5B9D8DB1A156E9D24622012A917870AB47B59755CCF83
423BC0B3D05BCF9C2F8EA64AC3C5F7CE2DD08FA2EE66D597EF920655B93EBBAE
2BBD038F21047D0019EC2818BB6B4B657DE23503184AC5C0E91046F1B4E859D8
47A73A2C644ABABB47914DF3ED2C719753BB1EED9C43553C4C2ADFD136C9E8F6
39578E3B974ED774D294117381AAF114CCDE315F343DDEA6038019EDAA717B0E
98E206C32CF674AD069BF095AAB105031EB554B4671B21AD8360A7902BF34162
44A9CF6F79AE4A0AA23D461E0D54E9E55963C9AB78CC95F460DA768CDD807B3C
E00CC0DF44975CE42B1CED9A235B22A3313F04FBD1E6B2429DCC30644D03B6F3
2D4A0BAAC1CA5DA672C8AD9833E6874C8C9926B598D1AB782C8AA31D728E73E9
59BF9E9D11D455B382C5FABA38310E10B40F25D04F499AED675F8147A63CBFDE
55735B69E90C655A106E9C5B49F292E4F51B2C8B44590DE1C65E7C2EE7BB822B
A3F431E2D477B420AAB260B23C55165BF92CEEE2763F1D69A6D790E9C765F155
0D9E7D188EC0FA8C00F8E632BE6F0F2135C6DEAAFA1B8CDD691EB92D2A43F150
8955B56F11725A793AD74DB92FF1AB8CAD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC8B64E3DB194682A30A31E9D23ADA7D5C0259E2410A72
D9504CAEF21597965D669100E95B8C450A3845A54352DFA15984693F8721BE6B
C8436111546A70C5B35A2390E5D3C43E8295CF922FF601D611725D0D5D9EB2DE
CAE11F3A66BA22F94DE028A8861FBCE564DCF89B36A5F1C621F0088A5E41311E
9B82067883EDC8BCDDDFCB6A87C2BCF37B79B1F65339265C3BDC27CD99AC7D74
8CF26DF4B25B62F3A47B378A341378AB1E9AAA88112469298B36645A69B98423
DDA04A18DF5410EEECE859A081B2D1D4CEB9E40FFAC6BD2F8303F58AD7686B3B
2D3EFDA6667CFD49D2238D55D45C48100D476045270887C0AC4B0630AAD1FC0B
5E43AC491292ED829A2DF9D4F2669AF6310773829A90024806F5F20E5C30D804
C575A65416FE521B9FFF6FB1005422A031002633BB99116B1BE6FE34DA153504
03110D8A03FF32442C84B244388B0BD94226009EA88C191854FC5CE6CFD0099B
972EC5B389955A931A37C06AD33548F4F4AC18875A81F96A4EC47EA032C6BEEF
9F2E6565A00712528A21DE52410D6C61ECC8A1D14AF4EE6231EF8E5A18B1268E
6D91618BBFE3A012DD55766158491BA3986F32737A8E449558E8DC37A388CB23
8097F19762C6B86B5F0613E05337A494D07BA55B862FA686BDC07699D2FD58F6
27B164A6E78915E04123DDC9E79640EEFC4B15829DE5C3A95026A7E7ED341ED1
A9D62C8242955EE5A15A4D38AFF4B271654E3CD006E638D5F79E298D44DCBFAC
CA3010EF913F89FE8C0753F4A4A8E408604369101BD16DB8A70A7E46F92001D6
155040E8E0A478831E6A602104412F850A481EB7583927289EA1C3C455D8E7D7
F6695055586AD4366A75DE9B759595A0D8720FAEE6EB640B8F454653B262CABB
7455F9E07E0D00E38A7A2FF7E623808F4B3E81F4EB1ADA526F99362C7693B01E
7ECF132C62BDF74FFF6DE4D853093DA735DB67694569E8A3115B94FFCF389800
0BE2E075BA5DC715D0339BC3114723F4B3A4AC7E0AFEAC9181A6C434512F6A54
4CCFF36F8AE8997662534F40CFC7F7F2350C62A192333E15418156EEEF941409
B57379F9EE2FB8BB0F7FB76EEE6EF9377B635C2253C08645F0BE1E25404BF813
1379A0572664826CCDFB4EABC3F5E23ED8FC3533439C9F3CCEC4D677DD9FBFC8
95A2FC37898931CF623A145B194EC3E9F13004B971C52512BA9B938EFA37613F
D431B2281DCA0D667850719925097D49B0A6C7268E399C6C68B6ACC0D1E9F5B2
931BAF9EEEA6ED985835323E85D72C6A607AD4DC0831B73010D27F837C574D31
15189FEDC651186F696FBDE158A74986B2DDF8339DA08B9E2D2478FE6D863AB2
A2F8112B547B7FFE2553EA5700C24E63A501955E225DDF12DD8F58E4415BBDCF
0CA00FCA0F6AAFA1B65B385D52F0922E1FC1598B0B3B190D6AE2803A4E6F3134
B1FC97FFC17A86411CBDC3AB91FEDA29155D93CDC05BC028AD2E33B13EAEAC60
2BAD4120D5F557B2AAEACE24CB09CE03C37F212ED76887E3E37EE99CF89768FA
78FA49967A8462E83B39053C61A55ED1A1283A3568C018CE5781D661536A7E2D
F9DCCE70C2236AD80736EC85C8206E706AC0226FD6C4026C66F8DD49C33FC4EB
55E9C94F753E6083A9639E040DBB39035D492C51C62C6171747C3AFEF456DE75
2536FABF2D5F6F2C8409813B06AA8BC4BA2100DCA852D2B3DDF2C5B31F446BC3
E06E5539B72C2DE9ACB662629D2EF940C995F81A09C8297A63688BC536154C85
9414A43E959DF45F47FE6BBD8E9ECDBB9C0B50BD7A0E90676C32BA0CDDC837B2
BB56682113F67EB43C54E85AC8C276F79EDE7A845A6EA163ACC0C7BEFA96B0C2
9106D57FA2A4AE097CE6460302BDDDE8C742FB32C76DEE0FF109ED9DDD42E823
AC30BA1094B09F8CD89599CC6D1A4F1FF7F63C06AF696F3F6EAD41BF08FD317E
B16736BD65C74A95B3C8AB4A04C462DEE4E2EA75DA8DEC6765778823D39AD13C
206ACFFF33F2EB3AAFC2C036EA6835F75309CDC676564F49A06F1C90B9635844
93E1EC091DA35795460B19CFA88B9599532C43F5D2C1DC5EDD1038A7B67B5194
4765DA1449791765B7C1050EBACC5B331AF143882C0E9BD33EF06132190F6E68
B0D5DE50C3C1A0109A3C89A2E1993E053CF7305473F5758CD5CBC9C911F48A37
F8DE6C19913762999A29FDB7D4C5F4E9FEE72E732F5AC4BBFE1EC750FE32C907
BEB7F571CA9591F7642625123F0BD565B031E97CEEB465EF29B00C5512D3E932
FE22DA07A20094942ED0861713860F1D6FD6B9FAF02A52D9B8A6AF5ACA39B463
9CEB9FB8D621C435F5E314943963DDE1682ECCAD43C28E304F04B38D7964541D
CB9DAD90368B31AB3110CBFC01E6C9A3B3E32526B253AD2A36767EFF527D1D3E
4BE19749EB54295CFCE4E023BD369025D1414FD2BCC1873DF5F4227658DF8945
5917A624FBBC1B52CA4A2A98FFE521893C498F1D487C71D720272264D0251F32
0D6D3C7904A885EC8FFDB1C8B767542766C71FBA88F73D8965B7A96F42745FA8
0C3DB9BBA3B6BA34196A2AE022202AD0E3E3AB545A7DA3DE2A5653288E76C12C
EBF010F7060D80191A67D032802107062722812180538372932A187BF0338F7B
C8D338AF07489324C320A5781FA781E9F3D2F96DBC27F00B640D700FAA4B3D43
678BB65736000614AC87B36CBDC850F2BD5758C11DC1E654A6A217FBAF70D383
73D9085D399624D9BDABADC859519B1B8E3FCCD0B1084EA97D92603C67E9C0D7
57056E1838D1FA64AC239AD1D369851DC338D6971D031635A8A9866D65F9C294
82FD318837F2EC64BE3BC9F8F2E1EF7BFDF044CE577A752C4FA096002F5C5102
FA301F20E25F2759C618AFDB1587B91CCDB9EE59B9EBD1D03F548F9EB1594229
2F814DB92812D9F3FFC5382B7497507B8C00410108BD66F4D585636AFA46D71F
AD0EB50E4CDDD989195779DB526DD1FB024DE6E45A99BCEF3C3E5B911C9CD093
DB8F67FF85B40C0EE0F5AACB1333A8465BEC663CF329D04BFE8A0FA1EBF2B0E0
ABBE9725C6E882794BDF33673BFA4AF6D2A6C0F23166D20F16F4035428C0EF58
AD00F1FAB4D581C7D3C90AD8B37A0954F79AC1BE3A7BF50AF336E719F24AA81C
8EDA10059AD314A401819761721573F3D259EA42975B340FEDD6AD95CA01ED6B
DF536BCB9063FAC26DFC51B56A4AF02944CE0DE7CEBAFBD6D49ADBD7F1E656AE
E60D32734C74951556B8473B8E9464BAF9FF4C5CA2213D68B7DAC4AA2DD275C0
A4CD4F7DEBAD1D7CC77A3FCB9C538D8C1359D1FA32D4B61FF4F73D6ABF532B1E
E4B4CDB4080B3C1143A3A176E3AA0406D216A9342117A5280FD0F3A8AF6CE7B9
74DFB079E59771FAACCC1460245C6868192952FA7C0BCCB81F55E25543434BA5
8A3706EE6591D32D9DD8D4C062279F37B382870A3C8B16B2DC1B87EDD4A4CC4A
6012594C814449B7FECB3F90FB224CF705A2E76DDAA7AFCECC28B8D8A8FA9631
E929D605531CFE87A0FDB23110820744BD6190F8D9D5E2333C65F1EADB7938C2
5C7436D4ADAD91BED1C31BAA70973A57840777F459673312567CA3EDB59A0C43
084162782304498A017A936CD24BAA9EFE6913A6C6071C2DEF0B02D458214771
10600F0FB6B22963BB6C7B72EB7E72E7FD487B8DB3E4687A601BDCF84562F771
EDDD98258EE7D5CE04C6F7CCEE0B395A5385B3D0E77D18747223C5823BB0D274
36CFBC528238FFE4BEFD400EE1A2B127799F2000C65DC838123CB0046F3B323C
2AFFBB3EAFF8AAA8DBBF904BB78E5B7C6ABAFF6C335902D89F2C1AF16E6F63B9
73E4DE16BD607E8AEAFD49B433FCE838097C54F063F3943E743371BB773976AD
E281E27E35776A8F8BB948A9815134876603BBEAE48FD643729BB9D5D2EC6872
DF7332FEFC757881CC51376B6A46AF63392BC49A999296420D8BEBB2889B7D64
98A0F0C35555E76A8B9D39AE1384B5C6D8CCE1CB4CC5F2E70054032ADDD92D09
6D12DBE0C93751BAB9D83AD7FDF50198525DBBEDF39B71F51B747615789953D6
BCD47E4AE40616A79C668A315BC035916BB9D79776110BEB69D743FB1DFC68AD
50BF2BDD858328B1C4E35FAEAA45152EF6F535F974A05795D4370BD0953E4126
D4C392C346A1D00DE6F94B4C60D059F2F1B9C660292A4FEEFBDEACBFBE8DFEC6
7F608E1CB0FF8D8F9E362E0AEEFC25C876B8A3A37220D09A345A85F90AE48DB4
3F2FC97B4E5B5A2811EA3A323AF4E3A1AB08A5CA5055FA97CEC2F5B351ABDAD6
5E2B0F6FA1820EFA59A8E0FE9FFC976BC3BA703FCCDA18DAA4486178524EFE2D
C3A9884ADF8F7040CC618E6828B80437EE0154353FCDD600B5AF4696FB8F8AC9
E6448551C017060E4C1B5F1B7609219876A0722C6A25BE0E7D2ADA147737C3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC660D7704664695A83680221C6397E36FED57827D0CEC45CCE9134E1
20F85C107CE5E670014BCD3D09417B18667B975BF873F4BEA9022072655ECB43
9ACF13725A79EF90AD4FB0073FF142CFAF4290F2BEFCDF56CE9AD3AB8669A691
21B16C33CD949DC6E4C614B2D1A0ED127FEDDC4387DDB2E10EF3FA3985EDC86B
243368F8CA936A6B93DE729493EDC6FFEE039CDB833C0CA3B0223A63BA100BB2
B4714AB955DA07C374F097906ACD908F1A8355BD40273AB986F80E6021E31427
AEF512224950615DA2039D4EB3B18C87BC21D80345EDB06493E9849967F12E63
19295F104EFA71C12917DFE9B08B5473DD51A322ADB72FBD8794B3F51A1EA076
A789F59B3D595DD347079EA1554A4608FE9440AAC9F04CC93440E1A8B0ACC1DC
ADB778837360339F16EBBF5AC7571B0778C0E9D25358DA06B20DDF35F40C2314
035F52C165A49120D5332A136461B27E1D641B91CA52CB6583FA4C6F64BD28EC
6F839F95D74E2FACD9500D776DBF675838C2E27A9A1C75D9786FB52F7B15A017
61AF688C996E2561756B8F923AE34B82BCFDE515AAA95D76089B8C6D8CBF4863
3095FC397712BF000B4F2852F1C52ED15534409086E06FD6BC39007057B13EBC
E5D8E8EB108C21F7A32F8D0DE181A612268EF75CF1AA6A436B3DF24E7DC6ADB9
39B89E2924D0A92FCDC2AEE877BDC9CC108A18629F0D64BA727A5BC21B42B5F4
1E8F864AC5FCD0977D31EFCD46CFD2F60DFBD4B1B7E0041EF68AB5AF9B946FF9
36607E3512ECF70AC43BB1D4751F57512749F002E1148BF99DA5CA7EDBB00B60
E26CAD17086C48CEA3FF695D5E829EE6473F0C657F7655A674B43152DEC8B2E9
36E490A4D367D68214B348BA51DF871A83CECEDDA1F3DA646B38272829C49B77
DA56D8C3459AEF9356949ED2BC8CA8085F829B9F9E0B4E360140E2EF8AE58083
EC6DA4E70BE9D053F69949A8E464ED478A8E037FB132781E4D3BA60B95605DA5
5C67C5F6EF7AE2049EA3D2EEE67F2FFC49FDB8B4BF1A5B55899A71BFFBC96D20
CF2025F12147C5C8D5E39937B03356D453D819AB0EECCFE7DA6DEB238A87FDC4
1A647D79A3E56C4B5AB6B245E707523349225E6B8EB758ECEDE8173B87B4AA14
71C5FA50EF20ECB3E3080FC6D8B395542D5E464EAD1953BF60A81E14EE323080
F4DBF77A197944E1DCF0738600BFFAE3E467BEA9BBE6258A20D9E32E17451282
4E1ED5C40D3C40923DA150C493699F0E68263CC98B61749221081D1C75F39CBF
B348CC853CECFF1489C53CEBE1A6915BA90065A1A95764E697057F013763621B
17F36B310B47B715FAAF668FB7F142A6C7682F1CA89CECD0A14CE3BFFCCAF634
AE7A1DD365AB9D3569F5A96C3FD32EB201189D07FC46F41CD2FB9B1BBE515CE2
23213D98659912424520237D41AD0A00728D89D92DEEF30B110E58570A966383
AA9F7CE59375525369CA6A559BEF0CA0B802D43F883E1C794B9D3EE9AF8A5CD1
0A347EC4A862A6F0B3867EDE0A050EF258A7F49F5081F1FE098F53AC01525217
1C713B12582F6D29ADDB80A225B11738EB3D1BA708653BEC6F7AC682EFC32633
1F40C5E8FF16D3AB8647D6542B4C6CD77F4469A676906BA6AC776BDA43E4B128
3ADC30DB82832166A9202C67C70817F41B505FA0B5F906C537EFCDEE4C69AFFE
F891072A4BF938AF76A97EDD40B7F6F9D15E91CCF9B8B2DD85257EB6A2C747CF
7113878FC1B094729613788FD31ADEFC852D2E598734CDCCCFD8C05DDC3040E3
87C62F0DBAA9DC2F6628F61497ADF417AABEAD37062A126B997B7696988A9F2B
3AC897A10789DA53D2DF6BC8441AA916C8F02240634E21A4E79A7C8F9062C2AB
821ABC614DA8C5DE3657D1A80350032D19862612D6C80422A4362A89E46F7DC9
1B557A4C8683B5295596D591703D3A1C188354695617AF56DDA1FBC56DBE898C
9AF2FF244463C0DA21C717E348E0BE63120324C3F420649F82D4160A07270010
141602C3A6572740D06F3AE476ADAE3DE5D771C66E86F97387D4AE97D6E59A55
4057B9862A120162EE8B3F4E8DA71604E6933F27729A2C7FD9A30D9E8FFA9D0A
9D090B86A2B91B89AE3479CA9B27527C68B896EDB1FAE22EE3B71C15A10C1971
0517916D0CF980211650F7FD1D657C3164611037449E390AE607F3790491D6FB
BD58617B4FAA8341C4DFBAB734E78912D306347C0DCDEBBF156308BED3E724B1
5646DD2FDEA523D863CBD4EE16455CEA2C0BEC9873A424C98F8E905C9CF80FC7
24E5A519BBD1CFD777EFC9548086229ADAC4953EEEF78155D1AAAF6A197A1B14
F0A5EAAB461B7B4C814D7591163219389B0F4E74CAF6C646E9169D885AF04A62
7278E243314F53B604C87763D8BBACAE4B22606DF4F87EC63BD74CE9504531A6
AF606FEDA8338FEBD91498B806ADEAF525CA1977417B0C7399B006B15704D390
8A4CE41B89961BBB8CB8F66913A9AF650EBB1B131913D29467B7517D809FC549
0B8B4529805E0E448D4568D96F6FF9CD9E58D823E58184669CDAFF2CC298AFE3
98A610ECCC716F622A9652257CA414AFBF1CFC2AE1E6AF5D19D7ACEA02800973
AE1F7D563C43EC5901417F40FEB12D4C3841165C93E441288916FA8622E56DBB
5C5C335F34E93B2EE95EFEBA3F61D35AE7A0CCBE266A5CA609525EA685DF1D3A
FF4BF6EE7D367C652B12B08286D947413E48F70CFA41C190D9CF234520FFE9F9
8963FC566AE808AE20CAAE74590B3DD20E56344AE5BF50A969796BF3E807C04A
3B0CBDA9FF1FCA427B0CCACAE3F78F40E9A45653BBAF2A5DCA560DB5BC07645F
9A00BD4D219AD9426EB21FDF7EF88482CF7D3056AFC17907788ECFD84AC599CF
9C38E918B17E14F876C34FCD483BF1AAD3FAB74C2B69537837A2B70DC0908B60
2471C6FDF28FA577B39003387F79289C663EDF22003A3B3A68A6510AD6BD87E9
BD0F7E93A67159F5E757638511CCDE33AA193D61A35EBA7F7E101843E35DFDF3
E38B88D834A1E8AB45FFE334532FFF6EE351252820E23D09D6DF44958A1F7695
ECE82296DF0D272C713BA3B611AE1EC74744F93ADF8FE08B4C8BDE976D18C8F6
69EFAAA30BAC0D4CC63F2B9EA92EAEE2DAD39F2ED647096CB2E31B4C142F96DA
119C69C5996462FC72D92AC07B10999E189076CCFC5BD40026EE4F33793041E8
3EF250DD5B06922C91F5C99F9CC06418549D42176DEA4E100EA38D3106C65BD3
71F2E48C48712ED6CF7509792BD183F234B7B44B7EE36B8356A8740617776F18
D167F6AD72DE5549AEB22F4E871755911D8FAEA73E35EB7835FA1C6F1D9B85C1
BAC3490528087EC52EFE4DD9EE467FDFB65AB54969DAA10D9AC7B96C817AD352
B5C4397872ED1E0D1D76A275D73F3909D0834B170E2B62BEEDCCA27AFB43FF3C
205F302DB580277A6D0CC1ACDE791164E8F856EA0DC13670D05CAC62BB742CF9
959C79CD89BDCD75208FE637F207CB8F046CC0AD35FCFDDBF7B4B6C2BE6916DC
44F21F89F1FFF83FDB4A95D61ABACA8EE7F72E2267639552716F96B850D6FF61
144F6A9E51CC1B8A86A35082DF48B5D6F83CE3CC63FD1CF93E8926EC03228E7E
DE89D08F383BDDCE027F1E0911D11159D19295A351BA9BBD2952B697CADFA3AD
F5AEECD21C4FBF0540A15D38764882B11BA3CC4B2AFEF64B1CB095E96F9512A2
419CB005FED9768C7E3C3908B4D748B2F1FE882F22297B2A88B1A5E6CF14D303
CEEF0D9E89E6668DF19CE62E5947DF0AC86C2272616F4608272E6143714CBBEF
3B632DD50A68967F061B9FA20CF2EFB32200703EF58C425B9A7D27C91F83A21A
8366EB9C6336F2FFF457422ECEBE6792F29B6E51C66694B87FE408D52ABC831E
DE8F5F1DDDA31A8A1840B0571439E5AF3F9C520E811EDED8DA4E014B8A53FD30
C60447FBB0C3A3A15EDC6C87355C5F7C8F822828F2A221D1347CFF5111DD5411
BEEC726CDA1B74ECC1FCA6F94728E44D6271121286EF517780172D12AE96F19C
3DC694DA7DCA8F8DACF03CB8AAF73775122C66EC7BE487905F6824592D05C21D
B730478CED9292843AEEA151EDA49000C283DAF19CCF88634833F3A62F55D62C
B1847D3AF4311B3C8D1E40676125452BF7A9C73064D98CD41AC0A20438F01846
47BFE927821DE47DC498C33F37E08E83DC57F38CDA9EA0AC1EE47995ABC86947
3768D472C7A3BF075D36CA07189478F1626BD6F367FD211F7195D887A0930654
5DAE42BAA134F0D1D50D98C4B17E2DDA55FA1F1C691B9F6A82EC74B3996022FD
4532F533E8D3350E2C08646BE73DF766E216FCC9E0D3B13991A132643A4AF829
C39DB36BFA67124053D79DB19F848987C5E56B747A7AC47A9D2F4A10FCF32787
186F2650B1FAC1109E908FF95DA4FFB03332174074E4C6D50A751CC6E46D5380
3AAAEE643B85C3086295BC112390A30EEA3648C55D7A0DBFB4B26D2F5FFA5A47
4ED0AB398C5EC9AB4368717A4885929334184ECC0E0D6D2F5AA3C4FD78C4575D
810E7E0506C9F3E9A1CAB183E05EF9F3644BF2530CB119078ABB9829364A2A44
CA18B10CDD9DED32A96DF332C5E4270C9C6A3E495391EF6C45BE6D1FB3F56C8F
84A7A13CCCA4C154E5F91BA5DA79D7AB6BB91A0A6D6FB96ED1A9AC8C22E005A5
D130F81567439AF718D3B7B02416DF5DECABA40236DB500BBC0F9E152C300590
54EE92951E4A202AB40DCC8E7B6F9E6717A6A3E963595AEE2152145DF4603714
3982F32AE0088A4A1D2AD1C11F7606C5484FB0E9D7DC4814ECF573EEBB83E6F9
DE39BD6CC376158231CA2C7747E1917DA885DD96133A5CE1A290DBBFD88AF285
A1838A95DD8AD0DA482FE338FF71E24F3CF5B12570ECC61DD96DAF7DEFFC4B22
1905B483955991F5139776648B7033F0395339E5BEBBF32854DABD181032B0AB
91319ACD545E2159DF11778D9DE2185DF32B47D4836ECC48CCAE1FB7DBBB6ED7
6DBCB408356101D68AD8E42921EA6EC4EF25A13D8A05734B00F0C03E8ECFDAA3
BD67CD0E79370BEDFC209C63DAFFFF861185AF325E7F5EE733F3C2D65261C9D4
9C04819363FBE4497ACDDEFCF6B67A066C20F6F3E491E8148E53097AFBE37E43
06238F06F910C43CFB7809656D574C1887F047E1856DD6F5B16CA72F10CA6258
254297216425EE0D97A4A230BC22989E29BEB0A1977AD4F72A7BE9033255C8AA
5B3C3DFE28AC43FD186B6BABA7FFA77683212C8DC37197CE0615963F33B07FDB
0E07FD50A10CB64487804CA2D3F6744C6E2D6347C8510AC6D67E95F207726537
EBBDAB0EE6EF76418EDA7CC6B8795043E5FB6F899C39BB7E812DF87D9D053A72
A11530B36EB96FB5FCCFB1DE1A03EBA047E0FA256A192BA240D1BC5F95F52E23
43BD627542F3BD4C077811073FB73D34FE110BBDAAE3FEA8513C66F8765090E7
AAE59D8053AE0BA8DB3BCB2AC0468EFB2A9AD233DE4656E4CCC1AC1A5762BE48
F5FA88A00833527E37856C4D35E27563D8F6EA7CCC0E74977CCC886A803074D8
6EFA1D7CCD206638F69FFC139BB72D6009F279C61DC5E6BD7A0BA4E864DA3183
2CE3B416648CBEF82FB111B7E45C34EFDF9A5AEDA4AD3EEA0C6310CEEDF15D90
527700DC510B038AD7F32FF9EC47514E5876F698FC8A458C082BE1ED19871BC4
F4EE0CFB5116452DA71C658F9C1F6BF01E8C05290B07F87D83C4498EB6B35EAC
79A4821E48802F50EAC63D9917C10E24B9304C217D8E4A801ADB04F4C74BE0C7
CA9C36E787862910C4D3D89B810CB98D32B706A177AC31603F49A26F9E5F210E
BE9FBC9B79B94FA86434DE032E531FC86C88467D82474DC328BE96A872391420
BFEC53355E4FCFBAF202BE474F49EF8E6E238795A66FE9C57BB94792E4F1C02B
DE455B254FF1DB585D87D7EC8C6687ED682689A81738CB733E4011E8588ADB63
BDBECC4CD66799E6716DDB31C4EB1B9F39B587A1B492786FE08280D93E247F05
FB893CBE5D859076B5AAE89697E541CA1F6A10254698BE7BE357F70AA574B925
801794EE878C6ED56E0810AE5994B981AE7B6F030E18F7DDF5855770C5FA1D75
5AC45ED908F91532280A19FB38556158A697F44181C189EDDC426F4D950C13B3
1CB7B479C7C202DE58812E489159ACCA2F8A11C5210AABCB55D2BCC77D73BD5D
654BC8C65B809321300215973091137858D0328A0AE63FFDA54A50A5A6674E20
1558AC9CFD3899CF4B5B3387CC896ADF7ABA61FC71A4841BC9EA8A8E7DB76A76
B0EBFF4AD9F19B4C11FB42E6A907DAD902718513E195C2D8EE9DD57456CA8D38
C41F453CF1F228BB2839CD238049BF932E05C2EED82EA1183B102B4387AB3B6D
DE2FB989F9DFBA0CB091D4575F9D4EAA135FC788C37F96A4D367D68214B348BA
51DF871A83CECEDDA1F3DD8D1BDC0FE5F0495F54931E74E8794276F856200CAA
44643AA0799897DC22385D1C16EB13D1F7C524C89B8DEA24887208A31AD62D68
67CE44C3580E050190103C3BAE2754311CB146815717545D5669D0F27E87B218
6D931D624120B81967E58ABF5670E4273F7A28A16A343214089692C8B5C2BD54
2B3D41DBA3F70EFE840959AEF3E34287BE6E17CA0E265ADB2CD55788491201A7
A7E5884507930BD0C12B55EC21B9DAED90E9E86E61B0482F8FF93B7F1799AE4E
4B23467EA45C335F726406002FA2421F5675FED3B4BC777914F71987158AC3EE
99ECBF8E6C60013B38F49C5F4D44346823DA945A7A2C587659A74FE3CF535DD1
901154F701F3FE5003C63355BA19E2A651B9017BC1B8ACC9DC6678342B619A83
453029710375D9F063B335EECF830F146463E99E05BB5D99B413A3A5A7A10D9B
B6EC24FD7B4DE0216C368A3767EE6CA0528232C3E4AA6AEAF8E2CA22AC03C23D
00A5040932A6E6302E20A88BE564866F9BE9798B600F417C96FADF40339E954B
F1E40330D66377325E49F08A25B6B242E36DAAF1DE150D2674F3524274BE26E2
EA0A91866201E08792F03323228B622E3010D333DB5DFCE07CD6B383450430CF
867408666C11C1BF8DDC94D379F8F369B94AC15D805A752AC61DF1ECDE090E83
7FE9933D1A469A390397432293D3349640BD48E8C348B2DAC751345E5AA0E578
5F2E4A9B0F7E4498F6D4E889E82EBDAD23DF0A82CC481E23366DEA5938DB1F75
885D73B282627E9C0B5BA0C811390F96D204D12E122E8DB6FFC8039417D40651
80EB06D6A02FC6828927914D79EF7E0F20E7038C6B3D168F9CD580D7AD66A2DE
7D9CAFBA0562AB6D2AC0A315CE6EB800D16745C5E8F74E77818CEC06549E93F3
92088F2433B0E8C971CB07C66E1B7D10869521223FA6FAF169805580F4EBFF87
B92A0E4040F9F5A61B55881D769E36680ABAEAAD15FCC0DE88213B28CA601D37
EB7B8092C713BB1F90E6BC2574A176C98B41D285610504FD05A975D2C77A9E4B
76689F6FC544FDD4A65861C14ABF87B5792FFE4B43314A58021F36A765FC2EA4
BD68A5B55CBBE35D527F40F2E194844E76B625836C94F281B5E69CEA73FD3469
74FE59355ACB996BAF7CCF8E9071B690155FAB5F94FF12D08902EE97B8CAB0F8
72DDEF7201BD23AA903C3D3F360ABEFB007D46720081C4980181482E40BE1139
A5F3332699713A1D0E26C392220832FB00C6E1AADDCE367964B7B169AA673EB7
82E275EDBFE0CE15CC1DA3BD92FD6CEA20D0649071442B2916EBCE5F4EE1462A
DF6C0B8DC625164B44742676C8A12E7009F4D1BC29B46789BFD576826B14E2D5
5D8A414957F08FEBEAF8E47BB3A026D50C7A88DF5F480147D87DFEFE463F7610
42EA0CDCB1659C7C1D4462EE897EB2BBA0A8746AEE87EEC8F2D11C5BC1C5A5A0
8B942528B4FDF9E42A5F6ED4052F938B6566BD816C96D704A30F5494AE4D6997
AB8B190FDF92E2CF8880A9D1B1448067A3F9EF95AA52D48A1C39932A1BCE4E72
9459C43A6F09D8EFEFF6C02E518F1E167E7AB4A2C62B23E03259AD33593BFD73
8991C2A7046C2A7F0E8784846A929A2ECC9CD151557CD0E213D06602CA1D1040
5C55F6EF17EE4D84198A9E10E11015591097A02EF8DBC323983FE3080CC0BE03
329FB9B40EF6B5A933234276082E17993B297043B2F75674AA08FA5B8274F01B
52945FC6ABCF3ECD8410335AE6CAAA4F740EF71F8870E661D2CC3C4CF5D9F46E
05572529A19B09E71FB091835D1EE3C93011077717FB83EC6B37D548EC5DC1B3
918230E65313DFD32DEABA293EEF5C0BAD6D432C2185568A0A17E46917D7D85A
41B2D2B1E0FA9319F93F61B949BE7D24A72E68E2F8F0544CE29FB79C5900B2A3
2E8FC2C0E407151D784EF671B6693650F8188543AF0DC2B02F2934B97EBB13A8
BEA26BEBECE339A82305B707B99B0F3343006CFBE10D39328466F7BBEB963A7A
7BBCCB0FC874E908FA01CD86DB9A10362614879FC57905F16D765BD449CAB445
5252955542B51ADB532C225B67573891636ABDE23319EA7DCFD8E8868446385C
C6D1E2BCE00279474109AC67B7D0A034352C6C5BA53D06A35317623DCC680963
60101378CC2850D82D3CE960494281C0ADD4A7DD834FF84339766A71803F1A8E
507D0ADCC055264CF38070833FE36F3E9E75ED639DF6135A428CA13FCD6B0686
B1A34F221780BC3FBEFCE321EEA3EE02D5836DD04F03C7AFCE7E1BDC7457501B
41D6654CFED76CD1468654399362FBE876D8C50485E42FC1A5F0EAA156E3EF0E
EA375E66905D49892B70588D74CD1231B5C80138263B8E0DA1FCC4238D71517D
A163420C35081F251BC9BBCB4D070142743F214C920D15E17A84F050903546BE
455D07E984809CAF607B7B16433C94EE6076E2B23333ABF27FE159FEFE89CA6E
88F43E2C8F0AAC478555769EC2C44150D849A0C7D966B2EE653CDC84797BCADC
8A32BCFEBFDB16A0642E5CC69E5A25A6645A22765B79DB8121C249FADFFB9A56
06E6C78A09B2BE25828779D087FB176FE60FE7C8F1CEE20C43F067B52E270DD0
DFBDDC1DA61DED545A3F6263142B2DCC67B7938F65CF6B1DB6AE3FBB5E66C8D8
8E03687F3DACEAD59ABD78FD41E2AF19079CD105EF2FEACF80A8EE0FCE3183E9
12CB7AD280F09997BB31AA4D96731E07987529DF236C6E85FE860261A461D906
9B3E906F101A72D8A82F7CD70D2B36956329630A3F998D8565EC5A3E0ACD13B0
7D4110C5EF052E53560BB362A01C3F3C112ED828E9BD8DBB5A60E88548BB1CB4
F936EC30C88DB6EA541956B904DB911D009F0B209BFDC00D87DD1E02CF51DABB
DC9C6B4F1C8E0DBB8ABA0C945BE7CCF6769F21B3552E00BF22AE6D0C759D6FE4
57350A485AEAE9EF8D735BFB4715B7E2454D0F598F0BF61BA1FD1873E08A7F3F
8BC5E5831303447C940325E2C4030D6C173EF8D24A0B3CBC3DAE46817B2C306A
106B9026CD67C8C0661F6D8F43A7264FE50D3A4F194AE8D5D20A7255315FAC5F
9BD1CB5BB79186C655E85757137873AE8AB05E3A4E975A340EFDA6FF45D81E5D
CCB9C26B9FF9D419EE8F81F85DBFA44D2F9C0DE26C2417D362C41DD7FE55B0E2
2C79E8CF744F0A8735C3247550398E2A60F51D15BF2838BC4C0021571B3CC540
19500DDC798B57B6D68EA208694406BFCDB1E8169EE46ED1FD0594991D943F1F
F66BDC20E5809F5CAF01982ECE47288EAC8F6969F85E2B41A0B8BB6958FCAAE5
2C970D9CBE799A76206DA7A57BE4A11A816466C949FCB88A21E889779169F006
2E7EAD87F8582E18ACE8384F4B60393CC6EEA8118F36979EEBC54063AFD71608
8B6E8FE0CD1702C2C331273578FFCC7EE994D92CFB878BB725B0E81E119B3C1D
C388C75DA259E26789B12EDD6E57CBD83348288C778F0F49D316BBBD55D2CBBE
CDB2CCE5BE9885C3670D82BABFED79060753F3D80F49365D5006829FED63CB95
71B219B3830831A60A32F061B87B6C7379BBF8DF0C3F7F289A4F92036AAEFB56
A44965744053106BD5B5E99175BBC27E40B49507AAA95D76089B8C6D8C31D70F
2F95395CDA0884C36DB1FA86240692633B1D061E66558B3A7AFBA72B464CF1F1
6E7B0E575DAC7A0324909EF3EF2A4C728BC84E719BE9E86E61B0482F8FF93B7F
1799AE4E4B23467EA50FB97784B959964287B6070AB7CFD0703BC68B8C84611D
789DDDDD65AC866E4EA2BFE86B1A3115ACAF54AFEB1E60952B9069C91EF0CDF2
8573B5A46E82845D720CDB1EC8DF4D8D0EC8AB2AB23D244FDBEDE098610F35EA
16B1990F2CFAE1111C8E0CE9342B06AA7C8A26591C258741F5929EC7CBDFADDD
1496335FEC30F5E9E16AC846CD4DCB6DFB2A0D2146951138D6FA6A92D2DCB49F
83986308B130E3D8EA2FAEC76664ACDD2626B15FE526F0C6285A71C74E886762
140314F3F2106069D58578B215A96113B57CEFD1F5022BE5B15E1D75D8A39503
97E5EF6993CB00616EFA83F66A05539E5734B4A2DAA3C7E6FD827DBAF9D1C8D5
98B54BF11E15744AD6836652D627B5D7712BF81E78EBBC6C56A8E448153895A3
0B4A82AF5946FA1337928FAAB6BE26151101B7807B2F2EE631BD20B0666B717A
D291C4F0BECF14318F0C968433143A19DAC00D9081DB947144451BACE59BC9FF
B392CB810F15E51C3970A2678B23A7EBCAF98097861710D733B5510790EB12F3
00BB5D99B413A3A5A7A10D9BB6EC24FD7B4DE0216DE6770934B29652E7633008
76BB073367A61A91B741B16B3C143ECCB38C704FBA1E221F4025EBE109E1623B
E7C304B9070C1A92470E3AD7F1CD944E91ADBD1EFF555D16434A7B135CE4C081
8154A0B50ECB2AEEA335B5BDE2EB8225FB825A5CFD16D9AC883CD07A159ECC67
5E6A0DF4DEE9A34E92E3925484E3FA45344C7FD3D4D3A68B7A86F94BFA604C5A
93CA60A8C5C4A5AACDB6EF5562BF5E33733CC9ABEADA0440A13599261073FC8F
97CCFBF000D4FD1D079A1068F257FB2784CC8F66632695B5C8D552AEFB7384C9
D2DD211B4E26DD455B8C450A3845A54350547C73BD5D654BC8C65B8093213002
159730911378599974D2A4A3205A594FA324A80535967BB035051254C1D9087D
1F33E150C9B1E5C0BB3EE71366876EBCC64A3B6C04271BB84AC9AAC072FF6D5A
FDC5A833E61CE4EDBEA4C8F12D16BCB3BE5B4EB51671AE9357176D5AC1450730
E344F82D1F079808B3E847A873C89176E748078A8F4015D390CC9088C268D21D
1CFC3186DC7060235145CC73684244F63F8367906C7C4648EF33244ECEF4405F
CA7163D413E79CDD37FDB07131FDC420EF525CC0B5377D3E6889DC043B66DB60
F40F602AB7752FFACDD5D83C5D9998E609E95DA8AAE4A6F8B0B2ED3A99469BCF
9EBD0674A7CBCBDF2A3062F218582C59B4973E4E9FB1DCAC3FFD8D7A87BCF890
71C9EB5BEB228C5A1BDB415F80A4CCCB175A4DF80041603CE71AD9F2AC7E8DB5
3B169D9EA72251C981B51F8E8451802D4821A82B8A241DD366C39F570F6B33B5
418F210BACAA8CCC7D60AF299F7A6109C26F93B4B127A1AA28CEDF94849373C0
028330F91062E4131E723DCE48D82E48819606E978EA55D01878C314A4610A10
5656270A536E5DC0236DA24612993121152E7F2ABDB4B59F7D94FF33EA3281C5
E352B4D7C4C16789038CEFBC8AD94AB806E96E4BE81DD662C6717E289BAA716A
7D598BE6C799AC0D70D2DAF5640777C30476CF9BD252A49082FAC33DB46457E6
3CB27220DC0FC981DCCB673E14008F296B41CBDAC3A4FBE58E4A0A7139B77AA4
8AECEADC45A5A65A71E268231C07EC0F3AAC2337536493680C4D0440D13DCA3A
B0CD17E5DAE88D33AC9465A5B3FF774B30B38F39870841FDD91E749CCFEDF6E4
8B9AB26B1D41C0DC2BD6D790B59A00348EA1FA8F9014EA33023BB017EE2B7730
0EFA79F5038C2F8C18609D8770C722929ADF8709D217496E3C3AB9B3DCBE200E
EF4E11B78D514121936F13388CE0AC08ADC3134D1F38F37B0253024B37B9E5DE
1884D783C1E2041480C6862C5CD0D47E2566E732E60DA31233D7314E18E98E17
B68924D0EF7459C62BE96D8A5737F03BCE6C4646734B007435751050B69094F8
37A3A2F5C501AF422A313B47DCEC7A019705E05AC7F15A585958034D9F9D42E0
DDB54971C0AE4C07FC4A5944654068EE836036C4EABC2FFFFD635262090F8698
49DEEFEDFB47D236F1DF488EA9100D499A87C0AD113C71FEB0BFBB6DC2FA129B
42E2142611ED0A8ACAC6EDEA2091CCD3C464AA14A393F61610D617E196C9252A
013978F5D96EDC72B7B9B4BCC12F4209B1951AF23FF6836BDB1F4583E03E4564
69890F07F83BC0A8954FC5EDC2849F944FEC39EE946A6047F674EC3844C7A79B
AEAAACA0BC98B553DFFF535A7E5C6F41AA7D14736CF32569B3F1A075131735F9
3F0895E0072591A530393E0EF9FDE558464F43A166E2E533F1C050D35CE4AEE9
2C35EE3915787C40BA536403899F782D7C85211D48DFB521FD1534C03383D55F
B60A1F5284E22685EDCB5AF06EE0CD9712BB85D865B2DE12D3184BD3E1A1F94A
ECE2622F721CE397145F78A56D706B19396BFBA6BCAAF617825376C970BE954E
5D783537D2B57CEFE23ABACEC756F5D1EA5DA5E6BAA3F13B59EEB1F57DFD4ABF
D20D4BC6325B8C959E7B29D73037E9CDEF09C16A2C0FC13C8732D5463F7F59A3
4C8CC7A4AFBB516DABB82503272023C7822BE40259E7921646D9533BC0CCC8EB
CEC593DCDB97D883FC8747A31F1A30A2805ABC3BDD397F3D5B215B0698D8DCA3
185FCC995E07B3C24E75C142A970F63BC1014A091DC957EDD3AC4F4847986A68
34DC9E5533C5E91796B88517628329664D35522EADAC9FFE1131374EB2AADDB2
337DBFCE233FA546C81C680DDA1973B115AA85779C962E6F13E7DC74B120D43A
B1B2097DED7E4DED49AA56D342CACC68F0B17703D87338CCDFCC0B6C5359D9D7
98C1D3B450D864B6B348501D3073C42AC1EEB4EED02A62591F159EB60B490854
F94FB62D0B2C30C2F83BEF696B584B58E7A2A0FE2D4796D94DC14A97E92F225E
C1EB3C1BD05637F157FAA4BBADE2474758D2E81F02334D25B30FD5D40EA463CE
F58B858756B3CE61FFA44D5421C8AAC7EF64FEB4F057940AE33CA443D599C078
82F20942E0030656C55146644AB4081DD7906687B7E22B3F96FC4663FFAADF91
6E228A077CB3F8ABE7FCF57A38E061BD6D376C4643295F769C4B52529A054F6B
673D04BD3592E6E870382132172F06F105BF2DB51EC3DF2714117999E151CFFB
FDD570C4C889FF6E06E89C0A4DD635279D44806AB267581833A721D174A65B51
E3E8A909519DF6E3FF2AB13218F2B69738A10C83C684E472DF545D23F4978EEF
25619EAB1340719657BD58BC53D145E742B892DE3372563DAB6D3481A92A83B4
687F352DBA807E1A73AD7E8FE40D0D97E9BBA0D4FCF0E58E58CEABC579ADDB94
5FE1609C8111412825F41ECFCE0BCA12B0D2FDBF16D0BE745BCA2104F0A28816
B184277891B9231F2831C7A5A6F6A76C8EDAF0056455D81015EB9A02B08A41A6
0E1A504D585603B92C1EA90C5E2AB594402045BCBDF9AE4C561B4413C38DA740
1609733F47D9990B238122A95979D97B47C540603DCBE9F9B6E92622BFD1D679
44BAE2647BC8E498A4419A69F3E76C4A1DB85360D56B2BD4B512C2D858607F50
C15E06E5205869C1FEDA857BDF1743332F706283C7C60A1D9E7E1FD69388281F
0AF776D252333EF292A9E582B78DD2BBE4BABAC7DD277FC23AA17FA0E2465D8D
FA46EAE6ABE863D7AFBDB909A0B9A945630DF297872CFCE56CCE1582A3A05CBC
51647CFF73C03028AB441956C911829EDA98948B372809F295F67DC12F138A70
4F46F8D097D53AB04E673CA6A7499BDE06049E3C6B96BED7E150B0ABC19457CC
6C0C6036B1526E7B4C75C41FBBE956F29D1917487D86E52CC4A79BE12484E63E
EA2FE095D4A9761F4DCF1E7FD3ED380701745BE8DE8EB1BA163A248F9A2052CB
8980119F3F2EFECCCF2A950C150E234D3A5C32A6EC201192FFD8BEC784F41328
E6B4C477BDA86A810034E16CC0C876B0D072EABAB7EF7C5814B1B8DC1405B323
90852C344490E066B665ED5234D87FAE6D0CF0B2BD75AFA2BB38DD97C6F426AC
0677608E3795AC338C57A05C4E5D56A4DDC4681B41A2536000DFC2180C19791C
85A0DDD1DFA04D362503CB2528C9FB947B41D1DA4F460189CA64DA2D8AC35DD1
0A87853FB35F13210AEC71AED98317186244404D4812EB1E27A879904084B345
CC06DBE98FE9E52BDF3CF8FEC118F0F99F14DB44241A363F1061FCCF54A09617
52694125166A1FF1629CC41AFF7700001FC838E8843F5B2D5D6FBC1E85D636A3
181C7F0944360D37BEEEDCC2D4DFCFF453BF338CE82AA89FB909880B99D9CA7F
FAF13E7F2BD3FA0C3DFE2A99CF91A25FF02E328BCEC164DD0E276A3EBD922446
E7A0979048EDAAB75DCB29EE2874EBD426E37B2FB9DC1919048628CFB416C87C
3172D99DB6F9A66664C1253E3FD40709EACEB5AC116266894AFBA1C099D37DCF
B6986D8C91D104F883777AD1B0FFD5C8C14C34C3638C8F65068B6E7C7CF2E243
2A65BA21DBEB0A83FC660BECEC7F3A4D95D4D5188EBD111ADAF13004B95BB6A1
F91BE5FD8D1744C4AF49BD0B312FDA05C10B1139EA424ED9FC0BE4BE6B9E6237
61D24C0B7CB02DD90DC8A2CBBEBAA3F0575732043B774507B75DA4D49C7FCD52
FCAFA6EFD64AA235F6F3C221A21FA27814F2945BD12376C76382F830A8204CE2
2B0906EDEDFFC684F2CCE516A901673DE56200F9059E85CA54122ECBFFB23D7A
75DE5B6C8B502F5F9438F73AABBFA8010815AD83B7F79B4DD5F1392F1B8C9415
6AB64890B2029F4CDAF839C24B9A898386ED0BA776F6DB8B43CE3B48554D80FD
796F2AE50A36F87331A11DB19FF18CCA74A4C5FE9729DAA60F7C79E2CBDCA422
6562139CBDF7546228F8D5A2B9C40E6F378249C439A68E50670DABFCFFE2960D
4C4536935910B6DA69C9D2F0C55F519207C35E327629341072F4BA5FD635B3DE
F5B8C4EFC215CE22D22D47DAC5DB2B49B0C6B3D0ED7C06B3EEB191FDD952AF5F
CDD4314AD585AF5D0910305D4F6714C297313CF61C8CF8E7E10B17D5AEDBE876
6C180EA9F24361EA4C8873B15DF10E00C2B09DDFADCEC31F45182E43141F3456
9D449D8129A932A48281208013E3A98A0D69160999976CAC30BE6950534CA0FB
2C95D0DCAF0F23B695B9AD68CC4FCB3B944C403F24F59A696797917044AD42AF
76F6259D83A5BD0B86A50DE3060BD73DC68881BDDECDFCF27B756A9C8388BA6C
9E5B7CBF6CAA0F60C4AB5B20B84C9E65CD56BBECE051BB2C765DB992A72337AC
EE138A4912B9D399761D8E0CC09122AACA44587EC297569731F0BBEA15237FAE
74B8D924E48E8EEA7BAB1F7EF9D23EC24312A111A6FF40476AD6E7850D0EC036
BB07CF4126C112E5778ABCE081A971D081AB430979CA1EA2BD1F063B05710971
9E8C0CEC5C54C77BDF8AE86F21199736AD3032FD6CDAE7D4367A10F9298AAC38
24E4477D8E693830984B1AD3B8921BA22D62CA8A1922BE1CC6535C42404B8B54
FEE369E7D4EDAE4E2993CF7DE5C4CECA4A1E31A0016B0EE56AA4E530CA0D0872
66C1C48CCADE186F331E4BC14C95C4838001E4B6624E6009F314570BD06F5DCA
70E52D5B9D92F85A8D04CA7D44297B30D6CE4BE0CB7876E890C26B5C1654D5ED
55F843C49840FEA27B9879D5440731F4A9350325728DE8BDE7D78EBAD3CE90C1
ACF0876A88DC6D3A1DE899635EE2A3F064DA99776B4DC4E92DD72C73E43A69AD
8F258801518E43EE7DA0A38CDCCBEED03474083584F645F58DF591382E96FECC
2119CE913C68AD7ED6A00759B1126AC02E6FF86A61A0BED0EE92362F0504E07A
83CDA07F90B489F23CBC657F8ED07C3F4BAB121149F3F8F92DA0B1B3A34E9BB9
BCAE0E89082ED18573FCBBB27BF72897CA65D1D2BE36449CC565E7DC83602283
0BF7E34FE22BED3238BE1946213D646E9060951E54A3126F806C1479AA50A2EE
82D4FFB296DD4C5DACFA2887FC0B46DB9ACF3FBE509CE7B54080D565D07C1B61
910932CC9285199559F92661B0D52B60873455CE9CD6A239470A4305CBADBE62
735B2BAD2AC3BDBB558887593CAE64D33CEAFB6A687CCDF2A687174266C055EE
B74E651E2CF518429307CB7BFC72ACE75989597D60402727B8F2C43E8A36B230
64884B1DDF3C4A216F7F625718254DEB75B8BECE91CA00E3BC30F9000AADAF9E
42B66361134913B64D443FEDE966E1CD647E1807EFDBFA1B2EADB5EC01A38D45
EBC6DF72B8D560BEF748B624FE17F016DE82303FE984DF0DA98FD84AD4180E99
3172DCFF4F82A8D7A89C108B6E41113A41E6E7BA8716476DB3CBD9F32F70DB35
06526C03736722185631240A6F3ED6AC10C946E18D36EEB65CCFBACD89A02943
3652385799BBC2C5612FA7831F52A0077180158E5D118106570831F23CF3274F
6382138317BBE44CC6CB0331D419E4AC3C951887AF3125035FA4D908917CD1A9
7B59DD0FDEEC1359622F67CDDB753F762BC10F8A8786AD79E58510759830705B
8CADA71B2604AD8F78200C704BF2B36D554783034FA991CACCF67D7800A33634
91E9142087571B96153EBF6D0EC7A2971F665F7D064467A00156D51A49B7B050
7D12F94D4695BDEC556DF7A96D1319C3784B054229E17131C5D54F473D67AA4E
8BD0261B2417E6DBDE016C967EA9B3ECA8521D7BBE3F3FBEAE3675A84E249995
D11F07E30DA48630636588AD470756CECD73E18B0B55391F3AEAEB5A01476124
040423864E242289D3F142F3965BBF7AFA4C27947B94AD4EF51D5B815799ACD4
CCF5B23536B2ED4C37E56236C8BDF6EBBED3C1EC194ED47761BDE3FBB306DE5A
ACB3B40C2AD3536C8036211471C92C16A6D52C69C907AA23C2C2138F67F1599A
EECE368D0BAFE0D5CBC36E815F776EC29095C418AA9776D630F46DC55BA76B4C
707180B661E8A620F76025F28FF7C39694911344244F9D7CE346315FDC43DAD9
B7693FDCC35E15D044CAD5EE222026A0C67D98ADFBC08523F26595EED1774B7D
A60AAE6E738BECC63D8E100D4667424F31367559EDE764E5561DFAB73A598E2E
26B11AD3458BF91F1D05B98F791A70802250E0B8C62105738F231DC85F0BC5C7
A59B86DDE788CF4544D70446CFD36D39B70F39CB3148475002412C3BB280E2FF
FB47BAFBF92157F0324F1EDA91976CABB8D2D9ACC9B93C575C363FAAEB8FF431
24E4616AEC4DEEAF28999013D4D6A1EC1A1AB9347851A2E81746BF80B43FEC87
573E7D5056794582EBF24B28B61158B38D8AB28D12A3F5D8DF4F44A3D1B1D9A6
028374F18750F729F84472007F89B2AE50C8FB93F74E76841C47FCEAE01749A1
FA26AED1BCDF0DD696B78C682B4AF04704F513D0E32874553EA3B6E1FB8EF400
78DBAB9160F641E51F352F5ACF474B8D104A5677B231727E89E5698DFDD7E171
D89B69CE420CBB74084CECC414A47801E23BB49314BF520BC86BBF2DD8D01701
55B8458C47B1979B9729C378DE200CD5F3148055C5E98719C8CB95C41BAF907A
8D8ED12237B38171C90C62EC3E1CA0DA961B47D5BC6366050A32654F7AD500DF
135E2064CA3AB00B71303028FAD8ADA94364F19C2CA172F8D877BAAEDB5DB344
4F0B45F8B7AC77E6C52A6C06FEB14D6EABDC83E61D00220BD53541D9BE95E8BF
FFB87C13C4EAA293C98C33DFD97A8C4CDA09EDA0FEB6993EF98667E8433D5D17
5FAE40878AD8C0BFAD44685E0F3959F280E3F0C94946128EE1BE623EDD5DA8F8
7D517CB3A8C5321D3CBFE5655D0CD47033F6D2513E98A6FABCF0D09F4F55520E
1B0F1C348BAB432579CCA02D704DEEEB76DAD21733DE55FA05C2A592D1E80050
D55E6A924EB918AA5E62E5A3504028501C9323EDACAF458951E0057A8D4EE1C5
DB70F4B17B4DE35C678F54658E0AAC11D9E2B99F1FD6385F6A1941C4E44C709C
D5C31A52C3B7756E06B403EBE8AA158C45390FC5BDBA02984256F25FE997780F
5BE7AEDBB1E59C200B6C19D8F511D17BEFC512CA317372060AACB1AA7D7D6159
E8D91210F2680B12D3A1E0810B01C554FDBB8EF9804F5C2EAE78A6169D669DAD
244788CB73E4B343ADCB389004E766BEE46D43B1889F7ABD711BFDA0E0E655A5
2B909AF0DE24C548B94DA9DCA25C73CF98ED65BA6E490F480AD9573C9D7D3A4E
3817C08CD602BFF89D11972D62720F794E1658B84D4939378F1636C877C1DC3E
C0950A4265E88B697D56D464AD4D88EA760004F40DEDCB932C12A8047D6AE910
97A1F86B35DC804EC795163D9AA8025AC8407EF76EC9343947E04578715D7566
8080E41507BC55F347D706BDF393ABD5FDB47D16E3191AE0F1A035F1A9150564
F3B4C39E710BFB3694C97E0E03E9900692F34DE25A14B9A18C4D5895D5053011
BEF2FE25E5291696C9DB5A7885EA4E6DB2407D10FFCCEDB245EB5471E8705A75
D21C7C697A760BB6A439B62EF7BF17E8F5EB107A531066F703A384C4EED474AD
C5D5382CC0F7BF7D6FB6AD9BBAE497A7F70E39028ACCCCB0D00286D000CF5793
2BA4C9DB0F15FAFF7CBD701050A1DB9CFB506CB30531B1C2CBB35B441C836369
11CC92AEFC19CC08F1E31DC3AD15631556A6C760A49679FEF8377A007D3CAB27
FB81EB16C19B13D47E0AC60C83641CCC1A02E241A4E2D29711B655EFC1D043C7
BB99785482A577FEDFF27334D4FF67A04277EE7E0EB69D76392B84CF41177EA9
192D2810B26906E9E6BC229D511F324E32956170600A3C66DDEB73E854FAA7A1
81A9132B96220FC2B93FBF2A109E2F821C28ECD4340FEC1FCDDAD347B2636649
2393591AC1624923AE6DB8994DD4DB0D452EE6690A8E06C2822EFBD2780E3A78
CC0F9EEFFF109D3B8A2E27BA823877EEE12722F9712F9A88DBA8330981646E98
5FA46620FB149EF13F0515DA2ED0E3A18FB2EF64FAEFDDE52CE0471463D4570D
4E89F4CD31A93C312EA467473045A23C64700FD6F6D4F4FC37AE957A07E4C6F1
036617C683FE4C1BBA1DFE027E5D3551F9B4434504DA07479E0F9F4A3DBF8494
3EFC83A04D20B03B479ED2DFC5B70D76CD2A42708DB4F717D5DB6958047D62F6
1E8DF368C62EB7903268006A9FA4E7A4C897BAD462224F084DC243388657C642
F300FCC87F3EE6E2A0A18A97C0A127441F9184B3E1745B6169013CC3EE4C63F6
D782D26B265185BC9EC29EFD1BB013DE1C9A551EF77AD80F1F2F9AB77BD6293A
55F03F12AD4C991268DDAABC8FB25D7D704F62D2412E940C8B665217D26DA4D6
7713B6E3299CDE8B3FF9C04E16141ED0F25A4455CF0F9B162A75FFD0E9C2CED9
DCB90E95CA7AB71E903C18D91C0C7D4ACA5A376E555E91177C51BA5DEEF88944
A138FF99CE38918823060928DFEB3C12C4A022E2B3C17D383AEC9BC1AEAC8011
A8210EC9467F60F86952ECEAF1EFB15A46158EDC3E0DE93138397290DEAE9E20
2FCAE81037EC4EB4D5EC7641BB461ADA4475B3975E3ECA0EB795FED82C6D8B98
038E7E78405DBB56FE1FCEC90C88F8C78B1C3FA3F71244C924D0C1061940D4C9
ADA6FDBB0B58AB70E12A2AD9100DEC37B2F2A46D0EC06611E7668255A9F3CACD
A8A59595E6C3DBBF44C7FCDA57DFDAC2EAB91F09A19DEF1DB2347C7932D2538F
9D31DAC7F9511D876746FAE5B9EBD7C24CFE3267CA288090365B11965ED5E840
0B3D9EF3C34FBCC2F83B93833B1E7DF9336A1B2C52AA6DA4D19E92D57350CEDE
8D8720A80DB951D1D9FAC8ED3EF4D4B6D65FA7F96392D67FC82ADA13FC4493F5
0CF3D97EC8E3A048F7075BAFD8193F43FF146ACC533101EB1976103538433FB7
4FCDE23E16BE9F3E8DAC29B6F1DA91AF7EE8E507D408742E16FDFD5C44D393D3
C92ECB712CB3C436587E57924C552A4C7642C2BCD635507F6216BF526962D9AD
E3C65B923CB060F5444DB3CCFCA59AE7F938AB5F195BD0052863805FC7E3C162
43D68D0092B0FABA5360B9827E6EC39DAAFF57C2FA041DBF351FD9F074C98C6D
159862B0AFA6CA729DE1346341E3F251815769B230842A3D61C78D2708E561EB
CE71F8245BE46883FBBF86FC42D93376498DA68FAB6C7FFA90FBE923D372C6E2
78899A42A580952972168393EDC81356FFEDF1C96A477CF010804509A8AC7F89
08E9EE4D3AEC3724B0B9F05C05015EA6F7FFCE0D2ED3BAFFD6282473A83A4A56
3A81790065C398C95529C23FC65560599184808D0122ECFE6CABEDA87B798EDF
F9CFC1E08BB53FC5E72D3EB8B7D76D4C63A99114EFD23133E2FB8243221A2E8A
B1CFC19A45B3A53FE41BC9A94C7C4A1693C2DE03E10240E7FE3C1CA6B3823793
07B79C0DF754EF20772E31B5D0FB244897C207DB0C6E646A2CFABBC8550DDB9F
2A374AB80EA0B644C068365C647C5A501C3B474F9FAD8D296C395A94A27CF34D
AD92542615BC18A2DD5FD92C742244FD555B3448D3D98EF0D8D93F95BB00A293
FF818F86E4D64008F8912B4C71A1F7540FFA1DC15E2462B4E65FB30F1143D8C7
72C24AECF9520CA8DCD6B69B2F72AC9EB0A34898BA0EC0BCDB65EACFBAE584FC
2D950DB053BB719CE9B2D2F75106CCA90E75B241855470D50DBC7C44086BC908
8D042728F07055D77E60443C5E3DE713BAD97823BD02F6152839E4261095C70A
27E27DE27AF0BB34000DEF15A81091EEC6261F03A766E998246B785FD2848175
4AA0571E6C8170568DBACB0A00624561D65B0CB286FE4F5A97A143A330D02BF4
21869287164A996FBC6332E5FB95EEB520F94E0E5F7CF9D848595AD607438023
47427FAD9EEF8B9DF39DBD669D70C9A9940FC4F7D0CFE0EDEBDE39C5117D2679
6E63912DA056F4F800E76CD09B3A9B22FE3A108F87D81765A86700891EED2492
BDB814B6674A7E3922D37EE126411CDF6815EFCD0C6E1D1FFE3053925EFB1C1A
29059487E75BAFEEE67EFB8C82885D9D7F74EC35DCFDB9D794CDEF1D39E0D550
2608D76F67B00F6B9D684AC3AE19869CF89416076A368C3182FB4FAD28B74BEF
CEAA1E59127293E4CC8E7F6AFAD22B5BEDC5F50743CF8D7EE7F398ED861D4BC0
1CB0DEF0FD7E80870034F9310F8D37D43EC2C275EA6D8142A3FEA876C09617B1
CEE6A2C0BB1CF4070C334F85CA4B05656D425679AA7B27EBED7EDD9785DC849A
B1E2631D791C4C64AF817FBFDBE7B45C2D89330F3C5A14C593B4CE02127D7B6E
5C5952E8AE7AB5F9EBAFF10CBE2C62216C694562F38A6E082BD7928D8C0BAC97
CF85C3031C2B8ED51962D4D4A800EBEC5406DF46656AFD5E882A0052DE76A475
D72276E2C6A8C48223624FA9AEF348401F4EAEA57B8955BA7DC58262E52A30CC
979B6D9C18E72E35E5721ECC6A9B5543199450D4DCF8541AB24D734BF44CECB0
39B86F475DB68A6AFA0948DB4E8533118A584DBD875150EB9A6E9420FDF50A7D
E08278DA78F0FD34FE48E2FF716005C8EC1F5C7AF9C9E0F86FBD525B79C75862
79A28173D35DCAB8F0599DE43BE25187C87D2BAB60969784CE80A3297B57A53D
76AE7FE69ADC5FBE9BB46BF4D8D8E7AB2AD3E2A5B20E1572D7AE30D6BEF9DE60
05DCC5416F9BA315AD92876CF4059C0C8E5287234F09C3FBDBB8ABDF974EA86D
A16039074369023A1335759531C575177183BC28ADD7A2153F8DAC985FA86C84
E6F7994151E038EF72EBFB16B05A9834382D79D9286DE98B493D1E4340C04953
5E1676FC386AD3DBCF23E4C9315ECD6C491BF3D6CA4F9EA4A9BC8525A145AE4B
0019EF2D9B4C9DCA87BF97346B111AAD89D1300128E6EA1FBF971CCAE4F84C16
417C62E589160216B4E30DF03CBEF98214DBD2BAA5AE04DE16A0B6C9E2240C44
D9F1EC840531381F8800FC7ABC5436137CB6EBCE61559AE1467125B7EB3C9EEF
561001051A26F319680BDB4BB1847473B650C674E740A1D13FE57614EFCABB4C
C22BEED71E9593D31072A4AA9719189186CDC274F18B744832ECBDB147C54FBB
D70E578DD1B8E0D0CBFB697BDF1919048628CFB416C87C3172D99DB6F9A66664
C0736A494EA09A3C18863494799AB90F0B0FF8A490CE832029931E29E560A86C
BD5BA52AF96078D4FBB581F15A4FFDCD712EC46352ED1B976706A6AE560AD6A8
2C3B0ECC54C3F09D46C1354E5FC1A63D9D5B91BB6B95C298D1E5875B235B64B1
A23A802278ED6635F3A42DEEE11D408F043326C12523D372BEA69688A21D6EAF
601ED48109540F8F120A45FDE2CCCD226811D375A23B26115CFA8B023564A3B8
BA56C65FAA99BB540B469C141FF7FA8740B0875FB59561573AA857702B2A8F48
F563EDA3F739221D0E0A15769A52588647510A48CC6E0EFA905AD6481D03F503
ADAEB988655536D14EF7DB560BFA91ED654B7201756792C972A3E0A898D5A867
00DB90644A3A2A34D572AFE3B82F4A439AF0F1B4D45E4DB17DA98F338822ADEF
F3377B3F1F1427F5826F5D00BD603C8E0FC735A9AE5AD20A9985A13B16D05812
1778E93631D91E3BD5243C9C600E077EC8EE339C4804180FAB47078057D55EA0
8471556E519CDD2FDE4C295151BE529EDA11D5A405A056647195FE04B29830DB
38CBD85FF9B0ED87110EDB91421DA2D3A70753E5E6E6E5404EB7261A25613AC8
D6E6E330F34254DC9BC205F7C5E94EBA49FC952421821420255B64B2889C780D
C45D78DD134257815456F053CF1E33F6EC39837B204FDD6937F45C869DD2285F
76565A7154A43D5879042740352282BB0DFB808525676BAC71E6CE0BE12F318F
F2A79CBD757B985254D9744CCB72FA3E0E583F5B0FA4D79A4600745A343531FB
FDA5E57583CEBDCAD37BF10A89940CFA7C528AFA0059D97C662AF4EF882B74B7
0009F4327D9966A382C5BFD22467E3B7B7E8072E759A8ED2EFD004E118232ADC
D28B24331372553E476DD1593E74A9C21C52C14BEBF83DC476B5E0EE0C3F41AD
C2FB1C1037431B54066BD608BE3FF13E0DDB4CF11B602B9F49B0CB0A869DE983
7D710A56F1A2149B53BEA91A5C184B000DDD3592E809E0C72380B92F4B946A7B
AF34835CA8F012DCBE2A10B0317E211D0DBB815462B9B36B706892D17057BE14
617E26AF53DB2BA5F5B6CCA6F90D80BBC98B5C5259715B293A3D7E844764F84B
88D997BA5C7B7EF938DCE23EE53F5EB857A86592A78771A5BE413542F002B54D
7FBB23BC73D4E4E6B9C279210579B4BC35B2188129D9B83DD0B7A87B7A5AE8C2
682A0101A6FBC1F58BDBA484B53AD78A8A6FB59D58C1E794FCBBD27B060EDF56
C6F0370307BC6CA5E7CE474F62D5EA99A9CC55622CB0B9530EB0B6540E7EB3B2
ED04C929890CBAD1E23AF6D10903343F184EAED6ABEE1ADE7C4B1F6AF6554D2F
23C3F524230876B416C1639114992F1D3EDB75B0090722CBD3AC9830AC90BE70
8D190442518C43DC9DC3A195A001B15EE37DC5F4533724D785C22C645809C6B3
B4BB5914FCA2D9350B12E3843B5F41C5F13E36F9D84B8B5ED20949416E44403B
68C635DA3BF701BD39F5357499F0980C58AE284B31CCA193CCEF339CE7D928D7
2A21FC9F4D3F25A0055EBD6EFC0CDF2843A07895295A53B9711B55C719ECA4A7
C3C21E322AE6C2B6732D60633B59C2DC4D15BE6B35AB339ABB48DD4E40E0EB6E
149CCA7713C2DD727B631358D3FC010FE936F3CCAFDE0C2408E39D326DD91CFB
8F041A7DF0647C4175A9FB3D7E1F335DD116542CBA70E63BB928977EEAD4E7CE
6AF5644250CAB98133D44FC038D6C253F4D15F2192E987198AA7AE2EE1C2AAB6
1C797DB1705043FE8F56A3ACF05EDC04333005FF2EEBDD176ABC6D9DE2640A93
4223A46C1815D6E8733F043E86C3F7B277F2391B1EED111BB98B0A35793AD3DB
AB5C51E5FFC0F527C5B59A59FE5C3360A0CC1ECB107D887716F94563768073B8
C4238F51C1E63C2290181A6D18F8D844BB4719549E9ABB01BEC5D7B5B12187F5
1BE599254E80DA2F3F5B50729B09A20195373608C5800B7A0FA4E1215D7DB0E8
11A95E29CC3069BE68899BA9DEA77C0021B9D29C89BD121E69EDDEC575B28160
9ABBFC742F845F80654270445BA9253F9E17A1E0823C2226ADD9D4611F469A35
FD6BE1B64744F29DC5ED1B64574541841BBB67DCA69BC612E884A6164E52FC1F
9786EF0F2F597A7ACFC457E773858E61B2B8C26A1EFF79221C419410DCD99424
7B50DE3668C433E5F28EFF1C27CDC3EC5F32ED902EB312F0512B86DB34EB59D5
4EEF5CA1EDD92FCEEDE0AA6C50BEBCAC44621F6D7DA7D2F454288F3DE9FE43B7
7F8D2854F4EB1C99428364FD0782EB7A2B5CC0A957793B465BE1C9CE987A19D9
DF787FE53E30DE54EAACD0422040A67AEA8E51C313DBD99F8126503BA5B35832
4DFAE0F56FF1A7480F80EC4A17896AD5469A37176FFBCBE1C6CB58A383EAAEA0
F49A020754F7980A50D39360DC793D9C260F9A68379C031C3F32F9294AECB69C
CD0811185FA0005893ADDD71F0378DCBC54657AD72D7C977A144002C186B0DC0
98663B091C32B6B70197891F5CBA918F299A8411C2142FEB0362E5BC464FA286
D986BAFBBCDE305AA4443A522DD354CE73C09A317EE6A99D3A1A7E2693A5FC6C
A128C8DB8ACCA34A307DA379E08FAB11C8059EADFFD09839B0D89F46CBBCD24D
7D56069FA4B757CD97B141546FF52AAE673C3A8FA461F4269528777116645FFD
B0B1EEC921620E668D20A9C04B43955F994B6CBA3BAFA6D5D3A50623049E73B1
F9554C1930B68451FD2E0547C0A48205DD807B4057B6824B846C0B460040E5D7
564650D9251A4B691DEBC9453807B67ABB972F0F2D5E758C290A579C2CCB9200
BA99CA64A8DC5F8DEA7F6C765088BA1C774F914CE50CE2D5561D55C9E03EBB58
89D8F375009DFFAE479ED787BE9575910263015BFC232204C7B6BA8EA35C8E5E
951A2A6FE3320CE257C5510A8E0068725315DAF6FDE251F898B857200B7912C1
FE9229D78A0C17BEC5FF65A4FDE87A4B7F484A55FFA5B83052AC23F4B3644234
D87E9F446877A679BDB33BA020167AFF72DFEE7D9F852B7C21C17A3DADA08536
9937EC131E405546F42C884878DADDDD4A4A3EA5B0A1FA84E55ECA7617A41124
595A2FA9FB93BCAD415AAFD831E404573C5860E877242A03C796E3D9D52215AA
05E690FAA73EC216783CC4F106F962D4B95FD18E974B39A53B5DCDCFD9FB21A2
F8D90C45F829A2E948BB584E86F4C180EAA5CFF839107FB37788C71DD5E8909C
07B0E83CB291B89B4852A379E831559304B2230231DE743A60BC0E04F067A5C1
3D434667F08EBF57D1BF49FFFEB953A66691947443796D055D17947B5C56E1BA
6DE049C1F92348ED811F27812B9ECCB3948B6A6CA310BEC3724995117AB19E92
F80B74476129FEEB0BBC74BA66CE70B82BAE411E9E5D7B24CF9E1D3B8F3D8531
898024EB34AD756FF55F9E4571C466AF1834BF2B3ABD0D897F8C941138848F95
CE16D594749A094ACF4532A29057BDB4FC09C022D95647C427A7C1704E0103BB
C4A4D61B5500F3806101360E387AA6DBD6AF8692376172F65BD4D4F1CB3CD4D6
AE55A5C48AF26AC802E0949CC1D133AC282085CAB4EEFFC5F9433FD42EB693D3
CE00305B894723028E0529C6B747E58310BBA39C633DD8B001B139A939FAD116
87C905A389EC51A2326F59E42ECC095BC98810F43B9866180F9D58D0497793CD
7D47B31DFEAA8CA4892D103A1F8AA517E09CD01CAEA78CE10AE33F3C37C14824
02ADBAC72CEA418590D1ECB0819E58D197063BF03C8ABF3817168828BDAFD599
6BEEBB7E1A4F11954E669DE14B907CAB448E3BA6371AC82FC46276D4E76AD9E4
C5DCCC874CA19128B432ED545A3F8971D7BCB5F3FBF883C05822F0FADDE5BF73
D12C193EE76366BE8A770245533FFD5629A4742EFC878614969C508F51F1A137
45E6C45A9E57B5A52F969565395B5F85DFBF59C4723FBA2FC151AC1F4691106F
F0E8C7B9C4F7BACF0C62732A581780CE1D147C30343233B166AC16FB0CF8CCF7
82D8C0BB054E62BBD0752ED2E819C5510F03B635BF3CBA3CBEF4901AABF9616E
20B6B12B517C1E56B18A51C229D309125B41446B78E89DD66F9EEEF258E53D69
8E3F2B7FA847C5F1C6B06C6B2B9012F5C2D81ABA79B85916C5CD51F39A665E71
AFDCE72C9225DF20BB60D5EBF6D5B7BF0370DE653FC9AA1D2E76F129264A9987
5D3CC1A3F0416B6EA898A7D0ADB4B19A95CC2AFE686E55D88E47257C1FE18D98
A53326E328A8F446C41510A842D5DFFA8223B0307016B7CE4F1ACA9704215BC5
2783310E19AFBAB852BAAE48F4A3ED6D0A92C08E4B79F8C713BC7E31E870020D
1FF5C24F2C012A6EA10D9C8D74E7AB6C61D048639B37B3F2FEFFFEC86C491266
93C23B300DC606F1ED82EBF4B5CD8CB92DB9DA8CCC5D4C8FE429C369DA41DAB8
861155A0B48DB7048568AD276734D3E694E9588ADB63BDBECC4C25608757CEDE
3C2E0172DB5F25527D6DC793EAD07F6BBC15A883FDF4C04A1EF8C1D02CDE87A1
A38A0CCAB4AFFBC13098D19F1317AC00BB1136E781E9D5DA2BC86E6796624BCA
8DB8BA3752B18755AD4FFD646A4EA19CA6981BEFA1A50D5EAB46B681FD383F35
D1033E400A4F30AB22827038D5E2DCF97D2AB8EAEEF6071317CC31E2DA5FD770
4B9867C833ED3ECB005A96DC5D8D10E3E6188398A433D6F3C4B442E014E3E5A5
E82E52DB5332AA720161694C99C244A6C28AB016CF6063D0B8D2C5B93EEF749C
E7CACCAEDBA16A992E6B88C29CFFFC95F5611771DEF3C31130737273FFB6429F
1A3DE552BDD61FF28465CE6DB5842407EEF346C76EDB1A1853D0195D5E74DB58
470A1AEB659C973D52B28D6CA92DDED5BE33EEE8237CABE2179C4CBFC016A8E8
93C28EF549CA3C0F7C816C58C54BA795DF6289C9A8490DF490915711FCE65F1E
59FC960F2CFAE1111C8E0CE9342B06AA7C8A26591C25825245F87A10E9D566B4
A07963E6186FC14FAEB626F3259D26BAC6D6D55C96DC4C68D073F0CFEFBA90B7
4ABACC0FA2BE1EDEEC9794CDC1DA7C9208B2FBF7164DD4B02CAFD2BEC708838D
311CD7A6C78FC4A53F0DC10ED188D1927A46B57F996D0B21E89872FD564ACB36
CBF058A6C323477CB520B59E53117FB961AD0BDD708C34E6B895ADCC53A2C60E
B66C62B4BE8E235D98E90163D61E37F2FDA03FCB2D9D4BAE0E6651AB87A1CDA5
E14FEDA66F65077FA97F819A6AFE696782CCAA8E8A7216C37FA27D3BF5E99591
92C6F2F6C635A2C17CBECEC40386F04887998C6663A238589A03B28B03A324CF
6F277BE3AC8FB0B8749F33EE84CEC0ED22BEB736BDEB0F3BC878FC55C33E070B
D445F8F69CA4B90D34988C1C1AE72CE581E82E6C1D9D0AD93441E22F30AB2612
06BF5ABDC96B4FCA84D19E1B81213FA8208A7256BCEDB779404B7FA38C8D6DDA
64C62981ABFA3C6E7EDADD0563443CC95436A765FC2EA4BD68A048B550DC465D
3A003CEB00A07240B96F47F1E55E05D9CF0511FAA3B2D4B1CD759E02FB9D9E74
F41B61FFDFCE968B5451F815FF783CDE0A5A0B345E8350B8F483C8F8FCFD4414
B228B69FBCB0E5DDA96EE11F66013629BBFB08422B60468F2EF9010C645A00CC
C95B68C83FCADF39683BA2B4C4C59B2FCEB1291C549BC9ABD6241D2D9C1FAC06
B5E1C9512D50FAA648A982AF836C517A9783C97DE9516CC9A2007B922B784514
AC14429AB8FA9A5FA7162BD516DDFABE69046EB0B0C8C4818AF7E1AC71DAA8E9
DB6F9EE669A054D98A2512F90B83157F57E050977085706CFAA9723223CBAF55
4ECBE4972F8B408FFD530F66B74FFCBDE3B1270C1BEB1C40C257EE807A59232B
7EC2FC0A1D1105C8EBC41E41C3DB11C48BC81BDC0FDF5D8DDD97FC42C3D2F8B0
2F89B429212C584FB9461A52DAB14D19C387CB1D7732019B86C11D799B79F33B
B09CB6771F63785293518EBC05643DA5F9D1A2030F95C95E9A39346F17690280
96353108C24171429FA99A086B51ACE37A02D0640F8066F347EE1D6DB9546159
5C9938581921663D3E78B0838F0E570E8CF04E85BA16BBB3123ECF3733A72F5C
DA8E73F721BBCC26CBB47A317480DAFB142380C6AD8B9CB32F209ADBC81A3F25
5D199A354F4D28DC5CD51D6A9ED5816166A81DF85561DF48DAC4C5DB5A2AA6B0
1DB40C422BF6D41D7DD1DB2BF35BE896B16C9661FF07EDEB34F22DFD25A9C3B6
37EB2625D3EB8B57EEF7B357424E932C1479469DCBDEA1F0AB9E19257CE4B002
E8B036374D5C37D66FD69C26DD0B3F153E631AF42FAE660915711E6C2700B38F
D7F4E03AD7A751AD3CCFF14E43979D2050F4FB7788D0F853B59E5F2C721AD8E4
DB9B742B150E02F7044769623667C89B04F639C8E3665F8EC9C577866D63ED73
6D38EE471C943A46D4F4516895203B8B15293B65444080B62ADDDCA6FBD3AABA
5BB7338A892839466E319B099AF1B6AAC5509CA15F892E1C9544D8BE20C866E3
E1D9F6ADF8749174B36C4840DF381899DC6A5D903B6D5C7A1181F6B2568910A4
0F1A19000F1997187917BA23FE1BA9AB72037A8909560E5E33878408EAA317D4
2BF6A57CB6729E6DDFBF4CC6E06F7F4E221AA17F75D36F7194C7ABD295964D1D
20D0D4385F17600E1E43F5EA1F88493C6DB334A71EC23B34833BD3B6BF56210B
6FFF3953D0913920D841F078106D54A33F97FFD30E36E69B3F43335739CC48DB
26F515B6576AE85A29BA65112121E1DEDF87720FB43D790D3E80AE0EA0AEE198
4C590DB7EE142C22D39B0883A7B3ECD67E5BD1C165A35025362F20F481B2FD20
9DEF4189B84A339700CD6E74F3BF89884DF1DBD66E69CCC8D838ABBD910E1358
9CF5EBC5DD20C62F79E2C251E892E1E6E683D2545B0EE0343D1FF764ED045DE8
E58465DD05D2B777C13DEFAB9B4F2A3620391450DC712D75D00FF33D09690475
81175561465B4D0FAA5292F033D140BC50E86C0A7A3AFBFE040101F5F3E2EFCF
DF11D52E8F217E1F76B0F9D703994024A3214877736FEBD350E448ABF9B92520
4E23A07F6C0E1387DD54F5C8BD071C4E9CD46BA0258AB9968C77CFAA509FC09A
722327A7A7082F7E3E2F77DFB04790905077BBC7B59C5C42CAB2E88D2592B953
02AE4434AA09AB585910ECA4AE5A0759523FDCB20B87CA33028129F4A085AD9D
D05C3A4D0001737F9439726AC20A57DED246BF8AE7CD9DAE438A5E3A74345E35
B0A5A9D78DAC108CA1FF9400A3DE2CCD2A72104CFE3A82E9BC568943DE1A6859
9E2F3EF62EA528B388FB2E84197006FFC332A009D7C51513610FB670A220DE65
771015E2C303A527A46B56355930F7B3AFCE68ECEEADFC25F7FC139EF250FC2A
6B8179F719AC6B30787677BDBD4B8723AA58C77FAD42B0D5F7F417DFAD57339E
94ECC5932E87ABFF2498EBAA29196138C2D5C101C317BFC5A0C73A669DD41726
324EC605DAF575714E73D5305B9B58197655F46DE6C883B9D980789FF92DD8E1
DB5CFB4C451D35610DBE85AFE68C2A018FAA8C57204F3E379244803722DCAAD2
48D7B81C5E57909D338F7DDD389277C232E26F75B5CBB4E81D5F6034C9C7D5C1
8FE5C273C0C08E671CDD80A6E1F1110995599C65393BE11269C8DD7247C96D63
25232569A1603A41A5A38F6C4481988A5E1102AB15CDC60F6EF5694843C51454
9F66AD6BB6C1DE871AD601B48C7E6DEC4EFA1497E97C252D233534F47521E168
D225F364D6D85D56EE7F9DB99A4CB309AFB6D06F28AD54C9C388ED99FBA62859
A2F650ADE86CF4EC93FEA60A7F5A9873AA7CB444F9392B643309D447F1644A71
6DB481B54E0DBE175BF7935D54BC20ED3F90905788CEA450619E78AB817EB805
112A781CB563378D8C5CB7F8729D436B65B80B38DDC2CD978DEC483D4DCDDD17
3894CAB70B73187E5BBFFD1600237552934829824046E10E39028ACCCCB0D000
2DC032B97A00994F543BFDBC8567FBE4A28EAFA97A5E2CB12D025086C7C48515
2D775C77F7F595A5D18853316B7924A0067A893DFFFD64DB0BCC9760C91E8628
4AA0E8157922B29CC828ADD9B2582CF6C3178700E56D15B501FB21FE40A8117C
0B9DD6DF820A7BD2B6FCC9207DD8ABF7A06AC3BBE9122ED5FE4515E9581D5E83
747F36C8C1C3C67C2D25384D8E7B9EB31D79E2C4607421389823AB20320C0597
F3C699FD557D7E8342E8BB3FDFFF650037E24A249F0904DEE521CCF7A5267C02
1CA4C0E99CA091A2BE1C5A75B4E2F93105BCB748FD3CAD06F3BAFC166D300087
B2FC75CAD18883113AAADF162B023352069B728432FC6C071F5F1ED3EFBEF70F
A8740DBDAE3AE4A3EFF9F6D7E6A9E866BAE054F5EE51C829C26F9B88AC13375E
4D75CCF036B34D53F81048C4B8FD8CB01EE268ED71E3BAE8CF73F5D60BD9C495
8040D3EC1CEBE50FBA21DAD8B0002FF10632B01D06ABFD3187F78A7AD6A96D2D
C2795C6B40C54DAC21C52A4D4991997862933CBC859E9A9AF496041F09D34B68
1E4FB941B56A2D110EE04B89F520039B0EFA4F3DBBA7D50C464E3F297A0F2C1A
C23EB4924BFCE14913B22B6848FEFA6107790BE7B3C7F55B3682A164B82D3C3F
BF6D1C7B96B726329E0436DA0F2472924972E0A1FA942A4E3E66EE7C81780E31
F5406F343EBE5B3A37D4BCDD1103F3F689FA6E76F402251EEDA8600201AACAD1
870A6F10452C321698CA1BA51E6BD186EBFF74212B13DFB9A3250DE14882C885
381DBAE476C6591692A1E7B9D19CD9CA6283270D22BF342867F229835FD978F3
9EA8B47F57401AAB7A28172A7DC30ED182339603DDE3FB4F9CD60DE0C8BE3A9F
B8EB7707551D6D5FCA16C5BF449CA64DE0C92BC232AFA971DEF84A060B3FC33B
D202041323DAE548FB4A4247E469A15621D077FA9D3BF869E1698A2612ECC306
AC2C1E367B2BB41EE528D286394236495811D8DE59045F452F5C5709DAB07AEA
A6EE95E567A431D0D57135A60721CA7F62345F00D3FC556F169959D0EDFF9B5E
6C7B2D91EDD3B7D74C2C36A1789A50609824588EEAF0B66074A2456451077F70
12EE7C0E0FCABA40F37B7E0E31F556E2E0CDEE9CAB5D3C23408F533B4AADCC33
A31916078AFBC6D9677A9F29CE08D43A9BFE9B5D7F515C18153841814C0B9A09
9146BBC17F29348020D860107338379AD5A88FF4A3484C1755FF338B13A1F169
C069002B02D9B025971ABB8A242A493B864498F137AF00A5DF08F2166F10DFBC
F01AE45DD3BB639CC1677239D19466F1B88FFEF315991C704BCD27CD66DDADDF
2D3CD298CF7E6C204B4466E72BE9AA43A0D4FAD6F3CBC9C79BE3BA37021500CD
487B40A715014F3246C94C3741AA0D2B5A1AFDEC99E3F708D6C2D4B06AFAFB4A
0D0D8779D5E416D7244A866EC561AB5A2BE416E608579881450B0C7FCAA19AB4
97A46CCBCB0766D2DF8C98FC81FFBEABFC209AA0466FF934155F722AB96DB9C8
D5224F50F6B2114F775D6CAB82266FCBB4D55C3EF592FB4AEA7E7543B25EBC0E
E4E3B4EA68C6A31BA5419B36B75E779E63C95047BE90DA5EBC08E1D2871A184D
7A84F9667E07D25B74900DE1EA95B94968D7E642F345BFD57DC0F9637D96EED8
20CD4CC3548043DFDAEEC9A3C67B112EED89A84F78A69F6926C2BF706C8A3609
2FD7F98D3C181645D2AB80959990BED40A41628A1D33DECD2DDF6354FD800C19
803E80B9684005697DCDD5CF79E1149F1F1E2988831AF4EF67E3747FE544D61E
CF2745B0B794B43AE75E8BA62FC0F68C48FDC0C069789C5B4B3969D64E5F2A61
F7557FEF701AA6C128F15F1F4212280DB893D30917AD8BCC6AF894457D0189B4
B8E897B8A1531DA2EAF99B6A467ACD1B0D6762B32C6E1B69F05E94EAF98DE06F
C5E8B7B5BF7C93F1B7E1336F89A1309338A30AE66CB2980E873F42844E962755
1D1B7ED8FB5863F699B65C237896D19FA4BEE2A9095D26A526ED690F920320DA
591F01FD909DBFBD5F6BA8B9E8FF7150923E54E7A8E46B80B6A704A067C563D3
9B4DE9DD4BA551DEE74D9BF60B91F26935D2D928E80176F540B247F089634071
63B27AA79D96304B1946D7D76C32DB5D25D54AE56F63AFF515CD3E3F31CC8DCA
9A946720264BC17F21CFDAC2D03CCE1D4844480AF597E846E19E446B8C30755F
8A6C1DCABEC9A7FB07839F4ABFF468A528CFEEA8B47D84D538F834AC27125BCE
22687370776CA2B61B8BCCF9F1D7A14D36562730AF194374899813080D0D13DF
2DD6D147319C48D0D06C1E7792DCC24F6CEA2E23F169E80F4504C0C35BD674DC
5A4C58EDC9DA7B63D0AB195BE2213769CBE2A1FDD4045DD10F23DEE6D96F6A01
AF6C1A517F866C81F699B46A17CD417F616C1139E88602F03BA36D262F03251B
51126E3DF8E578EC302A5C63F58557B640E0F90E1E5FC28AD8C376C9F15A485A
304CF8B36C6A176F6C48EB95E7338163C46C1775FB1F677889563AF211DDCC43
7EDA5D5AF706F0A30AB005B841D88EA1BAE03D419B4993108E3A17F71E119715
42915D70737B9A548487DA0BB5782BE1EB82E1F3119ADC3AB36A9C7DEBE1F1AA
EBF16A7F41CBA5238DFB3C005876A6D5CC919F4DCE72999FFF367E23284AF25C
07555BFC0BEB5246BC1974BCFB3DF18B35BA3AB0A3D5442AC95568F00CC22CC3
335F231961FF79C3263CD494257852626BB6A78873B768E704AA6A9D2AA2E6DC
C094C2BD0401740C0EE45F0CC1A9EEE65E5DA975A636B474049C0F936A3F7085
C4880CDC724BAC58BD81F68A54730ACFB5FD7DF9220699C2ACA7FF692670C094
C3AB2681E74C08CC2DE33E901E7BE24664A92264B670BEA3507AB229B655EEE0
1143D1F2ABAE00B92DB570609967B9F923F887D1EE609C52BAC3ECA89D014730
C13BED404C3D9D35253C06424A89E224657682FA3DC6D4A4F7DDCA57C17BE1BC
5F0363291F2392F335906B98A8FE8DBD17B27D36DFE91D6CF0764C463253F2A2
3021CAE1C4CE8ED39ACEBD1B0E81D4A75A2E502D35653595F4BBC2AD62909A54
5C5942FBB44757CC2A94AE03DAB8251B322D2AE1B371CEB25BA60C5170192542
CB8504F8A86A02B85F52725030A01F37CA6B04844C3D198963B34AFEB93221ED
4EF0322DB95D4E5E39EE2A6BD3F1165B9EEE87E2E5581C39EBC98EC8C8942FA9
CE4F1ACA9704215BC5EF33EADAE088934132DAAEB5F757E5B0D5DBABBBEC2554
C40969C9D1C3CEFCBED43455E3FE0FBD9C712058D4061D992DC1936AEA7AB2BC
B572DA138F9AA6E582935EAD31574DB7457C36BF9A084609FC3E4CDBF8EB2E95
D7FBFF5809CF4E3A7D136A54022F0BB918985C6DB6F33842F7E9F4DD1C06331D
612999517BCD0656362205C7A59A339F99A0BE9FC38623E8099FCD1E055F5A5D
098E4F5116A34443DE1966389D15BD497C9261D7F0BFC6BC2793D54CA8551AAF
C783FD61322F1FB69E5CFC1A4C6BE1186C1553B04DA649D3AF61E24BB8C888A0
94E5094662F6D92D67C0089722E90BD7C8603C4BD7AD5689E81E9FE5D6021415
35599A39154445800D2B24F4226E95043D55A765921CAD6DF7AAB79AB83196AF
88FE891045770745A8849ACB3B0980A48112482EEF59B9F34C102F28C32B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktional)
@start /Fa 154[966 101[{}1 1328.35 /TeX-feymr10 rf /Fb
185[723 4[830 10[553 4[553 2[307 46[{ enclmec ReEncodeFont }5
1106.96 /LMRoman10-Regular rf /Fc 160[909 45[606 1[606
47[{ enclmec ReEncodeFont }3 1212.12 /LMRoman10-Regular
rf /Fd 238[661 661 16[{ enclmmathex ReEncodeFont }2 1106.96
/LMMathExtension10-Regular rf /Fe 203[993 52[{}1 1328.35
/wasy10 rf /Ff 149[369 105[1033{ enclmmathsy ReEncodeFont }2
1328.35 /LMMathSymbols10-Regular rf /Fg 205[406 50[{
 enclmrm ReEncodeFont }1 664.176 /LMRoman6-Regular rf
/Fh 135[530 22[500 13[572 83[{ enclmmathit ReEncodeFont }3
885.568 /LMMathItalic8-Regular rf /Fi 194[1012 3[650
650 650 3[650 650 650 650 4[1012 1[506 506 40[{ enclmrm ReEncodeFont }
11 1328.35 /LMRoman12-Regular rf /Fj 205[470 470 49[{
 enclmrm ReEncodeFont }2 885.568 /LMRoman8-Regular rf
/Fk 135[739 17[641 4[683 8[1079 4[800 7[1107 3[1026 1[963
6[1012 2[361 59[{ enclmmathit ReEncodeFont }10 1328.35
/LMMathItalic12-Regular rf /Fl 650 2[723 5[650 17[650
105[578 1[686 939 686 723 506 513 506 686 723 650 723
1084 361 686 1[361 723 650 397 578 723 578 723 650 6[795
2[1336 975 2[723 2[885 1[975 1192 813 1011 1[469 975
1021 849 885 993 1[921 975 1[614 4[361 1[650 650 3[650
650 650 1[650 361 434 361 2[506 506 6[361 4[723 759 8[613
1[613 16[{ enclmec ReEncodeFont }63 1328.35 /LMRoman12-Regular
rf /Fm 9[1076 126[1554 1[1196 837 849 879 1[1196 1076
1196 1793 598 1136 1[598 1196 1[658 982 1196 956 1[1046
13[1196 3[1616 1[2041 1[1685 1[801 1682 1691 1353 1412
1[1554 1530 1625 10[1076 1076 1[1076 1076 1076 1076 1076
598 717 598 44[{ enclmec ReEncodeFont }41 1912.83 /LMRoman12-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fm(F)-239
b(A)717 b(1.6)g(-)h(1)f(Sc)-60 b(hnittpunkte)714 b(-)k(MC)f(-)h(BIFIE)p
0 TeXcolorgray -741 4800 a Fl(1.)p 0 TeXcolorgray 651
w(In)494 b(der)f(nac)-36 b(hstehenden)492 b(Abbildung)h(sind)g(die)h
(Graphen)f(zw)-36 b(eier)494 b(F)-108 b(unktionen)493
b(mit)h(den)921 6792 y(Gleic)-36 b(h)g(ungen)432 b Fk(f)8941
6991 y Fj(1)9467 6792 y Fi(\()p Fk(x)p Fi(\))369 b(=)13115
6269 y Fh(a)p 13100 6482 530 45 v 13100 7250 a(x)14196
6792 y Fk(;)221 b(a)370 b(>)f Fi(1)433 b Fl(und)g Fk(f)21538
6991 y Fj(2)22433 6792 y Fi(=)24192 6269 y Fh(a)p 23946
6482 991 45 v 23946 7250 a(x)24476 6998 y Fg(2)25503
6792 y Fk(;)221 b(a)370 b(>)f Fi(1)433 b Fl(dargestellt.)p
0 TeXcolorgray 0 TeXcolorgray 10295 34325 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 236.92195 a add def
/d 0.0 a add neg def /h 225.58574 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 10295 34325
a 21635 21918 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 134.4854  0 -102.43655  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -102.43655
 134.4854  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-112.08563  def /maxTickline 113.5001  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
0 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
0.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.5001
0.0 -112.08563   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 134.4854
0.0 -102.43655 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 113.5001  0 -112.08563  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -112.08563
 113.5001  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-102.43655  def /maxTickline 134.4854  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
0 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
0.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 113.5001
0.0 -112.08563   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 134.4854
0.0 -102.43655 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -3.600230956701424 def /x1 -0.0000001
def /dx x1 x sub 199 div def /F@pstplot (1.0/x)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  199 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 1.2 SLW 0  setgray  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x 0.0000001 def /x1 4.726618633579011
def /dx x1 x sub 199 div def /F@pstplot (1.0/x)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  199 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 1.2 SLW 0  setgray  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.4 0.4 0.4  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -3.600230956701424
def /x1 4.726618633579011 def /dx x1 x sub 199 div def /F@pstplot (1.0/x^(2.0))
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 1.2 SLW 0.4 0.4 0.4  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  5.0  5.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 21635 21918 a
tx@Dict begin  { -0.41287 81.75952 } PutCoor PutBegin  end
 21635 21918 a
922 x Fk(f)22276 23039 y Fj(1)21635 21918 y
tx@Dict begin  PutEnd  end
 21635 21918
a 21635 21918 a
tx@Dict begin  { -34.42062 -35.5681 } PutCoor PutBegin  end
 21635 21918 a 922 x Fk(f)22276 23039
y Fj(1)21635 21918 y
tx@Dict begin  PutEnd  end
 21635 21918 a 21635 21918 a
tx@Dict begin  { 21.69252 67.02258 } PutCoor PutBegin  end
 21635
21918 a 922 x Fk(f)22276 23039 y Fj(2)21635 21918 y
tx@Dict begin  PutEnd  end
 21635
21918 a 21635 21918 a
tx@Dict begin  { -38.95493 52.28564 } PutCoor PutBegin  end
 21635 21918 a 922 x Fk(f)22276
23039 y Fj(2)21635 21918 y
tx@Dict begin  PutEnd  end
 21635 21918 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 28.45274 28.45274
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 21635 21918 a
tx@Dict begin  { 34.16187 30.18066 } PutCoor PutBegin  end
 21635 21918 a
0.25 TeXcolorgray Fh(S)p 0 TeXcolorgray 21635 21918 a
tx@Dict begin  PutEnd  end

21635 21918 a 36522 34325 a
currentpoint initclip moveto
 36522 34325 a 855 38310 a
Fl(W)-108 b(elc)-36 b(her)320 b(der)f(un)-36 b(ten)319
b(angegeb)36 b(enen)320 b(Punkte)g(gibt)h(die)f(K)-36
b(o)36 b(ordinaten)320 b(des)g(Sc)-36 b(hnittpunktes)921
40301 y(k)g(orrekt)434 b(an?)921 42293 y(Kreuze)f(den)g(zutre\033enden)
f(Punkt)h(an!)p 18434 43002 9516 45 v 18434 46220 45
3219 v 19142 44943 a Fk(S)447 b Fi(=)368 b(\(1)p Ff(j)p
Fi(1\))p 25540 46220 V 27906 46220 V 18434 46264 9516
45 v 18434 49482 45 3219 v 19142 48205 a Fk(S)447 b Fi(=)368
b(\()p Fk(a)p Ff(j)p Fi(1\))p 25540 49482 V 27906 49482
V 18434 49527 9516 45 v 18434 52745 45 3219 v 19142 51468
a Fk(S)447 b Fi(=)368 b(\(1)p Ff(j)p Fk(a)p Fi(\))p 25540
52745 V 1 0 0 TeXcolorrgb 1766 w Fe(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 27906 52745 V 18434
52789 9516 45 v 18434 56007 45 3219 v 19142 54730 a Fk(S)447
b Fi(=)368 b(\()p Fk(a)p Ff(j)p Fk(a)p Fi(\))p 25540
56007 V 27906 56007 V 18434 56051 9516 45 v 18434 59269
45 3219 v 19142 57993 a Fk(S)447 b Fi(=)368 b(\(0)p Ff(j)p
Fk(a)p Fi(\))p 25540 59269 V 27906 59269 V 18434 59314
9516 45 v 18434 63196 45 3883 v 19142 61587 a Fk(S)447
b Fi(=)21769 60303 y Fd(\020)22430 61587 y Fi(1)p Ff(j)23596
61064 y Fj(1)p 23582 61277 500 45 v 23582 62045 a Fh(a)24215
60303 y Fd(\021)p 25540 63196 45 3883 v 27906 63196 V
18434 63240 9516 45 v 47992 4800 a Fc(___/1)p 1 0 0 TeXcolorrgb
48228 6792 a Fb(F)-123 b(A)369 b(1.6)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 67268 54804 45
v 0 TeXcolorgray 24746 81281 a Fl(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fm(F)-239 b(A)717 b(1.6)g(-)h(2)f(K)-60
b(osten-)717 b(und)f(Erl\366sfunktion)e(-)k(O)-60 b(A)717
b(-)h(BIFIE)p 0 TeXcolorgray -741 4800 a Fl(2.)p 0 TeXcolorgray
651 w(Die)650 b(Herstellungsk)-36 b(osten)650 b(eines)g(Pro)36
b(dukts)649 b(k)-36 b(\366nnen)650 b(ann\344hernd)e(durc)-36
b(h)648 b(eine)i(lineare)921 6792 y(F)-108 b(unktion)433
b Fk(K)528 b Fl(mit)434 b Fk(K)95 b Fi(\()p Fk(x)p Fi(\))369
b(=)f(392)296 b(+)f(30)p Fk(x)435 b Fl(b)36 b(esc)-36
b(hrieb)36 b(en)432 b(w)-36 b(erden.)921 11330 y(Beim)501
b(V)-108 b(erkauf)502 b(dieses)f(Pro)36 b(dukts)501 b(wird)g(ein)g
(Erl\366s)h(erzielt,)f(der)g(ann\344hernd)f(durc)-36
b(h)499 b(die)921 13322 y(quadratisc)-36 b(he)433 b(F)-108
b(unktion)433 b Fk(E)511 b Fl(mit)434 b Fk(E)78 b Fi(\()p
Fk(x)p Fi(\))369 b(=)f Ff(\000)p Fi(2)p Fk(x)24883 12840
y Fj(2)25705 13322 y Fi(+)295 b(100)p Fk(x)434 b Fl(angegeb)36
b(en)434 b(w)-36 b(erden)433 b(kann.)921 17859 y Fk(x)413
b Fl(gibt)f(die)g(Anzahl)h(der)f(pro)36 b(duzierten)411
b(und)g(v)-36 b(erkauften)413 b(Einheiten)f(des)g(Pro)36
b(dukts)413 b(an.)921 22396 y(Ermittle)449 b(die)g(x-K)-36
b(o)36 b(ordinaten)449 b(der)g(Sc)-36 b(hnittpunkte)447
b(dieser)i(F)-108 b(unktionsgraphen)448 b(und)g(in-)921
24388 y(terpretiere)433 b(diese)g(im)h(gegeb)36 b(enen)434
b(Zusammenhang.)p 1 0 0 TeXcolorrgb 921 26934 a Fk(x)1660
27133 y Fj(1)2555 26934 y Fi(=)368 b(7)p Fl(,)435 b Fk(x)6120
27133 y Fj(2)7015 26934 y Fi(=)368 b(28)921 31471 y Fl(Bei)442
b(der)g(Herstellung)g(und)f(dem)h(V)-108 b(erkauf)442
b(v)-36 b(on)442 b(7)h(\(bzw.)f(28\))h(St\374c)-36 b(k)441
b(des)h(Pro)36 b(dukts)442 b(sind)921 33463 y(die)472
b(Herstellungsk)-36 b(osten)472 b(genauso)g(ho)36 b(c)-36
b(h)472 b(wie)h(der)e(Erl\366s.)i(Das)g(hei\377t,)f(in)g(diesen)g(F)-27
b(\344llen)874 35455 y(wird)434 b(k)-36 b(ein)434 b(Gewinn/V)-108
b(erlust)432 b(erzielt.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 4800 a Fc(___/1)p 1 0 0 TeXcolorrgb
48228 6792 a Fb(F)-123 b(A)369 b(1.6)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 39262 54804 45
v 0 TeXcolorgray 24746 81281 a Fl(2)p 0 TeXcolorgray
eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fm(F)-239 b(A)478 b(1.6)g(-)g(3)g(K)-60
b(osten,)478 b(Erl\366s)g(und)e(Gewinn)i(-)h(O)-60 b(A)478
b(-)g(Matura)g(2015/16)-2617 4622 y(-)718 b(Haupttermin)p
0 TeXcolorgray -741 7929 a Fl(3.)p 0 TeXcolorgray 651
w(Die)337 b(F)-108 b(unktion)336 b Fk(E)414 b Fl(b)36
b(esc)-36 b(hreibt)336 b(den)g(Erl\366s)g(\(in)h Fa(e)p
Fl(\))f(b)36 b(eim)336 b(Absatz)h(v)-36 b(on)337 b Fk(x)f
Fl(Mengeneinheiten)921 9921 y(eines)582 b(Pro)36 b(dukts.)584
b(Die)f(F)-108 b(unktion)582 b Fk(G)g Fl(b)36 b(esc)-36
b(hreibt)582 b(den)f(dab)36 b(ei)583 b(erzielten)f(Gewinn)g(in)h
Fa(e)p Fl(.)921 11913 y(Dieser)434 b(ist)g(de\034niert)e(als)j
(Di\033erenz)e(\022Erl\366s)h(-)f(K)-36 b(osten\020)-181
b(.)921 16450 y(Erg\344nze)465 b(die)f(nac)-36 b(hstehende)463
b(Abbildung)h(durc)-36 b(h)463 b(den)h(Graphen)f(der)h(zugeh\366rigen)h
(K)-36 b(os-)921 18442 y(tenfunktion)565 b Fk(K)95 b
Fl(!)567 b(Nehmen)e(Sie)h(dab)36 b(ei)565 b Fk(K)661
b Fl(als)566 b(linear)h(an!)f(\(Die)g(L\366sung)g(der)f(A)-36
b(ufgab)36 b(e)921 20434 y(b)g(eruh)-36 b(t)406 b(auf)i(der)f(Annahme,)
h(dass)f(alle)i(pro)36 b(duzierten)406 b(Mengeneinheiten)h(des)h(Pro)36
b(dukts)887 22426 y(v)-36 b(erkauft)435 b(w)-36 b(erden.\))p
0 TeXcolorgray 0 TeXcolorgray 3314 61247 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 363.05684 a add def
/d 0.0 a add neg def /h 310.70389 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 3314 61247
a 5771 54003 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 340.86374  0 -22.1931  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -22.1931
 340.86374  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-65.44139  def /maxTickline 245.2625  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
0 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
0.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 245.2625
0.0 -65.44139   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 340.86374
0.0 -22.1931 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 245.2625  0 -65.44139  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -65.44139
 245.2625  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-22.1931  def /maxTickline 340.86374  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
0 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
0.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 245.2625
0.0 -65.44139   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 340.86374
0.0 -22.1931 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x 0 def /x1 11.979999999999976 def
/dx x1 x sub 199 div def /F@pstplot (-0.05333333333333334*x^(2.0)+0.6933333333333334*x-1.6)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x 0 def /x1 11.979999999999976 def
/dx x1 x sub 199 div def /F@pstplot (-0.05707476384525304*x^(2.0)+1.2870410129151044*x)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 1 0 0 TeXcolorrgb
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 0.0 84.82594
94.74074   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  5.0  5.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 284.52744 0.0 283.95825
203.72174   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  5.0  5.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x 0 def /x1 11.98 def
/dx x1 x sub 49 div def /F@pstplot ((--11.88494385734365--3.8302403288230202*x)/6.998707030586228)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  49 1 sub { /x x dx
add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
0 0 0 TeXcolorrgb 5771 54003 a
tx@Dict begin  { 169.57854 187.2191 } PutCoor PutBegin  end
 5771 54003 a 907 x Fk(E)5771
54003 y
tx@Dict begin  PutEnd  end
 5771 54003 a 1 0 0 TeXcolorrgb 5771 54003 a
tx@Dict begin  { 303.87509 240.71039 } PutCoor PutBegin  end
 5771
54003 a 1 0 0 TeXcolorrgb 907 x Fk(K)p 1 0 0 TeXcolorrgb
5771 54003 a
tx@Dict begin  PutEnd  end
 5771 54003 a 0 0 0 TeXcolorrgb 5771 54003
a
tx@Dict begin  { 180.95946 35.8503 } PutCoor PutBegin  end
 5771 54003 a 907 x Fk(G)5771 54003 y
tx@Dict begin  PutEnd  end
 5771 54003 a 5771
54003 a
tx@Dict begin  { 5.69046 227.62195 } PutCoor PutBegin  end
 5771 54003 a -332 x Fk(E)78 b Fi(\()p Fk(x)p
Fi(\))p Fk(;)221 b(G)p Fi(\()p Fk(x)p Fi(\))p Fk(;)g(K)95
b Fi(\()p Fk(x)p Fi(\))5771 54003 y
tx@Dict begin  PutEnd  end
 5771 54003 a 5771
54003 a
tx@Dict begin  { 327.20654 5.69046 } PutCoor PutBegin  end
 5771 54003 a Fk(x)5771 54003 y
tx@Dict begin  PutEnd  end
 5771 54003 a 1 0 0
TeXcolorrgb @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor  [ 85.35823
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 5771
54003 a
tx@Dict begin  { 83.08195 -18.20973 } PutCoor PutBegin  end
 5771 54003 a 1 0 0 TeXcolorrgb -199 x Fk(X)6850
54003 y Fj(1)p 1 0 0 TeXcolorrgb 5771 54003 a
tx@Dict begin  PutEnd  end
 5771 54003
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor  [ 284.52744
0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 5771 54003 a
tx@Dict begin  { 283.38951 -16.50264 } PutCoor PutBegin  end

5771 54003 a 1 0 0 TeXcolorrgb -199 x Fk(X)6850 54003
y Fj(2)p 1 0 0 TeXcolorrgb 5771 54003 a
tx@Dict begin  PutEnd  end
 5771 54003 a
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor  [ 283.95825
203.72174   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor  [ 84.82594
94.74074   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 43503 61247 a
currentpoint initclip moveto
 43503
61247 a 1 0 0 TeXcolorrgb 921 65231 a Fl(L\366sungssc)-36
b(hl\374ssel:)921 69768 y(Ein)395 b(Punkt)f(ist)i(genau)f(dann)f(zu)h
(geb)36 b(en,)395 b(w)-36 b(enn)394 b(der)h(Graph)f(einer)h(linearen)g
(K)-36 b(ostenfunk-)921 71760 y(tion)372 b(skizziert)i(wurde)e(und)f
(dieser)h(den)g(Graphen)f(der)g(Erl\366sfunktion)j Fk(E)450
b Fl(an)372 b(den)g(Stellen)921 73752 y Fk(x)1660 73951
y Fj(1)2619 73752 y Fl(und)433 b Fk(x)5960 73951 y Fj(2)6919
73752 y Fl(sc)-36 b(hneidet.)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 7929 a Fc(___/1)p 1 0 0
TeXcolorrgb 48228 9921 a Fb(F)-123 b(A)369 b(1.6)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 77427
54804 45 v 0 TeXcolorgray 24746 81281 a Fl(3)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
