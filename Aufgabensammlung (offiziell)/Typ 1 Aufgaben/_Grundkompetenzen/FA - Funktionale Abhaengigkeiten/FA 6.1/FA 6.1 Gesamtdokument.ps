%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktionale Abhaengigkeiten/FA 6.1/FA 6.1 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 08:57:49 2017
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ LMRoman8-Regular LMMathSymbols8-Regular LMMathItalic8-Regular
%%+ LMMathSymbols10-Regular LMRoman10-Regular LMMathItalic6-Regular
%%+ LMRoman6-Regular LMMathSymbols6-Regular LMRoman5-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktionale Abhaengigkeiten/FA 6.1/FA 6.1 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0957
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMRoman5-Regular
%!PS-AdobeFont-1.0: LMRoman5-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman5-Regular known{/LMRoman5-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman5-Regular)readonly def
/FamilyName(LMRoman5)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -73 def
/UnderlineThickness 28 def
end readonly def
/FontName /LMRoman5-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-566 -303 1772 1126}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D5E366B4567F8B1C71179751D38DE
09EAB552C14DCD4DE0B086BE80D484750E1D728A501EB36DDA2232012EABE46F
4F54C36AA715FC2E594CE94E9690253F9AE872DEF9091E25A9D7FD73512FAD46
941B8C772528E3A80A92F12CA732DE1460CB5FD1DAF819FA9E1CCFC106AA3832
D37573160C919A633327D54A78400F470079B6B1329E9F88AD384999BB626184
99F2C26CDCF35763273F3B6F226E9E54F4706F7F64DA9B9CA122118314131345
7EE1C14F42845F235E6A6157F87FD2B0069A3FFE68094665ADCA2D6F09103F68
59300BE424E5E62D6BA15D1B9FD7F2A4E40CC69D8D827A3E2096706B0D2EC51E
12E43A43F50BC93F45A54F86F4E198A10176F1AB8198B9466006B468AE2ACF69
986BCC22B224520F72BF6F2025D79AFB148408C463D4C05FBE11047FFD978A94
19F22274208AFC00F45E7C4532A936319F63B4448769CAC01E067BAA94B81B3D
E16DB13FF1E0AD85933DC6DC4B1DCEE12252BE0C7FA81D6A188EC2AB50395C52
4CB5EF83F76C36901E73833E2C92CB3020547825353EAE49B08B7BC575A1C765
3F09FB1B8B4432BA7069B1B411319D3B1F369DAA39789F637C2E35775412CB50
97244C92598495506F37518CE9A0EF8A1BB12EBAC2ACDB8234E068B106997D75
C5E7799210C1706AE188F7D8C15F484FD68C83A3BE8EA1B574CD543FE4C87F54
B65B51EAFA28D03D9519786575EB3A201BA07E91114DE53AA4F1E8CB784A0755
D5FA7C3D7AC97EF66D31A130F8EF6A3A6274B93B617C3B82231B0A7B6F06155C
5A3DBBF7E1A189309F8EC19BB343EB5477E85CBBA3A5A10155EC75B281609ABD
4BF1A453BAE8CD9BC976A1CCC27D8374F91FFAFDA216524DECE34673BD763352
73CBB7C1220C5FE36719B55E8FDAE1F65B79D31A52A9D43214248C6E80E61771
00868F32280D4EB09326163E0BE25D1A14100918F605CFE56DA8B9A95E2F71E9
64DFE422D61AD736AE1E163617431E7D63A7AF0E79C67CA665FCF325A4DDEB36
DBD3B89455CA9BFE2FE8ED26203A2B353C3C9835F4A55A241F8CC5DBE1FF101A
0A492961BCB7BA6BFE61D8947254747CF9848901DD600662AA124F2DBFB9F42C
B40A63BBEC54EC63CCB18E93BC17CBB1CA9CE47A0675DBF2E804072C010757B0
47D819B24DAC05EF13006A116C82E1319A636C7D42C6CAA9A4B1EFDF40752BF9
4A98902E608264DED8C3241F0F80D2278C7302A34A4F508E05E8C908C46B9341
9B9A697306B002E46CE2989009F8939A5EC6CF04D1DC824470A8956B7B47FEFF
3A2D6E11BFCACD6149A2018E62F29C46F0D9DE2A36056C5EB91055B4C390D8A6
2D650E014F5544E46BE9C7E0B1997E6DDFE02C0150A31C97C1D450F67B0FFD56
74E4853E4D6EA1976DDBF07CABE678671AD5FDE58A293FEC7BAAF00545A2E200
A4E4923105DF03263EC2C59DACBCBF4F8B6821501BA8A1DCE0E4AA6C193AEA97
0F45D01EFCFBBD18095AB5C0EC2F626498A0F0C355F94E92659245514FB4850D
FC7A0E65BEEC544A2F266CDEC3FB74A0BBEBDC856E1B1A065B1C34F194BEEF04
F6BF76E045E8814A4A25B82718259AD02CDB518BA4C4AD8F261CFEBF43862319
A54DA73A385F9AF86EF6E3F5211BBE23CFA17F1E229F107D0A7754C4C27620D6
CE5925909FD73AD835ADD9C7576B48EC63B4AA06EAF34C55A9DF7A5BB9E508F2
7E984ADFC4099E1610A8F1ACBC0DFE56DEF3943AAC7F81979ECA8231422739C0
C58B4ADD86BF54EAB5872C79685B50CC82ECA758FE32A72DEEE11D46BE981A6E
A85C135F60246D47ECC90571044E7021EED78915100EF59438A73C41D92F0418
3451EFCAE6D761BA36B4A8C4D61A96C406DF4CF3A843159D3BAA56B007DC6C0B
52D99ECCF89764E3718CF5AAD7E22763671F75AC6C8238797C13451EF9C9E21B
9C60F64B2137D498368FE6269F852FB0E950210F2B0AC83BFAF0420A18B40E95
2E098614C2DB3FA57D400530CA6FA9777776B87059684FE70A0D67D92C6DEF17
3E0B552550951FA9C6175486F899AB786591690FFEB4B0BE0AFEEDCBDAF3A9F8
0AF982F9653F2DEFA6365ABB1588662EDA312337BE642A4FE86DCBB069030AC0
A394E920DC04B524A3A442C7E50D342AE0995D1280C93ECB6FA991BED6CD2F0A
EBB87F65D5E67BA200E39A0DCF5BD6564B0C2F3B595C9F8B8A3106AC80DB85CE
6630A7C3E0FE565DDBD45AE467A782725D8B3E30CF0792D0B194A2E03372C07E
C4D6535417772E66F4D60ECE31C458BAEEF21A985298437D8A57AD995C51E6BB
BC2E24B2A954DB76FFBE2AB51344990FFB38A6DBEC4F56E7DD7C1B142979D80D
AF96A3F3517933574B07E505A45CC1BC7652B9E76547827EFD90798F41EFF7AF
CB48DB99EE28143FF17F1683D21DECF4CADB3E3F782619A4CC3B27215BDF4252
C36F8F82234A46B51F8EBF9A806FB807693E837663D92A3DF30AF50B62E4E013
8AC1B7A39CBBE3E75DA003115C7416C29A27BE5BDC940164A8FD9C5EF6BA97D7
5949E232995ECDC83A2BF7254D4E70B69FD185D5DA60AA63051DD7BE711F5E2A
B8585D9C731EB49F2FA5A5A6B5E003D704FC6BBB9D9C2EE4F3D571285E319A78
F909421C31359DDB47B9CE4FA973134372970A35FBF96123FBADF96FBF875E50
23D34DA177B1DD3787D64255F26B3D26D7F229734FD72535354246F33B2E2F7F
4DFCEAC871D469B89A31FC8DA5F4A317E7644446B44BB8012BCCAF8C59F0FE37
AF76EE986ECC5B669132039391A0ED0E7BEF100ABB401A60B1A27DA0BDBE5ABE
D44A6F0B91FE1986DDD520D8A429FCDCA476EDDFE15E63310A8BE05B7B8236D8
2B57FF08D62D1AA14CAC2886F8DF4CA67C11EC057BAEA084D203E197CD501464
60DE396ACE4A0A050A960230095553782491A414555572D81B716084F1F1088A
69A2B74058822221B090CCB46C0A8F2B599BD2303842C303C712B005BB68F991
3CBEFDDA29964AB2BE5A83FBE336D8C2D1325E033E6CA7B01D0B72207FAF08E2
4C5D0A20A385910CF5CC9590B7D2B6047D6A14598F301B6A7E97363ECBB7CDE4
75BB63312BBCC25FED541C36130671C924761C3BAF25E1DA6A7C4308FB3C14CB
6C3C656047FE57B63F1F98B539BF6BF873334EC7AD0F22F694A9B1B605CB5030
0FC162D7F1B78D3C62F09DB17818A5F1AD15C37D3EB3C09EA1702B10B0E40E16
407433FC9A216DC7AFCE1C5A95F61CA6A77D5D31434A09B64F8FD9213B477A70
452E7C3FF2C0B823742B9547BA97B2B014E28D06053051A80CB1353AB59CA4C7
A2FD4490D7A6F79A3B180D240E4D2DDBA4D4E7848A25F2E789C18EB54A63529D
717928A57CB378F900F83D458624EBE6A7D0067E3B1990D104EBADB9DA093211
73442805CF8F8F6BA060207B74316AD3CFA839A3F2726AFF3A2E092658E4E75D
2AB98C19276A104C8770D3E62C7EEA9759D337A1F82365D18733275A1938886D
2DC102825CB3EF2A75A7A3FA69E0FD82A04759D4161521BF6739131AAC99B7FA
D5AC9FBF383B3364B50D5860E9A1646A92A94062BA36B4A8C4D61A96C406DF4C
F3A843159D3BAA5C6A7307318ECE80777A5FA529030B795AA0CE8D74E529B072
BF7CBBA2338FF37B66DBD7046671C2E5DF917E9E31ADCFA7CD5BB810960EC563
F40AF416C079A59E62C55E71761462FE9F1C24F12DA53F9865CCE5434C844F9F
61FB670F5521FE1FEFC260F3E926AE8AE36C3EBBA9E6A7D63C4EFCBBEAF27168
074F3BAC5699002593DF513D3154E07738A2E39D6AC9429F1A359DE8E810DA01
91D78DC4590C6F4A4A6E85662526851682A4C5C968742603F4FDB0B0B6D446B2
9F4A0504DC2EEA5CA10067DB95276F5B0820E139D55D686C7E96E332FD87D55C
C27E5859EA562E211A70BDD212BBF5C833C27277AFF41983B1FA5937DF61E9CC
A3BFE943C25C0005C651E43963ACD7E7868CAA4488EE815D40E28CA5497917B1
25739FAB9FBEF8523676B7509EA7AD0D2111E41F3B274C07D85229BBB2BB2F0F
B1B3C663840413AF776A79A7F7282FBD398422F52DD7D4F199BBD874DD442AD6
D4702CB01A0043201222A5A45EBF34945E21DB85C5E332EF0A5947731C896355
4083117746434DF37B1060A745CB76E959A74DACA2371F0ADDD8BC75281D78F9
DE0D569CBDBB8C1EC91AC0FA666F6A4161E6593F9EF18C387E5BC1A5983732A1
60076864F407F99A68AD7AAE8419F9A6B639498953B52390D8E594B9E7BED1D1
3E534FD2A5E520FB83F50F647650E90E3AB137912FB38808FCE9C99BA997ECFC
11B62612EEEA9E08BB45A93A475EBD501E62221B95FE357BF67271EE6EED93B2
51B11A906347837117D1908D958AD0EFBD5C6CBE684E8993B9C480D2920ECE73
90AFEB6F7F9E6309A71C82A089CD2DF10D9F48FA1C161BAFBF18900D500C4CE3
599A4B186761649CF902FB88A89D4370F728D86F5DDA983EE440207E60C5732A
EF587491B60E2834919F5224AAB13F1E17BB472EF79C9F3591DD4C298417194F
7316068F4BB7DA76AA2BE8C2E140433640B24F4ABE14345D6A3A253C967BD350
0F5F624689BD1D5647A80038419AABAC1F233E8A680AA123A7C4A3AB05918672
D63800D9ED3C7BD0994D5B9697B4E26D499FBE545C804154DD343D0FCCA88D29
92CBFE6656A0ED50B329ED72DFFF1413E660A1ABCBB987BED86F6EA3E0321670
58311ED0AD1ED3B185D5177C15A854D967E8195FC8239B75243B40F957BD5509
1B92B801AC126E5EA0BB33407C56AD63401DD9A62024FE72E8608B0CFB275F54
35F3DD911BE11DB381C01A9C04645630CA24F8CBEFDC81CEFE1E7EF410013281
9EB6177E6B1430D54FA6EE1941A393CA17E459E336B3BB30E515CA2773FA224A
7914720E92784C5E7013ECA0861430BE54C026FD62F7D2C81EF13236C981A084
05EC3AD93FA9CB3DA0F25169B17C27CC63FE88712F554B62FF88E61627ABA5E5
23C17A201E21DB85365DD8B855E4BDA6A34B184D1A89BD614D7DFF502C408B4E
2531D02747F8BE666E6B065872B6C996C44E712F82A71C040CC46914D29D5143
8589883F4B3AA0690A4194719604D655F83392CE847E04B3DAC7E417094DA352
93F6250F7959BA7FE2053FA0B4E0A35453EEC505A64E4AC9B0D19B39BF010C61
449686A23E22A3B0DC696248FABE1876F93CA24CEA8F76E9C466F7BBBB6F47F3
97F59231D0ABD7A2EDE43E477B877582B144E5A0BCAA48A472001B4185D5263A
C2A4728B66AA267A757DADBB5CFE8349C55F794B95622CF985F50763D4FB9036
6A4CD61AC6757F67D7CFCA851396A6FA306EA3D76220182D57FB18DEAE2349F2
7FD72C7ECD04700C6400992BC331A4199A987EE214AEFC6CE2A1DC76424E325B
88AC132D54A5A908B5F2A32F38960F407C8F5ABFD6A52297BE877AFD483B7A2E
45D5CBB01020006C76396B1FB8ACAE10E2EE812C36C1E2B485259EA075F25686
927A0A136D522889627824ED0DA1BFEA292DB4D909B48FA55F73FB9648B66848
EAE89CF668D0E0A1DF7D08F2C5920C97B1584B7E0051107EE778B10EC2C521A5
3FC09A62F2A89E84964B2B68602D92E9EFF00404DFE374F5C40F7C7768A67B86
1D5FC2887F1635AACF2780A2D326CECF8B700CE9C0415271514ACFA19D2B9D2E
2E1EEFD91564F0AC54D70F8EFC63B94F73ACBB4CD279716F62A27CCD39244086
50605BEEDE2A68B5B6105D8761A750AD25750308A8F0348CD1ED0725AD516990
B85B5C80B70D1D5EB1BE26422297188DB7566B42A4B0CB64B3C32F296FBCB5FE
EBABCD6C455A139D565F8CE5847F76F1A7E16FA17CBE3F977509340FF834EA21
0BF0CCD3EBDEB0DE076C213ED883C1B4C6F98256B66E608AEDB1B6703244E990
9CD4A49E4600DBC7FE9A727D18EA999ED2793B5044A04E04279AAA541D26750E
85FA093624E31401C0A139B68C1936059511BE83E22175FD33DE7F72835EA926
00AA098B44C0A422D25FD07EAD975D4C14CBDC69B74E55C113EB226EDBFA60AF
43C7D37311FA695AFA2D120979622DF0B55C12FD923A42A027681EA5DC170DB7
D66FCE28DB743BC92B2EC376370FD355FA08C74EF272F49351B2B7870AE7F577
4ED4172CFC330E0BDE88751CDE48A55F4E0503D39165A53031425C5E1F37426A
DE8D6F00421729DE4DB2F27D9264336152062BF9C1F7C506B1C7D2152683D4FE
7CC6AC4B33741066D8931BA1B8155793703CAD6846D687D10713BB0097BAC6AD
4AD2D77946482FBEAD4031D9AB6265FB6BB647FD9FD95E0A2287A23A0AB26006
B5C0940459D185813D76680ACB091CF8D18B6063159C32943F0F6E73D8A0F7EF
263E1949E4D64E1E0DDA0D4DEDABCEEFBB94D35FD6AA23331BD1EA8D0258AE75
843EEC7B5DA65FC5113028F5CA15C2FF5AA7BA0A0C4DD22B38B62EA22FACE1D1
79CE454DFF93669606BE8C5822318FF299F6967B7B4020B64FF37AE7F91533FD
CC748D4A2A0AE8620FD24CF4C248948E397F8F7E2499453A7829EF715B07B78C
A642D70641EEAD894385C29EBAB74CD0B46A97C588C298F92C73A3CA86D60960
CC465D8B2E2FF21241F38A4966154285C49E1046B824372EE1E2B00C53DF9788
B45591972391929A1D45FBA91E3FDD00FF97794144F0343368A9170BECE87FD5
15F09C81DF5C6F78E428F8061774E99961273EB9E4CEAFBCEE8257076676FBC6
38F830426328CF13180FCF15219F6AAA2577DBBD57648E398F5A052751A5B226
884049AF67AFDC4A9828B04B090643FEAAB5CDCC83BEF6255F7B68BD347BBAE7
EDF985A31A59D1D3A011EA04EBF7DB3B517B3FF2B21C4398EF3C4DAAA73D2E9E
02B7C7F7C14C7805C7908B8334BD4FE842D57B04423FD0DB3A43EF56DFA464B5
7E4332F3DC5D5E4706C542AAAF276BD5E1D3D94EED3455C90F1D36E21D52A210
FECA5F50626F2159CEC144DDEC907CE0F426523EABE4F77143EBD6C7AF0DDCF8
2F3B9D3F19A09784794753076928F9867BDE889FD40BF27D33F234424570C583
27093E1BBFCA3FB51F3756407076291515826E985DE89C5E0D7375B95EC14C73
EC6DFC9CFBED73EBD70DE13443F8CD56E8D3510D3A2DF245B93F5A05EA389DAA
2721AC6E6BFF0015EA347E0F9C13FAA1FBA84BF4FE1A22CFF901CEAD1600AE40
42DD324D471A4D7A6449D75188F3F600D5FE70576EA4200A22D3A9E409045548
E26597DB0D49B84BE1362D29F523654DD31E07BA3954B288CD9232F88633A933
830B43783571ADCDD2D2CD922A19655959CA79B74895C88B769AD1604CB862B7
2FFA7E7B566BCAAAED470B4E2C6091DB70792B1DA8F972FBF7AF89198BE6437E
638FA41916335331DB63246401C56A3FBC11FAEC8EAFF09F46B07FB5EA206920
66C49523AB41242F1D916ED69D1B7FB6EEF9B143AEDD72B66B8DFF757D05048C
CF86D9C2503E2CAD2716C778BE25810FE125B5C289AA53571EA1D80C46D6C4F6
70A309901C67ABBC61FDF2ADD52E1773E48CCA68791BB3EAC35A0F9FEF8D15D2
4510A6AB4A2B8CE67DBFEB7E1DAFDBFC032CCBB03D0964DF8D25F7BDCDE7824B
DBFA90C418428EEA7FE8502D8A61B50F46B5B9122FF4324EEE370AA99FEDD233
0BA2F38CDA9EA0AC1EE47A5C70106AE7DF76703FB9AD2773972A8075F7A95632
AB02B88999EC28EBE10442617829C58627F62C3D658468E5C82631D52BA0C291
71B40E2BC4E567B4DC63A29B08868662A878270D2FBEE37AA230330D81EFC166
DFD5333398E07290CC693374507079698C07A7B9A821AE7CAF850CD09ACABB05
32B101D2206EA79309A7F87B1F8052B4C96280F684DB64D969015B9BF09E2EB2
7D88CE83FAA4C84106CC175280FBE13452439FA35772557A6FB3D646461BA24A
0313720ACE3287858A257253A706922273FDCCC030E18A42C47DD0FA1EE3521C
98714EC451AB5E52F581C706C8AF4739A2E2EF9F27A0019AF30A4F7551E72225
C12B7FAFB9D8C0238645C253E713E1AABDD1CF7E05DA9BEAA7E70B4C0C5CB380
7EFABFDCF9F836D144143C2BB3989D1D51E2322426114024F0B9320664BDD5B4
155AF20453A685A329867D8165CE82B70C6B443BBB8FF6408D1F434E3FF24D03
18007B759391DA5AE8EB340F6EAFD3D36EDE20B10EE93517665826A01E9F0C9B
44544FEE919B881181642CB1F6C34FF817FA8E8118AA593F2CD122E16010687C
CBA357EC5C1C77239733D652E530F6C4CAEFC15D5D7BA5444EB942582DB27E6C
1A5589717A5C551D372AD585BB4189795DC7DADF2A16E3969A424340C5153D72
B41953605C79AD88E7A914FBEEC22AEDADB10FD7EC61BF69D36ECE3C13C6069C
64B22F4460C76A9E6A6A1DB9213C2142AEEA0B692ACA1E819ABF8EC8AF7FE6D6
832E5BEB7383E249556A7D03753BA53A7804273BE0BEC782AE5B29D62ABA4BE9
948E84025FA69167A86D69E941C9AD6125A56234A96C6AD33F56C836BB8B8482
9B757D4563DFA8FDC2A66E45C96C8FFFBC318EF3671FA87B9A81A3249FCD0540
EDBD9496769CD6DF3199C3C549CEC434910D8AEAA207BEB7A8B227217A257659
0FE65BBA5AF39B237C53D32176E0B17A5F655AB09187840857DC14178B61206A
62F645EB9ACC9FE97D51E89156AC916FC29DB487A669486DE827DFA3C487FBAE
BFC1A5715B00D1495B99CBA96ABA9147ECEF29D69BD30BA4D9C5B425EC8BA459
0DD3555C2E4BB60197FBB2324B822D37F466A5693C95962D6AC4E187FC382030
F37A20E9EE3A281CAFB5DFFFE6275522376C8C335B8BBA0DE33D8C465362CA8E
91B3C759943797C24CC83176CE29DF9FD28162CF3A762A40310717779DEA5827
40E49F0887A0C17907788ECFD84AC599CF9C38E918B17E14F875121509C8950E
7DBC216AB359087D8B27F4F7C38152DDAB8169CE7950969557336AC8DB3B61E0
1D64D56E8C4CB5AF3CF719981FD9E8EBE567A6010D7D07A8BDB9FF47DA9EAC3E
8F977C22150E9DC4D491B11A57871330BBF61AF0AAA514B1A496AF69E0C2A56B
23FF3DBA241ED043BCA98686137C75E49C91A533B409E0D086629220B4238502
E63A95E4064CD4DC5903FA1BF5CC34C891A8CB5A2315B858A2F1FBE5680A4013
76701A40566DE91910F18DAC4CBF2A115403A2E98751715251D4CF99D8DB478E
0B6D84200650870F0B9A39231246409F64587223CBA0011A7A05A875DDACA3FF
ADB7BE87446FAD6548D0F2F04C66CF7E1E27CB13D8DFAD0E258D61B3C4F03884
D52CDCB5CC88AAB0CD130921560822D8F89DCA5B1802B72B1EBDA4E8C577857F
27E6671E663C8F925F1926F3A7B652A85249C88AB5536A25751496FF2DC1A3D8
7297EB52CBF0AEA353CAA77040D3798224136469E565D5CE46D200F776ED7916
74D804D07174B68CDAD6B684DEE74312D74B485379FD3B17EB89DEF4F8A058BB
89C03CB49D0C265EC2511211833F8C475D7BDC3959C334724858532D7DA349A0
85E560FA3A13FFD612BE78D9009DCA1E8635EC99CF31C670AC326493BFE78A4B
3D180613A337D8197EA627089D71EAA4E103C8BF03E66F3D84C09864433FE330
202D64F17FA59D0ABEFA11CE987CCE385A75F01AB676E600823FEC28C30D2208
A868EC0D0082DAB53B06017CA640FF1CA71025C1F53713226D0A59D2C0C8FA49
F5377E16806EDACCB60F0D8085FA97FE6C68E4E9BBE4AC0AD95EBAE53E28EDB2
678C3E34B413BBFDF1A7C5BAB3F09769CB0CCA5B1CFA6A01DC0EDDAF6CB09B21
22F0EA43B63EEC52D32EA4B9F551F30439ACD9D0A29CD2F27816A9E869703F94
EAC7041BB08566DC1DEEB639F3A3D283728875776801E720575B4FCDBB2845A2
37BCE58F07389718877DA7599DE0AFF6ABB520C27D71813F5877A8561FC3B716
A8AF83B9FAEF975CAA1FF43C57EAEE1C2196A14A4D6F646BAFEB7C19098C9E2A
5182A1D342F765C725ADD7B0D3769CA55C5BBF59EA720410CF2C71E553FA3B4C
E88FE8F9CB823F098D47ADAB330BB037D75FB099836FE30BDE75442B231546B2
6442870B5843A6A69628B40736B1AAFBADA2DE6F39CD5991304300734A9E46C0
D94B3911FFA435B4560DB12A7687ACC61B7006B2867C7E588D43E047676E8174
4DE1D89FA1C947C4D34A483CDFE067EE6B3F7DFE0ABCEA24D63DB8A583A538E5
13B26906E9E6BC229D511F324E3295617619AA99C35791FE45F069B7946B5EB1
D7A5CFCC0057DDCF07EE0D0E7C70D1DE8AF54F89E52C7FF1BC6121E346276165
F8774F02A5CFE926BD4891985D68CFD7AD774BE49CA1C74FC929BAACC1D9275B
3C3CC4A76F9D5C43149F87414283FC7AE67D07BFD4AD7D7C4574F0F05157163A
3F2BB020C5A23E03EBEAA640CF23D89D1C2F0FFAB6484D2DB2163F7CADBC404D
407A616D6C0517DBAFCB571802FCC57E7C01E510D507ECCC190832266609281D
84CB8363536C67F00F622D32DD9A0656EE7273EC391D3D306B9150337127C606
8B9C79A4AD5C1991F7977C9EABE1F5996D6F2B1CB3462FCE34CEDB86D1A59923
04E476CE1DBF40FA8A4A7B8320210619F4FA4CB8003758487E60AED0E4D36021
26C40D56F36B7B275EF7F771B6DC2A4A0200206F5C1DFFE78F9FB4B79A06680D
81C64C56F77994EE615767510AADA4364CC2035DB3CD08B10711084DD9FA6479
2B40AAED1287E8AADA2868B5E11EB99A42CAE72A680B12E95FC462DCC54C4458
7EC297569731F719435F2359E372DF28BB7DB86376BC7F7708D9DCA34A577EBC
E94F16964E6C441331B58C90BEDA80A20AFD465AE9F82195E1E684CD9C7F7303
D3D810D4914B8AF9A1983C44B900DA59472981C137D7CA5EEDA4FA3059151D7A
0F7F55A5CB694336732534694A184539909D5294C015CD78A202392A840C0321
5EB573C7785B85F11DB67DD186A92C6EF1F4931DE0B7C7E22A39CE53FABB454E
ADF058B75FD346019D2B86EB21FC2BC6F585B621FC39F4ADE40CE25DAD0B3425
02A60C0CFEF57A93F60E383D2A03491BD1D7AB84C2DDCF5DA974B2068488AE47
A9F079D7417E3605DECD9D47E4669B250CCA42F8428E27DB4CAAADF3B50C42D1
74AE261DBE2EC7E045A26989E420C0C0711FA63FE456F6ECE4D25E13A1FE5E12
84DF66C11BFA894FA50EF1BEBA5095045ABA7952457E62E4081D5D5731B7A971
4834A884A4957B1168D1E1F46742DC29BC7E84290ECF14ED1392402B3726822D
C682C601010A023F6B59281B91BAB816434577E380D4407D0BE8775E1ED00657
B4181134CB88476E32DA4D66981384DC2E6371D900A42E030F2B4381AA5142F8
B8F8FB9EA30D23494DD48292DABDD3AED5AFFCF292EF387F9A4024927ED393BA
41CC569F78BD73D380C572E5087A5556397E485D114FB91D2F1CB2310DDE1BA5
CE2AEF31EE9C79E4F150DEB6EB37996CCC4847CF2019B1217BCBDD7DF302B8DD
0077837A8237F7EBF5AF326230B80CED913EB6E69DEF09BA451A28EE62F05FDF
6C538E055B61831B9FC0792BB6E2965094EDB97DF199549D54852AA8217E48B2
B0BAB2A9A77FE21F478248CF21986DC483EC4FF27307585A474BC1F0370307BC
6CA5E7CE474F62D5EA99A9CC556229215AC23358698AB2A4E7319B9FF1A7480F
80EC4A178CF08A55FB4E2D527FBF80D86BDC60DB268EAE4450B761E5D3575F1D
961697B5BAA693295F98AC07DFB9C648B0BF58724CD2F37B177FD24EC26F0986
C5350312E62601100995599C65393BE11269C8DD7247C96D632523256DE4F0B4
BA15AD718CC5E605CD6C3C5A46E851536CDDCA5B6C18BA30B7AF5F9FDA955437
BB09F0F49265B094B7A1FF318E59D899C05E423C089EF4C750437A96608C11BB
0902CC9E6C93F62E5E348A37CB440C6BBBBA5055916A702AEF0B3B94BD6D97C2
82B086A3AF63994EAF506DAAA39E2B7D777E8A10DB921C86FBEEB0F238F7A384
0FDF6BB20265461DAE6E57B5C958A54B43ED6AA765099220435221B68BFBF3F2
65B1D1A1146A91079B753C8F021A418D3BC19ADEA42AE0AB3741CE1DEF5B751D
3B44CAB8E9ADEEEE96C2499E4D5C40DEEFB9EEC8853BB3E2BB9AD5DB804E973A
275571270A612826B0E61253F8DDF4AF35410B0E8ECB71ACDB08D469FA914C1E
D1B237EB7345E523CB9AD2C26CFB2671B72D15270CD8CB1D59CA27D06DEC51BA
0E3B73895A45C136704094A97F5F335EDA45270025A823A88C7E731F647895CE
CD96CA4A2FB0823151785CED7E829F5B18B621B99B494EBA7C4042809748AD15
9F603E3F469FE2227D126A9AA1FD2CEDAC61D6CD5CD5AD0D67B9DAB26FB40C62
9DFC98E644F5AFF9BF44BE49BB740FC4EBA1C8499D31BBD645972644E9C53BB5
4966DB71B23B0A9CF1F1FB873365EA1FCACDD36E46DECFA798B6E803A0A99CAB
A87DA35B532BCA16C510BE833C306EE8AA00BBD282C6762F07FECA518F598588
6CEA2EC4F11DD771EFB1ED519E2252A8110547FD77535109A3A0E68DD06347F5
129C454033A639C2D4EDDC0B3A5B2AE809E78AF0299948B51235A529766FE954
E0D7B2F55A3C57BF673D0276707BF3756FC97D20E7034E1FD470F36930FE447C
EA6BBAD9AF531381A0D4498A70B19BE983F46743DEB35DA63A24D81C3E5A9804
EA61472E0B7C84079D8C0386FC64BD8C6B3DF99D14037F8800B4FB8C4CAD5D2F
3718A2590BD1D0A6D49E62478FF7256CE9352DE27C86BFD7AE2B988A390BEB35
2917E28C85B86A43776F2BFE4CEB6EC3DC2047E83B6CEB8E578476FA695D2ADD
7C36589B1EB8917C876D7C780E4DDD73C0C61E384FEC29A28E43DDFECF131E27
A82FC1B8BBE36315E5C3CAAB8207AB962836E6CD43B3EBBE0FF0E5955E1A87B9
C98B986A4A800FDD3858D5F37D82BC4A7ED4D48EB82673764E076EEE81285FBB
3CCD86DBC5251D2D384837D542609E4A0E2A68646E9583B6B9A75C95840BAB3F
E30F448D398ABC61902608619D9DB9BDE5755BC004157571A6246FCCFB4C5CE5
663CB4883A9220F39D0144B18B8BCB9E0B7240BCC29C59A4D84770FD34E97E0E
6CE2CE55D85CC51C2F4C49765549198486E1420C007D93BBAC982BA82BBC2A17
9C3F6B63ACDFAAB1B5F94B35937A26DA0A486EACAACC508B9D267C79A9164647
8075E259E918CC52A84A52A686DF87BCB59F4C395D341CED9DECAAC00877DC8B
0627D7319885FB2AE0E2E2C9FBCDE4B5A5C54AE61C0B63D478DBD9D1F904EB69
59B1D3A39766545C90243D05DBADA8AF7B55574CC26F4B1DABBD0AA2330028DC
06ED4D34A5E4A2F4C5A85BBDE0A289CFE590879484C229ACD941918B6554DFF0
2340FDD61392BE9B08AC79A97E009D6F40978896B8F7A0B472D1F9FFC68F7AB0
7F5628AA0078EE24881E12F14EC441320B96A8CCB09E3B314CA658190A354DAC
0D391F423C16690D1F50D58C2B61949A5F012FA15EB06BAC2957717DAEF3986D
42CE961A05A5DAB4C473CC5665A315BF1B163C9BB372AE663ECF01941C2768D8
0733E456821FF981702745D81E1513AB2936FB2FC5B96B4DBD2887DFAFFDC16A
CC0181DF932DA86B8BE39AAC8BDDDDF5625C61972D35EDDD2A7959225DAA397A
7BB4C82A4F1EA6C7682F1CA89CECD3CCD19ED1EE234C9E8B874F03F423459E59
D373C12204C69A5CB69A5A2AA3AE147AEBDDBAEC2278DEF6B3A25337B95AA2F7
686797569D918E9067154248AEB3A2D30586DF9B74149C5F5242D3CB253C36A8
4CC837D76B2BA6F2CB1126C61C85E2C725823EE5D260608D70D7DD605DA2CF61
A9AD9FE92290D6A0B3D5AE24E25393D501AA2C314AD96BA904EF327FB8B6B102
74907C8E9A28945C75A42D8F150CF2A6A20E81D81903331AF2EA0A248016BE4A
CB6C50601D15F422103E9665B2EA92450EFD0039F65C26AEF49047078B06C8A9
68F278BA7BCA00EA900B237F60722D2FCFF856FA5F423972AC19B5BC04DF4D12
AD056FEB7DA7468011420DBE034D5AB67817DA21F12136545059FFF6B335C547
00A78C7C9605BFB0F0379CCDCC5074AE47CF016E3B3AD1A5C090108D4964C7FD
5E57B7B9E41DA4BCA6304A8C64D2771F67CA490B4C76C3A8CBECA28BBA1FFC28
AA0B2660C443D24320003930CD829959F5EA7B75EDF72CCD4BB1D84D1BE81AE2
EE6C98ED67868DCB84EAA176025BA9473610A41FA2317A4C2D8A81445C4D7682
D1A0AE125DF60CFF05C7454B82F991CDAE075989A2C997B124C1AB303E1C8AC7
CE6FDC9AC1D8672538E08A8D2479BE76477E5193944353796D86AA5E2D8D708B
2DA4315C703763D6B35A4836A2AA71B39B7AF7C744F894BD39DCAEFBBB053684
1ECB85068A365DD2BDC60496B65715DD63A14FE70BBF7EEA5114584A91048F67
C655B8D95A9F649546B51149457B8CAA6F483C4A0D686245F46D432299F87923
2E98F9FFBC326D9D0B73DD4F4006473F525372BDE229F1BC277751454170B6DB
CA0D9FBFA85D103528A79957F00BF8849A73B9D49874E6CD71700FAB750E41B7
7997BB57C3923321C9D354EDF6661A7AB697E40523DEFD62588F8FDA892E88B2
246C1DB16BA9CD3050FCBB2D04764B751500A6F3AB7A8D39A62BA6707A896EC5
5D98E82E3417677CEE755D41C6192B1623F2759EF572804409B841B034CB2382
8A19AE931439F329D2BDD5E78B2833CE36458A6868587A364E5DE5728E02E5A5
3629ADAB0817E3035573987B2AE56319A6E235C768562B4ED040B050721300E3
A2A43B7CC317DEEB3F89E67D5EFCDA9560134AF22DF5DA92FDADFD2B68A43066
2A90683655A668931A02B1E2F133686110E9F7F446C409A009674D3973F49E02
479CFCBCC6F3F44483EBC2B0A4428FFE3F0A1088EA71BD2DB74105301D09500A
64937D5F50730F87461D8166D473BF570B3DB7EE8C095CDC90B9FFF47FCC219A
2556169FE98FF9B3CFDF3FCF119DBDBA916602E032521102C48CB58FD53CC14C
A454274048C4B4FCB5EDB4621857E3D7C5274A91C1BA12B089720FA9BD9CBC1F
322A39EFCAF585107BD5A5C188A4F7215B2B0B1A7C67C3FEA42EB54F22E9A730
AB8D4855BF8C7939094180813BD2E28A6186CED87E55E5EFF02256199C17D9C9
26280C366E3242D2030B576F5B789F741161CB5568F00CC22CC3338B8D2E8CBF
B5E858FC7178FE51445F379E6E25C528C84EB94938BBFE8EF56849691041C74C
AECABF8616AD95FD9ED3B11C918BB38D13CC8B9740C38207AF9F7F3A479B0D3A
6A587952E2FD4A9F3D13C5028D0F35B01F081084D92EA30AC2431DEECC682C28
0B4BAA648B722688FF72D47CA87D03ADBB9E181D87F83AE2F256EB21595E795B
727FD7B5FED0B59CCC6748CEA3F4C904C19B7456A83B17083469EE367CC1FD8A
1070B03CEB7FD7ADB4D72671135435609A235501E60AC3959B8F01FAC3F92ECC
CE092E50ABB573C1E165BC64D7741193D80A5D6A6D2E1E26746A94A779EE401A
8702FE49721AEED75D8566DB7289296E46845117CFFF22FAADB44F43BD37E570
D6EB12BBBAE986D79303CA403DD23205EF12256B13481B59AF282185C7CBFF04
361995EB8A11907B246D94B12617AB50EB5A520CD8B2844CCEF629A90D318A8A
0384439B38D63B94757252062EA44B6737C45B727194144093EA5553BCB27643
E0A3FBA8AF062434F273E1C58A786564ABF1C6ECDA857DEF70511B359F101A5A
71706506E71315B27AA869B9E2AEF564F58479DCD812836C9F7D03157B38AED5
81ADE56F84C5482816E5AF8026D15411CD48CC6C3D7E0E41EAF61191F504F809
1F25A923EA9D4730372E32CA0817B42639F594658E439E3EF1DA39316309EE92
7BF908D57E0BE99050FE4B198542B093900F05F22DD65388E04D1B5B2FA35699
496F1A11735968BD0E06478F2B489B0E9B262C6902E7DA67B70C5D841AF76E11
2AFB947365B17DDB1A85BC4D7F1088D410AEA9CAC3C1C46158F508D7AB7F99AD
D77EF0B1D9C5D34017A12D8C3F1DFD0B90AD438A22F579F2CCDB381F84343DDB
171D5983A2038DCF160C2BB20CC80B357152E49CFEA53498B4A8F79C7AA87B06
24F57F3E11F2ADE6B0BCF0115B22E5DC4AC9B7F548EC241A2E48906A5C032629
C85724CC1B73E3AB241E4E95C8D835774F57DF396B2470522A8AB97B83426FAC
81E5336F5A6B4E7E84B46119AD70E23350C13A50F6D110323B8E23E195810943
D04AC52679ED7C3B66FBE5CEC1281F967657B844532245117DF5BF0C4F6527B2
A51C29749149352262096BBAFFB905CD432197FCCE5217C8D138D9E07D4FFDCD
A4F4CCA46CBC2C0E86E4DB8F5C31418FFC78F94705CEF9340F82F0E079F1C720
0DA0E6977B036E69FC4819380FECE3EA452620DD0BA89EFA4209A0D058AA854E
2F401B2D22E3BD0A364F4AC9FE64C0836B09C674404C1D90035EDF5DEE6F02CD
D1781911E07C871BC80E60F4404F119AB730E1B4296A1545420E633F0FE9A9BE
A672FD8EDB02B3CDA24BE5B94F4D4C0FAB79CD0D3E7F8E7200E4EC76FE338370
0A594ADE0E9D59FF37C4F4E6E3EE2EC4425B0A4947CE3C4A3EE986616449FE09
4A5F9041E619E37CF0B527D14F008E134FA0711FE40BC8A9229310DA61AC1800
420466231A3E85E398E5E3C17FDFE6E417366DE2EB8262B9F8853186E6690AE8
FBC87D544F6F006C11263A0B11C7D838FB6135F9BF8DCCC03323F95C4AFF68E9
97B6F7BEF0C52DB9469CFC0E9E9A6D795FB5141392FEF6C3EEEFF10DA7017B72
F57DC4971A4859C236FD6CA218A1CB03FCB945FC24376A45F2DE0C21334C6CB4
5BAA486A85DBC2F45566226D9EA08B48360A2E9E089C40B2123936DBF7D6E0C0
43CD6D918C8C67320B294C2490674A8246B77CECFC66F3627E15DCF3FD645BF3
F57CA13C47550B39DF3DBC13329090DC59354FBA9C967004E9646515EB8FEF55
DBF964A5C2AA9623B8674A251BD6C2925E38CBE6CCA897724AE8F908EF485539
C3AB41B36F01C6710BCC3064B3896E28AE7389D260CF04DBF2284E7EE1686F07
9F72EEEE0C0E225B9E736C6771FE2D2359F2535FA1D1A508FB5023D07D392FDD
DE2AC30FA1C7796838BD1F7F090DE03C365FAC069B41ED9AE024D29F5FD4828F
9292757D471913107ED0F257735563A1B8864C11E96D81DB9106D8C91CFDE6F4
67B26AEBCBCE19DBD76128C53034101C32555C3ED435DEB56526E19B4902A640
513DA9D5C32BFAC73D6C174EBBB95385444EE30D969A1F0B620E00CE29C4EFA9
548CB450E12BC8B4BEE5E7F220B7607B853840CC0A296F593060E9CF41D2B8DC
10DBEAA47599040B8DBCF17ACA51256EA4737474941F6AC3684BE37E4DF116E2
4E0B2C3DACF2BB4D4F11C5FE4243E037335996917E4A016C5B0D77A277EE5A0B
A86B250C9A68B697832A05A92D139A80ECA6D61BE7D20CA221758895F8321167
12218F9741A9D0BC2BBB60C369C4183F610D8D50CD28D96A028BE7C67D1CD148
404CE30DE9213E1890C19D635F88DBBC73AD3C77E7D0EC1C2534CB9A201D15AB
FF0F9B898CA7BFEC38C79E156E5951847483D1F4EE53CA25CB103919C95EFB4E
1951963FF98ABC1F5F4DA8666407756E9A8493C6DC65A7C3623AF7619795676C
2B4A1C980FE488F8D49D3A4BB2B27C838A1EE9840592F0971730371FFAC10F5A
FDC7F9B3E00D753AD1672FDBE7B89695B5862C96EA1243561331C2D9EE7B65B8
258019BB8C5AFA6648411B5DEB230DEEF8E09DBE901FF7DDFF2394DF0196EA4B
CB09F019123AB92002863D00FB997D9A7F928108402DF39C62DA2EAE8BCAF81D
BFDDD48CC791AA2F7760754D8ECEA334EE267256720D6CE4B73B5ADFAD06744B
AE758B478EFE5CBBAB5138D6E4ABAFD6B8D7E14B89EC68F4328916B0033E155A
AF48909C3572E1DF50093B5BC70574DCD9B6A0297ADE74569C1544F7CC3CD160
7BB4E0A1A7A244B1B309A2858EA712B5B2890A960DC97BDFF6C0FC5934875461
D959267C6C2E62E6ADF39B97C1EE38A113C03A4092A3BD5E58155DCC904B0D25
C18F3CCF11886D611F01113757C76D3D27E42019734B4694A84C5659BFB57032
1190030C65A64FD4F34E95F3AFD46FC726F83082857F0352DBB235D7F7E799A3
2B23859A4CDFB52C22ADB4DB30D313BD85B77F85B142D255D9CF6EF11271FEA3
EE1C24530AD3898DC8A30A41A99E5E09087A89E255BCB6B83201298C09F53105
BFCF09E533CF65B356A8D902BE94A449C5EB8BEE7CC0593D9F6B89968B1A8550
A5FD751E70531636F688E0DC479C6184CDF4A61030C82BA7876E382568846D70
6B4CF91C45816B9AC1146B1BB7AAA74FF92F4273B7BEA290808349DB8ECBF43D
B2149627D250AC3F036BF13A84BB0BCBDA4B8FD30EBFD8E947926A7AD4A39C3E
3A1E4F0EA22D12EC3B15060C553536AFA1AB550740F7291B97481FE070C5563D
8B869B07D3DC15B26A068ABAB899F39682F687343EF61149DC3BF556A632D10F
0E070E933BC5B1EE1C2F5278714CEE716D1D60E45895632103A6456FB576B949
B96DC704307340B671CB454C2C618AB399FF24BAC582AD3F7DD4F42C692F7438
519AAAEEF1016BE0E64656A9672293E79B4C52CE63ABF9B840B8FCE217B77B65
4FA8C6FAE137AB0AEA1045EA8FC0DE95A67AEEC43D019F687663ADA3764F11BB
B2FEE232D4192722702938BB507902E7235609BDFBAD62ACEC039D378704FA46
6DAA91839D038ED7CBBE6993BB7455CB374C46319D6339FB76BD776FFBE44A0D
870B50D5C08E42C27F20CAB3D4837D5C61442D7AE3543F3EC5C349D20D4CB4EC
0FE32B7AD77F1645EFCF7BA5E07C667227EF142D04C6C571E803F077572234B5
E42D053482045F9AF9790D85A0B33A8546386B61903D7978771D8C525A411653
B23EF20A910EA98EFC31A04041B8A3E4A901284F589BCB9711B603E4DB82C3F5
37C0AFAEF1C3C82B483BAC09D66F7F32C88BFF4EDE18EC80DF2A54210D973902
2860C602FCA3D467865B963C6CB6C2BAC0238F0A2AB3DA276CD2F9ED7B269923
99F7151E5B56F225D5F360452FA11ECE8FD28A9D37D1EB182F0772719B6F398D
B7B747DB49CF65B2B9A0705095755901A327881880298D9DB49E04ED76A75395
2B33B4669F562097A2EC39A7CE24DD0C116773EC684F397CAFF417D6C412A8F0
B0A50A868AE119CF0395260EB1E24F51F3B7FC5C8741768D52899AE8DBF82BB9
4FAACC6115E3B14B0E00E48343ABF323976BF818E8C1D9B0453B7380E1F4438B
37A4B5AAFF0A9E8578F682E52A496CBCE3443E97D8468CE8F1BD0E941962FB9B
BF8B8414CF48224A2CFCFC5CD37B5593114D007A0160A361D06F65A71B56E3FD
9262C51134B7EF26D10EE05685EA4B31E5396C4285FE75103AA5808BFE182270
3371FA7CA0471BA96CC44243CF4DF72001C1F094DECCDD9F43AAB88640D0E934
788E2BC03FD5276C6CD7F3B16D23257DECF0974678EA5C7160A66234B04B0310
308C22902DAE8CD6EE1B33BBF6AAA157945BE9186686583FA8B733579DE8AAE8
08C893C18355E7EF2DC1C36937123329824946320837A6F8F676676127E2CCC2
232674924E662B27AAB6D57C09F26B1C09F574A8D39B97395B46C494BC0F5C1F
111B48BE82B8E72112D120DA2922015508D3D2C5539038282622895B8C19587E
04D2F8464643A2D70200CD8668AFFE056BA4E83E830830CE56CA9C61CA0278D4
F95DA454D0EB81E43B9D4BE10388452A179A711E374A7A0A02E4EB6025071F64
7968ED4CF408AD2EAB027B77952A40A24492FCE57AE4D799425D869F75A82E11
7CB23CCB5DD5AC1C47108DECED18EBB01D8637EAE8FFFDB7356D21257EE38991
D612116C9B9732C4AF86476579DF658AC6B29DFE38008DE2EEAFEC10ECA86DBC
D675244FA279980B91B1C744E973890A1A610551A724ABB6B01BB5BD1FC5191C
9C0F4537D26635220FB98495B2E4CD4729AAF9B80ECC6BE7C6B914737AA5CEA6
BD1810DB78052DCD299EEB9428A381CADCB0655FAF3BBA11181556B22414DDD6
C97818C4E80E3C26FCE96B24DED8A0DA83D58D8413A45EB18A56D0831AD6161D
CDD67FFB74C773637429CB45EB3ECD1AAEFA09018EA13E7145AC5BD6439930D1
68D60FD35D534EA4B18CCFDE020B76AF50EFF43A273D7BD0EC942875C6124A29
29C398910657C35047F319DF546D864BA67C48F95F7E0B679C0D5FE02E0CF9AA
45628844A542718E1683DF0E452D5BEC576F18A38E3C45E186B8EAC1C8D77E54
0C187B06C8F53A1671E87B0DBB5B417137A723E8AED5CDFE3940C0A3B942DE04
1262F04E6FBFCB61D418C8B83FAEE7B897F107662E8467FAC8D9E2AA0F906BE4
72A6C97A4FB2C2CA4E89F6003274118D0B8D1E0D16E4B5C23BCF60F05E76FDB3
86C31B35A7C9DFC6A988910CF9B04A0D7F1783EAAB80313773E1AEEA857364EF
DA10EB3763E9450DBDE6163D435C4B87391B48D38FA18C3C393A3F46401469C8
34216DF6E346AA93E4203538720ED65B11AFE277481B78B1DAFE89B3EADDBC52
EBD0DD07A8C4A68B7099420F5C3CCB21BF828C1F0DA1AC2494FECFA0941FF720
ECC3F241B3E281BB5E78FA9B2DF1E127E2446B80C353888BD9121F52279AE360
A9548A5681829CC565A712B56E226745D82323FDC64FBE8D4995731D19B47E7C
2FE360AE79DACB95856B01EFD944110203360F1941FAC5C151BCB073FF6966BD
9325DD1C565CA5149EB72643B4AE94DF0B25AB6C9FC244215D7DB781EF298DBA
6CB1758D22EE8A7680B01DAC1009FF7FD20A0D927FD311267BB33D43183649CE
A500A10E01B25FF5F6677DCA7F1C959023B655F22809D752B9BE87A343C0DB42
73AC81C68EBC2B8D9E9906F4B5E57FE0677CF99DB5F0EB05D6721391E6087C57
E8E85B7916A4BAFA31899FCC92FD8B51FE215E8735958614425C593E5CE3A241
76DF46F0BD3A5958376B794F2043A295E20B3074A8D5E57FC50203EE6EC6625A
BEC849DFF88D61AC6CDFB00EBEDC08A7A32948413F457058FC06244BEFBEB2D8
2CEC58DDD686FDA4382197C382E86BEFBE7189425C9001946C4B3CB974C5DEB7
F7D1FC54947904E119F404292ED6821C89B2E992A8BC39B738D6A719EBB7B5AA
F66866359A3E7724F400933CE8513C6ABCBC147491A0EB8BAE82C9F14E9F3B74
4B51DB2AE3F6BA80448EB6D0B6A8684436C85634AEBDBA68AF19CAEEFCB46E6D
D65747A981438EAD81C85FA3CF7A578C1217818CFD111E32142FFB160DB6422A
5884151A4239644B31E74B4C6845E3E6B8E600F5C6F70C493018BCA3A140600A
25C51B85D1535C7478549B57DFE1580FD8BCA46A244932BCD87E29AAA354ABBE
A21243084ECD3B3386B3400F570DB0B767F4E9332D1E0DEC683B555403F15206
F3C13260328B421507AC5C428BDE2320F7D402B4B15ADC328CC3AC493DE8C2F0
22EBFA14A2976D8E3234EEED6D88D23E7530C2BB5B2FADC5B34ADE0644C0F23B
B775F913649F77D74740BDDC09B2FAEBE1A7FFB35454544DA793044AA4A7F090
ADAE3FB781C6580DBECF4E15589C02884A712216A564384E3C32208368A9D042
0FACFCF49F3D691F57F420E6436F704CBC0A9C7299AF2D8719F03BB593307B75
9B93432F1A710625681DEB0AA4E96A46E21A6CF7145AB813EE98B34C06CB861E
9F83EF3804096686CB6BC7604D84382347522297D1EF900E8EC98150CF1F984E
972E628C1884D4C6CB1879CF83861FD5641D8C76A413FECD2CAC29F721C8ABD6
EAC332B9BAC967685E89A494F32D78674B1187A93B44EF2102AF94E418CA21E2
CFE07DEA46CE64D8A8853C695C665F456A944711083729A0C108D036C458F52C
DA29AA7C0FE589BB2CDD7C36589B1EB8917C876D7C780E4DDD73C0C61BA0BC95
D5F9D95F7484B2B05FCB49861F7EA05779AC07B6620E060A90CC422043B8EA8F
0B0654460B4ED946945BD03F4E47F96B61BA0F88E99544E109918AB0BDCA9756
9E706867E39C0E1A56B6CC0B676141CE02A627B7692278C1BFA5A90471B7D471
C3BDB86F519E59A0C7119127769132C6F6704BEEAED43C5ED8E87CCF5FA0C948
B7A388B26913EA6DF16B0DC337D4C5A33C6F9166B4007164466CEA7DEA7A0559
301281C6E62388AEADBEBE94185197E0AF8347DD1337681126BF8B89DB5528C7
FEE19D42B3031EF5BA8990633918F5A211CC9414A94BE79E2B266D33F03C778A
1A810DCD869D660DC33865B7E7C25F88363365B9BA55EA06912BD6A44BE069F9
90585122CD466383CCB6806ED53B9BA76C8277EA0299D4FF7FBCF9B55C326041
571E6E1FC8DB900F977CD9FC6A5B91EA8125D422D9907BF8DB416935BF25534E
F2624694FA389B0282C1602259E6390F359CF18F039F3026354F553B1B947B01
0C53219B7C5FFD482DEEE17CB8A9AB3E9D95368438D065C5F3A6A112882F7F37
638E5B2B3893392701C5893F2FA4335EF6B9C7A662359D8DCCE1D2B9CAF794DC
6A3017A57913CDD7960CD3DCE6FDC0579AD9AF1ADD6CF0161D0B6036E7F654E1
FC0D9A9A3FBA49EAA38A19E124A817DE43146AE4E04FA79AA91C814B18ABD2C5
5E64408A89807B2461AB5288777DB575D01AA80CBF2A69A38FBD40FB1344156D
E7712A41673F44DA2E1E7D41DDF779CBB3229F32D00F99B504DD1602FBCC202C
C8046ED50A417921A6D16DA08C3ECC3FCC369824089657FC70F4FEBC5758FF0C
9116BB0D00B6E24214CDEBB2918B9103DC5443116E4D38C565127A5E1F4A8C48
6D974A71CE1850D8087857E9E1724F3FF689C0CEAFE3E98D5590DE5756B697CA
DFA3ADF5AEECD21C4FBF0540A15D38764F638FE6D15B77B6DA54B7C3CDD08235
46BE4329B97EFFB9620F7AD427325B4998F156F54D51D76CF525A899874B1C20
16D6CA98017C7C118D8C67F71A4BC3C8794BDC3B8909B450BFC2ECD8314F99F0
E19BD6EE406E3ECD2C31F6C5FD4CCB61CC8B279A83B37EECE68CE511975D6DF1
DC7D21AC8F8B1CD8B2BE97272017FC8176FB0988008A90DEDFCE3088529A5C2B
FE6B271EFE69C67B6E0BE55E9E3C2BEF198E85BA6F0370AA38A32C33C2818E0F
BD751A4471A861F64C9FB4E235084327EC024E40A9EEF327E5021D3FB5D5882F
227F5EFEADD582C932F59D55E906AFEB8D2DA4B491536CEF9D1E9F4FD8C0003E
6F232E2F3118FE16859A40AD64A8C869C515A0696A8E3E169901FDED7B269923
99F7151E5B56F225D5F360452FA11D136F3D402293B12761ADD16130EE243D56
1F48BAE3A9A379A72CBDC5810412ACA2F4F7436FA46BA59CAF8946EB6DF3F439
84F9BE9D28E035B97D94C0C8E55495FB88275D37EE34C6F6704BEEAED43CDEF5
C5A9F5D5F2FB5EA8F90591785CEEDE033DCC88E548184025A2ED77812558E8BF
AABF14C2AD0F57D76028403AB36FB50498B7DBC3A645EEFDC0E2AC671DA069DD
7C0B1119F6F5A95280134F6D8E64BF46111EF94BD3138B8160146A65B26A2B90
5FB8E0602BB61D806CA97C6D404BF9967BE6D700946BD041721579FA42E87562
83CA0CC32CD7C9B84F3C23AE494E799846C3B4F46925ED47BFA0B135E0986082
74A07CE11683A470EA658DF95818227DFD4DAFF7A71B73DB21FAEB94966600A8
B7200C19D5BDFEDF886104AAC4BBF762842AA871530C5BA4A9F3B2F8CA73AA21
5914D28DAFF0B369FB7EF96899E7F9965C17D05FB8A178464FD7A844BF77C5AF
505969A7AC588E162819B65BCD3661B7412B3B40F245DB5DE1C7820B198E5554
1B63C63C3846917BE758926B138BD18DF56F3EB87DC1664068A684FFAC31B19B
B8884D88CDFFB699CCC2BBFCD00235BFF0DEFEC8A26FF6BDA210F357F00BC068
F10F575BDDCD7696F67213D54BAF87
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols6-Regular
%!PS-AdobeFont-1.0: LMMathSymbols6-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 417 117 0
%%EndComments
FontDirectory/LMMathSymbols6-Regular known{/LMMathSymbols6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols6-Regular)readonly def
/FamilyName(LMMathSymbols6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMMathSymbols6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-4 -948 1329 786}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F1E34D6494BB6367FA2B172011486EF5
844F5B89DBD01F38E82689CB16E2BB46A5E39043E718382C77B554CE0F5BDA45
B555F543B5A4669091DF58B79AB8A54B63C4D96C02C4B32021405D3A086D8A06
2E73A4A478789C6E51C058FDFA980ECB2F964EA385ACFC9A15416BFD38DD998D
35255414BABB9C6DD923B8E866EB22731B625EB76647E680B79EDD64B5B6D9B0
ADE8F024B2CE77FE9D87C1A1286ED288D3FC51CED96F6009F87E505A8B9D4288
4AB9134B8325BEF5BF60359BD06C20186FA72EED84622454B0848BB74A51C541
E9F8468308E20E4D41FE78074ABBEFB80E7B5B58641F660CCEFE5A36C7E1DCC2
862B5005575BF1D4A7845F976D9A52A7E2A33558953A65CEB6601B904A42E75B
92CF31D9B57842CA62CC666700C974D6C7B88C4E3D1A1B143DAE1E2DDF725758
E2E6EB357406DF364D2720E373DCE143CAD7FEC1812EEDFFDEAE20D75039850B
0314C68931A618291AD30A299FFD982858215E9CB25FFE9A6A805EFEE2B01B62
8A682DB0C011615552F03DB40513901CE59ACCFD6C2D6F05E2B6C8AAC7EE97D8
80BE1AF192DE2AD3600CFE96D7F2280FF1D7AB28635B3FFE975FDC6329DEC300
1F56A4424DEA4A64D855B319ABD08B73E84F536BD6331778706987D7AB15DD1A
4BD7C272B4A0B383C6A680B6AB91AF0A3442AA8D1F163221902D87F9923FA77E
3346F09DE23C25D4CA5909B956FA16229BCBC3FF36EF6933F33D529CF2847EA6
D3A482CAA539ACAAEDB0299025B307CA410FBA6D82B4733763DA07D521E34DD1
6523917F436B78AD360BAABDF2CD7016886C28EF390A51085691FFA140FCC6C5
1D7EA07BE7F71EAF563D92056FD6F12A603AA2DF6708C73D283DDD92B043ABBF
3DD2E24A4D5FF0DD4EB111616C102637EB49E17B440AC54D21DFB7B2411B2B72
CF35172ED4505DD175A836C0B599415C638471E3F0B4BC30296704D41973F487
D4C1B50A848F2E8C0A77E7FC13B044E5D336C31BA0F189C36F9D48CABEB786FE
A0EA4CF0DD9598A9036B749049229902B646FE10BF4DAA942280A326B0C4356B
774DAE57D20990968A49116A09BB7F320F0CCD98F2F7DF378E1BABBCA65215C9
F425C048AEC1C929FDAB375F3B47EC3157488ECF3EF7B3069EF25ECDCE357DC6
CBCC1EE0BC7AC38FBA8107608BAFC9DB86B570FDE7E6248B6EDB4ED358D5C45A
FF2A3ADDB1E2963200F24C20A0D1CA998BD258D1C694069BBD9DD80466FEF509
9993B56E1544A2EE08946129664626F0AF9F7E546F6AFE62DBE7DDD5D3DC32A3
7C5BD00DD016072EEEA098A86BA7B6AC9F23CF55920502D0BC7EFBD5CB140E02
C5A8CC261C06A7EF3CAD09AD5ADE65A51B6A915CA708D66C339EACCC45B962A6
7731C76AC98678B54E6E3A103D82F070F486122EE08A4870456161458B6C93A1
602C336D492C4F6A7635B85ECF70EF5733EDB26731D14B304EBAF0638AC6F539
C21436A7D25573FF22A0D0A0D452A23F35B688B79D566F17691C3E15ADAE0B32
D5928724D303A23819484A60305B58B88920CEA06984C65370B5ED6B7F0EC00A
2490B48D7DEE3A263A115E406B099A5C0C9572859C117C40E1883818F638FFA0
C81307075E817AB54644AE5B5CFE5D573FB3C23F20A445B43A5E8B41778D313C
FB95D5F337FFD07328565672AF18C2E86AFB4153C60473DBD16C9D39BC08DF9F
8ED8D4C25DA3D8A4FEF6F2E4C954C562318FE8C3B8A7DBDE8F82AA3AD68BF81E
205B482B0C4AB50BA6450E56AA8DB6DB7E2DD93B4759A32B6027EA855710C966
B7B3541BFDE160447700520B9C18B41BD46A1F8EFF45F926B9E1B565C0F0D458
67
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A110651F44213A09AA60FA078EA0BF223327112915
DCDC675CEC58EEB5505F24CC024E81F86301F3C403AFD0A9A11D8B480D4774E7
7A542ECC85D2FBC9BA961A3216CD336AECEC76C31AC1BBFB04AAAA21C7DA1CCB
BBDA8532929320D07646B8F65B5BA2F0E744ACCF23EAB3C9E0437A2F11AADC46
CEDB3E4E6966BB1DB680E66167A398FF146560E9149E638845279D7D0B03884B
153308C0197A5AF0C7005F6503160BDBDDD3E0EA1BC88E523099196F039EB567
BFB06BBAA1080BD883DE8D9798D30A9EDE6936EA527F5BBF5E663EB3C841021D
30A1B105B84A93E0E8625B001A553FF47AEB55E074E0A7EDCEF6F7111078FA69
FB13B1C5E2DE5B1C88FADF22976279F1B8285F5EEF195BA5ABB98A5D4359E63E
7B5982A26F1ABC0F78418C15247FADD310C58FC911D294EE7E91E86684176734
2F765EBB37367CDB40EB73F4BE5C47E19B535F7EC2AC101E91B84180444A0A92
8894F8FCA116CFFFF8808BA68094FA7E0D033E338E149518B5493D7E3500521C
CCE5676F5FEC5AD00CF74808248E7CA6304838BCEB69D1D202871BC2B15EEE8E
1AD13E7308928E76A815CB387A35DF5272A9AC765A0BBD8CEA4AD8DA1B81F185
64768DF75B1026FF045A5C6DDAC94750B604A2CB7825E2156387ED859C90CD6F
29A21F72B102FFA50000B2D49835C34DE75CAF4932693BCE009A5806A30166D9
1855CC803FAAB932CABE462536722E95FE6DE53CC9111E290624DC39FB79FEFA
C07D2DA7DECA14097B59ECB9ED4D16EFFBCCFF0CF648981BB0F88B52643FE9AD
227EB88E279912B638563A1B51C0CB36C0F76BF39282D0236E0983786DEAF669
9160F88388BE9750E11A10720B650E61C2E1D62B535C12F48EE74D437560CEF5
00FE67D124ADB60BF52E4E9BC0FD07F2AABEAD2039060F8B6BB4C28AB1B9A5AA
FB7FB94F9DD34BEFE965785C4EB2DEA1B2743752A7B4534BC2F23C12D7E0B65E
32A8EEA690C33C850A8BC6988EC6D86F992B460A7114E13F2287744CB89B862C
E68A40AD9FD2A364E65BAAFD767FC8DAFED6774B61B7E03211A8495C2305C7DA
7391F7F20453206FC27D3F8F0356098D5FD28E46480B0DD99F4679772820B94D
C7FE8D61D7B53248D9F280C9CD217D448994D1EC57E3F7687C4308FB3C14CB6C
3C656047FE57B63F1F98B53DFB3601462693C32FE5B20E2D3CCCEA810BDD1212
7FFCA7097BF4E9BD06720985FF7083FADA4920BD3F129884EC807CBA4792B245
64658504290618A4AD49656CA0F6F9D726CB2CD81B49A9F47C12FF76284D3B02
FEA47E033D6EF4DDACE3569FAE662D19514D98A46557DAF45E4333E3C9A1BBCA
924112AB70B4B0B833777E492BC58C366F903F717C1A9A37719070DB1E340DD1
D857CBBC9A49408580D7A5BFC889CDA4EA23EDE160D2D8A66A55FFCCC8EBCEC5
93DCDB97D883FC8747A5E5227FA99FBA99942BD86CE4B46FF5C69BABCA7F2875
64A3574A9C02A9899CE0C16B339B68A2AE1498BA2545C5F7D9DCA52F5EE2BC41
E415CBEC45468CB2242C78281DD6B46CDFB5424CAD9B2753E3A579E440BC13FC
226A7F3FE390001B600BB327B726927DAA9F36AAC8F75EA67125C72A4E324619
D1EFF42E23907DFD8A07A7593334F5596600AFA61B697507FE0753D4D80BF7B5
FB00F28D7848438AF0651F9C36506CDE20AF48FEDAC339FC1A9DD20075D7CA01
CB56E4A8051F3E796A58FD029922164DC90A3564CDD2050E48DBFD4179EA28D1
F2E996551F69A140A662A98CD3E5784F9F546EC95BD8940EF1700A543708FD91
D7ADE548FBFDB344C69264CCFC2E9F45921E62AEB13D93E84426F06F7CFD366B
F9B140E1940E13D7443EFCEED61612FB05F881CD7EF4387121F72EEB3A9ABF13
F7A9C46FA969968073AD979877DCDA412F63573818F678B244B14B20478BE98D
0CD6403A0CEE82391AA72FE8C004E8F24AB88D33935FBAE571B21A230452D3C0
9C48A75CABB3B12CEA753FBCE23AEF16A12F81D6145E3355949D5589C52B018E
46EBE636B6214175D6C3850D9124E38CFEAC11748F9B23F33426BC4AE3F026AA
817C063C64E5F9E5AD6C0D954CE341DB7B455E4A937B071DDA33EE74DDADDEAB
61616CC225C4B8F439072619CC7108ED99ECCD9E762A76C4BAE4535B1FE48207
81DA390D667DE1D900F22956787D08993036C7FA255C936FA78E2DC624B2C253
F76778698BD1510D5092473AF50648FFE450E1CD2F0FE4EFD68797E34E14CAE5
54135C3A2E737A9DC43C228782BC17554B290734AE78ACAE40009D0682CAF5DB
88E408B799859A65C1415759FFF6B335C54700A78C7C9605BFB0F0379CCDCFFA
09B2CF0F2423C2904D3139F00CACD6246FA607879E39FA5AE08E56576D2148D4
A90A7DB5437D587EDA0758CFCDF03557FDC0F4A6562E2AC409F8A6677FC3E26F
966E27AEB8BD7964F3C11A2EFD5F17BFFC669F5779B16B837416E74BB617589E
877EF44F84284B8A51D8BFAEDCE7792F6B9CE9F6CCDF3711DF5C6BB2F4AAD950
5AB06AB808EA664CA9F1913F5649AF34F2687F108B8D251D8FCCD90B2BDC8C34
0987DAA73D979050460D7E1A708B7D0EFB2B5FF55F9E4571C466AF1652ABBC28
5EB77B9CAE2A1D3F044CDA0AB26FC8966341ACCA2D429A3F91352AE88ACF1CF2
25B164F92EC7424905C482B190C7FEB04E13FC963C0478D72B62103439DBD0C5
CEA4CF1BDE5E6F73EC07B3E7DE00EDE33FE8D51274FEA66518D8491A3B8CA20C
04B5F4022BC97DF500C5D817F12DFEAF581793C1D178E74AA9D63325D0950129
13031421A3D10E9CBD5D4E8869D9B4A56FD3A7F768D29951166E7842CC737495
F33CA41D8BBC32FB261682CFE36CAEF0433CFF3E13DF36D75085543D83B3EBB1
F1EC7A558CD8D86DAD66D3EC933B614F5A768CB488A01868F8F5FC71B44F27AD
672FA7FF81C201BB379BDFD1FDC40E1A35C87BA1CA5F491FD3EEEA3CBBCFE086
FEDFA796EA276B27E37FD67F41027562ABE8B32B8660D2759970340F342E48FC
8DA1BA13EC87B877E37700D66FDDFC026516FDA258B0E7B321FACE47B7C328FD
C32A3C909DD219D4A25FEB3E4333229701380C335DFCD90C3F5CC3AE9D0905CB
5478EB974051C1C3CDA4FECEAFBAC6248D305562EDBFA9548D54E0EE2C5CCB13
156B025DF2E5182DE426255FD062D11B7DE6E60376F60BD85C374F605A05FC7C
BFB86718C5FCF83496A3F96517CFF904BA2676748644105038841988EAAB3C00
857A57EFDD6BABBB2B153976A11DDD81276D7303FD3D0BE349117A823BD36306
F6BEEDF2905FE1E0714829F1477A18C5FA931ACAE31CE6B70C0C19FF70E8B57F
F9DE9470FFA0D0FB9916ADD4348282DEFEDAB18C6806F1EF1088EC186353B9C4
B21D7A86F61DC5FBDF3F5EF989021588938A3A5F68B5DCE64779760C14170CC7
B94438A2B7BCCB72D6E2DD788C45B1719B1A80303481285BEDA0DCE180C8257A
3ACC1122CE497D5BF45F01304AE0B83F8F7743574546C2A9B76FA1A462A81BD4
B4834679E3971BF05D091824EA3E01AFF38BA1917A296C2BA0914A81ED045CB3
827BC0DCE0113E5C9A994CF76178954BB23BAB7FD13E263C2549247D8DF74C68
63D43B02651B15099FC29029DE39F393E7D50D28C63304BA3758C5F12E308F8E
B14FFB35630769FC6BB89CCE98E672DAAE53DFFE3E55C525FD30BBC70CE036E5
186A0F8B4DD78A0A58FD2F387D01E4F56E5EC1E636E9AF44D989BCAEC8601194
C69077BB034791B7D7003597C4740A96A92789A2EFBB918B6A80C50DFB57F530
694D0919AA89A92F01DB1FC5095FF6279E1E986AE902D0BA0A157E9EFBC0B63D
531D21A96FA3E5CCCFF9C85B1EA2962F9F78AAA5215F963EC236A4D9E44AE3E5
B44B2AE9041C1553FBBD500AC1959B419528B283E03EA02F39AFF37556536D46
2C5B79E3FE9A22D7934595BD999C3A31DA2377FC5BF66010757AD00C626217A4
5A4B814C01496D78CF8881AC4740BFF53DE5C0151E354118C14F4D152725A5AC
CD0185EF7FC96B0EC02B042F79E7688002FD01D97BF158A67243315714BEFCCB
D19F5EFD8182629081199D09DB775926BE8D533BC804C1C8059928ABE24544F4
1569DAEB22BE9B6B06C337BE0C2A552670B49F6EAD48DBA338B099C6DB1DAF3A
6D22EBE767BCD2293371F4079DF50A479D7DDB92556B38F254A74BFFF2BEAAFB
4F0EA0D1DA71F5C409E1A3E159C78437EB057E444AF8C88FFE92F26FEAEAFB75
0F1A32DD6B38F76BBFAA9AB9E3FDBE3B65729F497E62FAFDBE73F8F6F99550EA
B6973C075EA14B305C0119AC0032A4A9BD935683E85A26C1F42BEEAD417F8422
5BC1D8591F56261EFEBF59658F09FB1C506F5A1C0AF133D0C5976420C76FC705
B17A54E9210CECEF0F667BC82EC97B2C590A835A6D3C651F84067FFEF9E72F83
6667BC8FDB0197F1ECCA581B102A8C283F3B0F9995EC08F532AE820590CF22DA
6BD5621A494EA63AB3321C9FE6DD6422394F04B51D880033FF5CFEEB12B472EC
3A789EC1A4490D2E6AA28DCBF3BAE8C7A5ADEB1CEBA885B228F569794C805E66
A8DBC8B1F0033CA699C2B75B54756C0452D41A9E52E33FD14670C66F070D8CF7
E7607B46F565B3CD1D31625B095EA8C29531809B80408BB9B61C2AB7FDA0BA0A
B57A17600467ADC64D600AD4CB66D8C64E1FFB194CCA784A02F5FC193EB3F202
D9F4FB0387D88D97AE720075EAD569E7BEF81B824DA5A6D2B21C7CB4978E69C4
D6CEE647700DAD2DA776EA703E6EE873EC04600CE47A8E65B9F6722F990B9E8F
D174DBD1094C561785D36FBA8423CB111552301916EC174222485E973BAE108E
B0F3E31C24376E079EF3DFD42216DF919897ADE3C9A1C48F5FDCF5E10577569A
CA9770A56D61D2D3F44842E575B3C2B0B2A85823E7169DF80E23A6F7EF4ADA5F
12A04799BAC8FD80314C479350ED6F4095B56DC85BC50D8FF3FE9FE98E660A78
0BA6BFF75BC9DE9B0A4EDAA172F607E6F49D4494A93081D9EDC3E6F33C0CBDFA
4AAB1686E4D0B850C5F5505B61D785C6568FD459FA6AB02F16E27F262F0FC065
D56EB983207F1478ABCD112D3ACD5B4B9A016D4D64DCEC325FB1ED9004C10C3D
7DADC4AF3D1AE9F9B9BB8E4B55579F650836B2FAE102A8BEBC5D65A884BC69FF
A69B14BBD009A0C0F023D4D6706CCC054018C4FD7888703C8C503CAC8E41F41E
CEAC32BD3F624C2F65A1182A8380E74F8D4D4FAFE246FEF66C656BAA6570A334
AA10D12CC0C35B8399330235BF13206A3DA1E00C74FD528B2FC34AB914C268C8
874E34F01A8F3E17FA8700FE436C8F2641A0331A1B124FEF7F6297759E989119
19FE49600B28E6DE6DD5630777328F56CEAD97662B98842E56E11B34BAAAF9BE
D596E52D1AC1768E8E0A82E7960795150B4946D2C22948232CC103AE97C8A342
78CA3ED8FC6479AFBB1004BA15E3E5D0EE470B9811A0F02D4100046ABD2F6E79
3C31EBF5C89965E329D5452E0BD1AA69761B7A9C7B95BD29B09B930B0D82F2C3
9F9BC3C374E6FC14F3EFFD282311E889CCFA7519DBB19F459398FA12298283B7
BE5DC9E87714F3B802AD3E829A70F67146F4D1F8727B7F021BCE3FB62CF3D855
FF25F5E0A79690BC347C56053ADB475F942F51547051A54E525BA535301A6694
56474606B11420FAA7E595971F2E3ABDC4CA3D38E08060DB989AF3F538CF0D5D
1234E2DB9A16BFF4DCF8290D5915969AF272C2205E542ED8737891E678258815
6B652A99F4A644D178FD05C543B6DDF44F265EF8D1474C6A051E35ECA99C22F4
BBFA0E2B0BAC8739A748E9021D3FB5D5882F227F5EFEADD582C932F59D55EE7F
16B79B8A2E285ACE63FCB0B137685611FDDAB2E8F895CC0B2B0BD44F9515593C
1E7C135233EFBDACB6C7628D51E2808F1D8B26E038E11B8F39F3624BFAB0758A
0EC63B05BD4B9621A6A1E57DFCE7C5DFEAEDFD98057DD9980124BB155265E2EA
7402BF17ECD71219A16E5A1B1110C7DA760514F3096D12ECF20972B58E10A853
8F7BDBE3F2B56DC959DE82E9467C98255B361BFB67AF9124F75C2ECA8F6908BF
BCD4CB3919066DCED0266395746894A477BA9C7A580D605929D6D790A340847D
D751CF51F27AA7046587EA1350C84F0ADDDB4FE35701CDDDA2CE6B620C8F1CF5
B88FBEF99742137438E51623CE0E21C27C1CD7799C1BAB6E8626E7E9F3F6C2AC
944B7B713B63DA584BE89A1923604C1C63D0F34546B5678CC353E83E7B7B75CE
B25F3D0BC0DB85EB2013C9C2682963466334F7432391CF8BAE0C5A3B1227620A
AABEA33E8692ED1BAED63D4D141F7DEE6553BA479B6B5969C0D267A71A2DD2D3
E6EDCE10A4E1CEE9AED9F9539CBC513F3E0F7A4AB2C22DF444804368E12CED70
5A5823BF6AC2348B46BB579DDE9ED6A97910BAA4B9435F706D1C44139CB79AAE
CC6B3B0FBD37C170E37F4EDB7BFA4BA312D36DB126F3F4D98778E8F130575910
EC324FD2DF976CFC21F029256877A975E2C0CCCF6E0F27E1B5E783A55301CF59
F9E7DD22711EFF3967B5A741B252F764BFBC18C29E0A119453CB98FDB2F7C0EF
A1E5377DEF19C99195A6646B1336F666889EE4C311EF9941A1871225866E12E2
B87190DE970CFF94058F2B8CA0CF190BB8B893C1C1CF3FBFF392ECFDC6998C12
90727A9E2960C608C0E9A1EE967B95EFBEC6F9D6E606B1C0C840DEDEB3A8F8A3
5FE58B2DB22518C80593D387BA2AA00E3247B07CD9148FACA61B7267B8CE7FC6
6857C7516D99DD1DB170A10E67FAEB5FCF00781D3CA6745372290334969E9320
AF8E7330A29CFEA10E8681BF7E09FD39B4341967F54537ECCBC61816D57CA3B7
1C61998ED4A65B374EE14ABD4D9064245FD0D20792F8A72D746841F0E7130339
F473EA0F3CD46DB4FCB965EAAC7DCB0FD9A4D39EC820E0B6581A24EB1391BB3D
C349781A59B2C119DE916B29DE7054ED785232C74B7B94A3DF01FDFC70C3D58D
C484BE53067D7415687845FC91F8A5F530420B6517A73A255AB977D4F9AED30A
3431048F7FE8ABC6811EABCD71C983ED1CADF268B85A208F1D3EE009060D30C3
426E6B2B95D4E2EA70EAF25E9CB61AD00CA335A7A8676A83FA6E29AAADFD82C6
585E084B84F376BCE94F16964E6C441331B58C90BEDA80A20AFD47092B2595A0
7CBF1BD05B68870AA4FE5CEAEFF2DCF004635104D585E6AE259EA0C1E060B1C4
95ED215C9E3B5CD3123EE5F52612CB8123A4FF2E590AD47310066954EA6B5DBC
7621C7DE55DC385B2E2E3B2B5CC33DE5CE03D9F87DA721CE97E1FD9A0EFE9376
56C78D3EEF3837812A5E048E3B0E998FC75FAB18CB9C2773ABC9DD5B1A5F8506
7C9E307933FDFB4E9E1B6DEFF59372DCC9947F32A35801DA6BA8684A5D1DEE81
415796E13DCF906FCDADB090BE34C601909FFC3F3564B6E93FDF280143558358
1DCB878B7001DB7CB38F2ED4568BD464C960DBF2CA9A271657F0FBB4B98CDD23
C4D7A4185722A4CD1DF2EFBC6280D4076D3C0BFC32DD3D646945B77CD65C9473
CD152046759823175E42D35054A32475D0382BAF17AA04B801C55B69BA3C34DE
43B531F84B485EF8F360082659FFD793A0213B871E4D537100C4D81842BDF8F4
324B6D4F82314BFC3FD89AE09FF322EB01B1222EF05EC89BF7023DA00088FE94
62E903CEA643F8ECBE4C52A10C03486C10A91C8B6A1ED33D19A1FBA979FF7BAB
06B1AB21AC051524511A47585A4736B1045640800B0984898282CB81A028734F
56C391CC4105490C90F3EDF580FFF16F3C96BF6DDFB86B39E7C589EF576D9398
8FC7CBCE8F8EEAD3405FBF608634070BF82CE46109C332BC95B250DDD47CA3E7
BB27C41F4FB4365874CC0D1A182B42E4E0146BBECC8310747443630B04990EE1
BE9DB5764A580222B27331448786884E2083D636409679984282CC412D0F131C
C8EC21BCFFAA6DA004A90F53E78B51B4294E3DCE916DF5490100F1DBAC1F9BD1
67FCB36205F5C3579801427AEC3C0690C07082D1A0AE125DF60C03B5712CA078
56DD722A521D080237AAB4A41B23137F27004342D0B05283E69ADAF6034B82A0
C7577B22A9AB8CD52E889E5152FCEA6467ECC2582807E7D82A4B7116517ED596
F3F7BD651D9AC4C4AF100F18777CFDE12C7A87D05A5163DFCB0DECDBA90B15BB
A561DBB384E82B290BE84B679A4B2DEF62F0275AEA4719416C1E6E99BDBC1508
FBCE413C07B29419190E4223F95823CDF8D0D7ED0575082F7BBA62D978020F67
B8AF0C407C630E268AE9B589919EE6287229169AB6A7B679DBABC37176289065
C1D0E2663FA57A88150633F3F937E9606C444439F59776D65F0A6D9E5088AD24
5098A9CFAE5B44CCE8AC471E8868944268B357434FDE7449E8E87C75663E823F
2F175BF705D4F7089B2EBFFE432B337B76C083A9C31B55F16906620F859177D6
8F3725A5FBD84954BCF9E85CA0BF16A759B1636E4B1AEC751061030E9698C0BD
70A39F28909744DD2A0E854D72C2587B6CAD29EC5A26388FF0DC4B537BE32002
1EC1102A196BE260790E29609CCF27DB471F324B3001608F864FD058E1EBB9EA
9CBFBB2B697EAE7593248EAD1C7ADD5928EA3DECC5CF8F1BD249CA78C51FCA35
87638C90683909D6D65D9F18F15E0FD81D4F0F7E49D329237064384825EC7194
5DF03DFB8C9BB788B1188AA5757A22154C03831CFC91F03AB7369BD315680CF3
1200B31AE146E5363352A2D4AFAF5D4080358A528D56A6FBE9F3002E56EA59E9
C2459EEA50DE40E0BFEF4ADE6C53BED1C77634A0FEFE1385D456D324B6C4A1D0
71EAC263297A33CDD908F8CE2CFC49E0F98C8F03D9465E2180A40A1C23A9FBC0
897F01D7B319F8FC218AAE385AD7B587A7E8E59EF92E6CC1D2BC815E11F14E83
6BE55BACB3C737A5C73C170B6563DA6A0785D7D22B510079219C53405917D47D
54E80538222B75ACB3FA4009F17B7ED3B19BBC746DE44065D4297B398A16DB1F
5BA44EA785E273ED52156C072485C5377874A00CEA066894308DC00DE7254DC9
D6511D316FDFE7C4E523A006B3B3820273858FBC0B31DCB01D1535DD82C80647
C96F8CB3405C900AA958F922C67A363426C03C53A0FF11D214167E7AB4A2C62B
23E03259AD33593BFD738991C2A83F5A5BA3ECEE5920BBAFFF7CBB603DE772DE
D3D1A86592D4DEE182CAABFBECC9B908CC9442636D325E79F6F8C283B3C85336
24EA8841787FEC863F584F1FFABFAB5ED8BC2C87AACB2B1E4EF9E1A8E8B0D521
05FAB1898B6CAE99C2D6657E242BEBBC0D9C6CCDB639869DB9B64158AE0F8F92
CC6F6F0883C1386E0668FF164EFBF2FAB083443F6A4DB719E4FEDBA7F882054B
A0E6B528F42132A1F27E2E5049D46E0C470750BFCA57392DE2D0CA520397D99A
1D21DC64FC882372B81445BEDD4CCB91A7A2418B021FBFD7D75E1CF0CCBEC906
42E414AFD7F12926457EC8A09408587DA7A93B760B3D6A6C9D8552BFBF3E3A3E
3939DBD0C5CEA4CF1BDE5E6F73EC07B3E7DE00EDE9D56E46ECC52789C75F7900
EBE4A8801BBF34D10B1623C50B3296C0C24906443389166F7F9B34EFBCC86A88
200B070104698695A78AE371279CC77F3C89AC8F162224890088FF15EED28A63
6809D1C712D6A9B8D4344AE23192C77EBF8DE7F77FCB8A5EA2C99F29B4A22D9E
9AD131339C8D286AB6C95B7237281204479EFE366D93F2BD809E59AA5E3469EA
CB167C30F7D7763F20D741FD762A5F6674103B260C08C5E2B71AE4EBB377D4C7
25AFEDFECBDA048469AC16CE9F9E09777C26C56AA8118BCE62A09831CB771B40
D48806F82B4B5AA65A7A9B6E99FED552EB194A7D72FD4AB3216DF6AC30A36A1D
6278295355E2C40E2080DEDBE384E8DAAA2F2AFA130DD7C6471FAC0F10034EF9
8FCE5630E66BEBC83725BFE348426805353EB7555528330B2FEA765B68E59E5D
A2FE5DF61D3D56C1B0870C027FA358E88242C2AB3C7666EB43C9A653D05B8840
9B2FE50C8A915F9509A822FB278023E56BEEA38DB11AE69987E0A462594AFB13
2AF95D2C459ABFECFD7091CA9F9801D5D8423A4B836B0196960CA58A51705171
C30F7CCE00A19A3389B06DB5DF396F0783135AB26A74D125B749BA01069A1C34
5B4B82287AF5F0CC81333957BA52493864E8AC0F394CE7BA861E4C1E9EB7DC11
D6579DA24B334CA5F336B3BAC97AFC9599AA0F452D028F4FCAD95F3EDE0435F5
7FCCEE637518F5812EB351B6558150E2BEFA07C6576B9697457E6FF9E0F1EB69
64C2FBF17C2DF15D968E8B8C8365DFE7896681C36A50CAA1C636B9432EDF49D5
A06F34DE2335626096EA26D57B94A928E7AFD2BA03548CECD9D12CA669D16A0C
25A85CF598BEDCD1C5E42EAF7947EAAAB55B45B7A5C2477D79AF990E562161DB
B7350D5408C621CDED6AC22293A666201A11ED462A55C5ADC3F4798C3EF4A56D
79AA6C5EBEB45D3AF32A8B83FD214FC6C24EA2A599EAA9C44772E82AEFCCF5F3
62BD6147146667E32C964A18B5E01E5BF051784EB901CD15FB947C4D9C05092A
89F03CDE0E64DB42318488E66944C0DAA6DD5D5492CA1736A52B8B9D95AE23A9
C4B2FB65ACE1585E331A8F8B5AE06FF085C1F349215580CB70374C15A410AC5A
C35FCB375E20BD3D283BE2AF97176019783CFF9219C646A8008D65CD6998E813
BAF9B23E84BEEA04EF134D2709B24E10F6A831AAF04FE0920F739BE608684411
7D223CC2C4B14C8E3E833E87535CCFB1117E09D88A81FE4C24396BD03481BB28
B03F6EC802D93A3A8EF97727B7AD57C1A0288517686B4FB0FA31ADA97AACA985
CA83885CB990B37E0E0DDA6646AB9194B46AC7F43A31276A3946D95444CFF436
EF0E377B7845994F833DA3C710044C03A37A680D1F806296BBF9424289AA57DD
8A491E0A306ABA070C2A4483530CDF6B37AE42AFEBE06CE9466B313B6255925F
7C908937E3BF94DB30EAA01D409827FD133AC943DD1BEA4A303697EA12F26648
0B37FE1365B3985DC2DA7D7E68619337185BDEC008819A316042736A73C196D8
618F85AB3F011E787205BE3C1EA03475A731A5E011E6FFBA0C1AFA5DDB5810F1
083EDD3457D17C81740DAFE000798A2787814333C50AA9DFB6721A0FB87BBE75
30ED3C037A517E7F4D92C7AB7DB02AA3C2C89F64B7426E0DDEC4F73789601E45
AA1ADCF7E07D3C388798FD878DB9AB32D771BA8F05C3924C920660B9A0770C24
2394CD61F371B3FAE0E757B49F4638108381D0B4103EBB92A3F801177BDE9BDD
61E288E9C1851EABFDD80EE0D2A55BCA706D9B820D05B81C78F8E0AEA1ABDDCD
1A2C502230FCD91FF58247EEC1668C8E7DDA7A3FA8847CEAAD3690C5D73FC232
347B4A3852F42CE661E47542441899995DADD36C35F7BD089186F1FF69549450
C5B0600791191AE0D2C2D576DBD6A73FB4C075B3ED72DA5BD1C45D2C57297675
07D93B8C0D596E10998C14D093863223BDBE2E7116E4E76EA817C93F1C9D934D
4914EA75124BB5D0E8EFB4E8CCC1CCD679D9930846B226C440631902B92C516F
671CBD98E454F752CE7412AD466E2110AC585882832B7312BEEE75B0C6F18FEC
C00737E8062A9F9101ADD125A32195B8CB98C9B19235FC5100E5C1BD63FB6947
2D782C659F7862671FEDEEAED438FDCB3CBB56BF05CEA7C5200B5A292B432D0E
5F16CB991B5041DC0191890203800FA9CFD36EB47CE4A1E973F536D82FF26906
D52456D8D43114ECF0B4E3D6D9170D5FD2F858CE686804C3F119899F5BB3DC8D
E39690B59D70305996917E4A016C5B0D77A277EE5A0BA86B250C9CC09589543D
735684BA3BDA793277226E6ADACA398201341EBC10B9D4931D81DC972CA5A76E
6E9C93291AC0E14266758F37F1B4CB61B37C3230FF3B6E50CEAD45ED2EEF7E98
F739D55E1AB926E5F1230538D96AB2484EA11B9EA0EC460941BA4064658504CF
AE58C074D92E17607D54D100CA1F2B0E0857B65F4F547A468E7D3B3C9B12E1B6
5D7B33D0F261BAB212A112D3C8920FE4FFA7E954CD1AA3C3E6EDA91ECFEC0ECF
0B5340E0DDD17A6381B58F269271FDCDC0F19C8D0285CBCE07513C22253B9753
9FAD1B1392FEF6C3EEEFF10DA7017B72F57DC4971A485FF1ACE883449A3734F9
EA75154BBA688D6AF88DF1AFCE652C98307D4FB15959B8126D915FF6F0C3EF0B
66A09BBDF05DC39BF22096860C1BEEF6BC819027F403EBA7BE1349F62EBC28DA
96447F7F934EDCF05EC8CDFB2C2614B3737472C2F082CB4CFAAEB7BDD167573E
5F212D912355C65E15ED402A0F46027DDE61EAD03E8DE7EE3E332ABDBF409F82
06F24A189E57A0B5C178B7326860AF2A347C7427BC12E2F6B422FDF15DE326F5
8C22DBBB9B75AD83B21BA147E19D68525879248B7419760020B6F1A044CE0F0E
1BDD0190AEB798B8DEAD9C354D1ACFA95F85F959B5A3F72A50F8C443BB34DE84
2F3EBDE357648BB47FDE8DB1A441900C9DFCC0F7FF114C014E1DA800226FFE94
468D68983EB006896E6616DEAF9807C23208ED4C039F3F39D818910A1BC4CCD5
9FE2E917BCC939A917387216CB80D0B50FA873765FAC542ACF3BC988693C547B
A9D2CC4DF468BE421CC531EAE4B3CD2473C979D11C11BB00755EDE6761D7D722
DB82FE8AB04756697C6B1C89C1D520B2E52302597BFF0F12D7DF5CE219716715
0731721A340CDDEAE09A8D3DFE74FBAD75F5F43F519826169E40817208ECFD4F
EB93F67D4250619BFDDA4FE45BA45B4C14F38563E9D926F0DA88423DC2849432
C1F95814275504CC919FB1211D04CCAF2BBC827A2CA8FC1D6F293F9656F71CA5
8B21B16CDDFEBDB0D3E5C308E5FB883C024F45FFC8BB0B9B743486E0A343D686
82DDD7E10A9FB463560BDAE91726125C32B8BEB0D3107CA1AEE073345E7C55B5
03E5F7DEF09F93790003E163A166902C80C457EEDA44B28CCE75B08EC85DF704
ED1096FAA03E32EB77D36C5E75668ED3E9929056DCE30D42439FD75C1D031010
DD735387938B15A9B4D9AB149FE14A7427E3446606A8195C6F38CE44881BC330
6E363E443C146F13D4D1AED41877D1902E2C12EB0C7BBAD9D0E9CA6A557359E8
AEE14EEF38FDFA07FE94011A0BF512C9250112ABD6810FAD7D63AC30C3CC71D1
B6A8BBFD963C92351F4D749EDFB30249FD6342DAC7FF8A4BC90C6D9D5DBBBD6D
42C75AB338FF1B13F40D3F8D619DB75BBA85281C413245BAC932A7A0E5D680DE
C393ED6DC3040FC2F1DAA952BA4B48C79CA0E949007DCF8453E70E60A519674D
305523D33E015B485C0819C85E12381B4DF22BCA0CD3745599B7A6753E7E0217
90A1443758736475A38D8E5132C5733B4CD7E1D833A1E4C4ACBA7793B1FA2435
68C3DF17E4F251A4249929090294676AAE3ECABB2F4E65F5271B585DF3C33D69
F5354845CB093C082BDF45E1094456BD98269F4825EBD7479BC8780AD28B96DC
113ABA4C4528E9DAB5185E5306671CA0A088959B2A2CC6AFC2FEDAD6C697F144
52029E92103BDE93E7DF94564A140D982474F4FBA8DF548367724E6A7662499E
A3FCC278B616531C0CB5BAD43B19D7C70BB34D043A08D7C97D31A5E4A8B62598
46B71CE0161CDFBF8BBE8490F57E53C78E97517EF7FB79F5D4DFF58FFF4C5A60
CCF5DD51CC3DCE518DD210DB18D4D963430063A0E77220CED0EF8DA2C258BB06
9706DAFF0093D77E83CDF905D1B866D26F5671725C1EC2AAB7D7DEC3AF770984
24004666BA8435FE10EC622EBE16E14795EE31C87818324ACC8BE54953A284C8
88D0AA4728A0D3012FA4468296A7132A3D28EE56182422DB0E16F53E116D06C1
7FCC1069527F86804DA275D8C6F885EA24C13703611DEBB530443E9AEC490116
A94C1982EEDF61E2724DE8FC7FCFF15F02AF05BE0EC725003E6D283D40818073
6CDCCBE2C4599CFE10A6A87789BA984F105C5E5F1A7006B2867C7E588D43E047
676E81744DE1D89FA7F3CCC43BCE9B25CD64E26B57F1DE47D6F9DAD18BE66487
05F05FDE79C61F414C4C203C46E6A6B0269F00A8A09B7FA443ACADEE13915C5C
A44FF41CCC2BB9ABB47FDC8BA252F9CB59DC4B0FEE8C937A0920796C09CB74B3
EA1E5A9798877B4A5060782921388A9B2D468C96730BF837177EDAF9B56C3617
FEA2E77A32F1D21471D485F5139FD07AFDBA2F6862D8B67673B5D047799EC576
5A12B8BAB3FC839CCE9E2DBB0220DC5D37D70AA6564CC6C8556DEF61D3FDA49A
37473D1979C3B59B75C3064E8F923C7767B519B6B0A216CECD233B141C8302FD
0F5B244B3600BA0A03D6A06ED9890104DA2A575EA45E16DA2E1FDEB9CDF9D662
FC2E59673DEF563AECCABF724C09CEEB58C2E68C24AB9157BBA1DA686CF52E98
2FDA7C9EFCDC6FBA72F2AAE40B06DA1BFCBC00ECC3E237DEA8C9802509E747FC
696BE86B702102D7FD9E0BA2EA50B07C5DA12EE1660DFF2CB459AB7EA91A802B
34425BE1529AAAA00D841CCFDD2E70DC54A2A26B1D78582A33F532481524A95A
B589CA3267B2BE5B8178E6B7889A33771F86276E6A0430A8F322DA5DF130E7FF
D197683AA301FACD379DD84E1418E734590D1F8326FAA17EAB734FD330D412A4
48CBD1F5F92CB77F7843C0D4BCC174D4FBD61DE7DDB8C5B9E06E037D7CD767AE
50843AA610583CC318C66E25A95DA699C68DD7459A21336079126C17261F201B
5741C78EEA7BB624069C9C4288D7C772785564E019F13CA5B947675836FFD27D
21F892B9AE92E8480F5B8A2AB1B87E1954E256891ABBAB7980B1B1B4711FB26D
09C83B0872B622F9A99CC73A8823086354F120209525EE410DD0F957DAAAC66E
6F6EE4CE4ACFE894C33EDAC75933CF06BE17206F3B9D7CF2256FC14BA2250442
36D63991615A2A12392B001A3144CAA1C4F19C3E5DEB83811355CB98A5A3FFD5
8998C2ED6B93CF62F8E991B754899CE46B9008C6A6D4BE7C8431A12536B4640F
E61DF82B5E597B9C20D65FA964659C86241FE188A2B151D9D4FBA51E499C4159
260C74DFB15B31C0EB8C910767C395ECB870DCD8979E8DFC4DD9E2B7C8DF1C24
1030B68FBDBA63C29C3A604C1021A7C67A2462C77EC0ED1ED7B6548E29F53074
73C62F498B98DC42EB96569E0644A8E59488469DF34ACCB31A80C1CA013E62CE
A28B6E4ADD6734A15803A6C7CF3E6A455B0BC940D1ADE3C4488AEDC5005E81BF
78DA794432D0977F61D836C0BB1FA3D448B363C36F9830029CD935C03458D9BD
552DE9B8B026EDE899A33A846BF362A8A94A60F7D0CE0CAD7375E13E761D8D7E
9DEBE2775431011E285ED697D69314BF897C98CDE5B9CAE03A7B36E3E042ADDA
9D81C3F56A8738208FFB82C0AF127322C2FA0E2893DD9E4B3AAB834C1A6C7710
CA4D110AFB328DFB603682D938AB70D416CD39E8562FD546F1E50BFD412F4AC6
58B8D7EDBF8D085F082F84A35063986A42B541C5F2DD017ECAE805053934F6E9
925B45CD4B58AF33AED1A93832242A353515B5B347774F32B8B6C033ADC43D85
BC4732ED588181E253CB5FA4D2D486752659C90B87B3F2C529AA011CC06803B3
1EF9A85BAF11F98DF053B92E3852AD8347A2660B90A70A8821E9A558D7CAEED3
16C7BC222963DBAACBD071C3701EEB814F06635F9B5BE172092A4E7C290926DB
52258A8EEDC66700FB549A9285BD3D0D852582BDB1EB6971F2EBCC0C538B9F47
47E6F5C15EA059DA3C196B7DFE837D30F0A10FF0AA866D296FAC33601A02C87F
60FDCD5C26A477D10A511BF3BF9324B6E67BE3E3AF28807251F21C1EC7472D56
ED0C13A9677AECFFE53A1FE54984DB1360E320862F2CA6E025850563DCDAA311
6D2B7E450C8F7B16278DE567FB37E8F70F2288F7AB6217C9CB40AD1A30249D53
01FAF2F3A859767DE872710DEF408694402960947DA3B6BF54DA82FFEDA16711
06FB840B9089E9CABAF3E342A6841B3D52044100E590147C5AB8EBC973CD8D39
46E50D5357E57CD8F3FC876D538B2F90D0808FBEEB77AFE9274CC14073847B92
27397B3E63A1C38B55B74C9B0A9A6BD49C275E97C4466D6DC5FCD4062D6C332D
20AFF03DC811A8503601BD8BD9B53E7CE250174A661C774B556C7F853DF36DA9
DC8ABB3BC878C5ECFD97E10345761C1536F888C3C39EE048B98D5035FA46F719
B503CE4B2E2D3463B468EA8932B7C2DFF94FBB5CF83F65A6F1952EB4096C1B91
B6657C4FF58951C644A10ABB7CBC3A579E69FD9DBBE5372C3A2EE4AC28B453E9
3115E5F582102CA583FE4EA927649A501C1FEF198165415498597436449EE0F9
445B4C80647CC8B83CF61D7087A1AF7E0663AF1C2FF053C1379F447A9BE51494
A639DD781F1C8B62B732C93AD6D5252313424EE949C8F19915055E93B9833211
1C0F9795DB579E180CF33BB3D8D3959AF1F3B2DB5A361C07E06C49624717E9D6
0548FC8B0996B192D9CEEE79A7012A045FF7291C47A0294A75A62AA83295F8DC
9FF20536F140D86E10B1D88197B65DCB42CE6B0DDCFC5D114ABD5949AE733F16
C8C45631BF269CC8B89441B674EC0697CB2FFCE88E207E51A2583CC1F6D4C1D2
E5EA316A091C458AD396651466B0315A92169AE858D3975C73059DF8D9FCC459
BA4F303F036B5AE64868FC6AEED9AF95EC8F2AEEFE4A91A92622AB847F88919F
CAF407C96C3AA0B2F20F09BD32E997CF23D66E0FA7039C3E11CC5C1BDD134741
2F127B15122932898719493BEC545829BC2C9C99BE09D7BBD766105E07065AAB
5CFCACB826EFB41D1A7A6F59DC8AFFD57BE1C7FCD757C04C263AA2A4A08D7E08
055E5B922948A4D26E316DFD05D033B7BB01DD0B9469C910B7A7DB8E67C0139C
49E305763F08DA29E18492BF190333691B3004EA1B94FF4A435B05827CE32E8D
443BFE96A48DEE88CED0A50E572EF58F0435AB65E08F5966F6C8304D2D7CC2EF
33D4D7512131A142DEDDFBED6B2C4114AE095CF993DA9BEE95B8FF6852993219
5C0BD4D5F3F9777A5CCD3132CEDFAD1BE7B11DA4E20168A9775E969B87B87C2D
055ABC18747D43D9A9656E19B2B223E43B7FDFEEB5F202575B730E622A0A80C3
D80ABCB00635370B672195A2E0802FC871CA864B3ADB40C28AACA1C46A84C827
5B27CEB7AFD708B24D34BD832406A8BC38C574D71DEEBF0BF3BAC3B44161787A
AF076F1F53CE092884E40A2E0DBB45723E3858702BD9524FEF8067C9C0ED73E8
E909D7F9DB5A1476962A592ABFFD7C6573996FFF0C33BC12859424AF93DB66C9
EE07FCAD6181F82F434ED89B8D1C5AB49AC0C200FB38A6E36220611A604F7E99
476611BC1371BF8A5B0B825DB940B2125C16F982248B44DB39FCD429CF844F9C
D60DE04863F47F7A3607969ED331B22A7722E3F8EF38A0E0691CBC23262A3846
A894B8814035666E32B69840EF7F14BBB9700EAD62D56AD09E9773D8B2FEBC70
16E5CFE1126F4294DDE5AD91E1779B080D44A96214F93C68C7B70266EDA218C6
D2606A4B710383358A528D56A6FBE9F3002E56EA59E9C2459EEA57BEE942C0DB
0FF95359E700BE2DC30F248D1BEFA38DFA9ED9CCE9A4F454633B52B445FEA991
05FB0699485952BEEF23C9A31379FDA9F7BFA8DE2C175AED055189493F499566
CA8402BD985CAB49BB651D6FDE79EA92A7A00E2E84436EAFCAF9102A25E5F047
CC8473EC2AC8E4B2C3F02FAE262A45F1B3D83C153C9BA5D98CC8FD4F4FCBB2B6
00C5DE45A3519F7136A882713399C831384FA1269780A5EAD84FCD983D5BA671
9DF09FFB7D838A6B7AD799A32955C7E5688D0EBEACFF4924E2DEB93A1DD1AE51
4F99913C475363EED630B3B78199AD5E1B2A9E8032747355860E6DEB1FCFA76F
EA448A60401A3B11DCA3E9524CC067EBABB728E5EA5A88096175F2F9D4AD0E3F
3F3A403274C8D08F325003BF6FD3AD3A9205A17BD54BE09082EC703AF222687D
B9CF10CD88109B0AA050F06A64F75685C20E8A5A052F4D53D6124E3F3267EDBD
AE35B33859EB7114FC94635268A1523DEEF34174068A3C7B75E44DC7EBA49306
D0E42E184317DFB60F1C0DEE6AA1A98C20E4BEFB7C41FA5ED0E97D14487C05FF
5462F53B8B7017C550B78C7E4EE8337CC2563BFAB732FF3C7DC1B265686DBAA0
12943785910CEE68BBA77C8FB4B765497D12A1C906FC8FA2D12D56D595696738
B6EF16D795001F6907BBEE3548134E0ECFBA5E3A644FFD4C4566F7D9BF12A5DF
45F32154624449FEE13A31702D10BE61CA88342049EACC78305201BFD782F8C2
372F57E79E5289B9A037DEE7A3C4DC8D06595AF02DE1AE16DC9AE29320743256
29DBE7BF3642EC9C7BBDFFC7A66BFB93F10DC49A872AACAEC7DABABE1EB7F65A
47E87190AE4754928E228A7225094340420FCCCC8C2F3ACB0645D61D0B5A2CE1
E2C033D0CBB3BF6270622EEEE0025ABAD0045F576D9C446DD56ECEEA07228F0B
0DD1460715609DA897AEC52D74BB6747FB9CD5A633DF53752834D4FEB3EF2D18
742DF7CA2D119CC12A3246B9B5EA106E3ECCA853A38BDD33CB568EC4546F864B
98B8FB2B09B7F21256DCC3B4CF0008880A1663932AC35AA2CB73748EC986D113
B8FB1B33A25F4BCC90B6ADFB4DC714D6D08324E629D4809F6CCD8766C637919F
05E3BFD1EAC2B12D96DBBE95EA5B7AD60F1A5739952A1400A64CA8F39636AE0C
FB957F95210E59D0EEA9C3401B1B713E91C363CC74AA8BA17A9A1547F1D88114
12A2EB048EE8120FB303DDE805BDAA236D4BB6CCE198C17646D4023E62507492
82E1F6191D09A98AF806357C6C56099EA374BBF2CE56AE6FA306103FB8A08DCC
D7061AD53A8EF8E4D0339BA19A27F7276BC51965FA70CBD6826707BFBE207212
6C498B8133C03458D9BD552DE9B8B026EDE899A33A846BF36367F09279E81D9C
E04C5C360D7677FEFC0BC3255F0104704A88B132590E7B126DC20CE26DCB6113
D415C1560A8E3EE412A2681BE0218448DFEDF16CF2DA1B7481AAC42E145BD772
CC4C3ED8EABFF2230567998B58154582EC9BB8D5CB7ED892F1A55E037E4750E6
F3CAB9CE75DE3E15E0C0ABCF34C340EA150D8DD7A4233D51BD214B178B91D922
BBA326D4E3F1DC5CDDCBB1254A1ED24539002B464E28862870D89C85F9ED42D3
F61FE849DACCBABF30929EE07311783290A0EA08384809CF652F1E602E7F2066
B36E8A106BF35F9060144E812983C01D2DCDA032E00E26B0ACF922D3DBFB6E2C
4742B6590A8D1CC447CD2752D897B3D34B2D59D4B2A379AE1347C5A1FE39542C
9E4363F65058FE9B3AB95CE02D75BD2FCC775E27EA9789018E0F5892D5BFDC37
A921D123FB2F06382136D3019BD29EE3DF11E5CC965A61D7320109A4205CFD19
17BB1F05CDC673C48B92BAC90417337835E3C30AE76637C3881A166479DB81F6
69BC2ABB4462835ACEE028F14B6852A2C72357B7EF641B63E7A29D362DB15A78
F827CB355DFA8E65AE6651D18A644CD56667FAC7FF3740E5C0993655A7A87352
E69E4370442D6CA86D083E18D9F88CF840D45E023C7CE0560525A8DA4CCCEA32
F995DB32130C3D8FB3A57A4B574265A679334D5EBCB073FF6966BD9325DECEB8
3D7789141CFE611787C952E7ED9A7C4447E7ED8F142682BE8C4E2F517F73DFAC
1A28A299E8106180D86B6D33F17030AAA7B0A2CEB87A0360124FD1504C60DADD
A5D011C03BFC4D497466C7F09105A287FB8C8D3084FA1F7EDB7A2193C44B91B5
526D512C3A56197483E2AC0614983BAD18079A8C1C34FCFA63CE7142DD70875A
554162CBD4387124656831862FF01CCB867F027E95F0C3D7CE9B786130D6CEB0
514F29AE697600849713EB0CFF8DF78EBB9D06F88A3574A729998B80506F4C56
D862C75AF7CB68063B65B26A95C303711943DCE9AF05FCF281F371679D3540CD
B376F36CBFA9240A07421DD8A51DD61C3767BF8487245D966C780A51FC22430F
50B55270E29C0237FBDDB04154DD1C27164288A1ABA66A60E06D859150713BE3
40433640B24F4ABEE7F9CA040A029E7F58D860EDE9184DBA1559D8050617B88F
6E7DDB782BA84AD2E63D40E17728E5CED62D8A6169DD2E13007FE17DF95FE95D
B5D2A720485C9E8F5E555B30A85131DB95FE8C66A6A82D7D7565DE4714BED7DC
4D9416C47C0CA063C9E10E8237CE8F74AFBE6528AC4A71EF11843D03888721F0
076C5FF54BB9581468A110154A6F0F59E3FB5AD9BA365DF4D22F46C62DD85F65
1CE82BBECE200447A7B73D1C91E8F613C108E6DC49562501253A5010975536EE
F28F9B03CA4C49221E676C8460D2A7DE0B2CE2BB881BC3306E363E443C146F13
D4D1AC7A683650121894B9D280C4F16906654393ECB9D742027FF636013901C9
671F77F34A63F361C5579EC5E00C5D1111293F2CF30358B76F04C6C0E80D3AAF
01749ADCFB9B7996B914B7DB80614C0243F3B3C291206608A7910D6E26D9EB38
20144C7EADD2B7564578EE778AB577C5BEFF2F0399D7689ECC934028FF56868E
7DE3C42A87CFED1197F5569529861FAEFDC91E823E0A0EA92E7F1118BBC58AC7
724296419D91D7204489394054D1FC534C1F0387BD4B2683DF88F44B9F9CC174
C1ECDD3A63E5883BFB5406027CEA8756FAA7AC4AF2361EB14BA5BA08543D85A5
D406C5586279A28173D35D36E744A5CAC7E93A298D845E340FEE679C2524FA0A
0192DBC4C4BF0DFE0397381635A18369FB3E983597014EDA4FE2BB6704E49C95
37FB0B67CC04960E6059F6BE26EBF8CE5452C6167A41DB8A46EDED17CF6418C4
CA1E6D3F2F99CAB5906B761B5A54222B078A014AF3BB404CDF3CAADE7A8ED613
5F0B1BCB5D54AA8023B11FDD5D37C1B60D5582E03F083CF7146FC92D816A9552
59A1419C8C25F4F8378BAA0E7564DE95FF25EF5CC6B22EDC09857D3E5F676DD0
5F584CCE1FCF15E65303242E2818BF94F3B4B604807215323DC5C7C04F9A6FA6
54E56E66BB882E67632F78E4EA659F5CDA9C12E44A1BB6758AB06E34EF8E8752
8FE146C23041CDA1C93C0135C5B57CB9F1F70EC7EBDCC34DA314F6A3F0D24B51
62294547525ACA6C964A1E08423D9BDA91822242B8D8D9235ACCEB4E79BC37A3
6535F4C3ED8C840F1AA6F062C3DDC13D65906CABB3759C7499D65461B684A713
9138869039B5673F1930BE3BAA9104DFEA7D363CC9F5C430842A3426556F00AD
40A4B9DDA5EC65625DE06ABD34B6C83C2B06F878C9934D674994912821284680
109A62E67A4EDB5E51ACA17F0D7C1980845566E266965F3A395DE60006975AA6
828B9D5FE6C5112AC4B6D6F39B77038E492989DD27FCE1D732402A88A938029F
E077D70380D389D9682E63FB1AC6A7276BA1267A2A7A83FD2F1415C092C968E9
021A9BBB0795E052E8F6E4C94FA252AF193E5E9B3025C139DCFC7A4320D26358
0B26D4EBFE42B5861E2EE5DE74458771B29BFE7FE1977A0E57EA057A99735638
111276B698EFD433F09C4BCB50B6F40867C4C607ECAECE488E961F719BECEDAB
9713119E86E7A654D264B37AA8944560A615091CBA5EF78C6D0B1D4440A641DB
3EA502BBAE63E4127EA61ED00981604796F947BE1506C9E8694D95BA381D1300
D53248D553F94BACF5A19F3B396955DCF28A1459E14757F28B260D206085DC24
4B3E0FA424066FD8754EBD3E6840AB3C107D8BD0216AB8049E404E3C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic6-Regular
%!PS-AdobeFont-1.0: LMMathItalic6-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 417 117 0
%%EndComments
FontDirectory/LMMathItalic6-Regular known{/LMMathItalic6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic6-Regular)readonly def
/FamilyName(LMMathItalic6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMMathItalic6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{0 -250 1241 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD113E9A4707A44200A15F1431F9E64
6F74A5028622F1CCB472247A2D3C92D19C0AF82A97AA93420B2252C089999F87
E9B99CE919915A7841E47F18EA2729DBFB8D0F265978077327D4885A16B99026
3AF09EBA03D665F320B724646224778F5207197EDECD6BA321B46A9C7B1BE014
C7AA72E7AD74DEF4CCFD1905F237AF725D38159039E347BB692EB0BB42D933B4
A4F5113867999A3BDD6E56036DD46F7BAD9445E0EB69D6BCF844741CD349792D
3F6A794164344B7301C4BD8C500C92214EAB1BD409FE0D61470E69C69E668D73
F1418A89939E9AD8AE9F3EB718A13741D72F79B4E51DEFB2029F4979E0C7F79F
8178AD7DFC03558964BF7FA8302240FA1B7CAC01375924C41D0200C60452AE3C
2CD5F7EB6BFA476372518118DAADC1D6E053E534830EEC37A0160A24FA76B86D
3FD75B97E83D4B1E1216C901748E31B5AC51D15BC8B8EB18D83CE35525239F0C
0FF52411E08D5893C09162BFA0EA49E1290193D19157A30A5F21797106802635
1F19BFECA6B40461144E82A051FEDBCFA7B096E34A7EEC13F93B74652D2EF4A7
08522EB97A15EABB2AF74CE73F5B8935F65DC93EA24E129BF18D5F8B4E890B81
105D0673055DAC2775314AC07C1D99428076035B0EA20A382B61A8B4548BCFF6
0F0A48E059E7497260326AD89AD9815B1F9B36430AB8527D61C5EFB8AA5B6B83
2B5053D7C25089EFD48A2E023C219158420D77BFE7CB795628865715FAE6EDB8
89F423F0B97DB7AC2927F97EC4ACC2E9F4BCE46EE66B37A2F169E33177ED4408
5F93FDE909FA829DE0AE5D9BD0BC4A75A0141AA472AD0ACEF816F27FB4A6CB04
13BF8944FA31EECB2BCE2983E7CD2C9C68868890B42D91D3182096A7719209AD
32A69532F10D71FA1567B10B0CCD4813495F34F89764223F7D45F888FE1889BC
F7E9E0C3E520C1536228FCE80FD44B49B8059ACFE6DA964B7D4264039022F974
E8A6827C6C472B256C93764DB10437A38BE20B869126487C13C127C923B92F7A
9FC2E6E810BFF59200667CCE4717B7070B13352A50EA07C4B2688EEA16CBC50A
C44A26C32A540E5722C62BCB724E2CF4645C672A697583A839E6669DEA709E09
67EC8DDD7B827997852A1FF7E1DB025E9EDFF0060720F0BF98218930A94B601B
C7CC13B012EF6870380752CC8A46B1F2BBA71DF6347F7DFFE7AB9698F786233E
B7312E914C011F8ADC84EE0718CF57C5A0DA26BE468F91D3133C58B68732A296
71D6BA76EAE4215318846D2334B452E1BF1FBD0A0DA1F4E1995E6E64143E7BCF
23566F41F252FEF70099B154D0B7269021F7D385379D5EF73C324D5FFF98D950
8B88A05E1023F0E8D984888A5276EE2DDDC8910311C251002EE1FE787702A888
915EFE66CC9B8352DAA233DD92E24690A64DAB9771A284E5AB0EC8A650042BA9
D7FAC3CA2D8CB258C6017B30C789D2B16741B544B2D73705AF9CE43A75A60F36
2EEDB593FC558C180F16AB2B6178AA55A8C4C9D288D699025EB7667C3B34875B
51AE25B9A124ED690DF36E0DD21DC819CC6B36E8B6BB76F10C9017D10E40BEE8
B4FFD02A85C887C0FE726A877ECB82311C0B7FB9D4CFA3A8535FB07B4822BFF3
468BC00867C585D5A895824BB39629877C3EDB54BA3C0D6D3E0EA7EE60E62823
EEABDF8B7462DBB9F370EDCBEBD8197CC7B7539D2AFA39D33DC0A6BDCA057903
5CD088E899934BB86E8DDF999DFFAB90E1EBCA5800FB246BD0073F188063B471
5DCC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE279918B0B31E08031DB686D518B4CBB8A4D0B
EBF6750A452A7F706EA676E3B3237FC5656B29CD5A3A04F82AC871B526CC28B3
A61D985EEB3610FCAA433B9C6D4683C512F0FDBF3EE6FF552D7BF0BBBBA37050
FCBE3F164189FDC8446ACDE8D0D4050278151B46E56AF826A0C2E9389C2B8BB8
E38579D281D5142944D3322E1C66D456E4C5DD727AA41FA5B369D5E10CD71832
A7DD40DE855B47289C449B6AD8D5F1D557102050EDA5F1641EAAFDDBC082E579
A06D8A3A323458808BAD0F4B8A2BF406DBAC4C5F555EC96E760C8245A1AD9F50
881DB475F892F868823CC55D4859C09148529FBA57A392127B68F5366491D1BB
097D8FF4A71966D42DD988F48C8A1F4DE0449E6AAE79500C42B4EFE4936D0D00
0FB339115493C16412F1D6DCE02BC7B485CC108C6321EBF1C609633933A576C6
B0758D49F3155D448D505F73A5206EC1C8886F5949790A7E4B850B6B8E31EC18
B7321E63AC75B6588774961F6B7D313B850AA4B368E48DAFAA5693CAA236E150
E02FB2831359FDB95792B2E6431DD24BFA8F2B51BC21E2E5AACC0CA211F50A13
075ABCF9F440CA468403D939B91520C652F1196EAF1BC975E26F8057F69CB972
E976F99070AD3FCD958C1EC54B3994EA142AA0615EF7BC00D85F75BF5F32B350
E2CF46BA0E8D0120BDB54910E5C27A27B59664E856EDDE290103A0D490FD76DD
09B152B3AD1C4754696B239D4B13935AC19769600943C7343A5E7A06C9115395
DC2F92EA95E5ECE5A08EDD16DF74B6297EC0220C91F8BB9AFE742FA96456E131
7D41CDCE88A8F9A12D46B8FCA50DF4433B0B8AED6A63BB5FFDFB8D48D04F9849
2972699B5667C0D2D206F4785DE20A854E1D4C655A690689B7B5A19F8162E5D8
454B7A1CE94AF723F47C6B168CB7269CC802B14545C8448B5C260C6AAED5FB23
2390D7239C22534FEE644AE96C5718EFFB9DF1AC47CB3022D3751E6B7123FB71
403E154150FA4A14EE2CDC8F0BD084CAB30272E8F065218BA88536F138B94AFA
D750F6EA9BB43271084CD876A14CEBEB86283BDB500BBC0F9E152C30059054EE
92951E4A202AB409F7D16443DE00ED69C1FA674BA3664F8BD00C08A27F475C00
E6AABE35B01B991AE910B7DC821CFD8A6B5C7F4B116E78065CB219C926D45163
EBF6E81EF0C38076871283D64FA5F2126CCA7E93636A7CCA2158B99A15CD405D
4AD290CD8F7AF8845CF78D4BE9C7F2E4DC00372530C64BBBB785117A8AEEC190
9F49C82BAD55AD174D38A74582CB367BB50ACF8FBB2C8A2EDB17FF267D0F21C3
5BE42CA518272C9F9FB2DF0780C957CF1B9734E9F49C0E6EBDB5D24ED5D673E2
6A25811D4BCA9D693EF8ABE784D2BE46DE1E57E1B738ADF6FD49E6A53BF48C6C
2A73026234D3719C72C2FB8B8274AB54A6853DC6784398A6B994BE424B6E9078
6C303D590747608AF3CDD6A51B5612DD5D49E1153A25EBEAC76FEC601CF4D10F
65DAE3EDBF9A163BEE244542BFD2849D498C239237ECDCB23458C7C3B9395C7F
900C2AC7BDEF8FB9D4574698BC8D4E374B34969A885A0A4AA26F19F8348EC621
89B42297868AD2C3E80D95C41FA4A5AF7A016D3C773E040312AA0240DE24C7F9
D662FC2E59673DEF563AECCABF724C09CEEB5DCA64FC6D24A091A75B5745DFEE
F5C1162900B5F1EF5A7102C27DB1918679E7E354A5DABF897D9C8EF5A14FA8DF
FA3A7B3D47542FFF5987268E60E7FD64B017EC6A8FDB4BA5AB5B5B58046899C9
C5993E7302C870678DEBE8FEF3F2438217BA5121CC668458620DB3D381D56770
19CDD612E5C0A267BE4F707ECE93B3E1E8BE65922315729FA5513AD13B562C5E
E145AB39905815D6C3E8B60AC5C1D4D7731E2A6B122C6F57790C42B0368AD7A4
99EE5F029AA6F8E302F4CD994EC08C00AC6A66C51254F71280CC722402E200EA
D4F6F489DCD61B81CDB85804A5EF00CDB09D9C2EE4F3D571285E319A78F90942
1C31359DDF81F38F6E8615BCD0E6CFFE077688C365888921E45608C868A0F6F9
D726CB2CD81B49A9F47C12FF76284D3B07E2C2E788036B4867F90D40C1E4FF74
60399F1F08F98A05A579D00D1ED5E8A86BE9DC1CEE3FCB03B9A0E4BBB81C849F
AB1A6089E9807455A5DD78B2EC3090E36EDF4D19FA6BBEF386127BBDB53D25E6
8448A975CD56BE0A93070F848850FB9B3B0285C7FADB28A3711C06273B79FBD2
A509FDF7AF81630306D67E0AAD0DAB78243E1B814F745234BA7CD57325B5A34C
C3F984018DC9653649786481788A6F58ADDB87DD0D883AF60455753850A63756
5EBCDE76329F5626E6328EBE3DB5770A4C3E21341C304F38845FE70E091803D9
D14037AC4AA8C4D17EBB62ACEFE5344982E0F489D72EF60183D8F2A79A3AA765
C18E0479B0255870CD61C8CF7AA8DE567D174EC90945404C5B928EAF3E8DDC1E
018442474EC6B0B42DF539EC1557722299347DCFF0347BA4273054B8062D3DF6
FF094944AE472D60DDF6CA62288E4E780F8614C7749C9406325C82715C866134
637DCCE4848D2B051B8E0EC7B88872E9AE68BB5DDC30F4A61119733F6F6DE0BF
4C6437A849A661B6A233B1C24238BB910C11D2A8024C89FB5DC745489AAC2570
4C61242B4B1983A5D0B134C8052495CBAA9D2E2E014641BD58F0EC389FACADA3
08A1723A5C2492BA0615B0222EDD152AD19C307118AC0086653521EA59D676CF
C36AB586FF1FD4C383E2785EAD36F41274FB0BFF9DFEADC612CA44A7392D8E79
1DDE1DE818BBF26CE3BCC2569F5CE6DC91D4F8B7800A05DECB300CD7A8C38D77
4C1DF436013901C9671F77F34A63F361C5579EC5E00C5A8E2FC97874F6459EFC
C1760E9C6C78E60CC0152340DA6F26C67B2E10B620750E2C44E5CB9DCE747E29
6F7E716E6BB12B699A2FCA90DFB3DD730D96D100DC5B1BBB1632D7015235F4D5
1C1C753EEFDD6ADCEB45DF4D00713744039C43B860B5A9C51AF0BEF11CC8E85B
067A402342896C9B3BAAA570C4900E12D720F2812F28626DE3BD3F3426B82718
259AD02CDB518BA4C4AD8F261CFEBF43857EC7A543ABB1E059247E276E206CB0
0BED125C8F78A665901F80068C9B0AED83074C6270B177BAA18F1975F43E9160
8B75D86D9F7C1E986C2DDA71CBF33FACEE675B943764AFE71B5A359C4A092916
3E8EF660794518DA4307AA5B38469000FBF31BAE9CE8703754A099D21B332D3C
A19A842755A79DDC1E281A8C34A969B80EDC946658B7579B5BCF07AC8B45C2A8
3664140E70CA62DCB3153CB4A8E46F12CC16254F52A26FE47FE41504D3E851A0
665AB60BC0CE5C72512D196F8D1BC0B3FC12DA2D13F4B9AEA2D017EE7E574B86
2576F5EA495F51E1B3A86090ECFDB57097EF73BFFD5E41E8AB6BF105F87986D4
95940A8B4A29E4DC974554DF975D026EA92FC09DBD65783663CAFE414B6F8C06
F00A26631D7FCC4527109F177093E7432F5FAA6CA14F1654ACCFEC8FFC127488
F604E972B695E9EF18F331A58BE4704E5130FB4984C3FE2474E6CF0935F90B79
7221D94774689E83E5406F5D9554C1284249C687A6CF5A6B4783F54267C48710
32ED406DE854CD5E243C0BE4656E35FA02FAF5101E1AE6B7CB286C9DB979D763
FEB468FC7AA2DDBE2E708D27D89164B12BD8BDF0418BEDF018EA67683158D1B7
73C6EF553EA897D5F2D53E75902E57D7C4E06D7DC83F1C557ECF5DE83748370B
00EE03A3ADB919976D4DBFF11B246AF9C2FE922A8A6F8CD47656ED2CBC816B17
3B01048BE9D1E4B54ABC0396D5203D088ED7A1FC7CC863AF414AC14AC2D75E5E
EDEB706CFB2AFE24EB580E55BD31B793E4065CE83795F047004ED88F5C38BDA8
7F5FA8880517429B9C4E5FE980448EDF3BD57758FD145E769D4E88BF43D19050
DA58F5EDC7B4AA76BD8CDAF0B8639BD5D2C7552AF5415B7F35B957F02B962930
D3D0C3AABCE7BF840A7A035F2CC57FC978684570CF6C8FDB960B9CC6E9435D65
77D1CFB71D362BAD7280AED8771C6EE2F7E2D86C5661CDBEBB354B84249E93B7
7A0E409B4D5E17600E1E43F5EA1F884939C0AE467119F1E155676D10A8A35955
BADB667DB10180DF404F43A166E2E533F1C050D35CE4AEE92C35EE391398EFCF
E19EDE2E31F837DF86F1800F59C89EF6401112AB73434A3938E1970D8EA3CD40
C7B8FB44205899626FBC269C25478E0A63F78F3460EDD4F64B4D2A5B3E660B64
D293F803C670E243F0B0EB1C548746C08C7F4FAC0D4A7FD8B7369AED2AE9A79C
74C0FF0E0B0C1AD3B59BEF79753FDA3E929B52F207382364B1C62AE8311C4337
297E030CC0CE93ADB4E2FEB60E28FF6D4AF0010D422AFC137F2254FFF6C2929F
CB76A235705EC088049C1F1B0E78FD2D357BBBFB0E12CD481F96252AB7402213
DF9BB4464515CCEA5FE4C0CF761E921D7D2992EB24625547D54E3F2C644ABABB
47914DF3ED2C719753BB1EED9C435F2D571BEBA4F76A0AD5DFDBA6EC952A4F37
948B63263FA4097587802F6C66C3BC6E9DF45A22A24877E4A4499697D46B779C
8609E85E4BCFE84319532B3AC9D62BD413CC127C8DAEBC28D7DE5CB57A30F23A
2859902409CD4FF43EF6A99E9FFA2DB4113C12AB9C616F074276C4840A546A73
0D24D8518117AD200014839545B1078F38D7284FBFC473C510CA28AB90147613
F0EBC94C3EA0001043705336F16E783FDADA674B361F951D5152C0011FE0BEAE
51286E4979DACD3F5A953BD9E918D5E46449525A4A597FF0F091B2B4794752D7
EE5D9B94524DF768ADA1377760AB1ACE2D780F5624CF53DE046A36EFB35B52F0
566623440D7F364C4030648BC39783FD7AE189510DB572D01093BC4C7EE0C09F
389FF828AA7585F9B7FAFA718DAF925AA837B8C0B647161E5C322CA820521400
5D234795C9DC1354D1C0E5ABC997C64F3C84D2C3B7581BC9566EB6D012B6B784
F740B8E0B360808C984DEC73EF57328A2347BC752EB0EFF7BE8B688A3622826E
C83CC42DCA4A26C504AB95C5232A86199FC1295D8BC52BBA9C5089A346CC5760
009233FDE0B38CD4EC1D07A9F817ADBD1AA6D303AAF94D5FA688675B55D40FA4
3C6D97741D9FE4C964FC6D24A091A75B5745DFEEF5C1162900B5F1EF59402CD5
E4D0C3953C9493D87F46CE4E9C7A543364A9B82B34154924F4739C650A8EF8D2
38C73BD6689A0657D8427446E44E2F5C77937234D1D6AFCA63944D3FE5126940
8ADA00FF11BFB205B9A42EC1F50B435E4D44E14E22056FEA071D0061F16D8879
6C4BA0C670D0E715ED9333A0FBBD15F19CBCE5F93259A6C4A8CAD50B9186BF14
62D3AE2AAEA8A45E9A29BBCF83E95F0C65B2D60169538EDFAAB935FE3468186E
CD90E2F15FDBB395191E6C4659910683768F80764D94FE8A746FD06C08F15F97
3A528084C73A3416B7D9498707C04E9115D411FD74AD771B5973E6D0A573A1FD
2E01CB1197990EDF8444CC83F1AF789DCE5C7F64567C9D80D1829D7FE5F45647
ED6B99C6D96B728840A77AAB12DF037473065B62E9F3775CAEDAD9508FA92283
6FAA01D50CBB9B12B543AF2A86A99F4D544B8974F01B52945FC6ABCF3ECD8410
335AE6CAAA4F740EFA8AE1742B115F4FA7FD8E330D0B86B191FF5B038A5D0C32
91053A42460468F6A1700953700663A85229385FB9BC76B5FD875ABAE3E6DAD7
9EE2B71FBAA76C2CF157574A30CF7D71980C9059C3D6B6A3204F03427D0C1ED0
63F935C93FEC0118A7769C3492300AC5C68153E7DC46AC75E4031836536A9FF8
F9855C80511A27D667AE834A96925698006601802F57A614BA454AEBAD5381A9
33E9E2EC6A78543582AED8FADA73537FF0C6D7FB2EAF256CEAEC65106F666E66
BF183E0F0E4775D00C05AE65EAF85FB57223FA553494EDAC82855AB977A49791
5342A184DA5589E192F08B7149CBB9903A5809202C698AB39B218ECC7BB9128F
40DFF15856E79E10EA85E741412DF41F4C59FEB8AEF11EC7D1484B17EDFD7F39
0EE3B12312F51B3512559F1D609D0ED4BAD7B1C1C003F982B905BD7D67725C83
EF7119C2C4ABACC0DFF903C17E5B0BC25F89AE84006216080ECAF450D8FF2A1C
A4BD4256B7E56091E388284DBD11F5425FEB05566B96D20438400E0E78630FD5
05A174BEB44068BDD70570D038B3D9F60F63119EC9FA765E6E318CA3DBEB209B
ACED0957B2A13CCC8B93FF7BC5FC7C7A37AE0523EEAF1FBD745CE175B921697F
9D9FF0803559FEA21109882857594189F167F40EED0DF7150DB40D2B141DCC1B
60EDED42C0DB0FF95359E700BE2DC30F248D1BEFA38DFC784CE855754BC80098
5A57640B2B6105B2D2C996F6D44657DAF5DF5891AF008F869D7AF5E4EF1989FD
377E9723C5A85CFE645109B1AA5FEDE99BBB3800D471BB00C657884722CE9678
6CC228DD6BDA9B4F88DC224D329F47D8E9A61F56E5B463649E058E104A8537D3
D81053D9DFBC564791CA6CAFD44529A22B1E1E1B4FEB64AB0950733055DCCC2B
78551535EE5DA52B7AF5030F8AE1482312B61697C4574658A3E865BBEDEF8E1B
CD305A5ACF3C44E769368D0593ED7C9E2AB4B0184BC89A05CD2D29851EA57424
D2CD1BC0281FE40CC2D3DD1B36FCCC46801180D05D76D548B4D41FEBAF2A1E1B
7DF8BD5B4735481E2E64CBDFFD53A6555556089ADAB4DAF9B826BC53D97B4166
C60752E5E4D9771C3B3FC8F2156659677CBF68EEB3D1A5D8A8D2559C85177C31
784217D6A61BCB560C5ADF83A337082F566E73C4C3C500CD798E325C588B5B71
AF3DBF6D30AE540AD4662F8457859B8DBA51655025FA11DFE00469468AD648DF
75630D5E29912CD7E6362E528E075BC01117E45F49AFB2D3E936B548CD78AA6A
6FCF0CFD5A62BD50BAEA04E96DC81F6F9F742A10CFFDABEB17316F9CEC899026
7B1BD97D4734CF37B2C1255D017F11F7E1F90542E9E515490079815C2000B856
C14AC12D7456FF92C2678CD0084F1DFA0EC2AE8B857358C6C1A928CEA7F0D5FF
99461F3A9DA8509E7EE6AB98B4BB88F672AFCA3A553C55AA3402337C6C9B077A
033B01F3B878B9E9FDE0356382226C92B9537DF8C4F37383902B4E1667123615
FF99555E34634B52F0B8B83EEF5CCA51B26403A6263FA4C55FEC2B062491590F
F01EF0F36E918D98CF7327686AF072D547A5AD7A1C457D4DE11410C601C40F65
5EA32589D03360B92ABD1BF4762108CC1B72CF4BE2B3EE78D4C5714622E75955
FF3E78C4575D810E7E05045030378BD2EF0242021D85C50EF4F0FA7E8DDAA7E0
9A5C8225E5EDAEB91BAF1279E7930E73FDE400C7E7A7EF0884DDEC35700215F6
0737ECDD6C87E2764C59C2EFFA770443E21DC3DFC0F2885961670BE2D2CE87F1
1B7F474BB9591EB9678EBB5A676561BF61FABAB8309AE123A6CE6F839C2708CB
5A55F4ED91FBA9AC00C0C25D34BBF10FD8A7676C7BDFE23406C55DD3FA8E6BD8
9DB799536EE19B0EC9C57B38834DF8ADB373A5B5BDB1D57F414F3AE5A0B573EF
AEEA5D8C588DE556745DA3E386BBD02546E44C6FEA7C1D4EAD89507E04EFB964
76A3B4A2511E20586E9E24C566824C8AE99CCF0EA0BC1407B202F3CD1B402168
35375E0B9E13B07B4D38BF176C177353670633F29EFAA268D83B462FC0BD10BB
BB8DB7B12BB1011EE8D6C0A77A499C6C2DD120123D8604D4CA0EC412240A4B47
06677B5EC78742FEFCE44BF6E8AE22EB1DFBE8CEAFA9ADCC20ADAAC3C0C63CFC
3B7ADA39C0AA97CA287AA3B1931DFAC0A37BDFF530845861D5E5C2EC7E59783C
A27D5C82DEDAC7AF97962EBECEDD21DEF42A0ACB73580FE360065E6267113421
BF6430B94091A2B42A2CC2C3BF2B7D3D23763B76BD8F81F317A7974C5A29C373
261FC3D6A8451E60C03FEB118AE510A5A4833C6878133CA085D2E443579A012D
18FD7A725B42CBFFA9B024C740B0ACC084C0DD92E3E329CFC4E2B36E704F5A2E
99A7CBCE637CE9D77ECC1C66D4720DDBEDC0E0857B057D019BB4C2132324B2A9
54DB76FFBE2AB51344990FFB38A6DBEC48FFE206A0FBA50CEBE2BE28FD8E6DE5
58224448274777692B818067213AD4983B07D42634F8840B6FD878D4698FFE1E
AAB2F0BAC298957E4172F101A12BC5F2734A2C358DB93D76EDF6D0CA24D36D57
8A8786980F7B2F5F384A126BC83CB7D22D504C13E3B3CEC8F2FA394863533DF6
169E672CE9991EB8C422B5C54257C66582997E82470623B462508AB5353B6428
ABB42BBE9C1F6C104A56F6F15D1687C92D7BF00C6F8129E347C6489FD4FC798A
DCBBE8656640B9FD8DD7D1F131D312C2CF747D35FB85DCE8356892C857A51A8D
59DE97F8A01E890DA5008479343B609157F082AE2BDE83E736F2993D8C048393
BD80B70A1B9F5F844D4988A574FB12CDDD4F1347213C93275718A7ECE52E4B35
84DDBD03B345F3ABD2897BC9C6E0948720726BDED2B572EAF23F87D1B4E33DCD
967D167E9BF822D0CB8E1EF3F81C1626E3123F65357D50494112084CE01F2CA3
AB00BAB6D6C7EC825EE6AF47BF5B6F6AD18F8118331C87CB83A65571AB482E2D
E257D768E496946556E5311B3C8D1E40676125C5C463F511124CA3AB6655F46F
7CFD366BF9B140E1940E13D7443EFCEED61617E55E5BCFCB4F3C90BFB9F256F3
160A370EBA3775F4297F0DAD9E14CF669C7B38CB2D16EE53FCC59444A3FDD923
9B18626BEF4DD08E57DD9280429B46221987A70CB53C5BEBCD5B2C139389EA1E
172679B2EB1444E570E4FB2E9CDF31D967A9782C3D1060E25FEFDA9A31D6E867
5EA9335CCD9327F84018CAC0A2ACCF03FBCF06FE08AEB149A58E488D596E212F
E0A67ADBC2A0CD63EA4F910768719B316042736A73C196D8618F85AB3F011E78
7205BE3178501911715F16FD79F34C2B0C99F08A14AC86DDA0E5E1DECC2A93B4
82ADF9BFA9BA653CA71C9BD82D057EDFB79CBB3AB0F969475F70DE15FF67FD9F
8598AD4F7784F086FC1153C84590672247F6EB7DE01E820CF9FF3BEDF7164D9A
F89DBBE3B49616C51E8265379ED8DE9A58777D57B95A15D3B8F74B1D3101578C
35ADD0A8D9D4DAD5542DE899339842E6524793E24B0D160100C2DB33B804AE5F
F3756A44F596F7FDB278CFE05F885E3AC77CD882285266E081EC6D193B6D602E
72BD1D95281E7B0971095ECE0EC7494D4247243DFA8385DBC5760B397F0EF9DE
EF7EE029A0C0B16FBD2D0C35AC8DDBA4E9FDA6D4CE4408C1EE66EF483DBA4330
35AB967248C166797ABD0873EBC07887EB84556F43AEDEA439FBF139A16A5534
2C0567C63CCCC7D4581D1D357E52311AF227B3E316B4289EB592EA5CC31283BB
51EC9FE6F2A748BDE8B927C96A7B6A6E5489C5662EF190E9502C097B3D9123E2
13615EACC95D32043C847D11D7DA737251FB47D0B21212E70A01A68BBA1FFC28
AA0B2660C443D24320003930CD82995B6CA72A3CC8C866B77F225EB04390858B
FF70300B0F425D9FE00B3E354A8F91DF44F0FA4452536993F03928FBF72C029E
FF203361CFCB767EBA8D659AF5C78794A5D4ECE06E210228390284F3C645085F
C552479B717261AC64BE8AD8FD28A9EF8EEB25F6A230DC6AB0708EA9072F69CC
6CFDEDC298DF2EC7706E9F77C8A04B529CC5FA2D3044E9909CD4A49E4600DBC7
FE9A727D18EA999ED767B6D299B81268F3A0B7F152A9EACD5E0E0D21CD6BE8E9
CD765385D8B5DE106435BCC52F1F278910A7453E1D5E4495E0ECC246A1A96A67
E7EDE8C1B81FA5A78EE7283509223056560C55438755D243C5F055EB9D6BC533
030B7B24D1CAF943CCF4A65FEA89CBD68DD7C16D019675621BB45566C1D73A81
43C8A24C4A470432BD989259DB9F6C02C826516CEFE76A20C4B77FF5006F9417
D29C701FBBB72A57757B2CBFC6F5D915C260859C43D16849F52816E963DF69E6
5809B7A1A57F9CC512BDC51EF2549329ADE9B5ED66F92F3918E329298D9F6293
E8614966D596681698EF9F5C3F9C1E9D28B71A246B043CE44E65F6FF48FDFD9E
7F97A02DBD8119C5CF0B4AA548F1F5EE79293E39D818910A1BC4CCD59FE2E917
BCC939A9173872146DBFB3CAD4DA410E69C542CAC64B65F6B829C08A4EAD88AB
78C203C6D210C162942911B3230B8D462CB20C910E977863B5BC5F2ADD55C74D
B7CA7E9EFAFE44BA7F7A772A1DE9564A9D3E07106E7C3EBF116741C894BF39A9
0453F01FE9A9C0B99A0C829B31A39E96DB3FB6450A6FA72B393C1329F91FF6E0
5E273B5DB89549315DD15AD26482EB823194818E6DE249207343C37BE9B926EE
DA3BF3D70B7EA564D92A65C4DED8966517660EFB9F77E72A4463CC061B079BA8
C8459393D8766BF4B26E479DA5A2F4C3D020E853171B0D1612A3DFA5264D6B64
371271F687804E60080A4C7FC4641AC84D9C0A610AA270C036838AC86A8C6A32
2C7FB4E132582BFB1566DDCCBD1F5DA09879D88540FA56F817D5C1B557C9C11D
2D1E7D8E9C5608F8D6639843D08FBCAFE02A4FABFE9E13B8BC0F4FA28FF4343B
283D1E9906259C74BE3535877F54B62158362A2FAE18AFACC74586D3DD54067F
7779D9DA069D78960F4869F16F458083B608409F1BC136BE8BE912F59CF929B8
2718259AD02CDB518BA4C4AD8F261CFEBF43800C3687793CA934F06A27C78C51
22CD9EC73E29A912F1956FBA6AC4B35FEAD22394C03A72D4AAC6C42C085ECCA2
83F22890699F277A3B4ECCBCE4AB764ABC44BA382E8F9A0553670CFCE11E6829
DCABA73D9CE75D74A63FE035DA6AE09073B38E8EC302C923C417F577823C0210
444C9EFC2B351212FCB66B4CE90406085978F8EAEEA93BFC81C0DE48C09B326F
64EFEBAE47B9BED3277F15D4F9690BC324B840252750485AD8A5BE240B63473C
5E2AE49AAE5B3839F3E07B66DE9047BCCE989895127AF92F2E6F7BBE20572943
FB64EF33B2776180606E79F42F69D23D83720FA9BD9CBC1F322A39EFCAF58510
7BD5A5C188A4F3E799A32B23859A4CDFB52C22ADB4DB30D313BD8481157DE1AB
55FEA2AA4FB28CD56DAE1865B46C21E0E0E89F92C164DFEC115BCDA359B58305
C56E941651E321CDA67159BB74CE9AA7E2465DF8BB191187D14A7C115822AAC1
C9EE282505EE165C67B85CFD9540F40E3918B0F36799E9556526F5E5F2205DD6
41EE39A4BD6C8EC20F3EDEC379F90BDE98CB15B4BA24624E146098A7CC2A6744
4D326A308657D62DC3F52A76832779BDFDFB3E488773EC7FA5F235AE1BA3C6F3
547FF24606651E5887FE8D860619C6F45FBB3B6B73E80D855F5EBFF6A5BCEC48
48CE05C8BDDBDDC8BAD0B87F3BA50D36D20926718FD3700DEC250462972EF06E
EB9BCD3B1076ABCC3DE786B58C489534C2490AF71BB6460BABFBADD0AFABEA8C
80E085B2BDD8ABD8ABFBA9D53C42A61026E5BDAF599739777399A670671F12FC
2A455157B1BF595EA3E14929085DBBCCEDB86605F30BCF8E570B4341C3751A10
FE6C3304E9A7D21CE731EA372572B28F41AEC501195D34460B4CB7D6A079D7BD
85B9A80845B563220566FEB8F341AACA788E3A182971A143737D515EC7EBDAB4
AF1ECBA1C6E90ED114821961FF7FB9CDC8E87628938D6D0D86F3813393C1B0F8
795A88AD6FBC2E709568E556CB4D1016889B947CBDBFA2AA2F95E47942252534
868BC0BDD3AC613B165583560A971E20D13D14FBDC71D6F64905DBB304B088FD
97B4BC957F62A653018E98A03B7268517394AEC07942847062262A67530B2F73
EEE1DE2A68B5B6105D8764CB02357D8145A1FCCBE19B1974E7D188BE0FB15BB4
6AAD04E02883BE3D2874FC615317B101D4DD8E99CEB6204BAA933445AEA45169
E6F0C558A7C76703D9959B4266FC6B1D8F2F796E97E492D77BAA5654806C9CAC
0D5C44A7F312298283B7BE5DC9E87714F3B802AD3E829A70F3E630D3712A8859
0E36B304030ADA0D2ACD2B57ABD9E5573D568776A96ACE6FCBDD69667868EF37
1BF4BF97B49DD9D0ACDC545F5E9508298692F1D7A25FB8A43CBCBF50D14F75CA
3925E9D2221524462A1F98761B4E749C5290AA347F0642DDA30F1997653E0DDA
51C90CB9815BE41305099CFC3E1E4DF8435E646688A6CAC6190A493572103C85
22892F912C82043AF80F61A293D8E4663948824B1F167FFB8DA6D0FC30521026
8A94F787E3E726E23CD3D59AEDFF832696F5CA0D4BD71FC54A1D783BF1258AF1
911F31464448C0709C1710DA050C922414669E32B9CDBBD1A4F1198D1C09F4F9
74B984F2CCE516A901673DE4B3F6F2B78F3EE8713C62E48F5C8F62344E371AF8
C17D5AAA5E3469EACB167C30F7D7763F20D741FD762A588BD02751783B75A1DB
76E63876B6FB9A2B8BC293A7C116E4411AAB9A60C2FDF1D3759ABCDA9DB4FFB4
CF7051863564D9EE4D3417DD8BA249945228E14A389F089207F671AA80D08B77
A40CB972E74299E2558DD70A36B6A8BA9D4BF36A724D7F414849B63D419F4B45
BB03148724B79E445853D02D69F06FC20D7DE3791B8FB54AB6996CB8826AF76C
F5FE7F2BAAADC3900F14F17E59A758BD75CDF6C8892DA1D9E5D3042D125734EB
53A8090EE56334A908924DC4B86318921169C7F112991FDA63181543D0E993EE
334C06B1A622591040A4D13176649B1A4C795BFDF16DF6E9B62353C3A97B9BC8
66CFBD491B08704C6DB6D9F424CFB1800057E4CD4218C88DAEE1BCCCA10DC61A
DAEA54F207742D31C0B69DDD41BA88727A8086962286D0CC1BB1EE4DD1AA03DF
C8ACC8BFD0FCCA75F4FC8D577A380B34888EFA8DCA131BC4999FC01E54A639DB
E0D7DB87DF0B96BC386A0DC2B658C25806C67763358A994E1927E1E7E81CDEC1
DBA0B63403DB209B0E863AED121E3736AA0E1ED55B70BC0079CC996AC611A934
830E2481F4C794D941A81A592501CB99EC2DA8DC9898E7D7052B6A746598904F
052A50EF84D1C46CFE09C77254D06D3E100E16295B17CF8CDBB25AF54BD452D1
FE2B0C171ED12EDBF622DBC6438DF6625367A51A814A040839172E3D856FDB91
167A89F2C736DE82F77A6D8F10A45FDA871DE066F5383FC4539D3C5601350E11
027DBFE4659DE91408807BD26DF0FBBEF346A224D073A11E3638F95D038D66E5
3CC9111E290624DC39FB79FEFAC07D2DA7DECDBAEAB256B88AE676FDC3CD9831
BE77B254972132E57A163B5355B0E26711658E3636933A60C554B80B5A7C816D
38FEF3E610CEE0821C68FB994E4EF6DCE7C566AF4918148480D802FAC4425713
97A62FF6727AC3BA11E892F304616D034B3F80AD2AD5D4E1DAE678029CC028DB
4B4E119164D6F9F6B7C3C24258D58F35232088B67BBE9656C74AF133C1C75873
1AA348AB2BD113D4C2F5C4ECEE0EED19E733A2A2B3C97F15CB4FEC940C45FCD7
F44ACD3EFD9932C19E128DB67D6F73FE591BDF942BCABB9681E18B6EE5C6B153
BA55F194E998B6EC925AC28831C654EB234ED126A95DBB4FA2D09EF80D1F2C50
7DF980D3DC0EE3F79FEEE1B30ED1EAA29FAA9DD9CB641E5BC06A2384A76EFFE1
487F472EAAAADDBC48486C5D96FF0A334E8F5667997DFA2EEA9B7EE86F7FF639
8C06F8F578B49F50F9D58FD4161F04235FEBAC54193DE67EF18181FF138F946A
8E18E1838F4BD242BC436914F8C55BBCB427552362C7E1301C609871641736D8
B9C714FA8870776EA3C4E8DC170CBF5F561E004C322217D2A01680D7EC23752E
647F5E9284AF035C5C9DB4F8EB9844FABE985F922CCD96E0CC6F5A17D0A887B5
BE606C0A21EFE6853F86A81F2294CD52B8B3CEAF5CEA7C3AE566DA6FC9118B7A
2B088D87B141453D3D3AD224EFD9AEF1FB4B72CB3030285F528CDD83794B1D8E
0D6BEFC5DCDD5D4EEFDD6ABE878DAD54981D7C999B88588E3BDEA834A3B0F645
92C48CA0F3B1DB49F96AF896F9B09E68528214503E95BA71194E435A0810307C
C13A1050AFDB5FD2070031BBBFEE53E415C1E1417E02C197B010E49F7B468D51
C05113E4DFD75D28328970333D68C7090E454AF9E45392F1B4CA74A7A89A3A2A
4B3708E7272F426F700148DD7894AB6048D55F04A4B42F39A4935E10F10BAABF
5FAAAA47A65D35EDAC51547EFE9C11BAEAB87E7827B8321C7FD25344A0A36FCE
EB4DEDF80BA158F65C546E9ABE7B6415B64E2A21E04E486126604BB3082C40A6
5639E91B97483486C428868DFE4356AB5F2F38D70FA75397E8127FD3D47DCF06
281811DA066F16583E31EDBAF6421FD5099C6A2A421B22C399AAD5D324BCC6F7
9069690BDE2D5DCAB19AF1EEBBF1786B432C43F3C7361171FF479FB4FDFFC814
7219F8BC56D7731B980EF3C793B89AD3612894309F1DD29EC2917528A1E4F90E
BE4A58DE01CD82B0B8D1C2699969029ADA6BBE4098BB47894402F0B11E12FE6F
8C7D459D41AAF3214DC47D57754E55CE6588CD0FDD9D151FAC24FC1467A7217C
1C887F89586F84CE132D460067CEF1AAB1132A7760C13A25D4F58FC0C20BED7A
E3AFC8DC88D38BE549181454004F18A348FDA4446E35C019B5DEAB90F1C88BB2
0B7662677D7CABA2D572D5EDEF408B689FAF78D1103036B695EDB12D5762D807
5F69A14582986510FAF7CC85EE25AF847626399CAA221DC09190CF963F70D6FB
253E24FF4AA72AD9117A726322FD0A2F50DA63265374CE25BBBF3E7B160A35E9
6685E39DE90AE39CDDC8ADD26CF9515090CBF63F37CA1E51253191C462F39C2E
6D1E17C5DD710E6DE3B94D853362CCB1538C5D0662C694FA028DF04128F86348
FB9A511FC9C5F2A4948ABF4FFE049B0DDE72B9F10BF392EEB7EB8AED2B53A6F2
E58A123D80514590F1A6F5EBDB837B5DF27E58C30BB0821342EB97D8A5451711
BCF10381381D3FDDBB3CB3324D30BF1893BE00AFD1CF67018D820E9C694AE14C
87D6F5F293B097783B27C733DDEF14A8F726993066F1D7BDA1CC7E62AC1BC317
2CD857F2F8CAA067EB6BACB1604BEE11CE454D7F620051B4131C34AA6A118181
DC716145F7BC7E8475220DCAC43AEF7C894AEB588BD00A58807893395E20C0F1
233B37DFFF06E80BDA2E2780E0925CBA7730842B50CBAB99A691D4BC90EBEBBB
AAEA63C90535AC90368B31AB3110CB4EB8D00DF6246BA012FE0D212D2C52F35D
FA76D8BD28B2DD16C22B540BD2E3DB1BC2F84FA09BD0F0F01A5C693C8659E5EC
E5F23D7167090DE590FABBA2C4A61C3CC62C791E25F5D42D773503A871E7003D
92A42252C0BB59671471F7A62DE9A66C35F09BA6F8E302F4CD994EC08C00AC6A
66C51254F712840B3B151CD82DDFA79D31F0B4A0485F51334BDF5CD5E85B5988
EF29BDF6223F82F41B3259A86D6541C9150BDB7276F5DA72A975945FBB6481FB
C4F25889CCCD84E337400451BAA073A1A81F8BCEA1B152FCAD7FAF84983CEE3B
6025680EB3A373793F0656C0B449E94C749BD813E5E7200FD4EF898C821C238E
F04DF7BD7343B7724669B692ED4BBF2B0C0CCADB597E641054899B9DF267A462
665996C162A7229546436378570253F9314AF146E6642996411987BA74CE27B2
C4557D4B04E7F771105122A7F43B8429BFC949FFD786A0AFE6EAE3F7751A3CE5
CF1EC4C6C2AFF25CDAD43BEC7AAED1F6BAD964197FDC6B98342DF4826F5D8503
1896D58E539449C89C4C0EAE0F92D49E447C4A3E100967B3BC7F3D19501005C1
DAF88B9DE0152320FE0AF6DB142F9D944983B19A5C42053282E1F9391D3D563D
72EDA0CB54435883A32775F148EEA9BF9AEF03C44AD20286FD9F694015EA9361
C2B4BAAC06004B091F3992F71A1B3D33AE7ACA07B528365AE5233ACEB38A5142
4F267E9713229F7B3ABA30559D9E4B6B06AAF2F4CDD8881540047B466EDDA861
0C578650E9B6EA14B973099C40B2123936DBF7D6E0C043CD6D918C8C6732089C
5878537663E0B0DD1698B9D1A2777ACAD657DF71450196C47EB3AAC7B89EEEB9
E2F9CFC6BCDFD9A438C10E66D9ADD60AA8F5B2BE8C21D7344CD8E8A6C73664AB
F75B5D88EEF54D2F40E408D52ABC831EDE8F5F1DDDA31D19D5741193D80A5D6A
6D2E1E26746A94A779EE401A85A7A83DE834E58BF6CEBE3F905291691FEFA90A
3DD11250F79CCE03F54E22E2B141D5417FC4E56B370A5320407A7883957E4A59
BB4D268C8E961A6E25E7A787826AB442B32C4FAFCE3DD2B1B8A93D032C08521C
CFFEE1C28C1EB6F7EA0F868E0B1E18FA0B629E8327A68EA20601AC9990720732
AA1A19BABCCDCD717140938D234BB2DE96AE09E96B095B4D29114FDD325E6CEF
2AE08263950FE6CFD73126C2C136176ECC1145CC3BC61DDA6C89E780F5F132D4
69741F1ADE900657709B4DAD35578DD3E41C3CCF972821E726BD4CBA7AE8BF83
E11DFBCBC20E2347715CC3E50112B4E095F2C33829E720848F8ABE694A82BAAA
4B6E4608F0FBFD2E57F103D8CDBC805E5E96565C2800203D4BA3DEA976ABA8E7
F01833ADE127505F8CF12DF9A2CBC512126729C503B45FB0D73CCF977E2D21A9
20B885BCF4574BE6FE1505687BC463D6F3A2B9511EBD13E6A5D5E64C41B6BD1F
16D657CDDA0DDE5F31C9B8DD5270A72725DB46EA6B672C3C04BCB42AC42236A8
1DA64411C9FAD822B546D0B3F60BA1D2D3AB9A24158569F13BCFEFBC700CF3DC
C7585F894578F82D9DBE70F640BEB821AD49E34383E63C474FB5CE992FDFFA64
2CEE775E9EF547255845970C5AB0DFC8CAA08AD31AA88BD8E49C55BC1B68C60B
75E2F3010CC15E80D2594ADA16D9CA01B23D71CD0AE618D84B06C1D9FE94D42E
D7326EC4D7384A9D9A09994282B995485CE83DD6F787F0D37FCFC704863F7BCB
E3A853130C1166EE98EEC9E4A64869B9F4ED56C6C5CFA68B814B94B7BE0A5F24
F74D9BFD2AE20A0FB0174DCAF6823A371CAFF56A1A6A0D51B9C453592938E507
53358D106FB48726A31D7C16D522D9A45F49A8C83174A9AE3F8171760BB6F161
77BE7A7D12C14CFFD98A31AFFFF8C34ED4505C7F6607DAFB9A2BA3CCC0066047
253D42A7FCB3C1780A0C4E8BD6024DEBF2FA31E9C9379F2B3440AEB83539438B
B83563DAD9898650D1F96A9307BF3FAEF50FE2825A0DF9A87679D1C87B317084
C82296039A2D9E5BE8B5C270923AD51301D4FE634EE1B8BA0B44DBA7B7626067
8D4A6E581FFA2C8CF72654BA38680C93EFCFC2317DF28936561AB83E755DA086
D524E547FB881B376C717628D0C32285C6D5F48BC15D9DD38AC357F60B0D5EF7
0270B40D4EFDAA421F4059C474F4BED185568423E145C6B2DD38630FF688B69F
4881D91F6B49724BD33EF52F6EB0456379A5018902545D6704FFF73534FCDE1C
8E7526FB5F8CDB189CCAC92D86370D5832665C5E989B17A3A72248A138A3CA86
22749CD7481175E0A19DF3DE86B975605D286CDD3FAB8FD8D5711B8ADB299472
72ECDD4FCACAEF0B0D408990758FE7062525829D6B06C337BE0C2A552670B49F
6EAD48DBA338B09EC96E77AAC8583B1FB0BC61C7A26294870255E4A960FDF333
2BB2178486925CDAB6942722DF221264996510CBFA13423AB5921DE8EAC56ADB
58FB18C27A41CE503CAC9F9B48E2CC80A917B83F955C00BE042DC2D87E2C0ED7
0F6F31BBFFE54A8505E005C9200CCB2B476083D7E5597FDFA3034BAFB367CE72
1AA7121C80D154E0955DF11D0B83403C373E5CDD5962599AE3BA0D086EE6BE16
83309502F36A826EC2C21F16F9071872D10DF18FCE12ABEEAFC88F8D74204901
6DBF2EBE83E22175FD33DE7F728402CEBB6FEF5567D53F5FECE23D72A9F61619
E09C9298702C6E64F5C86707D726E8CB6510CB7C057C2D55F38343A9C9415419
E0B7399145BA7A01B9D57754D643A8EEDF0E178B88CDAC56EE02E71CB861F900
BF640BE1A6F382D32A83F0C7925D10BCF081E46C55D9E7AA3C194B3B1C719217
41A4F2D840D0F744A1470A7A67AA5644EAFD78776070BF2E49EDA9528B7D8F87
24EADAB1EA2DE9F3148D6FDE14047075A8E61E672A6496DA97D96749677CFC68
8147691220B40CDED1AADCA60A7E22E14EC367428207955D53D70756AFD54C0D
F38C3D61071868A4CE3D3447803A23EFAB365959491BF8765EDC9EA745830143
28EB90E4A7C81FBAA0F51DC83ADF47D5DD8DA55B1E89309134CDB5E5E32533B7
0D1E617E255A4A7A43966ED6BE28B6B31D984F0072AA303D33D5478995B53381
864E316F70A65AA798B36A639CE4CEE3511B7633F41B40774F346250B4490787
4A1B286B7DCE0D4D5B51864B341F567ECD8FD94E2F8F2607FEE1B55382A62B35
FA16C623CA952B2158B7FF166C507B49AAF6FA4A71C74683F2BFB98BC9197C34
1105B044E7AA81165FA1B97A103553E701D49235C7430364163AEC6E911191B0
6F159BBBE9A45A42B752AF11A279BA06F821525DD0F47783117684C81CE1B287
2E31DA8DD0DFDF35008668D8257FDAEA0941211A063F32C69E40D0F63977B44D
C57D2D73A7B25D911EF17B19060A0D29AC436AF3CD4545A0917ADC69145C50A4
B96604D73F003E662859D8C0F692A22381ABB95BDB2C762D2D4B60D7A3E379BF
000C72C3891E4D22B39105011CA24A56DA1CA78A8AD61511F8DC678BF43D83C8
1B69FBBBF11FC3780E630A24EFB520A6F60B505174A6CDBAA8AE90301A28BA4D
14E7FACE24737C044BBA551DF5D54339B1552C248BEC00A15EA0644E6EA0B2D2
FC466818E419883FF01BB562BF7A8CD1C6CD40BBB35A568176C7DB2502C4C4A9
1BC788FC12516BC85BC89A23C2C93A9493873150FC6E903E8E0A2D4CB9CD1CEE
0FBECE6A4CFACD75E5038E74DD522232F5546377C9A9BE0E1BD3D94748525DD3
7049D7EDF4B3170188BA06228CF9255A6A86A6FFD1E746759CD77594B33D93FC
B5132651E228F7C06894465ED0CC37407C24F3246D0852DA7071380F22A77151
AF50997E8907E60C2E57D997090E60FC7DEA0429E44FDA335B8D86E8B704D37E
19D4F136FFEB7E81904730359D72FB1F64E3B041A69B2444C7A3914AC32F0289
80AA50C18C5C8C44EE90A4254217C635A07B1CBD85BF493182D44236C93F939F
FC5263B313FBF469BE383F47BB8E249300A4E2A66056BB18F8C1E71F0106A0FC
93815CB4580C6C918147E883F119FA4D166A8C09E1B766F6B41E595F24356F8D
6E6EC6D1476B82A33222572B4DF407490D64247BCC7730A01122D44298825FB5
9561573AA857702B2A8F48F563EDA3F739216EC39BDBECCA3D62CF8656281C77
6890FA71FB5A9839B25E59F14F692AB281984EE6A56410101576B49CE7F51C93
A584D93CEFED8768DABF7F2E4FCED47D16F4DD200D2A3D6D50D8A7B453A4A15E
8B8137495F25DBBEDCF11EA7E85280E03809D0363830D1DC7502CEE16E00B9A8
594C5E92D63D8CF4BB41CF35ADCD5851E214DC90AAA0A64E0EA22D12EC3B1506
0C553536AFA1AB550740F72BFA9BBCC810A6E3532F63C155FB86CBF6A62EC2D4
975CE83A544F7F4FE29CE4952D5E50B1AB34F96DB9F031C537925CE75D020391
179FD995E5020FB2B56B488D0D6288BDF28D9B618529F7CD8EA038A4EE4DC836
F31EDEEC9FADD9500D776DBF675838C2E27A9A1C75D9786FB52CD0C85A5D96C6
22B04FCDDB40B675F081053377364DEA4935423D6ADE78AC5156763DCB4ED134
DD502A5A78CE2A27FFB96A311FFB2A6A1E302218F9F363EE87449912DFE4E42C
2BB3C481C676B3BB029368632768C2988B95946D8D665D7AD4D88D93C0C8AB11
9B54176F13818AD16C8359EA9E653F77B478161CAFF62BA0053F44244AAE2071
2F845F80654270445BA9253F9E17A1E0823C22275C007BCD90874F5E3A302E74
4F13633E003B09BB6C630C32A3DA1E51A3282038BBA7F7FC70987A57EC73E5A2
6445B4F38D76A281E581B4391D0FCA41838CEB488F113FAB3617A13D098832C5
8EBB4F54F943DA2FF24F22848DBFBD511B8CAE488343C923BBD13695840A4B56
142475D14D8911F60949C075630D5E29912CD7E6362E528ACE41DEEFEDFB47D2
36F1DF488EA9100D499A87C0AD12E8BF9E446913C4321E200B177332F44DC0F2
A1DD706F2E3CE9C9E5B4450986908EC3E769861BB34154B0E158B295D6F56F1B
E23D9AD3885E2CF29FC8866B0F82F1596EBD0AB2CE131DCE3F5B17D645EDBC0B
373BF97CDA7C326BCA16BEFED5CA2206AF0735FDA1ECD4B5C158C66EFEDCE081
5F9DDF6E6A7F3179DD39B987048E8FBE346C1BB6FF30E18A42C47DD0FA1EE352
1C98714EC451AB5BC77457B2253F632FE978DDAF5E0A70C2137B983B1A5A9DD4
FE557EA837042CCC330766EA028CA0FD447F078CD5C070403230C4E7527EF177
CB25E684AE7DD09D090A60E928E722B7CB9131013B77B216FE145E5E49AF9C37
D1AC2904601397AC6124220C280E417BCDE241F0C257CABB03EC5B28D8121A26
75BFB1538011B31D5E979F36534284FC5F88DC7ABF2F42F1418BDFAB8210BA22
E3115454DFAC85CB745676F87833CC5803627C6DD6BE70392CB9BE4E6127C9DC
4AD6EF6EE0D15AE4C65321DD0ADB821590D104EBADB9DA09321173442805CF8F
8F6BA06F1DC58CFC0D17C742914ABDAB3161C2AB81BF9C9617CDD08CE82FE046
C615B231FD5B7731010E08A50DD46A8FE533C84D84292C1307A5CCE2837283F9
6D066F4EEC992F3472671D5A020E9A7811DD9012B45CF0DF0644B2E3DC0A37FE
1365B3985DC2DA7D7E68619337185BDEC00CDAE3B0E9313749E436516518542A
B92BC063CB94BEC63870B1F0D710AC71210359986F177C33E5032432E7B004FB
97FBF9633F89417C286FB98AB2D2D3A6081AB503E9DBB9F209D9A01CC283B773
4022650FBDC39FE0CA059035306EE8AA00BBD282C6762F07FECA518F59858868
90199ADD20EA5D10BD495D1151F4BB20BEFF60640B1083E681AFCC44A5C176DD
F5EFF2C02F57FE5DDAEF20A93CB59CB9C38B939602D8F7A3F70B39F1723B8E66
8822F5358DA447506ABCC3C649EE21863E4C426DE45811451B5430B7008EA14C
41EBA75D41C7B997E60ADA11E53094C98E78B6C552479B1E51C74F3BE16F39C0
B59D107BB8D658B0EE52466D6DDE336D4B5F9F839546983922682D5BE7DC0912
EAC8754AE29EAE5AC87616C0C26855C346BAC56857B06B212C00A1CC66C5F98D
99E6A83BFE486C29ED82B2F9D5CB5D32B93F2CA8FA546DB1A5A2BF371F9B76D8
D365CDD8FF305059C2E913B7978671AC30CBFD6D58CB1599834A73F6A7F1957B
F95A52353BFF9D31435531D92CC9099C90F2D54C2D906F5A2D07BD8A312A3101
5011999870F0AD19B5EB1B9D54BBE7593C45B8F1F63FF9D85D052DC85A500806
68D9F648ACE56F31BE53E15AF93AE1D7487E2406AD30A2E8B6A1A1DB86B1EA36
3D697EC9D666970F39E1F01522BF2FCB6B28C527C32E69C6250822504BFA173C
EED4E2DE5B7DA75EC58D886DEAE5237B3467B1A26791BB653B865750745817CA
28E72D27C36FC9583A048A83F68049C707E5FC1473E7DF90042780794EA774CA
D2ECA4581BD58ADB6AB154DAE7939E93773DCB2823847EA18AECF20E578428AF
5EDDE762D22B1FB4599FE5AF10E3513D141C31DD7109BCA7E9D83D8681A2A933
8E8F49892490A1CF05305DC3B29A1E317946C925E8C00BB3E642A64685456B6B
AF629AB80858A832ACB531A076037755496C3DF9CBE5B8211CA8E1F3112C0D6E
EEB97C9509C9294C6FDD6D4FDB75FB0AE3EF1F6099B844379760DFA626612E71
99553D3194EACC219E17ECC2212F0FD468AA3A8CF8AA023F208B63AF2A8D542A
B58A6BDC7D7E585A9C849CE54A33D63B69215172378E708DC404283546D7814B
A53FE7FA161FF626461DEEEE3C1C47A04E04279AAA541D411A0BA64BAE383FF3
3D70BF1A9594E900B2173E57F61B1537040858EB3F538801E5C3F58B3EEAF656
E361942F5BD8DFF8B5821ACFA0823B86412505B6FCA5AB5BC8937AD9FF4898D9
706CDEF0F49B45D16CD53C8020A15AE53C4E742567609F53B5B57E579DA191A6
3FAB427A45CE4DB5FB80350DBBB7323F2BB020C5A23E03EBEAA640CF23D89D1C
2F0FFAB206EFCDAAEBE72E55AB10A4980F44CC84F8DD351882DE2BB1EA71794E
9FBD38B14F7FC7DFABB3BF569214525BD6964503471023C5E8F779061500E5A4
39E880B3DF3E7BEE13D71837FB78CD002E65B96BFDE4A362D5BD17C5548CBC63
BFD8062A3915AA5CB574BC60C16FEA1B452F3C4B872F2BB2200367B4FB6C7061
5176F41A8DB91E6772862DCDC7E2DD3206F64E3C71F4704A0B43013773ED91A9
31CC43441F312F05F7E9EFDE2B0457EB8D5467C52CDDE1E7BA8E5424C8D0A899
F621CB490A6823BF8230D490D04BF1A081B8EA09254B84B347E70457B09A1F58
91FAE76C57B6AA7F5B3BF9B315C9C46AA3B83C633E43EB3D8FF394D29CF05BBE
EA60483DA76133EA5CCA699072121EF54A3589AB493D1673B1A2737590A0A17D
5D3A8DCE86125D9A3FABF08480D6B95F1A725A726F554597CAC157F3D5586DB8
783F06030B0E5C758F7A279110D60F09526D14762A1CB6478A4891191970C0F0
E81DBEFD2C0D8E8CF3615342A3944DE09291239E7CFFD239B90218139ADD20EA
5D10BD495D1151F4BB20BEFF60640B1FFFEB2399D39EF436CBA30F8EB1A6E543
782DABE3FF8C25BCAEE932D20D9A5B4779DFFAD7B3E5D447023D643A3A633FCE
D702FA11B262ECE3D4DB52F38098A03B11E17693F1620CFF75BDFD5B8B636585
D62441FCD0648C275447415DDB8B9B0D8D847664C29F8BB65B115E46DCDD06C1
BD1BE8C562766771E80C997F5B1F8692E1E8CBC367794DEEEB76DAD21733DE55
FA05C2A592D1E80050D8EBED3609FE872F662FC475BA88E84C47AF37E871AB50
A4B273ADBFA7CB2C670B71BDEDA9725503C98440DE55077E624BB8B2DEADDD47
5CAF795663765031E331E89BFE0D5AFABC3041BB44B933DA3A8336FFE9568C0E
6EFA84DCEFBC524C6B50648A60367A6A4D08FD038BFD50AFC54127A27B4B7E6C
306F51B9F6DEF9B5D3F20879DF1C2BCD0C0F042FBBB8155EC868D4F208148F47
77479522DDCA89FFC702276681AF7D03B31878FBB1F73E41AE22B9BCF6423EC6
C03F4A6F2F81BA6E4B03157AF42FDB15FB077AEF602FFCE688FA6D251EB0763B
1FFD750A614E7F4D6679DAEA587D36A213850242B44D3D3A0124F417DB192F9C
0297239DB3C1D1AFB06DD6AFF8A9A814589481EA7F756273333E84F341637A1B
DB292EADD055C97023A88EEB200BBBC5CA508A4D744580C7795F7B3D0636601A
0FDF92E2CF8880A9D1B1448067A3F9EF95AA52DEFE8A03D9465E2180A40A1C23
A9FBC0897F01D7B319F2DF237D4CBE71AC6D66BA0971925C5867848F9B3286CA
734AB113866881201429FDA949FE1F364C2F744079FB4E78204F116B2C354852
A9E33D2440FD85E483A0A0B50913DCB96FD59E23BF72280FD906E282172C8BF9
95D877B60F6AE8FA7C6A8DFEF294B4268517F1857924960379862D70B0FBD115
BE7EBCE816AB40D2ECDB17E15F23743D8C16112776678BB400C75DE3A3E70D68
714FFD80D81AE3F51F5EF7039DD184011B7B7F6505A11E4649FE193871D05FB2
9B08D5DE5830B2D48BF66CF1EDD53C5741548A848CE3BC9F4B77EBF56B7A4ECA
286953C8343C031093B2E2990ECE96EF6D712B4FD78087539392EA3BC9D01E32
4A828FB79D8915451C825FEFEF2FABE188076F7DA722852725088E187DD3349C
E83F97D3A722E1D7BA6BA5DC9D9AA36A3480552044F527BB093BBB0BB972B4E9
C7989902475E6CE9C732AAA49CE107C713A3CCECDFEAF153A18BF0292CD25EAE
9A176C9151F9C4EC7FBCEC63D2C4C8834BE9EC41F48EE50AF6797489236880A4
C29788ACC23ADF1096031DF2400A054E10E28F8BAAA5339C07A9F37C84D143DE
DCFB27AD763C746E1814DAF9B2E7AF27AB9182812F516DAF8BF9F0F7D986B1D4
352C65AFAA495A6B8B8F1919AC158DC63FF4600FDF993CE23D3795832B92C298
DF2EC7706E9F77C8A04B529CC5F6D78B7C0E94AEEC901DDEB541604DEC0FE90F
A0685AF4A42E9527D01989A45B5543596F832A953F8F0CF61F39C7785ED0C0A9
F051084E452C075130628DA275FD4F4459CFE4FFCDC2F3625DBCE62375D1DF34
71D83495B19A93EDCF15B83C7F0DD201D74FDF7F448889F2CC1668FFA597A98A
CDB7722E297692FC187C000A9E64BDFB0C56879DC4C9490D7F1783EAAB803194
131A0DDD4C69C1CEEE50D2A6433A1DCF70D9247400F5F8366FB77E42F3E6FB8D
2EA1A31ED42C785C186D94311355CB22E1C8E3601908C1845385477AB883EEA4
6BF10601CABB75E0DE4CA1248F7298D62092922F879F7F52251AC640EF478622
B6F6F4FFFF093DD4F978A2E84EA3EE8713D7C7C2C3CF815587CD7BD450098C5B
7DED6374985E59BE827EA5A22FF692A71E58E6534EDEA52AB1E9A12A4768D2F8
048FD076AFF560D47B2E423533E0A3F43A9435233B24358DEDA4A5F4A3EA5F2D
B01A0E1BC0F229B4B9F28DC73A77C70A5E9BEFC741F6E177F098C56C652EA44A
3D140DB2A0FD42290D8ACBBC3701A6364E311E5EFF4E64565BF8CF8AEC128149
B358437D0CEBB9E0DE0C2EF632DBD7F6378D544355A4050F873A6DCE28B69125
4DF65FD37B11E0EC9C7F554A634A653DE008B33BF01981D7667649523E66D810
114DE3E8040AED15E5AAD0C27B860831E4F0D72260EEDA255F520ECE25559F3B
23D9FA81540F5D173CF3236040BBF8AE8E79C861E0641C986ED7ADCEC73CAB67
F1B11C9239069C7A401D40E2918D0F2D39F630550662560F12C333CC95E5B4FE
9FC2A8A3190A35799A549FF8DF04BF49A127F12B7C8FC5B8D636D725631F113F
A5FE706787E65F7F521B0EA51DA26A509F71696EFDEA74035D067712F96772DD
1DCF63D302E7DF613C774F358CB2656C4993FD35B9B012BA18613732D7EA32F9
2A93E32F073FD822C9DDBF467A1A7B0022978BD3BEB8B79E032969680B698066
04355A234D00C9D356E29C1BD467594177A6F4D4BEC5823D589ED12F1FBBE1BC
F700CCCC6D8F0128
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5020D74C7714FF08F5AE00F69DBED351708B1C760171CE5
5D0FE3BC5F6769FB19C7951CD5DCA774B841330A2C8CF59CF458230A1642F956
21D23843C4332F05F5AF14E70EF052F02F7E3F51D6E7D68A4FED8D2C4A733AA3
8973CF4CDF768C31E35C395C3BF67A79F8B1AC292F38AB2EF22A87A8ADBE2C55
747D7AF3101C5F1A2A1BF6C0E245AC583FE784CD69B918457FC63ACB5FA24E41
CAE39AA9386736476F5C0BD3D01ACFCABB35BD346B884B97EB5F467C93A2FC7F
82A0B3682C1D7B0CAE0165D6FE43CBD8FA5C85EDCD122FAC36F59FDA7CC4EFE6
1F9F8E88832737186037F9E5AB161B8A2090F5569529861FAEFDC91E823E0A0E
A92E7F1118BCF413BD355CD844D0F88C47B267EAFA1585B4ABAAAB9BF885D233
DE4656E4CCC1AC1A5762BE48F5FA88A0020AF17A438014B5902A55EE220152C9
0348CF590A07761415D2F53A866C95D4A6848E2BB7970D176670F90765843635
9C2461BEA57F9CC512BDC51EF25496B2C2253AE85AB38889B26761BA509C7F63
8C6CBC4BBDEA74FD3B43A178C86F9A97423815F5FA2C09BA590B8371D5B7758A
43F98F4DC4792308CDFE2779CA6F20ACEF23FD8FC11F483C0CDAFE837D984A76
1286C4DC5088F5DC4B8D59F781ED48736CDB2D0B9B51340F6218CDD622544552
9BAB6B88481D111091C2CAE5E19903BE5F2C90E79E2469EFE314329B4653D49A
0C4443075770A91CF9303D9A09D90460D4094163FF9D5B9B8328B7D716708A5B
C5AC3BAB6258E19FA15BABC01C842507B425F413F5CD32933AF5DF44D51787BA
9027C34FFCF0EAE1840E691E7082F8BB15A4E9B2BEFACF92CB46E229D1C0201E
E1258C35478E5DDA1B9710CBFA65D1C788E29BEA16B3FD2201250686F02CFBFA
121208FB74F6FBEB770091BFE8FCE0D7FDD0B632A343B6E38A279C2993F343F4
8465CE9DC9E8C156E559FB50C47152D1F35FCEBC5FFF400BFCC336001F8F863B
26115CF5F0CD1789FE566B01F668423A7E374D082D8E0C1181013A82551989F9
0DA6EF9FF06FCCDC760F21283DA5D165F10CC2B8F46D9CEBA0C03EC78BD0FA36

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4A2DE9AEA203B209385B88D9E708FA615ADAD672C6
BE223D5855C0F6753649EFC00A7683A9EBCDDF1610B2D942987DAF090BF54FD4
E7304082BF34EBA0169EC3F6190879D5D8DE05CB5C6CE7C2212251BFE8824A87
3A277D0CE8C588611AF4987F7203DDCE93170428CB54EFDA16BCA73256C1FF85
2C85996873C9487906AB70DAF5E4FF2EBB5C7489358365EE072EB45FE7328E73
5D241828F39C98E813E0B142027DA0842BB3BB3A4EA8DE8EB34BB81AE7BA9B29
193A289A9EA7EC158512A268417204F047097E042BB52BDA0AA3ED16B4315244
E3BB451A99B211EEA2F1CD0A5709AC8CFC3EBA9A0C45B48925B43CD4417517CF
6F42243C234413756CA68A0F125A0E7C1CA1F6166685C3FDC27532C931AC8B86
E81FB0223686025707E5A69C6BF3D0C6660E636D6AD25B03A44355855B2712D6
F84E63A541739B3F161891F0FEF72180DA1546675AE16824DD84B6CA375598B6
C439A2E90E30B7AF6043F860D5D548B166C25921D8DDAD3398299D23D94203ED
FEB2A8899B078698314F08981397316AEEDFAF486F58FEF25284B5B5618A6762
967822C2B91D421D3C8CF5D76D071D3748C32BF1C779E9131603E8C0EDE2D696
E60DFEE5F15D5EA092DCC4D49B16373FD58807C44B06016EF5E2670A911AE147
CC5A9756F870A1716B4DC3D868BDE539079576E5CDFFAC34E165C063768ED394
770CF07675657587CB8A56596847362B00E9728B7CF7F5E85673E4B8C4F424D5
94F93A6861828F6251F206B9131C951D1ED4364A9CCE5383C0DD92E3E329CFC4
E2B36E704F5A2E99A7CBCE624FD99EBD4EE699630BC16854CFB80EDEF8A6A652
03EA75BF1416D23DA37B18363AB001813EFF029266FD7220DF1315C0E76AD8D0
3FF4CAB5E5114042B951CB9E36B323D53B28643AA12877E269C4D95E1ABCE508
4B1C0EE6096E008A5C34BEA647B937325FBA2FAFA9F834FC7F5DDF178584A24A
214283F53AA2D015BF620BA5C87D84E4607F3A29AD8DB076BD9AE6E949DB069E
5A8CC9484A18CBF278813319FAAF6C66177F200389C2015EE81663AA56EABEF7
C4CDE32059DC33368DFCD76D138D0BE636CDDE883E1CB4ADF94B4DFFE102DB0A
43842EACD9168B620439F55FCA7313B67CE7FA22F861B2BE1B1041C5C68C45B7
1A717B81834A23F54E80647B84B6EAB895BA6138753EF23A95D41A8069B91B9B
0B327E651C06AAC2897A2E839E3A2225EE93EE41B03F3907EC73E5B4F9B71156
B357F62608909B7E4D0D6E6DA17D2763E1E130164942DA5F704DE35D983D12A3
6140B8DA142FD05AA44E8034AB75C30DEC81BDC725D2CC7FA26EF0C059090FB9
3A5747EDA57889E0E402EF14AE8BD323700B083E6FB9B54FF40B63FFEF520AE1
5B9882BDC14A6567C19ABE55F8186365B30C9002FC88AC0C591F66241ECA8269
A34B5441CC0CF92EF7F66E79D3B2B7687683D34954230DC6E93A7772A7BC9056
B27636A3AB7844D6308C174441730ED96BE3E09FE4561AC4F28A2C7BEDD716B3
3B820BA74356DD9FC8C589974C55513AE70589392CB5599C789178CD1C1C86B8
FD8EF3FC186A8EA4C9BE51D592FCDED41C3662B6A487F14B9D9A5B20898C25C3
4DD931F1B09E72D4167DB96B594B7F8296FCE3845ED8FAF19EF067F6572E2787
8BAEE83AB15A7D8416623122579EBFEFB21DEEE302647D68DF3B50F5CAEA8BD4
F3E91ECEF9412CD96BC9190FF4B231AA728E36BE2546E81C23F4584FBF0D451C
ACC5142CD5AAC12ECEA34351F85390338ECC499C043E346A4DBA66B7EDE932FF
D84DCEAD5F98337B73527537B8FA58F86F01329F1C4BDC2FBE36276FCC5A538C
B4A58590A3D15A7909F012E909D4F3C596C6F28C2EE0009E717CFEFBBFEF27CF
58AB01C17F7F53615F79D689B6B02532EBE773369461C682C841008292750A37
6D0398DA95DF8AA168A0A9EC40CD9E45022A81934CE5B9973ADF81D7EC966369
AFD3D36EDE20B10EE93517665826A01E9F0C9B401CC50F9B0A3DF60AF84E3C2F
621C38C0CAEA89B2205499005327DA99E494D9E1FE8EB703797B611CDDF7DB31
F62CD736AD7AE654A7A2D892EA471590989ED2A8B9CA97C357ABD25D6B8DCB78
E81FB5B8D5C70217A7BC930F472F93E247E29CD9852001BD2E16E51AE491BFAB
A39D0F2725E0DBA7C8CE305DE7C1B59DC2184E09F7B7B2AC0F915A89AB253EFA
653E29CDBE7BEF9D40CA8BFEAB9B506088DB3CF99C78613AF62054AE1A32A95B
595E32FF28C330E73A2D5F605E33B1B0E45BE31A8DA7AFFA42839CC734E717BD
D52F97832A24A6606A5065F649FE81E6B3B1E8D0ECC21206BB80B2FCB7BECB03
39036F3C3B3A2FB108872E8860AB6F67961567329F5626E6328EBE3D35B8883D
AB6FCA8A2B979837A433DEAA348233900A5BA22C873A42C13AFF73AACC425448
8A571F1CF7A9B7009077815F2D3488996A754F0D89465BD9F32B061E78C54C77
BC1DF51167138A612BAFE409CBEF302E61421FC31A29D22A5C46B2E75557BFA0
C123C0DBC44BC7BA77E553FA3B4CE88FE87326511247518E629A2B70B0577881
BA6D9347F9A8303DAD8BDEEE87084A06B962B7E28A73BE0B2713DFD32DEABA29
3EEA5ABD85A37B1F3D63ECFC9C885D638355D76EA0130CCE173653E1733940CD
BEC9B476678A7BCD0C6AACB39F1863ECE4DDE11AA3604E2022AFC909284A4D43
B90779468E29838365121EAD77DB71CBA6FAE1532A4AB7095F9B0A6F329CF352
2C813AFD3714B9A4A8A22C26D9970DF9F48A4C3A801E35A650279607C8CCD738
1713A93E5F02E55EF58E729E06BA415230C0578017DC87B4B835C7DE472E783C
F2984139C440B1826E3D41A3E8AADCDB4D18753287AF757E77D486D15908302B
0425976C12C80E4D9A88629DE47E52E3669AB62A75EB16BCD26BD752DE5BB21D
C9C7FCBF815D3F994BF9AB0BC0438C5F9AB06D6FA688C48C7DCAB3FD13EEEB24
95BE6DDF7C7106C66F3EF6A89F9D6EE68EEE45A1E9807DE85363DF1E37946025
9D44CE016453B2D237AB3A9CE8C36492E99AED33256A1A6F3303F85A20A40EF0
9A72B1959517A0630A94699E2A1BD96AB5808C5755EA09921F05567101BA4EAE
81E70AE16AF7D9FCD676BB03B407AAF88101D7E9CC89CBAD30C59122E46D3E61
F8C996A63AA3D616B447B0D88B533C973DBBAA82C5904BD2170921D4B2CB846E
609078D99817EBF4E753A713F08859480588CA6F6C580A811E43C9F585ACD311
E1BA537EE424CCE1F22EBA803140E55A85BD6420F6F968B2F6AE2133A32FD0C3
EBBC3CE5687FE59B9CBDA3DCDF109071C2469B43DF46DBBA605E4D7A73ECAC4D
16FD02C19C53EA68FDE62754AEB1E15FE7C332B97A00994F543BFDBC8567FBE4
A28EAFA97A58758A164FD2016CC43256A16EA86B4045C16068D8B27FFFA57066
2BCCA90716C0FF768A9C7C69C1DCB4086F1E88132B0AC9512BCF447499C20053
48B848036DC6131C1E5E283C74DA9B46A0849176EAAF3357F06F8B6A34426728
925621AC4EE580A496B1062FDB354D0361A3054B6EF405FEFDBD14B53D540809
1D6039FC4977E525D5BC68B0DA4C5DDC0D361A5F467481B87ED7CAB30EC2B8DF
601A8E54EC3176CE6D4FF9E1672415F7B96061C2E734C33F176B640F93FA574D
3425DD12DEE557D4BF8A3030AFA24F19126C17DD16A3913F27F12C896BDE5C6B
FFB9246D30103569E9EFDDA9AD14A06532D665EF7C6391C6B3E8149E6DAC14CC
191D578828A5E4C335AB285BE28C61C4190C2CD483C3FEA264D734C035D3F474
AD6CD39E4BBD87322D3954294DA62F57F8C02C8525D3C6F9F559A0B4827C87A0
8A07B80022D1720A707BA004D9543D14A8CD1D494DBE2FBDBB4E975D6914CCB0
3185EBFF5C61172A956151D94ED0A2689908E9D864BE3DDF19B1291DEA72A689
7F5696C127D3C11BF012F62927A36A5EA1BEC1F1A6A1A5A5BFB54A1BE8C70419
4D72A79D360BF412FD30352B46B6FB6D0B977BF34FB3EA2C40A922799821DF82
B89E2DD0885CA956529EA49D7B91337D166939828B171915FFF4545D5E6198DF
7C495B95A55F5ADEF7849F129A102D85699E82645BC6784423AB9BD63FBF14D3
A0C5FB48201578146A0398875225D8B82A812546620491E2C870B30F3A593DA2
285CC25AC742E876D74E547CB0F59386340C9F9ACF9B1510282836EE37AD8022
4C8552D197D6C1D6693EA252427E636BB34CEF619A6F649A42B061255C93ECD9
B8DC0D2A73720893EA87AF152BD8FCDAF76C5BC7146F67A8E92C14023D6A5BD7
E656CAE5E580CDF8E9B9EACFAE3A6CECAA632EBD3B5BED02FBE3C9604278555C
81C25F6BC844221A7B1BC5980B1905C23DC9A08A0BAE8904A56B51EEF3AD23DE
6A55731F459ED078E79D5958AF2E7438E6CF63BB80FA0C47DB2791AB32CABC3F
AFA58B5089FD5B584A49F2A6A4E4C8B419499D3F6B356E3548C00DAB9B0BAFFA
C4532CCBE0AC3DBD4F5A7BDBDA43B38A384C2DBF592B0D5F517FF6029E87026F
3BB851D1D7FFF4837E72EE7A9A0BEA4BBDF3709EC3E06DA87BC5EA364369A76A
0425256215AE29342016D1C381E1215F0849BBEB95D3FF126E33BDA3F9FDC54F
38D882DDE8DE62EBB90A9C30E1C0278E2083D4F85907F87D83C4498EB6B0376A
C57F7D8DAE03CB25E6664AB5CF938FDAB7E295D877C01000A993AAF66B73490D
3450F1E3F16FDEAE6A34ECDDB9C87ADD12BBA280B1042CD6A95599770732EBB5
A44792004E125FEE4463A06B8B83F96A9DC950870C1B21E2186D8C4CA15E8E1C
EB3680F0A2BBD5B56D32B90E027D459D467C66E0B2E15C2BD68CF3D193489BB9
7B6DF215A0061517E49AA81B8732E6973556546BE5DF809165D743517888265E
57D75502D311322DEC39D0DD73AE3F26702733A44EB5B31E90B7D903C8994A07
8ABD9F42C5727A1DDD62734BC08592ED1A114334CBF42718BFC37F4346B36438
B94D02F56190FD5E3A6EA4ED4A4D375B2D42DBD1B70D7A5E03B4F41B1C11169A
B412475580FD13F889686967136E64075A8F103CAC7E399A667E12B07C65D791
72DF1A3287C67960134867B579F69E34040E2AFF508CE7AF4B0D544E7280E682
8392F3978EFB0530AA2239903E4B3F8196C3AAA97B6248FFF91FD52CDEA7FAF9
6105243EDF44B4052F80453D485AB9858152E3FA121F9BDD04B7EA8A00B2A19D
182981B95AFC6AD412742960F1B7EA0FDB1228C5AD94D74A5FFF03959033FCD2
55AE1A59643044E28E29934F8706BFCF5CAD7E90636DF67FD47B0E4243A9295C
8DF2A9FC51887E252E8CA463340490CA6634BFA6F5B74355F6284FFFFEB953A6
6691941FB3973E9829A8FB165A20848F7AED76D89B3C3DF7FD48646D6A812D93
4D815A07FEF543805C6423089BBA44118BEDB82ABDE315589D9E30474AEAC4F8
3628E491CC03F8398BA941BFB2EFE672E683E1862097BC700681207E93E45BC3
3ED9222E7177F63E6B1C183879CB39765C2D75DBD08E127CCC3790280F0D2491
AB13FCB507AB79FD0421C5C06B9D593022C0B75DBC8C1F90FF30BDC97107DD0F
2BE9148FD403D246C6A0AA6B857291BCDA9B6705F0B062A78EFC65E27E56C120
26F58D771229C2A3A491455426500E410A7078C7F9FE6CA17D515B2649714872
5E1E777D1CD1E2260572A3E88D2F7FDF9F26AC92285B3B181CAF04E8DB2C1E79
B9E9108C28BD3BDCACE2D523AC51DB2BE615EEEF405E4193954B4833509E1FD1
37D8B823953AA248937D59F386703D1DF07EF2E12C9802AAB56426BFD7E71A80
528C6376E333BF24A5894AA474C9F08EDF66B627B992CB4694392A6FE868DD44
9773BDEB71DA37C609A831C2C2E0E372C102C23DB580023B789E755A847993D2
CDE4206D95EAC3A4FCCC29386254DE597AE4C6A8897F9E44E54582CE65C6EFAD
B667852739E02647D111A69CAEAD09B07842F60131BC8969A7E52BFC97C3C1CC
59ED40A972568A44F0B691350DC0E4B38E4B5B5868A34E643E6077AA5E7C1538
8CC763B7B0E6C116B3C87E992DE617DE4BC00A526228AE299C9352CB5EB8F2D1
664F33B77E60BDCC4429157208E3B37B9CE3F1D0C616D951BA702DBBFB698C42
742D2EC98BF1E4ED4CDF8DDA7799FF2A8AAF44802D3698D76C0FC15C0DCB4C59
318183C941C098648CE113C0BCFA66E9FB091F8D5A1ABF35B55863058CBA718F
AFACE305733BF769E719A39FCAACEC1E8763D1BB78156D5809A68D4BEED88D4E
27E5EDFBCEC126CD722AADA6DB8732764C4A39940BD3AD8C75262EF6C5B60BD8
1D2770945D3D6ECC9AEB26E60B05B105EBEB7A7476D831D2C0383F393D8BF18B
0B668CD16311DF9993D2AD4F956BCABA7F25705935AACE33019AAA883668F3CC
1181A14D5C2F627DF69FC322A8BFA0F031A3DBE8DC1D6FB37B2A939790B6F8D0
1989BD614D7DFF502C408B4E2531D02747F8BE666E611B7F30C87B3EFFBC7AE6
E8F15B9736C7EE6707DA2BAE5430E7907062FB3BA362B2AF6C697F818EA103F1
767D4BDC35209300AE63A15A7D983219EB991B300213F2B1A3F1C2DEFCBB8937
EE5BED99E7C2D320236CBB0BF1EE6535CF39C6C3E0846586077E38E1DF1BF4C8
C223AA5B63794D01CB48972C196E0C10B2F50F32E1E3EFD8CA41AA00D1D0B9A9
1F0F83DAD1DFED8E8E569D3D3DC4E7B347E64E85C73135133A1C84C65793AEF9
8DA25996EBEFDAB53BF882D33E5A43EF201EC0B415DC701E8FE4FB576E1FD8BD
D1A30E7692524ECA63916A2AC46ACFE18E8178B51B3B89D7A218954721CABDD0
0A51A9D83D24A69FB6675063A2B3BD3FA2B3E0E04ED9832582F5515AF4441CDF
EF5F67871FAD992447F76CF16F85D0A04140B19B51943BFD0868FBCAFC4DE907
FFCD365F3CD9235704BEC725D2CC7FA26EF0C059090FB93A5747EDA57889E69B
D3E5EFA2AE6FD2F0CFD1F8478FFC614017C841E62D6156C2EBB31217119F59AB
B67C1748F28CBE526D90C5DD69DED7A9934BF625FB39DEB2182D7A5B4CCD3FB6
5D37BEE41CFA13CA06EAD9BA13FE15B781EF82A7634908B76C4688D4C2ABC3DA
2BA5A87574756FA0D72F2D6A0CC357B350D466B4D20EE132FE168BE61D4FF951
311855E5321E5EF0ECCBBC3C56DA4657C3C5830D796F82301BBCE1D7B9AD890D
6BC64614C5CF9B2479B4E7C3B7C52A6F8EC7A6C9F63592C6DB794714FDACD66F
22FBBF8C98A3FBEAF9140B86917135468FE006F159D3299B3D44ABBBBEBB8F6F
9C08B63E2A5E7428FC3CA0C1BB2BF883A31010EBD8E77BD4B7FAED7B613F4886
52BEEC39119B6E592D548B4F0E0AB5EB81214D5EC5ACCDF2C02B22208DFF23BB
3042979D53166F6570B05CA0CFC94ACBEAB61F40B35D6A20C60658D61ED95E7B
B4ECF7DB3731D584DE998BA0614001C00F5D36C5A8CBF1DFC11F715B19702660
BCD025878AC44DB91F33D815AC9DC3F4429790C922CB133A407D1599B367D46C
34D3F5936C49BFBB74A8E3B62A581199E65B1D8E5F59136D8FED9BEF89C39506
9AA2561D4783F11B5F18899CE22DC92237B4D55F41654AC8C3A9D70992C1F31D
C6753222850ECF459A7BEC65976D3F56E6CF780B37CE39F605793D904FA4650A
8FD8EC1DB81A77C19C9BDB4426F2E6E52F6410BD76E4451C4D561B4413C38DA7
401609733F47D9990B238122AF772FF2D971B0398468408AE8A9D786D4459F1A
FCF285C9E54E486126604BB3082C40A65639E91B97483486C37CE08DB5E710CD
843327B1F360133AB8050418585ED1F4E998716C9F052D6C66D3FAEE0166ADE5
F16BE5F1C915253FA11BA43C743589C85EFA9176E2EB9352AAF9AD3CA5D3250C
578650E9B6EA14BD4EF58AB1B6D0740A8A4986EEFB47AB14F5238A12B150006F
AE3B62EFA3D374AB25B33CD03B4F408804D99FFDEA459395AEB10196F4067E74
AFE1C8F9B0310407D79D9C672DB6DAC3AB80DB4844F2C72AAC64F9B9D1C39420
BFA3EDA0FC110165DD64B0380411F61C1767E29CA57A47EFD1F774F2F20C3DC7
C21246EFE84130BD4D15BBD2A563E0960140E2EF8AE58083EBB18C1F3CD700AC
85DA22DE061E6CBE95A645F170A44ED236CF8C61221FE0317F6924FFBDB01E66
7F4E8AB8DB64134050F3FBF9DD7D42790762CC7D2F2B08DD025F3EDCCDA8B132
9836CC6136E0B2DC8292E36DC444FE63DE2AB549077A292B73EC6AC2F77A93BB
FB1A82DAB81E9D005070FD4D481045801264AF54701AA1D5F9FC3B06ABF25F89
455E6E32D6DDA5BB840CFE9AAEC1BF791560D2ABDCE78D2BDC07CED874A17323
647398EE737D27521BB99D04FEB88B6DE54F3245753FC550C7F6DDFA3FAFF92A
C26C79FFE09DEAB661F37F30965BCF2B6B89D4659DA262C5151B948E529F0C7A
21052F1A28CE3432A8DF93FCFBEBC586BCB872E666A060E4D9241802B72B1CC2
78D8850D009A8B3868F4A84AA68FD6EC42440357B7D063FC7D32096C6A7E4E08
1D61DD7A3FD9373F9A75590974A252291322ACF12EE7FE8A738607329268F441
FAD84CCBF875257FD719D237283F6AE6A12B1CF5E83FE1F493526894BF4A34FC
D2A8674D1C9B1655E83CAD37AA1977D64B65F245F3C8B987ABBF94ABA8DB33E6
BEE83028A732F12A2661AB1FC21CBE13E07D84E81C83C06A7FC6376A2C3719CB
2FB7C4B1311ADB97C07BA2477251E34038908072C47C3B4A2404A102FEBB1734
00073C225B2BE7110F6C11E1FD27431377F103A3AD8DCADBE15197E8239C7099
2C563709271017FB5A4C79D6E8F17447CE85374983B011A83C2F74365C08C2C7
FA6F07F63D81F4107D69E8089525CECD505DC35CB17B6D8F433F9402B0E2392E
E2587AD0D3D3A48714EA217B591D115579FA3862358A758825ED631CC7897D81
D8DB5E1BDC5FA5472DE789CB9B4E44FEFEEDCE7B6160978ED7FF4A5199B53C91
657198A802B68AF5A81208471F43D82DEEA1724656B5DBA6ECBBA19755C85371
FC39C88EC838D41D58EEE905CBC51FBACD7A3D7D91ECD821734025EB13E3336B
807981134B1C53AF1802803BAF5597570A8C6B0B4A5E0E80F054547B0A1212B1
CB9033538176952B24F1AE4D3E721D8372D8D1ECA5A32CDF25E34A95065640E1
8838487F6AA356CFF8DFBB285BE2E378FC46E580326593693817091D84FF3E1C
152FD1DD1AED48BBF2B65F5D053BC7B1F2BBAE9CC424E277788953475AEB85C9
63B6B554201AECE2A4529E9CC7EAC192042268BA800B6AF8B46A5D6CA588DF0A
FA1E08FF5177BB72916D578C2C6E72A18B937490AF68DAC5B52DB3BD947789E4
0F9B74CCE1D5CE17CFD0C4166E42246934DD00C08EF218B03254F35619AA8280
FF1AC67983B2E5C13CAAC355E995A962D992766147370FED9E0F297D698CCA82
15BA271A098F840FED2991AB71CC001A8D44DF11ACEF4941B8E5598E11FD12EB
A696C359A9D2372D5BE1E01AB1EA93615AFBFDD29E9971630FC092350F18DBAF
8F2A1C368E486C0C4E1D829FB4C4A4C60E907C72052513A13269BB24115316DC
1125D79F48531B10F7A9991F6EE897A83F5FB22F5F4C7AAD461F3FF2EFF20DFE
C6942E2E9BF905F3600DF97F63CB4B29ED6BC20BFA37A0B0DEA120F521A323AC
91474BA2A10C57C0FEC3C6C59A860FB262167E6E5E2E73CE8E3263B644BCFD06
BD8F3BD37EA609F842D74F5C4839CE0339BF6BC58A1BC3E92A38B95BF3FDA368
D3CF79AC3684D68FE95129C325BB6438D99A8A1C950D8D2057162E9F059E671D
9EF6A6A52BF97F498371BAEDB7B887A8C6479AECBDAD3753FD604BA597B04EDF
4539D429AE594C7B889D256FF87218FA7AF80902AAFD2B6018DD0680B43A5AE7
900B430279C041EF3BC3AD6487B679963A4CB62633A522F3617562A0895A6249
2E44D2391EBD6625AEEDB22442CCEB8402D07B525269A773D06645E292CE25B3
0B640C49B7F211F5A0D9989BEDC946450F97AFF657E05D147A27AAA29BE4FC51
025F54BF5B1E38C10077F1BAFD0FCC7A8FE760822D3330ADFD7241F285D511A4
10A3CDC32C91BC7AE1A37EC827603D8470B05A14C8D3F127A14E40675836FFD2
7D21F892B9AE92E8480F5B8A2AB1B87916C43396FF5DB218AE2CA8EE74F54720
0678D6AA96232B0F44A82E58757D6E68D2270B55C17323912234DA39E93345CD
7CF6EA2746B4240DC02A3564071F527443F0CCB47B3B48AB7AB10734FA0475D4
AA4CCEA042816BAD6BD613BA33D7645CEDEFB9E2B4D16A0550D061EDBC61B07B
74C72FB893305D4CB1D936D0DD331B54A02B253F7408BCE713605BFA7214E9E6
2948C52E4564D9AEF1519F56F6581D93BB225684B50FC56691BB3A1D226C2E01
E0434D0BAB7675370DEBB9335B3114B92995156DF7F0498675E974742B76CE97
24465C49DC221DF6D624C688C241A63B5D9247DCC59E67DF990210DCA0B58494
405F2AA0B5A2FE1B6C18912CECB8E244A91E1AD806435701DE85B68DDE13F0F9
671B2E7E4B03C30FD2970B441E2C9135ADD8939BE7366D1E3226749B9E23E4C2
AE4B9E990D7F1D3B433DD2B301F57E978BA76768086AF935F7141A7C7F8826C5
D1FBE73F88F7ED00419F673E4C6AF2DEC2BAF23EEA357806A3D0D70633868890
8A43EEAC604F0894669FBA2A11A006AA062664AF4D91AEDB312FAD2205E86CCB
0172E299B1F6353CA60FB57A0FEF4F937EE211BF53DF3C8BD16760A91B02D5E8
D679C227DA8E32050F8B1B60E509C8F9D526BC97D4E175B21A8A8651D7852187
EF4EBF6FB5C8C1B20D1AD0FD2E6A4C530BEEF47BA5B481E30CD562DB316843A0
53F82CD8E6D7EAD84B49EFEB40457962C3723BF6E61E3C3E10DE25AE1908F861
0F47FC6A6F74FBCA5445D5B4F43726D9BC891653DA66D351AD8ABE6C65104B2B
C60DCD97EE7D38869D666EC10E0A53F1E002F576583BF8FF1FEE3ED0DB577DA2
7E45F11D0CAB9A428F23B0F9B996EC30F56BDC0CADBA8315AE197C80FE52EE12
75B05D19E6DC95D93914B713820ACF2BB6BDC853612A330747A58759815B768E
0D7738E6F759EABF5BE3A36153EA88A797296F2FE302F23663DF9626DB213C6E
BAE3BEFC59CCC2DCDABF2AE3B0DF0C1186C3E75BBAE92454507BBAB460BF0CBB
95B97314FBD415324109D6F3AB7D037E509C5DA4A954235A57F0F59F857E6B54
D8D996A9C156F99318004EC02D5CD155CA571BD98F3807EF11C82E84E736A060
EB4775CAF210654B1F8D68BA3DD3558B16E94DD6CBC32B1D1632368D09ABDED1
429403619BCFC29B109BE23860C670D5EB5B0EE3A71119DA06CEEEE414994C63
199351A0FE860FE1A87A7818E74ACD7931668EE08BFA9F8F776D88FE9C5D5EEC
6CD700C9A961BA44F2B0A5FC7CCAC95D93BD7A2C0C6E5E54EC24AE318067DF78
B8FB476BC191D11F6313488D3D3E1E887182873FD7866F5F8415EBE92E51E7FF
064AC08D50CF1F984E972E628C1884D4C6CB1879CF83861AECEADAD995532710
0476C03B131A04FAF2FF0BCEE90711A0E3BAB42C1B0A34361A1DDB23585CB941
530493AC9E783388CF4C4E5CE4CFE090C28F6ABA7456AF84581D865470AACC41
0555B525925D9BEED7A3B4294B006D793BF07087834CB6BA824EAFF494AB7820
6752608416081912F14AB9A908E48303B8902D1DAE6A674D9909398FC0423ED3
56ADE5722268FD35BA41E530CD238D7A64AB9302A2D3B62AE0D8B8AD91D3BC29
F38745A6DEAD24FBB2F855E92B7762F9E45EDD96CC722AE02F9564E06F04F0B6
A65CC080D414F3A6138865BE994C6C74228EBDEEF67CD368F48FAD6D65566447
83FFE23953B99EBFA7AFF9AC10B33F5EB9B78E996FA66849777243B0DAF02CFD
DBE052D29A7B5FC5F1741A5546D8E1880561D166C5D73CD483EF7A482EB4081A
1D097FB73F8C1A5B43EC159ADC8EDC5EFE67A2DC0DF375C832B0315453DAB180
93497251651F2B690A9445963F346D0667986C994880FE8DB53BDD95A554E64A
BF5421FD338F17B562E955B4EB29DE0DBFB4CADB3DB95CE2C74DB09F6C18D083
A389BF56B9612B65CCAF94A1B90B32120ABFF80827DBBE528FFC71BF84E0040F
2B3660BABBC1DFFB65AA474FCF201368906EE40B6E071D6710FD81A5C59D0F92
24DA14A90F169529992EC42A2A22D5433980E46D7853DCCDEC0DE25E8DE83F11
D28E9670AE565FF9CA7C5AD3F494E59E191FCC8152043093DBCC03FC0A022D50
4EF495A6B5D5A019C6A13942A9F9A0D2322C8B3CBFDFDDEFB7386767ED56D8DB
2BFBBEB52F816EFDBA9CFF83AC072C75218AC4F16187A7A0DD2323D70F6BC699
CDA42774EA23C62ED025A4E1910BD6004EAB05E713C3C62B0853381B561B1DF0
A095DF6663C717536ACC410871C952C783144C542046E4842F4BF69B1C7A53E2
783D1DFF32E3C4E6EFA07A888BA154350CB8CB8E904E7535440A065493480FDA
1C510665CBD4387124656831862FF01CCB867F027E95F0C66688F7C056FA3661
06E55C70E87C11358DB2D4F72B5314455008F1D4D2C9D54B1BCD10DD7958F06F
C41A77CEA6AF2B5C96C1552550FAD7630471C45B19DCAEE5454894553E0ED910
DDB31E7B4B4B6529CF2EFACEC94B27E99CC529C128DFA89182F89B2F55B1AAAB
0B14C732C932B0BA4D72186ABF14A12B8ABA67E37090F3A56D06FBC0B4AE3304
BF771CEDC1ECC1EEA9D34523544C00B58BDDF838A151A2A42FDCE3C59C556E52
35557DA055A16C30CD30462119C3AF991B3613B485BA2B63E25767C311C48736
8DD742A0BD67804B5803FB9DCCC6342F21C854868567C0139C49E305763F08DA
29E18492BF190333691D987799EA0B4A4AE8F1ACECD1339A3FC0F865201B6D7E
728687E2791C791A0005560EE26C52E95B71C4B9F6D1D647B4431489AD6E8101
B910BC71EA0645F89E12CBDD431807408FC790D933E2773A6A3C584457B1565F
E02C4ED629782BF033D64E97DE753933AA83F37FD4D440CCAC1788F5199E88AF
05E9E6696DE4E39CA05A8F919A49CB9B3D0D64F93FF369928C40169BBC1FDDB8
DCDDCE95AB9D42D0FAF6CDE696534896406A8A5234A8AC19BFD79934D377D886
4D6728D3C22DB8C50BEB32934270702D430489D1561CB28638D1D24AA9F358AA
FF93B9564AB4C15CFBACD2586F3D71442DBE3042A47EBE4BA1FFB2726063806C
33974F0312ACD1605720B548189D085A7DE4438A41117D733A0D3E8802205494
37755CAA6C23D8D69CC4BB9EFDD4B00ED3667B5FDC6BE303A38053780086F34E
FBDBA229F6F44316033FEB0A4244F4405709FAE22B4A45117BCFC22442209592
A67F5BCCB859F8A683E5C8175CC80D07137085C70F00B4AA2A3F38FE549D727E
F5D26A10F3E75C36E9CAA4AD5418193E66786659050B8EF68C398B5B6A6A2EE2
7DFA1F3F613094594116E0EB9718C979A8B2C95DF751A861565EF6F1EF22E1DE
92C7FE8AF0D1070B27D4919792C03CA93AFC986C34C08358A2C9F035BEAAA6D8
7458CCF25F198AA55DBC4F8AFB23093FCEFCB8A59AE9FB7ECD21F133B000DA62
24A2584C66C319E8EDF5D67770223229186D86186C4086912C094E92AC55C518
FC964BA4D7C1B2522A37B14D7743D9730C9379DA096E1F56D87595343D1C24BC
1455EEF8582682F210D3F0F5070C44375E9508D28368D77C3D743975451218E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A241CF11F8F2DA6B617473941A1ED19
DF2F6C55C0678820E7DA113C25175B14083CDDB3ABFE914A9AEED19BD229B0E1
5201F90243594636DC4D65285656B511DEB7826E9C3AB0D84487B7BBEAD90EE5
7EEE028900491428174322A2A624056475519E20504721F673673592085CC2AE
E55547AA633202D1391D3AF0861323F6AEDD0DD902F1CB4EBCA920BCAD87F68A
FC4596DA515B4EBE13E394455931345C43C74E88A8A1E527B0E77BAE62868382
DA70AEA1A956CBBFB8E3BFE0248694758D9BECBCC9EB81E8AFE81AD94FCD6D37
3246804BA5F2171C5C56B6562A163A466CD529CF49A29030D28090CA803D774C
5E1D01D986A3C6E0FDC9A90A49DF2C1C539755080AA332B33484D3E33ACC3053
926BF4350D36D28E2E8B90CF14F0639D81BE064CFEC333BCFD5A093BAB44BA86
FEBFCCBFE37AEBF0AF8204F4A9F56AF89398AD5BEAE92F354A9D2A50093F71D0
5FB29B08D5DE5830B2D48BF66CF1EDD53C5B9FAB5767D18142144D77BAB2ED0A
4447580C3A67A90FA5BC47323A08AC7AD4E9217EAF912C86CB6CD5BBDF8266F0
1AD1D714E0BAD92538EB40128CACBF5E2B2981456CE62FB74DCB60F072F35182
33A258B54022C1D3BEB1325F087963C8B579466D5A3237732F80C4ECF89E1C4B
0560DCAF7F81C1D6AAD4A849E20FDEE79F2475C88FCBA3FC859B266915E85CD0
24EE4EB2E521BC819EBA8F6D09A6285C25E732C79C2AE5F3A6CE905CFE8DFDE7
F7D9AF604524503DB75CFA310263EDD27D32D83A216241DC88BECB64471AA584
88620156738617681E0A664D228029F53E699872CDCF4C4A160F3373FF47D707
DA7220F4D482BEEA04EF134D2709B24E10F6A831AAF04FE09208969DF61922F5
E5FCAEA07EA280270600E05248DE1C26C30FE87635A06B7C74B7991E9F8908B0
8E82821E5CF3C68AF55C88892053C5F1EB2BF8DBF444E3818EEE8F71D922D90B
7D89082D383212838E3FFEBD5FBB076BD9BFEEBBB8E99F06F87D1352E58958D2
F64CBA7D25DD0C45D187D1C64CA97C307FB762C7F2160A4ABA0C061E850CC9A3
8E4AC4B42F81DB73914A1F2AF8786E14A6C637915A51FBD2A97B4D2CB1B019FC
4EA512311094E29D5FBAE8A2FC201267E825C3F5D1A08FCC2DFFD2DED749E877
D66BEB7DA7468011420DBE034D5AB67817DA21F1213653A7252C572AAAB15FEF
7E934F5D0498C4BE4D042DB8E922148F4213CCAAC483B43BE2A9763FDBBDBBD5
0A0AAAD73E5141FC64FF28F1CA6D4F1BEA1C6401819082566DE18AE8B8511F98
7E96279E3AE01FFE68E34547E71D9E58752D2E666E4453B5C1488F2AA4E984A6
13FACF3A485B6B234942404C46943A761BADA6C3B4B9C8B9A0EA29F25D935845
C6C60B016DF15669B243300FEC7FD79DAC1D95581A3D76B9F387D719B0005323
B20AD59BD5443EF2ABCEE5B559AA42CBBA8CDE9FF407C8A7E5FE9FB8F3874B13
61AC326E0471866927E3B6123D75DB1F5D1B6972AE1151B6B6AEBC41CCFCACF3
5D9DECEE6F9E9FC87C84A92EF26862C433ED083A10A282CFE103D4CBFDD5BF0F
417B18667B975BF873F4BEA9022072655ECB439D5EDCC9BADA8760AD44E31416
EE4EA8C182C1D459885BD59C1EDC838F9D7E350B1DA59C2F29FC3F86936EE714
524B446DAA42FD34136C4017B3FA8DF19A3A4323DD3287C1E41516CE412CB410
BD026231E22A9CD0F664D76C0BAB666407756E9A8493C6DC65A7C3623AF76197
9566A72193487C2944D35418E9E9DAC3479D3309DE69137A608CE37057DE0BC5
B2799B4A6B62A9C9BBCF1FC0273C3F47482CC6AF65E421861F921CFC9583463A
B935630E251CB0C567B17E1E0B3EDC325FEDD473DE05BEC16417D6F6408233BB
E1B009AF11642E22ADC6A563C249F3399EF883F6F8C04CFEC637F4C37E87F087
63EDEC92036407D9807907F554312AB2171DA969F5F8358CE83C9F8CD50B48A0
9EBD2803029B9E20BF3CD30A58995E888AE5DD0E2BE0EC764FB3C6D44836AAD2
CE76BC86B07BA11B9451C54BDA2F2C4D7904AB755FB7CAB411FE32A153959BC5
446C9A9628F0F6E7D139A90D9DD1F6D45DD3EA3997294C8F16999753FE77C36D
DAEE9F5A5B6550A61CF35F9A30D5AC5E858420314B103B29D6E997421C4B8A5A
A3D5F8CB730BD0F33631C6A1D9D70BE77BC833CAFBEC000A6E5713A75907AD68
D0B2AE350504D9850B4ED8DC99FE33F7A05469EE84164E7DA8ED1557A434D907
3DFA597ACB9868737617F9A60D1F58E74D0931CF0D333CB229A28F34EBB366A5
0E0563D005A30EDB96842690134AB38D2080914E31F95150E82BE30F107C1A7A
5FEC19060712D4FAEEE6DE4236752142C351B92A5CB286892F5DEB3354B54B15
CF7069EA2CF54526B751A2C4F4671DA0395F5363311DAB0E4631BA7C0AA0205C
877FDE388ECB8637004BF2BB8269D3276DD1FF8BF5DDB50C039F5678AF9C459D
8480CFA14625FBF274F3789797088F2433B0E8C971CB07C66E1B7D1086952122
39848AB3F0D55900D5F58F37B8866DE8F3052007F9104D34A7FEA851382CCDFF
EDE240D483DFF2E666F1B374F4F9A3EEF3465D1C3D87F0E470BB89D84F3FF467
ADFFCC9F69C8CE3DD4EB419A5ACFF2A814DAE7F7243BA88C15AA2C3DD4A9E39D
14D50468E8FDFC06B402A1B0F2359EA910F2DB728B696F7D073087362CB8BEA5
FFDA45218202661886D9FB4067C6BF115F477D57DCC45F8B4CF2747C654B091D
1B493E0A78E63F5E1568142DAD87EAF91F04218F1CA770A6D904A7B2D810C81E
959201FA7BD9CE993613E153270D693BBF5535F0F8A00533857FFE2AC633A812
43A8978FCE325F78FC232393DDA6A1A7191AE45D1106F2F63B7E9605F16FD282
2C03FD4D8E38F525793AF97A9CE3BF875DC5D845C884413A4457DDEFB98C5973
6C4CDB79029416B97939012847BC967CEA6BE634743A0DBC66F94841C2D6EF7D
0B9E357A0D0B6ECEAB6156922685C93BA3F1B854A904356CFCCDCDEC1CC4607B
E6DA62A944EE5CC32AE71987069C0D74125C7CE4CC421512677013E3C4325B9C
09714259DFDBDBC9D2BE12ABCF5648DC5678E1DC032037354EB80DABE2B740F1
A320CFD228543D1114609E9C162DB1DF25CD0C584DBB5E4250E19AEC0167A8D6
734063D9AD53A8B0FF1FF24B7AB8A5C5A2BB71ACCAC781C4F4C411F79B1D23A8
7ADA31D3A48C7190B616806D560EDDD8A901220A97E3BDD89944986C15BEFE83
D57741D48EC01A688FB6A7E95A5099DC8F7DC87CDE7D3BAFE4F1EAFDBE9FA317
C2D84655C143C4F74DA06E7F3EC0982AA51F2D946ECEC0CEE91162DA66C9C1C9
B451364C398E2E67C1D6DE9F80D4DD247C263BA5C850A244B3F4C150BF14988A
E4BDC8EDA6A2F36B1C51DA6D05B13BEE1B0DA8DF5B19F3D06C1D39D047650F9C
0DF62CEB1EFEA58F3E6E881DD653E18FC751ACC107BAD75B887E567799759D45
E61F936C775AE1238A092E125A39D64E77BE7DBD768D86C89349C2E0158B4E7B
1A5F7868575C034B486BE4835A8BB9179F503A4A20BA741F9A9E0FDDD9189DE5
C3F2A05C77BA403487DAD29CEA4A4A57E1FDA4437978818B4C8EB832A9A14064
5062FD919D83DF85BA4FCBF36F67C16C63FB61AD7A81A74937D282E807EC4EC0
3D747A8CA45C28C6EE9245BF2527E6CD14EAE148F9BF02C05E98E3AB2EBF8774
0278ECE5E93EB9B86E5A5C480B23E7639224E86CD87E3182DBB3A96AFBA3C37C
91BF8C29D441871C26FAD4FCCFD4F7B515B2F5C0DA0A789BD2BE4F58725679D1
402B737640020D29F64497EF1C2D013F54855F75F90C9189297BEEE19BE92505
E3ED7565083022A07F2DABDD90859F3DE0E309A5B4EBF6A01BCCBB6E8BD35004
79633785A94F377AC2C07A44DFEA086976D07C642E9016B953D77CE5AC16B470
453819D4E0D6CFE427C8490362421887F23E0045CFB16F70DA12FE35C17422AA
9FDFE58D72BABFBA977235A28B830B558E4D3B08D27427087CED2CEB3C05B876
04CA94068E396555F66A0FFA60B3CAFE41FE8F80129E1458B0CC0521649E5F28
389E3A3A607D69AA9360D03B570897C7A52CFB465919400C21CE472087323333
360D98EE29708F98ED5E45D0B2C4D4A34FCC2B0D474C1755506B484232ADCB0B
BE2C2CF9FA15A88B79F7B1A44BE4DEE88331F533CE7FC6916DBEB279F4316EE8
837175898894E162A7D6E4180DA1473B1C0CA4C488BC3FA698A8DB794BF37C0C
0BE2FBCFCAFE19B8EE9DA9122A5DFA2263ECCECB041288F35C427F800F39D304
60335D0C09F56F6089DB526CFBD3C7467A1598A876ED18B65ED8CF27CB1C28AC
2595BD123E8C062B8D1A9E1E0D8BDAF66CDE07F14A50D869B1117334A4459B5C
2727863E859CF82EAA68326F696544F6B1F129A854A81ED65184618E121E0108
374E9A09A5DE47786C898D37C93E7743E91E27DF7E415C418739003766FB193D
D7B97DF0F9A11121F93C72CC2FAD15FE866F5836A00A3BE60BE7772482920516
6CEA13D0E82FC861C0D9ED98E873821095C6BE6CA90DF456C0FB1C9A4B3C2FD9
6A239A93B9E8C5FE755C4C8F10FF10A572F907519A5526F787B5BA16FCA8B826
E78D70F9016CFA5E7EFD5F58D9E496161576626623621A1C373D53621C78AE35
88AEAF830EFED72322463CF28F82CB40AB71BCFDE7C9B6F7690C7AA4B1101277
9ECCF2C610AA9460170D287A9FD141360024570D83C9265A2D8F3FA10CDE2EE2
2CC785D957EFCD1DC0998C5F2D3488996A754FB35623406E03B982B70A8BB4E0
A09CC858785F2D7FA0BAB86CB37A5DAC995C0BD6D6A6E61A0389676139B95B61
702CCEED9E747A5D1EAEEBFCD54A6307B3A4E6E85244DD4B033738E228207F17
92FAFDF7EF80157A26F610ADF983C7AFB96D9D8364A5B1B9AD6E28FCF73399D3
647307672A4BDB1F4AA21FCFCAAF154E6184F042D6C3E6AA2324982DBD6A502A
198601A189DBA1C1D1B0A1D662D1A891AEDFEB4ACA8A2DE0CD63FF09EC639486
E6AE747AD18C0FE96BA65DC75524C7EB2FB795566C7E790F22CFA00715B353BF
98D2CCD6A88B0A67C909E66B76985E7B9D056D7C4F25BD6581217D977B3592C7
9197E9EC90D4EB51AAFBBAB54EE46C97533DE11EEE3B9FE2203DC6C75B270355
8A6B538B4F5CB6DA9FA3FFBB481C9AFF1455A0312D80739FD7DB91967163946D
B98C7A8B8C8367ECA28071308DD742A0BD67804B5803FB9DCCC6342F21C85480
D570D67E5D32DDCD1BC0364A28925F51EFDD21C3F9F15C7C0E7FDC07F70456FA
F806655C23433985714C16C38AD7A839029EAAACF3F79D64A181C350FF82AC17
F181DA117A1BE0534F236B7568A94B7FEAE4366105CC142D5AC32D5602860364
C5C17FAC63208509691973EF122C6548E26B40AD6465F22EDBF0AB9CFB2F8CE1
6D7C3A2B4BDFF38934540E01EBFED0DD4DCF5CEE46E1DA0AFB618124D06830AF
06E752B2536CA59253C97C078F1C02CCB3F652A2EDF25D95A9456C7098D09D54
4724EB071D57E293719487CF5D51F3F8FA688FA1B9F46E7B1BE1F52347C6E3CF
2FBDA627C06AAC52F08DB31AA9D12117091EA58204F935EB454FC0099D03A9B6
B8CF91F7B4DE71B08EF4B978E7688002FD01D97BF158A67698CE67EB0F86531E
771C74DD3701419E5B08ED32C290A1AC9F07247EF65836444E4A14382AE18C18
B27E41D10D863E33FBD6F608124754A511AA5FE2733C6E7AC917F304BD3B92E3
4CCEDA8BC7292AD6BB130D3CE8205E454859D227CA3F2E8489CB5018CBB0805A
0279B3245CDAB370979EABF46A7AD367AA3107CAD4CBD6ED07D4324AD527234C
8DE7336A5466934B7B24AAD00B83444E61BF91230BFE3F36B8A079EBB700744C
5254A4BEC7B0C3B81C670058CB982A5EECA1A9884E724DA1043427DA7609A4A0
D66375BDFF7675AE78A6E5BC9F774A9DB0919B57DA97CB3179F5CD84B27A9AE9
76FFD433244FF31F5D2650D45B054CC11B2100156FCD357EE2E010146CB1938F
37902FED49510DB2CE5AEC3143C9C3F088621E0B1F84A3C4E29511C9FB3EB89C
C43AEDB4CE1956C73A88334217BF670A801B0095AF524AC8392DEC721FA3DF3F
32826842E7DE070B7521639D026088CB73B0A6A7FBF901FEBCE36B504EB4A7DF
A7DDC07403F13F7A05EAD0100E590727A34B1905AF02334A8F8871724F9A8508
8E4289C5E666A5693C95962D6AC49F31A5D39135CC8D7621A2A8F471114D7B15
4EB46E84E305CB62C3CAD98FA6667FE8582C0FC58DD55C82CF87F8D017C32DEB
C3F375774EBCA2F957BC5FF4883F3221B9AB2685C222A211C2F2CC55D66B6097
9D4DBDFF4F6C74DE3397BAFABB60989BC0C76251AC3D2BF93B07325DFB2850C2
6C5E123651EABBA1556BCA7C1BDCA7EE799616A34F395B415F9565E574B571CC
7AC0511ECACD8027F7D252E1C3C17E8CDAF6DD7B3F015E30A01BF438D333D632
3D3339BAF18ABE23E35D6ABC1D296FF7FCD01A636B448220534427CF744FC094
F5A1A49D501D8D7FC1D6F10C288F4EDA0F8A230315D2691FF8F77D35046413F3
F5F574A303D1982F0D83601A0CC9D6497A9950C5B0600791191AE0D2C2D576DB
D6A73FB4C073DBDEC12D68A9F686824DF8DBF01FC2AB9552A3F2165E186B9636
1F7AFA11EA3444F5C5EB11D85C04DF06F9501209A9D61FD25F4374914166FAFE
01E62E7193AAE3AF5B9E04E24EDC457B8DA91F7B7AA4AA12552E84EB893299F1
36C279F25197571530C9B48982184DFE778149E5795166423DBE5D30C0453E41
1C9391809A8C3AEEDC232CA6A04E9280F4DF8C0E92EAEE9D137AF0ACA6F96BC6
49454A148AA054D7ECAC3DFC37F6EF35D2257C8B2EF99FF2E852652D47FB4A02
68ADF00D46BADA541182112A8FE2AF0E4DEE6D15E3B307DAD6BEE78512EB6C4D
EF7C0DBA3F35EFB019F919C3F6A6210EDADE29D28FD21894744C824E290A945C
7413E323C2C363E3D499F3DC7411DCE3D20E2E9F67049A88EF1D7944260036DD
3A639A660A25A88E5EC195717BF82369F3D55900D5F58F37B80686D55F52E3D6
4E0410193CD481AD5E7003EF3BFCA463A2AE97F7A0AD6C22F4013D1F13C20B0D
411624C4181590C498034530E32C195BF6EB118467E5349D47FECD71C8E2B3D9
9F7EEAD8363EFA1B3E117C40DA40C25FA70652F3CCCB2E4FAE61EA1D3E2DA8EF
502EF888B7009B1D93965B04D9A1DBBF135E5217684A324892695EBF5FF93643
3824C72235C37392697AF95FB4F1AFD8CCF42255F337E79988DD862CFDC0F7B1
23089A4524CC7CB3DA0D3959E96ECEEB9A2E83824A18D289046A60F63C71833E
A6929620849F2C6234B253A36D82E0B00686B0E8BFE3F4A938FC3F11BFF620A0
139D762DCEADC7754CBE4C3113886585303A19B41B75F736C51F62B12A7B0480
50F5B12D362402C416BF840AAD933D71B01CB7A0C6A95BB6E392B49055698BEB
0403A3312F4D149ACCAB2E2434F31E53D51A3F8DC4679EE1D81DC3E988A7D9BB
43AB6E6B63E503BD599CDAE840222918FACD5EFEF326E367B7ECF5DFE2488D71
6CF825DB774EFD3AE4D7F6B695E7A7A4ED77EE109C1A9D0B542C41BCC160FB1D
799417744A3AB9230DF5A27212F0E249D496442CED33BF716464562234D0B926
C0E6D9B4153B9FC3682A5887E1417553882C7660A296C701011F5EBFEAD29FB3
6CA2D6C4D7463CB8822CE83174A8B9B464A2241A0A1639108A4C88D56974529C
D78CADC41D9815A364DD46D9E3EFF08725FCA3CFAA1D2E76F129264AE48CDD3E
B3F3E920AE548C94E6A6D89E16951D763C9F34F1EF46AE208A8EC5D394686A0C
E351E5FB53A2F3C1EF736104EF7499FEF7C9DDDF34BFD7151D56910C38C611A8
E7F515A3D1CB92AD2BD57DB6EA1196DC0C62EDE0B4612555168BCFE359EC0AE1
28E065F785A518971A3B51EA08C6894F0E5A7F325B5C2DEB49740A1F5DC6DCF0
12495264E5A2AE85651FD25BA41B66A7ACF752C12E8BC3DED764D1062A793C0C
034D9A1636389D7502549B0916ED703E99252D3573F4E152197BEB399437F35F
9976AFB821326C61BF37D232038E01DAC007D632AD6D0DDA9B71DDF800A4D407
601BB632B33F1E4AA97827FEEE34146860F07C6E49ABE4594E37BDC0C0768934
1A8AEE9EDF8688A69754ACA70F3D7C5D777D6B1B40215989B9FF0D71E8F3983B
031C03D0DFEE9208993B7603C32AB9DA953444B29D7CB004560D0685F73E8772
FDDAB8757820692FB97A0DD77737F84F944EE4F182641F0519819D2FF4413C0D
FAAD91E9C3A38989BCA560579F6436CEA117C020C2C04DFC9F36C8253C4346DB
C11A9D851DA3AA5DA74B4F1D595B5A7BFE2B471ED8BA09716B202B0012656E65
6730828AC585E4285F66FB158012F10352CD8FA43EA68B0F6F9FEE3622978AFA
B27812D6F257EBB640E16511DE46E7640C5AB5C2E3A81912ADAE2F6E50D54206
DA7C09E5A99FC7B4F411E5BBC0863AFBC322489522AD73608E49FCF8978A4643
94EA809DF8D495F7B532647689F1F2136657C025AD24664C9A24420317FFB83C
801DB9D655AC9551F10922392F1BD41A24ED503815316CCEC391025FFF8E6838
E92AEEF0B85A47F537F260EB79FA98C230E7ED5D4E509039E8A4096AED998427
0692E476E281AC6E7837E2BF45A9DA7EF0D0D5F0C3A0A0F4E99A1944B2F2B4E9
77E7C99ECD5BF512DE17C23E3F6BA6E1C44B5135397B9529EF8743BE8F06FFA7
DB9D25F0BA34EA859BF991D0354BCAB97DA3A9CF3F5CC1270FDD0A5AC9BA68DC
BB01EB32E2935645FD7068F96845181ED8A1B393EFB5F9A7349A718FBDCE1592
59C594EA1DE6F6E802209E40D2AF4A8488F02AD591F5BDF485C477F9252EE1DA
AF502CEB69371B55A75AF26D13EEE81647141D206DBDB963CE62F33F0C59263F
A14E1C9A0A271B585DF21BC3E50F25F6AF33E8E354F8922402CA313F30CE2B58
C6FDFE3D52148AD0F1C8B8B3873F10DD19B813E15DA36FD9ADA0D9E78E54D266
7ADE6068986D1E79CC4B29278E6838AF461467424E49952858431A3AB81FC61C
FA1E8360BE5A9574D5351815A959020591659CF35B170D1177EBAF8BB34DCB60
F072F35182B321B7A63AAA06BD4CC6B53F4B85B620895341F186FB133CA973BA
28D7AE646B67805B577E3C794F69387FF0F05D81336C9581764F632C89B2AE54
89F3730400301AFC029B6DB36B4DDCE39F3E5908A32806DEE17FC5E0CA818733
8247460EE45959484FA9DFEE55B80834916F611F0DE2F43D758DDBFDCFC0778E
8EE6AC221D3786FE39A6854F6294870255E4A960FEAEC6121E11712C9DB2DD05
1A85066E4C8A831785480BE4CFAB3C586AF1689FE77C7C772DDD390EF466D40B
6EE94D4A7FBDFA938518614AB16736CF79B54D75DEEE563EFB3F41F6939688C1
1F16242C469737EE706AF49A6EF66DF185C61DA4042A202D5BFA8AAE656833D3
92404885900FD8C9E48B2E3AA0DF227D420F261482EA4A2A2640C0BB2796146E
427215C73BEEF20E828A46681B6BDCEB2FA5F5833D58BA187935BBC37D3C44B2
058920A786E2FCF4DF71A961C81EFE1C7B18F6A88446DE8B45F593A37B48AB3C
4FA30287D717649CE9A11A551496F7E9C1106573674F378D7F7002FA394244CD
D63239F480705C1D172991FC1E55C8F2005BBF75779BFA8022F236006FCE1DFC
3ADD6C0130F1F349A85B3B6F37E3D2C3568B2F7CB6399399258E9CDAEEBBA391
A78868DAF1C8562B2F59C613A428E2F0D998C09FF8CD54B3DB005C33AD910366
72A632BF4AB088C3B8E6D1DCB67230EFF3F206ECA7D35A79B6D6106AA98D24AA
FA39C60EE153A0B74660FD4FE0ADF32F5ACE72C93640DD3C1FA731E3F8AE8009
81B234C69B42483589A08BD48CB7531D53612BEED336DE398751537695ABBEEC
B5E5DF9D0A8ABAD1C9DE77D714FA54504612ADFDBDEBAE6D8412AEBEFA0C973A
E6010DE6CF4C68FAAC21A3F35697D77E0AFA4E230AE401CBEB5BCDEA5813CB2D
7A47FFE389777C340C370CB8C93B08A2EC196C426CC298540C1441477B022F22
0DC7C268E27B3D3B7287CFEDD75B4E4105E7A667E1F13DE61F3DBA30C33AC1FC
CDC397734E25B9DC2952C9B101276FF63B66F8044EAAD1B895B159E2C905459D
2697B2819F3B1BE091B983385CA0444C480FC2B7F3E50DEA1445D9E4CBC8A42F
10C843955AD0B93F9203462F95B302B8CFF733E197156D0735CAD73632F8EE97
0DC0EBA43D2C700A1D5A6F0EC8D20D94520C58B60B635613F43FF35BA9E53E65
F09F3CD1FE07ECB929071AE0A8C255F490706D239997EB4A5AFD0173E0383237
F8A62BA456BF938D3234213D894094D769E32FFAC7E82B8D640403683A29AB26
EE2212F88A0FE66EC27CBD74FC35423530EFC2F6FE5FD80496B61CEF4FF35625
C5F6E0FFFD904015AA56AE725E5AEE820FFAC056863E893BFA75A4B728D27C80
18BECD829ACB6C3D9129E976A2427CB51E2FCDC615217D9DC7A1D06EBBC91434
536B00B72C74109E672CE9991EB8C422B5C54257C66582997E824219678FBED3
44CB30F555634425B334011FBBC2A5CA798D5F04A4C1CD1D33D5E8BF44603E07
92D6E631D300A77DB149E84B8864120F5EAC9AA03B114C71B72DFB35C6A788A8
C249DCB20A6CFD85EDCDC489A47BE5B75B46BB6412333964332BBB1ED017FE3D
D8F3B632C3D476558E1937091426472CEE9BE4D233792BC2515F3E3CF0F908DB
C3557465AE229E952925ECB7E49405A5761F3064139B36AAE9F69811110F2260
F39CFEB0C90E54963D854D57C93B698F33D0C4597F9F9B732E948793D96C804F
030B04DF352235D6DFEDAAD93A074010C5626DD9470582E82C15B79DCC5A5E19
47A1A80642E73431449159694228F4D66C7BF4B46878E9B177DF9D1711276B37
CBA46CE1F629A4770CF444B4EBA87D47B9BA3214BFD7A88239E056D58C7E70B3
6C86B53983748A66D35D6940A3FB53D2936BE6DBBF5A230721E5175098498B71
E9F8F462436561292BC7A2E95EE098BD9552A72529B7D81C538FB5A0D294C468
62A8E56F1267194C6996E124929876488AFA989BD26534B98100C8F4D680C94D
C3C4DBE573678A57F720C16F63F51819C4206CB45D52E88EB1C042E28A6DF988
A4DD2AB665537FEBACD5BC7C774D53CC63B57F7C98B34E277F5C32166AB53908
2917BFF7EF652D589681C3E773755477CF92FEA77C09E60D39A89CBC3CBBBDB7
BACD1AC7F5D385379D5EF73C32A46CC6418D742FDE62968E7BFCCEF9C018C3D8
273DA993B9A1CF9577C010788C6EDFDA724EAA95CD2FB9C636F788298B4234AD
04CA1B7629686A3D22F12830D995534A8D82E4B822F07B115BFCE95E2EC339B5
D1D0322B08C69A48845BBB5B8B2F1604F1BFBEB86D9B93AE6D01B9DE158FEBDE
6C28319A54DB984922B52849F0BD89EB28E7AAC227AB427D758549DFFF933880
8DB41180D66B2A41219A4B427019B456BB65F17F53643B0EBEEA272FC931E5DF
823A21D4ECA36B55B270E20437A18E90172263A01E000356EC46A4E7754D3BB9
B25BB9A929283621035D469B4FB26817259B2C2F01F3FE164B744013EB98145F
D69651BA7F9A32187397CC40DDA8CA5BD2ADAB53B65B8722597D530B4515B34A
6CB78C6CFC91283C9AFAF835F63DCE618507F864231A63E623E19312B77A5E56
B1C92DC396BCB44A0A88979A0D9076C66B4B3E0F2B45DFA048BD3E50808068DD
12D1C1064A7EDCB584FD784D9CDFFF8C05CBDE9B5B4A911933A8A08D0B94DBA1
83551CBD575668600DFF2CB459AB7EA91A802B34425BE1529AAAA00F7A662C8E
1EA6A33920FAD9A7F756960A87FF826CC50C51BCEDBE5C506618C75188C909AC
5380C8B0CA6D2188ED5F44092AEB10BE2FDD5E67DFD5370F394230C6A08BB4FB
0CDEA7D44636102D47AB90B92B693125A0055EBD6EFC0CDF2843A07895295A53
B9711B50D73CBC1CFE349AED0167FEB6593EECBC997193BEC4893E1E39FE966A
C1214E4DA30F2D2AC515EEAC8E075785F63F4D440845869689478C36962BBC65
39625B792268BB55441DBF77E16D1B038784CFEB488088C72BF4AA472852A8DA
B09173CDB4BD68D7F6BBFFA623C8FD935633F15B9C8B87CDA9B5062D8B3F99F9
95C1329860CF5D2513062E484F62A4C9CFDB6C84A32807C05456F3A6D7854FA4
673EECC3EC190C827086DCCDDFCF39041310CE3E0A8FEBECF03682EB0830BFFD
8E91EE654ADAF5DE725EBF10D02D7EBBD5193878AF0D3EE755BD5958FD3632E6
7034A4183808F0DEF28B5FC78F9B2611860A746BFFA508C90FF036C3F982D11E
19435D4F73E7BD36AA5E7976771BC06FD676E49A6FDD84471D287F1C03830712
0FF35E760AD363F6F09B66DCEEA83512FC0569AE367F91BB614DA8C5DE3657D1
585AEE577CA0335488C8DA970E78B889E14305A2054C60D31E5471662B3C634F
FDCD8F980162FD04BBF54EFDC5C30AA86B5BABEF23430F28DB530F7EE522ED28
10C5CB192A2BF79EE90459E00A2F7DBF72B2191F8A281E6314A3698B35EA5271
0B82F265007F942A15246EA5F6A79C01F1D4CE9DE62D3D5495B799C5ECCFD11E
90A9667594CE5E8F29195464771F81956E0B03E3A4B92956A4FB28DA55C14C8A
44A66D99E6EA0B99690E7B818974CE8172F37A82058278B09BFF9FEF74B02066
AA5A0148B1C3DE07C7AFF39097AE400B8999F052AE0A8CF6038EB3DB7BFD41F5
36716B5BA9F96F91476AE3DD52279FCECD3C4EB7C43CBD9E2609787023B59F53
FC50BAC5CF5771345D2F34A46C2DD760E55A38A3438240D2F1D473CDB0D165FA
35F69500C16AEFE3A6FB08B00FEAF1D31D9470ACE7BDEE152D2A94C9E3F324BE
1B44FDDD59827A252CB81C53CEB0D553E25AC6EAC013678CBB9CEAAA318B9662
9BAED8F9BFF7C22433634B804E051583F49A74CF39D36816B01BA3CC4B2AFEF6
4B1CB095E96F9512A2419CB0026819740BF0387A7CD0F3B55792C246E2E3A781
73A545770A60DA0196DD4B0E8AEB23739AF92B579720B119FD2E9097599AAD4E
E55393019EEE61EF4B3796F6F20F5477E9B7D3DC8EA36A61BB73ADE9C9EABB2B
748484F0658717BEFA13E77BF8C8B69281632E8E4D96FBADF4979657EA00D837
3829BE897DEECBB7A09EED260C453D676BFB63735B05E0FA606348288CB8E605
88D4DA59A96C113F239B3FDDB442396970B2C343CA865D7B7D68F5366491D1BB
097D8FF4A71966D42DD988F48BDBDB847F7B5095BACD95228E1F6EDD85621B96
436240352B619023BF4100A37F8F188486B3F0391D232034020EB18E11079525
1CEBE01D7F81D61317763D0C226C1F541E5041DC0191890203800FA9CFD36EB4
7CE4A1E97615002718C044731B6DB8007749D1B605F397413DF96FD78DFDA711
101DCE3F5B17D645EDBC0B373BF97CDA7DF637511B47B3B6FDB110BF87F8ADA2
8B1791D942396545FB3B82895FAFC35A80F855645E134C36B2FCCCD0B15ABD7C
BCD7D4B885AB7F5DD10679FCA5F7EFF91D63A860FA6D5B5C60AE68490AC4A06D
84B64ABBE559BA633DF3C6D1F325A7AC6707F19EDEF6B3AAF0225370156181E1
82A89FBD5199299407F5280FE5690CC4781512BEEB0ED5F63317937B10342C15
ADD49634114F90932FE559C757A92D105F0E30BBD698EEB957611513DFE10903
765CE3A205C3F29825874E552CD0F48B801CA49B9DD19CA8F0EAD88DDC7F7953
1D2472947C8EFB607412BFBA4C35F75A99889CB9DCCD3FC71123B4B50FC7823F
423594C118A77A46279CF63F8BE5B9025A99FC0406860386CAFC7444D00983DB
3F5604110C9889357B3D3455382215FA03D042FECCBF38162CFD5E33681FDC92
A547A1009452BF086EA835F99AE0AE421D0B583CE26A2A071FBD524D0E932C17
9BF2188FFE3EEAC9F8D195DF03387F6543889B0C918B4D8060946ECFBA5ADCBF
48BD33B115616AF611C0D7C1A57B747534B3EC85C1A110A5CC8F79A2011DDE2C
C5C2432BC832B65BEA5A7D0E8A5DC5503233AAAED7CAF4A45D6417153ECF7204
49E215CB44B1EDD672BA07604609110A32F19910A0B924B12BE398B542C50F19
786CCE58B6623F888D49DDA3F23A02CAAA33EAA9389BD0D8CC6D1820EF62E5F9
BB623801E55449A8C56E468BEAE99C6135BB2A0DBC9C1EFBBB97B92FF73B21BB
55BFB61600DB185116B8E631EC14D8970E542E4B3D47F50D2734273BB1162ED3
B5CCC0338181FE9547790DBA13B231A84B2BB7F38FA45B8809B42D17EE041023
04F2F59CCE821AB92B0F5D9DC9D0A91B93ED65003BD0C4D6608CDE047583C833
AAA8AC9CA8A26B51FEE38518819916B8445FF92239FFD3110CBF8F7747A86238
28CBF8A690DE77BE61A31FE5B2C98F8EC2BFDAD144C2B8AC7C9FA1BD66246435
563256509346128EBAAF7D11ABA3DC2932E9D0E56C3C94A8F6D2C97A4145731D
81485B19921EE504EF39768406D57725D1051C7E8344B56F83FBE176C468E63E
B53299F7383E534EF6C936DF6ED77EFB07C3DA6F036CB5E9FF455F34F8976422
3F7DC55BA669B8793F48CA8A44FB19421FA0D6027EF8C615112A29AD57AF9DCF
94E5AE7AD08929B89F606D085A4CA5F1736BA41D0AF9AEB8D802725D72263B2F
7FB6E3B7ADE5124B2B60E132114D699A71F12B4E8236238980D919C3D1C16788
940C2E95F6F6862DF5DD9E900D3D5BDE642412D953F70268296AF8E86E06B3A2
480DA075AA929C4C36BF112678869F9D195B023C7CE0560525A8DA4CCCEA32F9
95DB32130C3CC1003A59FBC65D5C5FFA73F59AE22BC7A9DE94C8D7D299816635
E8C9D6102F1D3AE812E93D2CFCC9BCAD14E9DF20CFF5B88D85A200A181F03D9B
BCACA93435328249AD9CD597A7D3664969A9546795D14782E39952810FFF3EAB
F1B97CED9A9F49C1D826BAC04559C4ECB73A3C9B5FB8BFC232BFB654B8EC5201
F17A7C3397C6BF0D4B077C48B35786954D18C4CD499B20534DC0101F3EA7A698
E85772F211D48B666645A4D6727B75D6D5DA49E1BC7D421028C74017D2A82AB7
27ACFCCC11C2BF0B27F6E7217D171A060FB78883EE20A8BA1E7A05A875DDACA3
FFADB7BE87446FAD6548D0F2F5B1F9B3E570ED47DCC59E67DF990210DCA0B584
94405BD35971324412F72CB5255DE6203338A07B99B10B1ECDCF2D748DFF0BE5
55A73E8E6B0B00B745CCB4A4C8A50548590BE170C30353218B1EF2EF6FA4ECFF
2E589F3C9C1BD16EB61FA012CEA586BC22EE1FE7D66BB71795352A5142680D08
DD5F74EF2994462B343BD9722C953BB638563A1B51C0CB33B8AC7B2E52F2B9E8
96549C8050F55E35B4AE9BFCD93F24F42BFBB4B9AA763F56FFFFE972E14B254D
097B5002C748966095A32A30EE239C08AF91105E58DF43B5D0036382C8562EC8
A6F38739EC6EE38A07160DEB415DB6D60E1442688054ED5805F3788325FAB939
7B4F558005B7A3D9B89951E50522A21F77C58E90B261999E041ACAF9CDA5EC16
C797B31B0006D964EE87B70841BBB0011D880A80FDD39CFCD0E8A6224BFA03E8
C6D73F4B8F4803215AF0B316FB29634CAD38F0B9C8B1F4A73AB259EEE0DC27D3
5C7568464EF04B9C181469011AAE670824824E04C9CD550922E73CFFBE4201AD
7462760440A2317E38B3488819445360C8081081030F8F05464D998B930B8275
A7006162D791D759C9B9E9CCFFB119B21C90975F74DB277A3F7AB9BB690B3F1F
8D5D92B0125D3D3408D17A9D3CD3C9E824474CB8755FDA5E1CD3C4B6EB90A6AA
E781FC0DC9368A1290145D1809E0F89C2698D9FC0D30D42E32859CA9240E0BF4
2374C33F5DD39F1E0CB030996BC7FCC8D77A1425A4C8D3CFF130F7D9AE80A295
9D02E0BD06376533B99DE6891224A5614BF4EF1DD2FD31DDEFFA4DDC8DEDA104
BAECE43AB290DCA2C64EDFA951B6DF8E03F1BE0F732F55DC22ACC3195E9040B7
DEC0E8B841F8C3F61ECA64BE4C153AC91451F122BDD5C724CB802331A592A4A0
6CC6D3429CB2E286B738BE2719E23968D45FFECA8B9AA1A0B9AF369144E64905
5A26A1870924A2AC22CCB47E5EC54ACF2209E54920261EFF75F449D352116718
E3F6D67AFF806759BA0A3FA256607429A7F3407E177021724A6E83151BBF93BD
CC6AA2205EFF87FE0EC674750572F045B32289A2AE66CC44A1C13FB8BBD4E182
AF70E65CB9A2FFB4CF40BABF9AFBA92A0C51AE000C825C09AB10915F269B7B23
1F5D9B6ECB5CCAD73F0CED53D779161B1161108F2C98AFA44BB0CBDB81BC8959
59C5D2B3E874456992AB8671A953704241F8D1B2CF663368177B9AF0F93491F6
DC2A04A39B71263B7C3CAEC8AC487A4BE1DA4D789E367E3C3442323E9B3733DD
3EE7DF7F774DE5D0D0980DA8C6345D794A4DC92BF186068C71B851A7F85B6333
C19C97838275EC9700DDB63772D73C3612B305674061668C14496F75A4CE8453
D7F264C15B0A0098E907FD3BDDC55D898644B57E0ED693B05E06463312D48584
47EB9CDECAA83C6227F0E8D2C3B1C53EE1A5D1FC533DDCD5CEB4EC0A94C48F84
6566D278DCD15B4C783C1A33DBB537E0E98289757F9C1A77BCFFB372678F0CA5
9C7259DC87B98ACD47CC8EED103C51E3EBFB5F36350973072DEF5C8F72AEC944
F2B6AB5F4DF4B1F9DB41360FBB27DAA529E2F8B9C28DFB73B9BE18E2F7ADADF3
654EF0034947F21F3C35894F7DCA8D98A433D6F3C4B442E014E3E5A5E82E52DB
5332AB2ECFB58DDF0FFF4250D413CF8B039DFB90FDA3924F77B14E95E1203298
4302EB1804481D62AE03D554871483AF9B543E871C435AAFA50BE006DE128A8A
183E58E8DF71C94C9F6DE86A14D1EE7BD85FBECADFBAF2B8F2B50B63D068DAEE
4E1255BF293797A1BD1FAAB9AF2BAB4800713C0B42C39D2AE574676AA0592F3F
052E71E8E353D1AAB6F4BACEBDEEF87161DE496B634DFA9A68FFF20ABD35282F
78997F935BD878EBA39E67135FB1D7FB781E8A0C0CE8C03A525E467DF8744A8B
6DB57E04C99BF7F56C5918B822DFD34841FCB3F5AB7E1798B23757A3613D6D3D
BC33126AC26EA984A4660F22D390595911A900FED29721598256BDFDBDFB0800
18336D6B169A3003D54A0A4DD38284847F43FBB951AA15758F75FCAB0AFD52F1
E6506BFFAAEC3E63DD3DB9C90C9BFCABDF41AB57F61F803A65CC4536D34BEF00
C18285200548EC33E2654EB47F7ACF01B405A873BC4116BCB0BD0D12D06B9FC9
D19CB1B0730BCBCB20E28CAC26A34C54142BD7EAA63838FC938795D11555CED8
49422333308405F05EAB3234D762B960F7716EEB4268FD4436226522126F4079
A7E50A94046C7E2C55FF2EBB73F77241FBC7A2BDD00668D89CE8AF6DEE215D4A
161DCFA77C221A30019A54B0032402D4C8FEDC913CE3556611AC331592E8F4FD
94F23532ECE07B464F25DA98C8E8D69C2CD4A851F7858A004E1F34385F7FAA29
28F653EEDA8FD316A0E9365A31A33DC18AB538C3092199E37D6069B4B0A1FFAC
99CF049C9D216CC1B3E44C601847ECFADD839FAF0F02677328336F3BB20B6041
915950C83E0E188EA19B26DC8E3A30C8724D6F52BB508F7BA59AE51173957D3A
342017E8611A374C2FE8604C9580910F674209C0A8C8DC86C3058FBD79B3E0DB
B9C5CA2BAF28570F49585B5B5737FE7837B642497C731398C4688038E881DD3D
A775502FFF0C23359A60E233CBD4306123D63C846D484341E8371E4EB19E2C72
C9E688DE381493A0842F3D7E4BC256C5E8F65D2980CAAB193EDEBC28FE76DE25
F75DB9A16545A27E0FFACDB7BF177C04E2682B928C726F572A87BEF5A99805EF
53599448EA77982CDEDD245F0BA2213CDB14D452ADEF7BB3481EE2FE1152EF9B
64CB4A12D46A58C27C21924706B0BC0F896ACA6713F64465E8C52DCA6562B2C5
EF060535BCEA261DAFA392E968D0CA83ECA6B8140B0774466BA9BA2846214025
C3F19EF5250B776E9BA0BF1ED2BEF2DC647534B9425B5D6C49A92B5356285855
305DD50849CD96845742CBA3D97566516C3D9B8277C044C55904490E2E69010A
54270AAD4F5C2DBAACB3600C4175F31E6C26A25BEDFF5697B2C6B00DFA7EB7C8
8CFC32F2E6D97319A0009DA3114B8A23CFD72D75ABBCB582C97F8235A6952E2A
61494F02AA74357A20CB8028DC37D8407D390613BD4DB9996C58EF999577BB23
877A5CC38B3EF498C72AB1594B063936072C8FE4697F9836E4C1722B89DD87AF
38FBCA835DF8FBAF3CD50D5A53843A42942A17AD76FD11EB60021B3784DD359C
5D8A8ED7CE889EB65F0F27B83D1377E1D5BCA5B4551C529ACD070530A929B735
98CB7BF54520227DB9E1000029A07BA8C929D69D9CD563D3FD107C18C39C04B0
151B2EE582BA2BBE1242210A5EF718056A6068B2D010B768606F7FA73277FA26
41D68424F611438ABC78954369E564F22157DDCF5F7C6A36615865C8D2EC925D
64CA48D1D960537872CF44738EA5597B2A85027ACA29C66B820468F5AC4D7F27
47A83B0B422A7C066A693E1FB72216A0BA26C107DF14912487C7F5CF16870C52
83248B42D75CEF131F8ED8819E41741E1A905806074182EA4FABA9835B3FBFF7
5754B54198384800C8DE89D0F22DFF10396AF7480BDA9028EC2F5A739E35C416
9DB4555D9A1219DD37D7AC0E5457720A7D92196A70CE398828ADF00E89C5430C
F379E657FF9F6E460C18ABB15E741CA4074EB8A8F5F7516E754EABC87E7C01E5
10D507EC06D0FA5448D49B7D8232A413ADEEF22DB0CD56124187F54888CA1794
8C9FB3BE792438802948014DD45A42816F93364EFA5444808FE44033EA48ACCD
58D8B69485680ADAE4012C5621DBA662B5A47DC6FD35E119612C2F01741B956E
F2D4799A67F9B571DE59D6E3EAB33151E8CAC5B6E85AAE141989794242965E9E
74F12AAFA44B9FD208EEF7854A32DBDD96CEAA68B0B90A8FE5BAFC87F3A1622F
02A06BE629C227EDF6BEF9ACEF14A1619E8A25519E118E2F0C9D7196192FAACB
98CA6FCB283CF007599353628C56C6C3F4E3F858E4B73D49444D978656BB6732
241838D987B585D3C26A5CE63F3B687DC67E3F09B2D576ABB834D761733788BA
9CBE3CF763ED3B0D51BDDCCF365291594D7906D13DBFCA434FD4BD2EB6BC25C2
8EE89D7C58305A6D4B6736788B96F339D2104ADEF0D3847BA4870500EEDB36AB
F690B655D4F487A0E2E80C5B8B6425A85165CF7677DEE1CEBF58C0045A05E034
EDB5A8A742417059C9FB033B57938DA31BFA710A8F599DA83F803EBCC194FABE
C30302C2AC18E02D5974339C7A5A33B6C66BA196B8E894B41AEEB44C88D69F48
61AD66D57190F23FAEF8E5F647BBA1CC9D3D6EF7FE415431850E855F0BC940D1
ADE3C448632876DA993E6D36463E54FA825BB6EA2307A8324FEBF8558D84726D
6158E2843ADE79D1A9AC9738C2FC6DE26A2629560D697F34291072ABB877E052
944907E3D431139DD7A21618A57E17257761E54228CC345DDB8167C3D9B2DEAF
4FCDA36CD6C18820461050A3082CEEA832EB995E27D36E78F22898848A7D3F0C
C41E784D5B442DE55F93D1354620D69D638D9114749A0E44FE7B12AC73955D0B
AF8D8D37A11C2BDFD36BBEEA1CF22AAC21C69875C4ADE17BDBF13199140F8EAE
37CB002057BBB48BB2B63CC8C05FCAC82F58C955638CDEA87A64063150E0FD03
C779546367015BF70797B600881B4030470EFD6AFF4BCBD49F72E080E5E9389D
8FAB1F5AE6A7B8DE3FE9C54A08C9CF09D17E2966A0968B7DB83D6CAE451714EF
35722F267B9EC1D9888690D7D2C565C8DA35EB52576A34D487ABCB3F2D7F2881
3EDCD31FB2283B5F19BF96D1259632FCEA23ACB5C59D457327CA49731768D503
E165E25C4D2C061470C69E4991446B37310C4D61C1DC0DDA5117E564C79E7953
F04863881603735B9872FB43A1E546BD91B62DC61DE06310E4750F1838F3C8C5
21864DD18F426683FB4C1339D47BC76366820C7D60653CDFCE5035EA80839A79
A23093A22289D88D08478BF00377ED3C86AED222BCACAC6B2846EEB6C6BB2617
6570B4C40A95BCBAB02B8FF111FE34095344928FF436B01AB54EE1502AF579A4
FB31589D609E2C05C9705CC0BE285F4517FE7A59F4AF2D040754C21AFA995E66
24BE261F548DE707E88B40A45BD9B85B3EAA65DFEDC852B908E7986DDE877D25
BD39531DE524132CB2CC7DFC4CEFBE7548F123AAAAFAE2D255A3616ECC6845C9
E0AF0C173F3C0F27F3E4D6F86E6E1F7E78F91472AD54377DBDAAD83CF6DE2908
854FE3396B51E8908C2BC218CD858351780BA659C15C62DE10D9D3088AD8A196
9DCA690784B5AF3551BE8732EB41D9949E762CC3CD993816A20D5AEEF81C148E
50C8B5B4888A7CE21942C1EB6956F6B79CF034F27ED3862922A8F80A0DD8251A
664E8714FEBF4D6B947C72F5CEEEBAAE2E7029CBAA7F83EED2FF6EA136E840AE
F56B5EB05CCDCAC074B21816146FDFA60E8B41116BF243BC23AD4A61759397B2
DB43FE53303C538AA22BD9F6863989932DD0D1515964B4D13ACD6FF26E94BB78
CE7EF3221F7B8BB916B21782CDFFA150FC04AE69C583F7565712AFE513637914
0DE5FC982E26DDF9D1BEDCA09139BEBFD5DCDC7DE4BA4C4D119343C6C5139F4C
3ACCFEB20AEE2F97115B4AD35CDA2B1E1B8067AA5C687C934F0D41595C0569FB
5CB1EB90E1EF21B0FA84481D59F3CCC17506CE86BDAA7FE1F4AF76DCCA49086F
2AB693F0F21194E1E31538D6302514443453C7D08F9BBEF1C402825AA0F29962
2BBD9AE3EF83E0BC8A4F0C804717A9EE0A688721FAA4C3F9CCE76B8F2A62C6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4ABCC72B6CF075717DF5200D680CFF152D215865DE535A6
1CA8E063640C195BD08DBB8AC7B4A3EAE77A96BC881F674B33575A0CE6AC3EBC
22862808E84C47AF37E871AB5A85B043190EE840144F9F85E8C54196C594349F
1E95F04AC99AB789ACD0FE5A2F6587BA6A0786B3E4FE1AB8D3A3BFDDEE2C5A08
EBFA713F917FAB61A4908CFDCB75938628923F185CDEC3BEB894798C5D51E8AA
294218E50D37E2876EC795216223183BD57A8665C45F6EA5A8D7A326F857A142
B6D4B01C420F4E13E5917E58973F795CE225A184C01D40D0921104D58BBB224E
91C3DE9021F27DC832D6321C49937BFE6EA81C9ECA43347A7BD419D3DB4101CB
3A97A5B4470D4C20B0A9D3474B0C411CA2A48D49A93712294997B5D8173634E3
D0C30183220E4D004EBFC23908C4EE86E0CE70C3A6ED31BA927670CFF2CAB7B3
42C3870C11DB8108CC06FEFC3BDACC4B1B653A12B3FD96412FB5053220F418AD
5B252CA7ED5969770202B4DDEA32FD59D0DDFD4A14F28FA5B0090CB8F013667C
9A2B590CA67FF58D8BB36105C14A7CDD9DCA68650C8D6BC1640AA36FE116CB5A
43B103B2BDC61D5A6E3521C60E86E6240D01C6797A490B75F432331D67E5BB18
850697AF217012490464B9A47A03FA725A82B3A7760A210D818F889D0C3E25C2
A348BDCC289FBC9C2C43EF1B9D392E7CC944A38713970C763A6F9750E31F67AA
0F4E2C47D3048777FFA3C4E7C4305CC2022E9D390A6E83071120C592B43775D9
5C4C744ACADB37A0A360E3EF4C7666C2E60190BE8DAE71BE48951EEDB7E73626
755669A8CC6F122B41442A26BF3BA5A1FA0F8517F49392205D314A5D04EEE002
4FE8DD7E46E4E804782F1DA51C319D7DF2E2102068A1F4576D2EB5035F13EDBE
71E30949153CF860ED492FAD8325511ED581AF35766A3C052CF176DF9960752D
0F0B37CBA29041F208255DEC970B4A71CB29246E2E2FF5DC68AB7FDCA298C41A
6F67986931E318D4EC14999BE7EDA599B5F41B35E079CDA15ECF86020095DE28
E25723EF5ECAD82F9E3BA47ECF073F1A8E3A2B8E71C967A702E0EBF64E35314A
8D993CF561D57F12A19E661B946899E659B95AC35FC0FFD7100E8800B7881364
CC389323C235A4D98273D7D76E8629B356B744B69263280C6B877BDA6817563E
746D6CF4EDC34C68E2FA7B4F8B5070E74D707E58AE6419D2636CA9EB39BCB897
48C9368A368AA07CCDE5D6F1175D809A85436CC6AE8E4CABDB4A1295C202C9CF
1ACF8B4460CCA79E3AEB7530A91197D8632983A71843B2625C5950F3BCFC3D68
4D884579323DCEFDE2E566BF60B954876DD49987A943F54C11BDCDD3DA18159F
6B70FAA738262B5DB0615180831DF01E36207DEC75BC6E96F464DEDAEE3265F9
E18433F3D28E7D051BFDA5452AA9CA782A0CD1BEB91F5C09D7B77C26F1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3D6A6325FBC87D9D0E635AC2EE5069D7F11D65E7B61E
CADC94CCCE89FB906FFA6E784E7D58D0F717817F3007FD7A87F53AB40E03103A
5A994EF4A4B82A4CD3AF4410331B1A4F64E4BC682C4552ABBB7A7AF1BA2BE1DA
62D42F448933911C81895DAD7D74B8182DB648FC01DE11C0F21F65DBB6B481D0
5C69088A0E19A14AAA9644CD1D850C6AA826B223E36E496B79B2C7384BD18B38
17C4B95C493F0DF9044517835C5A18B6EDACA49FE842BCAD47D03CBAF47C14B4
B93BAD310343816BDAE9E45A690A776E288BEED7010ADB1076B23257F9484960
9B14C8D1F96356661F43F7ECB1CF1480CDFA710290A6BCA196798F6C6054F05F
09CA349F60F4C7D65FA9CBAF21DC1BFC18242EEBA6A5AE45421B52AA33B201CD
60D01E56D959600E3DDBB1E00F77A025329DE55458EE17551D5F34BBF7FBE754
C780FB8F73146ECB5A245A39A7FD55D42E3FFFE439D20EF38EA4183819335015
CF65817532EE73D71316F0AC637F85D3A9743AFF92AB12E18F4E797053166FB0
DB325F71E119426B403551C0BFFAFCE6B05E537144CA3F6E7E9586FC9CCCBE1B
FF77D3834607E33F7301AC5B13C3896CCC8C2EA7E6A19A68B64EAF236A3468C0
F9453189A1D67CC8572030668FC456B3334F76E5910578DCD4A83C7689FA12A1
1F62529180060272B7EDC9492C1FDE14151A57D02371497BA21EA208A185D6B8
2C973F1C438C704EABA8A055F8A2E33E28344A7A9EC8F2CD1BF58C6C51F6431D
E0F8FEB6C3091AFBCAEEC0FB3F3A46C68A322971F6A0B8C2FA887BFD5F3B2C23
FCEA72934FB0F37723C0C4BFA4DFE3FD4AE99F5A8595EA8735A065390AAFDBA1
37D3B30AE2D428B27933780412D792988A989C16915E134A47A4A117A55B66AD
F5E352EF520AF90041D351B8449401B5333312F37DA8BE2B7352B7BEA2628D87
4BA2A9924DD9A403B1F7B8C03F8834825060097F70B3B928E4EAACF4C2CF4E3B
389616752FD84BAD4064ADE7559F4CFE235BAC87B052201479E93D6ABEE3C8BE
3A25D289AE47FB1EF07D9740BCE7F7B5A95BBC8700418B4681EA43A9A5839069
03E5470072B84A86B7C68030EB59C665F2E44F5B8B54D0FAAA2D6EC223024DB6
5E42C51C0C9E2D80065ACF2BC55A8C32D259C97A2B5F561E8FFCD09574037F41
20D2D998904694944024B606844D6EDBB622AB3EF8F143E67A096F12F7062D09
371C2A07278CBAEB8D8C18C1BD300A1E62C24B4B81628F9F58DB3B7384EB5EF6
DDB1DC6FD8E679B734079668678A3B7D272EA2F01F9D89C8E345ECAD684EA292
7843B2550B550DBF6B4483ABD354933D4438D50726AD6E605E6C8DE69C286151
146DEEC35556EB141FF0079CD71BCFDAAA0D59D8AAA1D375B9E42C4332B8AEDE
DE024CFC4657DE0E98F45E403DA8E2DFB15A83B1EE7F821D5A0EA0DD79928D51
0BD106D0CE1773DA723DF6A435D9CF47B87433E87F08CBA374E900434D488164
6A36411C9AE0CEBC7500EAB68E5CB9EB2371CB357A3E875A24C0B789B96C3D08
AEBCEEF0EDB10F34C53A58F5189D2E1072489D23946840DC287DB62E332F39D7
1536A40B9883B967B718A89EFEEB3745B95129C783A2CC49E2D4C07D54A2F2B0
44629F20CD20CB22071E0E2F291F6F80054705433EAE0145598C5769E55AF1FB
2030756DA1D8B01F6D65459A6900519CAA4AC90198DDC682A25921E6134A94DD
224FFD3281D5BADCA66F2C00FBCBCFA1E4E4C86A7B2B5C4D63C6DD941E44
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E08614769C017F6D4F14C52D7189D4AF8CDA367D8B04CA8D3F2307C
0A7A179419A80695912F456637F539123745CA8E696E250E0BA6B7C6277394E5
98A8799C29B6272613C152B0CAB05F3C7795791EC9AF2BDD416861A3D13FA858
BCB6ACF5BDE40E5DFBC1A171A7280E8FF4AC0D4C8A2199E9E2BAB5CB9131A76D
EAC166A7C449A549EA5111F1750CA2C6E1EC6F00CB6C62BA52D17FC66E06ACC9
1E6B858F9393AF9AA5E69F799E01D301B647DA57225C2920E3BCEE9D09CA5C60
F22B07F24A26DD8F4D6F9C78BFAA8D12A21531E713B80CD03A5FF4F3BBA2AD82
3BEF7DA8C97C30F1452006AA3B1A168483F6EDC4089ED02E567923AE6DBBCCA4
8C246A080448200C2A29C34AE6255BC79B73AE14B980A7C357681BB0962894CB
DA32FF2B70B21AF4D158E0F74652684A7150D0967F83E13EBBAB33588541AEEC
0DE8C53851845A44FFB46A93CEE3E8A0263882542F7F103D13C367EA8E1ABFAF
6486A9DBF6668550BE7858F5790BC87C66492C0FD34DB08EDF842E1AF58A09B0
85A9B7FA402029FE2439769D67DEBDC8AD8C861E90E5322951A2904FD702766B
36916DBA8F9C96141BBF4788FA435556B2B4E1B37DE4506ACC4224CFC00A8F83
33941A050B51B9508758F4EB2DC074D799F5116296B8822ADD743A043F9A6426
88D10767A9F99A072BD4C88CB579B34687BA4953B96DBA29F33211B12A0215F7
5F2F873E5074A7D593DAD0EDD97270FB9A87BE870321A49958B10E32850F0148
68E0A1D795937E61D4556BCDFB7F4DA63A884F9B4B07801D30B1357C3432D6D4
7B72B7D6040410C194EE5124ADFD7A40914BF569EA1F9CA8C8897E839D262395
5EDB3E97C591A3A5927DAC229EEE864B8C0F79ADBF88C0E6C41CC70D9010F07C
1CF9C05960E34FABB6C5DA4D789E39F35FE01F0B22BD9C63B3098457716D6B22
5EFCD0A960F3A2319252C7A0F73A4770E056209C14D721A714D713D5F2BFAB32
EBF815DDDE792B2556A87C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A31644BF123DA78DD615C4287ED7DD43B6
79CAF0EB2F9F428C431683A41C2C61A429E3DC0D87D76AB6294CF8CC9918A6A4
6873A1769ACCF25B59CB4365AC451FE1D956E1254970C706438805E25284C7CA
AE679F2B7C58BE9909CBFCD273EF5617183CFA64757627D2D567877FDDED97FD
7C9E73DE4D6D4ED370EFAAB4E52F30E55B902ACC35DE87E70DE8EDFE7D803CB9
B4F8D58998C2ED6B93CF62F8E991B754899CE46B900DC93C5A58EADB30BCFFA3
A71EF23D13FDAFE72642854A3340E64896CC6DEA0F7E3AF4C39EE4E68AA31889
A372F02266FE65ABCDAA308258FCDDD13DCBB18E462B56F956B94CE97E870122
A0A46CCFD6B4158BE06C768C73F0377CE3F21E030748189C553B9F62C83765B0
149330C96EC3496F9F2F9B289307D7E0C33BCB7023200FC3221F12B5FDE01011
87BBF9960E56CAA899438C90156BBF2B14596F131B71830D84172E7CD7C05B25
85A53C7CB0DA5729FD6CA218A1CB03FCB945FC24376A45F2DE0C21378769921A
72E46589CC08EA87EECFDF36B819B07306C448777163A723A9E71F504DA5D447
AFE8CFDBD88089FA4802F449B477BE528C3667F06EC5479B0824B87C47EEAF1A
0A23941B8257A2A5EC3F63FD62DD09890F4DF33AA1E70376A9CE8E4B6C4211CB
FCF9709AA29144F3A40001AB98BE816619AC543753969AC5B540ED39E51F5869
98342686761A7C070EA75140331D7A0DD5731F0E395A6CB0412028C2FABE2E9D
C3B57F412A5CC05FA7599948E6B8B50BCF16EF9825F6B20090E4D6280C528375
4EBCB42B38B7ED6634AFE0B2C249699E212509817638845B5604BB526053ACC5
C0FF6206B2953C9350E57657B374600DA75FB8D5B00DB7BA78FBFC5B95E167C6
CFB9A2275128DDCE62E56BBF35D257EAE99D627535F8E5ACB4A4D3E1E6D9D24F
9CDD9F80028D37C9CB4067A28D41E879AF98739929DDADA413EE35894A6A5B14
CBB136548C4B00E47FA77732DBEA89E10E98CAED50DEC8AB2536A447F7D46D4C
63A99114EFD23133E2FB8243221A2E8AB1CB892DE716CA34CE544502ABC9526D
F48B0762B57F8AAF2E120D5DCD70D140B498BA43863C45D94E6642DD04CBDC31
0087B2FC75CAD18883113AAADF162B023352069DD1BDEF229E16DE8D008A4CCC
BC317B47BE42354627EC77B91564A034FF2F3B60508154B08981B62A2E9974E0
E9A46A3AAC7F87B1FD8620A5A695852F2FF71CD16FA34635B526265F1A635254
75398013F04B49F67164F03610FAAC41229306EA37B9DF6E8DEB1C6C2BDEC9E6
EADDEF6E99BC482289181D89CF74F9995B40E5C55FBC81DC7686AE740022F764
C49FE9B49A108931E3CB077A9C53C764DBB47C789C795E97A537F013BC2BC786
BDA32DCD5A856714ACD5D2BB98B011650B2A5D8B881D6854DA373B002BA279C6
0649618BE2D9B1E10DECA9090F66F089E4D7C6D8087016FCB998B95F194BC9B6
E95BA14850E251A4EFF1C66B148E036AFB7FF007F18AAB4CAA2CEDB34F65F327
D58731A241E11468BBA16BA3494A4E80FF16410385FF17A1444B2D1596343B25
64124D648B1E0955CDCCE027BC9F127F79622FEB3A6781181EAD3F02101364EC
FB540C0B2473F20BF05A8315BBC31178398C4DF5CA482F899FBE7654F08D93E0
29994A566CDDC866CD6A1CF5DA076F94B31AE4EDE8237218A12D5E9DEEB9EB26
7CE99EEF40ED1A5A247FA60A89A2EF6AB95CAE1FB119500650FAD0C18B03564E
B61A0D261812A3EDE5BF402542BD215541E3A478F0933EB129EAE44484E084BD
DE7D2CEEF5E54E2CBE14A20F56A27B70B9C7DCBE9300AA2826EF2D6E38C9EE32
60EAFD1C1B7E9CAE9EE810B4C7934D08C44E8A3EDCADDF8FCD6E289C19A7056D
A716700F391FBA6480099E8276173D443884AC0600329C607B7521B1C1C0F575
F4A979FF04F1B3C17864FBC8B92B77DFD068E53CC9111E290624DC39FB79FEFA
C07D2DA7DEC9642694ACAD9C980FC6F26BBC4B98AA0F9624D8678DDD10596E3F
55CAF2F4419B78FF39B929627428C3A6736D8777332C017A9411BF924DE0E40A
24B0E1B797094DDD8EA17A7A281D007F1F6EE3CB17E0FDB167D05506A96F7296
047E208835176F3154E8757A1C21857556EE412F4434E8062A9F9101ADD125A3
2195B8CB98C9B19235FE35E0DB6F1FBF31ABF448C9261B75BF1EB61260DEF86E
BD69F26D77A20B25BE10094D4C196E26034F2577471EF7CDEFD087BAFFC6C93A
F8FE338E70387B4F1BA2119F24E0AC14D6C89D60DBE2E17850FEEDA72C8A882C
F268AA853D036C7633EF1DA737CF40C5F170EDDCB3B5518E28C971EBFB43D842
99D336736B15B05591122AE51D1486E1F2FA31E9C9379F2B3440AEB83539438B
B83563DD61FA39B66B4DDCE39F3E590823590CD7C75BBE8B58EDC2F2ECB1E684
00C6706D29DF0BCA1B5C649CF209DAFA7619F27D165264869A4D5EC574FFF640
76FD6BE210178957E86D8B7303BF3EBF660879783E563E5FD42AFA2E2C523957
8183B066D5A65BAE4AB038087E40257C1FE6F484941D7387A2F92A69CAD3FFA9
AE559D3043D7128482D9ED343F64C6CAC65D8218E75ECDA7292A0F2FBB4A60FC
7025B92E55DD5D5897F13EDBB3356F9E2B9DE1FE09288B3217E226202117CFBE
3DE2C6DBFB0BB25BB13A128CECEF9D4D51001EF6E00C9CBA158724AC4352EBBD
4085CC2897C588A09FDB14647F570BBEE55DC7F2AED102A1134FD48A8C8480D9
137F359E6287C5369650A06422FB0B3B29ACF32F3DDCB4DF8B5AC385B0E99329
08C1050CB6DB39BB10C1F4D149305E6D442E7D8B58020A01C8A417B670A41F2E
B01A30F2AE8C73D83360E849EC83AABD17E084BFD0A3606D42EFBDAD44BB98A7
440207EC9597D409FBD1E6B2429DCC30846293BF3060E9CAE54A81D21AAF3BFA
BAFE773F095BA4D5A0F9607E25DC3137296CE1D8E2B8FB0DF6B5FB6D5C415495
635BDFF798B08041C566CF1D783EC7B15B4330A37FC9C1BF23CE45EF19471FC7
2472E528053EC041E396333C90480C82F2B80E740D5ACBCB0882F35AE8A3E3B1
FE3903A941EA20902C10B0C3E73DF25106052700653849C02805E1C56026FA71
302E87A45A22ED99B04853D66E5A22B56F79FEF73918B7CBCC65CA7DB3E410DB
1AB7AAF9B483A4DB3B333B158517971542915D70737B3F22C6A831A9821624AD
61DC8A0DE77A1F4BA087E7E54F4602592AEB49D4AEA40B81B7B653D90E146B6A
AA318E165C8353C9CC1F0927D73E21ECE52D9C3EA6DE3CE70352D2ABEC8E3DD4
CCF226A6829DF67E37A242C5E0FDF6AFCEBB0621A8ADE7553CCA3725FB707ED9
526ED054C471B82AA52B6C090D4C6C776B5610954A6E5471F8D8344C07DB8E45
BE34098668A5FB9DB4D49F3FC041809ACDA455C62A76B51D730D8B124BC6B76D
049B17736CD9E28DA73506142B6AA54FDFAC9050332212CD062A6B96FB18552E
DB51B991870A6E579DC68B52DF7F950CE1BDB15548CAD879752198F3A2141F1B
77DCD2B7DC83E662C19DDE6A5207ACEA1E0C78CBAA7A47C5F3D0C745262B88DD
F05E7E3C1682E8E90674B781EF298DBA6CB1758D22EE8A7680B01DAC100D3748
CA1BC047117E5E9AFBA7839CAE44964C974F08DB4C947F074F5B3644BB3F93D7
F96770C73499AC0AFC3E20F0BBDFA01502C9A1C30E9DF357529D99BD156464C5
D64ED5C7BE1C1DB9852E09F62BB22A3A51BEC8BB98DE63D6763E8225E9ACAEE7
9D813C62B96A7CD2247A269F53AC59E3E886BC531628CD9FDA87188135B3D6CE
0F2CC637A8F2EEEA4C05990EB23142620576551DC347BCB2302D5D5FCBBB04D7
7DC4955E84168F9AC6EA2E25C8C38B8A36B337C6925E0CB5BD963CB791E28CB5
4B37655D9DC3BCF1F660E8262CD10AA45C67562303483314B5B71B07C7F8C598
D226227FA8C178C10D90A2F26A639CF016B843ACE6B352A0B859AAEB15A52403
FBD562D284EFBCAF3553CC5A757FA50D53E6AF18AF09A1B9C4792EEAB445547F
698E0DC00CC722B65CBD277C5DF3B4B1275090B71A4D4B3B7961171D67F8F6B2
6EBA8AB37B5C35DB16D8B776255132DE99F3F4B7530A72C49503FC4D5C84291E
0740415B51E89FC1E4887D1912C7FFB218D23A08172BC11116C8028E77D0FE5A
DDEF0931C9EFBA2B76B78F6A90C0E44F8236F55938C3CE5A9EEAA8379EE7D879
D13C3E2D204512584029A7E941946AB7D45710ED4396C6C9816137832A56C48F
C89066B9FF63B80A84B36F75AD6D455B580A4BBE440839A54B385C9E4571C466
AF1C084F04AF31AB83EAEDA618C70F735DF746994341A37D17E8AE636315CE9D
47B1A020296D23FD0A59D6AD28E34849187D767EDE855B520ADFA07DACBEC45B
BF0C25F00DD94C798C8CF098F26C8AF48B458803BB26487C1391BD9A5B51F33D
505FE3ED168109F1F39AC5C3357E48CB38906275AAE8D8CBE9ACD7740ECA4A47
A985E2E16051FA4178F6557DFC8FEF287CB787EFF59E86B4A72A199F16F2C24D
D5A6AD833A4BA6F96FE67FE603F3DE0BC536C9A2A04B73CB2E4EBCF70184C5E1
D9C9E3DF6D0AB7F44E679E8518074632F6BB0639E2AA1DBBF34708FDB8092FE9
343274DA68CD751A72052D4FD983EB8C149E081333B2F0E0A54134F91D7B4ACA
E954658CFEB3FF04F3F9F42C57124BF3FC0BA485E050DF883E4B2767E236BE21
9FEC94EF94D9F2096E76F1C558F40812444C6F0F4DA995C8C03162375AEF5BBD
6BC3B250625E4B5C2B2BF9879F853460339AEFAF4FCC58EA396431BD4F95BD5F
6DA31DDC13D860842BAEC5EB5C217FC685C06C5AE447C991137584534EFDDE0F
7BBB3FAEB89D737F9FDD69B4EDADB476A1E588A8C8499A8917CAB23F00BC124F
D93096D1B365B754E3D03ABC8B3DA3F4F6C2DB54682F72DFB7E665EF36DBD3B8
9455CA9BFE2FE8ED26203A2B353C3C9C7AFCAA09793C8A74DA25396CBC1484DB
565607911498AE56FF61F2AAB48F1B954211AF0A38D6CAB3BCD6697C7E56C29D
62A325714D3FE8C3DC019CC01E8738CCA2596AB05857E4B8F9D6695EF332BD3B
AA9EE551A4B142DDC13600318F45CBE1BB1A6E0CCF1CD79182D3B235B457CA9F
B713822F634A96C5D1923710DB4B98B063FA07A5FFE26234C70FF6EF6CA2A853
FE0F76AB1ED5B97A1060D13911F4AC44FA5358837F7CC6ED863F0FCCE5F79065
D7AF0839F444CFE8AC2F2FF46DB2B95247BD8261F39BA12AD5E50433EF517BD0
FD04C73FBF1058A8907ED43B4C144BDAA3C4E6BE9637FC8BD3E94D6257BE1B7B
FB179A4479EBA92EF2EE4E7B73DD295274E1D416F7AD7338FB3116A3CFEB9E33
8EF0D7B0FA721D7D11990750232AB90B60DEF84924B838AE79C6689275697225
1698C73A825EAF77F8C38CA8468E616771E6C9093D7E3479B0DF3F3160EA2059
B5F7BFD55E90340B4244BADD57DA5902E2C08D00E814009234E2A36EFBD854F8
68BC9301D33D0203F8D1F59EBCE526B06B610DB1B028D29F838A52AEC3BAA982
56BFC6A306ACDD86AEFA6F4F2AFCE55BF27AFC96D93AE476AB15324149043E71
3261671835DDF163EA8D3DA7CB1F0514DEECC225301813E4ECE6D689B0A04229
04F28E6DD3CAF0134F9E19DF8F5ABD86CB0F8CDD3A059F2F3421FF99BCAC2D54
03D67B0DD5ADFC6174D559534155A42F6626A6E7CFC849FBFFBB17679ABA8C34
B1296EAACD7DA7010ADED0D6A83F04F396CE83F0549B1168EB7DA7468011420D
BE034D5AB67817DA21F12130B85DF957C636987F2ED81971E9FC729AFC1E778A
3C062A85C2282BC39C571BD45057FD09085730695ADEFF892B4307BB163A248F
9A2052CB8980119F3F2EFECCCF2C04B55F44FC0D155C1E04055D6F81AE5E20A9
E98ADD7649142C6CC2FCBD09F82ECF0716F5378A8C51C139D72816DA8B61E413
EDA36A71E7B6110CAFAC612E3E67F979E774BA9C7A580D605929D6D790A34084
7DD751CF51F14D89B269A940060FB0B603D3A2A6839C1C36A3CB55707A0663E4
D7346CE1DD000B51AB4A815FECF291D3E8F573EEBB83E6F9DECA82BEB3F58558
67B2B884E4A9A334BC95558E4C1A9D0B93E9A8C0D83CB8354B69357920BEE4A0
4E464B774D6CB4588DE10B3DAF9F7E546F6AFE62D85E8D25FC1A0039346F9156
82672DE85AE82551277388BDC62DE6FD1A3DB14805DB66731CE5CE34765A6E35
825C99CB7AFE5A873340B50AEE34371B1D7C90AFB517178C9DFE59CE8B036E3B
067B364E0F77D36DC299ABF128FE2511732602A5885A6CD283AD3C1C87F360F7
BFF771183B302FF55667390AF2E314BC8E0EF10504B5612395461652E3B2D6B3
BCCE3F5D699B3E2227DEF786D7BBDAA2A35EB13FD17790793B2B4A9E06AFC15B
8B1E7C3534BF816D19A02789F1E1BE623EDD5DAF54733EB1AD965E8A5A3ECEEB
F44790D57FFB857764A8EC459BFF61D9A893DA0177CAB77BB183F54581052B66
D6CB569F8C51F03E409DCE0717779DEA582740E49F088BEAD6E482EB87350926
910860A95DE4100D2A9BA91424DAD1802F2EC862FB85A143D7B299223ED85252
02C31B687F2C19136157C6D83B33313266F1BA8B9E065A0E64509902D75FF0EB
AF919567B7A1CDA5E14FEDA66F60059ACA0ECA3D597FBAD8C7EC31F3C1C46E5A
E79F74B3589EA1C34BC2A4827253F72CEBA7495FFD2989718F2A54E5D0EA1719
ACDE43012A2AAA1F71550220B035B6AE978341404C817414D0579308612AD113
219204CA43994CAA4671A6A97BD8C6807C21360D0C3F7742F47CBC2D74EF214C
0B15C50A9B5A26205F096D63762A9B14F267CE0337485EF58E37EEF30EAB487B
6E7AB230EBC988C382F594B4D4D4B92E6AEC4A9F07841FF93433615B89BA1272
6F5B01CD5715C6432452ECEC048DCD14814E47DC1226F723CE25814E30876470
F16C5E8F87F74CFB89CA99219C25478E0A63F78F3460EDD4F64B4D2A5B3E660A
B83C0CD1BB032CF0DDA97FD7C35218928C48545178CCAA9646C6C89D2FB89665
3CB3AF6C9466BF2240E2A71EBEA84FE2BA8B2BAD7C2F670BD9087F7531490409
D02F3D87BE05852F9C004219582D45949B8C3A7907A725B1DBB3F1A92E0A0456
D103AD819382A9EB1E201AD6F522AF0386A30A2693B607A67E0AEAA7E969E420
86DC576CE06532479E48E7E905FB5E8F9FC3DC5F258FE3C18E7464AFBB0B0757
2E4E438A2F1A4E37E0909724BDD52F4D4B98C4AD8E1A1528BD444DD1B0EFDA76
FCA43DA6DFF11E72D5BAA35CCDDAB44EBBC0C71C3FD43F21DBC6904AEE4B01DF
4F1005122C3B92BB93F4E9CA79A797C3A4F27AA9924D6616FC860CCAA3402216
64068B6E7C7CF2E2432A65BA21DBEB0A83FC660BEB3F1A3357D218276A5D0FA4
EADB3616CBBE98428D5D811FF6FE99AD7ADAD0922C1BEAAAD9B337968A02FCA0
1148C302E8E3AAD1DD61DADD7A1FD82F0C2E744CC3B65AAC7C04E9646515EB8F
EF55DBF964A5C2AA9623B8674C8259A681E27E2C4AE26093689327A256571CE9
457E795AB6B63D78163F227F1385113B9D2A2F0C56DB55B7317231C2B2F371B1
559D8BEB245FFAA7955250F08E8F5B149E8F97D25635B98E9B51FE570826C75E
64296714597A74010F59376FB1AEB72D08E929E1630A7750DE134C6BC13E5AAF
A36ED9F7A8E5D9BECFBE4384E04B0D6FECCB0244DB29A8B801321969CD052FD6
1493FDA211564478C68C592E158DACD4D9005B983760C79C08C12658303A3F51
1EBE5F047EE68288BF3DE1225D981C287FA9BE1B690BA0F8059823BD2AB80BC9
DC78BD724DEDA7987A6DD44876D3FD2B0A21E719D5677DB0E64C7650DF6FDDAF
6038DA9D24DC1978AFD87934AF5BFEAC00EDE5DBDE3D585DB595D29361F8253C
26C37E09B4F87056EDD8C90917EEEB978E51957475B5717AC1BB4AEDD87AD40D
D35C3449819CCC9366AFE79A48A3BCA95DB66E5D14FE0A8C3FFFD51B5492DB49
BF8810AF0BDC54BB1D08740818CF45A63A694C8F8DC44FBA5607435A619684F5
02CF60F00AB8418D0C93AC7EAA9DF793A62FC3E0C50F55A84F67D932B8062860
39E75042D590F24D8FE9F50D35EC6FF30384385CF7C56DB4A483D83D7CDB2BA2
48A366D5E0651560A4BA2299074E853FEFDCE9480F0E55E126E1DE7E700FC3D2
2EC26F9B2761469B0EDEE8BA22F029985C6F5C6E52567706CB28468A9A6AD9F9
B873F1845718FCF81B2A15BF986954219C2577014CE55CEE9E4D5B2FC43C7447
A9605D5D86CC06E8029D4F57A392D2738F846305E8F3AE5B5E2BBC2F802F00B3
A75DE53FEBE1B7B9272A951A047119B40830A39909494E86AEE21694223DF5E4
A7198F31E2B8282BED7392C7BE2B61691EA52F310E0367BD918A9DB9077118A0
42EB52EB7800276E7502D8CB8A68A46889B0D2DAC7CE9E40D84F17B6ACCD8743
2BF87A6B87D3297452BA7EA1CA9EACEC454312EC1DCE09A40896B78BD1D5A73E
157AECB9F3F59C0D736946734C6DF70888665716037A35F574BB08A82641F363
6C82E2BB16E686C92C60EA329075C30D3F97A3214A478933678E9C5B2267C747
BAFD5934D95FBD2640BFF7E94C4C260BFD0FFF9D966F224AA72C22207BCA2267
52B21D21999E31A3DA1E51A3282038BBA7F7FC70987A57EC73E5A6B9508B48DD
49577EF2E015E8D9C0F64025C76E0550BC5D75F5C40F7C7768A67B861D5FC288
7F1635AACF2782022D039A8D49085ACB83B160C466909F562BD4C26A26BEE741
ECC847467858898AD528633F477B739EAAF07A516D86CC678FF6D5A199877F04
81B1BFA806A353E3270334E0880843F700FC1F6065FA37F248AE52A1FBA985A3
1F28AC72D636AE969256DC91944150153C99FBFF35539B5E3CEE76DF3204AEC1
961F654E12385D1EC21D1831C177FAC71FD55A5490C89142F2844CB7E6352B01
A07303DE29B299AF582319835E23408E414CE2299CD46784E6A7AE912C213D0F
380112FEBD737CFF6C1483C4520BA4A4B904A4031C519E155A116C14F576AEF6
6E86BF55B83AB07C8875DE7D96261C02AF3B27E36352F8DC981EF838587C80FD
855F1733F50F636A4C7426584812DA63B5F0B1E400E9F96CC34E7E2C3CCF88A5
17FE6F9C5FB51F8737E0EC21F7CD596D42A88458B89786C2F6D96AD2D415402B
06C2CBB2CB91B45D00DF27E5A47692A30A7D13527A7F3FDF0C07D30FB6436D58
753F6AE969F7207578FA40B7457C36BF9A0846A0C5007E8D72ACF2D32F854BE1
642416405BCCE8D41818D663AFDC9CD1C81B91D658B398D4C89F58C854451014
68001F40721E8DADDCBFCD8BC92D0D26A7DEDA6FE09F7DC39F9F2DE66A66190C
689A73A26C5E0137C208DCF1A7143359F8EE27AB1F3639B4C997B3FE3D863BD1
FE2D56BD513E5BE907EDBB61A117B7F1BDB61AE87F1906CFADE3EFCF095AA187
EE498BC5455C976C40C6E24D239FCFE9CAA763CD150D404C418B12590B6EEA0E
1A19CD139622317F5DFD2EFBD95A7589BAAD70364C33665F90E24D35581DA77D
776D1EEB96F837A3A2F5C501AF422A313B47DCEC7A019705E05AC514331F7A91
B4F74898E2FAD14576F81B1D688DD8F61B1E4450C0C994D2FA8F4EA0B31BC626
75775A139B54949665078867B4A024FC24B16AB6474F370F7F61C7A430AB2303
FC215B5B353C8B1D386CED0321AA1103F5F4CC57F15121A5265A4B316901E61D
0B6A13CBC0EB3B038B56DEB99AC4C60BB469AC2C2CDC1E415746055916E409D0
85688DEBC02A6E020EF5101E41C289C854F7452F28FFBCEDB0E2DEF7ACE89539
7DFAF366B982B1E79ADC6523109832853C664B53C4ECDF81B0004DBE82B86F5B
A36A3B2DE83040B16BFFBBEB73850E2199B8D101C85CBAF179EC5881CEBF7EBC
3B30AC8AEB18B09AC7183771066ECCF26590A7894CA6F91AC2CF4A1420693935
9518C6B25D2C97192E8E1F0AE8D3882052CD47181C522E1F417F28A12064034A
7290750EBC897F11987CE12AC4C09643CB0B9D921B4A6980F6B22FE3C7B7CF63
57CCAE079ED34837B5A08E55E6319BE14383542B9F6500CD29B4760D5B4C77D2
5AE31C4A75BD8C7EB02722DA8D894241446F05FD5DB3815F144E1EFB2D400AD0
25F1AD7295D531787D2C5D4E00A09F155BFDF971B5A4D0AC102C2CE8A28E1A82
794BABD4D8814B53865E03C0C0D6DE7B16FE54A2CD42AEA5FAB6694A64B334CB
750BB6A4D0230ADC13EBBF5AC7571B0778C0E9D25358DA06B20DDF35F409AF15
997127DFFA9ABFF8C858A51C83CCCC572024A6243D6BC209B8D579F6A057A27A
EF243C4B389CCF9382BA5143D6359D3BA2ED407299B5C9E361C08AA256350ECD
82F3B38BD30286E0A8B3E42F7CBEC366E60C18416B956C6377E02A43FDBC78E4
627ED79B16862D939F3A3000659AC050E7001000B2C6848457D632AF0F1DCFFB
6E5F5F586F3A72BC1E72A5F984E7235607EC39E49ECCE85A8E75B8B18D8D9B9D
2227C7649133EC6A81002AE7A4E697857358F58A400549BAA570F95B97AE0BC5
7BB244A80105AEAF034D50D17F2A2913B639720FF4675597704DB7721A0FB87B
BE7530ED3C037A517E7F4D92C7AB7A2B373039EBD068D131C7F302A2F9FB65EC
CCAD4616927004178B7B2CE55A8F36653841CD79FD3514557D69140D6E7E9813
2DE2FD992965837E604A8B2C51E4FA23D38F0387351BEFEAE26D641D49B7A349
0F09BF16B8D179FC176D0735CAD73632F8EE970DC0EBA43D2C700A1D58F29F7E
F1487F54EB23A1CE0AB8CB768EDF04DBF511A3BEB1869F9D5F0086E13F8C3349
8D55FB08ED70950200C50B7E71F8C21BA46E833E6C0DCF6556C1CC6A1C88ED2C
49C1700E8AC2E1EE384B0F6907DA0232BF5153AD600D17DE2777D5CC84335A77
6EC13A25F0B85F0EA2FB526C4A6975188599D789CE1B95719560247100F68FEC
756F7AA110B22AE36B9518755C2FAC2135E89AF71192E8CC3776F553A88FD966
801A249712B98F8F6684D7361A1286AF3E4083CC9E64F40A500F045A27CDFAEF
A66D28B966E7D491B5803E4E32D24FDE0B7C56732957AC35E7CEA2C1AA00C6C7
57576EA0E4C8F0F14614231A275836A622235EADEE4F56A388398B1E3B8EF7D9
F110CEE189C26CAAF7990882F149552ACBF1101C0CC34540AFE14778BB219B59
B3BB99066BCDDBD6A90DADFDC11833C934EC4E446C77F005D897D944251600E7
A6B304DD76E088EF97077EDE26FD1456F4EA599CF4C4B22F65104F6D0D96CEB9
463A89A504AB57C377BB062C02225DCA03E6485C035C6247166107D6C1A4FAF9
AE46BCF6A6475B4197423EF9DE9959CC5CDE05CA9B914F8749608248E964F913
5155384A2C0EF7347C378B111AD792A90E38E1552BA4D6E36C5AD7B56F4A5D0C
F8FE219670A817942121C56A6E64555EBD682B2A587F38458944A0E355F989A6
D77EA1E24367EB14A7D28DAC9A22E2DF55C42D244D9DB91ADAB25927B9001E6A
DAAB86BA6B2B4E28F3C65566E2DF0AB84140F348449C01E851C4736321D6DFCE
20133ADC7C1C76B14667721A220ED3DAAF96F20E29D2F08BB07743827690BF7B
6E45B4F8674A6FA270F14B4944F276428753AFF93D541651CD027D5B23BE4FC8
6005E73CF2508994E2244B800EA15AF8C16B9B8329E91644DB1EACF0C0C781C4
F4C411F79B1D23A87ADA31D3A48C7190B618659D7D0B64A40FC4773482AF8C73
85F80E163B9463C38F611AF4987F7203DDCE93170428CB54EFDA16BCA724284A
ECC3A2904C546D6F2ED297BD3D3A359F69CD6D9D92F5265392E03264AE22D81E
75A04AE68344A9F152859C697E93BC968A3F78C8604FB03A0AF394E19A0E50D8
A50838734E691BC16C50353B2441985488F0E70612603E3F0722046046DC94B5
017D456E865FB2E416C4E91494CB6FB74220158EBAAD27211EB43A348E7E1F83
87334F443CE79BEBA97AE481AD4AB1DC86D8BDB89DADA068799547812B285C06
A7820642245A91B895E018395581C536C3CA5680F622117252D1D72A6D9D057A
413F73C7FEA1993B5020F8574CE0C8B6FCE43E382AA3BBE0CAF9620ED0ECBE98
14BD19184B2C0F3B04B2D3ADE2358EEB27274D7B30DD69E1B2C3CA70F2F79FA2
9543F526BE2A04C6309DD3E47CF1FA44EFBAA756B02E839A6105021CA9B728D2
7C8018BECD829ACB6C3D9129E976A2427E1611066E0025917D1BDB7E9E37AD93
5833B94133FD5C6E5F76EBABE1C94999A54BC260661FD4DCE55956FA246836DD
DB17F52681C14DE689A8C6F2576DB779DA5064C8743100C8DA1A4DF6C8B7B019
CC31279CD27DDA52E1DA4CB052C16E049D2E6645239263D0B6E6419174661478
75F99B35930AAA74A477AFE29B1DAD0E6BD33735C477FB9BBFF2EB908D91B245
11AC525E15EA2EB389640906449D7A0A2979BBD6460F393365098CA717F915EC
27ACD59D2F35DDD0320956D2148DC7C2D7EFE859F41ED2661FFEFE5493FBEA5F
B1D26743416B6D20BA817AB49C66552CF7FEF8C99C29BD310590E1B613AAB89F
20B39C67B801932612BE59E8C4EA4B47A39D9D73EA96FEF2811F36BB337D4E9D
38D33E46E3F79F2BC92D811CC6DAB392EA379D23BED8DCA6132D76C53B78A28B
C434AF4C963E047E7CA794F2C7E845FC08034E600A9A20EDAEE67F65EBA7C2C6
1AFE1C7FD58404CCF6E173D56F8D3D3CCEC06A27BB12FF9B399DB1AF4BA9A570
5502F55E4CCF7160C54F7BC202236296A9052306639F4672E90E3B9DDE5FB364
F7BD728B86D3BBE1E37BC2104E79747402361416DDB4C1AD10889CB7851699BF
FD28D02FF638853114464CF170F3EAFC1572D2E56F2F0F692831903D20979257
C35CA8E92DCD33C7DD73FBAFAD2A3EC3AD445193BEC19A3ADD031C747FA67225
34BA34991AF3F1BF309ADE33C2780E971D3952648BE3ACB42BEC6D5B5DA0CAF1
9B5792A3F832853CB465BB8B66C50948800458912B40D3D1C93BFF447255A99C
CE4EC0E8B418284452650AC9F595D065353A0D84229C2226465DBD27291A7AAD
14E946490AEED2FF28FF48234265B4759B50D24BD711DAC55620DCFDC63493D8
B9EF33711947B65B0C07BB7FE129E074482B62CA26EA8970DCA4F35C139CBABD
4FFCF1E22865F11E640D484E5F57C00B1336A8F61DE8919B9F5A5D3533D903B8
948753E873822FF2E1C8DE9834854FF2955EDC15456438FED1B333FC882FEA17
CE5ECA50FE1EA7907A9A79564DBFFF9566BEA8DFAD1CD13FE4F4BD5FE272043A
59FBC65D5C5FFA73F59AE22BC7A9DE94C8D7D03ADE5D6DC0252CA2E3EFEDE150
916661FEF85C14B05424C0C51BC3E784E53A157C5192135A7055198A66789574
CA9DE18D9CD69BDDB4707F7B2C827516C1A6B49353FB7457EE57EF5908241374
2A4CD1BB78156D5809A689085E5EABA02F60389E94F86AAAF2B7E9E315B157F8
BE66C4AE3F0F649948253EC51D98A20B1C4150AECE1B644EF4F9B15154D3FF75
4428AE15D0D7F8837386F411D0FB2C1CEA22C286B7F058E8F48EBFC36AAD3511
F899A93419E74B4EEADDE0FE0B5D86C9538B9E3260EB814969E2E48645E1F5AC
047A8204F464CF29A60BA4DEAE3FFB984843DAA8E9420BDA882054B68A169C3E
54FF994669E0E0A4CD33F1B71EA3C7C787E612AFFBFDBB75E53941B46165FF34
0CEC0051A4EEF6A495823192E78065FD6060A0F7D8ECB4EBAE515878A31F197F
D069F443133F6271A817B670A41F2EB01A30F2AE8C73D83360E849EC87FE9711
CE71D9034EE8704CED9534746FB31E330BE53B043CBB36B38CE86196A8838829
AA72E7DAB35155314A35C56475A9CC8CC6267A6C8B55512546ACE6437740E677
EE22A40C38BB1F69F691122BFE48E6FE4003BED0D4270A59532C46091584E9CF
7759EF3E2FBBC0EE740CD2622E599A513A5A5F8F39BBA8D08AEB6465A1FB1258
980913106DE9470F037FDD15E6113A181DCB5104577F6303D8AFFF0D1623C49F
3A52C4EDA18B7B6BE5C494D3BE6EED741DC2B9D578DAF502D940AEA08876BE07
1C01DBADD0EBFBC4FF52507C34739FC6E798467FB71DAC5EFFE0D7BBC8114201
E03961015596BFDCD08FBB40B1153AB6626767FF1A48838221A3FAB6E8027A10
873C04482CAC5129F1D102860A54D8E656ECEA88768396EFEC282DC3DA70208D
6884BBFA2D4ADA174645BF47E448B703ADBAAB9F0DF2A0805C9B140D8CEB4474
0442AC4891051195B0B6624F3DB00520FF4657F7D127A24EB69B4ADCA04C25DD
A90364C4462F8DF7B588398EA6C9D82EC5A2888F03FD399BAAA3890E4F95DAA8
3D88BC9BF79C0F2F5A0752A8DC4E816B78B9EE734118C991282B1240D3E46337
C1FB2DB53C79D16B085D8400FFC9324014BE2A1D5CF3A0CC22E480CD066D1019
6C05A0EFD97EE57F50C5A59D1EC020C2C04DFC9F36C8253C4346DBC11A9D851D
A3A8E0D478DFDC64095D442198D9D530581F1C40D357CB03A7FBC28AB07B83B1
800E41C9104A62A074B44B977A4E4A9974A30FD61E80F89DE77282D37856765A
2E3980461481535061B2CC994D41EF6AC07B567DA70D25CD23C25C7D0B103312
B17D16087D670D7F854D5740F601C12493300841AF0F3A67E1E6093BE6DCB400
BDF8C5B29940B3CD12C56C7856D4B0ECD4E415CC9290C79FE24F1ED92BA45398
9EB7CE1FEC9D31E66BB00C09B952A829C5F56AE313967A0B57292667588D0A60
A045AE5775EFA566735F30BF915A60F7C027C153000E975E7513D0156C73F7F1
6C034A24BA4FA16E84B73917E43FF456B5C435C17071907E4739469EFE5675C0
FE6A19FEC026975039D81B532DE5BF0DA704808D7B0878A09BF1DCA721854AB3
AD69C48B50DDF960297D39DF2B708BEF605075EE12D7754830200D0EF7CB139D
07454666A9757CAF11889CBE919842FE4D30A9DF8ABD4B79FF6BFA7B048F1F20
3BF39512086211B6ED4A0CFB76CF072638DC21405F5C12971456BA64A3519849
2E0C81D7EC5306E4ED168682A02519583C8A4D3449A80F06DD05E185FC24E756
14597763D2683A5DA582CD0C910FE12D8CD6A6C6A3E4A1518E2BCDF099DA7A65
D2DA2A30960687F2DCF03E8EC3B3355440F8790D36B3FC528CCA877F264F9CD0
A9842A9410A0895DF75E1D19AFEEA0B92BC6D1851F9133071CFF77F6B7BB47F5
FA2D280B99D60757CB814F513009C4F8EA0E7C610D9815F6C9E2E43707530FF4
46F58B37C73CF2857A7ABB31EFD03F4B11BB195452F6D1A1689A2BBAE0007448
F08E8852AA459B4B19F3D15F6C7215840AB673F35C1710F16152A964659C8624
1FE188A2B151D9D4FBA51E499C40A5F15786F4013542378934CE6745950AC10A
8C4A87987B83CE610E61CF5F7C8B1546B7A57002CB5631ACEA320C6437B07E0D
6E591ABD90B6D1A3EC389BD83EE4E88353D85D994B25A9E343F133B43FBA30C5
2CA8A503F3FE224D15738C62BBA2C6AD31A0D44B1E9FD3E9E8CFBC32E32A32DA
E19CD9401354E70E1ED37284DDD65E8228E905026C46238C6F9CDB39DD032031
29FBC6B353DA5799579598B01A786024211AB36761C70E58AD2500BD0372EAE8
348C863EDE31E97ADF14D9F180343DA29EB6D49764B29141484BDCE75BEBD9D6
B46ABBBA618BBA0BB81B21C9AE3E8EF86BD5CBD90AAA608A3F65C0FB12D24CD2
86BDA10A436108F0D6B87BFF46E7E197D8541D72B9E70E255A281B2437BBC429
5CCDAA8DE64137227F139DC666BC06F880D67F16B316CBB5CDF1977988257A0A
CAEE781ABC1DDCDBC1B006CFE5A032B95CA40F19FE0EEEAA2ADC08162D9718D2
8BF9E906D959137073313978F2D5E7E701893AA6D9E4B7582ACD74AC46BE3E81
61DEF94EC7C83D65D86376FE392900FA19FEFED037760D1B21CC82451626B5EC
47DDE14A666942B10E15F853CC86DAC167AB448B9CAFFA4BC15B304C7446A71A
59F056B37F038E68455B580A4BBE440839A54B385C9E4571C466AF1B55CC04F6
46FB7704DFDF783B55A6821F7861B12877C5B1CBD6D3328DB47A624C0296A8AC
D7D8A62118514F9B7FBDCC8BB0867DE7CA55C54DB2D6B2CA2FFE02B6E5138C47
FB94BB66248014CCC738BF6E4D58E1E10A9648D4EBEA307F56725A45128EE8ED
27C7E7BA5EA1A04E90C7D88600D2E83D1E720D03106898433420031B98C0E76F
EF91C951381D9B54AE9092381AD48085761D7AC6A2F33FE7BF1189B74F71D864
956D63E797EB97023ECBAC73653FA3F8FF2205525F1BD257B57C0D292469C015
D85942E1C24C48466ADB7CE834363B8150FD58BE2A16804A4997ADFEE6E00F84
F822BF828C4636E80170B3D870EEB5E235C61E8556A2D58B28357C8A57EAE9EF
8D735BFB4715B7E2454D0F598F0BF61BA4085C37E9B93E79D1D9B0E845355120
13C74769E497F5FAD065CAD27B9EB2020C908E91E81B07A92AD544D201D7322C
9156B30A6056497FD3351D7C0F6F281460A76377D15113D005A1B66901FCCBC6
9829663359171CE6F8F94F8270E1C017E33650E24F353E423A9254DC034E6F5F
37A3D8279178B99FD3875BCED31F207E1DB47B8009A96BB72521D78213984E0E
177E9C7360E93C5A09A5977245779264257FFA0AFA05C2842C534A411593D10A
747F88319A809EAE7BCE9A7AB5B1E77B1B8CD7F56186183BB1EF5CD9063DF88E
60ECE319AC80193A8EDB7A58018CE9051284534C1F36D962ABF33DE5A6612AE1
2C94846951749EE3C9A2EE605514EC228BB66A22545962DDACC28AF52ECAEA85
FFD7C022053AB5E774464120A2090199B8A322D4E4B9F225EEF68B8281688882
693085432C07EC72C6FCD6B3EFF627203630AF2BD897DB3C7DD9D71FE2402759
53E222C1AB7FD8AFB2C629CD2B0512E17CC64DA35D43C4A831D03FCB1124534E
05AD6F4C749DF90AF06D25C8878E0AE2CD2CB6A8F5D480878EA65EAFB3C60AE2
36D848BF0FCAB713EDBFE54E4BA5BA08543D85A37CDB16D9BEB4252D67C718C2
A4595075C1818F6A1AA8F9BC84226287AFA57C086503BAC3DBAB76EC3D8BF52C
1ED0608B2273DCF4CB3A1CB631AFA51A23677CF06FBD07C632D409DADF45FD19
3E6EF5F8491B730E6F3509F43D146B66C6AC37133B518FE14EABFFBA280CD826
087D821A0DDCB63267A9A7701DD5EB7677649A26D94F03F5EA9956DD46B5F299
87154433CDDF37C40FBE2DFD467CCC73F5E1E9809CE9BEF643C2568A3365B3C1
540A2FA5E1DB9DDD2FDE4C295151BE1F1C9C1A407E38BAF13CD2B3CC3A3A5AD5
7EAD62A642F7BC52D0064D626BA54AAA0562F00EE394976F0A2F4870DB0C0FCB
EB6D169903ED4724723A954072436EDF60F30CD8AFF952E9BAC603C235A9D7DC
4D9416C47C0CA011F85308F5CE10B99E1B023E824D1B64CCFDC1111183811EC7
8038D8521F88E1E46C231350953FACECFD82FBD821919E3542B33690DA59D859
C51EE7A31E4510F5196DF93DC22D53B21CC59EF5E3DA0AAE2511A0731F4CFBEA
451BD48C15D194B7A0925481FA6EDB08674679A39EC0A7F739BC533CF7684AEA
10F0516B499942E56EFB6139518D822DC063095DB8763961CD892B5DE3777908
625E1A91DDE6077E98045C38450ED9E422045F45A358A7A162679E52850A292A
04B8BAA71A1D06D2FA9ED0B02168B32F6CC0FE765F2AF96425EEE41EAC3D35A3
AAF9348E13F1671DB099C4BA12DEB2C7D2C704581BD389D4C24C460375FF69B3
4D18EFC59636E9C7F8A9A62866F4E857F4EA7D25CC8749B07AD56F952B9069C9
1EF0CDF28573B5A46E82845D720CDEAC7E9079E9EA4FE64EA87FD6E64BBA672C
3E6A26B4F69ABD5228ADF4F9AC7621009AA271E0B41B6C1C6DA424F4E69290A0
78C85A84003435A91198648A941C64D12E8E1451D41BEA93204E6AD3AADA6F24
15A8BCD5C987B17D5F570A966383AA9F7CE59375525369CA6A559BEF0D5763C1
D7512AB6E16FAB0A633BD4BC90EBEBBBAAEA60A61E4B94F0D92A7A8A44160BF7
9651F0E264F81770C69C2A178F33BA78DF24F7346872E84795059D0A12F0E79D
D00A9FB4D7BD59E92911ECD5FC0D9343070BC392C6FF76BA32CC1704A1B7852C
077028B02958F0BAF81A04C5CACCF74BEA322B4845273B067CE1A9B7933BF8AA
212A5A80071AE2173470B43971818878DEB47C542509A9066C03C51A1A194CA7
1FF4DDDF5FB31C974FC3B57BCC10CF0A0F1770DABFA09730FEC742F9287F2792
B92D69DFB3B31F1C72FE37AE784561BFBBFF0182B969C8B466D474E73962888F
4872924DCFEF1D58B9118A1924AD8823E9CEA0F386D14195BEEFB3B9A269A587
593874C38B96EE3094BC95AEE6F1BE238B28F879C77F4A5C066EDD265C940ADD
DBFCAF37BA2500213239F12DC7E00B6615C66879D91DADEAA25F850083BE6CC2
6AE7437664AC6A98EE85B34A9A5F22879FB0BD63A2938F9981B2C52892697497
5F2499F50FA04347CAB53A5AAA7A2C22B671497C9AAE53C60DE5EE3A1E09CE2A
3246B9B5EA106E3D12338EC81D16316F21015487644B55DDA2E1146AA3CE0787
4FD5500C5FD4773525A9E12912D6B2A265DE09B43DD5272067C545347BF5F362
D403F91BA1E5BF9897E0FD98394A944BEBBE20D5795B41C85D883A7B825C2C63
2A45A8A619393CE6696FE4CF5165DCEEFA72DC1B32802595FC8A458C082BE1ED
19871BC4F4EE0CFB5116452A0583C7CDA275AEEF2B2CF35C073278159853E3F9
C4721801295766162B7BA50B9C4156A24084CECDF954E6508FB2866CE2EB3DD8
8426FB22EA87B5F38C119934FFA997C487C43CD58E4190656F7B352E24890560
FD20035A6FB8530E9EF89383C06A6EFE56864309B5EC0B1550029198E9E9F0A8
79549CA69DF4EE05AA2A5F075D57D8FBC08387EF2A58C54D8AB7580EE3ED58AE
B83B72CB902F538B6D5153870BDF50F61ECB986B27E37FD67F41027A5A2F1CEA
6F1F25312B41B125B4A46DA4550DB20C261D39AC844B996C9EC9203DF2ED2DF2
9C2AF195DBC923700981C5F5D55CA10F93D53C35497F93A5550CD9DE284722F8
FCE549F4133677FF06C973F989BB2DC8F8D2F0BC870CA2D0B0D46E0A05899D4D
1DA41A4FE88655F94A91F7A876708AFEAB29E9A7CBE0BC90D0E45B0149324F52
CEEEF248413B9AB45604C2037E471BD24485A77247B614E056C02723505DACC7
92086E18039526155ABFD0D65D612E0AC6E2DE0E5F9094E55F65DD77E8263B96
7745D99494FCFACFE9D03B9851FC8FEEBF287171660B9696015A69BA4A04B118
AF10776110E318873BED624E3B00DB455D1B321583B42DE5E0F9AD77BC7E6B1A
6CFBD3FF8AE2F0786C7F4EF8C2A5A242E84CFD4DC50ADFEA0C2E12FED1CA0C65
0C18287C6E4392ACEE9A1C8FB7FD9390F4072F37B10826AA7F8D15F5A74F536B
4F63EE567921FA7B005AAEDAD9D7CEBA399B3FDFF494D78EEF9EC6AC0826E99F
51EBF66192E45DF1F3899D636D518807D029E0FC354D9874CB4B618C65A2D08E
2F14862E3A62922390E1889F9CA029306E7E1E4568AD6F06729E1FB63B8B3886
CF88A7DD5419F12E32DE866604580CDC0B07E9FAFAA67755F81B3E69FE843FEE
F0899DD0F8C2F957399FAF825FFBEDACBF098A54372F2BC0BE39C9E243742CC5
3B20B2FA8508290E2C6D80A6AE0478021E111AC732FA0120B1877C6951F86EBE
AFE1C5725C894669FF44C8BFA89CF9FBAEAAC3B3A5CC1C9744253567A7830362
372E5EF5212EDE3106862F54A3D148BD88425747EBD84BF01DD06B761A5E4734
0C37814FE1FB817C7C68A5AFCE814BA03EA9F973E3F4E5F1A14EBF827DCA38CB
F9A44C73E3054BC981ADF1AA24A40520A6C06816598772E12C1F54F5186A550F
AC789DC46BAEA1D028891BCE072BC40599E587E8B93EABBD24983CAA7C21FD1E
44B7C3DB34900CFF47462A68A28CAFC810C1F1A3A51DAE21CA6F5EB4FF329646
3F528D5160C7E9F656D93EB214E1FA04F01DC2C6F15BD9566477F456E5395426
72B0D2AF645AAFB04077D440BE21B75A75962A0675857389A433E787DE991A19
617A6DC6D266439974A234EFCD5B6E0E955587621DA810E08997786BA72E91BA
1D2759753E96A327B6C114A5B6872C8C9C6213593ED56FEC6D5E9E8C3F5912BA
4BD3ED625CEF5EDBD37618D207AC9D2AF1C72C5852CBDE88CF595927081BC530
6B48BC1B97A9612FC1D0DEDCE26DD38CD0DB6335FC4A6B27E683A4B83116D297
C76128AA0CF27C1433A5B21C85C42294C5C5DA468B5307F0F0F9155EBDF9AB2A
053F432A3149B7BA168CA488A7C8F2A630D1B50C8AD964B732576A4881AE9CEE
27DEB4026FDD86F859C51A3605626B70FCD6DAA30568C75286BE9EE9B1A2C060
1C57F5B7B1717C456ED996C6B9DE9E1159AFDC804DFBA4D875BCD1C5A160EB35
A8EB174221DAFF096246849EDF70EF99B1C95A296106DE15CF1B4D743634DB5E
B2C1EE447A160AE2CF655A2941F1E48A71BC01CA5CACA1C98CC87E8404F41256
B3DF22C3C0E1650CF2AF1DE1F40487D51DC24E7D4347285682450EBB6D47DA23
67A369A11ED316CF1AC2294E853433340952C7F1E54D5EC0212C697D91FA63D6
E5955CAA4FFE0F06DD5A0C90BFABA39D0F2725E0DBA7C8CE305DE7C1B59DC219
7B35BE60C5CC7E02E8BA2137CAD04FC9B35F0225CE06E6F5F211FB7FC8593B44
6AF4B63916C86B2A9DE768BD8E3A1B5FA03C76B92004AD4FF5E2A0B60B0152DD
E9ED15EB68C155DFFD1BB283F3C5592858EB2D297AA93C055CFCB2813F3E8130
E33961FE59835F21DC12BA218780A5A6A0FAB8F42D90434A48E3F4993DDF5FDF
93C9E21EFE746214FDE117584140381D43F8F39618E4F57281998D97BF97B72A
12C91CBBDB13FF3DE31109B39281A3A2DE349F32AF7261E19E0B78B3EB858A93
2B26CE562FCDB42767D27812497EF6A45BADB374BD1C3CC6D8482BAF155701DE
02B1C3A9A93CF961399ECE1A897788B2B23EF0ECF516B4E2977709EDBD3DB7AE
516C55E742F598B4B9140A5364EF1F6F3A8F40FC28A8F80062CD6C9CA9EF8D5B
4FFDD23B55D05BBAE7F649385C4CDDA9A382634433CBC9D2C6BF444FE9559A1C
D46A71E1847119E030D30776ED4DBD5A2DF213D85A56B1CA85DEA53ED0299C1C
2C1EFB1C157CA626EC056A68B66C652833CDCF08803A5D0344DAA7CD767C726E
7BF288414284CCC3E6FB3DB31EC1858B0891E10C66EF859E5866B19808EBF054
38B9C5A297F739879F1507A6001113B11FCC641D676CD124BBE66287672778A3
BE351E58E961E816262EABE2E3D7E768B8F9BD9F4C10B1CA1196BC062E04A4E5
BDC05841A723BDDD67D0110B8331410F1DCF9E65E7338B42FFA5A5F8CB3945F5
86BFB542B229FECFCD917788FCB6F16EF60D1B1EFE2961140479458987FFE44E
8010F5D4D89FDFEEFB258BF9752463E3291529C0420927FF4C547AA776CD861C
6F7525577AD946263CABBD7656A1F5BF1E103CF93C0DD6CE244DD9B337968A02
FCA01585BABE4E6127C9DC4AD6EF6EE0D15AE4C65321DD0ADB8700E6F49D4494
A93081D9EDC3E6F33C0CBDFA4AAB10EFD2763ECF666139E66CF7D277ABA5AAEA
55AA79008640B603498A3906733A92966C2F11E260A5524656A9A0A0CB214AD8
10A3E22CBBCDCC9538BB8AA51657E0899F1723A90CB01EF65416294CAF223673
F451FC750AAE04876050E92E971F6A42046019E11D040BB87BBB7ECA6D7070EC
6A87416143682C4FE94904E5F5FC71490ADD5CC34BDFDA94B1438B4AEB72DD36
80CDFCE4008A7DC068555E6BFD1F3E8D1F7B13351D44FB1513CBB22AC8F22E33
AAA89275D3947828C6A9675B8FBB5ACFB75A80A168C6AAE8217A7459651CC8DD
6791A341BF41A595EB76C6C567A0539A035AE3749991DEA439FBF139A16A5534
2834F92738BD6BC724446933E8927F3AACE64BE6623CC75E74878FFEAF3702A7
C45E4B09188CFB4AC98BD8AEA47D89D629C49699BE537834825AE7B8A4467748
8AADC68ADAEF0E112CC860A42D5FB50529EA6CE284EDCD95D88ADDF46A74AC94
A09D60E190C548172D2E1D8F21295E6C0563A5EC278081506796D4A5CE91258B
1C760B7B24934B6B4671E42BF7C669EB92D9D974D5E29D6F1DE7DEFD01BE337B
CAEB58D4B2EE599A6F6A9747787AB8FF415A4BBB4AF81F71E37E6A0C5A09FDEC
8D3678C1FE53DDB897B389B6445A99DE978B0D81E4BAA92E8B121A1E1A04E893
2A5E64E2E417C6B64D84B19F7C2D7C143E2878CAF2F210793730C8E519720441
6FD5342DB3EFE5D9826106E5679AAAAC1804C8AB2084CBBB299ED351CDCCFC0A
735927A1468C4192AE8D8799A91A9EB19EA03D4883631BFC7012142611205589
FA4C2263FAF831B150E9615BA43E7E710108A7D53A4021CFFA25B6D7FBB581F1
58E22E137E896DDFEC3016130BE8F3E7C2E2C0DD5267771AA827C9A1EEEAE389
0F6E58D8C19D6F90AFD127A50E098A590E4D63BF187D8A93FE9F8CD6208492E7
A448BF4B4C63CF0C68AC833BAF4B22B26EFC197D4A893A5AEB6EB247627DB6DD
020C5B28A5F5867F1D07E70480CDC1A5036247F8F1C697A6FDA6211191D8856D
A7689FFA345D31BB30841E4EFC9ED1858353AC4063789B6A407EA26388F912AC
640B01F85B3B1CA9C3242781610A7D9AB6519B473F5D5D911F077A97BC333DBF
DF76A4A160238518C50D908A4EE7AFEF5FFA49D59C844204CC485B2C6E795EB0
3850ECDAF201BBABA430326604E56F26766AB54A6BDC7BC2DAA299201D951426
6A731C48B879BAF823745D6D43EF0BA7FDC43804D1B4235D8A4C02D3F7CB6F4A
358631F1AFD8CCF42255F33A0F71F5C59075B9BDCEFC4B659E93BACF45D1A498
4579F501A6AB5BEEBB25F619D67246632A04A14A7EA94BE0AAC62FDEE87E5394
5816B7A1E4B6764A0F87848033CD51F116ED75C3B58C7B93A5357D715FFA30FE
BAC7155B1E4FE28B0DC8DE04B043643319E48BC58438C6183E00F67077D2939F
24A13BE4C74F78384E7FD399CC47BB2F48CA5FDFE743D4CF1A918C5F58DF1D36
4E29610F516FB436F78E4E2174E4CA868698A7B0FF83E348376C235FE8985512
4C58E6471FC04A203EBD502D6C566B04255A82BB27AAF2426421F0093C603BD6
3827E28F17D57CE60091FC5A0371FAF14E7D7542B1B42D692328847E728A6BDD
31F576F64475E62FBF30074B701B39665F4BF41F69D56ED71F2662826D9A1865
668783704E8026D233E705AB5C4F2DDA808D365A7468BFCFBF7E680446F888A9
F1CC3A8642C108D34C4CED6F7DBE80F25D75116BBDADE2A54CBC728EB209FB5A
0BF3C85656D645C92FFDC31E79C6432D4A78712F4606601ACD7D328B95ABEE16
B14337A179D18E171F04F6E164C2CA9F56BC5D4E3E633D60C6EB6CCB0172E299
B1F6353CA60FB57A0FEF4F937EE9FA9C4CD65561E2E5608200B86DDC18C5C81A
4E75F8EEF896582C61017A720161EA2CE5BC374CFFC9EDDE8F98142B0E13F3E6
B825F861467649D10B4872EFC2B256A1C1D84D2CB53F1FA77EA74787017E92DD
E4CA70E9A40308B61A11D9B9DF27ED6A8E4E5C370542ED6B9BD96F7860B5FAD4
2B86273D30CE80C424CB288CBB7155E850CEDC95D7B9804A7F49654F2B9CC5E6
F2006EB0C32DF29D81A0FD4BE5ED75D83C8174AB99A32FB1ADEB641E165EB322
1FE1F3BFE28ADE72E1F7E45D55CA2034552666DFE7D5D94966CBFB46E98286E8
AB5BBCC5A8C431D8D7B220B033126AC26EA984A4660F22D390595911A900FEDD
4D3ABB86A7B1E2DDDCB2BC12801C4A8ECD0B107CB61341CEF6C18B52DF7F950C
E1BDB15548CAD879752198F95BB659F845681D61D02D28B185C9F052844D9A5F
91C6D8AFF0EA14F929D5598F4437AB944A06B5EEC3343EBDBBC872CFA84BDF47
71ABB21235F26ACF6B9807513FD4540AFEE246506B981C4C25D9FB5C08D065EB
272EEEA43D654F888EB2B5E2F8CD8F21B4A6E6FCABA356F58CA4959D605D6577
A03DE99BB78A0AA1139DF5414824E7D98D824B12E020C9DECF71C7CB5B1C295D
E9C0DE56949CA6905DC5CE4093E2F1A817C538EA4F64E96C20699C861C0558A8
3970B2B20819C87E06075DC32A70F10CBCA5201CAFB22E52F8C57F195F6E6524
13F527B2581AA0561DB3F64D6A0AEB2C3DDAB25909FEF00778D7003A85E904DE
41B35C4ED46D104E5A8928286996E80992529537DBE75F0705BE16EE2E8CA3CB
7BD913A9FF9C2E549536B3875FFBEDACBF098A54372F2BC0BE39C9E243742CCA
261A60A772848CD279AFD9FA3FFC6A1B269DF1B24692E01205A76CC4A6F6FABD
063ACE8A01DC45383306CEDF6B1DD84E223D306718D250574E4602EC0964E1E2
8AFA12B688D61276F94706B29796358956C55E2AFF9E1DD0699F84EC735F63CC
8A90417E80E396349CCE3D47F084C95E8971D17B6C14D5B2A021154D274B753A
A96964CC6355528E6E2C07E9AD472351050F942D4323A5ED11D5E0B35A7B1204
741A6C9845338FB9046C95CD41718836E7FF97C27619BB4DE3C72336A0079B6E
8D1359A7450C8F0045D6FBA477667651DABD08368A6487792F13685C59BE24D6
F350C447D7E64A7670BA35F435403F4EDB445B75C893FA3788B37E4CDBA2A5E4
342791D3BB7FB78376B78655F278DC7DE38988C5661E86299C1267B2AC179256
48E0FCA874964C393D4E43107D83CD07880A45EF3A59D1AB95BF8C8DBF57C2A8
AE8354450B6EF848E437B50688FD1B72A4F714CB783DC5D589BBCE42C18EC86F
E2791FA6387A4E1ACBF2A59249A40DA014F6B47B79E9197B49BB995DE8481BF5
77BC17BE663C13833162372FE843423B04BFEBD138588EF5103DF90B7DAAFE39
ABD4C779E1FC59035499DAC276D9DACA74673F9897A0DE47408BF576317D11A1
007B0E8E8ABEAE7A8356DA1ED8DB202FC30256FE361FF7265ACD2AE45430E2DF
A4499094A2BEFE920D6C09EE7D51FE5378A074547878ADDB5E7658E79045B4F8
F5309834FD69392B73C00329A2BD97A8631759792C5455A628C6B99BB29B6279
4CE4AFF4A8CC6A56311513E8AD879777812D6C68FD840C8936DC2A378F50F10B
3F288FAA6176508A79C1D18C9EB135546E055AFCFBBC8533C2A414DDC358E753
C911F4B1A3DCD0A137DF21FAFBA9E8FF83067F15AEABD3386CA97FBACB748809
5CA5EA7F68CC20
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC660D7704664695A83680221C6397E36FED57827D0CEC45CCE9134E1
20F85C107CE5E670014BCD3D09417B18667B975BF873F4BEA9022072655ECB43
9ACF13725A79EF90AD4FB0073FF142CFAF4290F2BEFCDF56CE9AD3AB8669A691
21B16C33CD949DC6E4C614B2D1A0ED127FEDDC4387DDB2E10EF3FA3985EDC86B
243368F8CA936A6B93DE729493EDC6FFEE039CDB833C0CA3B0223A63BA100BB2
B4714AB955DA07C374F097906ACD908F1A8355BD40273AB986F80E6021E31427
AEF512224950615DA2039D4EB3B18C87BC21D80345EDB06493E9849967F12E63
19295F104EFA71C12917DFE9B08B5473DD51A322ADB72FBD8794B3F51A1EA076
A789F59B3D595DD347079EA1554A4608FE9440AAC9F04CC93440E1A8B0ACC1DC
ADB778837360339F16EBBF5AC7571B0778C0E9D25358DA06B20DDF35F40C2314
035F52C165A49120D5332A136461B27E1D641B91CA52CB6583FA4C6F64BD28EC
6F839F95D74E2FACD9500D776DBF675838C2E27A9A1C75D9786FB52F7B15A017
61AF688C996E2561756B8F923AE34B82BCFDE515AAA95D76089B8C6D8CBF4863
3095FC397712BF000B4F2852F1C52ED15534409086E06FD6BC39007057B13EBC
E5D8E8EB108C21F7A32F8D0DE181A612268EF75CF1AA6A436B3DF24E7DC6ADB9
39B89E2924D0A92FCDC2AEE877BDC9CC108A18629F0D64BA727A5BC21B42B5F4
1E8F864AC5FCD0977D31EFCD46CFD2F60DFBD4B1B7E0041EF68AB5AF9B946FF9
36607E3512ECF70AC43BB1D4751F57512749F002E1148BF99DA5CA7EDBB00B60
E26CAD17086C48CEA3FF695D5E829EE6473F0C657F7655A674B43152DEC8B2E9
36E490A4D367D68214B348BA51DF871A83CECEDDA1F3DA646B38272829C49B77
DA56D8C3459AEF9356949ED2BC8CA8085F829B9F9E0B4E360140E2EF8AE58083
EC6DA4E70BE9D053F69949A8E464ED478A8E037FB132781E4D3BA60B95605DA5
5C67C5F6EF7AE2049EA3D2EEE67F2FFC49FDB8B4BF1A5B55899A71BFFBC96D20
CF2025F12147C5C8D5E39937B03356D453D819AB0EECCFE7DA6DEB238A87FDC4
1A647D79A3E56C4B5AB6B245E707523349225E6B8EB758ECEDE8173B87B4AA14
71C5FA50EF20ECB3E3080FC6D8B395542D5E464EAD1953BF60A81E14EE323080
F4DBF77A197944E1DCF0738600BFFAE3E467BEA9BBE6258A20D9E32E17451282
4E1ED5C40D3C40923DA150C493699F0E68263CC98B61749221081D1C75F39CBF
B348CC853CECFF1489C53CEBE1A6915BA90065A1A95764E697057F013763621B
17F36B310B47B715FAAF668FB7F142A6C7682F1CA89CECD0A14CE3BFFCCAF634
AE7A1DD365AB9D3569F5A96C3FD32EB201189D07FC46F41CD2FB9B1BBE515CE2
23213D98659912424520237D41AD0A00728D89D92DEEF30B110E58570A966383
AA9F7CE59375525369CA6A559BEF0CA0B802D43F883E1C794B9D3EE9AF8A5CD1
0A347EC4A862A6F0B3867EDE0A050EF258A7F49F5081F1FE098F53AC01525217
1C713B12582F6D29ADDB80A225B11738EB3D1BA708653BEC6F7AC682EFC32633
1F40C5E8FF16D3AB8647D6542B4C6CD77F4469A676906BA6AC776BDA43E4B128
3ADC30DB82832166A9202C67C70817F41B505FA0B5F906C537EFCDEE4C69AFFE
F891072A4BF938AF76A97EDD40B7F6F9D15E91CCF9B8B2DD85257EB6A2C747CF
7113878FC1B094729613788FD31ADEFC852D2E598734CDCCCFD8C05DDC3040E3
87C62F0DBAA9DC2F6628F61497ADF417AABEAD37062A126B997B7696988A9F2B
3AC897A10789DA53D2DF6BC8441AA916C8F02240634E21A4E79A7C8F9062C2AB
821ABC614DA8C5DE3657D1A80350032D19862612D6C80422A4362A89E46F7DC9
1B557A4C8683B5295596D591703D3A1C188354695617AF56DDA1FBC56DBE898C
9AF2FF244463C0DA21C717E348E0BE63120324C3F420649F82D4160A07270010
141602C3A6572740D06F3AE476ADAE3DE5D771C66E86F97387D4AE97D6E59A55
4057B9862A120162EE8B3F4E8DA71604E6933F27729A2C7FD9A30D9E8FFA9D0A
9D090B86A2B91B89AE3479CA9B27527C68B896EDB1FAE22EE3B71C15A10C1971
0517916D0CF980211650F7FD1D657C3164611037449E390AE607F3790491D6FB
BD58617B4FAA8341C4DFBAB734E78912D306347C0DCDEBBF156308BED3E724B1
5646DD2FDEA523D863CBD4EE16455CEA2C0BEC9873A424C98F8E905C9CF80FC7
24E5A519BBD1CFD777EFC9548086229ADAC4953EEEF78155D1AAAF6A197A1B14
F488E0062A6E77F33EB47ABF5EF77AF543DB839957549AE96908A1BAB8EC4518
B2130E14374A828FB79D891545EFCB2E2BFC4454DE71A9EA8D54B49E81C40E21
E86F1F25312B41B12534CB0C193F492A8DA34C73A9E85C5FF692928D16CD4B03
3719E8F8D647A01DD21AA12D77211A860F0CFEDA2199DE30E50EC3777E8D0ECE
D42CDA32888E0742B960442432CE407A290008A5936630F5B742D04B207A6ABC
D3C09C3A3E78D8E158C2AFEA9A9FD1ED07778DE2F62958FF409D37332AA4BA88
CFB19B392A6FE868DD449773BDEB71DA37C609A831C2C2E69A33B9796404E186
AEF93732E6BCFDDC80F39F89FD03332BE2E7EA49AABA75AEEEC5DDE1D8BF6848
3C3D263E84BB0BCBDA4B8FD30EBFD8E947926A7AD4A39C3E3E550C67CC04960E
6059F6BE26EBF8CE5452C6167A41DCBD19A45857A2421A4097A36061CC565074
ED5B7B4E0AE4BB028B70E194489B1FD064E515CD8EABBCD4488E8C67B8FDB5F8
1E5D42A27D3BC70BB815896C3C727D60EBCE38F7535DD0522F8F045946921D5E
D344F7B97579502A0D308A552D55DAEA683D36E075B0EB14B7D0A1013CEF92BB
A66568E7B4C6D3E09377D7CD7268672DBD3DDE94F3F242011E70880A8AEDA809
E90BE4203C3F857F777AA2B2C2646D3F2500142328D8D3B40136F3CF6DB790C5
6ABFBC34A074CB3BC8C1754662B5D3FC0462AC49633F9B9A89DB039C9E9960E3
15CC0D5A741134B101D1BA17D0F1235A12FB600B92EEEC2C96A98328785C9EB3
96A4AB34A9103B0F8168B580E7EAECD38BB01B2C6F47364E40A9B1DADFC6C5A8
F9857E1F4EC4E839E6026971CD561023438259A1AFAA427959EE4927606F08F4
255EF31C3630EF10C079981B1AB12F9D212615B7D1235C3F385CC74A835C5A78
5E9623F0D483091D6F95BE42F08E707CDEF0E4EC52EB3F90DFF118DE19E071B0
CAD1E54271CC7C61DBD34AC593EF6F48BA96AE35A6BA0B59619F5E530C6C6AF3
F1381F095C03F918532C41F7B8A1A55280C0ADA4431436009135FFC380700782
F7B3423A172B672AD0CC8D66FEC329D81A7584A5D001C2C3E42350EB23FBBB73
EB127855B8849431DA4E0D14DE737964EB1ED2D02116889221A826EC20AC4384
A8CFF8CECF07A593970602AF3247216D8F96EBD8D1EC18D48FEB29E968B9D654
53E0404213C6A94A7AC4F217E3AB4BBA8870B2F582F1DE7B44A58B63AFE598C3
EDA15CBB4A7E9B24DE100AEF29C41F9D6B880D6A47AAACCA3BBA4F5B31497708
72EC3609FE872F662FC475BA88E84C47AF37E871AB59E38A1470D5B7A0906CD9
2658FEFE5A0ADC08552CA63533FA49CCF9C181540243E36D59069A6D686DED51
A3C55869C6853336F2CE1184E77B798997DE330F9EDA0787E53C3FECAEC48D83
6014CE22308F35A246EFDDB2CF4201F7F92B98BF47C18B7287111DA2974BB4CC
54F9C49A7938C7734795D322D9CF120FAF88391E1B6BFBCF6B6EA219828EB6E9
78C0D0DD1901FB57909918D07EA767FAAC0F5F03741B47E291575E3BDB0305B7
E996AC870AA7C8901209AE676967CFC73A878756C67A46AE14E611CFFC53C2AD
128A62475A394526694364873C1E1900E53D23372D7328C11427488F58BCB260
909404D7B6FAAECCA850C3314D6CF5FABC872BB7CBADDD96379AAF85840448BD
337BB747424BE88E67FEA4461051A1F651596CD16C6D9670FFD34A14D9AE40C1
55E53CA7CC6FD6300D2935244D19FB751B46C7972BDA632C10D3B7E35D985F53
5191BF23AECED19F8E92B3AF131E41A126980C789079CCC0B27D788D9A77FD6B
341C726DE3E5B3FF979C7A5CA5D52FA134F0221A669F049C482CED7C243C9688
3231C1D3A270530780EEA08AEC4786551B7514AFDF162F25B120A1D763C4968C
1A61E3A5B420A712B256913E52D6F1E129F796770CE972003AC25FEAE68EE79F
AB1ADFD6555AD7808EFA961ACF185DC1E322EE3406C35EF72CD03AC974B43AC1
FA919F23A2F2CF7A16BA18DF3377A9546E093BB124037CA7A96E3C667B953BC3
A4B88DD07BF94CB1D9724BB7DAA654467D3844651E9AE4E9D95853BA4CA95BDE
F42319A7E232176C51FAE65F6DDD88BE194F51BB13A767DA991948FE1B50F3B9
773D6283DE0F2AC2D901074A7F29BBF616B3C6BB81ED09F494B51A2269832861
BD92C6B7FFA305CB793241192FD9C1B01AF5CD5388A0802D843487ADE2BFE276
97FF9C6A98C0F94E2411023F22CD2980F6DF894496F2166F30D5D82D5D017B3E
C5E6ACB2207C85B0178B3227810D99B48361133B54A6DFDC8727419CAB7B5CEB
F5D03BBC3C2FAA19D4E7C58231807317CEF8E5AE92245AC31B810E4C95B75064
40F3B34C329E69251F5DF6FABCC7CBE12408C1E8B37436368B0530DA3C4E417C
B45F9246B3CFBF701460109B55327515A31DD144D62BE793916EB99386C52368
B2B661E85FAFD0906E10F1D6158021474FCB68D8D4602483B942430D8F858A27
2136900A824D305DD935D8F0F5EE315171A6C93C5864B2CB30DF6E62742C4FBF
FDC7BAED39D4AE2D21E4D7EAE37283F96D066F4EEC9FC65115AECA8C66082082
F59C3DE71163335BECDDB32B4EE7C5FD3F25925955F36A3BFF3454FF7B226C0F
001D623EF3CB897AE1DEF890B7294168C39592C74D17AC92E771AA5D31B8CCE6
97B76D97367E36C22EB474C88ED2CC0321D991171DCCBA54503EAC4692D81CE4
088F3E2AF2079F22434ECCF66634DE56E73349B1EF64A98457F4117F461AA87A
ABC56F78F0F213D963AD955334B2DC58181D1D60569ECC2EEFB7B6B0263B8B5C
E6EE63CED9FA79D0F731B5477840F1FC1BA2ED183B5106346EC0D1C99FA98C93
AA8B50BBA0F69C64A315706D38591372BADF3B54FEBD6FD869276EAC3B0E5079
A047920ED4CA548599085C80B46356200BACD8C9385A18202E78D9E7ABA949D3
2BB5190D33AD0A9129523F2C7935297F71EB9CA7C52F6DBC6D00C44C6FF0D374
BE43AEF027BD34EDDDE05DC719ECA4A7C3C21E322AE6C2B6732D60633B59C2DB
97046E9D3068A6431ED97A4122FC32E50F7440F4CB92CDA4715E76B238A94A53
29C679324059B942FBA2C6D30D37FE23C9CD10E8EDA5C46A4D25802401138F23
612302DBD3DCAA1172A04E445A281AF2607DBFFDFABDFCE35E9941FDB621D02C
36E94ED84C9A5708441BAEA7F512345C2220B7A63C6DBB9532ACA7C461BF0BA0
86CED7A5BACBD9B2FD80D64C9CD389C036BEA9EE6DDD7C56066DA665D1041740
7AC6A0DDA1E77D37AC83F0991A4EB126B22E6F39A572823382D6DBF390F03121
A932BFA4FA7BD12E5D2E086709CAD8F9DD76D2D48C104ABB6F15BD9D739318CD
694761352B105E3A0FA67C28ED4AB2CFDEDD10BD52F8979C7A5CA5D52FA1B48C
90F140B934EB58593045BFB889F83B3CAD005996A6309A63BEBA0FE32D706CBD
E55F731368F373A67893FEE2BCE051279788C2BE60890B83837B822BC091A279
12061106C0BBB4C579AA131208E34EFAFC13EE6EB0C82B10D2F6C24D1574C8D1
639B20CE6D9DCF7F3A34E6AACFE990019699E9851A67A380CC4084CF47BAC956
7837E14FC4D2640CF3C96B78918A709D3FC28E9F650DE933C4BE1D31DA0BA8D5
0D2356ECEE41D405A20F45CED60E210D0CBA59B887199F7C2BE1B41A88C9D6CC
461CD778BBD955C2F334AC79C6BDB6A46D666F09C8F8398FB1C866CD45B80656
513B6871E5258B4F80702ADB029DBCAD4599C62078A6A0650913BAAB932E8505
934C92D4FC27393E94DD3DF00391AF696A2E581AC595954FC3BED4858159DDF1
9EC5D9BD286173EF785037A4B619487ABF7455F9E07E0D00E38A7A2FF7E62380
8F4B3E81F4E8F803737388C01B84BAC1F8C5D2AA3A3E6BCD63BDDAEDF7C46498
936D5E3FD931E5E03D4910567FB7EF2CE03C2D9E705A7E0A796B3892A48FC941
5E838D72FD3DB014F20FFDA5E4756A2D4B952A209C4A54244D0B32FA2488888B
7182D08C0D5622CDEE56212D57F9F2F1D127CBDA7EE59824E5308F85563A98DD
44DB8CC9662BEA42B88B63F5AFDBCE03E88F208A05B41A2507A6E6908560B679
2861621C425F9409954DF168652469966050A9CFB68C6DF6C006B65A81BD0193
775F67BEECF4995DC35D4691A78401D7453549879CE131C5BF1502696A2FC6C8
8A96AA853B4D07B9843C0AEB32426F3112E17476602F3D7B5AA66AC712573010
6DB27289A5CB1C34B70A65BC238AF4A8E0F7466729AAF0265E3873D49AB0B965
BEC1A8B100500554145125FB0C14C5DE6B18DDBF8A83D72F50C48125777489D1
7D3FD36AA5D340BFDCBAAA5E39F23ED0046C3861AF304CD78E8C7D8CEB6F526C
3E6ED56F4F669CDA65742ED08E4654FD9D739F65118904A06FD3AD3A9205A17B
D54BE0908575121EF3CAA1AD7734553C6E803EDD25BDD44BE1EB6A0EAB4159D6
E004CA0EE326B90C882E7CA0051D10AE4BD34A62BBD0752ED2E819C5510F03B6
35BF3CBA3CBEF05F0A0321B00BA6EEA726EBA19D5C7B6D4CFDE5B1707C47450D
426859546920DAF01FC329D22DD9F2B2A4D76D2BE36A796C72F84C716C2B263C
3C9F1B5082904976D2C189CB1AC1CE9A04CEF2E45C67D82B81114EC657458FB7
8C6ECB6460A281A80F502523BC02292D6BB91C6A538AB48C7CF874F761456232
2EDB6B87A376736734053FC7DBF813A96D33773AACD4000D71140AE11A882E25
0E98F4380236E11AF484E2FD67C1EFF5F8CE1D89C0AB10ECFB15B40092DC0DFF
25244F950660398CA1C30F3C85EA330C91B30C60AE2F9DC720AB6CC6C0F7E5FE
E545FF0E15A12C958EBBF6067C4DE3F1B344C69264CCFC2E9F45921E62AEB13D
93E84422B3838BA68094FA7E0D033E338E149518B5493D7E3503FB666AC6C193
7BCECA239F907EC7A8EC3A02D7040920209D3E92A64E782EF8345AAA0EA74EFE
4492AC0F942BD65B3AFB8D80C54177E7D853363B246759EC16209E879001947A
EAD6D9670DD996AA9FE4D4268A3FDBF8F1AC21C97C62913054F9FABFDD9A0882
3E4FE32710DB20781DB1CC3944DEB241F1FD9A5FBEE5B1F2620B814FA2A22EB3
D713E5184646740BD790BF10405E80AF3C1B82D503BFB71474C3E0205E0BBE03
9E05E2833378762504B755DF30937DAB9BC3FDBFAC578A525BF8B960B22DFFC6
9820003B8B5A81CF08A783DA026A6192DE5B0C8E25D56D5551AA82FA97890367
A50F6EC66B43972080D9DD4F2E1089BE65DE7B0CB4DACDAE1FC4F892A2F092A3
E45A560C890038BB100E2332B0264C617D7B27C8492D7B6E18C275798319F29D
A8C996F21B95EC298B4C5C9808404F255FC6D0158061CC26D5259712E4B57653
F9D83164DFFB3AAB8D92267B48EAF24CE73DF8D15F751098B89DA5FC610F0F1A
900F658E65A28FCA65062E70F4703BFAF712167E7AB4A2C62B23E03259AD3359
3BFD738991C2A708A6781213329980CFCFB18CF7CBE6C7FA3C2732993433C12E
67C101B71642C2AEC05ACFAC43457B35DC7235667AA14B3C6CBD50988936ADCC
B5EECAF200E1F895BE290CA7DA81F744079461180436BC926F08D69F8EC2D65D
73A78CA8CDAAC39FE833909120E08EB1F262505C9283E858B3FCA768B1748F63
604885E6E3173C865CA9CAFF0E6B6A02C1F2AC82CAB219BD688BD6EECE4FE328
5B4A30E9CB34CD780C1B9A210A65E46E113C9B602A2ABD9BC3D5CC60F3F1A0E8
B2BC9AFD5067315E4118D72CDEBD68186C25AD5CE0BDA86D6C602F27D4D17370
D21B4680C94F3EF57D9EAE465FBEF6E18BD6D96AAA4CC13A9E6340BF294B368F
E8788FF95705DAB0FB6F713105909FC41A37205C97F411FF8130552C30742B3A
9713E393541006554A18D48EC3F9C45C403EF93DB5F9FAAD3A9186540D3333F5
486E9464742FB5099817738FA89AED1519C678F6A234933BD95DFE8C18DF4A3F
541CA8495C2305C7DA7391F7F20453206FC27D3F8F02ACD756792BA310AFFA57
355A1CD7B73DD5401ED760885F8E52EA30A8EE16315D4FDF3D2B521CEDA9446F
DBF2AB3257458FB78C6ECB6460A281A80F502523BC02292D677C82D4DEF71CD3
173441F14310C406421EBCF15C2D11F58C6C51F6431DE0F8FEB6C3091AFBCAEE
C0FB3F3A4BDAC37DB0FA6883858124FE6C2AA0518EF8DE086457D2720B0D80F2
197A5002738F99176AEF34CA6EA3F43BFCB598E7CDA3D88B9B026AB9A677D0A1
3C4AE52D001BE93F44E9909CD4A49E4600DBC7FE9A727D18EA999ED1B937B3BF
4E30B7F299551C64CDC751AF70E5CFB610D583ADAC85083402BF6CB44B2643EF
64644C5FDBA2CAAC2507A6AADA625269DD309D8FC9F32EDEEA07D80E163CBA15
13CD6CE7D45C6B8321244A2B8FE564E52E882D5154099ADEB34580233972D921
19D47A619A17BE9943587984077FBA899EBE5BA3C090663F3D9E96E3E09612F9
9B100345D53EDC134D23DCAFAC813E364B69357920BEE4A0333AD0D3897B1A83
AE99410DBFE40C853B5C7E05E982BBEEADD7A39624091AFF695D1BBD703C1FDB
9EDAD6982C06C0FF9F6CA0CEC2F86F5F4F4BA4A66901948E6DF330948A4CAA3D
B59ABC1BF5F7269FE8A9F7205581233021BF1C0C1DD432FB523701060720730E
9F51B7626206E6F51EF111C1F3EDFD1EE09953F10EFF5F6CDA95C078A08DD533
DC0E8D85F9DAFC5FD842F417265427E250C81FFF3848F64407C72774F0E9B1F0
EE4F9F1687F25902E624B24D44ED1E3D3F761928CD2D8CA7A1B133A696AA4396
872F925598158F2E622588B3F477531712CF5CBAF179EC5881CEBF7EBC3B30AC
8AEB18B09AC71830ACBDEC4DBE7679F7D60AB6DDC04938A42C948093629DFF84
8C85FF3F30B6EC51C08D9B4F547298E65EE3D701F81602AEB1DBF258621405F4
150E2D38DD80F3D202241215C1B5A95933E7854EAD8F2C531DC518453ADF92C1
9BAB8DF6CC2BC0390A0C3394F1B3C38D3B5C767E8C106B58B2A10AB693413B1A
B7A35B65D857089968DD4A6857BC52FB50510067B89736E97A30C99018E0BDDF
FC297291BC347C56053ADB475F942F51547051A54E525BA79B43ABD7DABA77FF
818154A0B50ECB2AEEA335B5BDE2EFDB13D95425DE9DA289BB60135C7008BFCA
32780337B5F6741598E2C35870EDC52A14B8E25113FA1453DB43D81BD9AC8907
8910F3D70211659CDBCE05F0733AF96803BDC0EDB1A574BB7925D7A941014B10
5752CFDE450532B12838BC4C0021571B3CC54019500DDC798B57B6D68DFB7272
117BD060711010019A97B116AB929E54C97A5C719213898B5CEAD46B04C44DC6
6508A3F74A2746E8A1C4B30162242B3EF7756A035C0529533E59108C5508D4CF
81CA375F2F26C049117DB040C2E2CA5DD42B6370846838AF461467424E499528
58431A3AB81FC61CFA18D691E463238A36732C3ADACB0EA238AB8B29F707E61F
F9B4B8BA12FE8033841E3C753C6E93CB802BC120A50D03041E582EAB8DE29408
577187AD5BFFCBC7EE740CD4DC964503471023C5E8F779061500E5A439E880B3
DF3A385E9901D43D8E2B08A04783C5E1AB77A3E641BFCD731B0A3FC132DB99C1
7A6E747D024BC3297C403B5E2703EA0A83C43F88315F0545E31B8C3385A140C1
9312CEBC758FD0B39126E6179FF4C5DD40AC274F3072B651C6982C5F8FDD7480
FA2A14FCEE4706AA003DAE9F92D5C55544C451E1C312D6188D585FFA65F1B9EC
81442B2266DA87599CB14B412D5D905F953E390DD7354E2A5A6A529351A95778
F78610F6A47D8A5A322D01FD4258D7617C6CF50B46E0963399EB3291F47FA0A0
5D57215EF92994808ADE15402B06C2CBB2CB91B45D00DF27E5A47692A30A7642
3F98E54CE3F758E2C884D6830B00E1FB1F743CA0A06B14E08620C282FE1094CC
0EA2676BA81D5448A78AE62C178F33BA78DF24F7346872E84795059D0A12F0E2
9490D282665B4A9A9E06210DC568582584C21E0F14BA9CCC8F52B884A074C4C4
441015E906C4412AAB326B562C7915A1987EF8D90A43B1264FD925BA93416B67
58A64C25DDA90364C4462F8DF7B588398EA6C9D82EC5A28EA5A7EC414E0B3A1A
6C53FC6B951CE935ABC955B81949F82FF6CDFAE2AB99ABA68FADE90898D7F48A
ED17DBE9CC313A3958BB81CA51E5B0366D04BF6D10592B7BA0CE35758452CD70
A67A06DC1EB3F2B3C58FBD1B8C3709815DF2693236039B860E4D935429CC99B6
A1051D63F6C832CE5105B28471B69EED368CFA2F0B81EEEE6E1DE6FE66D425EB
E4946011655C21E22D5420119C91515AC8EF68F96657943255D62F0C84FE8A63
0204A8E64D8F940C3AD5BAB01501D07654C470FD226F1E98C07ACE01B115A521
6EC6FF852C85996873C9CF8A1E6C29DC4365DC1C602FD81160B6A5A4468B2B25
85EEEF01CD882063EAF4E3E9E7530208D2A856AF05D418450827DDE99E776709
3282A56FE46F120B82CDCB74A9E5E232F73D27215F9C89A5EAAEEE0AC1EDF4DC
2F53275011EE991AA96DDF4E7D96F3EF4BD87036A247571D2628CD9A1A562F14
81E339A2A624056475519E20504721F673673592085CC2A9F9B15772B7E5E398
285529758927D5AD6635D241202C0786736CDCCBE2C4599CFE10A6A87789BA98
4F105C59552CBC49F5FDFCA8BE38549AE53F72B85A6F03B58AE18FC70E24908F
C65500C95AF2DE68429C1654F4C983FFE5C0E666A5693C95962D6AC49F31A5D3
9135CC8D762751DD01206EA0A9CDE765E680474B9F978D9375EE8C966D14F119
73816C9D25F988B97A025C9805CEB46BE11CA10794988A2FCCD91BFCEA5EC4DE
842DE437C3F5FF3917DF06A9F41B8DAA9D3347B158139B54C5D7EC59DA3019CF
771B8D108B7CE405504ECD699F42B6DEE9D130BF48A04828C05A97EDEB2DE779
39300D8244CD675D0EFC16CEFD7909FC251378DEC6CAC1670457E00E1DB00919
1984C887F24F66C3477F7D2EE671BF0079442052A2B88BB382DB56A88D5400C8
D857738570EB8036B255BF4A5BDF00CF57932BA4C9DB0F15FAFF7CBD701050A1
DB9A1BBBDED5D220D9CD208CD8CD85CB0D4F824D86E19365A5359615F917F93D
84F2DEC7C169CC9DB82A8970B3D3B0014610AC6A84BD327150E6AE971A7E893E
368B84934BE14026D8276281725274B64C9FBE525B184CBFBD4D909665A76F64
D7D5EB49B35CBA7981059C65967C51E8CA30C6C1734124CA3176AB14F48826ED
2E56C67571D9A9EDC51114475E9EE4972E9524DC3EB093A2793D5531E1D21D0F
119E286225A200625466E46DF594E5D193828470E98977914082D89337BB2B8E
A2141B1DD5E631CF8E64D33EA018A2270622DAB445F2876A1DE2884E34E939E5
4AF46A23750F8B09959CF714F36997CDAE9CEE2CEC967D92D39D5361B2874B19
850772C62EE452C200DE8527044215A4E5D214862AF46F37A198505449439792
724B7DA23F34DDDA919B6B19814BF81A4996474D99E12C02BB5D4B098F3CC567
E9DA9952F5F95048B505DD5DCEB9255E1E7ED6C02676970CA89DD69B3DF37ED8
19F0A3C732BCFD8326248FB04666282E574E03D11C268D951F9F117FFE2DA4B5
BE5CFF577D6C74AE6F4D4B7A8DBCE361F652DD43DAC6C32C9548A6F7607A1F49
CA66CB17809771234506BEF22737891913D14DB366F3BECEB3463F6F24C768AF
07829359D9585E64390C25DE13AC5F002259CFCDC2DE5A13ED881088B6B60682
F4DD99DD79D8339EFB31B2901C8C2DA92BEE9F27728FE5F4CF000922D6045343
5F46538BA5C30C185DDB06A284AA5034CA2FF37FB3C26371305DCF1687976964
235049BD3E3CE707EAB456E92A5B16F4212BA513BBB9C5DE48973B6DEA40916C
0F98010BF1DE5355F557210DA181673C77357190F315A3C1122D1D8A14A05A7C
BCF9E5DBAF7FAEC6E4563D531E1A0480E9DFA13A54480898D17FBDF12A3CF27F
372A2E07884EE0A5128AE2D8D5A8649CDEFA8D0F98E01F6B8FB9A647A4E659A1
398396FC2E6B686FBAF2667CD39C84E8BCED896D7FC83CD20EE8C4D5A59E0299
7BEBE5D0F8290D5915969AF272C2205E542ED8737891E67D143D8AD84CADB086
38040D27911D5CD1C2DC657556309533A8F2EEEA4C05990EB23142620576551D
C347BCB4AF8AAEDB4BB096DE59622A2EF791B46312F7CB19B8E1A5FDE12DAE40
F0E80F7C388E7F4D07DB3D4F16AE2504C411FCA0E10862BBAD279F932368BBBC
A91BD5350FC7C75B8C73060D2FEC1F218A069053CA2B0A1FBF490CC13838C9C7
60818BB03F7FD90598C38B1C2E0C9A9A82F5E6D01CE5ADDCE021A7C84541082A
2FE66D6852481691170055CD9763824E0FF1718B5F45C6372BAB01A1318DF264
A8BDAB6FDC5B1D1F36B5276BDCEA39AA118EDA951302D9A05AA68412AD77CA37
23487975E0459FCAFC4D74D47BD7BCE91BB83992C45710ED1D59C50642A0CC10
26BBE19AABF32A44BE6C9CEAD20573503B88047D7DFE7C10C81BC1636D6B4D6D
280B4B84778FFA7DC97714693D30A6BAF8FAD751BF26B2493DFEE44FAC4B0288
339752B1D80AFC1D747E8A46ED6B318E71813F2C217744E8D30D4EAF0AC1C993
B6CEB761AC8A4993D34A1E7672665D3E2F74668E0E69CCF8F290683546915E06
78897FC206804141805DCDB4DF615E2CB64980C415B399C2439A282DEFABB5A7
A66796AC5B925B8021ED155E58FA101F32C4E661EAD3B9310B9F706A8642CD6E
BCB1ED62EB056000F27174A5303B534F3BBA4DD09492576A8AE7707A6FAD2216
87F68326E6C59A9E0A045BB02C811F1ED8DCDF4D9DCCBEAEDAAEF7F7DF4CCAB2
9A5B26E9167045C9C1F62848023608C12677161CF0B983931149CEBD1D06D893
D7BE7B3FAF26B96747A8E7DC923BA8EF6C9792851B81A569A8DB4D0F274488C1
CEE80DE89093792E921F16C540FDB69362996B1553EBD742F260009449B6284E
22E63A9F1990A0DB13C2E33342D40AFEB24E186AC111E25C56124CEFFBEDB202
555C742B13039E3653A4BBC29060E599A5E23CC2A3BB44438C741B79546B6FB5
CAC001CF7262250E0BA6B7C627731402610E46872CE5AE0E1EA3E24DD207DE9B
6B16A7D5E7CD460DC1080040F5D11055C4E875136FFD709A15AB5222CF808EEF
614A417806A1277B31B054200C90A4B15CCEB79085BE0B5CB4694BD9AB682381
245DC37D8E95406B91B7CB06AF224E9715FB7CC1EE9EB90AA437D14EA2377CFD
4893E36CE809203097B845D254B0F9C1787304D67AA4B0F560170598137F6A73
24B7C95A560BD01C155439EB43D1A040652CD04D040ED5D4B9E13A466FB2F8EC
BC0C52019F55265C59C22F0DBAA9DC2F6628F61497ADF417AABEAD370626D8BB
8999EC28EBE10442617829C58627F62C3D65846E9BDCD0A2713820D615BA8AE4
6DCDCD93BF182F0D752BEFB027C129A4047457D56024D95645ADE0D95DEA748F
508B28F8BB1AE6F5715FDCC38757056512214E3767938D6C3C6D5085D8843F74
732B2B10DD809BBE0984741BC9D306C5586279A28173D35D36E744A5CAC7E93A
298F78C3E2ACC996C889BB23ACC950355F6B935D49902A326E24DDCC2A5D4F1C
948FD5F508EF79A6E58394BD8310CF4CDA2E708ACC998C1BB5EDE3A45AB78996
EB94C76CA569DD804D0E5BAB0FEBB77BC95EDED08DB8941E040B3AC80D62BF85
EAEAE51E4D7B7D66B4481823B60F897AE7E272710DEF408694402960947DA3B6
BF54DA82FFECF54CF95C85DAB7A4BF4D13E49C8348AA90CBDC3D262D736D4E64
AB2F9488EA7B1344329A6DE47FD59BF4A2987ADD13083516551E7BDF1BFBB7DC
A007DBB44F3C4C4403F3CF2DCE2783D4B1B9284D485DD40BCDFCBB490A45D3D8
E3302867D2027B198F10AB9C32AFE6492E434EABF6622640D9E0B5425E6AB6C0
F2A716488EC2CA310B0E61170662D1D1E9C9DF1DA7866A772E358CDEA9FBA4EA
2B488BE27798576A28A21ED866FA75CD39AD747A1FECD0DEB94DFC5FBFA569DB
2DEE9C6F9B59FE8E849CF8FA44B95CF9B8FA63EC47083720B5281EFD4DAAC81D
82ACD130F5B153D9B8820A39858CC4CD4324737ED9957FDF6976D9C53731DDDB
FA0A0B019593BF22319C02486B32F039917C6C2E033240C86703508D2380278F
B9B8E1283FFD28420EBA065CA35AF942E6CFC2646D50949425D4E53698CF7951
A9685E7147AFD434318B94021A7E5A584AE72399D39EF436CBA30F8EB1A6E543
782DABE3FF805F2909C78DD4A7B6D83F99EAD74396128B0C14658CE59D835B20
E2CECCDCBBDDD028E973830BDDE3DE50E1EB9E49DF96A63EA7FC392881EAD14F
12086677D38729C001B2C01CC56F1D1EC252F26F852E1B9114ABB6758C4257AA
A7EE3F82F7477A180FF3D6F876D5E3064BB81E65C3421655020C16B8DBA09D43
CC3D8EF78F27314624BE53008A64DBD11D7A52FDFFE8A2AB92BED886B0533C7F
19A41013A492F5F4B1F0A6DF35BC2A47CC76393F477D3A8E1648A2ACA6D4B8AB
DA4D671F194C4A1DC79F2A564E3A3A68A6510AD6BD87E9BD0F7E93A67159F5E7
57661B4EC3FA4C157F5B8C568B6005F5989022DC463B753B8079AF0B60B94730
BEE4FCEA18980D0D31894C3C4DB8C6E2BAEAC413C56EB5C80EE2A7AA6E03A5B1
5EBE09123A4BCEAE6EB8815AD67A043CE7EDC5AF97AB6A6ED4D35839FFC90738
073EDC556680AB0F1A7A7A8B9954C2CBCB0D57A573DEA0C9D7238C47E0FB245B
492636541151BAAD25444E57697A96840B409A8F431EEAC5F654320B78D1A7DF
994C1F1CAA3CE1137AD52F78DC448CA57B8E2972BE9528A14A626B64208F0870
2B5BB97950407FD47D8695655A6901483996A1D3C4F64B33A27906AF0C2ED384
719EF487B22532E89640685555AFC759E491A9B56937CF8BA7841A58D7F3B827
2096FA78D778FEC5D66460D04955DFEA71460082A333D62729875820C2557425
963BA6BB32AD8DACEB79FB05493BFB40AEA61F2540F0CE76CF5A3111E2129FFF
D3F9382910315799990413D97CDACC2DEEE2E688D905CF88F4F435F29314101D
9D7247821B95437D4B5F176BFC06BF1B45809E03208373133E5298FE42BAEEF9
72B22E55E9C588CA626B040FC6D9BB126EDF5FAB5FB956EE09E0950248869E82
B04B6D9EB49C3F469DBCB8FB0CD88260F06A13156C98D075C29FAC1F520BDAFF
4484B216A1652994ECB585355AD27D5A6C9243D281B0E2918B453BFAC66D74C7
9B6952D59C46B15D63275D882B3CFC3CD9CD8BE635B351BC0CD505F47BF46D4D
87282B389EBEC46D48139A8F496C982265DB66F117068E26EE2BD8C732DD33DC
2A967C9EFD690C794AA42C27067F6E60187BDDC25DF174C37DE5F2D46DA8A6BA
62B10818A509C517A21BC152FC48E246DFDE3839334638097532EF02858CDA4E
491D4ABD0D9EBBDFB30511C876BA899752BED27DE8923BC543EDB246A2225503
DA3690B591792424F00BE5F0147D68C3AF6E9B82B659B1352E853E397DC111E3
E1C08AEBF95D5355892EE300E149469362BBD9EFB04DE45F7464E968709C2622
96513C1BA5A8DD428E57C01D54D0A527E452A604D59D73DB98870FD8D48BCE07
C5575542B6ACC8E3A94F3000ED475FC344DAA4F588456CECBC073754A000EFF1
5234FB922C2777A5C9613C36B10B736DAB80300DA2F59ECE82B3BCC5EEA4FF75
32F6FC43D8911EEC5D4F7CD4F1D95F107E46ADFD8AD1D683777C41FD1488FCEE
52E2C0AB0B5C261257E7A108FE694A8C7A1FA5C03B6E07436B6560B275F2B4B8
DD91CB69558534CCE31AE7E157D0B060877EE70D7DE8A1575447CCF3BB6A6037
A00FF18EEAC5CB34146BEF39ECC161CD8E3DE146AEC0BEC29798FE7E29F72004
CD74B7462DF25F86FF6585A9B50AD7DA66350FF226C2ED484A3AA01886EF34A7
98531599C03F5200070E097B3815C62BD4851D0BEEC893224DD72B1398A60DBC
2CE59B3142910EBE7DE489147244AEA651987991E22042552667AEC41DB4AA04
EED940E94DE845F35D9DECEE6F9E9FC9296C7B6F424CC20A98FBB384FA3452AA
AE1AF13B492BA8E29015FD53827C84050FACE29DC5A593B40E732D3B62F9158E
C0CBE445C9127E26A13D3A8E987C451BBA3E3B5D4C129FE982D4B29DF4C2488B
D8767D1DCA5D48C8121360D1869F461DE358037AFBCD4C9A323769828C5F7ADA
8C3A8E085E0825AADF5CA658B222EC0071C59FC5966627BB12FF9B399DB1AF4B
A9A5705502F55E4CCF70BADB182735B36842AE49F6F875DFB2AAE41F05B4B316
18271CD6447ACCA150D05B25BA9C9DDC2F597C8D4B0BEB32FFB72E03A05ED59A
723EA87D7B7EC6CAEB5D464C7AB8DC9CE8937288DBC4F96661C812D31312FDBD
0E6BA66CEBAF6E9A2C69F153AE233488B2D41B812A11DD56289A6EE6BC32FE65
8EDF0883371DAAD3E660F09D520A369546C6C89D2FB896653CB3AF6C9466BF22
40E2A718884320082622BD4E3E50B189223DD7593D3674AEB6FE6B9E8295A02A
655CE94E0768F4E96E81EC4FA09F8858B3A2E9F12E4992487918DD256235096E
3FB325A8A9DFB3A40462B52220DD7908CA2C7AC5E72AF90D0CE1F760F6B6BDCC
877066BADD7EBE6787501BC990BC5B7EFB741207D207F99DE9F76214708BFEBC
D63B95C51200AE6FBF11CE22CEDCDE0B77FA132443BB7F8291F3B235AC150BB1
02C062F6033A3EB380A731A931CCA7A5073B0FBCB6540E7EB3B2ED0460F81AB3
8B9240BAE842463003915F269B7B231F5D9B1F61DF7CB03421C5F46724D7220B
9D12A4FB00F763274628831334E1E727FEE86B813460339AEFAF4FCC58EA3964
31BD4F95BD5F6DA4C5CE5A24E8C329CD0EE5FD19B8B0E204CF88D6B87D9BDE91
2DA9EC80733ECA11FCDE896424CAF89E9455860F3359F3288F7298D62092922F
07027352BC7C9612CFCDD0E00CE159C111A6468D2DAB04B3ACAC61986BC3AF38
43A7E9E178660742054A8F069F831C8897E39819D72850C16C52580FA35C2F36
D58AE151C829C26F9B88AC114045195777CEFE93AABE6BC49EB010086114F403
2A0F112296E5972D3847BAAA59D93E3267EDBDAE35B33859EE8299CBCFDB6C84
A32807C0BC46CFA13B270AB88AB6FF5B59F14F692AB281984EE6A56410101576
B49CE7F6C0B02F5BFA78D42F5E5D7FAE811161811696B80B86DABD9C05943652
5D348A91105AA1D8D8DC6099B797105E7A9CAA9C1386E7B0B13E400B6D967D86
F41F325A8C3B0FB47C0569A211E45777266C8935FDDBF9D55929EFDFFFE0C38C
892666C10D0F7C072B05B4A5CD9F0DE3EE7FE13BB25E2856FFEBA81C8DAB1C09
D22FBC1FA4B08158BADEC7D2872992485282DAF18EC272AF1CDEBFD6599C91F5
B806107E3EB839C46B0B42961E70F4EEED91906D84F66C576EF9EB42D73EC0A8
89B19C1E4EE523ED36B5A90BE09767D5478754F04060A3C172A466DD7E1D83F9
AEA67DEB410497719FF479EE02ECBE9F9B002291232DA2B9A355780512B306AD
B6DCFBF08B15D06AF33D57AF303625EFF5C2FA0AF0155F34FDD9BB4E922128B0
34962F4FDB48D607E35AB319995CE0509C809438510C63683F68E61C6DF5CC40
F107C7CBC0B1B314D92534B9E406D8943976756AF51EBDBDB2CE8BDF82127900
974A822E14BBF39810EA21F116039F019B9067371ADE91ADB0123570C4C5E491
5B60C2ECE886F64AE2D6889DA1784441C36653100E804EE6F29D00C325FA12FC
ABCCAD6C82EB09720475D09D7B01F32707FA6CDDB3DEE362EF0450576CE48CE0
709D1914D56A5142B2E1ACC6FFE3B9ECF77AA66E3EEB917AD0A0C738185A229D
CD2585F1A3D080DE8FDF0905D12A6E339EC90324A66220F3251FBE08FB8C4BD0
4036C06AA4752B076F4D900A4059951CF17C8608D035B921C6CA50C4ED50CF8D
75CD35A94D9126AD5DC311A762B8B785B8B19845E7BB04C6F7DA0B46258E7892
1FE02706DA07DA9A9F2A5E69C0C92361B51FEFD70300FD7EB251F4D865486EA2
1AE34E92C6E4C1CDF10EDFAA6D5130BFE848EDDF58D28E89C036A5F913B35CC0
F4F369B45070973840B73EF1E47841FDA23FEB0E6BA9A8A674CA2D5F39A31382
4870A853844934D84309AABCA1A51F760827A3E8C40A61B29562E82863F6C001
5BE9571AC9312114909A205F01A210FF850E1B33B2D78B6033C9DA360588D646
17C6FCC34E9DC21E19900F2CE5BF002716821CA5D26B17C7D5ECE2DB1CBA29BE
D5F478AAE6278DF25143C435E2F5527D647D347E92E4581FAB9FBBE250F5A6C9
9003D0BDF67072FC232C1896957C953889EAD1DA41C3D8C3F91235D279D4B3FE
3D05417FF576812F47C5872361CD5432F263030D3E0EAB982B3EB527D1142F53
CE412456E82FE78EB2EC86A50DEF8931119AA02D13551FC49C934408289362F2
470B36B6DC2C1A19D487972B325816F999ABB66F9C65AB262B8AE164CC6C6284
444AAE71F02D211B81B967D924A3468C32EF98D50FA2C1A2FC392B8742873635
A42D68CF637E1F3942577FECC7821C8BB7B5D1E1685D8DE2657CD08EAF23CC04
CBE19CA5E0EEA982A0D2A369BF5909107EEEE13DF6B56C48432AC33288E52F38
272DE73F258D2B99BC5D6EE006454312289EAC5B98F6EA9175F59EDAEE6C8E77
662181464E07C9F37D0910A8B4A9433704D152F9150627486C6C165445889A75
8B0C471171AB510899743C4EE78D679F6E1FFE8D5AFF6265A8A6C654B8440ABF
0BAEAA6D9BB09426778C3D750976876ADABFD96E5F3357C7587CE6665D8C4432
AFFCBF37F6900013D0DD0D4B50C204B821D2E58CF8102B09B0CAC7674E140BB8
B89A656A233104AD257D4D8AA4B0BEEDF9DCBDCF5C80281B3CD39C5ECA24DC72
0F4665C699EA0856E118FC62EC5807159565BD6CBDB2559590E9C3EA3BD794ED
E4DB65719A041F869D8A1DE94A5D3FD3AB69E247D868762420EA624D7AFDBF37
3FDB9DCBE078D097F4CE0CD717658DA9A98F47829E459FDD2AFDF7D995A1AB9C
A4AFDFD0D3052FDF44F24C675C33203CAD6BB050F789C55C404F38A58693C4AE
466CE4F8832936FDDAF44CAC40C79866D937B96B71A8D2E33BE2E1CA501E3C1A
D3600CFE96CD4430AF1486D8B4C3EA3E0655E47BA098A227DE741A6700950B9F
B33BAA1560B6E30AD78DBB5CF7F1BDCC7E2A8C698CBB9FDE2DD6A4C64592B79F
511EC5A8780B27722CDB98C052BFC0B40FBFCA767F3B1EEA76B1520772E5A081
C85174FC32A61B787769985079D60CF71131977E04C941A6A77F829E3F6CB40B
CBA184059390CF33937563ED5666E1E7EA1EA3A27AB7F98CF38F147D36239EEC
EDC90B4B7F7D5247223BA4E2F34F9F8433558CD0D58D870E91DC7F2C60D26585
C617511F17B25B0C52831D7330FDB3E2E5687A4F3BD4428739D333210D58D2A5
29A4EAA36622D2316F7CE5733FC4100795EBAA968FD2BCF1C097510D3F289547
30E8F47FFFF4EFB96FCC4A7EB1274104E4C283762AC5306C729D529F85EAF2E2
F92030BC26D8EE944B72E5375E06E86A083A33EC180A3A41E804AA97EF5A9C98
E47A797B660494DD3B84A3B64211B5322834DAF5AD6A00689F943457F6AE2927
3EEBFAB3B8B90F5CE713C315E6E103561789BED35DEE30BBE972946C3E8F46B9
C2DF790F79269566BF9C9A6E54E024BE0DEC07FFC5DB8427CF5683A5EE4D7FAB
4C37B6AE3B0DA3C989247B02E5DB75B1683103305C5A43ED712CB9053CAA0AC2
628860391ACC35650B8E39519B2B7A7424332C948CF1656FA97A05A937A3AF22
EA39978F1D7725E75E2E074B3D3BE38D9FB4F96C2C54591C85D37B4341A30770
B873AA3B7EF40EAC345B529A4A00B371819AE25FB5075C0AFBDB5FA0B27E7CE3
787FED70B0431D31828B467E4B0756936D8DB0925290F014F7C5A6B6186A423E
7924E56DE4D18CDC352314CAEBF065F610B00B54751DF5029011D8526850A860
6A7EF26357BD2707948D34CA71BF23B5C8302500D3F3428D883D166829B22393
366F27A633D126CD63FDEE48E210E261C16EF1A02365C6CE35EE760C253E9AD4
0B287CFCF642B945A85944A47A42EC5F208C6891EF2A7E3D6BBCE8E929BB14FF
E9E0EF05120CED49F055C3AAFA37312F9BCC4F4DFD7397BAD1BA57C0260490AC
60C0AC71C775FF45AFC56539492A5C0D35778E3BB1B1EDE4A453F3188709A855
04074B8249900DD572CD605F5E64FCB19D176C24DBEDD2808DB22B50C74A835C
5A785E9623F0D483091D6F95BE42F08A3075EC9892A63B15B4ADC1953305807B
04D4C1CFD289825B82D0B4A6833BACE8D08AE01E5697A89A6045A9759D051BF8
D85907DFF2849E4C3C7B62E653903867AB4707A398ECCD044347E34EA72ABEC9
AC077297207F041B8D42A9C237A9252A76913CB8C253E58AE76107610624F25E
A7AB95FE877777D7849FF4B7665E15DE9EA973BA76FB16AC8DBE5F2BC75EB947
148904243C0B15EE2C13567B53E2CD413C8FE45D47E1D403E190E5D2996BEEBB
7E1A4F11954E669DE14B907CAB448E38112BD816DB22097AF5BD0BF8F100FF57
033A1752FF0265B46E58641D5B258702019FE502870131330BBC3301154FC302
1EADD6F05AB39C841BBA21D69D26E13BAAAC4D806D17944970FA285946BE195F
B27EE0729C9E5F6848BD188B10D74EEA8807F85D5480E15A95B6596EB2039CC1
A9D523CBE8EA3D548A33C4E84D465FE67B6A417CB6A2DFC656BDA9C67DD555C4
43EC59201075104FD06B92FC87BD8306382B7A04D8FFF4932DDDD43921B5F6EE
C7B59F7AA87B0624F57E0EEC19E076E25C4799D60C2CC73610B087F668AEBDEF
677E9E307933FDFB4E9E1B6DEFF59372DCC9947F32A4037C0028E65449802E6C
1E310E78A4D28ADDB131FA22535A9FE3110CEABF5CE69F5813A5220097640011
752D374E1EBFD780DDE75A8607FCED3D443D30BB1E4DE56600EF29C53CECCF14
EE2FF0443BDA6340529F314BA3EEDA05539614D99E76200F16EFE582E6AD7C15
330A8AC207C93C01A2EE617E42D59AA5F34153869FC8500084FD75CB36F23C0B
EA5C55AD278CA8D552FCCB58E9288356FC2CB43FFC49E6767BD7DFCFA10CE19F
AF5E6887463F834EDD2608EA2C03E0164D07F2F4B9102CC8041D54CCECD79A73
BFB38AE77E4271245E983B70403C69D44775A03BD1F7B995FCBA07256ED45678
474FE752C4E86F4BD31A1CCC94FBD55BBEF98DB99F16DE96756554092D4A71A5
6F7158F72AF327F4069073384095901D231B3D555AEA4E19B20E5A73F58D41D1
603A9BC56E0A737FFC907836765A640D7CE72E528EC29E1260DA6706C5B8623C
5878851829764ECD7CEEE9FFA5CED160CA415362050ECB9A7C3AB8AB6C697AD5
845D58DA9B014775D00C05AE65EAF85FB57223FA553494EDAC86C60CFC96F293
A774C528DA65C88979C1453D6CA88C55B2485C4642748F7A1C3EA0BC46A3CBA1
24AB6B22F93EA0906967B12274346D1DE154C9A6EC3722200E422953C5554DA7
8BC23DF95F6CEA464272A0DE6C82C531AED5ECBB2D49DE4420B3B412EFE16ADC
57B6EB24F2B427A4F8DBD1C07A97A6A2F3AE93B558D5CB011151CF906BAA3306
5E2ABCF51132F38CE5DAC9B9D63AB7EEDDA82BEDB23912C45C282783F672E3B1
E22F32BD1B883F76C6FBC44FFAAC5290381463C67A31309A32C87A1B4699D58D
1C8E8F0659C14C1387E4CC8B9811BA1D762EBA651BD5FBA32ACCA068104F9876
2A21564C5E713D6E36FF8A63016F79C7D0E1C0C2A0C6CF7962A86B26F3AB70A8
D25526BAD00D4DABE85CAD89BA80630FFE3EBAD70FD8F2302B44FA2589DA8D7D
D75C8A0D05AD493E6BAB4100D265D42EBDD432F7711341C494C795ECF17CAA96
9792C8628B6809C79D5C08DDD6BE2EAC235BEDEE368CA8B609A0522D5180F670
2F2C6F8EC7A6C9F63592C6DB794714FDACD66F22FBBBB13E6F554283FC7AE67D
07BFD42DA16B4DE2AB7419D65242BDBD8DC2B838CF5C816820E15E1539D0ED53
0A01DAC3FE5756686B30467C726C2BD5AA99752F72A3FAA910C76BCF6F7023FD
439BEBE61ECF0AA6D015B8713A7C36C0B6E75757B4736F1732BA3E9DD29E57D1
4131B50A1F99ABA6B5A1F798EF22DD3AAE8D1BE5AE0BC9C73264E94622662796
8FA8AD8EFA4530AD6C35EED9E480D3AC9EF4B833D951CEB6073A23BD832381E0
A042EFCDB978DDBFA299B671DFB0158C60C1489AC7A6617558378BA14DAA5A47
45550F8B3480EB2CA0828C4450AA5E3469EACB167C30F7D7763F20D741FD762A
5A7DF7A2F0AFCD6390F8027137D67207C235DA45CB972342C8BDFF497ECF0980
C7EB6127BB22081976951FFE4EB4862E07D3D4ACDE4A312172C0B73B027EE977
1B4BAA91AF23663CDB92681EE6616AEC4DEEAF2899107FD5EFB2533C4974AFBB
788FB5E68B9516C4C99F5DF780BEAD3AB69689DD7360BB5B87259D35AA0847B7
E9A4E1D5C3FED9F2798B3DABDB8EC033F6D1A5B6E1D8A2A3EA61B8AF242E4F81
5C07816999F5F22A500C53429EF17003E80617396770A33F55530CC837942751
3745CBD2A976E6E482C09ADA684EE9C59FA14CAB520B2E95274BA5AB0E1FE82E
76C8512482444485E8AD4CE8585B044BBF08A2EF96C16D45B42746AF8F6EFCEE
A016B4A428962F6A240EA0FFCD53CECE7BC5C04A55CA0CC7C9D500E2A7EE0F20
7A53D4C7944FA3EC389BD83EE4E880CBE3278EEDA0833C35F798D66B30AD10FF
770C9A08125D6457D601481B2AF1C02B1E1AFC64C0DD2326B351F750EA0E386F
32B5BC0788181F511102AB15CDC60F6EF4A570B8113DE184E683D203AE0DA141
A1BEA4E6E3E778D89D03EADAB83A4D8C332E2221AF8F6F4A4954501CB9C5D007
6EF2F506E3DB3D67A2D10FA038561B4D714B0A10EF3ACD646C1B9E0113A1C092
95667F372F2176DB8ED8FC6C63F79CB0B5A99199A3AE536491032675C7663F4F
EB1E9D4875A753BEC3BF97265F7C2DB58B320496C7D0F4E2BCE859A035DF0800
3075C5109F898D7ECDC4655A677C2FD31E9717FE5EC1A550EF9E2FDEB0F43558
C34430572E535DD496AC6209BFD5E204C57D6895210D81D946EACFDFE8D4A32D
39F6B66120731A0C4F9AEAB54B3EAC9C3325FDF427D1E81DFFF6B0E45E4BE3E2
7C1CD489B33337CC731D15473980E0A9BD699736E7DFABB41E50D0846C728A66
D7AFEAE2B6128E6C913C881550A0591DDA6461D19B6EF6AC83A434D376856796
F066D9B3144D6FE0C98E41D227D702823556AE648CD5DD0AC9024761E179E33B
EB989AF581F7CF3EC402F58A640A8AE74A8B4AE46E1C2BDEA679FF899B2E62D8
9D13286C0435580FCF14B26666E8F75B6BC6389E7A85FDEBC0D432C47C909C10
6FFC54EFC06F76C5128203F99E12BDC84841D4EEBFFFE810F076D00710C302B4
E5E8AD40D6C04FB05F457DBE548C32954C60747297001747473ED6CDF0F07387
0E577F2F2960175A90880B63035BDF426753A1DE20BCFA4BF2826BA4D8F61135
34E6BE60D7FA2DA2FFBEF0BB2964B7E729C277E902195DB6B19921237117AD4B
234438CDCA4A7E25421A64637FC8F70CA0551BB232692DFD2E9CC177779879FD
04377527B5D1B53A6EB588AB3B7D906D3B0FE115A671D676F81088ECD2097B20
A19A86FA497773EC6FCC64C916C5771E7CF02C3D21D0CEE2C9208B54C3319914
237E4E76C17112E75E449D0FE77B33EC7CF4718D22FD4883FD0A18FBD3479B44
2E337B00A101124184AB7765316DB0B7843E8DA8CCDC4590D69B105AF01329BF
972F156ECC4E82D4CF8E6F87B2A2DAFC69673E1FB9D929BC4F31A4AA99AC8B08
E2C1B671986592AE7310929D8F55FB4E2D527FBF80D86BDC60DB268EAE4450B7
640A28120476718A1CD9960D5448556D1B2623BED9C880996B4F5FAFA68FDD22
AD422869E28828137C706B0CC727561D50B7EEF3830A87973887D5BE9141CBE1
0E0EA1C71A05DA3B72EEC9C1B38F428A3ED9EE95AE9F340D595C1BEEED946CA0
AB0475DA734CFCCF672B5C7599483CCCA79EDE5582430EA97C3FABD954C9C58C
1B19E0969123C3F9F0FE606458D2057A3EB3E53F291A7FD40567296174F0AB0E
3BE746A384DEAAC66E6F6EE4CE4ACFE894C33EDAC75933CF06BCB448E9F8AB7E
EEBDA6F3607700A8D3BA62E49D774D9E6A4540C3BEFBCA41818CB8B6ECE6AD93
D25ADFB1C5ADE581CD40B44F6435D089AE6C31661F0B5815DC0751A926103E66
2A0348E70A97A464D5AC2904601397AC6124220C280E417BCDE241F0C2561C92
C31BC4831AF4CC744D505607053DAC9D14E753A16C34822B0FECE3EA452620DD
0B589A165D7307948068921512235CAA38A69690A4ADBEA22D5FB3A9F677DED0
B843ACC7DE83ABB7003C7952547DC27269C1904CB0CD0160136BEE30A0B6582A
4EEE97D7DC3783A048D871AC6F3464517ED20118DEC1D4DCFE59CAF06FFB28C4
872B301E0BA418DEB2EB2A665BB977A497915342A184DA5589E192F08B7149CB
BDDA28A90F69D361C31826743EB62C444271924C89E11BDAC42EF8B7DE41DE1B
4C258642FC882F7F947F9CC09C284B9974A30FD61E80F89DE77282D37856765A
2E3983E6C70FEA8683E7E4461F10B8C0035BB079C538EE56D3A6A21E75FA45E7
C0806AC25DD3073B09D77F9DF706FD35F7B0E7A983AF06FCF09E37E9D83826C7
818048068053A18D27B0C8FE22CC936FA22C7FDE983CAF435142563C7FC388FD
C131444CCE5F7F1A98BB3A8572F20EF1C4F4312654AFC64543D4BC320843A4BF
30E82A78D0E0AABB126B6938C8CBB9468016965C81C7A1D59FD1C7F22F265343
D23196B59C4A11C5BEEEABF1FCA0E3E26DB60F6079F107CB781E2093B59BD4F4
41A42C82FFC652D3CFF0A41C3C43202CF30FD1073D72AA9C3021981161813CE9
858F3448CE51DAE8EC6477EFECB267D97378E31F9DA54466DC2A1A0AE53506F8
B3D56A6E2F00B4E7FF87C8B2D85E2C73937324FEA99FF060A09262425C9A402D
987712A0A690BEBEEB3ED8F7DC2D8CC6A1FD45E073C5F9BD5F59DBDB9785489E
1FA9D96C57DC4B7603038D69182BC4425B0A4947CE3C4A3EE986616449FE094A
5F93E5DA0D789E56263362340FBA8CA49B9AD210E2B4D7759F5EB8E35E3BD2C4
FED7A0B4B1E7CD406491B5C4A64EAE0CF05E5D6312A00545B4AF2F55C78D8B2C
6BBB0766F08A0B56248596664E82300CB149A8C33D2A467EC2DBDCE57B90318A
91BD5E7901D7450C3E52217F6B6E4F61160966AC98E0CDC41893478EEDACD50F
A61FD2BB18812A6464735ED3015CE08F99D3CC6FC472E5FB314CFB957757B3A5
4B4C2887A949DCE6F28F677B2B3B2669D338BE71BE9D433C50F4D99B48E8F291
69E04E1631C16076ACF457714B567AC5A70318578646EE6FCDB29D798C993474
4B0DC4B3E7C7AB5E8E17519BDFA50EAAEE490C76CD606A0EF08AF94AE9288356
FC2CB43FFCC97B4BBF6B2807FA7BB1E78A99B31BC1E03CBBE02AEF377B9C8FEE
1DBFD6DAD90078346493080868F56A5A0BE705E9DAE32D3C3FFAADC7DA8C3E0D
42D357AE25A878133A558079225EA5409CE60C6C736077F129F899D9D42D0C2E
A7C77884CA4A4A4B85BFD2F9F0891F553381450BD512394596D7B8458FCA6D15
DEF81E86DAC1CC8A51C73ABBDB13A7B499753DEAE419E3B7BF4C8CBF53A7FD78
362CFB2AD31954A1FF65BEBBBC9C08BB468B69A205720F297FDD7F060686ECEA
AC000C3BB333776508F468843263A1D577859C49042A0E37434469F390804B90
39E21F1AFC9380F26571E3B2C0966C7C4D00623F8A7C29ADFBEE0043D4664253
B09D53EA09C75AEF406420D45D3A4A4D9CD0419A4E7CD45E6E9C84C229ACD941
918B6554DFF02340FDD61392BE9B0B351319D8CE328AD81BFB6816DC78B58A54
9D32519C5B342BD5E3ECC52A29C6D3CEBD74E29A0573EB2C5673ED9C6C54D190
8BD4BCFA668784EE4DC2FEB0FAA8845C321A627CF513C214141E02C64524AEA1
AC5DC311A762B8B785369B724520AC4D6A0089879628F05120819F5B4B7C9CB2
0FECF427B33C669E73AAE339EABBF38DDFA77AB23C7F16F5BD0A9CCF307F6939
72E9893FD527317F3063086D77C464FAA85B137E9A6A2E978E62A9A10E1C94A2
D55FB42D692328847E7285603FF8E64FC5F6ACAB079419240001579068F1BEB9
277D9F8C64D91EC6D5B05686A26E8B9592059F76EF585E126F9E574B393FC406
C0129378DAE6746B28C7B1365617C92FA946F3472724CFEED7912E164F4B33B7
60DE4B0FAF49E0EB256A083F710C102E07B3E564C1A58A965B7BB003D7FE7A44
486FA0DEFAF2F951EC317BDB0C3EDA5BBEBF135FBD528C188A30B0906D75D1B7
0390194DC4B03CC30B731C0C2DA2153F44C5F17F31B2701321F8DA5BD32C0912
CBF14A1982227AB214371C060C938327884B96DF30586958C707F0205C3F9872
476833B252DE26DDD3DADC18411DFC4649C76F725697E699B40A3CA819E069CC
6FC34470C82B24631BB6E5E32E0E8CBC71BF24FBD6C84155353C360C86120BE8
A6A2B0C9D6550784FE2F6CAAF4200196EA4BCB09F019123AB92002863D00F93E
8245073E79C2A7927C468EAA3947DD453FE88C13A211BC49E97F6C22EC02CE64
CE9F9DBE52947CAF49A78E8D244BC0892953EAD550817FB700822EB157C4BE8D
E5C62B173D1578300B5AE51FE74952CDC9D40D9B1A3233DB0215E8D129199237
B98DA40241178A7280F6A6F4427B96109F282E52C8D2CD074053205C8698AD2D
FCD5B3672278C2EBB86786C8552127572A7A00C9A6E8795A982063AFD461CA4D
753D7D87BE812C75D98EFAE7428D3B01E471A607EC36841C4C77CB3775052A96
2C832BF9D3B95755423D82F32AE0088A4A1D2AD1C11F7606C5484FB0E9D12072
6183B075036DF7634B34983FEBFFFFBB74640038B9C159CE4BDF4907ADA234C6
DE77DC4957B683947D500143B33FFFB35AD715BB0DCDBB2D35B51730CB8CC9D2
7F58C5C9EB75F27704912DAE6443EAE098DC77C52DC02AAA2C17F569049E4A11
9632C47683095845CE528153E341B9AA26C0FA6F8742178B15884E33D4CE1749
7C27D4F94A2705670B0125D81F85A311CDB0F956218DA377A6E212FF9BDEFD1C
ADCAE9F8CA8978788158CA027DDCC137F78993EB5958548EC62C2FBEDBB75167
DFBB7EFF0165223C47DE855B47289C449B9A0C3436CE6A6625582C5B6C6E97CC
9CA8731461A62B64A00691C60952F8799217A8292504F21D932C0AA2C4F86E6C
332877BC6BA3B33B6A6689EB97C42015D6F257F6E6B691E3A8C1DD510CA8DCF2
29A4C65A312852770DAB7DCA3631824FF2575A9627372BADB7A6E6F68B99E222
51252FD6D0D0660A922617123196D5460C4A05C3E613E093228678586D1590F4
C85CCF00AF19AC1706AA0F045331EF0C76B982CBF83B4D084C9605A3C177E432
87690007B115A105479F9AD0DB70D626775D1C1A80092C9ABE53C544DE02DABF
DC209098477C25E9E338FD0F998FBA3EBC109882B5C0EDDCE8A5C8BD43CFC35A
5D96C622B04FCDDB40B675F081053377364DEA4FD6F37C2111F4B06818ABDF33
37B13915116E6563EDAC0A4B9F6D550FE6080A7F4735504B58E07898EB92D0BF
D0F90F31D8FB2B0F91F6E4080B3C6D4A4A49F23473393812B33D86F9BFB8222C
59284721E202AF56F30700EC19E7E768C6A31BA5419B360E7507D2AE61A10931
C0F9CF0EF766E7D0E4EA7556A9277736B514E7BE15A7FA68398C419824DFF97F
4576D8511C2D9462B373C59D8EFBC1E971875E956600DB7D9BC9E806B2B0538F
96B28A8513ACB27DA792815D9824F41E81BB30EA67F5A9C6A7730B2C816A464C
B9910A2F9AFBC83648300C8C4E43B77CE2B98C7D321FB7E7AEAA45B24A10EF37
FF7A97C64CD494B606207E58BB0EAF66D0815DE94E8681FC6842859AA111C6FA
52E9323191F7B83CB246CD2E4BD5401724CF056E9895D34D66C2FED66CF8FB5D
8276A6F552E634BC77065720A692C72BB8051C00407B7D69AE0E77E9798E3712
1F924F2877EBD9C05944518B80A83A36DBB877AACF4BA51075607335EA30C933
E3EEDAD46AAD79527149C016020091018865E23D6C0C9BA0696A6B6CCFE54FB4
41EDEC23AEFA3FDB17EE7A70C7AAEEBCCA32CB4A801A4A0C26166D5A49AD37BC
FC2E5AE335976E04B58E764CFB72A3D5FE4C5AAE4166B724651DD36643371D0B
AB180EC044DE8B99D6205FECE23D72A9F61619E09C92992B22FCD9DDB598175D
1A0B66EC4F4DEE6485FC184E9992DAD0A3F2316A9E5D93ED5B658E65CA3291C6
E7195F0C3D4BDD17AA5505268CA9DF32C3DAB7A37106D82ACDE9903FF4123DC1
F6674B508B50A1B889980CCEFA92BBEB6717105A2469DC27876F403554402839
0706CF1ADFFCF5E5E6801ADEA52E64DE64138B83EFABF839E42B9E48EF201492
A49EFEDAD114C0D61B64CCF4B94D3EAD77C5E8835431AC1AB3CA0C68DF3DCF39
C650F7EB3F209A11C901F4487FBCE5C5A70B48F8AF66693924012C63E1449A8F
676740EE8E6690B749C420A2C9BC8C85C8715902ADA9113E083DD33936657BAD
25A40D5784ECFF6BEFDF72BF7EF0A2AE13FBDC42ADC77DADFFBE2E38B24F8600
A04F891DF034AAA2F297BCC20265917C6D89B73A46B88F692F601BED1CABA3D0
BF5F7B254305E3C2010E15D640B35DF58CE68E428A266EF0253AB45C4EB7A351
2C55CE47DA2E2651B7E4C95560C55B233A3E8B22740BC6BCF3E2EA0B849ABC4A
881309CC8E1CF0A452E886EFED2A3F40C9FBBDC28D6F626753ECCCB2BF18CD75
589EBB57476323243F6D60F95CEFE5CF86194A56E68366CCCBB70D9BE5A8CA55
ED9B4E1FAF872CB93C44C69121D7BBD0F97F4CC623335E01581F8179E4B7182C
6BC5A52EBD845BB866252897C70AF80339DD386AC22EAD78C99B1DB433C4EC88
C5DB5628F4A7681E5DB8B5EBA4294CFDF3F13C232D2B8F648748CDB9551AC4B5
F14FEED952E5135873DF2915075A003C02ED8C3AE3891A0A78D4BAB6233F90DB
FA98DADB5DA3A9CC79C8147F163883B9A38768E6D7E7EA972EA4997D8E770972
3ABE50FE164D0A7FE6EE1551AFF596CB7557D40B3D9E6EF927BF68E717A77CBC
F6DB02D44BD23969EF9E387BB3BEC0491AEE17430992B138F3FBB098B129DB27
38659ADCD12491DFD42DD6923B27727B122CF96DA2A69C40B57F26D1E2841348
8A3CC2A268031FB2C68110E49F27B4533FF9CC0808571F0C4AA23C909EB65E04
0980BB509894A88576A46F404E6B36516BB525D661794ED4B4EEA1A84AB17B80
A43DC1A82C7A82E17B8941CCAE40E3CB54A7FEBF94E9ADA069555BA19ABAF9C6
A58FE43921C29CC15CEBF6692FB8A31F5A22BCC5D5A8F31452D8943411479CC0
91A03E1FDB511D4BA37187D2824B191EB4A36C303BB11DF4C0E74749D162DDB5
D13A006280301A51AFFAB79A2381D67EB5F74CBDA77FFE5ED880B6BE9C086262
16F594DFADA6575476A369346049FB70173189B08AEB301F20AFFC4614C317F2
AAC21356C314A504092F0326FC398FB9452F76892955898EC4A35ED7228B07A5
241121B9AA21DD1984A6D8CCE24DBCB6D4AC11EEA069B98BE4204C0736EE53BE
B2080089A09EF7487CE56ABD1995F19AB9E5CB60E261F473607C5A425221401F
DF427E80D4EEF9BD559C8D34311E397A80492A5CFE7C6EAC529FC4ABCF0E5A34
D26255B9A213793730C8E5197204FFA28ED3D684EAC4A8D349029D36A019D4D9
37F4B4DFA376849751AD539EC495F898E8C085E6636F12957218F985FA0E1DC8
C1E1597840366BC6235C6E2CCB70A7565FF6BAEA2DB6BDAB5B53CED687A7C219
041A0A591CE6F41628A9092422F8550342E586A4C5B5C6490C50D163E16B0564
B553E9DE0A904CB404D9E1FAE18FBF5ED6075A45A4EC289098CFEA2B6895BC62
517DDF7C4639691896A48F2275884FD4B8DA3E0336C5A84C0C186279AC8A2E59
049C75D20E4D4D68D3840BC66BB149B52DC43D4531B43D659362D84A4F7AA064
50A799C9520C13DFDA9A94E34834F5862AFE29BC26987A90184916C732A92098
97DAC25D235B34FD0E347F0F0C127E378C0DD32BF164B23D7DCA9CB2DAEE1269
50755EBEADC01F275E6F295C44EAC5BEEE657DB29985A7BA95717A35A289AE8B
98FB3E89B3D066ACEE07E92634443BC49EB1E21C95FDDA27861B56943C731F32
36A21073FEE5566D83CD93A93EB3D0EA011BC697FA93540D7022178AE1D4ED8C
D52FD182547609E11804DAF8A84AE17B86DF08FE79A6156FC48FFBA8EAE43C63
EB7DE03DF0544CDA6FA606BED05DC18287280BB826C1151124505A0B81DAD04C
2257DE50114111600E5AB28EB617FD9DBF4C3F1AE6F5F0053623B446E99CCABA
7BF71132F6E08CC90F7DCC1C2B27F947178F0ADCA8ECFD5F2CE80C694C717B08
F1F01C906761F46C626836B82F5243EF0FF5F6672E00DBC72C3887664EA065BC
D869611593F2360D9A8B3614F803E0C463F1451EC02E81D7D3D655C4C3BF1EDF
173DA8B6BBD7AEB081C63420946B4E28498FDF000E118430F06631211C5D9369
075872F30EF4982A7607F9ABC6811EABCD71C983471282F044DC50E7EA75D05E
8B68A3505184C9F0E61093F3FBD296A5B40779E4DB27AA5CBF517A784A8F3BA5
844B46A87BA4F2A162A2B608F6CF183E89A7FA85A0C19633963A54960E69CECB
8F912B290EAC8C26C179CE3398A17A6057B608E0C5F134355A13D657097D4922
39811508FD687881759BC773AE144F097C7FEC0CCC44710A68E18BCAC37763C1
429694F7AE82C655622CE29F28AD49200D8E57D766D6785006D7DF70147647D5
7A19ADDC422282FF94179BECD48197
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktional)
@start /Fa 203[377 377 377 377 49[{ enclmrm ReEncodeFont }4
553.48 /LMRoman5-Regular rf /Fb 255[640{ enclmmathsy ReEncodeFont }1
664.176 /LMMathSymbols6-Regular rf /Fc 202[406 1[406
406 50[{ enclmrm ReEncodeFont }3 664.176 /LMRoman6-Regular
rf /Fd 153[399 76[483 25[{ enclmmathit ReEncodeFont }2
664.176 /LMMathItalic6-Regular rf /Fe 185[723 4[830 10[553
4[553 2[307 46[{ enclmec ReEncodeFont }5 1106.96 /LMRoman10-Regular
rf /Ff 160[909 45[606 1[606 47[{ enclmec ReEncodeFont }3
1212.12 /LMRoman10-Regular rf /Fg 254[369 1033{
 enclmmathsy ReEncodeFont }2 1328.35 /LMMathSymbols10-Regular
rf /Fh 140[513 3[650 723 4[361 5[578 37[1012 9[650 650
8[506 506 40[{ enclmrm ReEncodeFont }10 1328.35 /LMRoman12-Regular
rf /Fi 152[897 923 102[{ enclmmathit ReEncodeFont }2
1912.83 /LMMathItalic12-Regular rf /Fj 135[530 94[540
25[{ enclmmathit ReEncodeFont }2 885.568 /LMMathItalic8-Regular
rf /Fk 255[732{ enclmmathsy ReEncodeFont }1 885.568
/LMMathSymbols8-Regular rf /Fl 203[470 470 470 470 49[{
 enclmrm ReEncodeFont }4 885.568 /LMRoman8-Regular rf
/Fm 135[739 16[623 641 42[361 59[{ enclmmathit ReEncodeFont }4
1328.35 /LMMathItalic12-Regular rf /Fn 133[578 686 686
939 686 723 506 513 506 1[723 650 723 1084 361 686 397
361 723 650 397 578 723 578 723 650 17[1012 7[1021 849
885 993 939 921 975 13[650 650 650 2[361 434 3[506 506
6[361 33[{ enclmec ReEncodeFont }41 1328.35 /LMRoman12-Regular
rf /Fo 137[1136 1196 837 849 879 1[1196 1076 1196 1793
598 1136 1[598 1196 1[658 982 1196 2[1046 6[1315 2[2223
7[1616 5[801 1[1691 1353 1412 2[1530 1625 10[1076 3[1076
1076 2[598 717 16[1196 28[{ enclmec ReEncodeFont }32
1912.83 /LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fo(F)-239
b(A)717 b(6.1)g(-)h(1)f(F)-179 b(unktionsterme)714 b(\034nden)i(-)h(O)
-60 b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray -741 4800 a
Fn(1.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(sind)g(die)h(Graphen)e
(der)h(F)-108 b(unktion)433 b Fm(f)575 b Fn(und)432 b
Fm(g)48 b Fn(.)p 0 TeXcolorgray 0 TeXcolorgray 8133 29887
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 275.99152 a add def
/d 0.0 a add neg def /h 187.29811 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 8133 29887 a 18212 20177 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -113.81097 T 20
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 284.52744 0.0 -284.52744 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 14.22636 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -85.35823 0.0 T 12
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 142.26372 0.0 -142.26372   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 184.94283  0 -91.04869  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -91.04869
 184.94283  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-87.71352  def /maxTickline 99.5846  def /dT 3729358 abs 65536 div
viceversa { neg } if def /DT 2 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 99.5846
0.0 -87.71352   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 184.94283
0.0 -91.04869 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 99.5846  0 -87.71352  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -87.71352
 99.5846  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-91.04869  def /maxTickline 184.94283  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 99.5846
0.0 -87.71352   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 184.94283
0.0 -91.04869 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 16967 17313 a
Fl(1)16966 14164 y(2)16966 11014 y(3)16235 23566 y Fk(\000)p
Fl(1)16235 26716 y Fk(\000)p Fl(2)16235 29866 y Fk(\000)p
Fl(3)24225 21523 y Fj(\031)5524 b Fl(2)p Fj(\031)5289
b Fl(3)p Fj(\031)11261 21487 y Fk(\000)p Fj(\031)18212
20177 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 18212 20177 a 18212 20177 a
tx@Dict begin  { 184.94283 99.5846 pop 0.0 0.0 exch pop } PutCoor PutBegin
 end
 18212 20177 a 18212
20177 a
tx@Dict begin  { 5.0 6.2015 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 18212 20177 a 17869 20463 a Fn(x)18212 20177
y
tx@Dict begin  PutEnd  end
 18212 20177 a 18212 20177 a
tx@Dict begin  PutEnd  end
 18212 20177 a 18212 20177
a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 18212 20177 a 18212 20177 a
tx@Dict begin  { 0.0 0.0 pop 184.94283 99.5846 exch pop } PutCoor PutBegin
 end
 18212 20177 a 18212 20177
a
tx@Dict begin  { 5.0 6.2015 5.16667 2.33331 -40.  Uput UUput } PutCoor
PutBegin  end
 18212 20177 a 17869 20334 a Fn(y)18212 20177 y
tx@Dict begin  PutEnd  end
 18212
20177 a 18212 20177 a
tx@Dict begin  PutEnd  end
 18212 20177 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -10 def /x1 20 def /dx x1 x sub
599 div def /F@pstplot (-SIN(3*x))  tx@AlgToPs begin AlgToPs end cvx
def /xy { x 18.11378 mul F@pstplot 28.45274 mul } def  /ps@Exit false
def xy moveto  599 1 sub { /x x dx add def xy  dup 1.e30 28.45274 mul
gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 1.2 SLW 0  setgray  1.
.setopacityalpha   0  setlinecap [  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine
 grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -10 def /x1 20 def /dx x1 x sub
399 div def /F@pstplot (3*SIN(x))  tx@AlgToPs begin AlgToPs end cvx
def /xy { x 18.11378 mul F@pstplot 28.45274 mul } def  /ps@Exit false
def xy moveto  399 1 sub { /x x dx add def xy  dup 1.e30 28.45274 mul
gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 1.2 SLW 0  setgray  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 18212
20177 a
tx@Dict begin  { 45.52455 71.13185 } PutCoor PutBegin  end
 18212 20177 a -371 x Fi(f)18212 20177 y
tx@Dict begin  PutEnd  end
 18212
20177 a 18212 20177 a
tx@Dict begin  { 28.45274 -19.91682 } PutCoor PutBegin  end
 18212 20177 a -371 x Fi(g)18212
20177 y
tx@Dict begin  PutEnd  end
 18212 20177 a 38684 29887 a
currentpoint initclip moveto
 38684 29887 a 921
35863 a Fn(Gib)433 b(die)g(F)-108 b(unktionsterme)433
b(der)g(F)-108 b(unktionen)432 b Fm(f)576 b Fn(und)432
b Fm(g)481 b Fn(an.)921 40401 y Fm(f)142 b Fh(\()p Fm(x)p
Fh(\))369 b(=)p 5204 40401 15749 34 v 921 44938 a Fm(g)48
b Fh(\()p Fm(x)p Fh(\))368 b(=)p 5092 44938 V 1 0 0 TeXcolorrgb
921 47483 a Fm(f)142 b Fh(\()p Fm(x)p Fh(\))369 b(=)f(3)296
b Fg(\001)f Fh(sin)6 b(\()p Fm(x)p Fh(\))921 52021 y
Fm(g)48 b Fh(\()p Fm(x)p Fh(\))368 b(=)h Fg(\000)221
b Fh(sin)7 b(\(3)p Fm(x)p Fh(\))p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 4800 a Ff(___/1)p 1 0 0
TeXcolorrgb 48228 6792 a Fe(F)-123 b(A)369 b(6.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 55828
54804 45 v 0 TeXcolorgray 24746 81281 a Fn(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fo(F)-239 b(A)717 b(6.1)g(-)h(2)f(Graphen)f
(v)-60 b(on)717 b(Wink)-60 b(elfunktionen)713 b(-)k(ZO)h(-)g(BIFIE)p
0 TeXcolorgray -741 4800 a Fn(2.)p 0 TeXcolorgray 651
w(Die)394 b(nac)-36 b(hstehende)392 b(Abbildung)h(zeigt)h(die)g
(Graphen)e(der)h(F)-108 b(unktionen)392 b Fm(f)37640
4999 y Fl(1)38166 4800 y Fm(;)221 b(f)39389 4999 y Fl(2)39916
4800 y Fm(;)g(f)41139 4999 y Fl(3)42059 4800 y Fn(und)392
b Fm(f)45261 4999 y Fl(4)45787 4800 y Fn(.)921 42400
y
 currentpoint currentpoint translate 1.6826 1.6826 scale neg exch neg
exch translate
 921 42400 a 1355 42400 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 237.58057 a add def
/d 0.0 a add neg def /h 196.91505 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1355 42400 a 6079 31427 a
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -85.35823 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 280.10078 0.0 -111.97797 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -85.35823 0.0 T 13
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 97.7937 0.0 -99.12135   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 194.90146  0 -42.67911  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -42.67911
 194.90146  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-99.12135  def /maxTickline 97.7937  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 97.7937
0.0 -99.12135   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 194.90146
0.0 -42.67911 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 97.7937  0 -99.12135  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -99.12135
 97.7937  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-42.67911  def /maxTickline 194.90146  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 97.7937
0.0 -99.12135   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 194.90146
0.0 -42.67911 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 4834 28563 a Fl(1)4834 25414
y(2)4834 22264 y(3)4102 34816 y Fk(\000)p Fl(1)4102 37966
y Fk(\000)p Fl(2)4102 41115 y Fk(\000)p Fl(3)8975 32630
y Fd(\031)p 8975 32793 507 45 v 9025 33340 a Fc(2)12092
32992 y Fj(\031)15072 32630 y Fc(3)p Fd(\031)p 15072
32793 913 45 v 15325 33340 a Fc(2)18156 32992 y Fl(2)p
Fj(\031)21371 32630 y Fc(5)p Fd(\031)p 21371 32793 V
21624 33340 a Fc(2)24455 32992 y Fl(3)p Fj(\031)2356
32627 y Fb(\000)p Fd(\031)p 2356 32808 1147 45 v 2726
33354 a Fc(2)6079 31427 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 6079 31427 a 6079 31427 a
tx@Dict begin  { 194.90146 97.7937 pop 0.0 0.0 exch pop } PutCoor PutBegin
 end
 6079
31427 a 6079 31427 a
tx@Dict begin  { 5.0 6.2015 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 6079 31427 a 5736 31713 a Fn(x)6079
31427 y
tx@Dict begin  PutEnd  end
 6079 31427 a 6079 31427 a
tx@Dict begin  PutEnd  end
 6079 31427 a 6079 31427
a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 6079 31427 a 6079 31427 a
tx@Dict begin  { 0.0 0.0 pop 194.90146 97.7937 exch pop } PutCoor PutBegin
 end
 6079 31427 a 6079 31427 a
tx@Dict begin  { 5.0 18.93042 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end

6079 31427 a 5031 31760 a Fn(f\(x\))6079 31427 y
tx@Dict begin  PutEnd  end
 6079
31427 a 6079 31427 a
tx@Dict begin  PutEnd  end
 6079 31427 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -13.9355818181818245 def /x1 19.84441818181818
def /dx x1 x sub 199 div def /F@pstplot (COS(x))  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 18.11378 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy  dup
1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto
} { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not {
/x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 1.2 SLW 0  setgray
 1. .setopacityalpha   3.0 0 0 add  DotLine  grestore end


@endspecial 6079 31427 a
tx@Dict begin  { -42.67911 -19.91682 } PutCoor PutBegin  end
 6079 31427 a 462 x Fd(f)6478
32009 y Fa(3)6079 31427 y
tx@Dict begin  PutEnd  end
 6079 31427 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -13.9355818181818245 def /x1 19.84441818181818
def /dx x1 x sub 199 div def /F@pstplot (0.5*SIN(x))  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 18.11378 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy  dup
1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto
} { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not {
/x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 1.2 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 6079 31427 a
tx@Dict begin  { -14.22636 -11.38092 } PutCoor PutBegin  end
 6079 31427 a 462
x Fd(f)6478 32009 y Fa(4)6079 31427 y
tx@Dict begin  PutEnd  end
 6079 31427 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -13.9355818181818245 def /x1 19.84441818181818
def /dx x1 x sub 199 div def /F@pstplot (3*COS(x))  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 18.11378 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy  dup
1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto
} { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not {
/x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 1.2 SLW 0  setgray
 1. .setopacityalpha   0  setlinecap [  5.0  3.0  0.0  0.0 ] 0 0 add
 DashLine  grestore end
 
@endspecial 6079 31427 a
tx@Dict begin  { -39.83366 -59.75093 } PutCoor PutBegin  end
 6079 31427 a 462
x Fd(f)6478 32009 y Fa(1)6079 31427 y
tx@Dict begin  PutEnd  end
 6079 31427 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -13.9355818181818245 def /x1 19.84441818181818
def /dx x1 x sub 199 div def /F@pstplot (-2*SIN(x))  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 18.11378 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy  dup
1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto
} { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not {
/x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 1.2 SLW 0  setgray
 1. .setopacityalpha   0  setlinecap [  2.0  2.0 ] 0 0 add  DashLine
 grestore end
 
@endspecial 6079 31427 a
tx@Dict begin  { -39.83366 45.52455 } PutCoor PutBegin  end
 6079 31427 a 462
x Fd(f)6478 32009 y Fa(2)6079 31427 y
tx@Dict begin  PutEnd  end
 6079 31427 a 27654
42400 a
currentpoint initclip moveto
 27654 42400 a 921 42400 a
 currentpoint currentpoint translate 1 1.6826 div 1 1.6826 div scale
neg exch neg exch translate
 921 42400 a 6529 x
Fn(Ordne)458 b(den)g(vier)i(dargestellten)f(F)-108 b(unktionsgraphen)
458 b(jew)-36 b(eils)460 b(die)f(passende)g(F)-108 b(unktions-)921
50921 y(gleic)-36 b(h)g(ung)434 b(zu!)p 0 TeXcolorgray
0 TeXcolorgray 12059 52518 2584 45 v 14642 52518 4523
45 v 12059 55777 45 3260 v 12767 54574 a Fm(f)13408 54773
y Fl(1)p 14598 55777 V 0.9 TeXcolorgray 14643 55777 4478
3260 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 16457 54699 a
Fn(F)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
19120 55777 45 3260 v 12059 55821 2584 45 v 14642 55821
4523 45 v 12059 59080 45 3260 v 12767 57877 a Fm(f)13408
58076 y Fl(2)p 14598 59080 V 0.9 TeXcolorgray 14643 59080
4478 3260 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 16421 58003
a Fn(B)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
19120 59080 45 3260 v 12059 59125 2584 45 v 14642 59125
4523 45 v 12059 62384 45 3260 v 12767 61181 a Fm(f)13408
61380 y Fl(3)p 14598 62384 V 0.9 TeXcolorgray 14643 62384
4478 3260 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 16385 61306
a Fn(D)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
19120 62384 45 3260 v 12059 62428 2584 45 v 14642 62428
4523 45 v 12059 65687 45 3260 v 12767 64484 a Fm(f)13408
64683 y Fl(4)p 14598 65687 V 0.9 TeXcolorgray 14643 65687
4478 3260 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 16412 64610
a Fn(C)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
19120 65687 45 3260 v 12059 65732 2584 45 v 14642 65732
4523 45 v 0 TeXcolorgray 0 TeXcolorgray 24451 52518 4567
45 v 29018 52518 7370 45 v 24451 55851 45 3334 v 0.92
TeXcolorgray 24496 55851 4478 3334 v 0 TeXcolorgray 26223
54699 a(A)p 28973 55851 45 3334 v 29682 54574 a Fh(sin)6
b(\(2)p Fm(x)p Fh(\))p 36343 55851 V 24451 55895 4567
45 v 29018 55895 7370 45 v 24451 59228 45 3334 v 0.92
TeXcolorgray 24496 59228 4478 3334 v 0 TeXcolorgray 26274
58076 a Fn(B)p 28973 59228 45 3334 v 29682 57951 a Fg(\000)p
Fh(2)296 b Fg(\001)f Fh(sin)6 b(\()p Fm(x)p Fh(\))p 36343
59228 V 24451 59272 4567 45 v 29018 59272 7370 45 v 24451
62717 45 3445 v 0.92 TeXcolorgray 24496 62717 4478 3445
v 0 TeXcolorgray 26265 61453 a Fn(C)p 28973 62717 45
3445 v 29815 60791 a Fl(1)p 29815 61004 471 45 v 29815
61772 a(2)30713 61314 y Fg(\001)295 b Fh(sin)7 b(\()p
Fm(x)p Fh(\))p 36343 62717 45 3445 v 24451 62761 4567
45 v 29018 62761 7370 45 v 24451 66094 45 3334 v 0.92
TeXcolorgray 24496 66094 4478 3334 v 0 TeXcolorgray 26238
64942 a Fn(D)p 28973 66094 45 3334 v 29682 64817 a Fh(cos\()p
Fm(x)p Fh(\))p 36343 66094 V 24451 66138 4567 45 v 29018
66138 7370 45 v 24451 69534 45 3397 v 0.92 TeXcolorgray
24496 69534 4478 3397 v 0 TeXcolorgray 26292 68319 a
Fn(E)p 28973 69534 45 3397 v 29682 68131 a Fh(cos\()32062
67608 y Fj(x)p 32062 67822 530 45 v 32092 68590 a Fl(2)32724
68131 y Fh(\))p 36343 69534 45 3397 v 24451 69579 4567
45 v 29018 69579 7370 45 v 24451 72912 45 3334 v 0.92
TeXcolorgray 24496 72912 4478 3334 v 0 TeXcolorgray 26310
71760 a Fn(F)p 28973 72912 45 3334 v 29682 71635 a Fh(3)295
b Fg(\001)h Fh(cos\()p Fm(x)p Fh(\))p 36343 72912 V 24451
72956 4567 45 v 29018 72956 7370 45 v 47992 4800 a Ff(___/1)p
1 0 0 TeXcolorrgb 48228 6792 a Fe(F)-123 b(A)369 b(6.1)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray 24746 81281 a Fn(2)p 0 TeXcolorgray eop
end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 24746 81281 a Fn(3)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
