%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktionale Abhaengigkeiten/FA 6.5/FA 6.5 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 09:01:19 2017
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMRoman8-Regular
%%+ LMMathSymbols8-Regular LMMathItalic6-Regular LMRoman6-Regular
%%+ LMMathItalic8-Regular LMMathSymbols6-Regular LMRoman10-Regular
%%+ LMMathItalic12-Regular wasy10 LMMathExtension10-Regular
%%+ LMMathSymbols10-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktionale Abhaengigkeiten/FA 6.5/FA 6.5 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:1000
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5020D74C7714FF08F5AE00F69DBED351708B1C760171CE5
5D0FE3BC5F6769FB19C7951CD5DCA774B841330A2C8CF59CF458230A1642F956
21D23843C4332F05F5AF14E70EF052F02F7E3F51D6E7D68A4FED8D2C4A733AA3
8973CF4CDF768C31E35C395C3BF67A79F8B1AC292F38AB2EF22A87A8ADBE2C55
747D7AF3101C5F1A2A1BF6C0E245AC583FE784CD69B918457FC63ACB5FA24E41
CAE39AA9386736476F5C0BD3D01ACFCABB35BD346B884B97EB5F467C93A2FC7F
82A0B3682C1D7B0CAE0165D6FE43CBD8FA5C85EDCD122FAC36F59FDA7CC4EFE6
1F9F8E88832737186037F9E5AB161B8A2090F5569529861FAEFDC91E823E0A0E
A92E7F1118BCF413BD355CD844D0F88C47B267EAFA1585B4ABAAAB9BF885D233
DE4656E4CCC1AC1A5762BE48F5FA88A0020AF17A438014B5902A55EE220152C9
0348CF590A07761415D2F53A866C95D4A6848E2BB7970D176670F90765843635
9C2461BEA57F9CC512BDC51EF25496B2C2253AE85AB38889B26761BA509C7F63
8C6CBC4BBDEA74FD3B43A178C86F9A97423815F5FA2C09BA590B8371D5B7758A
43F98F4DC4792308CDFE2779CA6F20ACEF23FD8FC11F483C0CDAFE837D984A76
1286C4DC5088F5DC4B8D59F781ED48736CDB2D0B9B51340F6218CDD622544552
9BAB6B88481D111091C2CAE5E19903BE5F2C90E79E2469EFE314329B4653D49A
0C4443075770A91CF9303D9A09D90460D4094163FF9D5B9B8328B7D716708A5B
C5AC3BAB6258E19FA15BABC01C842507B425F413F5CD32933AF5DF44D51787BA
9027C34FFCF0EAE1840E691E7082F8BB15A4E9B2BEFACF92CB46E229D1C0200B
5E5A7168C7BB0E6CFA5BE39DF3DDC87E92E22B6C9BB5F4F8CB4BA783269EE178
1F3D48923AC9EFC0E3DA4EA6D312AE795F4FB0A6AFCF7383C050E726C98BC60F
32177890D47961EE29017A79D04854B854025548213550B33E2E0BD44792277C
AA5B247973D0098CDC1CAF522251614580C97BEE9C423C9AD8E9EAADA8A08758
3B37B45139682B29869E7EFC15C9D65720A3804546AB54C61B53A69C9D31B29F
E2FBAA8C2D12CE46206C62F9EF7E86EACCC5E9EF48C3C45E62EE780DE2182595
09A7050A9B91012EDE32C7E7359C628AF46C51B36864FCF4FBC5D8F748DAA1E1
AA79
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A229961ADB1D5023BD93644E4C23176BF787664F
CF245203C8C3E557669BDD382731E334C06F4B6EA145D5DF351211A0511605B2
8C540290A08A304CB1279FEB8FC14062F495A5EF2072B2957D98A1AB2E4B2A21
6F53829103F9CA4A8B6EB5766A44A7EAE4D5967EC3646F54568E9FAB28736D70
AE87CA7F3E445B1F49315332AC4AB47D5472A1BC7C25898A571B1D72C1BD6E96
9B113B77F62C4B04169FED7902A5728F9AEFC35B201F835D79EF607721A82F1B
D22CAEA790C3EFA716AC7E957D7B53ABA05461DA404AD0266B212840BE0F2E3E
3F57947346A808AC9B720B85C70E2EF549DE585EFBA65178A68612D2FB323E80
85B6409F602821437D698E80018D86C7FCA7DCB8E783D017B246CB971792B307
9F5C308D3112F8AADDF2363B0626E89492F6DCDDD19434F6F4C143D8BA256D39
692AE378DA0634FAD606D2B0EA617FAB2775FA08A650E2254927E75430A1E090
BEC53A6276BD90CBF07FF6E573BB3D93EE17E5B9F8AB98A72827CD402A127884
3770762EC190DA2FDCEE9DBB69D1EBC783EF17D8C0C8F5A441F523E80FAFFC69
5F68A11D32E62FF2FD98EBD5E50DE5998D4C12572E864C40DAD69102B49DB552
0ABE53CD68687E9818AAAEC0F1E64CF79D776AC08792E98588EA45829D3933E0
AAF0C25D38B3F2A83EAD8AC468B93576DD5C286BAC800B6B0DC788866CC605FA
6F3BB8DEE5053201D651E77971F2B3EF974CC38E20AC8E8DDAD5EF8CDA84BF6C
21B32A83BF428764F8575102AEC5C04C666BF7C656FC6D937458AE2035DAF79A
CDA86CC7873F929AE73991E08FDD55AC8B4EDB90BB011E53C5C28425F74146ED
8233D6FF401FE5E3C1F9BCFDD6BCD11A2A9FA26FADAC70222C02656AE9807A92
88CC89D98ED983DE06D32D71C2B56A0F7D0B0647E043DBF4B07D97C4115B64D1
11C894D4DD9708C56C8A4EDA379B0251016908D938A8E373E5C9F6B11FD33485
2ECC3BECA0F2722367503C0674770FCCC601E78050AFE3009F4B5B5B31738DD2
7ED2BDF92AFEF2DF67D57973E2A20F5F5EE1FA71BE8F0B7773544DDF0CB06772
F87F081488A97A69A30FED4EC4DB5DE190956BBB2BEE9224D816E101711DE625
B45B9A162EBF9DD40968ED6C8C7E6EF2915CB9B4682127B2D35943812D35A7F7
233B6F2E5127CCA4AE4225351A8B99E35B9C6144B8C743F0FAC1573E1EF16EA6
81052A32028C6A26AC3C4AFBFB03FD7930CEA91F557708E216BBAC65827AC623
E81F234B3615FDBD61B74FD56F00B7A3B45AC68296AC2F3D8BBF6A0E0F793378
62EEEF0C3C7F726773C50751300485350EBD0E928EC16C0FB1A5772444ACCF56
C86D643A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890A7D49B0A6C7268E399C6C68B6ACC0D1E9F5B2
931BAF9EEEA6ED985835323E85D72C6A607A99212BA2DDD24D57809EDE36890C
F8121121306593CBADA65AD9EDED7740C9A2F402E3908B54CB4AED249AE575AF
E64C76BA802490ABB489275E5A3F2B926955B0D961A0B9B3AE205C074AA695C8
68FC2F6997531FC328B8FC65BB06C17B212C8C06D5127A14D7989D24912D1CA2
1FF37457E65829B6E1C65A09C1A101047DF20ABCD57E067A7298091C88C4B587
84409C67D00F7D95FFA0D125FB938B5762D912E1C0E116AA0593B1231FDF3BB1
498BA3D20DF13C7EC6D40091B789C9FB7CC872BB73E6B9D4ED8A555CA31581CA
0F057B10C7A8CE1D7CDD4FE2D5332FC533158B8CE6CD3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC88F86B07C1097F9C5C5673B88582CEA8CD622F9B0C79
E463DF7F2F4C6640FF3852BEB520F7B23D8A22E7E601EF9CC6D0A2E6E82E6840
65B82C6A3A6692811E2B4F57723AA3A6E27076A2F63D6CE1FBA7ACD844E732FA
02797B386F2EDCE9FF9F84EEAD17B366D678E61C6176FEC09C94B74DFC090CCC
40AE9DA65E5DA02E7A7E8A840B45B752AF11A279BA06F821525DD0F477831176
84C80B29D318260FBC314986223F9EC4DB5B0EF2EF5D424C6DA581B49C709E1E
98149FEAAB15DFE7F94977C9F4AB20F3D8C391A5FDDFDF5B67E9BC3976D5E50B
846FD2CADD6E5C3689987A6BC19336039591AE9BF280352F53526F7E07CD703C
93CDF2B76B90F055096EAE10BF6794F563F2AD650671AB36C99BBD45E7A8CE34
CB792A606A7D9EFA0F25751BDCE7740D2BC14DF0A3538EC25105BD0CA2485783
361EBC52149C5B9660C0FCC847FD80F67BB3A1F3237F7522F4084B7BC486BAD3
557C8A5956F4ED1B59F70E3721742F99F8F271B2B1EC80832C40E532FC4AC9C4
88F12D88391D52AECE76F5BBB786C196CCCAF13DD4617C9DDD2D8036D8F84AA6
C643DB5351F70F30E7F138E98B6A105DBDFFEA47AA88871AAAC76AF9209DF031
4DD1B14C1B985F03669B546C110680DBC9E1DDE716C4A15A2B90D507D3D5BB0B
305BA90A349F310E5A5193E84323E9AE06EFE62B59FF55B405EB0ECC4983276C
E89323DBC6BA6CE88B5BC2A63B18E115B756E125867AD45442DD3E19B955F015
4DA46F6640F1B0930466DD3FF1F349A85B3B6F37E3D2C3568B2F7CB639939922
7BA97CC8C165D47371FC14E56AAAB01F70AD759640CD1B388C76A39DD9F14D88
3A4CA48B1597EF3E3407BE3640262FBE15DEED450E81E397D0ABD05A9CB3E75D
B398D4C89F58C85445101468001F40721E8DADDD62B671B754BF04D2AE19FBB7
69970548513F3190DD3F71D3A53CA653BF2735125CEB2D1605B65B5550F507D2
0F3953C0807B3E840E1D1D755B40C834FA1B708B3ECD6610452C321698CA1B0D
3952439A67E6D3D9AA0F6B6EA3066C3919F3853944A9A19D6DE12440650211BC
005F3734783960D641FEDEADD01C80F2B2BB2C7168B02C400BFC98D65394971D
54B62C9927502590AC4935026215EC675BF3F3159EB8C4530A1BE5182B4F95B4
988A9F5E686E357928DB4D5FB00FABD415EB4EDA15C15D794AB11EE10C59A983
274F9F6330FAC997290342E906B3DF2401E18FDE27CE5B750663B81A52666833
EB8F0B1C9A9D0ABEFA3BDD5CCE71E364634EFB43D92A32EE141A5B9E5919E4A6
8923682973A4EB78303F973E0E5505F84452CFB9003B2BCEEEDCC4C8315179BA
96D4C42B00E30D1DDE4C1D7143141723957D415D400F546F4DC60419B8B0FFF6
C6D97D227837051CF300C210369052379396AF04DF66C9F91D2094450A941D11
AA4D8ACD4C11A93238C79AF1416EEB285F065AEF8E64449B0D0878C2060C977F
697F6A81371033A8D1EAFF250FA92943B1F1C146694B7B95B9ACD300C820125B
A4D6C477049FC6A14DF99B55623C3F2AE51F9871D9101C65D1DEE131C7F5F06A
E4E06428630AC23814EEB28A4703D4D84D1B7BAD1EBC6B54C9ED82E8CE41D79C
E7E13CC30966BB36B0AE9C3DAA5E7C4D0CD45EA5ECB11E870A009D04BDFA4322
D86D83C191C317B8C939ADECFA7B6DA6C9902C79838C35DFC1D29B65285CE385
D7F1B223641B79C5A18613C1928675C167B5CFFC1288DF89BE3AE6C7D77790CF
019EF92649DDFF63F2CEFDA1A66FA95CDEA045E0CE54619890BDC08E1F390C75
B9B206A643A75867DD2D3B47E48F6FAFEB577B350B43FA3594CF7C6CFA738435
0DE141A31C3B94150E1567847F79F08569A14A35045E5BEC26CE675C9511E11E
D3F682F258EAFACB12F34F15424B7B28E5BDC1AB733E424688558FD817A17A31
90FE5C6C6F6AAD08A7EF4D0E3A28791F9334A7E38254E0B672FA457661EE1342
5F777CB1F02673929D692B3E9B43F66DF7B25AF98EF04FD9A49312357B7F8A36
69A6AD48B956F9288144A2D67E0CDF5BB96E02A5A41AE5855945FDB1F9A19D1C
49D8E78B6589B3363AD6FA26F4C3E02F4113FA122C87114A7B4A3677106815D4
13B549C09ADBC473612780BB9B5269B27AF3E66F16C440931AA45CF3ED8CB4D5
EC7C9A918343182BBA88E5D0FEE9F437F7F79C0A9345559B02396689305C028E
3C2FCD8B458346424F1C8D58ED9D9420FF3AFA86ABDFB1342F01204F262BB723
01D5AC8F437D393924479A10967DE2CF9C3DA7103459C4DF7C639F175EEBB743
554E25FC46881FC511166C0BA3D98FDB65967DEBD0C66B68BFEC79985844C42C
E419F3312CDF9C7DAE727131F0E96CD0BBD689A8332EBB53DB1EC1F2257933AD
8F1CA1E728E8AB4DADA09855CDFD10A928821F8DF3B06DA9A995E454920379EF
CECC600F6ED922057CCA8B0470BC0E2057885ABCA80C86E28592E0A290F59806
C2EBD3AC54B4E0681A7E50B63287A8D590C78865370EFE50027FB80067636944
ABB9285B9BC11DA064D9651888146B328799F74BB32BE5EED61CACFD6485D2FE
FE7C53B19ECB89B9DA9A937DBE9D489E9CC3404F3EF85C77E10773F3ABCDB812
D68B05180D4B0B0D2A8E3A56321F9F33DEA614A3AE8BE1CC43D30B6267FBF05F
0F8FA308C590EE0653382141E5238FD3710DD34C9650541AFFEE5C4D169C766E
5330AB8946543257CAA1D2DD3AE9618634FC015E11EA38DF85542139BC96DB36
C2CAD9346341E4F723B9AA6161ABB61D81657E37AA4AFEAACF60CE3A7559C435
DBBF42C00133E9B9D71F91A5DA13442A0F5081EFE17ED5AC93E15195F9CD54F2
AEBD6708632642552DAA4CDBC27FCE8E032D98CBC309871DE23752AD9424CB7B
5FEA663937456B25A2D4ADAF14259E2B8814AC837FE12D57367D3A13F7D1BD96
8B1560B497A86A7FD69C34C3039D28874A5AD1595EB69B0AFC3CF411ED90518D
2A7DA0481EBE5AC43F8378504ABCD9E2F090D88E28EE77E3A002608448B45DE0
95D6B46288B9017242CB2C19C227506C2A3D16EF83AA496DBC39B3AC9C7C7E86
CF2D14371A80CEFEB1AA04B679C9DC95F1EBB32113FEF5E355D072CCE9576A32
7508505C1F072C185492D952C0C21D6814ED6822525717DE298C3B97A91E3B4A
BC48BAB4EAA1453A1AB6638937177E11372BFDA5C70096C4E1ABC91198358C9E
7FF94C2DF2650934CB6682E2C19ABBC2B58D97BFFDD82B3F4DDB3603278F3C3D
A3068DB5E0309E6EE784A81D2ACB71B792222D4E18A3DFD1905B9803DE47C60F
88D0D029D84B9A70EE83E4B5CB74F4CAE6EDFA304A8D8550F5600ECEB49EE8D2
12EDE533BA94CB4BDF91A9EC303FC324E004D1EDBA6B924A1DEB0A719B30147F
087224C4EDEFE2B59CF88AE08EE04DB47FCA61BA7AA07E147E052690E56FAB85
5683E3164632890CC94D785F442DCF310B26F3FA93A3D2917A5864DDD85C09DE
2DCFD6DFC69CBC440C682C403D88FBE2D8637864A7EFA796F0E263D6E113B5B3
E5639AADACCF839B30E848E94E781CF551A649044027D16C9AF13BCED72BE6BA
CA8C4410840A836B3BDEC5E72344D343CD16C8FFEAEE6502B92B09D1AF6B2137
526152112D7DEEF198724C88050207398E651AC0B8FB6C7FB28C76592B931E2B
18B269E6CB21751C5F56585D0D29A369
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4A2DE9AEA203B209385B88D9E708FA615ADAD672C6
BE223D5855C0F6753649EFC00A7683A9EBCDDF1610B2D942987DAF090BF54FD4
E7304082BF34EBA0169EC3F6190879D5D8DE05CB5C6CE7C2212251BFE8824A87
3A277D0CE8C588611AF4987F7203DDCE93170428CB54EFDA16BCA73256C1FF85
2C85996873C9487906AB70DAF5E4FF2EBB5C7489358365EE072EB45FE7328E73
5D241828F39C98E813E0B142027DA0842BB3BB3A4EA8DE8EB34BB81AE7BA9B29
193A289A9EA7EC158512A268417204F047097E042BB52BDA0AA3ED16B4315244
E3BB451A99B211EEA2F1CD0A5709AC8CFC3EBA9A0C45B48925B43CD4417517CF
6F42243C234413756CA68A0F125A0E7C1CA1F6166685C3FDC27532C931AC8B86
E81FB0223686025707E5A69C6BF3D0C6660E636D6AD25B03A44355855B2712D6
F84E63A541739B3F161891F0FEF72180DA1546675AE16824DD84B6CA375598B6
C439A2E90E30B7AF6043F860D5D548B166C25921D8DDAD3398299D23D94203ED
FEB2A8899B078698314F08981397316AEEDFAF486F58FEF25284B5B5618A6762
967822C2B91D421D3C8CF5D76D071D3748C32BF1C779E9131603E8C0EDE2D696
E60DFEE5F15D5EA092DCC4D49B16373FD58807C44B06016EF5E2670A911AE147
CC5A9756F870A1716B4DC3D868BDE539079576E5CDFFAC34E165C063768ED394
770CF07675657587CB8A56596847362B00E9728B7CF7F5E85673E4B8C4F424D5
94F93A6861828F6251F206B9131C951D1ED4364A9CCE5383C0DD92E3E329CFC4
E2B36E704F5A2E99A7CBCE624FD99A6A452BDA7CE29D9E0AF72F0AAB66DFBB8C
8ADD16BB65D88A7AAD93961976DE90E40187EA775CC79FCB6654FCFD2269F2EA
7951C85F49D40AE4D7D193541D0631D347B191536A6557B5B8C874FA44E71539
3E6B62F58F9D3B055E3CA3FC5F586E8D1B006E523AF961E9C9893E8D65DAF13D
26C24BC276BC5F72AC1343EE49D70ECA4F25F58B6C3937F7A3D8165EDF4C74CB
B662283EA3FB859F2B46DF97AE05915E791F1CE849154C53C441EF100B3D3F74
36A5F496503A3E108CBCD7AB1104D13535023D5E0F563059F9959F021413C8DC
613D035D69EDB4DCAF6F52EBA08FFC62384622982E88BFC0C20B422D4B14971C
6890397008D96737F48EEB999FCC8F26AC74EE09527348E31E31545F0FBAE081
3944C8BDCF6E32FA15B53C70BD06F06681193AF93A55066E8345D531472249C8
FDCE5D2CF3A342C8C3E0EC7846ACBEEE09B1C6048724F4AD47323294281412E0
33B051DE4B5B54076F7EE652220C5CD20A575A917C9E7F9EB8C5D400FAC3275D
E7A1CB64B5D1B5FA98029D7BCAC785BBDD2D86B42FF91FCE7E06435BB2940232
8654C6213212E127B968C9D09176613CDBBF70DD3492B82A746A18621FCEA034
C5478EDDA7C1280A05B1E32B4537274E5102564EE586F97C1FDE8E7BCE01645E
6997373B2BD37B09BD7BE26B975CFB5F1762444C53CB604A45763B67768AC526
1DF9C7E081A7F60049B0EF4E1912DEA25281CE4DDC8BE953FF658A1117CD4434
A122D6BC79EA3A1963B94B9903CD874CF329240A0A080B93847EF4A6D9FE1590
71334AFCEF5F9F56BE7AF8FEFDD9A275F88659D2ECB70F44FD2643BC95F886D6
9F8E5C9750C4C9E76545696CAC80421363FD81AB15094F74295A600EE8A42977
8B0570F27487933DBBAA82C5904BD2170921D4B2CB846E609078D5527C1141A7
903C924ABA53A4B5C7C390F436CB4C096165F9F845E184CC0594188DC4771B89
04EEEBCC20BB62DEAA105FCD48375C11A3207B5A381FF8E1C1643FAB51C16D1E
2C79A7488B9C54BECCF570BB1321CB3136656AA6256F36CB1B93A8AE9E43D2BF
759505E1F5F3759E08318611701B27F723F3786A03BA8515285CD7FB6640DEBD
ACC45D477D8788EFC79A0297F6D18FED9656B074B08F2CD31FC681245C724A8E
754BDA7CF80902AAFD2B6018DD0680B43A5AE7900B43027D002C318363FF20B5
A0762A4A9A546A212DB60D5242FD1C2D25BCA2B4E479414E699B812685A5890D
C3FD97D8C2434A8886D583181CFE693F96F674A02769B1E1F51667A11F7CD5CF
8FD053E67223B64D740B7B5746E193B5F15C9CAF3AF3BF89D94C253CDCE59227
2EFE43323DFF913D8D5F9B31D94A995E77D369B625ED15E573C039463C85D6D8
0D2E3F6E3D9B0F29434DB3C314312748E0A60E83AFECFC0279ECFDE314BC8E0B
6C0895146C40ECE0760D71E25054717CCAAF6D21D4382290691DBA3D105FFA49
D59C844204CC485B2C61FD26C033019C4ADC916AA6F4753081FA1D94EA99EC33
7B400379BB84FED0BA2E719DD6558D875B609A4EE8EA87A10FB585990593F20A
35C876029EB65E328BC84527AC2D1E06F8F45B9A4E0A50A5974B4E84FAA55133
861783867EAAF8138F4275ADEA0A3E4C5F2162ECC430C5BFD22467E3B7B7EAEC
D9E3E13E5A06C67184BBCFE30B3C2DFDB8B6B023CE7CE84BF2C517B5295BB70D
0AE365DDE57674C4C84D1F697AC661337A3505E36F62EDAAC717F70F694D3945
998A9EE63BEACBB06368841C70B46F6315CE9D47B1A0205450B19364F44ADF11
A23797648C0BE5767B20B56DA1BEA00B2640454A1C0FC242551112D54FA17CED
FE34356C5FAB68358E1CD44317F66105F277E5B6745FF4A5CB0EE90FA42E1529
4C38154262B37BD16AF15612ED9AC48BF60CFF85EB410DF338956B813E3BE2A9
303CD76B5399BAB5E6826BE84DC50E4490C70521A77EE734890C67B2C91F576A
78564C9BB7F666CFAE1CFE2EBC7880134F6DD446C04AD5F17FCD1E87796B6F67
21ACE5F11E54305CA0C3E6EDA91ECFEC0ECF0B5340E0DDD17A6381B5847772F6
59B9869D066EB184FD390E499DC9016C341D79792B1DA8F972FBF7AF89198BE6
437E638FA4191CE16E037D7CD767AE50843AA610583CC318C66E25A453ABBFE1
FC07FAD8542975DA911C65CCAEE98C14885AAC9527FF3A91D6EFF971666FDD84
471D287F1C0CCAC0653C734F0C5E89F868673F38A6C1392EBF4E135CC6513FDC
78BD724DEDA798707DEC3CC439F65980BBF08129FC9E798D02102F63CD12D9DF
D15045C345839AF0A2A207C56F3D57F8DF72D9E9727DDA9DC6806E9B9557CB48
44083E1E189796C43757826851F98A6AAE8CCAF8786AEE3E1072BA0242779D9D
0EA35D4BE263DF490DC590052EAC34F2A46BFDF66A3DCA3C092A691292BFAC09
A0A66B863A8AA5F19F3FEDB608C178B9CF687F6870B3A796EDAB7619A8A1DCE0
E4AA6C193AEA970F45D01EFCFBBD18095985A0FBCF2E2FECF757FE7DF45F18E7
E2CC967C95F21DBCFF36D45A5E340B8A23733983CC2EC680C49B5AFA3CF2E6DF
20B979EBD844943D7BFF7A328EF957C8FD243144DD12E6C40FF0C0FA109631DB
82CE149A89C4155F366C2C1A9FCF409286611D14F2F207F0211A155FCB44F4E0
3C0F0386C7635309B468D8FB5D2F63E01AEA9875DC1ECC2384015BED56819D5A
7AF7CB389BC5900C4305DAA8FE1C2E9C22D6B8FA2AC9457D89B0D17AAF81C1D5
83739907DA39BA7C96926AA7769E7702305CEF74EC07C344EAD19252843B5D9A
3073EFCA93AB9C60B4696B15B5E0DDAB682381245DC37D8E95406B91B7CB06AF
224E9228296C5FFA28489391031EF6DC2E9040E85D23934575F06D398053CE37
202D9686FDF1F0122A886D3AD63FF3801A262068E043BAFA2CCBCACE0875E368
521C0D91F65AA3DD11C73731DDDBFA0A0B01657E770380338123C7AB64A3EB20
716105362897B7DDA2E38E62F8B9B96E2D241ECDA46FCE451FFDEF67FA97D57C
E14A6AD33ED60DCD760A4043793054F6D8C98188AA020AAF03297DD2D185A8CD
FBA9208916C644A7C8D68B461FFC0AFB574BD413B5B56BE27DA51BD269F5A96C
3FD32EB20731BC9420A1979C1AE02943C136BD85269B02B10BCD4A2C4DC32B30
3AEA6B90706004ECB3764B6430F0C5C494F8A2F0D737557A1B3BFFF929DA5799
3BF9D3E0878EAF2A8ACE3679E2524F1346CBA9E958A86DB67F479D8DB8B6561B
EBA4F76A0AD5DFDBA6EC952A4F37948B63263C178F804230788460D35A12C53A
212095E8459ABFA31C702686D4DC72B74618CE98CD3A8FE526D171F646510C38
43413CE860467D7CC0AEF52C680B8CF1767915D3550B39440806E12982F5D681
4AB81011538DD052B2D4C357138B27B151E8D4F7D855C4EAE8DEC82AA7776323
8B252713C8343C21E274982FC4533EEA16716151F6E7C12846E61213F8168F3D
FF482FB7C9109DF46D02E2D346239EAD13D61857519977DD5BBD317B3402D11C
D481BBA2272CCB9509A00BD80C0A81B108DB3DB41CCBDF5DAAF8019301999864
271F8A4AA5F55035A207FFF494061C13B959EDBD7AE2DBE249BBA0D34125774C
AC70DB0BB8F10668A8CCCC9DB2CF6CEEE7B2D6E24ADD3F8CE0A696C359A9D237
2D5BE1E01AB1EA93615AFBFDD29DE18C1A0CE811E0CA2E52A0EBB9F4998D40FD
7B001C66061EDA316992058FC36C23CC8E7F505F0AC9317680A137662C89E288
479664226DBB6F1171F9EEBC7E1273D0CF9CD92482747C5247FC949EBCF49A26
35076A749642D5B3A7B1E257EF59082413742ACCB07F986788CBC14C2A572372
42CD799F3D710DBB5880C9D4456E24DCD24D67DED3C5ADF5AE9B33270C600E78
F1B805D84989E78792EC3F52A07BE5C8B37D2B233E6CE581D09253F6D6ADFF67
656FB98D29DD36C8D4557D1CC21A3B4BCCD2A5984EAF9D2A93901A1A0604930C
96B3945E84C8ECD8521DCE96F73222B5C5870276265C795C55AE4E6C07855A9B
C2FBF17E886BEDB224E4872057819EDDD073B14933FA210AE26114ACBAF36A5E
DAF0862B88386A5F6C8B2141EA551B121951D272E07AEAB1F2D0C9BFC8600FC9
7EEB77753971D95CB8E622B6373ACBA6F0387CA03AAF347F7EF05FF02F58A637
9CE74AD419B077F1AE8D169BC18FDFB2EB583B281395B2F35826AAAA4737FDC0
FC2D92581F94F9B8A2B095069298C245C2EEC225EE3317550502994505D854B8
4C1913F5F6C757234D7EDD3618CD33389BB0DEDE94C6D248376693092414F780
48461E82A63A9A4DBB224E8F44F1371DAA0E04A7855F0D695622E7A1C371B3EE
CAE6A64B2272ABA4EF8AE4AF6442C6388024212A317175BE5545914F29527629
DCEA6EBF0D04FF08A23FBEF19523C06F18C3A842411785C1C2709260CB18704C
1D8090B61596674B6BE12B56A9E6EE5FBF33897F01997D2649C76645BE24D02A
FF56B18D6E2E1503E9DBC77A09C7052312048317F4628F7570D3DBE35B3F6039
1D13C26A4A07649E488A00C554429F72F81976F8106FC0C276CAFCBE5C493F0D
F9044517835C5A18B6EDACA49FE842BAC657525E2C91A8525079B97D9FA6FE5B
7DA4A2638139FCDED83AE512C9CEE0C1C60290E3616A3F022433C3F18BA05157
3640CC57E6FAB11F92DCE88C14EDCB7AA60FFB212AFC7128C270B7D38E51CC30
3F5861CCDA6E28C1B1549549FD755518688DB56FF76362FD9E1C29E1A343610D
BC0452FB99C4190B4297DFC9B4A2CF19A4AC6ED7F7E671B03BCCBF26142DB2FA
5FC7D31442097396CFFFE7CF0CBFBD33673C5BA58E2B021580D63C76BF196391
8329653AFD0B0E5186F6949A70C40B3E6AAB5B0440DFA5DF828B097E7E784424
6A646D34D0D7356F6E3655650A55A7FEDE1FDE7BD992B55356055A26A1870924
A2AA4D46DD8E00C8781645BD3696C4B6A1F1F83F5E5F4EDE5AD6076EF2F506E3
DB3D67A2D10FA038561B4D714B0DB8160BB685C2140498296402770DC7262C71
EEBF9EED69D0575D25E41C2094CC2D37694850ECE54C80D2CE7935851D1EFC16
16B16091EDAC559A220F29084DD86CDCB6776FFE1F384F90F1B47DB4276CE065
32479E48E7EBE4E9D583E52C3488C72C90387B5DC63F9284F658F5DB3CFDD301
929BE09F85FBEE99D21B512779E121066B4477953B32235DEEAE54372558F00F
79493DC9242D93797DFB1F8C27504FFFF0BE8E237AD5EECA0A809F8EF09E5608
18EFAB51BA25F77DFA44AC31DEAF4E4A4F014CE79D56777A780D6AE247B4F6AF
B89C6C1A186EEA1CA1B99C05813BA3C93DD3ADB200C6C26D753631FDC7D428F4
9273FAF4D7721DEF363B65AB01AF8FDE248A30C2AC573E47DA2674A7B1B5ADDE
8F622B8166EACE5F1F73FACFF492D46E085D6B51FD3E2EFE26A12B7895A02D80
AAF49289DE4F4866AEBB5C2A504B014DCE8D922CA473ADFBFF85285CFE4B7A00
5BDE68CE1AE6340946D23E446DA0FBEB5F020C85BE5E6BF2331624DB3C513250
CE68293B2DB724600C74B89E78B4EF39EC5CC133D14C2E464C13F5C41C3C5F83
F01CD84E223D306718D250574E4602EC0964E1E28AF3BBBCE52C2A97EFB0D86D
D9BF2F3AB34DE24D16AF0158EDA1C3B3752CB69D37162CA32B7B98C60E943558
4AB4642E5102B01F5FB9CA6867E652C67ECEFA041D118A83131D9494C920B4FA
5FD6B15306114179484431F2E22D3677374C15A410AC5AC35FCB375E20BD3D28
3BE2AF95BEFEC249D0492D0BFC40D8DF6B9D4B8299B2399045A27399F5569529
861FAEFDC91E823E0A0EA92E7F1118BF00728D7B70BABC5FFD5F430DA7E22694
1D3C4B6C26889A3C917DED24E2115D16B2E47E3DC85288B93BB635F8203B13C6
F89B4DBC3027B3CAF2C6EF0A5000F53914FAFAA59D37E9CD14A077B05AC1D894
BDEC87BB96D4ECB22377DD6B19F8454D63D6D7B882B2A0852348DA855F0951D0
FB8A93E4D56954A168C4914234DEE2C2587B4F6546D215F1257B776B472E4C5F
CDCD11B56ED314ADCB5745137310A056B151C15F895BCF076E4B6F85A94D6211
3CA858F50893E391398AB4EC04059368E01F0739ABE2D95379B4A1C147BB4682
1BA629F53BC22D8EC10EC4D4B70F3A2B7CCCAD899A3107F56691B2D37562EAC4
49E839D0751AA4AB1244D081933C69640F93FA574D342521D637697A1959D53C
C00E583BFD06A184A94E7EC5DF47673236CD23775C4D33214EE977154927F976
28D567C24BD41F2637BCFFD66D79B090D239BB28B04F50B338A6E4C9E8D54121
CA17B97876FB07597AFB867B901CC1D92818FFC776DD40D3CDFD8BE52F1D1514
1F83FFE5E0875C049C95D62D8089E4AE7B8D46F33B1E073A873B52BC1FCB5723
D66953BD9D0A313F39A6A3DAAD30374B56FD30C60447FBB0C3A3A15EDC6C8735
5C5F7C8F822BB62206CB4FA88AF922E0DCFDEF73874320ADD4AC1C1632C8A212
36070981D64AC418C51DFEA19A42AFE6A23411ACAEDDBEBDA6B8EF328EA7E5E6
F658D88D55F4B2A93575A440F3987FBFC0689BE4C0407E9819FE68FC2C4ADF33
27289EA1C3C455D8E7D7F6695055586AD4366A75DC2B9B672D764D2F51B2393A
DC71A36AC0FF19688AAAC4A595BACB1DC80EE2D091640471734405A64A1AFA48
EB5983351D10405C55F6EF17EE4D84198A9E10E110155CBB49BF2C28599EB66F
071FFCE3410C547A9B74D21730CD741B8F28EE7DB9F2761DD12FB60ADA0247C9
FB6C607DFBD661C1D2677F77D4430A609D337439B474B247E6D93A602F5EE639
C1D493EC4F3521BCC425AC9484A4BA26FD326768E57DEC8F6CBAD51D1B70C1D4
3CC2A8CDFBBBD65F44E2866DD32FFD5ADCBB44C4851CD927C5AFB8F04083B4B0
71D47E59ECFE2F8ED23A1034B09F44B4CF0544C74A96F6CD2A907CD9398069A5
73964AB81D07DC27DB20C9F233D885BD42C04DC9300D4CFA004F89A60FB9D1BA
877673C46D2ED30023EB3C9C310FEDE003EAA2E80ACC974FDAA2E22CEEF3B097
F7F2B059A76714D5CBDAC0100070633FDCE592272ABF140EFE324C56D825689D
816F510B080CFCE3EBE643596E0918DBB6D8AC9E34D9D40FD4B5AAB6D8AFD069
5B4815384EFE203BC95798D3358E4DF2025456E25168D883BFC7726DC729CC50
70524D1BDCCD70127D23258B4A00740F47A0E36FADBDE92071668E56BD545DD2
1C99326B12F418AEC10A09F0C6F138820DBBE8CC601D174BD271279B16E927DE
87A8D4ABF3A9F43F06904ED2016CC43256A16ED53D508AD2C170D57B3C729ACF
9368F03D8099B16D8A85518AE30297EAD232378DE800D23BF82F86200DA18167
3C77357196AE28830F708F56A8327BB7FA5CC1E56949F31D5077D68C722349D4
DB9C5DEF381D0456CC203C348DD73C1D3E00DA6175AB87E1A511A61643A607CD
D14F0BF896E4F3DBFF48E80CD00A3DD8E93C9C279080FFAD1B25BC739D4303B0
CB1E0C1CAB3C9C29062266F3163CC283F2D87231C66B72A26F7C5BFB146E5B38
643081A91DA1D968D669C93034F758606E5E751C2EE2B67447BBE17AE78CC582
C4DAC17E79B6D697D9F368D9279DF4860951277F5AA4CC2CC3D01782E74D45DD
4CCD6B47CD7AB46DA2993176E0475851AFE225349BD9936E274ED7A5CFCC0057
DC058EB6226EF1B9E6113A1C31010A4BBD104C7E5AC057FC276834B6D297D934
C7F01CCFC190FF085E5DB40B20F3E006A17CD69552295529C8414B6DCE99A30C
A2FCFD1D6E1743E2EC204EA0883B4272A2E6FFFE12A187496A293F10944053DA
AB56B1075A0C3832220752D104FA14EE890ADEA1FDB6EDA22EC0FC539AF4F8FB
11CF19C87829EF729569F2DEF33F9469903A4319D244F00164BCFE6074C4EFE6
1F9F8E88832737186037F9E5AB161B8A233D8599C94A7162FA00F6E05E273B5D
B89549315DD15C4B9F61E100351A89F44B6CD66636F5967D528C51C6EBFC20C6
B38010A2CE50D98B3E5F08C01C16BF373060EEE0A9C1A6D0AE50D7C66575EECF
FE2E6925962EDF958E769E07F6875890DAF09D18C3EB567019261C42C5D4291C
5391F28BA80F068AEB94A7B9E53CD267694DF8BAAABEECD282240C162C5395B4
16A62881D378A00798C6F183741A21A7C67A2462C77EC0ED1ED7B6548E29F530
7475AD11BD75DDFF95F564EB7AA7581CFB06A38617882994FC281206FAE8F5F7
52A36C01D95CB3DB66B016182940F522FFEEB4C75EB7B3A707A6D447DAEFB625
0ABAC16F5BD14D89C40665A7A04E67EEDAB237208133A84721D8CD29DA923F93
BEBF07575429B6988C81065A6869DD7A1B5E76D414F840BAFC74BB84483695C1
D6DBC323F6879A73F8BABF1AE471DA2362995EA9F3E0902D375208023AAB9661
4FEFF85A48B3A327275F7C9A433ABB0C95B1479EC192371B70D71E5ADF19506E
6A986394156D044597A176C6AD105D966EF357424973E4CB70CAFF6125728794
E0CCBC968754048C01EC7E5C529AF8688CBB543C066F592D548B4F0E0AB5EB81
214D5EC5ACCDF2C02B222AFE2696150AE062E40D2CF10D2FA439CD2633CCA615
0A29759A2B9606E8E074B6742A1847C136340CD545E405B6B9C2D22EC26F9B27
61469B0EDEE8BA22F029985D1059F235BDDD5F24949CEB89A93916C86B2A9DE7
68B889CBD3A7A81AD20E8FCD66328F497DDFE297ACBE31894996EE66B0DD4B52
1F937A458AE3D73225AB2C051F45B593D47508048E8AB0D05E92A03FCD28BA0F
93D77E83CDF905D1B866D26F5671725C1EC2AAB1364E1EBFD780DDE75A8607FC
ED3D443D30BB1E4DE561092DF84A6734B92BCBCF272663ACFD83E27409C51836
34825DACED6F47059CEEBBB988E953AC22110E3366BC57936D38260D23CBFBC9
86268FE1EDA208C1B92F4180604185003A3C5705F7C6B2F2D6F91AC62749BD9C
54F6F18F0E317930DFA18ADFB81C8EB75B0BFB3A2D301EF84D297AE66778893B
A825CD9D66D68C6F4A847BFC90356B55FBDCA1E23E47BCF2C96A9C58E53950DB
59E4322B6AB3A57E4F424403B407AAF88101D7E9CC89CBAD30CED00AB9BE5929
71F355C21312DA7348E88BE9A4596865C9D02DB9F8C32D742EDE799B8998C356
4F42D2F7F2933BD94568769C9FB1AB088BEA49C5D06D694516789CCEA510AB3E
173171554DE156E4428BA4CA637C2238B7ED6634AFE0B2C249699E2125098176
388459F7E32F01985BCF3D9493ADCCB3711D7D6290DD4760DC8E99AABDAA73D5
4689812279C95FB7A4F7E840DD53DD31841E71F5A2332D9A7C14479025FBC644
89304F694DD350F6F7F0127C5A92A54E9D8E50C05AFF61EE040DFC122425753B
66C370B6EF2393B15EA8BC4D582059B0C219E34636F3AD561C22720C0C78F40D
46FFD5B2E656041A6E166FDCCACEA3D4D346F919FF829316E7B9879BDEACB8F8
CA0492CA1038FEA46B99D05AE5ED8E320805347CC18777C1DB8F5B0DCBFB9C8A
95985A0571E67A52C449F63242AD35C5B3A99045B99EC805E25F46A0C1D1C463
A11B0BE8A05CA56FE842051FE87EC913E4094304B19397EA7DA862DC3D3E6426
D42279B1853D20A31C612927A0B802610A0BF6A7DDBD2B1241785EE4E3C12C98
13DE63DF0FE34CEC934F99C14E909440B5457AE748722607ED75A4D20EB11412
D1012AA475556665128B99C20343A4D7B5C08967B38478FD9A143A1D7010531E
C3868FF77CD1107EBD32D2B3818E7FA41C0527DE436726C96ABEC6A30A41A99E
5E09087A89E255BCB6B83201298C0FA965884B97EB5F467C93A2FC7F82A0B368
2C1D7B0CA5ED1F9AA4E4AE14D2E1F5A9C868442C5DEC207A5BD9D56D28DF4AD9
0CAAF7A0B94495594710F7BB631D9C72CEDC372F71E398A48E5761D90AC1AE86
E40B3070A8741A20F4D17B997EFF71C0B00B951A7570A341DBF602CED95D0C1C
ADB630138C9B03ED2F4592D3D38E10A40C93CC3CF67B4F77F75F2E2336B76A11
D14A9518E4B808DAFFA4DBECACB63331266D46E6D7F7EA561AB9F7EB03301FD6
94C22142E7DF664039447C0B2F77304015926F106FDA48B752AF11A279BA06F8
21525DD0F47783117684CD06218B81071A62AE7E7856ABEC91B8CD1DC24AC1E0
C472636484AD85E62A5BB2568678DE7ABFBA623B59103BD946430A8B4B4675E5
98639F1E9D877F10F7C8C0EC18097D9E8398B3FD21D1FE47D715C304B749B5A6
5638BE9899C3EB2E91AE8EE43F8D077D340DD31B820E7D29CD605A2226A6B95A
84177C7FE352C7D719289DAD8D7AFCB06EB20D516E86F14C816643443DDAF602
44F2AD7059329909E51366D4768350919E6C0DCA42AFC7E0EEFDE88C67501C47
B6D7C1400C3EE6688FD5D7849B502507E42EBB712445052550944E73B03D45C3
9AB7DFC251A783BD602C5C9614AF82D00B6895632E14BA86B1F60CBD8B690295
5FD8B9DF74AA62D786A28F95223B0DC0A67444D7DEC82A1E46EF79FDC5CF1DF7
2D2275F3857BFBB4FE76F6971478ADD828089EF0860DAAEC478B6249A125B593
17BD77A2137AD9E2DE4CA0AC1E9AC3B8B92A16F5963FB1EE786C28CD4389FF76
6162CED489D8BC112D2C546E0ADEFCD3D6459B5D9116FA780FFE181A696FB517
77C9BCF28C1A6B27CFE73425A804B4056AE560F15158724EB5724E562CE367D9
6B03C0B14F5DFD867ECDCEA772E12759994DAEC9A3D28BD9809FEE07FD469D98
961546D6ECAC5A7BE7A8356C867794DC13E51E59F5318F40150600EF901997FA
7F292F76A8F584E39836743766E384E5876B1B220AA648F5E0E4317BEF25D777
4A8D71DE68AD7E368F8A74776D9E86917785258CCBDB883B1F2DEF24AF7364A5
6FAD9DD85AE2E3CDE1A4CFFA3B012398F3C2906FA557F6F211E57F18329A7824
A3550E96593387FA6FFEB83710DB33F0AF507137C74FBC44D41BD71F854EA128
5C9898C63CAB854E80B0886B08A72B1D7674BA99FF6B0FFBD6BC7ECCEDE0ABCB
830AB79EE730512BBDF848B11252AFE1C9317528BD564137FD5767DDE33F5BC6
DFE0302A3F923AEC792F34C5A9EE4A2883849E7CCB240D4708047C91637E104E
6E0E84ED6ABB5E15F4DF7D85939664852D66255D2A28B0EA534319E195268F9B
A8AAE264EFC9B18C7002F76150B70E79387F8C338AA7CD18B323BD957C4C8051
FEACE2AE27DD3DCAB49534A03B870F677C10ED094F00C582E77F6E21A71D0C31
9A466880196CF0AD620CAA7868BD54816F6121D102A8E3C006982B95271E3848
78E4B6991DB3A90422F7D0D4A260E39608EA1CFB78F69F2F4C1262A94F8E3D2A
CB0A383AF5168E99C8C9C5984F546EA3EADAC2A3EBC99B93533EFCF0C6B0BB98
2F75ACF33109F8AE7ADE4954D0B1E18027FAD27EB1DA256678EE073EE3098DC9
CF8BBE54D707AE1FD72E447E551D1193D670F151AA96F678ACEA700037B2DD88
850EF4DD9314C0FEA2661CF8688C3D53F22AA69CA16A6AEFE5210979A18FAA96
F35412E6FCF4F9AC6B656418072A9CF3DEE42A9546DE5EAD908F2FC9BABDFD59
9E5DABEE0776B1A98FC2D040C14DD87114A9B084D11B7CE4A11A816466C949FC
B88A21E889779169F0062E7B03E4BEDEB3910CC58C443610F29206047613EFC7
DD4A8F6710F56B06632BB1E91A42862459D24BF2F6C832E1C6CB2F55A12A0B8B
BADA91A7C1C1A1878975828775FEF3A86F55FF0EC9BF7AB97E7B9F607188F0F6
601C079AB3392E75FD9BEA16B3FD22EBFB9D13E7D7EB59D750AC989E43B6A83B
C488F512F8067175476917012FBF04B513F970A05A27FFB38DD7CB03F9DD099E
6596290A1BDB55897CBF7F8B7139ADF77EC4DA414C2CC5424CBACBF5144171A9
CE391BF6D85443E394086F1DE6749FF3C7E8EB48DD1A19A302235DE926D229F8
78B8A6B915A68263F172ADBF1105A77651F118824F6CD00209EFB60C1FA68A05
F009889043740852B4CCBDD37BF728E5648210961F7922B29CC828ADD9B2582C
F6C3178700E56D15B1C5405DD4B94E0C5EF66E5F4252E5511A19172AE7E16B66
0EC7F94604002D6AEBC8E4F8995AA5159E80FF68EFB8A039F1DFE9775FBAA149
5A572719400771332BF0117B7608AD1D765F168FD2A18582D3204B245758ACE0
6AE6FA4EF91BFC2A2F04AB5D16860C5F15D56AA2AD3840526B26130180B89DC4
F46FF9216F1C43F4414B7C12B4BFB8CEDA7A20FF9AD7A658A8385E5F5BE2ABC0
850EF184DA42654223C32BBDFDDBA1C764174646AD7CF22491D8002C816A464C
B9910A2F9AFBC83648300C8C4E43B328891860E696616D2265A7C5C62940F92A
7A466DE3510AEAA161415478975E25D1E928C5867A495F88565BA51620E9CF21
7F7B9B18573B6CBD958A80FA14221F9ACAE27FCFAAEA1E34B8938673AA6D760A
80C38EFAE41268C40AE236D848BF0FCAB713EDBFE54E4BA5BA08543D871E0A70
B8B42D8C0FDBBC83D0067A8069A068E7AF13A4937A50E97BD02496F62FB07781
69721B3F1714B1B627B6E45128AE9382D0F6F1B098675BF3042A3E56C8439EE1
5B7E6290AB1C4B10165DE8C3E9109949A8FC60CB1C740EFCDA2034A6E5CFAF53
CAF1C31EAABE44B4E65AC73FE993F6C8EFA3CB01B31B63E3DE2D592079B66CFB
F808F1EE897306A92F2BBF8556983A809C6A252FCF5F1AC7EE007BEC5BA79B84
9449A58453935004FFFC8F5B183F707B61DCCE028C20789DCE2539DE30CA17ED
4ED3CBC8FC40211D1F114AF6C6B54AD528D7AFAE4A2886F5EDB195D6F56F1BE2
3D9AD3885E2CF29FC8866B0F82F15A1B00D1FBB7D9F48A6A8C33CD7CDBDCF531
62554D7F55E30B7ECD8F3E0397E9EE664F5D6AF7AADA2681AE19E5EAC8182BA8
9C9BEFCD87DB55AA5E0AD1D2C398A278020AF1A478142AC751441CDAB0F96FFB
FF9461ADD96441047A3D5FE8065F6783F91A3F9A222863EDA09E64E8A4E17D24
A18773D3C5190CC50D7A2ADB38EDB790CC444267E871E08B1B5D45156D9582CA
59F8A49846E440FBECF73663B5D810DE8F57625819D86D7AE834D7135E30F7EE
EF92660D995DA9294C16BED1113CBCC18AFCB5968C06C9C158BB77EC34B98BD1
099644E30CE5DDE591CB216E26DACFE5BA36DC4496F0D49D1161EACCC4DE5819
A86D36CFE3D41825336318DA007E49C32BA4822F3C035A0D43F6288DBA2E17C1
9C9270E74064381314CE48952D4C3BC45AF1C4FCA0277DA2CD4148CC8195477C
862FDCC46EAC72CE873D9107FE0A031605CF6872260A0C8089BD8632FB6D3C67
E6A4D8646298E229C517E89E253C6F717170BEF0615D7AC52C9370E6FF771E2E
02319BA2FFFC7FD1E361BAD8DE2B1AD0B30D5A2B2DC4A6A78E59C2DC64EED83F
7858FA73ABB05BD003F42980FFC7D49BEEA72FDF4B5AB8E1B0DC311FD77D5221
0EB2073CEB06E37C2E3446643AF9F1BCD69552B351076B53AF9F34FFD81F06D7
277C0D6FC28B5434D6FF1A1EEE3D5E439D7D208E25210232A7FA51D4E05D0E33
74830B8087B358D2B9C3C1EEFCB46E6DD65747A981438EAD81C85FA3CF7A5510
CD9D1328CCB4CE026622460A1EFD5A50F83C296A671F849A2C8C9DEB1846A384
DA00E5787E74F8896687CD562A145DBB7A0CFCECE8AA6845B803651CDE2B4270
1BCB5BAA28B66BCCFC7855461372B4CF5400F4B7BCF0D8E4C6BE7E57DAD79BDC
506F66305DED851BC8F616A8DC1503B769C39ADE17F24470C4A6DFA65F4AAA7A
8E15FF3295128F43F852E00722DB35B1CEC9ED226397F98EE646BD9723187596
489A8894E0373BF6D0E1D56EA24BE998882519425956BA861357256AE8242141
83D73D7948A844ED09C2166803871ADEE2CBE4AA228838711C74F956CBC053D8
661C4F061141B6A5182190B918F3ECA9ABB8AE7CAD0E7D4F2681134FDF0648B4
49E97F6C22EC02CE64CE9F9DBE52947CAF49A78DC59BCAD8F848007099ADD877
6C15B57643B5BAB4968D65EA84DED97E6C129E8DEA5117B3C82C11A247582DF5
93A6ABAFC23501A34BB3758EBD90A30EEA3648C55D7F760E7F572991AA890A8B
6CB720A8FF751E0626BAED7A021C89BFE6D74D11AB2D2D8E197A59BA2BC1A5B1
352E3F50026F84915F331A5CC5FFB126553EBA84AC04C92520C4A49A3C4E6440
CCEE637518F5812EB351B655815740261CA4BD4256B7E56091E388284DBD11F5
425FEB03E72D947F96DD675BF05F25ED650BE02F6612384C8438181A8C1FFC17
2AD2E5ED14C9849A1475958C8045F32494C6067CE802E9FA873DA579F1D97CF7
5AFB480E9816778CF55D093AF2E3567278BCA1B75F439B211312359DA9D3C43D
019F687663ADA3764F11BBB2FEE232D4192670B996CCD0A712E33407446CEAB9
6221D7B3F4342FCB848BA4DA1DB50DABC0C0F1EC4248CFF24B78C4B4DEABC28C
1C88BFFA914D4F014978CD1B82677EDFE86FE9637B089779E5FC0575729CE67A
777CC63C4C9E2FD5412E17DCEE44849F4021CA494EF6C2CE64BB429C542FF8A3
2108F6356D2D249929BA4C2DED2BAA764A41DCB7D006162F25A8BD3F121C8D28
1DBFB9C2BD9F6C9D816102A1CEE6797BF8BDE5D7CC3F8237395F6037F0180333
B6DF2A903A0FEA2B8B3BA7C089CCFA75E93D123597254F894A95E8F6D2EB9CAE
B51D021C4A341B3FDDF6431296ACC669D10417407AC6A0DDA1E77D37AC83F099
1A4EB12328341370D560276298242DDCFB5B93FEED8AFAE28D57282FCA886F67
CE6662153FF2FEB207713A73584657E7899FF3674AA830A0200079C13708B8A4
54E37B9451DC6097BD966B610AACE9B8E928749FD9B2E2F61230B471BB96CD1F
1A1F5EC0991481689BCC1AB5388D44447BD7474B21425A8CA4862170963EBBC5
C00D25FF624E0C480DED2A42F8A135A1B5928F13CD39A1DABEF68768CD8C0999
11E6938BEAC7DBE0B4208D099190FDBF584ACFC617174593E8E4DDDF741D2A94
B524902D27EE9255E67BE9A4D695E13B9155C9AAB3FAFEFCD012710222AF5A48
146698E612A06B227B73911F39D6E41D47F4A62E9FF286BEB3F685B182706FDD
8CA91BFFF2D8B7FE7E80B385EF7F85C032D72380BB0DDE6004AC331396C355DE
E73E6737F76FE958A2CC6504C03DA4CC24D6B7F488972C8C0869ECFC30A086FD
D8EE585F1DAA9B5125285C6D792A395CD02C616B96E392A88A4213531D051C76
7D3B3D3400A7194D18A12FD57052520B100F846FA1601245B8473B7FC0C7D2B1
772E7B28A6B86172FA019A37B4538AD8DC63A91FA93A72C550985941368026BC
672ABFF693C88BAF5CCA39AA4FCAAFF4294DB35ED7C83A5DFA14CB20FA6B9292
A5C73A54F4B204C6C7DB6A95CB45B8ECBF5953B841058296B4C08998A283FEA7
AD73D4DD656B5C08B3560AA67497CF88B2A28926DB004C1E0AD41F65275F6B53
16C8B3B83B23B1E3D0DD541B3C4F2E6F11CEC5622636E519E2E4D6CD14EE7B60
25241B7E82CA6B17020620A9D16228B6C251B65345692C8771A1CEF2E970C297
9FD04F4154BBB997D7104146C4612F5177674AA5BA3AFD38D3A5426EB857B352
60A8677C9DBE854ECE00258E251200872AAAE1B72B985A61D181867E44A5203F
55D02BCCC3701BA429BE79A96110F5B5C2ABDF63A3DFEE1BE5747DFF96647229
34BE187244FEA912961425A18051A0C0C4BA3418F226100094B97CED7DD2CFA4
E238D325FAC477D2BF216A9599E4081BE9494718C56D998F9DDE9AA52AE871F3
8E9ED1AF30488219EFD5FB94E8C012073C0C3643B192ECFC1614475E9EE4972E
95591E9CACCCAA3F44D1C970658D062F24160B0CCEF0C9D443C9DC801C2F71FA
348FA6EC9F65A493679899B7FDECC7A4F77C420DFF15D20F0576611D2FE274AF
89528F000195C3DA286BBAF911140CDC8A34A0635149BDFF224762F130684134
5D6CD72B490D393286ED24B209273948206C1AFC6D9F844806AE3D294D5CD41E
98555C97C2C8A2830F6F37F2F003FDD26CCDDC9679E69AAA7A4D231F1A5FF474
916F3F6A916052232A2E9B617E61FCC35DF9E4EEA66B2470BBACB33B7A47EC02
2E233931F34AA4D4CD21584E3BADB2240EFD703B9C40507AC9BDA15602060657
E6BF7928523A9BDE8C8DE10543857B65649F842B2B627D86889068AC9DF4093F
67AA47ABD20BCA0998C10E406F98B560578D644771B177523519EC1BAC8F3353
474B77E7AFD85319701421F2BC698C86C271DD7F24D49B5510A11F21ABF6EFD2
832F147E9DDF4ACF9631AA03F773192FBEA2C510C7D4184BB470A29D1AD63820
97C8F007162E860C94E0E0ACA6B5B36B3F45A28FC6EBE1B18A8F2E911ACDF0C9
3FB3E290DED7570EBCEDE856C53E41947479CA5F96FD36DFE665192ED2191D00
9D8488EBAD77E8B398AFFF7CDA60FD5551AE0E7AF909F18A9D0309273E803A72
05A402012BE5E3FE8E6CC190CAF25D9965CA6F3E99F6B78D81ABE86B754F6E59
9939B1432225CA42E435C3903903281A34BBC6A4F37051EF8EEA14863B0DDB6C
29B2796753FA294530682E405E755A9125DF372A9868D85970C480BF95322E6C
ED3F85BF77F70E806855BCC715C5911D8259923834FF94529C4F1C4E512E06CD
5DAD21DBECE7BF20DDBD9E6F0A5E953F36C6AC36D1336481BF4A1C20016FD59B
2A600261A345F795601743094A47C99EE6375D4AFE16661DC1D6178515138CD3
D34D86220381096D5EA2D13F1B40AC96A2EBC3F0610F71AB1852F5F95048B505
DD5AB4FC8707F6AD871143714300F6AAE7286BFCDAB3C436584743D871B3DF88
FBB349A138F00F4AF5584F6BCC0895F5251D3A910DF8505ACECBB6F919ACEC8D
5987FFE1969B101A5A71706506E71315B27AA869B9E2AEF564F58A140A2D8C82
72237FE1ED4B44EB22E96CC5D185F48A813163FFA533DA1C884762EEB3EFE6FB
F3FED31EAB88E183BAAC6722FCA94DC1D225742A9C8CC7E1498CB5B4461C85E1
D18CBE868F5F1D836D10605F456256BD063C8CB35A1573A97C93C4E36FAFB04F
4FDFCA7D12C1CF6D41214EEDC7D7B7E919766ECC2CE6606420929066ADDEFFB6
7C13B4225E6729B2F08F48623367358BE72647AD2F72F496EF2D2E5A6DE68CB6
9B69C9BF448F92E9EB110E4A01476BE68E839DD0AC96DB01F059B81D0B81B6B9
5AF00DB190817A74BFFE3C9D10B49F06874DFA815E1F376539ADDCBFA52590A2
D371A59D8C94075DBEE39B4D5495BF1E035125B4C390ADE3581342ABD58CA32C
30EC75D101B42A7FBF6273BFDC40EFED388301DE3AF2BDFE2498E244C5C39C8A
F8F2D811EA34BE7FC3BB74FE308253845EA1AE6BC89635CDFCCDFCC75F59100C
CE3F9D7E263BCC58FED69052D9463EEA21E7DF0C921D74BB65FDBF96360C910E
80CBAA67B8FC1B135078799865976D71E22D7C32DD6A251141C84EDDAF6793DA
DCA72E2EB2814FB860B5A9C51AF0BE014A5CB26E1CAC39436469B813A955AF54
516DA2DA4CBA8B6B073EA80306FA8B6D4EE5DA9C7A689D4B7DD5D532AD6C18B1
DEF9157B36548F123BA9E4AF6288C4B14D1B8DC54F7BD5C2451B31E622284A01
9C690BC42CC72A74DCCDB20BDB661A00FB33BAA6CDA6E90DC1BDA072AE979BF2
095DF6D0D8504A997B22FD2E6D9958807993AB1C474F1586DDD520D8A429FCDC
A476EDDFE15E63310A8BE3E8ECB7D923FFA361467D0F4BDD305B21F5B2D5879D
3A11F2DDFBE39B5CE624045B5E7CE3B9FCC0F62EA6A6C8EC721512BD53BD3B22
0DDEA44E05C604D73697513D6D7712401E70270892C4B5F64D5ECD2030C3E03C
8D6B23B52280F1322CC891D02F559A6A679637F9C786C01CC2631E0434E68751
BFCF717B0C07DCF35F81759C648B3F5FDC321715AEDAF4859B266915E85CD024
EE4EB2E521BC819EBA8F6C5F662F6B216AD470061A1D580BF183C973CB1CFCF5
DCC02E481A8AC16AA046402E13CB38FD553CFA2504DE2D0849AB68A396194146
FB719D6A3D469C9722C46F3009BE86C4A9B1EE68C17706E232CED55ED4AFF730
E14BDB42A2170D9D1109320E22A11B13C415F9A8193F885C3E438F12AE5D345E
94206009C79D5E43A6A69628B40736B1AAFBADA2DE6F39CD5991372F7A6C195D
979E9E98C9A7924CE582EC2347A9D9D530293958021E4F7A64B77EA34F99843C
388AD5EF92932B818B1887C8317DDCF3E6A1999B444C14629A22823CB2A252D9
62B051BE2AD06C8870D1AFC62C10CE19B162CC4402E32B2CA8E867D68BA9DE56
8A359429E8EF0DE1646123C80571CD5420318F852377C8B3D0870875C1E2CF5D
EBC2AA930CEF5A4D276EDE9989CAA7C1DE6F9DD50A0BB1BE77CD1F6A839C8EA6
F484FB8B59AE39B8FC84FF6ECCA15AFE012EFA0921F974E439DDB8655B4500CC
494E3A872E66DC0E2BA8D9DC3E3E710B94958CBC0065EB1F0223E2A84D6AB497
337FC56D821248FA5AAC68EF9AC2B667E14A60E6FDB284E8137BC951DB040554
8951AB1F2189DFAD4B66E83DA13FE34C54310B556B6F266FA25980FB963EEE06
56C6A465E43FDEF513236F16F7B383AC56972FB6799A04FFDFA27210EE8BA85F
A9BFE3FE1EBBD1AD550331A953968EA2EF6E817931F3CEBEF07E363301E85403
A31845529C2185C7CBFF043619943C35FCEE2CF05E5DC2EE5CD4FC854EE96C81
F4D6C4D7CC22356AD9D308D29C7E9D61B2578D7AF742C8B6CFF9BB1D0E814475
51431DD3900AFBC5CB526E6C27F530EADA13216E4CD8A36EED8B67BE71DE2561
1DEBA01D9D7CBC77F2474F4DD6AED0280253F736B82FA245442E4B221D0B53BD
0619B6876CA08CB1D42F9F9C8991558624E237EB828FCB5CBF15306B08A82542
7F4940C34AAF6D1AF177A238168FD3279F1C956D3F56E6CF780B37CE39F60579
3D904FA4650A88775EB2A3EFF8F15591B27312E428C5CFC3A8B7AB4EC3858B15
B0435B2B3F3403803B198A6A569110EFF22AB170451CCC957D38200C595FF2D6
33EC8396772039EF79554E8AB2D6DF278B18B597D32E29595112B254A9096510
9AC7C70FF4AA4EDC1F246BC6F9FF86B1220BD43787DBDEE6F8E59150BF577FA1
489459944BB2967E130CE848C798AA7786282E1FAE278E6048CD6AB3A04177FB
9384FCC804315C355A4BB092D34EBD7F9DA33BCCE2C44B2C415BEA7B5EAC41CC
092D15E2CAD1D301D12E824D1F9E7004CAED6DBA20F6A900EC119A94D4F6C3A7
C06483A7FE49E9118C94F79ADB280E5CC3835A053C66DDEB73E854FAA7A181A9
132B96220FC2B93FBF2DBB687EA9986211DE163DD638770B5D939BD09C70FB0E
24DFBEF21AE3C1183FCABB2F4E65F5271B585DF211D0185413FA8112638EA01C
20D5CC716515591086897036DA5FBFC9C9E162E06BFE175F03CCE4B385AC65F7
160C34E2E500E84CDCA1A54883C6E03F3ECCD925FD0CFACAAC24D63687F68482
FDCD432115F196BB40D85BE24BFA523DC66D76DECF0DC93C68D26B4E5D5C920F
BEC579929FC290D35C4E6A9299E216052D7574ED8F99BFB677DA3BC1C7B0F55E
07B50701A7A98C57E1DE856A628A9B0EA9AF81B6CF75F8109E9C4CDAF0023266
89D89A8A4E41FD9740AE9B985269CB4EB8C5DF6A8456DE4855462F941DE00884
102BCC0F7095A3289154F81E0B0BDFE91844C22A3CDE08D6956E75B4856502EF
7F8503520913077BF0705FF023A4D3B63501BF8741B53F53E11846B9DEAC330B
E3113FA1E967CB03AC095734039A1C0F20B014C4741E86314C08FA5E4A36ADE5
C1D90BBF7AAEF7F05173E78654A2A624EE4AF83BE27151D12C10153203F7DA75
90DB00FB53FCFBA5AAD92F9492013D09D9DB48ED2A42519D57A88C79B55D644C
AB29554F2E31FD6843FB2628C385BE62E6ECDE3EE487E2E4CCA729FF94C41CF4
D96C33F2E14C6A08BEA0FFDCF8A98CDDB4309084D139218B802A2A2C8301045C
B8A0DCB6777CD222DA1439D90F796D702F58BDA215F6A99FF52CD02C8B852E62
78D388F4BEA2CF307C4E702BEC8185444924942FC3AF1C7DDE61F91C25D22AA0
7A3462A9E65DA15B939335CB5E6D7F8AEA648DBC32F02C39CDFA05F1E4A7EA28
43A74E80C59378BAE88F6E3E2F7009FF874CA16D88EE4F3F24366C5E90E01CFC
8309266358C10A7BDBB9CCA1B90CD02AACC2ADCBAFC84DD7EB3E84D6BC415E90
29FFC4D91744B542685DEF3C542630EA10B6CC177F0D960AB0288CB03132D983
9F2BEECAB1E6016EBCD11B5068CACB84F93E4A4E33E64D40BBEAAC3063B06CEA
F6A6E888EBB4D8F0E7B2BFD64DE8444DFEA393219DE16A413835502488009FDB
1731714A726D1380319DA373FD0C480AA0F859D2E0C3029C08B69285C436EF2C
C14484743FA4CC7B593991E8C537FD48982F63AC3F4146E94823D8A93239A40E
C2E8241E7BAF8ECEF3D916CB344477D7A6516134DBF86934B5368C099B59A711
4410C608C749D1B7D4949704F3585FED7811962AD08A138D163FE9B8E3A5C234
E9AF082650713BFD799A9BBD5663B86970AB85CA112FC15D99CF7C9FCED9674E
F8D260CD2ADBCB3C1D3811503E87EB65FBE4529729CB745AE203874E67B6B4AD
F5D51D6738CC44E9461FB09B9B2CA9FF44D29386419D4CE4AA05D1B9F055304F
DE0541624D2A61587A2D7443368FD6795C2ABC2ED198C21C8B2AF59BC7CCE2C2
8BAC01932FF6D325B5A9343826BC8B2968AACE066837AA1237DC7FD68F368BE9
4BFEF46AC492E1732454107080191D13CA7A2E05E38B524AAC150EF9BBA79A2B
418DFA93365125C42122DDDD132BADDCF4BA40074C5E5F41C71A589BA7AFC541
8E3A9ECC06AC2ACCAA6366E6F24A603AC3E2B599C47DE9C877069AD475E63F28
3F1424743D3A306CA495BF42E8534597CB055D31E56C12E8FDB395F7AC025275
2E55E809EBD3348351A19EFCF2E0B18A7427AD6537B6966512FE6A248A54324A
18939F34E3A2129E720702E88EC05B4F4B7E3077C259DA63FFC07231A6AADF47
9FEAC16D813DDFFF35ABD92E13ADF85FA7B62AFD44799876A3F47A320BA4335D
4C868251815635E6B48517CDEC5B733856CCCD1E7884D56053E4723CD9BD22DD
69219D2B09906AEC32C60E7367ADC93B600121A885F1D6163641116555DE070E
2CBEC7FDAC062CAF5AA4A6FC6571BA0948AD5A20A77B1E74ABF75AAD378372B8
B21AB1FC26A6D947548C4F2C98932B9F66FDBB2194AD2E091DD7659A4DE4DE81
2FC920354999BE94D4867670E9B1A1303E87203FCE327F0EC30F5124CB0954E8
D73AF94CAB7B45A0F793A4E2EF02C18B1D6DF5D6248E39B4D41E4AC20E053CBB
B2D1FB07407FD783BAA4C8860FAF4846D99894FA95E2F35279C06BC7A9C65D6E
17F25F51C891DA1E3FEBFFFFBB7464003A1E1AEB0F49CA8A2DE0CD63FF096C9D
2473B0D99E34449DFC5D75265A0608FACAD9D6E5D4EBFA54CC657CD19D0F6030
8374D161082D098F9C1D2F8B18819F9A401590FFF5CE9F46644373C3222F1CDB
5A775D80885AEDAAEE097DEC6D72320236E71AECD6A1C35514D8AEBBB24B4044
034791B7D7003597C4740A96A9278DFE437A7CA919EB41D7E8BC0BD4D3EA6117
0F94D3DF304CB6D57ECD3B26C607EFA14CF65A22F5837D99A0013B6993D658D3
43B6CF3CFCA0601F87A6CA1005416A02776D12C44612F4D39B6D5FC5E14BDBEB
AB995DF855C08081E51A75FD38ADF1D15D6A0CC02BD9E2665DA9C303B8067CD4
4377FA2A33C0EB41B10B64C1425ADF4234D75F56D48EC3EC1406810B1D9FFF19
AE1DCC2AA5081B9158BF3D670D86C1F2F7E12FEE710F4CB7B89DF8708276801A
65725E759732B0AA259C59AA0E7A51AA15DE66C0398C73163A52D5B9AE32CD1C
4026A18E9B42FEB4322AA4E490AC7D0E7A423243452A24F9AB218C37D6AA54CB
256C91B1FF828BE0C6E04C76375BF797C452C0E59F2917E6BEF3800C4FBD6AC0
8731612FFDEDB114A1C44DDA0A751C748FF9CBE5B8211CA8E1F1BCF0C3D113DF
45488C62D0F2585855BBE79443A489F38D65D99CEB46A5C38E81F3C5AA93D24A
2FA55862DD786AF404852B9606E8E074B6742A1847C136340CD545E359961AD5
9704F9815DB6DB1EB3CDEF430BD519989F58EEDE4229DF654CA8E5E61B29E9B4
C1C3EC29E3D2B099BD452535A7260941CAF112243834129B1251A8A9ED34CD5A
55B9BF4AC2EE65D01486FF2E6998F2C4B4F5FCFCBA5B07B79B87015A90D0C6E8
5E2CD0FE1C8162B1A98B9069DD8803284E85962232E3119A77341C19ECC2E78F
6BA5E79950549BDCCFF66135E03923EDA8E2FBACB8D3C58CCD07BFCAE08D822F
6ABD5827A262D846549BAEB53987787AC9AF72F866C3CDF31164F024E0D901D6
F4BC37F858F9C4B19B9AD0AC7F99633C312BAEB63990C31F1EB7DA809BE9F612
EC57BF29FEF4E57B82E05FDD5FC48B57A3F0802866F884E31CEA508606B25AD8
30B5B8D898D2050E58B55A8298AB09CF6C52C5351965E1876B223B7421025512
17A3616B1AC2E569A33EB0D447DDEB9E636BF44BA62CDA18AA533F53F4E12001
0028DCD2AA64E8F5F9D3F3C65942424C9B0A425B86E8DA418ED1C2FBCE0BFC8B
9919FCACDE385EF5A072ADD134998686E4DF29967D99F295AF7F9F27C019A956
F3B6A4C9BE51D592FCDED5C5C74F797DD77D914D1CA90A891506E015F46C9431
26D5D785848F038485EE701DFE15086D6492464AAAB6F85CD1012FA4468296A7
132A3D28EE56182422DB0E16F40C03BE8D8CFF4DC312E6A454DCCDF83FF2BBC7
B17EFB5252A05ADE88FBF2D6B94F12E4EA3A9BDB285BED8327D487F588A06115
3A631D123B037B74F7F7116D10592D43132683F248D120E2B00CEA54EC340C27
0BF01EDE1D5C6E4D0D2CE6FF056175D0063735367CB9BF382CB9A6A4C367B8F7
1BFE35F67D7A5B69C2C57496865E09C34775CE350EFACC15551A4D7576760EEB
01634FCCFB715041B308A8D75080A560C42D149D2B24B9E31B36E287139E96C5
E68B036CE90475431DDD8B527D4580F9FDC55E28073B7AA530ADC5108B25F720
1587A6630861B8E566A0321256A8E4CA391D1DABAA1B5075D535AB33E72BFDCB
847408D1CE24CF7B833B9C205C00D78E6E21B6D3722008F40245D72882BB2B20
2A225C03F528601788EEBDAD19B56392AA3BFD23A445421240850599926BFB60
AEC2B30D2A6340553EFB92C7F3919739DB56F4522D02299507F5DF31CA0AF4D7
2CC573229F2C7C3BD37B2B630020F460DEB654156A165AF7969B3F1BA5221C2B
FCA8468E431A5EF64384D2C0E5933076C75B4A190C388CF4EDDC24C6F3F2EE1D
F277C6057C8117B13D8773D1003F37D46D66D213A45C23F6D07CD446EADF731F
4D451B6277CA2E08092BC9C77345B94C937DF83065AFD1F79297154B279D077A
206C2F8E095EEA0BFB2A5C12F61D035FF709B1A4181B7361CA0E3E304F788D73
933541E1D4FC806643893A641C49948FBA78BD4204D69475D7C8CEE1255CCB36
DDAC9B974D3E6419A4D59B19F53F291DD559CB82CE0EF440AEF9FFFD499E30E2
F8D732EBAE84DEC72A38066275BF07EE4B973A831CEB0B5E709AD53AD338D7AA
F8E7EA1161BE49E96DB2FFE425BF2BCA2720B27A31F79DE6F309AF0D38F0C93B
5AB35B54D3DAFE5F1A8E165CD12CCCE685CAD31A2D8A8C44A87F06EB637FE07F
72E473BCB6DD40AE0EA50D2705644B89663237E82970FC0EC032AED2A2FD2D94
8114EEADF19BBE005F99B648A29114BEB6898BE8B59F79C3710DAD813B7E8B0C
05EFDF23D80CF1C1F6A784DDCD7675395BD85D1AC798857A96CFB283606D303B
4D0D7664EC44367EFDEDEABAF380E0543FB75D1649D0A728732E3701A8BF70A3
C450346C5790F6307562481F07F89473D24F0B4A8233C15E54DFAC85CB745676
F87833CC5803627C6DD6BE703B85B1737391555A8A575E542EDEC2D027465D50
64A6DF4CA7140A6C836B871222A3FB9221B79CC93EC5C4FD062C6F5836EAB1A0
1C9D5785358016DF517B110728E9D365F710A24657A020AB2B136A52E66A9A99
B9D95F7DCEC34EB66A385453434ABC56EC7450AAB9B5B99970E73141D0BEE314
7C45BFE50188B8C82CC9A471A5504E98DDF4DB835C0C089329D896599B49EC95
87706A53B5D5DD4244726E81B17BCC3A9F82169E5FE0D613468676A21638730B
3AB634985792A3F832853CB465BB8B66C50948800458912B40D0462CD5E4D0C3
953C9493D87F46CE4E9C7A543364A9BC66CBA0AA6B857291BCDA9B6705F0B062
A78EFC65E279684ED10C411FF88FEDAD541EB1711A5F0493F2B71BC86B6770D3
A6DB1CCDD76474C9CA9A0EA58B35C74EDB4185D58C58FB14DA87DE71AD3AAEBF
999E98D913AB360BF8E332B73E12469A20CE3D0401A7B165F5271B585DF16533
2D3B72E0F78E243EC49C2C475189A3DD01B7C3A03AE5DECFFB9E6386062BE839
C15392A809AB203A55C24120227C1C64630BDF7FBF6D84812B1AACBDDD3268F1
F8682EE672AF4158857FDE7AD26781463A577A52895DC8919D595CB86D1556BC
10D76F3C3D0E4E3E15E5CF2FF021CF6AF4596330893FBEBBE59F9018F6562F86
B2E79436F062EF1F9721A6827A11C2FC22B200ACADCE10C3897F1EA0D04C288A
48D865B09EE7D664927DDDA24737AEE5B2F6B8870EC5081EC8C3EE160A6852AE
80AAD15DD2581B17ABEDE2EAF70680BE2B3D13B9ADE40F20C67E07A91DA6DD2A
1CA53ECEB88F7A7E15CA638CE642522876168F0F505396A07CD13F4F32038FC8
BAAFC17A8E9B0CE1A9532B516C0086C730D91093F42EB0554BE826A2F95A986B
B3C59EDADC2F0A01F9BFDC190E29BA33396FC8598E57B489941CF1293E86EE71
9C9BAB6263470C7009C3933A1538A43EFF607219A13C7B0325D73F01CC006431
7BA605BAC002B85591BBC7AA76572774A1F7A8C9A7B0DA7E18C3265123FC910A
2016E72F92E02E17EAC314715245785117E67A7896C5ED5767C311C161BFA4A5
01335D41F59317F44A92EEADE2C03E3769954597F3D87E32B8427D6EB76790AA
B5C5D9701A6DAC5190B4C0D6B6A7CB7059741F703D6BDDC33F84A96CC50E99AC
1730244930052FCEE833CBCCB2A074C78B92C8573750B91386CECD4A1243D1A2
DEA889CAC631360E013D4F720D99CF9C02B4C1C527867BB8F83C812CD5897F86
1FD3B2691B20EC38E6DEBA2E28369CB342D3697A3E28517B0D22E5D1606F712E
0827326EFBB057D62A488955C6ABAB12A93A8B32E0A7AA90BB939585700D0092
C7C1CD1B30CFB8D89DB7DDF5B01246278A1DE2F7F467A41ED7A40F6F47FF2043
8FF0E862A01CDEB7A672BDA5C9F4FE00F7393C84C65940AA8A4CA5B5C86F52D4
B045557796F94DBF29D83FEF9CD794CDF427E7E5CF54B2B6DFE4031363EB254F
C019CBDC189D083DAB365FD0BA5627F16A08E0D1A2BFD79F8F3A4573BA60C8A3
A8F2CA292A33DB80062E38CD79E556B30945E3EEAEF158258FB01BB4D32A9CD7
44F53273DE6CB711AF1DBF25B8690226C381D7064768461AB477118A70D32C08
906D0D2154BB984CEE2BAC78CC0994D3927E7D29E0F2AD7CE0FEE3CAD755AC23
964FB3A0FE97C1201C2436CAB3B342FE05A2F981326E9702ABC51525B7571D9C
F9FDC79D77191124E69435AC6F3EF0F8C1792DDA53FA508FBFD62E114EB38D9E
F77A8D2A9C24630170A632B82FA2B1B95CD1E33CA8909CE378EDBF5D01B694A3
60AFBF60CF55340B24BBB424F64829D09DBF020D89506CD1270C0B3EA235BDEF
E3E240E8D9C54AD1666090276C020D0983979A82009507CA1D7451B3C8A31266
6BBF8BBFBD24D39377A7E86AC4896A3971B54AFC5B7A19E38845B4769E212509
817638845C067C7AD00C626217A45A4B814C01496D78CF8881AC40FA630D2C08
D1FE8B52B6439032D4D1BCD52F450A80883963BB2BD6CE0EFCEB51C3C63436DD
46B6D3A3EAAEDFE2449BF2B1CFD04E1F92DCBA540C6A44B3025DA828E384471F
C067B29749B49E74A594BFAE0CF4E8415EDFE179FD1D01293E714BAFDE7ABDB9
663811723FADCBEADE1ECA0764FEEE4C91BB8A5E038120CB5B1ACA9E6CE16571
0B41427A4E9A15DE3B4654B265AF18F3B0B7661A99E3BB1BD13565961B1B3760
EE57E29E6E9D76780164C5A1F030379CC9E763CF518CF9E2DD4558BADE0130ED
D2873049D87288A8DDC2D7BD0DDCE24867D51DDD04E44AD3FD17A2C6A5685420
6D95098E235419B7D5A86178956BF7940F2912421C4F3BC76FD991ED529DBBA7
F45DF7C41213344375EFF051BEDDE55E69AA310B171A893114587E8B8947F98F
84D0CCA521E22A0A2F965CC3957421D7080591CEB97B12F0DF1522D9BEC6A0A7
06A57C75CFC4DE0912EAC8754AE29E4641FC05043AF07EA56D43E94563A80C51
AF696E228394D19CF452A6F8C75D1E1B3EDCD4CA67A74CBF958A270EEF4FB9E7
BC9FCF3D4A1C645BA159C95E15300FE168FE00B0D3A2166DA831E3BAED44F233
A0F99927AEFD458C31B6C2BA4BB75EC4FF56246AA9A8AF5620119798C3B03359
DB072A3F5069647F9C900EB3C291206608A7910D6809D9C17F15D490A70F55BE
1A6C135C1123CB216D707F00616D437ACB8FAA2F5A7CE0054C9C0B8364E4C59D
56EF64E4A831A7F9EDAFF67710EB1A45C06FA1F5602653F9564E992BE6E1D090
632656DFBED582DDC9BE917105F07880B030AD1E9BFF5F40ECD773CB00E59230
8EA9E707B012A05EDDED8C8CDD04159971069CE1F6BE77ADAD22FF83BD861FCD
07E1302D6A3AC101BBC7BDD60F51BCF03328E2AF74591AB5084DE9445ED7FD5A
72B3E2FCA56D569DA54CEF5B63EF1A948F9D42C94C41463DAC99752B48E522E7
129D0A90AD3EA1E6F28291B2E36655C2842F5C7F6E3BE5A7DE64405908A7CBC2
89FE93469C707D8180D4F078B87930A6D5C0E60E788475E974742B76CE972446
5C49DC221DF6D624C68DCD6105AAF7B532647689F1F2136657C025AD24664C99
73BCCDE2E2B35C58847F36B887EED1D629B477018D565CFEE48987D716DCFB6F
AFBEAA28B0A27F096F99C846CDC7934F3A844D66DFAAFF475C490B15E5CB1BD8
7A61074C4D08F3EC366CF071C473CEAF7FA64B863164AA93BE2B372CF172D46B
6B94412E7CF8B2C54489E6D6A89777A81D118AA458EAD2F07C2FC32BD8C69DB1
94030EDD8656F1DD765A0A8592C49F5A97EF2EC09D42FD75CE5F5F77884128E6
4FE8F3F50A50BA8D036F18CFF8D23E9EF9A05E846B6302B1D58E2DABB37541DF
88049C1F1B0A2493D65BCB9935A6E4D3B6A6E3B978C6045ECABB87AE6C2A83C3
9ED74CFF924FE9D0473E635247F4D0BDF436883228D0B75E4FAEFAE3875512A5
03C2E9F99932B38E256682C68F3DA790E9B0ADF4D5EF841A395ADF73BF7D5EE5
FBAF3CF3E7189AB59B814D50658B80DFBEDA65FE59ED0418F6CF07B28837D638
BC0C253963B9F952DAEC67ADB2BC7EBCADE1A3554A0BE5B900C1CEC04042849B
0C4B472AF45ECAC8C709E28262C17C0AF057881FFE9B414C45B06FBC49133027
9C6713342989C140EC8BAC4B0F000C5AA995ADE92B15AFD742E730D62358059E
431CD83EEA8085E3337E32DEED5C9FB49D23A1E2C0C52E4C859121606C72C3B9
DFF296390DF428396AB8D895F5319B213778CE74065A5F5E31B386BA7D566D93
E7922F4D6DD0447518D11B4CEF600EB51343396508CE4A4628E76309EC9D0B81
B08747404EED051DAB009553135211521CBCBE5A6AE683EE7C2192593B99683C
DDE5459D1D13B522AC483C96CD46B977E48139076EA6D7D9FCD7CA54BC5282AB
EE624C540143A6A6EA71EFB328B583C840EF710ECB23DBE16BEBED01C86C5184
15A007581CCF8281A901794AB36126A199A07E07DCAA750D34888EFA8DCA131B
4461EA157EC54002D0A3A54B25371ECE125E501FDC4D5C9FCCEFFDB0EB415262
5CA9E95457D312E92420257742777F65A0410A4BBCE8EB31E9DE3C11E0693B30
907D46328BDCA12ED0408FDAD1D0D26B47BC747EC919803C86F85D583A8F6ACB
0356BB2AB777319F5257B2AF355D44752017BD93018664A1C0F438FA558BBEF7
1C2FE003573A03979A10FE8BD72EF5024809927AF3ADE81FE911EB8181BD4767
284E64E0EBDD09F60C7E4966B4FAEB0406B72F8FF605BD06D1ED88A17A9A1547
F1D8811412A2EB048EE8120FB303DEA75507065C052E245CC5136B1D3C93DB62
021467C39A328F44F3BCE71C6E4D3DE65D88CA60D30F9BEAB0C83B686E46E8D9
E49663A5CA73CA34068FE98CF88404728E4387AF5424F65F23AD92CDBBFAF5D2
E2C30147AAE3D68A72FCDDCD829DB1E66475FCD983301207BC5711AF71E8C84B
D29B1CE65E6EB2296D1A07CC107CC86CAC220D73C9F2CFCFD5A7FFA1413835ED
51534E89CB1905EAA487DC7041D46C067DEFC27FDCB71CC75A50598888BFE284
66DAF188FB1773EEC7A64F82235B5BB2806BBB8A4CFDFB0CE2504E92804A8C17
EACCECA256F6E83B7D218E93A8F3342F0347B8EC0280AAF49289DE4F48608FD7
D133F44803D138396F3619557849327871EA80F5161126858F01E76B80E3B89A
013F4F0A7239F59336FA426D2AC39CD37DF744A07EE8547E85D1556450E64E9F
28CF3726514865C87C3A4B5DEFE1EDDF11490315DFF2D649A004C6857DC3434A
BE4A9CB128B66CC95521BD17A5BADCD03553A5965626199DD326A8BA7887152B
A0CD5C183F83685FEA73A87D753D5FE8065F6783F91A3F9A222863EDA09E64E8
A70FF1B9575AB7FE3A531CA0F144C6C508C1D87CA71550B42AB8245F102B7DFC
E33759312AB0A03416D0DF551336767776B87059684FE70A0D67D92C6DEF173E
0B55211ECAEB1D7BC8BDF10C700038FDB23B78F3BB8BC8902CAB1AE74B4EEADD
E0FE0B5D86C9538B9E3260EB81496B5CCDE11C0E801D5099765AE51E69F5A96C
3FD32EB2011B1B106270C7F476591F47BC406326CD9E79E7F6B3820B4560CE8C
45D4BE3CC38675F8174EB604F72A3DCEB329D35A8E69F4E4E2C393803A98EED7
10D6CEC48A28BD7C2A571C36557B76DC6FAB6230ED0075FE95759F01F3A61E96
EC8D2C2382F99AC70E64D36D236DC6CB6210376EC8824261F6367091BD71D7EA
90186C1FAD26C22C273018852E891F745DA7BFDF33A11FA70B91B428BDE367D1
2169B1EDD74632BF6B5B93EF12B9365E8235B2F2617402C2596489A102010D7F
B1A8B76CE9CAA1258FBE46ACA5FF232C7BE1A3CC54474A1BCC34E4F775C8645D
C833DF6D2A2100C6F89B4DBC3027B3CA011B67236C3CA58F8A2E868607552F59
768DD1BC8FF53EFD54730A14DA2B9405FB1DEE02FF872383B51F3027446987CE
A1944FB852892C26CB81E231E7BFA4B0CB965BEB1AEB597276E4E1BF52614076
A37EB8566D71ABE678671AD5FDE58A293FEC7BAAF00545A2E20646A17AC9A25A
A798B36A639CE43DAA6F45620B853CB5DA91A5371C0F7201B7EFE28F03DAB297
9574BD26608EA263BB2D0EBE7102E1322FD08D6A1AD58C59BED641D45C249533
277FBEBECD77046658DF22E5D576D89956DE3E8A0B0BF4387929B1CE81C510D3
011CDCA50153511A95220CEAAE542CECA55FF382082B46F42D4E1672B2076DD7
714172F78B62528A233D976FBE5B2009122641816DEC3731A86C1B7D818F814B
FC769A65AFB18636B47BBE9E556034AFB9595F8FD38A699B6F5D12FA5ADF7471
0D81998509EAD0A13648ADD641A983CA3BCD930955DFBE0DA8B9619E7051EFF5
2CB0F7B12AF06BBEAE2D4591C63FCBB8DF2B635ED8955EF779CC36C8109FEFD9
FC00484BCFC4D634EF0886A20B66ADEF7473EF64D457FFCBE41CAE0129E9F3CB
9D1D32F101A46CEBAF6E9A2C69F153AE233488B2D41B812A11DD544FD8796D0C
FE51760C4C5E1684D5EAB3437D479FC454F2C9DF4D8D0EC8AB2AB23D244FDBED
E098610F35EA127B9A58F3876009CC5D804B153916371ADF860312500146D9D3
BEC8981E2769F43308252CD12F4862B25B199DAEF49913F4B7F1D21EDF659BA4
420A40D05B08D0B6E2FD051D58C5C2C673B6BB38C9AF59940CAB5680A26E061D
2F6097ED41C409A009674D3973F49E02479CFCBCC6F3F4448047DCC6A93A6C0E
4A2AE7B930B69005A3A2C1225FF0F68D9C0DB940A5951BBB6FD4919B97FD653F
0D102D2B7C6F67F2CD09BBEB1FA1FF7EF8999DBA1B10FD88E772B102AF4B28FF
68957942DB5BD93FB36D52A5B2708D4DF4D6DE471C9BE3100211148796DE9694
55E244A59B27F23A5E24787B52C205A0A26BCB8C098ACA6C8E1A94F6DF961887
3752CAFC5F902D6E00FA1DBC770FE98B8287A467CF73F12A52FB18A1FBD42B54
4011323E059BCD0C4844B736135D9BD2741BD5A40FB00BA9C014DA2144FBE2F8
E80F13A589F452936A798BADF461C448C5480CA1D4053F60B99AE719923C6AE3
C993B61EB38EF3A1DD23AC0800428F54E69DDA2B4A1261CC47C1960A223B94F3
7E64EAD16E320913DE0F6F5038EC5FBFE0A25EC6705990688828FB81CDA82C8B
F15896A7B18346CD1F7E80ED368923148D0ACADA4E7EAE558069849FD51D8ED3
E3000198F9FDD9DC994C11AC11F9038B2B1B5F0771332BF0154E52CF9DBFCC96
B5155C7598D6D71114D161E132C41DCB55C87241FB72715838A2708FDEC733B8
1B8961F03E04794947AA98663DA46206E7A75B1E7AC0247834B45140593A1E9C
0661D553F8145113C39525430F59332CECC9A27A2C67910040BBCEB10A15A73C
279947EF4B9D3D234466D8CCE541F4A96D046065CEC5A2953C76C5146E331D92
49F7EE93FE42ACC4F8B1F8FB7A7154EAE902572D861C7A2D640446FFE65A2DFB
D5B90B96E90007E4FE291EF501898110EC53FD322AF0C9804F10B376D9E265F3
412825E15AB6DE378F1DC987E1DF5664056B706E7E2D451417A553E523B2EAF4
7C12FF76284D3B01C86BA5D507896A823C3529050A0B544ED0035C24E0EE18D8
7C3705FEF6E1F4BD93676EDED8BC381236C47E46F55404D7FC78F584294508A5
3A987160E858F76C4FC85C93F196531080B2183AEDD09BDD2CBEA2CC1E405651
47084B9F6D550FE6080A7F4735504B58E07898EB92D0BFDE037A698BEC695D0E
254EE44384CDBF724CDF871F738CA2889BB0DE1E2E0D0646A3CB0E5628BF6C8D
599EB941EB97D8A5451711BCF10381381D3FDDBB3CB3324F93A551573640CC57
E6FAB11F92DCE88C14EDCB7AA609C18388C044D049E9EDA646051AF86E03D22C
944CF66900D4B92D0AEEAE20A7C7C277BBF9E386D35F95636EC475686F43EA64
F9E1ADF4363E6DF22BA29E867F335A4C0A2CA373E2FF57B1122DB4B1B36EFD35
46F5E38D81C84DA32B3F2A38B8CD430EF341FEAB2A3E1DF0C1C992A846186916
E2ABF5B2EC4E5F9957BBDFF06EFF38D2448B169C40876C1ED130F192EBD571DB
DEF885B59E018385FB7BEDF567CD44D71FBB7259FFD6971235087D5B2A16366B
9B214610B3FD09F66C01AA77A66E35A7C1B8493413D6230FAB31E433AEF746D7
411C1EE97D37B3560C2B95AF28A556900F56E8657C78580992E302163118D849
530F3734C2B9D6A4025076A18855B8DD39EA706B4FAD4434F8B41FD8FBB942DF
B6F56BEF675F32D4B4F11EE86D2D1827A4C9CFC9680618C3348CBAF96A6B088D
0AB109CABE540341D0042CBF6E1BB0A61F04AD0091261821855936090283515F
92EB23FEF6B7950098A30392ABCD19B5ADAEA47B96C5D2B987A428A8D7E60DB3
C128AE087EAB2EEF7D3372ECCE38C780EF2C515057EC5A83BF885E0A7DBF2DBB
D75025E366B1AE44BB6A64BDDEA708ED05BA63CCDEFB68DAF2537BC5EF6AA9F7
F20F7CBF95AEBBD6728109F4062E7A453320DCE8EDE7EDE5180286023378B3C8
EC3777AFBD5C64D86A46D0FC6657EC4130DA3CA3F38C67EA06D7457873B54508
F746487A7D91F1EF549BA3DD27925ABE620A249B79E6D03A0973BB4270A4E2B2
056DCD5FCDBC593E32D496AD0F060A462B68999A751BFB509DB840F8DA79C6E4
B63A1905C3D73BEA323E4030AFFFF3F0C3A2D4D53CD273F1FA0A405693A6CBB8
7373065D555CB217F885DA10D83D94D5013767BCCECF31DE148718A8002EABF0
9D250C30C9B80968AD1178A8DD56040C14CC3B99D2CCDFC2C9F386E87F7A458F
73BC22BD0A307CBA6E223277D65B7E31BB95E4553C8610D9DF312D3AA2324E3B
E18EE790322AAD9A2F49EAC2A975AEFB1C256D6FB3D027A2D725C35684C65D3D
697EC4BAF3E595E806D984770169E0C4D7C07FB7B8647C03D48F75757B538818
848418F146F5F1EDE7458144BDAC5D0272A69B7921775DE49BC8AD14505017D8
5EE85AAB1FD235D6BEC02E1AED1A1BD17140DDE858D6FA5E5D08EE003C298C5E
C1D3157D446B6ABDED10972E5EF64DFF01833C36C57AD99A4C9CBEF11678B905
848A56FABCB6D0918776CE7D23CE3F199B1E26F984511DEA3CCCD241B71744F3
A6DCBE8A6618F2B25BE80AA327CFA8B7616DBAC80493EE58D71145814073C54C
3660922A6C5191FB730960B476C083A6308F347186E98319E825B17155A5E7C6
F3F48A9978DB9C7A1B5EB3B83956FB26030F9B139DF9C9090146F6C0F566D967
7E0EAEE7E0463FA4391E533CC4DB6661A70555E4E64A654DECA6D43423D89DD4
A63B81F1618FF21EE6384ECA1EDAC3F1BD20DE5B45443AAF99C95AAE022C119A
D4B5A496C72D80D722B379B98C224FDB5D7CEA9AB8FC3A3BB1476AB8BF131BAA
1A340CA154A45F1952485A03F26388F3014D46D1856E7D6EEF06DD8EF1254ACD
9442737294FB0DF0D9E564C4F1B037DE2C1C30DBBC8D92E929C5FD399F5AB57C
E9720C48BEADE39C3CC39C8D826AF8E2CAECC23AA800E04D09D96C15A2678288
742BEA117E6EF8A63DA2DE3628E9AFF6F5494499023B40D9EE8F8B6D3E9A7AAD
C5336CCDA2181938F8A90365975F32FEC44D2865ADBA7CAA328BD0B5ABAFB499
1F770B7C236265D6D2514AB0DBC694919D4F41D0B6258598B0ED3F29BC35013C
4D88C7ABD71A3E35539D4498AC33122A7D8E8EF843BCD8A46F28D595A1FC8DAE
5DC83618936C33B51445863842FF015AD293CA0D158510BBA8CC987E36F48D01
6AA6352B5D4840EA7DA6209DB209A29D0D6CF6A79303DA96996975CEB5467DC7
7FEAC2030C8466D8AAB3F2CEC8E80F46A4ACCD784388482BCD118BE5B1C5989D
0528FAC977B304971C6CBB6928FF4FC6A65E4C677F80C77E8A2E7B02E6C9B401
E1BD8B7C7F7FF8106ADF3EEBE554A66BFA5D907F29DDA0BF60E717D772C7C27D
A7B7649DB7E361B7BF4ECF25517818B655C093E2683337C5D5EA6073DED8A81B
2C99493451FA2963996A30D6DC1598C1AF5DC1A216E68857172CA9C9EB0AD3EC
44FE82A7F929F77D7D4A0CAEB70811C24611554EA7D9A195E48FE09CC08E327E
D0879B230F4F841A482B43E73973DBF6E9DFF7F34BBF7A55666263695CCBBE1F
33A0DB7564F08163FA28B5E65C61953C2B339194C480FA06CB45DE89DBB50DAD
534D89F70681B88F85DF32CEEB3C21B91C0DAD20FBDD05B72EFD5523504C746D
801C6BE0E0831D46CA48096071D912165F81E29E297571630CF8E63757696C52
A950ACF3296865532E053047C235B44E37A0387547CB0785DEEBD266B751F530
A64320D9C40AC94F0B5EF792EDADA1CB6050021209CC180C2E2ED7F70FDCA1D4
11F13650F9D7EC11C0CC089CADFB3DDAE2EDA1EA6FBD77DBD6EA7163DD136208
70100A9114EFDADCB339E2DC0A540C93D9DB9E623A6552EC0BD581F69829372C
CFA7A4330DBD034841E7E1F6E84A26CC040431EB8AF401018C74B3E2FD375278
C8A35836CD2BBBA57993503C796722A785A17FB94B40AB60D080D6169F4EAB7B
FFA47BE8B0166FAF00300CF470B4B6B1E1CCC8F4CE13BB4179ADDCDC9ABB22CA
FE42F964CBB01524D6613BB0E1DFE64F6F0206DF2F6730999C033457FB5FAC9F
EE694744E8BE9DDA70858344A4930BB16C9221B1CB68FB3FF4848C380C6DE614
DF3A1F66CDC4846F4B23466CD3B1CACED277C65197CDE4C834C7B8974B4E1341
5060C8E67EA551F9501F65C6D5EE2D4CF670B51D52A8505A402F2ED7FC387AC2
056E792CB4AE5009A3F872EEF6AB0B6570B47AAD509821C0FB31319AB3EEF91A
C9D7F96CF1D05802B410FFF6320EE54D18660F606B1355B9A16545A27E0FFABB
7905D9C51CEAD8D3CAC4710A4D4981013D42BDEDF2FAE33D1955B175C46EA40F
C6609D1D8C6F0C389FC84E98F74FE7C4177DBA687B06337B5963B6515B0513B2
EC14CE2F5C7D5763BD166A60BD4F7B5C8D89A3B72AC63A14114956DBC90CD76F
16B0AB5F8B7DE272B97EEEFC26E9BDF9E64530364522B782F2181EC00A020809
7A3D37F69445907EF71CB20D386E30FDD029B19912E6CFD89948A5540FFB6243
3B1B36B3691DBF142BED89EB32D63B1AEFF15958DBF257834F828347CD5BDA84
699DA5FE8895712E88FEDB3440AA44C11240F15EFEAB777A0CE1345AA13FA64F
AE0F1EE83152377B0C5036965090789DE356E37974E2BB529611D88A94FC5CA9
FE02D6E5826343CC06F313CACFF5B4F34956FAEF3CEAFE633BA2833A6A4EE0E7
5EF6D39A09ABC62197B9D7C09B68B778F2A3742ADA821140C4AF79EAD18669CC
4C0C1235905FD9484D5412432E63FBAB956C4894B16ABA82815ACBBC9A494085
80D74CA94724AE276E244F574D687D7E06903148B05AAAD805E4FD58BB30641C
0B61D3A5286EAC8DA636E3EE8F3AD22C46D14D19215C8B2BFC58724E22ED6561
07DF25AE8FA86BAA7DC3229B388A7BE16BF6556832E03DB0E084B967CE31C5F1
9DD107433FC0402097998D0476F8FCE0BF58118DAADCE9658FDE4AB1158CB6A5
8567F23444F23737288F98012A123165FF58DAECDAB6776A142E89E6EA90FC8C
5F0480901D9EB15CE54D0143B57E85F1CFEA750E85AE752B687E003A6E95638A
75D7C9BCEFCA722A6D46EC47D9BBDA991672F5D7278419D08157855D6301BA9C
29D55EAFE9EF4B6C72B45A48D9770A7B708D97DB02B38FDF18A29E286B3D9BE6
A81508C110F0832E24F468E019C7919AD7B187F67E11F85D101E0A6A21709DDB
DA65BB19CFBB7A5E652E1387BD302832DA8C0F1F55D81FF6E9F6EFF33A4C4CEE
845A701D016298C03630F32BC8AFE46932B1C53EA3354896143CD1C5981CDC80
801022C52CFEBC63147625D2616C2571B6D7D6924F9E2D7923D3CD80E1D31D5C
CD96823022B1169FC2C0145CA51BF1BE2D4CDE3786D7EA77E8F82F28A7EA3ABE
87B8815E847127B7A7F3F89E65FC4E81BE8BA760ABEFE54D1D72448388B8F7C9
276166B357CE3966779E4EC53909D4B6BEB4BF29003A75247E758CFDBEE5F838
A133979859D609E691A3ABCBAAF3BCE59497B4B23D1F6C4B465A467404AEC104
0C6283E6C1BC44B981FD22156963ACF2DDE8F18D5AF829D5869F2C702663F2D2
C6BA153596C928E97D6C51B5A6FCACAC13D66303889907B23F00D4F63EA09272
269BB75DEDD9D87CB066EFE7FE9AB10CD0C56583FAB13A1ED6AF5F12EE1B8D96
1496EFD360A79AFAE347DCDE92A366E81A067DCDD26F9489F19CB92E8274EB33
851304071FFFF5523F41CC492E3DD403CBAC62A3B42603875C8F4BEB11350FB5
1E8508C561813A9564E909D99A982BFB34490B30D5763992E4EE6D1D409DF303
655DD7C76584B19A707701C37636B80AFDB77392AB5E5F22A06118B98B427D15
8023D8145797EB62D178EC742A54EA9AEFB37AED4D9CC542759A4DE69F79DD54
8EEB8E07621A60B9DEDE170EAA5A159CDF46B1CEF1CD94AAD5D324BCC6F790A3
4FDA2CF8191CF978EA132DF609559C114A1846E40970FA97082369335AAAFEC2
F6327EB36319C67C6BE404791BF6C08C5EFBAF735493A22C0B7563D3E69FBCCC
E659756759D73044C98C1FBB994F4AA4983FDB7AC50182141775ED7DA74734EF
49A86804C7F50CA1147D3DE1718F9FCE5712B8F29424646CB32A5892366DB77C
A4B3321E2EFDDD7D4ABBEE27784664DDBB2E9EDC57B51CE8C28C6AE58F8D673D
F995BDA548D73BA5879004F0840020D8094D0AD31E8342C6C504531634B0CECD
991ED5BFAF948D9C5511071E92D7CBBB9C0376615FA48D1E1441ED02D5DA83B1
074022901BF3D7534D5F4D5B74CEE3BEDA3AA323C84CAFEC03F88285D958FF84
D765E3D83915948BD8BCE0BD03E7D067F04DF2C7BE3784D3BC3D184025CD267D
317B3A4D255C1B50EDC0004440F490EAFBA6B9392EE60A0F144D066D5AD3022B
9C4F292D19E23CD0C6CB98D0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE279918B0B31E08031DB686D518B4CBB8A4D0B
EBF6750A452A7F706EA676E3B3237FC5656B29CD5A3A04F82AC871B526CC28B3
A61D985EEB3610FCAA433B9C6D4683C512F0FDBF3EE6FF552D7BF0BBBBA37050
FCBE3F164189FDC8446ACDE8D0D4050278151B46E56AF826A0C2E9389C2B8BB8
E38579D281D5142944D3322E1C66D456E4C5DD727AA41FA5B369D5E10CD71832
A7DD40DE855B47289C449B6AD8D5F1D557102050EDA5F1641EAAFDDBC082E579
A06D8A3A323458808BAD0F4B8A2BF406DBAC4C5F555EC96E760C8245A1AD9F50
881DB475F892F868823CC55D4859C09148529FBA57A392127B68F5366491D1BB
097D8FF4A71966D42DD988F48C8A1F4DE0449E6AAE79500C42B4EFE4936D0D00
0FB339115493C54BA1B0981AFE60C32AE5AEA6F1BA42EEAD2C89312DA8D4EA9E
4728E8FE799616C7F79EFAC5C4F5BCA65317E45DEAF86873DBD525C29DA1F2D3
3041FFA2445CA658CFAAED3C30CECE4F2514A132C95F5CBCA3A139F60B929FB8
72EB89B9E71EA6161CE4DC61D1F0FDB69AC593886BB0459536ED20609422AA71
AB51589A018331D25E5B0F5E48FB91D15C10357563DFE608A3CD20A80D08E270
1A520E35CC383CE5CD307D419B5EB603FC44D6869D4A1731673EB4D084BB1534
7693FC31907FD6094EC7065BED405AEAFCB4783DAEC99BC7A3A82EB333E78317
ACD72DAA3215E2C2823903980506A9F523F673BA8CF49FF629186E5AE8335042
BBEBC8DCF193CA3D40E5337359272C890DE990FA8A632DA2E3BC27F9476CB699
295F324F6901C647D65547A0EC71D4169ECC5A9AF15C361F4CA0CB8ABF336E7D
8DAE03CB25E6664A35015FC9684B7899AB6E46C2AC119FEE2CCBFAE53B96143D
E8C23DBCA777AC4E842F3A5247CD38F0C8DFC61D9996A8FBF914209AE12FA680
17DD0820EFEB02CDE5BF84E5F1E8C8572A5A86D808FF1497362CC036695A3B1B
CCFCEDA9577FB496F376710C86A02109B864FE34566E17B4A1A09F9BA10DED06
0F5AE4AD3C94DEA662B7342EFDC90B3BCAB589A88641B4C53C0D65940F2D3916
FE46C254C25AFF36E0A79983B5D27B079F4B1FE2A89AD72D1D1AD2BF8BC6B31E
4ADFC2A90B9A7B70258F993C87F2C75BD72B5278CF84E2A883DCF21F61FC2EE6
DF51A16B4969B5619E2B15FEDB0F7B5D8690F5323C48054E47E3F61DD358C698
35A31914818EF301DB98A91C6F34AA573BDF47829A0BD0C1FF5D6BAC2210992E
8C115F926BB8BDD04004EDACB8E3A599A56D93AF6603E7BE95D2B9E8B9F50EFE
02A94198A795EA3AA8F36F17AEA7B3CF3B80E235C0C70C895EDF6B031ED3CC1A
7DD250065F3ECA5C4583845A6E0F89C9EDC2F8737A0C119FC35E435A69079A46
C84B3CF54BAAB62AC19D25E46C51D541D23F9D2633D0ADDAF128E4E336E41C0A
F1E31DC3AD15631556A6C760A49679FEF8377A04BD2709C556F99D6D0A7E6D0F
72BA8FBA57162992D855DC8EE82E1FD21984D255DAAB15D2530F5004F063AD76
EE2FA09287295C79AB17E0EF4C7AFB5ECDAA96392891C296D28D5263EE631BE2
0CC1F6D56A03DFB8DF16CC64DC2A4BA25C78CB3BED5E7AD9383F870121370795
8220C6EF8004033A4C316ABB86A95F8FBDEF27B9FC1AD3259CE2A9E4027A59D6
FA0607168B4145A22A5CDCA376CF8F657942D643E7118C6FB8485C3B49DF8D5C
B26E31B287804D9E5DBE8300564D6210CE95546E90A839440D5347EFC3DB1019
7E7C1F9FA4153F56D8354C28DF9541B60056F95693A5DC3207DBCBD73B067552
BD50DC53426FA7629E8518074632F6BB0639E2AA1DBBF34708FDB80ADF685477
F1D1B294824781CD883EABB77A8D8A93CE85F961413148C812BD4323EB029D02
1211373CD1ACCDACF821F97F498371BAEDB7B887A8C6479AECBDAD3753FE1D35
BAD23DA4DC7FC3B4C147A3CA6B939B4B19E81AB223EBCA7E622D460701760E74
95135D6EE1215286E75E64E9F4333B259C51DB04F83FB8A8CFF5EA08B850563A
283BFD9FEAA5AA98B091AECE8681999D7C8CE7081C63CC2F99FBF847E30932EC
89D7AE31C15276590ABC46672EEF02B2AE8F89259944B1272B1259D760D7B237
396F4F3D80745A2E1EE8BB1E2717DDAB52753B36705655AF3B0E97AB1E6E22EE
5A58C7B3B5A46A860FA2AF035F558B5970DE1368D2F20663BC22AEBB8393C4BA
41857657A780F301DB98A91C6F34AA573BDF47829A0BD0C1FF5D6E3E3E23764E
9A5DBE640CA98585DA2A4AF9DE5A50460EE4626641060E55159270B4794F9C09
45FEAC295D142BA5CAD6BD84A5074B5832023E809B80408BB9B61C2AB51D8CEC
6E67F64B36C58C36A88F60969A764BC3650C9F608A3D911E2C01E031D302E806
1FD13C0751886DE01BC4780E971D3952648BE3ACB42BEC6D5B5DA0CAF19F96ED
F6BE77ADAD22FF83BD861FCD07E1302D6A3AC106A2E43A7E81959D74397B05AA
139C11D8E49A593F43BFE84E32554E529BFFDCE98C901A79E3E0354517C3D95C
E9C02C72E8CDDA3C6402606AD16969621B7B86948DED33D8870DE90DBCD8AB39
72CEF5BC502DB98B9C81A16F71982B56E3D30B195E00D83250BCB311128B7FEF
549C4E2A1FB5DA9475D34528238FB664FACB2DF3175DD6744B6F80332CA317C7
C7F1E95469943D8FA54558F298E38B7C47A25EFDB18D279D752527A0A701EBA7
3263002176824B16E5192FE1E7C6EF0989162AA88D31807317CEF7334C32EA38
CBF518502AC8917F8C0C4DDE1AA36C332BB853DF3C8BD16760A91B02D5E8D679
C227DA8E3207E226A8165D453AEE422EFF10547CC2E44F566E8880D7BF75598B
33B68992E7A2F38FC0102D37B14D7743D97690DE073F312A8B3CC3ECC121A487
2C7A2E643F42D81DC81DB094A39F0AC8535F07BA31C71CA5D158A149F9312B73
E4D32170A9DF0ED814B56FA36CDCE4CA26E456B7F80E01E965F2ADFE1F47E8AF
B7E2430FF5C29D2907B641B4829531FB2A32A4C0367F3CDAADB9A370228BDD72
D36A310B38B163A986ED841B89F943386A45621E129B313186B14136429634E4
766722F56E044B37BC6D86BD2B25404BBDE5111A09F2F70FA32542FF1E83E1FA
20A5DA57D8B97288C1771381D3DAF5B148F098CEE2A1576FA4E08BCFDD164C8A
2DDB6E607138E02333C892AC77F693FF450B0BDBA1789FBF48822B33BFC5FAD7
3A5F027F88EDDC45179F7225B6871B570EBE05C9D95D8F947BD0742B90BF5407
FBDD9646E0166601B3481A982BEE3ECAE668C682BA7058FF2B516EE6A1F62AD7
88D7A56D82E27037A9D4634A52602A4A406CEC3E6B836FA313F76E5D3BB8FDB7
30DA86C9CA2049211DFC67FEF43680759C5753F9AF573A9C560C53F4EC10F01B
24BD3061707FE66ECD490C249247B1EC843A51C18F15B98E16EE5DFB6E5EC238
5A2B60667E25B40CE5F8CFB9AF2BCA1DAD558C1F217EF746F550BF0657B5DC66
0728C942A87295109A90C9155DF0BE682193E60B2B5FED8BF8541250B992E39A
E2E7E3C936A06A609F48029307D8249FEAAB72F6E1CC2C7A3875079EFB568ABD
139F70C1EA8869611D9D4D5ADFC1463D664FAF1E15D2819ACC236CE307310AA5
0B8B1F887BF840312068D7236450B39F6F363E3AB6F8FC5A8BDDBA070CA8F456
2F321D000ADC343E2B1931854355DD892B5A163785EC96245A45B4ED6B5BF9F0
750DC175E04BED0223734E5A7F68B96A1184091D122ABB1E3895721160D7C2D3
174873F55307E929B392CE3475109E22CA5A270A188A7649D8D1437039443AA9
46A7630D1877A6697C2FD31E9717FE5EC1A550EF9E2FDEB0F43558C7981EB189
B81F8D1BA098074266404D32CBE9E1B8220BDC4409274CE1CD02D148724B2561
AB1E54A672AC2EF7F6BD91147CE9E15E1B72BD078B9B595DC4936FCC0467525E
BA8965CF383F4F4AE6DA98D1611D05E59ED9BE06C7BA2AC655DCDFC20968F5BD
12B078701E01F539C74A0B5D6AC9CB4E4BC1D7C2248A8F6E5A7695FE9B0A14BE
253B4345768F4A78E26D7BF1AC08BDBB8351C7F5C1C66C9F9BEDFEE780E04042
3DDC5E3B4876FC8A9E07B69FA56A32CEBA6D7B35526797A8C94EA0723B306240
918211E0EEF0934AD0C63700B4526A98631477A19FE5E168BC242740D8C45888
D4A0CF8AE610E7017E11E78CF5E7141AB9009DC1FB985090CA164DF0AAE5DF99
7D62692FFCF574292909EE79FE294598B8493F9991DE93CAFECF7231EA8FB209
39EFAC81F69FEC9D92AEF953CD07A639CB7F9A7CD9CC027EE23F3B3BC61A40EA
57044322C232BE97AA1DCF6B0E4DCB2DE2BDBF0495BD0ED7DD0EA7E72267A508
FBD0C338ECAB53C74DC4E883803F2FB7FB3A3A802092EE50089F30F3C4ADE4D3
07305271D998208A83D58F3BC00D46513F0358C43A22C413D9A6BA6B3E100EA8
03E2F0198DA96155E68E8F6CDE3F99D19B44295188865207E8C79FE8C1E98BAC
BDDB68AF7CCF8E9071B691DE0DCDBD7CBBF0BF03BE50426089EC7071143F5177
610D4C2683129C912ACDB47AECE3F9786E47398891C3990700F3123E5BB8ACC1
07D8B722419A9C1F8EBE330D7A360FBCB6540E7EB3B2ED0460F81AB38B9240BA
E845D47A0BD6760B31870D69C4C15EEA09E1831354F7C4A16212A067BDF0ED84
C9A5735368A09CE46A5C17CCAC557BB69FD42494D5D2B9C1ED812F3CCEEC1BC0
79E837DCF4EB4E495547C25D2893E35E24435F55A2D66CE9FDEC1A5F81FA219E
49C2F4D2C8EC80D9E187F9E15825F57826DDB17A35CF2E4C380E50E1797F8558
26EAB926A051DDBBD93F907D31D6709284C86F0542486710BCF518C1B5D1E6CF
23E0D97980F20EFD24A6644AA26EBAF342B36AEFAAAC0AB3727E59F1642789A1
765F02944B8E689BF03404F5426F7148BB8FA709AF1344271173529372AF6DA3
83511770EAC39ED55DADB32778CAE943CE6E928C9521FE45A04F184800733B13
440F514AF796BCDD85974E0AEC9A164C369C237DD28FC4BE2843036E872B2A03
163F0CAD1BCD5F7FBC20299D5C6FC1EDDFCE777B796FAD72EEA5713D78F437DA
E50160FAC28C1C21FCF83DE1B5516CB04C7CABC1D37D26ECC85EC180EB8EED1A
6E85129293842B429B1AFB33D68BC88143F92B5D64DA3F8DBFB0D329C7450A21
E4F97C8FF528ADC2F97F87C592935C07955C1F1B0F125261DA0D2F7312CE5B3F
3A1DF65DD60AA679945BCA6A71E4329DB73E7F29098787D96D89D74796C6908A
EFCAFC2C9DDFDD855116AFD66EA16F96AA4B9F040771F86CE98994E113749F20
47C28A0906100EF57663A483AA7375C850A31668037014979D53F051CBE5D246
FC0CAC7850013FB3F1B075D4754A82A584DF54EDC7C8DB59B77CB7A8592B7CFA
7D097BB4BF8EECC6634A8112ED925C55E4B0DF0E5BEE4B29E5DA8177D46930E3
E90AEA7B324350D5926BF3AAB7CF462B8C46CCC43F2AAB8ABEDEF76AD7F14CB4
16CC957E016A4C72A6A2FC3DA24AF084E7544D8A76154942ACCED03A7785D88F
EE716F2A7D77A990393CA5CBCA996BE2E5186292AE634456B428623FD1E62155
5BBCA26C986ACA69714EE280FFCC692113CC15C94DDD294049748B473FD5F4AE
9C321F8D3A7609539BB1E313BACC161E4DFD3BBD84E1216F1446F95F7E0B679C
0D5FE02E0CF9AA45628844A54275C0E5894655E7B06095437FEF27B81EB14663
E3073EA68F60F1D5B1A01C9D57853580E6F180343DA29EB6D4908FC8959A9D4A
0E2A68646E9583C8C060D55A4CAC0C79F590A3E253519DC09411034B2ADE33C2
4A26C32A540E57220AD7ED50090ECB75DCE61AB204ADAD9DBC56B76E85B7B6A5
705502F55E4CCF7708A8443BE79704632DF95672602E1556207B8E2CF3F0153E
1FED95A43EF0C9C39205BD0A525316943C6E16AF6BEB604E3D7B784BE985DC57
7101E8C0B884FF5107FA551FA76B2B182FE2035F15CEACC47B532E2A0CD7BD28
82E79F66AA416492AE025B1C8AFC1072F7FB0206DFC09D50CAB4224C27161748
515EED8C9C455107A2D2C943E5E4F0786C7F4EF8C2A5A242E84CFD4DC50ADFEA
0C2ACBBC7CBD5840EF7B3457F381362AE29CA13ED2AE02B4A8DD7351020E4304
7E47CCE0BDC342A927FFF8372D4AD59076D886295D55E47D1905E2BEB07286F1
3E92BEC1A6740EEE7E8463FFF7B0A03F7B5931AB2418F069ED566D63A5D9A7F3
347CC0D290E551C3AE29362C779ADB839D99248049F215BB0F1087E6E52CB4F7
4973FEDDC9FDEACCAF41206F504F14DD921D63C229C8B7CE8F110BC2336E6B8B
93E5E8FC0CC4A121C38F9927527A4AAC3ACAE0525D049BF9B0C16328F8992A12
87FBE4016ECACDDB4299AAE2811E499C038D545584A870538E2AE9A38C558930
FA9FEB325D9B4567CE2EFECCADDC8A013BEBF5805E9E3773D5B68C6FE65EAC53
411AC6E7E26E49BE5FE4A249AE066DDC7393F29B4D933306793C754111044E6A
29E55361250C0812522FC5B9B91480D75B36CEF1F23FD6B2F1AAE52753EE917C
1B899C55451B2E0D7EE6C0018E21B6BF4C790B5512330E38997113EC573B375C
F75F77C4B4ABF7BA88676DDA7A420EDC36732A2D6D8EC2BB525C8A5673B23AE1
13B27C840C2A5C22FB0CAAB9C889435DF35A5681980B77285AF53F0C37CE0014
2A9692810D9AC64B5221A4CB065B2CE1ECB841AA4263EC9EC6DBF5169BCA3F65
DA6B3517623764136A5FA5E4D9C692932CEBDE9CE7F7DD4772C2C44C18B52E70
7CCB800762D20E8C52EA30A8EE16315D4FDF3D2B521CEDA9446FDBF353911A1B
884CABA6261D560571CACB5F15D022A8472E89AF63852F2DB69C1C1CE080F690
90CE23089253F14C079EA989CA1551A47537FB356B805ABD7FD9DBDADEAB0C58
89C672AA53D222D84CBC9EB9BC1C8ED0033F5C236FF4F8224C30B0E7AD46A088
E256407A554EDE8CB0A377637DD7BAD6C8CF1D70B9CA4381DA2CCE50261937EF
4226A8155A2B4C4BFBEF1E1A860AC2A2F2D25C1BCBDAC0AA6636EFC35F225CC4
9082CF4988547E3A45A4DA0C188AE5FFCD111CA5FCCCDC961E318A14A720257F
FEF1954D7437D9D11E55BDAD6163341BE08A9EBD674FA754E3ABB38BEDA28D35
D73282D4F1F9A15C4403B7C69C7C2733A8F06A7361E0635EF78EE2521C2A2941
8764E4E7007342F3BD4C077811073FB73D34FE110BBDAAE3FEAA377C8CEAEDF7
D117235385BD69D068F1BB3C6B565D26A548F04FF20C785A6F46E7AB1852DA3A
667B138DB0BC131C3D50C16C7ADA4B3A932692615492C046257CAC1CB9480A19
E8CBD37EA99E61CCCBCC0B39312F234D4D03C43C5BBC8DE4D1B2E64127A9EECA
F4EA40816B2D839549AB213E0A0CBBC22A3CDE0856BD8640D2B9B1844E01C771
01BE51E7B3C0453409A7BE6F53829103F9CA4A8B7DAC0134127BD0D3662E05BA
EF2FD08793AFD1D55A7C9AC7A60043869CC3E1517463D978B1858E5E38F0CAE4
9D85E5F85D01EAD4897E07633CD81079013A159A4D59897B332E793EC734534B
91EEC5DDE1D8BF68483C3D2441D5610AD600F9E8DCF29FBAB913FC133D751551
E44D6AF809E9D38FA9B51B9C502B708FA3FCB767BEFC65B87AFCD0D7ED057508
2F7BBA62D978020F67B8AF0C407D17BC9A80227F7ABFDED110C7B0C9E17F1834
BFA8B62FAC22B5F5FF47117E5E9AFBA7839CAE44964C974F08DA9B8ED288A674
3B653E336231A46C9B5B2153B097CC1E9B1CA76B2B182FE2035F15CEACC47B53
2E2A0CD7BD29BC0BB206DD0229A2B37F520136C4E3D2C9EADBE885A927B2906C
4E0310DF2D64F17FA59D0ABEFA11CE987CCFFB75D5014387B064500C857F06F9
0D95C79E5BA65FB63124190A6962680A04A5CEB915B8E21F640745A0AB645430
4987D800FF2403F3A9C6A02B03E13DB99D69CFA382141F18BF75E71B5B6E7022
B99AA55C94130C7A4AFED5D0A0AF17B08759FB45133291C5B945CB12B0259765
76ABD4BB062B0690FEE60D4517CB8EC6A76EB90F760AD1CBC7562FE4F387C6C7
9B00E2CFC11D750B8B9E9AEB77C6C781C4F4C411F79B1D23A87ADA31D3A48C71
90B1137FA082E96BDC5D82872E30CA63DC5D4FC31B8B271330180EFAA41BF0A7
F27D2A274B1D654C2683E8F0DF6391A4751C40846188611E976891A2BDFC66EE
858D35E4F676BFE94D5F6B36133B9FFAF07082110264E4B82391D4758099F23C
BD507627DA64EC50503AF8F80D819705FC30C76B0EB28FD20AF1751A73E37D52
00F5A884569A60EFE4263866CD683D9E2833DDF7F0F8E5B487EDC7DC7F17580A
9547B6CDB7F4CCD34EAF4555F34F8023B15C9E7B1729711369CEDDA424A9E19B
ED13D137DFE3F01D4298CF2556E28A2DEFB6371422CDD07263005CD57098D830
4AE5CC71BA9B8CEA1FEBE62D888E525888557F6B08239F5407670A26DB1F7F5D
67C4D22790BCD0F1E86E7EE0B94537D9CEF904EDEC7EBFB0E60995CF6457CF09
A76E3FCF588EECDACD25533064A51A4ECDB83B64C9DD4DBE903FB71AB68FAD4E
316BD62804CA36D4619D8881B8AD0AA4B0933C1D7EBFF54013A009C9286A3715
937003263978467D18E18B8A33CCE59F410FBB89C699E9A53C43B277F6083ACC
004F7639D008DF75543A50B6DEAEF38C67E74FB71F2025DB83B2808CBCF67068
F475601FC2ECED9F4F6608EFBBBECF32F886C8D85857949472AE0AB4E86852EC
0BD581F6982995D8A72DAF160394A460747DC8A7FD6219FC44CD0E30CF5FE94C
5F95054EB0C8DCE57FA72987C464D5A507A40F2C061D1DBBC2F811A66A74688A
14A7841260B37F8ACDFF0D911BC5AAF7594FC0A426D5808F63FA1F4464E1DB49
23E44B129933E3F8AF2A88263213846A61C260DEBECC1EF70DD55434CC93B5C1
7DF0C8EE88C508D30C7DB7017BEF93A6640D1BD5F3712B76EEC6F836960BAD33
020C74C503851F015D1D97DE1F2A22AF9E5DEDF038F2FDBC3E20D463BC757AF9
7039F8B104C43A87080E37D1D7305E7308D2A3984292BEFDDBC9F587FA9AD60F
F1DD01D820488450336225C14872946E83F574F370790FF713D5F12B0141EE5B
103BA5D598C052BFC0B40FBFCA767F3B1EEA76B1520772E3C1203F0A6154C198
C0600BA373C0C613DF501477E2C13DAFABAC0AC6A605C61E4920319CB934901A
A2D80ADC8D0E7E71F8C21BA46E833E6C0DCF6556C1CC6A1C88EA8DD67FA9B2F6
2B5E5B84B16072EDAFDA40B773C7627EA6300083FAC01F1A052E23200E94DCDA
8807FC3021A470AB75105E60AE0E07D48E52A869C40EB55CF31782DA1F2139AE
C4CC7F1EDD5CB4F89760B2E3AD1888AF21476ACCA139680095425AD8B4DCE63A
5845CC77126DF2D80C0684544DB1A80833D0831D0F1B5FF1501A1E6B6B3293E6
54887E4C92240A17C421F46E0A3F76D92989550E6E90D533F1948A36F07F2E64
2E6FEE5FD39DCBF8FF3A6A139AA1AE684E1539E549972C97321FA0710759B6D7
C394F9FBAEAAC3B3A5CC1C9744253567A7830362372D90B2C62F58C1E729F224
EC05FB4EC009EF48E7E56CA0C3BD317B507875E601E6C0BC1BEE8EC0B014E2B6
5B59A8AD04AB2C81845DE64C387F3AE3EA8386A9CB5709C82AFC7FD009C263E3
011779EAF2101F7D6096E31DD04673015AE75FD5A8955F09EB5CFEAF9C0DB75F
5239E01207B63C88BC5BC19777A3F38F7EBE31FE7F66E30BAD235FDE236D480D
9250A1EEDEC54A0D75E0C853808E0E444A9089848CAC014692B1C29B425E2C44
7E62AB58DB1417C45C7C1E25C98E92979341A8857C6032426D3A136BA5640595
1627A6010A110BB390AA5312E192C2AFB9293C1FA1F83312E0CBB7F34D361C8F
2FA6586429159B59344CD8765468462B9AADD9F877A33AE08A7D848E5EB4ABCE
28B2A6342E7FD23E1BFE1487D82689119BB8567382BC3F3F43205F6C7A1F1D0C
DEB9CBABD7CDE1BED4A8C541F29AC54033E2AEA70CE57180265F10B9458B6B7F
029FD4DCA975DC5053D8E9AFB6600B7E2D72C3661E53D8FB212EDE3106862F54
A3D148BD88425747EBD84BF3A610F149B5DC15AEC0C2F352F81DBD13A9278925
57DCF6129494C920B4FA5FD6B15306114179484431F2E228355D76EA2AE88735
DBF65744CC3CEAC5D2D7334976E4F7671BB4E92AF0B9183F250A60A7950B3939
DD7709712AC8051938DBCF63442E4E1621C7B4A3EAE77A96BC8D7AF0D61D9E03
581F22C0D366590BE5F0147D68C3AF6E90E27CDAFA51827C5774CF4579CD6557
3E89FE3A8E51D18A41176C4A8719DA2C75A3CE10FCC29EDBE9205C3B59D4F9BC
3EBCE5D8E8EB108CA188CE10DE7EA7B134857857EAEAA592F499107FB92E22D0
7071D76B34DBB96F58E6FB24BDB8485E39CC98CB7276D8FF902DFA75BC447401
DA6A271351A831E47B7741A1EE4FF0706BCC02E5E0ADB5C3E352E7F66C743DEB
4EC14A3AE0EF469A2CDE4FF04A5390F0F2133D75491624029ADD4A9209DE8A48
5058AC94A5007B4F76265BC8875392B5354BD38DDC12C097644D376A01518956
381347C7BD2E67F7F7AFF76065152407698138FFBB16C5A1132F73A6E14E09CC
B4A51D8F938F1BF07FCE3AB280E335B51827382C234F843E59D0F54B3850227D
2F6D538FEEBDD697C394F6F3B8BAD6261395B2F35826AAAA4737FDC0FC2D9258
1F94F9BD935489C0361768A3432BA668F5301555CB7F97E4D8AED28DB578AE72
62FC845FCCF787429F4A3995CE61372E8860EE0A5930150D0AB4682B25D8FBBB
10124FFCE4795B5EFDFC1D6678376BA32ABBD39841AE090FAFC229BF027816CA
6991ECD1873495FAA5C7CD44201F5886E3878E5E2ECC45C985F9C4EE95BC32C9
C95EBFF0E7C2CE97CEB430BCFF5A9055C76EF4ED2A397E30973F13C9C94E38F9
3A7ACA2BC270E4E404F8A08B6EA22077FDDCF0DD90C5A765E76365F3143D5347
21A8FC57B1DDF4FC0C5AAA936685E0AAD3A215685A828CC8BB2BC61D42A9ED9D
B1670176F8C33FEC0D845F72BE9148067BB63A9677122E5CB055B6F1530D4C0E
5E38467F77261BED14BB65720C16BC1371BF8A5B0B825DB940B2125C16F98224
8B458B28036A4B32B3491B7D4E0731012EF40527BF0AA0FDAF62960B857516AB
6D71E4B00F202CBC7A829EB9B31462C60752E5E4D9771C3B3FC8F2156659677C
BF68EEB49B94CD1BB0F246FCF1A109CCD37C2993F63B6A23D412CC5B8A3A8F91
3D84D86273C5839A1220D9B2CCA344F91CEFB586ABCDA6A329FB5D07459B7E6C
66685144EA49B7DA8527B5ED5B7E5005F73C09B2279ECF72E1EC79A5458EED77
B3191FF2B7FC8BF3AE8B6F5E9C82246C7F9FDAC984C1C89C0B70F7654DB9EDF8
305228BA8CC82092B73301E425D4E2ABE4A64D472667986D6BBE1EFE790034E9
2CA52C242507921E828D5EC28B1D352911A8E507EDBE81B4BB62B6863A4CFAE3
7F715EDF3EA5A33679F948828E0034288E97C143576D2AD37F46E21F017D2EE2
1DDBB86841E16F7904932F13EFD1599DE95328D3083DEFEAC15DF4DA4120AE6B
B7424A76B49084DAA4E59973E63020451636E19BC9CEA795AF21EF3258E5238D
15F8987B946387E6DF677C977AB426EB6CF686087DE12B387B4B77C3751BE6F4
55B48BB452D8EAB1CE63B736201EE55ED960797BBC187FD33134CEDB86D1A599
2304E471C0EEA5F5F22A250609FD5AB0DE238B001B405B496D09DC0FCD8A2EED
DC7295EA159C11B1EE977C88AE260A1D2CF74F0EE0986BD86BA865BB11FBF008
D13A744CAD68824962EB5F60AD32CE002FE7F15CBA8F8D641E848C5D57FA674E
EB53294C36C60F1F06698D3E30BA3AE1061EB1E70A67FA23F60759FECFDF1379
E61C1431AC809D42FE8A0544484883A0F02FB4B3781CFF5E1D1550A313D1A03E
53547C266FCC8764025ABD321F25418074615F7699AD0AD677263F336ABCDA93
6F1A9CC881DEFE4AFA5C608683F2F595DEA5468CAAC2B78E5A1993F2B6373BD7
4533511B47B3B6FDB110BF87F8ADA28B1791D942396722FB58FE75BAE3363E92
9515DB75E5E51D982CED26A7DA263C09AD0E674C1D486D4F59FC3F155A19D63A
97CC6C8AE21C0DE4F85E72873C443905211783CCC1B4DC534513C8EA1D6D8907
13607A2C117C07604B899D0465B7439C83453029710375D9F063B335EECF830F
146463EFBC37511A142136A1277E259660759953B83813C9BC6CF05A10466AFA
5462D276189F7DACE60B2EA02E66EB1B1039C84C02E1F9C93AE270A5448B0F38
289955FF8AF08AB359187DD339A1F2AB6AFC3E79BD199CC74C43983E4F3F89B6
ED615FB1A022FABF29074FF629E2D24F4B9E46CB8F5F69C06C718EB5816676A5
B6D7BEC0ECBDA8320C05ACA4914DF3E56D335825BD5474328B7AD72AF93724B4
0E7615BAB550A8E0F36D01E48058D763BFCEB4A42BF0A25399BA8CDFA85E1E9B
8163B23440457B886316FFEB29AAF2916AC16E116A1D79D91316191105652877
A7E02F04CFCB0DE24EA6A803EA7D37FFE87238BC7637C03AFD9D65C06F84A291
CBEAB880B16D7DE7352BF4EADD09B46F002A6EEECA27573AB03CB34BBA039100
AC64CF3EDCE6F520A16FEC6BC543657B58D17313B32AAD5454DA998BA0614001
C00F5D36C5A8CBF1DFC11F715B1E7A19DCBCA6456FE76D34AD5D4D314FCC5389
84EDC708CDFA2A8570054C243ADAB55F1BD0A2AC1D73029F6E0A9006616F7B0F
6A30D36BB285E7955CFD860345F16D91D299F85590F436635DBD68DDDE8996FA
2403795AB21241CE9D179FEC22D258A9F7CF063183A0278A8DE53E79A6879E11
EF154A08C869BA1CD17D9F4DD939425066EC1F3B3FD4544A636A804D2FD6F7EB
7DAE639A22D4B5C4F2F76BDC20E5809F5CAF01982ECE47288EAC8F6969FE7391
9802D87AFE17F524BFEED6FE363BC5E777D703D7ECA0D268F5AAABF3E48C1DDF
045E80CFE0284337B73119D0BAB01501D07654C470FD226F1E98C07ACE01B113
C27351DC45A1578D2C46894326B7A8A4FB5B0B3CA97CD97BD03EEF6C753F57E3
4AECAB0CFEC7B07A150D7156EF5BD045FA7B95DE5A47A7CAEF9406DA16A1BD6B
4FCA65F7D89833D8FA824F73E37CEF5B7B63DCDED18D6B7C1CB3F310794A648F
0D3CD8F51792E322DAD8CD3CB42637273D6FD47324B47C81CE0D182168ACDF7C
EF71ACE4E202C7FA4A9154690E3F2ED8BD1AF09AC4E8A0BD65C24B73B8E5DF37
44C86A1FE55F5369B12A05851331961A7D6FF38A261A3524EA3A004092AFBD59
A17235FED8ABCA9EF22B950DDB38150538219C18735C6FE1823BC63806F39BEA
09B37359A4EF5EA889861CD9A7048BE25A767E6219783CFF9219C646A8008D65
CD6998E813BAF9B49526E50B6D68148DE8830830C374D6FD6BC149DE1D1B6B4E
05300AFD3858A5D2AB819201A05B39F1A395E36C483732D26A845F4C4F01F4E1
5975C89124DADA58C9CCCD72A36E6529B303BA1340739846C649BBE1B4C581A3
393E9A1BA19F0B7113FD506109A7D13B39DCAAE01F984E0EC960DE81273E2CC8
7AFCE644D65932A5F34BD97794E7411E624530F2BF04F22CEA7384122E6DA850
F1FBA04FB9CE4FA973134372970A35FBF96123FBADF96FBC7F0971C2057CC381
94BD297E4FFF27C7AAC514A42B421E076778E69BB90B0D130A32445972FA4421
3D14B429F0D5EFEE1980413950EE4337ADCCE3606B1AB98B58BBCDE9B1C02DE3
23917F5A206046CDABD9D54EA413DE4846CAEFA0457F1B420AA61EDADDD60410
CDF5CA46C02528B30C3B28B0F44DBB92FD793EA37DC67D93D0487E7D3B9D5374
3A9984EF36254D60772A0EEDCA800923461E0CB06447F7DAF2599EF2718C3BBE
737BD085229CD7C1990141AA674EC6C36A4EA424C5C43435870DAF71D9B1EEB6
40CFC45DE1634C04CFAAD333FDF84E0F33A2EDC941295267627FEF41D96344A0
5EEE4C43E2AE2465717099CA86EDF3B85D6028CFB8B7C3087738C87987C4699E
2313E93097DC4238C6FCFD622379032A2CA2E5FCA74B351099FCA923AF2346E4
69D4BE600409713AABEDFB91505E5AD4BAD7E3D516D09D38D4C49FA268C0A6B5
EFE30AEDBD1CE8C88379E352496A755F2590068032B92725B4220BE392053C4E
1985A7557735458BDF077449CCC13682030F577C091CE0F82D95D2AB8451DB68
3159A39413315661954DF160077B16CB4AFC85B4C391418EC9A310ACADF9D24B
2EB524C6AABD7EFB03CF1B8F6668C8B60FA8560028155EEE6FCF95F2CB0E3097
CBC8CED728F190BE0F386E1658C134D080C501D3D8DDD816A28D7BDEA7EF6C9A
7DF4EFF9DA9D4652CE666141182F86363100DD42588D6723C4036D41DA43164B
ACC8ECAC6EABDE9C4F583892F7C7C03F1D5F4748B5DFC1F8D787F99305E33667
FBBBF11FC3780E630A24EFB520A6F60B505174A513CCBF5D498496818C244467
171449C73BABBAB53F4CD61907FC773FA937A248D6B91A6FB05DCC02A67AFFD4
8C008370E116DD640AAB59DA1B39C21AEB714781BBC953A7A8CCB0C007F4C502
42E48324E9A31040AE138A8468313D857D0B6044853C5346456FD749529EC1FB
00BD8DE46F67ADE1CF852DD818F07DE0AA5CFA497E5760A1526872FD1AC6CF81
9110E6FEDED3E62A92EF184C7B9340E3EA6C08A27AC43C5AC2A55FDF4D6FF38C
1F6ECCD8E1C2581B35BA7E1B6B3DEDD1321936B04DBAD95818B4FDB6BA2059AD
DAAC725D06E4441F403A9D105E4738D27012AFB22E52F8C57F195F6E652413F5
27B2581AA05B04597ECFC5793EB1C455C989AD024EDEB72F0E9058E0273C176A
E382C902AF1A86C6E9E498361675D2B472AC5B632C8E5DABD16A1F78C77DCA12
77328B7AD72AF936794595E12032984302EB1804481D62AE03D554871481CB39
F8E7D0C2F12AB40F3AACF57476FE504CB17DF50585647BCF853F35B63BFA9563
6839FAE545333178DE2998973BAFA952017B5741C790CF583B76FDFF2F201A28
1366FB1FBC6CE37C66C374D3A1ECDFF851A37897F8B7F679460E7A369F2BAF62
A351A9F249BD6B587778C77D7D803252E700C7C5109B7E894CEE84014645C0EC
1102BE46E5F8B4EA43B83EAAD9F50ACA8ED0329849998D3F95098FAC842B9A85
8C33D4DC6CE91B83AFF24BE6DCF6213C4F8D9EE3A45217B2259C4A076BF58F08
09EB152087A89E5F2534B32D3AAC58C2BC29E4E3E882D4C609DB6C5BF98E83DA
93D05D9AF0A0DBD5145F0FA9B6B0420516A5F818A212DA6F1930B407248B6665
B55A3FA9B6813DB5D7FFA4D0D4CE63891BF0A2BB9F3FD7239C84C5F70C2E0052
13489EA21075A3BAB4C488358201D37EE340AD3A923D8C7BCCBE3D2F962C2514
671FBE422ADC3147E7B4F682116D96D8E1D86A54EFD1C11F0C83BD84355B43C0
6B19887EB524D6E65C5726EB9D729F32B7A795B91553790303BC2B34C61FA82F
21D77803AFDB520FB2B7658DF687C9A775D9EA3C72674A561939FD225051424E
F20F1E31501B20811C18584A9796D33103F65F28E9625E1034CCA473A6A7414F
9062FDD08665FFB9AF944A6EAA92E985B513F3445ECF5D8352F586DE03A52E88
941D7387A2F92A69CAD3FFA9AE559D3043D7128042DBFDC63493D8B9EF337119
47B65B0C07BB7FE129E07D832CEB52B1DF86A32A0946A3BD1E8ED4B742EA9056
76FBCC1D312FE2FFD0CF3E5B55F0A7492A8E73B103DCA5ED632E4A89ED435F4F
843AEB0DE2D08746E18A70170631208BBBBE8FBCA23F602F13B2F4140A0A7DE0
8278D574B20567CF3F09D11A879A1D9EA992B3FB79991E61CF3316A3CFEB9E33
8EF0D7B0FA721D7D11990750232DC32ADE213B812D318CA5B73E42806472E799
644A90756E6092487DC47818C92555B5FA22B8E2D726EBDC0778FBBDE7C7AB5E
8E17519BDFA50EAAEE490C76CD606A0FBFFAF82DC5B0B8383ACFEE3B6938E48D
3D951EE81BA9237690ABB168FF8DD6EC74957607DB3ED0285C3F4525E986AF6C
983D4950AE2043610480AD2469815377244E482E7F9F8206F24A189E57A0B5C1
78B7326860AF2A31E962AC7D3A94AC08354BAA8752283AD7D74A6E8A05E91BCA
CBF8C2255DE4C035D2303AA66DF56526A41CB141D6606C1228B9B2F296281350
C23CEE1D869C4B895050C4AF383CDDF2C69A19ED006FB09A05CF198DF82D4F2B
787EC5C0F3F1C293BBF681F43E8C4790E17923AC043D204C2521EA9578696F57
047C7CE41C119A58C91E9E8C4DF630C7855C59CF9E782CFB09DF52F10FD38560
29CB2DFC0D761567EED3DD7565C4419B7D05BCBA0D2CDC7C8388C5455C976C40
C6E24D239FCFE9CAA763CD150D454FD0D94ADD48BCAF67335C61B7F2B2B654C7
0F5370E5FDA039402546DB208EFC3CE2DA145B6B40DA1DF5E91F763D625724CD
4ABD2941B3FCD5A155C783D9CCBACC11268D7A5C9C23C87331C9579B9F24D5E9
2800023AB3B4495E08DBB8B1630111C49DAFA1C1ECE1079AC65D8CBC03DFC3BD
69F1FBE5C86EFBAA13E5B1927A3E9CCAF3B087B653442514C6FBF185BC23EEBF
DFA06700E07023F2897828CCCCF0512FDD24CB36B0C860D332BEF4530B351B69
7B29C3DFEA3E474F6287CAEEF770382359AA3162320D340D735A86A08EADD2C9
1282EDDC406C8C00B476F321DFBDC8D8B289265FD8D018113158BE14B4C59A1A
D1EFBD0B82213FD463BC757AFC81A0FC5643B5EA52C15F5AEF6F3D61FEA77636
9098750B6B07B21EB66B20C3240507494F7F10B401C9A2671D8823EC7B74F1E8
A369DAAB3305C440A686E566386C4BC5914BFCE14913B22B6848FEFA6107790B
E7B3C7F55A72B711D3EFD92B56C3AA4FCE302713F2D03E73FC22FF6ECCE996E6
DFC40960E118A3C99F54BAD880A38BF738EAB12B9B0546E7C1E9D971C61DDB4D
12E9D6A39B9579C9384C6DA654AA4124D577D774A217D4897A26101713D728A3
7996DF61AE7EAB1C061FE75A0149C4A665FBE767CF7627ED3AD4456E3A67BF5B
B49920F6FE6620D69A578A98A4E666860414F5C000CFB1279FEB8FC14062F048
294EA3DBBEAA7A63B0279661F69F181917D92AA630A90531EFF98E8EF876D73A
B1D963C8365E8B0C46E6F63FED1F2D0C671F4637AE61246D8B9A0031CCDC5B2A
CB73397C1A8F8BF6E5F7F2B707FE561D2367CE212F2E8663B3BDFE2AC52DC034
50FAC89753930076206EC4695E35E06FE4414B62E148DB423B884CB7154B119F
06D1D9D25F5879A0D67E879353BBE9CA0DC50F7C36E945961043BD8C7908EDD2
15CF0A0F1770DABFA09730FEC742F9287F2792B92D6C6C8751C72D0408F82D4C
916BEDC1C82BBB16B64D80B5A672E2C284B9F6E0CAD92C3E68A715763FC442E8
A3E718DCEE6D998B0F691FE4DEE7BABDE53BB0D3F91FC914E59AFEE0ACD9511E
AF44E12169115BF4A08173182D09EB6E0105B8A4443A373C8DE253233006178B
9A6BC69828E8B89FDEF364C224B3C87F241CABC4F995455BDBF10A35A1210E15
5E83ECB2BF4F04E90C4A82F810D4E6740D34126927A9E59B7B92FF780C412A60
6D33C0739CB88F0463541489F56666025C854B28533F3D64DEFAD261FA16E106
C70A097035549861A8B6D57670833F82D75E0BAD9CDC3302D01D7138DA8832FC
DD816A2AB41856DB912A7CE1109EC7BBE8E5B7AA2CF43FA2AB8EE42138BD9665
75A8D085F14DE63891EEB88FBC9E57392327D5E0A8252CE482C82696E65DF2DF
E94B2D54B072450D22C9EEA215EBDC5652B555D498479D289A015F8545F6863A
9A3F8AF10CCEE6956ECF413DC3A85CAB5CBB66B4656CCE6F30ADCFD2D364E623
338F48591719102119E94671D6D948E55FE0FC7F464A0B2D3EF7B704F7641BC2
638F23A219AAFCC0FA245C6731A2E8E561C63B7BC3147C442F6B34B5457E6E48
141D58E82D248A206E80EDC58ED6BB11A7D7613AA7C519BCE1182B6C30F93DD0
D7DEAF244849D5E120C8C3C96A3D38A88E5D4A955946519162745BAC903B06A5
700A7FA1CB7AE5F53FA2E56F84C54A89B408876048521F937A458A63396A578F
0213154797BDF8D0D1FE3262696586A92E10FB3E8D7353FBAFA30D7D0A00F411
01A7F4A280ABE1C7F736EE916ACFE714A76C37B008A73B07518B9EA8A3028D7D
A9987B6DEB3551DF422DEE880A6518C3E585EA200884B051300C269B27A98493
38056AABAD822CB4B0D735D46ECAD9B3058B11680497C58B02E3C78C0813A7C7
D2AA4DEAFD87E0B80F614A199A24E73214CB9E341785567E831ABB7D7D60BB92
2A1A6F8D053F2EB3FA8BF2C5D6EFE5B2BCDF1851781E3A244986E26AA8396D69
6EBD94E6EF1F3ACA5708D6123FB16DCBDD75C616ACA08F8F6B3AA1DE3502DDFE
96AC2CFCDD9467958904FE0CDB65F52BA057443EC42BF773A7F2231E35FDA906
7DECAA8D338283FA0AD9DA6CA8658A573D81F89504703150AD673C8CF43B1D23
ED27CA35A9A6476263DDCBEB28AC7A2843FDED360191CEC83804BE5E310182F6
6B217FD6CC9B23CD9DBB08CE4B28C0E2B257C2ABE940D44DB17131A820C6179A
8F984CA140588375EBAB53F758648FB82BC37BE81D825F1372C739AB5082DCE3
042DC9767C407C0DB4D0FD1A4881A34FA19C7B45812C8E9EE7A622F66300B69C
5B27CC34FCE075D08481716368E01D9130D3010FCB203D50D9D28E4419820791
990C201FA4DDF49EE7703D9DFE30FC3F11D35020DDD30DC18FD7A0C09F19E9C0
302071E598DDE8D6256183E9BF5C9F1644E40B2B0C342B848B632D0B88E14D1F
A48F7F2648E1819966BC2476D4AC4E4347E745919A7061D05C8F655BF7D16123
17DF305BD7B385D4952115E28D49AB56B74E9D6E459220D22D3C6863DF4ACB9C
7A7BC2B4A83F47864D1624747054CC3E674581B8E88963C476AA8FBF4E30E12A
ECD486887A5B6CF74E1B52DDD91497DEEEB591E9437D0C1F5CB8EC4F46CD349C
F1C09C101E4B254452598EE5E6713394B2FD8E279823769BB41600F20CC561E8
A2CFF9963C615AAD667D1154066661038CF2C93BEF8D83E143656B00CD218973
38EE43D1D52CFD0BE1557746608D91E065D219AFC343E9A52406037E2B86C88F
3E83C98EC71CB8627476F7932734432EF4A7BA2612F343751A68EA6CC4FD5FC0
220BA2743ACB24EF5B77E0CA5AC1E6F13A8BA831CCF52D25229AB9C410CB04E5
A931F0D876894372B84D03D1BFAA10BFF2F719812D43D7807770C92714301844
7A70FD1B979C71DD0FF87700CE95F21C4C1C9C326172364A0B79235059BFB3F5
AA27D10E337086144AB09286BE38216E755C86A375AEA1A0FDAA7D46CF5216AD
CB21A84A46EAE0987D5C3329FCBFD894D1F2FE8AD1BBC6A27EB822F36F8C08AD
FBD34C9842FA826114DFD201B608B578EF971412A59FD8BC7A0FFCD765CDC64A
4922496D357B64FD8AF55CD5CA984E3974776725AE1BB7E5593DC6B1B8D74817
19539A584A375CC8B9C4FDF77D301680CB83FDAB83C77C2D7887B361297AE1D1
E38DC82512E4336F16E7EE6CCBF43EE9C02CB6F255587300FD433C3B4D9FF296
C8FDCAF439138776E7DBABC3145199DF6DB27C986FDD9B00082942A5C533BBC5
342091744EB5AF7CF0ED03D9BC34C4BD614EA7496D58CE8BF62247CB10F89304
8D5AA7A9F799FACB6315A2110148ACF5E1BC35CAB95FED39EF8AD50DCE139744
B3A47D3AE4434048AF94643CD8E08A18341BEED641D1DB07D0DD69386DFB3D81
44988BA830044701CF8C14B23128617137DD98E2016A73BA0D374770AF05EE7F
D59641A99D3529DD3B8224D77F85F0DB9441FEB9433AF21E8D84C50F75043419
1ECF16684E013184794B06B2827C2455060A8B4F2DA480577C0B4E1A274BA19A
AE11A355F36DDF7FCFE363FA0259A6A32D16232B7CF6F28B67273E4D7BA2F155
625FAC1B29BAEA38C066EC2DF48850581F6F92828BE7CA89BFE85B99E8947803
9DCBAE120891E15F5D584C42B434EAEF15F5B71834D2BF6EFAC3CCC40D3EF3B2
E2080F1484476E8C857A01BAA2C5C2C79D8578DF1E5081EFB6EBBD8BA37A62E7
E0FE022796E62FB435868B8E06FFADFC82ABA8736FFA1AC28B04BF3DAC8F2DD4
026EFD3B57466FF4196CA02456FD03F4C387BA30F95648B600B3975941C66248
9A683647271CEAFB8023DE1604FD41C754EA868327146CFC9D963D769A957C8A
11CE2A8DC48181C93F2C5485FF5C74F992A78703081772B16091B3FB2C085ECF
3334C12B31833685258242CB84997044CB1395A056C2C32254EFDA69E253507A
388DE74333F6462EE1DB7FD780B6651B2647FE0CDE1A2258F05CBAC20AE0C9F8
0EC2B8DC75AB3D8F141B95F3251B6DABD584F17C7524786CA1E84E4BD9FE4147
21789A755AF4B6CDC2165E496FF56CAEEB32CD52FD99BDC3BE161F4C1FBA9B85
4899BDB2E3390971EA74DF32D730CF09DF4AC89B211985D09A39DD1E688F4D0A
F596BDC1BC902B99F8314A86E70CD8A5A80A20F81AC3AEBEB0996DEEE69DC68C
138FB4F7E2FC2D97790ADFB7D4AE2DE1288F04663CA7C2572E92D9489E8B02FA
0753A44EC9E581AE3691C027FB01BEDE9F757EAA1BAF3ADE6EF9B4205BC43BA3
CDA488E512ED42BFF0999BB3835BC4726C4B6FB6896DB37C83C52DDB8358FB62
C4B72BE2093426677988F8AC9F7FCDE0DAC8BAE3D0847692B21D5348E3F6FBFA
F7313B1FA589C0DD6CAA6707694BB35AF8B365EDCEF861445EB8E445EFDE8E00
9BE49C613EB234EA2AC527C5E0F43C29B797B00D04ACC7F5F3A7A5FBADAB4FCA
85D1E0E9149E638845279D7FFC8DE54DCF5364857EA20DB515C86F99D9F39C0C
4E30EAC75CA96A594D27DA3C1237C61DE1A5F5B26FC8966C83063681D7BAC7CF
BD831106C2C195D22E11BFFA2EC9FDF7060ED56A9947DC9406DE7410672590BD
7BAD0511BD8187E3FA1A4B633CB6598F3F77F3F0723B3CED8B0B9807CB1E35BB
E7ECDDDA6E7FC363C345F8B3ACB722B0D9EBA19308E83F0FA487B7233DC677AD
402B32E799CF8B038A3519D4236FC473CE71A6377E32DF8E4EF595077E9B8AFE
456986F268ADBEE64EC4EA851AF4CB1A21CE90AA0F5F03741B47E291575E3BDB
0305B7E996AC870C05B6D04E2831ABD0593ECE983CB5E976DBDB2D13A7F91E3C
52C1F8296D44549A5ACB293CCA55299C1B7FC3C95255A0F474722C2C0261EBAD
EF3B9CC4DA476FA01467AAD9AFFE8CEA10F0641AAE9B0F35673D34FFEE27F8DE
15AA8686137C75E49C91A533B409E0D086629220B4262A9502FC88AC0C591F66
241ECA8269A34B5441CC0CFADE64BFB3CAD4DA410E69C542CAC64B65F6B829C0
8A4DE571AA5D31B8CCE697B76D97367E36C22EB474C88ED4A7A30DB09562E828
63F6C001ABEACCA36DAC81C30C179261B3C02C1A29F4281D565836EAE57F6804
90FEA4A7E3B65B377EDACF6460DADCF9A3437723B4437D05370D06605F551CAE
397EA2AD7D021875710C654D9E97727909E6D304C8D933CDDB280F05DD157E37
A6EB7BB451442CA415CBEB8AF6D8424C4DA14793F99D78494432E4D0D52BE27C
86BFD7AE2B988A390BEB352917E28C85B86E837CC4E3B64FF75E77E11FE5D50E
811096ED908048766ECA0A6302AD9FB72610F1DEEA39D2699079347807F7C8DD
C8461070445E6F16A2C5B87A779636760C9A55D6BFAD5C13BB58F03A57E07433
C1EE788B3D96A1500441FBB717E2FB31CA9E6030B970EEBC3219609CA323FA14
90AB34AEC76C7E9268E3BDDC3449B8D34C34ADB130C2E53FC694DA7DCA8F8DAC
F03CB8AAF73775122C66EC7D59E036BA2DC0FDCBA1C570AB49AF137953153675
A67627EF07980663D7D88B4AA2BC479768B32B9C059D3B59F555AD3B58BA1879
35BBC37DCC97D12D866DDBB2E9D321CC8D0624DFAB252E4B92D1F5C455E889BB
F1CBF88BAB99C91112C266328D8A85976B5C34C57CB8F2B0FF22485F954C332E
781289C284BD763ED301C3A74B9A9894BA8EFEC9B4891EFECCDCBF04B7E803E3
3F9FB1AB34A21512EF2B618D7BF15201B69BF2301E0BA418DEB2EB2B18262D52
9DF138ED95C0965F6EF1B4B9F54FD6F36E4650BC04C0AE0FB4F043144C99F35A
215B53DD2A8F46512E7CA9CF68F93D6E03DA4AE6A7E98A7920B72534DFD5B474
F411F9A7083494C09998FB17B13D8773D1003F35771D139F61877B66CD0DF79C
3AE123796DEDAD425BD8CCE939B8F4BCC31426317D3E07E724EE34CB4317FA4B
E766854AA51DFECA58D6E39A107ECE8A3EBE7E645FC46B99EF5AE62DCFB82C50
EC9EFD3DB2AFCF4C308C9E0A0E16CFDD2E70DC54A2A26B1D78582A33F5324815
24AA03C4A49BBEB1B913570A51B2F96D302EF8913C6BB60D30347E0C0F1BB457
048ED47325A221E91DC93BC429BEF4B5C7D348B097477DF8C6C324CCCF965C39
7AF1B7F67E6FD1B5C4C56944521E76439B5DCA7732A29F37A08E67A149DF5058
17CF5FCBEB7DD5871EDA1C1A7482861DA97EED414D6FA40AEC9E8A3D579CEC77
37F9D9CC8536613C961731D322161500E15ADA373D503552C0B76FC0B3D6C0C8
BB0B9B743486E0A343D68682DDD7E10A9FB78702FC95EE0653382141E52322B2
5F345E5A426C7878838228291F60394C911E30A29AFA3052DFAC06AE4085AADA
E69D1C31BA552A09B30216F9A60D1F58E74D093D94D71820859189DD2064241C
0568E46CEE6FD265E71EA36D74CBEFC62A27FAAB38B52465EEE09E12C448292B
BABE08876048521F937A458A63396A578F021315479918C5E42AF88FA2A7B54B
F0E68323C210385FD72FDE47BE227298A76611355D1CC1178888C7F0600AA23D
46443C32527CB28CE97C9CAFAC45E9CB3A9D5F4D96CDA00BC95723B1F41340EB
97BAA2AAA2D619527A955C5840EEAE966F09BC62E0B00A93FCF87163199C3E19
E8142BC294BE33E255DAD15F08252EDF5979C14C46A1ACCBBC6FA8D113BD09F0
5F0B9EA64E63924637F445C82F37BF4505C90DE7B0E3C5145FF5A3A66EBA7746
4747016A56DE1360969D1FE1E23F0AF49750C7DB9939279A093CEA32F30D8B97
15C091CAF8D0B988C07151AE7AFC6164414F82622BE90E015D2F2940ED551440
362ABF983E4E17BC5EB1B9A6B368AA1AF3A022DF5BFAD47A1798199D542502CF
3455678E261DD2E57766C3B48F0AE2AD2EAEC84A3320B7ADF8AFA0646A4031E6
2BA78021D66F223A6ED2EAE1534A139466F7F62EFEB31687868A864914D7D81C
56574A8A37285AE9629E2F0292329EAC1935F8964877EA22D9E5D4256F3134B7
F3A888AC9B4B308A8A510FF245BEC7B3004A57E094DB56B720D616EBF582A3D8
0351CADC60B733E50FA695EA1ABADCBEC3ED6251A095434D81B1A68AFD88B506
A966D12FDD1BE0161CDFBF8BBE8490F57E53C78E97517EF7FB75BE2C48943F40
72013D02D833EB5FBAC0C354CE0EC0125D91C47F34D796FA5A2DAEE1C2B993E2
DE87AA82D15BF61516A90F3B8A854B7EF90FA0DFA208E4C47AEE282E191401E0
6D4E3A5D9B158C2850D3804A3FD46D6C80A24323148F4213CCAAC483B43BE2A9
763FDBBDBBD50A065425E4B46F8EB3B207344F9CA52989AD8A876F1338710D36
87793CA934F06A27C78C5122CD9EC73E29A912FD7C4492035D2304EC4F908371
6CA7906B80486BB5C799325FB271BAF42325A7CA185A61D33A7E3016DD6362F8
E070BD72698FF688E5524612DB78B0EABFABD3FCFF3E6BF969376ECB29BB35D0
8017FDB67ED9FD13987E8161D5E4D9461D2390B36E5A8B6279A5D2569F321B44
C35CB0B883825D1B428F0698672E8720A77B1E74ABF75AA0BB7C16CA6991ECD1
873495FAA5C7CD44201F5886E38BC01F7C83B6356A4F1B01317BA227DE03A9FA
9242F6C789458088527CDABEC674B13580A32722BEFDA8D1EA72A2906D8EC97E
89ED5CD37A5D14188AA679C8D06FE447E4193FAF353AEF3EB31FDB3426D23D1D
73D277C764EAE89F6CA9194A2EB640F2E213494457C432214A3172FA5109795A
6CB08AF08E8E864A163A4B146C1704927021CA706CFB9D939CA9DD44D88E2919
69747968A767404424181FEF198165415498597436449EE0F9445B4C806963E1
FCB5F93AAA169C140A332092187F94485C9684709C709D0F7855EEC149F95C85
3E0ABA4975049E84F39C7D464B8E802A47C2278F2BD50DE2A806B0D7FAF7914B
1F5332362D5CAAE2FA4897AC1219601CFE32E4FD82A4934566ACE0BC38C60FC5
3EA71D91AB4A3446BE332D431AA32C12BC77E3A4F5DBD8BE9505E7F66AEAAE95
52AAFB17BB3FAC62D2051CCCC0A389D730EAD6B05AD28D49C2BDE19E62A2BC0C
99138A50E5C0F57977D929DC9CC8264AC890618A9B5B66A7E7AF6435290BB201
78DA4F0C8F564185E66A3A161EED1F99B8496A9FCFAC13492DF7517E9A7B1D4B
CD68D6563014066201CD07BC78787F62262706317C9D469E6F95FDCDF2EFFD6D
A6341DA7AE43CCA38B94FA65A14FD85D083356684586311579E86AA85E504175
D3CD2015F0B47D3AED696EC627ED1D0751D53DD154953C19A2E022CE824BE8E3
23DBBAFD077E5237292B221C3E656F55B1396D17FE01F2FC42A6B8FA247320E1
FE957E9F8C0386FC64BD8C6B9A426532FBC2C52F2FCEA1823378147D8FD3E01D
BA055CB17E0F1D15ACBA33F3252C7B94550845C0BC778E69BB175C5BE29A1438
73C172AF41C79FCDEEC9CF81023F7D480F5BA2AE398B952239556B453472AE5E
7DD351536DD39BC5317C637EC2C0E29AD1EDDB4500AEEC2DF9522C2367FD268F
72ED28D348B72E28D92E56592F27FC27F1D42B382C47EAB4E1169392307E2D65
B9D8249AD739A01187780A5F2DA35DB56DAB3C53646E49A14FC7F230D294DFD7
C250E639C1B5AFA18771B90D119D08D137EC6AE2AA3470A31013226E188E3206
807E95B814AFCF12A840A967742614C43BC446684FD111C608C81E9BE8E6A1BB
E631CFFC65A4852D7920EDFABCFD4E274ED28D7E54398EF4AFDAB565D85435AF
7584B0430BB45CFB02101EF4AC95A98C4212282BB7BDFC555E17D6EAE709EFAE
B84B0B22BF5C9B7CB9DCE571C0AFE3A4AC17817E48A4442A1CF37E9A8751D100
5486C545C90115D7C9134683BD7AB587193516DF2890D5A2DA7AE0CAB2AC5B5F
CF3A211021A192E3252EFFDC6F753109AFFE2AABFA16FD112A8E2A572A4EC1F7
8928F8E2F602A1336C9A1BD2D8078321A34E414048F729D337FEBF0EE12C8D06
0C96F547EEDE65F5E99BAD99D346B25D47CCDB33CAB7AB3A1B1AA027E1A67247
B9234FDAEBF076B113AEEF498BF3047C757EE0C1E5C70A697C14DF9484FF1DF4
E1A737DBFF7373F04385675D25C929A712189C350C90DFA1C2854A7003CDD3FF
1C35D5DA9755BA29B20A7FA8A4BE1580D9A6A399B4B892AFB196762AAD8CED68
F66AC206505C34F046EC417BD78531EAE279EDD4BBFB4C965413
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols6-Regular
%!PS-AdobeFont-1.0: LMMathSymbols6-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 417 117 0
%%EndComments
FontDirectory/LMMathSymbols6-Regular known{/LMMathSymbols6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols6-Regular)readonly def
/FamilyName(LMMathSymbols6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMMathSymbols6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-4 -948 1329 786}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F1E34D6494BB6367FA2B172011486EF5
844F5B89DBD01F38E82689CB16E2BB46A5E39043E718382C77B554CE0F5BDA45
B555F543B5A4669091DF58B79AB8A54B63C4D96C02C4B32021405D3A086D8A06
2E73A4A478789C6E51C058FDFA980ECB2F964EA385ACFC9A15416BFD38DD998D
35255414BABB9C6DD923B8E866EB22731B625EB76647E680B79EDD64B5B6D9B0
ADE8F024B2CE77FE9D87C1A1286ED288D3FC51CED96F6009F87E505A8B9D4288
4AB9134B8325BEF5BF60359BD06C20186FA72EED84622454B0848BB74A51C541
E9F8468308E20E4D41FE78074ABBEFB80E7B5B58641F660CCEFE5A36C7E1DCC2
862B5005575BF1D4A7845F976D9A52A7E2A33558953A65CEB6601B904A42E75B
92CF31D9B57842CA62CC666700C974D6C7B88C4E3D1A1B143DAE1E2DDF725758
E2E6EB357406DF364D2720E373DCE143CAD7FEC1812EEDFFDEAE20D75039850B
0314C68931A618291AD30A299FFD982858215E9CB25FFE9A6A805EFEE2B01B62
8A682DB0C011615552F03DB40513901CE59ACCFD6C2D6F05E2B6C8AAC7EE97D8
80BE1AF192DE2AD3600CFE96D7F2280FF1D7AB28635B3FFE975FDC6329DEC300
1F56A4424DEA4A64D855B319ABD08B73E84F536BD6331778706987D7AB15DD1A
4BD7C272B4A0B383C6A680B6AB91AF0A3442AA8D1F163221902D87F9923FA77E
3346F09DE23C25D4CA5909B956FA16229BCBC3FF36EF6933F33D529CF2847EA6
D3A482CAA539ACAAEDB0299025B307CA410FBA6D82B4733763DA07D521E34DD1
6523917F436B78AD360BAABDF2CD7016886C28EF390A51085691FFA140FCC6C5
1D7EA07BE7F71EAF563D92056FD6F12A603AA2DF6708C73D283DDD92B043ABBF
3DD2E24A4D5FF0DD4EB111616C102637EB49E17B440AC54D21DFB7B2411B2B72
CF35172ED4505DD175A836C0B599415C638471E3F0B4BC30296704D41973F487
D4C1B50A848F2E8C0A77E7FC13B044E5D336C31BA0F189C36F9D48CABEB786FE
A0EA4CF0DD9598A9036B749049229902B646FE10BF4DAA942280A326B0C4356B
774DAE57D20990968A49116A09BB7F320F0CCD98F2F7DF378E1BABBCA65215C9
F425C048AEC1C929FDAB375F3B47EC3157488ECF3EF7B3069EF25ECDCE357DC6
CBCC1EE0BC7AC38FBA8107608BAFC9DB86B570FDE7E6248B6EDB4ED358D5C45A
FF2A3ADDB1E2963200F24C20A0D1CA998BD258D1C694069BBD9DD80466FEF509
9993B56E1544A2EE08946129664626F0AF9F7E546F6AFE62DBE7DDD5D3DC32A3
7C5BD00DD016072EEEA098A86BA7B6AC9F23CF55920502D0BC7EFBD5CB140E02
C5A8CC261C06A7EF3CAD09AD5ADE65A51B6A915CA708D66C339EACCC45B962A6
7731C76AC98678B54E6E3A103D82F070F486122EE08A4870456161458B6C93A1
602C336D492C4F6A7635B85ECF70EF5733EDB26731D14B304EBAF0638AC6F539
C21436A7D25573FF22A0D0A0D452A23F35B688B79D566F17691C3E15ADAE0B32
D5928724D303A23819484A60305B58B88920CEA06984C65370B5ED6B7F0EC00A
2490B48D7DEE3A263A115E406B099A5C0C9572859C117C40E1883818F638FFA0
C81307075E817AB54644AE5B5CFE5D573FB3C23F20A445B43A5E8B41778D313C
FB95D5F337FFD07328565672AF18C2E86AFB4153C60473DBD16C9D39BC08DF9F
8ED8D4C25DA3D8A4FEF6F2E4C954C562318FE8C3B8A7DBDE8F82AA3AD68BF81E
205B482B0C4AB50BA6450E56AA8DB6DB7E2DD93B4759A32B6027EA855710C966
B7B3541BFDE160447700520B9C18B41BD46A1F8EFF45F926B9E1B565C0F0D458
67
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3D6A6325FBC87D9D0E635AC2EE5069D7F11D65E7B61E
CADC94CCCE89FB906FFA6E784E7D58D0F717817F3007FD7A87F53AB40E03103A
5A994EF4A4B82A4CD3AF4410331B1A4F64E4BC682C4552ABBB7A7AF1BA2BE1DA
62D42F448933911C81895DAD7D74B8182DB648FC01DE11C0F21F65DBB6B481D0
5C69088A0E19A14AAA9644CD1D850C6AA826B223E36E496B79B2C7384BD18B38
17C4B95C493F0DF9044517835C5A18B6EDACA49FE842BCAD47D03CBAF47C14B4
B93BAD310343816BDAE9E45A690A776E288BEED7010ADB1076B23257F9484960
9B14C8D1F96356661F43F7ECB1CF1480CDFA710290A6BCA196798F6C6054F05F
09CA349F60F4C7D65FA9CBAF21DC1BFC18242EEBA6A5AE45421B52AA33B201CD
60D01E56D959600E3DDBB1E00F77A025329DE55458EE17551D5F34BBF7FBE754
C780FB8F73146ECB5A245A39A7FD55D42E3FFFE439D20EF38EA4183819335015
CF65817532EE73D71316F0AC637F85D3A9743AFF92AB12E18F4E797053166FB0
DB325F71E119426B403551C0BFFAFCE6B05E537144CA3F6E7E9586FC9CCCBE1B
FF77D3834607E33F7301AC5B13C3896CCC8C2EA7E6A19A68B64EAF236A3468C0
F9453189A1D67CC8572030668FC456B3334F76E5910578DCD4A83C7689FA12A1
1F62529180060272B7EDC9492C1FDE14151A57D02371497BA21EA208A185D6B8
2C973F1C438C704EABA8A055F8A2E33E28344A7A9EC8F2CD1BF58C6C51F6431D
E0F8FEB6C3091AFBCAEEC0FB3F3A46C68A322971F6A0B8C2FA887BFD5F3B2C23
FCEA72934FB0F37723C0C4BFA4DFE3FD4AE99F5A8595EA8735A065390AAFDBA1
37D3B30AE2D428B27933780412D792988A989C16915E134A47A4A117A55B66AD
F5E352EF520AF90041D351B8449401B5333312F37DA8BE2B7352B7BEA2628D87
4BA2A9924DD9A403B1F7B8C03F8834825060097F70B3B928E4EAACF4C2CF4E3B
389616752FD84BAD4064ADE7559F4CFE235BAC87B052201479E93D6ABEE3C8BE
3A25D289AE47FB1EF07D9740BCE7F7B5A95BBC8700418B4681EA43A9A5839069
03E5470072B84A86B7C68030EB59C665F2E44F5B8B54D0FAAA2D6EC223024DB6
5E42C51C0C9E2D80065ACF2BC55A8C32D259C97A2B5F561E8FFCD09574037F41
20D2D998904694944024B606844D6EDBB622AB3EF8F143E67A096F12F7062D09
371C2A07278CBAEB8D8C18C1BD300A1E62C24B4B81628F9F58DB3B7384EB5EF6
DDB1DC6FD8E679B734079668678A3B7D272EA2F01F9D89C8E345ECAD684EA292
7843B2550B550DBF6B4483ABD354933D4438D50726AD6E605E6C8DE69C286151
146DEEC35556EB141FF0079CD71BCFDAAA0D59D8AAA1D375B9E42C4332B8AEDE
DE024CFC4657DE0E98F45E403DA8E2DFB15A83B1EE7F821D5A0EA0DD79928D51
0BD106D0CE1773DA723DF6A435D9CF47B87433E87F08CBA374E900434D488164
6A36411C9AE0CEBC7500EAB68E5CB9EB2371CB357A3E875A24C0B789B96C3D08
AEBCEEF0EDB10F34C53A58F5189D2E1072489D23946840DC287DB62E332F39D7
1536A40B9883B967B718A89EFEEB3745B95129C783A2CC49E2D4C07D54A2F2B0
44629F20CD20CB22071E0E2F291F6F80054705433EAE0145598C5769E55AF1FB
2030756DA1D8B01F6D65459A6900519CAA4AC90198DDC682A25921E6134A94DD
224FFD3281D5BADCA66F2C00FBCBCFA1E4E4C86A7B2B5C4D63C6DD941E44
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A110651116B7DD14A3129ABB2840FCA3727241C8C4
C3AB23EBE6039BABFC0AC5475A644AC8EF343B2C8BE0428AC71A76D0DAD12CB9
B06D3122A737C3157733965D448D505F73A5206D01A9BE7EF0EF6B0BC1B16174
95AA0382A6CE823431E43B9F000BE2E075BA5DC715D0339BC3114723F4B3A4AA
8EED31D7AC19EC755071FB29AC24467CB6ADAEF85C31BE5BB7224525D15D0FFA
4E22B5A0CB4FC82C4BB848D07EDE0C151CB8A8CB6EA47F3B1F8BB5B13D7B90A4
F95E5407FFA1D391A7728D51B18A0E1DDB27E711C889B7D5D466B82F3F53CE91
6B65496DF9FE3E1C4CA174425B63C90BB1162AF602DA2D5D4F3A3328392B5F3F
38E978BDF45C9B464B9DA1290584B298711CB71772990B6D3A86FB04163ED364
91F24D7C3D634B25C2CFB92154C076B263342E8A6977987E6EFB3DD2AF1E6B42
AB01B45966A9F6C2FDA093CC4A456136B6AD2D6AEA9955D9F5B0C3E791528069
D2131BE1C7C43CB9DA21E1B4BE829E3D5C3D4D773182176A93892B3360AA39A5
E7FDB9D0A5B7C5A4AAF583DF1E93211411DC7691EDD20DAF7877F9B2740CD60A
8AC9404B71839F9A6F621F2D21847A702489B28CF62768651196F757C6FD641B
74BF8864CC28D7AAD8EA3FBBBB407E0ACC52AD3833A612643316CB420AF3DB29
F008BA36A2EF0180D95B8A5DAC624EFFE6B1E94F1DB5B3628E247CF84AA1D0FE
0D47AD8E7849C5C3EF1EBE917BB0AE076FBBFA04C041A0E29BAC5703A83039CA
96985A76B61D30AAC8F75EA67125C72A4E324619D1EFF42E23907A561105F86A
9C9602A5308D897A052CA1F6A18D7C66805E539CDAB99F4897713982986AC73C
DEB3B4766714F14AB9A908E48303B8902D1DAE6A674D9909398E1F23F35A5602
5DDC8BA582214CBAD469249AF698FDFB7B4EF64B20C24ADEAAB40D5907656CAE
0CA0780B27C5D6CE35E7D5460EF05B1A5136CF2C1DDEB46F7560809DF7154DE4
38CC9B047350D4E144978CB3DDB79C3F45CD82E6891224A5614BF4EF1DD2FD31
DDEFFE8162A878270D2FBEE37AA230330D81EFC166DFD53207B8F2098A92C807
BEFC56908B359302BDFBCBA4C379A33C5E7EBA96669D80EE6F3E05905CCA51B2
6403A2F70903410B4C7EE09941F9ED40BDCDAFC20C8BE740A27A9AA8A21F616E
C20C91834AAC2A80D5684C5229E8A44E42451F694443F3C4E2FC9541C8344D35
777173ECAC4D16FD02C19C53EA68FDE62754AEB1E15AFF67186C96E982428FE4
9289726FC97AB7CCA4EDCED29E00021831DDAB3D794484C4A85B8F0097DEE9B8
406CD529CF49A29030D28090CA803D774C5E1D01D98749DB98F222CD610262EF
74F4A0A389F9BD1A4076CCFA85D117825A1595466DD4A1542B74D7A7D21A0483
A3ED3F80BAD4BEEB39C3C16C6C9C2CE8EC07EF399A4E2DE8DF3B36DB44DA46BB
19EA1EAF0425B8B8CCAAFCF568BF66A41F3B3AB8D7E33C4FEDDD970231A28228
E55E3F16D464B4FCA258AD32BD99B92E6E63BC6D9C4E661EA30107B2945D98E8
E9B81457552073B261087727DA51CFF0E36D2F6F445CB662BD8BCC4CDB877030
ACD3CBFE8B51B341628505C51D9D58A1892191F649B2BC583D15080EDA86B614
EFF5AC56F4B056AAFCF66BD9DCB19A5853273485E72F65B9817B90D49C546F4A
C7FCA094F32499C0F8AA33D2C7D002838485FBCB7641550C829B842802A4139B
CD07D076306A270CA7DA81F744079461180436BC926F08D69F8EC57C81F2F662
252C0709FC2C8B228CBA5632C5C642A5E89D476FD2FC56FCDBA6777B31BFB424
421ED6047E392273BDAAA73476CC26A32F37E719C0931FB872A195A2575100A3
3E0287C97F91021615427B7572E8002DACBE1FAC3CD9A004F3ADF4F2DE14E190
F50D2770D32BE1E435043FE03050AC7BDCB219499738157FF361C35C72743413
D41A56566E5111ED7DCD009BB3E3B6B330D7FD29852913C5BF793ACB714F9B79
7B2669D17D52F256FFCDF706B456B6886F5FF5F416C079AA846FD8D85DBA9094
E105CA0C6CF6C122C2ECBB711D518693AEC75AC0AADD0C11B0065E2ABCF51132
F38CECAE9271978280C6753045C840785F033D885B728E89E3A21E12FD05D033
B7BB01DD0B9469C910B7A7D910B071BB90419EFA4512B1227E6D1174CC7D3D57
B0590620DE35BA53A5028CC2FAD6DA11F18120152D073CF4219854F51D3B81A2
968A2633D19D19CB2F97354DE86AD607D2F962729B4543399424634FB4845081
66B03210F3BF96D6BF08F38611A67040608203A5C5B6C62F58C1E729F224EC05
FB4EC009EF48E7E56CA368DEB5AE7DFBB73FD1A0039F86E8489003F84951D921
87CCB41F8F9F578737059CCC46416ACFD62C7DD73845C80493B3ABABB9111866
00AC62FEFFF4F7754AEF054D40CC21F37FF38C445257E21C166E3EDBD89CCC5D
86A25E591E0531A442F63B6D86590198C5957A988BDD84149AFFDDCE09BF6427
B2F8548CFFBE68AF71DD6B19F8454D63D6D7B882B2A0852348DA855F03B9023B
7CFD7BC19B7456A83B17083469EE367CC1F13B143ECCB38C704FBA1E221F4025
EBE109E1623BECCB8839DA1968122EEA8D652BE7479621A99C4CA4F1DC54F01E
CD5C2CED3A0113890BD4180C41990C4DA6292A4089F04CEE35C0B41847C41C14
3A8ADC78D796FC7CA0BBDB2797107FE76CCC335F6DDBADAA9B42A7E20E8E1292
7C72729B9270289731E6155BE79E19E7A9A40E38B7DC25D78E2AA6DE2D8C18BD
F9A390CB2FC2C6ADF1A8ABF2C8E1C883EDCE8BA8A0360B28CF72A35796201DD3
6642B5A8BA107BAEA2B7086DC2E48B6B2475EF5245111EE91BAEBEDD15FB6595
5F91EC050A8CB65E040980BB5098946A6A5FAD931AADA4A4C186D958844F5450
60C666801C182AF99D4A8A3DEAEAC97987BD979A997165997EC12D816E8BDCD2
3FACA303FA5E411392AE9068155217696DC44E74C5BFFD47D693400EF318EEA6
EE87C03DB2E340B1D2D23D99FAE30BF0284CF9E8F505D5DBD7BBE242FE071FEA
0094A5564D8A8B0406CA423CB281B766B177D60EF103E8C6155D3FDB500BBC0F
9E152C30059054EE92951E4A202AB40AA1134FD48A8C8480D9137F359E6287C5
369650A0642A0F9243CC31AD035DF3642872150141C36D1C1901DE94E8214322
20026A57015ED62CDEB4AD85F262EC11DF033176F41FEC04B5C12B40DD1B386D
89AD8616B4153C074D4DD8DDB484F625BEB57E28405D014E912B80B490CA7E96
A5687BD9F33D193276CDAA152C0C500791C76B9D0A0A14F56ED1959BD60C7F7F
5BFAF8497205D4BD589F26D909F8B129941C49A1B9D9D18DFB3515FCECDBAA95
466B14AA51BA7362F9193CEA8BF970E6879DB85A356C5931DC620F62B87A086E
A669CA7CC9C0DBDF10DAF2F8CDDF4FC55650DD5BDD8F860E60CDD9B72B0340F5
A90C5D915E59246A382A2EF44013126E9745030171081CFE3F151D0BD24017EF
A1DED65711B579E0B60F46E594F776E93E4BC9355CD59870B8C57F2F7EEB6B87
7B917BFA3D462687AE0F3B838C3B4527EA4929E4C6E6FE9D65660B14283F6EEB
26FD0ADA6AF173221076CFDCEC914CD42D09AB2960F8D54E965C4D8F99DE6CD6
9EFF58A2B6AC974CA4DB6E0CC76939E99373CEBD7DF217D01146B9AC973F45CD
82E6891224A5614BF4EF1DD2FD31DDEFFC2420F4F33AF3E02DFAAFF16DBFCC1F
93AFBEA0E6F252F817CB4A80E94B9F75FA7DF1AAD0F96B2F1290E8451D8DD5CF
B5134DD46C874040B8B4DFC0DDDDF3EFAB0519A54FDC35209300AE63A15A7D98
3219EB991B300213F2BAE991DC3F7E9F8BE834F74A616E8415CF27C45923F49C
BED40780F65DF7035403CA0F72E4CBC21733BDE36178084BCD78BAE1B1255B13
9A4B50B093D58C17846DE283C4435D8DE1064D3D38BCFD0A94DA868981A99E24
41CB80D1C7CDA6787DCD0412235D838FC71F9E3CBB1C294C6800FEC0A6D60143
CC3D55F1DF6AAF7C9D25D99E47E39D972D0FC17976DEB8C98ED2B30FFC89509D
FFBE1CCF8C3FFE0E0D5D4EF5E4BD8A5B894D2C4E3C2722BB2F1C3839C5ED535A
8E130B46D3C97F4DE0BF14EF07EEC0746DCFCF46E43E35EF09F568E615CE9415
8D9E0A162195CE5FDE664A83A2078F2618C6D2AD6B30AB093918063F327A4949
7D48C8C7F268638053911B05AB6F7A67DBFC81E3730FA073A68EA7B6BEB3D8CF
73C66752FAA10EAF84BC9F306B44A7BDD35F637D616C7003024B08E521E96934
060334D2136641C1AA345C7642D1913555EA1044EAA64869B9F4ED56C6C5CFA6
8B814B94B7BE0A5F23C22EA787903E034A2D141798D21C74A0F0666B13E89748
8269CC02DE9C5B6A9ED253D993C5C6E67459D92AC84FE2AEC2B41D8D1A84EC04
FD8731BA938A4163D000A21B5AED19750A1E41123ED4BBE53BCEED26A72ADC4D
9E342FEE04A350718B7C2A2C0B9BB8973BFBDDFB74A18636CAA7CFB6D6CBAFB7
66754C0E8934F9AB738930EB75A6B4AC9F95B142AF31B68D3AF480BF49C4C5B4
1E4E6C0CD5B8CA978D6AC89C5D7D115D20015326BBB45A5A17E377332D8273DE
D975BD53607ED94253CB78FFAD6ED43D54332849ECE66F8102383F02F7401C34
81B529E3E5D6A2053B7B143C3488E373FFEBB6941EB9F43E42D721DE4B808B58
72580E379881BE02909D7E57B80AD9F009C6BACF69858CFD235685341F0D95B2
7ECA06AEA1C21646AE603B41B8D938169C832680FEDF5BCBAEEA8FF20248B0C2
6B121DEC57BDAEE01FCBF6FC809FF182D689831E6280623B6CB8ABA8D9B716C0
21A65FF920CCEF8C950A219C8ADDD4BC7CB4C9ADA51ADAA643EB311F9C71D383
5B7822B3B824A70DA042C65F687D8908F985795BE88387B5CCCCD5FD1F4EFDE4
4CD22214DD1C4B36E9D2662EFB5421B6DE423A1EF22B2D0A83C48263F887FD33
B796169AD53821DBC6904AEE4B0127D26A7B5B38B038A531F6F7A78A0E6A37E6
7CA5BD656A03E46BC6EC917F222D4A3DBD38A53BAF5D1862C652D48774EF42F3
6DB750674EC03E8FBA90555BE6A705C385974EB527CAF8159AB9B3734507BB66
B609F75D8C1684111D9FCEFBFD625B7348402BEE59368220EB2EC57A6EAA6C74
95948CB7CCE21BAAC7D1358E4BBD39AFEA379FA6CF8E5755258959D93624FFE1
99D39A3DA75EB091FC2A717444C8E2C33EA2B27F17185FF2C992D480DE31F225
DC04B524A3A442C7E50D342AE0995D1280C93ECEF114BE6C34B2553C2E428381
8D4AD21DD19B49525A49A85F4C426F7D16A648D59D3B346732D4328E297D2572
AFD038449D1D3D09D27EA8C1CDE68F1C2CD728BC91BE43AC75E07B866F2FE7FD
3294F1669EA97B3BEEEBCC24F05A424F73BB55E9EA795D3FE450576F09B34137
B90D95E9A49285A45B4BE4AAB05AF4C971DE2097309D269958F130C60447FBB0
C3A3A15EDC6C87355C5F7C8F82282B02EBD0893FF0CE4557E2E105DABE212A04
0FCA30A5BBF82CD1B7B1450CF9149C462D21871C2B71EABAC5FD96EB28E469E2
FF07E68F50C828BC2FBAE79527F0C70673FC604685676CFFF64C9F2630CABF2F
83D137D226BE0EE535E60BE83D8AAB025DD37D558C37D51209A50DC05364E23C
189818822E6CD053D8118AAA25FC998752DA97B3E3B0B8DC46F0BD3A5958376B
794F2043A295E20CE9214DFB53F6FC0A5BC9192DA91A270938270A0BA4B5DE15
28AB74393AB3183B6CFFE1D0E2948B24D2A7E6AC237837E38623E0DCA16B183E
B03A367918C5AB7825A21FD9354920B90DA95B5899C9FE409D491DB422E2CF38
2A1717828F1F96EE07F8B09D8C19FD0B88366F92ADD98B6E9C1E968A1E1A0612
8EFEE6422E41DF1519C73463AEEB2CA630B01A0EF0761F13888A4306667786F6
967AC17A40A5F235AE1BA3C6F3547FF24606651E5887FE8892D8BC5FCFF7B958
9EF18E1A4A35F047300D6074771B12E7CB82B7D0594BE5C1C51F60FC8DF07EEE
E87EAC1F91521383137F464150D390E63D23EBF909C3772B458C05D12FBA8C1B
5C69DC9941DEB2E1BD49C71652273016BF58FA4D67E59B58C6D9BAD063D24778
7282EC4820B16D3ACB438AEF68DB0DF2F2FF138364824C7D41C3B938A2EA1E9C
14B91C2F1A8D34B1DDDF6531B6B4968A4658C92BF33DE79BB830A2F69AAD4FEE
1096A89B45C068EEDEDF438824406B33720880BFEF9E0ABDDEC4210CABA30839
DB89474563B87923D523CFF87D0A87D9C2A2B7BBA7B9DB77866DAEAA53D1D80A
CE9C3B873F2050025DD29F7BED120FBC0D19B0B8A9EB179D36E67B902309CAEE
BE099C46EEA673F31E8E07AE5C862F196EBD7415B5059F3D5DF5F7CCD561DC7A
BC388F4539424239C618F1DADB9E78E7EA09785BF8E7F0C64555806FE04D6168
15B738C0A77BCA95B6F655020E2964AD82AD77382DFF4908DE24631F2C05A884
542E408BFDE756C91AB084E5507766A32ADA33A74E38C401710926936EF0908A
0C47C11951B2C31D44C06BCC58D737F7D239EBE3EEE1A4F981B0CCF1E9A685CF
A82CF91854D0CF8296ACB49EA77AFFD3DDD6F1F7013609DD1A67D6B5D1A4F0B3
0901535E7617E70CFCABD1B9A9D2DFEF1988B2ACA4C132F1F0507C890D96B0F8
4FBB8EA3200E3F69ADF949853808E163160D84537ECFC5793EB1C455C989AD02
4EDEB72F0E9058E784769C1427815484BA6E80A78B0C28C68CAE5A330D8FD9F1
CE856A4417B9F66703DE69A65DE65B00A629EF3A9A4788BCE1FD1B1BF12FB534
F7899E4912EFE1B93D0D9C81E0C180641E8C2B608D98A273ABF96524385F0384
97480C80EDA4C7B9E7AA036C519879BD2073F6457536F494EAC3A4FCCC293862
54DE597AE4C6A8897F9E44E6735D340C36307497E0CE91B6D1F1607EDB09F9C6
8ED7A52066FE65ABCDAA308258FCDDD13DCBB18E462B56FA07411FC067B29749
B49E74A594BFAE0CF4E8415EDFE5B5A043CD7E8E17FCB8B4ED57D7C61B0C7097
2F86F670A90B18ED26CF4ACB665CF384897F3E5156C9C207F4D6D24A62BBD075
2ED2E819C5510F03B635BF3CBA3CBEF05E584E68DE9C1D521D4C22816E43BBA3
EE96B446C0F1C166DE168AA57C32E41FCF507E742CE254F19EC5974B76A26C76
1AEDE8AA97262EC0173560C8F5722743E02E1E4AF4D37C1876C615489F76449C
05CDD1A3E631366E21958C665E166A285BB1029C6853A6DC3A6C6AAD5F00FE10
08D1BEA397E35C7F91ACC5982763EFA34A171A41DCB2E777B75520F5B6993A26
C20A2114E2BF2E1C37E803F70C4F652DF6A4537FC25299BE55008332B6ABA850
FB9F9FA4E10EA00ABC6139496272CDB27D6B56D0EAAA9F7DF0231FD18090D6EE
761B5AD3510CB3E47EEF53A3E89E352741C980265570A42113C83ED727B5BFC0
09FD73469E5E03218E29844B569E2EBD6271DBA6A5B619FA4AE846617AC1DA9E
DB3A2ED55D49DDDEFA61EA1F01D92A26434937BA7ECE3B966FA4A35BEE2036FF
9C5C423970741C76B14667721A220ED3DAAF96F20E29D2F08BB62D5CB5D0CAF8
AFE2FC900790F7F6050818D727B4FB3B46792EA4AAD3D5A9753BFEF2BF2C4193
8C4F0D045A0D14A1E6062C563D31E7FD87B97C86E430CDF1CF6FEF782330A15F
C937EDC90FC7F5D9C04BB5B655DBAE33483AB97D3A4C13ECA61A8D261B3A7430
7AAC38B50C0E55217CE221FC84C21560E71E1FC313776DC3717FB397BEC20C22
D5E14C169012D81142499024D4B396724448C274816D4AD3607A91673A3DF629
88DE97DA96C5C43CC63FB8E5FAC30CD882C2D90B88390AB7712AC342ED568842
60B501C0AF945259EF364631E8E8DF511894E8900D7D549842D3C0A8DC3082D3
5617129EAD7C8B3AF8FCAAE366D19234451BB972B559AC50EE733462DC6CDFB7
D0D7371E2705E323EDB4957F9A271F30E71EA8E2F40D990DB80E0BB98FB9C596
8B35E4D496E63195374AF98B9D102F00C3567F94414FB8334C42FEAB58B02F67
E9CBC186080DC2C27956D4647D2D624D9688C49F9C1C2FBC208002CB0FEC0524
2DBFF4BC8B67AEFD8E69441FE11F56E170EAFCB3E4B078DDAA6B27C4336A6E83
06B1D159E316B6036638EBE33CB1F3D50FAA69DEB2E80D58B526E647D6A5EA94
4C6D241A966FED368CE34E23516723CA3A9D6C19FCC634E08E4DAB02027E6F9C
6592605A206046CDABD9D54EA413DE4F2C0FDF06EA99B3174459E7BF82AD59FD
366E775F2BD9F48FECBDD6394953021068450A1F811E0D5971206D75965FA8A3
2224F0C87186BD352E33A39C6E994BD86803E88EEF1FB0A24A449B1D1D0B47D0
C8F0B3F8CFBD1E7F8B511E480FE0BB79A2DC3F72DCCA2A8F59A0CF417AEC618C
8B77FE83EB160ECB4DDAC282C68500194FF7CDEAE60DE7EFE008301D60083FB7
E8BDA75A112D1D27E92469076217B5489E162385C84F86E70D3BCB5ECE08BFBF
3727AE3B0A5D4BA4A68C8F9467EAD47506D2F6B527526022E4E007AFC9A36515
572732015C2BDBE0299E0CA26FB89FE903A205E1854AD4364CB8A30547FBF908
AE0781A7216E4DB5EC85E5830B36D54688036EE18D07609B53B0ADF0D9950A19
5F64FD3209C6D47B46B7708F855E5E41C8C0A3C14544F068343D3ECC39B6820E
33508181190387850F9073E30FACA80736C0BF828DC7E5A8F8F01D7FC3897E4D
B66CA9AB7408DC9222E1E405A7ACDF23B5B56D63F7D3ECA60C0878B250E28059
F269B6B1980DEC239A0D0344E6E5627D613BA2540DA3F064922470D63EB31C6B
D483FD867BC2938609EE52C0271A7ED1FDEBA857C981B51F8E8451802D4821A8
2B8A241DD366C39EAABA219AD8063ED4C879861B97A9FF87F80D8F8693448104
DA54C4B38AF1AAB91097EB7945141F506ED9908D8538C974B43AC1FA919F23A2
F2CF7A16BA18DF3377AA09497483C92E626F78D80C2E8F4F3D250BFE64BCB923
885FDBBE2B0F22F0DE8EF8B927DC6C54ECF3801E5C2673F00888665716037A35
F574BB08A82641F3636C82E364AFC94258EA016A586610F633947FFAA9702E5B
E4EF7CA972E2C284B9F6E0CAD92C3E68A715763FC442E8A736E994EA5B249B7A
07735A36737C99E1B7D6043FEC3BF1432E9D77EACBBE3D271C3DD27C28F75452
1E715BEF128F17A3CECF4206E3629520D3AE254B77057D96CFB3DA354109D6F3
AB7D037E509C5DA4A954235A57F0F59ED1C5067FA0E5D929236579DAD5A6BC10
5B8E6211C3F75B21A9097AD89DB843535B0E35ABE92A93C34702F93E2A590D14
A57EE877A5081B3F9D9B232AD60CA1EB8A423F9FB35F62D185F051EC5EA7FE37
F49D7B9A7192A22C566250ED33CCDF1DC4CD54AF2B27F3898D35DBACB95E33F5
0E6BB75FD52D81EEB6FC227022120BEF4803811E73BB37D1639B616A81B2E183
49C55F794B95622CF9876EBA850B6AC8DBA8B6B0143F4C6645BCA7AAA9947638
28DDD30DC18FD7A0C09F19E9C0302071E598DDE8D620619F0DB8FF54513822A5
86932D1B1219BE525A61FFEF80DB97BDCBF231E098CBA8E94F4486024D3F85ED
159B5B9A5AC9DD10D3BB974C0C92B89BF728B6BD03C5A92A81F5C6BDDD95BAB6
91BB29CFEA534319E195268F9BA8AC5BBE4DABB07F7BB64332BA41E584EEA50F
61F4C7066C1AD4F4EF77F2783FBEE4A0333AD0D3897B1A83AE9899AE69C60F7E
720947950F2AFECF78C15AF1FB203F784ACD13AF4DF00F86FCCA06B7DE925085
317CCF8666F075D42FBBC0D754AD58FBF92629DC8866A0698E72EBE51AB504A3
C238DCFCD3AD96645559ACA5056F7FD695D5C43EECABB60C89FD2B50EFD6580B
E5028569816D280D64CF0033144207DC526F24B186BF758FFAA8B678DF16A06E
747A7AC47A9D2F4A10FCF32787186F2650B1FAC3F22874A60AB7B789DAAEE741
EB538E3AC7E38B333C7D881CEEEF9BB535B3BB2DF00419F59E7D9B9BA37245C8
B8AD6664FA20D07AEF6DC4C3D25B0E6BA61F704CAA3AED4E0DB58184D56DEFCA
7213829FCEAC430A54AAB1C58184C186834F549D3C3FF963013711AB72B76C72
F09EB425566A104408EAC417BDB461014FA86C383A1C9ACC3B148072DAE9C7FC
A9F7EA5A376A808EB33CB9E6053F9EC4BB9EFDD4B00ED3667B5FDC6BE303A380
537800818933D735233093AAFA54FFA50A3C775B46790D67CC0CFC1B0663525D
6DB5D83E17A2EF9D954C1DAAD9BDC21AA657EAE86EB7E2DC73C347153B9B9135
A79D2898CBF7F1DBFF1D94F0F773B7D545F7521C2C0B0340F42BAC76722A397C
3D4B3BC97F1CC3EEFB3E577C48B5548AF393B7B15B87259D35AA0847B7E9A4E1
D5C3FED9F2798B38A29B55F2557F29EEE84D0D1410A9669D374DAFE46B1F67F1
A70A7F40E6350594AF318C9157FB09C1BE6A726E2FBC9FB9C1F083274F2033FC
FCE759E760131E50759FEDAC9FD2A364E65BAAFD767FC8DAFED6774B61B7E032
16A358F50893E391398AB4EC04059368E01F0739ABE38B149DBDBA916602E032
521102C48CB58FD53CC14CA3A1A4409352766D80E77B1270019E0EF57F31E9F1
3B93DEA04A3135D796AD9D354808CCA6D13C45C28B8A3FB41EB8E7ABB9AD4392
7837F9B19E1BC01AD5D9081E2479C772D44D6F7D41AC91E8404D8AE952C3C78E
4A6BC9AFDD5DDD26F745E1D1897D334FD59840C5A257D0849700EEF061EBA0BB
60C59D40F48DF92AF2EB6EC67815D27BA88BD835221447A44807B5D89D0FE464
663AF7A14D5225730A2A8A15EC363DAEC92DC7E8BCFC67C2C33B0C6383B5B020
3AE53A7D864F2C9E474CA311B75106DCE52C129CFE96F0DB34732D1EA6B32230
B3EE7BC61EF207D948FABB73EB127855B8849431DA4E0D14DE737964EB1C709D
6CAB9DFDEBA1E28A4944761D39FEC2A82A7BECAD074087293DEA96BC70B99CDA
0699595E3D66AE1107062395406A0635F4D60C3D5A5D5AA54D4566C36A1DE47A
8F3E1F128C794D9D6EF7E18E83010405CAA3AF558B2209D1E14466BF3406D2AF
6DE5C7F46BE9F4D5016AAF1F8BCCF2005BBF75779BFA8022F236006FCE1DFC3A
DD6AAE63F0F68085BFE4DCF0C8E75BA8EA33617F1E8ACCB5AB1EC6639823BAF2
248AD544A48273795FF8EC6F39C9C62D19747CEC01D9B10A106F17B39A5A1AFB
A562AA94C4FA36A7D076155155214A256768C846557A983C753D3DE795CF892A
F4BFEE6C45D4B46C6326BE2E10D764440E59594189F167F40EED0DF7150DB40D
2B141DCC1B60E8ED7E124378C3831944967B1FD708F9EA78FB55C05B0D65A5DD
1E06D19E0E44804AB992686370EB8BD3975FA67B42F775680FF6AA0A18E74DC1
48E58116C90C7B21C56537E4850A34D673727FFDC1C64F6ADFB046742F762EB3
667DDFC36995ABA438032624891D3480D1DDD17468D4DE6664E363591C86F988
2372BF002C07632B51972967E92DA968494217E7F75A8F8D124357B24AB26A43
876FF9839FA2646BED8080D44243E74485FB82236249F00CB9EBD541AA9FBFDD
EF1F775BE0C411788B054AAF22F09682A94A759A52DABC55192C708AC32DD473
9F359B1008EAD7185675405E6E48BB1722D84194DD4AB3AD437FE65C6C610743
20443A855CDD8298F94DB433419F0B6E7F23E21C499ACC7B5B6A1A3749C1342A
F400984BC110AB5978361D83B9D6C514372866A572B31491F9B9372D204D8D0E
C8AB2AB23D244FDBEDE098610F35EA16B5E86C9A7DF4EFF9DA9D4652CE666141
182F8636310688B8E55C6D1DEA631967D663565DD2094B345C3C32CC4869FAE5
4A5D3FD3AB69E247AC2F1758689851A9537CCC5D31AF98893672C3DEF7A733E8
39622CCF93615931BE285E034FEB45E9425DBEF583887879AD93C362A378ADE1
E8E7B556BB4DD1B0EFDAF667A918171169D8669E363C51191055025C731C7642
00BAC03D1AA472AD0ACD31264925810A365A9D8E21D9FD21944D8BD1E10A52F0
9D67A50F6B54A0464FAF0D6CFEA129267BEC1DB4C52ED827A7306C41216FC6BC
6F51EAB6C222623AF1935758DD30F69500C16AEFE3A6FB08B00FEAF1D31D9470
ACE2BB0D43B1D78411D194A831BDA3ED9E2F2B40A297D94F25FB8BAE37BEB148
2EAB2DA6DFAEF53253549A5BD518A6854A3F5B8AD99FF719D6C5FFC31F458936
B9EAC17F8810AC0338BA7DF2E210640AFC4EC25EB8DE48F54608B2468A5EEBF4
3CA37A12B2E1CD2F18F2D5563CFAC92827DAC5144A85A9C6F9FD6818A4915EAF
14592EFEDEED8B6FD5D925DFAAC92B25E543603F2B5A4EBFF4319C11D0C1A24F
299EFE32DBF5035ABCB18BD682234879B242AE1761CAD4FF35F5419CFB55B689
72EB810AF897C0C90D3EF420175E17CD0741FD87972D92438937409FC21FBDA3
72B3F3760F5FA35BCD767FEE4E9808EBF05438BD1342C4DFC75455A2200DBC80
5F99EC797F49979E2087FAE20B58957A46918DADC4502323B2A791A83E9FCCE8
22DB28D5BF0F0F1E39055E86180C7D70697B73BFADEFD307E7E3FEE4E2BD0B1A
1A036DA5E99BEAB6BB88A9B70B65A991BED6CD2F0AEBB87F65D5E67BA200E39A
0DCF5F1F1C0DDB2999F26EED9D32C373613F2E788C56EB08C7E451F898B85720
0B7912C1FE9229D78A0C17BEC5FD895DFA1FCFB9788F34E0A1E814732B482450
5623842220E76AFFE3CDE50F7693D5A4D6BF6BA810B780AD3D7E35AC2779ADE5
03EFBE1DA2772892E691EE8576E76EFE95A49A50E08D6C4810474C709515D6A6
557ED09C2D30E4B73598392F103306F731AE6E2AEEA36696E017DE193113F78B
17C4CEA5EBC76C94D6DB8098AFEEDB9891A27ACEAA9575819DDF023FF06A5F3B
1A51AE4850C6FDD086EFC37539E2EE3D2BE32CCCDA6ADD87E781DEE29445896F
8446E62E36C18B53B5C7E530268B4D8550213E1B0DE3F8F07FB5BA6C7412E47B
00C8822094FC1EA50095E5D3604CB862B72FFA7E7B566BCAAAED470B4E2C6097
F0FC74499B24DE5052F41A8EC5003DFEC0732A013ED1BAF36DF5E525250725A9
5D15EFD0B5EC317437135C5D33FE0858970DDBEBA58D71854ABA6BABB05B04A4
463078EF6BA0AE68F883D9F85B81A3A160369B6F94F049EA27E2AB66E8AF5859
BDB0E2851C158D45F5E84699D182C88E74416319D720E3C79EDBE00878008538
C79938E46927723823EC950F683A6BFB55D22DFB161E1D6B6DB108965906D58B
A77D787C4130038FF6AE864A2170296055A1669114BCBC5B20BB6045BFD5AA4B
A26DC69F2A21261FC2AF85CBA7D0FCFEE888CC7FFDEFCBD573725715885005C9
183E5F70C838F679EE6982C30F3E1C939E01C3B08BB720CBE08D7F586D9484EF
F2E090F2B7B83498FECBDA947260922F22D2F2351D1147C61EBBCD7164DF65A9
ECE52E4B3584DDBD03B345F3ABD2897BC9C6E093D11D6CF0FABF10FFEA6E4890
8043700037651B1F31AC5797DAEDB801F01459540E1BBAE50115918754777590
F30082E28A8D951207D7C494A7B2784E050A11FE8B1A658D4116388E7C2CA43C
281567835CF037ACE47977EE4790B102B3BF7DEF41CA3B9DB089C0995E743FAA
61D23DB8D32252F00C260C61B660C0AA450558474AA95A6AA033661632CE15CA
D67EA78AB7E80316B269223DAD309EA15E9A4E9A5B2B808890A43D9E7F59104A
ADCF7971458E6CCC0007BD95BBF88379F413BE60C6CA25AE8C26461B380E6BE5
980537C58DB8E18E1A64A349847AB619D0058902BCD28BE99FC267519C065890
9F89D820F6833D13BE6FECE60AC0DCE98C901A79E3E0354517C3D9594188F94C
E7152535E781B50D4E0AD7377674DBCD9FAA2AE864B2D5CFF784282EF7462564
CBD49D1820E68CCC9DAB40664679E4B884C970AEFA2A2075A1AB8C2DD02377C8
A7CBB1F832A94E176F8B529878D4C5E8A0F09E2703098CB0AFA895CCC65D5766
8EF3864D2CC46E07875E4BA2A7E8C3BCA79544B1A2F756D81ACAE235A58C64DA
B098B8C4E12D9F9E97E5DBAA2871665E9B2C0C88320E353F314CA658190A354D
AC0D391F423C16690D1F50D588E92D6FB9C6EA7FCE6A387A1572B379E2B0F9F7
939EAD979C94C53ADDD85AF53C31B80C1B952D9DFDD486271BA9DA14E2A8D719
7B0F7D204DE6A601E8C160B0436C3F1193BED1C39420BFA3EDA081AA379231DB
5D3C332F12C995990ABF2E14210890DEA4EC2B1364DC3AAFE9A99AE5E06966C4
A23F3F49740365E82A7A293938440D2099A860251EEBE74E7A1D47BA78CAC708
C675AA7545CDC2563D140A3B9599A6FD7B8FF7AD0711E9D787E7D4BB468E6D57
8FDAE49D71676C77EBE2D09016E1AB71D7CB9F043CC134930B868DD9FC36A722
247FA3196291538467984F0432AB3EA1F5D8579CAAE0CBFD02AA25E4E522F0F5
32E256F125A70D6D9C9806549F775AA2861FC7E9E0DB6DF3B254084F00774588
9B9F3983211CF964849C8F736F141A0A108ED471DEAEC54ADE2497021A2B138D
4E5173D7CEE75B91B36DB3081871CDB3987169479C4198BBCE75E467680764A4
DF585AA8EA461D7B9AF3392FE0D813D860842BAEC5EB5C217FC685C06C5AE447
C997CB7E6E865018CFA9A68FC5D652D383688537E7372AEC13F4C0A0522F8D6C
B3BFB57F14A00BCBA2861736B09DFFACC58FB9E5E1A03A3210CBFD7A84A02588
0635EFC9F7DF6BC48AB4BF001752E0793D5F65D8D54F988704273C75BFE8CCD3
F6A21C5A0CF54DA689745B877D7ACCD50411ED8A7793FD6BCE759F8302447FB2
69D6C55924D417E931529A024711AFF1FEB19B20AC9A3E1BA1D49D6AC9A0D5C9
0614F22E02626ABD343F3AC0A9698AE84CBC80E8E06FA21B47A2C431ED3DEFC7
267AD9DE87E23C22BE18F0241EEAC306DB1C2695D6DAFCD4F28DF3EEA1A396FA
93271EE576454A86A0C216B224E0DE81D66ACE4062154AED3709422940A8C369
62BC1D166C17512383CEB74D9B4238067509B89C71E9B881551E150BAE5EAA99
2258B2A5C1CDE2B37C804F50577B6D1308DD9C414C5DC3FF3778462E0B1CFF46
90692DDBE68A92CAFAA72A6D860DD45A0CE4F8EC989FF10865E58A7BA55D337F
12B277CF7987BD979A997165997EC12D816E8BDCD23FACAE2B8C56A9BC0120CD
61B56115A4207DEF9096D27D3D68D2A52E6E372DDBEE44AA952CA42668A93FC8
4298A559CF694B84D116EE6F2F9709180CA6A8CA11AE1447F8070CCADD74CCF3
D403C8992A070CC18EB94802897906905AA46F02FBD40708F6E4BDDD108241F6
8A7BCA1C18DFC2DBCCE9171FE3C81517DB81CA5A9C55306AED6DC20B6B8EDDED
690D96080BC8A4AB8CFFE1809DF7903F6844B9D815F3AADD855C9CABD5BCC174
D4FBD61DE7DDB8C5B7023749DFF3D8C391A5FDDF2318F6D505E8FA521F1AB0D9
70F22F8738FE52A7252C221F88F1846293F4F568F69A45B054F4F1357F07BC9C
4E894307828CEAC70309B0777EC79BA23405490E40C2C038A89DD8484D4B114A
84B06FEFB4C4B82001A8B4E7DF01CAE49DE944C25FE57D36A3C5CA077D8042C1
5732284FA8C066B5436D54BC8BDCF1F43B5F2C93E3DE4D211B78DC484B802016
095DB3694DD0A6D87EE94E783D9B3A2F97C83025DD7225A34118652C11440F02
4431328D961B72BF5435880D10FA0F08607477B471844EDDFBE24126D4B28B93
2406BA5D3E400D4BAD47CAD5EE287FF010AF55A4B864B822E4BAA34B57AFAA7C
E31278DD472D9F6EF7A841D89700FA1C0652BE2C86DD8CAA9E18C093BDD727BE
5CA54B9CCF4829B721358F3572C613CCC6B7436CB4445C100492702CED2DDE26
F6A94321C8CEA614A5A206295152CE0A04DF64A83832242A353515B5B347774F
32B8B6C033ADC43CDDD07FABE92C29B5F50028523C734F57DBDF65731F1F3FE8
25D684C53723CEDC5E42A4D17F35791CD367DFB43C365661954DF160077B16CB
4AFC85B4C391418EC9A3159D590663C03DB348ABE792DB5E7DB73311A007ACCB
BEC9EF0221B8690A03412DBCBC3FEEAE3DC364060DB590DE107E8B918D946E25
0F561E5E394ACA6EAD2890CD44B966C3DB5DEBD271270A478AED964039213754
8DA359B01D2CA3146C19FA9B1B6B2661D80704753E7B5355A1AB9D34E4295AF8
3BA1604D89E7D7C3A2511C0DDEB1E7990C44350085E0428AAAC1CAE08123E5A6
FD958CF50755026BCD278CA322575D75103851939F8F9C31AD6C8BB89033481E
0B0BF46B0980D70618A821BAD346F8019AB18BB46736BBB09EE9610D507A4479
4CEB9A3EAB4A4CED1B6E0B10EEBE23B5D3EAC1B0024E13C0CCB254546A9A13E6
C313EAB94A45DE82B5B6D6483725D0EE18CECD74F2A8ACE261620AA95755D694
1EB85166FB6E72383139CCD6BBCD792189A12FC9366BA7134EFD67A22B4D6BA1
3F5DB00C952DEE1F6CE6A0752411EC61354347A4CD14FC73173819BABE5F350C
8F07C35FC6931CB2408221523F6357B54389C5E44E2817807494BDA2645D0FDF
CDDCC816801ADBE116E0E90E6199B6C6B3594E3B7002E8D19BA75C28AC30B740
FD86ABCD594DE52FFE1E8D9AB23A9251B352D6EC3623F663BF60052545C40B1E
231BDA28148953187801CC5CD18FC784F3E7FFE8F2DB95A06F6CF9326ADF1CBD
423F1F8D2826EC115D9473006122BAC0B0075FAA6FE3D21E5C1928F4167F4553
0C20E8792CCA2BEED71E9593D31072A4AA9719189186CDC274F18F4CB1B12A15
889917716A54910E71FB6278604A400504F2BE08C47F7D1C871BE42E5CEDA6AF
B08BED69072F0148171EC037B8D0E4544BD0B9F026702E30198E8839C9A3110A
BB979B0295FBB55CBA2B0D731BA72CAF5503F12B2D2063886DA7006EB5C0F757
82A3C48BD6B7D4DBB93C34FF23F23A74A5B94006A962328555D68A53069E5044
2E9743F3F9B0C5ECDF97B61BCB879A08709139B9665B6A31EED41D6955B0F8DD
AC8B61525A625778C31BDDFFA2BACB043D6BD9DA19777CDE50631EB47D8869C1
17571F28C61622F2E51361EDDC70EE4ADB28A94382769E41102715189E8CB50B
124AEBC259F4BBEEC4C50B417872AE62FCF4F33F544CEAD1D6F5E8820A364104
2A93E03E4F08252CF8F0EFDC55239591635E111F2E09C2B6EBD80B820EEB0CC5
91214A71153FF97E5F7175E65458EE17551D5F34BBF7FBE754C780FB8F73146A
F184C773B6CE6C90F7420DB2B423364F9C248A2A6CE2070763A4B86A2F487BB0
59DD7A3BD1CE641C8300C590A42C462990DB2960ED2C624CAAA8C031D718CB10
253C9735F81075FB9C13F2418FA6F805C3413C81B051C44143FE8310685F8DEE
7A7A5D209265986F92AAF11143DDBE52DD5543BA15221D9716AC3D4CD2AFA8D9
B404C04B423824ECE4443993EE94A4B4016F462FEA63BD490E1870C1B478AF69
608C3DFDF5EC927C6E79972AD10D4E8DDCB9500EE02F9B9B8774237EF1899A32
6BEAF8EDE7CF37B57B8AADD3CBB1CE596A0A4D093163E531B3D50F23841C7566
0DB73BCC0C763CDD3627235B71863EEB85F9A9B2AF0482BE1DBC3CCBD190353B
5B3B05302FC8EC070E1CBDA0A2D01F8A6C1A5C8DBF89F797AAFE7D2A43DCE6C6
FA3B168CFC6CAEA3906685F691FE955EB511C79C52746F73FF0F8F657550EEF6
187F5F7F7D4490B8A2FB977EF9B78A2F7322A4E260F97D4E1B6102C1BD67947D
4BA6FABABE7F94C0E09E6D9FBFF9E42091225BD1B26643FB239798DB5F75ED21
50480DD677F5CCF1CEEE6354CB18C50E1A0D3251BA7D3E82FBC4218BFCB1270A
28513FF8B925204E23A07F6C0E1387DD54F5C8BD071C4E9E489980F96B6A10D7
D5EFF8F0EA992128AE3DA845EA4900803467F02786B0C20CD61091CA81D8B011
8E50A9DDDA66F4E90EE833DFE14BBA53523C51904867D723EBA8EBCA6DE10F27
7743C54C36FB1E6FB57DAFCED1D207DB7B5F89C672AA53D222D84CBC9EB9BC1C
8ED0033F5C25CDFC5755AE7E1DC42399BE9FAF8DE843C8C20FA4402445F7C435
D7522163B2871DDB76497570C90861F3ECFFAD7E3403BF73AD979877DCDA412F
63573818F678B247DB2C011D003A4D5A6099CFD95353BEBA653AF5EAE9B5FB4B
4AC975ABA0286FC31EBB7B819AE455CB993EFA41FDE11ECF0F89A85BC37B8C10
FF3F7C0A84FB8D0F4A7CD215A7574DB1DB82B8242EDE7D009471002316940BFD
BE2C5FC6D0158061CC26D5259712E4B57653F9D831632CE00158768D48F3BD89
EAA11B5E8927F707C666AE263D596B221581344C344A2B9834F97C6EE56522D3
0CF0E0F0FDBABB8BF813CB9DB27CB44AA47AA0D4E6482409B31D8A933B867491
42F92E2DC5B84FE3D4EDB936C12AA14C171E664E1574D0BCBEBD43371442DA89
EEB4449E71A52616032DBC343E89AEA51373D03D817FEAA06D73AE33A0119E1A
75ECF417318B27FBC324ACDA4BAEA541AD1274E8DF9E7EDA4E9EE42BC013F740
01C255EEB8F5D1A721963033FB3364AF2B67909F1AC7322380E57CC0F77AE5BA
DCD32C16E9F72E356D61357B4EF44201DEF9D93AD8B6789FDB2D3B91A0AF0062
DE2AB549077A292B73EC6AC2F77A93BBFB1A82DDC05EC23D5090E748679849A8
29F4171A1515A6C5DB96BE98C246148C78733E56DC109D35E6B2D7C5684A2E02
58CDD1255630E5544FD39421BCD57CA756D71EAC0FE3987E95F6B9368142FCB3
4668AF303A6455B248FB866D74C35FDE664A83A2078F2618C6D2AD6B30AB0939
1802EAB00581802EFB8FBD6FD2D909977882A9A1E80EFBDBBAE4D6B738525FEF
89E5722C14B7DED7E9AAE85B0FD9FB9CF94EDED4EE9AAA436D4CF958C5897D06
B7C97CDC625A0F6F21CC05DA1CE1392F29895BE53E4212079FB6EF5A06F64420
5E11D810C3394BB359F98A79F25C60A4A220E71394F6605CBE638D9A6B5A0DF2
8C4D81535BA6B7FCE203F86658192FA198348A5849507B6949BCDB99AB904459
D4296BC3A584610663AF1C2FF053C1379F4470A0E5F39E7D95DA9DE8FE516923
D8CC810E306A5D5F0197DF8403DC91461325F612CF1421F3099CCD799C2045F6
30C7855C59CF9E782CFB09DF52F10FD3856029C8886F88495F421F35EB45FBB2
781CB050CEDAE7659CF5AB5721C8242D03E3D85EBB3BE1A6D4EBF7A9FDE0E88D
656D67859F13BE58CC190AE494135DA16F1B90356C4A2906F8030FC501B4758F
1C0CDF3A5FBB4A0CDD161BE9745ACE0C43D68962B5343139F7867EB4E3E29C51
B858BBFA354D2543083B82A86CB11FFE116CC66FEB9C7F793BB14E8788A7AA27
D398BE9EC3ADE5245DD627628FF45FEBDB6F1FBF31ABF448C9261B75BF1EB612
60DEF86A68505178FBC21A3BFC4E230375D47F4691E0E9E3543475DD74B8380D
E35AC5CE15B3647CE598A8EEB882761F236397235F69B085D0043D2A88A6577C
32BF18A6AFDF3ABA679DEF351982A0DA5A59038928891C9DC2126AC416013477
3461ECFC45FC9D522165C15C1AA82298592A665BEA7F95A29183ACEBE3738C4A
8C7FAC395E4C66432AB0BA87412982ED98260DB84337892A232A3A1E688B82C6
D4B3ECD980DC8CB9A9D9491DF42A8678BEB35D3729E04C1638DCD31FB2283B5F
192975AADB6E27FA797875F9901DB4E80FEA80DDBA9FC089627C5E37F1402A7A
77FA3BC6AA3C93B843D8CD8A652A665EB31D6B75D752E09EF9FCE549F4133677
FF06C973F989BB2DC8F8D2F0BC8F90E55A395DF0E9989EBD4CE838CCEC1AEC33
A784DA3CF791B896AB101C8EBFE4A0E12ECC40657518624A187ED8E03D9BA945
156C82BF0A3AB246BA724F69FEB1E8ECA3650FFF12D06A00AA0A625ECC8FE09D
B849CB9EB5667EB2B8DFA92F8C86B98A36AB956ECE9F5C56207134A09750956E
25AC33EA5F2DB7978E8581B39E56E5A0F9F8947DCC0DF6D98F56CB1C9658C5F8
2408AE2CFDC4777EB34FF89954F5D0CB096CEFC35760E9F293085CB54FF9503C
830ACB43B26371195013F74FC07E862198AB56563C32A124FD8EE5C6C240D3CD
3CEBE1A6915BA90064F20811492679748AB15280AD4B3250A866C61B3C0EB033
BB6A36ECA3A2B2AD548B7E6BC11F3404DFB91962B23EBA06FB78D45AA402B5EE
099644E30CE5DDE591CB23CB751FD7C3CF1E5DC7C05F1C8877B6246750E57C8B
3FA8546397527506CA0C9A886441FF55ECF8069E82BBCD6373B6D9C1403EA94C
9B96CC5168ABAD8FDEA9A92B42CA7EA69DEF4F35816A39E65B1528AE7D952D4A
4FBBF33C31CFB0D90876614B5124089BB90C6DE8FE799CFF1FACE2D91564F0AC
54D70F8EFC63B94F73ACBB4CD279765056724CD2F37B177FD24EC26F0986C535
0312E62604BD48B1B410595E35671969AD3647821DE447E90BFECBCDE88472D8
99BD08AC8B3A38F480431B31B899F7DDBAE4137E914F0FDB58421E1BE8C31183
56CF0BCFE91A160E8591C8E794DD249F042C646C782F7CD1CE84B3E462D586D2
298E6DB6142298835A9F872338E9CB2776054CB4203EF6CBB90522137C248316
4AEC1004AEE949C243A3E45F6A58F0213A23995643E7DFE7D83F6CC885D1FC12
261485E0C7EB59596B86455B9BF6B0C7ED808F00A832ADB0EE04DFF82BF14931
BC19D2F371264C2592CCDB0D90F33A44EC9D5ED3D838844B77BE2646205EC3BA
815C375D65DA5982B548FE67F7321554B62C9927502590AC4935026215EC675B
F3F31095607E6544A4F7393C18B2E5098B1E6B0D879A638AADA41A5C9F8815EE
6D17F25A1C8B7DA42FD174A42C50B1BA5A3048EFEE32C3DF4BE75CF00DFCC413
B504773D9B019A29B85979E878C00247A227893C488185343BDFA6039A03A4C2
E81BB9548C7003676D13EEE81647141D23F35D99D0BD87F6DBB5CF39C981133C
CE565A4724494BCE3B9DE545B92D3A3FF93A7CDBC0F9B0082FEDFD7188C47B10
2442574818D8E2E330E2FE5102B7F4DF3E4FF786AF36B4369B8114E1BDD48091
3E76BE4F94D9F38EE02AA6CC2DD0A8B7216F71B74689EB186742A76CD75A78E1
4EBBB4CC5C7C3CB31E874A1647684B190468BFB7BD287B921733546199D9EEC9
67EB4A346B602A97D3DEDF60578BF9D7A269F9B3891E13DA0344397713B6E0A5
C12CF863F539844E412A15C778F71AB3705F8B0DC79FD918BF7091C0DDC1AC4A
2265D10F6A7CEC42FC81D1F4CF2790ABC6BBFFEBF0F70C0EDD2BD69F1C8B71B7
D3DB7FE50E4006CD33AEAD858BB6A4448C1243A03DF92D4F5D0B1E792333087E
98A8C64083C6E51F0E0BF50829783DE783FCFE5578A4F104E71242BFD727F00B
9877A29014C2F7284FFFFEB953A66691941FB3973E9829A8FB165DB4E93B2101
7973B3B0C45734AF5241C5ADA1387512EC11BA6D67AE9DB3C7A1C3BDDF94CC4D
B60700C22ECDF5BFB4642752A12BB4D83D94D9CCB6C0ED8346967ED5134CEA9E
0287FDE1F2AF632754B587F41F1228E210803296B56FEFB4C4B82001A8B4E7DF
01CAE49DE944C25FE7D46A446637D795510E5BFA475E8051C73026B1B7D86A15
5D7ADB3C964D2311F07753D03D3A60F37EB4515107075FB0D088958A646EBD52
ABBB12751E0B5B2C26FF538089DCCC6E02B58847AE848002A29ABE221FA054A9
F5BA961F820F3AC3C5F7CE2DD08FA2E03CA8E6B46DF617EF495328457E8C003F
22957AC237C3787C332E793EC734534B91EEC5DDE1D8BF68483C3D213106DB49
D8C024312CA55295BF0D2089B505B5F326EFD6698E8A7357B9C86BB64C2A8D1A
532A1EBD4C83EEFB7E66D8D5634B7599362FDC9BF590AEE75706CEFE4F18C886
2E5654A33560BDEE0EFA73596387C452421EC871738C2373BC8E4A791EB85460
7D62C59BD0DA9C906403556E7A76B6B93D28A18CF021042D11CCC1BC769ADAA0
F0765C86F0B6262FA6B9121BC44C5A8E284E4873BF27AF25F361078A9CB36CDF
E0F56146DB8A861E46E024C95C9C33E9C9B38EF5D524E99EAD57A66C587F16F3
B416C4D2E39D1EC954B803C19DD4F5B58C4D2012E04E63088A0ABD799DBBA445
56E34A99F2D9ADB9FC1A3F2A44948BBD24CAA6C346A08DBE65B1C054C0587AFB
35100BC7688EFDA690E7F50875DDF46EE841D521A3FFC26DBAC23D501AF7D103
6FA5C7935303AD6D0DDE22CC3126DA21650479F606DA8804A0A299086D15E117
48BC458ECB2D1268127A85D3D37535EB04FDC8F5D9F4C526815BD2BC4397BB01
1CBADBBEC510AC62312150CE9C03A963704E7489B65F6148263D3133C7200962
174762F97B1EA411CE3370FED1ACEA5B74B3C146C6C2BAE17F65580F59F9F6EA
4686598F875C9C782EB39A105A71C22CF37FCB436570F66E2A63C856C853C375
4756D2FBD0636C61A846E078E4D74BD7D1EEB8100D8946B65A100C133FDC42D2
122CB435C268C6BB20D3A288E01E2B9173557BD09FD38F5054C5AEFF1640292F
CBCD73A9F93A2AD55F57D784FAE0082C0CA07D5E9A31F28B335C772B3FB6E71E
7B801472B7337FF348449C01E851C4736321D6DFCE2013387404652219C2C67F
6C2037E455BF0095264043E6D5CFF0C49EDA693A284FD65AE53BC897EC7BA644
6656F2AEAC8EEE684E50997A09BCF819BDA0F556460AA7F620A0FA2C6003209D
30974A40872E176EC00523370614897E9892FB61F519825659E854A83D4E6F02
B610E5B65F1C295CA297FF423AF24B9E1D2443EF397EE0AB134571CDBF397D2F
D2622C3A6DEE1F9AA4A8C69D6A244B6353F67E69483A641593A39E464E463B7B
35AB3B8B67394832AE6DBA84717637F4F62A76A595F3530B95CDACC4AEC65D98
0FF6310EBD4306E2D9D1D13E303C932EDEC2896831DBDB8587895C5C402C2B09
D4D592EDAA637B4E4E7D728FA4C6BFE47C868308F3906BEEE44131B11B2B14E3
284C24CD1AA642CABD334B5FCE8441F56E2FCC3EEAE599CA63E61EAE3FBA7645
AB573A5E5EBF40C14681BAD75E3CD513E6E1B82614FA1BA15276039A09CE60CD
B0153E27BA726B307A8EA9890962512B2DE3CC959848E5941BA3064CB1867C8B
7AAE570571179B506A34956E39CC9C850C14F356FEF1BE1FA788335EF0647D47
D0E941586D3382F2F6B0E45E4BE3E27CECE324917C5A99F4A3223C0586D6A0CA
26D77F403C06D65B7394BF1FC7D06D391248E496E97C50334C156FDD2F9219C8
6854E96B7BC7E6583D1710094AA106AAD876D5DAFAD2787113209C4915D38649
A1B1B360921675AEF8F27C12484CCE6E45355BE59B0DF425F90DF8FD6B5003D9
C6C8787A337728D1FE921B7E2ADA50A6FA842125360BF3DC1144957CE05D37B4
AA17DDFABE69046EB0B0C8C4818AF7E1AC71DAA8E9D8C453FBCA9132C26716B7
3584C049A786679CFB5AB82351B3F78D75DBDCE36109147088AC6F4ED2BCE9A6
8C65F5AE59866B856D69548FEC387CFC2D956561FB166ADC88349947B448513C
7E832EB9F35B28EF86C23135C3380CA6E660153B9FFB01876973BA7F253E0B23
37E5F0D8CFE4616B871C7AFACD58F93FCD83DCF3EF58FE4A6D2C9914290A0737
3ACE6F9ED34CF5FD1C81292D7ECC26429D7A0A2979BBD6460F393365098CA717
F915EC241B16AE8E74239906528C72DA8431BA410DE548B62768F5E48C51B7EF
9795E9EC65F8E9447202C94B089B617694B9D1A7AAD2312A280F0C0753434F33
D438BD8EED6A39A1827CD0583D9F91D8744ED7D04A96240A6E17F35AE9253E43
9AFE0E170A07F82101F2CB5681E3E6A516B301AFF3059366F293191CE257782F
236FC2299F6C6001512AEE059687FE5220B6547F10E5C09F9E499346B2E5D8D0
B569C347165E8287E05176C4BD9E405AFFE33AA6E0DAEE477C9DA3D871F8AB4E
0B4D591478C3BBE529B2AD283F0A6154C198C0600BA373C0C613DF501477E2C5
0C4C3BC46BCC1E5CAB15FF190A6E7333901B8625E9528B63F683E0A69FCC925C
5D25BBD041EDA5DD5659A03542259915AB4D160B857AFF1FCA8294AA33E53898
AF2B50737ADDFDA6A5FF6E1016133A1B4FAFC8294E84BB9A0DD7C48CB4B342B1
48AA93A8CBD31ACE5D70E4A43CB51D680C6EEF544CCF26CDB6FF82F3378CB493
CA2527D509D07EB5DF02284623F4FEB36379DD63F00985881E879CF6F6EB91BB
729EEB88138D8A2F5F6F5CEC17F4DE059CCA1B2733F80AA1938F0353103DB83C
CF9143F3A1A697B8AA15F5A1AEA1022441B4E055B491166617CCFC540AC799F2
85425946E64A2CAFE30D0E51F06EB60F200D133EBB5B2C46D45571FC760DFF6A
52064C2D37475078B1996A964DD7A632B0741C67B0A070FB604582C530D8F47B
26EA0303E6DCC989B57712EFC1C422AC76124A59410EF51880CA64BDC73AD1A8
116A1911BC12F033A1D5D20EBF8530E7129D0A90AD3EA1E7A630D7C87633FE64
92E65F77E77C47A81E657F371636EE86E0CDF053585739C74104E048EAFDB564
5F4D2BA24583273053365758F50534E61D650001BE80A48A2B1E05FC1491FA65
C5A183BB8E20C9C72188A83CB6FCB80CE03E670FFE852DE1E90FFE9325EB3E9F
8552091831DD6BD02E40874F4AE55118EA3F62891AD4DEE7C73D21C39FE5AE92
71978280C6753045C840785F033D885B728F4AA3198F31E2B8282BED7392C7BE
2B61691EA52F310AC8F341E11B0E4BBCDF33D30383BCD329DBE1B0C05ACCFBC2
9343CB1551171CA4E1EDC85D3D4FECF940251575FDA44E25BE0127D82D914E35
831C4DAC2B6439331387654E63C9D0A6A9BFAA49F87C4FC0A7241808AB8A493E
5477FEE63EEB7EFB947F6EF31DCC61CDDFC39A277186B2FBAF5D2E1BC3888224
F96AADAB604224E142F3A042F510EFC3A15FC3CBB1E614186292D44DCC6A69F9
4C1BE630B6B59E943262F2E6EFB223B25C16F0A20E27F57DF890975BD18850BB
73E507315CE88A7A4CEAA6CAF2FD9B5E36442C20E14598F0BFA3B6C2011B8427
84111021F0284A1D19B8A8F7A282AD667DD1AA4D27665BF4CF688895448823A4
D524A0D895539C05B4FFB0432DF191F3FDABB74F34C467095B7BD881786E8EE7
AD49877F9ABA3634E9AA37CE0AF7C4ED41B2F7F13DB459A5F8DCEC4DB3DDF902
8DA28222985FAED7B6A1CC891D07185666E2AAE20F116D6062165B9EE0BA0C87
0AB44BB1683934B27C018A7A3D4787A965192CA6DCF61AB5B28E406FD90CC182
548C36DA35508230C17E595D0E697FEC6C9A25B9D368D66CAA90EFB30BF9837A
D04D995C4F9165B1EF1272045EB8860A6674522C415E4581DC2E404C1C5076FF
B01CFA881069F00BA6008BDDB01D403CC40C5F2BE9239E5BC23358698AB2A4E7
319B9FF1A7480F80EC4A1788BD066F26BDBA4BF29F957B8682D21CF1CCFCBAC8
BEA7EB98871C07242CA31F3ABBA9BCEA96438C90156BBF2DF79792A2B6E296CE
4A007648C0CE655612567DA35A98E4572B6D3634A820A6E376B9FE4D21FE10DE
7B57D14543A1872AF2B85E7C1C3E750A52C070289822BB03028030A2ABDC4C1D
212BE976064F176A9CA3768590168A5500D49286B1C00698760DAAFCCD32B85D
6FE0AEF640CCFE983B369A7D65F430E83301544A1596FB497EAAA77F820C9E6E
22EB77ED0EE9E3E10459B9AA355E912CE924124B0AB990555BE6A705C38565CE
02C0350F3C3908A24E27A37E511A043B25D4477B713B015A306F1EEFB66A74CD
A9B76A56A327053E0F6D96D1C2B699867EB1007E5040948D231559DBD1FB713E
6646BBA1A606F7BF96526753F40C89B75E7FBC53EF85680076F0A90CBC58D062
70E653CBA6C0A0CABBB72135572EFC8D9D95FBB46A159F827EF500183246F037
7048C48AB0D05E92A03FCD2DB3A64CBDF387FB03FAA5AD122CB4A90F479AEB32
B0CEE3111B470A6263805542515AA19B5E0E9FA83A47EBD3FEDDE6936425CD45
C0A5A4197BA038ADB36BFB0B0C56A8BE81B781D5E506C3401F54AC96744B153B
A19E77E4C3868BA1120E26A9432F7FA1A7A64CA98B2A9EEAB8D2BD4D9811F351
5CC01B842228D954C8279B7C45C8E09243F4AD04E9E3B9029AA4C97ABD7C2068
666ADC003C558C020F7D8913B4E954FB295B5ED5498C4A68B73340A756EB2DC8
8E1F963B7783341D457CA665FCF325A4DDE63E6DC4D6CEE647700DAD2DA776EA
703E6EE873EC04694B3DF3CF4024628056A672802384A5E5DB25A29C3EFA668F
DEC4B23A97D080C2641931E59633708BABA1C0C84AB2BA2059ADDAAC725D06E4
441F403A9D105E4738DFF1332F765EBB37367CDB40EB73F4BE5C47E19B535F77
6129795E241E6A95AA4017DC05940F32250DC3AC66844729D3CEC3F7DB1333A4
EB3C05B28980AA04D5FE473BEA4395E0ECC246A1A96A67E7EDE8C1B81FA5A78E
E724FA909D6967AD053D7B484EF5E6955F9BBA365964A12AA9AAEC478A5E8B6E
99DE9C6D140A175FB46282023C599007D78A9A97D2774EF4D5FBC8032955669B
0469E35F5D1D4DE33DCEB8DC36446FB24D63F66122E702CD92A47EC9202729FD
3E48D7EC7516E263C79D6A97268DA464B076C296A11ADF59C4919F63C78F9B7C
2FA998F5BEF64A521CCDD985665B84CE4B056D177D9C8AB6DE487AB488D13E54
B888E4F1B7FB089DA26F38BC76823F5B4A0E731C821B58BE53678574253555AA
C69C4F5FDA21D1ECAA763A2D70759EC05FD9870C55B799710662B4FE3DB92B27
C4462E0D5F869F8AA462B3EC3BE572E8D2E445AB3CCE715EA8558833B49BFD65
F25B9AB2CB2A033AC6134494AF94EE8A2FAE664DCF516199DEF88620A75E4528
D64A109781C023D0F7B5629BC0E16F3CF8249BB3036918DF79F423FB8E1C9A65
7DB26EBE4A48143744087FD893A97F03F0576800F34E8BF2F813649F77D74740
BD043931C15A57A987D2506D1FC06A97B2EF53955F608075ABB165150BCAED73
11056D80B361F6C2D8088518B74A3A50AAD80FC3231332A28FBF8426E8D622FA
7DC3EF9C32ABB1EB9856DCCD344E6FA5A381E3369FC3FDD2F735D52716D6239C
B1D10FD24606E68F9F62FD4C6CA555508A273E6C605BE27AEE8A62634D2C1810
B2ECF40EF1C83C47168665599D55E24F411F0A1D02C7599FD420BF66F9770BF2
71DFDFA61F623BB7424D0BB4B1C1F76E305B47D83BEF6954AE84C186BA3DDF8A
E55F350CBE841442E32D0D188AE401BA28AC9C8E6644BA91B82DDB95FB2EC552
F3C7FA81508D826D37B4F43BA455D1005DAE0B3CD731DA2FBC332CE53F058191
51E64D919B4CEFC353D08F271DD4611D4FC8DADFD5D2293DAA6FC1112184E362
C5EB795FC25650D35953DD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic6-Regular
%!PS-AdobeFont-1.0: LMMathItalic6-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 417 117 0
%%EndComments
FontDirectory/LMMathItalic6-Regular known{/LMMathItalic6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic6-Regular)readonly def
/FamilyName(LMMathItalic6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMMathItalic6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{0 -250 1241 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD113E9A4707A44200A15F1431F9E64
6F74A5028622F1CCB472247A2D3C92D19C0AF82A97AA93420B2252C089999F87
E9B99CE919915A7841E47F18EA2729DBFB8D0F265978077327D4885A16B99026
3AF09EBA03D665F320B724646224778F5207197EDECD6BA321B46A9C7B1BE014
C7AA72E7AD74DEF4CCFD1905F237AF725D38159039E347BB692EB0BB42D933B4
A4F5113867999A3BDD6E56036DD46F7BAD9445E0EB69D6BCF844741CD349792D
3F6A794164344B7301C4BD8C500C92214EAB1BD409FE0D61470E69C69E668D73
F1418A89939E9AD8AE9F3EB718A13741D72F79B4E51DEFB2029F4979E0C7F79F
8178AD7DFC03558964BF7FA8302240FA1B7CAC01375924C41D0200C60452AE3C
2CD5F7EB6BFA476372518118DAADC1D6E053E534830EEC37A0160A24FA76B86D
3FD75B97E83D4B1E1216C901748E31B5AC51D15BC8B8EB18D83CE35525239F0C
0FF52411E08D5893C09162BFA0EA49E1290193D19157A30A5F21797106802635
1F19BFECA6B40461144E82A051FEDBCFA7B096E34A7EEC13F93B74652D2EF4A7
08522EB97A15EABB2AF74CE73F5B8935F65DC93EA24E129BF18D5F8B4E890B81
105D0673055DAC2775314AC07C1D99428076035B0EA20A382B61A8B4548BCFF6
0F0A48E059E7497260326AD89AD9815B1F9B36430AB8527D61C5EFB8AA5B6B83
2B5053D7C25089EFD48A2E023C219158420D77BFE7CB795628865715FAE6EDB8
89F423F0B97DB7AC2927F97EC4ACC2E9F4BCE46EE66B37A2F169E33177ED4408
5F93FDE909FA829DE0AE5D9BD0BC4A75A0141AA472AD0ACEF816F27FB4A6CB04
13BF8944FA31EECB2BCE2983E7CD2C9C68868890B42D91D3182096A7719209AD
32A69532F10D71FA1567B10B0CCD4813495F34F89764223F7D45F888FE1889BC
F7E9E0C3E520C1536228FCE80FD44B49B8059ACFE6DA964B7D4264039022F974
E8A6827C6C472B256C93764DB10436956E134C91DE3157FAA4BD45965949563C
96042779A46D091414276284CF0B0724C8C0A9A026276ECDA2CF30DD003569BF
572670D9F815F28B5FC580FD9554CF723FA08B5361F9619E0D733FEAC5623F02
174C0CABE317A5C682419852EBDCDEE12226AF8F2E8F1EA0299271F3C48AD28F
6418EF2FBE02C540A8B25BEF06611008B9B3C5D56564A5CB5076720F0BF5E047
D4A0C0D9BD4CC7FA4E9333D3097F0B831372161D10C484661E0422F2774A57BC
FE0A0C24B552C0CBE6024AE3D291871DC4CEBA4C6E4BEC0D209D5575F133814F
04728B59247BBED567E954487D584246AF260567DC2E310EE85DA9EBDD034153
4AF69695E1B7E0C04740A626DB84063A79A95F86463220C51FC43806344A9419
16980958495C73633C0605207227E0B4E296A4AC63AFBD7C78FC1268753FD760
DF5E4BC2E2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E08614769C017F6D4F14C52D7189D4AF8CDA367D8B04CA8D3F2307C
0A7A179419A80695912F456637F539123745CA8E696E250E0BA6B7C6277394E5
98A8799C29B6272613C152B0CAB05F3C7795791EC9AF2BDD416861A3D13FA858
BCB6ACF5BDE40E5DFBC1A171A7280E8FF4AC0D4C8A2199E9E2BAB5CB9131A76D
EAC166A7C449A549EA5111F1750CA2C6E1EC6F00CB6C62BA52D17FC66E06ACC9
1E6B858F9393AF9AA5E69F799E01D301B647DA57225C2920E3BCEE9D09CA5C60
F22B07F24A26DD8F4D6F9C78BFAA8D12A21531E713B80CD03A5FF4F3BBA2AD82
3BEF7DA8C97C30F1452006AA3B1A168483F6EDC4089ED02E567923AE6DBBCCA4
8C246A080448200C2A29C34AE6255BC79B73AE14B980A7C357681BB0962894CB
DA32FF2B70B21AF4D158E0F74652684A7150D0967F83E13EBBAB33588541AEEC
0DE8C53851845A44FFB46A93CEE3E8A0263882542F7F103D13C367EA8E1ABFAF
6486A9DBF6668550BE7858F5790BC87C66492C0FD34DB08EDF842E1AF58A09B0
85A9B7FA402029FE2439769D67DEBDC8AD8C861E90E5322951A2904FD702766B
36916DBA8F9C96141BBF4788FA435556B2B4E1B37DE4506ACC4224CFC00A8F83
33941A050B51B9508758F4EB2DC074D799F5116296B8822ADD743A043F9A6426
88D10767A9F99A072BD4C88CB579B34687BA4953B96DBA29F33211B12A0215F7
5F2F873E5074A7D593DAD0EDD97270FB9A87BE870321A49958B10E3353D075A1
E740C054E9AA191CC6A2B8E854AC7E02D6C53ABB1608ADACCABE3D5AC2F894E8
5E234F72A1C099901DE1E49328D413CEE1295B615F37F139B70238D0C3177995
99A49939640D06478EF23B0FA6C4056FC2D15FB7800AF689C6868DB1E0A5D946
81993A3B3C100B5FA02EC334CEE85D1801AAFFC4A9253F6BC832A0E63EDB6F31
07FCC58C94F34096603C9E8E3719950691B4B5D8C0BB08883E09585EB7530664
C79582CCDFDDA4B4E487A57D8207DD18420AF0A75C5534B47DC12F571F827CA7
B93D28D1B195DACC47FE5FDC29EDD6C97DEF92E40FA9F957D6EC2A2902F7C4D6
8E837E7D573068C55D4470801D8E2D6B5972D30B54C54E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A31644BF123DA78DD615C4287ED7DD43B6
79CAF0EB2F9F428C431683A41C2C61A429E3DC0D87D76AB6294CF8CC9918A6A4
6873A1769ACCF25B59CB4365AC451FE1D956E1254970C706438805E25284C7CA
AE679F2B7C58BE9909CBFCD273EF5617183CFA64757627D2D567877FDDED97FD
7C9E73DE4D6D4ED370EFAAB4E52F30E55B902ACC35DE87E70DE8EDFE7D803CB9
B4F8D58998C2ED6B93CF62F8E991B754899CE46B900DC93C5A58EADB30BCFFA3
A71EF23D13FDAFE72642854A3340E64896CC6DEA0F7E3AF4C39EE4E68AA31889
A372F02266FE65ABCDAA308258FCDDD13DCBB18E462B56F956B94CE97E870122
A0A46CCFD6B4158BE06C768C73F0377CE3F21E030748189C553B9F62C83765B0
149330C96EC3496F9F2F9B289307D7E0C33BCB7023200FC3221F12B5FDE01011
87BBF9960E56CAA899438C90156BBF2B14596F131B71830D84172E7CD7C05B25
85A53C7CB0DA5729FD6CA218A1CB03FCB945FC24376A45F2DE0C21378769921A
72E46589CC08EA87EECFDF36B819B07306C448777163A723A9E71F504DA5D447
AFE8CFDBD88089FA4802F449B477BE528C3667F06EC5479B0824B87C47EEAF1A
0A23941B8257A2A5EC3F63FD62DD09890F4DF33AA1E70376A9CE8E4B6C4211CB
FCF9709AA29144F3A40001AB98BE816619AC543753969AC5B540ED39E51F5869
98342686761A7C070EA75140331D7A0DD5731F0E395A6CB0412028C2FABE2E9D
C3B57F412A5CC05FA7599948E6B8B50BCF16EF9825F6B20090E4D6280C528375
4EBCB42B38B7ED6634AFE0B2C249699E212509817638845B5604BB526053ACC5
C0FF6206B2953C9350E57657B374600DA75FB8D5B00DB7BA78FBFC5B95E167C6
CFB9A2275128DDCE62E56BBF35D257EAE99D627535F8E5ACB4A4D3E1E6D9D24F
9CDD9F80028D37C9CB4067A28D41E879AF98739929DDADA413EE35894A6A5B14
CBB136548C4B00E47FA77732DBEA89E10E98CAED50DEC8AB2536A447F7D46D4C
63A99114EFD23133E2FB8243221A2E8AB1CB892DE716CA34CE544502ABC9526D
F48B0762B57F8AAF2E120D5DCD70D140B498BA43863C45D94E6642DD04CBDC31
0087B2FC75CAD18883113AAADF162B023352069DD1BDEF229E16DE8D008A4CCC
BC317B47BE42354627EC77B91564A034FF2F3B60508154B08981B62A2E9974E0
E9A46A3AAC7F87B1FD8620A5A695852F2FF71CD16FA34635B526265F1A635254
75398013F04B49F67164F03610FAAC41229306EA37B9DF6E8DEB1C6C2BDEC9E6
EADDEF6E99BC482289181D89CF74F9995B40E5C55FBC81DC7686AE740022F764
C49FE9B49A108931E3CB077A9C53C764DBB47C789C795E97A537F013BC2BC786
BDA32DCD5A856714ACD5D2BB98B011650B2A5D8B881D6854DA373B002BA279C6
0649618BE2D9B1E10DECA9090F66F089E4D7C6D8087016FCB998B95F194BC9B6
E95BA14850E251A4EFF1C66B148E036AFB7FF007F18AAB4CAA2CEDB34F65F327
D58731A241E11468BBA16BA3494A4E80FF16410385FF17A1444B2D1596343B25
64124D648B1E0955CDCCE027BC9F127F79622FEB3A6781181EAD3F02101364EC
FB540C0B2473F20BF05A8315BBC31178398C4DF5CA482F899FBE7654F08D93E0
29994A566CDDC866CD6A1CF5DA076F94B31AE4EDE8237218A12D5E9DEEB9EB26
7CE99EEF40ED1A5A247FA60A89A2EF6AB95CAE1FB119500650FAD0C18B03564E
B61A0D261812A3EDE5BF402542BD215541E3A478F0933EB129EAE44484E084BD
DE7D2CEEF5E54E2CBE14A20F56A27B70B9C7DCBE9300AA2826EF2D6E38C9EE32
60EAFD1C1B7E9CAE9EE810B4C7934D08C44E8A3EDCADDF8FCD6E289C19A7056D
A716700F391FBA6480099E8276173D443884AC0600329C607B7521B1C1C0F575
F4A979FF04F1B3C17864FBC8B92B77DFD068E53CC9111E290624DC39FB79FEFA
C07D2DA7DEC9642694ACAD9C980FC6F26BBC4B98AA0F9624D8678DDD10596E3F
55CAF2F4419B78FF39B929627428C3A6736D8777332C017A9411BF924DE0E40A
24B0E1B797094DDD8EA17A7A281D007F1F6EE3CB17E0FDB167D05506A96F7296
047E208835176F3154E8757A1C21857556EE412F4434E8062A9F9101ADD125A3
2195B8CB98C9B19235FE35E0DB6F1FBF31ABF448C9261B75BF1EB61260DEF86E
BD69F26D77A20B25BE10094D4C196E26034F2577471EF7CDEFD087BAFFC6C93A
F8FE338E70387B4F1BA2119F24E0AC14D6C89D60DBE2E17850FEEDA72C8A882C
F268AA853D036C7633EF1DA737CF40C5F170EDDCB3B5518E28C971EBFB43D842
99D336736B15B05591122AE51D1486E1F2FA31E9C9379F2B3440AEB83539438B
B83563DD61FA39B66B4DDCE39F3E590823590CD7C75BBE8B58EDC2F2ECB1E684
00C6706D29DF0BCA1B5C649CF209DAFA7619F27D165264869A4D5EC574FFF640
76FD6BE210178957E86D8B7303BF3EBF660879783E563E5FD42AFA2E2C523957
8183B066D5A65BAE4AB038087E40257C1FE6F484941D7387A2F92A69CAD3FFA9
AE559D3043D7128482D9ED343F64C6CAC65D8218E75ECDA7292A0F2FBB4A60FC
7025B92E55DD5D5897F13EDBB3356F9E2B9DE1FE09288B3217E226202117CFBE
3DE2C6DBFB0BB25BB13A128CECEF9D4D51001EF6E00C9CBA158724AC4352EBBD
4085CC2897C588A09FDB14647F570BBEE55DC7F2AED102A1134FD48A8C8480D9
137F359E6287C5369650A06422FB0B3B29ACF32F3DDCB4DF8B5AC385B0E99329
08C1050CB6DB39BB10C1F4D149305E6D442E7D8B58020A01C8A417B670A41F2E
B01A30F2AE8C73D83360E849EC83AABD17E084BFD0A3606D42EFBDAD44BB98A7
440207EC9597D409FBD1E6B2429DCC30846293BF3060E9CAE54A81D21AAF3BFA
BAFE773F095BA4D5A0F9607E25DC3137296CE1D8E2B8FB0DF6B5FB6D5C415495
635BDFF798B08041C566CF1D783EC7B15B4330A37FC9C1BF23CE45EF19471FC7
2472E528053EC041E396333C90480C82F2B80E740D5ACBCB0882F35AE8A3E3B1
FE3903A941EA20902C10B0C3E73DF25106052700653849C02805E1C56026FA71
302E87A45A22ED99B04853D66E5A22B56F79FEF73918B7CBCC65CA7DB3E410DB
1AB7AAF9B483A4DB3B333B158517971542915D70737B3F22C6A831A9821624AD
61DC8A0DE77A1F4BA087E7E54F4602592AEB49D4AEA40B81B7B653D90E146B6A
AA318E165C8353C9CC1F0927D73E21ECE52D9C3EA6DE3CE70352D2ABEC8E3DD4
CCF226A6829DF67E37A242C5E0FDF6AFCEBB0621A8ADE7553CCA3725FB707ED9
526ED054C471B82AA52B6C090D4C6C776B5610954A6E5471F8D8344C07DB8E45
BE34098668A5FB9DB4D49F3FC041809ACDA455C62A76B51D730D8B124BC6B76D
049B17736CD9E28DA73506142B6AA54FDFAC9050332212CD062A6B96FB18552E
DB51B991870A6E579DC68B52DF7F950CE1BDB15548CAD879752198F3A2141F1B
77DCD2B7DC83E662C19DDE6A5207ACEA1E0C78CBAA7A47C5F3D0C745262B88DD
F05E7E3C1682E8E90674B781EF298DBA6CB1758D22EE8A7680B01DAC100D3748
CA1BC047117E5E9AFBA7839CAE44964C974F08DB4C947F074F5B3644BB3F93D7
F96770C73499AC0AFC3E20F0BBDFA01502C9A1C30E9DF357529D99BD156464C5
D64ED5C7BE1C1DB9852E09F62BB22A3A51BEC8BB98DE63D6763E8225E9ACAEE7
9D813C62B96A7CD2247A269F53AC59E3E886BC531628CD9FDA87188135B3D6CE
0F2CC637A8F2EEEA4C05990EB23142620576551DC347BCB2302D5D5FCBBB04D7
7DC4955E84168F9AC6EA2E25C8C38B8A36B337C6925E0CB5BD963CB791E28CB5
4B37655D9DC3BCF1F660E8262CD10AA45C67562303483314B5B71B07C7F8C598
D226227FA8C178C10D90A2F26A639CF016B843ACE6B352A0B859AAEB15A52403
FBD562D284EFBCAF3553CC5A757FA50D53E6AF18AF09A1B9C4792EEAB445547F
698E0DC00CC722B65CBD277C5DF3B4B1275090B71A4D4B3B7961171D67F8F6B2
6EBA8AB37B5C35DB16D8B776255132DE99F3F4B7530A72C49503FC4D5C84291E
0740415B51E89FC1E4887D1912C7FFB218D23A08172BC11116C8028E77D0FE5A
DDEF0931C9EFBA2B76B78F6A90C0E44F8236F55938C3CE5A9EEAA8379EE7D879
D13C3E2D204512584029A7E941946AB7D45710ED4396C6C9816137832A56C48F
C89066B9FF63B80A84B36F75AD6D455B580A4BBE440839A54B385C9E4571C466
AF1C084F04AF31AB83EAEDA618C70F735DF746994341A37D17E8AE636315CE9D
47B1A020296D23FD0A59D6AD28E34849187D767EDE855B520ADFA07DACBEC45B
BF0C25F00DD94C798C8CF098F26C8AF48B458803BB26487C1391BD9A5B51F33D
505FE3ED168109F1F39AC5C3357E48CB38906275AAE8D8CBE9ACD7740ECA4A47
A985E2E16051FA4178F6557DFC8FEF287CB787EFF59E86B4A72A199F16F2C24D
D5A6AD833A4BA6F96FE67FE603F3DE0BC536C9A2A04B73CB2E4EBCF70184C5E1
D9C9E3DF6D0AB7F44E679E8518074632F6BB0639E2AA1DBBF34708FDB8092FE9
343274DA68CD751A72052D4FD983EB8C149E081333B2F0E0A54134F91D7B4ACA
E954658CFEB3FF04F3F9F42C57124BF3FC0BA485E050DF883E4B2767E236BE21
9FEC94EF94D9F2096E76F1C558F40812444C6F0F4DA995C8C03162375AEF5BBD
6BC3B250625E4B5C2B2BF9879F853460339AEFAF4FCC58EA396431BD4F95BD5F
6DA31DDC13D860842BAEC5EB5C217FC685C06C5AE447C991137584534EFDDE0F
7BBB3FAEB89D737F9FDD69B4EDADB476A1E588A8C8499A8917CAB23F00BC124F
D93096D1B365B754E3D03ABC8B3DA3F4F6C2DB54682F72DFB7E665EF36DBD3B8
9455CA9BFE2FE8ED26203A2B353C3C9C7AFCAA09793C8A74DA25396CBC1484DB
565607911498AE56FF61F2AAB48F1B954211AF0A38D6CAB3BCD6697C7E56C29D
62A325714D3FE8C3DC019CC01E8738CCA2596AB05857E4B8F9D6695EF332BD3B
AA9EE551A4B142DDC13600318F45CBE1BB1A6E0CCF1CD79182D3B235B457CA9F
B713822F634A96C5D1923710DB4B98B063FA07A5FFE26234C70FF6EF6CA2A853
FE0F76AB1ED5B97A1060D13911F4AC44FA5358837F7CC6ED863F0FCCE5F79065
D7AF0839F444CFE8AC2F2FF46DB2B95247BD8261F39BA12AD5E50433EF517BD0
FD04C73FBF1058A8907ED43B4C144BDAA3C4E6BE9637FC8BD3E94D6257BE1B7B
FB179A4479EBA92EF2EE4E7B73DD295274E1D416F7AD7338FB3116A3CFEB9E33
8EF0D7B0FA721D7D11990750232AB90B60DEF84924B838AE79C6689275697225
1698C73A825EAF77F8C38CA8468E616771E6C9093D7E3479B0DF3F3160EA2059
B5F7BFD55E90340B4244BADD57DA5902E2C08D00E814009234E2A36EFBD854F8
68BC9301D33D0203F8D1F59EBCE526B06B610DB1B028D29F838A52AEC3BAA982
56BFC6A306ACDD86AEFA6F4F2AFCE55BF27AFC96D93AE476AB15324149043E71
3261671835DDF163EA8D3DA7CB1F0514DEECC225301813E4ECE6D689B0A04229
04F28E6DD3CAF0134F9E19DF8F5ABD86CB0F8CDD3A059F2F3421FF99BCAC2D54
03D67B0DD5ADFC6174D559534155A42F6626A6E7CFC849FBFFBB17679ABA8C34
B1296EAACD7DA7010ADED0D6A83F04F396CE83F0549B1168EB7DA7468011420D
BE034D5AB67817DA21F12130B85DF957C636987F2ED81971E9FC729AFC1E778A
3C062A85C2282BC39C571BD45057FD09085730695ADEFF892B4307BB163A248F
9A2052CB8980119F3F2EFECCCF2C04B55F44FC0D155C1E04055D6F81AE5E20A9
E98ADD7649142C6CC2FCBD09F82ECF0716F5378A8C51C139D72816DA8B61E413
EDA36A71E7B6110CAFAC612E3E67F979E774BA9C7A580D605929D6D790A34084
7DD751CF51F14D89B269A940060FB0B603D3A2A6839C1C36A3CB55707A0663E4
D7346CE1DD000B51AB4A815FECF291D3E8F573EEBB83E6F9DECA82BEB3F58558
67B2B884E4A9A334BC95558E4C1A9D0B93E9A8C0D83CB8354B69357920BEE4A0
4E464B774D6CB4588DE10B3DAF9F7E546F6AFE62D85E8D25FC1A0039346F9156
82672DE85AE82551277388BDC62DE6FD1A3DB14805DB66731CE5CE34765A6E35
825C99CB7AFE5A873340B50AEE34371B1D7C90AFB517178C9DFE59CE8B036E3B
067B364E0F77D36DC299ABF128FE2511732602A5885A6CD283AD3C1C87F360F7
BFF771183B302FF55667390AF2E314BC8E0EF10504B5612395461652E3B2D6B3
BCCE3F5D699B3E2227DEF786D7BBDAA2A35EB13FD17790793B2B4A9E06AFC15B
8B1E7C3534BF816D19A02789F1E1BE623EDD5DAF54733EB1AD965E8A5A3ECEEB
F44790D57FFB857764A8EC459BFF61D9A893DA0177CAB77BB183F54581052B66
D6CB569F8C51F03E409DCE0717779DEA582740E49F088BEAD6E482EB87350926
910860A95DE4100D2A9BA91424DAD1802F2EC862FB85A143D7B299223ED85252
02C31B687F2C19136157C6D83B33313266F1BA8B9E065A0E64509902D75FF0EB
AF919567B7A1CDA5E14FEDA66F60059ACA0ECA3D597FBAD8C7EC31F3C1C46E5A
E79F74B3589EA1C34BC2A4827253F72CEBA7495FFD2989718F2A54E5D0EA1719
ACDE43012A2AAA1F71550220B035B6AE978341404C817414D0579308612AD113
219204CA43994CAA4671A6A97BD8C6807C21360D0C3F7742F47CBC2D74EF214C
0B15C50A9B5A26205F096D63762A9B14F267CE0337485EF58E37EEF30EAB487B
6E7AB230EBC988C382F594B4D4D4B92E6AEC4A9F07841FF93433615B89BA1272
6F5B01CD5715C6432452ECEC048DCD14814E47DC1226F723CE25814E30876470
F16C5E8F87F74CFB89CA99219C25478E0A63F78F3460EDD4F64B4D2A5B3E660A
B83C0CD1BB032CF0DDA97FD7C35218928C48545178CCAA9646C6C89D2FB89665
3CB3AF6C9466BF2240E2A71EBEA84FE2BA8B2BAD7C2F670BD9087F7531490409
D02F3D87BE05852F9C004219582D45949B8C3A7907A725B1DBB3F1A92E0A0456
D103AD819382A9EB1E201AD6F522AF0386A30A2693B607A67E0AEAA7E969E420
86DC576CE06532479E48E7E905FB5E8F9FC3DC5F258FE3C18E7464AFBB0B0757
2E4E438A2F1A4E37E0909724BDD52F4D4B98C4AD8E1A1528BD444DD1B0EFDA76
FCA43DA6DFF11E72D5BAA35CCDDAB44EBBC0C71C3FD43F21DBC6904AEE4B01DF
4F1005122C3B92BB93F4E9CA79A797C3A4F27AA9924D6616FC860CCAA3402216
64068B6E7C7CF2E2432A65BA21DBEB0A83FC660BEB3F1A3357D218276A5D0FA4
EADB3616CBBE98428D5D811FF6FE99AD7ADAD0922C1BEAAAD9B337968A02FCA0
1148C302E8E3AAD1DD61DADD7A1FD82F0C2E744CC3B65AAC7C04E9646515EB8F
EF55DBF964A5C2AA9623B8674C8259A681E27E2C4AE26093689327A256571CE9
457E795AB6B63D78163F227F1385113B9D2A2F0C56DB55B7317231C2B2F371B1
559D8BEB245FFAA7955250F08E8F5B149E8F97D25635B98E9B51FE570826C75E
64296714597A74010F59376FB1AEB72D08E929E1630A7750DE134C6BC13E5AAF
A36ED9F7A8E5D9BECFBE4384E04B0D6FECCB0244DB29A8B801321969CD052FD6
1493FDA211564478C68C592E158DACD4D9005B983760C79C08C12658303A3F51
1EBE5F047EE68288BF3DE1225D981C287FA9BE1B690BA0F8059823BD2AB80BC9
DC78BD724DEDA7987A6DD44876D3FD2B0A21E719D5677DB0E64C7650DF6FDDAF
6038DA9D24DC1978AFD87934AF5BFEAC00EDE5DBDE3D585DB595D29361F8253C
26C37E09B4F87056EDD8C90917EEEB978E51957475B5717AC1BB4AEDD87AD40D
D35C3449819CCC9366AFE79A48A3BCA95DB66E5D14FE0A8C3FFFD51B5492DB49
BF8810AF0BDC54BB1D08740818CF45A63A694C8F8DC44FBA5607435A619684F5
02CF60F00AB8418D0C93AC7EAA9DF793A62FC3E0C50F55A84F67D932B8062860
39E75042D590F24D8FE9F50D35EC6FF30384385CF7C56DB4A483D83D7CDB2BA2
48A366D5E0651560A4BA2299074E853FEFDCE9480F0E55E126E1DE7E700FC3D2
2EC26F9B2761469B0EDEE8BA22F029985C6F5C6E52567706CB28468A9A6AD9F9
B873F1845718FCF81B2A15BF986954219C2577014CE55CEE9E4D5B2FC43C7447
A9605D5D86CC06E8029D4F57A392D2738F846305E8F3AE5B5E2BBC2F802F00B3
A75DE53FEBE1B7B9272A951A047119B40830A39909494E86AEE21694223DF5E4
A7198F31E2B8282BED7392C7BE2B61691EA52F310E0367BD918A9DB9077118A0
42EB52EB7800276E7502D8CB8A68A46889B0D2DAC7CE9E40D84F17B6ACCD8743
2BF87A6B87D3297452BA7EA1CA9EACEC454312EC1DCE09A40896B78BD1D5A73E
157AECB9F3F59C0D736946734C6DF70888665716037A35F574BB08A82641F363
6C82E2BB16E686C92C60EA329075C30D3F97A3214A478933678E9C5B2267C747
BAFD5934D95FBD2640BFF7E94C4C260BFD0FFF9D966F224AA72C22207BCA2267
52B21D21999E31A3DA1E51A3282038BBA7F7FC70987A57EC73E5A6B9508B48DD
49577EF2E015E8D9C0F64025C76E0550BC5D75F5C40F7C7768A67B861D5FC288
7F1635AACF2782022D039A8D49085ACB83B160C466909F562BD4C26A26BEE741
ECC847467858898AD528633F477B739EAAF07A516D86CC678FF6D5A199877F04
81B1BFA806A353E3270334E0880843F700FC1F6065FA37F248AE52A1FBA985A3
1F28AC72D636AE969256DC91944150153C99FBFF35539B5E3CEE76DF3204AEC1
961F654E12385D1EC21D1831C177FAC71FD55A5490C89142F2844CB7E6352B01
A07303DE29B299AF582319835E23408E414CE2299CD46784E6A7AE912C213D0F
380112FEBD737CFF6C1483C4520BA4A4B904A4031C519E155A116C14F576AEF6
6E86BF55B83AB07C8875DE7D96261C02AF3B27E36352F8DC981EF838587C80FD
855F1733F50F636A4C7426584812DA63B5F0B1E400E9F96CC34E7E2C3CCF88A5
17FE6F9C5FB51F8737E0EC21F7CD596D42A88458B89786C2F6D96AD2D415402B
06C2CBB2CB91B45D00DF27E5A47692A30A7D13527A7F3FDF0C07D30FB6436D58
753F6AE969F7207578FA40B7457C36BF9A0846A0C5007E8D72ACF2D32F854BE1
642416405BCCE8D41818D663AFDC9CD1C81B91D658B398D4C89F58C854451014
68001F40721E8DADDCBFCD8BC92D0D26A7DEDA6FE09F7DC39F9F2DE66A66190C
689A73A26C5E0137C208DCF1A7143359F8EE27AB1F3639B4C997B3FE3D863BD1
FE2D56BD513E5BE907EDBB61A117B7F1BDB61AE87F1906CFADE3EFCF095AA187
EE498BC5455C976C40C6E24D239FCFE9CAA763CD150D404C418B12590B6EEA0E
1A19CD139622317F5DFD2EFBD95A7589BAAD70364C33665F90E24D35581DA77D
776D1EEB96F837A3A2F5C501AF422A313B47DCEC7A019705E05AC514331F7A91
B4F74898E2FAD14576F81B1D688DD8F61B1E4450C0C994D2FA8F4EA0B31BC626
75775A139B54949665078867B4A024FC24B16AB6474F370F7F61C7A430AB2303
FC215B5B353C8B1D386CED0321AA1103F5F4CC57F15121A5265A4B316901E61D
0B6A13CBC0EB3B038B56DEB99AC4C60BB469AC2C2CDC1E415746055916E409D0
85688DEBC02A6E020EF5101E41C289C854F7452F28FFBCEDB0E2DEF7ACE89539
7DFAF366B982B1E79ADC6523109832853C664B53C4ECDF81B0004DBE82B86F5B
A36A3B2DE83040B16BFFBBEB73850E2199B8D101C85CBAF179EC5881CEBF7EBC
3B30AC8AEB18B09AC7183771066ECCF26590A7894CA6F91AC2CF4A1420693935
9518C6B25D2C97192E8E1F0AE8D3882052CD47181C522E1F417F28A12064034A
7290750EBC897F11987CE12AC4C09643CB0B9D921B4A6980F6B22FE3C7B7CF63
57CCAE079ED34837B5A08E55E6319BE14383542B9F6500CD29B4760D5B4C77D2
5AE31C4A75BD8C7EB02722DA8D894241446F05FD5DB3815F144E1EFB2D400AD0
25F1AD7295D531787D2C5D4E00A09F155BFDF971B5A4D0AC102C2CE8A28E1A82
794BABD4D8814B53865E03C0C0D6DE7B16FE54A2CD42AEA5FAB6694A64B334CB
750BB6A4D0230ADC13EBBF5AC7571B0778C0E9D25358DA06B20DDF35F409AF15
997127DFFA9ABFF8C858A51C83CCCC572024A6243D6BC209B8D579F6A057A27A
EF243C4B389CCF9382BA5143D6359D3BA2ED407299B5C9E361C08AA256350ECD
82F3B38BD30286E0A8B3E42F7CBEC366E60C18416B956C6377E02A43FDBC78E4
627ED79B16862D939F3A3000659AC050E7001000B2C6848457D632AF0F1DCFFB
6E5F5F586F3A72BC1E72A5F984E7235607EC39E49ECCE85A8E75B8B18D8D9B9D
2227C7649133EC6A81002AE7A4E697857358F58A400549BAA570F95B97AE0BC5
7BB244A80105AEAF034D50D17F2A2913B639720FF4675597704DB7721A0FB87B
BE7530ED3C037A517E7F4D92C7AB7A2B373039EBD068D131C7F302A2F9FB65EC
CCAD4616927004178B7B2CE55A8F36653841CD79FD3514557D69140D6E7E9813
2DE2FD992965837E604A8B2C51E4FA23D38F0387351BEFEAE26D641D49B7A349
0F09BF16B8D179FC176D0735CAD73632F8EE970DC0EBA43D2C700A1D58F29F7E
F1487F54EB23A1CE0AB8CB768EDF04DBF511A3BEB1869F9D5F0086E13F8C3349
8D55FB08ED70950200C50B7E71F8C21BA46E833E6C0DCF6556C1CC6A1C88ED2C
49C1700E8AC2E1EE384B0F6907DA0232BF5153AD600D17DE2777D5CC84335A77
6EC13A25F0B85F0EA2FB526C4A6975188599D789CE1B95719560247100F68FEC
756F7AA110B22AE36B9518755C2FAC2135E89AF71192E8CC3776F553A88FD966
801A249712B98F8F6684D7361A1286AF3E4083CC9E64F40A500F045A27CDFAEF
A66D28B966E7D491B5803E4E32D24FDE0B7C56732957AC35E7CEA2C1AA00C6C7
57576EA0E4C8F0F14614231A275836A622235EADEE4F56A388398B1E3B8EF7D9
F110CEE189C26CAAF7990882F149552ACBF1101C0CC34540AFE14778BB219B59
B3BB99066BCDDBD6A90DADFDC11833C934EC4E446C77F005D897D944251600E7
A6B304DD76E088EF97077EDE26FD1456F4EA599CF4C4B22F65104F6D0D96CEB9
463A89A504AB57C377BB062C02225DCA03E6485C035C6247166107D6C1A4FAF9
AE46BCF6A6475B4197423EF9DE9959CC5CDE05CA9B914F8749608248E964F913
5155384A2C0EF7347C378B111AD792A90E38E1552BA4D6E36C5AD7B56F4A5D0C
F8FE219670A817942121C56A6E64555EBD682B2A587F38458944A0E355F989A6
D77EA1E24367EB14A7D28DAC9A22E2DF55C42D244D9DB91ADAB25927B9001E6A
DAAB86BA6B2B4E28F3C65566E2DF0AB84140F348449C01E851C4736321D6DFCE
20133ADC7C1C76B14667721A220ED3DAAF96F20E29D2F08BB07743827690BF7B
6E45B4F8674A6FA270F14B4944F276428753AFF93D541651CD027D5B23BE4FC8
6005E73CF2508994E2244B800EA15AF8C16B9B8329E91644DB1EACF0C0C781C4
F4C411F79B1D23A87ADA31D3A48C7190B618659D7D0B64A40FC4773482AF8C73
85F80E163B9463C38F611AF4987F7203DDCE93170428CB54EFDA16BCA724284A
ECC3A2904C546D6F2ED297BD3D3A359F69CD6D9D92F5265392E03264AE22D81E
75A04AE68344A9F152859C697E93BC968A3F78C8604FB03A0AF394E19A0E50D8
A50838734E691BC16C50353B2441985488F0E70612603E3F0722046046DC94B5
017D456E865FB2E416C4E91494CB6FB74220158EBAAD27211EB43A348E7E1F83
87334F443CE79BEBA97AE481AD4AB1DC86D8BDB89DADA068799547812B285C06
A7820642245A91B895E018395581C536C3CA5680F622117252D1D72A6D9D057A
413F73C7FEA1993B5020F8574CE0C8B6FCE43E382AA3BBE0CAF9620ED0ECBE98
14BD19184B2C0F3B04B2D3ADE2358EEB27274D7B30DD69E1B2C3CA70F2F79FA2
9543F526BE2A04C6309DD3E47CF1FA44EFBAA756B02E839A6105021CA9B728D2
7C8018BECD829ACB6C3D9129E976A2427E1611066E0025917D1BDB7E9E37AD93
5833B94133FD5C6E5F76EBABE1C94999A54BC260661FD4DCE55956FA246836DD
DB17F52681C14DE689A8C6F2576DB779DA5064C8743100C8DA1A4DF6C8B7B019
CC31279CD27DDA52E1DA4CB052C16E049D2E6645239263D0B6E6419174661478
75F99B35930AAA74A477AFE29B1DAD0E6BD33735C477FB9BBFF2EB908D91B245
11AC525E15EA2EB389640906449D7A0A2979BBD6460F393365098CA717F915EC
27ACD59D2F35DDD0320956D2148DC7C2D7EFE859F41ED2661FFEFE5493FBEA5F
B1D26743416B6D20BA817AB49C66552CF7FEF8C99C29BD310590E1B613AAB89F
20B39C67B801932612BE59E8C4EA4B47A39D9D73EA96FEF2811F36BB337D4E9D
38D33E46E3F79F2BC92D811CC6DAB392EA379D23BED8DCA6132D76C53B78A28B
C434AF4C963E047E7CA794F2C7E845FC08034E600A9A20EDAEE67F65EBA7C2C6
1AFE1C7FD58404CCF6E173D56F8D3D3CCEC06A27BB12FF9B399DB1AF4BA9A570
5502F55E4CCF7160C54F7BC202236296A9052306639F4672E90E3B9DDE5FB364
F7BD728B86D3BBE1E37BC2104E79747402361416DDB4C1AD10889CB7851699BF
FD28D02FF638853114464CF170F3EAFC1572D2E56F2F0F692831903D20979257
C35CA8E92DCD33C7DD73FBAFAD2A3EC3AD445193BEC19A3ADD031C747FA67225
34BA34991AF3F1BF309ADE33C2780E971D3952648BE3ACB42BEC6D5B5DA0CAF1
9B5792A3F832853CB465BB8B66C50948800458912B40D3D1C93BFF447255A99C
CE4EC0E8B418284452650AC9F595D065353A0D84229C2226465DBD27291A7AAD
14E946490AEED2FF28FF48234265B4759B50D24BD711DAC55620DCFDC63493D8
B9EF33711947B65B0C07BB7FE129E074482B62CA26EA8970DCA4F35C139CBABD
4FFCF1E22865F11E640D484E5F57C00B1336A8F61DE8919B9F5A5D3533D903B8
948753E873822FF2E1C8DE9834854FF2955EDC15456438FED1B333FC882FEA17
CE5ECA50FE1EA7907A9A79564DBFFF9566BEA8DFAD1CD13FE4F4BD5FE272043A
59FBC65D5C5FFA73F59AE22BC7A9DE94C8D7D03ADE5D6DC0252CA2E3EFEDE150
916661FEF85C14B05424C0C51BC3E784E53A157C5192135A7055198A66789574
CA9DE18D9CD69BDDB4707F7B2C827516C1A6B49353FB7457EE57EF5908241374
2A4CD1BB78156D5809A689085E5EABA02F60389E94F86AAAF2B7E9E315B157F8
BE66C4AE3F0F649948253EC51D98A20B1C4150AECE1B644EF4F9B15154D3FF75
4428AE15D0D7F8837386F411D0FB2C1CEA22C286B7F058E8F48EBFC36AAD3511
F899A93419E74B4EEADDE0FE0B5D86C9538B9E3260EB814969E2E48645E1F5AC
047A8204F464CF29A60BA4DEAE3FFB984843DAA8E9420BDA882054B68A169C3E
54FF994669E0E0A4CD33F1B71EA3C7C787E612AFFBFDBB75E53941B46165FF34
0CEC0051A4EEF6A495823192E78065FD6060A0F7D8ECB4EBAE515878A31F197F
D069F443133F6271A817B670A41F2EB01A30F2AE8C73D83360E849EC87FE9711
CE71D9034EE8704CED9534746FB31E330BE53B043CBB36B38CE86196A8838829
AA72E7DAB35155314A35C56475A9CC8CC6267A6C8B55512546ACE6437740E677
EE22A40C38BB1F69F691122BFE48E6FE4003BED0D4270A59532C46091584E9CF
7759EF3E2FBBC0EE740CD2622E599A513A5A5F8F39BBA8D08AEB6465A1FB1258
980913106DE9470F037FDD15E6113A181DCB5104577F6303D8AFFF0D1623C49F
3A52C4EDA18B7B6BE5C494D3BE6EED741DC2B9D578DAF502D940AEA08876BE07
1C01DBADD0EBFBC4FF52507C34739FC6E798467FB71DAC5EFFE0D7BBC8114201
E03961015596BFDCD08FBB40B1153AB6626767FF1A48838221A3FAB6E8027A10
873C04482CAC5129F1D102860A54D8E656ECEA88768396EFEC282DC3DA70208D
6884BBFA2D4ADA174645BF47E448B703ADBAAB9F0DF2A0805C9B140D8CEB4474
0442AC4891051195B0B6624F3DB00520FF4657F7D127A24EB69B4ADCA04C25DD
A90364C4462F8DF7B588398EA6C9D82EC5A2888F03FD399BAAA3890E4F95DAA8
3D88BC9BF79C0F2F5A0752A8DC4E816B78B9EE734118C991282B1240D3E46337
C1FB2DB53C79D16B085D8400FFC9324014BE2A1D5CF3A0CC22E480CD066D1019
6C05A0EFD97EE57F50C5A59D1EC020C2C04DFC9F36C8253C4346DBC11A9D851D
A3A8E0D478DFDC64095D442198D9D530581F1C40D357CB03A7FBC28AB07B83B1
800E41C9104A62A074B44B977A4E4A9974A30FD61E80F89DE77282D37856765A
2E3980461481535061B2CC994D41EF6AC07B567DA70D25CD23C25C7D0B103312
B17D16087D670D7F854D5740F601C12493300841AF0F3A67E1E6093BE6DCB400
BDF8C5B29940B3CD12C56C7856D4B0ECD4E415CC9290C79FE24F1ED92BA45398
9EB7CE1FEC9D31E66BB00C09B952A829C5F56AE313967A0B57292667588D0A60
A045AE5775EFA566735F30BF915A60F7C027C153000E975E7513D0156C73F7F1
6C034A24BA4FA16E84B73917E43FF456B5C435C17071907E4739469EFE5675C0
FE6A19FEC026975039D81B532DE5BF0DA704808D7B0878A09BF1DCA721854AB3
AD69C48B50DDF960297D39DF2B708BEF605075EE12D7754830200D0EF7CB139D
07454666A9757CAF11889CBE919842FE4D30A9DF8ABD4B79FF6BFA7B048F1F20
3BF39512086211B6ED4A0CFB76CF072638DC21405F5C12971456BA64A3519849
2E0C81D7EC5306E4ED168682A02519583C8A4D3449A80F06DD05E185FC24E756
14597763D2683A5DA582CD0C910FE12D8CD6A6C6A3E4A1518E2BCDF099DA7A65
D2DA2A30960687F2DCF03E8EC3B3355440F8790D36B3FC528CCA877F264F9CD0
A9842A9410A0895DF75E1D19AFEEA0B92BC6D1851F9133071CFF77F6B7BB47F5
FA2D280B99D60757CB814F513009C4F8EA0E7C610D9815F6C9E2E43707530FF4
46F58B37C73CF2857A7ABB31EFD03F4B11BB195452F6D1A1689A2BBAE0007448
F08E8852AA459B4B19F3D15F6C7215840AB673F35C1710F16152A964659C8624
1FE188A2B151D9D4FBA51E499C40A5F15786F4013542378934CE6745950AC10A
8C4A87987B83CE610E61CF5F7C8B1546B7A57002CB5631ACEA320C6437B07E0D
6E591ABD90B6D1A3EC389BD83EE4E88353D85D994B25A9E343F133B43FBA30C5
2CA8A503F3FE224D15738C62BBA2C6AD31A0D44B1E9FD3E9E8CFBC32E32A32DA
E19CD9401354E70E1ED37284DDD65E8228E905026C46238C6F9CDB39DD032031
29FBC6B353DA5799579598B01A786024211AB36761C70E58AD2500BD0372EAE8
348C863EDE31E97ADF14D9F180343DA29EB6D49764B29141484BDCE75BEBD9D6
B46ABBBA618BBA0BB81B21C9AE3E8EF86BD5CBD90AAA608A3F65C0FB12D24CD2
86BDA10A436108F0D6B87BFF46E7E197D8541D72B9E70E255A281B2437BBC429
5CCDAA8DE64137227F139DC666BC06F880D67F16B316CBB5CDF1977988257A0A
CAEE781ABC1DDCDBC1B006CFE5A032B95CA40F19FE0EEEAA2ADC08162D9718D2
8BF9E906D959137073313978F2D5E7E701893AA6D9E4B7582ACD74AC46BE3E81
61DEF94EC7C83D65D86376FE392900FA19FEFED037760D1B21CC82451626B5EC
47DDE14A666942B10E15F853CC86DAC167AB448B9CAFFA4BC15B304C7446A71A
59F056B37F038E68455B580A4BBE440839A54B385C9E4571C466AF1B55CC04F6
46FB7704DFDF783B55A6821F7861B12877C5B1CBD6D3328DB47A624C0296A8AC
D7D8A62118514F9B7FBDCC8BB0867DE7CA55C54DB2D6B2CA2FFE02B6E5138C47
FB94BB66248014CCC738BF6E4D58E1E10A9648D4EBEA307F56725A45128EE8ED
27C7E7BA5EA1A04E90C7D88600D2E83D1E720D03106898433420031B98C0E76F
EF91C951381D9B54AE9092381AD48085761D7AC6A2F33FE7BF1189B74F71D864
956D63E797EB97023ECBAC73653FA3F8FF2205525F1BD257B57C0D292469C015
D85942E1C24C48466ADB7CE834363B8150FD58BE2A16804A4997ADFEE6E00F84
F822BF828C4636E80170B3D870EEB5E235C61E8556A2D58B28357C8A57EAE9EF
8D735BFB4715B7E2454D0F598F0BF61BA4085C37E9B93E79D1D9B0E845355120
13C74769E497F5FAD065CAD27B9EB2020C908E91E81B07A92AD544D201D7322C
9156B30A6056497FD3351D7C0F6F281460A76377D15113D005A1B66901FCCBC6
9829663359171CE6F8F94F8270E1C017E33650E24F353E423A9254DC034E6F5F
37A3D8279178B99FD3875BCED31F207E1DB47B8009A96BB72521D78213984E0E
177E9C7360E93C5A09A5977245779264257FFA0AFA05C2842C534A411593D10A
747F88319A809EAE7BCE9A7AB5B1E77B1B8CD7F56186183BB1EF5CD9063DF88E
60ECE319AC80193A8EDB7A58018CE9051284534C1F36D962ABF33DE5A6612AE1
2C94846951749EE3C9A2EE605514EC228BB66A22545962DDACC28AF52ECAEA85
FFD7C022053AB5E774464120A2090199B8A322D4E4B9F225EEF68B8281688882
693085432C07EC72C6FCD6B3EFF627203630AF2BD897DB3C7DD9D71FE2402759
53E222C1AB7FD8AFB2C629CD2B0512E17CC64DA35D43C4A831D03FCB1124534E
05AD6F4C749DF90AF06D25C8878E0AE2CD2CB6A8F5D480878EA65EAFB3C60AE2
36D848BF0FCAB713EDBFE54E4BA5BA08543D85A37CDB16D9BEB4252D67C718C2
A4595075C1818F6A1AA8F9BC84226287AFA57C086503BAC3DBAB76EC3D8BF52C
1ED0608B2273DCF4CB3A1CB631AFA51A23677CF06FBD07C632D409DADF45FD19
3E6EF5F8491B730E6F3509F43D146B66C6AC37133B518FE14EABFFBA280CD826
087D821A0DDCB63267A9A7701DD5EB7677649A26D94F03F5EA9956DD46B5F299
87154433CDDF37C40FBE2DFD467CCC73F5E1E9809CE9BEF643C2568A3365B3C1
540A2FA5E1DB9DDD2FDE4C295151BE1F1C9C1A407E38BAF13CD2B3CC3A3A5AD5
7EAD62A642F7BC52D0064D626BA54AAA0562F00EE394976F0A2F4870DB0C0FCB
EB6D169903ED4724723A954072436EDF60F30CD8AFF952E9BAC603C235A9D7DC
4D9416C47C0CA011F85308F5CE10B99E1B023E824D1B64CCFDC1111183811EC7
8038D8521F88E1E46C231350953FACECFD82FBD821919E3542B33690DA59D859
C51EE7A31E4510F5196DF93DC22D53B21CC59EF5E3DA0AAE2511A0731F4CFBEA
451BD48C15D194B7A0925481FA6EDB08674679A39EC0A7F739BC533CF7684AEA
10F0516B499942E56EFB6139518D822DC063095DB8763961CD892B5DE3777908
625E1A91DDE6077E98045C38450ED9E422045F45A358A7A162679E52850A292A
04B8BAA71A1D06D2FA9ED0B02168B32F6CC0FE765F2AF96425EEE41EAC3D35A3
AAF9348E13F1671DB099C4BA12DEB2C7D2C704581BD389D4C24C460375FF69B3
4D18EFC59636E9C7F8A9A62866F4E857F4EA7D25CC8749B07AD56F952B9069C9
1EF0CDF28573B5A46E82845D720CDEAC7E9079E9EA4FE64EA87FD6E64BBA672C
3E6A26B4F69ABD5228ADF4F9AC7621009AA271E0B41B6C1C6DA424F4E69290A0
78C85A84003435A91198648A941C64D12E8E1451D41BEA93204E6AD3AADA6F24
15A8BCD5C987B17D5F570A966383AA9F7CE59375525369CA6A559BEF0D5763C1
D7512AB6E16FAB0A633BD4BC90EBEBBBAAEA60A61E4B94F0D92A7A8A44160BF7
9651F0E264F81770C69C2A178F33BA78DF24F7346872E84795059D0A12F0E79D
D00A9FB4D7BD59E92911ECD5FC0D9343070BC392C6FF76BA32CC1704A1B7852C
077028B02958F0BAF81A04C5CACCF74BEA322B4845273B067CE1A9B7933BF8AA
212A5A80071AE2173470B43971818878DEB47C542509A9066C03C51A1A194CA7
1FF4DDDF5FB31C974FC3B57BCC10CF0A0F1770DABFA09730FEC742F9287F2792
B92D69DFB3B31F1C72FE37AE784561BFBBFF0182B969C8B466D474E73962888F
4872924DCFEF1D58B9118A1924AD8823E9CEA0F386D14195BEEFB3B9A269A587
593874C38B96EE3094BC95AEE6F1BE238B28F879C77F4A5C066EDD265C940ADD
DBFCAF37BA2500213239F12DC7E00B6615C66879D91DADEAA25F850083BE6CC2
6AE7437664AC6A98EE85B34A9A5F22879FB0BD63A2938F9981B2C52892697497
5F2499F50FA04347CAB53A5AAA7A2C22B671497C9AAE53C60DE5EE3A1E09CE2A
3246B9B5EA106E3D12338EC81D16316F21015487644B55DDA2E1146AA3CE0787
4FD5500C5FD4773525A9E12912D6B2A265DE09B43DD5272067C545347BF5F362
D403F91BA1E5BF9897E0FD98394A944BEBBE20D5795B41C85D883A7B825C2C63
2A45A8A619393CE6696FE4CF5165DCEEFA72DC1B32802595FC8A458C082BE1ED
19871BC4F4EE0CFB5116452A0583C7CDA275AEEF2B2CF35C073278159853E3F9
C4721801295766162B7BA50B9C4156A24084CECDF954E6508FB2866CE2EB3DD8
8426FB22EA87B5F38C119934FFA997C487C43CD58E4190656F7B352E24890560
FD20035A6FB8530E9EF89383C06A6EFE56864309B5EC0B1550029198E9E9F0A8
79549CA69DF4EE05AA2A5F075D57D8FBC08387EF2A58C54D8AB7580EE3ED58AE
B83B72CB902F538B6D5153870BDF50F61ECB986B27E37FD67F41027A5A2F1CEA
6F1F25312B41B125B4A46DA4550DB20C261D39AC844B996C9EC9203DF2ED2DF2
9C2AF195DBC923700981C5F5D55CA10F93D53C35497F93A5550CD9DE284722F8
FCE549F4133677FF06C973F989BB2DC8F8D2F0BC870CA2D0B0D46E0A05899D4D
1DA41A4FE88655F94A91F7A876708AFEAB29E9A7CBE0BC90D0E45B0149324F52
CEEEF248413B9AB45604C2037E471BD24485A77247B614E056C02723505DACC7
92086E18039526155ABFD0D65D612E0AC6E2DE0E5F9094E55F65DD77E8263B96
7745D99494FCFACFE9D03B9851FC8FEEBF287171660B9696015A69BA4A04B118
AF10776110E318873BED624E3B00DB455D1B321583B42DE5E0F9AD77BC7E6B1A
6CFBD3FF8AE2F0786C7F4EF8C2A5A242E84CFD4DC50ADFEA0C2E12FED1CA0C65
0C18287C6E4392ACEE9A1C8FB7FD9390F4072F37B10826AA7F8D15F5A74F536B
4F63EE567921FA7B005AAEDAD9D7CEBA399B3FDFF494D78EEF9EC6AC0826E99F
51EBF66192E45DF1F3899D636D518807D029E0FC354D9874CB4B618C65A2D08E
2F14862E3A62922390E1889F9CA029306E7E1E4568AD6F06729E1FB63B8B3886
CF88A7DD5419F12E32DE866604580CDC0B07E9FAFAA67755F81B3E69FE843FEE
F0899DD0F8C2F957399FAF825FFBEDACBF098A54372F2BC0BE39C9E243742CC5
3B20B2FA8508290E2C6D80A6AE0478021E111AC732FA0120B1877C6951F86EBE
AFE1C5725C894669FF44C8BFA89CF9FBAEAAC3B3A5CC1C9744253567A7830362
372E5EF5212EDE3106862F54A3D148BD88425747EBD84BF01DD06B761A5E4734
0C37814FE1FB817C7C68A5AFCE814BA03EA9F973E3F4E5F1A14EBF827DCA38CB
F9A44C73E3054BC981ADF1AA24A40520A6C06816598772E12C1F54F5186A550F
AC789DC46BAEA1D028891BCE072BC40599E587E8B93EABBD24983CAA7C21FD1E
44B7C3DB34900CFF47462A68A28CAFC810C1F1A3A51DAE21CA6F5EB4FF329646
3F528D5160C7E9F656D93EB214E1FA04F01DC2C6F15BD9566477F456E5395426
72B0D2AF645AAFB04077D440BE21B75A75962A0675857389A433E787DE991A19
617A6DC6D266439974A234EFCD5B6E0E955587621DA810E08997786BA72E91BA
1D2759753E96A327B6C114A5B6872C8C9C6213593ED56FEC6D5E9E8C3F5912BA
4BD3ED625CEF5EDBD37618D207AC9D2AF1C72C5852CBDE88CF595927081BC530
6B48BC1B97A9612FC1D0DEDCE26DD38CD0DB6335FC4A6B27E683A4B83116D297
C76128AA0CF27C1433A5B21C85C42294C5C5DA468B5307F0F0F9155EBDF9AB2A
053F432A3149B7BA168CA488A7C8F2A630D1B50C8AD964B732576A4881AE9CEE
27DEB4026FDD86F859C51A3605626B70FCD6DAA30568C75286BE9EE9B1A2C060
1C57F5B7B1717C456ED996C6B9DE9E1159AFDC804DFBA4D875BCD1C5A160EB35
A8EB174221DAFF096246849EDF70EF99B1C95A296106DE15CF1B4D743634DB5E
B2C1EE447A160AE2CF655A2941F1E48A71BC01CA5CACA1C98CC87E8404F41256
B3DF22C3C0E1650CF2AF1DE1F40487D51DC24E7D4347285682450EBB6D47DA23
67A369A11ED316CF1AC2294E853433340952C7F1E54D5EC0212C697D91FA63D6
E5955CAA4FFE0F06DD5A0C90BFABA39D0F2725E0DBA7C8CE305DE7C1B59DC219
7B35BE60C5CC7E02E8BA2137CAD04FC9B35F0225CE06E6F5F211FB7FC8593B44
6AF4B63916C86B2A9DE768BD8E3A1B5FA03C76B92004AD4FF5E2A0B60B0152DD
E9ED15EB68C155DFFD1BB283F3C5592858EB2D297AA93C055CFCB2813F3E8130
E33961FE59835F21DC12BA218780A5A6A0FAB8F42D90434A48E3F4993DDF5FDF
93C9E21EFE746214FDE117584140381D43F8F39618E4F57281998D97BF97B72A
12C91CBBDB13FF3DE31109B39281A3A2DE349F32AF7261E19E0B78B3EB858A93
2B26CE562FCDB42767D27812497EF6A45BADB374BD1C3CC6D8482BAF155701DE
02B1C3A9A93CF961399ECE1A897788B2B23EF0ECF516B4E2977709EDBD3DB7AE
516C55E742F598B4B9140A5364EF1F6F3A8F40FC28A8F80062CD6C9CA9EF8D5B
4FFDD23B55D05BBAE7F649385C4CDDA9A382634433CBC9D2C6BF444FE9559A1C
D46A71E1847119E030D30776ED4DBD5A2DF213D85A56B1CA85DEA53ED0299C1C
2C1EFB1C157CA626EC056A68B66C652833CDCF08803A5D0344DAA7CD767C726E
7BF288414284CCC3E6FB3DB31EC1858B0891E10C66EF859E5866B19808EBF054
38B9C5A297F739879F1507A6001113B11FCC641D676CD124BBE66287672778A3
BE351E58E961E816262EABE2E3D7E768B8F9BD9F4C10B1CA1196BC062E04A4E5
BDC05841A723BDDD67D0110B8331410F1DCF9E65E7338B42FFA5A5F8CB3945F5
86BFB542B229FECFCD917788FCB6F16EF60D1B1EFE2961140479458987FFE44E
8010F5D4D89FDFEEFB258BF9752463E3291529C0420927FF4C547AA776CD861C
6F7525577AD946263CABBD7656A1F5BF1E103CF93C0DD6CE244DD9B337968A02
FCA01585BABE4E6127C9DC4AD6EF6EE0D15AE4C65321DD0ADB8700E6F49D4494
A93081D9EDC3E6F33C0CBDFA4AAB10EFD2763ECF666139E66CF7D277ABA5AAEA
55AA79008640B603498A3906733A92966C2F11E260A5524656A9A0A0CB214AD8
10A3E22CBBCDCC9538BB8AA51657E0899F1723A90CB01EF65416294CAF223673
F451FC750AAE04876050E92E971F6A42046019E11D040BB87BBB7ECA6D7070EC
6A87416143682C4FE94904E5F5FC71490ADD5CC34BDFDA94B1438B4AEB72DD36
80CDFCE4008A7DC068555E6BFD1F3E8D1F7B13351D44FB1513CBB22AC8F22E33
AAA89275D3947828C6A9675B8FBB5ACFB75A80A168C6AAE8217A7459651CC8DD
6791A341BF41A595EB76C6C567A0539A035AE3749991DEA439FBF139A16A5534
2834F92738BD6BC724446933E8927F3AACE64BE6623CC75E74878FFEAF3702A7
C45E4B09188CFB4AC98BD8AEA47D89D629C49699BE537834825AE7B8A4467748
8AADC68ADAEF0E112CC860A42D5FB50529EA6CE284EDCD95D88ADDF46A74AC94
A09D60E190C548172D2E1D8F21295E6C0563A5EC278081506796D4A5CE91258B
1C760B7B24934B6B4671E42BF7C669EB92D9D974D5E29D6F1DE7DEFD01BE337B
CAEB58D4B2EE599A6F6A9747787AB8FF415A4BBB4AF81F71E37E6A0C5A09FDEC
8D3678C1FE53DDB897B389B6445A99DE978B0D81E4BAA92E8B121A1E1A04E893
2A5E64E2E417C6B64D84B19F7C2D7C143E2878CAF2F210793730C8E519720441
6FD5342DB3EFE5D9826106E5679AAAAC1804C8AB2084CBBB299ED351CDCCFC0A
735927A1468C4192AE8D8799A91A9EB19EA03D4883631BFC7012142611205589
FA4C2263FAF831B150E9615BA43E7E710108A7D53A4021CFFA25B6D7FBB581F1
58E22E137E896DDFEC3016130BE8F3E7C2E2C0DD5267771AA827C9A1EEEAE389
0F6E58D8C19D6F90AFD127A50E098A590E4D63BF187D8A93FE9F8CD6208492E7
A448BF4B4C63CF0C68AC833BAF4B22B26EFC197D4A893A5AEB6EB247627DB6DD
020C5B28A5F5867F1D07E70480CDC1A5036247F8F1C697A6FDA6211191D8856D
A7689FFA345D31BB30841E4EFC9ED1858353AC4063789B6A407EA26388F912AC
640B01F85B3B1CA9C3242781610A7D9AB6519B473F5D5D911F077A97BC333DBF
DF76A4A160238518C50D908A4EE7AFEF5FFA49D59C844204CC485B2C6E795EB0
3850ECDAF201BBABA430326604E56F26766AB54A6BDC7BC2DAA299201D951426
6A731C48B879BAF823745D6D43EF0BA7FDC43804D1B4235D8A4C02D3F7CB6F4A
358631F1AFD8CCF42255F33A0F71F5C59075B9BDCEFC4B659E93BACF45D1A498
4579F501A6AB5BEEBB25F619D67246632A04A14A7EA94BE0AAC62FDEE87E5394
5816B7A1E4B6764A0F87848033CD51F116ED75C3B58C7B93A5357D715FFA30FE
BAC7155B1E4FE28B0DC8DE04B043643319E48BC58438C6183E00F67077D2939F
24A13BE4C74F78384E7FD399CC47BB2F48CA5FDFE743D4CF1A918C5F58DF1D36
4E29610F516FB436F78E4E2174E4CA868698A7B0FF83E348376C235FE8985512
4C58E6471FC04A203EBD502D6C566B04255A82BB27AAF2426421F0093C603BD6
3827E28F17D57CE60091FC5A0371FAF14E7D7542B1B42D692328847E728A6BDD
31F576F64475E62FBF30074B701B39665F4BF41F69D56ED71F2662826D9A1865
668783704E8026D233E705AB5C4F2DDA808D365A7468BFCFBF7E680446F888A9
F1CC3A8642C108D34C4CED6F7DBE80F25D75116BBDADE2A54CBC728EB209FB5A
0BF3C85656D645C92FFDC31E79C6432D4A78712F4606601ACD7D328B95ABEE16
B14337A179D18E171F04F6E164C2CA9F56BC5D4E3E633D60C6EB6CCB0172E299
B1F6353CA60FB57A0FEF4F937EE9FA9C4CD65561E2E5608200B86DDC18C5C81A
4E75F8EEF896582C61017A720161EA2CE5BC374CFFC9EDDE8F98142B0E13F3E6
B825F861467649D10B4872EFC2B256A1C1D84D2CB53F1FA77EA74787017E92DD
E4CA70E9A40308B61A11D9B9DF27ED6A8E4E5C370542ED6B9BD96F7860B5FAD4
2B86273D30CE80C424CB288CBB7155E850CEDC95D7B9804A7F49654F2B9CC5E6
F2006EB0C32DF29D81A0FD4BE5ED75D83C8174AB99A32FB1ADEB641E165EB322
1FE1F3BFE28ADE72E1F7E45D55CA2034552666DFE7D5D94966CBFB46E98286E8
AB5BBCC5A8C431D8D7B220B033126AC26EA984A4660F22D390595911A900FEDD
4D3ABB86A7B1E2DDDCB2BC12801C4A8ECD0B107CB61341CEF6C18B52DF7F950C
E1BDB15548CAD879752198F95BB659F845681D61D02D28B185C9F052844D9A5F
91C6D8AFF0EA14F929D5598F4437AB944A06B5EEC3343EBDBBC872CFA84BDF47
71ABB21235F26ACF6B9807513FD4540AFEE246506B981C4C25D9FB5C08D065EB
272EEEA43D654F888EB2B5E2F8CD8F21B4A6E6FCABA356F58CA4959D605D6577
A03DE99BB78A0AA1139DF5414824E7D98D824B12E020C9DECF71C7CB5B1C295D
E9C0DE56949CA6905DC5CE4093E2F1A817C538EA4F64E96C20699C861C0558A8
3970B2B20819C87E06075DC32A70F10CBCA5201CAFB22E52F8C57F195F6E6524
13F527B2581AA0561DB3F64D6A0AEB2C3DDAB25909FEF00778D7003A85E904DE
41B35C4ED46D104E5A8928286996E80992529537DBE75F0705BE16EE2E8CA3CB
7BD913A9FF9C2E549536B3875FFBEDACBF098A54372F2BC0BE39C9E243742CCA
261A60A772848CD279AFD9FA3FFC6A1B269DF1B24692E01205A76CC4A6F6FABD
063ACE8A01DC45383306CEDF6B1DD84E223D306718D250574E4602EC0964E1E2
8AFA12B688D61276F94706B29796358956C55E2AFF9E1DD0699F84EC735F63CC
8A90417E80E396349CCE3D47F084C95E8971D17B6C14D5B2A021154D274B753A
A96964CC6355528E6E2C07E9AD472351050F942D4323A5ED11D5E0B35A7B1204
741A6C9845338FB9046C95CD41718836E7FF97C27619BB4DE3C72336A0079B6E
8D1359A7450C8F0045D6FBA477667651DABD08368A6487792F13685C59BE24D6
F350C447D7E64A7670BA35F435403F4EDB445B75C893FA3788B37E4CDBA2A5E4
342791D3BB7FB78376B78655F278DC7DE38988C5661E86299C1267B2AC179256
48E0FCA874964C393D4E43107D83CD07880A45EF3A59D1AB95BF8C8DBF57C2A8
AE8354450B6EF848E437B50688FD1B72A4F714CB783DC5D589BBCE42C18EC86F
E2791FA6387A4E1ACBF2A59249A40DA014F6B47B79E9197B49BB995DE8481BF5
77BC17BE663C13833162372FE843423B04BFEBD138588EF5103DF90B7DAAFE39
ABD4C779E1FC59035499DAC276D9DACA74673F9897A0DE47408BF576317D11A1
007B0E8E8ABEAE7A8356DA1ED8DB202FC30256FE361FF7265ACD2AE45430E2DF
A4499094A2BEFE920D6C09EE7D51FE5378A074547878ADDB5E7658E79045B4F8
F5309834FD69392B73C00329A2BD97A8631759792C5455A628C6B99BB29B6279
4CE4AFF4A8CC6A56311513E8AD879777812D6C68FD840C8936DC2A378F50F10B
3F288FAA6176508A79C1D18C9EB135546E055AFCFBBC8533C2A414DDC358E753
C911F4B1A3DCD0A137DF21FAFBA9E8FF83067F15AEABD3386CA97FBACB748809
5CA5EA7F68CC20
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC660D7704664695A83680221C6397E36FED57827D0CEC45CCE9134E1
20F85C107CE5E670014BCD3D09417B18667B975BF873F4BEA9022072655ECB43
9ACF13725A79EF90AD4FB0073FF142CFAF4290F2BEFCDF56CE9AD3AB8669A691
21B16C33CD949DC6E4C614B2D1A0ED127FEDDC4387DDB2E10EF3FA3985EDC86B
243368F8CA936A6B93DE729493EDC6FFEE039CDB833C0CA3B0223A63BA100BB2
B4714AB955DA07C374F097906ACD908F1A8355BD40273AB986F80E6021E31427
AEF512224950615DA2039D4EB3B18C87BC21D80345EDB06493E9849967F12E63
19295F104EFA71C12917DFE9B08B5473DD51A322ADB72FBD8794B3F51A1EA076
A789F59B3D595DD347079EA1554A4608FE9440AAC9F04CC93440E1A8B0ACC1DC
ADB778837360339F16EBBF5AC7571B0778C0E9D25358DA06B20DDF35F40C2314
035F52C165A49120D5332A136461B27E1D641B91CA52CB6583FA4C6F64BD28EC
6F839F95D74E2FACD9500D776DBF675838C2E27A9A1C75D9786FB52F7B15A017
61AF688C996E2561756B8F923AE34B82BCFDE515AAA95D76089B8C6D8CBF4863
3095FC397712BF000B4F2852F1C52ED15534409086E06FD6BC39007057B13EBC
E5D8E8EB108C21F7A32F8D0DE181A612268EF75CF1AA6A436B3DF24E7DC6ADB9
39B89E2924D0A92FCDC2AEE877BDC9CC108A18629F0D64BA727A5BC21B42B5F4
1E8F864AC5FCD0977D31EFCD46CFD2F60DFBD4B1B7E0041EF68AB5AF9B946FF9
36607E3512ECF70AC43BB1D4751F57512749F002E1148BF99DA5CA7EDBB00B60
E26CAD17086C48CEA3FF695D5E829EE6473F0C657F7655A674B43152DEC8B2E9
36E490A4D367D68214B348BA51DF871A83CECEDDA1F3DA646B38272829C49B77
DA56D8C3459AEF9356949ED2BC8CA8085F829B9F9E0B4E360140E2EF8AE58083
EC6DA4E70BE9D053F69949A8E464ED478A8E037FB132781E4D3BA60B95605DA5
5C67C5F6EF7AE2049EA3D2EEE67F2FFC49FDB8B4BF1A5B55899A71BFFBC96D20
CF2025F12147C5C8D5E39937B03356D453D819AB0EECCFE7DA6DEB238A87FDC4
1A647D79A3E56C4B5AB6B245E707523349225E6B8EB758ECEDE8173B87B4AA14
71C5FA50EF20ECB3E3080FC6D8B395542D5E464EAD1953BF60A81E14EE323080
F4DBF77A197944E1DCF0738600BFFAE3E467BEA9BBE6258A20D9E32E17451282
4E1ED5C40D3C40923DA150C493699F0E68263CC98B61749221081D1C75F39CBF
B348CC853CECFF1489C53CEBE1A6915BA90065A1A95764E697057F013763621B
17F36B310B47B715FAAF668FB7F142A6C7682F1CA89CECD0A14CE3BFFCCAF634
AE7A1DD365AB9D3569F5A96C3FD32EB201189D07FC46F41CD2FB9B1BBE515CE2
23213D98659912424520237D41AD0A00728D89D92DEEF30B110E58570A966383
AA9F7CE59375525369CA6A559BEF0CA0B802D43F883E1C794B9D3EE9AF8A5CD1
0A347EC4A862A6F0B3867EDE0A050EF258A7F49F5081F1FE098F53AC01525217
1C713B12582F6D29ADDB80A225B11738EB3D1BA708653BEC6F7AC682EFC32633
1F40C5E8FF16D3AB8647D6542B4C6CD77F4469A676906BA6AC776BDA43E4B128
3ADC30DB82832166A9202C67C70817F41B505FA0B5F906C537EFCDEE4C69AFFE
F891072A4BF938AF76A97EDD40B7F6F9D15E91CCF9B8B2DD85257EB6A2C747CF
7113878FC1B094729613788FD31ADEFC852D2E598734CDCCCFD8C05DDC3040E3
87C62F0DBAA9DC2F6628F61497ADF417AABEAD37062A126B997B7696988A9F2B
3AC897A10789DA53D2DF6BC8441AA916C8F02240634E21A4E79A7C8F9062C2AB
821ABC614DA8C5DE3657D1A80350032D19862612D6C80422A4362A89E46F7DC9
1B557A4C8683B5295596D591703D3A1C188354695617AF56DDA1FBC56DBE898C
9AF2FF244463C0DA21C717E348E0BE63120324C3F420649F82D4160A07270010
141602C3A6572740D06F3AE476ADAE3DE5D771C66E86F97387D4AE97D6E59A55
4057B9862A120162EE8B3F4E8DA71604E6933F27729A2C7FD9A30D9E8FFA9D0A
9D090B86A2B91B89AE3479CA9B27527C68B896EDB1FAE22EE3B71C15A10C1971
0517916D0CF980211650F7FD1D657C3164611037449E390AE607F3790491D6FB
BD58617B4FAA8341C4DFBAB734E78912D306347C0DCDEBBF156308BED3E724B1
5646DD2FDEA523D863CBD4EE16455CEA2C0BEC9873A424C98F8E905C9CF80FC7
24E5A519BBD1CFD777EFC9548086229ADAC4953EEEF78155D1AAAF6A197A1B14
F0A5EAAB461B7B4C814D7591163219389B0F4E74CAF6C646E9169D885AF04A62
7278E243314F53B604C87763D8BBACAE4B22606DF4F87EC63BD74CE9504531A6
AF606FEDA8338FEBD91498B806ADEAF525CA1977417B0C7399B006B15704D390
8A4CE41B89961BBB8CB8F66913A9AF650EBB1B131913D29467B7517D809FC549
0B8B4529805E0E448D4568D96F6FF9CD9E58D823E58184669CDAFF2CC298AFE3
98A610ECCC716F622A9652257CA414AFBF1CFC2AE1E6AF5D19D7ACEA02800973
AE1F7D563C43EC5901417F40FEB12D4C3841165C93E441288916FA8622E56DBB
5C5C335F34E93B2EE95EFEBA3F61D35AE7A0CCBE266A5CA609525EA685DF1D3A
FF4BF6EE7D367C652B12B08286D947413E48F70CFA41C190D9CF234520FFE9F9
8963FC566AE808AE20CAAE74590B3DD20E56344AE5BF50A969796BF3E807C04A
3B0CBDA9FF1FCA427B0CCACAE3F78F40E9A45653BBAF2A5DCA560DB5BC07645F
9A00BD4D219AD9426EB21FDF7EF88482CF7D3056AFC17907788ECFD84AC599CF
9C38E918B17E14F876C34FCD483BF1AAD3FAB74C2B69537837A2B70DC0908B60
2471C6FDF28FA577B39003387F79289C663EDF22003A3B3A68A6510AD6BD87E9
BD0F7E93A67159F5E757638511CCDE33AA193D61A35EBA7F7E101843E35DFDF3
E38B88D834A1E8AB45FFE334532FFF6EE351252820E23D09D6DF44958A1F7695
ECE82296DF0D272C713BA3B611AE1EC74744F93ADF8FE08B4C8BDE976D18C8F6
69EFAAA30BAC0A2EB45FE7328E735DB9740967E6887D1A3A4A4C11434821D827
6281725274B6BFE346621348DF584F6BB7D73551EE33D0A209D06CC69BBFD937
8D8E8982FE2AAC51B1FD1555E9FA2EF2D3B10BFCA7428A5429DBD8A0F7103F99
0EA69614E77056645CA9F64D31CB9E4779A061895D64DC9B20DDE785FAAAFA45
4886152A34F1675373F838D16963658629D86E44060C1D4CB37236ABA9205AA9
7B4133E585A76BDFDB94FA42FBD891A9881C25AE365EA7A44553C0A02F477E61
69355E7DB1F5C148751D33F7C872EA5EA529F6DE126C11432D8C083822D9EB38
20144C7EADD2B7564578EE778AB577C5B9F793E309EA2AF7D1E5EC95BA6DDBA3
93DBFA8C3C93DF38C9B6E45FDA05D04DE260D94722956833588CADED96CB1F61
9BC67D712BF7CEC27CE0B7ED8D31A29D7F2D888EAB1A4A96CFBDEFF4DE11AB02
2E33B2765DF15FC2A8556927746C9DC827B1E08975F998B4C43E15A84E7DEAB0
3197B8926F0E4B4693B8DB4AA1EDD6D94926CCC3097F4C547E35CDF1465C249C
AB870818FA5CC7B9DE5158AFF179902CD32D6AEC688F02A7365B66797DE1EA02
2AFC6EC3F3E3F3693001CD131D8C3330918BEBD96204FD6813434F729F7934CB
A23B5A181AA5B60EDCF5B16D2019688A31140D83CAE2BA50264B1E097ED39AA1
BCFDDED8BB2F2995A95C52C13894C915E3EACEB69F551E293F9F6D63893A13F9
6C7E4C8140A34B4408C32592BAB5C4F98EDB02B3CDA24BE5B94F4D4C0FAB79CD
0D3E7F8A3C0893A7EF9494E107235A45F9EAF54EEF0B685A1A35C4C2EEF97E28
A71990C9D9D966F9510557EAA9071AFFDFEB02B261721845AD34384F239A820E
20864EA8411BBEE82E2C52010B061C7F0254FD0B85AAD7CEC50BB44204FB5E25
D98DA373A781FA2E008F22E3792513C2AEC3A63872319F54E9E05755F04702A1
45F80D07676331147BF8A1CFBA126F0B20513119A844E6A8FB598FE53D01A644
23EE695D829948C67FB78437A96771CD533AFD271633E802732D4B23AD08E64C
D0EA508DB893617833CF7AD7AB81DABFEAB2E287C68A6082D5A6356D72432A5C
A4C29C79CD89BDCD75208FE01E2B03E1B4402942F0B098E163EADF9D3E76CFE8
03EEFA0A97F281C3DF0B2772B05DA60F3D41C2197020B352ED547BD5328E7AC7
CF5F02E896F5B69456110B9A8BBCDA8551C3C14F979F3CB83602D81263674352
579D638370B1617A1E758CB8F49A57EDC7C8DB59B77CB7A8592B7CFA7D097BB4
BF8EECC5B0C6F3978630F65EA5D6637D5F9E3781F9B21AA9AC2E64217ED18BF7
D7541264844FECA5CEDC552F7F63440B9CB63A07B13998E1FAF95B38C3FD8004
A0F3D1BF49F70115A71FB25898581C74CE7890C17A159F9DDAAA2086E7D3453B
E5B70B26ECA5A8A171A4A4194C7206F973161A8019E2053D7A09650E33E6D8A2
50BA33861DB6A8A507A47CA5910DCEFC8AB6EC4502F736F76AEB861A3516C023
DD8E36C32C8D03091B286BC4C0FEE3F6F9B0C38F639E7A626550F53076F4D1CD
45E138CA96F307F59BC1243B45A3FE347F075DF77B2944603F47BEFFD06259B2
56CD1A08F62A540C7D1AFB8A49609DCCF844AC7E03278F56A07C3426540EC11E
494882452EDB6FE1780BBA9BA05B63D75B8631499DC947825E74F20C7323A202
E1BEB50862F718C3F84942E026CD4846D3276CEA9AED7E1958A2844855C949D0
8CF74E739DE8C200F17990D35A3680EB7E38BE239A8B98D5A9292428B9368284
EDCDE7B6926FA86E4865A4B9EDA0017BA88646BAA9D6F06196967222EC9BADAD
07E1C5CBDA9BACED0110C946D421B421FEDFC099C36CEB0953DC37D845519CA7
DC74EEDC132F9E160A490C56786792F54667A6C5F4E7C366C9A18F596C2A638D
FA3A2A0E4088072A3C9E36431F735343D3B2EF67FB6AFC6817B8B15B0FA72FA7
A271EB6DA70D0507238E2ABF7760B6EB83C36829DECE216E9E7F559438F73AAB
BFA8010815AD83B7F79B4DD5F1392A2317204619E77C87BFE6FE50DE547A4CD3
C7D183BC2752AE0D0507238E2ABF7760B6EB83C36829DECE216E9E70617589FB
0EA874920BAFB89889071729076D7550215B495C47B6AF1DA4DF3CE3826A8648
A74D83D12EB45C332D625A631D4636B2687B40395531AE88840CAA741991CBB4
C9249E4FF166644F70925D7FBAD1F5BEB2A17DC8A3A5930535277050AE35FDD9
142B447900FDB1DA035A23F84A6734B92BCBCF272663ACFD83E27409C5183507
F7548AB5AB1461702C16DB6B9FC7A6BC09A67527FD9CA31D17C6F87FBB050C63
04ED348A11503F3C9D96583DF2088AEB39EE217541A4C17DF1A012D2896DFBD3
2714332F7368911F6BABF3E4989AC38D1EA3503922CBD0E7E496271D1C73675B
C4DEBA558D53A63F9F1D30B9BCDE136E64A88F5A6753BB9B857B24EC11AFD13D
92CD7D86CC22ADF76891CF36EE5A6C9F0FE755DDA7EECB0F11F5DE7D202BB697
39202BD31EDAA120CE54ED0DE7EAAFEB29462990DB2960ED2C624CAAA8C031D7
18CB10253850609E8518074632F6BB0639E2AA1DBBF34708FDB80AD38825E5ED
AEB91BAF1279E7930E73FDE400C7E7A7EDA781DF685F5E2937C95B50D07C6316
ABC08495EF319B353918FF4A412EB9E00603DA2CDC3B14EE62296357FB601A8F
490EC502908EC4853FCE7AC34FAA127A4CC960F800B90454B314CBF25CBEF5D4
72F90D0E56DA81E33674E3BD4873C80881D7AEE9187D989FC13A6048EE3B6B12
A311C482EE27E72DA39C71602F38D08ADE5813525E96BDB0216EA14DDE19D11D
1B13D0D488BDB61EE45F2B10C59010D2DC807B6AA2AA2BBE06110745FF379735
4D5F8E2373BC8E4A791EB854607D62C59BD0DA9C906407AD8FDDEC35700215F6
0737ECDD6C87E2764C59C2EFFB2279924147AFBE2E6D1929EBECD716C6D7EE18
FABC747D04B2E16BB4CE6D141283ACB0BDE6E688A192942116C4F6F5F2B8AB0B
4503D1E9AA8E377610666E66BF183E06C5A9B17C8909097119232B3876EA03A4
AB8214ED1DF5A3751F469A35FD6BE1B647C48B54C19D41199B13081C1DEB0E13
51CDC979DCC5C686D4C9E96650E4FA7096AA05873752CAFC5F902D6E00FA1DBC
770FE98B8287A1D69FFC2B423322A0AE12786688C1D5C8740F766D91968C9D0A
DAEA3372171FD26DC9C4A2DFC815E36687F76FF1DFDE6664E363591C86F98823
72BF002C07632B5196602B77B26FD83E21449AF76B88B04554D733D695923249
983C140BD64AB6CDC615EF85C7747CFD61EFD84E289AA7D26CAC14916C11B1FC
A1C171B7B183EDF89D0098A24DB8EA5564BD91E07D49C8224435F88F91BF1370
724926B91A21E9F9156627EEF4B403DB68D26D6D74BFB4BCD8B73CC953D25984
80235F98FCAADF807C859CD6AE76596420C87D291D12CAD0E3B860C90893FC6E
41DBC54EBC143D45C196E8941242B7D6881629DFA901540377563F21C861B8A9
3035C65C4B32248AB8F2BA32A214DC568BAA52FE58A9C1BFCC5A571C9026DC8B
53B3DB4FF6C21B348CB7710B992979C3E261D004EBDF64DBE5620D5FAA979148
66F3D7D93D03B6AA17DDFABE69046EB0B0C8C4818AF7E1AC71DAADD3032E0911
2C7A95D887EEFCA9B9A6A03E80DEE3F0D3A33F35077670F6311206BD6F96D03E
65C08827A12F07EF463F84071BCB3FA82780691BB952D29ACC6130A67E5D39AA
9F24548D00E722021FAD70D99E2FCCE6FA219D830AE2849516AAF044AB17C700
03E7F89D4B6E8929944D63BA3243A049AF60C860AA9DF0701A08A42E00AF76DD
2A29AA56057A253587F5F1613F5F05DFBB39FEF6DC3AE6AB5436D0CC4AFBE182
16BB13E03492434D637E97F8985B6823BC95500AA1711E0010118D379768A66C
9F2C8501A2E9324D5E6F0F1294E1C0AC67EAC34BB8D4BF0E6B0C5982FD14E4E9
16D363E265322DFBB4CEBB6DB70C88E22549C24005F838221BBD4E5B2EBC9BA5
707B0A9B94E0BEF9D47D21527A3B1D808785CA37260429538F64D2488FD5562C
30F68DB363B9EB47BE2C6B571D95FFB386481192391FACD2C83A87178DA616D1
91A136FAD0C22A637B674547B9E23D7DF75F091F78BCB0B56BFF435FC597927C
A5F4BECEDB9ECDCDF94C70486498B92E1BDC94148609B7080172FB96FBB203F0
B58A4ADC9B4A56C69AB3D38B90A55077C7300F05F1B24073ED052F37A3183BD0
20E7115CA9D7185F637ADC98CFB6061E172B686E9173FEE2B0C699F513202342
AE99A192DF2F8A3ED4CA0CB7B07D72AFDF3784DC26B85BDDEE6500EE00260B50
0C6D1701E72A0F5EF959C8999D23D4B53CC87F94ABAD0861756DD226AB585C11
A08A3E33D5F5D10E8177B9BDFD8936118B8C09C04174BAEF8DF1BB4A1E1F848C
1A517FB563133C9671B4329C478509F4DF6F8293785364A5FCA2A9712F67C1D6
DE9F80D4DDA43A9FE34FE4FAB5444333CD01167F0840F3EF427451F2250A5979
61B663683299756183FDB6FB5F3E4266B7D327312EFB770916FBAA3213D03302
B8A797C9CCD0C24ECBFD1458AD7022F1A3CA3067DEA7F016221CB34AA4EB2055
2294F3AEAF6C9F48CBDD76048FBB9B8B867BEF191661E65D79A249AA3EC8CD2D
6A40C4A95AA66BE98967F52A855DB02C498F17A1A003E2F0198DA96155E68E8F
6CDE3F99D19B4429518A60223E0910BC6092E488A3488D54C024C9D1D083F1B3
377872C04F8876134E5B5D5D1D811F297520B630C036170A5DCED9628B01EC6F
47232DE5CB73A83C1B82D50016A2B9050D2F3A3DB09C271C773A1FBA4DD1B958
F9ACD41851498AD5DFBBDFD2AD3A45C0FC93D273C16FDFABC7DCED6A289C01AB
88876D626C0DDF493F875241C4B52FF5EB442BF47047FF186B26AE1DCC2AA508
1B915F18A96C715F56B2AD5157F99404607C40AD8B4B3C3CC90940165605AE37
03C3F096A04154F8A7384570B8A0A02D564C4CDA994DBAF9958F47B3E92589CB
DD08CD8ED288F58C3CC199450346ADEBEFECD59D1A435C79BA92CB13E855B170
A73D47EAE72AF8A8482D766DBCE0DDB5AC92F1F00DA7F680A07649CB0BC72699
16DA22494ED54D29B1D7C9A32EAF83EDF6E6D7246FF880288FF6420C5292780B
560D7A64F45912E019E8176A8877E173B080DD050FC4AA82DDCBF3D82E4C4AE4
356CE809B716A331977BE7954B0E5562679B0B8E742902AAF8BC65B81FA3F384
4CFB23383CA50C135971F27E862D8386CED52E80C827321977F7865D10CE97CA
2774F27737D83C050C51BCF03328E2AF74242014DE38609AB9B1A96D5303F057
E05D147A27AAA2684BF08AE584333C38C09627574EFD751A6B7C9AFE6196B3E2
024B31F85CCFD898D780B889F83B3CAD005996A6309A63BEBA0FE32D706422D6
DA9BA0FFB366D19D8C69701D7E8ECBEA8856955E7E4B60F6343B92F1B67E0B8B
99DCD7EBB4E08F06C5176601D2D369010199BFFB0028A28D7CC05BB9FE5B9C87
D0146CD88C3A2FAC47231E7B1033B4F51FBF490CC7D88879A9C3D3166C39DCB6
4337D7A141529B10FDAF9584A0AEDF031E76C4DE35D408FACB8510AABB489BF4
6D359714D9E0E6E79F86DFBA81F68F8C745EE041F16B126B844B112A764FB4B7
694BE5BA08D6CA0E890CF427C1854DDA4F15A736793F0C6BEED9FCD9CF230F4B
0504099949CA186101C7DA9C846205E5A2BA5288687C663C7D1D20F95E32C1B3
24C6DFF22CBD0EEBA047E0FA256A192BA240D1BC5F95F52E2343BE10F57F02A3
ACA687FBB3F42A7704BBD690823BB001813152F95714D15C261A3AEB187BA1DC
2BA013A2DD21565D1D050F9F1A8F4CF9FF67EE1947FB46EA1BAEDCB04DCAB7DE
D7E9AAE85B0FDEF248FF35DAF295574EBED60685F10EAE1ED416C43466A59447
8ED0DAFAD0958C9C7A80E665F2C00F6E192B9AB80906803E50513AA7C034A8AD
0032707774DB00EB9090643DF69770905D11D3022EEEE058F0316E770CE49654
6691566F85A386DC278C8F7253779EB9D278001C976E1C57B71E6713B98776F9
5D3128349CE319F1E98BBF6F76D8E14AED4F06B3F1FB4AB16280601D4308FB33
E6F795E46DDB637486F5A5AE16B8B27E8909626114A5A591F0CC4208FA18CCB9
3DDF3784D054AAF95DC58EE4F92720AA63B2DADEEA8C4193BF94834F9F1A8646
DEB04A2128B82697B96B8E4D4D6DE09E0ACD2F00DDE25D97C16957B398D4C89F
58C85445101468001F40721E8DADDCB688BA172A2186B219517F331DA0D65F21
839EB85783B1BA87412982ED98260DB84337892A232A3A1E688B87CF1946F239
D6F7BC4BDEAB3579B57030F0E4B1F2BB033BB77859B61CE89F8184AD6842FF56
F27AA97073B3EDD231ADA8040378EF40B3A93AA01DF86760FA5C65BF58A44B7D
A373F0D51E81DC69EFC45BD40DF4EFFE581420F1F83B5FEAD9FB2A1398CD0018
8333431902E82B66A5054EF8647BE25173D9C0204EE6BB408D004F25CA8ED03B
55B4FC04E017597D1E99ED342D03E0C4B5D0A21DD2BEBCA4D76D2BE36A796C72
F84C716C2B263C3C9F1B514DB5A4D76D2BE36A796C72F84C716C2B263C3C9F1B
514DB495058E0FB0EB3C625259C36BF9AD2EFB5C64A456E40FB5E6243B2801FE
685033C7E1D82DD51B28CDD8CE4B9F6413FCC65C406B8A7DA92EB22F6DEC316C
58986D8B0999B0CC5EA988A2944C7FC65D53B5A106F63E9DA8A981EC1D7B1F49
9BE77587EDD385833F08A9F3E86149F5A65184CDDA4958F9C9892C91CD6C0B45
2822CBE549AF8BFF2247D8C7EBBE4E95D9CF6F8D4D204CC6D61EDA8A9FC2F09E
621DB4AEBA91888FBD4734ADD05ED3388678647DD536BF55E7669038BC12FE40
176C417A05E55389AF319CF38A1BBE0C7FBEA056326E41636E17D938570F4F03
4A401FF8DCAAA5BAF8E40F0C3E68A9DC74A9D294541BBAE10CA63833AB245A75
FA6077C8D570392BC12CB40DEFC01D6A46682D801AAE769BE7F49BD6526B9CC8
961C523D8246CE7C0CF953E081F923EC7288B07A530B247C9995C6F0BFEB3F5B
C0FE45B681C73C50BA9A434EFF194CCA784A02F5FC193EB3F202D9F4FB0387D8
8F0C8ACDD344748ED15C9F359968E28BC6A05471D5CB6A72FB060E87FF1EF88A
9CD5AADBF02DA65BB417EEEE66FEB1681B248F0CE3D77AEF339FB455F3817CF7
182D1DD04EFF696A03E46BC6EC917F5F9D13D9521CEA49EA4979673041F9EFC8
8D77D02D39EC1157D538C0B41C1687B7758DC8ABE50C7EB3E593318BDB7669CD
8740019C074FBD6B48ACA8967586FC51358F47B56661DF84FCD8AC27B4383526
536E742D1F299C73BB93E28D89714B02CB96BF37A41767EDF87245ADDCD1E94D
2FEE120C7BA60E859B442E00ECCDEDF261F9F4E5DF33D55934F684959CFE2207
5ED47DD6FE8909C387D8F02A88FD24540AD718A9E916B33B0262CE0FCACB72E1
4C2FDB87A97F47425AE994F3BC025C012E85B2B1C1D5159025883E3130C6518E
C361DB74D2F14281A9EEA64E716FC9B7CED8E8D340825DD41B1FDED43967E067
6CA53A9CC5E16C770DFF9816002E09112C7A95D887EEFCA9B9A6A03E80DEE3F0
D2F4F04D3064BADECD2208915F105B9B3BFE688D3C21C704D33CEE23A92C7992
0EE5FA94A734A30DACA484EB4AF8503872539DB46C17F1DB0C4292D035FE3A7C
C3A47196C7AAC437310F1A7D586CC05048684AF27EF3C09F72A1548CDD83794B
1D8E0D6BEFC5DCDD5D4EEFDD6ABE81D6E62679AD57294AB13E45AEEB8C6EA105
696E341E49FC24E96C095EED5449C6319F2DB9F1065F9997AC886450DCCE54A6
E6A2F6F710C775974AEE33B14FF2F91B703F4DFC3E579C96D321F56326AFECF8
E97444753F21C0C7AD131698FDF6B55E5B1B11C5AE8BD7FBDB7BA6E90E2AFDB6
5A27BBBDC772E9DF961FB2F30DB9883C1E6207670D806774F325A94413CA311E
A41C84EB8C661706FB0AA0126E5EA0BB33407C56AD63401DD9A62024FE72EAC6
191FBE56DE145488C0306C6EE589C2E71F0433B9B82458B4FD78D89E2167E977
EB8C0475E6BF7B0A6468815AE195C0E12E861EB284C7F9FE20F25EC9A1269BFE
3DEA831F251F863683A1ACFD7164EAD511A3BC741690912C0E1054D2193B8BC3
6A6C26FB97DE6E1E78EB89C0676CA7FBC27D932CBB65408DEEBB298E1EA6E3E3
EEAF31D7BF4DCD2A5D1CE3C5DCF36A5C431C4FEE372219E70A560F5F91D2E758
7E9F1005F29EA0215797828A9661A2CB9776D886295D55E47D1905E2BEB07286
F13E92BEC0E73A41DFE2688F464727BE1CDF9FF5239C62338F7EBA6FECF60904
7DB5AB1D11EF4A587E569A48CB4193904EB4F88C837E222A744A617317C1A2DA
959EE5B4C8D476693B0D363438EDB94D25B85B2FFA06BEE4B4866CCD64F872AE
14D431D216D9C57B7B8A99DC6A5D903B6D5C7E65EDA948DA9BFA7CF6A3D8C465
14C0CBCB2F5EA46AF9D587711419BD805E1F6A2B94E8823C3996FB208C3A9CA5
5F040A1E996245BF51EB4895D4358CB69DCD788072E618B54F35AD3A5788C3B5
485151F4DEAB7461609D1F26163333A9B31EC7C2C99EDC7BBDFA0CE085C7CFD4
C0AC1E728DC24D8C2C25B06AE091DB97DCDE55F701A63CDE9D07AE61797E8654
2E15D9A43C1B3AB84ACCE6EC1028C6A9E04AEDF9B4CE2928CF3C1223F6FB12A3
5F89B50B9F79085A2D85F3F101AC1EFE67773D41530EA50E3F9F9E26B9DC0908
1469223AA0219763C2B44F42600428E56DF29016204C9D6FDC7AF0C1A9BEA45A
D2998C6921A035410B0E8ECB71ACDB08D469FA914C1ED1B237EB734AED5B1DB4
FF453E0A10379F29FDA2F3217D0EA0772FE7A7EB3CC5D4AB76A783FC932723E2
4E36EC2F58041741806AF233C3C2792A42338D892C8E1C2DAB56438F1ABC5091
8BF295AD636946160DBF3082857F0352DBB2337FAF0BC846355944F7593815BA
E9459264BB59E8ED0E20E128E0B2301D85F0FC49AD0DA112E199447E0C516A2E
0708DC6C5E1A644D9C19E8294721AF852399414A017D1CA4F5F3C628A3AFABC5
D0922D917CDB0ADD125F3DAC095EBF4434464C47F8DF4DB69281479EF18DA223
7A7535BB60C7875CEC5973F95A8C872458B63F686FD09CE060E0E64656A96722
93E79B4C52CE63ABF9B840B8FD933E800BBB94851B40657C4251E28174F4A819
59C7F5709D944EB87C14221EFB3A7EA319B4EA0EC773D5C91506800CE749F731
509FB6B908695967DE2A007A5F489BD5CF4DF0B09DB190C7FEB04E13FC963C04
78D72B621C8A98605D6577A03DE99BB78A0AA1139DF5414824E7D5B0B9CE70F9
F9E81159520DC45679D35E06C8A1C712F7A13F7E0D9010C431E2D5BD26ED30F5
D86AB32DC91F6AE7CB52A9BE85B84CB832782FC5B0B22B70CEFA573661EEA01D
409827FD133AC943DD1BEA4A303697EA12F26144C993137BCE2E4D53089C9246
ADCF057578194EC044805414B56F8E0190FD4FA2A0A6266B9A9511819D1F2BE1
AE5D766B378FE86691BB1283618D234ECFE8B485C872DEA9125787095ACA9E34
C45BAED9D91FF93DA907997360E0B13BCC0C763CDD3627A3737DD41477A8BCF7
CF9AF0B92168526846D687D10713BB0097BAC6AD4AD2D277E88408C02326B40E
27E034DC75E7E797B53DEB549BA159EF36829B0DF494ADDD3500D4FFA3CCCFB7
A3318C952FFA57C6450A6EA03F60DCE93729098B15814D6B825F1D4C8F01E569
3BCBA645B07E11D8AC59AE55F0F7D76D5AB14C8D5C3926CD47F8CD3FCB12D0CC
866F1414B63772DD996474504545DD2C1B775E4CAEAC1DA45C79272ADEFB5A04
6D818FBA90295153CC3FF0A4FCB3B2F24C4C418637E18847234F5123B210DAD8
6B6517A40DEE94916D0C9E3106C682E0D9A3BBAFDA592A6F36610CF1C01F1CC4
15CCBED7AF47448C6F34C6A8ED4630A58A2C716DB211A19B2D697C75CE2B6171
EA0D39805B15434A04277693DE75CCFDB723E2904A1C720147B105B6495EBEA6
E1427FCFBDEEAAC67F14F71B450BC562A195E9F1CD445EAA2C6DD59F4CB5511F
BAE3C48B1B02C98798499BD77B607CEFFEE6D54641B7E558F1E9C5DC4C9888AD
0BEFE71B6950D5D43C08932DAF40BC1620DFF03D5CF38447B8DA111FB2625069
E57129652E16BDEAE32DD4672D82BB9CDE22BF421C982054831B13C0CCD75CFE
65E107186F24C4AF9A9028349E5DB3808B980EDD5CFA2D4E36D53AA482E6B4F7
9EC50CD4ABC417F3BA55D92248B510636FEF3CB540265026F4B11B57E008B912
48D7C626AF69C171B934A2A15779591F6C524E567539F9755A15D4D0854D69A0
43327A588B8C5B1CD693757C3A5B86E2A339DCE7F75433FB87932A162CCCA011
4944A1AC1E57C4451507F189389E6B85C4396797E362836A8B56466E9CC1D610
DE5D0AFAFF0687C7FBC708A7DFC55327ECCF5C5783B29E107C77DBDBFEE4FA95
28484AFEF77CB10150A529E5A810D6F9F78F44E6284817A248BC4766A7C2E2FD
689E6A6A1DB9213C2142AEEA0B692ACA1E819ABF88120DAC7708CB4C4E9A8C6C
0B36B033E9CB67097BA5E014FB50903546BE455D07E984809CAF607B7B16433C
920EB9A57A4B574265A679334D5EBCB073FF6966BD9327B9696F4D553769823B
E18EB58FAD298314B8B004B03DC30E374CA21C1779685838150CF56953701A54
45C72B6E169770EC0ED49AA31FA3F91F3F32707774DB00EB9770F2DAD029C877
E97221B1424E32836D6CA28909547C76080326A9D87C65D63C14BB2F49ED2D36
9DE7A3DF50BB90EDAEEC72A56069441487C8D153304E35363E7130C4B9F89DB6
EF6577F372161863C546327B4BC36E956B5E373BFD0D14217EB9F2CB21F0FF60
87C7308074735B5E637DD4C2D071F1C8E049E657F5F14377D75506A96A09C16C
80A38B22DA623C9FFBDD1F916DCBBEFBCA48B59D387BA2015057767BD78B47B4
5FFF2804A3D613BE2D42651EE0735D3640FF126847D225B597E0D475F3E0D087
BAA4D467D56929A551B8800C7A6C788A20487BEA2EC73753510645FF66168961
B7D66288CF36C97474DF133B38DE32DC8120E63045002D044B71370D2195B074
5A347C34B08DEA1708E447E0C557FAD8D550A1F61EDF70AF1B5EEA9BC538502D
18ECA4CAE179C9CD6222EFAB7263B98C7F280053479A3A8234D93B303EDBBE9C
97735DDA773D207117736D2F9504083385E4FEDC55460790C93C7A9B8D92F22E
3DDFDA20460C55C375A40A34BF6BDDF97C1965DF6D1B4F7AEBAFD456DD376E01
0D766FC97831C666F7BBBB6F47F397F59231D0ABD7A2EDE43E477E2976540FD1
991881327327B90CD5534097225899D546770B7BC06D801AA613EF09BCB258EA
EB5620FCF919385768747802005BB170E5B4717B42CC855192F77048A84605B2
E3F01E5BC22E802FCDC4A042888BFCC7D504CAD82E9C8A8FA9E7F90D27E38DA7
BAE33901AF57C7DB960B85DBC7BAC0AB21DF14947CFA3DFEBEB43427D4B8A6CE
E119E1F7FBF442840845EED13FA9B4C5CB1FDE6F08F9FC4052F09F53B087A3E5
284B1C41859808C27C7DFF52B66754DB8C3986EDDA40EA97BA46C73AD77C07BA
820D0F2645C50A99F058DE70A3C16F8CE40F74F7CA2B5B69A103E37185A14FE1
7F1D42B924A7799A82D7EBBA289BA77B2E52F2B9E896549C8050F55E35B4AE9B
FCD93C92850D0C97E871D4F9F578518E37645C9514A3FB82347566795945B8C8
BB16980557DC162B4BFEE29CF982447E4B79C93ACB6C9F5400E5F2E3F1D4F5EC
F1EDC5A20B3867E54DA8BE53E6B89C201D53154E567B67F0A7C57F793F9B3C21
97FEFC16D470C50D2B42C40DEBD6F5368614AF903CB3D111DA56817F8EB4122D
0A1AD3B1EEA8D9BC3D87F13DA0C988DBF17CAC33E24EB6BDFF74166F08149217
2BA8788F740F5FE80347F9A7FAAD6FDF40A9320AF845F4F6FA8F1EDE9EC13B44
9FCBD7D72D6EE562EEBFB3BF7648E199367C0FCF6C832EBA5B2A1CE4708B9045
0506739302816399B8C8357C1F0EEC2F3364256B14801160E4BFA86D1BB635E8
AC746436363894A0C53852451D2390B36E5A8B62E9EA447B44FD74A76F5912E2
D6531B7D2554F3C2B7DF1465ED4A06626EF5957FEE09BC728246DDC00D5F7675
619257B26E130AD09DE7A8EEBF1AE6DDCF8233ACE832CF3C13990DA119BE5C2C
1C643CF50C70B5EC4E963B7CB7A8629CFA813AB9ACE858FE1F3A04C0F849EA24
7AC6D54982809433B523C0452C584FEB9585AF4131D162574820CBA4716D7529
88FEEA99813496D5C2DB476DCF838879086EF0CC6345EC4E5D1A338C6004A241
EE03A5D4B906997D5038056D0A28592920B002CD413F5FCFF8FD43536ACA8C09
5B9A7E61E720A4D3B965AC5914F04AE1767090B721223E967F2CC1D8B3DADA55
25E82DC11C1A2F3C81C92AFAAA856151EEDC43A84B297DD81F6F031C11187A24
2FB8A3119F07D63A6817E4FEC55DA77BC021FEDC12B3651EA281D3837491EBB2
FD1FE6410361B49D265CD7324612FB789870664E5D9A9485AA477637E5205F10
CDAD7225112F111AB91E9516F6830658E1B547DB0A352A2D8667D4531F991FD2
BB18812A6464703BE81E9E8959F1B53E54EABDA3DAC8F0E2353671AE5CABB2B2
35F444F23760932EC74590D0A955188F6A7A41E4E62BBD26E08BF705139D35CE
B1972FE55664EDBB36F012BC6D044796861007A47402A6D1CBA2763185C0C509
FD74AF988330482A87D3F43A0207D761EAD8ACE1D8D3E99E6C0029E6E9EE5190
29DD196AC4812E7CCEC99DA0E8BED55B1AF8E6C4C4207488BEE9A4DB837983D0
945E85247BD6125D74E26DD4343FCB5125E900BBD3E8F32643A930772BB1402F
80C0D5F1A8C18AF33B78D5122BAA9DC7881F2E10CF2A7F21B9856A47315BD694
C60B1DC718B79DDF8394BE5ACAF787C842A25D6268313F33AFA9E09F53DB32F1
C8EDCA6BDB7790EDFF65C2784C2138110B6B0070D06D802B55E30FA4DA9A0357
F08BA37D4EB8CC3DEDF1E2BD5BE8CE27CF0ED6452F20F7987F59A490AC9A5A14
FB4AFA5200A827B976BADB0426ED0E6B57E742B046DAB107458D6CEE9BBCBD86
E72DDB5683C67EA98B5D435B9CFFB0AE26D108B99AAD453D9A563FE61092DBDC
51A9FBF197D3BF3896FE6808DA33949437488EF876CB2CD673BD2C25E9064468
3CA53582DAD4BDE5254C4660274462334AF71A1E8789D6F0A1CBC2DA26BCF2A5
DF594688D1714610671D39251ECD1C1B1D79D8669633E05B89AB5DD3C6B64D1A
BD64C90E09DCC96E69F58D8751F37A11C2A50BA928975653192B9320FE809495
3FE257C802E9BE5D29F424B01AC6939DAEA2E8604B51132464975489BAA3ADDB
F5E9E7F0BAD4C8758D31DA2183705A7316E71E2875B7343141080C110260BB49
81EF8BE4F8915B889F63AD14998F661080C7BCCB16B6E279806349A392F53191
5C097BEBAAF6393189849B13E982273B54B6C995288C5AA029EF1204E7D3EC90
5482D2C03D4455ED225BEC69EAD92BDE29AED7C5D4ABD47D434DC4A4E0C28FD1
674E967263E234E7803297A2737C39EB7D148F457E26102C689A3A586E357804
92AC4A4C1207FE9DB085B721B2FA20BB6E7F115C02200F29EEEFA14D474203A1
612203B1F43A071FEF35FEF6BCB606F685A11E2128EA18DB826FB86F71262933
F58D4F9CD5DA99FA3CD40026E163FF8C24E598208F761CAB39B9DD6A23C48CC1
53DC2EE644EB687934CC8789CA39DFED2245CA91C5120F1ECD366161B2A30591
0316A820A630ACE9D8EC0ED73DCF3E8B0858CCFEA9354CF2E3580EF9FA797730
293BBB1AFC8CCAEC8FFE42C4887357DA5DD1E59CBEBAB1466A624A5CB20DD4FC
0E0828A3B47831B65062FC96C25883BFF9AE45FBDFA31A7310137692F11E78DB
E68CC099C9519D607E0ADD44695DE3CF2CC4D593C6BC632A2CB5B846DFF13BBD
6D87CB973FD0E9B131ECE762FA9BCE333CCEC11BA459A1579637A4A9416D74AA
DC754D33163A4A5F516B221581344C344A2B9834F97C6EE56522D30CF19CBEE5
5937DF0CDB33E479A0BE74BBC7DD92D941DD64F08BD92E7074356E75788B2AC9
66CF6AF6E8408A0C0F14556ACA81AFF32F6AEDCDF503383715F45158FEBE4E71
6E5473D46A348CC174A091791F27A8630AD19FEA00A31DD9309DEF5861A96232
B35832496B6B858CDC647AD9A4DBFF538710C0A614F05E0A296EFA04E2BF54D7
2278BCC3AFA67C9CF2865F0C44599E8E4EC0710D56488EA4F9C877DFCBF0A619
A6A4FDD9DF492502C6A2BE88A6853DDEDAFB53C3BEC98D0D1F76384DF973117F
82FE4F8D74710D35BFF3E6526AFD58333B551D1907126E0FF3D8FCAD440880FD
0635C57A4F765901F6DC2E9040E85D23934571B7CBB19F9211DE8E3C682C96BF
0C1C0F16071FE624988F6A35CBD6F50DC46F81014B73CFA438FD5EC96796803F
CD5C7568064237539C860C4105211B3D583E7C92C534F9A379FB36A8FCA0AE5C
4820AF7A25FEF5AA80AAFFD37C7276E6EBD5FDCD9DB4083E991E788487FB11C8
8C8264829B8FB920ECA9A470B4C38B75372B2EAD241911A850D17D35DC4A056E
733F9C0BA0901A5FF31BA9D2440610702F57FBDDBACD0647664A2957B2B9F409
1A734B726092F71D7618FE9510BB9A051081FAB675B4D45303A7B165F5271B58
5DF21348E3B23DD4EB3E437DA8C0E186C1646CAFE072D903A8E72A8FDF0E16BA
13E4A36F92147E38CD271718777E3FAD920CD30285E1AB7983940A58AF444471
8A3573EE2053270B9983B89EFFA023A3DFFDE181B90C51D705537647779D50CD
9F54798AC016FEBAA4BD6A933BBEACF4CE35487E4A6B30A7396CE6843E57FF9B
354CCBEAA563A7EC33AF96F1896670FDE27412BDCA8D8E8C9AB3714B70BF620C
0868AFD6C9916FF4F83185A2B9793C0F5FF49327C42D62EF18D763512FD86B2E
E22CC785D957EFCD1DC77E18750541D0B1B75533C5A9A08B17CCEC0D2F880FED
BD18BBD8B6250BADA65F839BC27F60FBA068F6E5A3CD44665BAAC3448FEA42FF
421D7208B59AFAC27F0D7904607BDACAA260B2A4D8DBE11073B9A8DD9BF9204F
84B09C732ABF248EE219BE1CCE21B2774F15ECD39F3BCBE017B28F07339D2432
FD7D53BAD760D903D30CCFE270EA728E570944BF27CCA46E59E43F3A77ACAD02
71DD0D7FFF2D7A11336C28E8AE581E42C71FBE5D7777CAB7CB4C81EAA6EDEA68
6CCADB88397DB2CFF36C65E95C07B259FCF7E1641574B71FDE9F39FAAB89465B
621DCB37504B0A16094C62393C9883AC7340C4141FAE23EA2194A0D5823CC00F
A1C83E6E37DC6F4FC634DEE13BAE3865BDFF5F7CF8243EC1A0DE0678B7694522
44EBD487AEBB0ACD4989E263AE22843AC7959545594BFBCAF6A8BB69FBF57EDE
F00CE261DD15C3D431AA08C720F2335FFE8C20C6073BF76792A8B7932237F9C4
6498936D5E3FD931E5E03D4910567FB7EF2CE7801354B17143538D29199F4F9E
35E8B46907F0617659AA0A178B88CDAC56EE02E71CB861F900BF640BE1A6F079
E6183C45A58A080E74AAE427CDD274E4BA9F2065281E40E4C2811D37C9029692
DF8E94F6FE39474EE13AEAA83667084E1EB9712C38D9740F3E21C98CADB350E8
D843B9EB6E8C68859734B232A7C0ECFF1216CF4C910842D7E1668AA3D7DA417C
906CBA807993A9162700BC9A173C4F86351C8B082E81EE08E8D3D565E42987DD
AD2504703753256EA41823C40B55BCA628E4D219559A5AFAF57BE0A0D4B53CE9
7C83E306D2234EA7D45C304578BE981E3BDB8C4445952908EA2EF5CA940359A9
FCCE584E550992FFA6724AAAED168BBA8FAB88F336DA1CF5EFCCAF0546839DF9
3350C6CAEE574B02EAB970B17D719031BF476C3D6F00AF7D601661E65D79A249
AA39C5BD08876048521F937A458A63396A578F021315479413D48915100EF594
38A73C41D92F04183451EFCAE6D148E1D55DC081E8B58F2F29E19F7D715AD567
F556BF4DB9ED16074690520FEBE076B8FA2C188C7325DD1E8C9BF101FD3B3616
FB3C5AA590F651B4210B81A0A4B3A94A802727D0038FDBB445531D682BF02314
40575E857587E47D98476B523661D8C247C99F7AFDC6C62ADAB4862BC1BAF0E0
33DFD745AE9CA64D68628A9B0EA9AF81B641E845D84307B472572045DAD456D3
B154141AAA303D347A6A8E47CAEA3D04611BB9C53BE29CA136D31AE2109C84F1
DDC1A332D0F2803C04ED8E7DFC77152D06F66646A2FF17AA6D5B5CF0622F892B
9547FCA755F89654B3130F740D5CD46363E399367FBDD7E0BBD67D7BF5F4AB67
894B2DCF2C614732F3FBA80A79BD930EA8256B796DF56EEB39D30460335D0C09
F56CD3B477A7342D64AC059315DDAD1A2FA1F4E8CC696DE2432885E63C65E683
4192E0853A9FD245EC0D7FBCAE5881392289433F2036B901281B5A9A67CDA60A
D106851C3ABDF110886DFEC7DC3822A5A56CFBD0C79DCCADEAF874DC0935C983
3DFEC1C1078956C2665B3D1BF547ADDB1D86E9BF0BFB62363FF82CF7DE17D231
E79666EE08AD6E5563482F1CE6C167025A38D5678C6D4279A02A93042F7DDFB5
7EC2C4396609C3DDF90EB0AC7B89F1E36AD630DED2617A67C1F6DBA4039242DC
B7FA6018E0221B8442BF02CD4FCE81791D7ACA054D5CF2BCD0055426BBFC2370
8ACD6B9389EAC5BED19B4A34C404ADC1A26B1F7249B9FF2DF259016725937BE5
33A6001DDC0740CCAD660150B06FD05E147E7C3F5F61013C8D23E224A5E7054D
ADE28954EAA105FC6CEC5098AC5930545B63AA9E1FD26F26026BD1B23D711470
483D668221C3D21B072AA0B8373C97DDBFD74459C068CBBB0C3FC8C66A1DE3D9
6F5C361ADF4BFC4169E10628A6AD8E7F3C78D26C89F1DB2EAFA79EBAB6113E08
3F5C49E7966C0787C187D5370B60543D3B255AC32BBBAC9DBCE2CBCF6F4E2EFF
B1E92B12E45D1DF2BB813FD65029E5C00844677FD4DF6CB608FD96A9A1513C44
073D57BA50CB76E3F7CDC92C8F51028DD80D51CF5B3BD9912B5AAA19531218E1
31C0ED461A70162110E8F61E7E04E374EFA85A7395DAE508C15C048893C55001
6D504DDD4A952944A2F6CE7DC133ACE8E524C778DA758D1CF1806B1DE081225F
72CB4C81757F0FA5C98ABA4E11C21D4829DFAA88039FE169EAC76463ABD02EDD
916D0E42F5FF037ADF3B531EDB633445EBE0534C2F5539D4075658D208B351B2
A9E9A71DDC6BD3B652818AABE247C5D3835EAEEED32CBF21C9A58836858CC6AD
7F3452A70A543032F5010FA7707412B741A972D85CA7415D6D5C5C1963D05E69
845EF2DF2680CA6DBD36C153108585DABDDB9560BB9EBF7ACAB10FE12FD568E8
F2EF91242B64A095BEACB5EB2C328EDE7784E9FB3C39EDD64D59FD94E698D0A6
5005A7787A5326B86E3F04EEF4DDAEF0C857BA623BC876AE099E628E5E73322A
258704614F9109517D11B015523CA83EABE57045F9D83B455211C8C24F4994C9
E7F530099C7EDD080BCDA53A077AF2D53FE6F084D8C3ADF4779AF887A5C1A204
41BD60DAA4C1B4D73B2F41285EAB4720FBC68849AB56B74E9D6E459220D22D3C
6863DF4ACB9C7941A40BC87EA18265902883978936CDB1945CA100BD5A67C04F
EB5FEC948A4D9325F1BA16F261CFBF01C4354631446F0EFF3E8D8AB052E4D049
DD5CD36860F51110E02A2924D24AC36E44D07CD16F64912149A342974F559348
324DF468BE421CC531EAE4B3CD2473C979D11C11BA57FE1300CB89C57B1EBA59
7184F5E0582C2DB2094799542E01103BF7E557D1098CEEACD086E4E067B6AF0E
D8F30F83284FCF353BDCF3BA8B5B35176F538AA7C5A3735E7702A8A910DB2A4F
F91368685ABBD1E2E0DA576FF9E6B9AAFDE154DD73565CC101AC3A0F583DEE0D
E828D2DEF7EEAF8F67E234EB04C672E85C209057BB78B11FADCE331E75A232E4
376333A2E2D747D6DDB30E521E49B161FB1D8A0686D9949D69BF1451D7EB07C9
1E18670BD4D4F4D527704873D795B6D8A4A3E56F6BFE541D9BFD321CE0610F48
976736D672677D14828A11627D6C0B71CD1C4981059B7C4F41797998B7E28470
245FF4482686EC1E317C38738BD6A91FDF9E1CC278145AA01E7979C12D56E237
004932B232540B46F2B1C7D79DC6013306417DACEACF1625BDF902DBC4062BE8
96D00A355A19E8499AC8C8299532C59403567379760EF3C4CFBB9A16BBDC727F
C16450E008B9A2A9C69D704164C36B9E9D42206E679EAB6F9756F1197D8B120E
30A91179C4402F60AB97927577772B6192955BFA7ECBCC185E73A666CD1FE348
A087B474CE74E279133645EB7CB7802BE2B664FFABF1C449A9ED5FE86292A4DF
EE93FB0CF592DAC7474A408571A19EE4C84F4C8FE9EB8DBAC2ADF91FE21D3C06
B19D7665B0624CFF11EE925062A17323647398EE737A9EA3BCC3E0F3B97181AE
DC88F124962F46263AD265D0FF9049A5274446CDBDC6D7C1BB90877A52D77CA6
0279C1A4CA9E23F8C27308B583E9670D086760EFAF21C0ED327CA32DD17F98BB
28F7C2A1080E6F42650C66600381C5E71D4CA126DA55DD864B06189D677552B9
1A9CF7C1CA90CEA34CF02509B10ED0B3BCF6FAB645ED46B6B7B04F737B846B92
B4E9033A515DD1FC25CCE8A144774402ABF1360F99874BE04F8ED96730DE1810
4E15A711D4F65503DAB0355A15B5F05D346067712A0F966099C58BAB2A11B683
B1A7E1C4B5C335D2BE90B5C581D1FE0F70E977953666FD9E6ED5A705B1433D9B
178EDCEDA14F34A3A78F5B436CF000514A8E7BA6FB5B44EC192D3EC948A89E9E
E68C45C32B1FB59F6E1A6A781D86A0C7154964261FD771A2F4F50BD1C5DA128C
0F108D6D268F3459BA6AB6A3618EA101BDBEBE827D1D060322B22673AD103C72
03EDE66E6557E7BDBDBF3332E19DBF11EB726C09E596E8403631869981BFEE1D
0526B20FB55FBF10A0F2887A3F1E71E49A160E7007DE13A58C5F12F17BF4D9EC
1B3DC5D54F473D67AA4E0B001530F5C1B8AEF5E58C11178311FA4DC6B27A1A59
82211AAABBA90479824D0C2A97A334CE0B60E80398A5776D4CBD63C7ACC86AF1
278717DE0C8DEE0F0311BDB0253716CA92256CBFC7359FA149DD1962C77742A8
C011C9628BED9C7AD8647A13D1B0C7D348B097477DF8C6C324CCCF965C397AF1
B7F49D1EFA253FC082B0DF92B1175F139CCD692C12AFF1570F730C6574F0D402
ACED2B7D63523757F6AE29273EEBF48188767F42131319C2B08BEB451836FFA2
0A22DCAB906CD50EB5705B5F8F86CAB5CA3879405DF665D0513903F26E18DA53
3BB2FCA2267FD97ACDC041F923737AF9DAE1584D0670E527BC95332D13B39805
49FA02073BC0AB3A78C72CC5D5B3045583E77EEDAD8574BE5154888A9C08C044
DE8B99D6205FECE23D72A9F61619E09C929B887EBCEF8BAAC89772FBFE65D33E
336D9595FD349D0924CE7FC323E6186A42046019E11D040BB87BBB7ECA6FDCB4
1ED40B452F92C69C918DB42E0CE8E26D554B08DEE809CEF9340F82F0E079F1C7
200DA0E6977B036E69FD06A10F3E1DF278C46A4F26DE2E100C3D4C9D4B887418
901C8765EBCD0BD1C62E95F659D68F0D69B85BA188CC7FAF8EEAD02424F0BB50
9687B06F3E3FCF5B889374FEF9F069B5B8C33DED53D11C6890D4B5A274949246
8D8378E083256EF4474333CBA5184EABAD899162343A962093805E015CA01FB6
31A3A7E37220E92E054F1F1F866CC356BFB3FA9D54A965F5C016142C1A8B337A
89DBB05B02D79D1EAACFF74142EEF5E9D1C0E32B7FB69F7F7C6456AF1DC3A0F3
CD6B06309DDF80FDD6ECDB4E8F2FD3D0E0AF63B076ECB3C414A304C853823F4F
7EDDA13852C352BE7DCD8FF3A61799D2EC0904498902ECE3FA1653ECB3BB3FDC
0E20B2B90D707E0544C513B87939EFD9DF31C42A62BF096B816BF1E4050DC326
EFBE9E02C61D74DE137A8A0D6BBAC6FD78F90885A89EA4C7FB495CF36760D1CA
5A56CB7EB397CB247CD47FAD69A0B5EF27684A63D7FB96EA45D8959C5D6E51DA
272724858A522B9E47D4B5ED68BDDAFC0E87886866AD3F20BDB5286981B17F89
32DC580D22FC84A868755ED34FC1FAAD84FEBC79674BCFA2ADED44359A90D3B8
5E74A6CCFE38AC9541D2F6715901E16C99C139BFD6E5687A2AB399B96A657720
9E606453DD6A5CBCFD4C333B83ACAEDF031E76C4DE35D408FACB8510AABB489B
F469E3BDF9F337522D515DAAC75380EEECD1F690AFF5B2AC15946FA4D64ABB59
B854532483B8ACFC184F8868FE143A34342208D76F67B00F6B9DE822EE15680E
972DC7B58A18B0C3E73DF25106052700653849C02805E1C560218ADE1792AEC6
465F89F9EBDD06968A80A8CF7BBB5FEF687B761F45FE977A7D2251773B691B2D
79E57EEE7810FBE47D3E682AD737D670C54B529E8DC436F466662A84EFEE0A9C
66423BB939C7176617A11F8E87EF2BC281A20BBB3BE69616256A03E64594E8A5
4FA5448783851105BB7E529511491BA13543F1C39C38F2C2F487CA8BC0696574
F4D97784BCD075E54DFA6EBCBA9042FA4AD9530EE7A9A7E11D9BD9AE3FB71E4E
E3BE85E4E06BCFF708B6DCD976D63E28B93C21DC98838B72777B46CD320BA9AB
BBB51EC87B83B669EA8F3241ACA043F588A47C212EBEFC4A56D4A628027E5533
8B097C143077FE9C8991243760D452B459DC9CC7C90F4C459352F8149CF30339
DAA54F8FA10295E1045C6ACA81AFF32F6AEDCDF503383715F45158FEBE4D4393
6E169FEFC0A3D8978F497B025DB4E92463291A218DECAF45982A1EEA20734280
15DDA641A03E80C230AF5E8CCB57613FA7FCCCC6146E7B483AA7CD13A91E54AB
B5E4D3D5D498110DDF814AD6BB632B8AC2F9FC8E4A923C6FDCCBA0AA8618A58E
8E6265EC4F1ECA7895E6DA4A842E71FB243ABEB2CA8431B204876A2B882B1DCF
6B3C6D8A62AE6FE12DD1DC46496A66AD39BB588C46AE0E6941D874C4301708A2
E383C7756B97E8DE085F867CFBF486B5E880570E76EB3E88CF2D274E65C61D2C
6F83444532769CDE9A96D3F5D9F41919D42B758DD0131BDAC33D25DDFBCDA3BE
E5CCCEB88B5A9FC0FCAAA4A1116ABE3BD8BDBDF8CDBE9756A0C71A8E9AC2B52F
E90518935B2E272F84C4DF19194D81FE3741D934528007524E9B672ACB124FBE
D6580C39D6A130678100141B6C50C7059F491D1C8BE038ADD1FA4019E1C78B8C
765496C224E46C02C72E13688BC50A383020829462604E0EEB3C527CB28CE97C
9CAFAC45E9CB3A9D5F4D96CDA00510ACABAFD6A8424CBB1560CD795121931162
72F8026E988A1C41EE7B4A10A2D9E7DA2F6FFFDF92AAA4914ED96C61E9BCBF38
6C2FF67044F3C6C3F24D1E8826D68048F44664D1AC5687D6E4F49D36681AA6A4
3DC01BE8CEF99710AF2F9E2763CF2BEF0A1FB8C770A16ED76C337AAAF0CAC508
61F24D6BAFD3D36EDE20B10EE93517665826A01E9F0C9B401EB16E8A106BF35F
9060144E812983C01D2DCDA032E00D714F51767CEC01D9B10A106FEB0C30B3E0
BAC91E8C1FE1DC10F0E0A5DFE6E4494B4711A47609BEDE5F472D70C77FAB56A5
B753DCDC27389A84BDB219185B42731952D812918F76EC614BEA4E89C3FC0226
DB44795B8A0E1BEF219D308FED471E1BA7C011D3621C9BC2EF74ACB5C6F4031A
237AA7CB350A94DB7F5948AFAAED300F0D401F4C9C0B8D4D3415222E25732EA3
ABCB6D3BCED34EC348D7790A37C975F5D8C77CED082C0CA07D5E9A31F28B335C
772B3FB6E71E7B801F1A6495CDB33FB4366285011AFAEB151B1CF06B726AA159
3EDF8532F18CBE8513DECCB3A0D75FA456A71DA73CBC939318FB977CE1D9A30D
98FD23B10F40A4179A66911F423FEE84B61290770E74406FD547D905BE8EEBEE
6066839EABA33EF369C5B372666E36BA4EB2F17EA4819F51127FFE601E8ED0AD
98E9E8AAE92BBF0645F4CE75CD77876ED88EC52D2695B95E8EFC1512ACF21BD0
C304EE38F67E16AC8F8976E9DD1178ED7A8ED2A9A049F8D290C1A243FA85FC19
0E9A88B6C8B3BFEC85B8FA4718EB0D1CF8E977AB81A3D6CC3E039BBB992EF871
2EBB134C748A4E003A022F463ABE96323FC867489EFC9C6DCE7E1BDC7457501B
451CF2C13C6193C55879A8EA0224615447C9D0F24EEBA73BB205AD8C5443C246
06C3F0557D2881E2449C03C7AD13D79AB2C494C6F6FF275D101A2BD37F85B087
11D1C26A6F7F3EEDC1C6391AF3BDA0855E662C331F591EEDC57F990684B280A4
7D772C755695456AF74DFC175903843D86625D05B3DE9003CCB87BCD65E7D491
B5803E4E32D24FDE0B7C56732957AC35E5682F072D8E552AA4CA3F840ECB1151
9B06EB4413026AB1C860B5DA2BA595B36F064BC87C5BCF0FDDEE7FD76AE1BF55
45914F29527629DCEA6EBF0D04FF08A23FBEF69DB829EDD545EE1C04CB2CB511
0DB326A88D7A75563274AD59E0F00C2E005213489EA27D440D71C33E81790017
F185E960E23BAFE8B65DEBB97450A74205795DC787E914649BC2478C25DF20EB
1EDF35AE4595C8E8B1362BA3A2DDF29C622FA55D54800823824AF2D753D80244
BC4D6F73FDE34846245FB19B5036E5A40BA0DD3815703E66C138ED90ECD7B43A
CC867990716AD91DA72AD73758D632BC30F446FFF71C423BA1B72315580F517B
6F1E95F5E20BAE3A888C1272EE5DAB534A95B3EF8719483309BB3AC4563D3E77
8EFC9D5B0E51C241A338E8316889C696A7A4DAFF8C03D1478E334536884DDDAB
894EF98BC5B81D682AB64F0DC4ADDE0E622021E0CFDE12AF9ED20945DD7A6C6B
173E35A01F9990EF6C927B65657F25C0011DCF5A74F5D7E3940ADCA311A0ACA9
380919BB7EFCF84433ECDC982117EA20B7C09C582E1945BF8D20CABEF4F2F5A7
8A41E4BA695E20A5428CD87225C7FF28FDCD4FB898A052A0B1A169215297A4BA
42AC9083F142DDEA2183744D33C42E579EDC2CDCB2E8D3E620718FB4505370A8
2855EC7332D34882DF69931B83B3329DDDD044BD3C3C36FABC9898C7D458359F
AADB4C33EEF1BB68989E41FD8401DE1CFF666F2C5267D426490071462F24E982
3DD5AC2A249D44E3149B8D2C26E5CE7D28E72B129E6878BC37DB2207F4E04562
6CD7751A064E189377474E8D1EFB9A94499CEAEDA3CC716147A10C05A9672D2F
E900D12894A5D3A331145DE6FB505CC19634E9A1548BFE17240463B37B84ADF9
713EAB43C23369EF2AEF1920938BE2EDAC7231BAA719B92786F098949D8C3D82
E1495857371DA5E22A42E1C757C98A79D219B82E5369B3A9F48EA412F4C73B85
2875982E987AB3D97C336DF67C7338F045091160DFD4AE7ED7D5F1B81AE0B9BD
7AE7696D31B3ED5FAA6F7B4263A33CE05E025879F07A7B91FD0620414860832D
64B6BAC848814E1FF110E5BA8697379A27707AB74F4D4C6C16BC1BC81A7F567B
7814B47E09C2B12838DF827ECE6D25E8A53F5D63F34360CEA089E994C36CACD2
E02DD59039B770C654F93676CD7156CC449C1204FFDA4D2FC79A2E96FAD49505
395BC6E9DC477F6807DD209828B487303578BBF40B89B07BD04EC6CCC6D5C451
5070E4EB6AD122B464D699B6E927E8494ED12C35F6AE4CCC6B4D451E2821942A
79ABD230CF148457FA16C18A62FAF64BA95B4C9B8FB3F0D55900D5F58F37B886
6DE8F3052007F9104F90C0DE9BE82279CF5415640D5F1DCE22B7229605912F52
A4159CA7652AB610B4604097EBEAD0EADD41FF95EA7DC35D86F0C590D7FB9E51
E09C85C5BCDE30D15CD9AF2DC6299D8728B868B9FC5AB023B335EAD7599B795C
C26B62A382E750152A94A0A0DABC97B4B2A944138C5416D60349234EB51EB6E5
2C6840365835E3C5F9582E3BDABF9DCC17F19F5255E594ABF60D9EDEBC898BFE
8CFA9BFED5A0A8A7E71D9C2DBC66C5933A3D82D0F7E8E8BBE6E7BDE727C3887B
7E564FFA74B06C66C5A798A8B8656E84C6198BED338F843FA8349F660C272D54
592FA448A16219CBE8D743A74BB5C85EBBAB9A0DB67B0F3DD5A5D344645DD6E7
8973BF5EB3A43922976B876293A1ADED8B97E48110DC766F03DBCC2EF01DEF4E
D73A8A2F03FE9035E05F8351434248BB8425A5F9FA49189D45C424850CEBBC38
EE8787EFC7FAF8A4D10DF88C738EBDF04150D5EEE51DF9BA7D5AE1F0F68F9E34
A8DD119C19E4729D5C37B76F552AF37C714EDCB4BE1CBDE8D2180E8013E92256
1CBCEA7AE5CB6C36EB4A1D46683E515B27953875C469C275314FEB35CFDA487C
BF314702BD0D2112BB8C77B745BC0DD4B1C7EA0C98434FAE393859A98FC0B3EA
3A0CAE05010D6FF769550AD34A047DDF4DCAD48C79C13C76BDBCCCF43765698A
C821BE0D84FF77122EE2A7A74D1B676D8A89C3DC0FD24606E68F9F622CEC90F4
E09F25D875B7DE422E960574BEF5C8743351DC15BF4169314611FD67186F68B1
9B207480D551F41DCA7DE4DABDBB839176413BCCD2C4E4103FEB184076F816AB
F37783C71E3283D2933520D145BE35C8758391594AFF7153A7B5D4448C64E63A
CE68F8192664DADA740DC6D6B04101F8F792B92FB79147BCC7C7A4BF4DF6D6E0
95968AA511C86A3176A6724C33C008CB6DEF9052B3FC59BE28C15840782D0CEA
AE542CEF3BF5B4891F92369E9379CE45F6CBE7E3178917EF851C61C96FC51C30
FFEDCECDFA28A951DD5211ACD684EC0A6166DDA4031A8E608B103688D2E860B9
BDBCD50DE83B5995137A61DB977EC7BDC3F755DB6693581C5B4EC6CA9DC520FF
DE29D0AF2B26F944B4DFA2FF98D118E255713FC4593B1A8DABB9DFD465CC4544
84CDA735B701578570700D732CB7F8D9B878F93495048439B2A9E2E520F183A0
B292DC132DC4ACB1DDC40507219F411B53860C030587CD09BCD6CF66E574064E
B3F580B691B328A409C755495A734988965312B1888F038ED1B3EE902E0116DC
062ADF585E3214CAF094205A459DCD045FF6279E1E986AE9F101352AF744EE46
7841A888C994D6AA4D93AAA05785BC621EB122BBA1428099C2B40E680D890903
458CBFEE5FD6875C634D9ACEF68ECA80DEC81A3B612DBBC52FECDFA528C6A926
46975A56E261E3C16937CEA1C949AA681DFEF866208446CAA0AD7FD9BABB715F
885D92D117645D73E7A59B14C596860E82AA1C2065C639FCE1C3E1C88F76C376
37331B271A011727FAB8501DA3EB452F94772F6F39189A1A07946720C31C5D12
522AF7CC17918A5B26FD3680C836CA9D440461EDCB0B2670B957F41B39738438
7330011A378E1A7349B7FF013C1AEA6E7EC9E4162A3FA7AB9E7193C83DE369C4
8C98D11C41C15D5756CC52CA9EDD64727BD3BE976D4963B9611371DA0E464686
95A4CA7D1B1BF6D4AC2B193FEF9E37688D62E624BC2288BD1556D40E81A3759E
13390EBF86FAD0D1FE3262696586A92E10FB3E8D7353FBAFA30C4FBA3003CFC4
2B01FB3B663F3C478A583A1A7D9BE69FEA804C744C96F6806D9816FFA07969DD
0CEA6C96698CAFBB44515DD6C338BF9ADD21A60C14BF696A8E3E16985913D51A
9DB64D82D53435C7BAFD262DC7F7D015F4BC8F88408C9DE54FE6BB1E52CAFE32
DB3305BC555ACB18F2C8E331AAAFEA5C905FC0D12C6ECB60F72D16E676754E8F
D95EC08325BB6A68D73736EE2874EBD426E37B2C174E6CBEF2EAFCA2AA8278E7
93C1A3ECD47AB2679553D56E18BC2BE56CC157560A9FEB4FD1C03F41E1AD09AE
E746D4B9BFCFAA31261F1940539E1C80C9332BAAFF7C1EF564C397AF85067DE6
EDFAEA7567D26EB24093BCD34AB430A4BD835CC697BCEA1E3B3DF163CE00DDB2
1095A28DE7930A5BAFA7892567BEA46F08D78E105FB10252DC8E0EA0AFAF67D9
19685FEB7556FCDC9D79CC6D60881693C26B100A50ABDAA8951194774A8B2070
2D160C3450D2E8786D494C69BC472F5575B1366C832BB031A0167D93B7274466
ACE0BC38C60FC53EA71D91AB4A3446BE332D4C45942515829D461CC7AC00155E
932FA3F5B34063E50A078A7BF88EBC67BFD892E35E6940E94893E1CDFD279678
DD22D9907BF8DB416935BF25534EF2624694FA389A52A8AA1B5075D535AB33E7
2BFDCB847408D1CE24CF792BECC79DD1C5CD4860749F82198FFFDAE1393586EF
D0777A93DF429EEAE9D72900EE6389CA8AF19EF35F1E507A69933C76E6181B64
C594C8526DD2D2C18747AB40D2ECDB17E15F2CBCBF2F280497CC6C8EBFEA0838
B8D9E3481F19ED44669DF2CA6F74F45423FB391AEBE6894AD20C707FCE6CF4ED
7E467CB73043A75E6990166DA987B718142ECC9C681B80EA6B86E52811397D1E
A562C53114B5769D6E007E09C4E905DA8369480D9250A1EEDEC5B9349222FF2B
FBA76D1CDC28A497FDE412C9ACEBFCE1BED912751209692CF258F8A6D0B9B9BB
F0B3DBC36B1AA378E1A78FC7C507BAB3555B26539D22FCDC136E434D7FC5E771
0559B91756AD1171ED3AFF8AAA04386B24BDEF8257F92AE1869430C6DE57F024
1051AD25750308A8F0348CD1ED0725AD516990B85B5A2F33498DCC9C4498EAD3
B5ADABB830C68513A5DFAAB1C3296B34B5457E6E48141D58E82D248A206E80ED
C58F8740B9A96FB08FD0F3114A13C2A8CBBE519A8F57C66D7C112683F248D120
E2B00CEA54EC340C270BF01EDE1F3E6C11B674E02030C1CED85BBEE7CAA241A4
025CC660AC5F761A0C1B7BE2A1A8252D0E7FB672D76A531AF234808F254A8860
DD18EEBD72E9B9F46ACD230977EE7D7B96501A470B19CFA88B9599539A819E3C
6AB5AC68574FF4BE13FC942C261D738A72D9EDF590013F0B4715869109CBD52F
F420A24B253F197A5AF0C7005F6503160BDA184007E85352CB995B47A4712422
DFEF01EA631F6E50BB88ECE3ADD8AC4B24A8DD842B31F76C3596F43A6F2BC1C8
2AF2C607E56DF287386DB1A185884965F157B03C610D1ED3354764BF9AA857FE
D02B452CFB7004015912B5EE02E06C5302A0AA8076611164AD52FF3CFCE4A347
9ED745779D6BD165B9C6A43EC3754DFDA0AAAB932906585B04F6A5459331505C
2821B82DAC7684B9DE946536024F2B300306CB5E11A1DF57C36C6E9EA13C0560
C3C950FCD4C547743FDD7A68BA6EADA8955D5540308E63E66129EFDBF7E27A57
CE61292AAD6582B3A661F4D48AF8662DAA306A89B60E01C8D8AA2B2A13F17B8E
B838C38A42CF4EEBB414C741759F68C2C9292B509FC3F79A0122D3AA42ECC89A
0DF5B059DF6AFF2341463990EEBC4C7EB82178C5A83FBA022CCA318172363B1B
4AEFDFEF2308A63FF783E0F5AC5136C94541C794E25822B724600C72DCB79EF0
77EF22D373A323A5A71768EDB3C6F00EF26C85DDC5FA4A4247E469A15621739B
6E1DB9F51288987B59858E06A70D63050DAFEF2B2BFE24EEEB1C24CF863F7AA1
A30E6B290AC157EDE243D5A91FDA0DBBD58B5194A032B2FD0010DDCCE8009580
ED86157A1C19E51402C9EE862FB1255D2526DFB68F31770AFEC985129B79A1B8
DC03FD46720081C49801814D1B1083ABFAA53A6D2A30DB96ABDCCC01E5F23DEC
6461A9782DB551BA5666ABFC8E679A048BD93DFFE886214DF47B13C60718F052
A62AF269313CF93D626985DE5548749C3D89E229CBC2FE591BF57307D3070D91
449A78BDE8D1F56097DBA7D9C6D5407EF7284598EA8404E28B2E6C5C2C9B746E
33F593C9FC95197E07F53A0DC67332F5FC2D330EEFE173B3C0C5CAD1A0BD2878
6365DFE30F1E175FAE88B0D3F6F30795A6E4F9F24ED50711C946AAC05FEBCAA7
971CB721B203CC5F6824BCF389AA13AB447AFF1499F39AB874E6815654649E0D
9B58DF7721135DD54C8DBDF8CB0DE9A33BE5465E2AA3E843BC200028B6A88870
F666CF1275DD0B420D342A51D8A658C45E07B9972B7EF28F0974D4689D2CA2FC
036C3AB4D36D829CCE65D791D759C9B9E9CC45CB5BD1883A367BFB73A3CF3004
E8949B3D687B46C3D311F7A6F3F8C9EB6E52BC1C909F5D626B394A0B75CDF8DA
455A463217D9E89A08B5A0121189C0BE7180B2E3DFE4E03920998598A7BBF5FD
DE4575D3149C52BDE990DB88813D15260414D8E3347313595E35671969AD3615
998B7971669DBBB6151FEFDAA95928283D249CD3F0EBD7BDA869517788260621
587FC16FCCD1EDA3F98788A02220B84153682DFC050081A0CECDC13453786565
34CA91497E24A3E4693EE1A828D62F058355961D07526B0C96A0CCBE32FE3937
ADF702756E446EA028E9E4734FB2F6EDFA1D5B8C65E4FB903A01A66F0B16B65D
F6FCE21400564658F0A4ACFB0C454A6AFA77DA6B6138A4A59DD6B917B9989836
3EB0513CC68611DD80DAB291E194DBB8496FE117AE1F62AD43CB0FEC11368866
C8492D07FD6BF3C3116A0E4392398F83ED4FEA90B3EFFC0B548F122B0242C705
58BA9448C5C6439D4EFDEB117CD2114700403C8A0669BF3D0002698C7B18E2A4
2B1E5BE90BB0736B27673BFEE8527F6561C9F046EBD5877D5CFB603DA5764A62
44BF01B3C0ED1354FC2AD9AD915C69802B7F89076A644FFC7081DD28ADA1FD08
EFB63422DFC8F52FCCEAE0EAB1F9F0622B1A280E400CD7B5579031F9D3A33FB0
61796E5D5BAD14D0A91EF1210C5290BFE51FB70BC5A7DF42E15328FCD1A7951F
F4D4726A638DE676D7E58FC9ED82BF46CA3A12826D0132E6114E4672C8751EFD
F0BEBA924CF3EC150BB5B6399D78B6DE80F68E1639DBAC4B7594C9D4FF35F541
9CFB55130B35DB0026B6BD46949EDEAF56AE4C33A58D6AF0EEC492E8F8D80545
78748522841AD534FBB0C7AECE61839045C7FC92D891251F7FAB2688F496F095
3B245501CF0BA0EB8C106EC6BC3F8A00C8CF4D8E8E438C481003C397FB38D963
75E245394378C05333211E6A73B49BFB41508FA5679749236A08F916FB5B3727
D9EF898C821C238EF0F20CAD2515D798770349352251E4FF680239294286D3CA
B970580CE05378F2F884E451EB017A953991860E707FAE971EE42721C7D27442
3CA35F73C6DF95A063268AB64A26FDC30AB4DCFCC2F74867127C8997BFB5B1CE
7053C08AD97C1F48BFAE0EA0AE5BF191905D13247D4533F4F16719577B72DC97
A72033982E3719BE0D9630D64F1103834CD5E13FDD1854E785901331ECBF2AF2
F82D59FF8E7CC4ED28F6DAF59CB2EC8487E1D36D66067ECC72B17B0AA158522B
884F811BFB7309881BC78C389CE68CBF1557115C247582EA80696158ADDFD50B
4AA7DB6B256CE19B4884979D611382D98175C96263577CF3FE343F373FF15E2B
973F40DF0C3711E77AB89D127E5DB62C864594D4575E560168D0FF8DCA74FEFC
11D326A970DAFA93BE43E8592D987E4DB043CB8103899EA851DF3DB5A82B568B
88EE250B763EF72ED6FF8F0EE8B2E5736C94B6A356776869B15F3EBAA36E8266
0BA77C015DF0D3EC6C3C5B14FC1BDB2C7AC0F42AFC1924FF85BF0B6F6F122005
41BA7A4715C47CBD60CF5C2EEDFEF987CAA8CDFA9BDCF363A678B064B118E2F5
CEBEDDBF46C9433D67F16F856D37E809F7EBCBDFC2466A43DE89C792E809E0C7
2380B9ED686C330EC89EA0D004BA8A48F8139F5D60FF7A7528D2367090853069
322EEB073E4116F5CF62D34257AEED36D088E23A5037B430F9F00B7C8B9584C9
2229649869966A01A64D51A83E6A25F621EDD11562F331EF0F8DEB63E2955759
F7D52F0DF300907BC020FAB2487FD6D7A3AF22A072C6FD56077C00902C0D6FAC
7EE1DB1D6F117E0856CAD309EB1F5B5B7DACFFB225B8E938CF78E1C439CAD5B2
E83C049D1603E338CF2B22F8458F3A077D986ADD8B258A304256FFD8969BB375
E5E67395B5190B7758415CC1BCFCB02BCE234F7D09BE4F16BD820DEB3B89D3D6
D6AC52966ADD8476BCEB249C4A0E2A68646E9583086D76497AF55B1EB3BAE701
9413507CC4A48912961AE205FAA4E2D12E9E5F8B9D50645410F3FF6C91545065
21227674339CD3160C3F93754222F8E9D980759B971A134DA4084376893F64D2
4DDEA75AAB81EAB07CB5273DF554D9DECF5E29C24EA7F81A7B5A8B43DF3613AA
AD9279FCBCF7E52D796AD96914C2DCBCF8DBA2C7D5650648959DBDA9F6BF69C8
BFBADBAD045C0007C15A0EAA5327DB5E5A7C126DF5F556AF4589BE79A66E6C29
1041CD89A057AE847BEBBC46EE5FD4526F5F2766831D4CA7AE7AB74CFD54AA67
74CEB7EA3F14A11A960140694849C3C359FB16759A412F10BE594B65D860B304
88A519D968F8B73101D5214187254A8FED0739866F6CCD9F3E2822ED66770917
DACF73287342815284380C530BB859915B16DECE8D3FC1F1B9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktional)
@start /Fa 205[886 49[1033{ enclmmathsy ReEncodeFont }2
1328.35 /LMMathSymbols10-Regular rf /Fb 236[815 815 661
661 16[{ enclmmathex ReEncodeFont }4 1106.96 /LMMathExtension10-Regular
rf /Fc 203[993 52[{}1 1328.35 /wasy10 rf /Fd 135[739
4[613 4[776 4[444 1[623 641 3[553 38[361 33[738 25[{
 enclmmathit ReEncodeFont }9 1328.35 /LMMathItalic12-Regular
rf /Fe 140[513 3[650 723 4[361 5[578 5[361 1[361 29[1012
1[361 2[650 650 2[650 650 650 1[650 4[1012 1[506 506
40[{ enclmrm ReEncodeFont }18 1328.35 /LMRoman12-Regular
rf /Ff 185[723 4[830 10[553 553 6[307 46[{ enclmec ReEncodeFont }5
1106.96 /LMRoman10-Regular rf /Fg 160[909 45[606 1[606
47[{ enclmec ReEncodeFont }3 1212.12 /LMRoman10-Regular
rf /Fh 255[640{ enclmmathsy ReEncodeFont }1 664.176
/LMMathSymbols6-Regular rf /Fi 135[530 94[540 25[{
 enclmmathit ReEncodeFont }2 885.568 /LMMathItalic8-Regular
rf /Fj 198[406 1[406 1[406 1[406 406 50[{ enclmrm ReEncodeFont }5
664.176 /LMRoman6-Regular rf /Fk 230[483 25[{ enclmmathit ReEncodeFont }
1 664.176 /LMMathItalic6-Regular rf /Fl 254[261 732{
 enclmmathsy ReEncodeFont }2 885.568 /LMMathSymbols8-Regular
rf /Fm 203[470 470 470 470 49[{ enclmrm ReEncodeFont }4
885.568 /LMRoman8-Regular rf /Fn 3[723 129[578 1[686
939 686 723 506 513 506 1[723 650 723 1084 361 686 397
361 723 650 397 578 723 578 723 650 6[795 2[1336 2[939
723 7[1011 3[1021 849 1[993 939 1[975 6[361 6[650 650
650 2[361 434 361 2[506 506 6[361 5[759 27[{ enclmec ReEncodeFont }46
1328.35 /LMRoman12-Regular rf /Fo 133[956 2[1554 1[1196
837 849 879 2[1076 1196 1793 598 1136 1[598 1196 1076
658 982 1196 956 1[1046 6[1315 2[2223 2[1497 1196 3[1616
1682 2041 3[801 2[1353 1412 1[1554 1530 1625 10[1076
1076 1[1076 1076 1076 1[1076 598 717 45[{ enclmec ReEncodeFont }40
1912.83 /LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fo(F)-239
b(A)717 b(6.5)g(-)h(1)f(Cosin)-60 b(usfunktion)714 b(-)j(O)-60
b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray -741 4800 a Fn(1.)p
0 TeXcolorgray 651 w(Die)434 b(Cosin)-36 b(usfunktion)434
b(ist)g(eine)g(p)36 b(erio)g(disc)-36 b(he)433 b(F)-108
b(unktion.)921 7346 y(Zeic)-36 b(hne)391 b(in)g(der)f(nac)-36
b(hstehenden)390 b(Abbildung)g(die)h(K)-36 b(o)36 b(ordinatenac)-36
b(hsen)391 b(und)f(deren)h(Ska-)921 9338 y(lierung)532
b(so)h(ein,)g(dass)f(der)g(angegeb)36 b(ene)532 b(Graph)f(dem)h
(Graphen)f(der)h(Cosin)-36 b(usfunktion)921 11330 y(en)g(tspric)g(h)g
(t!)432 b(Die)i(Skalierung)h(b)36 b(eider)433 b(A)-36
b(c)g(hsen)432 b(m)-36 b(uss)433 b(jew)-36 b(eils)435
b(zw)-36 b(ei)435 b(W)-108 b(erte)433 b(umfassen!)921
30147 y
 currentpoint currentpoint translate 1.02608 1.02608 scale neg exch
neg exch translate
 921 30147 a 1355 30147 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 392.07875 a add def
/d 0.0 a add neg def /h 140.00957 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1355 30147 a 13750 22324
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -56.90549 T 4 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 280.10078 0.0 -111.97797 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -85.35823 0.0 T 13
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 40.88821 0.0 -70.66861   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial 1 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 280.10078  0 -111.97797  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -111.97797
 280.10078  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-70.66861  def /maxTickline 69.34096  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 69.34096
0.0 -70.66861   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 280.10078
0.0 -111.97797 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 69.34096  0 -70.66861  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -70.66861
 69.34096  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-111.97797  def /maxTickline 280.10078  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 69.34096
0.0 -70.66861   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 280.10078
0.0 -111.97797 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 12505 19460 a
Fm(1)12505 16310 y(2)11773 25713 y Fl(\000)p Fm(1)11773
28862 y Fl(\000)p Fm(2)16646 23527 y Fk(\031)p 16646
23690 507 45 v 16696 24236 a Fj(2)19763 23889 y Fi(\031)22743
23527 y Fj(3)p Fk(\031)p 22743 23690 913 45 v 22996 24236
a Fj(2)25827 23889 y Fm(2)p Fi(\031)29042 23527 y Fj(5)p
Fk(\031)p 29042 23690 V 29295 24236 a Fj(2)32126 23889
y Fm(3)p Fi(\031)35341 23527 y Fj(7)p Fk(\031)p 35341
23690 V 35594 24236 a Fj(2)38426 23889 y Fm(4)p Fi(\031)41640
23527 y Fj(9)p Fk(\031)p 41640 23690 V 41894 24236 a
Fj(2)10027 23527 y Fh(\000)p Fk(\031)p 10027 23708 1147
45 v 10397 24254 a Fj(2)6799 23907 y Fl(\000)p Fi(\031)3525
23527 y Fh(\000)p Fj(3)p Fk(\031)p 3525 23708 1552 45
v 4098 24254 a Fj(2)13750 22324 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 13750 22324 a 13750
22324 a
tx@Dict begin  { 280.10078 69.34096 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 13750 22324 a 13750 22324 a
tx@Dict begin  { 5.0 6.2015 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 13750 22324 a 13407
22610 a Fn(x)13750 22324 y
tx@Dict begin  PutEnd  end
 13750 22324 a 13750 22324
a
tx@Dict begin  PutEnd  end
 13750 22324 a 13750 22324 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 13750 22324 a 13750 22324
a
tx@Dict begin  { 0.0 0.0 pop 280.10078 69.34096 exch pop } PutCoor
PutBegin  end
 13750 22324 a 13750 22324 a
tx@Dict begin  { 5.0 18.93042 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 13750 22324 a 12702 22656
a Fn(f\(x\))13750 22324 y
tx@Dict begin  PutEnd  end
 13750 22324 a 13750 22324 a
tx@Dict begin  PutEnd  end

13750 22324 a 0 0 0 TeXcolorrgb @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -13.9355818181818245 def /x1 19.84441818181818
def /dx x1 x sub 199 div def /F@pstplot (COS(x))  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 18.11378 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy  dup
1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto
} { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not {
/x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 1.2 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end


@endspecial 1 0 0 TeXcolorrgb 0 TeXcolorgray 44756 30147
a
currentpoint initclip moveto
 44756 30147 a 921 30147 a
 currentpoint currentpoint translate 1 1.02608 div 1 1.02608 div scale
neg exch neg exch translate
 921 30147 a 47992 4800 a
Fg(___/1)p 1 0 0 TeXcolorrgb 48228 6792 a Ff(F)-123 b(A)369
b(6.5)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 32183 54804 45 v -2331 37484 a Fo(F)-239 b(A)965
b(6.5)f(-)i(2)f(Zusammenhang)f(zwisc)-60 b(hen)964 b(Sin)-60
b(us-)964 b(und)g(Cosin)-60 b(us-)-2331 40507 y(funktion)715
b(-)j(MC)f(-)h(BIFIE)p 0 TeXcolorgray -741 43814 a Fn(2.)p
0 TeXcolorgray 651 w(Die)361 b(F)-108 b(unktion)360 b
Fe(cos\()p Fd(x)p Fe(\))g Fn(kann)h(auc)-36 b(h)360 b(durc)-36
b(h)359 b(eine)h(allgemeine)i(Sin)-36 b(usfunktion)359
b(b)36 b(esc)-36 b(hrieb)36 b(en)874 45806 y(w)-36 b(erden.)855
48351 y(W)-108 b(elc)-36 b(he)431 b(der)g(nac)-36 b(hstehend)429
b(angef\374hrten)i(Sin)-36 b(usfunktionen)430 b(b)36
b(esc)-36 b(hreib)36 b(en)431 b(die)g(F)-108 b(unktion)921
50343 y Fe(cos\()p Fd(x)p Fe(\))434 b Fn(Kreuze)f(die)h(b)36
b(eiden)433 b(zutre\033enden)e(F)-108 b(unktionen)433
b(an!)p 17427 51384 11531 45 v 17427 54602 45 3219 v
18135 53325 a Fd(sin)p Fe(\()p Fd(x)295 b Fe(+)g(2)p
Fd(\031)p 26547 54602 V 28913 54602 V 17427 54646 11531
45 v 17427 57990 45 3345 v 18135 56587 a(sin)p Fe(\()p
Fd(x)g Fe(+)22948 56064 y Fi(\031)p 22948 56277 573 45
v 22999 57045 a Fm(2)23653 56587 y Fe(\))p 26547 57990
45 3345 v 1 0 0 TeXcolorrgb 27256 56650 a Fc(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 28913 57990
V 17427 58034 11531 45 v 17427 61917 45 3883 v 18135
60308 a Fd(sin)20189 59024 y Fb(\020)20983 59785 y Fi(x)p
20983 59998 530 45 v 21013 60766 a Fm(2)21941 60308 y
Fa(\000)g Fd(\031)24055 59024 y Fb(\021)p 26547 61917
45 3883 v 28913 61917 V 17427 61961 11531 45 v 17427
66521 45 4560 v 18135 64579 a Fd(sin)20189 62963 y Fb(\022)21137
63681 y Fd(x)g Fa(\000)h Fd(\031)p 21137 64270 3149 45
v 22386 65491 a Fe(2)24418 62963 y Fb(\023)p 26547 66521
45 4560 v 28913 66521 V 17427 66565 11531 45 v 17427
71186 45 4622 v 18135 69245 a Fd(sin)20189 67629 y Fb(\022)21004
69245 y Fd(x)g Fa(\000)23500 68346 y Fe(3)p Fd(\031)p
23500 68935 1436 45 v 23893 70156 a Fe(2)25068 67629
y Fb(\023)p 26547 71186 45 4622 v 1 0 0 TeXcolorrgb 27256
69208 a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 28913 71186 V 17427 71230 11531 45 v 47992
43814 a Fg(___/1)p 1 0 0 TeXcolorrgb 48228 45806 a Ff(F)-123
b(A)369 b(6.5)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 75258 54804 45 v 0 TeXcolorgray 24746
81281 a Fn(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fo(F)-239 b(A)717 b(6.5)g(-)h(3)f(Wink)-60
b(elfunktionen)713 b(-)k(O)-60 b(A)718 b(-)g(Matura)f(NT)g(2)g(15/16)p
0 TeXcolorgray -741 4907 a Fn(3.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)433 b(sind)g(die)h(F)-108 b(unktionen)432
b Fd(f)576 b Fn(und)432 b Fd(g)481 b Fn(mit)434 b Fd(f)142
b Fe(\()p Fd(x)p Fe(\))368 b(=)h Fa(\000)221 b Fe(sin)7
b(\()p Fd(x)p Fe(\))433 b Fn(bzw.)h Fd(g)48 b Fe(\()p
Fd(x)p Fe(\))368 b(=)h(cos\()p Fd(x)p Fe(\))p Fn(.)921
7452 y(Gib)423 b(an,)h(um)g(w)-36 b(elc)g(hen)423 b(W)-108
b(ert)424 b Fd(b)369 b Fa(2)f Fe([)8 b(0;)221 b(2)p Fd(\031)48
b Fe(])425 b Fn(der)e(Graph)g(v)-36 b(on)424 b Fd(f)566
b Fn(v)-36 b(ersc)g(hob)36 b(en)423 b(w)-36 b(erden)423
b(m)-36 b(uss,)921 9444 y(um)433 b(den)g(Graphen)f(v)-36
b(on)434 b Fd(g)481 b Fn(zu)433 b(erhalten,)h(so)36 b(dass)434
b Fa(\000)221 b Fe(sin)7 b(\()p Fd(x)295 b Fe(+)g Fd(b)p
Fe(\))368 b(=)h(cos\()p Fd(x)p Fe(\))434 b Fn(gilt!)p
1 0 0 TeXcolorrgb 921 11989 a Fd(b)369 b Fe(=)3356 11466
y Fm(3)p Fl(\001)p Fi(\031)p 3356 11679 1304 45 v 3773
12447 a Fm(2)5227 11989 y Fn(T)-108 b(oleranzin)-36 b(terv)-72
b(all:)435 b Fe([)8 b(4)p Fd(;)p Fe(7)p Fn(rad)p Fe(;)221
b(4)p Fd(;)p Fe(8)p Fn(rad)r Fe(])p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4907 a Fg(___/1)p
1 0 0 TeXcolorrgb 48228 6899 a Ff(F)-123 b(A)369 b(6.5)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
15923 54804 45 v 0 TeXcolorgray 24746 81281 a Fn(2)p
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
