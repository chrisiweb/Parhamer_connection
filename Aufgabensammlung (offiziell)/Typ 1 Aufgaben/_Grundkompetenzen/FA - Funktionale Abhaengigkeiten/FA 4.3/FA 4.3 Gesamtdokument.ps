%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktionale Abhaengigkeiten/FA 4.3/FA 4.3 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 08:50:55 2017
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ LMMathSymbols10-Regular LMMathItalic8-Regular LMRoman6-Regular
%%+ LMRoman8-Regular LMRoman10-Regular MSBM10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktionale Abhaengigkeiten/FA 4.3/FA 4.3 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0950
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA853
B843CABA76BDE9582090299F423519EE3AF8F83AE7F7828B314B6E36E9127419
F274E9FBF5622C5E48D7E95664D6C0C1006661038CF2C93BEF1DE34A163A2C86
693A13F4D0F052D2E183F36401F0C29862BC1B36A086524F76C7EE2C6D436A23
7009F146F1756DCADD3F70C51FDCE610E30C0F4AC538A2703423A07976ACA74C
25F4CFD6A92969E206375FB0C672E45948B0E832F2BE688EC22FEEB3E06BBC3A
272F73081A30830AE4214F2F029918FCA40BAEBED6299EDBECA01E08F27E5627
F53BC56F4AE7CE2D6273B27323AB829E2D51672A4990E3AEE84331583A99DA4E
63610AF8F10C50FE6196E3F4C1E4FC9BA6BE0ABDC81A0A7BF6A5792A97BD0A7E
7BBD31C3FDC01D734550843C8D84C6CC0B492CD1A6CCD57428F03A863E959C77
457D401028FD00FFA9BC422FD09D8B8A70446A61CB256A2FA0B59A2646D9C5FE
961894DB8B315C52008B4416AC35439E010BF90E43A05FCB2FBE8E62385E220E
588B7FE5509F1BB71150E159D01D24EE28008D4213227FE9BCAA34364B1039F6
BC142AAB19C8E9B15F0113781DF9C9B3BC145955552A901AEBA588D39D7E87F1
CAF27D315E168807021B0CD1B2CE13B611A7B5FC28DEB4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE279918B0B31E08031DB686D518B4CBB8A4D0B
EBF6750A452A7F706EA676E3B3237FC5656B29CD5A3A04F82AC871B526CC28B3
A61D985EEB3610FCAA433B9C6D4683C512F0FDBF3EE6FF552D7BF0BBBBA37050
FCBE3F164189FDC8446ACDE8D0D4050278151B46E56AF826A0C2E9389C2B8BB8
E38579D281D5142944D3322E1C66D456E4C5DD727AA41FA5B369D5E10CD71832
A7DD40DE855B47289C449B6AD8D5F1D557102050EDA5F1641EAAFDDBC082E579
A06D8A3A323458808BAD0F4B8A2BF406DBAC4C5F555EC96E760C8245A1AD9F50
881DB475F892F868823CC55D4859C09148529FBA57A392127B68F5366491D1BB
097D8FF4A71966D42DD988F48C8A1F4DE0449E6AAE79500C42B4EFE4936D0D00
0FB339115493C16412F1D6DCE02BC7B485CC108C6321EBF1C609633933A576C6
B0758D49F3155D448D505F73A5206EC1C8886F5949790A7E4B850B6B8E31EC18
B7321E63AC75B6588774961F6B7D313B850AA4B368E48DAFAA5693CAA236E150
E02FB2831359FDB95792B2E6431DD24BFA8F2B51BC21E2E5AACC0CA211F50A13
075ABCF9F440CA468403D939B91520C652F1196EAF1BC975E26F8057F69CB972
E976F99070AD3FCD958C1EC54B3994EA142AA0615EF7BC00D85F75BF5F32B350
E2CF46BA0E8D0120BDB54910E5C27A27B59664E856EDDE290103A0D490FD76DD
09B152B3AD1C4754696B239D4B13935AC19769600943C7343A5E7A06C9115395
DC2F92EA95E5ECE5A08EDD16DF74B6297EC0220C91F8BB9AFE742FA96456E131
7D41CDCE88A8F9A12D46B8FCA50DF4433B0B8AED6A63BB5FFDFB8D48D04F9849
2972699B5667C0D2D206F4785DE20A854E1D4C655A690689B7B5A19F8162E5D8
454B7A1CE94AF723F47C6B168CB7269CC802B14545C8448B5C260C6AAED5FB23
2390D7239C22534FEE644AE96C5718EFFB9DF1AC47CB3022D3751E6B7123FB71
403E154150FA4A14EE2CDC8F0BD084CAB30272E8F065218BA88536F138B94AFA
D750F6EA9BB43271084CD876A14CEBEB86283BDB500BBC0F9E152C30059054EE
92951E4A202AB409F7D16443DE00ED69C1FA674BA3664F8BD00C08A27F475C00
E6AABE35B01B991AE910B7DC821CFD8A6B5C7F4B116E78065CB219C926D45163
EBF6E81EF0C38076871283D64FA5F2126CCA7E93636A7CCA2158B99A15CD405D
4AD290CD8F7AF8845CF78D4BE9C7F2E4DC00372530C64BBBB785117A8AEEC190
9F49C82BAD55AD174D38A74582CB367BB50ACF8FBB2C8A2EDB17FF267D0F21C3
5BE42CA518272C9F9FB2DF0780C957CF1B9734E9F49C0E6EBDB5D24ED5D673E2
6A25811D4BCA9D693EF8ABE784D2BE46DE1E57E1B738ADF6FD49E6A53BF48C6C
2A73026234D3719C72C2FB8B8274AB54A6853DC6784398A6B994BE424B6E9078
6C303D590747608AF3CDD6A51B5612DD5D49E1153A25EBEAC76FEC601CF4D10F
65DAE3EDBF9A163BEE244542BFD2849D498C239237ECDCB23458C7C3B9395C7F
900C2AC7BDEF8FB9D4574698BC8D4E374B34969A885A0A4AA26F19F8348EC621
89B42297868AD2C3E80D95C41FA4A5AF7A016D3C773E040312AA0240DE24C7F9
D662FC2E59673DEF563AECCABF724C09CEEB5DCA64FC6D24A091A75B5745DFEE
F5C1162900B5F1EF5A7102C27DB1918679E7E354A5DABF897D9C8EF5A14FA8DF
FA3A7B3D47542FFF5987268E60E7FD64B017EC6A8FDB4BA5AB5B5B58046899C9
C5993E7302C870678DEBE8FEF3F2438217BA5121CC668458620DB3D381D56770
19CDD612E5C0A267BE4F707ECE93B3E1E8BE65922315729FA5513AD13B562C5E
E145AB39905815D6C3E8B60AC5C1D4D7731E2A6B122C6F57790C42B0368AD7A4
99EE5F029AA6F8E302F4CD994EC08C00AC6A66C51254F71280CC722402E200EA
D4F6F489DCD61B81CDB85804A5EF00CDB09D9C2EE4F3D571285E319A78F90942
1C31359DDF81F38F6E8615BCD0E6CFFE077688C365888921E45608C868A0F6F9
D726CB2CD81B49A9F47C12FF76284D3B07E2C2E788036B4867F90D40C1E4FF74
60399F1F08F98A05A579D00D1ED5E8A86BE9DC1CEE3FCB03B9A0E4BBB81C849F
AB1A6089E9807455A5DD78B2EC3090E36EDF4D19FA6BBEF386127BBDB53D25E6
8448A975CD56BE0A93070F848850FB9B3B0285C7FADB28A3711C06273B79FBD2
A509FDF7AF81630306D67E0AAD0DAB78243E1B814F745234BA7CD57325B5A34C
C3F984018DC9653649786481788A6F58ADDB87DD0D883AF60455753850A63756
5EBCDE76329F5626E6328EBE3DB5770A4C3E21341C304F38845FE70E091803D9
D14037AC4AA8C4D17EBB62ACEFE5344982E0F489D72EF60183D8F2A79A3AA765
C18E0479B0255870CD61C8CF7AA8DE567D174EC90945404C5B928EAF3E8DDC1E
018442474EC6B0B42DF539EC1557722299347DCFF0347BA4273054B8062D3DF6
FF094944AE472D60DDF6CA62288E4E780F8614C7749C9406325C82715C866134
637DCCE4848D2B051B8E0EC7B88872E9AE68BB5DDC30F4A61119733F6F6DE0BF
4C6437A849A661B6A233B1C24238BB910C11D2A8024C89FB5DC745489AAC2570
4C61242B4B1983A5D0B134C8052495CBAA9D2E2E014641BD58F0EC389FACADA3
08A1723A5C2492BA0615B0222EDD152AD19C307118AC0086653521EA59D676CF
C36AB586FF1FD4C383E2785EAD36F41274FB0BFF9DFEADC612CA44A7392D8E79
1DDE1DE818BBF26CE3BCC2569F5CE6DC91D4F8B7800A05DECB300CD7A8C38D77
4C1DF436013901C9671F77F34A63F361C5579EC5E00C5A8E2FC97874F6459EFC
C1760E9C6C78E60CC0152340DA6F26C67B2E10B620750E2C44E5CB9DCE747E29
6F7E716E6BB12B699A2FCA90DFB3DD730D96D100DC5B1BBB1632D7015235F4D5
1C1C753EEFDD6ADCEB45DF4D00713744039C43B860B5A9C51AF0BEF11CC8E85B
067A402342896C9B3BAAA570C4900E12D720F2812F28626DE3BD3F3426B82718
259AD02CDB518BA4C4AD8F261CFEBF43857EC7A543ABB1E059247E276E206CB0
0BED125C8F78A665901F80068C9B0AED83074C6270B177BAA18F1975F43E9160
8B75D86D9F7C1E986C2DDA71CBF33FACEE675B943764AFE71B5A359C4A092916
3E8EF660794518DA4307AA5B38469000FBF31BAE9CE8703754A099D21B332D3C
A19A842755A79DDC1E281A8C34A969B80EDC946658B7579B5BCF07AC8B45C2A8
3664140E70CA62DCB3153CB4A8E46F12CC16254F52A26FE47FE41504D3E851A0
665AB60BC0CE5C72512D196F8D1BC0B3FC12DA2D13F4B9AEA2D017EE7E574B86
2576F5EA495F51E1B3A86090ECFDB57097EF73BFFD5E41E8AB6BF105F87986D4
95940A8B4A29E4DC974554DF975D026EA92FC09DBD65783663CAFE414B6F8C06
F00A26631D7FCC4527109F177093E7432F5FAA6CA14F1654ACCFEC8FFC127488
F604E972B695E9EF18F331A58BE4704E5130FB4984C3FE2474E6CF0935F90B79
7221D94774689E83E5406F5D9554C1284249C687A6CF5A6B4783F54267C48710
32ED406DE854CD5E243C0BE4656E35FA02FAF5101E1AE6B7CB286C9DB979D763
FEB468FC7AA2DDBE2E708D27D89164B12BD8BDF0418BEDF018EA67683158D1B7
73C6EF553EA897D5F2D53E75902E57D7C4E06D7DC83F1C557ECF5DE83748370B
00EE03A3ADB919976D4DBFF11B246AF9C2FE922A8A6F8CD47656ED2CBC816B17
3B01048BE9D1E4B54ABC0396D5203D088ED7A1FC7CC863AF414AC14AC2D75E5E
EDEB706CFB2AFE24EB580E55BD31B793E4065CE83795F047004ED88F5C38BDA8
7F5FA8880517429B9C4E5FE980448EDF3BD57758FD145E769D4E88BF43D19050
DA58F5EDC7B4AA76BD8CDAF0B8639BD5D2C7552AF5415B7F35B957F02B962930
D3D0C3AABCE7BF840A7A035F2CC57FC978684570CF6C8FDB960B9CC6E9435D65
77D1CFB71D362BAD7280AED8771C6EE2F7E2D86C5661CDBEBB354B84249E93B7
7A0E409B4D5E17600E1E43F5EA1F884939C0AE467119F1E155676D10A8A35955
BADB667DB10180DF404F43A166E2E533F1C050D35CE4AEE92C35EE391398EFCF
E19EDE2E31F837DF86F1800F59C89EF6401112AB73434A3938E1970D8EA3CD40
C7B8FB44205899626FBC269C25478E0A63F78F3460EDD4F64B4D2A5B3E660B64
D293F803C670E243F0B0EB1C548746C08C7F4FAC0D4A7FD8B7369AED2AE9A79C
74C0FF0E0B0C1AD3B59BEF79753FDA3E929B52F207382364B1C62AE8311C4337
297E030CC0CE93ADB4E2FEB60E28FF6D4AF0010D422AFC137F2254FFF6C2929F
CB76A235705EC088049C1F1B0E78FD2D357BBBFB0E12CD481F96252AB7402213
DF9BB4464515CCEA5FE4C0CF761E921D7D2992EB24625547D54E3F2C644ABABB
47914DF3ED2C719753BB1EED9C435F2D571BEBA4F76A0AD5DFDBA6EC952A4F37
948B63263FA4097587802F6C66C3BC6E9DF45A22A24877E4A4499697D46B779C
8609E85E4BCFE84319532B3AC9D62BD413CC127C8DAEBC28D7DE5CB57A30F23A
2859902409CD4FF43EF6A99E9FFA2DB4113C12AB9C616F074276C4840A546A73
0D24D8518117AD200014839545B1078F38D7284FBFC473C510CA28AB90147613
F0EBC94C3EA0001043705336F16E783FDADA674B361F951D5152C0011FE0BEAE
51286E4979DACD3F5A953BD9E918D5E46449525A4A597FF0F091B2B4794752D7
EE5D9B94524DF768ADA1377760AB1ACE2D780F5624CF53DE046A36EFB35B52F0
566623440D7F364C4030648BC39783FD7AE189510DB572D01093BC4C7EE0C09F
389FF828AA7585F9B7FAFA718DAF925AA837B8C0B647161E5C322CA820521400
5D234795C9DC1354D1C0E5ABC997C64F3C84D2C3B7581BC9566EB6D012B6B784
F740B8E0B360808C984DEC73EF57328A2347BC752EB0EFF7BE8B688A3622826E
C83CC42DCA4A26C504AB95C5232A86199FC1295D8BC52BBA9C5089A346CC5760
009233FDE0B38CD4EC1D07A9F817ADBD1AA6D303AAF94D5FA688675B55D40FA4
3C6D97741D9FE4C964FC6D24A091A75B5745DFEEF5C1162900B5F1EF59402CD5
E4D0C3953C9493D87F46CE4E9C7A543364A9B82B34154924F4739C650A8EF8D2
38C73BD6689A0657D8427446E44E2F5C77937234D1D6AFCA63944D3FE5126940
8ADA00FF11BFB205B9A42EC1F50B435E4D44E14E22056FEA071D0061F16D8879
6C4BA0C670D0E715ED9333A0FBBD15F19CBCE5F93259A6C4A8CAD50B9186BF14
62D3AE2AAEA8A45E9A29BBCF83E95F0C65B2D60169538EDFAAB935FE3468186E
CD90E2F15FDBB395191E6C4659910683768F80764D94FE8A746FD06C08F15F97
3A528084C73A3416B7D9498707C04E9115D411FD74AD771B5973E6D0A573A1FD
2E01CB1197990EDF8444CC83F1AF789DCE5C7F64567C9D80D1829D7FE5F45647
ED6B99C6D96B728840A77AAB12DF037473065B62E9F3775CAEDAD9508FA92283
6FAA01D50CBB9B12B543AF2A86A99F4D544B8974F01B52945FC6ABCF3ECD8410
335AE6CAAA4F740EFA8AE1742B115F4FA7FD8E330D0B86B191FF5B038A5D0C32
91053A42460468F6A1700953700663A85229385FB9BC726979DE858914A95826
CB2A8F0F17773C8DC86EDDB610CA36C8A6051774DAD79E4E3DD10CA06A919430
0B6FF769550AD34A047DDF4DCAD48C79C13C76BDB9A98E254804C9126F6A007A
D697659D0F4B9B7BE0BE1E74DE179CA649DEDD316A452509D2804B5BE0F6C5C6
EF94B0FC821BF1E02C91C149EBC163C14366CDBF3C81F57A352355320AB4F3E3
A84E4B60EC6CF57A1A00F90F224190D7BFAFF83C13AF40E46F7154198D7BC2C6
F10586634E82705468F167630971BC01DC641766DC254D9E9B06BD62DEAA105F
CD48375C11A3207B5A381FF8E1C163001513CC382BDC172026981E9CD05FD8DD
83503D108FA0BF72ECFAAADAFEE78E1D8D2B9E94AF57AE0A20570A74D0C84155
353C360C86120BE8A6A2B0C9D6550784FB8929369CA329F6A6D89A7066E845EA
FE223A6D26B84EE6B6ADF0D9950A195F64FD3209C6D47B46B7708F855E501D4F
6F9B939EE1663FD02D1E1D74F22C4DA4143A4D523E32A0A371A51F64CDC4E06F
544F2055F67F0ACD4E9D99C47877168E8977CDA919CA86D82794F04E7E98644D
98246CC6E5F85E045FE750DA4A9B403FD293CC436888B75949007FB2D0557A88
D362014EDFD3445233A03A005D3F670E67B8FE790851B16E71241433FEA5650A
3908D0B0BD195F64242395E6C807B7D00E12CC9CA711980842040899809A443C
00042C681FE3F9BBDDA09127551CC4780E971D3952648BE3ACB42BEC6D5B5DA0
CAF19D34A8BD8E904BBB589CA901E79BBDB311C102F70F1D2FE7EB3609B14BBF
10E66264FD1E6EAE175987CC0DE53E3799F86A71F96165AA3EFB39B7B13C5FCC
011F38E349AF6FB76AC51841B39F02662AF720242D74012508F26C7003A39A3D
65A8CE04E1583229836D0DD8CA390CFD14E80FC0455F34F89764223F7DC55BA6
69B8793F48CA8E9FA4C89E877948CA4CF92F1BB9E3825B748C865593BAFE4D25
F58B6C3937F7A3D8165EDF4C74CBB662283EA3FB964084B345CC06DBE98FE9E5
2BDF3CF8FEC118F0FE83A621685EA394047116ED7629C74E8171EE39B9968596
DAD2FB69E0425E6B527C4E25D28CDE453EF7A4E0988B62CE07D14F620B90A67F
273B311061BF2D3CE3DC3A689EF85714824E939267229AAFDE9C8C387F15F064
F68627E32241CA1AE9D54F1E3710F18FFA2F912FD822B05DDC146FDE82B9FABC
A9A986683FF9CB2E1937937AFBCCFCFB821CEDEFB4941ACB6488C1A608FA21A2
EDC0D22ED3D5F6735067D8C0F31C456BB35D31B98E4DA0CCE45277DB109D6A95
87CD6B0C5BF54A30D4E3072F05FEA72A3C39AA0DB177C37546FF0FFE8288920E
35A3B84D87A21F5043A04BE41F18B2CD19AAC871DF4CCABC332ED75E1657E2B5
531B227A3879412434F68276BACEC7094E9C4779051CB9421DE1DD7BC5D109B5
2B7093D785F43FD6DAE693B16645D354E54ED6C97ED4F591623645C99097F1BF
66F347EE1D6DB95461595C9938581921663D3A3DB29723187596489A8894E037
3BF6D0E1D56EA24BEE873E68313353CCEF779B6200A1047B20647CBC2F42292B
825608A05FCC5A87AD774203738D9D144919E98326CE01E4BE6B9E623761D24C
0B7CB02DD90DC8A2CBBEBDCC9B7EF3CDC194DF7541D34D08480F1A1CA16F2E2F
8A6A4A00EBEB709BB571CBD6D51C00B349268DE077F06EC59482927DF994271B
1F39BB29575F0D72916AF4B385735E3409FF6CC8F3C38638084F8F4F7DA8B4AE
EED926F2DEE9A34E92E3925484E3FA45344C7FD3D4D3A68B7A80D27AF606694C
DDFE9C6DD15D99ED151912F966FCDFE7AF5AC66080F745228EAC9B0EC2C3F650
1F4BA0C82814EE1605F5CA9D62127553EE375832C57F9ECCF6D8C3FCCDDFF2DA
B3612678BF24A2450F6E99DE896F7F3E4563B59A33344959BAE4CB57E6FF0CAB
1468DC84FE0F3F92EC4E129E00BA3BD9CC0870FB6060AAF40EB540CD50D3198A
9127F8B594F29CCFDAEA3CA1276BFC8969DA9B9A00344F1D4D782CA0ABA98754
1FFD5934A377B4E670B933462098578BCD5050EB47A9F4313EDADA4845CD6C72
77041939F7243D600CF7EE179BBD3BA15C58FC4736583A4EBB71EFF383DC58FC
1C6DAA3105C475E5D473CD591B11F1282E9A80CFE218A4B5FF0264F1EC9818FC
81ABBFC92DD26021738105BCED3E94CECEB2E6E552D1F135733C7ABB72957138
4824567D6D1B2BE5142DEBA285AC0DF74D696E55B08B672A1118DAA72C369DAA
397883491E11171B2040FB6637140BE927369F803A4FF311D52A74289065C1D0
E2663FA57A88150633F3F937E9606D75A53BC9AC8678874FC3486B5EC7D278A0
D5DABB7B1BC64C3BC771C29C5837FFFBAD42F40083C2E412EE5E6E050E99E1DD
8C3FC2A00E05F0D6076A34A4B833ECB05F190B1444E379817760012E1331E9DA
B047409E478B58C1E5D8811E1799E40445E29A10318D320D2C81AA5DCE6620B1
3159F6F0DA988C6FF06B7DEF84FD26D3794264CB02B2E1B8F18CC386797D2A9A
40DD7EFA8609D2E30899DAC9B8553DB4FC96FC35ECDC38C3E3223F9E340C6745
0386D3DC4FC1E20A83DFAE731EAD0363A7BBEC37D8A9CAECC16CEAA06FED505E
C60F7460026CB419574319DAD73DCF5A465E9F002FA79AD452E2CCE8D95B6A53
88F29F07A9F37C84D143DEDCFB27AD763C746E1814DAF2D759976B3D2246EBC6
9353B083453AA83AB1657ABADB9A30C6C52A33B45F9C7B9361F7C7F4EBB939F4
6ACCC32B19C5A5886DAD4EC3D83D0BF1564C00C405693F2832BA5827DBB7103C
432EDAEC18CAD42166EDA7834BE592C3B7C87AAB2CBBB8A87C093937215405A4
E4D84599E4674B52F65CD9EDBBF10DF518D2436969674D4C79B5F77B8D6FA2E2
26B8B932A195CC0EEFA8E39744C2315DFC0050BB4DAD4B0FF3779D39D39D1205
9B64E8C6097B5281C359CE4BDF4907ADA234C6DE77DC4957B683947D54583D09
C01DC47D2CA3D7E500C9BE47338665F1538F2F645757A6FECBE5A1590A6EA831
635F1E7946F9ED34797866D7479F81B25C8B73BE5EDF2461F63CAC91E253D461
23B796965124AF855AF2CFF8EE38436E7C68C48BA02E9F78B4EF39EC5CC133D1
4C2E464C13F5C41C3C5F8114A5650C07838E0D553E7E840AF3EA2B0E8D47E025
299E048097B778D17B0AA1C672E2020C946F0F8E03A35E76E81DBB60E01D4CDD
FC2E9BE4709956583F3B9EEF0A37F30434C3077A2428BEB3FA5E46ED9C413EF1
95DB3159AFA04AF25F0A82F1114AC09880F80827DBBE528FFC7FE26EB04AA53A
EAF4DBDBF6F0800EBEF9EA787C014E395791F73DC3A126EBEE67B036D93D18AB
91F771A43F256843EFCDCCACE4627CFE80E82179579BFE305B9AA04A6E9528D7
57CE24139474F15CA1082CF6930F992BFC83A4D983558086958FF839797DB451
68A9F3FEF6B8BEBD37ADA98518DD604EFE6715F50897F075509F64E99F3543B1
13D3A4716D2FC8CAF0DAFB63A8C28130E1591BC17273EBAD6AFB646F54CEC76A
C98678B54E6E3A103F615CA05A901D8B991528CC1ED3B30CDE23A07FFBB7128E
66FC9D66FF7CD9538565425DCD900AC231610AB9789DA62AC41EE688184BFE66
41C0D34DC5F77FEB37954682979666FD919D83DF85BA4F4B14D6A77044767539
C0C38F4EF65E5D900353EFC3A7D5BA1EB1F51ADF85A244CF55CE0EC7494D4247
243DFA8385DBC5760B397F0EFEDF9EF7769E0A6E389AD0B2A5D10CD4C41A4009
7EF753FAF0128954373F9718877DA7599DE0AFF6ABB520C27B9B698116A5787F
E211379BBC3E33DF49A031282BFAE588877B2A9A6426F6010B1050C5F50CA931
A8AED0902642383EF313DA6EFC55D3AF10B647078CA66EB88EEA899385122089
2D97DA2F0E5BB1BDD5ABD40D988B018FD18F5ECE08D9A100CC4229A4E33FA93A
0FDB1AE200E2F6C6B899AD9D53871027450BAA1FC67517CD5B69EA896122FDB9
20E721E0DB58AE8034D8C75D758E668485BD05C356D3255479B96DDEE53455F4
1AB052F11C588936C1837380CBC611ED14FB2F017FD1CB7E1E23C1459E378627
F323C6E6F04912979B3850CAACDA744B25D6FDDD4207C80A3636F3B7AC37F415
FD2F8EA734FA949289DAC5813D5C91D4689F7553DE7432E5B553BD7AFC2D8E6F
3071A191FA8947D12382B17FDCEBBC82F61E5EF76E8793195B9D6474F0070FE5
7D16CD12153DE8F377028125088457135DBB27457FB4CAE16197347611DFE63D
A3C7C9266F7ECB5B7E091D1B11EFF73F0B5E7A5748C8AFB555D1E26CCBF43EE9
C02CB6F255587300FD433C3B4D9FF1E96935A959D465B74109BA1843085C27C2
69C751AB2AFE4B15C13C6A0664475C3A9C192169487905DC47D2022934989F37
1A8F30B1B39DA9B1F203A2814A200FFD11E14CC70C954BEAA33A81A5EE27B922
0C89DF8C7471DED4067D1AFB8A49609DCCF844AC7E03278F56A07C3423C5B2B1
4B8D584BA7468DFECCF5BE1B12A00F107E3B1014C01FF888A9B1E40D31C73F5B
4E253538C5E0D0672F042A01EC5CB1BE74CE9522C06896B9E641673A87B47BA7
D4A91ED4903EE143F0FF84E3670B8D1D046FFC2E8400E63C1B8315BF63C3BA9B
849EDD5F620C7E451943A157C7CFE362567ED47BF94B63D67A9113921AAC23AB
1B8F7DDBE6F6DCF9A3C3CED6842C356858594C63EDBA2EEC06B6756F2281E040
0F776034AA7370C867BDF8F8CD40540C3C28B45B30772EE9FFBB8D00718C3430
10FAFA41B507DDED01318BC9A9C8A9E8D714B1A1D6BF89D4CB98136839AAAA92
BE85FE2786437E6FA70BA428073349AF15F2DCF43283BCA59F109E9740BCDE6B
C5813EA8EBDB20FC0C7682845F3E4266B7D327312EFB770916FBAC97E6584C84
9A9BF389B403CD6FF5F8366F9D36FB76A217CD9C3F62414281BCB53CA46A8161
D536C2D0011A2B12B23165BB4DE936CC3A4BF19EA1C5D6C0D79F9DB3B28A9266
CA8402BD985CAB49BB651D6FDE79EA92A7A00FDD42D5701AECD409DBEBF0C9E9
5509BDD99A537F5C974ADEB4C564C26AF25696553753718AE0425FD9EB6664B9
516671F04ADD10C478B7F8D9A562487A9FAD8D2C70C21A4F3ED7F9F55C21A04F
1A6DF8168FA2286D8C7EB897EC741C41A0BDB45D751F6641FDAD6065A36614A6
86D6A7B3543205DFF5A31866735EB1A931953CB0EDF319AB319EA996076E3AD1
F6363E18CEF8715CB464AA160792A95431549FB6A4ED42741F9996D7BB1EC714
A2F30863F354F78FF9D34A41EA24E7A2ACB665959298984C7B4B72564646B091
0BA9E173FD2222DDED8C4BB4813D97384DFAB387977946314C2FD50B1EFABC3D
291F4FDD99EB7C0EB047051BE634D62F6F164085EB045535E44A67A143EB6391
3019CCB8D949E25D7DB43EF32CE21205C9B33BEA2D1B94DAEE18FD20F24BBFB3
A2C968EF269DA1ECC28C2F9B079ED3CF9C315BA95779D124604AA59F92201234
15DE40C492F1036351910FE6B93342626EF81FBFA9AED252C2CAF15D3A748549
B6F6A61F79CC9DA248CA8A674045257BF43591473F853FE3A2A43B7CC317DEEA
02FFC7B4CDCBB6A5CE017AA860B96CA41C168548C5076500FD0985C57E723DE5
5A2ABED9B40D7BE674118BCF391F130DEA693AD05F6FCAAE4BFC1F60C355698E
32DED416EBF582A3D80351CADC60B733E50FA695EA1AB682A056B226DB767392
0A2C426EEF8DA67E650EB7B1DE643531FEA419BBA8067C6D0E964143A0906762
197B8DEA764ECFAE0BC6723E560B0FDAFB34E8AD48A2E4BA5979A58CCC637332
22D0687E1BA843C2E0831CC5C994179AF2BA4B7AA7617E2C8E789C621BD307B6
477A05334A8EFDF778DA38E54F972D6A17B932EFECCDDE3DE2B354F3681BB1B3
E49E42E7B668D99299AAFC1A4965F05C14791FA73964C470E1FA471436D8C6E4
4AC4C5010157D94FC1250822504BFA173CEED4E2DE5B7DA75EC58D886E9D64EA
069C9432AF8F2B50A91B0C7C55571DCD924B0C089E2515829D461CC7AC00155E
932FA3F5B34063E5095402C6368C2AEBE26D3157EE874CCED4EDBDA26B381A13
DEF3C35E4DEC459759D7D3575F6FFCC6B27F94965BBAD1D2156928CFC8EE865A
632AB4A611CAD82809B7204C28F45A55EA03A132AAA54B5AC1B745CA3E8A11FA
F9612B74D2950015F2EACCA793E7888C26EE723E78F3C894D26D13AAE036CEFA
B476721A2E3A65C2C5B0C7A8C8B2206E76CB6598DFD42AA22CFB939A914FB803
C324871E0BCF73B19653C3BCCAFA1AA748409D3C1E1A165DB626D7429709776F
04C4D5E4D04DAEBF5C475C7C3EB2EF7410CA53A9034999638C65F45B0F57D760
0215E8FC2552DB72CE2772DB7D5B3A765D09AEE0F0178E20124CFC1D434822CE
24ED6438F2103F4EEAECD38BB01B2C6F42C4C1B222707A748CC97785174C6E81
A614B95868CFEAD3BDB4FB04FDC4FE2F15947DE72BDE539DC79E2EDC7DDE5151
78FBC21A3BFC4E230375D47F4691E0E9E35436DAAB48FAB07CE7C933BD984EB7
13405D2B3F481244379A40283186D67327CD487B978FD50D9BCA2508355C508E
8C22EEDC232CA6A04E928004BD90C2FCDFB6DD8955D2D3B6FCF5943BF5BEEFF1
F9BF99301CB61CB5FD95EAD945BBE7141CCE4BD29366A97A5D740CCA11DF380F
90656717F2270C0F1D1D5A0C48774E2E3E1308F919F597CB24D48FD50D1EE2A9
FEF854CD6238126A0B323E6E84D554F59DB81033F4F4AEA1BF99F8070976D754
85DC4DC5F3C3D020E853171B0D1612A3DFA5264D6B64371271FCB4A74B2157AD
DE421D5F51D813B577B8741B68891BF8FF9BBB484DDA6371DFFA6222F88F0886
C7F8848E958C6F74CBEFC62A27FAAB38B52465EEE09E12C4482926B22743E5D1
A94A301D3ABD6010E43C4EC19A0D63112FEF67D69CEC2F78116EC8583ABEEB71
D9592AFE1D648C347BD72FF30455B7E6447D19E2611C39EC0DE9AA9AF9629976
79755C4CBD2D05F9A170FC269B792E8CF7A0462248EE95527AA116CF31B971CA
F5DBF65ECCD01FF04E6148A80BB2611AD6460F73243DB763DEDBF476F3516136
578D66103E6455B244B9BF9C400BC802A021411BFB80B334C4BD614EA7496D58
CE8BF62247CB10F893048F37A2FD1E4BCD68D656301406C1FD474D98B7555DAB
FC469D633FE91FC8103AC6DFEA6F007AF4A42C0A08C4DFD62E596AC1DDC11E23
572F8A2F5CAB5CA87E7A6693182B9561E329A3E67F23EFA6DE495C7C9D966924
F124603446F01CF73CEC5B7877077E421392293506C391705D62EEE3CF25BB0C
4EE70CAB7C5DA7C9BCDCFB67F1B66DD991E2E4C0A29284FD2C9A8740851EDC44
2490FAE83FAE3DCCD4447BE0C2D6DE59B1BD629F479924757548799EA068E215
35FA1B41FCC74614129FECD357C3BE8A07B61BA51F5781CAA9A414AEEA78ABC1
7DDD10E2B4D776449896677E02D47DB24D4967158F415484BF9D6A2AF010F8F3
BACF583EFBE1FF3856DF768AFD7C810A269760DFA831CF3CB5D0A73CCC6B41CE
8296FF0C92CA794AFBF04F8BB3B65AFFBD62E1EBC63C182EFEB487A03399B496
9F863BA0A83115E8AED878484FAD3448F4BBFCD65D1EBFCB6494575BE7C27F44
B99EBB6713BB8306E5B5A0947A00F952DBBB63C0DA21C717E348E0BE63120324
CF402F90BED39B54D866320877A767FE000D8A3386EB1E20F1194FD049F28B82
F4C2D73E41CC73C1C9F668931E64C8D467ECE84CF7A8C288F9B22E0AE6685047
D8BE005ED260ED9488E270BAB33AEC2A3A055F6BA3C3700A868E92B4E26D499F
BE545C804154DD343D0FCCA88D299600B0C26ADE2DD3774D903024A13EDE0D58
B50937201CDA9C1EA23BF95C4A3A8932F7D47100FF8A7D4BDE1BC37CE16625CD
FF321ADFD514B2BA1B66E7CFDB8FC93B6A8EE952D196EEFFF2D9E6B8CE8CF9F3
2866ADCA85FACAE68E9C7954B512463A86B1623BD5433F6551DE2AA71475089B
3D2BD411FB9BA4C621F23724D73B1079F7FA07AAFC9BBEBE2E4AC9E2B9D11603
4191A1A804EA935EF390C90783F6DA40C59AE09ED22AE971884911F452C33F94
F3A9165CAEAD2464D8D80FF6C61F4410BE7699FF1E5E942546C8A4CE88818DBD
E72D030D8E884D315F56536F6A8756826B7786F35D21E3098DC9CF8BBE54D707
A866B52B55E06213C9491954D1A8509555EDD6F3AFA7710F49EB3706A4BC08DD
6698AB78D7681FECCBB4BABA1BFF3FCB4D8216D136C4B20B96065574316F2EE8
2417F28EF33242AD35C5B3A99045B99EC805E25F46A0C1D1C281BA23D096EE2A
4B193612337A6D180D9FA91E94F858DAD0662FC9CF4D1A5F32B6E6F0DB26D2A2
BEF33383AA86D27BEBA7169F949B08254A985398CF9DE6AF7875967EE3CA79A7
97C3A4F27AA9924D6616FC860CCAA34024F5669DA02ABCD1BE3963D734D64B01
82A6CFCF064906AF5C9ACA3FD626CC47D247CC610668FF164EFBF2FAB76ABC57
935C81CF7CC61260CF2B227DED699ADDE69F0C644DB1B12A15889917716A5491
0E71FB6278604A400502100D8CDBF2947CE3218574CDAB399479F824738B690E
8189691C1EA942403339023DBC4A50793CC443112BECFDD6E018E867FDA253BF
15E1ADBB05F04614DDA701D1CCCA3404EDE621A85F81C42418F86A00F9E86AD2
055F1A4587DBA063C52E8210D6F5B3C5C23A608558756F8622A8FA6643FCD7F5
5E72948D2DC55AFC5016FB2C4CE14861F1909488B3C1295FB381FFE037D9126B
AEBC8B4C6A7EC8556845CF97062549BF859A34ECDE8AF4FDE1550774A9C670A2
833CC6DCE45D2E4898BBD96830A113AE69DA214B1AD5EB1B5B430AF25A20A0B6
36FFEE11D9F45BCA484AAE98AF60C2AEF608A1119AA13FB6FA40C2B7FFA305CB
793241192FD9C1B01AF5CD5388A0802D80FE1FB499545814BC2B3B2ED508A554
7C4B8B182CBE28D8B46C0FFA3AA93A437BD5C68850DC71A816B0D510076BC298
CB824BE6E3FEDA248248457A91624203BC9932A5AB72BC6AE0FCA66760484CFF
4BA51454712FDB8102D968755E73DF40B4E922D522E2CAF63FA0A8D22AF65683
9B0DBBC50EDC121CA1ABABDCA567BB9D28CB3E5AEC098EFA7599D096FC928471
D2FE294C8173E82B508A73108E3E857C6FC2C1E3CB2BB26E7000AC331BA4ABC5
12DD810F40E9426C8DE97C2E08CC0185E1B5040F60956E929033853C3BCD247C
17947407B92E406D62814013DC8B7D07EA8BCF6B09E1993EEFAA3FCCF263FE48
D2F58612E2E0943E125B1209029AE09E251D74FE3748704DEB2E2B9758FD1D18
BC412B0D1B1410EA26EEB7EEE691453DBCEAACC6A77540CF459337A4767D25AE
29D2578676B7D52AFDD05A75ED3B76613CDBBF70DD34936C6953124D7433EEB4
4C724ED69C8697D06A5246DF0D089BBA43C39DF8A664335F67B9DDE36DBA793E
C77E5A7FC825D34DEB46C4AD0D21BFC3A9A11405B0873D4E92793CCD7B29380E
EC1C415FE398C7CEFD524F132A4B84C65FC4E875136FFD709A15AB5222CF808E
EF614A4179397FBCB81937127A6FF5F873691FC0CFAED955407B4A4A29E7F1DE
E97F58B29635395093DC0FE475ED0F753578F30E9371DD9CA0CDC20C91ADA66F
BF34ECD143EE0A05C25A8B88A7D5631C8137A4429E4ABBBD40C3F3B7513C1CB4
AA3659056F519B328AAFD7EB7C61AB5B5E99A0AA08A5999B899A7A8B565A404C
E6F153EEC4FDC93D0FEEC724C9AFC18168AE7D0CA1334C87FF168A700D04A730
3BBC67E6A2F4D86D0A690E637F0954645CE99CB2DC823134BB06D2AF45F42DE4
DB1437C45AF1C4FCA0277DA2CD4148CC8195477C862FDDFDDD8B976210456F13
FCD152FF9102718D0FC57EC5B6B14A6A3D61AB9D446CF0D54C7E7AEC55224601
E8C869921EE29D1FE4523E35F76D248774FB0F3625D327174D55594839AE3421
349C49878E3945DE280110D3161CCDC1452D0C48095FD5C0F11B0EA6601D83CF
A2183777A39D99BBA1F76ED06C85C5B8042D50FD4A7194CCAAE06FBB4378266A
6A1133D8151A000D95E13EEBAD4F215629875A951E28C90B605565901359632E
5C132EF0798C4181D98F3A8C7100DDBAFA847E6CC4A1E70CC7CD343C785A5CFE
027D7FF581F639942945245D8F3401965C9467947B70DD11EA6E1A14EBB1BBB0
62CE726E106E133718029EA62939188C01706215B1223128DFF2F1BECFDC5EA8
010AF57E4ECF56C9B895C2B0CC01A76BDBF90C69D9F21BD06D7C952B12E66466
62A651EE4185C5725607F0118BE73099943D762D20ABC42DFCCF4ED0E151DCDC
69D9DD0E215A49782F144DD9F51611FADFCBC48EF1AC9C7A7EC712C9A80195D4
C3A837404D1729BF073E5071C7F434AFE676E22268D7F0CDA4C121A77AF3F5F7
9161A2016A8A31A1E5D8CD203F49EAE52A38D32ADDD4F13836B7D53379CBB77C
99C5099E69C8798D2CDD59871A3049B5B17E55A6E677F0AE7D565B973C2CA3BB
7BBAFD7E3A80CF8C2DA31500445B3ECF6C6035F883EFC0DF2AA759A0112A1675
F9914CE626DA6431204C74CBB662283EA60520AF1B3FC5D973408F12F02CB8ED
DF6CE870E720C7CD89FF8FBC05291063120165B4379B1A4DC9D967DBF300ACBD
89D50D48DAEEF9CBD343B8D23017AF0E768DE8D3B7AEEB6A7BD9A6606F445444
542B9E1FDD366E1A6F6E83E5FB15EB0718985144596D3F26675EB99BE87FE544
11EE19827EF69EC670F9AB7C93E25949E228C80181E60F8CB130D5640E351CBD
65394E3E0D962690F98D5F810E0CC0CE93ADB4E2FEB60E28FF6D4AF0010D422A
F8D62F0BEEED200BBBC5CA508A4DF406BB9A8CF5A98E7DA172BD604D6734A992
F90C8202F59731DEFB79D6113EEF0375A55B2AD26E1B9891010B29A54AEF93DF
B375A54A9FFAA8BE2E92C3A83537485B3D7C83EB1EDE11C13A6E1AF3EC5C9D4F
03D038DAFC289873AD62E2E8ECB211C93EA990B3B3C43B7AF86F4EA27469108F
44975B7A94588215878E6866C71C6FE5F3B6CB97B0F3DD668BDF76A5F474B850
CE6400C544CDB707D38318331C87CB83A65571AB482E2DE257D768E49691D5D7
8224FE93C933C34C64E6009ACDE37643E89D5BE4215E15ADC71206D284543B6B
22F3D56B15719B27BFBFFE79C742585727C12F16E867F7B692C959CDB7A45A98
B420011EF6036096398D8D10ADD46B3FCFC12980C2E8962B76FF010D2AD94168
B2D6D475471A0373B8D9B96BF9A5F589B02817E893DF04072B5DC03535E54BC5
429AE6B3F66168F20C1495C063AB529DD1316EDD39528AB05DD4A87FDD9324B4
89B5ED253A7801E21387628366BB15669E37FC65D5888DB9458B8C803FB2F9C5
7701C6C930B7C230A739E4656327AF5285A8BEE4C5272B15C12E63FB163C68B6
13755AA32928A759EF4887FC5DF0B7AB1BC8DCE622DC3FABD85B0F740A559E54
26E55FDB1971BDE1A6280F1008E54F55752CF017F9EE9AFBAA6E8E69A5E44A9A
DFC78DAF0D43570783568D6BB73A83DD53F4D15F219219825BEA068392E9EC17
FEF6048173F52CB3EECA756C4D24FC6054D922F59B1491D71904723580D78094
F93EDF28D317E2E8A88736756EF3A49579DDF488E5850C8DD4EB768A107FD11D
6C07FBDCADD19D99093B81444B8B9DD5A72FD601B4C22125351301E72A0F5EF9
59C8999D23D4B53CC87F94ABAD0CBDE967E0DF4748B39BBE76D32933BFB3185C
3972FFB69671FBD42AEA82D51BF9669126F15AAEB8C9587792833E94C521330E
EFE173B3C0C54AC0A20438F0184647B8040B652D4501E140EF3ED7A1B9C2E885
C88F882E29F089C3D2FEEC635A9F1E67D57FE919DA0F8D433CAEDE90D12335D4
E8D2A7C864119F4A76CC251077A31A0D8D3DA2397328F6F57B13A373A9E0DDCE
6E0CB20084673720DBBE673AAE3772C82AC0ED80420E4BCD787F6C1979B4FAC9
E273105CE6378A2ED913F14D20C272D14060533915A9F7DF1C9C512BF46E5E8F
8DE7D91802CB02A1E204104BB33CF9BDE4FC610FCA4FC9ADB098BC3F1B4162F3
AD8216F8DBFEF20DFC415BA88A8AF0C5D5B18E333F974567E89D1BA848F9FDEC
C6604E7D488ECF152B69493B4395A3191D04A56EF39F058FFCD7E189206F6568
173C34EBFFFB1DB6A72890DA790C2691A7456F566A83597CEFD41F47078FEBC2
62C5E48B2E6766322DBC0244B0797D6D1B1B8750ACC4A585E0A394813216C09E
4442D08255CFEC77B4356BF8281F2D2B9455F611A4113AB278EDC7A223A7B79D
E04D5E3E9E29E2C6B2A27D0F7DE207733628E1D422DC5B6D2629ED8A93225B7A
50361D743D990536B0BB982F75ACF33109F8AE7ADE4954D0B1E18022F0F9B9F7
42BC4FA62D0F0B04F5A4F9EBBFAAFFB7CC416C88A4709DBC3A4A5914E16F20DE
B6E28405DA733CA24B9258F3D4BCCF3638857C25C73B78F5C35FF0DD1AED0C94
D40F3798E2D544C5E1B1EC8AD43FF8FD3EAF38474303ACD78C5DA2B784C8F19E
B20D25FCECB0FBCE04628B2142836658B42A04DBCDAFFBAA05DDB016BBA5D319
0A875FFAB99043D683C060DCE93729098B15814D6B80E7959E49AA24CD46FC03
CFA9F7FA4985EF3243D6377C8F2B8DD2561EEF396F36AF158A0D81A491ABEB40
18196CA017072BBBB3CFCB08EDC07A3A78A397E95820907D80E6F3DA733618F0
317DB8FEA73BA241AD8A569A91A29991F3BE8726073C5E069241A906F0EF1588
6DFB61E63C16FBEDC1EB396048F1CEFB12520FF93A69F6F9AA167135C81CC037
0D932C4A4120E2197106766636F542497B64791C7EBF6F454E4AE91268CEEF58
C3CD492EE4DBE92CC116D193A3BC7B6EC649B9923A92343BFEB7CC1CE9BECDE1
2CC0FE27A46BEB41E9CE8687F60FAB8BA54F5A5CAA5E3469EACB167C30F7D776
3F20D741FD762A5A78F36418BBEABDA877B61551AC2513F418199D8679339352
258C6A96EBFA86A669F671B2056B5206CB2889AA4D105F792699F15AE7E181FE
3ABC4B4C70E21F3AD9A809754009D7EE630434645AD290F47482AB1E4868B8F6
9B4B0EDE5FDD27935452BCDC35CAA1362E0BA23C6B248E6C72FD1AC6CF819110
E6FEDED3E62A92EF184C7B90328D6A41B74ACA861AAABDE11879E3ADCF4CE614
7FF00C024B7A4389BF54308B3DC9D10738D919BB73128447C2F00C4EE4A1724B
ED4905EDAA8A46A337EA53E087127FAE896063C7418B4BCFC127A9AB30BC2073
A5FBF9F09355BCD6F436C7390B71822D2D464A10A1B14C33FAFEB7EEB86605F3
0BCF8E570B4341C3751A10FE6C3304EB161AC14AD4D5221259538F0CA3263BA0
B22C5E531A602A003D8B8116D143E653C64F79B9B48DF5E401CBEB5BC55FB06A
1720430E0DE1278C559D42176DEA4E100EA4B74E3B972E55D57FC85CD2C5AFCF
02DFFB4445692A4E11D832EB0138177F7BAA9F7B6D47FD3DC952FE149189BA23
79384322597E9E2CB635DEF9BD7118C237E43BCF4234E33B1895F8F935628480
AE0BDF7201D4C38744B7AEB481E30CD562DB316843A053F82CD8E6D7EAD84B4C
7121148F4213CCAAC483B43BE2A9763FDBBDBBD50A083A6DBD7AE08722DCE6A5
762EDB87EA4AD820C35920123352525E2C91A8525079B97D9FA6FE5B7DA4A263
813EEB043EEDDF41DEBCB1FC8F4F3B288515CE437135700D026B4E967263E234
E7803297A2737C39EB7D148F457D60613BBA2AA0C064D2781D90569A2444285C
D25977A670A92B3DF3AEE8D8B385478AB2ACD381539802981F4770A7A8CF68AA
2FDB9A09A73FCB008956FDC4CE39D2756CE58C51B7EF9795E9EC65F8E9447202
C94B089B617696136B997B7696988A9F2B3AC897A10789DA53D2DF6469A48279
4DDEE77B66101DA8FF6A94D45653A3B13169C530462119C3AF991B3613B485BA
2B63E25767C311C0B5985FE68D9DEA3C0DBCF7C332C1413109E975BFFF13E56B
C96E44060C1D4CB37236209050865DB7C42DF62364C634590D81873D531DF4FB
838434FC4B720582050524D3B47674AA8DE3B033E16BE48F51A34D8ECD2F289D
7397874E1BB50ED4D6D27399B516B372D050288238FCA493448823A4D524A0D8
95539C05B4FFB0432DF191F3FA00C5DFB99BD8677BB3AECC0277307A20B641E7
7FE3177E92E69D23E9FD278CD5F26788A7E5D8476DE8E2112BCC3034F758606E
5E751C2EE2B67447BBE17AE78CC09F62624F6F7CAD4242AE6C63D047AAC8EF82
134EC41B780A9C1070D7CBAE9BBA72E82EF9914D3AED6D1A553F0E4957D88948
76F46A2A4BAC73AD3C0FD804C49181CF8796D349B8B2ACC2214FCC5FA24D7BD9
FE7580E9094F9FEFF5E54E2CBE14A20F56A27B70B9C7DCBE9300AA2ED8324FC3
7E8EE4EF7F2450F67A96D44A2CC71B3B327A66682F3C22A1B53C2AFD10D395E3
6081D1ED265E96E1AB4715738C62BBA2C6AD31A0D44B1E9FD3E9E8CFBC300CBC
8416A3F738EC0C9FC2350C3EF29619FFF3F800BCE7F4388F7B9FAE2D16C78DB9
78CA99B7CD78F3DE7518A263D411B0A68EC14DBD5769EE77792DB6ECF45EE984
CFE8D8505BAC70FF538C735C2E787D64F993B882B6138945CC6BFED98F0D54D9
3AB3AE38D3F24C63EFD772D6E12D4644F4BA8AECF2933CFAD5F041561B6E99B2
17713C1B7EDEB0675981A56FA092FFD7E0ED86A61279D5420956777974A0D88A
7F5668837D1D8504766072E48BEAD594361A53953D75312631D6F07794B1D853
251462B09BD7BB64BF892EFA6AFBE9077095AE36C2D6BA7DA1206A97E91BFC10
A5D5010758C6BEB975610A063D6DEE07604A5162294547525ACA6C964A1E0842
3D9BDA91822376234DF91C9B3CCA3AE3F31C1198BF3F62049435BBF6C4772ED0
42F0A9F8DD7CBEBE018E1F056476FC098BE08921A09287295C79AB17E0EF4C7A
FB5ECDAA96392897FE980B9E3222121B24B97DB7866E8CE52B81CF44DA56FA76
66BE037BAFBC79F33E07B315ADF614ACAED323D8FC7BF4B60F3312FFE826D8AC
AF741FB1F4063CEC62718EDF4CCA777CD3B07F91EDAC559A220F29084DD86CDA
D022DACF326AD2F36FD2EB62CF4C2B70796A23BE1941E27DA08DD533DC0E8D85
F9DAFC5FD842F417265427E6AE1AB79B8A2E285ACE63FCB0B137685611FDDAB2
E8FEB60020FA526840EF5367946F3DF67C10B47377A99EBF027B1CC421D34F98
B69FF4C335B95F4222A8BAB77664299C8FC166975ED6FB9DEE4585381F74DD1E
8BE9F6E73E463E777B06DF048FAC43FC281ADE45FABED5C979A0B13651191055
025C731C764200BAC03D1AA472AD0AC9E5E0237AB288B5E6B4F9091D3510AA88
179260F7A7B648ABDF6D983D1E4A85C06190EF3A270698F6B9230D2F73C76DE6
CACF4C3FF495F0D3B1317D4933E1E097ADD2EC8BA494F850BD820D668E9F913F
1AAF8216CBC34C763C27238EF01754016A12EFF81B4467D35C951A90ED6F706D
29FDF3DD6C73C55A1E990A07F8B008FCFEF55C2AE36261251DCF8A9302D6F53E
D0F720442A89467CA60BCC40A35FC77F7364BB75AE2083C7C66E6C13CF179158
47017BC06D801AA613EF09BCB258EAEB5620FCF9193BFD36F90B797221D94774
689E83E5406F5D9554C12847B6EB4BE2CA1FCBEF057DEFE3269A3251B16E5C93
71B5D89028F2881E4C77381AE42D708DF8E5C93474AFDFF62E6FFFC184A3C6A1
82563FA8F8F6A0A210405C9B5CD8779A37701C1041B8A59CAF3791C219F930FF
9F42A78A62D9090B4F34EA6C8C692D1817DB2CBF1BD72762423381E4A2F6AAC3
F6FD242C25F6952AC55C24ED123A69EB70FB54F55883D5717EE6278FB49F6EAD
48DBA338B09FFDDD52A48A918EF0FEB00E6F5C40FF92A66704671E5007E93B5C
31BBE28C4347C76E89E28C2D4AFFEC504700A3632A00A885E1179E5D7D63E5A2
950ED9ADA8C30246316F001D01D1487F4031379DB5C7666F555041C9F91147B7
57733811FE1F00D6221A3F0677E7155A03A55E5D797B30FF26A1AB03592F9372
AF27DDEAEFF8B80E1A4B673256360E4DA56184BE9677D3547C4F276566523743
1361CF7B9B31610B918ACBE6C1B4F5419C8704101CCBE8CE825FBE959E9D0FA8
D3881BC3D0263B7E30221D3FB7EF9D5815188ACE4CFC939A219EC7A7DBC94418
D962C203977A5BA6FBFAE1FEB947C50CE8BE18F24922B0636EA1CDB5133E5A5D
0B5019F9E1D426843264201C49B1B50615B9F74BD0F89D7775B3BA413EE02A50
A008E8BE6EB3F73659E23360D2FC16E5838E9590DDC2A7874BA7F535020C5205
4F76ADC3DBFF65EE19016B50905C922CA1B223BD957C4C8051FEACE2AE27DD3D
CAB49534A03FD3DEDC48E4F63B4D8BCEEAFEDC4E0DA7BDECA4F73DB14E5D73BA
E98757D532FCD5AD3BC6C90DAFDF8EF8BBE9600CA06878E9B177DF9D1711C665
3A12A443D87E143C683C2934FCB329953875F95C55EF8381B2F5168DB2F0A91D
19A9C0B0BB98EAD3B5ADABB830C68513A5DFAAB1CD13B5F20B5D4A4856E5013E
BDE652B37E911AE0E16A5934050DD2BAC23CA90A1B3F48F7BA02A2AD093DD440
00BAD3FF20536ABDFFA429B820A82AEE9A73D7DCF772264652F06020F0CBA556
F3804ACAA98571E34DDEAC3DAA7888115812329ABCADAF9CEB29E09A792E3319
4C41DFABA1DCE0E4AA6C193AEA970F45D01EFCFBBD18095FB5D0CFFA37FF627F
4756AFF88FF10A172C60310C10F8DEB9D895F5319B213778CE74065A5F5E31B3
86BA7D571A65FC9D66FF7CD9538565425DCD900AC231610AB97CE7925F13BAF3
8E3BAAA063840B26EBF6A5D43602141B28D3C814493C6D26742E16DC57FFF25B
29C3CD32B814027005C060D65C25FEA1A5980EC3B8FDD9F568AF987C1B2F9196
50F00D4F0240AD2B6D0FF2710FF55BC9FDDA1C29510D2933E0819A4A0855E5AF
6497F674F2BF93FC3C2C62591F159EB60B490854F94FB62D0B2C30C2F83794A1
BCC1CDF4692D601ADE5D83133EF0A5D0FEFB9C02EDE191099EF8CEB0036F3218
1F4A5475392B4B1F92BE12C2E66618B19A9E2827E94DBD4BE8F8EC4704BD05F3
CE505777F048D317210A6791D432094998B144BC6FCC32B688D157388E7C54C8
C90CEEE5A3E69465E58CF7351070F107CB781E2093B59BD4F441A42C82FFC652
D3C14F6BF8D96D779B654150041D379504D771158D1D328D707BBA61492F2D6D
5F5916537207D9E97001EA90FE5B5BC9F2B061733C8D4C355955D7C8C2D6C002
F68E91A7C0DA74E7ECB2ED339DADD6F39274E7E8B2B3B84C5D1808B414037556
D6E9C3326F8592F1A8E23E12340D6D9F50D0AE3798F900A467910D50BB0E97CC
FFE2322734DADC51700A71A73C6C9FEAE12AC083BCA92C8994B9C7698E2DE5AB
C80AC9D793153E99C4B4F9467A98BB2A1B0969B8FB7C41FA5ED0E97D14487C05
FF5462F53B8B701A6C56558DB6348134BF9806C1EAEA5B4D34B72ECF116DA591
5F10B4FD088BD3BE37C6200E44974C097DE0CF32BA76FD530C5B437E27E5E435
083606FC3B43F0240E0B00874D9DE7F43FF60993FF317E2A0B71D337DE2F7E95
FAC752D88DDBF9A752EA88550C3B52F81E88195D837F4692C0EAAF3DEE913741
16092E029686E4AC0E2699E2DA7F32352AEFD997AD21C556376D21FB706D2625
1A219577C1BCEC94950AB01477110CF83586C3FD9DDFB321297A943CAF8038C0
3C57418377255201AE91F48B7FCD4B8618616703E6A2A1E2F8AD42029FFE31D7
C09F9B7812CCD07363BE4D70DC6BD22ABCD043224B3CD5900AC4D2B181B63F09
F7197EEF370E00450173B754650E85ABCAAE42B4AE0ECC103678173A5EE50F21
B39F560877713BBED5D627F25EF599D8260F6B84FA8B027CDA419307054D3C04
FC7F5DDF178584A2403AB296AF649E3CC9D18701E91F5A47FF6E933E21F0FB9B
939E49AA24CD46FC03CFA9F7FA4985EF3243D637729AC6CD901ECEF7777382B7
7264E93192E37A07A6CA7630C7B58FA4A388D48E279B57E7E5D223D544568AF2
BC6076C7FCBCE1A31F600A210F389D595CB86D1556BC1E03EBAB34218E6B25E8
40A594C538AA8052854792C3A54F9D2B21E65976588BA3E06BE510E51FB6118C
98378E3F166076AFDDFABE9CC46A2DA6AA3E33A045451587FA1936BC29504830
F03AEA815ED1812E2D15E5335915D85F96A988482D22A585867F2B8469A5DFC4
AAE701C1A456988EBDD1C6675850CA8195A4F9FA9C539B62C9F30B8AEE0CB685
10666968335DE2BEC50F225ABA2C969656039E8590F62933B22EC8CD48D81CC0
19C9B4E41A8088D8F990460372E170BB98B788972C8F37277FC53686C8880F78
61DD577C9C65D7561AC7536C61F215557C0D8844A9F47D149B38A0D7E4E4342C
FDD22C780278D973C31327F39F3E046E39B6FC8A72A7B743ADE3EA140A91F1CA
16C38093EF9DD5062FA35EDA346E927271617DCA63B042ACC929F6ADAEEF5E7B
AD6D744227137D55E6CBC5BBB6DBA4107593EDBBEFF3B140B7CF51BD51B09904
51D5F0AAEA38232A732EB571E1337FAB56A5B753DCDC299D67C96FC51C30FFED
CECDFA28A951DD5211ACD684E3CC660F7B5550CF4F6DA9B7EECD4C294E2AFDD9
CFD8971828044D41E87D9F04F4FA78553B4C7A0BE6DF82C2E5DE82B7B079CBB0
EF69EEE350BBC9CDCCF124774D0B900CFA7B471467378312BF4CDE3A8179B371
AD4B29657E24AB53C073792BDDCFBDD2ADC283662BF9868534619212C17B4BFC
DDB4711C6BE3EA3B0276DA96EA1FFC3E8E084B77A5362A2A8AA3CA1F4E851390
6816EFC9DE8DDC2410B0A4833AB0EF27D079BE2D7C75C3C9D9223ECB8EFE2CB0
6CDD6AE2E4A8353EC4D8A721AD540AD5692097D4B232CCF84F4F1DE4A1BBF7B6
C7055F241735E7D9E211F45C87EBC5D06204B2AA6A8E753312F7A56A81CF6613
E15F8209D34B2BD6185EBFB7043EAD685DA0A877ADCF80941C3623ED7314827C
84F48FEDA77A728130C15F4055431D1BA0B4FDB6215924A0ACBA83E181BC0CC4
9BB557A3B2B266CAB53BA93A15B889E08F46A2D9C6E1A8CD84DD0F411AF1B78D
1545F4E574A8B3C5BBEC36AF98DB76749156CE93C909BA57D8DCD505CCBB1AD9
1515605A9EE21CF836BD43FC7897447535E417984949356333FCD505520E6EB0
31F9B55544C8DE84D5E8187471F202487188A7BAFA659ECDDD39AD2CD716EB4D
0D49C9B9B8A2519D0B9E784B152D9E7F6C5F66F06BAED34FA3D65179F32EBEB1
C78AD064BF35067F8099CE8241D9E6A32561D1DDEBA5E675D43BC1C44DB5A00D
306E6CE190320BA4BFAC54D93F05357FA55DA4E381B6A57B8B004F0810A2C8DB
E29863B263B5C69ED3C0D79DFBF046ECB880D581E82A50E8074F6F67CC8EED59
94D2A52851EB2AFE07958D93D266D7CC1D73863967A4FF7FCC4D24ED4F9E4879
B625073BC9F9148BFD817C59D33A6689B0C5C924C3BE1656340F6FA0B9A96718
3A2EF5EDE3F056EDB39CE42F8945783542DA95454E8B89443F5E8559C588DFEF
7E169435564551BBAB01D80F5DFDF777C42A2A8AF7781694224781171DD03183
662D6DCFB6BA6D7AE6E801BB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFBB609F1F3488FCD40BC240C42122202A26AE30
EDCB46ED7952582054843C0C6E31BA266D82C8DADDFD318AA828428B17B91244
B5FFC30C105797DA893B5393E9EE1C319498E2B92C9CF390791BF3F6DCDA5231
16D64255F26B3D26D7F70072016879C1CA4E377D77797A32DB18676BA8294533
29D58214B161282982CE616442096DED79278023E56BEEA38DB7DF7AC21D9B88
457317ED0F6CF9FF5A2907997EB6A04DA6593C846B1FB75433B24AF1F6CE1270
429EA58791874E4246C0A7321AE831930F08F586A85120A40EF09A72B1959517
A0630A94699E2A1BD96AA1B5466D742363F38ADF7937A89EE47EAF9B93FAE85E
2F884193E1D5FDC28A8A7F6FA6EC89007816A208960055A88EB090534CD23A88
1E6D86F82C0A23BD0A770F19A5292DCD4C30E8928CDB1375A67FFC936BAD975A
9DCFB0A4BE6947FC780F2D4ABE4714DC4CA2CD2AF407F6AAD2DE8B745EA3CF04
14890044719DE09F3F8A3EFCF2FE109A30D87414ABA2676B03B3060A587D0E46
716D81039491DB446916FA5F10B5FF1AE7A311C6FA52E9323191F7B83CB246CD
2E4BD540172263C8D807EBDEFBB74E9894BF0EC793699F0E68263B1878CADE0E
E48913BB0C4CB09F2124ED1AD4B59F7915FA254CE192150A06A437F194A50EEB
0A766C689FFC8EDB02B3CDA24BE5B94F4D4C0FAB79CD0D3E7F890894C99AD3E6
B3AB0CEC0E6C4295F8FF87E07BAC02D3469A37176FFBCBE1C6CB58A383EAAEA0
F49A020318D51FD579661F3E2FAA54D811386573C91A067187E223CB9AD2C26C
FB2671B72D15270CD8CB1D59CA262E0355E991C525AE6E8CCDE226F4902BF46D
68C5D0FD284D7A14817DA0640D7DB680E79F9029FF9F79655353B69F7F9713F5
21697F75F4A0116546A9D962C22A4647AC1D5FB8AEBC6481A94C6ED5EAD25505
00011CC1B5A95933E7854EAD8F2C531DC518453ADF92C19BBBA6B2A5A6D96F9F
2221E85020131163F32645F282EB3A44D8C1AFEAB666552ACE170271D4F4AFF8
43079198D8F05901C897288256E71AD9A18A5544EC317B4247FC0D40A2C3CD57
E796482600AA5E73A63B568D1B97E405C045C305C9970551CE63E45D74F8B75C
95A3F96517CFF904BA2676748644105038841988E8C8182BA89C9BEFCD87DB55
AA5E0AD1D2C398A278059ECF219F339C39CF69081E1EB8FE48F3E078103BD876
70D225C2850EA487E561E61A161ED1D578B1F169DD8A03EFF3CE10683BEA98EB
2B7C1F4E93E0147DBA1946FF5CD5A93E1EF62EEA51B201D3B14BF477572A461E
B99B4C0C0FE29E6DD239D2F234D71DABD43C445ED57C494DD907E1E6DCAE729D
19A6F9ED2ED65CE7FFB7B8DC087429A3D69116B933F366F7930FEC7365662AB6
CFFF3022D1FFC91F6F2C6B28808CEB9BD6ED03B43FFE970ED2529C5E0870471B
65CEA8DB2308752A39C9AE5937EC7F21EFAFB2A43CE2B3928163793F568FD208
2183D51A95456A761655D006138CEA62A0ADA87D3D4B8954D01DDC88746908ED
B625B9FC645A71DEFD070173D7AF2FFFDF728B7EB14228DDDDCFF7E9BF9AF688
1F745EC71298D454AD31AB998F5821BBB633126AC26EA984A4660F22D3905959
11A900FED030F69500C16AEFE3A6FB08B00FEAF1D31D9470ACE414E44A1BB675
8AB06E34EF8E87528FE146C23041CE57C982B9EB2736D453D66E3EAD617C93F4
31708ECB7574708B95C16BC0ACB213112B9E6B2763E75FACD64EE28807FA1928
BBB2E6C2F219AAD63568B6B2F3D43724ECE4443993EE94A4B4016F462FEA63BD
490E187D5560A2C81AE79DF8CA515C323A63498CF6A5082FA79D34319957690C
F7CD568224E9F66B93EF3B53FBE4E1F32E3F90B51313D7430BE1825C90D88DF4
0E72A43941A65F73AED95051BD333C988C2585BBD10198214BA25C78CB3BED5E
7AD9383F8701213707958227A3F6E419742C9B7B387994DD94EBC3599E7195F5
FA120FDB681FF0181501606A23750D6CCF87F65670B25A5940553419BD119D07
F29C6889396A4489D046C320F4F438E85B8E1227FBD0ACFFB73441EE4F938CF7
199F8A8EC00C8BD6EB20AB66BC1FABC48E4ABE10D4257269E620CD953D5133D1
C98E13B084100B7D9AEBF3C073C8C79B30EA5D28A68CC2FA966F0EE721CBD633
D6D668F34764F90B5E8A643C8CA2B2F12BBDECD47B6150B5655CCF81257BB251
6467D0BC24C0033AEC86FB987B713930C957C632FC8F5816F21F6926B6C0914B
FCE14913B22B6848FEFA6107790BE7B3C7F55B3BE38988F36222BBAE11B6FBA2
9AE0A974673C2867BCC64F0A8FE98AD94A97AEDADF621368DD7980ED84CCACE0
3B34DF5EBB3885DD636E8617400D051B27DBC4514A567CDF9FF87DFBC5B77ED1
58C0EF082D34E9BAE83A478F2D9DB1F9B65E818E39285BCDB6D08747FBC52D61
F311C2EE3444CC6154FCFFAACE818BFCDDB16D6DA12F60EA605290CC0000476C
0235F3CD2DCA6DE4D9D40638251FE20A5C8EFD39DA710A4716E1706C9A97BED4
C33668C231EF31A4D5750105FEB6F0C8588A257B163EB95BFD4A92564CDFDF06
B73EED893D4804AEB03FEF3B12D9AE0D47CF5332716FA25C28A2B94219A75D70
CC55783504075A5F0BFED5601BB3973AE413955F0DD137D42B65BD9AD563ADC7
E1A2C37A3113C6F89B4DBC3027B3CAF2C6EF0A5000F53914F0800E33B06E3DF0
CA28D9626A7DEEE92DF84CF59672E3A0080CF4DFCACEE5513EAF3E903BAB3879
0E8721E8C3C52DE79214EEEDB424D767D0C64F1EBEC99C7740FED61F219538D8
185042F86BB762F723CDA26989C4C67963AD3772159ACAF8968A484CA2A70CA6
D6621D43360FB122EF507C2069E1804CBFB9A327BD3E7CADD265B21D1F99BA13
1682673CC25D2E9A57D848467626E4736E8CA94B09C4C5A7775E889161AC9EC9
CA8D25B8801EDF7B32B6481F3AFD7208981F33B525B7253D61A9F5AB6BB0B45F
003FBDCCB73011462A034CC5D3CEC38D2781BB126FFE6BE23910E7F181D048F2
38829D4C065E0FBDC820272D681B7584F215C6D1AF652E4222F84E17D7E78818
1EEDD08D432C97B7CF7BAF9833CBD1657838911ABD2A1FB29A5124992CD43B11
00ACFB2359C8BF509848CA84C2B35ECC10DE1D4A063CE605C921BE79E701707C
AD347208550DF890CF5924BC50D349A2CB34C97638C053F3483E6A2A4699E4EA
E54E5892C60CB5FFEE5CDA220987161A2E2BE7F4212FB8E2A9BA73809F0D571A
C2CBDBA9D25B690886A6F6CB294CC29F9AE6DC8F8C995DCC595125912F12542E
FDA897594095146BF414BC1DDCDBC1B006CFE5A032B95CA40F19FE0EEEAE7D7B
D4FE5EEF5CE4940828058B9D01C8BF7E6E9FFA616399A28720AA4043D3256B93
9B48F07A9C883103BD3AE1721C71048EA77A05F8B383634B503D98FF2A38363A
CA83D2278C7302A34A4F508E05E8C908C46B93419B9A6BC23B59FA2A4A18D74B
187587ABDE7A3C8949663447762DED26E5A2583C8C7A4D020A8EEC2D80FC67A3
06D211870C15278622DD023D8E5CF93DB14805DB66731CE6F52F30826BB295C4
BCCA4F916835F5683F03CF7C7A49D694B38E71825486F2C563C52C7A22BF7AF3
BC490D2046228F47856731D2B3347F514E973975AE8458669835298725194259
56BA861357256AE824214183D73D794D95171D60569ECC2EEFB7B6B0263B8B5C
E6EE63CED9FA733D90EAEB73B9CEAB98A5E5B24B1B627B7A8FAEC8F49450C5C9
EB75F27704912DAE6443EAE098DC77C52DC6C7E3013884A89FC8D6AF6B602082
FA5C9B2D9784067D4C20F9AE5702DCF489B585F5190F9ABABC6BA8BF0A93D14F
59E4E75BA397998E519B70C3670D8B0B89C65A9885A2B325248A35188BDC34A2
9875564DE45455D0ECE1B5D3D854121ECA94D1953CFB6C2C6B96E9ED756FCA84
A89720AB86377A8D401B8BD6149067CBABDE9701D653809DDC5647F0D8C276AB
B12ED786A93C63AF30F93DB4756746BC83E8E043427C28A2401F5ED30A4C2578
F06DE9583EDE0435F57FCCEE637518F5812EB351B65581525E7AC02E68FC5C48
B58141C7E8628F25C313F891CC4F697207F900A608358F08112221AF8F6F4A49
54501CBEC9137AB16AE7D69346F94167C60BC6F824D16EBEE9BE4F7A501F4D84
943CC2883C98DA8B112A75AB907C4F922B0C333A5F16A4F99BA2C4BB3D314123
56B9E978BADB7486AD101DF51A51B1902F650D61A0914635854E9600C0349921
91A5A26154CE54AFD9DB3C8E9EED4DDD03EF86B40C8E138E7BD40AF3779FC463
70B7EFCBB4680119D586F88FCE03696933CD1FD08FFA998984A2DB27C561CB5C
1F72F813469904235C1C8B306357EF02FC4EB7669C932B522C947BCA7B586F19
8C426A71DFA8CEDBE3D946D06DF3B254084F007745889B9F3983211CF9648499
7985F7C40DA4B7719FED370D6909828DE61CA45D557DA77E5F86A2ED82D15FCC
3FDA97D5DB0C39392E35E6586B9452129BADF8C69BC5EC029BCBA01A455AF292
79CBC83ED822021793F292636B3F8C7B2A0D353F370B3580759475B16D071E43
2931CD32FB8C360C24FBFD400EB1533FB61B3AEDB1755A0341E20E4D894D2DD8
099F6BAE43D978A6FA8FA13E04D067B55F84954495EA3D40E2670BB25856B0FC
7626D42E7B65AC7ADC46008D953CD802D686046CBD032205EA85DDD9A9725035
11D86A08E164B3E017DBD53CE9FEB02D52615B93FFD7928C8F6D24B3BDEF1AD8
CE41047A2A4284D7A08F95EF2F9B2355F42F95BCE6B2EEAD5218376B67951041
CB6C3B3F93392706CE3521E82E96046449A558A88D426B6C046E9A088FA251B9
754D51FBD5CD958AC9612B37E2792B04B2F2B9C904D2466B76D18855CC16896F
291C895CE07D7B3AF4B2C0895FE70E091803D9D14037AC4AA8C4D17EBB62ACEF
E7A6AA1E86BB937E35BE1811C42D851229D0720F3477072AA90CB01EF6541629
4CAF223673F451FC750AAE022527C4FD4DE66F78E87A90285ABA840D1A01A524
6732D489319A809EAE7BCE9A7AB5B1E77B1B8CD7F561861F99B9BE48722C0564
4840865AE2A6D6ED89EB2816F6F0E8DA44E1185B218228603A4BE4454CA625FF
4A75F5B291E28645E1F5AC047A8204F464CF29A60BA4DEAE3FFFD5236B67B055
2D00C4D3114908981F51AC4E66A3F822DF9BF538F9BE7DF07DA89B3E96228B54
7ECF895540E94865CEEA19D0BDE898CF328861C3CB4423FD2C0C1AFA9B523BA3
15FF9A90DEC4F7AEDF1C70BCB7143D09AD29A4E0687D91EB5B8F0E20A4FD5984
624C21F595F9DDF78076AA80D08B77A40CB972E74299E2558DD70A36B6ADBC78
DA8CBEC2E6CF74853B93B427A89089E953E1E2F4764E978F194F0502B7E610DC
069791E52CE628CB5457A18426D9404B73183A99D3D180D6413CC7E2969191D6
57C3959B419528B283E03EA02F39AFF37556536D462C5E9BDC6A984C0E944711
C77542A66680C9339C7F2D5A372C90099F97D70AF54E554A8F28FDAC53748FF1
ADF4B754D2C3154FD5480E88E9BEEB2499BF34A46C864A4431374A4BDCAD3220
2C7F74C30A4646D8726DD73FFCC6DB7FC4B37430AF88A3F85132DA00251F5A4E
3AD99E47E884B3FD79F75ED2208F2E90FC60916CAF61A15C789B8252AD257503
08A8F0348CD1ED0725AD516990B85B5C8EE33A784541FE0DF9146E08836B3CF6
AB7DD2027469CED263FDB1CE3CF726D64933BE3E7B9289E87FBBEFB5C6ED6876
1C112AD3010556416D3ADEFC9229AC326E37B89E82636E0CF7CA8A8F0DA2D83D
FB02E49524B86A2EDF58129CA9E94130708A745EF54809C085AC2D60FA373CBE
C95F2682BC5649C7B03B92B57DA0F5BE89F5DA4707A0451E60C03FEB118AE510
A5A4833C6878133CA087BA81AE75813B0EED37BBC077BA859B9D7D602DBC212A
FC1B8AC7F3F66C8AE30B2A8BB96416FDFF848179580947807EF500183246F037
7048C48AB0D05E92A03FCD2BD4CD6DB57706DA244B8DFDC8661514CDE029EAA7
38F5BE488E401646F45EA63BA74EBBC62EB7903268006A9B670C0F7C072B05B4
A5CD9F0DE3EE7FE13BB25E2856FBA7688A810836BF68E7F1BFA4923BD8A18271
C8F80DE8D4A650A0D4C3C5629CE9608BB7E77F5201C8A046181A9F2A202E6C38
2CF8541FF7E243AA7F16F534CB8E4EEFF472FCCF2D33E5E2C360DA0D71C5E046
C9A49A2FE89AFF3472662A67D2F5A6F86FFBA5C6267A2A20B8CC7B4DBA6A2640
8B75445A0099EA06E67ACA22B1E387F336F58C22DC06ED4D34A5E4A2F4C5A85B
BDE0A289CFE59086EFB0246119AC8D529BF3F2FFCE3341212E7F76255222D3D1
A186A0D5AF2D15E33E6F6A2701AF81BD10AB44494B5A219C5847C0D82F0E8663
12D963E012DF0DD89992CCFB88CEEA5E73FCB142E2EB01CB51FF64E1D14C3A29
7C340E59147D08F25BBF3EDD39BE705D8A5AED5F1BFDAA7C065465257FAC9F7E
E6EA74F7C07916C7B7569E61B3A7639BC4A5B134D08DAF80F9403CAE2EFBAEFD
9CDE7EF260F4C7F19A7195E992B3C0533C07A21CC042E622992D280A18D8354E
4A59B4F7FCEBC86BCD866CDB15371B57C340643408B2CDC39081E36984C6535A
4650B52919D95BE16201B40407019A28B699901B1A6F7C9D69851625F1107AD3
3B99E0CF10C6196037A77C28CEF5AEED05A6543790D3075902142022D6E7352B
AB60CF9BDCFEF790F9FB61694AEA08DA49E20BC42CB63AAD25E7467ACC921563
EEBC9D9886DBE5024CDAC61A3A8E149EFB5E4784F6B1523DB565BBC3A1EE1917
0598C4E94B5A824907CEEC700489CAC908D6F1E247664ADABB2B6DDD4DC9375C
1C921EC9198BC03CE04A0F0B2113C7B19A19D7E28A604B31E74B4C6845E3E6B8
E600F5C6F70C493018B86453A80D32A6E6302E20A88B91EAC2D1F8961FBBD255
5CCB4DF36956718925520070ADF1C1C69664036AAE22DB408637E18847234F51
23B210DAD86B6517A40DEE9235C29F9C2C2C9C3FC2897183D705A37702223D14
66A348F6D53B694DA32E330AC8C76E85D58B5CD147BEF30C4ACA39A7CEF26223
D6A85D67B8E9455FFE82B7E0A62166D2C9BE917105F07880B030AD1E9BFF5F40
ECD773CF5D7DC0593D9F6B89968B1A8550A5FD751E70531636F18737CCD1C14A
E308A9DE8E06E047C76391ED93D9810BF820756524C0FABD33553FA71C10A239
CCBD57116189B1E3856D6433253D3165DC740B8FF333791EA89B917497394263
C1B0BABCD19ECC31616A409855639AB72C04F3144AED3709422940A8C36962BC
1D166C17512383C899995E3385487121FB3EBFE72A4B9268E1F3D065E8BD9C21
A736A894F1EBAEAC18CB4B7D1983C85DEA0EFAB7A7617558378BA14DAA5A4745
550F8B3480EB2CA082880F7A5EDFE87F760D7200C559944587EAF9A8B5216B3C
E8E9831797C62154E0B91E213252C58D39514E9BF54972CAF5E299E0C0F7F1D0
C83ECE888457C900E82C4133E430C39721EA5C3464B0245E02013E1666DCE850
44D656F139B2B4830DA2FFDD7B721978DD641CDF0C0459112D785EA2F5E4BC9C
AA44ECE8FD86CA6D47F28C20CEB0F15D488F036913680E3EAFC874AFE60AB11B
DC4CE96F22C0C4277079D25627DCD5E40E3E202D717693407287E28075E8F3C8
61CB90E032EDBB29432AB3533DCA6D503EC8B88DDEA6D3A49A83886DB260065E
423B426EFCAB16B2558B366A02AD194E29C31962FFED37AA64ABBF52B296B400
E09CAF55F08D65A28FCA65062E70F4703BFAF48BD8CAFAF9EFA97C5FA81702C0
4838B81829312A1BF26CD9C3C3A4C9F519E7F583FCB9815E16FF46354221DB73
E285C8E0D2DD61A71643555DD007B6477A05334C6183EC1E317C38738BD6A91F
DF9E1CC278145AA01E7E619459B121E14C08391053E877B16293351E69279150
E84B57AD72D7C977A144002C186B0DC098663B091C3688D6741193D80A5D6A6D
2E1E26746A94A779EE401A81685015AECA8C66082082F59C3DE71163335BECDD
B3283B97170FA3FDB5915208CA9D59E85A01FC3464C31220F4ED772C1D183F91
D837DAC94609659451F83DAA632F164AB33E7D4B7DC3718367C52B836F30FECA
7420BC092FC1C1F75CDEBBD4BD866647D52BA254D2E4B701609F16C9CE88A8F9
A12D46B8FCA50DF4433B0B8AED6A63B8347C108E10DBD043E7B7EB3031418152
E3EF415F3BE8D66E494C69BC472F5575B1366C832BB031A0167D93B23D03D202
48F857B32920AD49354FA7A748A71FC9BAE637B081B0C32BCEA034F240E122DF
5C95B68BE31E79030FB08D82092FEB52944FF26D0ED232EF08F10D3367C5A10A
B90454B314CBF25CBEF5D472F90D0E56DA81E336720A4EAAD1B895B159E2C905
459D2697B2819F3B1BE4EC7B5BC21B42B5F41E8F864AC5FCD0977D31EFCD46C8
0CC4F065C1B4FFC8004CF5A4D2116DB1E64C8257C7F1961D90A040F61BAF86BE
97F8DAA8326EB1A2B45114257DB4AEE8B1A68DE6E3D2647E8BCBD9FE74114B52
0BB6C437F73C6233EB98224973CD08AEE3EEA3D66C3C979BA6321061BA531841
11DA5E9394DCEA8EA947CC9AC1262A30EA5EA1DB1FAD71C69F5C5C9D103BC205
1857423CD285170D6B547540264F9CD0A9842A9410A0895DF75914E225065A81
C9009775DA55FC896D091C0A670128858BA36664FA20D07AEF6DC4C3D25B0E6B
A61F704CAA3B934E00193CAA4E377B44F94D1004F87FCA06FB3215041B8E28F8
BB1AE6F5715FDCC38757056512214E3767956CC04A4271358133833A505F8549
AFE87D9E1FB63B8E4BE596271D1C73675BC4DEBA558D53A63F9F1D30B9BF6A52
F9540EC304140C4E1569529D433336951DE4EE9BA22BD782633B9D1051C94D2C
55C117F8DA1FCD9013BD4691FB31B2901C8C2DA92BEE9F27728FE5F4CF000924
BB94E0AFD080DA0CD80D8DF7EBC89DBD03C02B591D9792B701611E70ED5E18C5
897CA59F354BD2ECF30C6D9A9E524DA50EA2A8F3E6D5BBA1E2319C65E68A4ABB
FD0EE3BEAAE575B67C26D06A35A0D394EF1A332D55D8641B01C4F396053B668E
A3FC26B184488B73E32595B2F9E15F1F88597E05F600FD03CC515AFA76D3B851
60322A1B43A810E6C52BCD44A4F9A2E41B30E5C948FAB0C8D1C071B8B9624D65
F00D2B087C0D01C72AB279C5755890D5AAA34144046F8315AE5CEDB4995959F1
5CCDB5EDF6FF459D78E431EBCBBD0149BC294A9A29640874F1BC354AA3EB2D9C
03B22996536F2532F29BB6C55AF7087BA48ABE26B529E218150497C5EE8731DA
AFBB2445723D5891909E980D042DB9334244F1B53A7CD80D444A93455702137F
716527B77AA521C155CE3B0F52E354F0BA788AC382497DAFA256E293BE57A429
980A9B0776D1907465370806F6CB86871B8015310B7CCD19092E38926AF35774
03F48620049815DD18ECCF792E84A2B59033F31B7D0FFF0294CA5162CB3751D1
DAC1B14EB9CCA7DD509D233BB9F32159F34F65E8FC94DCBC1CA521E7D5EE19CE
509B198D472D3AE7C4ADD622E4C02C8A60993BBBCBF09500EBD844B30D7A3FDC
11F99AAFC2907180C659E171B0BEE6B4B4F84C1AD48F8B63525AAF4BFD3B348D
9AB2153CE1B4129BAAD438E87189F2F6AE7C86F4EA099DEB2372CE1E76101127
A16E83FDD2A815D41BE84B17CA41770D2F8FAC53454E7EDDEEFB9EEC9935B977
BFF9ADFBA701CD2F97A2B342229925F735E97C672C57F9804BD0F1943A4F57AC
F1AB49D651BA461A600C56EAB620D9380D5EBBE4A7AE912C213D0F380112FEBD
737CFF6C1483C4520D05A365378685B85A9826CBA11C00F4BCC269C84754FFC8
AE3FC2B4FEECC7F8F63FBAE0648833A8A814E536A112AB2936FB2FC5B96B4DBD
2887DFAFFDC16ACC0186C9D3B28FA508F31573372865BD27C9960F0FFE55C2DE
30D01A7BAD88BAFEEB7E3C8132E118FB4E791DDE61D9358916E9209FB94B0D11
54B4673C0B41CE79E0C882F25865663AB257EB3F109DDE318A800B5D24F5DDFB
64B9D9445D8D3C48CD95FEDFB910B63714A2CEDD6A8FDD98703B165D93B4B422
089200AAF814002C30026AB518D1BE399DB38FCEF12C4E988752ADF2124867B5
79F69E34040E2AFF508CE7AF4B0D544E702A7CF0231FD18090D6EE761B5AD351
0CB3E47EEF53A23ECC4682E15DB5F53ABA109799C10F25FA2E54560FDC563C34
2D8157822D42F334B8793F13FB6797C5E5249D266C093F2F1386A15CEBD69E49
C8FC7AE15E6B525592D22D7EA13BAB3751E9579C8219DD72D005EB5AF6058388
DC6AE2154B9227AB5D9DB4B7284FA0E58F65127072FB738A986B66DDC9D43486
DF7BBC05B79A1E96F4F6F605429FE7C84BFA04443334F2AD889E4A3E230D0A9A
6F5D29E4B7759C944FF72ECE869A601FD898304C6EAEF227051CD28CED6DA012
87AC96E605DC58670265FC8FAD1D512AA52EFF3D6DBAB167D3D5F8C9E32673F7
19095453A3715E76B238A94A5329C679324059B942FBA2C6D1A4A47D94540D70
22178AE1D4463F84630D51AF81054CC8A6EDA571EED8BD7ECF7829B310429383
B5497FF399747B6547F63EEF3C0ED308218EB19B25DF20C182AE9FAF0B45382F
A077AC8473A2197ADF015326BBB45A5A150E6A85EA00525372BDE229F1BC2777
51454170B6DBCD9DA784B53AD78A8A6FB59D58C1E794FCBBD27B060EDA6971AC
DACBEDA775E1D468BB6EDE702D60DEA3E87673715D31AC92BB7183E58236D479
99A1066D8D27A25818F7D6CB212FF2983C3FFA0E9045AB023E047EAB436524E2
EDC46FC8BCA434A5264E6403BBE783360B95522685884A79EE9FF01BB0A1B8C2
4DB58F7FAAF67B92282C59ACED31531B8EA85AA74FB443296734D6B7F9A7E71D
17B44B3AEE72BD5CF46386D6975B70E30002CEB0144F2AC3DE1DD900F951767A
F33F88BA6963957F3DBE73F5B77F946FA557F6F211E57F18329A7824A3550E96
593387FA6B84F6AC47CB3022D3751E6B7123FB71403E1541525331EA8F648222
DF87570F4CB1612BEFA1CB71BC1CFA277B73ECAC4D16FD02C19C53EA68FDE627
54AEB1E15D0EF5275767FF734AF11D92AB2B290CEB82632679BD0F0976FFAA4F
DB46F35D3B48B9EEAF60922815F6DABBD28695805A4660A5BA95D0E215CD8E43
57259257698DD8B78DAE9526C39853101B9461F4C1862A4534F300477E30B659
1FED2312CDD8FBDFFB276035A428E531D41C55D8766E854DFEC5DBF19D4E977A
07A42287A2DBD42A7995E083E1D37D9BD147A2D7C0D6183278FE8A4C3B7160D1
D64EE1C52A29C6D3CEBD747AFF17A6AFF908C79C7DA0BE198881C0D98302B116
A463934A5A28E8EE8C15FEE4EA360B3511F823E75AD49BA7AE63B192382AFE8F
AE99620A1C6C94BC37019E22200F1550FDE0CCA34E8FE690B770C2F9C7726620
4AF42102A97BC03FB86E4321DFB18742D4B1A04F16826F1B260B56E53B9BDEF2
7BC2D6E171BE26937D6218C0064DB768E00FEF4EA54403637F16B3C0B2F509DE
97AF69B284FBB5586F0FF2E48916D9E17A8ACE5C18720E3E3C72B08FB1980771
0498752E1B1D592223707B0F5B54914B7A937D73EF4DBFF505B0884A961179D0
EE68DC28EC3E028B2C3F07A2A21D43EBD4FCB6EF5F92D80AEAC2CF58EC01BD61
D7CB962C4EA67FBD85B3F20D15C5FC1822BFED3F154290E260A08980D65B5DD4
48E92E67031B18FCC2557726A60AC1B8AEF5E3292CED23AF7CE0B126BF34C1FA
896B079B06090CCF819DFDC49A1FE33CC1878F0CEEE222B10F5FCEA940D39033
47EF6B051FBBA7EAE4D5967EC3646F547C1BB5DC54C9B30A0255ABDEB555EE5E
A7AD4D7782A8387E49B8F03D6AFC9D66FF7CD9538565425DCD900AC231610AB9
789CF2980A02A40CEB2FEE42B631C999B71EC234FED7B087E20DC4D29EF51204
77430432067801A15476104F2FDF409FE6477286EB7914B7BF4A14D94594408A
D1128A36B7291EEDEC8689A98633C9302B82763D3C8145F36ECC6A2BC890D6A7
C5C410AFBBF859E855D21B146F7B936101F1EC94DE4F449CB4E40C9A368A1107
BC1AA77444AE0C1B4E4DB9520C5179B62502A6AC0139D5F6660FA7D8B9117158
A4FBAC084708A6D5BAD32AE7178C9A6EA3E398A8903EF51E091BEACB8ED266CB
65288944A53515228109050BB25FEBCE1C41A7FFB8FD2EB9C6A3E0B2CAA60CEF
65C161371032BE4902BBD57AA5DC285EA30F1A66D1FB253E24FF4AA72AD9117A
726322FD0A2F50DA659479EBDA867E2657828356256B69B89D275EFFE5BE1AE4
0B1A553FF47AEB55E074E0A7EDCEF6F7111078FA6B5EFB7E4DF116E24E0B2C3D
ACF2BB4D4F11C5FE4243E6E5C642CA8AC20930D814C6A3E6ECE761C6C940133F
96EE632F39ECCC768AB03B0EEB8067F8B3A8D2C6AC693C136760C2EB7813CD05
C6D5EE5FD2FA715D88A2586DD0D18ED95EC08325BB6A68D73736EE2874EBD426
E37B28D078EDFD36B63A9E05D8F4BD13318C16396253CDCB9B8C8A0E30F88415
89FE146D0525DF5FB31C974FC3B5796D61595A23B2F32A46B578F76FE7027B3C
FB43CFEB5F7F59BD687DB29985A7BA9571C0C192E1B320DB0FBFD9EC92DEDFCE
3088529A5C2BFE6B271EFE69C67B6E0BE73437121D5A26A64FE348622C6CDA9F
AC1A26DBF07A92C558D418A6A0E8B94AF8DA3D8B79614E1E029C1B5EAE868A39
ECEE402AC2178EB9AC1FC6A01EB4A52E159CBDD8D06AE39640224A518BF378B5
CD26761D1ECD916FCB2FA51922FCB9A6BA94EC16802DB8ED8C15960B4579F492
7C01BC195E409C760F618296AFBFEE1989A09F9F9A0ECDE728711255AD5797D4
267092C026DC41AFE6EFF75E64E0B149DD482B26C72BCF3CC553E5E8A17FFA5B
852ACF90B12E50FEF3F5C56140966AE46B713D0F7BA5152773F9CEFB9B43D1AB
67E0C1B90B74C62FF8FD0FCC249B941DE42B2B781312D14C0A9051B17B14FB58
2DDFDEE3F6BF623C0B41CE79E0C8820141AFEC8BF60722713523F8C21CC470A3
2CFCF7AC318CDE98739B360390E9A8A23D622660DBAB749090871FD2316356C3
CF06A91C405DB1530F1F6510D8F19ACD02E04943BA7EC7F18E90B0C3DE60128B
422B6C3FE9EE339CFBAB2C866D8E21292FFAF170560C0AB39BFD238A0859BA57
0499CAAA419F53F06EA11ED9CBB29E514659D45B139AB83B87241B6FE67CE3B6
5B1BD866436AA7E2D2C09DDEBD95B89FEE748C207AF278DD5892D816A05BFDC7
06FF5346D85AE9C70B6276BDCF80B61524827F3870095BCD16CF26E00CD6396C
572AEAD221FD1572A0EC8FB8536E6374281CF76D324B3A97094D63EA1E87EA4F
5AA5E4A0C898CB89522DF1DD22FBE4C835B057D5953BA549C0742D661C8D6BA1
F5130D2C363198B3186005E9D570E7A1E2EB5632AF3BF179EDFDDC127244ECE3
A3762DFF4EC57C0138AE5277D62E1F099FB5F3896887F0DB0C940BD5E10A5FE7
4E64938AB8C1C4FA538D03872375F0733AAA9F00AA3A998A0D261CE3F51F5EF7
039DD184011B7B7F6505A11E4649F24EBF6CD22747FD308450AE7338B33D7969
A92EB33FF3FE3116A3CFEB9E338EF0D7B0FA721D7D11990750232C1895C4AEF5
E1E1F02AC9FCD1D87929953EE6CFB6C2FD880D2A18FE28F830562887FDAFAB62
44BE43DCB6A708BE25D0CB8E1EF3F81C1626E3123F65357D504941120F132BB3
0C1DE13371A453BD5E8D063C114C81188DAB8370DD727A88730D6AE8D68D1D5B
530C884868B78687774FD9864820B86A6693CC2CB6FD995D95B1FED23A9547DB
83674045257BF43591473F853FE3A2A43B7CC317DEEB38241F72EBBF2C540FAB
2C4995DCDA3E76BE9897BC295698F8F36DB986C6C618AA75E527C04ED4016B8B
5106A95F4C73B8B78639682E6E7F0409243C6256300F709FDC037832AC20085E
DA0954F8CE227028F10E36B815162473F914CD280E2C9F988666835FEEC3F420
D0FB620A83D7000E7DD9A2A4421D9EE36B4F0A77AABE0D00EB2CFC0C1866D683
6F5557F484D9733BEA25BAD1C1C0D818B24F48600A144502EC6C0E97C2483743
59C89C36A3E6854039C0FF5C49D1AD996A67AB0914D83D859C06AA08D5C2B427
A4059D2D02A0F91EBEBEAE46A403DDFF88A74E11DFDE03CCC5709F6D806CFFFD
B6FDF9361520D50AB6C6FE027E9D535F27D01655AD662E24306DDAEDACCFC543
5C59250E09A0722970B560097CA8B45C55E1BA7D2CC277BE315B18312C8BE995
37C3E44E721A361BED672491CD54702D07F21F9592EB7D34C1B0143C36A80631
3E61CDD6645A9C7DB42FDD905FF9EE5FA98B2F04D0E776DA8354E5B65B92A631
0EB3C3F577F2A16188D24FE0F872DD0FD35AA7A2CA4B557102419D3FFCEE2930
11D25E9DAB1A2D1032BD4E9458C422FA2D9CD6CA9CE72472A03004CE2C976856
1BF1201B86813C6B89EA16AE1CE75954AB01AF9AE53F3EC95992C09FA5BFE86E
6EF69228DA2209A560A1C2900D93C7D84334DDC6B6B7F51C9BB2A44A63AFBAF6
73B83A89C8BE6B2C5565027A5E6C42C82CE8B89FDEF364C224B3C87F241CABC4
F995455BD91EE908F00707EC53E1CF114795631E3B14687B9E351A1050553FFA
5866AA125B2366483963E4DEF11001EEC1AEC3B19956DDF207E96FCA85B085CA
DBF9DEDD098FA66678CC94D621F31DCB3E021998A5D6EE94CA4BE214D57A73A0
3CEDE934367F083F6561C939669E28B55BC330467F3A4024AA45A41C5B8F6BE9
C3B30C0E56880907BF0C1BF8BC3F5BEEB210E4A52724E729C277E902195DB4D0
4AA63F145C16F1812AB2F8969F9BD74705319E03C9B00AE4027680F9CE1156EB
4BF5E50FECAEA7FE970E5212434822CE24ED6438F2103F4EEAECD38BB01B2C6F
42CBAA1F6D0503AA0DE9C012E610B9840E263707E73B9E5D9858F15005486CD1
B3524B6AE0717B818974CE81701F1C5E0753961BB2255BE5E98ACF4BB25A3830
CDCF5ED1C964A5EB0BB4F2C8AE029BD1172B430088B5786E7CA9604C15E18D9E
E65D657E19E355BD525A77989E7F7FB4213C0A636C246DB228EA31C9AB898456
287492A54561E7DECC2A93B482ADF9BFA9BA653CA71C9BD82D0579E7C21FFA0D
A6ED4BD6582E0925DDC2C0F2F0DA63D0C9FC1090DC00FFC27F6AA52F79225868
783A50546B12D7ECC4107FFFC9AF461DF6E344FB6FFA16DC77B781EF03E8CD40
404DBD9689044B71F710D0D5A3B77A6480E970E001652022022F51EF63B2D374
A4906DCB43730DB05D63679E6BEB1B8B2ABC98B7DB4F5159A408C77D206AC060
A8FC5643B5EA52C15F5AEF6F3D61FEA77636909877EF572582BFA89BC3FDBFAC
578A525BF8B960B22DFFC0EFAF5C10C35A95B63056A0ED3DDED1C8764477F632
88D6222B019B0E714C76571C12AF0A6796EB5ACFD9AD1D02CB7DF500C5D817F1
2DFEAF581793C1D178E74AA9DB30AAA40D35153C336C37E21E3E82144C358B1B
12E2526E3E816E6A00C6D1F4A994FD05DD0D2954B32F80C3730A29A9DC4ED432
F5107AAC6C8EA201789EC66ACE781F5D5BB14294EA45E98F210DEE90F6F195A3
051CAFF0CD416960C25E80658F0CD842A0503F8EF5442C290FABA45C33F2A7F3
D3B33E7D926FA1401F1013CA0947C4237C23B311D3A29C74A59723D8FD9CD431
750FEA12378846F3F29CCF772CB5742104AAF7F6B37234BD3256784F93FED8CA
9257FC6F8AB4327A93FFD6DD41384C155A7899887DB8FBF527FB93791CC72A66
E417BF6E00591F78206B6EB445471F2E852AAAAC4158DEA40B85DEFCC5C2145D
243E40222126B2F695F1A7E22D58E88CE48EBB539023C3BE7E57DAD79BDC506F
66305DED851BC8F616A8DDC0830E630028317C6FFE3A2DB30EC928544114DB70
6F8727E32241CA1AE9D54F1E3710F18FFA2F912FD822B6724B7F14C359AFC592
57053072FF49817CFD5784B252A3FBD1CB8EAD24B2F8DE2F54038936FB2D9659
D413E755B20ABFBFCB709F07541F69F3F9A35EDE6D609086E56DE8BABC44E63A
7FDD2738EC2C72BA2D09F7C60572E4537FF6333A5C0F5514AEA4CC65C257EC4A
6C0F3441CD9DFA7FA13BFEFF0A5980FBAE2FE3B3F62F20BF5C8B381BF0060C50
81A47B223BF13C0D6E72189EC212204E9026A0ED0A5A2C1C623A6D6615F24FED
298A68097564AE77325D26908E23E6C11A20D3E8C9BE47403C757EDB2D7D19B1
6AC95599776889FDC6E22BDC1E924E1C6F28DA533DE72C290E08134D763B15BB
6B2B3B7C1EA96FA42415877D33CFD614E6D82DF617F77EAB048E71B51B3BA307
52CC6394E725C19DF00F7DB44981E0FE11CD42565067FE1B9B176926F360586A
5C26C99195A6646B1336F17C474AA91EBD84A394F47883D04366386D92945935
DE45A0751DC2CC7922A49B5B4D8177E80007E54C0E9B40D23458BE14B4C59A1A
D1EFBD0B82213FD463BC757AFF2CE0C9076225CEEEED76D619B0F3264E153925
BAEFE7718E828512307217D2A233C37004085BA3AEE379269B4484F6B1523DB5
65BBC3A1EE19170598C4E94B5A824E0C3A883C113C2E7A8DF0AB9C9B35E71B0B
E1A3A7054D201AD39204AC35CA6C6957C87931BC96DE8BEA1505CEC0739F4132
31D8084B268F746A200F7CF92D71DD42D62507AA6E60F1173DD50937EEA219B7
8822A55E3E6845AE717EC0DEE2E7E1A65036AB0B6CF7AA892FC8E6E9E53CCAB7
A8F0DF69981E9492DEA2B5C5C11F9AE7F2F8C8DE3DEE108988BE87E309577263
E7B3061BB6599DDE3705D4EB2AA61AD3B7DB9F1AED5FD39E62900A9DEAC70B30
7C8E2229F94F3B360D1F7D0B7CE61AEDAAEF98864B8B9FC2F09E621DB4AEBA91
888FBD4734ADD05ED338804705E93A932C2779C3B008AF46AFF74781F045E3D3
F660CD3E5C2F3604019C1E6EBC56418922D37F9EFAE47B6DFF81D96085CF2D85
B1CE6F12840B521DA32596763F17168B27B151E8D4F7D855C4EAE8DEC82AA777
63238F6517F9C0556D9DEDB9A655EE349F0956DB6D6268C6CB36530D116F3822
0E50161799BE7C2359DCC11C39FEB5EC67332209F3BB6C732E191427FC63A7A6
75AE7AAC05AC5F8458FF1D6A46682D801AAE769BE7F49BD6526B9A6A96300AC5
C68153E7DC46AC75E4031836536A9FF8FEF1BBAED5544B06AD48DAD5E377C2F3
75CAD13A90441FF6FE194F830D02D1662EB023ECFD1BFF24001929DEE52B86B4
D78854124B117B2F35A1E2F724B9928D3272F47401D9A3A0D376856B2036634A
72710FC8DA959A662CD6CFD0C64D459276BF2D8F25F13137C7F1CC459CB3B23E
CCF1FFB8A486483FB09DA826F677BF6ACC2410A681F72F7F9946F2DBA4FA83ED
F6A6CD3BCBB0AB202B0C68D55640A6F5EAF3867D0BA21009BDCFE0D7F5BCFA2F
2FE9A1585BA475D84C286D85B6CDF0F348A9853F0BE3BFB5243110344D9DEA1A
7675912AA4B7A084AB3481D7912B6E76E333BF24A5894AA474C9F08EDF66B627
B992CF9E38D1393498ECCDCB076A6A7E850ECD3A062F050B7C41FC739A2B43BF
A2363CA74FA72668FC761D1A17B9C71DC455B8D95A9F649546B51149457B8CAA
6F483C4A0CBAE88BCDE56449915848291207004B10A0DE37EF13168EAC79BAE5
4B4E5F84D18147590E054B70E3F30CBA503F052EBFB8D8D035A9EAD4C689D1C5
54BC73218607863A12BC10B9D4931D81DC972CA5A76E6E9C93291AC0E767FC27
3A02C5DFAF14A6E9660AA8253D564A36E960248B9E8BDD84149AFFDDCE09BF64
27B2F8548CFFBE68A2F164CC6E424FE0A4F7233DF9A6BD4EE76B603B08F34E79
04C1EFE7E4D8CE5C9D7EF37032F56994BCD74EBFFBE76C2C522BF8E5FB453133
0E02C9A8EBCD6C3AD71A1947027C21ADAA911578E0CBDBC8FA2043BDEB19CBF0
70E32CA2EF84CE95E719106E59C421D7534E48C018EF8426174C391EE9AADC6D
26F1D3B0B0E9797836CA0B1D5E7C4A577EE64AA9725A015C1E0CA2644D426C00
7E568529563C31DF75579CD24CCB5A7CE967062F19345B9C2DE9B686986DEA74
0D744963AE53A1B8DCD067A4C16052FB1DD51EE1D8B35EC2E6B2BB0314FD0E28
35FB97FF4F1940645065756B3E3D0005AD729E3C20D66DB734E988E22FC9AA3B
0AD9C6C4112ECA1325C0D9620309096E26A69A28408B8B5C5D7C8AC1E980689C
A5BE15C3FA96CE1F8CA17A9A1547F1D8811412A2EB048EE8120FB303DDE800B5
1D6E1E03944ABE063BAAC326291B5DC30DE8556D95445853D02D69F06FC20D7D
E3791B8FB54AB6996D77D88B6720D556E3AAE3C6CD20FC30E38AAE46D5DD4AC2
5883342A3D65AEAEE8D15DE7E1AE944978C588F15F88E98F847B7220B071C881
940D1006E3B598E3BC4FDC8C4323E82D09E3B25FF0E1DBE28CCEA13BF406A132
E0C90F12DF902AE802661C9154284A41B7D92BB818F8713A33901A80A18BB3DF
60DF1D9C1F0526611190E892DCE84F81E28A7E1B43265201F1B4C49A4EE76448
D1CD18EE186B9EE8925F359EC5BC402442BBA33B2663D56442D2D92CA9EC4DFA
F3F3491D3024502E3DF760580C061561F273319EB999707A229E2EC6B3D43549
9D35A59EBE7619E8AD39200BFD0358D8D606291B417D0B25542A11A351AA5805
FAEFABB436323D319E607297892E09B979F93632D2B7C11EF06056690527A4EB
D1F1355C3BD6C91F16E1EB79AEC531B4E058314D4A47F2CD64A2F09D9F2D3AD9
03B8948753E873822FF2E1C8DE9834854FF295564323B9DEB2FD22CDF770BB77
CEA13495326FAF275170D8ED66C6E93CAE2558AFA79FE69F6BD50503F90EC20C
A580FED92B9C4020AF4F0245F768E1AAB02E79A39D5316DDCDB9873AB4721419
F0CAB63272251D6BD7DAAC4EB47BD970EFBEE68413DE4D82E6AF0A1E97784852
B4128D5682D6E87916FD1E299C5A56F55F2F90CA98F8AD45A29E499F3C72022E
5EA5463534508444AFF044845F16B02C5105565CBB43DE8DD9B0C30069E6CDA2
C46A1574A39B61A5EBD0D519ADA58004400A9B3D2BD411FB9BA4C621F23724D7
3B1079F7FA041D7F0EB2CCEFDC74ACDD0A592FFB2DF1672342B98C8C1230E7FF
CC75FE1811BD701298F763AA466B7843770B040126F7C29944270D4685080BFE
F325C6AE3E80A85BA29372A4D4B36D153E5B17838D497D8CAB42412D8D639C4B
0EDE5FDD27935452BCDC35CAA1362E0BA23C6B248787FF2E6998F2C4B4F5FCFC
BA5B07B79B87015A90D36A4B3E70CB6437C18A6FE63341D099B30191D5028667
87160A5364EF1F6F3A8F40FC28A8F80062CD6C9CA9EED87A4EC37FAA311671BC
D21B2926BE4C650BD6D0D1AAA5F7927EA35B8E19688E347F3F9356111575D04F
9AA9DC7231D26A76333D3B376B4CFB907A890BDF572C18A60D74876ED88EC52D
2695B95E8EFC1512ACF21BD0C304EB9416411E8B0E6A5586B6F49D5B02434555
D99F2E2836D5536ECA77341301986811B7C76940F64EFF4AFBB2C196908E296A
ADE1C27B8F6888B20CDF4ED4B7F2CABFA5DCDF2A680D97649B531827F6A27FC9
1200176ED1F3B70DB608160740F68F4364E12D55C4EF5739C8802417E8EE1243
E50DBE5DA38D700443A638FB7F35261F2A0A30CC04F5426F7148BB8FA709AF13
44271173529372AB2DA59363D6091443CAA846B4B896AC332DBC5C50C97A6493
E6B962B946D56AF4DB0E0BFA4FDFD2600F36C668F64743766368B5169A98B504
DD1602FBCC202CC8046EDF7D04EDDB05D506686757C79C2ADE54B913F1ED4769
34573B72048904BBD47D276D475E2FB51F74A8BE2E5E36E8A64AA094FE3697A2
75D68B3A674D43404E33F99A9F6333FCDECEBC47C3061DF4C70CEB5C3F6251F5
8BB7811BBE6FECE60AC0DCE98C901A79E3E0354517C3D95B3CEF7CA83241B091
503FE2B00E5F7579AEF49A3D4F262C7319C6A702B7E6453B1672D45B719225BD
4AB0E541C6E9116F2067AD2F9B62E5EDD6FFDABAF6A0834A8A363BBE485A88D8
AB7374E485E944CF50142B0C84B72B2CF350286219AE3AE753950304A734938D
F3A3EDC51EC1CDCE87C1B92746E8267FA78B9321B7497195A0D094F843B027C4
1F4FB4365874CC0D1A182B42E4E0146BBEC84FF4FDDB145500D77A97A8BF3926
06010F944ABA543914B01C87B8BC5CF59F64B790DADE8D58756157053F87A67F
EF9C47598585ED0C78B4D7E5B9422B3CE88E98CD636FBA54E11929F21078AB15
8F3D371257512495CD7C62396C3AAB962CB9E16A240013CDB4F38DF570E3B1ED
8416B48475B23985846B15647ED6F765EE39E783623FFEBC558AB5F9CB60A2B2
B7D3726D4D06CAA2CB08BE12AE7514F95E3DD9CF7764E41BDFE03C71E686B96B
4D4D56C339D0E0541B9100595D24202DE22DE3D1C72ED10796713234A963F7F6
C74C3424F132DB46B106ABEB773B29B0AEE932D20D9A5B4779DFFAD7B3E5D447
023D643406F96936ED5F15962D7DBEBEBC3D2667ABFED58E96F299B7A1BA099E
35FA38C2095D6D3C5B62BD22416334413E965E6C31138546BB8DA583B835BD8F
8D290BD895D2DA9D9C97BD38382FAE8F93AF77D94989AA693B55069C4C5387F4
9909A6399C1AC4D093AE96F31557A70C4545BF8D81A0259809EE9F92F7666047
2C5BA5E78AB435FD53E5F79FEEE1B30ED1EAA29FAA9DD9CB641E5BC06A2079DF
3DC36A2DEB505DA944FD138408B4F94BFB42344A2982FDD753AECD1B53196B31
F29C5AF625B78AAAFB57ADC2E2A230586AF1689FE77C7CF7AEB19D06E1726151
C05E8541E1A5F1B1603828D9AA4792628915E630C937B2818E297E5E824FAF74
FE818471B966D6E01474032ACD990C5D60BA1C0659C25BFB38673CDFF3EED771
F3C3B71564ED71BD85AC96EFC164226B9C2EEA6B96662DAC9D7D9D4CB1DBCF75
1C748A7ECE0F4FDCCA3F1B81FD0107600B58A83FBC8DB8D654C0B56D514C4F79
1D4AD95ECC63E51AC2C563B89563D0254194DE000681912B17BEBDF8CC84F36D
E8F89E9E45939F6BFE0B3C411DEE7376628B1745AD02A01894C458AB9007A524
E4F3BEB891D47E8DC92C1620641CC75AF1F20897BD0FAB1B2FD0239E166BC849
55402CE2D267B6F66D9465907BB3E7B2C26A1B0412854F4BC16A4CA2BE0C84BF
4624522F116E8B21DDD0DEE307C32699453037732F54AFC0BAF6068997C1E1A4
CFB85AFD46ED46CCAD840106074F69AE7C306DCDA9D0E658789BD4E7377B18F8
78DB2EF1C5A129EEDA58D34EED3455C90F1D36E21D52A210FECA5F50626F265F
E2EFB55C725E3CFB3810CF380993B8D52A6546D6933EE48F3D4072572E95531C
63E1E76AA34EE0AC7236949174093637EFBE8110087320F134579D9E18D1E0A1
0A1ABD6D36EAE84C047D636122100FCFB4BA3ED1AA95C2267534E2543ECE021E
45E6D60B1DD6F4C4423D10F8A069F280E643364248898324FE1AB2F1F8E4D033
9BA19967F1AE7CB88303AA789B6381A818AAD687B5997486B208385F7D502EEA
7777133601A5FFBAAF6FBF423892149005F36BF64173AA1D106CD4BD1C0DB79F
FBD30BC892A8954E2EECA87BD9E1FAE18F1A7D26F4B731C3F387F0A30C27BE49
D91455A33A2690A182C04BEEC7772DCA15E8C4C54B53DDFDCD26CC37435060F4
600606D37D3D9FD1A7FC20C44470BA5BFECD08F2E9B0678F1C75B43499BBB25B
377EDACF6460DADCF9A3437723B4437D05370C5991F5241B4557418A1528BAE9
EFA0140545252B0FC88914B54C7DCB8D72862D87AE87F9249B2FCF932EDFDF6B
CDEEF97E28A71990C9D9D966F9510557EAA9071AF87F0BD2D33436B411769457
5FD284FF8E0AF8A0ABC2E574F330779158FBC442246D6A7F06827C72F22E721B
8A9BE5351166857DE5B2B016A4B47DCA203C6C6EE5F2522ED90099D9ED7B1C56
4626D94B23D6B63755279D438F1F30FCEAFEE2A839FB365DE4872D79E2F1D42F
FB8C7D3FC0A9B3B3E4C94830361C8115DC829905CDD01E943D7DF6C791E3BF0F
9F31D79095F8A0D322C981E3B2E067844747780ED76337619F86AF1FB6373D0C
EE6B46717E12E3A132F5662F97BDC23F7979F802D54822CCEF7FB4F3ECA3E947
9F0C48140B475573873B2FA48758B7E84FBA9D6FC5FB394169622625F2493AD9
5E1A2BFFD0BB03E95B04BA9741C4DF40D44C0C1726E6D6DAA26CD5D562C8CBAD
C435799D547BD2B0D0179A96E8C1BBEBFBE83EB3E175A386E514A8CE8659607A
1D826653AA62D8B63C41C1067EDFC2807B3CE00CC05F6CA1D87A1C83530D8D27
894D622C39534F12614E0DF155D72F1EB2508279622833182F1FD33DCC71554D
A8371698B3536CF6FC0B650DE3512EEA2757F34ABA4E9168E7D3DD8A0047778F
225EF697FBAC2679BFDF3654981CAADA75574B2BDED25562A80E973A68CA7A40
61A48AB6671A33AE2AEAA6DCF5A9012986275483553D8A07FE60B2E85D5ADA11
25B5EB6F8C61D4FC7989EE78FFB2B37BD4CB3EC67FF81E7E61A5954BFDD5EE6D
EFE6056EA4A0E39A39B7FC1A6DA06178ACFB637A163F9594E45B3A0083C8D9B1
B979261B035BAC07746F3D79D070C1F2D0A021D02B02DB6D083256BB101F1900
4A263F48263C27AF5E0D027B46F86C3BB70004D12894A5D3A331145DE6FB505C
C19634E9A1548ACAACAF646140AFB2AAF466E041274DBD62E359A545DFE93DAE
3392E4D5B7DF63406467FC8E6A63DE565844A55868E879F2ACEE148D55098B00
AD714B169DA93627B12C5C648C2430924E6AC90BC611F18FA7D4EAC0F9BBEAEB
7216645FFDB0B1EEC921620E668D20A9C04B43955EEE5A4C43F07B6072193EA2
74CB27630A9B04301E65E32CB1D329C7450A21E4F97C8FF528ADC2F97F87C592
96E72C38053D427DA3EC5D297AB110438F9AA9CEDA8870390B4ABA006A049FD3
B35074D85BDA9A615D5C324307E0F7A53DDDBCAE30B6296B964C56A1BBD2139C
B6629EB3F0A3070335F65B05427E6D300B417DF52C331B84280AB2EDD4403C38
2D29751340F63D14C45D0C8ACE829ADECAD6B2FF589643A3620920A5094765F3
58F9286B8AABE133C4BE1D31DA0BA8D50D2356ECEE41D405A20F40C598B27BB6
1B4A077FADD338C2A01580D84E0135EED6CF9603D6893CD2B43CA2E06AF86228
F0099D542E9DC1B80B07E799515496C142D484DD2FB5235AB9484989D2EC1CC6
6C0FAD7DFCB05E178555E2314470BD7E64EC7CDE2B9C581634E789A5C10BC1E9
3488DCC273143E753BE26BAA8ACC9B26296657E7F047BFE6E513E36230A5D4D3
AB27C9A1EEEAE3890F6E58D8C19D6F90AFD127A50E03D13B449B4A055214DF69
D0218549440B1C5F194766491BAE8B3EFD96CF662C4E1596797E4AAE50E83A29
5ADEAFF551DA93030EC7D63675EFEC04DF35DC49777BD37D1BA128C91C36EEE4
3CB41592BD13837B9EC97359926B22F750E5E5FDBFBB4F19F8056D808B6C3229
AB971C5E648B1745AD02A01894C458AB9007A524E4F3BEB890271A5405629408
224D070207499DF2F43E7D52E442ECFBEF4D3AD3BFED9D1DB31CB9069D9C3FF5
D78DA7FA702E2C3CDE05D1F89C5B497B45B3EA9A479B91525E753E3C31AE8D71
72F3E47139FEF1D23D2F930AF1B361E2A8F84635858F00E6A27320CF515B7B8A
F90D0682E89F0F5B5C74CFA6B0CF986FD924816C0C55830CCD8D5B824D16E33D
AB7E352BE200322BBAF6DDD2628694612A7795D4CFACE7F841AC1F60D7868911
1BFA6B2D1015854A4283AC7BF24E83A08486E779A149C3C0D7EE148C9CA55D7C
D70A9985A13B16D058121778E93631D91E3BD5243E747E98264D9C9D22F16E40
184A3697C368E4E09A0E20A68E71E5C4FEE96C8D4DF87FF05432B5165C8DDEF2
5B687A3F7BED77FC223B3E7945603D6015EF45983A3E04076CC1A456DAD04402
1E04D419C671C0EB19A35AF14D01BF364CDA574B05043CEDD701AF9192C734C6
DD76EBBE544C687013884C6F5FC91B1243B2586A23812B9A02284A73149C3956
87DB2EA29D2C00B939B4C965E9F34E4D09B3E7D97174925A908E1E9E3FF3FA03
716E9D7697AEE2265047DBC98A857B183E3D2AACF07FE230C1287938562B2203
565FD277C13BD2342C13A684A54DB692DEB484A8B9100A31AD1DF7CE7CEDF45D
8D74898574F4602705B834E9B0391E126C95C045927A179A5DCEE14C9E4A0429
1E803D142E37E7ACA66AB279378E76E7E1FD98697E21F7AD3CF2FB3897152B7E
9F7C4C34D2302BBD43CB8103899EA8517AB8C18737EC2FAABD1E52ECEEF1C6D4
E507FE6C285D244462E06C90DF1FA02AE532EF0A5947731C8963554083117746
434DF37B10665BEB7BE3E3AF28807251F21C1EC7472D56ED0C13A9659993745D
7159FCDBB10B6459273EFD03520F2483A9E3BF714CF0B1B98E14B1CCE43D91B1
37EE909680E472B034AC058C6D311CA89BE960392CF963A9E9FCA6174B6B29AC
59B05FEF5314A81C8FC032C23639407AE0B9EFE412C20A33C0E343BB16449961
F30B34D1933177E5EADA8811A2BF34A30ABB7ECEF68EE3D3050D3C98651FBFD7
29434DDA1570B980F3596906BE0D23A71396BA0A0F359DA47159C81527B9512C
40DDC92C489AE31BC9A983B58167127B065F507D69BF5E60C95A6FAC2CF9D670
F1FDCCDB92373E4B88789736CFBAF1AC7F16BB81496BCCD887641A523D4FCCF5
4A0886B36BE8F6E9775A927F2EE367D8F2E95DFDB1DAE428DEA1143295B18EFD
0A4F289159155F792699F15AE7E181FE3ABC4B4C70E21F3AD9A935513F906E74
846306E52E324E00D300A78B984ADD86FABDB7177AD139137E1E992023356C5C
546DEE5401E4D47D1D694E02AF6E9FEB358782D178DFEC7FE0BA186B642BCE47
40F0AA61E1DFCE95DFCA2DADA7BFEA7C740F98CD21181170BB05CC2CAF62830C
2C50EFD34C4EF05D2CF0239798DB5F75ED2150480DD677F5CCF1CEEE6356A319
2DF3066AAB60C5346E0446E0EFA5A948531F89C48C8B6D578FDAE49D71676C77
EBE2D09016E1AB71D7C807E3A9E4027A59D6FA0607168B4145A22A5CDCA376C9
DA1D3BEFA5424D243AA8BC7E87176773002363255E7494C18DB367464FCC8483
29BCBE84245A4B5E96BA220FE3EAB31E73863967A4FF7FCCCD04CFD61476B449
5F91B5AA88DB64A5BE869CEB87DE108A257695EBB4A97CF9AC44326A5AE707F0
25F5453FF3D2199861742FA84AA5CE3B15997107412715E20A1DBEF5C74BB515
E6203671E2423ADC3215DEA85F4DA7743A09AFECA6DC807448B48C85E4612100
4C8FB98CE96563219F82D9EEAFC6F78AF8033A6885439ECE69234B15780303EF
D10F9B6887E40A5D78E6B1E1582E723823EC950F683A6BFB55D22DFB161E1D6B
6DBDD7FC4C7D441AA62D48801769531ED7EFB3C438EFB1BE5C26D0C888082F3D
DEF6558D68EEE57DD7DE2478A2BB4113F414303479632E105CB504A8568F31A1
0AD01DE9233ECA6BC0754BAD59DF4558D2D608FAF16668DAEACFFC1983A023C0
49F778514357E82EC809E055FEC4576058707163A723A9E71F504DA5D447AFE8
CFDBD88089F3E4F514C6F7FF2FC245360AFEB12779E6BD0E2D9CD6E10B1CF78B
17C4CEA5EBC76C94D6DB8098AFEEDB9891AEC77353F897D3B64D079A3BA8A991
284F36B0270A7518121557E3E96F17DE324F9355152CD28C7BC3BB93B0B08F6D
A1182A8380E74F8D4D4FAFE246FEF66C656BAA6CDD82FF8FBC05291063120165
B4379B1A4DC9D967DBFD70C7704166CD3DD128179D7720635059049FC2FE518A
2079A69DEF4F35816A39E65B1528AE7D952D4A4FBBFD2EF6963344C2A01874EB
C120B8A728EC0011B6E29D3DB94D4821CA583928714F3FA3D08D08C1A6967756
58C9F496C0EAAF3DEE91374116092E029686E4AC0E2699E2D944C4D2168F1C92
6D8C31F6EA95FD665B591E12E4D284742BC55186C6E84C2E1CEFD0BD71260782
BEF672133A2FDDC2402AD389465862718B6186BB2CF4B290AF56B7F7AB9F24EB
A197C783B2B6DAD6D6D9CD9C8E87EEF22CE403C1E2B447412F3D2ED6F432DF4A
CC74B2CA07CFC325B2FA8508290E2C6D80A6AE0478021E111AC732F51B3E61CD
892B5DE3777908625E1A91DDE6077E980452CE68A119AB986521CF721B288E1F
EB35E5016F4B595C8189A178A35A25883EDF8A78A8612E5D3F617DB098B574C7
EB49C7683B7056EE108F5296FF68DCD3E59302BB325159428C13E4D090E30886
D8F1CE06E367580D62A80A6C534C8864120F5EAC9AA09148F4B1118179748A78
F5B5BEFBA37CBCC7A0DE20F697627A5CB22BB386849B2832A0A9673990B72A07
FDFE82010723109906EF64F103585D0754B270FA7C180D3CE759114D5D58C58C
ADC8875BF7EEC7F87E5FB5F9B4D986B6E975BF8F27A17CCA1B1709CD3C624142
81BCB53CA4A24EC8779CBE18F7BA694D97B688457C2B361470ACCECF7BE23259
A552624DB6227119F68C6EE144593A193357E3D1F5022BE5B15E1D4CA6C007F2
D4562B13F5AC907D97179404B08FFB7719568C21CED36FD33CF753900FF5EE78
D00E351A980FD7926DB858B91872F91CEBFCFAD96CE6465ADE09402C8FFBF26E
B6FE3663ABFB7F6C87F5945CB7CE178C529CD741BCF3E19A3AD3094F5C09C041
D11905A6F1F8523E200FA546107734B276D7DF5790CCC8F48922899CB1E7D70F
650E6471E5408C44554E7B9EFF499DEA14079C31D65CD98FA769BDC5386A2667
3BE3A951256F0DC437F527F4AFBBE2E19A784B1D204DB14642C1DD91C796157A
282D8BC6524B578BCF2CA6C2EFA6807116509B7D3B960EE375F1DCCB4CAA1CCC
DFA0EF44365FAD20A29EF38C14A7D31F074565A14EB60996D6F3580E0E74CA44
D80BD99657E6B1112329A103DA1F8D6095C220C0086EE913D280C698BCDBB8CE
D18AA5245039E3E9D8027DB687567832CB06403D4AC83113CD8623CDE7FE844D
F96FD989CF9A31E6B8F55EC976386C425B7747D5C00E90C1BB3D58C1A115B39B
76EF792F7CCB40EC0E7F275A4FE93755C89B01CE2F1AF46EFDBDC92B4878E97A
2FD4E789818F8474AC309F07010EB0E6EEFF2A3EB6A93D8EFEA9A41172D1D82E
14B0037ADC38D7A957C7220634C26BE4D5488927E83A6949F1F163BAF4EB95A1
0457B4A63862D65AF4E8D4946157B02EFE0D8200621F2069F8749826284B5DB8
E20690CAB98FCB242CB737DF7E873C11E9D40A2414485EE51C916E20BAD2C45E
5EDD021E28D2E26CC3DCBCC1BC5D15391E77F19CD4BC0FC21032E0BDD7B77690
DC429F1222FBA45519A9480AD7C78F63B4E0FBCB958A607F83D49BF5F742A741
D9B5FCF952CF0969AED3E84448D0B317193E5E409CAAABD5D927C9AD6B6D460C
C3182D04E16E64D0BD1E9C51FE82BD92229B12990BBA06015740AC71511ACC19
D5C7ED23A3308B7CE06BDB639090994042446ACD9591297ED1B6DF3AFAFF9CC4
514D696AAFE4DE5A696F974B39E72365B734D82A90CC06D21A3255E2736F6A88
3D861E7A5F885944E04B23D3BAB6116D53BF50D6616121C7CCDCE992E4AEAA6B
2CFFB68E9524364C64FDB8DC549DA028D46BD8A6C8A34AD242BDACEF8AB64E74
295E3032DEBF1510C1BFEAAFE9B081632CAF8AB7F28EEE336E8E6FA7F0C1FFEC
E2A4C91D60132F3EE60A899BBF18BC6EF3F4DA80F174AEADA4E84F57D6F36D80
E78F88A778FCFDCE8435BFA7760CD392C4229127CD710B400E05249F73881A39
A4D1D24C6DA54C11A406624141EFD1157E0E7243AEC55DD582965CEF6E8F06B0
0119C3EFA8FE70A0D796
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A110651C31C7E8B693D1749B15C418E45E80E48284
2B429B1AFB33D68B4D63B8AE33380F0FA4A426F4A8E0F7466729AAF35F157381
6C9D25F988B9FAE475C9BC21222AD7E0721D9B289F29BF3D41D92425E94C50FB
3D4BAA7574FBB32CA8ABAF8D9AF332256FCB3EA78A9EB74B4B091BB5B674B009
7587802F6C66C3BC6E9DF45A22A24877E4A44991BBD0B8ACA80F6E7A468EFFDD
A0F44FB32709CC57D353A47EE953FE22B755CA1B83024E916430F66BCC9C0013
59DF6DF52D943BC285B007D1135D873B6709CF1783C386AC2358F315677479DB
92989DF17B1C7CE7AF4D7985886E4D9610EDCFDFC77C8DBC0F35778E3BB1B1ED
E4A453F3188709A85504074B869A7D9CCB045E0AAAC45C73496026CFC1B35259
5ED325A37D4D89E34BD8A09FC863DBD2D14764D82C2AD229D1219D78BE4FEC35
74D5AE3388DDE9AE21AFE51F5205CF54722827FBC24AEF08F6DD0BC6A79A2DB1
FF55716866C7406275A3206C0B981EB6DC945854759B8A4E469825F31A982083
0FB63D5BB4E8414211B972FEDAA71766C9B0D3440CE049E4FD8F1183360FA328
5D8CD3D8330D96CD8F687E8947B12E123AC89F962A9530DE5AEA07A6EC2C6585
47487FC2B6844308370AEDF60F40B1065F435BE8A39EB454D88F5BC45BA818E0
576B43654C207F12B1FE9D0800C9DA440F8F4DF34BCF34F43878F7D76E5B0744
A7C12C1F974E42BCB15BE6E4B11B1B3C178225B2108D94089E6544907FDC1CD4
24D2D1E8ED86030B6F0F045A27CDFAEFA66D2E563E091E4820C12FE47E315478
9E02FE363C3191393B266A453C68C647CE8EA12552AB0F918E093F58668BE6A0
988C56A71701327F3123ED0ECDF2560422F393437B17993C173D78CA380FA824
540B79150E4DAECEBD1A67CC197C6775A117B7B607BEAA7CF9812FD8C2C90C93
B34EE07C1F1B354CC7B6A68856A2E0FEA9E06345800DD13C04021FC924C88B19
890571C60826E10376A9CE8E4B6C4211CBFCF9709AA29144F3A402FF8311E955
631DB6480CE2CCADE0F132943AEE55FAE4610C564183F2641C90D3BC9C9C2047
3D6FAEBE70E9DB326C4323F499565020467A2F2E305D6C518ACB1F8602BEEAEE
EB033229E3646B97042C0403FA6A577BBCBEBA936014055D10434972C003AF6B
F7798E9858286E4979DACD3F5A953BD9E918D5E46449525A4B02E0FF1D61A339
2B13C2BAA4F2EBC705FD27CD6D2025DA9E2137BBB050747E7D512F9C67296CB7
35C413373B421BB8AF0E7365683A159EAC40D59B99666C590B9C40B2123936DB
F7D6E0C043CD6D918C8C67320A7A144E5291FA4017E674E4E3F6B8002890F8CC
8043EBAE66593FE6A8B43430B87B8469A3FE856445ACA7820214079A40712874
93CF60835B57D688D8741902B245E6D36223AB972791081FE59397EF9D69415C
6C250EFDA6808BB06DC14D79B44B1D65CF8C2EB97FD192DC5543674EA5327A63
F01ED14BB1ED9A0BAF084C7AA806BE5556CA1B25F2298D1B77928B2565A93B23
689A9246F1420227229158747B235AF81D9C07C40D09E4BD687C783B27501C60
3CD989F14A2A0A56807349E490FA6577D5C87A08B6F333E1C2EEABC20A07088B
CD029984DEC1EE34F30E77F7C3174AEAA273A07A8F9639778A72914EB3707E9E
24D51CCB52F85814F0E7B70E525A10C58FE7994621A9801A93F1D2EA5B39AC70
CABD8E491D8F710C5F31260C5AD761E6DF3CFBCEB55C1CFB942952C5F2D227B7
A94085C657D1C6E4AC560C188EAADF0DF449FB9D09F917E5CA703C7E944A2193
6F13388CE0AC08ADC3134D1F38F37B0253074A1AF90C7A388469A4AFE99F2BE5
CCE86EF8B6EFE3C0D55955EBF49DAC8DDF427DD8BCEDFD5D15F53B6627729B60
3B6CCEC05220CD184DF3A8F645825C9F5C0ACFA0EDDF6A0122789BF66501B146
80A3B9650D68D467E0DF4748B39BBE76D32933BFB3185C3972FFB69050956E25
AC33EA5F2DB7978E8581B39E56E5A0F9FF6C603FA96532FA00F88FCC7A95AB5E
44EB877C6E9B75042A9C413C838DBAE11B315A3B6B5FC1351BECE9D1CF451FFD
EF67FA97D58086B1BB39BB1AF6C0BC2386BB3061C215420F75A9D089C7BCDEC5
0559B82CA1E9E633BD1AACE6F06A397B5D75289ED307C730A1DD3B5B7F23CD96
597C5D225B4C7A3FD940B5B7DAD66F4CFF5899A0884293BDEB690DC928A68EFF
BD0C108505F7C6D5F9A8BB59A813C66373E8E10B6C92AD0119E10939525FA2CD
9E35988FD5B8584B58D2A96BA21E71A915FB663A04001D43A504ABC776456B69
DDCC93254749D04EBC0F1106F62A30D3F714A33E4F65F6B6CE70F9F9E8115952
0DC45679D35E06C8A1C712F41EB5FFFC86409023DA0394E3CCA13502D03B122C
2166F38A261A3524EA3A004092AFBD59A17235FED8A6C0BBC9925B98CC9178F1
C644D40CE07A4E70B37A678F66822BEDDEAA3E177C5141A9845302F716DECFF9
1A64657D64B43EAF4ACBAC482D06AFD458F0DC3F4896CB93D7D9640B9469F723
C84543BEE989037E08E004B46EBFD5E6625286B9FAAFADFF8458994798F6A07D
58935BE5A9105C3164B47223A893DC58A24D65FB154BC4409B9A97CCAB9DA5C7
6148888F30AE04C7E2CD9F6CEA624002296A1EFE646E370390407746B9D96181
11EA22AA11A489B87A3C6A208E9CB0B30F7ACDF0B926969D1F898B5F9A7DE36F
F3A32F6B29B0EB5364E310DE9062984F6951B5AA2EBC9853650192211C56DFA3
0ECD347E1717AA5D4CB03B26C4A34300BFE6DB438E60940A1A7B10FF68354C04
3DFE6F770C56475E713DCF6434AE97F67BDD87E81163E68BDD4B8FEE35C725E9
A9EE151663032EE1B2834670BC9A18AEE36074AAC9214825540B01B34472A56C
5AB4179BA79BFEF0DA75C9221E3F45BC7A8F8AF3361EE4B989D3AF06335785DF
8F0B1D342FA414E3499C15F3C1C75BFD2390BC9B72C3D7C59B116F163295C36B
FA0E83CCB23BD376578942C226789972FCD53625BABFE9264F5EEDD2992597BE
968B5B231DBC59328B0F92E1CC7C2EE68241C590B09ECBD676D2E3EB556E9B5A
0507CA54A84D3343C409A009674D3973F49E02479CFCBCC6F3F444867A98605E
DCF4CDE45EFB46A7FBFCAE9A895D47D5DDFDC73D350147C2A6074B263DFB6FE5
8624564DABAC8AED352C574D062226B47B9CB5B4647CAD084A51EDF2A7B5D44D
FBC57F1B0A7E8F6FB6C483282DE613E28E0AB1E5B62028A52F9B53B3FA27F000
DD189ECC42864A1D5AA1AF966FDA5D5AF706F0A30AB0EF438151C7D39682CE21
0D8FAC8DBFABB91D54CC819680322EAB72E1250A760DB5FC904651FE75CB3AE3
44D9DDD6D66B643350BBF6D1653A9614781EB7E8CA56445DFAF3B11CEB70BC12
15DD9D1109CB4D90B6068A5235A94489F21B514032F3FBAC42EDC07887EB8455
6F43AEDEA439FBF139A16A55342EE8A56971A05AF4F329B3BF197F1CE08A4D86
35BC8BADD2AF776E11669B81EAA99EF9150B8D39695D096825DF2E102C6CC2FC
BD09F82ECF0716F5378A8C51C139D72BA8445DEA9CE0C63338837ABF0EFB575E
E2A90BF14437E63C54B529297E4E8AEB9E349683FC5E1C323236F7177878D14C
F0881BBD1006BC9B62A95FE764579DE0CC5B4CFAEBFCC4E3F3D8112A7E8FF270
331D2FB475491A51AAEF10C504360FCB236B33EA5BA6233B2973A1A4A64CB156
1CCCE5676F5FEC5AD00CF74808248E7CA6304838B953DC7DB84DEB6DA73092F2
1F04F718009DBA58BF46AAD3CD7C9BE6B7C56C9816AD1985FB7624F5E48CF6C0
C7E019E37CF0B527D14F008E134FA0711FE40BC8A926EF8BB980B95A2F77EC3E
049D527B3C51560442A175D5D8758E82FBFF5F294B5D0D796A90FB81A5A18E98
E97BE601EA4F039C49B39B0B7A38F24A31CF2BBE8A4A77DA9ABDE0A3E10B009E
48968EC723C6DECDFDE76C4A7E76FBC1463CE5C32B054A731210DF35A32EB4B6
13956531D3652BAB2409BEA0B2194F8237AB16453B9349050643D5B98B056F47
97583A5F1CC5DB3DFA665A46AD11556A9DE4D19C3D69EC4B6AC687A6FFB98191
9CAAA657A12F1BB1A7B638AD6B9A54234FE345E1F0CE798DC546A5079757062C
0D09191F8E0EEA8B2AAB1BB852FF9A88ACE76802717FB43013DA06FF41184DEF
3526C06FD5BAB6F19684B7B126D8255F1A0F1BD08158F94077D191F62DD4AF06
B5E6243B2801FE685033C7E1D82DD51B28CDD8CCEEDF97BC4AF5366221DF88F3
A15D9619D717EBCD44473B8C0B519F7B53237A6BF0906A6DFF38E77DCACD3AC5
7B34E7FE4B7CB450A9C45FCC1397C6B0A86284D5B1047CE4A5267D952A379B66
0FE3A9671DD13E01433F2F6C208E32496F7EA8624C034C349973AC1227D16964
F9AB8BFD27680D2ACC6987BE974B04232D56DDA60AD2549A0BA63F83FAC01F1A
052E23200E94DCDA8807FC3021A6D2E4C13E06F1086EA20848A8E5E5D3DFB242
4B7CC458238CAB79438F28BD4D270F57A959F26997929BD1F884756B97919179
FCDE51DAEA400AAF8982DD653B0A7794729014DE0E4409134DC478749FF92F08
63167264EFAFFBE1F3DA733618F0317DB8FEA73BA241AD8A569A91A52E003357
85DF8F0B1D342FA414E3499C15F3C1C75BF59D0F150CECE0D45E10BD736B633C
8ABF3817168828BA1ADDB86B39E7C589EF576D93988FC7CBCE8F8EEAD343E055
6CB04C7CABC1D37D26ECC85EC180EB8EED1A6E86C7054A06B962B7E28A73BE0B
2713DFD32DEABA293EEC35CA74E8F4E4BDF74C53268E1A7ECA73776BA42DACC6
FAF2215872715967549F665E4D31FA89D07F9F7B71A981F6F30B8AAC02EFBF02
3FB3ACB3EB8D30CE573EBB102DC6774E0673364D2F5F08BD9F392CA41047466A
036F13A73B9E9748CBE052AC7C80C0A7253DA38F8096C24E1B46EEC4A0102A61
086064FB56D54FC54129B7DF0DBAD470D9C53731DDDBFA0A0B019593BF22319C
02486B37F961B03210F3BF96D6BF08F38611A67040608203A5C3D09D6059AE84
C186BA3DDF8A3D03A6269D7BB2137246B7C44A4D5DDD215780BA71E493103B56
3BFF48BE11CF626EDEE4BD2E4A16523198B2E05EC8749D3D46AA1886DE2A843D
955A35B70900EAD57E09228E923A91B2F77E5DB154631BD38C0D833343743003
D9EBF5AF03297DD2D683CF58D8BBDA154BFC9348A604AD1CD1644512270E45BB
ECF09337AC26BBB0E45CAEC8BE479279364FB843554834A226B66760F4607752
DF8677C0397AF9D0BAFA292F4D4F92B73D7AE87B13F108F2C4611CD948F30F50
8E6A5E75668ED3E9929056DCE30D42439FD75C1D03151D5FE0EEFDC575B41DE4
0FC8E52F0331B58CD9A51ECAF5ACC9F1CDC63772C2FA28877F526F1F3D0ABD28
289F98A3ED752F5393470DD641BB173B202FB9C5CFBABEDB73CE2FD3EC6A3ECE
8816AA5C60500DA5759D88CA15505F73ACA804CD809616BE4342A5047C07E768
89E53BC8BFCAF67124B5CF48327FBA645C9485D04E301A710BFCEE5BE0EEFDC5
75B41DE40FC8E52F0331B58CD9A51ECAFA907A695410551EA8F0912E1D19CE24
488F510E909A96C87572C1D4B56E2EB23BBF72415D00225EAF9E7326259D3C28
E90BB62A03F77E45BE54A5F49E7C5BFEBE1C71A3B572BBED5F359EC5BC402442
BBA33B2663D564461D57DFAC85CB745676F87833CC5803627C6DD6BE703FCEFB
D941EF5C3B1C10287CB787EFF59E86B4A72A199C8226F1477A18C5FA931ACAE3
1CE6B70C0C19FF70E8B577759A7C8CB34B040C29B9DF8963000217458FABB580
220574A252291322ACF12EE7FE8A738607329268F442A400BDDBE793C16F9C0C
FA569344FE06F0B093B14CDA8AB813F95EEF8F1D23575A3C84CD3760AAE7D688
5413557D3BA5484CC6C201DF87F0F105C79882D616159780F65C4243F63B1C17
67A866F1F9B4B27B64CB3D4410848E03E71CFD33CB08A071A6A7923A63E3B2BE
941FAD5DA8002F633C08A3EBDF22FEFA476B92D1B071F54300226864F320A5D2
8216384F61DB0CD008AB7A26A46FF9C8241F9F8FC68B9043740852B4CCBDD37B
F728E5648212726C12C5F614AAEE0D8590A3A26854ED51C4A9A1C13A034DC924
6699909AC060DCC4606454904FB9E7BC9FCBFE9F1D1880A7048295A277AD1D40
22BBBEA0A9483EE8EFD959ABF1FAA17C5B39F4A20A3DEC19163D7C748C451741
B5D481AAA4E0464F52F36DC07ABAD3F725A77089EE2518409CB64E9E89BF1483
8CC8E9BDA2CDF3424644937C761909AAF09F2E35801FD76EB4956C28D804A744
68E8A493F99CE2D3DFF0982549271B429927D4775BEB5F1B3CC2370D8619DB10
C162B96E490193208D7CE9CCFB889CC948BEF8AC77069D64A294FC4B927E16F3
C2229EB5B9918C0626FBF8C4B10DFE83AF257544C70A57A8021D8B6A1ED33D19
A1FBA979FF7BAB06B1AB21AC051521CCB9177819D9A8E4A57914BF755FF8BFA6
BF246BF26D4E85A7529ECEB3758E9DFD534CAC1AAF06A06E4D4B1A20E66F1035
4BDAECB0ADC7DC3FA7B24303B3C291BAB5A582CE3CB43CD00D5017219264F47E
5F287393BDE47B047F83B5AC7829017B484553D7C7E5685138A0638CE5D37C7F
601B0E36197BFA431548DC233902D54DA503AB022BDDE741CAD677367993F1B4
E7756DBC96D8A861F3882FEE876EC79521622318BB6960F7588E6392FC187987
36023DEDB0CC9AE428714DDD6619AF0785E90C2A0EF5CFF30014FE1DC8921C0E
A428E4809029FF9F7965597AB420EBB0B19C1AD3D1F5B8685D1874C7454D9ADC
7CBB39FD5C68F4C39DBEC8BEEDA86F09129C65CF38892DA4941732B8C31799B4
E67102E1628592D5D67BC817676C3705F05C752E2CD594D05B15173D5A85A7C5
8E01C97CEBC71B33F0B065EBCC731CB2F06F856541DAF4948EC2D4875DCB885E
AD2CAB2644F1E25DF5F6EF5B5ED29CA7F252DFC48E9DD4953A244E5AE73B98F8
203B2AE4F894FB61F519825659E854A83D4E6F02B610E5B65F18E4F6A88D839E
ADD20F9A893744085F176E43E1878F88D41A08D7FAF7B601661B2E2B92D08E15
1289F0E62B8EF8D94EB3FA60EED514882C79251115EB490BFB9C96586141E225
36AD74B6819A058C9DD483677E091DCE521F60B2C866CD45B80656513B6871E5
258B4F80702ADB029F18A4891A65E0AC01235E81F308949FA133943BAF0F1E43
430A8B4B4675E598639F1E9D877F10F7C8C0EC193A59A1BDFD83F4E6FB7C7698
19702617D08C10F4DC9F85CC1D7082661851B3D94D71719C73B320DC91F4F64A
EC6BB9A6B340F5BB512DC333468FB500D860BEFB0929944A4377E4668760649B
816EFE129661D5D17037A6CB3C58556EC8BFBADBAD045C00A6C3887E0A00795C
3712A58274F19CAB46BEE6168EAED2B0EC9606F6300D6B118D2C0F7796B3FF18
1058A150426089EC7071143F5177610D4C2683129C912ACDB47AECE3F9786E47
398891C3990700F3123E5BB8ACC107D8B722419A9C1F8EBE330D7A360FBCB654
0E7EB3B2ED0460F81AB38B9240BAE845D47A0BD6760B31870D69C4C15EEA09E1
831354F7C4A16212A067BDF0ED84C9A5735368A09CE46A5C17CCAC557BB69FD4
2494D5D2B9C1ED812F3CCEEC1BC079E837DCF4EB4E495547C25D2893E35E2443
5F55A2D66CE9FDEC1A5F81FA219E49C2F4D2C8EC80D9E187F9E15825F57826DD
B17A35CF2E4C380E50E1797F855826EAB926A051DDBBD93F907D31D6709284C8
6F0542486710BCF518C1B5D1E6CF23E0D97980F20EFD24A6644AA26EBAF342B3
6AEFAAAC0AB3727E59F1642789A1765F02944B8E689BF03404F5426F7148BB8F
A709AF1344271173529372AF6DA383511770EAC39ED55DADB32778CAE943CE6E
928C9521FE45A04F184800733B13440F514AF796BCDD85974E0AEC9A164C369C
237DD28FC4BE2843036E872B2A03163F0CAD1BCD5F7FBC20299D5C6FC1EDDFCE
777B796FAD72EEA5713D78F437DAE50160FAC28C1C21FCF83DE1B5516CB04C7C
ABC1D37D26ECC85EC180EB8EED1A6E85129293842B429B1AFB33D68BC88143F9
2B5D64DA3F8DBFB0D329C7450A21E4F97C8FF528ADC2F97F87C592935C07955C
1F1B0F125261DA0D2F7312CE5B3F3A1DF65DD60AA679945BCA6A71E4329DB73E
7F29098787D96D89D74796C6908AEFCAFC2C9DDFDD855116AFD66EA16F96AA4B
9F040771F86CE98994E113749F2047C28A0906100EF57663A483AA7375C850A3
1668037014979D53F051CBE5D246FC0CAC7850013FB3F1B075D4754A82A584DF
54EDC7C8DB59B77CB7A8592B7CFA7D097BB4BF8EECC6634A8112ED925C55E4B0
DF0E5BEE4B29E5DA8177D46930E3E90AEA7B324350D5926BF3AAB7CF462B8C46
CCC43F2AAB8ABEDEF76AD7F14CB416CC957E016A4C72A6A2FC3DA24AF084E754
4D8A76154942ACCED03A7785D88FEE716F2A7D77A990393CA5CBCA996BE2E518
6292AE634456B428623FD1E621555BBCA26C986ACA69714EE280FFCC692113CC
15C94DDD294049748B473FD5F4AE9C321F8D3A7609539BB1E313BACC161E4DFD
3BBD84E1216F1446F95F7E0B679C0D5FE02E0CF9AA45628844A54275C0E58946
55E7B06095437FEF27B81EB14663E3073EA68F60F1D5B1A01C9D57853580E6F1
80343DA29EB6D4908FC8959EC5474049A693CBEBA4E07CB9B5D8DE5E0B1C2257
A8DC4E816B78B9EE734118C991282B1240D3E464E928369FA93FB92613967677
4399E370879B537E40FD383EFEF02E3CF25222317FA36FFFFDC8DEB8DE95405E
C7DE4C780BB7B6AD8195784DE96BECF95B625F9BE81E96E51EC9602D4654DEB3
8E8E94225D8F864E791EA66CE3A7B80CCCA6788AEF25264822AB4D94FD51449F
12FDD58B76CFA594F3223C22C5045B028700C8710E6F425220C975AF0249835F
399A5539D63AF043C136465C5C6EDD6AC0425D8F374CC51FCB15600FF7A49A41
04BC29A0D7D3B555652AD4E14D4104669F132B4584E73C21F2C83078F5D96EDC
72B7B9B4BCC12F4209B1951AF23FF685C14584FF171362B3551FF7356C84CF0F
2434A53A3873E1326AEFC575FAEE1B5EC42CDDC027C7AAC514A42B45A1905906
63C03DB348ABE792DB5E7DB73311A007ACCC65F1BE0CBB445E9DC99DE3BF32B9
5CA40F19FE0EEEAD46783F79B52E24284B8FB0941BF71DE5A8C04AC209B2BC10
57E1B23131263F844B18EA91B95602F465D1AD4EB85656E66D39C6D94C1DFC73
2A196B89AF8000D828F0B96CD1B5C4C56944521E76439B5DCA7732A29F37A08A
140F8C0036E35125E11CFB8F1E397508BCB97A2A87578E15D147311B7C07C177
37878305488298DEF3FCFB79A08C1884C223247C65FA99AC139A69ACDE989B3F
D5A2D5C0A6D3663AFF2DE36A2249BFD2DF460161D3EA5C1B998A83F2F595DEA5
468CAAC2B78E5A1993F2B6373BD0E80C86A751E25B22ED67B8950124818EB258
558D55DEB25473A60B53D4B46DC4CE9B9FF1A7480F80EC4A178CF4CE94A7EEF8
762859353E43AF38D0D4E667A80166DE5FBCEE3580C618C1814F112E445F32C0
970817BC4050803AAE80CE06895EACC815D11C5043C96E89E9C036E84F31BECD
3B9F74A6B21D04D33D8D6867E328F1F84E503F30CC012322BF86C75D542DF2E2
EC862783E843F9628CD09328D96F2191AEB4D4ED70395961900B71104E33D18C
699CB21CBF1E702A43C212F7FDBB168337708E78CDE23E82878404BE7530ED3C
037A517E7F4D92C7AB7DB46166D3F9D51BF73E000254A8671C3523CAB620C1D5
6647B6CB1AF0CDE7B27ED2707252504B6C74D1B1215C450ECE4FF7677CEE2603
269D5F288AB410ACA8C41E7649B66330C265A5B7F41D915514AA0FAF252C2D47
0BE8E487B5C8A276C074A1F51A8FAEF46319AB90126937F49345B442931D89A2
D64E9CEFFBF0E3792A219D478D9159272C789B363F4B77BB6F513F2D1CF82BE3
64B0469874C6EB4C3D782F2BB7EFF536480AA43F0D960075B6036943E3EC779A
517C4D6040629FA35ECF5F72BC11EC5003D3A2FBEB95AA878584A8ABDF1E8CF7
8EBE55ABDB3BE9C60DC252CCFB36274DC69EF2D60CFF2873563D5F829FAAE46F
12CC16254F52A26FE47FE41504D3E851A0670AA04A36A3BD6DFED9BC3104B7D3
1460E3FA77DE5FE016DB36DE56AE7E663E81752C1539A5613325DCF159B32F71
199029B3C52A85E3A069D5265B78DF1E8A68FD35569FF3BD8484D4C450FD2CC5
3E9D5D933D8D348873F7A02DC5A4062A9DAC0FEC368B11CD07341EAB622A7559
CD4601AF33637D19547C8D92E24C1190A50E8DCED4C7B578B8FA81CC95598564
04124F851CDAC202F133D2A0021D5BA5ABB98A5D4359E63E7B5982A26F1ABC0F
7843685481E40BEEAE93DB98DE236DEF8BA32A536C00BA8999080930FB24143D
D7851B5539E97DAEBC0C57E6CAD2FA699ACC80B728B77A07EF96201F5BC9187B
8716270EB91BC97E629FD0ED9D4987C1C3F19BB1DF75F985EB18BCA8844B267B
7610A6D157EA3ADA7CF63EAE1CDEBED0C8CF6560508A7BD68F0D6896FA97C1DE
35DD2DC448E17A060D578CBBC23C7B47CFE6CFD6EBAE3E24A85D002445BF81B4
BB62B6863A4CFAE37F715EDF3EA5A33679FEB21AD1156AC74542B942B0A4F70B
64F7A89EB8D38652FB57A729387C6E48EFC3641A1DC59A816C933FF531910AFD
36D4E7369C37B8761341D2763A1FF764ED045DEC3F74111957D7B00FCF5F246C
5AFD97D7F7DAEBF8092DFD40519CD63CE8E38A742078EF5DF4BCEFC85437AD3B
3AED02EF14AE8BD323700B083E6FB9B54FF40B63FFE88BD7FA6074CD669B124A
8333FC4173EDC8861F00421BDA29947272ECDD4FCACAEF0B0D408990758FE706
25209BE1245C285B171DAA6BE705FF575048CC768BB8F138C00B63BA4E40BA8E
5C0A6D51ED6EBCD11B5068CACB821BE08A1B06587ED0BFCD31833B1EECAF947E
67DBA7060CF90D715B1B4C7A6B386466E51305470160FFA5A9FCD721692FB97A
0DD77737F84F944EE4F182641F051987B79A1615938B81AFA5C99B02AB37CB74
92A3032BC29ED513ABFE8E6F085C4FA6A856A3B0FAE27B20E1DF3B80BF4B5911
464BA2D6CD239CAA9B28146CC516ACD809E764C8DB3BD7F80C944959B74FFA0C
A674B3A52B5E428F6A5529408AEC4A8149338459F8BEE4E3EB8047907EE0174E
9379E76128411F6F62DA2124572295D7FDF91A1B0837AA7F80FED4EFD79B47D3
1ACAB7921E974E0F025141E0E37EFD447C37DB455D2F083DEA179DA4FBC32DCA
FF9A18635F0C806A7F79AB1668CB03AA08FB060A2ADB1D7FC295EACA3E7EA4F5
ED92E78990A082ADB3A32F0774CDB0A4428FFE3F0A1088EA71BD2DB74105301D
0957D57EE4D15D0E8C5B0F468202F91976A5D9C8BDB5514157F1C88F69F5F803
FC20B59D8A94F59777FF203C063C4273C41CC2B831FAC8B35A70EB34886F37C2
D18213DA6D79F0231FD18090D6EE761B5AD3510CB3E47EEF53A23BBC9033481E
0B0BF46B0980D70618A821BAD346F807B68B77266B06B756BACEB5FCD36A0F15
3536DAD78AFE7ADEC90B959AC3A19FA9D0303DAC5BE0058B7AC46EFC13F30FFE
A970858E80ADA63052023889668F4C3E84553C56AE4C8E2478A28257BE4461BF
0D5737FEF579DD93DFA22A948E88B3B323E0DD7E5B229A8753CEACC4610765D2
CBF708EDDB1B5DEA54A92603EF47888C851EEDE853AA9F0EF60D11E54B7BA047
1056B021C03FB2A2D2262AFC1467A7217C1C887F89586F84CE132D460067CEF7
4BB5AC6ED2CEDE02799D369A01933B7A77D835694536563232D2B7C11EF06056
690527A4EBD1F1355C3BD6CFC4FFB40C1CC5E799B3728AF8D6A742D6FB17DCAE
007D8E2C41A2EF916B6A2EAFB651D0E490A79CB8484AE4B453B00318B966EB78
912997CA884D714876239501D7F89D32735ABD099F2B35842AF2A6CFB7EFD6B5
7700B114375B3A18CC1B963DFC1D7F5B9FABC9B989941219026BE888DE73CD3E
463B692A4B59BA7A760DD7A81CDDA23CD0707F8B2CDBA530E9795CBE691C141A
143280C65FB2AE0253F1E002F576583BF8FF1FEE3ED0DB577DA27E45FA577E9D
4B958FC9C413E5FDF7E3F203BD2D3299DCFDAB3D314077FAFF599A6162779C3F
18AD0908F75EE8A4B38C1C582F30C6DF5FA2097A078ADFACAE547DA5926B3D5C
9A7A59226CBC34EC86D2CA91E32214DD857E80C33FB4286BC47DC77742A8C011
C9628BED9C7AD8647A15BA064C8DBC0B9A1993A9B392A4FB76D29C0565E07060
0C36FA9FEB325D9B4567CE2EFECCADDC8A013BEBF580573F64AF5AA364DDE757
9E59AB8F63B4E0D1C4D5047F251B4AE34CA73B1499B395127BF2453FB7F04A26
6A9662CD00305B894723028E0529C6B747E58310BBA39C615BD9DD02347E6B3A
AE64A949E5C87CCA39AE1F17BCA6C77E1A59B2C119DE916B29DE7054ED785232
C74B7B92C5138A7307297BF2B08A80874CF0D889281F4761B0DCFE61E56EDDE1
4DB1462E4F9859384B15882C6B0E2214137472F7DAB6811B1027FDA86CF66E03
2F1B0D4946100FCFC2BE23B43458474D510E94FCE182C53165413E1FC4EC239B
58976F94434C1FB78334D81374C359FC481521A3784357B8E3E7B676414CF22C
D112C8DD5A99D30F55D7EE28DF2F0F6174BED2CA19D075A462526DD5D645E764
B114853CA1BF1C54B28F3591C1B05ACF3D46952ED60024BBA20AFF928DAE4739
7075327EED7195DEE9EDE5DF536ECA77341301986811B7C76940F64EFF4AFBB0
62D33A9D22D14C37AA9EACFF7CC81EF9860D5DA595CC6778A7F06A3C36A4C792
D168DC61B0E00C91D60564524D7B1F773165050913614F8EF8A85BE29E113D06
CC844D519A65F780A78E56CA9D874106924BF00029F54AC39F6331A4A81BF656
2ECE87586E03C99C4FEC726E5D5CD4281510E8B82A5E5CE852D1AB080F8E3F97
843B172D926DE310DE9062984F6951B5AA2EBC98536501922111BACF45C80493
B3ABABB911186600AC62FEFFF4F7754935BE18AAC41C860B70833B92CB7228AB
2C8F68D03B6326AAE61A8AF0431F373DF8E1A969C52A99052A4D3A2FE770C935
8686071FF45FF489BCA0F4BAA4D5D965566BCD23CC0A112E0565D1E1920094A0
509510A0DBD662C731340D67F8BEC315412BA9A18E9744CAC5F1C047BDA80392
8A286C4E76A6B2EAEDFE2FDB17FF267D0F21C35E0E6977AABA48CD601358BFC6
54F3C7516FBE690A67828F56C593686101542A0830ACA6918C86EE5D21DBD34B
2EF84D336A889395E771CEC29602496D2F4CC3005863B6DE09084927E0DA3DB4
54B1BED8CD3EC75326188E28CF534185E66A3A161EED1F99B8496A9FCFAC1349
2DFBAE8110E9811B2898D889A581451395C7C58186048384504A909B92A16E8A
E2275E83777297529C5ED2573FDC622D7D4307DFE77A4B16D1848D485679E592
C1AB0CB02879C5C4AAA33FCFA22C0A4AEABE4D4DEE308AC29CABBA411987C715
206297C0971364CC5B83001B07895F0D8126F67F4A68120DDA56FC6E466A3CA4
7F0F2383A60025C5D0C64D459276BF2D8F25F13137C7F1CC459CB3B3E945760E
98EAF5063E373A084CD6829DC18D063618B2C9C5C3C3F9B01526D9D71A749845
22CAFBAF6CD275B0F8470DB58184D56DEFCA7213829FCEAC430A54AAB1C27135
F14DBBD172CCE6CD2B6095B0157B9B295F244E6197FFF3759E08318611701B27
F723F3786A03BA85152A3C6A3620836DA8BB5CE31BAA722DDB36BA5642CE4117
AD1D6B9E368CC0191FD3EC665A0F563B55F2738B16DD43CF81342B8A5B460CF1
7342B3EC42F3EBB3440E2E602354F10D0B89AA2077894331ED25BF6955E13DA0
B4DE3740C28682534E57DF995F87B37C537FD5D25484B3B641C95A5D96C622B0
4FCDDB40B675F081053377364DE99FFAFE6D22E975678C98EC8A9069AEC8E237
722DBA55BA4214EBF66B06D640012D108ECD3329117185F2DCC8334D331FDB4C
F16123266B94843C4586F7B0914CF4136BAF49D0A85D7764EBB31166A29307F6
343DCA5AE9814FF8EBFD456F77844FC27438F6061CE0C155A07D1064B66DAFAF
B39332B22F2C43C3AD99954E96E39B52434EB13675C377D3C5C7267BEFE151C5
2A60427176D702F257ED71B2803A6BF70C74D8EF4783865CE3532C2BFC6208F2
BEDF5E26A4CAEAC397152D34458B281D8EA05D6583D2796F440720BE08EE3F85
5A597B65071E7946D81D3FF2F85F8CC4417D0D02BF2477552010705ED42A0896
ABD62805E2042E248A874E814B3D78F46AF4F001A3885AB7E7C4F285F9BD614A
00DE6825572189A19315AD3976AB880E5F0AFAB2498FE1D79954BD53619CA376
01FAEC649E37E9038CEFC41BA172055892C47614A9035E7CD93575C377D3C5C7
267BEFE151C52A60427176D702F254590A4A2E016B5FEADE1A79C0AFAD4A8734
34BA54F6D717AB58F78A4BE43408C7C2F6D4465B31BDEBFFA59EB012DB2B39A9
370330D258EE8515E8CBC0DA34E79D8085F8BD147086881CD9C9335856F5F195
FCAFBC3813546176EEA6745F62F0715C865422128A163B6C6AE0D98CA8116AA0
AF078126540BD2D435D0AD6CA9233144A0545BD34F7449237157219D79611E52
DE72B51F2BB650628AC5E429F423F250EB9E8AEB5BA66E6FBB5338F24FE4F9C3
EFD3404FB795EC4D0857AA5D6620C95021DF41F3DCF687067554D464306A44A4
9AF8095E431F91B8EA9B312FC277BE315B18312C8BE99537C3E44E721A361BED
6541FF9AB02AB229B8D20C7CCA131B23CEE3EA3747DDE3939D38A4E5DE096705
B4034226D6B5DE97BBDD742027FE22B2AA7037F55F05E547ADB16F56669A201D
A41C1DAA9B4E66C8E5A03D5F1D98DE47AB51DD77014C2925F4F0125AC8AB5385
65E06699AE5D68759A52096B795842B6283A0129D49E7E9AFCA904B37EDB25A8
0BF2A04235CD244B0A88652F5A1EC5546FD4DEAA2A82A209E244948D832C75AC
8BD1ECDD9992E9F8CF3DB923D549EA4E6D98A6FEDF3B2BE1E54BB8EFB775F1BC
E8B6B9B0696233F5AF80CD6A74273F5204CCD208C109EE75EF233DF172A38D21
74B4730947637701EFBB2FBA3063483F9E82D2336227E1D03B98C42383BF31B6
8F6A6309C9BC0124812E4286E9DB31983877FBC16B4E5EC481D8E9EF87B4C4C1
08E799E71AEE8C115164BD9BF92B1A79C9C7090465E9A00FBC634995A712AB2E
112E3E6AABFC1D6F293F9EE845A2ED6C77763127B0725900DD92FEAB15171D27
2BAF7200828B2E085A16B4BB005B30C1614AEAA2AEC112F30B3AF57D9EAE465F
BEF66FE82623DBED8135D5D1E2A2D9811D78900B7D347046FF9C2A9DA7AEE1F4
2E36FADCE69D1C31BA552A09B30216F9A60D1F58E74D0931CE5AB03850ECDAF2
01BBABA430326604E56F26766AB98A5C51659EE74A875CB811177A20A894351D
75B4E76BFF75C71D425F9409954DF168966159B2A302B801CBA292D1C07EB52F
3849F14FD66B8A34A64B53A37CF300EE316C982A0D58ACB2AB0B6D52C9A745F4
40BE173AB90CDB8D5A62492E44D2391EBD6625AEEDB22442CCEB84056435B241
9148A456405A6BDEBB44025A835D94E3FE7ED4898A10D61824D760F2B86372EC
36424D8A7581AB38447347DC26F8B6F0422F3340A01614CCC41D40D27BF1870C
1EFB412C14EBB08548C09B8594FA27E14DDF887194960B9E3222121B24B97DB7
866E8CE52B81CF44DA54017243EB1546BA7FE32409951CADA934F8896AA60374
62E2444EA33B01A22F873D195661CA3A1BBAEA7BCB4D93C90C0E83A3C7BD7646
FCB6C28886EC210A1F84DB25137A35AA5C7691B72AD442BDDAD18F30DB190E4D
004740C567EB0F86531E771C74DD3701419E5B08ED32C290A30B02CF572199F7
4645C0D9B4DB9DA965633F5DCD87B03DBADCE87FC499FF9DED0E6C8FD6715B57
97EDAC56AD49F59AC389979AC060DCC4606454904FB9E7BC9FCCAC1D11162783
57D8659BCC81753C2906EAC08FC3FB9AA3D2A83ADAAE5427689ED559EBE5BEE0
A331DE6080DA757EC74FFC5E9B1D2F70A87D381F424FC2F34BF902F401264C69
EECF460CF82F033635EB5B3A4F7DF718E0EB68A4F615AF7AD898C9CCA5105A68
7B74DAC1CE89B910A9B6D2C887A3C469F9DC2A96B15D33FE7C565961C2A1C0E5
FDAF8955FBC699FC847F077A81047021DF46F69AD1EB8532A8962EF0DB618EEE
B9F1CACEBF7299500D3C3520DA9E6E7040E6A0131184185A428C37E133A909D0
2EA7CC5DA03D0AE482ECB5F7AABF9749CF4B5BE79087218032FB6D3C67E6A4D8
646298E229C517E89E253C6E46CE01444ACD693258A53F98DB0DF475C8D74928
A381F1E74BB27AF07B164374998F867ABA7A5DFD196AC274D49269CB03F74834
07DC1F346E0934D208422226264CE8AFE6E870382132172F06F105BF2DB51EC3
DF2714104F031BF8D85907DFF2849E4C3C7B62E653903867AB470C9661EC1297
4B4B88A0AD2FFB4491A03346BB7DA151B13D4957485E52C2815090CA3B1221A1
2F749E5C4197196D48244E65F7A54E14EA3DEE4621E32EE2D28136724789FF22
47D8C7EBBE4E95D9CF6F8D4D204CC6D61EDC66E28B7CBDA7CB79240357C0AF60
E817427A9126A9C32B377627ED3AD4456E3A67BF5BB49920F6FE6620D699A53E
1F1DF8D844BB4719549E214E37598BCD577141B8DD30BFF0E275AE21DCA9039D
A02B91411A735B115F242689F50313538F4B55B04A1613170A35B4A0E368FFB1
A287BEF1D44B51773DBF726C3C3A068A6FD312637F59D0DA55F3777E4CBF6A73
D17EF7A14D2B11EACC1D21E9D96DFEC09E9230E3FC37327DE16AAF88BCEA640B
CD466BF822D43A0234ED71A3E1F6F88994686783149A0710F86A46D0B55C396E
C4871CD89B3C4BAFC0110D887303109E7301CAF24954577CAC249BA77682DD4F
CC6DF13B34B101D1E96E034AD66AC6630B20566943B798A3B63363920E22A90E
55283446AC96AD3BD1EDC9E713BE102EC5636217774935F630167167EE4A5121
BAF566BA0C2DC80C17A4E7DCEE787E2D2F704584CFD5C339DA77CF42F6480A1F
D29C8002637CAED51E2CD3ED5979AADBCC7D727237F164BBF516B03977EC5D80
2D9E7F1994A7646B1A03255BC3D74A7F9B4DA617EACDDD1193FC40DA2CFAACF2
CF39D3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3ACE7772980137BBF6A5C4C136C45CE680D23B992D7F
7544FC9F70CEB83E2B66980ADA7E13488B61554D8CB264FA76074355F7FF6C55
FBF130009A03EEABEEFB1ABC2BF844196D67F7A6D7B5F71162E03FFD780CDCE6
720DA5752962EF6FFEDFCD9C2CEA3A186DFAC113892B6E7F1EC8B28E99D09742
86959C4335F1C11135880D99DE366FD7A9FF7917C89D789205E574FA14895D60
74559B3CBFEB1985C97933EA251CD6756B1C77F32C734B1495D1090234327729
929156E2362811B8D161C718B9A0627C4F9CFBEAB6D134A86D7D5AB85CE4A2AE
68A4744868397649DE6BADC3ADB90149ECE141CE475D08FDBDFA922A35453A43
457E83B23037E235BF847E4751D0B0182A3D7C04947E0E3E4F3E420A831F9838
2C36ADA2CD261065888E8F35A70F43D04C310E96A644C2BCDBD550CE55713EC5
88419815F955FE68538100CC1776C4B6F3E25870F14EA037FEC2B6A11912C526
129B788B5D8FE7436D805D60CF9FA8FE5F7CEB686ABE058103B8F8724D1E0557
5E343B59B631844A689FF702C74C9F6FB3CD886C4C6826CBF2ACF02EBC8A25C4
BB361B3DC8761C85CAF050F6754C7B3983D42247ADCC3F1AC39B412CD8A4E4A1
DA3863FA3C1E1289E5528AFD4D9FE3D6E034ABB0CD7CF316A28E4AB4ECA97714
283A35EED8A9ACAB99AC272AB61059A1F769FCE6FED93AC9DA1AE528E452ECA9
6E28
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5020D74C7714FF08F5AE00F69DBED351708B1C760171CE5
5D0FE3BC5F6769FB19C7951CD5DCA774B841330A2C8CF59CF458230A1642F956
21D23843C4332F05F5AF14E70EF052F02F7E3F51D6E7D68A4FED8D2C4A733AA3
8973CF4CDF768C31E35C395C3BF67A79F8B1AC292F38AB2EF22A87A8ADBE2C55
747D7AF3101C5F1A2A1BF6C0E245AC583FE784CD69B918457FC63ACB5FA24E41
CAE39AA9386736476F5C0BD3D01ACFCABB35BD346B884B97EB5F467C93A2FC7F
82A0B3682C1D7B0CAE0165D6FE43CBD8FA5C85EDCD122FAC36F59FDA7CC4EFE6
1F9F8E88832737186037F9E5AB161B8A2090F5569529861FAEFDC91E823E0A0E
A92E7F1118BCF413BD355CD844D0F88C47B267EAFA1585B4ABAAAB9BF885D233
DE4656E4CCC1AC1A5762BE48F5FA88A0020AF17A438014B5902A55EE220152C9
0348CF590A07761415D2F53A866C95D4A6848E2BB7970D176670F90765843635
9C2461BEA57F9CC512BDC51EF25496B2C2253AE85AB38889B26761BA509C7F63
8C6CBC4BBDEA74FD3B43A178C86F9A97423815F5FA2C09BA590B8371D5B7758A
43F98F4DC4792308CDFE2779CA6F20ACEF23FD8FC11F483C0CDAFE837D984A76
1286C4DC5088F5DC4B8D59F781ED48736CDB2D0B9B51340F6218CDD622544552
9BAB6B88481D111091C2CAE5E19903BE5F2C90E79E2469EFE314329B4653D49A
0C4443075770A91CF9303D9A09D90460D4094163FF9D5B9B8328B7D716708A5B
C5AC3BAB6258E19FA15BABC01C842507B425F413F5CD32933AF5DF44D51787BA
9027C34FFCF0EAE1840E691E7082F8BB15A4E9B2BEFACF92CB46E229D1C0200B
5E5A7168C7BB0E6CFA5BE39DF3DDC87E92E22B6C9BB5F4F8CB4BA783269EE178
1F3D48923AC9EFC0E3DA4EA6D312AE795F4FB0A6AFCF7383C050E726C98BC60F
32177890D47961EE29017A79D04854B854025548213550B33E2E0BD44792277C
AA5B247973D0098CDC1CAF522251614580C97BEE9C423C9AD8E9EAADA8A08758
3B37B45139682B29869E7EFC15C9D65720A3804546AB54C61B53A69C9D31B29F
E2FBAA8C2D12CE46206C62F9EF7E86EACCC5E9EF48C3C45E62EE780DE2182595
09A7050A9B91012EDE32C7E7359C628AF46C51B36864FCF4FBC5D8F748DAA1E1
AA79
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AFD6391E81ACC544000E97C2E4598
BC30968ABFE8C2E76FF1EB04BB78E7BB3975C777E2B2B1896643B51D2D25F3DD
96B454547AA6E39E704842B17E1E8EC5B2286FB19DECBD09D239CBDCECBF8458
FF1AD9E18F9789B2DB9FF2CCC0EEC5007E8D72ACF2D32BBC4DAD86E4A3D0F951
A9357BEC5619407EEF70039325C4F11DD771EFB1ED519E2252A8110547FD7753
5AB087FC10B4C71E24BCFED96E689908E9D864BE3DD6D77022C5B15C09B013F4
48ED78EF75B3A436BDE5ED676A96BFF33DCF1124A4E0DF06126E587E8F5ED4F8
8FA0060D4ADD1D974400A8C2E4A057C2D9372EF547BC7DA9BA7D03469C2765B8
0A6BA0D91AA134624A00EBEB709BB571CBD6D51C00B349268DE077F065817FB8
D07AFBC9394BA9313FE3EC851B9D085A7DE89B3B81D32B76D83C4E4EA79B2A91
7E0290F38D664A76977E1210E201BBA9A805612B4645162EF6350939A2C179FA
272A70FB2947504ADC434D49F59CF0EAADDA7FD9F40D12C0D6DDD6E89A3BA646
8B6322EF1ED48259EB1F91BF9908E7115E5ED381D39E07E0422F9C6269BCBD30
416E874194A2C4AA475A156096793EFE9EABC5B7123EC9D0708FB4A2CCE7CA55
91627DBB3B7D9180758CB5E40FAD2BD0E4A563D1C5E94BAC3B2A21E02DAF7C12
EF47D801DBC67D95FC6E9D36A82FDABFA3F1EEE9665495B5991CD7707FD9FD4E
AFE30F850B268B6A21389CCFDC5FC3AF1E9DE106E3CC7AF6A2FBCB3EF28D71D6
E3C1C44B3C7B37E03ADFF44DEF389DE46CD7967278469F815189185D96A639A6
47E01CA614395D2B432D16E5C88C16C92401CB6AD8BE433A0EE6253DBE9C7562
D0940C9EE007B87FAA6D968648454AEDA4379B7E3A4D11B153DBBBD6F55EA100
6D78BE697E4515F7403B79DBBAB277B8A66C8413AB046A6376AC6E3F7414E4A0
17F9FAE43F47C36E5544A534A48D262FF26EC43172D2DBDED883B762EF29ECBB
061CEDE51A8BEC4A742712F00B16A6798D6760D9FEE556ECF81943E10792E409
6DCC5BAB8E5CAE0B0ACFCBC6BAF7B2EDD6C586F5C0FC8BCC3D355A4F3C7BB8FF
0113F5714301AF33637D19547C8D92E24C1190A50E8DCED4C5D92902C65E7370
66229312A018E607AFD73EC28FFBF6B0FF6FC207372135B875DF11865C20BE59
44EA064215A6747491B0486E7CA427857946D2F3D0E22E018CF12B056067667E
1D4C76AF0CEA8A936F9CF329B2F4350B095668EED980DAB291E194DBB881FC43
37FDA7241890659CF2EA7B75EDF72CCD4BB1D84D1BE81AE2EE6C98ED629D7127
BD93FB0D3D09F8B11EFBE0F0CF846CE587DFFB408E22E82DFAE6D7CBDB0C2F26
8BB8BFFF2897D5156736CC97D1B2195C0B9D8AA2604DB4980B359185EF4D7BE7
4E165E74C7BC6166485EF1CE9AC8CAA5E07458583101D977201FE3DD8F082C1C
06DABBCEEA5E11BA795B2BB97DEAB6F40A4B2484D3141F8C30BFC3C5B1483576
9EADD957E17188C18435A2E7FF4AA84EEB27A0505174ECA71661FC8D71138E54
96D69F4A05EC13D27B065D44346F51053A08C551220E93385C29C2E8B76655CE
DB90488CBDC82A51AE32A41F185B68FD07C22F29F498FF9650E2366C1ED10FF2
C16F57EE901070A024D698D2F36321A5D3A5906E2108DF5E38FCD9C55FF41472
473038989246A3833D50F1C7E4A8E5E5D0846017DDF4959138C2D0205570AC83
0F81D359DCFAD0313003AF5B1969FD149430DE3ADBF4CABB0D9F723BEB408077
B9CAC032DCC816801ADBE116E0E90E6199B6C6B3594E3B700626D436DE56AE7E
663E81752C1539A5613325DCF159B14D0AEA1FC1D27CC6A4A1E67DD67ED59060
159FBFF468A971363F967091B8B375C0E70D39D66ECBBD069BC21F5ED6DC4856
2F814A74DA72CB95395FBB84B6207B00532520F4F33AF3E02DFAAFF16DBFCC1F
93AFBEA0E6F252F9C4250F5205F9E44D43DBC6D9B820F706BFB74203567DE3B6
5C3975F11A545243D506B58CA06BD259448B3534DF82DBF3BF3F9FBED98234AA
1C9900C092C3CA3C41DFE2688F464727BE1CDF9FF5239C62338F7EB888FA9B09
4A8CB83BDA634521CD754B51844E7FDA50AC96CA35BD3065066563083DE066F1
E9B3F312F1EEA3FEB06DE4DB591F812C272C20E6767E45117F52001F9FE45729
6C2E3794AF5BC45F581841847BC67F9DEB35111ACB3AD212B4FCA7DAF88EE055
B2CD2711EC377DF9412545925DDDFFF0A28C8C1833DFD685A3458D1F80B431FB
B05DB3A9425638673CDFF3EED771F4F05B4761ED2F6229EBB4FD0CDAF88514DF
17CF97A646C25853759C247901EBA8C7667B7AD31270BA29B2C656B41FAF259D
A36A6265656E6D1A5401AB2ABD3C25D5C9A2FA8C392A82F8DC836C89CEB8157A
83AEDF417E0B742524E7FAEF78B5907B74087D9672047991F13B71F527D42531
2BFD58FCD53D79F819C78B33DF721E0041BB3DDC31F28DF0CE7626D88C9032B8
EC6B70311E7E6508A46322FB8E6ABD97BCDCA95DA09CD890BC52B6B5ABDA37F9
9A52F410985EDFFA782ABCC716BF6A36F4664A3DE9436CB7839559D98C723973
10E0A0D8291A2B2BB5745E739B4C34BD9F2A837D1393E98199CE058CA4994F6A
D3FD93A2EBD338C28CDCBBA3B9B0294E30885DC5F1A7C010EC1B86BFE8B4E0C2
804CBED2601F2E8ECF2936E74C53FB87A0B0CBD175F000ECCAE6018B719D7F6F
63DB11FCF3751A5D80A8849721E4E588C9197C341105B044E7AA81165FA1B97A
103553E0A42F6E9438E4F5075931668B04698B3CBE8F262043BC1240413C3602
323512D5D98E29A6CE6EB31F175724D0016E68280AEA38F840066456C470C322
6274D60C73AA5D8E2737C3066683F968834E025CD641E85C4F6D5104A7CC4CCF
AF2712CA6577A5548AE1EA71F6E0CB7D06904FF9408D1F434E3FF24D0318007B
759391DA5AE8EB379E4734AD125E123A33AC784485453D9990FA4F9FB25B3F1F
F03A349AEF61C49DE74E56FF237D7A61B3E01707B8E87D8E64D01390E9E92FB6
FA21943BA9C3AA45E950AF00F5A3EC7103BDE77ADE41E32326604C59CA016127
720BE2CAEC1313D7D45811C1F022BC3A9AFB83A41C464E9D06B49FB32C714816
D0B196EBEDCE6649F7B0100952DC75D908712A1DD141399F362B868DE5F556B5
B7EE99F670560C0AB39BFD238A0859BA570499CAAA419F561B56449BBA27465B
CD7F113C9C1B931168DE5DECF910B061B363D2BF1952AEEEAB9AD39C857EBA17
FEA216B4ABA4D4EAC7FAAB2B6EAE8EDEEDF2704C327E35FB77CEB2C00DC3D3C5
CD3B5E0513A540D0C7575D56000265B54EAD9B1E97A66B2E9B937B85A69977BA
8352BB68ECCA73675BC49BA3C89C2AA19CC20F76FD420E7D6384152EB85FB2A6
C55E7B267FE3EE82086FE6CF8F2C6937B0997576AD6DCEB0ED314523E81CC6D0
102B969D775180788FE4A192877F8F9B9C3E5BDF412BF0E8C92A234BC8067472
CD8E5870230E9DA69ABC80788F2F72CEE5F5594CEEB4B351FC50EDE8D18A56D8
A70386B64579036F4530220CB3DAB9948677AF0CBFD70CD2844F5601EF69F81F
873FE295341A5EEE215A9235D7BE44C25DD2EFAFC07D5931B83086D6AED4460D
71BFB257752C5AEE42439A7070B4636DF51B3F92F4E3681F40F1FE8680698250
F9C9A6C32693DEB59FAEB3A14C1547C6C46C24FF3513EBC97A272F950C9406E7
97B8EFDEE18692A44EB4C25C7286C82255C07518C027E3991325D0F2D8DA3837
1B463A5CAC60A667B214680D72607D6067F4DCB94C488E37F3D96F6260205D6C
A165110D9605F16FD2822C03F855100291CDA36D7147522078C9EEAB434F3F40
292D632E5DDB7C197D9B33C96472E4D74BD7D1EEB8100D8946B65A100C133FDC
42D5ADD283E93E35F188E2255D4CA238D50701150F646B62EC3A622660DBAB74
9090871FD2316356C3CF06A91C454D972511CBD3F7BEF02A7AE18CE511645F9E
76EFE6A153AA1D118AA458EAD2F07C2FC32BD8C69DB194030EDA7CBBA4D467D5
6929A551B8800C7A6C788A20487BEA2BBFF53E9859B308297C05EB5A7BE69632
558D2DB6E15AA34AF95C85DAB7A4BF4D13E49C8348AA90CBDC3D262804E283E7
C274B6D9388B8B586D4DE80A0316E2B5405633E73904BB3AC4563D3E778E0C96
590D2D4DA46741A9F8DC7D52F256FFCDF706B456B6886F5FF5F416C079AD248C
3E37CC6630F796F8CE5ACC4F49566EDF37EE388A89244A19A265FA093B594288
EF02DC075445138B7987B57557B8D8BE7938866A90C39F3248962614614373B3
340EAD69A42D29B4D95429C7651244276269FA385534498EC4661DE8979672FA
7FC96AC8E2461B01BA8671BC2ACF36C6000BF23A56FBFBFE8478F1CD00150EE3
9F09FD3580A1A78D59FD137AAA95FC1C9BE0A9A7F95C1D67587E15D168F2AC55
F33A1977FA4D3C0B6E5655214FF23F39934AC1172ED7DF4001ABAF75230B6DFD
B2309D0C5F759E31ADCFA7CD5BB810960EC563F40AF416C079AEDBD9F248332B
AD0DECA08CA39B2D7C51A80BC7332531998EB01316D9B9DF27ED6A8E4EDCD515
027C1EB63EA1005DD121B94CEBA1AAE4910DCEE8DB8724D14D4DA2DFC9CA1DEE
AEBB91E29BAD6F241F49FB97F33B3BA155FBD77551B8EFD72B485F950B8B4C0F
5E25DA3D226FE470C9358686071FF45FF489BCA0F4BAA4D5D965566DAA27A37F
D2134D35241F5A4254DC11A417D465D56806005C3BADC0B6FA3628B1EB9EAA51
B861EEC948584C8E0B29178C7AE024E79C6163F8A74C8738FC3DD1ABF1566369
41876B63BCC65722CA958CABAD3A3E384B6993EFDB89013C8ABDCA62FA6E2F80
DE35A2338CD8D5C4A239CB0A74DF45A0B3BCD6478ED664774225E83D3E036A9A
95F4CDA1BD5C661A4788A758181C6C213A2A51EF5CE582E429C7D7F17D962490
AF8190BCDED448F0BD7A12E44977949DC2969A27784051AB9E62CBD50ABE89F5
DA44E6A8840574BEF5C8743351DC9550AC182A98736A2FAEB7ED4A891389ADBB
5E2C2A35A0AE33581C3E03AB9EB5B9B27E256379A863677DCE24A14BFC52E921
0C8A692609A41865DFDE675D073F415271514ACFA19D2B9D2E2D6E88D00DC330
64E82B283AA46D876F0DD9AE8C10E2876640D664B878036C6EC2CD97A683A8CA
0BBF9FD98C0AE5BA1BCF54885C08D6A74092A710A9A8D99F1BD1C4DE0B934DBC
586BB07539C09704C858DCDE5998E5D8511C0ACE6346C831E1F34C9ECE6210D0
367F1E7396CD53E79DBCD8EDAA983956308CEE5F1548A11C21565076E3C95F3E
7E1A7567A5E3707237EBB092CD05F15786376D4B011BF88AD26FB7EE9A331172
C242FCC8E3D582A3A6E55875F01AB676E600823FEC28C30D2208A868EC0D0089
B911A7D7613AA7C519BCE1182B6C30F93DD0D7DEABEBB9BCCD3C64C08E32974E
E6F6CFAA3CB2DB259B0E24B3CC5CAD227A5EEAD3076353157A3B3947CF3FCB3A
71E76DD054312022B997F022EDD9FF6A7C6DE1CAC4AF6A26680C438DAA51D2E5
5EE432543A10BCE60CF74B2719B7DD018C149C49B8772CEF1CB16ED0C497C83E
CDD16E6515EF0693628D395EFEAAE84708EBFFC44AD03A5A43640D86DBFF2BA1
ED0BD7769854DAC9C7125A70F7A701141598FF4CFF86443D795F6783F803312A
CFF778A5C9CBBF7BF27EA8F5F3C2BABA8FC21071F93B4C14D9EB53379523D78D
DAE50695FD089F96A0C5CBD5A06C8A1A245FDA07AEBAA7BEEADBEF6A6F1018DB
60D585F16C9A9F23C86632AA08683107EA60C6A28E701DD11123CB278DBE285E
673273A141237C84C03A4B070772AF9A660127A9B617BC1DDCDBC1B006CFE5A0
32B95CA40F19FE0EEEAD4B6246EE4A3F0349311B6AB1110FCF6163A409D01F64
CFE528EDD5367CC0D134374CC5FBCC1DDEA0E7B467FDCC6A4E37946F0C146B9D
507EE79DC7A715CF4D65DB2611AC1C3F4936F0AEE0E4090830BF1A88960FCE4C
041DBC719DDE2180BDB1BDA7D33486570449498552A5962181C84A4628E76309
EC9D0B81B08747404EED051DAB04D2CCA21133E594461685A92D372D4ED3F9DB
786D7E73743BB163D35A6834907C48463F37006EA2D9C8625EEA31A75E85EC79
363ACC8A5F234575C256306A3E2B5F69B9F491045D26A526ED690F92B91C0B62
C295EB9523687D3FE699A4C6E728D678ED7B5E1EA7C9BB3AEBC348B722C52331
D6B04D84EC272A85F97D2358B1DC13AE97EE4BF2A7097BF4E9BD06720985FF70
83FADA4920BD3F1470A0E61A8AF0431F373DF8E1A969C52A99052A4D3A29CB28
ABF6A4CF72D34197A027D5E17294BC39F53DD1E43971FB07B89AC5220EDA163A
25BD6676A0D66DBD90412DCBAE6C99D80E14D8E02C1D3C4CD54DCCA57CA4B531
EA6E74355655EB64342E5FB6E18F2149FCF4C0F743ABC1424AAD68D607D2F962
729B45C3AD07E604B57AB6D693077D136281D672BE0165D1235C9AF2F597A0F0
43F08C6EF95E891EA1EAF0F87013AF4CE74DD05B327128E40C2BDCCD7231B5AC
FE00F965ADB89E171134E3BFE65432F6FCF210793730C8E5197204416FD5342D
B3EFE5D98757046F26BDBA4BF29F957B8682D21CF1CCFCBAC8BEA2E250DBEC36
6C096AE65B56E34A583A0288C1874BE8C7449A1DB7A1C0A3AA55193D4601EC0B
E3CB303E06CB754A49C9F40457DA1B8BDFB99D880F1B2612D509E1A6200E85C5
F70C2E005213489EA21075A3BAB4C488358206C409AFD78BF4868035D3D6878F
70D749016797FB13F822478C77FED6B293669B9E9683EB4C4567A7BE6F097C7F
C83E5FE8541E6DE3FD3419F9F90F982B5A01ED2CE11E103D87C1553A051391F0
246769EF99A69AB490C079ED71C985BA26DD7650B28A326F8B92F4E100749B38
E2596ABBFFAADEEC1277F9FBFCBF4B160F12C32FAE78D32044D71C1C6EF00A8A
55B6CB2F2E58E760A0B62AAFD4F629704FD9FD5AC7065959E797BC0EA0A0C04F
9BF6A58D26D1225488A9B780043DFE114D2536479E7D64EEB11328D0CC8D66FE
C329D81A7584A5D001C2C3E42350E89D5215D81E5170AE081644B02AEE581AB9
84FC189B5925472DB98A466FE912EE340840EBF250019F736B0BE7A60FCE1F67
BC159176BB6F1EB52D699348651F043D4958C21481DCED7AF3ADE81FE911EB81
81BD4767284E60A7B6CC3A3A5AD57EAD62A642F7BC52D0064D626BA54EEB33A1
82E84F87163A97D16C6DE238383AC59698E08599C82D8430573DE53EE72183F0
0F811C3BEA191E18A58C920D0FFFD6FB60279A57CF462536D090A4E2F757DF12
0FEC18B2A361B9F769D03ADB40C28AACA1C46D22F36EEC9CD8F17D48B862BA6A
91E7003D5B5355B9F89D9A5C9655D002791C900E377B78459894F54BB57C79B0
9AC4F26D73AF263680D2143B36A5A30C8E0DDCDBE0AB9794B39616165B9F7272
53A9C41F5346D2DADD995E6E2033E6CC70BC0E96636EAAB676E725F07AA7F6A6
7087C57B5519A98804735147BE66CDFF25BC3E21BD24037CA7A96E3C66FB6A93
CD041D9A34FC7E0BAB3B92A806EB2F90AB0BE445530439E0E8AE43B4396C248F
F01E20714E0C8692F37C0250B5E5C01DB77963E6126545B566CA3A8BFAF5229A
DABAFBD771DC292FCDA019EC65DFBCE76B9079C2C63001A415D6978EC80CBBE2
50BA0562AB6D2BF37F0E0206E56D3FF6111A501180C56DF1515BE3D4ECB4BA77
CA6B15C104868DB82A285837E62986F81259FAB0F761BBD026180B517837886C
FAC077EF784B2FFEB980122DF3F9D6BDE77DD5870ADEC8900D6346957B84C8C6
7ABB14725E4813E05782683C877C7EC4C86D6FD37AFD69D02255A7689A824B56
4B699D4851872CBC01CED98DA50B7B58072B9652D8E95CFEFCC11141B290CA0C
FD9411431E629B6246DA4B173E61879C48F6B34D06B1106307C572437F24D25C
6D3DE6269767AC8C8E508E60025384EA649134885015C2E04D6FDC463C1510C7
82FD9281C9F6C646E9169D885AF04A627278E243314F53B606A4408C70016EEA
CAFAE4B8CDF5BD7760399F1F08F988A7CC29609451258BDE7360066362DB2446
5EFBADDE945DAAA9267B104DE7D912C5BFCAE5E84C5F5B24AE8BC55B1E824E1E
D5C40D3C40923DA150C493699F0E682639B589CDD2C3C8C4A6A8D661A6CC8A1F
07F8F4CD9BDE37E1A246A2EC71BEE13C8EDF435911D0DD383670A99D2CF6DCE3
606BED42095620764487BDF92633CE56BD2E5A261F568C3403D78F8ACC16D72E
155435171FF7A740F1B1A172B03B0237C8E67D174E8E1735173936712A6904FB
D4B7D6F757C202000E691852A6833B4C2C142FB206D661DFB96D5030E787961D
72D02C195C669E792C0DF51E9D330EBB47AFB14105E20E1132918CD7C1106937
27C81BF149B5DC15AEC0C2F352F81DBD13A927892557DBCBD09DFE9E7E2ECF47
D44931E96950E83E418B529E91F7C3F5EC916BCB57B5261526BD062F2088CE49
DBBCCF090A33F5289EFF0E1449019182C7C6A1D52CFA76989AF0FCF13CB4FB01
CEC65F59EBD386A7E7001CA2DCC60310DCED60D7967278469F8151750EBC9BF2
355EF3F599772DC39BE1302FEBB6C5A7E2509195211FF1A494D775E8BF85D89C
0E713F556814E051C6CEFE7E83C2F379BA685B6A9BB3489FBF70088277714B8A
E8CA8C2BE32607A63CD43C680606DDBCC23EF80D9D69FDEEB18D4FA03F13875A
9E08E4484F46950FD8026C281C0A7FE832B126908E7FBC872405B7183D2385AA
4D74E4741583059D7EFA2AA784D7657DC828448814EB159950185ABE396DAB60
79ACAFC11E3D0B5706C714796D160A4B66F25512A3E6D895CA5047CDB13FCDE8
26D3AAE15BCC039B1C6A9E82F871F82148EC95F4E53FD20E5A2A4479D59A73A9
D116E16D2FB7F1523133DA1537C79EE63BEACBB0636880DF1312EB04587F2CA1
8F744126B953BBE11BCF65003D7C15AFEDEA5883050D0FB58A0C9925604E5B30
C8EB8E9E7734BD30D6424C17BB0AC7A9DBCD4F4BF670E3642DFB768BF2A360A3
3A473E6D63D300577B2C99A5F45D09FC22E382137EA26FEB07208D32DADF4139
2053084F16245C93C69113D9FCD0CD3CD5613DAFF026D9E157E656C069AA4528
5638D00BD50C2BDA08AC7EB34404BF8A0206B9D8ABD8ABFBA9D53C42A61026E5
BDAF59973977744993DAEEBBA391A78868DAF1C8562B2F59C613A428E45296FE
67E259717847836C58DA3892211F2C244EF9CE407B890AE6E9307F3147D78D4F
A40F5388B9759429A887390458269D67C83EA6B9F5351815E66185FEEF6C73AC
2390E866E9DFD5B99028D0E71DB7D816A29191433D87B634778EE5EB5C6F48E9
11D19253A39F993A39F7179B1919AC43A62DE7FC6144F14EFA0AF684D22F4AEA
4AFB2B9887E140801399E5D9D2687A4FE6FDEFE5BF32172B4BB7F085A9B20DB6
23915950B4C87D72F27B03AF92D2FB2367569CC2354D7B725C2E2B38D20E81C0
700BFDC701A2A1EF97E5B5E4C753FBF42C1F976B0446A60F14DB74EAB0B483D2
22394299B2E316A364801A09F2A1A1DE5ADF73CC036BA1DC8D789B86226E38B0
DB3AFD1893C48A1B61D9AF69A47DF33A789FF79255ECF2AF644EDBAF8BDAB078
4D0778A4244CAB95EF2FFC33D38B247944A4C744B644EA7EFCB02B512A970E75
328A677A7DCEF94C8C5760A0315EF59D1B19CEFCF89BDFCE2464D64362752E4A
EE3AAB63B382FDD2568A537E7296E0EE3EE6FAA128AD90EDBA6470C559CDC76C
4E8FD973403987B58B5424793EBFED8F1CDA2D49D7672E195B09727629C1A0E1
470AB990555BE6A705C38565CE02C0350F3C3908A6869AD7EF3EE7745D6460F9
4622AC516E9D777D6C653E1819B0C4E5DAEDBD08EDBCBC3BAC588F367E850F9D
9F99546E8F49CE50FF9DEF3B4A4C1BEB3848EAA347734C390023474BE8A196AC
89067C7D659080A08A54C3602AAF4DD96A27DC8A782878684E7FFA7C6EA84F44
E072E4489F863ADF8127F1FC35DB9CD34EBC684818AB259FFE92E309015324C4
F33870BE5C171E4DAAE3B96B8C7AE39016DF1BCA43019F62AC6FBAD2A4F2C83E
0B909AD58C3D94B5C75BD053588563850206DAEFE33E4C6725EEDCC36820E3BD
7EF1CBA472270B4D082A1E33222F1F99A6D331544B8861F1B9AAF83F3992B724
FD0BC240C4212109C5D3AD5C7BE95535B486F8C805A2EE1D38F2EA585F1CABF8
3339A0A4E5F1AA194B2FC8593DE970B2C883FF187CC877BAF5C7A30679179E92
036B9FCEC9F2DE7420FB2062F5474685253B3F4D79F949F6C6468BBE43197B80
8E4A8DCBE0D0E6218801EAFB019F326E85A8CC9638033B9223A872333FA09E92
72AC6E10BD85898AE491E352B455256CECAE9184C1E3851FCE2BA9A86A1DEAE1
3AA4F19E1ADD00FC43BADA9AE6891B755D8BC35C7F5A2DE590EACCDB5FF5CB13
D0CAA24DBEAE0D1090E753792A98CF3C02EBB7C59A47E26416D0C02BCC703B3D
6E178A84BEA4E8C577857F27E6671E663C8F925F1926F3A7B70DA21AE1F6DF9F
3AE99A6380CCDF76BA83E7EC6781359049C531D1590368D32CA7EAD87D6D1293
8C8C15B97389790F96B8C07983FFA8FEC41B589A018331D25E5B0DEBC8846725
0DF1DA97A883DBEEF75D9A9869D1612D582FF865C25A312852770DAB7D39E121
7619DADD5A529DD8D5015235F4D51C1C753EEFDD6ADCEB45DF4D007135D86EEF
3D36CC0FD6ECE0EF01BCD9EEC871AFD57FD3DE628C1E70814B1258131811877B
96009E065BF365311726FB04318C965AD2F0E56F9482B8AF9A3FFE6A603B174E
7C5256B4388BE0BFDE518C3F79BA7B78FB84A350349DF8D25D0F0805B0EA04ED
10F3D442573A56648C90B16BEA705848382A85282F79E181EFF14733E3B857A5
EEE331DDC76CEB0953DC37D845D170CC98D0A48CC3094B1AF4B0E6288A657E2F
3B2C51A3B31A2BE5D9AD3113862D37CD65C658893808C36FEAECD83D19B786CF
4611FB6174DFD7561D55C9E03EBB587B340A358A65ADDBE9EF3C1F459BB90886
A9D3F3B3D28B3D3272BEB5EB9167E08249D33AE8B2BDCC9705D1EC8848293ECD
9599CAADB0BB1F8437E175131C8CC487F7EF853BD1E0232AF3C4A10F19CCAC6C
165A39EB148B25F23459D2996A7896CB261ECD3E5FE8541E6DE3FD3419F9F90F
982B5A01ED2CE7CE9CB5ABA942FE0F7E1CC26DF0F139B04229B1035581853EDB
2DB97B20AA7D44F776816A160C72924E4113632CF4C6B9F59770905D11D3022E
1D535EEBEB49D1978E2318D0E9EA9F974327FE7189493D81682ECCDA4AA2CF82
9BB74C20C39E157567538A78463DFEC10FF237E38BC8E19B81502A19E0BD113A
FA1DB969739844970A42BAB44E622268ABB33945A53675F5A48A174649A0504B
BF5BA6C59C6BE0B2BF3FBC775F11BE1C985EEA0521867422FD82022BEBE54D64
3F7C2F728A2454B0E292178FA07A6772E96B5D7284B8EC3833E148FEA458ED23
2D3F24C4839AAF0BA7BFEF50AAAE97E5269E731333107A831FBE6A6CAF1BB6D9
34295DDA357CD7F9BCF1CCA6A445A75C92ABB4411AB26F33DF25E528FD5B2A51
660FFA663695FB3C03D7569D309DE3ABDC2D9C5DD9F9645D2BF1C1AABA1E2AFB
1682EA8409E9FF0AF2F2438217BA5121CC668458620DB3D381D567701C56FE42
DFE14CB390C69AAF35C89B103DF5666EE9AE0351248A7C7106AB660583C0643D
0B5C78D282C98740F1860E88FE9462E903CEA643F8ECBE4C52A10C03486C1640
2781332CF1D679F5BC882E15EA2D1720BC525842391FD72CD8AEFDD97BD87B20
D735CE102C0F60A9D44BFDBCD29BA26352397C3DC55A0FCD95276517788B57C3
33F7FAB8C260D0E3D67FBFF208B4187A30472FDA891AC766077D48C64C19A374
D2E21792BC0CBEF817DCE1BA447B4DE7A04965F292B0C09FAA9B9B21285CF054
4EE7E23C9BA865E7B124F886D8AC8881CED68C7E9ECF4FE4023BAE82CF707047
3DED607FEA43CBFF16DD187BC906E81590117E8B247BF551BD9FC251BBACF9B4
5022C2122787F600C65F6F7FEE25EC23E5DF02A3787BDB92455621D5A6C25F2B
FAE740EF719D1C27F71B50303BFB33BE569C7C0103698375727743A699E872FE
AC505B3B45685C116BEED980DAB291E194DBB881FC4337FDA72418906091EDD0
090BD9A658969B3BA995F1D6868BFE9F953BF537F3E768538B1DF061BB3B5290
DBC5E083A1E0241CAAA08CECED18EBB01D8637EAE8FFFDB7356D21257EE388ED
4EE9F98E6E75000536FE414BAACAD3C3B79585B0D5F41EEC63DE800C38526999
2EBD01C7489EF0A956E57E769955F95023D2E47DEDF3718C05D33D0D547898F2
DF1E6B80CC01E48818E8F89BBB793F2997D9B7C2B7126F601786EC4B09DE2F5F
3077293626E3E1F2ADB31C432B7A6B88F7B26F555A751CBAF82C2396324734BB
13A16DD0175A1E5A46C49A663A888F8D94D43BF595BFAA794784EFCE151A072B
9B711F0F15903E8BFDD660789647311A16C70184EC4ED7759900A669E03D40E7
5879BE4EF03B9AEBBEB3B51AA797687145C8E22B4537274E5102564EE586F97C
1FDE8E7BCE01645E6AB311A29E4F5378B00283F43C55605847ECC0FD778552A0
0EAB988A1C23C7B8940F5D2568FCC3524F6F89EAB6B67425B7A59A362B11C163
A54E4CA1005281F0552680FC778878790722A0D712FD2FDC3A784CB8008AB910
786E990F7BF552E25EFA7274938E55FBBF174FAAC6A4BD5F37BE323E2DD25660
59ECBFE65551927772803D9083566CB180390D43CF505B0C6D1212CCC7F398B4
9BA441D426CC98ACB47E3EF8BB1A0BA110FFD14534C83B547BD88DBF5688AFF3
541CA173E13F711FE424013FEB9490412AD930F7F724A305C4DB7BBE9E3E9D16
6FE9AF677070BBF5FB0B0FAD16EE841C75D94786463832323BD29C89A8682674
E24838BF99B06FA68C91E1797DB85D974B55304BA8A338C4F7B3F6AF0D13A64F
1E02E9AC1FF1C9C5B9177819D9A8E4A57914BF755FF8BFA6BF246BF4CEDC01F2
90968A3807DF83B40761D4CFD11CB1A459711ADBE724B15646DD2FDEA523D863
CBD4EE16455CEA29E741F1A1B79C7F709E8893FD04E9ECD497A5D340C633F4F0
4CDC950217781F9C6ED40C6247A0E077BB143C300755E01ADB495027386100D4
1B4B76E83104F4BBDBCE74BD50AE7B9B6AFD4DBB809681B3178E8147C584351E
E9BBA26C2EBC0178A2DC6A24350823AAB33A391820EB56F05F1BC5CC3050FCBB
2D04764BF52AA72163E54BD7CA0D300957CB9CF58B81E2ABC2268E8898D3B955
2375517A053B51EF59B1E3F55E66C68D094A4A238B6E2A759FCFB0918BF14E7B
FC60CC579F62D9CD8FF91E233F481D30A3C9685CBD94723D6AAD9AD569A09852
ED9EAD07C571E80CD94C82F95E1945C908DB875C0837380C7EF35992782BCE9B
E7D29DDE59859F562642F72F20DDD94BFD42E6543F02927C30E74CACB70766F7
720F08BD7D4854E123B74C13F993617BFF8A7547F546A1BE4AD7B073B6362EBA
0F9482FBBE8CEDC6E7438D63898C5B4A5C43568B43AEA905DEDC4924F4833E5C
A64C07A20B7089E5CCD4368BEFC8328BCB4F0FF5A1F938D4FACB845C1C39231F
E78458F064E98C4B26CE8B1C59B1449C043E54C6A467D6D8E686987678BC828F
DCD20E2DE6AD05806E6CA79B36F234216DEAC83658151A92CAE88DB03D6C88B0
7B33AA371143FF05F1A6D39373190FD86D3B68B5B502E38DCDD84353FE281B84
5B88CC1AC908C5D6582225AFD39A74AE7C2067BC3782547F0D4B5BFE95D67F4A
FE9E0C99F458D28BCD02D9D05C68C6909935204357CEC24BF0B41D4DA3133916
DE4E116F0526966DF7BCA0E8E5FD5A0BF82404A36AFF26E7152108D41E533813
A8D6CE3DF04268CC777DB132DAA08104021E7720C1A97D522C07B0F972DB969D
B777EB77E4D585345FC4E08FE4C042568CC976A892E9277C1671BF57BF6D71D9
41BDBE5587BDE07146FCB6F7537294B21ACF429B0C00A3BDD12514F51B1C8367
52CD5E350426C27EBBFBFDAD68759B928D34AA13952B10B10E59DA1656260635
507F9D3B62DBA56CEC4FC6CE9E09CE960FB03AB24DED9479BDF59EDF83E276F7
76DC4F0F641A53C057F4C1D2B454EACB7D5FCE8DDE9CD3808E97B6381D93DF79
16AC8F8976E9DD1105B5007DAEBE35B8908B57D24EA2BE7646AB56E38906E303
6FDBAD1D87B3265CC3F955006D0DD180C58BC6DD093E7EF435299E469D3CC4A9
410918D50355BE0EEBA69E824B5198E18E8FBB132D6BCFF8662CFCD3A7616829
FF87E7E3B1E097B038B15B7BD6C4029CF901ADDAEDEB4C154AD9F3984EFF5C01
CA1220E1F354728790D5310E6307D4DDBD266F858614493EA87BFC91F8720EB9
EDD7B66619E5AA6AD9924B0B152921FB27EDFDFA8F71B828AD496C886FD70615
EFA74FD816CF9FFFC046CD566BE2C2849432C1F95814275D83077F5F527D0829
6ED66741FC89B8DEC03AA49109333C2577EC987F8DFD23E9A372D1F8868F2236
0A21D91ABA62E8A0B0F9CFBAEB8A0E71F46AB923E4BF23133E466DBD02C90D01
2AB81A43563A182A68BFAB2728CAFB84E6105C66F1FD2A9280DD2BB5E277C28F
40163D005C3F58917B104043A33364B70184A2D69A05911E59EAF1878C6F226B
93E437669BACA9322683BBFE341F214DBFEE7956E0F90B499146B075937797E1
AF81EDD3EC871DAE368AF8AC1294325E1E62503D67B141E3ECDA9AD94104115A
8CC0CC8368249D3C713721B3F77C51EF6600C477F4F247456CDD90EBB3F0C168
479B6E8FA7EC460941BA4064658504CFAE58C074D92E17607A397BE87FA234C9
1205A98E76F2C88B56CFCEA0330219E8460B1A9850D78309EB321BB829B3F700
F5CD38AB99890184C9E732331101788927838B52E44909CF7016202C6C2B4903
E5C0E85ED4C140BEC218AE1898FB85D7F09F49EDD63D60A674A897B8A33279E3
2B488D7B01D3B30EE9F42759DBA24AA9A8056A6AF57430266A1752DC91DE406D
1CADDFAA617FE65BF412ED4A7601E0FF4409CBDA4B8FD30EBFD8947A1942C001
BAE79E92527890D1487A00218AA23213CE81E6EEB75C31102BAD46576EFC5140
56E897A0A15A23A22F3A13990D33F6EF4DEBF53FBDB40D3F5C1911D60B3512A5
AF1ED3798DFA0AE182ECC049E8A6D005BCB488ED8A9469AEDA910574D1F97285
F9283F2C962F229EB250E0F4929BEE3FB075128A984820E77C85511F6EBE5876
EFFA6447775A0928CD3B81D872C3DA4798F4BE6A36F820C9705DBFD2D82DA2E5
894BB6597DE5B7BD72190C1ED6C4E152F6AA936B59112A2A095370B23E085B08
0F1427BA4D250DD2F37F1F6FC86C27FAB632ABFF8DE4F6DD9DB5A351BA579E2C
5DDC983652D0E7CC966F89AD428BF4E1035E92E55FB21E639AF66E6A3A5223C0
8C5F6AA9C7698A1E383942D0C6CE6F6240554BDB68AEAB761B012D4C4BC04EA1
51AF5A50A9EFD938AAAB277D8260FEEB8615DB914E9C80797143D654B34F09FD
D57E8515993BECC63E687EF57123934FB8D1D6ACFDB2BB2A7CBEB74C25F49D43
8C735A8F0B4FA0E5C611ECB1B7726AF11DF6854A36EBEB9FDCFB56371C01E2D8
F131087DECA608D60868CED7CA542AF8F44688A58ADBF9055606D20F80C18C7F
8117911CC76AB405E68746B94535F38840BEC013B783E6A8729DA11706F74801
4CD294E91F19F83E7C0F58421A0C33E7BF193D5C5950B74A264E3BE559CE032D
AFC67E105DE984DC6455CEC96A2753ECBDC77226192423BD2C8CF0E2CBA2AC13
58AF496BD3697FD411458C5BA5881C3A7A7E6145FB57EA65CE7CED66FB9A4CE7
8E2FBE1C743A667144EA9E233E23A8102BF524BA4308B72A2EF99671F9FB671D
942C6F7D454F48132BEE63962EFDBE45585BF77FE6AE9338FF1D131F8A6DB24A
DEF34BB162D32533D2B8E7897EDDA89850BFD1375704DDBD27629BD21AF86AB7
E3D686CF1D65115DF7ECEE33BF57DEA5FD7A0E1C7B0D437D551DB40453D4FDDB
3A03B36D68F0269FD5BF64DDB6B58C827BC29264F97BF1D24B22353F6700A4D9
8BF4454632BDF79F9C9A6C78F2DBAB6EBE3B4721E08F03817826789D9D98F2A2
95516F0ED406A03C92FAD580B3E44C02422615070596F8FB8398D26373A65B0E
FC8BE810B110472E5DBE5AE3EB4A74C34BC127FB7367DD9F7650F1B6F47E9C8E
5C2929BDC7EE14F6D868464493DF44329A0886BCD58D851C9629B978FA90BCE6
0B7A925B4C46092F825CB935DD0F223235E691ECA67E761935B27452F45C0B97
091ED99ABF87C61E4B78512402256CB4A2E7971BED6235DE8E6CF40120E7D6B7
EBA2DDE8756E8A7C1D2736B3BAF386D479D8490B88A24053ABA3DDD2888669D2
FE03C2B5E650D69C4CFB0927D2B709D1E3D38D861DBF4B44ABF6F59FA883B769
C8E4378C777769975C0390ED89272447367DD0D4FF1DD81AEF81EC85E35A1511
F01EBECEA622E55F2380AA05D8BF38C7D9C8137BB9FBC83DC680819F73D3D367
E5B36785E8C693999A6EFCFEA2F1B8040CA312214FF245747F798791054BB3AB
B48464E29DD35082D86BFCE88AD6BA3A949DB4A0B049DA0320CD71BBB8A11886
DB1731F1F1240F7AC4BCD5CFA8E14040E6E7E797E18A75BAB61D31B87560F11C
D350ED194590DB6DDBDB10EF97FB3E12111C8E77F45592BBA73C7CEAA207EDC1
14913EDB6CE411A4E8E8B72541EDBAA44698F0B14D487E24BE983B7C4897FE74
C44B0489A418DB0A30454F81D64572A7CDE35D40711035EABBA07DC8A48FD12C
2F3DB3E0F43CB223DCAA3F7B016E18B0C7B457A7055B3CCD733DFF1A924BB961
5DBB6786DF6522B4AFF4D46E8B56639929BA905766ADB2EF24EA02CF97B1D8E1
021F51C9600C3F74813A6BAA4F7CF2CC57A84CFBA77156ECFCF4F64E2ADD352C
C111F43C1B4F699AFD63BA149FA0021CAE4C1A28EE62F05FDF6C538E055B6183
1B9FC0792BB03047D35956702C9EAED6CEE280BA2961683B84175006795C8693
3C5E80315BCBC1B4C073F429DFAFFCA5B972966022788EAE8BD291B123ECFAD6
A7C637008125F725749391391CC3CBAE58096BB02D11803A6146A11DA0AB3531
5B59F4C7536C0B309059352D25513AE39D39B90569D065EA66ADC515823DD99D
5BE76833341C89B8598F03F99FAFF4FC81BB0EDC41DFBD34B41ED7523FEBD103
E038CAC43064980ABA2BE51E0B121D1F8A8215814C8262C2C8FDDBE802D34791
32CD6D77F73303075D2B6B3C24D1F6D8E2EBAB8B9BD2904F6145575A533ADD7E
93E3201951F941CECE4D35BDD3B1CE7FDBF220D2627758192BDAAA73F9640B9E
87E938057D0261A0B5AFE2B6EF6FE1BB9A54B2AD528D6392F1AADF6B4A091272
FB399BD3CDCFD9A60D52DF5525D35E8FE862A62B2B4CCCEAA8C3575CD9316A8E
0CE4F32521B65F83F15287234F09C3FBDC6A6094C0A1A373A7E4D303AA488BFA
8072F72DFFA22A8CA140213BAC8489007C7945190C3587A9D0D1915CABD61422
CD01E8654B88D6D796718677BC730FE7FE888E98A8012B0DAFD174A868EEF054
341487D64D9EAD52364DBF9DE657E0F09E5F90118FCC4F3553913BE76CA84A8F
49B625A65C643E53E9B1AF632FDAD9864ECFE0D6959D5114EAAF1612C970CAA2
C9472D596F2DB1134E3301899D29B4E4CB9CD27D88F87E5E1D74B2E0D15FB3BF
5074DECBDAEC80A55548097F65C8B1FCCAFE506340CB8387218CD94E7149F2A9
8F26BD7CE4C809B31442AB8794429ECD593E7DEFD2C8821C7F1F3845BDFAC9EA
990CD29600523422DE533B4F7D4E9C9541B1AC1632EE6D019EE31F03D99C1B28
99D82D89EDD2401C50E625CCA9AA96C3EF5340294535D4C10F41A1C9EEFBC316
0A42630263A36ACF465ED120C5D9C0B9785947C73B4C28293307F22EB28C915A
6423433A180361CC96F08AD7471F3A6AE580F7C454CD775D439D8A03FDDAF371
264C2592CCDB0D90F33A44EC9D5ED3D83887D6197F323F60824D13F79652B119
EE55207B3DC19A5D42A8A40FB98C1F251CB49EAE29A3AE0601DB63F00AEC1B5C
4E98AE11A355F36DDF7F45CADAC577EF13BA0603CBCEB2F25B4DB3DD55D05668
578E76736FB859EA249E9FD9F2ED14AFAE4C5E3ECD95DE9669AF2D60E58A7292
A76FA6337200742FB65BAE285D806F3273A4A2B6C8893F4F7919FAEDCC9135C5
8F8F73D47D434DC4A4E0C28E2BE4FD7C40DE0224F61857D6D1EDF135A35A8E10
E17917EC8F82698C604A5C1836D42AE4C4A165EDF4D730C4437780F54628BD7A
CA70AC20E16DE9FD527CF8B44E7D51FB5FDABD9801808376A7BC0254A3866311
0F0B07048E29FE15CF47E04EA133200DA2459BE2C80E2B100B055B4571842707
EF796BF4BFDAA76635C28B9D5A7274BABFA761E304A58ABBDAADB9A370228BDD
76171E764884CDDA4958F9C9892C112E4505A0B4536C05FD9F2E326B1B12BA3D
3005A3F506AC9ED3690D22F5B2D9EBFBDED58E137D2732353DDF57E0ED37E471
5A8A96DBE50C55409F5D0481AA1C5D33F2F789D4363CEC8647D27FD02E186D7A
2770DDD1773912A8EEAE177F44787B394B623EBB328AC394E1E6E683D2545B0E
6A16AA9D66E045AC67014EC4C28A0573AA3DCF8906175070D1D8DC6F7941397C
DE6D225677F3822B9D90345920C83AF05A29A2ABF63136A540EC80CED3628E42
6367414CD51F8447670C8F2F8150380219B3EC02894B5AB0875F75049A76A0C2
72784C35F01E9A5EB6D684843D54CBC52B4AF02005960AC8084BFE13F58D0A5B
2A7C84A0897807AB1C2EF749A28E98A928897C1AD9E6A375D7F7E9B19FE44AED
A13DC22BCD863EBD352190668FC90AABBBAEC6AEAB3BF43B3362721E2725AF36
BA03E9C13A0A1E0B5F00C6419EFEBD7814D45E03F8B7DC00FBCFFAAD723C9740
55F74716E9C3853B2000B856C14AC12D72F4CAE995E273148590FBB65F18CAB4
A1A3A66A05004A9C8A4BE70311218D1226787AA0A3FD23E2890634946E9014B9
ED741B7B055F44BF8DED2F1AAFDA8DAC3C2A36A8E1B15D90924C90CBFFCC796C
D08641B8DB33AB71DE01165374A49FB271527E7933F40DA38D9DA5C47779FC36
F6E3196B5C1E3F1D1D5ADA5B4C617770A980672F1AB92CFA53118724CB9A1A81
15CF0DD3E2CF5A20305AA1A087B1CC97528D5088D1E07DE9A231E3084DEAB84B
92B25077BEA5920DC6455218104B315D874F7B2AE52B88895057C23F3DB49A1B
CAE9DE209DD59114ED2FED158BD30EB2940755D03319064A66A1ED8BABF7C21B
FFA71EF16C2C00FBC30528A2F0867E1DA26A90CFFB1027C0999C228E7E7F3F8D
CDF04A4CE5BECB71FB97DF1E62023B85CFE6D9AFB6B920F311DA6EDA0B21819E
209EFB56B17447FFC5B588C832D2E01CD9B8AADFB13B38ECBE8852151AE0B84F
A8C7F6628FA45EDDE0396B69DD983E01940E66D47BB27991768580A7ABC9432E
710E4420A6A68D7A09DAF7D0326C1F3CDE4B102E9B45DFC342513361C9C588DF
4BD6E3F5A259B0CC129B34F7B5E4C9FAE869F6C29ACDC036DDA3B3BDF2721951
FCD97D40ACB70C5FA5BDBA0977DC8B0627D7319885FB2AE0E2E2C9FBCDE4B5A3
6B80AF34DCC0F91FD52CDEA7FA799B9430AF964B30217A4C1B63BAA0B9004F17
F8BFABFF4DA00E5693A404D2C890D467BBA2C887D6DC31A0A523EE0826BEA706
83077C8AABE59026AC762C4B198B1B0F5226A0DFFAB9B811F6C4285A59FE9463
1B9EB0BA5D2020E3A93D1B5CE76BDCEBA951B61BA48FC22AEA6EAE2B2165742F
734FD72535354246F33B2E2F7F4DFCEAC871D46A6C340A68C1C2482A0BCDFFD9
613AC0C46F3D057FB5F5197CD4FC672CD10024F331FE72D5006B5CB38C7A6349
550D5E0FCBD81E0308986556C728BA46265C2617B2D6120996B78BD1D5A73E15
7AECB9F3F59C0D736946734A8BF002FA0DC5C68153E7DC46AC8957BC2FD13A8B
2CC513AFD462788EC9A54E45B510B933C63AC0CC50B7877FC4F1A8FE683DBDB3
0082F7D0B9B433F3A18EA2DD289D2959632848BC68E2BFD9004AD03E25A9C043
67A1FA5E529E4F5F023C7CE0560525A8DA4CCCEA32F995DB32130C3EB81E77A5
0542DEBFE49BE6CC438036AED93D9AFE101D496C7F52A3424F1B7995A97253C8
F822C11204E340629A8A3E89D028D2D969B17440CACF5DDA3C2FFC21978B6971
B9E79C14EB7C6A245945F9E18F1658F68154C354A9B6FA4F5566E5E7876872C2
9E54CABAECE5F7855F1D243FF60AB4E7EF2E8AC7C2B887F3A2A49EA7184CF1AB
684068BCE45552BEAAFE36D39851A192DFF7E113E18F1BB31594F476D76445B4
E57E8FF1E38F81F85DBFA44D2F9C0DE26C2417D362C41DD7F8B885403DB837A6
E6EB5B52549B010FB206FC42AD1B3C52E840F4A6C36137C2137DE0D761A08D3D
6F6945AE6FFABAB077A05C787F859335E0E7DD414DFC42D1F012AF3F4B6C9106
D5EC95628E8D7C27971F6133478575C4AE9EE4AD78CFEFF5DDAB97BA9B5CB69A
5A2AA3AE147AEBDDBAEC2278DEF6B3A2520151EF81FBFC0F2486C3B71FE0984C
ECE060A10A0C579B7C4B66E4DD3B35BF99893789063BF7B01D5F186B2D5760FC
923AB87182C9D634BE8B5E06993230B0D07974567BA69283ED3F0C0341FEDDAA
7255D53B115D445AE749FC39B66B4DDCE39F3E590823590CD7C75BBE8B58E98D
AB81E93EE65123A9456E301532929320D07646B8F093C06ED8D9799646156E14
91E5521FC8B9CD9158D75199A14425D2D64528280D0A829D6889E75E678ED399
965C4FEF8B3881A2EEE9873969919693B0DA1D7D14173ED9F5F706403A5992CC
4E5CCCBAE7EEF222165F17C30F4088730E6AFEADC65ABEBE3C0C9FEB95EE0D37
2C857F9D6AC5114E8A3A3D6B8AEC09805B6975E29703C7D44847D6093346134A
CE90F89B3116E1F48E0D6E91D45E24A7540F46F6E4046B9F7C8C30323C7AAC39
EE108988BE87E309577263E7B3061BB6599DDE37019ABD2C868EFE4D48DD2A44
E5186DDF87AF8C2F54742EE29A2A0B80ECBB84CA44C137F14925EF5766F00C25
04BC66C3DB5DEBD271270A478AED9640392137548DA35F6C27A7B42E2503D672
5E71D264033F2369A0D6D4DEF689FE982C7C8890636CDEFDED3CA00B86C57DEF
55FC17B50CF4FC2640AD8D14A49BB0D8CC557888A81813515BA924858251438F
05B3EA1F686B35F0072DCABF52B26241E4C302C9013F7EA391C892D2BB52EE33
9A377D3DB0EA51E90F6894B4A268D7DD905E5D5EA5D883F87F318384872F79E3
3C28C8D67042CCCBA415E6E3F049A6EEE4B9559E70E3D63E45A9DAD3D14B7A6C
29BB376AF09042E2115B8D8EEB7C043D61231CBAF225AA603E55CC7228F0EA42
FE5E99634CAF65850581939745F9D5EEEC8896BD3E465AA29E75A9DE1DEC6795
729C8D6F0483F604EE345E522AFD19F8C31606E590FABBA2C4A61C3CC62C791E
25F5D42D773503A74ED38999FE0F739A93A9708BAFEFB588BCE8A747281780EB
8BFAA3D4CB5E17327404D6A835514F62BD91BB84A70F8873DE95B95A013026FC
24B5CE6C75CC2DC2B399D40D15E6A47492199204F29024AA3871FCB279CBDE0B
EEC3651EF75915C3D4270BEAFEEFA16E942494BA3E9F2624101A9BE2D0D207C8
0CFAEBFD8C307CD91DADEAA25F850003F0CD35DF33644B1C9A4EB8222BD14EE1
AD1E833CC11BB28B9AFDC12FF1DFF2B88C5BB352C12136224DC2A87C3DF5CF10
C08C49D4559640ED9A98ABAA446EC08FA4C5E5D39349BE33448D2F6258DA61AA
F47917C66C7FDD743CCFE73E0B0F42BEB8396D03C6ABD18F70784AFA78F67387
04476C504EF844C1AC0D6D050044E568AA1DC8D9BF3C294E68A059FCE0DD3525
19AD1AAD51DA8DB1BCCEF74E92782EAF59BA76B5B399EC797F49979E2081D56E
C4D5BC6AE63215E74A377B965F0EC9A6AC8C89E6B4665D3B5BB5F48B301B0961
3EAE8BE7C7C1AD22B3C2D09AE1E38827356E9B21A5DAEBE9F87B08026E355FE6
2772CB73F6589DA9180169A94C445DB7A56C39CDAB0ACAD28C8B0AE500E89D1C
1CB5ED9EA6FEED8611EE83825BDE5D3EDF8532F18CBE8513DECCB3A0D75FA456
A71DA4A55CCAB4224C27161748515EED8C9C455107A2D2C94493796FFE1F384F
90F1B47DB4276CE06532479E48E7EF347882D4DEF71CD3173441F14310C40642
1EBCF15C2A872042876A4760DA16D3D24B402F62BC6975B78218F5828E131940
7E5604911B96C5871601D8E857201873DBDF1A624C84FBDE0571D064BE6723E3
A9237955320CC6D63E7E0E657C83ACDDF197EA0120851FCFC91F5D8526EE87B9
D9597314B4C6F48B1949C72088EED64E45DD9874A61523D231916A401C602434
947D4ACF22EC577AF3D7764521632DB8AF75F399418E2EFC2F50285695260C54
B3015FFF2AFC8364E65C47DE6F011E69B5E25B5BDAABBA0BFA284693E515ACF7
ECC85BD94C3E0E0F292CC210EA404B09F7B7B2AC0F915A89AB253EFA653E29CD
BE7BEF95DEB3B3AD271CB5CA98A92163FD90AF07DE1610FF93CF29FF0F2D9CF2
B5EECBF408B54C3E0E0F292CC210EA404CD74DDFA29EF38C14A7D31F074565A1
4EB60996D85458E19DAD78AD44C7C99DD91D71CC2A3E0EF740120A568BF3D077
266A39B34F4B3F800F4C6613C9390DD95604D36F9EE669A054D98A2512F90B83
157F57E0509771B21DE046EC3D22FD0D29B686CEC5D71A81C043CC0B52BC1641
C618EDBEBF74CDD68340D52E137B1DB6FF17B5B35317168FA50F0733AB3264B5
F49D9B7C57F2DC9E8B8487016442360CC304B86B8823733121610F7B4D3F7089
4DEA3853786082A0EE9201C0366AE22B2EB80C0357D94E2D89AA27297EE08023
D13D078EA387EEF02769CDD90167909E4A06C058C50B86AB025FE5E10EC5E39B
E6798B1C1B70125D110FA68E8E0D3F777A6B882F96B951F92E5D4E51D532F29B
CDCF2A22F722B10E1622E84621E71880181B97217617F880CE3E8EB6D6233520
04F2BD844F36698373CA12E8868E2E695D452473AE5F58108D7A3003E336D0E1
EC2A118D2FFF14CB166B0DB330C9251103E567462E7BA05D928A193AC2863B41
DB67BDBF4EB722FF4A6015DB953444B29D7CB004560D0685F73E8772FDDAB876
2D0FB43CE8CC834FEEC5B1894EFEAB787A79C49B782A388A600859DC9D62F6BF
9B0C865BFB515EF290E11D56535D34DA65114E1129D19D5E9194EB959B786221
774A27ED1B383812DA577F2F42423A83972F2F36ABC8703D5AECB97DCAFED81B
E13CC06BE30D43E4B9E16CA3986B4EA37424DB7B40CA50D7CC395B5B3BCB76AF
EBE722B2F58356B470509721EE56A688F57AFEA7C3401680C8B9D6B0E1A9C61E
810BC5924DBD3DE66FD0290DE7EDB1D34A443F263B41A340CA3C6C58D3D1B45C
4140368482270EBDA336F91C890FE5F5D8F7C8C7546A9463DAC26BAFA97CD417
E080557AC71F88E4A370CDF3E234ADAD38F76C7ACCE6A311E037996CCC4847CF
2019B1217BCBDD7DF302B8DD0579670A4D308ECECEE20AD96793284647ABF2CB
1665104249E0023ECCC630DA0C8D6E8F7EE93D57BEA9D15B2F6D066864FFD6B7
678A8F31FD77DC212216903ABB95AD87ACEB6E5B456351DE1FE746FA87E04A8B
D486F5ABB9CA59CD73F70E47664DBA43FCB47E34D19BBBA862C694BDC0C22064
F638DD92FA4A395AA221E673D678F5C9E5C604551B2CBBE6BE5DD41DA7FDD096
56C615245BC714D3A91E8664125C1BA4E06CC1498A56F34EACFD2A76AB7446E5
CF24EC08A8FA2348D271D2A84CAFAB1A9798C6A49B19697682E4AEA88E2C9D37
62C911AF08BA10D30740AD2DFDDE1E3B8B9659D78062996B28CBB31364C4D609
0ED841C32DE81A2B387DB421877F87531D5D0FDCA1A301686338F621A15DCDD5
1276D8D7E8CCA4DAF7D623EAB785D6E36DDB2C39A425378898A4F73255C901CD
A70097109EC77FE5AF2F8A4F93075F35E31F0F60669F73F9096525DFB42C4810
D2FE7BF278B215DB9A61885A88D88D6647398A029D6D08CEA9983961D761AB6D
4C5759EEEC63C42CAC231126A1CCB9E7F56C30AC8709634561B229CA16DA6347
943EB3E77E6CC38D6753F31738A6726C98FD46BEA2AD9CA1BF889C4129876C8F
43B30F726D7565C01BB4072F00EB5A432999F4093C06E7E721C7288208ED7F17
470301E84F4B200EE1675C0D1F0321B90C4DCB60A818EE4D33034070935EC99E
8C76EED6C4EA57D0ED7352BFF98AC161CF5C41C774F76D217BC4256EB1105709
1DF68C3A9475CC0A3F8F2E4F72120D52F1C0C7A0C8632D335EE52F4A7D6E54F8
C29C0C2C9BC711B60EA062B748A131CBA28701A751FBE29346869A2C685E9EC3
991642CDC55655513BEF0C35FD178084792598307D4FB15959B8126D915FF6F0
C3EF0B66A09EDBF13AC7718F1B6DE01DCE214039661FEFE4192FD10761D53F4E
47F96B61BA0F88E99544E109918AB0BDCA975746D41D9F3FFACA55A9F6FBD5A2
798FF873B61D70DA73D41E6CD2CFF2A335D8E21BDEAC7BDE74DBE7654F3585DA
BEA97DD745EDF39BD132366516DD52E9C76E3B4BFBBEB8B5881D036D03988F0B
409D203C2DE8A49D134147B53E7F5BBA307CAEBDE021B4AC23BC77FD5C835618
4088CB97755F3116CE5E9F6A439198723E8C419824DFF97F4576D8511C2D9462
B373C59D8FAF7ACFC1932A19D7626D40189FDAF1286142524FB204278D8594AE
CAFA6BCB9525C67AE8129CEEE93D0E443F07C8B223F173BD86C842D1C9ED10B0
06C9498D723A6BC4323DC83B07EDE4EA5BEC2AA8A120B4EFBE20227B3EEE155D
88BBF717CE6C26128DB06FCF821046FAB74AE33E6488A5927BA9DD8258034C70
60D90E9A0B1D2B370671C52CEA8982EE9B346FE6622ECEB154CED0D837B1695C
AD1EC3B523D36BCDA274674DA4E934ADB423F3EBA3768AD4B5B19E8B8D85CC9C
1320764A2EF558A8B499C7B615896FB0C1C003F982B905BD7D67725C83EF7119
C2C4ABA88ACC22AC38BC729416976BF6A2FBDA01B6630BA9EF3E9030BAC1C325
33FC806FCB7A4BCA97B1190268D95470722D26DA18E235318B5BAE543C44CF72
895E5753843A42942A17ADD7ED20E5A361F1507C3E5C8E9A23B0567E14711299
4F680D0062C31318AA787D9A2115CCBFD3823F73F11E73DD896505A1FF510CFF
118B543AAA1575A81CAD05AB36A40A0F83DCF8EBF34DE46C25EC04EB599FADF1
FB85E56461FA33481CD548E83258BA5211AF692F13ADA5048B28F82A75352272
68652BBD3CF858E539037C18E9052A1A75C73805965DDB6851F3232847CB0B75
5CFFC39D937686330FCCC13ACD039183204871974501CBCABCF14F494337C6C6
78B0CCBB7B854DE7F66E7E113345221695665FE8481C645BA159C95E15300FE1
68FE00B0D3A2166DA83297CCF7FABDDB6C50DF2485AB8138E3D841A9D8F9FAEE
35961102BDFE599B45CE63FC6FFC1920EEF0051FC2A107E957F931995C83EAB1
684CA637424DC59853EDF5E21E9F5E037739E141A74174327A43117E7EDA98DD
01736815DBD7F7BC33B34BF3EB64D8B41E63A28E978DECAD6C912760D8954E6D
A83478938CD87551DAB75CDE4633964E233E77C42CDE50214DA86F8414A3EC52
10029DD27A755477CF92FEA77C09E60D39A89CBC3CBBBDB7BAC9C10783F6DA40
C59AE09ED22AE971884911F452C33C0C60624E3BA3B854C245569AE23904F753
2F2E9BAC4CCA2BDBF1679DCB876202622263FC8D03B9E94241A33496AE736526
9B2EA07ED532380833BB8D4514BD26F0453C3F78C12CCB80AA7307A1C97870F2
8DEAF3A061DE8488278E9CCA0BC97C3A7CED9F7696ED91C72A1A97695EA7907B
3DB6F50B11672475B760A3F8F3FD6512C77A23C8C3364DAD8E407319772C9B20
1C49B08864806FEC35AAA4100ECC05416ECE2F061CFDBC321348F61F8B29BBBD
B962DF1466F27913394E9A848702B8F9E1F76D7402A05FF14547300FFAB1FD39
409175426FF4EE2CA4ABB8F6729C0EB1FBE8C013A0A5AD5CB457853D190D83A4
1379B0ECFF59CE398BBCF79F56450208CE849F69C9CC6AA7EE629D85ABD5B7B3
158D44150D2490AD02ADCA2CA74B5DAFA70C389BA8798B3CB383E4249910E97A
2F623C81E17B3CCEE92C80310F76CB845EB46A8BE1BC24105236974C892564D5
763D3D5D678FA7AC5849BC2185833ED8F5A2349BBABAC94E9F1B99B392E75254
DA6E7494F86F8C3939211D916712A414BB10FACF6D7C8E81A0849E81B2E9E3D4
3B31F3595645A05D691A342EEE1495D2C7D6CB4BF7FCFF6E0CBFF412DC337866
535C761F4F5823C58EA52E28F0B34C85250C3F0D25925E58EB63AB2045E56C4B
20C4A5320055F8EFF524E633517EE593A104F3E07F80277BE4E8ACDF170C2EB8
26BCD643ECB0CDB6902BD669D025146799D05E7B1595534618B6F56E276EF6FE
8ED93AD45B23132FED98022E43F5717EE072116C951D33DA27C4021C18363235
E8612F98D9EE77EF75BB78C86D3C950A94A5296010CC7DB8B3271E3BA3007290
4D31BCDD7925B13A87852D888CE24ADC74AA9E338D2054F1454FEB26263F9CB0
22BAF4B7C95EA5169889D0DD08D555DA95DA96309092EB298E67D8D4E2DFC75C
0F145FBEBB48466ADB7CE834363B883394D8389C25CAC32F16DD308D6D5AD32E
6D8DE72B8454556EC8BFBADBAD045C00A6C3887E0A00795C3716F205CD54A653
47488BCB948F7B43A5193CC00483AD74857FE98FB2FB022AC985067A0609D61C
C9E5A66071A391468F76F8F3C628A3AFABC5D0EAC93909442D7DBC36F1F8AA91
F0E3A8CFFBF984A33EDAE0869B12884434BB8FAC0529C4E95C9D351703760199
8BBA0706D024C4B58270DE406B27A8890BEF705BF3C5C8A59615D858CA221B3D
793CB7759E96D5784D36A9022D035C9B263CC26036CDF9CA73A688FC9C56285E
1E266208A6D31C444D303624FEB31000B790BC7BBF01069A1C345B4B82AA692E
AAB543CF8EC154F14B2DEFD803B9D2CB0CC50C64BA6D38038699A4956E7CCE62
8D683B0C3A934884BAA69BF4A58B32C2BA6F48EF90BEECE1C0438C4176D91031
112D3FF4A4B27721717FB77E5B71B47D8B67AD663E9A0ADD71ABF4845AF99333
E64CC3409440737FCCF58A9899769EBE684B749A18538B2A369573ABA104A9DC
3B3662CEFCA6357089A896F996E001C3E60AB1BB6AE6C56493C903C011464FCE
BF55ED9AF61B34CC67D4756856651BB766773D93984440983C434F334921069E
D4EB4830E5E1BE4EE7195B4650686984FE575732043B774507B75DA4D49C7FCD
52FCAFA6ECB349C1AE05E9A2A4432B7BB69C467659C2247A0B25272EB6EECCD8
3F382E45211576133DBBDA5CC4582CC3224C881C8B788F491C937843051E6626
CB05F32CBBB7ECA1F30E869A35A58844DCDBF7DCE03D6DF9C02645D7399B939C
705C3684DEFF82699C0F42B3D41AADEF9B662F3078E269640C43F5923329E440
A4BC1282B989F287F0D9447E324D3D0624F94540BB17EE50DE7F287C29FD4559
29425619F5251850B773B9AEE7DF52272CD37586B380F694E4A4A8617B8C8D09
650239DAF887E2021E75F4E82A686A3D22F12830D995534A8D82E4B822F07B11
5A30FB9A47BE466930A61D40AE2F796EFA4EDACAF54F0611B32C50E9EDCD22AE
C046307D1EA509E86D08D9470B9A6C8421A37261E130910A5DE1AF58CAC3F06D
D1F83FA509761A23F1D55EDE81CD9A7D0EEDE17D01F0413547027FDA266E96BC
1C1E95DEC7CD47FC235E96D3BB3D354DE9CA2ECCDD4FAA2ABE187EEF62A104B6
65A93DA537E30FF7254CDC09A03FBB6A70DEEF61BEE99748FDA2BE8294C776B1
FCB57C5F991FADC7E2ACC996C889BB23ACC950355F6B935D49902A31BE308EC9
9E6FE3FB13AB6FB9F66BECF95B625F9BE81B711B753C4BB8B8E6121EEB51C5F4
69E6A082DFB54CAC3FF76321E306C508835CB5ACF6F8DFB074D48C472ECE81B7
7CB110711A0F4C87F3361B827FCBC29C6023B7CF9B342947BD06571DC3871F3B
D4C831E502344E5ECE6B0E9B760FAC62E4ED8F956C128DB94C6A57A6010DDB8A
36EDC028F3ED4497AFC7E259532E0B65C8D6AEF9815CF27EEDF796390B1E12A8
1ED58FA8598C55080A06D587BECCCA9A75E08AF7C47AFD673958992778F2BC6C
1EE830AC674DF28415AD6474E8786FBA3312A0D24491ADD4E62FFB5DE55DA35C
961AD58FE29E46A3635D2AE3390593FC7EF25EE5C084A3B3262724F59B94B56D
E90283762771725A7E2D8D20A754348ADD815687DDB99DDA88F1E2C5887707CD
4A36456F05FD5DB3815F144E1EFB2D400AD025F1AD729681D50842C5018F4EDE
E2FF2151597C9E0F7CD996E84BE1924E2EECA87BD9E1FAE18F1A7D26F4B731C3
F387F15ACA5056C324BAA2C7919C7E116629E963F00FB88D14A0751991AA8800
B6FB0EC0FFB31E6781211DDDB191062983DB61C1CC8BC7B4C3737F308CBA575F
AB008D303C052FD941847C3B212A7EDAC5B823AD30FB74E0B3A299DD94B310B5
656E38251125385AF1647A4E4169D825AAC0866A05FC58E4ACC809B0EC851E3D
F647BBA2684C5C2EE1F17CA9B68411E8B9CD0EE418F274BA87144994469B724E
B980933B62659842A7B90F8B2165401C7010E0B69DC1F26FFF98DE2420B3E3A2
8D735CDC6DAA8E1A598B5A151ABB06DFB2F944CC07F6E33B9528DDAFCCA9D3BB
807F7E17A4B5ACA941642067E8F402A0813FD842EE498596FDC1AC6664FA20D0
7AEF6DC4C3D25B0E6BA61F704CAA3E22180383F85FB9B692A0A29241EE13B4F6
714D41A2D1CDF7780D94ACB7915123B143D92EAF14B8AC793C2C3B8C92C9E465
A7892D5DFD4B654D2973AAAD8001ACFC19AC88D55414836234C1D0AF2E1C2591
2F3ACFE7CCBD459B75FAF2B50A51B1A4E64F58210DECF59C716CCB290FBDF6F3
A7A5FBADAB4FCA85D1E0E9149E638845279D7FFDBEC3EDAF9219312E207A4E25
603286C219BBF030BE494F8800386490A8A577304663F5FA4B9CF430BC88CB99
A70002E9325FD23F5E98F82DE74998BAC5C9FE00B0902925AE4637DA34744818
D2363DF3F7493BD1F93AF7132A38C0259F626F4B6A42AA99143EEAD38112B6E7
A25722A4CD1DF2EFBC67891C46F239D6F7BC4BDEAB3579B57030F0E4B1F2BB07
7141973F65E63E37274D9BEB6C47FC02E53E6410EB7F116C485491936AC3A537
EE237E43D40461A4586338B6878461B4583654F891D0E725E80010DDCCE80095
80ED88FB25EB6AA33793A8753A7F557FBDBD7FF8A3FBE97657698F9DEE5D6B4B
21F51BDB82312EFA39CB79FF7D9B695DAE2B87A6C9F56AE2E54C06B408FEE23C
0CE11F90525B54CC367A891C5FD9C62F19F7A9FB0663D0C9922640E5FAEB4F03
821F105AAD8F008A01ECC02E7933E19CDA965A8C9BF79AF044B30FA99C4C8C7B
D3944CEBCA9B64D651A7D04BAC2452A191FDD5C00750A46AB20FAEFA93C3F0A0
C8FBD47A1798199D542502CF3455678E261DD2E5776968C6266CC638D2C3C32B
415E966CACC421D9E0D61AD77AC12D56E237004932B232540B46F2B1C7D79DC6
0131A04A2836416DC50F7333505B8BD1C756361BF7F7745674638D62581D54A0
EADF9DEFFB3DB34A9F052BCE33D31822404A3CEFB3AD50732A73133F621717A7
71A7A61A947B010C53219B7C5FFD482DEEE17CB8A9AB3E9D9537B515A20FBB44
89E38DD4A5C259786822401AB64F51DDF9CDB6B41CAC835A14B1FA3C5919589C
C2B5DC72244B750443117CEAC8DDD45CE978AE146B8C4F8728AE29DBCC7F3E06
EFF0FE425138A90484712D9F38D9366BC7204F658140F9EF7A02B92E75A59778
5BBED4857290DC162694644CB6F9CBD3D6037A8683539060782AFAC5638FE1A0
68BCBE2C4F28F49F023763109ABA63C19FE12602105A96A5CD03F6B4CA4588D5
43E6D792EC62A9A0CBE4EE11EC3C7978F7B3FD9536586CD367FA092BAA3AF782
1E163013D1EEA9166A03C74773CC7E21368FFAB573A624EE8310F8FC87A29AA8
3FC913691FCEB16026E2A2E7E963E7AB4BC4085A2FAAF23EF2D832DEAA5AD886
D057A59C57FDCF69ADE717BCF6B9D3883A0CA3E0AE392A9C6F6F90BC5D5CA319
9F074E3D68501E7677844645AF84BD457C3622DCE37903AB750E41B77997BBD7
DD72705319827CF4F719B76F92A9938EF236F4147C84A72C4E7174919051077F
7012EC56B9D9909E0183404774026C412123D97C4CEA14FDE754EC9724E69C1F
FF355711EFCDA581E3AB9ED01CB57B9ED418950210C5F25E824909927AF3ADE8
1FE9AC4B06AB9EFF92B961CFFB5D4FE25B5DE3F5BBA4757EEE510A8108FD0711
2D0CBEE20F28EB9A4ECEB1C43C77FCDBCDD1994E9A5B2B808890A491A86D6205
A41B3205430511C0FBA6084710A89B66A872DF33FF1F3176C49BACF113373FCF
9D5FF51BB22B6C4BD7CFC220C7DAA9966558B455FCB6B5B8F8D07C0E1CA3519A
C25103C4CAB7953C4A8C92AC4AD5DD5664DBB2BF30EA9FA7019874C49B52A57D
7BF75FB453A24788F0EDD9ECCC2DEBB2F3E5C5C726994939CB5CB81245D1ABC2
97EF24AE63E0B096256B37A3902841231BFF280474DBE1F8C911C96DCBE0A310
1789371FC8DFFF7B893CC31F7949449631DCD95DAF079BADC65276478592AE43
0E67B9D703770D0888514EF9C6C1D1285D4166D2E62B853F963B55B06F9C5D15
C001C4EE12EFABAC22A4C6EBD497C21C6925E4F01ADA4B4D1C9539AFEA742F94
A871D859B787A4F3378FF330328C1407DF2A8262C8210316DDECEFB64CBC7D74
67D732290D64F93FF369928C40B365C1C108EE3FD91BC3419DA6A3FB66B058D8
C7F41E4E8607362B6903233B0E03E716D1A618A2EE807EC62F3A7DD104C033D0
1DCD21A0D693ED59E36C020C3DAEB6E579F535D32F040E81A464BE8EAA935F77
AB14169547EE7DC97D930EB80E71FB47138DE0D1B906AC0A2AA60B49AEC1C0CB
51F87C2353498E5C89479548766B85895C714992C037FEE8F17F673DED74746D
69C11E2CAFDE501E9518CD1A700FD1B4278741257AD34A9458AA12F83B98FC07
AB2C36FA46AA5CBD3DD82BFFFFA71837BD801A163489D637EE936DA94F949CCE
61B14603EAC122106CD71B2DA272B776B09398EC4360E287EA0EF1B32D668729
ACD613FEDA172C2C4C68D8289183847166382A4F5AF50AAB964A3513BF81FE05
F82A2A971A09196EE707CDA4CEF89F216B45AA0235D3D832136C85E8E7713D7B
25432E735C347DF0412BBAD7AF12E286EF46BDCE0049C0DC25D505A86429AFF5
7A1A26C5C477B60F7D2CD68FAF0E31755D1A8B7BEA58BE68637B48BEA155AB7B
90D867236D90FDAF1224B22D4EBDDBEC18D9D9E281692B2B50FC0365B7CDD0D4
79186506CC4290DC62EE6D09B687A7BAA75AC89D836743C5FD6939A721D5AFFC
0BD44F19B2D83A22677798FCF29AE162670072AF241E90823B8562BD775094AA
649C18E53F92BAC9A7C242C6DE3646D64EBA1D92C0C08E805C3D440DC898D036
B00A4C6DC8145172B4CDC9BC4571233251666EC71DE3EF0489A26C2BE2DCD869
A6D472C2E89C18ED4E1A9C390BC240DA061C5740D9F88907122087754655E555
B8C462A60C47D82C0FD87B91B4892171B331C8DF036C78646CB96D797B66729B
A81CA102C6A65F5884B42D913FDE1B222C2538ED49B9DBF014738DD8D145A62C
8B6CD6D076263ABFD8B815226AC45CDC581CAF7BD4578C5725B282E2A1A1DB2F
4DB325392DD3720C58770B6C4998C28491DD56D38078D0B47B0C8B5660355470
193E2EA3A0861A653F93FE2019BB849ACAF7B44A4F2412E1D54D730A5DE89D03
DE51C4A516BE73D0EE3EE4E3041C729D16C3DC42D17D5A25A342CA32C7480636
150D729E942108D64BDFC3240507EEE167975383D4AAD08C8C8C19610D30C813
6AE86051EE4BB2BC2D37CC885DBD2F1F43BA62037EF4DA311E7BF72F6A6CAFB6
BD90B03F5CF6D7758D3D284B4375EA27A4EFA5FC4D9855558CB57208C675B566
A0D99661697CF9FD85204313341A83435F3B66459F891F3D4C8BF85DBFA44D2F
9C0D40ABCAA515EF5244DFB33C5F6B884F4AA94D145C8EA5E3C3998CF1656FA9
7A05A9DAB25850F6B95C4EDA13B488A4C8E733828CF325F018A5C5EA56F4D43F
9B6E1FAAC47CCB9F1BC597EBBD24FE5AB2DC916E7341C8BC26D4EA2A4E4D86A1
969690457EA38CDE527578BEEA7FF1C014DCF3FF0BAA9E26E900B7E42ECFC4E9
96D149A0ED9A3C989A59D7343C90F76A17408EF9D8BD63729CF5953E9D23A852
8E7E68E0AF10BDC3CDB61C6DA2894BCF999354C221F500787675CDBD7282B6F1
0E0A7EA26F34095AD022FE52A8A088DDBFF4ACF692EE03A84E4407713B61437B
3813B2063C64F9D53F50F59F8784022A6374A1FBC6D3B0D0848EC88CC223A139
5A46A56CE39F2226275EC0F2B9065D028F3C3C6B6B0FB112A50C6F01E59EA650
963FD4EF72E9FBD975E5056AC9877F111DD76F0C775972869384C68FD4C026A9
5D67BFB85503154C7EF530CC38513E7F5B98E9A95B1834A86FF7519C824EEC48
631C6FA541135B571B6D7E25D8D67F90DAAF3BE3545076EBAFD54A023FE16E34
02258B66BB102D1775CEC2AE5FAB62F5483D624DCA55358D779084F07D57B145
7EB471F538E4DFB233B1CFF20E538BFC58E2C00D6EEAA33C1729551087BC152E
862DC2D15B1B896BDA789572C159F91CAD7FB42D5BCD4E9B3C11EB8B6FCB285F
A5D7E21A59DB33DC7559A18ABE76B7F5A64EC62F6DB3F924DB534C05F46641A8
1A1F618632DDF04A5E55D3C95FBB1467EF2FC0E98A2B78AF98536A23D4A47180
C80236F56D65B49D04FEB88B6DE54F95AC3E4AC72D69711D83C8A17AC067A034
2C48C6CB0E2B4C497C31A097B6B79D012360110F4C9679C0B38EE25E0C4D2E95
AF908FA40917A2890943C48333E845A11995BCCFF8E848DAE61272E27FCA16C7
B55586DE9022155F1E68175B1146D4870E830984AF38DDDD3F56109503A472A4
E43C5A7379DBD4102ABB03DAE34AD74C4F6EE4677F97DE44D9B76EE3E7AB7C6A
1F6723368ADE771D7170E1774BC9B951E6D1931EA484755870B88D95004217F5
A1D4E922DE12FB4ED9BA41C9EB7B316717EE859DEA1FDECC5CBF8AA942802147
345D39E84FEFA4370CCCE1FB33124F7CB60505AC842820EF84AD36F59DED9049
4206DAF65C6F86C4640222DC39F3AF9C2A94312A43B89BA6282AA9DD21237775
ABEE3E5CC3D1AB3E97AD4F08FE90D2309A2D1AC8310E24888D958F83EA3ACF3E
071D5D9332127D98BB122297C7B152844A87F92E8D27C9A5FD04E8B38777AB86
78D40C3B58D81068DE0F422AE35FA70857E6CD08434D44901748A7E5407B0E55
ED8FCEC9183F72C2571F46E8A37742699E6552E350FB21D6712C2DB4DE620EF9
5475925587C7177C9A8DD98C76780BAE8D837B10612B477DBBF9D784583F56BA
7A5C56B1B42C7BB997BEB05BB18AD9C9219D8620E946282FA48D81B4A9BD52F6
D6A074E5D4FC4C1A84F67F38EEDBD5A1C882411B9629AA854108849C28805BED
1AC71246A86B3DE920BE8D449F66D213EB45565B791A1F06CE97D2D44AE3A5F2
FC39DA43DA2E60D3DE8990AE1110A6964C093B6886B4F976CFA504FE5BCF89C3
D3825862B553B168023E7E9FD8A52CDD6E18A5BB60805E2F13A8CBAA310FAEEB
4349A60E6395AF687EC818E4608A77BF0FE97FC78E7635A42126769767CE7208
47DD48BCAF67335C612101052A7E971D2C50A7CC1F45C6A0A9F13F9C8DDBF22A
19408CC3F11ED8ED32DD24EEA4F80D956BEA63591C576EA7CF0EA41D0EB8466D
742363F38ADFD4DDB99DC59BA9D280DCC1105B02F7A2B04700F38ACA9EA52B24
B1301EE091D9F7A46CB8AD77DF2BEE8156546C205602BC3CFF661C3C2F6BFA8D
21D9BFE25248E95E731A96F22BF14EF5F5D4786B24C4DE4324F7C9F2C845207C
BFBC0C112B461397F08BE6395AEC4C06B0661B02C76A1E62E9168691C71E9F30
94F18AC4669845E662720CD9527CF609FCF3A04249EDCF4C3F371FA457E8959F
F089CFB9E80FBFBA2FFF11554D606F58800F4200618D593C114D58C24994275D
4FA07CF00484502C8D39A44F241C464AFF03E849E71BEB518CF9E2D2D21473C0
3F8012A9343A16DD8D7A7C4958377AE31FD172620F809C378B668FF9F7D0921D
21ED167B79684788D86E8CFD8FBFDF21A35EF1EA6882465A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AE6AFD12E4668C39694080D5AF803E63774923AC44C82D
1354D62F8F88DE6728EFB98A9C09C92BF53BA5D6D7BA019D0EA98EFC31A04041
38F1AD04B3FC6C5021E83D0FA04A482C434FE0179E902006A6840E8A6D92F99E
847FA7B0D89CC8500084FD75CB36F23C0BEA5C55AD278CA8D5500F9FB1B78757
A4ED5C2344F44E27B6BDB6C1C49DD4DF620E4E17BD1BEFAB77690820C31ED465
EBD4DC2AB701F16FFAC44FAD5A50EC402F70F4C2B405C026F1760854F731043B
ADC914D489B407CFA8645F38361FB563378D8C5CB7F8729D436B65B80B366E71
104202FB3F677DC4F398E82228CEB92CE0B1A9330777D907055650B89F5EA54F
9A330B97295831DECE252309A31DF9148EBB63F9972FFE4BFB167F0A1DDEB81F
01DA1DBEFC1852235A11EF95DDB05CBFA74F03B7681A63C7D7DCC9743B9534A2
A3CE32991E428EF33F9E80FCBEFB135A64D8F49D886F5E1F131F7B5004945B03
65092EE01B11AC63C7EE036D359C80BB6DBACBDFA8056AF8E7FBC3EC2E3A917B
6CB146262FBACA8E8088CE04C45E9C77F826A402E7192564DAF7660DD75982A9
E370CE07062EDB990C7022449B767A4ABFD933D90C05CEAD5C1A273E48423BCA
4038135022A63D2A1C09D8AA76D485C7C7033A3CD23F88B88140913AD1A6AFA6
27088EF7799A6188C469C788D5B047F1A11284747947D07AEE1B9358FA2D4D5E
C883AED380063AD550A0B7E2B8186A70B9F2EB908D91B245117A5BC793C01B1C
270C8B1ECF1CA36FCD242493EF26784388D4873EAA9D70D25CB3E6EF5FD5D546
5D4B932218576465A1AD3B236E859C96D4B442A86059FD179F2A74A08CACA2AC
FF1EA109EF380A696186439AD18E491545DF1298A736EDAA8B422B563BC1EBC1
1D890CE9D0B95D6735B4AAC76A132C32DC7400EF9BE05CD9217D9310D5D4906D
9A3025B95938BAEEB527B16F036A07A472088DEB6F2494626760B162C6F029A4
8674BB40D09B9408C82F3FF92ACDE53F6E5CE6E96B495DCE5FB211DD99DEB838
C8B360EBFF098A2CB630F1090F82DDC2378A5A806A1B34660516467E16479708
9A9903D4F1DBD2E2183521EAF3F8A509476A7AD04A6980B85AAF1DFA77E487A1
48EC2F208638210802C960329608CFDA51412F23BCD51AF7C2D6534FCBB68501
D452FA9504081C0AA1EDC34BB73564524B6D7530405D573518DA0802431B1215
1DBB39DDD7F19A78FEE86D4AD5F5F4C7C5294F1F6946F9F50F22BB0E65DD81C9
8A18352B16BA989B56109549987B19929FBE3A78417694A95E24B0D5FF17D8ED
987B2FBD198C64468DE2B33DAE4157CC4437059A2E5D043E1932FE22D7EB833B
FC688610CA4FD4BEE4699CE5D79648FBD0CA6CC7BF8E7A859347748213AE71E2
38B15BB2950B56C96311791BD1882EA5A25AC89C81F803900A322613A9591F4F
2BDF5DC8A7CECD0C13B40FD5B20B70DBCCC6F5D979755B09E3692BF10CCA246D
B9DB9389F3D1FE3237635C589670A1BFE1CE9CCAEF8CE81C446A6FB4EF8B8776
3A6522B3E8B40827BFF7C480C8DFA92B297375F32E814543985A8F33CF2E4C3F
BC7F668F1AC14D39ACF09293A17433AE8A6171235AD975B646E371AA01809355
B33CBFB1A36508B4D2565570C4B4BB7906A57AE9ABB29402763D9E908869716E
A60631E50EB50E7E8C01DEC2B0D099CC0DB6A5731B4EDE9811A39C70AB7FE023
5E22851E7A7304AA085ADFDB2F449B6931BF135728BBC286E58C89C3C69DBBC6
AFB476C0DB0FA0812ED2AE31427A8E8E923FF94B4B37C5C1538E75C1E8E34127
C4AC62F9960A64E38ACCF2FAFBEE7105305B131499A532BC9B52FFB2009958CA
789087C79B7D4E0156DCF0CC91ACE4BBB4809C7F1C970B14F02BFD21432F39B9
735E71B062C3A81E1C5602F6E73DED09D51E4121FE20CE2595BB570CEA69D56A
02AE42D8D1064D30EED42BEA8A3FC35E67973A9D1E30E04511BCB7C537F76B39
2E633FDE5E9EC4C4A857E8A6E45AC19CC6689DB947FF5C2B0B04642AF2B39411
84A01E7CED32E4D92E132D1E4CFF80E59B70914C2011E1ABDDB8AD371AA182BA
80DFAC618321579258F1CA179A1FBBD12C9B1D01680CEB9E8C0A25B8955DF06C
CBA2036E33DDC38ECE65E2D7F9D832700AE0987EC9F2C3D6DCF9D27834119ECE
4FEF85594AAD2B110D3B89982763FA04ADC7998E90CBF2097DAA3F9B738008F5
976FCF584895DF0C37749EB42F09DCA02F5EC1AD1D34
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39829DC8A2ABDFC584BBBC8AB8932CB
FDFB9FB917139ED02FB419CDEAA892CDB606C133DAA908377AA57FA5E2A16FE8
F9DBC207EDEAA72C2F7D4B7B7112BFDD1A5BC950F254FD477654C63037748411
037887C4B65D8E1DBFD8BC7F2661AC6E39CB510EDF4CCABC332ED1A5E5FD49AB
7955B7A0C9770887DA7B5A123239565BB1D04FA90E615D06A805EF2EA704243F
B382621C073D18FEC9D5FFE44F8C791C47B490C8E3D8B586D529D30A9E40FF7B
C1C8059928ABE24544F41569DAEB26F1186A550FAC789DC46BAEA1D028891BCE
072BC4077D5280C8337FA283BB4340DDEBC4D256E13F78F42DDED30EC42990D2
D7674A62EACD13CBBB381247F44161A0539A035AE3749991DEA439FBF139A16A
553429E039046EFE39B6B9B33D252B140142EE927CE5E607C1F2BC03785EE94A
E63B97F0E34213A1B0A55054B02E9C5BCE6B0E9B760FAC62828B9B2C3BAC419B
073E6FCA10420F989127A04BDE01D71D3C32869196A7C486DD1CCB62FEC5AE72
4457E9628C077A0C7218B75BD86AE495A872463510543EFFE5DD50FFC2FCDAB7
133032D62176E87C9CE253A193BFAD2575B7B23BF4B47D1997E6DC26B83665DB
71ADF03DB565CB3278F5B72C3E42823F4F7EDDA13852C3D2523C98C6613FBB7C
5DFB870023C31C1FD013E274504CF62EE88454734AE583D443130A9533C9769D
375E5A0DFE646D603F49A26F9E5F210B120CA7EE5A3EFD38C40BC343C18EE38A
6E5EC1E16F206873FFBAFA03266BF0D28259D561A56EA1DEFC0D6891AFA3D1E6
DE83FBFEE99829CAAAF9FE809C13BE788C42E74A8A162BD9BB26137253BA8B58
1941E759A7CA7AC42EE55AE3ACF0B696E4444DE0BB3491FE84A6315E3725A28A
20C7E32793E2DDA8ED6D90F8041298B7A4C1E2A2D16FF35C3D8F5FD37B1D5760
3AF1ADAD3760CFBDD46FADABA26B5433D34C2AEB076031841EA0296AC711128C
794F77BD223CF144C0FDBF1576BC1C20D6A4CA7FF78D906699CB9C2B43FD2042
ABADEB88D3FB46627EADDC9F2827BAC12E0E45B310AD8C11FEB1DE5440585524
AD00C04BA139245E95B76F3695B0BE5FEDE9A0B810C0D8253B244EE74C47F8B2
0547A2ADFAA6E40432CB09DCCF5C286D5EB04E5A7D952E7167268B30DF26FC38
1D8D871D0D96566F0E4910D1712E7151AFFBF5AB2C8A5AF1CB6DBF0B027ADD1C
2409375ADE1F82292CA07F3948B726E9D3DC6F3AA19E84CDD50D789E56263362
340FBA8CA49B9AD210E2B4D77B4553E8ABE6A6FBD131E1691F749DEBB18A5B5B
90DC695349522715A6B6AF951007027352BC7C9612CFC105C8BDDBDDC8BAD0B8
7F3BA50D36D20926718FD37D86663C2F134BB4B5EEA3039CCD3F02DB45E13804
E3B7B4E4EE45019BA6FF7DF40D9FE58108584C65DAC1D387D9CF2FB4A626EA3E
546717AE6E23981338327681221810546F0009F98531353C9A8EBFE7DB9C9A1F
83F6E3CC814D6844FF1A23AB32B521C1A09010973B310CD03A0ADA22C6863683
473B13FECAED39B923980E1691F99CB068EC99B0F5292E5450773EE1769530D9
051181315AEF884EABB76C5B134E7E0185E7D5929C128293EEFA925E555E77E7
2F0216B34D71875B4FED0EE2874DF99ADFD2E19382CC90DFFB25E67F6FB762DC
D3C3A8C76F4F6F7298116E7FF68A8348389D3052344BC6AD77FA9B4CA05CEA57
E184293362DFBD0B5D90A7909896CBD0A038B6BA98B6078C9FCA1556AEB8E16D
CEE96FF74BE92989C382E8FAC254F543E8D3E7146C9A0600F9A0BA0AB57A1760
0467ADC64D600AD4CB66D8C64E1AF60DAD1AD150F70634FD5D3F4A2AE9B3C0E3
26E0B565D1B8C8131539566D7BC863F004227E862427E6DBDDDEC327586E3550
F1334652408290E2076FFA59AF3487864F69084C46F9795641EF3F6005F3C003
55E52AEC8527F0DE9470FFA0D0FB9916ADD4348282DEFEDAB18C6806F0215AF7
DB5BBD83B5342D6226AFC6BA27D325DF0DF082EB3A44D8C1AFEAB666552ACE17
0271D4F4AFF841A68114ADC80E0D2727283C29744C9267DAD51797ECDB95CEA0
97C1FEB8776D7F800C040270B499862D6716DE9F931B7CF21F7DD3136F99DFDF
0A598942FA060B0610ACEB78D4122013757C6D445496CD9E665C4CB2B3CDA467
1DE9808BC121551BD26F4ECFA13415BA19B37938E4E8405F21D4EBCD3EB0F2AB
9D84E98621B64F4CCBE092EE63AB1F06080262C0D9BE2CFC49FB390CBE8D4CFF
0FBC3EB5F48C5EC53F4CEB73912C9B769C772FB4880C0D1073F1B61098EA4DBD
DA6D7C1033099BB4F81CECD8CA6B59DC9372B038A82F59FDD0AD40A42DAE32BF
F67377D94C1D29209A16487327DC3CAC470BC33A673DDC442A01FDA3044A609A
F4A56005E35D2F6C40467E3E766EA74C1E6838E6EDA87B8C246F89A01846078B
432AF38B93E13E249C6F1EC3130ABEB2AB8D5F2F360DDFB20C99EFBA52CA5B6C
CBD0E1B2324B6D31190B7DE9CB7A125449FF2C0EE41A7E340178D6574F6C05C7
4FAF21E484023D78E9DB5AD4EC255ACC69AA7C6C17937496EA01A8C67E01F687
36F187F94515D2B8D8964E0ADE352E5C7E0905658A51F46AF9B2988AD4D3BE6E
D6DABA60136FE0AB315D335B1A481FE3DB344A5F50DA95EF3F0F9168447CFB38
451B2B5A1C0E218AF54C91AFBF843352359CA24426D57006CDADE0409B1A248B
52378E7ECCE82BB402103177786D6F091A1D5C37DC89CF313CD15986DBC15A31
A95C75AA37A215135C966C6190971AFDB87663329213E737FEF91B42E09200D9
5D57CD747F029DE976A4502BCC478177F585F15CD2912847D0F53FF2986C6BFF
3022C0AB581D0FEFCECAA1615EE015B4701779D827EF896A46728049B116F109
6AD998FE4B93525C3596EE80221A9C176C47F7AC530B409CA2BBF912DBB455D0
662E64DEB42D646CFEDAA09CC251C84A48B5AB27BBC9E57C5646B0069F980F33
D5DAC4625C6673523DB325960B441452CA25B42AEEE769A1B59D15D30B7292FD
83B6E78E13A7850B543F668A1C36B35E04B0FBF632F92F872212CEADDACB20AB
6BFCBDD95D322B8478B7485BE9C86A1F560C6C6AF3F1381F095C03F918532C41
F7B8A1A55287A2B656689AFDD90C8CEF6056EC65CE4A345F755D513793939A0E
F5F13443A9150F35AAC5623BCBAF6CC5D18428C20B2622E855369903061AA937
40C8CC072B11B3A81301B75ABA1EB5C901DEF3E16541D2EC15614217201043CB
717C3C883DE02F1CEFD0BD71260782BEF6721A9813E57EFCA8DEB439C20604A2
F7305334AF446F694BF15E746CDC1EC49ED6114400F4724ECFF05FE0BED47E45
792F983D6B19A9B435B32E268C5C50DA95EF3F0F916E78C99B501F212C04DDCF
148251E92337D102BDF46AE7FC641D3C28B45B30772EE9FF3BF083EF95FE7C9D
6CB41B8BDB1490AC76FF84E0DA610D20C1754A51C9E754A7D7E2ADD1545368AF
6CEFD61640BDB40D1BFB192B0A503A8D8AD85D470C9A0D949E797F92898142A8
56E41F52444D0BAB7675370DEBB9335B3114B92995156DF7F220E4C07B7FE9E7
4C2345BB233B419D49C3606B11B1FA454D8996E3BC69089F1DEDD57F8B7A8CAB
42412D8D644D69D508870C6C620861E751C779512C404ED48FF12999B1AC9F23
CF55920502D0BC7EFBD5CB140E02C5A8CC2738410879360F8147D40CBB48DD54
37E4D801D861882A5D2AD8238A013AA94E069B7C265AA616653E5215E436CFC0
CB202029CEE5656DD9F88D7E5B1F81A1A2A8371FF9FA43E2441953EA557A0E8E
FE548FD6A9ED7E683E51BC4D0556B3333C2937C26AC08DA98886993EEC7A8FFE
EC357A8C420FC728E91DDFBEAF65EB7B28D41FC2ACFEE9D6D55AADE4FEC16BA0
900825A18A3DC8F5CE8472C0F6AC2DA72E603C723463D01C1FFE63190DBC77D9
2CC9F6A8837A4146BADC9A68B2966D7BB767D71155AD4338BE2FD186525FDD96
896A9318D430B2342B9D3806FAF0FD8C3F73B973BB9A83284D3F6E0192DD8E78
8CEED141266BBFC3A0D94EF878D91C89A203CCAEAA40BFB7FAEEBCCBA265C586
267AEC1B59EAF96BDFE34D6F8F05A4CE0421600A3F735240A0B956B9C9876181
C5BF3BADCFFF53C23B0C336AF90E6C565061B2CC994D41EFEA90DB2BE9907E93
FC98CB5C33CDDE089DEE8C2848745C4BAF998E2B5DDFCE4060684BF01E1BE21F
BD5B4A015F03689BF7C20D15E54E1D5690B18843ECD4207F67908C6611D567EE
CE1E42FEFEDDA0078E7789333EB7C97527BD93FB0D3D09F8B11EFBE0F0CF846C
E587DFFB46A8B72860BAD93A2E414FC4E3FA2AD4257AFB55B24991E6B83737EC
98F4A6F7EC12B8B4FB9B366B109921E2A15532327692DA3F04D0384963F405F6
363F314FB76711B0168B89E9F85BD1D47602C83B9677F41ADE04A99CF61612EB
F7079B848946ECEAC5DF7AF1044E917186B7EAA6CB7E613647A93FAEC7563535
886E28292A422267C0B155F4D67B93EB6417582B7D7B8E44EC96CA2888B1E6D0
236FCD97E10A2E18ED2539FB148AC5342A93321EC4EA8D4ECA89C65758520C43
4F65A0EF3B575960E66A4E30F9088002BF1D547E407DA41D28A1207045CB33D6
BB7B21A0080D2E917EC3E48A45B3380636F06F3DF2CC137A9E6DDFBF4CC6E06F
7F4E221AA17F75D36F7194C1F86930103569E9EFDDA9AD14A06532D665EF7C63
91C6BB607D002082B89E2DD0885CA956529EA49D7B91337D1D32D85C7C702542
DCC4F62DD4CE83D8B0A6B2D3D7EBDC816B047EC8B3065930E77CEDD673F09576
ECEAF1C9C9AA5B3C3DFE28AC43FD186B6BABA7FFA77683212C8DC2432526A4E1
9A8C02D1BD76F1DB27CEA5D181D7E6BAFA46B5D6F83CE3CC63FD1CF93E8926EC
03228E7EDE89DAF1060DD19EF66DA5E780DCCA30F180F8DFB0CEC463BD712D1F
DF88FA9735C944C04B919B7BB6A60DD4DDFC4F6B0C8526BEDF26F171C5F4C808
71ACD7CD327CB2103660C7134AD5D0447045AF93358ACF5DE07C87C7C94E96D5
DF44958A1F7695ECE82296DF0D272C713BA3B6125BE8D604C6018E7285C9712F
76BFD82B5151EABE7353E852FF9135460CA3496B85B4052A8E1D9AFE300853D2
3242C561A12D2BEBB44A71F76248841DE5394BBBFE6A79584C143AF9CCD4063B
8984C3786F5B676B129CBDB5ECFD6D84167DFC65D87004DAEBF783EE5FF928B8
485ED86AB51C52AECE76F5BBB78632F57452B329C1D61D12B382FC02AB19585E
02B3006D0A741AC388F04B00DE2653B18C99512BDA161381553F31906127617D
2AE1B888EA771422EB425F396784251F4A466D3936DBF7D6E0C043CD6D918C8C
67320CD756643E676A125CAE42E92DC32D807271357666762E21AF1A4A96CFBD
EFF4DE11AB022E33B2765DF15FC2ABE0762FCAC4EC5DFE7E64E140B1B6D434D0
89639078A1E37E01DCBEF33E2B13994C1060A0CEDFF5D38664565212EB36D81A
1AC4E0F6826F908BF9F0F7D986B1D435264B36FE2248F41C853E102378ECE5A1
E3405215F6A4D06BCB10C14CA858E82DA3519174D386845193EBE4AE0890B2EE
3580C618C1814F112E445F32C0970817BC40514E6B059495BB77FF54F014CC29
3B27057DE8158DC15F718BEF49C4B5909FE549B798B496C226DC16A18A9DE72D
60CFA8B2F15ED477673AFDE287E72E5E9C0AC031366952716EA21BF29FE0A023
A3DFFDE181B90C51D70554276F0ED4A3681A84D170419B1D9D825F30DF959CEB
4C08CB8BCCF28EDF33CC72BA1C6A7E2FA648B4974A4377FB170140A7516D83EA
6C76D4ADDC4B61BD20023FF06A5F3B1A51AE4850C6FDD6BF5FB4FE7B7ACA2170
66183B5069034F3E2708336464CAA3134263186E4E2F93B1170A6F1725A65DE0
BF2FB1D62E7EA72AA2C2EA54482A16933EA760142ABF564B90036B2F6EE946A6
DEB4BA7A7FD67C2A0C290A1A7982F7C49A33EB001C3B895E824DED43C96305B0
D042E6D59EACCCEE4FF4C7C352308AE96C1F73241317A296EB73AC094C4CB4FA
D1E78E9C6871F23DD7DEA7C7D956560D8AF781C25A3F5050DEA499563C86523C
08C94F417CA5126E38E69E1FE68FB06FBD58BF563372DBD30BCB727C312D57CB
D805D3FB3054DFF46F83F65741B1017E96CC1C6C86EBF5CDB65E8DFA20E20774
04B83803AA3A4643B4CE86543A099295A2108EEA1D13FFDBDEF73A974FBF645B
0BE6402837E114E2D62A37076A214FF23C9465A0B2A48291F051DB2A0AD2856B
3B38FBE2DC38390D96B19CDEFC01A7C48DB7041AEA1D83C0F18DB4794553FEDD
9348D5983E04DAB96A634CDEB686CEC585614E19885A346AD0BCB540FF5D3D13
C722603FD1A9BAB84C552F80E751FEF2DACB35DD9B875F3E5A4AE2D89D3C6C77
6DDD1273580D1BEC9E882B2F7A1A617781BBE5E7F80E3A29CE5C1AAF8099653A
FCC562511B1C900DDD7B5644F3980B30716DF6C006B65A81BD0195D49232871F
31B92C54DD21C9A8CDDE65FEA0067EFFCCB080A8427A5F5DBB56FE1FC9C6FEEC
04A31DFF256C6198A819D55C36D2C5556D4AEB20D07EB45DDACBAC1620BCE641
230920C23A8013455992673BA5484CC6C201DF87F0F105C79882D6161597830F
C22387F92A4B74262D7729B2DD4582483971761422427B2A1C68594F1FC860D9
09E575E1ADCE69C01434BF4949CAE9A68F64D2CF9B4EE95672C13F4D709C289E
5191DD5806D6A6AD7618A93DC4A85C4076A95944ED748BA4F7BC83231A84D8BF
9F4346EE7C154C34B7DCC334678DA0543790D3075902142022D6E7352BAB60CF
9BDCFEF358676F2944DE6E6B639C37E8E49BD4A6F0903E0C3293655EA1F11B8F
E226AE94AEDA6C5911D9A0E6336E37064CA969A656E7F4E76D7634AB97167A72
810BFAD7E037E394E8D7193F90BC0CB304DF4D689A954C94491696D4C5C158BB
77EC34B98BD1099644E30CE5DDE591CB2706EC744D529624024E35566FF0EF71
D60ABD9581F43C579834C3CB72DCE26360F8C5B6FD5D29468E12CA2453F4DBD8
248221B5D57C11305FF53A443EA9334659FB187FD126CE1C7BB734D124EB0386
F7AA332FBEDA5E0998C62EAB5BFD98ACF80D5927A07DA8A3AA987A899E28ECA6
F36A2A8DB58351615E25EC792BFC8F1150BFA1A884F0C273F12A52FB18A1FBD4
2B544011323E059BCD0C4D4E95C3052ED84AB231B88E71B9D3FE88048DAB5228
DC52296C2E3794AF5BC45F581841847BC67F9DEB3511191F8FA19588BA2944BF
5068D2F6B9321AD914EA4E82B48190927170DB0EA31A11EE7634FD75CAEAA480
F411AA480E719C60E8C7FDC5A23F9612B8E33A7E197F53A518E52B13784DD90A
5C4E41D608F894BE066CAA01A20DC0310431EFF98E8EF876D73AB1D963C8365E
8B0C46E6F2E44F4B5390076A43C82C91B982B19D7AA8B61516F4B802CADC1354
D1C0E5ABC997C64F3C84D2C3B7581BC9566CC4250EBDD63AB7EEDDA82BED3CCC
435269157BDB2DA2D476404A39D56C81B6DDFEA56902F01E6B87212560580344
FDEDCDF9C660490523BD937C4737C92AB0367DA074BDBE030753F707601397AC
6124220CA6F845FD240AC9042DFE51BBC876B0D072EABAB7E94551D681604A5C
1836D42AE44E136202623EFF3B38728B54DC913B55789622477148C7437DB021
B1667E274B61B25E968EDE4B8D2EC13F789CF1A4AAEB28A369B4631A6DCFCEC5
781A692410F18B35935AA9D15EB6A459A1BFB5EB9914CE42558ABC90B623AFF1
FA2CB3EE642028E347811EDD07010911E6A7AC69B91B15400EAC8A99555A17B9
BDC69BF798F350598765BFBD34976FF8B593578E1731B4470B5A034CBA00791E
E592FB4DAB538C2809DF4061F3C7F23CA7363FFDBF3675ABF732FB41F87A663D
8F48B7C20CA00865892DFB085E6DA8115834CF0919430C372E75AFE418EAF9CD
571D59A09D75F1D53FFE1D2619C441E4160DDE659F85ACB1F058AB549FBEAEF5
2C0DF13E9859B308297C05EB5A7BE69632558D2DB6E159F53503611DEBB53044
3E9AEC490116A94C1982EEDF6795FF3A7ABCDB26BC852F5DE03B3D0A4233EE94
2AB48F80B1F3137F58BD70339FDFA8B3782C32EFBD53D8605EAF9D58FDBF06F3
F3248B5454ED6DC729CC5070524D1BD12A1E21F58C53CA17934210C32A35B68C
F61A1FE31EC707DFBD253E4F8EBA8FA68830E6BD9979FD51C8355F69CDCCB70F
B82747C47F18DC85E79F288E0FB00273469C5B8D61DFBDBE592A120D4B23EBE5
7D3BD2407FAF55C2394EB13D8AD0FB57C7929C128293EEFA925E555E77E72F02
16B34D71875B4D700EC32539CC0EAD16213FCF9E1B9514BCE0D709937DD97436
39E79466007C7BAED2D2F3FFA02D3F4C69964D80F6177086A221C7211F5F5273
89E2FAC6BCC0D2A250565E68403768D472C7A3BF07DDC78A7E0B1B67BB5D67B8
40A38F0A186733A8523992CBBF6DFDED8BDE4E6DDFAFE691081DE21AF12C1240
C57540E73362D1F9A090427F5187F49909A6399C1AC4D093AE96F31557A70C45
40B20F20F81AC3AEBEB0996DEEE69DC68C138FB4F7E2F8D58A602FCD0BE17CCE
683723129385D16A4DFA72DDC14591E8F49B8D68433757F1C9A457ACA621BB7A
2850B9D5C9B7D87FCAE8F8712E1BEC7272951D9CC4ECBF2DCCB3E84449369E21
1375B1DCB60BD44DB13FC7623589A37FE3B65B1BD866436AA7E2D2C09DDEBD95
B89FEE748B72FD8DE7AEA770C4DDD15EE038371C57926BAD7877E8DB34F73F68
01A8D444C47FB698D76C578D009485AFF57CECFDAD510D721956F7200EAE8F93
ED95AE429D7CCAA073F27AA182909671965AC8849B3B885B7DAA70ADDEBB9EBB
D728D3FDB15075E1A6F45197571530C9B48984F86927D1C8211E3A3000E71AF0
C89763691D128061C3D3AAC640D47AF86948448DD00039DB41E9C5BE1A7E6A8C
EE34835C7C0E2FBEB1656E6DE0718D62481CA06AFEEF9570992AAAF45866D8D6
3736A1E7496C76AE7950F26E7F55379066FC8C4F948986B1F80EFD950B74E614
A2927873BF2299F3DF4D06CED78BECF34BFCF41D02C7E85E1C4AB0041A3247EB
7E667B2842D65A5E184D7383D62F9B5F146BAF053E9774866BEC3E3CC34E053C
9A36AA20A4F4DFAB0C651407A58102F825D9534F2C1768DE57B36953EC634C8B
D5A7A63F99C76DA23FB3E8BE62FBE07B0BCCCD11327D6B165ABE463654F1F31D
C68274726001B13A06F2A4771CF854FE240328C4A2F37B9C73FA680259DD25F3
F8A5335C37216FBFCB7BE1255583782E14D94DF7018BE8DB1EFD7ECB6A9D8CA9
38A79C81B5A58B6644681764F342047FABD1B30CD997DD370BE73E380D82C73C
0D65940F2D3916FE46C254C25AFF36E0A79981DAB5F0E126F26BB682FE26B34C
E15E0AD3762D59AFBBAE7E0BD2721C066F31553E26153DE9FED3B3F6B887D06F
E70DC60A5AA9D7E426DC3BC393DDA4218476E84A309F209ABDBB7EF226F862C9
EC8392AB9CBD174CA5E3CDD9205577F1642F97707FC865779AFB6056DBA877CA
9F3DF5B1AFB1D8DCB2B603A43666989974543B3403BE4706C8B223F173BD86C8
42D1C9ED10B006C9498D723A6E6943850047DD1E00689644E9A9D6E22330BF57
2FF879A77E396E56294C4ADFC4F456421C21CE57C3B6D1E213AE76CA2F565D9D
9C1493F2A9A9900487DE2D38AB7BB0D4CE1C1C86B8FD8EF3FC186A8EA4C9BE51
D592FCDED3612A2C9981B84E4D303952C301D4FC85676D82530CAD90ECCDDE32
8ECDA5EC2BE2BBF6DCCEE85F7A35F82462E67AC71D35BEB2F17B2EE77A251071
F93B4C14D9EB5200883E675C5C28DB99242A8330E9DDAED388DB7A0B48DB59D3
80E0A7B36DC2F7D2A4D6CC0937BF33358AAB89342349244EB8BE2259642C943B
B5E456F818BD729B7F7E80212139CEBB6F132F0875DFCE9FCF90586E27924EB4
061D364FA41B7577457D6C49DBBAE9E7843269320E0330BE9C77E57EFDAB7374
603762EAAA72B0B40EAF7F021EB3767417A353BC475B59116D38BDEF3AD8BEDD
D1947CD11336046B5DD23AF13B20408F7DE2E0C6BB799011FFE48E4212282BB7
BDFC55B4522C394B3A5441598B9F209C8ADDD4BC7CB4C9ADA51ADAA643EB311F
9C71D12C2865572235B8CEACFD7733CEDCAA991212FC3C15A63BE164B2D5CFF7
84282EF7462564CBD49D1820E68CCBEC83A92F74C72430C349E0C6EEA3B4835A
64DEE8D4BDF5577E9D4B958FC9C413E5FDF7E3F203BD2D3299DCFDA458BEF2F8
35DDD975EF68B4705E1C75F856D7C269CAB322A9B9F38145F1DACAB2F44A3C82
D04E639C8A348EF29C4F033343ED04ECCDF84588B7283413A413A9FFE34BF843
80ACEBFD70A6CD51D4BB9704D549CB937ED3DE9FBC7B5BECED688C38D5AB822D
B77434BDC79A29F57BA1CEA8521336E204EE168BD3B46C346698BFE29294B426
4DF3FF6950333AC92AAC280B543D226AA9DC216153D5708FB5E68B9516C4C99F
5DF780BEAD3AB69689DD76895838CDB360066803092C41828FDFFC40EC76529B
31C219A5EF7511324A8C312CBD99F9FC9ED41C012CDEFC38F7E48BFEA9F1ACA9
3E4CA4E8DAB41C38FDCC6778936C9DAAB3C0D8EA20EA384D74D11F9273358E7F
80EE2F609C82636E0CF7CA8A8F0DA2D83DFB02E49524B86A2C7D0087848E6766
CC8D703B64341ADC30B47F91282EDD18475F502234D7275F749AC69C7826A5EF
683AD4C7D8775415AB470D93AC31E7FC99288D9FB5EB919A1D92B468D5154564
38FED1B333FC882FEA17CE5ECA50FE1EA1FC863FFF42CE5D0AAB28D29BA62C2B
E02FC7C9FCC92A19B2524411DE70346BA128368EC51D0F116AE19F25B8D9CCA6
D5E61B5B11D5B16C646BFD7EA160518EC3FAA0101327E6A1F41BAE3D82F70116
07F67B09A8696D992835B930001790770D058B9FB23098A309023373FF754BEC
4425517980FFFD837B6139DA3B60C4488B6AF86FB91652E0EB7A4A5B00AB550C
451413A237842D91C888C20909EC9B4A0988E4AAE449964323B79BADE117A3CE
6A07A4A260FFABF332DD702AC4030A4AD4B5F9F13F05905B95579F8BB5520F84
1891A43C1D7993E09BED045DEC33AFA7E8C3BCA79544B1A2F756D81ACAE235A5
8C64DDD610AF1DBF25B8690226C381D7064768461AB477118F72B38339DEE85C
E619109DC5B0CBA8EAA63129ACF3A89CE533D81C2D1749DC634574826E5FA920
A55FF29A65792FF4447273969913AD25DD44676FBD2AECD4004E685D4943DB29
155D93CDC05BC0FE45B681C73C50BA9A43448D64E499E404C7DB577CFE5BFB1B
E0C0AC60048631D3C7D2F93158A6728EB552FA09202865142FE8D1300CBB8E2F
192FFB2B5BBAD18B95F031362CB594A3D6D3FC887385B63D84FFAD9364EA2EAD
D5C0B0940737ACEB43EE7E47A9605D5D86CC06E8029D4F57A392D2738F8464CF
6890CD556C341C478926673315F3BBC2ECAB70AE3DC8D361A136876F2FB93A5B
DDCDE808C7E66BE894C847CEC3E42AF88FA2A7B54BF0E68323C210385FD72FDE
4BF876DD692239FC4B3201383F579BC8B0A946E84E8396F7A5D0107E6E2DC1FE
D5EDE8FC05C4A714EBFEA809D236D43F4A900FE2081725F4AE20FF5356642D5B
EFFB62BB25ABF7986DB2B81B6BAF0E22877388980DA220197A36869C953857B6
B20A947FC1900FE9575638D7653722E98AC1602259E6390F359CF18F039F3026
354F553B19372E59846E805477C60F2A8D3C80999E98D913AB36091A92412994
A5A0298BEF561152F82FF64CD3298D1124259EAB94F4AB4F1298FFDD276633AE
882A540B806AB749788120547AD258AC77CD8FBC0E96636EAAB676E7231DC631
588DE29FEFCF03915CB1C64141049219FC028BAF12A2BDFCE4E2CA2C0A305ACD
D18039CB5F51E368EDCD6FD1B490097100D50B3825D862525CA5E696419DD60D
3E93B65AC8F5014791E514E1AE5F36D3D9F44C93A631C05416042628EDCD8687
6B9AD32BF87142F762E101DE97A0BC8A47D0C7803C544AD16DACC3058DE58364
75E77B5A1B349E226FC5584B9FB20D534DE1EB0E3A74C03693EB503A2D1437C4
008E97C76D74AD430973E848FF274D199A24E73214CB9E341785567E831ABB7D
7D60B935D8D6EC46527591BFB94442A0146D8F93A35D8AA213A5F92395A029F7
CFAEC61194397D4F36743FDA257F5E57A9AEDDBEBDA6B8EF328EA7E5E6F658D8
8D55F4B2AFEFD49BA3E59AD1CC7763901191CACF97B56367EF01C888862A9D87
7F399CCEF8F3649C5C29291BE31C3427B367B7CEA62AA27DA04D2DC9F3EB1838
B3E3E37097799D3B59B5B29D0BD07297653D341BDAA6303FAFF112EC216A6E8E
F494D17A439067508590BA42C25D0D6F49D45869D6BDE1D7CCD1A973BF297FE6
A8821E03A381C468BB0A93AC55B87A0E337A5DA9985EF7DBF5E1072D4D4BCCB9
85C0DD92E3E329CFC4E2B36E704F5A2E99A7CBCE6424B1D7102CFA11FECE107B
BD8ADE967101D476F631951993DF37152EB582AC94ED5B10EAFC22C750752A6B
88536F7F2CCB70A7565FF6BAEA8C53ACA9C12FA2E90495B70D6AA91AD38D6913
2BB3CDA70EDC5342656C12DD56FF5094259ADF92A39FAA53198AFEDB046404E5
1D612D315E9E39247A5CB3F9C37AF849E9C5F06214A570113A0435D6A595DD60
0436E0BF5E8A00CE3C9285996155727FB31D2D25F3DD96B454547AA6E39E7048
42B17E1E8D1035C6C6E12C84989D53EB4A5AC25A0858B10DC043C9755F915EE6
9CDE1336040C536CCFF439BC8E43553D86264251CE9D70C78EC698ADCF13947A
866A8ACE63BB85E56156F9C9D4DB5C342277749E85C7BE53D7191ED68570E51A
7741ABCB2AE2039CE16E1FE730C26702E68F7E0CBF8EE7604FABA742C9E77379
0AC2F535A6E8BD186FCFB55856B0FC7626D42E7B65AC7ADC46008D953CD807DF
C5AE3F0F649948253EC51D98A20B1C4150AECE1B657E2A07591955B78C0CD5DE
CDD2FAF1925C3BE1C67CD83D2C8A7C7106AB660583C0643D0B5C78D282C98740
F1811EAA9866F81A02BDF349FAB129F23E86C9BD62FC0831872E26126498DF01
A8B4E7DF01CAE49DE944C25FE57167E92D1CB0373B54B48A334BC58D1E56137B
CCE78506800E630028317C6FFE3A2DB30EC928544114DB706EDDE8250462972E
F06EEB9BCD3B1076ABCC3DE786B58C4B24E50B6D68148DE8830830C374D6FD6B
C149DE1D1ABFABB05975961FDDA498D72C313AEE1EFF147266263864254C6B25
58C0BA02DE051B617F9A19D5DAECF77E24406118D5909E018340477402CA73CF
C7A2564942BB5CAB197C80FE52EE1275B05D19E6DC95D93914B713820D5161F8
DBA452AD22FF83BD861FCD07E1302D6A3AC1031CC4E3356119D1E4BD658E9EB5
C64396D14E541FDA2B517B3874D4991EFD61104D18E85A53B73A1FA96E4895DB
43D62484F8949B2CE9B87D9CEE04DFF82BF14931BEFEF21AD6451662B0E22E6C
9C0A057F7885CFC38A25DD85B462B9982C571293D7F367FDEE695858694DF4BB
1ACDE59A2B8DC8849E90F329A9EF4B08231102E217DCC2F05C5DB191274F7B85
695F5F2079000CC6A6A6BA86F20F53023F4168EDA727CF0DFC3ABE725F0FE01E
BAF6D5ECC745A8E0CC91E1D614C9FCA10A660D8835C4F50F6BD3CBA13E235F1B
8C2881C0B52D16CB8A3B5D19876C825AE419E08383B6A269D928DD94CE748AC1
F0E99EB86A7C12CD328295CF922FF601D69125F828B4B2DB8F0E5B8E821ABDE2
4AABF7BF07C8C599F051F8181FA2DA8EB3A4A981BB4191F5A5700F9070E60CA3
84045DC239D4F32AD8A3A2A4D87FC5875FCA2059C93DF06A84B1D55E3FE3563B
DF87CA82AC039F77FE0D4B91CD072E5DA1DA749660EB786F9F7BB862DE9557DB
BABF3A9BDFD6C700DEBF73D4F3F0A28C8C1833DFD60525A78B2A4BD7C5BD422B
3A901A80A18BB3DF60DF1D9C1F0526611190E892DDA781DAEDB801F01459540E
1BBAE50115918754777590F9228B3217E226202117CFBE3DE2C6DBFB0BB25BB1
3F15168436607CCA8FFA2136643652759D4095B00EADFCE399FC2D200DC2172E
8954FE7E4A66E108C8A77A3CB0AF4CAB7C4DFBD203B2BE6EDAF0E2EBB8FF2D2E
6EDE1113A2BF4373CC4D3ED37EEC970DF2A67F15C9166F5E345E64D4719DAFFE
DC561EC252281DB376CD9463FE0BA7790B034FFA33A749556EFB3ECDCB4372F7
0BE623E0F4968E5DB24CBBAF3FDFABCF827F1D15092F2C91B0635A3A4E1DB383
63F391B1C660043F3568D452016F2B9EC8007A809250FF35F3A6CE071757BD74
7664E7B7A42DA0F5132A6BF74ABEDF36CD773386E362EC792495A9F4213D30B5
83E220F80BA5571A6E412839A1E01AB70C3AF5B010131BBD91387BEBE127FED3
E0DAD61440DF11343BC094C795ECF17CAA9617FA40172214427F0A763D4A6DC1
68B1E094AE63C8FF20BF5AB3F35D707748CFEA14B7B3C22E59624FFD4D239F71
EE34C76EA247CA5FC1BB748579B0BFFCE8BEF9371CAA855D017DB8D86E7E2C5E
0FC090550F0D6BEE200C1ECDDFEFEC2CF31E8A1ACD8D22188198814044BE7291
7B321FAEC066ADB97F9A59A28029DC199A868350CDE048A76066E350D0A9A469
DE86BD04EF91170F32F980D08E4430665EDC7C3D9F851EE93C901E5162BAFD93
DDD1F07682C4367DB785753AE2C761529C564DB1ECC0A407016043FD243A2F9C
6B74F227C73F995832C91531429BA4BB68A183D2FCBEFD5B4B22FE26B1D66056
BFFB7C9D73ACFA44C0B9C2849C6A9A5042F950B4DA7AA22DF5EFCF25913D2ACC
376A7944F30DCC6609C0B44687A24A00FF95C8F1E3B870D2BFEEDB7752E2E5E4
F2D8684922373B8954027594E50898550D72B178A8CED206DEA40A0CCA730146
4F125E0A6B762C063584CAA42961F311C2EE3444CCE12CCB96F38E4892294DBA
44C9FF87D2CC8EA96030DBA74308B005E6564C23EC62D9F4D17D347D5185DCB9
305DC2AC27F91DDED333CB9717A47FF22675EEE654C670CD379B1AE3A51CDAE5
73A1F135EBFFF42B129A6B1A293705214A02F645443A8E802FAA8F64489E7588
072437937B91D5CAACA6F0714C97D8B08258BAC49AD3D1C9AB90D780D7D50D93
6899B375853BC965DD196C43D4B6ABB02638AEB2563049B55D44723D12351ADE
A2BCE9E77E794123EA6464AC86DBC3773EB7AE9C408E9CE5EC8932D25F1A1410
0918F605CFE56DA8B9A95E2F71E964DFE43B3DFD93BA956EB6F385D209E67803
2B4B61C682AFFCE321ED5DE92278F31B2E573FD86696D98800443F32C940F914
60AD59989B17A3A72248A1B623B6FA3D2F3B90A45D70C9EFCB050219D4D7573D
1B83A5A786E3A80D9E8ED54F44241A12D5F75FAA6281834C9AE3F561C20A65CC
69DE71D75D611A6E064F7FA4A4D222571E0F2BF9F412E75F8BC047A863CF6FBE
E6DDB79BE8A46940F089F9C0978B603CA1B96DEA8B0E37C4977624D052B61FB7
CD9F85DB0A445402177D80EFE4D39CE20EFB336F7DE59F2ABD29FCF851AFC2CB
FFE2748080561B94D0B7633ADB165145839FA9E61DB75B31206643E926659975
87BD293AC9D171E33B6810E923D71617BC83D95EC08325BB6A68D73736EE2874
EBD426E37B2FB7678D9B00DBE0558C96A7E0F31AC841166BECBECA5808A6CBB0
182F1B972172BAAFBC15489F109D6B6BD38AE71940FB335D29D6CAE4747394F9
2B9F4134A15D700844E41B76D3B839AE683F58B2770A3EFBE3557820C034BCD2
103627719A4844D67927DF415FE16E4813F08A342378F3D549EA8AF310BD82C1
7D52534A16D84B4543F05763BD2DB1867457678D1B3EB2A32E2CEEE5278CF8D1
8D88EFBCBE60B4A803BE4D3F8677C6C9BFB7F3A59916222FB45A9B526CB103C7
0A12F7AC02614375AFE7EB466FE59D40394E035F75A4F78A48168BC54BA2EB0C
A3E3CBC63E3030F7008A0F6D70DA843A9B11D8AF30E811C6D72B11DA45EAC18C
0998EC41BFBBD61DDD23141BB41FDFF1D191D88A418FA4D498CF3FAB3D49E7ED
72C423740DFFE9AF2639AB35ABCFA26A3468C0F9453189A784E321432220026A
57015ED62CDEB4AD85F262EC11DA12205D5E97FFF1E35756C47A6A8FD44E2528
D5460A46AC393B1D0476579E56A2E963AA04CB9E7448068F51480EAEECE52E4B
3584DDBD03B345F3ABD2897BC9C6E09224229F51D04092795F2EFE5D8F7E4DE0
09307129C042FA2F798DB0749A09F2EE7F6697E406B507D64CFF454AFBD1E5E8
71D4347680EF8ADD02DB425252C052698A7F676A592D548B4F0E0AB5EB81214D
5EC5ACCDF2C02B254DE15692F18F6771364CC604446A03CFEB7F19CE93CEEE53
1416AD25BA9E95DD031843AD2A0B82983D1CEBD27F2C401BA50D166EC13BDA41
AB15B05AC988814BCFE59B4492911643BF1A1427ED7B0BC0687DAE369C048B62
592A0C88C70BFDC5676814E1C32A297D6026F27989359D327BECE649AE9A888F
7F773969F0622AB9ABD07738F3510403B33C9FB082FEE62EDA7DCF122C588CF7
93C796AFAE219CE5DB92EF42302402D142FA58866811407AEBFE7790A7AA4CF7
F2A6ECB1C3E60150E61B8B33CC90FBD867BEB880FA5180D95C111A5955246043
C8659E8714C72144E350AC33A94A3004157AD65BCE334146CC6E744517BFC425
440BE840F6450B0BDBA1789FBF48822B33BFC5FAD73A5F027822544ECC3A92C0
DC2EE33F6F8D4FBA8D4C6CD802691D141769D3273F9D3276462B699C22D06090
493CF243A6CF17A6915285731E1728EBD9A46A24D723D930D56899754CB71D78
7645094C3661D50BFCFC1FF82833E243A985C8B35D9342D7809AE1F89C0CDAA1
636F2A3B4546C9C217AC45FC5D2A62DA183B416C684388BCE1FD1B1BF12FB534
F7899E4912EFE1B93D0A73E4043AFA55C6AB9E1895E036BA65DE15BF69090B72
4E7973BDEB0CCA2FDA8EFDC9424E3D947F3E93E768E2048411CDBBFB04AAAA21
C7DA9C8CA81CD3D122FAB3506A65C80AA175AFCAB68E295076C40F76B948F478
C09ABE423C2477DA990FC58E46BB65AB0676A40A8130F05CC91890088836ECF3
9E2A1A3CBE125375694B1245014308215F8F910CC3918FCF6D4949558FE7D5E9
812155F5A1D4B7DBA25359D12F0005108E1C98324DA7DBA54CDB14A69E840CF7
69370C5A1BFBCB46E2585F78260E545C2763E19FDB2EB177583BED56DB845EB7
204D6454A631008D5275259C096A63B0CD2618CB9B3B9F6C760FF1E852AB0A2E
238367EDC20FA43C6D97741D9FE30090FDB2041597A8A577304663F5FA4B9CF4
30BC88C922580C327D4EC83FAAA2369E9E6EF7FB99402124F1A57DB0C8674EF1
F7729CDB19749ACA9CD399A4ABCF28F8A9F60C4F652DF6A4537FC25299BE5500
8332B6ABA8575F2AD844262D01ACFE1A26E6C7F496EF2D2E5A6DE68D6F3DC78B
B32742316AED9FB75942C9699A2519D59B12B59C6D3D1E591AB226407E6C99CF
B6F3DFC7D308B5A5D28C1194D028182B0BAC8AB381657EB5C58C3D1988876014
16B99ED3591C763F98149BEBAB26163DF6A976BFE4F25A34F7961C0B932067A4
D6AC173205EDA9ADD6856D84F110B3993CAB31AE55591FE1FAD2FC386CCE7A61
69ABCD1AAC5D5B0CF03E299DC877AB2D5CCC2EE4ACB812C376B9CF0FE5893979
464D02A372F664BC3E48A3CC031E9C3E60E5394C7C321156CF52EA2287BC9EFD
6A9182A687B43D5918B4EB2A1C95BF082846B4530C1917A4F87FF7F363B07C25
5B5668BCC4131873094C8DBC0B9A1993A9B392A4FB76D29C0565E07066382A04
4FB87D284384D6AD0810B5407E1085B1D5104A399E0C17AC6B6DD86F6CAA313D
ABB7CE3A054BB979C78DE9F762FB6ED54CC9E41E6562CBB4F3DF32AE563380F7
3181998E50ABAFAA52EC5F28EA7A3F1521071D51F63876BA00D2D21938582E94
06FC4978B34B0CCEA34763CC8D18FAB9EF61206BB4F566F4FFD842B1E9F15540
E9416A5357116C90BFC67E4FAFE3393863A25CA94ABCD89A60B41F657989EA8B
A494F850BD820D668E9F913F1AAF8216CBC34C745F22BE37E5B125D4DFF11B0E
A6601D83CFA2183777A397E456C1A83904F00C6F8129E347C6489FD4FC798ADA
C32C2639D89C01F8EFAA980AFDE0BEBDDBDE9391DDC6D360FA52332148C25D2F
D0D70952CEEC5408055E9563FFAE6CEF59796AB5445068E3BE6449AC14ABD5E5
49271FDA765512675D79992C0F99CDBB82FDDEE10740AFEBFC8B9F42F3516AD7
B52E0019E985BA7D4560302F057EFDD85AEF7A651987BDE7655178AD99E2F1EF
91D1E12C2B8D2A4CD3AF4410331B1DE962E0B4BFBE38C79866BCD14C2C924495
25BD879F697414335196C4F551770C28070FC7FC7A33F62D3FE4A444D8FF1DD8
37DEE581FAFD1F33A82F3A5FB5078CEF70F230511FBB5BA5957F38649D04B515
AFDC4C342BB8B07CE738E4DC099C141FFF63A34AF09C4DA1840B946D92FB793A
87917840DF284EE6FA0F7FD05CC72525AA4A45AC134D00AB5F734639CF9CBFEA
F894B3D63261285C287BE16A93D2FCA9870FBCEEF2D7EA4083643DEAC7041BB0
8566DC1A5F41EB63913019CCB8D949E25D7DB43EF32CE21205C883F2091F25A9
23EA9D4730372E32CA0817B42639F59515E3C9B15F23045E29F807987F363717
3FA779ECF227C1369A01419C89E303F37ACA22B98F40167EF13424DB46790AA9
8312886F15615222B7ECF1BB6CE922179F6ADBD416BFEBF4C1031FFBAC5A1960
6ABAEDB5DCE234243AD361E012CCCD659D3B130165F36F12655745A503D622C0
3AFC0403329F73799811896F512B53CE6261FC1D7CED3BA18196ADD0AB7EC59A
2C6BB8D01DE2FACDE3F5A08254D35A6B15321A1CE74E8AD364247137244823AF
5104CBE95341C48676342C1C797A680FCC809BD0C73EE2780F49D0A00F520630
F64FF4D4CA7C7F6B6BFCD84C80423C02FC1D86D51C6D19F37FE7AB66783CB7F3
5F5B0E59E41467CE0C293D40E60D8D023CC46DD9D1C8E50F69CF7B48F85707B1
39749CCFEDF6E48B9AB4C4240E1272E9BDA7EEA81A807DACE60B2EA02E66EB1A
6E0A58A29A4F640E9DFBA96263B33DAEA32C094B95086FE351BFF715EFEB5974
FFF2B395525145B64A20ECE22467B0E6516CF079F015D600C057C8111F80E353
3344AAA5370E65E4B2F5561A32541BCB2E05C7A4BC24DFCCFAD8C4D541F8E9DF
059621D62C277ACC63EB23D7C8305B38CCD6BBCD792189A12FC9366BA7134EFD
67A22B4D6C53F4BBB8A112352814FB6FAB1F1BDF1119C2AA1419F7392BFFF283
0E97D375956D1898B15868D11B9FB9C3BE7DE23F33ECD9B1D4B4AAA67A4F66FC
5ED6E67552395DE922FAC721264FC254A1EA328143F92B5D64DA3F8A2B6EE007
FE240976397D06E1E409013769EC79E2F70B6F993C2A6E03DA735F5DEF39A01E
9C18183C34B5BC8336AEADFA6A04B4623EDD9332FD173F3F7023B75A224C1EEC
0EE7095521E2AA0763A8432D4603F1D61CD96EC8108FBC332DC00F340BAD8318
531EE209B83F33B1F6E78AF926F3E4DCEB823D6417484222786573022D7A5879
23F3B36FBAA703D8755324C32808C31B8F72E107A21306D8824154BD027D55B5
F95214647AA165E8FBB2DF27D703C19CD0686EEF4BFCBD96BCB34DC11E2C066E
B7F2712C735CAF78FFC5BFD60EFC2035389EC81CCF276D8A1AFDB4C8B1872B43
280DF1A39ABF07344C4846E26730B4685D917E88484BDB2600388A82DB4B4AE4
0C7BE2DDEB36BCB784B51270EEE16B0138C1732A5446F9BB423C6B1D34142F4C
465F9470151F8D7F06B64843B1C2DF2BE55B48962C844CABB7BED489A190D1E8
539854F3A4D5920294D27652FB28885860F09618562CDB8266E7FDC2425C26A6
0178B8E8F81C48D8EC11E458D64A6AE519F0220D29463F0D41B85D627560B067
864960BEC30B1E9BFD85B89F0024A81101315747141F6472327F6279234D65E6
9F37E184831541589BB9A9F2A52BDA3DE0FABD62BC9831BDE2BD9F0CAA7F1351
FB2406DA234A9348B19380D18059B50DD7818DFDD304EF01DC9BA45D775B7C71
C6353792BED83CDCEECF89959372A2D1D83ADCD9BD3496C0702369DFC8CD2778
C01ABC3EE8BD7EB04E4624EA548BABCF3CEF29AE6D247A2EBB51389342F882C0
A0923DAAB4AB7F520C6FEBF780BA2D4D10EEA1390327AAA5BE761652335F12B5
C6FB1B177ABE380769A3F2B6AE4290A005FF26ECAB8344E00BE9D053F69949A8
6AD8196DDB4C1EC6FFABE956473822A122B5F7B048E0EB6CC3D4DD3C0B5EC302
A1788E8086592F5E35E0EBF80EE7652AA5A08E4F489E50989D6C1D5C20A1F645
0169DA0F4AC5B47EEB32FEF122527372E82E96F50E456BEB3F5D908341B95637
A521FFC2897C2391CAC0ACD89F518DB9EB523CFDB347EAE7611E3C332FD10EF7
D0635E73B8B17E13CCBC9CC1FDEA4350EF9A72F38FEA8960DCD91816A84B5A0E
61B4A96FAE7439D74DC29EBEAB00303F0722046046DC94B5017D456E865FB2E4
16C4E863851C5BE8564BF98E2ED403D2E1C4862E5F8CAEC9D5DE0ADBFE59B74C
19F6098ABCDB06E2D56FD40D8CEFA052990E9E3155CB94633C9CA212ADDBDCBD
DDA4E87A9A8DDF26925DBC56B562DB11A93A95D033B6AA4DB98BABD6D97FAFA1
C93E7C6C1E357F3E111E41704C0F8A68CD9389290C4AB2CC3907E002C31E219B
A3715A9CCAFCF3F0AB140A6C836B871222A3FB9221B79CC93EC5C4FD0622701E
4CC7DB3E226045C8A3E76D78E5E031624043116B357872C04F8876134E5B5D5D
1D811F297520B630C792BD0B9443F34E730E93FBA25AE419F469924573D54CFA
3AB00A9EFAC8828C25C7DD412DB8410C0151D97D9F939D2546C8A4CE88818DBD
E72D030D8E884D315F5653639E78E565A75E27349DDAEA619E52650F8D44A7B9
88FC5AB8E622B6373ACBA6F0387CA03AAF347F7EF05FF46DFAA0A79FDB522AD7
5EBABA754AEB972F9E84370EBCDCAD1C827FD9B5DDF4CB8F20C84638A585FEE6
5D2705FBFFA917DDA7F6DE559E13D64772A5BF9D2ED8069FB124553AFA59C4B1
D26C6EAE8E4E226211219C690F3E7763CCEA8A7917A0F359C4C172951461E884
747D6E5D2E109E5A78A8B27BD2869D59778999DAD55652CF8B3D7AA292C4CC64
5553EDE9CCD27DE83077ABC283184401B0388E61C02BEE990C45B15F6478EAAB
9B5639E4F92C70E9E66C6E85121CE920055EAF0BB885346C4FDDD6E81001F044
9156CAF829606A3C2C73438902770EA8E303135E00AE343882AD0796D5CCBAA6
F264F625AB57654C3C9EDB461249DD27D55A3459FF867D1512397EEF69826C95
76EF9D0671951505993DFCEFAA29DA2D5E157C8B93E5E8FC0CC4A1216A5B22B5
E402FDCB68321622D3C825A4CC5ACB65190E581796CC239486A350D557F15B48
AFC473D9599DE78FA7B439DED1676820CD86F0D6CADDBA66CDCCE804B0480D50
43C794F5090D33C6D91CFE00E19A58FDBF06F3F3248B5454ED6DC729CC507052
4D1C8E872F4BA86C8DFF65A35D632A676599386A9FDE5675A051ABBC285EB77B
9CAE2A1D3F044CDA0AB26FC8966E6D9F89847F8EE4A2A279348346C7BC326C4F
B78A42CE5BE283E40A01AC8CAEB19EAB84022ACF111E1D1826E73AE22142A1B4
DC97D164780529938A4FA7BA0BACA8572644D103CAEDA78202B09795489A2762
762B7F6031114D1E5DF6FABCC7CBE12408C1E8B37436368B0530DA3B9BDE0909
CA3C46ED1DD8FB320B3DED35FA8B22E68BB9408297FCF8347448BE6E53709C51
019EB4FED063631F8FB69FEAFAFA01CFE20B5876AAE7AF8BB5042264B6EF52EA
48D22E71F0F57E906AE3F15F062CA4814BEFA3F86F9812514DC72D76F20DF2DF
D495239B287A44967279BDABAF3616C49C07BEDA6A2349283F0AF62704F47A92
3DE6B6150308D14DB5529E564854F4104FD3280C1870700A04B6D8A1012797CB
A8969611C3EC64543291A495BE449DCF7630AE1F32E2A5255FF980420131F5D0
1C83A222A0CD43453352D5C5AB3E3F4D4D5CAD9543A3ADBAAED3EC0E12B5AF10
8B0A14AC3F8338E1910099477D1B3EF2CDA274EFF21A2BDD528FEF3E6AE7CD6E
A6948864A71D97C4574658A3E865BBEDEF8E1BCD305A5ACF3C415AFB2E5DC819
963D8FA708A932650890ADBEF2B237670525C14D773B6052678658F1CA701748
F7A8CFB30B3EAE3C8AA251CEA81ED208310908FA5C48B47AABEA11BAF981FBC1
494860316D3F2DEFA6365ABB158AC24484F969E166E6A53CFAB75F75CC28A534
83CF31560C87905B63CF391ADA2DF440658BC5CBC9F250F58B0228A5AA1ED3F4
98EB33F599A9B377084AA5BBEC4DF7F09D87BC3D2799234B4CA0D09D1FD373A0
A1698FF3E496A6BF1D42D04C4D41FEFB65AF81C51D429FD0A49893FA411094C1
637653261B1EB6D2DBE47EB9CA9D1CB164481972362438B71477715A00DD0F75
7F3E2341D91AEFD2D3AA2D7EC90F9846AE3E32FAFC9F809BD66EFDC62CF261C2
46D7FB3077A341A7716DC73DB1CBA45D3722567AD946B213A287F8D31AC45C6D
5DF5B3FD32BE915F27F4066FB22347FE05E1A709F4966995EC09EF446F9FB0BB
045944E5B20679EB3D1309D247613DFBB6168B7CCB53A1D3201066F4FE8D0240
7177ABD60760D69BA1AD4D40E8251B828BDBA6087CA9889B31AA8FB9AE0C2C09
CD85A9D4D71E03BC8B89881DD509E1A62440589768453C3DC03DEE2825853BBF
13AFD059468E3A4AA712323B9BAAA3890E4F95DA16BA298461E142F8573B8B59
3A41E3454065065D8D8E8838F078070D8186928428949460E95D80674D245FD2
978A274F638C12E8F26FC526DDEA73EB9B1B011AD2E88678D2213CA6DC3A6230
B0A850044EA4F659E277042A1EF7216E57914E1B74BAFAED9A471259DABBD9D6
D2628F0945A1A00BA27F5F9081A75A368CDE2A68B5B6105D8766AAFF88CFDEFF
949914C4B69F50F6628F9EEC6842B79A720A54B8675D83F5D851D392340AED40
2E9DFC0045FE2703F0F5BD708901000DE64F33B95D5FA87CFE2F881916903556
020E108B332B09478C729F228F5177E12FFEAD01A8E408AAE8AE94F744C02B0E
60DEF15BCA15CF0011DD9D4E52CEE73AC9125C838A87DE37398D7130E2B0EA00
7D84BECFA8DB75819A931421D5D0686F0EC0E5329D621ACC21AA586257CB4885
DE3E2513C5DC5DED743A7ED4EC46D7750A96858CEDE038A8251FA0BB96B00431
5B224A6556A0D77D474F4F6E847B658BF333D7DC6B1B16C79230D2C11C8B774B
916E4136F6F25950DC671AF32CB7744769A4B91682DC2312A128C91C36EEE43C
B41592BD13837B9EC97359931EAD972597685BF59ABBF4DD5E3AA444423F9A4F
F38AE530B5502C46DF4A11ACA54D221B44224932D25E0EB7EC6001D2862D912B
670A8E4BFF4C49067AD2D7F96129D10CF388A239D55F0B521B7EA7D5A39787EE
D0C73F2A23960A0ACDEDD11FBA0EB4B5FCA60EB6C2BC70DE5DAA2C6E093EAEE6
A4764B47C15B0CEA5E5726B81B7983D75D17DA60785F606CD96E5930B58DB466
616CA9D2C6E786CD7B0C5E6F7F3C437BA65A9CA6FF7677680B4C95202E3E6B92
C7CEAB400829E6F649EABAF8BAFA31DA0FF0178150CAD93B2247144F40839F98
4B46B70B33A4F2E9B38556120CFB1C25BF8D27E38CFB3A344435F1047F11323E
059BCD0C490B0A5268597B0A1212B1CB9033A3FD23FBA1D82520158384DF2146
890160B695CECF8F370FDFA4524B872704687B9B8138E3D841A9D8F9FAED08F2
C65093A16DAF98DB46AB753BAEF2F42A40B7A0E812078D99C88352302B042263
0F30B38171FBC0AD9EF6D1B1E104C9A5C5847387C73207174122E4ADF5B4E70C
9B248C6B8DEA57B9EABBB715C74BD161B6D57BCA6BA76A5F687985D7A49C7EE9
D048BEAC0ACC19A52DFAF90B9FF5F5BAD37D218B1C3735FB7D517C344AFEC68F
37E6E76029DE4748C0BD5F348B109942C61844466C7AE26E39C429AB3DBEABAA
2246EAE4A9A7AE975D99A4FDAA0E17BAC66E7EAE7593248EAD1C175776BDB994
CC09FF35359675D8C962A6B0E2D3E1D8D2389EC65BE4F1041B59E03DD86845AF
FF8B1EA27CF25FC106EB11005C2E1B7E7E577631C7BFED397F59BEB40AF34FB6
8337973108785C1400E0D96EDBA20A78D585115ED890D627F7C1E2D97BD87B20
D735CE102C0F60A9D44BFF1A430F351479414B141B0B14AC1AD2525B5162C4F0
BACD5410C547020191711F1EB1C6E0F2DA3E880EBBE4EABEF0EBA2E79B98DB9E
6748C52E5CB5075C0AFBDB5FA0B27E7CE3787FED70B0431D32B540CC87EF9BED
29CEAD50C3030B6E9C2D912D00754227042A48007E9EAFAFCD3C82A8CA364714
F7CF503D83EA716DDD1273580D1BEC9E882B2F7A1A617781BBE5E3A42D5C6549
9F029D2AA21FAC8A7A04435ADE6E0E23BFDB17A3C1122D1D8A14A05A7CBCF9E5
DBAF7FAEC6E45447762567078B05975B4625D5BF539E5C9D34D5963E2588B119
390E4B63696553E3B2843AC6516F43E6C280FC2A68DF0B2C30952A4DD9221DE0
9A77B967058F386430184B7791AEC72FFA3C864F02085789995563D72166019A
2F1CED18898F910F38FD25CEFFADAAF3487A00173CC4F903DB0298813CA20304
397BABD4F49738D1B94CC9389E1452F3F7DE5CE57978C0AB6D20076B0AEAD03A
B485F43DD669E9F6D78F7F3A3ECAAFD9518E4DFEAB5DA339847235425AC5056E
7AD9D54F70E5349F5A5A7C1A431486EF03E082C5C6A9F2D1D29BEC214B25DDCE
BC94807EB8FF73CBA9F6A3AA99BB0B0F7598D7025C97CEBAA7E6BB82D15C390D
D314023E1B6D25FF8F94104291995680FAA7132BE44229304ADC8A686D6732B0
207BF2E9537486C43DF1DB154A97C0CC38585047A032B327CD239DD520804B76
3FDE9614BDB2EDFD18C10D3E6FADA258F2E6BC88E28B653076CA53A9D73D5FB9
03C296E7B8D16893C22142E7DF664039447C0B2F77304015926F106AD8FED55F
44AF0DB56F0D9246D16F2948273620428372FB16A75448ED483C51D41076C0FE
99D988D612DEBF7AB2EB1074DCC257ACCE56149A49CB4B62561534BD33767E03
DCD09A2A4F2CB04C74B200EE87D92C452F79B85262A13E7835CD2CC6032BEC0A
209FEA7339FA1C3DBA656D7E0984A69B07B477D8BAEFB53D58434B838046CE4C
54C1E3356119D1E4BD658E9EB5C64396D14E541FDA29F2DEAF29347797F3FE7F
4D056A5EB03C786F5F980813B161B036C8793C7AE960AC0175D62683C5C6FB8B
9C8FA22445600785C7B52C4EEB47FA5FD640739E1F09D5C244EDD24101C91398
605EF9467750D982CCCD4B937C7A19C513AC47E2372B4552D66D524DB3B2A8D3
BB4E949B2CB3DBD75886A78D3A1E0FA45D5BF75C4A7A9C74D6A22078380DCB57
23D66953BD9D0AB1D36D75630552A5EA686C8C9312B5006DCC9231FD008B5941
734D404641BC1BE01518738F7E6B887898261117EDC211226EB3AEE337154924
F4739C650A8EF8D238C73BD6689A0657DC970291995AAF17B17F5FA640732522
7ADB0B64C7CD01D33831F9E9C35B6BEEE4A4A6A8119B02AE90109285855C87A1
7B1B815B966A2F82D27A9DE7D80DC986174F20CFAA76C72E9D95AA2B96376A3B
83379B8B8ACBACD4CECA3AD512B317108280D8DF30D8CA287A2B040C71F73D6E
7D517090BE92D4EDC366D10C640E2BEEA25168B07F85BEAAE58386D7A6D4D54B
096463E1F3B65E79B969340089E3C03E3D69212E49DF05A42ED088BEDCC2539F
8A23CB43F3BD83B2EB3BCB16D6423550A709D944B39CCD8AADD23DEBD7FC535C
46F77718A6955F9C81401F7215646B35CF39C6C3E0846586077E38E1DF1BF4C8
C223AF44F3E73FE0616473D1DD73635FAA0236C5AA94B71149E9086ECF1647C9
748551C1D55C2C46A6AC2854462EB314EF931EBBFD8FEEC4E60F4D0691654349
BB1B586DFA53CBD805D3FB3054DFF46F83F65741B1017E96CC19C599352741C9
80265570A42113C83ED727B5BFC009F809C1ED824678914075B7A31ED9C2CF88
E124AFD59D9A200D61E62ED52BBFFFEB67F6FC7EEC04628C66D2E466B4E1835F
8748E0030656C55146644AB4081DD7906687B7E22B3C0BD3E9A2CD6663718F99
6C6DDF899795F71DE1CD9744B332F42C463C6F1E62512F86E3D9709E693D04AB
E2A63ED7177FFA919FFB035784ECF6CB66BF597BDE3FAA2239718FB65C4DEDEE
A346D5B5D070CC2B452B837DC5B35A140C79D30EB03988B4B040791D557DA31A
46FD5F2AE56EF7B50ADE7D40F429F96D0DCE41EEC1EA29EA44F60A55D0F1BCE5
1275AA635695BD883B2F6B22C897D1328A51E0057A8D4EE1C5DB70F4B17B4DE3
5C678F54658CAC38C5B326D850A5DED9EC17E11FCFDC544B2885995D39C13FEC
EA0420BDED07210EA1A1619F298E71FA5F5A253C9005DFDBC7ECDA793F537AB6
16249B0358EEE0A97DEBFD7A40914BF569EA1F9CA8DB9F0B08B7F54CE64C62BD
7E63DEC03F83604C9AC0D92CAA752F7B3EC507CDBB30B7AD283A44C701B0C580
3D57FAFACDC9F059CFDC464C61F63E0CE6FF00F936219E4F59A514F54313F10E
75ACD0166D610667E7F03C4E9687200096F3A8D3218F5868E8CB6A7E7849651D
13BC0A4F00E480335E0F5ADD48B2C62ED755C31CBDECBBB7C3FBCA1B459501F7
8B045A4CEBCAE749176999DB46FD10CC9126E08DA99B91A4CC65D7F6245C0559
045C91E1147873400FE01EBAF6D69997FDEDB2321F0A36B1B1C0E935AC84696C
5AC192C6246A528840E8C30572AD06D6EF7B0ED471DB941811E834D7048F27E6
4850AF042F96BFFFD3B3903C60869AB2BB080687AEA01E611D2A9C5C0AB25486
AC71014AF1E21245F3FE3594AFE83C605102C08CCB046B807975E698D8B99CBA
B90443083A74742E895C8B2BB07DDA99390E9C98546A121CC80F1E1B7F5A0488
144889677B31D3C9F656B14EC4BA6D11343AD3B5D2A864498651C5705B1B18C8
C3C664BA33610DA9AFCC964B87B4B9B80EBB9B0DF8EC99C8BB0008E4CBE0C900
A0297C248AA4C60583906515E27640A02E05B02D4C6603B5D62633D4DC6CE91B
83AFF0EB915AABF0DF9B431F70B6C431AF283A075F482E564E772FA549EB5215
2BB04BF5A3E95CECEA846B5E158A5483A7EC460941BA4064658504CFAE58C074
D92E17607907577B6D0B1157E28DD3226C5DC361A0451922BC2201C2B3E6E3FE
51870FDE1C24DD45E854C664AE533D0F96CAF210D0EAE72FB04C6D2B44E497D8
81A16DC7532F7E391D658E1B06DCA548D41AC58850911D4D3A68BFC49A62F67C
A13C47550B39DF3DBC13329090DC59354FBA9E71929665078867B4A024FC24B1
6AB6474F370F7F61C3568BCDDCAEADEDEAE8FD8460B5BB21912F2881FA513520
A482CEEE9A057DCAA4F10CF2591C26137E4959F501A183D0B938AD1E46371B44
94A4B39A16444259258383C81448EAE2D382F20FCFE0B41164FDC253B84311F9
F84B7C1C08FAE0F93E3C7084D8538998FAF4591A343C62DAF459BD9D3932207D
DBEE868949407F778D9B930A9C69CE420A33BDBF84092C9ABE53C544DEAFAB2C
E1F06E6CEC66AF9ECDD20BCF50E68422C3D3142C4AB6093D3858333FAD8A5DF5
D18A25202847D51141B789F15A6E944880F596F25BE8292553ACC4E345711D2C
A669917D2CA2097093F2A79A3AA765C18E028409A5B242630B515554702965E1
46ACDA25AD6858A3F5D99E03086E183FB95F360FED53F1A1E6E7CE34EEA3B5C4
704166CD3DD128179D7720635059049FC2FE51853F792989E311B03130ACA988
305882A38AE0E11915ADF9B15772B7E5E398285529758927D5AD6635D2412028
C175FBD42AEA82D51BF9669126F15AAEB8C95877928208B335692A62358DBE53
EC4D0D85406CB205B03A9A7D23283BB5B470642E3F575F4CA3B9DA9E2DC2EFF4
9CBB49981536E174784D21CA938B31D8127B9B6462C898A519FACA94D78EC609
7FAFD5BE455E2C97B6C512D014090669F93C62461F32B8A683D919B5E13A2C0F
34A122D1E5C496F07CC74AD17A93D3206EF4D481A294B8874E0707F378EF61B4
9981EADC4427DF95F15FD7D1720ED874E0D86AE09073B38E8EC302C923C417F5
77823C021047D367867E05A1E27832DAE605FF0A2F3DF7D337D1BD5CE6894A8D
CBE0D0E6218801EAFB019F326E85A8CC963C42710FC11636F5E8A1E4D3E7270E
A356F236CC2B415B72AA0F4F0DD3BB8FF2859B7282A5470B4C89E24C9D76E7EC
94ECDB043188968A9B764661916B832E25CE49ADA71A9589C814E22749372883
A2DD1B8D76A7D11804B6B1BA22BA5B012E5066A8179F11C5C1F18BBC9FD02B82
84C5B6E3EDAA054E5916B4684BA243F56FD007773CA535F36934B5368C099B59
A7114410C608C749D1B7D49677A1B8D23F7C9C77D990FECD8CFA96EB61F44412
261430502775ED9ACBD9A9F11070BE452B7541ABA3802CAEA7D99F3564BE4C15
3AC91451F122BDD5C724CB802331A9D7B1971B19A226EA8995628F77E61D8DA9
7BF05D0B74A085DE8B014AA6FE4866BB1FAB2FDF42E184BCC24F7C8B72DF4609
5F63990A29877ED1DB307A71C06148C0AA91DEDCC822B75C8DBB2F8F03639A13
E6F3845521A7C6000A46BCBD7576320CCD85B077DA331A705CE078FC3AA6E9E0
0519A734F426D447CD91DE981A91EE932B858C07E9B3E3A3A54D36C55C44DE08
5F918641C123A0ADFCC8626DB02839FBDFB30634D1149B829499EEE0CAF3C1BD
D39DEC0B51F0E52DC593ED88F3FBFA38845E9BC2C18AD343B1D165EA43C1406B
F8B4F899C6A752A37735B9C1F8B1D431E54AD281EAFB8CBE9C803884C9F162D7
5D866A9CCCE4BC71CBB107D16C3B6E84ED9EF131A83C97FCC08A6E67970EF61D
EA14523896738BF04B67353EEB8DB69F8B6E16F5BC63F7BB4751EABEFEAF4F6F
EB17EBCE77F2C048C90A796D4BD52B26D219A0C777A8A63429D794C8B1EE5BEE
ABFAC67E072224D61819BC851595A003DCB642504CE66604B6E662C6E86A393B
B350CADC0CF0F63C2B1E0F6543C55566535656FF8FD5BAD6AF396C684FD9084A
C279F548B50099E18E505017C2F7F29813EE6BD5050DDB9205B59BA0CFAC64FD
96EA448EEEC36752C1F9E8EEA537D9D2208AE48DC16C99A31C0700AD4E48E8BB
A391A78868DAF16D21FDB3BDBC2FC6E314AB2ECFD6D643B1D01C7DD5AF72E30E
42ED6D067A63F8EA34CC4C220F09BDF83D38178D4DEC74E8872CDCEE3D54B5B4
73931CF2616D9BC8E505B6C47CE2D60C12575933E1C7FEEFA841B22745CAD4E2
5D321458FBF42FD37C0153EFF4C984DF68859219A37C536BB5F7895D6A13A2D5
ADF6881FBD667116441C00721B7F400417BE01FE52A9DF0403E701325B4B6A3A
D997A3B86A2F487BB059DDC0D7C09EC9F996719BA3A20318EADC00BC8E2DE40B
842E18FB15A5D51589DECC5984ABC4FDF0AB4623AFBE648F3ABE101C47D867F7
D7ECE4DB277483DD2B903F5964515C6B6AB1910235EDBE5E93E3B7C62C83DC1E
BD5C179B728CCF3581C9A736E1748764701CEF19E33CEB31E59EE849429A129F
50F5761B9F052B19F95CC27E7E0CACFCD114B0E6E1DE61EE452B978021193CF6
AFFA881D05F61DFD61C0DC8AAC5053B786A86754BB6459A240F0D6CDFF271A99
DC2FCEAFF563035832A732CC4CB16A94024D1B5C723FCEBF2730D812FD6790F2
BCFCDCBF5EE11BD47D1A7B81EC643E6CBBEB2A1657C63AD88726BBBE228675A5
536FE2C594B42858934CE7853CE0C10DE8DF50E8A6A969DE63106F04208039E6
163E7022D41F6347B541481A2EAAAFDAE8BBB5E969028774ACED73B496A4FFE3
4B02608863E039E807BAD1B9543BEA6A0C5196931E13BA9CA0D667010EAE588B
8B9EB6D0E608486C8BE9C93DDDEB71193C69E89DD14B28BF86C75C19AC980A1E
E661D50FEAED3013B91220A97B28D4E789818F8474AC8C55D0B4E7ECA25F0EFA
EC1E99CC79B25F5445158DEEF3D4123A3ADE09B98DF4129F9EB471600761DA47
A59D8664B4E4DFE6BF8F469FDEA7D64A9E45D95AB16320C0D5C8AAA643176689
A09609290449E892DF0CFA3231EB394BED4EAC60A879917AE523F10A79354AF0
D49D2F3017E3AB0023A3210C1C7785B21979E7189BD2E4BA1BAE2EAA534532EC
2138490644853E0837F2F2F9983533D4BB31855E601CAC8F4EB2F16F3946FF6E
C2A30DBC4FF9ED4A86FF05F2609073FEB687586F0FC7FFF8974699A39F0AC853
5F07BAF39825FE10E4DE876DC4ED8FE48886E42410DEFFB72C4C116BF243BC23
AD4A6D13116CE75CBD8D04C96C6FDAF2DCF1E8C041FB4B71B1418AC11E31ABD7
41550276FE30A20394EF6C7374BDA4221BC6F3EA99E2C27DE59DBA4643497F3B
6557253134E567239C3AA51EE8DD2F33C6E3FAA1D31936A7F9154E3D1A87EF4B
53CE3C6FA12011CA9FC0193B14998CF33D419E425D36BAAB07276EE8FD7143C1
D30A9BE016E3C7E1517A976F205FCF871097AB4579D189619950CEED1B60BB9B
1A283F4489A9DECDCF1B65AADB2382B7ECF59082800A88EEFD4DB4B9B2E9C8A1
43A84851F7362B23D83FD97883560FC363F572A25C776217140A6649EC0E7D13
794620125B9B7C3B1F374B993C63F2DEF9BB9E5B152E0670A54FBD7EF6E703FC
AF95B238AE514B57CBEE380799839DBD64AB15FADF84293E79E52E38B34E7BC5
DD526F99362C7693B0AF1DBDD61718B1C8FC7C116DF7018C4CF94BD75824E380
3635276B0B86C23AD40C7BECBE1C6EBB7D25F9AB35CCA1D1B08495073569C8F2
36D4A5A053ADE6807471F231D91EFFE3BAC276E30C82EC9A875CCD7A3B694DAB
6496212ADADE492CCA30BAD5736382B30F282C491C1CDA5FF1C719E5B852DBB3
EFE63D5DED53C65CCBED35CCEF65486FD60F45222EB1B7E66232A79FF82A1AB1
33FE25B74866404C381519BCEC7407A24887BE8A9417766B1C564D8CAB491D02
9721F83CC63F7BC6ADFA7A0A0919EEAB2E809AE203D34D582D945E3FA5D24E86
C0ACB8FBDA3FC739619378A7ED0326B81A2060CAA58883A21A131B23918EF93C
E8C1AA6908BFB1662F552AF33D4651B38EC6C751BFEDC792E89213A4069CE817
10487E5444A764BA9A354D08CDC3F4C56D472FCFB56196942445802BCB2B58CD
D4BCE42A0AAEDD704A2DA9D5CC4E66195151B282D96729988512722F9E96C2EA
29D53826A19DB2ECA1D620C80C218D3552EC8D88B8EFCF1623D448D8379438CC
24AB4D4857E95109895AC9F86F8255F908A2BFCCF513222501745F528D7E8A12
5F48002F795975A05E067751C69981D94EFD5105EE20AEA261048D84BDF47277
8A496C7FB522C95206750B573969008390A078C85A84003435156278FCE80216
B4E63B70B7D01ACF648CDB3153E3827BB71922BC94C81738A4315E52661D2C3A
35EA280B2B21F6CA24EAA7DF748CF90A2DB075C054E78400212EA7E49389B643
20A3EE18ECCC1706C88D08318C344432F6018E6A1313F281A618DEE34DDC0B3D
1D1D5D94641BA3BD3DB700FCB3F0CE33AE0499082DC4CE0F75A54C114A50B57A
4E3524FEE64685039686FA061B9F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/FA - Funktional)
@start /Fa 173[959 82[{}1 1328.35 /MSBM10 rf /Fb 185[723
4[830 12[553 553 4[307 46[{ enclmec ReEncodeFont }5 1106.96
/LMRoman10-Regular rf /Fc 160[909 45[606 1[606 47[{
 enclmec ReEncodeFont }3 1212.12 /LMRoman10-Regular rf
/Fd 199[470 5[470 470 49[{ enclmrm ReEncodeFont }3 885.568
/LMRoman8-Regular rf /Fe 205[406 50[{ enclmrm ReEncodeFont }1
664.176 /LMRoman6-Regular rf /Ff 135[530 120[{
 enclmmathit ReEncodeFont }1 885.568 /LMMathItalic8-Regular
rf /Fg 205[886 49[1033{ enclmmathsy ReEncodeFont }2 1328.35
/LMMathSymbols10-Regular rf /Fh 194[1012 1[361 4[650
1[650 650 650 650 650 6[506 506 40[{ enclmrm ReEncodeFont }10
1328.35 /LMRoman12-Regular rf /Fi 135[739 16[623 641
21[838 18[650 1012 361 59[{ enclmmathit ReEncodeFont }7
1328.35 /LMMathItalic12-Regular rf /Fj 3[723 5[650 123[578
686 1[939 686 723 506 513 506 1[723 650 723 1084 361
686 1[361 723 650 397 578 723 578 723 650 9[1336 1[975
1[723 2[885 3[813 4[1021 849 885 993 1[921 975 6[361
6[650 650 650 2[361 434 361 10[361 4[723 28[{ enclmec ReEncodeFont }45
1328.35 /LMRoman12-Regular rf /Fk 136[1554 1136 1196
837 849 879 1[1196 1076 1196 1793 598 1136 1[598 1[1076
1[982 2[1196 1046 17[1616 1682 2041 3[801 1682 1[1353
1412 2[1530 1625 9[1076 1076 1[1076 1076 1076 1076 1076
1076 598 717 45[{ enclmec ReEncodeFont }36 1912.83 /LMRoman12-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fk(F)-239
b(A)717 b(4.3)g(-)h(1)f(Nullstellen)e(-)j(O)-60 b(A)718
b(-)f(BIFIE)p 0 TeXcolorgray -741 4800 a Fj(1.)p 0 TeXcolorgray
651 w(Gegeb)36 b(en)433 b(ist)h(die)f(F)-108 b(unktion)433
b Fi(g)481 b Fj(mit)434 b(der)f(Gleic)-36 b(h)g(ung)432
b Fi(g)48 b Fh(\()p Fi(x)p Fh(\))368 b(=)h(2)296 b Fg(\000)34081
4277 y Ff(x)34611 3965 y Fe(2)p 34081 4491 991 45 v 34341
5259 a Fd(8)35205 4800 y Fj(.)921 7346 y(Berec)-36 b(hne)433
b(alle)h(W)-108 b(erte)434 b(v)-36 b(on)433 b Fi(x)p
Fj(,)h(f\374r)g(die)f Fi(g)48 b Fh(\()p Fi(x)p Fh(\))368
b(=)h(0)434 b Fj(gilt!)p 1 0 0 TeXcolorrgb 921 9891 a
Fi(x)1660 10090 y Fd(1)2555 9891 y Fh(=)368 b(4)p Fi(;)221
b(x)5906 10090 y Fd(2)6802 9891 y Fh(=)369 b Fg(\000)p
Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 4800 a Fc(___/1)p 1 0 0 TeXcolorrgb 48228 6792
a Fb(F)-123 b(A)369 b(4.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 13625 54804 45 v -2331 18926 a Fk(F)-239
b(A)717 b(4.3)g(-)h(2)f(F)-179 b(unktionsw)-60 b(ert)714
b(b)60 b(estimmen)716 b(-)i(O)-60 b(A)718 b(-)f(BIFIE)p
0 TeXcolorgray -741 22234 a Fj(2.)p 0 TeXcolorgray 651
w(Der)648 b(Graph)f(einer)g(P)-36 b(olynomfunktion)649
b Fi(f)790 b Fj(dritten)646 b(Grades)i(hat)f(im)h(Ursprung)f(einen)855
24226 y(W)-108 b(endepunkt)432 b(und)g(geh)-36 b(t)433
b(durc)-36 b(h)432 b(den)h(Punkt)g Fi(P)550 b Fh(=)369
b(\(1)p Fi(=)p Fh(2\))p Fj(.)921 26771 y(Gib)433 b(den)g(F)-108
b(unktionsw)-36 b(ert)433 b(an)g(der)g(Stelle)h Fi(x)369
b Fh(=)g Fg(\000)p Fh(1)434 b Fj(an!)921 31308 y Fi(f)142
b Fh(\()p Fg(\000)p Fh(1\))369 b(=)p 6149 31308 15749
34 v 1 0 0 TeXcolorrgb 921 35846 a Fi(f)142 b Fh(\()p
Fg(\000)p Fh(1\))369 b(=)g Fg(\000)p Fh(2)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 22234 a Fc(___/1)p
1 0 0 TeXcolorrgb 48228 24226 a Fb(F)-123 b(A)369 b(4.3)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
39653 54804 45 v -2331 45081 a Fk(F)-239 b(A)573 b(4.3)f(-)h(3)g
(Negativ)-60 b(e)573 b(F)-179 b(unktionsw)-60 b(erte)570
b(-)j(O)-60 b(A)573 b(-)h(Matura)e(2016/17)-2617 48103
y(-)718 b(Haupttermin)p 0 TeXcolorgray -741 51411 a Fj(3.)p
0 TeXcolorgray 651 w(Gegeb)36 b(en)376 b(ist)i(die)f(Gleic)-36
b(h)g(ung)376 b(einer)h(reellen)g(F)-108 b(unktion)376
b Fi(f)519 b Fj(mit)377 b Fi(f)142 b Fh(\()p Fi(x)p Fh(\))369
b(=)f Fi(x)37187 50929 y Fd(2)37893 51411 y Fg(\000)180
b Fi(x)g Fg(\000)g Fh(6)p Fj(.)378 b(Einen)921 53403
y(F)-108 b(unktionsw)-36 b(ert)433 b Fi(f)142 b Fh(\()p
Fi(x)p Fh(\))433 b Fj(nenn)-36 b(t)432 b(man)h(negativ,)i(w)-36
b(enn)433 b Fi(f)142 b Fh(\()p Fi(x)p Fh(\))369 b Fi(<)g
Fh(0)434 b Fj(gilt.)921 57940 y(Bestimme)g(alle)g Fi(x)369
b Fg(2)g Fa(R)p Fj(,)434 b(deren)f(F)-108 b(unktionsw)-36
b(ert)433 b Fi(f)142 b Fh(\()p Fi(x)p Fh(\))433 b Fj(negativ)h(ist.)p
1 0 0 TeXcolorrgb 921 60485 a(F)-27 b(\374r)433 b(alle)h
Fi(x)369 b Fg(2)g Fh(\()p Fg(\000)p Fh(2;)221 b(3\))435
b Fj(gilt:)f Fi(f)142 b Fh(\()p Fi(x)p Fh(\))369 b Fi(<)f
Fh(0)921 65023 y Fj(L\366sungssc)-36 b(hl\374ssel:)921
67568 y(Ein)344 b(Punkt)g(f\374r)g(die)g(ric)-36 b(h)g(tige)344
b(L\366sungsmenge.)h(Andere)e(k)-36 b(orrekte)345 b(Sc)-36
b(hreib)g(w)g(eisen)343 b(der)h(L\366-)921 69560 y(sungsmenge)364
b(o)36 b(der)363 b(eine)h(k)-36 b(orrekte)365 b(v)-36
b(erbale)364 b(o)36 b(der)364 b(gra\034sc)-36 b(he)364
b(Besc)-36 b(hreibung)363 b(der)g(L\366sungs-)921 71552
y(menge,)464 b(aus)g(der)g(klar)h(herv)-36 b(orgeh)g(t,)464
b(dass)g(die)f(Endpunkte)g Fg(\000)p Fh(2)h Fj(und)f
Fh(3)h Fj(nic)-36 b(h)g(t)464 b(inkludiert)921 73544
y(sind,)433 b(sind)h(eb)36 b(enfalls)434 b(als)g(ric)-36
b(h)g(tig)434 b(zu)f(w)-36 b(erten.)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 51411 a Fc(___/1)p
1 0 0 TeXcolorrgb 48228 53403 a Fb(F)-123 b(A)369 b(4.3)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
77277 V 0 TeXcolorgray 24746 81281 a Fj(1)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
