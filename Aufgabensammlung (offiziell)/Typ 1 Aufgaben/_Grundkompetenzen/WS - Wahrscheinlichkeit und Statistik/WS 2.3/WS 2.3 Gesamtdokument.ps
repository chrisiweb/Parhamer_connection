%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS 2.3/WS 2.3 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:51:51 2017
%%Pages: 14
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMRoman17-Regular
%%+ LMMathItalic12-Regular LMRoman8-Regular LMMathSymbols10-Regular
%%+ LMMathItalic10-Regular LMRoman10-Regular wasy10
%%+ LMMathItalic8-Regular LMMathExtension10-Regular LMRoman12-Italic
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS 2.3/WS 2.3 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0851
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMRoman12-Italic
%!PS-AdobeFont-1.0: LMRoman12-Italic 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Italic known{/LMRoman12-Italic findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Italic)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Italic def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-449 -289 1358 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD115081973393AA2048ECC
1B38C1B45AAF909E1D0187A0DC16F505BC42B5C6AC12168C73DFF1878FBDDFF9
5CE859CBF7A88E342F565C04C06D9DEE65C66C505D6B44F028A7659B7B18EBC9
AF12D18FB2C70E54D7C524923386E488A5781001B47276F3CCB8173466544141
F99FD85B6BCEAD8A7E1294BA184AC78C372F2F08D8C26E0D96C407EA8F1F5A28
509753BFA423684568D7C86E4655ED88226911F0DBC9B8DF79A35791C4A85AC3
E8EB007E7AA56FA62680DBEEF9E2A976C9F5A863FFD9334B04B4E297D672402F
7CDD0A80AF1403FCC0BF0C5B8BC58BA6669717265C300F0E5EC871A0896CF482
691E8AC48D1CF9C06AF63CD3C7B0AD16E4A0EF76559A251DC81E06549C9903F4
E755C2E6BAFEF9F3FCE61B6426C9C0AF1196BD504C1C2D8C735C0B1E6267C57E
93AA51E6414CE90A92DAC96F8694EA081AABCFCECB0665CBA6B56524CD5CCEB2
B5DA0717E989F874329D4C73CE852FAB8655DC1B57FCD0742B35D37C3377912E
A7FFBFFA9977C6B45233E203C745C84ACEAB8BEEC1A8C5E2B5FAD52657395DCD
3471FAD4C2A70F0F31C29BFBE131D671AA20209028882857976D4515E730CB30
4A404BE6BB5947361A0664A8BF8B33C6456686A1A4F59FA091122433AD0EDA97
E83CD285BF2D96805461215F4A5CCA6B378B9C2B93CB71E36835A8AC3FE2601C
D2B1370B82A4668FF8C1FDD66C5B526E0890BF226625457059659ED51CAB74F5
5FA7945797237B1656BA0B7B7F533F360894FAFD189B50A1CEC76E8E8974788C
239B91EBE8AEF647688A1CA66C7D5D7C0D055BD5DD5A0BA92842730DFD09DE92
3358806250590FF35564FF90E9DF85FB4B082B7806E3E941AFFA6336D4F9BDAF
124193F6E8396008E5BD04F19BB4EE30FD4A80DBE4DF9EEEADCC816B3C84FE39
07EB828519DE800A9C2CBAAE3E98D910EC76A44AB8AFD6B95D1B72B8B21490FF
528777AD3BAB19ADC5105684FD87B37B67B29AA6628DE75A69A3F38EDF33CC72
BA1C6A089FADA9A92F60CC2FD61EADF93891FC191896A5EAD415224F7E256A4E
A02D876FB0B68E723AFD17D0DF08550F90FEF1751E7E403F5F111E5712BF3AB2
51EB9FD654EF748846E38E374DE01977C142E0ED10318333382EA7FD01EB2A59
D9EE46F33362E4C2487FBD9CD96837286EBB53EFC8AF3FC1FFD3D1EF05061D80
B5E3C87AC8A76D16591A3380A49D57886D7F7BAD9BBD84F73FA38EAC51CFBB62
DEF89CE32FC2649522985C27941C58E4F50B9C2CB497E519444446F0E2F2A2CF
F9963C615AAD69907EA4205A0BC3435596988D1C67406AD33743D1E984DE8C3D
F484971F00990B88E1931C59D868369DB620A30ECD347E1717AA5D4CB03B26C4
A34300BFEE6E72FD1AC6CF819110E6FEDED3E62A92EF184C7B979C4E20450603
8E76EC13C6264E69B55D1971CD164A032BAC23C2866945E46981F9406B6E4F61
160966AA3E2B029EA8A7323F271A6643341F7720B16123685CC289FC0EFC552C
5FC511935D0402CEA398F99BBC58873131733D7FFFE2E60835E8E570EE206034
708F56EAB17C698F2052A9C6410435FF3D114F67EACD436BEF9EBFF0D3BDE9B4
FB0A540610BDB59FC4EFF8586DAA59BD102BAAFEAF854C1B48B036052A3D727C
050B93AC55B87A0E337A5DA9985EF7DBF5E1072D4D4BCADF078CDF0EDB3A2C78
66C977678C571CCC9FFFBCC76D0895C7BCA510FE3F3DA02EC5384C4E5058FECC
591ACA24662FF0B6783E357BF2DB29034B3007E7EE680C5EBF4434464C47F8DF
4DB69281479EF18DA2237CD4F3A26C1458B3F69670B72A5D4C1CD5D8613BBE22
737F3AB7AA70C37462134CBA469EFF52B99E6C1F4DE95E59DCF7E38BF93A153B
0082245B574C006312B1A0A1DCE0E4AA6C193AEA970F45D01EFCFBBD18095B62
AD860BE59DD9C26FA72639FB421C3457FDC09D3ADD6AE6CC86E8B493367C1BAB
3BC0C3405741CAD56CC6A606BF71A39EF59C9E976C5F562F31C628021C652ACF
A5745D606BBE742DCDC69705BE94A449C5EB8D42E88443AFB83F96DECD5E0B32
C5EA329CB342002792FADC15213545D7EB212CD29841E176122E3D1E147F1276
12C7EF5F32A8A3C6A4E7C3BC8F04EF6C58A10CF8D6B0D502750247BB25006F46
6250647F37A36A4911B97E5F975D12379864A4CC14D3103C4994E6CA97B1D789
3DF52D57BD6C1A6B744024CFC65AAF32058BE46AD9FA0D3E24F2FDCF57193CCA
AA36A4B774280AE1D3230BB98D2190912BBD038F21047D0019EC24C1496E1DE7
71B3FFD092BB48934353CA645CF41F7B2EDCE9FF9F84EEAD17B366D678E61C61
76FEC09C94A3784C817AB37CB52D23205066E2D80EF7C7866BAFF6B23D88EB36
BC2E699A11EC1AE28E0E6F2B383713FFE2B13A67B51AE8B12E5BFEFDE5D92BE7
BC5EC381B6B05335F5E9BDD8C3A4A82C2E598302E5493842F0A080F6AF3A9121
D8EF4BCFCC80EC71F78908BDA227422F8A56C95877234F9FD6BB97B3AB5C0F27
DBD4DD8DC2FB1BFE35F67D7A5B693EFE15A466950C44AE2D4F9D99F833D72AE0
88F54DC0BDD441EA5EB5A1FB810A2926A27D510E69512B9C70C2434513CE55BA
9EEA1BEA15C5C24ED9F31705A32503BE7225981770457FD937871241EF7A195D
4747C9FFDD581537610B95B188999EB5F2F53D263ADE076A5DDB61CB18C2C4F9
1CB227C6E44CEC46B305D67E5C253CDB908754242EC4D9CF4E75722C9F37E4C9
B4E010E3CA56EAA8868DB6F226C6E56BA3356F66D123C08884E9D27DC1FFFC23
D36AE111FFA48845C0A7FF2E0CC929CDF9447D83A7167F3FF009AF8CAC686052
7DBD2B62750C163DCCC99F21237117AD4B234438CDCA4A7E25421A64637FC8F0
AF83863CDCACA331175F46778C3202D3D4F36FEC1AB9B1973A7DD95352BF1532
EB87DC7346FD25DA53A3BBB299CFBC46A80CD1D1820D329A68E9056D5FA94871
56FED518164901F83DF3BAA6A0ED3E1145BF178CBD4637DA34744818D2364CC6
932DF0E2362CCDF28E5A9D054A1B2BED399E780DB66D502014608F6D49CC34F4
A6767064EA4E5F469E48F5AD2885076AFE1635CD9ACC3C44B5755DD9071DAE1E
651ED94B4CDB4FAAA1AE95682AB3BD762EB1D2F722477ED3C9E8221F88E54918
1454004F18A348FDA4446E35C019B5DEA938B851ACF798EB6086D99D6AD77CA6
4AA2EDC679AF04FE139D653820FB3EEA998267FB51CF42EEAD7BB5AFA236AB35
C6DCBFA1165F47F8F52B0787EB4B70B9C8A6D5E61B5B11D5B16C646BFD7EA160
518EC3FAA454407E1B8A7520C2C08F8CE3CEDE80F4C4C0838B8D797205EDA240
63103B89A932C946455256DE821247F764D8435543A6A69628B40736B1AAFBAD
A2DE6F39CD599135BBDD2D6A67F05C3FD7CF64D8F619AE619F5CF7C0B1DE078D
A0D6C0E48F1D065844515CC08B55C960DAC383D2278C7302A34A4F508E05E8C9
08C46B93419B93876B1AA19E70A1D92D48565DB08347E934C223F5A1504F2CB4
5644E610A3C02D768058BA2B97ED67821A10F50F406270CF873290E99A3BD506
A8578376F7816D6F4CD48A5197F98F35341EA3A752FBF80C009DA521C0399993
9FFC6CC50503BB871565797EC537E267EBBD1DDB3F3EDC5FA135479FC9FA2409
826AABDB6DEB72774923AC44C82D135453BD56678689754F0DF84269D869E5D4
0EB344E5D2C11E525F08CF4752ED284A1719539A584A375CC8B9C4FDF77D3016
80CB83F3BAE0A70B1DBD9977A5F4C77183F4CF9B18D3648CEBFBE395E68FC891
329882A2639575674B2A47C068AB093F74813A6BAA4F7CF2CC57A84CFBA77156
ECFCF83454E56C56A2CB0297E6C99E604FFF638C9DB5F9EBE90F1628BFF1109D
A71D85A35F40871DD6EDDB2FE95037EB3E37FC4FCE8F9492E884E432F5332C61
62371112A5529FB7CDE3A1A0DB98D05D8301FEC82EBCDC7D7A02A6CC5310ECA2
4348652BF62276DFED27FA18C1B3075EDD207C35BC17DA8E255C9216E000486D
0F3FDAD463346259844571401A131E488A004961B9D77108922CB750BE2E146E
CBDD16A1584F3EA2AB3D9A37849E283446B177BFFBD9B94C2C008FF74A20138B
EB2D0CD90BB842436D3B6DB6ED212E9BFFEDA7D3958C62CD9A5A77E01F15B23E
59C215E93A3F5018417C37FFED36B01A47F0153A926B6C6555E5389B6B68AD39
1C6A3F722B2F6C2CCB02A2A87D3D4B8954D01DDC88746908EDB625B9FC645E4B
F39E04FAEE6653798941795B253A86C73164C0B29E831F83AD94729DE9FEDEFD
6748EABD96D9FEC55051D7462136CC3306C5A6A7F2921367D2498DA3D214AE27
5931A442EE4CA0E11E8CC506066BDFE472196A930F7E527E0DF66BF48E8925C6
55C7B21A81B9FB4493377D6B952CE51F20739BC4C5106C4527DE148B31E0F553
FE1D46181A8FFFC3C6838AC1204F34A6A16569177D6B1C7CE23DA29D37E9CD14
A077B05AC1D894BDEC87BB96D4ECB175F244176BFD7625B80223C231FE14896C
C19E2DB362DE5117E6B39EC952DF96091851A33211F931022D46BB1341EE9019
40795D0F15DE5A23420BC6DB59314AE0FB32814C0BAC128B7D4D61C2AA87093F
0D9188350856B1FF3C410855F5593D1424A27B7482D2EF601673E5E859A11D4C
8C48D36D325BD229AC91336E40475264897D439788CDDCAEADEDEAE8FD8460B5
BB21912F2881FA51334A720C96C7B9CA647E44F7C808B103D657353EB568DBB2
2BA54AA1B3BE277E804C6BA17F299172AC3A4A3FC57E0F08DEF0F19151DEB13B
BE9608B43085D30037728FA95D99D376580FE5BFE1A7FCCE35DAA893E5CB7EAF
FF53372A5AA48B228CF68EE0032B1968EB88119A375D4FBDA133B5C6494E5E3B
14FA09EF6982B1220A197516A442C30D604833511E78B3DF0FF25780A142C31E
0E387E163212BD3509108B61ED33B18A73A04B5F96F94EB6DF60F5B1DEBF5A23
0721E51750128367A0AA72945C949102B7782BAB3FB8BDCE2FE2BE9B7DC14AC2
FE27CC1195254992045C0A486BB5871AD692296D2D69F6CF1E9FE72EB745E6D3
6223AB972791081FE59397EF9D69415C6994D48E7284386F6082C2362E4CCF3E
66ECC33C744624C14BF0E29C015F68BEA5EEA4CBD597C0C8AB77CF9CCD9105AA
6824BD46D237D5AA012269135E586D85A70DDE32B3521787F7A76DD68F7E5D64
0C87FFA05C0EA432E2C0E641ECC847467858898AD528633F477B739EAAF078FA
56B039D2D408B56CE03452944AEF2FCBF65E4BF33D7C43C7EFE3A8D63D2276C4
236933CA08C51C6CFF8FADA08AEA67970A39F150893C460EDABD875702C05640
E905826A2397BA520E686CAE8E9320DEF5363899F97A900FDF659BC38E6DA6E5
87C23E70241F9C323674E061FD55AB355013374B68132A30576D4DBD04EAC244
CAD6F9B9B87060EF0AC15FAD60D0F0903E76F0FA3A2CCFA0D4F8AF213E0A0CBB
C22A3CDE0856BD8640D2B9B1844E03A53BAE53445277C899FE86E54B8BDB1490
AC76FF84E0DB1B76F31FE8955F98B6EB4F83AD59AAFFCECC01B36F97FF9682F6
87343EF61149DC3BF556A632D10F0E070A5820B7C261CCEA2B02606837B57B4F
38BF32513D5EA4E27D946387E6DF677C977AB426EB6CF686087DE12B3D6080DB
90BA9AC4B9EAD70DAEAA43C5D1F96A5ADDE484DD63BA31F96DBD7DAFDE8ACA84
4DD34A2EC1F5C5C777FAEF9AFE2D1C610195FA32E61F5D12E43E43F6E03946F6
1E9135C70CD0214CF04A4EC5AD120D492F25CD6E1E8C9AD62B49EF8453EABC20
64828A2254F5568A8D9E0D617268F63AF0978DDF59311FBD5C2A43529A894801
EF317BFA201302382872B3C31E86FACB377A74258F2A8CFD319BCEF75CA4EB31
7A628F42F7EFAF5804FF385897835258981A89D3EA8E8A31F4257A299412A33A
F840C8C40110366C69BDF65F2F5EE2960AB55CE2D7045755C022F8F2A02E9CC0
7DD3427E7C5701857ABA8BE5C437E8C86BD8109410CF70CAA48DF1BDABC847D2
8F5BF1303D664BA2367CFE68C115B14C8530341AF1B995358D96E6FF4001A36A
4919F8971B4A9769B9EEE6880CA5001CA884C3EBCDAEC3577D0BD5C1B55CE306
32E78550D488096276D65901992D2DA425624BBAA3EACB09F5D5F1F5D5A5A7C7
2F066750020BDBE81D3CEA0A21B9400491F71268A43865A82AC8B53667EFA5A9
D2B7FF360764625FDC580CF571AB5262BB598582982FE4F2AA33BEE0B0C56210
AB1F215AE7F132D2DF1A81C0A47BB59C3CB6B4FBC4E80FD28FBA54A455899A71
BFFBC96D2794948C6611D567EECE1E42FEFEDDA0078E7789333EB7C847754711
D99A68E296DD3E74E0DF56E079235A8B3F5F2B13C8343C21E274982FC4533EEA
16716151F6E7C12C8C828512307217D2A233C37004085BA3AEE379269F99868B
A34A56AF169E5CFBC94507E6D97A1CDD7F732ABDC4DE8404F8ED72CF2BFCD6BF
52FAABE5F2F227A0254CE9EF069977E88971C070FBAE2C25A7104589EF388604
FF194FD049F28B82F4C2D73E41CC73C1C9F668931A2BA07F13C35538CE86CD9B
B2321C5698B48F381A17E0154AFEA5D9EA2F610ADB9AE7757B2307A1BB9D6797
D9FF88CE6444A7951CD669008776A1720790B0B6722BE6365BCEBE40A55B3DA6
DDBDD8E8C6011903736F02F048D78D92AA2E5B0B2D36B70B46A1469509A5FE89
68FE5E6CA8331AE204F3A450A0165F894AD136561BF06769FD38F1A83F13A0A3
8DCA8F99A217EA2C8E331E185FF990543E925269B08B19376CE9DDF854810CAE
C564B8FD0FA7811DECA223B4FB7B82B0FE9A4F5710BCE38063798F7DFCA94124
AB59C582B6B602676E3667F6BF1261BF5F1A526671F04ADD10C478B7F8D9A562
487A9FAD8D2C75C65D2E72E76448B6CE2AAB25ADB6B6B2AFF57F0B294EAA4BB0
8CEE0ECA2F070C601E09DA0B9690C4E3D619F505EE817D05A4BD642DFAD8B91B
F0B9EDAC698863266ADA61F04607DC96A66E8520A4BAB58141A8AE9C4E28C5CD
9FF3BF085280F99595AF84F04D6ED4CE866E938837CCDF87D3DC9D80E7BC03A0
FAFA64A7C5FED819BEB1A918775230611A6A981DB0C6D6509CBD4D31E445F889
CB2991D53039A1BFEA1C40DC1AEA90C0959232198D1F4ADC7BF66FAB78AEA057
C18ACF58136C94A428B207C28518A4EB3CC5D4AB76A783FC932723E24E36EC2F
580415E263AA21BF3EAF74920BAFB89889071729076D7550215A9E4CA6132AC0
3A25067F45B16521AD0199BF61E02BE3EAE423C12758D23E791F163DD2224EC5
DE80A58567BCF147F6F06D080D7BBABCC56B4CC24011214CB26E1D8C4FEC2B99
49EDF0284D9893D32EC0B93813D97A5A5E02579B88596E341CB47F5382316B75
38794D9D414DB465784B30B38F39870841FDD91E749CCFEDF6E48B9AB08FCE77
FB49FA8CB2158D398E7ECCF381570E909DB616624B47CF2D2D4CE22B0906EDED
FF4C82E4BE80BF12507613DD5FA510103907A862F32DF8C8C68DC21E9B1193A8
3FA104AD7FD9740B7AC100E9798B7ABAF18A032BF9D944BB60FDED9F15B9AF5E
9848DEDDC01FC0C7373FFFA041313F028FA5561BF3C61D8C26750C25145F28E1
C06DB3AF07877AAEB0669C639F3AF14DEE58C4A06A55CCFEE4E47672A9B655E6
F40ABD9D36B7601F7A9C3DEA9839D2BFFFC6021E72C812F86E89DFF67BBD32BA
1C91A4181A463381BFE05F7C56735AFD05703A504055392E16CC0C538B9F4747
E6F2B5C0B3B4F93FAC620D85C2B4C0C6AABE00E69228A24DCBE60549FF8711FF
DC5EEEAC661EE24FBE97E5CE3B9EB4982D9699B985E74EF5705ADB75808BCB80
F018C2355EE9A2083BAF7525B2C522222D754E042F2397475DD29271F10BB7A9
CB67C737D1D462548EF6AED2368580A43CD8AD443641A4E522C28E0B19854406
742FDCB40E3774E27E8CD5FA51BEB5AF2C894094DA76A678BCD15FBB286B6CBD
346E370A9B5D3957D24C18CEA4C121F4BB6AF75FECE9CD47F6378E26543F15A5
167F4B7D0A7D1092175F1A7D38176C22C2737A810763CF24B63EDA4CAFB3DAE3
C39B1E9D5222A83F9E39E4E85B4D7E2F99BE60A97A6494F32B015FA31EB5B9C9
3A2D1B483B241B521AF12E948905E2D850264CDA6F9D668A41D5CE97383E1EAF
E91AAAAF64CDC560B25747F8081AE09D9175DAF5E6925BB12934CF6AB3027BE2
4FBCCB211D131A8FF8BCA475493BA59741E6BEC797062CE93592AD6AEC0BAB21
C5A1A1535A77DED828F6F9B88DCE0F8B10E1C87C5244F87BA90F7624B0DF2A35
D8A923DC84979146B7BB103C6C3610E30E86181B0719B509CA9DB555273A67E5
7B4C8FD20DC5D0C4C2FE2ED123319B54F71F5421E5BC7F229B38A32C33C2818E
0FB922E6C097236F55AF6FBCD9AF0E167742D0BD0E131BED5E3B54190E9D9096
71965AC8849B3B885B7DAA70ADDF6860EA02B5B00C9278BB0428971C547ED384
708B256C363609DDBE76A99A79FD940F8D34A7EC868224C35CF1F815371C697E
365B87F9006B0F52A90B17C931E59317F7CC39067F06DA9692C04446C44D2BC6
6E9D72601D1893BF35D68A4CE90844AB7A275658A3CFE750D6BDAA39DF94938E
71C6B562B702B85A3D4741DB45457D4AE23FAD62666CBEA39EDE1971FCC8C39F
E3ED2224864A774B4D1B088A5068EB7316880AECCBFE8F4E64F7932C89CBAA3F
01A38780E5BBC7DB80BDB4826950643DD1E0C7F8DA6C87DC26306137E5A49740
52F61AB50F30D846DE8303780660C9BC03FEE34A4526A219613D4AA67F30CE16
25F8821183411E7E74CED46D5E8804610C6721E3B51D620079FAED064DC3F745
3CA880E2909CDDF16A1FB71C1471F49B6ACFEC8416D09AD6F6CB0C525253D8DA
7F19BEA9428717C42C109976B2BF68025EF7E6CEDACAC99B85088C5EC5C2084B
F363E3E58055217A07CB71C742BAAAA9935AB711DE647B70142BD60B7E1633F3
6B0D94CB7766E8A5AAA2CEDFA0BBED7F169BA850A0967F2B7E3D1903EF47888C
851EEDE902EC78D0CDE34C17B45A78C317A5CFCFFBC12D77E4B474E3228A167C
A1AB5B8F4FBC83624E4761932709C8463EC4F0FEB55D6928FDE7C9307B741BF7
450F62966BB150A052786A00AB80FBFA20D184CDE782365A3AE8AB0835799061
3A3A27D871CBA0D447424D6E064F5F372CB9A49440606F5502BE9360BF7E1FFC
16B22A9E2C9968556D262F079891A604F0B184015AB1BC3C006CAD636D6AD25B
03A44356B755808798B648EF2E5A7F38F01298636F8E1A427D4C5C87B0405EAB
D1DD34C94719878B9D613AF0C9401D348B216B67B0552D00C4D3114908981F51
AC4E66A3F8212A2A6EAACD7DA7010ADED0D6A83F04F396CE83F0549B1700AEFC
5579B8123C43E8AC022D2F38D2C47100AFC2ED5927DF6EC29E90C08D7617119B
DC68150065FDEA0DD6DC309FAD7B43340ABCF99AC4B3D233B4A8C7C5D831CFCD
29C31F9E8C66735C59EA38E3BCACCC6F85A6E454C0F4251CB83AC5FF4ADCA84F
F6594D3A339B1435E29FCA3A634E3BF6070DADA68DD529E4249050E74F451CD5
25B20BC41CC665FE949A30F08F9AF511467B1A6AE68CA4C241D92044802FE890
C72C7FAD73855C03D17DBEF687D13727EDC3ECCAE0B037CF2BA57709FF428D5A
71814FEBF85ADC9C7DE771A4713A9F83DCB3B677643CC367A9BFD03F276D125C
D704131FEF192FAF03635FB8F5C935080162C7243E8C07348E83EA0A5B4863DE
AE556380711229DB52BF3B19C89CC3DE3653EFC6DA08BEA179E80FF7F456A75E
140DE04E237D690ED7A97EEE66BC28B9DEAD2A7B39EAD4D4A4E4553CA0A59284
880F4572C145AF82C8EDF426DFF6B247F429B3331033E4F074D29DF85080F069
561019E04A19761F766E32E5C129BFF10F485B8221483C2AD47B0ACA1BF13A3D
6DC6DBAB0E92E04D40855719C445F35657776F052E2F66AAE501E8FCC6A13918
AED05BD347D7AEEF36259E6074E7DEC5EA387A13E9CC2F98596A9D4323993E22
C90B897EE066BC9CA9D19F26E321929714A3E747987653B1446336792DF156A4
7DC3CA67E49CF0184E6CDB3607EACEFF1DE07D73EEB5F05D58929E13ED2F3E64
EF0F1071EF4824B2E079D69F644268C95EBB206F5186A807B3F6A96281564D7E
CA715416818D99B6F3E211E760F8C31A12F21A8962CC709405F9CB853EDF0D22
CDBB0F12E75F746021779CA07782DF864C97582A155AB9928B3E0676CC131BBB
42EEBA080EA1123723667CAA346973A0F5066F1FE1971379E1731330531CAA84
1028DCD2ACA3094563790CC22C49190576EA108C7F3EAF8CFEF5EC4192EE600E
7A0CE5642E30D754FF066474763370EECC9E1E60195986EB4C4BCB3A6E3BDF1A
C353054E1A5ECE2091A0D84BBEFB83CF33D9C45147C3C8E3883CADD8A692B1EC
D320B1C52F28ABC900E95EFF0B37119E70BDD9B6699F959DF87D3E72A31CCA82
DEDFE758002A88DDA3A0B26013D783352D5918B2F7EBAD263A04A4FC168A4127
FC44662B6DB3B1D8F3FD1DBEA7970A9EE1A7DD0211EFB19AE7C52875EA9B121A
CF910B96D2AD81F81FF86644AE56F46394BBC5EEFC27FF3ACD21F243158055E6
8B8D678CD170BCE223ED36FF8CC3E42D8E8845C443511EB56EB9BC5E52B6449E
B74993A5661E522D3D2DA67DB995F34B1BCFEC1DCCFD2D09E0FB156E5CF9C491
EFBF977B6A9C723DA6D919778ADC75551219DD9964B1A54F74CCCD9FDB4F6F19
8C96E9C6D68F7223965A707A37B076797BE61B0803DE1A88E9B30AE93A469326
883DFB3EB9B157C4EEFE7B4C2CAE49184B8385124758A2CCBA6604E8F72BF231
6D9271847C8D77501F4D84943CC2883C98DA8B112A75AB907C4F917EBCF1AEE9
D2A6EC2B2AF1D74131FCDEADADBF729A027453EC20A9D8AED089AF77F0C5D896
228A3AF8A9632C362CB60D4FEADC846E80E90B0115532DBE216FF5DF7F364E69
DEA53837CF42F98ECC48772B99FBBA9D68F365A2E2926255FD030246AC687884
A3547DA00438951DDFA5971B7E7717A11CC251BE93DADCC5FF31D71DA9FE860B
7688422B0051C282B4B49CAE5BEF89C4830CF8E3066F7C501911715F16FD79F3
4C2B0C99F08A14AC86DDA19FC61DC0B686ACA441E316ED0CB3CCB6ECBBD05FB8
255E729CB482A3C065CE71C64A50CEB925808E57CB966B7BE828E065F785A518
971A3B51EA08C6894F0E5A7F35EDC48F8E2A06C327B57108030856E5E8BD7F43
9982F0286745F4BBCE60EECEEB2B7B9B392B5E0ACA15C2FF59E42EF445F348D1
9317A058A4FCC154CEEC13E60A53ED4E999A5E53D1C1C1E4306F83CA58D52A36
9E8E8645AC72CE886ED8DDCA3FA90B6F29584276080FFA7C50C69E766B27BE09
B08E81DF6B3760804355C42C09B189071BD36859C631D949F479F70FAE3BF5B4
9D46F56716257E5D834E71F784E414C6FFEC6BFBC9DEAEC29BD64AD6B948B276
AF2E9F5DA73BDCA9850067AC35F9D09D0038823CCD5C03311D4CDE4C28C40E1F
FB7A9EAAD0E7C90197B92EEF42B5D80546298851F76DB2C56E116A4040CD614F
18EAAE4F0AEB57E8D40B40C0D6206DF1B2B7701C20E811C28DF8DF3F8C21D9CC
04E187BE53F8FED4F33633BA03A4846A47721CA641EF5203F3FFC1C5D67EE73F
5B8935EB666C138D0BE636CDDE883E1CB4ADF94B4DFFE102DB0B094B4541BD0A
30AC10E0ED4A588B743FC5E5088E2275B11713CCEB7B316717EE859D7C2DA83F
003A14195492A540B4F0D4BDE28886E9CC715784C7BF7F0AF6DB24372F042015
D3A8B5EA02CD10C45038FC6C4E8FA08109DC2C3D0F0D71A852A8308056778818
D55E0771E6270A44D0B674864CDCAAC830DD6D2B2353019C8CBCEF3798271505
43E025D14171FA920BEDF8462A59235F808BFBFB467CE4D394658B9062D5824C
3AF67D0CCE1A4F498B58908A4CBB728B11CF5D824D9BB84846D75651244286A5
93A87E5E21F91A0181155AAE4A63F71D9E321AC3767A963765363DE21EF673A9
FD8F1F6D3906315A09B88C3AC010F8EEC6DD70330233ABD897D783B88E22074A
F33E5397E2E4C0A29284FD2C9A8740851EDC442490FAE838CDE54E486126604B
B3082C40A65639E91B97483486C378AED23DEBD7FC535C46F77718A6955F9C81
401F72107C84A8CA7C0098265EDD8DCFAA7F25EC0DDF6B8AF6C169C7F43A3127
6A3946D95444CFF436EF0E377B7845989AA23CF1DDD1138FCD3D8133FF476197
F30B005D700059F5212EDE3106862F54A3D148BD88425747EBD84BF50C1FA084
DC5DEAF638C0B24087CD6504E6961B63F20DAD6E0176F8C33FEC0D845F72BE91
48067BB63A9677148FE34666351FB5B0F41859AD6088A3E1CD3804FCF1A9F951
74C96A7C7E77FBFB92183A182F9A56C4A9F408600E0DB9EA544860D688E9CDF2
5E98769FDA84FA98DAA5516EABE93581FEE0B3C455B0D5B1F30EC46FE8971B87
F581E457FC565E44F8F0808F26A82E25AD6B4176B3BD99BB591EB9678EBB5A67
6561BF61FABAB8309AE123A7F4A06EFF5490E5C45D2E2FF381528AE3E23D3234
72F26F74BA337E6AEACC7FEB7F64CEBCCEC52EAA2364B7C7585EC6F70B3279B4
A748A64AC0801C8A2BFC379A48A1141BE9808BC121551BD26F4ECFA13415BA19
B37938E77C03C11A91ACB087542F94750DC53232E62ACC3C66096C417B53759A
53B327A58590CF7C5C68F35EBD3814498EF2B3177C55E3ED89E370A620C414D7
29AB077D7C9DEFB6C0EFE8807EC46C97979DD115601E72FD549E4EB131649ACD
0120F4830EFED86917C5CEFF9ADFD18C0FEB6EB1132E2F1C61F31242729A9EBE
877B546996C652001D93F3BFFB1E8E849F75D79A0C7E90882BFDDE098D69A667
FBDF1A183AB1941874DBB0AB81350F9F2283A52BB2F58343B0E8DC830511BACB
7F2255206DC7521711D3554BEAD39029814C8BCE19DE1D6EAFE04776A6E23868
90DCB494A11BF22CCBCFF847519FDD0233939F289D74ACC731156E0315F30664
3F0BFF06EB0DA016066AFD375751E8625F0C33AD77066F26F8DE15FA59678998
E81DF757F9851F31B92C54DD21C9DC3DFF06F3966DF7A5CE818F1DECA223B4FB
7B82B0FE9A4F5710BCE38063798D9D69F4E90EE833DFE14BBA53523C51904867
D723EBAE856AEAB72407B03DB1D677859BE22829180DC4FEE2F4EB18D8E4CE08
C3953F99A361F8B5590BA9286987A49E5FFC86F0213F6D2790D9F623C8375396
3CA85E894401A4F1862F2CAE2F8B6A8DB26A1287AB3DD941A92AC57D9D773359
0D735BED02CFE7240C5A2A31CDF0EB03E3EE18C8ED6A86AAD4BA6096F6E76B47
FB3B37634F7C143F64D87A4051F9985A4C77BD0AEBAC90BB3BF0C993A4670770
D4FC672CD10024F331FE72D5006B5CB38C7A634F07C01437D6B136DFE42B1456
26CDD287909F4E902B11CE40C40D188F4E304C4610FA7CCCF0512FDD24CB36B5
30F20F49386923766B1A50FDEBAB3E430D884A85F7665CFB2F806B4B2B893474
B1EC58FB7FF98F306B78786F75BA7EAFA03CDB8E0BEC8AA613751752FCAD7FAF
84983CE81C81A28ED7C459E375FDB205B8CE97B2E416A8809BC1386D138DFEAD
35BC2E9C405F7326C944D0BC2AC6BB0DBA36297AAE4CA32E601B41F9CBFD4336
D16C2F710030A169B81E706104300D19993CC0D90D2BE83169D4F8802DDA22DA
465986E17D04696548393512567DFE2EACC581C7A0C11451CCEEEE8D687DFEF8
9A24B00F079E1543958D79AD6DFC8C619CE8FE1EEE3B9FE2203DC6C75B216E23
574EFD751A6B7C9AFE6196B3E2024B31F85CCFD95DDC6EBA399743D35021FDF6
A848FF71AC4935E79D3246BD6B280866A0E6E912344837868A257173ED0D30EA
B640751416C9EB562F65C3DB7A4AB69D26B5BF8D90B7D7D6037A698BEC695D0E
254EE44384CDBF724CDF871B3889ADE7F897DF81CCB6AE7B126C45B8FB860925
BE5C615F9E8E46AE9BC294D1647DAF9233EC198B785F96E667CE80A39E4CBD88
4D4994A7EC9407F5280FE5690CC1E6259C24C60220CFB93E1367D1B8263172C1
33FF30D6D9255A2B60667E25B40CE5F8CFB9AF2BCA1DAD558C1E706972F2E01C
4AF65B426D4B1DF2631BD3D20775C5BAD3ED5813BE0FDD6D704EBF12819DB3A7
90D521A76E044B253D31DE5E0367B7006F757508FCB5D653DAD14A83E49A7CEA
26ACFEF57ACC243EC74C5DAC762566AC99516E722F352CA74B5DAFA70C389BA8
798B3CB383E4249CA75D60CB5607F9E5696F13AF91E4D7C41B245C81CE226D6D
C3F3561B1CA13FDB336BD4F041E9FE46C75BA73CAC558D349627FF4BC3D66638
90400C2F5BC1E1A1E73A7FFC5060A568184DF72CCD4FD69BE2E638D1B9CA0465
24F27502F7987D3B29988CF128FC9E8B6F106E667F9C32D13DC3B85996903297
03066C2239A18F39540F3B91DE9A73CCA15E5A7A95BCA7166DFBB61BC0923B6B
653D9901453D676BFB63735B05E0FA606348288CB8E6058DDFF6FF44DE8B99D6
205FECE23D72A9F61619E09C929D78A69086B2FF0BBA147BFF00785663883D25
8292F85DA49DDD4F132248742876953526D119551A8B29CCFE9D9A03DD64E086
0EBB61481E868CB90046AAADBB3A47A96DABDF6C1724878BFF7A7084B0859FD5
C0D0E719A41997294D4F92B73D7AE87B13F108F2C4611CD948F30F5263D7CD79
A5DF50A35A7075E0A73A9EC77B59540B407C97E60DC14F1F22085EA743F9C985
87768C2816E4F17A5075F9987CDE0CDC2FDD22CD6B398AA196174713017283E5
AAAD8CFB0AA1C09FEB38743101FBC9959A0017FEE406D14E27155FCAA8366DB0
8701092595D44011BB490DAD9381F5E959095F3F1EB907D1413F647D905576F6
26D3B7D13C8F1577E599E5C7CBD0FA7384BB45DC7B170EF34BFA604C5A93CA60
A8C5C4A5AACDB6EF5562BF5E30ECFE85CEF7B9E5F653AD3FD76A70C5B35A2390
E5D2201B619E491372A1D7E5671D7D483AFA04B3E76E22CE1111807D06434687
FE13EA3C02F9DC6DFC201FE269C57FE22098E130FC9EC2ACB05B8F7F517BDF4F
3414C625D06A33F7AC4435D31FBC2C8ADD9DCBFF350BE438066C8E36A5E70ACD
844E3367DE4DB71312CBB85ADD21D5A3509384BEB5BB38161FD1EAE077110A3A
AF7CFC57483287706E6171529E0E1972EBF20BA99B973D833C0135369153CBDB
FEED7D4FA7FBA53D05B1E203A0A2127751ED18245FC498CC9E2C9F57EF881D47
8600C807DDC7F0A6DACD6DB57706DA244B8DFDC8661514CDE029EAA738F714A8
27C9A1EEEAE3890F6E58D8C19D6F90AFD127A50AC181602D962D745036951CBE
2F48745501CFAA4364C8E4B0ADF796555F5D7A0EFD90C7CDF19E831961AECF13
CC6E032DDD1B9BD9DE5D89AD98207F2426CE0CBC97FCC22002713C1FDB9EDAD6
982CF55BC7DC06B034D0EF5C55F1BA4874517A1DA067436CEDBF502C4013C1C4
FB9D8878E62FE21E860D87F717B64823D752D183A03114280FA44F1F0035F01F
710F91F1E0E49E70FE25FE7FBB8089262C78281DD6B46CDFB5424CAD9B2753E3
A579E4465BA988D9CE33AE1F7FA543F7003150A9821273E36331F1F1A4A85661
E18ADF577A7AF35D41A333B6E59942933F61169E9E7AB8A1ACCA1756D2D72F0D
4A81042FCDF13B365D566003B04D0603504C04951290F43BA455DEF166442E9D
77EACBBE3D271C3DD27C28F754521E715BEE647B6F5B01CD5715C6432452ECEC
048DCD14814E47DC1B6F01D68AD8E42921EA6EC4EF25A13D8A05734B00F2ADD9
8EC1B4CFD5AF48A8912248A84EFD386C6B61A5E330D6045F576D9C446DD56ECE
EA07228F0B0DD146071382E9F9EEC52118FECA4C326D9D8B30A01DDE65747AF8
FEAADC335FC4B589DB92B21ABD5F4A1828236BBC63F3F377C3F5D62536119B5F
7E15A4207DEF9096D27D3D6FB6092924DDC9E79640EEFC4B9852F50C93C6BA15
17112AF23E9E95C7949061F1368E719E3A3D5C8CFAE64A37D510691278A9A452
8592F32A76D068F1BB3C6B565D26AE8A560B188B0AB3E7A64A4114153FEA7444
C689CB2D637F2C68FC0637C661E3ECCBB47543C20271E2233F7E8698F9F929C0
FF50BA7D6D0E964143A0906762197B8DECD1239E8ED5BAFCF31C113777EA71DA
655F2B297464DA52BF03516F9A12655CF331D1DB515A2389958D9AB5415CD1EC
4A3D0035E2A57BEBDC39E7AB9B8A6C79FE27DDA582794DDEE77B66101DA8FF6A
94D45653A3B1316AF38D7FBF8D3AC972C91E47BB642A01E0C4E0DE1F5F520ABA
FAD25E9F840D1138FE79B8BEE661A9782EC8228961B378827F11849406E8F0A1
26AD6E840B1F88BFE9A216C452C523F989C9E552ACB5779EB6E1C5044960E6C9
D0B9433F66BBE8F27E3A50B6DEFF709E95876AD595A96E41935CB9EEF883942A
38B7120E8E3EBABCDC6CEC0F59F515FA68B9D643ECB0CDB6902BD615D3F43767
6CBDA2F5389EDDC3F21B6DC19A37C8CBC667F0052E2A981C2D781F648F7E38EE
4601F398C7BFA42389ADA4D51F2397BD6B4EA476B06F3242CC877AEB59D69832
E0C6B5DA0E278BE4A7D5D37240C861141BC0AC5BEFFA8B8BC9CE6E3F9E81CC30
E35D159521D6254C39A8592B47F8BCDB482BAA113CDC93E8E9DC24349F296147
5E16D6AA28659B2412D7F97F3A0D150E5B8E7CB9F2B34A39EE99D02D3FE7C0F8
3D99CCC9DF6334AA94B5CC82342B73FDB1B825834687536EDD92D645249A4890
D18F25D07B25B155ED2827B4C5FD5763CC275434701BB5EF3CE16144862B9BB8
8707D65149EB53294C36C60F1FE858FC49D839BC015357B46FE3B9B3FF671A97
F96375A3F547D5E410EC95663ED5F65E0870E301357991C7ED81E0E162BD9DEF
6741ABCB3CBAADD93DE69871F739FA3B44BCC8A704F84CF2D9A0B10981CED217
0BDFBB93BB8F017D78BEC2D7F47FEF373E5376046754EC871B646131859F56A7
F0B15884F184165AEBACD30B3C9C91D0E6FCAAB72B95D058D3105BDBBEA9B047
034CEDE7D452B943222F0E4ED5A25C49588EDC1DB41CDFDA97AA4A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A229961ADB1D5023BD93644E4C23176BF787664F
CF245203C8C3E557669BDD382731E334C06F4B6EA145D5DF351211A0511605B2
8C540290A08A304CB1279FEB8FC14062F495A5EF2072B2957D98A1AB2E4B2A21
6F53829103F9CA4A8B6EB5766A44A7EAE4D5967EC3646F54568E9FAB28736D70
AE87CA7F3E445B1F49315332AC4AB47D5296FC1D3B96A166865C2FCBDEBAB3DB
6CDE74F5FF556BC9358EFD0B43F697D889D0331D1EBEC40C00DAE0BAC2DAD9ED
755E5FFAD0632FF3D5CE92C7E1D0DFA7642329EF410BECC288F0C4D1D0E6FBDB
1D2F7DC87DCFA3E12F6EDC2CA29FB19DE4183834020D1D5EF3C8297647447CEE
E330B23D8B1E1FF228FBFBE9C3CB8228AF6F5670423AE730740E6C8729B71F3D
32DAD5793A80FD1B6F3321CD3296C52F9330B735A0E65D7C343B1A03451B3A9A
19623C4B099EA0177F6CD6CB3BEB1F72FAC3A0D0989E1ED1A2EFA01D70A9C4C9
29F4BDC03FB1E4663874849B532BE5D89A4DCDC978BAE505BFA5D94B9F85270E
EA10883403D78F8ACC16D78A071DE8BC0EBFFDC300D331F427017089C77550E2
CF35E1093D08837A23AB0CA867D97DD34218260D2B6B9A4E247A71B41391B55C
0237DA0E25D4B4313CE372668A4B6BD7362B99A641E690E301E06C561BBE6ECB
41B1FD9922DFACBD3C45554A6F59E19BB0FA6BFBA035C07D0D10084CA3724040
1EE3312EAB85F8AAFB0991CB7B5831AFA6298E43DD37CFE29072A6C9BFAF41A2
FB4DC4F80E20BBB9C959B78F2599E4068E7E7F3F825C6C28562E37D841F7165C
7E17C8FB438AE8E402D11CB5AAEFFDAA439F668494BBAEBB53B2974E20BFC9C7
3C2D56B0AF69956685D2F7B9D7C0DB95FD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872F691DC4E6728A1CA7B24C909D0B9C03E26
CAB4684ED3C2800D3BD58F5D44F0B16C88AFA1A33F9A3D8C9DE24F4A7FCA9801
84A9366A77EB2FA0E1CC2465A9480156AA5A7DBE1AAD4FCBD9DB2E1289308A60
706034F1B137A05F4A962CF1C22D83316A517000F1073FEBDBBAE2FD98BFA9D0
8818AF6D6B1C17387237FC958B93C71C4811B87B71B83887423C8EC095EF9E42
8F956DBF5B86F15244E8940C2F9BE4BDDA2E4322C052851677B2EE5DAF403311
F039C6218F4D2882FA95447F839D92C164DFEC115BCDA359B58305C56E941651
E322F61EAAB2F0BAC298957E4172F101A12BC5F2734A28F53C105348362C617D
60BA3678C8215B9F542D8116D8DE31DA02F9E80970020F8C4C9D94ECB95428EA
06164D1C97A638B4620E485A996CC84306CDD2D6B4B05BFF7AFE7DC3807891D0
39AECEAC3F500A09579E6559EF6A8492F020E67407CF321E01EE8F2811A9C0A9
32D2107D819094CD8E14744B571776B1D9BC9C544058D99200132ED94495BC18
92BB688C4FF28BEFE9079DAAEF7187DEC15CC897C563DC4BDC3F482C8C3736C6
7A14C6F913E666C27F082A4720C63E0B47C3BA1D271E523BCB1AE8B9A31FAC39
8FB4643E2AA1E3A0E850B45EE08928CB8BF491119048F4C4CD320B25BC0091D0
4ABDE47EFEC71E4973F629B392CE3475109E28E5E695E526BF8394BE7D685F4A
E35AA17151913D70E6CE39361C97C925E515EB39632D220FC1BC93C072AD07C7
DC28850415D9AFC1C8A868801B990CE2D26305027E6F9C6592605A206046CDAB
D9D54EA413DE45322C948CF1656FA97A05A937A3AF22EA39978F1D7A44869AF2
4C16FE3DEE57917017C65752C45EE8EE604915C3734157442A161BD5A9818A95
AFBD19A4965831C6C0F2D5F535AE93682E855B1BDD6CE955627289962B531FCA
B29F4C8E7D591AE0494A4BF14767F03C210FD5B0BB7F5B0B954E70782CF804D7
B15598E487B95C4B13B77932132FBD3B811C142268AB891AA0006AFDE4251423
E691A305D0F0EC36018ABC98113FDEB963163D85E7E3F8C28EC36BA0E34C4A7D
BF32FBAE5882BF067E07B5FF02ED325AE7AEF68D8EE037987A9526E492876E68
ED7FA2A86AD8E0382E1E2F291F270C8B9233DF92842C7EC50271156B4E7C01BB
D70995DF003B7F6A6B3B9FE10A0E27F605C0005570FA47070FC79D8E0B3E1E05
6F8239952812EF8514C403FE3558E431CCD6ED7CA83241B091503FE2B00E5F75
79AEF49A3D4F2126544C4D5B05FC33F83790ECFD7641DF3FB94289E2A79CEC3D
7C3A9742F8C5D2AF2FF88BE40D53E49DD66D3B0CADDF6027B020024CB98169C9
FAF20B76D6CDD0DBA9DFAA5C10C35A95B63056A0ED3DDED1C8764477F6328DC7
C9F81C18D38FA1BCEB3B9A5006CF67560A58EA246F114E110FF47A42D923C153
F7A83BC1FFE67CD11FF1A76508916C002B02D9B025971A01FAB3FFB24E6AE36B
4BF3496E2D326C0BEF4C80125934B2FB9D7EFAA0A98BC83ACC13AC9569CE318E
21C11AE858AB0BD573C2E4B683E33471DF955001433FE00D93528FEC9ACD0038
9398C49DE13E3D0CB6910A4072C474AAE956C8FE085053AC08399F34937B2703
445943EEBFD15EACF4EDEB082BB0856A2FFBF9287B75346C3864B99A0C16F468
BE1E3146E3DC3D4950D905D6AFB4390B62A3173B522240F0D3AB725CC2FE8CC4
F1A4DC3169C25CF63F91D69A3C1C428F1B901C3353CD23FAC7E2B86EEE2936DC
FD6F0539158D3304F1CDA62B59D893A5959E924476E93CF7DCA4E9552BF0708D
C92C1620641CC75AF1F20897BD0FAB1B2FD02446FF750D2373F997362DDA16A0
D73B178FB7B67307204933527F6A177F5C15648503E34EAA16E2E85FB09BD17C
1FCD55BF7C85D411526108BE065D249A68763850925A457E17802B8F1B153599
F99E1C226B06E838F7245B13476E954151931B6BD142F7C7AF437B8AD4F2F150
0AB0CBABE5BF2E6C34ACDCDED7FFF4837E72EE7A9A0A3AC5B6A95A1958EED1B1
A35F21271D10FCE1045F5237082237C6A6CAD180902058A1295986A3DFD904A8
A301C3757FB28F8FD39312BA79A229868F2C81C2F455F34620DCD561C67D2DDF
B5451451F3C27E48B4CDD5F28E727F728B417168EE9C32721CF77B0BB8F785CB
0FDA4BC989C00F2CE00EC61E35AE94632F3BCE064A0E572C68683C6F54891B2C
02490D0C06B8CDF38105C15DE2FD011510BDA7E4AE474B2BCDB5FC24A7087B8D
7CF10A3706652E7E77E8F048365EB42B825768AFE40381C7005CF7EDC01C4E4D
CC86D3C62FE9E069A1725AEBCC5CB1F7AC4505AF03E93373736FF863282261A8
6067AD7E76C12BBC92709CAE17E12419D4535D0FEE85D7AA225FD64BF93BFD28
420EBA065CA35AF942E6CFC2646D50949425D15471002A6BAC67DA45FAC0B133
9E63A2DF0854ABDADD0F3CB4CC1AA1F4E87F1F184F6819F4D26416C3F9BAF3E9
0343B692C3529814C334576810697A6DECC9F689CD7DD6D6E842A797547F96F9
206935478D5133B9E7614AD6E07D3B39BF4BEFFF935B48590EB00726C0670E76
0B34923882D94F90EDEAC8A3A8DCA72E26C987F09AF3C6030021D991171DCCBA
54503EAC4692D81CE4088F3E2AFED79561508B1E19EAFA4C676576BF1DAAEDE3
20A05647EC632B1319AF7120EC53549A80FA0B8B14AD07A99A7D5A9C02884A71
2216A564384E3C32208368A9D04208C7626736EE24E135047D1D412E289BBF35
B80F92DD0A3E769A7D0D3FCF1DD66A83FDA1094245139346C89EE39B8DA56B2D
D3F25D5A9F620224A0A463B7BC2C470BBF1546F65CD42FE47F91FBB7C0F560C3
477C6632BEFE3882ACE0AB1944BDDAE1FB609F621928A3A51EEF532687396575
59B9F38F17E3877053BCC3F004DB440C37234D1869592E57250F65306A1666F0
02A9B36C608B6E3EE3E6478661A78D313F992FFAAB3025042BF1D23348428995
7A4A69649F0DFD0046D570186DD59BC538502D18ECA4CAE179C9CD6222EFAB77
68AC443B35B63BFA956368397A69D41DD7156C5ED84AFDAA5D775F54B78C794B
35A41FCAB99493DBECF6620D191AD7809E872C87D13F9DD30928904494416E3D
F1D0110FD5BCF8FE0BBB3027FEAB1C0E29E1FB46C68793445A2DC6CE183F72C2
571F46E81CE317A0B867554FC41A1BCEF5E19646935341BD381BCC0919429B21
C62F2B7B09E6FB51D65779019E678CC8BAFC026639CE00ED9FD63C0B6E6C6DA1
4E3A1B45E8AECB82954502887B4732C4162219A54DA73A385F9AF86EF6E3F521
1BBE23CFA17C8B22922419B3D635AACF51D5A44C841A968C8DE9FABDE25D7F41
812A143B802D3951B6D9026B5D97D33027BB8723813D247827B40DC36A2CBA4A
701C45942DB1C919EFDB6A13AB49D23BBBA5D38653AAC7B813F29F450710ABF8
B347CCE0D73E5DEF603D68C3984D89641875C81891266884AAD6751AA3C570FE
0E4F0239E05BF6E98C99CC1F0662D1D1E9C9DF1DA7866A772E358CDEA9FBA4EF
131019DB87C73771A6CED0715EFF43475A0FD680DDA601EA17A90E1FBEF6E377
8DE10A910F346C4ED33D753CDA1E5A13BD10638D8471EF80438FB02DA52997D4
3ADD92EEF762FB6ED54CC9E41E6562CBB4F3DF32AE563384C962783B4A2CB934
7E2251CAF08F5D36DD56EEF77CE8C8B0CF6804B66C3760BB3AD124FF837C7D4C
084DF2935AF3382B30B8E4CE1B5234EE229AB74E5782C65AF4283889D8B276DD
0727FBA60EB6C2BC70DE5DADB4EAC4652DD0DCB6A0F346F55D8055D4C7E7BA5E
A1A04E90C07BB12CFCE4F97CF8D7F3E36B582FBE0844B418FF71389F1E4B1D4A
8DA1D0AEE7CAD195AEB8A07828702857EDDDC1030D19928F2E260434D9020CB7
624E0116CD08A59EF79E5D7A9AF1DD9809395FA29D6410F723F127142D077194
94F1402183EB49EBA761BC8B07A7EF81F6212DA66ABADE88654BF8FB8E7C6217
F631697A12FAF69318771383D3F2349AC7FE93539F4574338950F885151F0383
F5188E09A9E1B8C023F7E0892E6F8B9161510B36B230EF3E93590FA686661BC2
390E183E2BED41CE8DA5C50E9EDFB70047B6D2CFA4ECEF0674FF7EC3E81A5DC5
4529103ED8E5126740D42167621D9EB939BF23B27B2DF046F314DBFE68DDB61B
2D4B9E77254A19A265FA093B594288EF02DC075445138B79842389F19B47E871
B05E8ADA834E775AD6948BE41E7CE3797656459053227D9D94FBA34793243644
B8A33EA339FC2A1CEBA3DB1E042443B665E915991D932209B3F4CD6472FD2DB4
00DF06C70397503DF67C10B47377A99EB9666612C77A23C8C3364DAD8E407319
772C9B201C49B75DE8E9DFC0F91FD52CDEA7FAF96105243EDF44B4052F8C25AC
BFE0C0E5F2D242B83CCC05D2B4BC05B37305E806D20CEA876880C4118254A191
47D1389963C41CFBA67B5004D67B63178165101C27F5EBCCF59911E33447D905
BAAFC334ED030FE2D062F8A73FE6DE425C2F627DF5E7573C369946C3BAD31883
5D4707E90A0340BB7B6AB880122DF3F9D6BDE77DD5870ADEC8900D6346957B84
C9F5FA4745740AED1FA5436E30669CDA65742ED08E4654FE4843DB29155D93CD
C05BC0FE45B681C73C50BA9A429E868C8736888C82493407221B7738CA5A266E
761DC301FB3CE13E54945B0A6BCB5633B1D580346D913BACD84F91E2B4714126
024DD013CCE6E2B4DDF83466480BBFE3D27E0497A23689E18F83C338EB243ECF
90B8843B2E917F59882DA0C544168426B788EB1B0561DB4C9C60E5C5D5E84B4D
CE802539446CCC76310012F65E0C3E7EAD30E08F339676D7BB9AF94FBE12AF54
88D4B3F5B529A5F41FEB0D5D70532852C4733623491D66248801FA6BFF9B01C5
D0C6BEA07E93C31D65E1DC16DAD28887F7E237E040956CC325DE59B3AF1F9B1E
9716FE4475B8D5D13F5C6ABDE06D1C710136B98CC866379DE46AB431EC70EB72
91A55077C7300F05F14ED6FB7A3ABD911EBBA0E88E2ADF3C8F7C36788CD9E3DC
CAE2F30D96AC6A25FFE9F98963FC566AE808AE20CAAE74590B3DD20DA962755F
F507A56FEF98CE576CCC29A76055C6764C666F0F453FECCD0AF58C15FBDD5D36
338CB0ECF40BA2322F8559BBDD2767549450C6803B603B312979604965F454C0
57F3D5586DB8783F06030B0E5C758F7A279110DC24F752EEE7E7FE9B2134E3EF
4DFBE0E746C1915B6A73DA59C34794E92CBFF4EFB16BAC7698C9AE38C9028C76
98C26DE73E5A06C67184BBCF69B32C4F358A707613C641B0F19550A337E455DC
BFAFCC8413D1EBB0AB672BD01D2A5267D426490071462F24E9823DD5AC2A249D
44E76E91F887570B3DA85186B878777DED4FFDCC47019E59292BB6EF8FE6D2DC
18EB4C02C6BFCEC3E71E20E6D986746CF04607DC96A66E8520A4BAB58141A8AE
9C4E28C6F04D2D0DC9065A549730A059B4021CE25A2EE7EA03B6A1D7FD764D8D
52A10182F141F0FCC1A424E5D70B1875A655DCC3B4CF0008880A1663932AC35A
A2CB73748ECEF55B10F6315D432DAEC05785E0611D82A36F9FC00D0F38248E93
A8F3342F0347B8EC0280AAF49289DE4F4865F46F102FB29ECAAD60C12F5A1528
63097FE8153ABA67BE2CB9EE0CD684470469798AC194B31AA1E693DE59D3FE3A
5C905313A67FFD96DE21A4872C7A2E643F42D81EF34BF4D37C1876C615489F76
449C05CDD1A3E631366E219C71F2E138A6E29C9022DD472018166F27FBFA72E9
3D3E2D595F3A3E6DB94D42D2EF8BFB8514BF6888BF540B49C04ED9FC46A680DE
6AD3D0BBF5EF644A3A2A34D2EB6F4E37946F0C146B9D507EE79DC7A715CF4D65
DB2611A714A654509D31772F680E47CE4FB77C94C9D4473CA0B1748549A2EEAA
996F4CECA9D43A2BAFA4423177A81B2D7B0ADDFF5AC82153843C6F7837AF311F
4FF876AA0669D8B9BFC58740A672F6547AB5723275A2276EB60A30DEA2F96633
1B52ACA50DB8C6437C945D1D7CCAB29BE95F06206B00C684371EBCE5B655FD47
D19666640C711ABF3A01379C262518BE40090986629E5D42BA4C5C361F62F2CF
41C075C4DF19A0F0AD8A46F5BCC2BA12C4D24A73630E8CD6A2E4D13A42A534EC
7EC672D7560AD5C157DCF9DD97DA09905C0BEC0EBEFBAFB779344C1DEB9627A6
863023430A727D50DFB8D021C3FA1F371DC668BC58E26F662CE8868C1CF7905F
6286FA59341E68A6054AC03039C6F13F534DDA1DA88A06EE36401A2A54A603C6
FE4820DCC87145B9C3C3C5CE0F22D4B5DEC2A17886B3FCFD6D88D94B5C171A29
4A2A8C26324832795536528644D282F429B57E1C863719C70EF2C8B862EE3578
55AB311EBCED07FC274A5222CF53239497211C13D02F8FB9DD123741A724CEEF
08DD9F520F03E5F54901E7D1914840F09BEA09B37359A4EF5EA889861CD9A704
8BE25A717292A1A2A5F44B948ACF6C46F5357CFE54802EBC92CA3E7B873FCA0C
01F737DCE787E36540498DDA516D47B4CF7D14FD15EFBB2589A3E222390A08E9
0B60AB594476A6AFB290EA1AF0A8EE76D79BE9F2C07CB7B9CBF2CC3FBE064922
CD09E76AA9AAF5F82272BE6482579AABC91DFC66BB2BD6CE0EFCEB51C3C63436
DD46B6D3A3EAAEDBAADE0FB704C5DE06C86869BDE4B8F35C341C90E60DB1AAFE
A7DB9D25F0BA34EA859BF991D0354BCAB97DA3AE374AFC3929AD9700B3205A43
3016971AF248EB2572298AB67A9377C4781B457EDB416C6FE608C928A64DBA7C
AFDE5DA65DE65B00A629EF3A9C3CDE8D3C9B3740FE2E9D8D012D2D358ED89B92
58E67B29E101264C0E29FF5FD9870CA66A1C03ACE9833CEDC888CD5D2968FBCD
39A24463D3E0A87CE9D5214EBAB9C299FA31AFF925AB8F21B25AD1B105C89EDE
A28E7C1EDEC044D9422F1B1537040858EB3F562CE6856CE3860D1254AA7843EA
D0B3EABF78597793E38143219321E41EA5FA846C05226796D86CF4415C5B72EA
5DCF9DBFCC96B5155C7598D6D71114D161E132C418C1617ECB5B7E091D1B11EF
F73F0B5E7A5748C8AFB5537B7C946387E6DF677C977AB426EB6CF686087DE12B
3E1C464F1019BEEEF9DACF5F60C8D9DB5DFC8201ABE06BC3E44E4F919BE1FA27
8AD38D40743CF176A9C55F64CF58FD93F08C5B690EDF00F3FE36C9CAA4C56E41
279AC72D81B1A5C2E93E324FF5545D0CE8972C2431411F730C6AAB4C0400EC00
1E45AE4B4DF40C4E3C5AEB8D2592E5AA4835AA996E5BB901627FBE024354ED42
84C85137F8872BAFE19691DC2CDE1797990AD8D3C18DBBB5E7F5657D54380FD3
18AC45D3E7C4999D50AC93B4DADD8E3D4CFBB60F46F6FE4E7E6C4D1AED79C614
4B1C9BD22D737951BCEE2507446882520611165AAF4A254A38785D48DAFBB19F
48C55F09FF92E2DF9B35F469ABC8660176F8C33FEC0D845F72BE9148067BB63A
9677148E32333761183D0C720073C05A2F6D7CE4EF45440710D3999635B7CE63
0194962E4183C3838D9401260A7437D895153D16C17CD2F83B971005CA4FBAC0
E247CC0DDB1492E6BA65DBA894F62D4F977DFF168ADAE8A1716BCB6AB5808C57
55EA09921F05567101BA4EAE81E70AE161B9B885DAD457C8351CA765BA358247
310D2D65F7AA103382475C093525EB5729D8AF505B26F99EAC72A872C052B2E0
A35453EEC505A64E4AC9B0D19B39BF010C614737D1463A65E24FEA77CBD29922
E290A8B8D528BEC8582C2CBE3733502E1F59F53F8A82820CBA3C57AECF77F264
0937FE1365B3985DC2DA7D7E68619337185BDEC00884249ABFF386E03D9C1C9B
A3F119A8D3E1CA21561EF128B7222963DBAACBD071C3701EEB814F06635F9B5B
E729C852A9BE85B84CB832782FC5B0B22B70CEFA573666D8EC508502215C8BA4
DFA1E72BBFFA5E1F1070AC2FD21F8F45D4B0DBF3B4F29F053C44053E14ED09E3
E7A0FD59B9252EDC8C38AB822AB24BB0E068DF816983D1F2F1CCB5577DE32847
B3CE5B6F1B549B9AEBB0B61DADB95FBC019074F56DBFC2992CBBF2D3BE43FC7E
8CE14C9FF61D45EF897355BFF6E213E8B7FBA1F6CF98CFC60EC5316647DFC4B1
1F89A33FAA0EBEC92FEB04C3A6A0FE09FFC78DD1978B6BA40D5F8F12BED39696
57670228721A60EFF590F10F9FCD090D1108CDBCE3878E032C863869EE7D5078
8245B1B6AFD86D04C4F84FB9CB9BAF821700E6405154C561A20205E725588F3C
BF187360F7F1D3AC6CE64CE885B786A3D5D0C5AC216EA68F8F7D3A5BD929ED20
5786C33E3C5580FE4159D0CA9287D40B271BABE42500532AEB53ADE69B38794E
048CE0C6DC07949849C1EF9EF3A305BE5821CFB8DA9DEC9B6DEE0EC34592289E
83AAE3DFF54CABC2D268C833BEB1FCF4564717BA1FB1CB9645008E8990705B36
E1C1395BEF33772ADD6BD3AB356D8DAB7345B6FF2ECA67070E2DB614666E8290
9A1D8257272EC336771AF17841FDBD5D61710D62F50463B47C8F8B5B731D6019
ABC39591932DAED3A136ACD1C9780AA0F25FA907699A94684125A385AA66E0B1
49DD482B26C72BCF3CC553E5E8A17FFA5B8282178F295C1CE0B5E19A665BEA62
8E5C361F4CA0CB88C20B42506AAC676750DCEED099E66D428930A8484AD31609
50B4F8ACE22418F08755BD425D00D1D5B53BF9698124006815BD57DD5CC15B8E
5012293173A587311A3D30D48887461DF29B23AF194E8F983AEEE17A046E6D05
7AD2F90240610A27244970757F3C25CFC3E853E2FEAA61FF602BA288D241AFAD
9B21B8A7567DA118DB4E6B866931CBF8C2255DE4C035D2303AA66DF56526A41C
B14462AED0E4D3602126C40D56F36B7B275EF7F771B6DC2A48A7D878901EF29C
8C1E3662B336F249CA6F816E510783229ABC3A605343DF722DCBF1C27AB8A802
6A725FAAD1B427C361CD8E3DE146AEC03E2E23107132137A314B58D2F731B547
7840F1FC1BA2ED183B5106346EC0D1CB77A7482BC6A803CD7CBE7297EDB0D63A
166BDA4DC1E9C27A4580AB02B561FF49E6D9BC9858A3ED3CAA1D77C99D5E6674
263F62D3E6D262F980CD3240CACFB36B9EC74CB1EC2C98500772D1B72B841C16
91C07BEB2428FC644043DC61AB7CE2363FF6B65CB9752CE148C3C8CBC4676C9C
2AC31EE36F887D0CF61A575444B3118085017212AF53848AD4A1D16EDBB8CB46
67B1C9C8795E869B9B7157658E26E1676A8CC9AA4B720B9068649C2FBC1FA4EA
344854CD26548C24AD096915F3D1256D4F620A7CBE66883BD07A191CC377126A
41EA96394170A5BF25824F7CCA33B64B7D1A70D83A06C101AB379CB47D6A7283
9E715522072F126379A165479BE72057F0D6D0311BF204A4CA27B07047B80849
C0A77BEDA560ECAE3FCD7FF41BA708B5EB9820A92F8C86B98A36AB956ECE9F5C
562071311088E6D0DACBECAFBFEF8E1885081943A757218D16DBB976D39B3C4F
7F46C54E3861D4049CDEA0E641F2476A5E37BE9DF8E2797BB52CA05603870FE7
C734D80223ECD48EEDC69939DA7ABB6B1C7AAA577848C5DA4B9D780F15576F10
A2DB1E51E1CEAEABDBA2C5682E398A10519385B6B3338F446210484C1AF9ECCA
460F09EA1C8257F5A710F4290FC2675B83E9CEF6EA95FD665B591E12E4D96FAF
BD8AD9994E963269C3DDF1A67170CB45F2AC14C9CFFC5427F212AEF710C921B4
896D04E61B913B6C41741C6196BF025CBC117087F0702F0B228D76EE3EF3F92B
71954D34DDA062E9154DAB0A9643DFB1B2883387C7571D4057D87CABD63E5D22
9BA73D9CB7FF02A992E25150895E9DAA99A1932A49161F1028074EDB17842C95
BA06A4BDA5C97B6B8F4763D21E005D89FAEBBD7D8B06F3FAC229C6C95DE1A7D7
574828918BABA81A5F36CC8C1A97564607EB59A046D1AEC79030AE60BDA3395B
9FCF935A925EA2904FD702766B36916DBA8F9C96141BBF4788F8EB80CB87F0B7
3A502C34012F783BEE1DD3D04EB580E47E38F09B4884979D611382D96BE1124E
7ED7538635E8489839F862F6E38B26B827F6E45D260A96273B951CE1DA8B9FD8
E30152DD5AF9200F8AC8B8FA39413858E8A8711C01072168C2C33A1025FD82F5
FE833D2187685FC378D9B1AA787428233F8377E4E03E6CE9471674E5EB3BFE08
D8EDBAD8D74DB6E9698459E3729274AA08B9E76FFDB4DE017D2EE6B73A28813D
FB7765742E60E70E5C5CAA3FD0AB6AEEAADB72DE788D21EA16D247D6D3A4545D
46298919CFB897E834D81079750511F5260974E84B5F4EAF748888F24F4FB46F
07CCD2FB9583937F0BE8B4184C4FACCA2D429A3F91352AE88ACF1CF225B164F9
2ECCBA00C4E5E9DC24349F29614784C3339DBF4C4D4D9525ED5B54AA8023B11F
DD5D37C1B60D5582E03F083CF711C8D4C4834A5A1D1078DCC4444EE308B8A5AA
AEEF347AE943A668262623D6A60F543D13185DBDC938B5A37FA28CCB1F4CC63F
2B9EA92EAEE2AE999771B71AF9B30F28B07689A702EE7999C2A97A199035EAB7
BD49EEFBEB6FF02B9C5BCE6B0E9B760FAC62828B9B2C3BAC419B073BD7C039A3
1644BF123DA78DD615C4287ED7DD43B679C08C186613FB795FC468D39CB8F3E4
69F9D141FCA217924A8D36EDBEC14C5256B9940F0800E6DD26001BE1FD4D5B9D
CB6110398F577234A79D34F58AD6DDFFBC47882B0F78C99ACF93AD672573419D
E238AFF3C64D29B8D53A9282543D83B3EBB1F1EC7A558CD8D86DAD66D3EC9331
7EFA50612695EFAFBC424FC5CFDA2EA2EE5BA19AC90D6880C5F70C2E00521348
9EA21075A3BAB4C488358207F8F6641AF333A71119C04E7C670E03482CC063B7
5142DB1BB7C813C7EE435E6B39AA70A9F61CCC446F6FD2D3927A16854567F886
7AAB0196AAE40FEDCAF3E4DB41FA41CA0E24908FC65500C95AF2DE68429C1654
F4C983FFEAC74FCF60D33CF0386F6A52C8265C910AF297CDEE38A1103E2BED41
CE8DA5C50E9EDFB70047B6D2CFA4ECEA0678C99ACF93AD672573419DE238AFF3
C64D29B8D53D265BB3C8A312666BBF8BBFBD24D39377A7E86AC489685EDA38E5
06B7B19AC38E4873F69C5F96D2A0373BDE40802C4566363B820D857B334F26D5
5DD2E97AB66BE0F2706D04006224651DBA0CB230AB26891B0C4679B0963D6CFD
EE5CDA220987161A2E2BE7F4212FB8E2A9BA738587D552A60FEEA3CC3D11A56D
1CB957F27AE487F8CE7522556200DA33D13BBBD899E1113DB8E9E10BBE2AAAF5
FF86EF12C035039A8AA12C719C0339F766BE627551185343CF673CF8BF91B124
40D8F2AD05DC5B65B3AF62856C93608B289F60FFF8C732825DA065D7C9599260
7C99330712DE5D58BA9334E274E26C9B301BAAEE8A0237BD6A342C96C41E33A1
F66F931F2A9A50D2857A8AD5CECD4CCB5FDD62F98D8CAAECD64C7D8468DA6DCF
2767A73767C2F5EC442E14391B45178DDA235B7A07AB6EA76230A72E68859E77
1835EA607E168019FF408B3C783D071E095FC87E63BADE1A9212BDB101703F91
2E87DDE05F28ACD81B331A026E3D72A9FC0E15EE51F97141125A74C48D7B5231
55BB827311033820B0380F65B3AA4F3E837EE8C2FCB0803869718BD527D78209
8E0174672BEA355C276AACCDE1295B615F37F1395827E29E3A1711FB2B69CB6D
53EDE445DD11FF240B19F6FB6C514D23A7A4F5455FF10AC25471C19ED3B2D164
93293F09EA311F492954C0212AFDF226137440909566CB411F6EAD662D6BD127
75D4F85BD47E3C79CDB4AD769ABB374D1B705D61C42DA2C800300E4C81D9D739
DF88C655165C148CA55C7A1B993F205AF784DA0937C74083746CA9A8557DFC57
3A2514A39057F1BEC82D844D2D51514742D35B30B867919C2493FC2B351212FC
B66B4CE90406085978F8EAEEA93BFBD52116889221A826EC20AC4384A8CFF8CE
CF07A5963CAF1BAEB952053C409CFAD43A877A7C420006CE3E9BFF4CCC25E609
7A206C9108935595DA856256A535618196664AADD69471CE6B07099AF0E0F724
0A1B663AA363025837B8F67721883BB280365F5DA1C9A7DF298B8C23152C0D6E
EEB97C9509C9294C6FDD6D4FDB75FB0AE3EC8FE0E78D7D547A1C57AACB90A8FD
5C40FB22842FE645F7AF26D6841809D5F0B52D59E6AF662CFDA9AC18A33B2ABF
2F5C93A198B5A109CA9D14EB30F6F4C1B85C7C52B673D6C884CC8A93D55990B0
1110D3FBD341AD6218433B5E00B6673118F12D7665C52DFB2BCF103AC9539C29
408400DE02623D52D3FC439A3F6CEB92442AA9CECE35C4719E6DDFBF4CC6E06F
7F4E221AA17F75D36F7194C419641CA9FEAAD87981D6DA72961783F252E49C55
747422DBADA7496A1D611D5D428A63460826B6BEAA35BDCCAED4705D73C2CD9A
14C5396873DCE47441B413975C0BB5A399722233B220056CFAACA8C087B4C0BC
C2AAE1F726FCC601277E9638D8E6E6B9718FA0DE6988F4EC2095E4E68D184BCF
6A5C4AFD15904D68C140C6CE231015D9395ADCCDAC76A75523184F814ABCE4E4
F660952474944C38B8502A8FB3642FC273354710741654704A4035AD4B6A7C4D
00623F8A7C29ADFBEE0043D4664253B09D5045642C8CD853C485813E28C40289
360E6C4A9A5C31196F7CD20B41AE6B28880F9C43CDBEF790281699E31C3F83FB
0734C14F8F8D31B1B2C357FAAA44467CB2180AB7F73FD0ABDD83226C25C32643
FDA7E4F9F5DA3AFE7424FDF8E81393DA14560C1643CDFA74C575BAA216CEE3C0
E5459E5F85685735F0B0A47B75F63DC4559D32A3155DD2355BBC8DE4D1B2E641
27A9EECAF4EA40816B2D83923BB9034808F6E4E32CEF72DFAD9C60730CDB6C87
A6D07732B9E716D79199A4028F1AF8776256C0E934F6A012FDF194B19E966F94
B1F3FF879474E9EA34D55A9EEB49B792D0B491254DF65FD37B110A735BA2759F
F48783B22F3BB3BB974692770856D2C163DF16C10F38588227F4ED3BAE507EFB
C166E9384CF36503CA353055D48BE8BC1C88668D17B5DE1B8D5A413287D9E221
BF6768D98EBC14A56B4FDC1DA224656F15133D61C144DF45E747C961FA362A5A
A48B228CF68EE0032B1968EB88119A375D4AB1DD29782BF033D64E97DE753933
AA83F37FD4D440CBF1154DE33DCEB8DC36446FB24D63F66122E702CD92A8BECF
44D4B1F6F9AD92CDAEAB2DAEE928681EF627A2AD7CEF39BBAD71C9160C4F9791
0CDEFE67643E4CBC6A28EC8661015B69882D5EE1176D9FC173C6DCBF776CB6B2
59A230D1B50C8AD964B732576A4881AE9CEE27DEB401B9C266F63AA2D015BF62
0BA53B1985060B8735BBAF575F7C136AE676E52680371D036D1801406A3A5009
F8AA441ADE4517D2F4DE84F7193A22C569416F518B0DC25625EC9AFE2D1C6101
95FA32E61F5D12E43E43F6E039436FB9AA13D89CEE02664EA934E0777BD01EEC
83BB56727DA030EB4F11749324C15349A500674AA342E00623EF2FD5EA807D07
F16E915503CBEBD83B173D6AEF2574AB800153F3D80F49365D5006829FED63CB
9571B219B38430D6CFFA37FF627F4756AFF88FF10A172C60310C10FB6AE2E695
E526BF8394BE7D685F4AE35AA17151913D7CB8275C940ADDDBFCAF37BA250021
3239F12DC7E00B64BE342449D33F89196645962942DEBDD82A0C4A86F0366C50
CD447ACB8FAA2F5A7CE0F51CCA3DBB2DEDAB0670C65B522FDD1A87B85850B6C8
CF8B22E6CC94F1660E4C07722D1C66818F676D0D959F987B4513F382042F8031
1AABF4DFAB0C651407A58102F825D9534F2C1768DE50E54699A566F6E1078F7B
9F348954D59A13BAECFADDF1AAD049346C3079B29055B18C857995ABABB9715C
492EBB3403668A042551B0799A7646D4BA5BE8ED3B3DC02DE652AD3AD70EE12E
A881FBAF0BDC35DA213A632E310A73E8FAC30CD882C2D90B88390AB7712AC342
ED568844CB37AB5D309CF795520A8122F5EFBE0D7F58C0B3B310A6A8388D0521
522008CC7E3AB92D3244762ED374AA7EE8D919EBF3CB07A25182E3F959D47283
B193B4425174F71E60D7C2D3174873F55307E929B392CE3475109E24A1BE4844
F2E31995DDB0BB2E743B02F39638287969457F58B9C453592938E50753358D10
6FB48726A31D7C1528C92C72E8CDDA3C6402606AD16969621B7B86948DE9FADC
D6BFAFA574C89BC62032F460C2ACADF218975752E94A0AEB0AAFCF9F9D25AB74
D45946C4D4099FA355EDF2F32D64499E6F41E0452EA291471F6AE12C9B18AE12
447BB2BB9862EE64378E0F25D6E5B8A689FF7104DEED781C70B7ACF83DBCFB12
980956BCE2AFF75C864A8B5CA3FEE20277695CCC2E54A25041A959AC738AB6CD
EA64814758532D7DA349A085E560FA3A13FFD612BE78D9077FC27B0C5E6F7F3C
437BA65A9CA6FF7677680B4C9523B7602D10372015A8CDA28AEDDE6E02E37ABF
96D6709F7750E252843CA29B55BB99CDE952E807631756B1FB6CB37FFA4138F1
AB7CBAD5433F32E0B087B698901CCA4A90DCC09238374D5BC908EF970D0E8D37
21CE0C6950293E87F135BD8E491D8F710C5F31260C5AD761E6DF3CFBC88BCCFF
71287C18CC525EC8D73AF17F67AE52BC831079F5DE95A4B84027DD9CC23388D4
65E53466FDEF6E4D475F8331F31E58AF3A560C46F0F9A0A0E9FA210EE2595408
725D72263B2F7FB6E3B7ADE5124B2B60E132114FC4070650AE7BFD3C6B73BACF
76E1E5D2187136E1E88D3D47C5661CCCBA123B2C56BCA4F1724FD3C64E1B66C4
C8F1E542E38B64D473A4A2410CE61ADACDCE2CA7DDE82280B29BDA8B9B5B38E5
48162584D2EE4508EC7EFC0B6556553E8660DF4FC881B1B290AB76EBD11A36DF
260F40B29C0B81390C67B61C835FBA29F185C0181148D2DD8D49A96FE2EA1990
E5255A4690269FF727E31A60107B1545EF3A42571D128FD0EAFFB955EB75BD8C
8B15B695811895581A3D76B9F387D719B0005323B20AD59BD545E53DAF14D447
E9492F907BD5AD2F14BA35BB6E9431F02CE03E8050A97238F88827E75E2F5133
9FAD5776CBFCA949CED07ED01BFADF46DA47A77998C831CEA17602DF66E27E1D
AFDBFC032CCBB03D0964DF8D25F7BDCDE785D6F57EFF3C879DDEB99535E53084
DEB4536386594E75D8312686761A7C070EA75140331D7A0DD5731F0E395EA42C
8AAD42D9AB73076F309317F7FFBDABE56B4CB2B40CCA63E51AC2C563B89563D0
254194DE000681912B142EAAD59D6E77D53634C137AE6A6E83FC0D04CA55D146
BC5D88EEA830BE0E622CB3CE8347E2A199E9F45B0999951FD8F8AC93832B0AE9
E5660F58AEFBFD489E95ED60C44B66D86BBC45F71A9A9CDE4364CD69D506E7D3
C916AB979449FE10A4FAB74EC7001C7FA5C9A5623B07973E25FBEB23AF2E2070
2F9888B531CABC31F73E1809D29490EBA4C090854DD806FF8CF8D4707C3B6CBC
968560E43C7516341DA64093C33CE11E30603EAD00851CC85FB553618752CBB9
7A140C81DB516E544E04813437A0B89305D861C021B0C41758B4122E88E5C8B5
1F141EF35AC113C7CD0F17D6D970709230DC5CA56455632AE7D77D6C6E9E32D4
3FB4453D0EB7018DD843C98D78633017283042D9176672F0A4D5521594016530
D62674C843E300C2AB4611B6F40B275CCBB1A5EC6665F7123E3D1E7D536E5C37
2A06D195C3A456743FA79B795C5479F9E9ED52CCB922C8E123E36BE8CCA5BD0B
704F3664D73DA6A7100ADB8DCCFE2D1544A68D93CE36CC3596D0E1041AB82266
948572097CD369812672C37901600050B60444AF0562897836EFD474FDCD37E0
A045B43930057D198AA0F2FBD627B6907A18FC8507C8BE926D0CC551159531DD
06E4D7E02762A656C43FAAC86D8E92256042E3E88F696D4EBFE58F6512707451
5B1FAFEBEA4F5827DED76AF27796B35D19243C562AF625BC4FE38AF37D16325F
B9929DEE8C2848745C4BAB416CB9A6B340F5BB512DC333468FB500D860BEFB09
2E856CD10417407AC6A0DDA1E77D37AC83F0991A4EB12264FAEFE6E2B12759D8
76E93E78E14FD76B97270E30ED97901DFA0D1383C50BB3E6C3DF078ACB88DB37
ECB38AAF90FDEDB2321F0A36B1B1C0E935AC84696C5AC192C44E320690DD2DDC
C634D3D634D7CC06195116DFE7AC8144AA9B19697682E4AEA88E2C9D3762C911
AF08BA10D0FF937A6EC2FF53F98821703295813331DA7761B1A0D126F664EE47
49A7E86F7E4D048E65CE4F49F4F52DE53C037946E3DA5EF02E5AF8CEBFBE4C8B
26445AC6E7DF95B2DA1DFED4B02520A7690C27E19C27E21C4E44F1DE0A759DF7
DB8B0A6E1A7C5EA4EE3A4A352236F33501E761B551479D688F8057BCB4898540
A7562EBF1093E2F77C9B4F4DAA44C0D1A11F192E05E0AC30A739A18A7087F351
C285708E2AFC8CBC33EAA438EFBCD2A87AC4EB4D13ACF22ED108A50FE4E229FD
41C4BE117D38227741ACDEFCB6D5053D2A39855BBD96E88FDE5C1A8038539CB1
88D849C292680DC0205FC2580EF426EDC0F3BAB54EE46C97533DE11EEE3B9FE2
203DC6C75B27040BB9EBD541AA9FBFDDEF1F775BE0C411788B054AA9080035AD
11A2AFFDE3C954FF3FF9CA1CB2D8C5A51C42C71AD0610D98BA6661C0ADF2CE49
8B72C709FA1C06F01E4FC285CC72DC550BFEDAEEAD411DD89A32CB8A923E22A1
224E1ADA533BB2FCA2267F59BFDF4BFD1C7725A822839C5AD11AC06AD060684A
2D03C6B87E4C11A06FF233D55916D3394AE917E1CD1E2AB1045315DC5330FEC9
B8D0DAF3A73DC548822A77A8F26B5ED5C3B76837C7B75D1B42E6FC672638F8E0
6DC03253F9DA5E9A6FC65FDA29EDFB3AD6CAAD30A52AA3E631B7417F217B0BE8
6CEC32409D8B6784B37CEE9E6B7DC7DF1BA50119F71AB4967291D8F4C1CFF138
2FF6A474BC95D164B029EB8875677A3C0E43D867E93E3D0CB6910A4072C474AA
E956C8FE085053AC0C7676E2982572E4CDF1C6E5BA5CBBAAF733DF941BF1D369
A33E7842920D073CEFD986A0584E020CB5105DD5E9D310EC9DCB0572AB667F33
FE709E3DDBED5D26699EC0593CFD6CA218A1CB03FCB945FC24376A45F2DE0C21
334AF429D2CAFAA9F401092E1814D53EB57B30F6D489811E5B9C00516C846CB9
4CC3C3D49254DC87A9C81E9DAB0D32A517B69BA20D99EC2E8AA1464BBE41C0C4
25AC7745A4B6585967FD23717BDC34137915E839D5E2BD0B0D0C7C2443555805
6EBC6B9C1DE4DEB85CB85A5551069F6D5DFC50F578DD766561FE12AE6A3B9D17
D9020A3E859E9B0354B437C500B5AE174A0BBF4365D9C9574F09540485BB3BAD
3E68FA5156719AF8E823F31C50F5406B17CB03C86DDBAC3AA2E36D6D9E2D5F20
C67A71436062B64C1770F371145495BAD7B6C32B93B36DC34FFF3749BBF1AA29
F3CFB26DDDFE22BD9618E23C7FD95CDB02DC661ACA0D9FA5DA0B387CCFC7CF7E
387414E4A017F9FAE43F47C36E5544A1F251479685AA9AE8DF53A2A21D951A60
E73E67169DC41EC459CE994AD4BD0065D122E44FFE52EEFF539E3EF40A7B7772
C16BE5309CF91E7B9440BC8CE2D95FA1D83CC08F1F3AC128FE6CE93C051E13CE
2DFE658B0A72CFB20917A8FE9026B4F9F6FA14603226BDD342BE1666E63F9983
209DDA78F22714FB9DE80D3833DEEC7848D7C0B82DA11620868D9032C34BE24C
D59ADCD6CCF4D19716E824E39B0D02A840424A84EDF65562A18C3204A5D5FB67
2927178C7AE024E79C6163F8A74C8738FC3DD1ABF151724B2DB809496CF89ABD
F642D9E191449727385DBF12F6ADB74EB358437D0CEBB9E03109C593BAC09CA9
96240E2B74A0CECCAC565C16B53C7C5E1A202F5363892C7370E3BAE8CF73F5D6
0BD9C4958040D3EC1CEBE50FBA2346FA0FFF9D966F224AA72C22207BCA226752
B21D219F474821611A35FF2E1FB51FBFC7B27C86A5A58A0F460A90B3B6601794
E5B4C81CF3F7384A29702F0BA28FB2F0CFB48D826B3BBEE1AFA053BFC374A5EA
56B4A72566DB6CF6EA75B2839C6BC2D526A7E9DF95F4FEB4CCA4F183945D1BE4
54D15D375E5D27973FCDE87E185B96619939EE41AC7A11138A785172F225BB69
F11D0F361F199774B9A0F86835A4D7868D7852866CB22595590E4999A373A0A9
7EC0AF4E853D65DB474E4CEB981A1B8AF7422C37C37CDDFD742CF9A7487D9D50
D7817C71F6C04E2C8FE6E080B4DC810E1707A191C574AD599BCD209C9784DF6A
802C8E790FBBF8BA9998663A702D27FF94C63C1DCD3B35A348F6BDD5605EB23F
7C67A83B20DB01FDD9B21BC2CFB46A86BB29B6F7B848728590D83709A986887C
7DB8DAF0F445E6CAD771D59811D25FDA43865CAB8E8A20A9326D2B50BE61172D
F7B0803F1857DB3A61D578E4C7014E46B8B233536D2EA725EB7D6A9086084296
C4A1D7BF82A9D569A455C2B2927D7F063EF3322F29255941774EF076F4DD66A3
0B30A7BAA9E25A8BECE17AF116E2A6AB8F239D94C1E902C46946DF4FCA64CC16
E318ACAD367833CE22FC43ED671A14FE6E519F3DF7A42DCD2CCDDA95F37929EE
55B032A5FBFE5991BAC2556AE99E8BC2AB38547FFF70A5B6DFBF7DF68BBFEE25
456BADC26F5496D377219DAFD0E416EEE81AE079D8FB17FDB11A848CA28F5870
230E9DA69ABC80788F2F72CEE5F5594B3AFB25BC134B927467A32C20AC38D1F0
CB9EA474CD37BED86D11251F0D8BD58651E901CCC6BD34A540CC0B87C0CCFE8E
3C283C02A4655C579BF21B53D1FD37996C6F899A85CD37431DFDAF370FBC0313
D946B09DCF30329499AC36E5FA1E8FE0EE6A8E81E6A3BBF9C1524C164F2EA740
8B1C0471F995FF9B16AEB06EFA17F88C1BC49F08D754873A91A8C256CC17087E
43475627CE5C40467BC18783CE90CF308FEABD6947A9C315C657AF20D77D0057
3329FD36DE08A63AB714709C14EB85869A09552C199AE1E41DD7C45456CB361F
3E4DFC92F8E22872CF885EE7D3EA8615119754DAEB4C88C6F6D2CA046B557000
AEE2588BF0A0D1B0BD37D5F03F931477D764AEC8B93E6BFEFFCC2B643CA0134B
3CE6231CE93587C67879C9EB1BF1CF6EBB1D86127183C9297554A68489A23C8A
FCE50BA3E0A56557DBC33B9E32FD7D590FFDCF40B4E88E7E4568D4D112C1F7D3
503EE1431CD088D5F2D606382011449525D7A632344BFC1F60C355698E307A36
2413502B1F128D874C1D119798EBB0E11BE341F6DC96933BFDF5A9F44ECC5B23
462B2312B87322DC2D7C3F9C78E5B2E05B20D542B7E6459FA2CE8C1C8A16918B
B7BFB44B8B81D92F63481CCEFBF4264ED8900D17D96094A779D64952A6D39CFF
DBA38C11C7238C738370C4881B9C666EF6308772F76681769749CBBAAA03FC80
D55B6DDAAB3B5903F65176285D4E6B602D25520914622B04BE2DED51B9123DA0
DA1143CA9AA32E28424B735BDFEC2659421DAC67295BBC1A9A2021B064295C22
677DCCA50F1DE05A4AF2145FA0FC5673FBD1F0E09303F8F6B66391CDC3C3F9B0
1526D9D71A74984522CAFBAF6CD275B25B2B404A3CEFB3AD50732A73133F6217
17A771A7A61B41C7B6E6244E5CC893BEAB521275D0108121C2D778E26F448997
6428984A7DFACBD3FE28A8903CB42EB0ECB0A1D7B0B3AE8CEBC1461957D7BAA2
0EB9168C6AA9E420459A76AE8021045DC09C95C9AE4B4EF735A5414D985F6880
B1A441900C9DFCC0F7FF114C014E1DA800226FFC34EDD551DD326E58FE258D0E
268FFFDAE1393586EFD1231AFC764EA8585BF507366BD3ED3FCC2FFC35152250
149A30DFDBE349FB331AE9EA757854481CD1B3B8E5EE6B8EE54B4F73CF066C2B
9C5DF63FDC0ABB95E0C51F56AEDE5B160039346F9156826750A779DEC0047602
E7D072252999CF429D4E3BEFAD5341A8E0A19BEB72BCCD74EA801348A46784BE
9BDFD1AA8BFC116E09414E329D0B322C661DA6A7C2E6C5ACB12FB054A7F7E298
8C00C40AA83CCF0794DA7C613DA219E8687D74411CD198DA90520F76E25FBE78
A989C2561B5474AEB9877C2786C19E2ACFCC56A8D0B4D6FCC4A69DD51D80866B
FBBCEEDC4078A4B0BFDEEB9A13F41E3D10F9A61C9B8F56EA17FBC2926F051D0E
E5EDD68840C6134EB89984A6F10865ED6FAAF4200196EA4BCB09F019123AB920
02863D00F80A1ACFDF65AF0146DF74E0240022D6B75361C9DE43C88B01AA6ED3
EA2BA9EE7756AA03B0DC87E4A39927BFE1E941C56750891C94A4B2B51C83CED9
FC4CD766291C78537D12A19A316267E1B0C1452F196D8B206ED266C2A7A6D62E
447E551D1193D670F151AA96F678ACEA70003248437B863AC7E6CCD3D272C580
211B33A99DC5E168EDA2CB4A47A9FCC007F910998AA28D18D0C0D347BD4A27ED
915F43FC0EAF8C7F57EBFAE58F6EF2147CC1E00AD1B1F9FF479612753E3B373D
0E5E288AC7CC5D3A75109498A8FA09018EA13E7145AC5BD6439930D168D60FD3
5D56D0073EB0BE646E41F0E12E0C0729E5F10461A8DDB90321E27B888606031F
DD3014D53E32719381936CB07080BFCF6804B66C3760BB3AD124FF837C7D4C08
4DF294092C235A982963C9B2584CE149A22CFE128E5DFD3A429D84B9CC334F85
5CB82EB7DB98B627A35B9DF506FDFFE34A89015B64AA83699EF8A0B78ACE0816
0A5815F0111C158DDA35981929CF4F600F677601A35722C36EB5BD214957FCC4
FF52507C34739FBB4F7C8DA144121AA04F2046494AC2224E7075060A8F018EBD
0285AEDADA45B5D4E966EC28617A8CEF36DB73A288F768D4909498FC079868D8
8C6FA455EBDD917BF17E5C6E302DDC4403A087E8D0AC3F20707869C5FD40D940
A885310CD6D5CA9C3518E152654DE99E0AC88121A279AF959FC3BF0ED249587C
EDA6B9310742DC47A084620AFE85289172711778FD9D4C3555DEBAB6116D53BF
50D681063EA6A439F193E4F510ADABAD7E396F1FCBC05A0C6DC542FB532DA36B
397C5C88DF3950EDFD6CEA20D0649071442B2916EBCE5F4AABB526ECE28D9E58
369BD6AD8A796052070F4C57807318A33199BD45A3407A477D1A7D972649F1E5
AAA05727039869AA1EBF87F75FD4FACE6AB8A46C5A7A31F4D96DC713C2DB10CA
DE05ACBC6787BB5EA465FF0CFACD9BD496D7A7903F91BC3985070ED99A566625
9191A1A11479E278E62E97B16645D354E54ED6792B4A0CC14DCFE904CFBA6632
2757FE6ACC7C4292C453436B85938B117D8376DF619B6DD938A80E640D283286
1FC4D38C36834B9B073304A241AAE56C846E8A491F1748B88111EE5C79A76F41
E902E325643F78D02419611D50402BDEB3A16A92F48665E4BB5A18DEA609CF8E
E7973ADF7367A2C182183B88E0CC21CFF93B0A2F6C710B9DF66B6377F7AFBE59
2FE43F8990973DBD05127C52F8C590E9B0ADF4D5EF841A395911BA428CD87225
C7FF28FDCD4FB898A052A0B1A1687F845CC5FB1EFA0FA399B62F4D5CC32B5445
B1A53EFB8E082619C089CC36ED066250AA99949CA91F15452AB7DBF6DCA40206
6DFAC37A4B73916AB968204D34D6787CFCA86D1E81944C5799AA78626137F8D9
85DDAE015C636E3620836DA8BB5CE31BAA722DDB36BA5642CE4115C57CC63948
1AD72268CE454554DBB8E693716D9FFD953B7B6514AEED350F45EB766C4ADF2E
BF18F155CF537ED9A178FC479350B20DC2EB1DA38A4A0DC468308590E1006BB1
F9CF94C24746C3FDA17F2C848A47115838262A37F4F77A5EC6E370B94F19A54C
3ADAF77BFC22A20736DBCB96F07CC74AD17A93D3206EF4D481A294B8874E065A
21F6CC868ABB2CE5B2C145DAE2B6128E6C913C88155D334C31E6AF2EAFE4760B
0C7A7823081E4058437BCEF4817FBF8D3AC972C91E47BB642A01E0C4E0DE1F5F
50A4B51BA6023F692249430BFC3D84DD1BF24F80D09758BFB6BA24101CC96B6E
C14A211B85FD78B94FF98D62801DB0F4776280F669E93B30BCC7B4F999BD126D
2F0B0927CF41A5F11E5AE7C363134DA775544B63D281D68BDC4951553E8660DF
4FC881B1B290AB76EBD11A36DF260C3FDD37369DD094770C1A1B8477244E8695
B6DAF079BD58A9585CA35C2C450B5929783DA0ACF374733D744707E92C70131A
55B77E3CB0CA12010DEB5B132FD4C5CB825A016D083CCD272E8A5BC5FED4DFC5
301B554BC721F5DA4BCEDF664BA6DB13755321233449C37F2DA97E67DF10D2F7
30416FC7940668F722EFB7E8ECCE37D4138082D5999995470C2ADA7DC66857AE
CBDE1D3BD3710A1EBF2062108EC36BDB46E5704EA4E95BC91194E2A4F97456C5
3750243B70B07A7F9E0672714E2AE73E4139D9E1523AF0F4CEFE3B4245E98107
4B8637A89EE47EAF9B93FC4576BDCCC82C60376236C2126192A7326616CD44DB
FD6EA2CAD6BD84A5074B5832023E809B80408BB9B61C2C2F6107E32195B8310B
D109A1ACD027A29847D9E293613BBC323EA586CA1B50B9C689AC813A3838FBF0
BD10A193725AEE55D7062DD9A9AF99461B1F89B3CCB0149CE1A47C5BC39C5BCC
EA527FC5AB60891BBD258ADFB0B4B8A9104702C42C30D07D729FD4F2FCC3A6B9
7E1F5FFCC375C7C9DCECAB53F758648FB82B7F4B32EEC804BF057DBFFD989C8E
B6A211AB55BEC11EC6AFF814B86D9D5DD7FC4E9F96085A372BFF26D3865358AF
166718E4B1CA2F5969798D1B7F38C7734795D322D9CF120FAF88391E1B6BFBCF
6DC68B1B645C5CFE109AC7A355699319C74C3F859B9D4DEC46A4E3530340F834
7DB6277982BCA979CEE6F9C59A6684134925909155C60AD3A77AEC843DC75C97
EACBCD28E95F0705BE16EE2E8CA3CB7BD913A9FF9C2E549539C355AB03395693
38D455D8D355DBB8548F0D58ED8419EB9CB1002F04C5A67AE11CFFFEDC9C8C75
95F0E4A6F4D8BC40C214E62974B83A5A5CC369CE9F3DF01FD605501BDD6EBBBA
ED8A49B82FF79AC6EB0B36E2F4794FF8D71B56E86D8B7303BF3EBF660879783E
563E5FD42AFA287771C9340589046D29896E8D1807150C2282F11907184F4C27
7CE3950462318057F893A50B1BE89222348D7A061BD9A2DED98A79B1993FE3C7
F50F9AAC0E3EBD9F71A7007ABDA1E71EFB7075790A3AE2BDD9E27A71D3EB4D33
8FEB0AB118E08055A437B9D501FECEB50C30C15340A22B15E6DAC8C7C1DF1F8E
57F207A7A6C9DD70F59D5BB1DA08B0E141873665917EF38084D649289E4600F5
A67256788F406EFD35D1A7467119F1E155676D10A8A35955BADB667DB10185C7
2B16AA125501337D3D039AF45D8E99BBD874DD442CB045AF9525279536814044
F4AE7DAABC43A230FDAC3F7A147AB521513CD600F052831A924C5DC9771CB880
E3A19E3854C9EA86DA22AB40A3B3886A6C0542C01CAC64ED1E3E485982631047
6781777382D05A089F2CEE01CA979633EB001C3B895E824DED43C96305B0D042
E6D59B0716F1B49440FFB6EE0B0A7D70523C2DFB6A9CEDB463F91D861DF98981
7BE1B392D36E3496D0238DD633B9DC6AECE0B50916D1A2FB7D69AEB5F1B82598
8EF44CA9EB453D3994AEE4FB12D9EB4B069E3C6460A7A1DFDFC053A837941862
6BEF4DD08E57DD9280429B46221987A70CB1E13FEA5EA1DB1FAD71C69F5C5C9D
103BC205185742394D94412E4EB6B7D7B2A078E26A1657650D50CB35C74DB898
E3DFC435B3374F45AF41AA09126CC46D6C604DF8961518B7A460A2DE4498F25A
81DEC9360CB9AD88152A5A70EB77B4E6CB8006740B0AB54A7784D3EDD40001A9
8BF261B818F2C930241C04D38E77E93BEBAED663B2296A5B5C21638900C3AF88
825D444E3C0B1C0983B448D76BF88BAE37BEB1482EAB2DA6DFAEF53253549A5B
D51CE37B38C7734795D322D9CF120FAF88391E1B6BFBCF6DC36BBE88E0F05541
F9D31B4518C67024DC179AE59E29F4DCD854121ECA94D1953CFB6C2C6B96E9ED
756FCA82C808A50044A2E997DB689CE85F6312A6A94F0B83CA63F831465393A7
DEB7DA08B3012A99FB2FC7F6FF7AE574FDA372E2C284B9F6E0CAD92C3E68A715
763FC442E8A230C5FE8FBD210694BA937FC0B4D6B53B53B9E8A4E78DC2C1DB25
F5B010131BBD91387BEBE127FED3E0DAD617D69ED7BD7753B5583F089317A25B
1C777C39B0EA1311D05D99D13E33BFB7FC73679A38ABB22E10CD76A8825064EA
9F94B5A63D96B1F47E96AE5F10E07D9A75E9F4AF54FAE1598763EAC0A67899AC
FCEC2032F4DEF78BEE2B5A97ECB51FCD5962CBAB6CEF9C79F14FAA47A1B9EF94
49080DFF5B50250FD21BEA735122C136ED0C6ED7F6245C0559045C91E1147873
400FE01EBAF6D69C3F970F89B6BA6E8B05DDF2B538BC24B526ECDC0ADA060DF2
C32634256EEFE521828F73C7359848C1CF6BCF0BAFC22DA5FD7DE96F97A00D04
175C885D92F17B84D6256CE1DC9AA6B0F2A8DBDC17A5FFAF17078CC55DE418D9
573497D3911B0C5F49B26F7EAE7593248EAD1CD481275603ADAA237E257A2E0C
8B15AE961C18799F033A6441ABDC64704A961D41AA00EA0B699088915CF9F722
52A06449C43E8A3F98100A686ADB740C45D0CB167BEB8857F526D1B56B485C25
76912814545EB4C9191CA240C9AB79C85E7B324FF5656D24E0DA26CE769F3FF5
65C7069CD4D840AAF25F7B190EF15AEA7A75F7C114E62D234EA997904CC8C0F0
0248BE459F80EF067A8069A068E7AF13A738879EB779D89DC565746F129EEAC3
CDF33EC8821B56DADF435F118C799C34B50840E0DE2ABB0DAA2463EC7B5BB9B9
928FA04BEC5E4D82B404A97DC2B00BCFCAEA652D98B4B0A63597D1BCA0C4BAA2
BB8528C34C369BA3D1CF2C16A88E8FC0194CE3B471CC2C4DCD7EE8DA67D9BA8D
0D50E67175C8EA5084E4FED0637D79FC8F79C31584FCF6834D1BBB4D7213FED3
D871DA69398973302455860CB9D29E73A85071558A0F760B41AB559982262323
1065BB9032C6A3A9CE03FD8D7995C36D487F4473BFADEB87B56BFE61D8947254
747CF9848901DD600662AA1240C29A34CFED328F3925D3721996296E34BAE5B2
47D73AE65917E47CA00E739BF74AE092DE641609B79E1F1932EBBA4D734BF44C
ECB039B86F475DB68A6AFA0948DB4C2E95636EF8C890D69230D0C80EF1256980
4A23475AE7AF24BCFFAA6DA004A90F53E78B51B4294E3DCE916DF04CA917D591
BA5E7D65FB18BC5BB7642593932C9E0DCE8138F4F2C664871EB1A07B3A6946D4
5571FC760DFF6A5ED2076CBB9E7F70CC4ACE14D54BD3389E38DA769C53E49FC3
D5CC60F3F1A0E8B2BC9AFD5067315E4118D729461112B8FC3708B3E83D87F3A3
94FC38E69967833C0E58B25E36FB9674ABD86A83309CFE771F4A5F8ADA324715
C75A5662DA978663984B2C0395E5756C0B3675F3C93506D73861A4BBE46CCD92
B9807AB6223C634AA476873C6E9815AB3FEB37E78106CA0A3441735AAC9EB49C
CE02D5EBFA9023144D99A71EDBB90FB84380ACDDA68AD7F3730A2E41C74ED565
99CA1B203671F2DFC03B251D8ECAD2B28F5FFB14DA87DE71AD3ACBF7022B01E1
7C53AB73675841F161C0AA7536E357B4C0AB014DB7971751975AC7A57F25C391
94F9288B318E8D3296CFD6AE32E51AEFB4E69ECA9364E5FCFA9D92F96615A592
2333D102DDB3F48F2ABD34CCBD047D6A14598F301B6A7E97363ECBB7CDE475BB
633CD017C23E3F6BA6E1C44B5135397B9529EF8743BE82856869B3069E84EE1A
7A786E1000B59EF234B71023BC83F4C60D179347DBA9F2647B2B48C445FEF243
2F102EBF27E02DAF7C12EF47D801DBC67D95FC6E9D36A82FDB69F62E8E5B900B
8591E0336E37BF4D4D9CEBC3315ED3584DEB30F7979CB5494CD195A10BF52ABA
14FB1BC21A4E6F8EE197ED4CF058FAFA3618571E12A203B72A1CD13BDC286050
54717CCAAF6D21DB9F7DEF9890EF9F0C943861FEAA6E2EE8957F58F6549D7189
9874A3F85E82C396D9E2891D8E0D6E5571D4EF1830683981D4C7797575C9D319
B53086DD9F4FA1AFBE7AAFA01BAAC24515355F9825C843D0C6BBB366C7058037
A814FA8B150CEF52C48C478EADF2E58D3CB1CA23A33DFB11D82AB98A10F43F95
EBD82229A14EAD28B99B763FDFE1A92A3A310D956421EB00D5E9FA2169518A8C
757E70FE10A36032D13BE99BE23D9030CE41D39C20CE46C22920274390AF5779
1BD9AB85DE31338F5131E0F8E91EA06D18EA72F20358E40044BA7B82BEACCD10
49EE3C4C526C77DA0A0ABD46A72802B0912C5C20B3BCDCC053D414AD548500BD
FFC20DFA02DCA07F57B5F1164FAB22AA610E4F824E914915376A127DBE3085A3
C56EF42335757B923C2A6E03DA735F5DEF39A01E9C18183C34B5BC8ED3EF6591
1469F5DE55D0282AAAACD9DA3B1559BBA473A3479DCBBF4689E4A980A46C300C
64F68C4167272564959D27621A455029BDFBD93B732C349A6E9AD21AD8D3A004
B510CBD2D376519707417A6049A4AD8CD66849368EFB4CAC068A62E2B9D20DFD
D5A0B1D64C656EEA8A48184EE61FC357754093C51EBC67E1499C66E969C0D0E4
1E32306A316F2A64A8F469397D214FA4A1DAFF1C095D35B14B27F7370B134CDF
FF3FC74BB62F8FBBF658F5D2F0B3975D523B7CFDAC57C03F5C5296CE274C1155
5E0AA348F40312B91E66F516835B7EDF02BAE8B740656A0EB9F99AF1FB5B7B75
73816388541ED991DC598699A43BA13D57F84723738E1B94C3029520C1F8D787
F99305EED1DEC90F998103A821C35734F0153950E5F72FF6A8A617C22EE55AE3
ACF0B696E4444DE0BB3491FE84A63151B5F44CAC53C721060702EE12C6641799
994DEBD48FCC16D11AA97312142611205589FA84AD15836C555BB6E1D45B59B3
DE7CBFD19E040E3E4CFE2419DE4C034350833FF941E30A5D2EE095E3608C4038
1381404A39FDB273B67749F5A93ADF2644237532D6D591C1AF52457E448803F7
12215F562F31C628021C6E686D329D74455FF83DEA9E8662C77024836D8865AB
F8DFFA5E8F2625A3E11EF9BA85A5458FA4CBDEAB9E33EF3C0E61BBC2A97D9AFB
48071BD6A27A06771ED4840F93C7C4AD5B083D137451B3C8A312666BBF8BBFBD
24D39377A7E86AC4896407606B895C8F3034F885A299EAF758FAE0CE7863428E
10647AA6F926172B8E50CF991BA7BBF67DFB9B5AFA3529B822F94DE028A8861F
BCE564DCF89B36A5F1C621FCE1C4DE9CD7DB5138D126CFBBF0DF8772FCC956B3
7067F0AE8585A7183C9A597C9CB03AF17631F9A02FE5ECA15D560501A4A39A25
BD397C84B6388A842F52A16C3549B9CF47DCECA8F2F7921723236F5F33E63C91
15F80624303534894DF0C0E381E69A28D43710781EB7D551626AF11157521937
7889D903CD27DD1FDF56247DD3F1CE4AAF3A3C3E59B2D1695F1387636BECAFED
14399A3C13196138C2D5C101C3186C984397085B1317D50229D50FDABAEA021D
86D68B0FFDB927C361CD8E3DE146AEC03E2E23107132137A3140B94965079538
C1F9087E6FC665136B7ABFFE8DBF1188146DD02255A7689A824B564B699D4851
872CBC01CED22DC3ECA2BE88D881CC03929299117F82FE4F8D747100BFC81C1C
78A8800AE691524E1C6FB25F41A15D8BBEC30AEE4BBF2B0C0CCADB597E641054
899B9DF267A4626B5C2BB888E40CA4B33A26CA98303D0E9981AF8EE6A59E8218
456871FFD26EDA54268F065ECEC16354EDF507D06759A297FF423AF24B9E1D24
43EF397EE0AB134571C3433D4D42D381A46611D41A85C2E946551D2A98F35FE4
580A8AC3A6024A63AC8953FBD8C38A02B7EC1B1DD9378AA3BBF9C1524C164F20
79D1A6BA57D2A7432584FBEE46BDCFDB91688BC9DE1EA33C494FE5453C7EBF63
971875D3BE9D34E4E1F158018673CE9BEBBF34DCED833C98E119B4D94A715B2E
09382A7AE20E03602AADEB44D40D708041073B93AB8CEA60D95B440E1A636516
C6190C96816FFAF579E4255C8665D501422F7B0D981339A9C2D391DEC576BE9B
893A99B9CA5F1E6B2E35823D44C5397995730DA04D1BD946F4701F5CB340705E
F721D67681D08A54CBC1BC8E335DA6703FE09A96DEEFCF81C30A76087592A9BE
74D88E10D6CB0968AEFB7F45C850E3D2FF64140454C7B5D152F6224F98E09EEC
609FDFEE06012C650397CD93477274F36DC3679C2BAF0B60D081FCB280CF3533
7D7987F3040D71383A96593E3A281E28C6AC68EF3FEB574390780C0651B50C65
3F448142EFC0771E034AC141A9AB277028C2BD74CBD41D34C4C6DC04A2F83D58
FD75154497D13D16150FE4664E897E60E0EAA3A072E5A7C5C65842AA0E4DD304
8947E00BE09D438052E27B75DA5FB7AD9946AC45E7610B15EDAFF673AED3BCD6
DA07B1B72102DD4C2061948D5ED631E6FFCE4683E0F9CCF77BF7D98A1FD5283D
D0A6F7B6BA6C4B79C9207DD0171BD9AA3BEA8191E73874602E29F93459D9A3A1
D15E4C8787DDB4E6486772588759D8017C1499B7E1C65AFB38F89FFB34FCCD25
C66DF38E1F65063B65B26A95C303913F5C10EDDED8FE6BED3E0DE0620A36C010
77D26D623DCB95B59AC50950FEE6CE4DF6FDB7BB789E82ED2E3FE44930CCDAA1
3F12E1E9FF0EADDBDDC4DEE910D485E61C8871E06B108ADA6D61722D3C043FDB
2C4C6C2DE8CB4B7C1FC1DCD12CDCD027F49066687DEC07042B7150E8F38FEC14
69F8A4A71FED1B0E1C8507A04E31173B39F3FBD6ADB74FA1DC3C2FF48AAFD885
26504EA8839CDF6997920AD67D36155144EDFC19502B6F78DABD527ED5AC7099
0D2385AAB0872EBB9A41B5F84639A1936A5E8B3A03BBC5C90C6F35DE4D41335B
B22AADF318C3FE7DCED1EA729FBBF3D90EDAA55D589407E0E66BA5AE7D8201BB
83A361E37064153AD473B12FE7D0374D8AD58E28B151ABD93DD74C7892F5725A
D7EB71B434DC1CF074BF2C971EB817834446D5752B220BEDCBD9B93F5A2CF024
A8E41E62F759A68472D5451426AF6860E07C0315C4F1B2D60634E7720C4DE55A
DFA15F93230CA72E140BD64AB6CDC615EF48C5622843D768209A30A227C3803D
64EBFA9F9EC28F4A1E44516A874C5C6482461E0B5960997AB5BE21A305BBE0C9
EE679003C7449B158E59919CB424D1A5884FA717770DE579CD32E513B08278C8
8BC01610EAC6EA6FF2A0CEF6DC9363045DD62F377C2583377A8955E370051161
02499A38F5430A7EC5545724580519CD8FCD7935F17F40DFC22DDA6ACCCD11F5
8E7764E81BC810573FB1137256162F72DF3F160CE46AC1499E7BBB9BE8925F35
9EC5BC40EF1D36E527912C174F142E7B4D3EB4C3E25B8FF2A49C4B83171B03D6
0E7D3DA9387BB9B2C0306B59498FAC7E79D945D076CD5A4DDF7CD782527E9148
74F797F8A78BDBFA82BD9A0A1ECC2433DA664AA4561032425AFE643A33C88480
FE4036E8A042E068118F3352659297716462DCD0F173B3A48831F928DE675B03
FEC3368EE5E8AD3C596F19982007F35424495B55847F390A0384C13AA3BA4A39
E39B5025BBA3B6A52103F121AAEDAABF3CA0D1F07DB8D5C9AD141C8C7DC1A698
B24B1D3C3DAD6CBCBB6C48347D7C6128550C2AE42A241645B688
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3ACE7772980137BBF6A5C4C136C45CE680D23B992D7F
7544FC9F70CEB83E2B66980ADA7E13488B61554D8CB264FA76074355F7FF6C55
FBF130009A03EEABEEFB1ABC2BF844196D67F7A6D7B5F71162E03FFD780CDCE6
720DA5752962EF6FFEDFCD9C2CEA3A186DFAC113892B6E7F1EC8B28E99D09742
86959C4335F1C11135880D99DE373D9861525270E0F672BE94EF236EA6A73421
3C4837DE148223916BD6808FBBF4CA6E666ADBA1D32034287198A636AC670341
2B0B8FF97AF2292BEEF24F644E087B4BB01933DF0D5753BD310CAB3FDD0DB9FA
9F432DB92F5FBC54B6101CE978D1CF43CFF28B6B7B60B28EFFCE81726BCA389D
6B02FFC00814F797D318D4D8AC2FC6DE492F3135918C1233A543444AD8ED3D6F
27D3879193F6F6F0495DD9ED86DAC0BA5F36DDCA54E5E396AF603D8460A93A33
65D4CE87A340602A02B4AAEFB19535978934D9A769A4D1BDF2516972A2723020
598883A39009523C5A772A9DF79B170BAD2A19F0E95D217BAB9A85545BC59178
DAA2C3CFF8FFD2C43CDAE64E21AF9FCDABAC948D9DDEFBDF96A8B6032E144647
6E9EF2A9400A860787404C87B7FD8B2019EA3030DF0AF7E921A86BA8539A0719
F931FBA1A31744E153AEBA640DBFE8F7126BFA29B74477FE52D73B6AEC25CFDA
445D5FE3681644503076FEFEDCF7BE4F5A52291060FAB01A2ACE045B77BC7101
BFE0C7FFEB527E7070F435D0453C0F996055F80B2AF2A3630946ECD88DD8E864
DE048C09D0BD90C4F970A005FD1AB27DC2F374C4DB8D6E690CA525E313ECE3F8
F8AB88E5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890A7D49B0A6C7268E399C6C68B6ACC0D1E9F5B2
931BAF9EEEA6ED985835323E85D72C6A607A99212BA2DDD24D57809EDE36890C
F8121121306593CBADA65AD9EDED7740C9A2F402E3908B54CB4AED249AE575AF
E64C76BA802490ABB489275E5A3F2B926955B0D961A0B9B3AE205C074AA695C8
68FC2F6997531FC328B8FC65BB06C17B212C8C06D5127A14D7989D24912D1CA2
1FF37457E65829B6E1C65A09C1A101047DF20ABCD57E067A7298091C88C4B587
84409C67D00F7D95FFA0D125FB938B5762D912E1C0E116AA0593B1231FDF3BB1
498BA3D20DF13C7EC6D40091B789C9FB7CC872BB73E6B9D4ED8A555CA31581CA
0F057B10C7A8CE1D7CDD4FE2D5332FC533158B8CE6CD3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman17-Regular
%!PS-AdobeFont-1.0: LMRoman17-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 805 195 0
%%EndComments
FontDirectory/LMRoman17-Regular known{/LMRoman17-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman17-Regular)readonly def
/FamilyName(LMRoman17)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -252 def
/UnderlineThickness 60 def
end readonly def
/FontName /LMRoman17-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-400 -286 1338 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105D56139855A7DFCE26D44F42E43DCD4B09BCB2
C0B13FCCF45D66724D4F9BD1AE3C5DACA322D5F106264D18B14EA595343FCFF2
E1123332F6D493151CBB41DFD055E2CD496D222EF41B4531A6CF94D6BB6825C2
1FAB496F22FD3B47B1E926B9B05CBAE6422EBBCEC149FC0C70F6F86A0F810CDA
0AFDCB50F75368AC58AE244325EB6CA36EE300BA83D807CAED125E3B16569E7D
1AA186346F4F62D8BF78541FD9DE8C6F961A6753785923F4F221656FE25458D5
0A9808613A1EC6942E9B97B18F0E235388746DDFB04A5234ADAA9F2B59A2B48C
0C094FA865AEF464EFE617DB7A93BB5C2F57C77326A329B432A6BB3AE294D926
7D1EF387E9DD04FFC10FDE445DC4ADFE15D2BC0BFD34906D473A59603FB41480
D35869D2D71EB1F97B5CC81BCDC2ABB45437BCB13EFE608A1DBF25BF03B63C27
CF678B3ABF5C53DBFB7F3E4AF705F3518F7B3682A0C50B4F026D3AD818ECEB10
ECEA905FD14A5D0D09B7B38A3238990CD98B0256D11DC6907857007F39B09C8B
9EEE545A072FE5A265C9EDF7CED499645D848821594918F4F56B9D154A316567
BD9A2462398F07C1CD521F9F3DC87C721A67F56D69470FD29CF72CF5DBC7AFE7
C602AD7D27CCD4689F232657467C14A5FF7F7D1BAEEE4E303119C510A0B277CF
F068B7F4B6EC64A5D969993146E720A1EA0524D58468F113D6E65D18FC32F4C3
90363D9FE4273E24589ADB87E3094725B46F7273BF66A03998BD0D14E16A1B78
96474EFFA7572D9D2E0EB393022F3E8341FD99DC0382C7972E10609B64468C85
4DED836B378EC22C47D64389EC39A4F9559CEBE3FAF93BB8E469C01434A269BD
92AACB6C24C5C93C36059974A75F1CDC349CFC145EBC13857CE69AD4F14FBF35
AE0E25E3A1B65947D70FFEB85C9253075B5D04025AE0344EF76894B658A64DB1
299509A1E7F6F61659F406C52B44259FB9B1C3B24665009041CFE641946FC93F
1206E30F2B6DC521CBD9141150AA9E62C83643505CE3D74F73A8D13B930E6290
9CED0E34F12EAD4B266DD80A399DE156CDC649D036DA389D47F5FC0B6D570340
2EFD2C502B9110D530661670AD0B281E212A94C9E3F324BE1BC4AED0DC766810
A1779ADA929D291E50B6F2F4222034E26E42AED14A2966BAA5D3D6DD0A38574F
EB6FFE88F4CCD35C133D00044713D8770796F7E1B46653DD2778F1181D774D8A
4CDD0A5787C961FE2354A01EBBD2FE4DC35FA945B109E02BC9D0CA8F2F54C306
AC2ACCAA6366E6F24A603AC3E2B599C47DE9C5F840B8607ABC3EBD65B115CB8C
C3532436846921964AB2BE5A83FBE336D8C2D1325E033E6CA7B01BACCF8030CA
D26310FA1CF769F4A2A6DD033D6A0D6B27DFB7E5EE5315C3163A5E658CE844D4
F0DDB7D17FC1F755919054DC900685CE73A8D5738C2BC3A5CAAD63A2DFE5DE21
E630125AE03ABBA75B3C5272D5BBD5672BAB714A362DCAECAF285C3F8DEE0BD7
82DBA0E886D584E4E06BCFF708B6DC29E0E0E03461C073EA8B3DD439E5109C42
56E14813707C96C369F883A6E09BBD083541DC07F64A09099CB9C8A8EB1F0469
2076EB31426240BB2AECAF921477FCD299B2E5EA7AE19978F96F7CFD366BF9B1
40E1940E13D7443EFCEED616163438ED70E86F742C3B5D9421E2AF8F2412E78C
A82BB17C1EB3108C53E594D933EADE2663ECCD818CD77D92C0A70F58A3967DE2
6F93EB7C1019B8A18D4135AAF5DAD0E4ECC35934343FFF7676D4A816EE593943
741564CF1F083DAD9233EC198B785F96E717350D2178CD96C11B52FE22BA824C
C6CF64C894F4718FC30F4D8AA5132D2B427B8583BA12E5708AFBD8B07C313A04
F32DDF5F6EE6D222C9572BDC4DCE6CF3F73F954505CBC76B9127245B79FB2A1C
F6C474838566F026E25F3508C48A8BB31377DE3B1B91161DACC89ED4BAC0C5A0
DDEF52F121996E2483E9C4F229DD80EEFAA50DC64C2AF35A3F9916784B964679
C691192C6D351853990FD81536DBBEE2ADCC6EA159977154EE7F9DB99A4CB309
AFB6D06F28AD54C9C388ED9D34A511312DB573060A7E73001ABA76E395D789B1
9E2A4530B7CBC274729C142A06D14003C671AF4B2C82056B6DF07609B047450F
38572C60BB4C4565531425C87B0D922B8384813E560211473610D33CF7539004
D10E53D42DAF400AA41C55881CED39A6EAD01854DD37601A02C87F60FDCD5C26
A477D10A511BF3BF9322D1438E60940A1A7B10FF68354C043DFE6F770C564D7A
A4427891F216DCA5A69E11B079D9AF78A4C998A5D1A58B5196251D74EE170361
2D0E3E69521D8E8AA506ED2E1C8D1651E7DB7278DCC6E69F910C1D7EEC7B9369
67B12274346D1DE154C9A6EC3722200E42295164DB4ADBB1652A3583ABE38CE5
5C584D2618007F44ECD7A954FDD2DFB87F22913A4347A452235919452EE72F01
985BCF3D9493ADCCB3711D7D6290DD4760DBC619E83AA5F2D8120ECA4EED74AB
F85E3E44D28B0D235571C2F16B6692E841CE94683B5EA31E9E8B0E8A152D447F
701B9712FA1A2048F7BA02A2AD093DD4439DD2802E32C10DCBCCA358C9A30177
7283C08EE11FD77BD4C4E854BCDECF5DFC2CD7D09ED923234FD2A3B560348B0E
550C064FEA8E672516730C898A58EA0A7D8FB4CBDC8D8BDE94B402A3787BDB92
45562021F755031268D3CD91C683BC0CD9442DEDB34C100132819EB6177E6F53
18BCF0D9950A195F64FD32818F90BDB1BBC675E93A4C719753BB1EED9C435840
5DEA4E75D61036020AEDB7754226F422E9551CB989C83A4A2F5F8B75858AD3B5
EE0CAE193EB0EC4A35FB78B3EF3A051A1EBC2C3852F0A4ABF75E0DBF780D8369
9E371532480797E5C6302D1F29B003E56B90BC83E6A350169601AF4CCD120E7C
16E6B195372FAE4F5E171592ECF80CDD365650AEAA5E1D52D8F88DD499FC3210
3480163422D6F9CCA70EAEC1D37A6200BB1536CA6A8CB8F15F9144E36E456648
D754560459B7C9D8DB8453CCFADA24266BE73CA1B36B4B2F2784D24BB0B50998
3872C58A3EF67D2D71970060C270EE7CD5782AE0633C33C8E4823681C0A61ED8
98C571006205524F22BC2F6FBA41D80517257610CA9E08C0A5CB8EA75ECA90D1
05D3EE27FC276277140155EAAE420BE9ED0CB1178A77A4792F69C2C8A7450783
352A92D61AEC7801F2A7157FAA847DA5E22F00136F21273615D02D9F5454A017
C6ABC65E4BC733F035FDA08CC184B04CC8965DA246D11B291C3F9A95353F3123
5306174B63477D48E5D1B1CA9524457069D854689ADC65E63D63BCB298D3B571
CEC6E771B02211A1768768D62E330CF74D696E55B08B672A1118DAA72C369DAA
39788782ADE1BC40550DBD475801848196FF59D705A0D83D21E66DD9ABFA4E34
4BAA35CBE05263C4386AD34C04CDA13FA454AB5D18C53458547017249A28B7C0
5C05EFD5269E270AD661DCC7CF1F3C51DAF60ACF4A3A1344DDA6AC0139D5F666
0FA39E408466080E03ADD27601ECC2DFEB5A9335A6FACD86116038BEB06DC30E
D8E89BBDFE4480A36CD4F924E7FDAF8955FBC699FC847F077A81047021DF46F6
9746D3879774D4DAC4B896C6B0DE4A1CA96476032496AFF7EA7B2E24B23016C6
C9934959E2E21D4D9D4C48299331869C565A9CE86B5E99F792A4C09960DCA8D0
D1EA25C291CCED6B43B67052CD04D314D73FBE96443C3EDB23C3544E1DF0BBEF
26102990E06E042986275483553D8A07FE60B2E85D5ADA1125B5E48F712A7BBF
3E039137E11AA20B0C21EDE41EBC7BE24012626F2BE1339F28FEABCA02052072
2A4B1FDF7B12B0C567B17E1E0B3EDC325FEDD473DE05BEC1641B22263D047213
AEDC309C0ECF1B3312511286D8C3D9152C6FBAE2C6354FF6A9769C00988AA1D2
152FB3681A8E54EC3176CE6D4FF9E1672415F7B96061C2E73C547FF148B2CDA2
B90CB5884440F464CD57295728A4520268148135A883BF18DFB558ED898A4B67
731DCB0BDB44E73CD0B7F53872A09437B5BAFE9071A074A158422FEA7CD7BCA5
41A32915539B07CFA88C80DD43DC642E12E3AC1F8D85467B5146B72FD47EC0C3
B4BABFA2AA2F95E47942252534868BC0BDD3AC613B1B5D087F5FE1A6FCCD2AAA
A431B36F55097E479EE8130D4C520E121A74EF9C325E5820D3C9EF826C2CABE5
E2C91A7FE5AC5F81A314DC0521630E4728D08DDD735BBFFAD51EF554621FA6B2
2F0346F9E6D4462EF7D049285CB5075C0AFBDB5FA0B27E7CE3787FED70B0431D
35DE63B672BB20632C49E4671C9168366BB2CA30F4D80E2568CFC90A5084AFA8
A975DBB3644ADB1037620E73A8013DA60A32F061B87B6C7379BBF8DF0C3F7F28
9A4F90A4C4E3311C85C93E8E44E6D65CC7A570F6E1AFC945D06642E3E9F4E403
A22EA36E867F53739AA226E5184AC3D008175AB73AC6DB83C3B9D700E8C7F303
EF9E789001F5E5C674B6BE583E3134464F5E6D442E7D8B58020A01C025DCE87E
866DF89959D51C64C7A1E697B5E0C1A4754615CE15B8E925B0A0217B02C96F5B
A40968213B2BC0322C6866C4B35FEAD22394C0C8BCCB3F0E422F7CA31B3A514A
E61523151C08B05E8F31B235AC5612C27D58DF60DEDA109CB859D96B9FAD1A03
8B3ED3DE2EFAD93BB47BE9AEFF6BE7E3F0549E88CD08AFBE65620344A5430897
F075509F64E99D5E78AF0E2182747C5247FC949ECC0FFF3F2FD8AFD7A819E6CD
2AE09852EFFF109D3B8A2E27BEDA5275F29F181789FDFD66939DCC18BDEB94FE
8B9E0FBDC3E9C16D7391C6F010CA4F84B026E49BB0BC85A603D60EBFE7C4F913
33D6CD3899778644A33617B764922337FB963344C2A01874EBC120B8A728EC00
11B6E29D3477EC8DB5E710CD843327B1F360133AB8050418585ED2A4C76A048C
8AEAE9C9724A170FAC6BCF6A85AA31C1BB79260270BB9367AC291B5554ECEB61
CA3FEDB24200F6D96AD413ABF4B85C04D8BBB173838336C13654E759E0988863
88BC1506053DF9D12BF3C580D088635FD90433C03F373B89A54E8D01944DA9FE
4C01E4EBADFC98FE382B7CA6F56EC07545AB054FB592A16E1498A7C3BC2FBAE7
9527F0C706761AF3545F58EBD511287D38F3CB364609108C991211FBEC733916
1683C3F4D34A8751256D9D4B1A16D4D3E08A67E312A2D5ADF6881FBD66D03721
BA9C1B80162589A37DB5B41D4821DD03215A441D04F7C6F42E0BDB28F0DC702D
42FEC131372A2D75A4AB18ADF4ED2688529F8F5A32DDC76CEB0953DC37D845D1
70CC98D0A48CC3094EA59494FE31586B454CCFDE1CB0F17F31B2701321F8DC36
73EC6A87416143682C4FE94904E5F5FC71490ADD5A64993E91A2E23D6B622779
FC97D1C263411D2BB7F9B296CCDB3BD7F80C944959B74FFA0CA674B3A52B5E42
8D8CAF8405815C5B5497FD0900A840A22B15E6DAC8C7C7F04A2773BA052B475D
09EB09469D2BB86F7BC232B84119A1D4A523B18B181C72BACFBB9F3A3D031A22
BBC605722889B76EED40845D9AFB54CAA90EB44E4C1819F1D9FC3FEBE12912B3
9338A6BD32CEDD4E8A51C229D30915EC1DA818B03D84FFAD9364EA2E2D2AF081
710C193DE03ED27CAA9BB32907A8031492282910DA2DF65077229861009B35FC
4F352864D039E8B2D4E72B03779B8F1B91373F67E464D8057C5EF17F1C3EB72C
AEBA74FCD8E084DAD4004F875E8048DD691A98B1DE92D88DD77E153D0B4E320C
B26E2BD241B993D1925C487FCE04C40BB7E587EB72F327E03E0A941BECC603AE
7B388FE9F86569242FDEC51E0D30CCA1C6F2D38393B14BAA930C2FAE7B1F2281
ADA3F7F72EA59BAEC0A474C21A01B13CEDE934367F083F65E18A59C857E9450A
65B0C6BFC03A7AA614FAD29F637E60ADB2A13755A5048E47B03087A55E15E6BB
75D99241ABD78D79FF72FC0E92F4903CFD05856F457DD15B1831048AEDBD06FD
79BAEAB05CCF5B81D99CD34D142C6CDFC4567EF8239569CA8DBB4063FB54132B
4206B20EC37F753893D29C3D8BE4F0C4C16B48D4B7FB7FA71528A89B1C56F4D9
28F66027A6667ED51E045924E18F0722353DE2C4F614E59B395D1D9823D7D5F1
26D93214B50903662476F2CCA548F5131F2E9E392F4234435AC61CF107A7899D
16224E633F16FA099A45538C9D5AD42883982F3DE97870BB576EE3FEB641B33A
39173CC1AFCDF3D5276898F739D55E1AB926E5F1230538D96AB2484EA1193C61
4AA25C250C84A7ED5BECBDAE3D7C09AF01A444FC71BCF3E2015E6C596E8FCA11
4445ED0052603E442F5EA42D75357E4F7EB0E6F223CEA5C7CD8039F50685A38B
22DA623C9FFB2EB88E891DAA8375B1F1DE7E346ADB577EF31FC3A1776396FEA4
5B9CB382BC332FD121959382B860EC40872F3E7AD5D15BC626ED3A0752A698D4
275D81725E961D50F182C0D09E7B470D9D91F2C1BD1ED08C01D4B98559AD18A4
1A8B8519445360C8081081030F8F05464D998B930B8273CE40C93A4933500284
43C6EABAF73BC1B4BA5328595B3780254A8860DD18EEBD72E9B9F46ACD230977
EE7D7D0BB134C783D8B7162B0D094CB5DD44E6AE702FDC9D3D0920F69FEF9D27
0035F96FA9C8CC081BEB7063357DBB422FEBBBE3B003C4C96BBCD4ACFCE875BC
A9550E20D899E2F3DBA7F211C30A4DC08B2473442AB00336285F6CA589699349
1692973EB657B77F40B56B481E6F36564141D71D0EDDAF6E7780F00DA62502C9
4A10EC87F2DBA24C72DA894861B8C01544C76C128632A537E9C871617B7A26BE
64BCD5B5207541D34D08480F1A1CA16F2E2F888A21C4F261DECB1C4B4EEE54C6
A9D14DC90A39B3E3C0ACD4177CF5F25AAB7D45791021199BE22D89940BD35FDF
BDE7C4F285F9BD614A00DE6825572189A19315AD3C9B04268B6A21389CCFDC5F
C3AF1E9DE106E3CC7AF6AA07CFDE69211DA05FF14547300FFAB1FD3940917542
6826B3AF7CB7E7ED91CB43236FBCC50D20C11C6929C93AA2BC13FC942C261D73
8A72D9EDF590013F0B471586972DAC3915DB200E5ACCE752D0CE0191D57EE7FA
05CC52EAD42FE8977B2DF4970EE03C65448E5F85C74B44F1E8423103611DEBB5
30443E9AEC490116A94C1982EEDF64795C31AE17B3A5F26C726618551ED6F3B8
5C5DB458FEEFB12CFF282A651B6282D3DBD1EA51A98D632626758BE5BFBFDDD9
7C3713D2D2751EBCDB6B4D935084759EDBC202C5A286E5461354ABFA8BD2B6DB
BC8AECB140BDDF39ED3609B14BBF10E66264FD1E6EAE175987CC0DE53C520EB3
7B68ECA8E317C53791E197D7688AC4FA0BFEA1865385EF78B1D0F72CE3FE6E47
5E5D061105933646FF72E8AC2B6D64A6930EF0F1FA9BD328DA2BE70941CC77F5
A98C90F1F1907585979F1578EBFE7790A7AA4CF7F6E97E1A8F30C66C22BA495F
96F4ECD23EDFF11182E78EAC5FD448E92E67031B18FCC2557726A60AC1B8AEF5
E1B803A45C0E6C112F1CD5A5708C65CC4DB4078D6097DDE844FAE64D32EC3EB4
B6A2A82F34478E7C279D48E8721060CDF3022F452D00E6C3F486108289E9F1B5
E29E5C5E73A4427891F216DCA5A69E11B079D9AF78A4C998A375108187979A7C
20DDCA027B92FBDB05DDBC14E325F9E110527BB2894802F6E0E5B3B0B42C4E29
643EC14B46645C193016C4CF81249AF3DD504B34BEBB4632F4D7E48E97C916BF
9A6BDAA24DE24D6CD65831B8E50C195D01DBF687067554D464306A44A49AF809
5E431F91B8EA9D9365223E0910BC6092E488A3488D54C024C9D1D083F1B597D6
41F1C153F22C13C33B10A1FF7AE6EB0FBB6D8FAE9E9FA09CB534581ABDDF50D5
941C63845E8C5B821F557D14FE18094DEF50873AC01A67C834C5B2CE27AEFEC8
F0D89A6B610790FD82681B0435C7EA8C1A0A48D9715AF16356A2A5C3B4C1F7A6
71760EED5D95F602687628AE541FADB35D9A3FDEF856C43D283247162C392D23
E1F8643B0BE5018CEEA86FBE5B2B3E46711774FEC1F7707C365D50FAB4B93F60
4A39107E1AF5BF14572C1ADB190399535DFB0D05AEA2DECEBF3B0A3D71FB6018
521C35916C2D07B32DEC82DFA25B448F8B7AC3262739A32B140311904E143CED
F9EEC52118FECA4C326D9D8B30A01DDE65747AF9A496EF5AE62DCFB82C50EC9E
FD3DB2AFCF4C308C9E0F0E0B6075AB71CA71ADC08570D5DE3EC220C719B63A93
0AAE383328B7794A9FE5A62A71CF04E474D5B60252DD152E0A1694B4EDD77D8C
C208D4D5EDF68A2E830DACF4A646B5C0C84ADB342A8B94BB153B1BA9CDB18DBF
7655DA193E2FC8FA50EF20ECB3E308909AE3A8DBE5110E1D36C2F94AEE23ED8F
2E409FD1491EACC670E4CA4A0DF9A847490B82EE29D475A1E4C28ECC3F08B56E
856479C4B6F4D9353365BCD58700851E5D295528EB7FC619753F044D70B53663
04116296EDC47A40EA032F23ECC57D275B6BC6BC5BFF4FA22014B3741BA64842
BA7EF54B001949483D3BE38D9FB4F96C2C54591C85D37B4476DECE569DA1CC53
2B9FC6714B59908E6BD232187139D89FD28162CF3A762A40310717779DEA5827
40E49F0880CDD248376693092414F78048461E82A63A9A4DBB219F42CC87EF9B
ED29CEAD50C3030B6E9C2D912D00754678C0508DBA86A2ACDAE6B930FB8DAF84
6931370FF1C38399C00B278B799FD5FBC0040B0DB844ACE08F8DE274CC7221A7
51E247D95BAD5D9ACE53B1D3BFFC14B720633A4E83BBD9B63477E629422DE7C7
A241F80041603CE71AD90036144449635059049FC2FE518032FC84A1821D8EAF
F2CB0EA7EFF277DD284D9F65CE83D261129FD3151C5E51D640C742F1EDE144F0
53F55B75BDE37DFB733B24E29DCFA72BC6427E5AAECE0EFE6F4D911B87A6E3CF
09D9297237758B75F5ECCDF503383715F45158FEBE490A727E970BF81334F2F8
43EB703B00BE97F434F30C3CE42CC2A7C10394B4FA2872BB77817D1E2258EB8E
4A11442C5BD0C2D2AE64840D9C42E15EC96FDA3AD6350EB8C383D4A2227B717D
3E2A53E09A4EFE530A666EE9AE0534DDF2ED14AFAE4C5E3ECD95DE9669AF2D60
E58A7295345E09512D622B23F00ABFD6759758A409DB1C7394DD3CCAC9A305EC
C299FBD9A74AC0CD41EFED2D2CC5A3142CD5DADC18411DFC4649C76F725697E6
99B40A3CA81C0B5D5BCFCB4F3C90BFB9F256F3160A370EBA3775F4284E297622
B3655D2AD5151CD72A5836CA448E139EF8FE2640ABD78D79FF72FC0E92F4903C
FD05856F457DD158F60D6E9CAFFC77013F4B7689E4DA16C4AC387CC4804EB8C5
45AB58388D6060D8095361657973BEE789B15787BF12622E98E6B2E528F9898D
AF77BFAF6D425FD2DDFCF693E462EF5BD178D748C3134D3F226155BC9D1A36F2
AFC37683C7175D9456CE5563DCB2642830EF891F67390B5E90678F7F3C2B15E1
3CEAB77811E50A8FCCAD408CB9D78C3A8E085E0825AADF5CA658B222EC0071C5
9FC20ED0E36DDB2C39A425378898A4F73255C901CDA70093DCF3AAA514B1A496
AF69E0C2A56B23FF3DBA241ED043BF3FDCE6F520A16FEC6BC543657B58D17313
B32AAD53A0A17D654540154501884BC744D368CF55C05722A9CA9337B00EE34F
824317E8766999D17EAC8B28132D2BCC01740D5ACBCB0882F35AE8A3E3B1FE39
03A941EA2093B734045A1E8EAE967B6738797AFCF77E5C4A3292CDAB4BF3A86E
62886E826B1E34FEC34A90D3FAC2AF1FB27694321CE0730E2148AD363D40FC75
EB3F94FDF3A7307F6B34819AF5EDC88C5B249C58CED5C6CBCF63B4FD2249911F
FFD0226D540527F178815DA109C80D6CC9DDDAE81CE66EBDEEACBE2D711F4EB2
4E6647BE39F450F947350E31A76FE4BDD1BECB4F085845D39491FEB49ACAAB7F
B1EDBAEF8C333AC729A8D8C7C5251B43F643B6B833A35C168C4F3EC1A6F87E92
2188BB5D80BD50F22325CBA0DE89AB7BC810C8F15E1EC3EF927AD2F5908E08BE
CB3BFA054EA84D0117290BCC7C63376175ECA2FC62EADAB244466F4B62DDE381
2AA8D94831947CDC43C756A23827716E1C783A24F95BD0EFFDCD8FC061A2D99F
8C01DF70C9ED68761C112AD3010556416D3ADEFC9229AC326E3422D24059D79C
EF1D6C55B3F1ED51C694C79F3FF3AC9B19E0B170469C3378D351024653D62366
3F0C3CE8A597F35557085F0408A462B7639B2610BE2FDD5E67DFD5333621BB55
61E9AF3C9B374D73F52611F17AAA550E93CCF9B4A65D410D9F9BF7165218F0C9
0C55B3D9BE5338BD4F4E7E8535ED02349884DE2E55FFF208D6D731C47D6726B7
914195874CFED7C0517136457774C464F3D8420601DD64A4B74F21DBCC8F9669
7ACAC75B1E69BE9B771070E43CB1FCEA21FB89065ED98CEEBC0A2B16D5EBC947
A0ED578B354E369E7AD534BDAE57A86ED294AB6E397A0BDAAF2DEBB2EE0FD693
36E7070E3EF345D6D1EDF0BF67F95A8773FAF9ABED1306F7C5D34E2B7D5A9E4F
F573556CC711C5DC5DED743A7ED41E852DC45BCA016BD810EF756156A332F6ED
55AFB396E0C5AFB06E6C5B432D12DC2CD5FAE581E04BD937DB4BE342FF23E08F
149D9FCF05AD37DE55B277110EC87721D864EF9C47AFF828B76C0C9E79D906CC
E3DD6D2642911FB5137597F9697B34F8670FEE01DE39FE83DBC1A06B49DC5E9A
9FFD534CD2D73904D84E95D6D79E0FDB6BA53C1C524097F7E107000266EE4E1C
968B32BBC2E17B75CAF20CAB7938D921D339FFB1DF79FF1E8C00E7541B2DB7C9
E5641428336BB88CA008EF343E48EA15A6D4AD59014E61259C607ACF39E5B65E
D5AE1081304809DF523EFE64D400BA4D227736637189D861ADE17A55B76D038F
FC64D4CDA9D2C72DF5CBBB91484CDC022ABE678A7F2E298A7FAD967A2EA7DC47
67F39D23C61FD5E78CBFE7A6F095480314679B3B1962D1FE9F7291EB281588AE
F77FA121D1C64E3A6BA529C1116FAC71CB65CA8AD5869CC9FD7C4C194AE8D5D2
0A72540041AC7B05A753D4A64198FECDCFA99435A478B0BC09CF1FCC9E7E83A3
AF9B7752F69281A72D0FDD5334B63F8D214124A76F939EF4215B78478AFF62C3
E3342FC26AAA58D46BECFF52BDC159CE4BDF4907ADA234C6DE77DC4957B68394
7D545F88FBCB7641550C829B842802A4139BCD07D076306C9E6F867EF86DE95F
31449EF355650C284961104DE93C32E699861F30D092FC6BA87AD98A0BAEC9D3
F17AE9CC54535ED87773C6B3A8ABC8ABB13ECC3B249F1878A8F09EF1C2FFD235
E47595EB6986213CCE3FE132472DDC7AF9352D393A58CB456F1E32792C3F6C3B
01AECC58B5FA08F7AC203D58C90DC6F1E8D3FD25D8CA59CCD3581C0EA8EF8D48
8E75BBF597DB49E3F42610D596C1D91A878C7386FE64293B5FBF0A378306459C
022F4127F2E220714EA9C30632A54D8FD7D1420E3F5F92C0CAE0749E97B7A3BA
906F07D41FAF883A6CFE045B60E7795A4E3B23493DED51FB514D0FEFBBF1F536
06B8481ECD5FA685C548E0E968C0D453945F999AB6082714B4EDAFBAA48EE80B
D0A14F4F90FF43CABCCE04E27E3D9DABF95CE121CA4B3445BBE45CB5402826C5
2949BA958A4E4E57F1F0D6391B49519D57A88C79B55D644CAB29554F2E31FD68
43FD8370A36EB26A2B905FB8E060AB87F85696AF202D90C6A91D6AA55A17080A
DA886EDFF49FFDB283EC049D3A60151451D0168D1299CA31BA75666C0E78321C
9CB5060AE1BD1ED643ED19312E207A4E25603286C219BBF030BA70BC3F6F857E
F419616A0D2E3D646143431C318824FC3E5E4B3BE35B72E214974B2B275CDC9C
AE7B507C0A23ABA7C4DBC2B2F72F6D19FA0C4EFE4E73FE9669F35AA9828530AD
A1BB60B87B9F39D486C776B1FCB57C5F991B56510F9E30B9B61C6C54309BE136
E27A372AF4CE5A6460D0B6FD7600696818D3D3CD78604674650E4B066099269F
F7731B8B087C0C1D51C663DBA72B2A6879C6F55EF4503C369946C3BAD318835D
4707E90A0340BB7B6AB94DAA37DE55B277110EC87721D864EF9C47AFF828B76D
3079570C1792AC0CF18BAF9E6FC668A573248CAB68725B62B12864F6E2B0DBCD
892E146924C758EB39B567FD99AEC3B06FDEAF2A75E2CFC5F6D3D16AB9E1B599
54F5A02D6AD172CF9DD1B8DC9E23D1751721FA293BE262D4719DB87520299E85
1534408F39443AA946A7630D1876FDEEF847285162043549D78E2B9DF1ECC680
AF5AEFC6AB74B7310879760E6E7AF5B06207BC4D8321734432C5BD91CB93D7D9
640B9469F723C84543BEE989037E08EB3BA52B38BBE71D4A8624F7E5A2AC0BA9
E61AEB6C096333A409FF2E3952261C0205AF3BC52223C47281BA7C778408057D
6AAA2EFF416F401936169B51765AEE96012B56EBDDEAB533317418A8E967F635
ADA03D2EFF80D461C156D1EC4A3D0035E2A57BEBDC39E7AB9B8A6C79FE207DDF
F6A166F0A2E988FC20F16EB782F9BF109726F7FD19650402E7895F3C8D5E18DB
68271F9A0B3BBA37E6285F2577B16B4C3933695839961674CE2B5AEF26AFE679
0CE5D833A1E4C4ACBA7793B1FA243568C3DF17E4F256ABF14F0EE0986BD86BA8
65BB11FBF008D13A744CAD6F6F5474C8E9F0FA8A340FD5DCBB930E177C708F0F
49D311B306F880D67F16B316CBB5CDF1977988257A0ACAE85F6B4CFED76CD146
8654399362FBE876D8C50485E42E1F62F65694328781509A5C4F020EF1D81AA3
D7E7FF56C99C66C9CE3D5F6EB1C5D7524C125C86A63F7AF293C8646C11B43D85
601ED4EFFB48E83B9BABAFFDF4A50906FE329A1A6DC3B27ECC2018FD2B609EAD
2728D71DBB164685F91D980CC66EAFB9E1E29EFBD9F0198C07B86D8CFB0A7D19
F73EEE205A47785EF3C453E6F77A08AE9F92CED37D506DCD633FF85AB8335BE3
7225FEDD4A7A8C40ABB298B4D253969673DFF8ABCEFE681765B54067A2EC3E76
BBF1045055F162A009CBF703FD54101BB80A110A48FA929F48743EC18678FA41
4D2F33B16A28C4A677F8FF7749FBE31D6CC6B63FC347F5E8ACED4509C0A4F07E
14EF926255FD030246AC687884A3547DA00438951DDEF48BD7D667D4808E9FC8
F28213E5C3BDE4B435014829FFFB91E8663C31910979151A2DE3027DB02BB080
926D3C80C2455D7C0DD3BB0AB14C9FC65A584CBD3C65762F1B3BCCD6BBCD7921
89A12FC9366BA7134EFD67A22B4B8B185A11469E6953D87210584A891361BC4F
FF499F27B34B23BCA2096671FFEE9B7C4B058BE8B5CF61805BB0D39B53DB4486
9CB51198CFD8771A99ADD18E9C3289A1AE43690B051BD5EAFFC3CBC07187392D
22FFE55A492871303500C656827B3B49A5F4F7357F9C88B45034BDCA7C38A18F
0BE1595C10BB71E57F70E9EDD479DE21D36AD692841E8D1718EC76B4126B1DEF
C3C980F9B685AADCB17B47AF0F39883F6536C3E621D99D18CE42EE5A34FC22C6
3D9427FE267051934E366F7C7B2CABD2C65921BE9A9B19F650F767A53A82F9D8
3704FECC98C90250928D193AFC0B77BB85D026CE39C8A5D9B970AC4A2E427255
7C5065127B1CABB84D2439BE88596B165E5DA6866E080C9D1EADB479F7FA8379
7FE2BB8B58C67B5A49AD185BC3487E8535ED02349884DE2E55FFF208D6D731C4
7D66681A8B26305B0A8476187101E350556D777258A7BC232C6D61249C43A10D
5C2F624E2116CC9174AABF8FC76C73A1FBCF2E2FECF757FE7DF45F18E7E2CC96
7C95F21F10614ADC97DA44BD9FA34500F72B7B38CEB8258173258D969B12F44E
4113E500453BF785898CDE9DB44128799C23E1B13B03CBA0C37EC251BD452805
722C04F19A3954F17FD24038848D6697C68C519487D2C0D18EFC778270AA1ED8
CB928BA33D61D0F17C1E7D2A1403C4ACB7DB9680D1C19112C669F8F85FDCEF2A
89AC6E6A8E718F558FC7695D85DB4B8EB762BDA2CCDA2F5E5ADA62706D4C669C
EDDCF7538EACD4A65A2D435DB47524BBB52D5F3F5745A80A303950EF8E8D07AD
70A62B8B43DD7108277DA2C7B9463A89A504AB57C377BB062C02225DCA03E648
59F92A8570054C243ADAB55F1BD0A2AC1D73029F6E0B5F7E93D839B8729EBEF8
8073E20168E2E404C35FD2BCBC0C8B2C23380A3492F87E469A8D4A0B9D7C5926
D1B06E4D4CB67F2E1799CC7AD881CD1277452731409EE7F5BAF3212A6711889B
9BDAC517D8BC6677CC095B22141C6E3172301E5F59D0BA242F5FE84EA48A0961
8DEEDE0DE951FF66ADE17A55B76D038FFC64D4CDA9D2C72DF5CC6925397C3D4B
3BC97F1CC3EEFB3E577C48B5548AF394635184580D8132CCA0AF6111583071A3
40C757238505DF03259DD7D8F3B3D6F433B5D663ACB77850F858A12AE2605171
C47A257EBC1FA6B40E10B77C81889061E66E53E1CDC599E8BF2CE72DE9FEDF54
7B68A41FC346A14E0DD825BB14B6C71F406733E7B606F18BB772EF73E44DBB4E
C891E283ED970B130C0A04502D832AE53000DBB39BF9D70B303E2D6010F849FE
4E17A69F02E7B4C69CA804C2CA66CBB224FBF95B8DE8FB0274CC120718A9ADBC
8BA84C0089676139B95B6170A1856367EE3FBBBB3212CF91BBD728D3FDB15075
E1A6F45197571530C9B48983CB57023DFDF9ED71D4E41598D5D59389340D67B1
EE88B7BFC195EBE60A0D0CFCD9EA63D68BF541CC8CDB125135B653BCDF199F90
DF5B338501403614E907DECA018315715F30BF915A60F7C027C153000E975E75
13D0156D21727A0C5ED8C8CB4191E950DBCCD311A20B14B4177146C45208EF1D
C1009C1E9D28B71A246B043CE44E65F6FC3094DBF0F028FF400BBFD75E4B8650
BD529514561CFBBEE6B2EEAD5218376B67951041CB6C3B3F93392703BD4BE770
072ED026236425D096E84DD009F55A48C449BBE556AABE87F5FF7CE82821390B
2F3CEBAE20DBD257BBEFF0795FAD09FCE908A5BAC001904C1FB4D0A379653115
E1BB3713F94D198424FF07A0D1ED3B50A1FCD29824C5BE799C9F485827AB1033
2BFA0505B5EFA4F5C59B3ECC15FE185C146C3B2548A3018AAC559F33FC9278A5
42AB27CA175059B26DC2CC164A385FBCA376332D27BBFE72E01C0FBCB856474C
1D32ED249BA1FC48995AFC71334854CD26548C24AD096915F3D1256D4F620A7C
BE61870C60DB75CEFF3C692BCD8174BB9537EDB0F8769AD434D51AA87E3A80D7
5383603152011530B8ABD2294D02A125F7254D4E70B69FD185D5DA60AA63051D
D7BE711EA9D3F370A49628C217C17F074E0E1B2739006E78E1E2277050B4AA21
AC42B13A3B38664AFC53F5576EDAEB54B01B1EF54A3589AB493D1673B1A27375
90A0A17D5D39D1039DD72B814A8C332C88E38324BBD2D4042E32532BEB2BD6D8
A3B723539698E5C6EF96832C8915D0C0E3A338E5E8108DC4406159F721C23335
89F78A0F7496601C3DEC537A7E03BD98EE97FA23D768F48EA462E9C8ADE63D57
D8BE2DC7029117D29FF0A396A4A4AB4BB2CEC3DDCAD3F815611D1498D2FC4219
34DF2663935BC91CA74F32E1B62954843A34841FBFEB762EE097D8190E80B9F1
46170D53D5C9B29D359A568FEDB965DF31CBF39003945CD7354A23DB779C68B7
30D263835BE9FA0240382170AD72EA13910335910CA61F5B4984C9A127C4BFEF
9A3BEC10008C71804A8D2F25B580BFAB9F2D969CECE3555FED25AA6231DDD2B6
A02530540DBD7FF0FE7EA3CBCCFFD996C0A40AB5B4758AF32EE889194AB0C6FC
BE00A4ED5E1F5042DFA3B1458EA90D68B2B13A5D4A79B827C93FC547E4730E85
75200F70D3AE26F23322B5F5B1AD9F607BEC57882F78857C87E574E30710BA97
31D8F27AE69883663620836DA8BB5CE31BAA722DDB36BA5642CE4117AC6303FE
FE0AA5201A69D83BC517F09C0F7D604CB840E814D146FD2B6C69375E9E0B1B27
2B51BB1829FEDEA5CBC1FA7A0F008D1751CE85D3677E2992991F8911FC30F5D3
C51682D23ABEC2E24FA835DF271E3C376B5ACCACC9AFD87DC8C6325F0460690B
E677AA6DB7E0250B51932C949C70E9EE8CBEFCC44FE0E4FCA929E0834456AA86
D69CE2FB17A3F10D2A23E38AF27353D2850F28C2C13325823461B49331578ECF
6BF06DC225B10C6267D04FE107ABEF4789F1350905881AD6417E215513F8A822
4D0EF4BD41515FE91E1433A56A4B1C717A38CF9C88CB71E420EDF0786C7F4EF8
C2A5A242E84CFD4DC50ADFEA0C2CB85F421DAC67295BBC1A9A2021B064295C22
677DCCA7ED538CDC0263A623B9667246FC2462100547A0C0F58A5D3AAB51C16D
1E2C79A7488B9C54BECCF570BB1321CA0C957CEB198392CDFEAAB4E9A75A7A48
17071CADB864645A70AB4E3C9DFF0D2BB80CB291F8E334678484A1683D001B4A
49B2CC4717EACDF33AD11FEF95ADBBE87B2CD962DD8D3DB70C51870D9ADD147E
7E9A41383D1E637B2C40CB73B31B54F16384D54058913521F90293851FF9416D
DD82D1A1D297D1973E6125FF805E17D38C76F5B6A4D40817AEEC11C8E1544DA7
4B369425D80E2A4707E6D31DC14AD4D5221259538F0CA3263BA0B22C5E531A62
97609E81A1F0E02D8D3A3C8FAAECF7839D20329CBC5CA4057D1883C61EF03346
81CCACC5D024F39309DDAE771E8F801CE631C747480C8C7504D585BC4A036D73
CCD2AF15033884FF18C918F7956F817281F619F322A3635B283C21E23B4554E1
9407D4A864472E90A42B6F41EAF8E72E41A2EF916B6A2EAFB651D0E490A79CB8
484AE4B3A53D8169AFC52C182BDCD360996564FFC6E3383906248E65DA27795E
FE5F6E32A89FFBC59649CC759617E70E0D2DF5EB9256410A727E47F14F7B9E53
0ED94405E886746ADD81CE07ADE6E6B2935B26BD94ADD389BFC649D88B3883D4
DE05CB5C6CE7C221A2038461896FF0EBC22DE7D03BF71AB474614D9A42140FAE
137A7F48B332D42DD24923B9DEB2FD22CDF770BB77CEA13495326FAF2753E541
370FED9E0F297D698CCA8215BA271A098F840FEB4D405832075CB13E7FDADF31
737F3614E907DECA01831EB304A3B51AB7386DEC1D1553299043885CBFBFF18D
6F663F7FF162F64ED65962C52C7A22BF7AF3BC490D254621308D575A409EFBAA
E5D96D65773EBE8D69A606A0B7451EB3E85EC2F094AB06D427B5E1E7412B3369
336C722015ED76FFD70142E86EC2265134BAFF2BF705AEB13BA733B5C6494E5E
3B14FA09EF6982B1220A197516A006024926111FCE9CBA64FCEB47C459257725
EF093E0E41A764CE15CE5FB25F9B5007370486152FB88A27DD9F869E42399138
0559772A4BAEC8E6A32DEEC19B54F971D5197FEA8B0CE24F5AD8FC38E6FA64F5
DC5F5C77251EEEC97E68343B19F132F844FD60CF31773FD625E7BA82799AAA89
8D22AA1652DB46555E053696443F9CEFFEBBC29BE7E6F986A1A42CACE5555E3D
323D084FAB03EE96EEAF58EBBF45E95CA7A662582B87A0AB15EB0E3391781F4A
AEB20AC2440FF9CC43F9F2709E1050E430198D4A0802AB1786A8947230CF372B
F9E3365A300B1B5CAC415B67E99A0DBF8DAC7B5F39C90745B3CF0A61FF3EA499
D0494AC6DEEA63CEA2C708BDAB621ED37F36B78B774D7D5C819FB2C13A6427DD
2C92073E5F6A2C16984A1FD32AEE5BC8F706177D8B81EB0E0862BA43B85A86AA
49C57652C1FC51D5BB79B026E2487EBA762DC50512BBCF9B42A3FA000C2ECDFB
697226B7CE6C571106EF6398CECB850E5687F1307D70CD400946D99DF3DA042D
07817D5B6EEE1D265D053E2FF9EA84774F0860C99B50EDBEC3980B0CCC18890C
FC9820CCC2FA8A0D50E67175C8EA5084E4FED0637D79FC8F79C31586588F030A
8ADD95AD49D2958D1F43234E8313B88AE5740C603A20D269BE9F82045151E28C
FDBC5AA5FC3DE14A8793FE43F32B0DAD0B42E128E0550738740E4B4DF3860431
CB0D60799B44D28C392EBBEFC17C5AFB7BCF143DC8E45F53C1E5B144CE365C50
57EBC57FE82317DE41244FEA464DCE99DF58DF6EFF5F8E95C4D7838F12914939
E3C161976C14E6DC400011459478D62521D6F189FC8F0E01E07260178DFBEC58
7957C26B2B1551D7647921828BF269ECCE011D431D1E90D75AE565E857D69257
0D2C6951438E3BD156E6174C5C555DAD5EEEB9110AE468D1CC587A732BBECDAA
DACC89C52E4241BB747C37DB43119263FD591E7BA8126B689964B87ECC23E83F
19351612FB0B1E70DE02B54C1B985F03669B546C110680DBC9E1DDE716C4A599
73860A3510E482B8F1F7BB9DC38C6306041A2FCFCC9F3776F03030D6C3C4F978
5345DC4DF5CA39D3651D4980E97B22C939E53FCA5279E6D6CB8B00D4CEBBFBD6
07945430862ADAB0BF07ABE1C88808D56505A77E31A11EE8C9681E3241D35742
3FC99A860EC434B5B257EE5F59881DC2B5C1F5B4C78F9D234E2B8BCE975B2C5D
2AC4BB0ADA4E76FE8170E4BE9EC3AD1CC27F39C878DD86835717B057F36FC89B
572F045852D1C1A184E9C1CDB236C429AFECE8A5A9273AADBBEC8DC3E4DB074D
F497A0A78C62823FF461B999C85AAF3A2346EA93FE7B04414B71D626B84A999A
5A0D92AD7941AE16EF07E5A3F279911E3F7F591A28052BDCC3C2BCA83E140FF0
26BA19580F998DDE3588795CB7E7D31B14B33F5A1346966AD18CE43609C4B17F
3C0B767B454C78CA2855D18CF0C5FF21459037FB85853368DB00DC1CB93B4788
83A74F9DEA8323ABE3BA4E5F75438191A73BF6B637510D0C652E5935691379CE
AE3107D7C04F449AE7AC8CECC9740B2C3C8AF32066397C95AA2B88FC4001E690
86A3A0896DD470D4DC49BF5D7E85930282F102E66F4AED26932CB44AA85ADF6C
9108935595DA856256A5356180E60A1FDDF6B44A2552C20E9C17F1F3478D685F
972CD93E6CE310DE9062984F6951B5AA2EBC98536501922110882D7ED7BA6583
A6C2EB5F2781310B9F71EF1D05A871DC118C488F11D9AEF8DBAB34EE26443381
C8DB3FA8EBA92F0FBA35589BACDEAAFEC6E0F31862296F17D9EB21394E7C1B7D
D226CFBA55A428BCD167EA1DC8475192452D4DEE67471AD76F25C6AB3EED42FB
EB0E316AD709E0C9E2F1802B93E6208D6555416F71253007B8C2A6733B886202
CB9F5858F7D48E2C2AA8284ED768B1555C02A867BD9116C0E58457A66912291D
AA0915E7D640105F3E37FFE0356382226C92B9537DF8C4F37383902B4E16617B
34A15021AF9FB97DE82874FE58772E82FEE206948CB03DEBB636E211FE8040A6
C037E088916D86F943E2F31BFD291BEF04BC5891D8B2B9580922A59B2C6C09DA
9BFB01BF9A46BDFB9AF16C28B522C549C8388A64766240D13AC5159D3E204DFE
881714C36315B9C281B5F44ACB5CD2EDAEDDB0C05EF9B800AEA43F36617296E0
17703A94DE4C32329886F1F84CB90EB3AEA2512098FA28C6F2581A3239EC71C1
ED8263707E8AD9DE9D9D3EE03908AF2CFD2E4908981F51AC4E66A3F826101D74
DA0C8ED4C094D0E56E9499AD2DA32386E6AA4B811FE015A6150680EF84597F1E
5486FD79F660C4DD1D5F3D7F7BA6F533D3AE96EF148ECA646A8C3CC88384C7E4
3AE38988F36222BBAE11B6FBA29AE0A974673C2865DD78234D8B851D3FE8B9ED
08ACE959392226C2D9AF9BCFA3C3E5789D5B364AC04F853C9662EB595EA7D095
A30CEFF4374320C4EE81FB61511D39BE1ECFCD0A5AC5D5D2AF77D33D764AAE31
588108081B45B0FA90778B9FC5BB4844563C631C4387E4C939C9290464242FDD
2586F2C4BB86FF0E9EFF3392500F5584053B18D3FEF7BD471173F171FA132A7E
3A8CE9EF8104E51E1A5382BF37B85E5136962CD76766AD76D2B9D320CBD699F1
5A2671F123D485799661E8A45D1E257C3253CC3D952AE94F30C00D2361123B85
3030E095D536274984B73FD1A0039F86E8489003F84951DB804FB8070D31E6FC
60F8C7961BA96362CA771E3DB9DFFBD870F93163CFCFF3CC0B052242B13E4FEF
9FC126F2C6CFDE985F7F3F727C28A8F51540075E8422CB7F2AF125AFD821262E
3BC94EB6977E0EA86079E7BFC0EB9E699F90281D777D34E79689E51189D62EFB
BE20044B7B8038A4A9CE91B2B4158622C50E536A9EE689462B4613D492827333
DE3ACF7862B620C9D67B61BF20739B025AD193071140F5FCA7025A2F8AFCEC2B
F71E5668383D1139CFEAED6935F88625620CE2D7C64250A8F2D0FC7D1127E46A
9E6313BAEB3A19493375F93917170A43C500D6BEC5D0C7C8B6147928A0CCDB84
2F2F84219987ACD79064415CF099E2D5173413B319D17575329E62A135327B73
C291210476CFC5FFF86C197EF11C56A85BEE25C61EF24054FB0CA433D872CF0E
16DA8BC1AA67E5337538932E676D9E92111587231C3F49C2A83D751CE16CB775
57C39A3514B89505110D2DBB9220CE04B94F73ACBB4CD27975A7D842654223C3
2BBDFDDBA1C764174646AD7CF22497837AB3C2B0B2A85823E7169DF80E23A6F7
EF4ADA5F16E48155E7EF2DC1C36937123329824946320837A6F8F67AB3D3FC68
C8E444AD667F9BD757CC7D708592EDA8C1D5D953C8ED0FEF53FFB91E213252C5
8D39514E9BF54E7B0F89A114C17D7BB7A7D771AEA61BBCCDA82A297301E09707
AB2AC90AF731CF03E0FC58752B3FE0BF9544122430CA8122B523648D1111EBFF
810B931332B6D22D8E468C62DF2BC059F9E6E936BF6789A39BFADB79BE2FBC90
B06B5CD552932CC7FB9769F4F7B6C08FC6023222D9FB9F4B02A814FB05996D9A
01BC263FFCEDA7969B5ACCB0F33CE5A0AA7E7664C9546524A5EBD615F7C5168F
E698970152E794194E97A1EB21EF743E064A53A585C8FBDFBCB680BC0998937F
297CB8632829AE73C4E152CF08CDCC2E483E112DAF52BD9C89C5509E0B8D1357
4FC2C16321FE446CB294E9511AA1C5BAFFD1B11E93F60FCF857C7BC2649AAB40
42B77A195624968FA19415D8AA4271BD58E19FE93AAA4F12C642D0F539064B79
C1B35FE3327C5BA34387D20D1ABD88802C8B92BED72545CDEBF0AEC2D470031B
710B535A8B0D70647B50227D19B694385AEEBF375B074D3457BE61468B5CF311
1C0B8A3BBD60286AADE06BFEB1E828255CF22D3D1FA529FE33A71FFE65DCCA47
FBB31392FE4F5F94724C1B4F94407B21AD14C38A072C6AC3B3D16BEE28177D4F
FB06520AFBB10240A344C911FF165960436A8BDE59944B035538FB4BB86879DF
E1185BF04BBE2AAD1FF41882C62697C409C18D1CB04194BA82F9C63597B3E0A7
FB7F2826B6E7A49B3146B6996CDFA77691D2A96C86CD62618C937FFD461A7C68
B455F4467F9DC59C93CF07080F5C472ED4EAB880A7A059B91756AD1171ED381A
ECD77F4D887AFA0963BA6A1CBB1FAB162679076CA54F2A762F64A11900664ED4
E6D4DAFDF0C64F9446C356248B627D21164292A62CDA15C49DC36F749242714C
6D0EE5AF262A9B23992492626D803FE071A2DC7981C82B896682D55F6343E2E2
1E4F330FF9D869E1F2FC3FF4B51D4F8CC62356886E9B27AFB1ABFE628A656776
8FD3A70D9ECC410505B03C28B5A0D0B0C052CD7679FFFF591C227590AFB51717
8C9DFE59CE8B036E3B067B364E0F7072DC1826C09695A77009E865489ED903FD
61FEE4772F32C09890A2C4B2232B747552E1E3CA33F4B00DA53B515C279B21E5
96A4C38489B465FC8AAD6D7660054DDEA055239C76F4BD11A8215CAF3D49B84A
FD965BF021D6DDA71DBE46014A352D4CE11AA45A8E98921EEAFD82A9516D47CC
0D6183D68AFB18890918B52AE133CC3977DD3448946BD058A0C86C7D9AF6F3A4
EC26ED6581AFA8B6D5AD4F28DD5B022349F9096B6066901ABE065899ABF96DAF
189873BBAD86DE9A708C950A51B8BC5DA5D6AE5D4BFADA6A5F92A1A038236D6A
63C0650922F21520BC9388F0377B43E5DC9DF903D62C8B5044530B33095755FD
69A33D9E78BB5FF7B27925BCE1C797FBE313E2AA15FE971031E20DAC566263EA
5133CBDF3E37A98E26195BEA2BF360AC155E18F376175AD2165FFEE1F7B1F47B
D893BA857E25E91F6E379574ED93946224169065679D58F0E3F0579998983964
2D041F6F00CA4D7B61E613C440A686E566386C48BBFCD4D9039B59C3CDC8D90D
AFC59AF724EA4A600E126FED9A0BE98145F8D823FD3A1C8FD75D73E73F25FB75
6AC34A9A671EE439272AC4AAD584B6688D0DBBA8BCC32D52C3059E127A279AC9
D9A009793B1C1FA056374433FA2129B1301EE091D9F7A4D345114235F4BA2895
28CFA3DF9F5F7175382997B8DDC1BC31FF9BB31C292003ACA40EAA178D11BE7F
34711A204432DA217576D98719C99D9BB3D1C77BF9ECE6A91142D95593EF9FD5
1E984FF26E329CF3D929D1CBD7B767B02D64F2C1E338E66C738E5E56E3EA0BB5
CE010201005AD0317780B06EF63A012F6D89A30208BE14B7747A8C2FC981C859
014644862B91D09D95A31481563A639DC65F914562F1933143160D1328098681
49271523CD805A322145A01ED56434EA4CFBC6F54EB185FDA7817CD383437E1B
961BAF0ED7490C81CCDB1A4264B946DFA79309A7F87B1F8055C98B85349C3A72
C5F7B479782C00EC18B985878701474825502CAB554CA4065043D5B38398C388
47C5C2A4EBDDC4878E19695600FB49787563234276EB55A8EB42FB3AF8A8C985
BB4374AD1C0E33D4270296E3705B48373EE14491A03346BB7DA151BA69722BAF
78DE86A40ED5DBDE8B5E537B68A693ADD2F91D5FCE4783729578878D2C9CC4DE
CF246DFCBBD6E0011E4289A675DFE39DF546A3BFF3244C90733BA17E429C4352
233B804496666ADAA0D84BBC6A705A9C77B52681FB4FD910C8D37E7BDCC2C074
C2F322737FBDE1BE1EC7065EBA0B028ABD6FDFB38BE88C6F5D704FB871BC47A0
418C77FED6B293669B9E9683EB4C4567A7BE6F097B40A32C1045FD7E0F586CBF
2D967E468B2E8E763415D2C7FFE48987D716DCFB6FAFBEAA28B0A27F096F99C8
4515CFCE8A2DF6DD952B33819FF58DC3B451611B1DACAA91135FC80B4FA1AA84
73D0572495EB8FB49019AAD648525B66C4DA164EC2F64DD3E2383554FE5F16DB
AF19B455392EEFEC695D829948C67FB7047537C33B4B59FE8B091A1CB7241E18
44B319D5C1BDF34A5CD888E13C5F6970BC17C3539B2B2BA8850638B5AEEEDFDF
9EC9CE6DD9B7D529854E9CA62C62AF22CCE26B31363BDD6EB7644258E1A49C6B
865B75EAA21C02F7007978FF7159E0A74E3AD3F267F646450EB7DB5799E8120D
2A486245E55D5610C7969FFAE73E095BF64D523EA5C09FE173C494EC80191219
CEF2A45184E57FBF18D08F3A33EF52E6CAAA53CE4751360555149EDEF99EB70A
B8A20C2518B02627ED62B8EE1C63E7E9ED6A4FD98F6F839491020D2028768461
C4F539111C09E51DF76F3EBF68C51607D588F74F08626093D9491E4BD2644223
7EE2121C14F116A1114838B333EF11A87B3B050C51BCF03328E2AF74242014DE
38609AB9B1ADBFD3E20C6EF4140E2744364834CE13CA9FECBA2DFBDDDAB41A10
58A0472CE2059E675557E53A7F82EE005221FD82E4874C1052D0EBF84B62EA1A
E3A900879B375DFDB279144E9FD272CE6A23BADEFC0FC80B646A2FC08C849A9F
CFF7F8EA237FD355ACA0F21EF5CBDFCDEF457F85CDC6926E84918A39238AD5F2
A84C51853099A987EA39A677F38FD2923A2BA43BA9064D59C171AE87BB22E474
4AD772AB4C64DDC84B9308951D2E3D03E1F9908BA097A23140E664D88B56E6F9
CEAE61FBB850C398377A8B3C4DECF762FB6ED54CC9E41E6562CBB4F3DF32AE56
3383014DAAFDD92534DA0E0876FACE36FE6F39331DC4E3A3159F4364C09B4071
FAC531D1CBC64BD28DE9517C0A6B7E69B5EF887D0B6044853C5346D37B79D2EF
02E958DE2F64C1DE6AB9D8CFC684B943C926F9F9276268ED0F22FC3BED3E7A20
A15D4EBE57A5FC3A7182C58F366E8E98C459B715DD5462BA30D9734504DBBD67
3F79CC1DC21B27ABFA53F4AE2E622FD9C63A7E021790A1443758736475A38D8E
5132C5733B4EB0AB41457847C5EC09C01622C089AB3CB216A5C27D61D073139B
BDAB6E38DD0C8EA24C71DC0D1BCAE5CC377E105C2E5552F6710622AE17C4513A
CBB00E392472C11F1949427CD9686127B7EBAF076B4450D4A5C230E43E83C1FC
BECD57336E8D6104DFDA236D8D4E7B48130E59DA01E46A79ADAC47F93E3E7D63
B8DC952C181A024FA45EE3BC19A0B83A23617EFB674EEB80B449727229C51AC1
80D4E0B49CDA2AD518E0A4E157E949296F4F4BFCE07C464B7E26A3EC22FD954D
8F2E98627D5C5CABBC2EFD97442931AB6DB7538DDFCE939A2CCC094AC64D8234
BEB4BBDD4E0134FACCD645919FE70809F527C12FFB5E7EF526C550BEBDB1E4A7
B0185AD1141E7F83BD54064E25BE15AEC63EF577427823965F9090FA47AAEC45
621D3A4BD9F0B7E0B278A1560702F8A06D2840649255664728596D8E8033053E
E101BCB7B0D138205E1306A31A05EA7775700F4A6E371DF22655E13817F9A12F
F3ED7C6B4EAFAE848B962866A572B31491F9BC5E58C8A93855793FE2798EE554
3D775A3A54F98A822ADDBB620C0868AFD6C9916FF4F83185A2B9793C0F5FF73E
6602CB9F5858F7D48E2C2AA8284ED768B1555C02ABF30C3FC721D2AB878551E2
30E37FE21382B89450EF7F5CBD80228DBE62EDD18DAC476DE8F8ECDB94457791
7AD7132653B00D7E484A88A248FD17FF0E7A075A554F9ABC1DBF427E51D901EE
474FC82EAF8FDCC119B80A5EC07D651EE32B2425551E7F03D504F27BF98F90DB
C75FB6B0A4BF735C312FEA9A1AC7289E4B43B953D2EC568762D12FB302659522
BF22518338243E2958069A906E35BA15AA7159C81527B9512C40DDC92C489AE3
1BC9A983B4D3D3A181E59ED9410F4D901B9CD2061595FB27C9B1765AC7B86DB9
C4EF5E16FD6E2A4523B99D267AA8087514B726D9A5930533FFBFA7D3873F8ACB
0692B310ACA0DC6F0249234EB51EB6E52C6840365835E3C5F9582E3BDAB20672
53875DAE598DECD3C4C26E19284730BAEC36E69C2F2AF0022CA7C9CD80CAB18E
2F8F36CEB9CCF1F475C6D0892AF19D50CFF1C8E6F121CE477BC13FB3235F563E
3658BE14B4C59A1AD1EFBD0B82213FD463BC757AFC8750D960797BBC187FD331
34CEDB86D1A5992304E473A07CE535607DB32A001779973DEAB1CFF05FE0BED4
795D9194F80315901081B98FF3AC06F5C24B6A33DC92C226182982BD27F7D36A
F358986C5F85EFC3EBB3655EE11D8832F9E827505B27AD12B9AA2BD0774AB3D7
4F9B3EB9C8CD94D505A649104701909913270E0060FE23E1D83A2DD204C9F508
DE64083AA7CD0A8F3C0EEA6E6D9A01EE3E57299D8A4CFC9F68C106D0A836A54A
A3C6F4E4A9AC0308084AC2A4D0FD15EFFAE30AF47621948723B390226C089493
E3B7C7A3BE9AB31FFD0D9227EABE6152905454CE0EC7494D4247243DFA8385DB
C5760B397F0EFC678E36BF66A4EAEEA0E6B037497DE8AE398F0ECD902E34E26B
D22862FBB603738B2776D1C11C1CA08BC250C82B4D1593310AB5CF3C2E2A3768
C7DCCA5C9F6BC48A4E817FC8A4F76C9B6DD93C12E49D04DC071AD33B11836019
6DC6527835848FBD6FD2D909977882A9A1E80EFBD820ECF07F9BE1DA54BE9178
4B721065224C925E7F593526AB218EF1FCDAE565AA6B7DFF792E33459D996A28
76AD4C86CBB53775A35F4C4F79078BE326D09EF99C25BBD192FEC633F4D753F6
CC0F03177916551AC63C78F5024DC9E3311C85C93E8E44E6D65CC7A570F6E1AF
C945D7CD83D64E24F517ED326030FCAA6F3262DCDFCAE93B9FDC3CA3A8571D54
EDA7D7E39BFCCB87122F41D6F72A72D5C7E75A39906AC28A3DA273EFEECF9175
8E02FE252D1AE7BC6B36475154CACD25A07C74FEAA2928802611B3E6F2EB5C69
C1005B864AD5B757C661F15531E735F35D57B4C2557C27033737A162B1C30CBB
B59EE0981B0F6F83CBD21CAC6764484364FBCE6D701FB389257B8BC393CA1BBF
12F6BD2C48903EB29EACEC9D81382A5996BD2A9B9ED248CA6EDC8DC08C7D4C9C
F06A7107F844B8FC493EC72ABE60B076AF8B8596F841E42A5BC60D93D42D0C28
4CBFFD7C6573996FFF0F45EB89F518E225C5ECBBBFCB7D5E1BDCF7DF04DF478F
135700B7E80ED61FBC5624B90F8DCD06939764FEC56AF0E96BDC8237A7FE55DF
98DCBE60666EF11D10EFD7E85FA038927FF295E0CEE2DCFD71A8A10F8AFF617D
C5BB52DD2ADE463EF4EBC6F97D187D7F790F6618D40F813095C5B9165700CF94
403B23B2B7887A0F94B02C699996D6947840CC115F91F9CBC391AC7A2CB19FCC
45FCFF2C629545612739FABF864912E8C6290D18280CC4867949264F207EDCEB
6F5EC0C552439FC2E9F8500175F4760E43CE6C8F041B79B420BB9E031AC71BAC
DC390C32A10912E41B77C22EC0D1B0F31398B13B3B5973E171D9BC7ECA7FEA2B
7ABE317AAB1C982F2624773EF079C73C113F7F0D00B0C41F91FADDE2CB392E32
CE2B47C2E6FB9E7D7A57858FC794317654C29D2E5AB4FE0B53E041A384BC6836
3ADA664B9E0E22F31790506872FCCEC8D7538AF44A083569519AF2F597A0F043
F088266C4C28FE4D8F7FF429F96D0DCE41EEC1EA29EA44F73EDE22D9433F0FC6
1DD06BF1493BFD06A184A94E7EC18DDDF3C31130737273FFB6429F1A3DE552BD
D61FF284641C0A26CA59DDA6D011F79FEF550DF52C435281D07E30528362FD4C
1BE830FB6349CF3F62635784974407FD5FD0E73F07DBADC24085D141C7728748
B660D054057574CBBF19D30364065CC9706434B12503163A21012A6EA10D9C8D
741BAD7871776B6A4EE938452D5294EBE1BDF98378FC18DFE2E7D56C84071892
EEC6DD71D71D6EF0FDF64A9DA04DCC501580BD13E4F0D697BE7A67B481D71265
DBE5375BF68D3E054C25C11DA4AD8079FC4D0B48D302F0478EEE42B8FD9ED59D
08692E6DE5CFE7BEDA2E67A0EDF374A32C4DD1D61DFB19DF8BCB741FCC90E115
F979056CAAB4BF04573935176AE382C902AF1A86C6E9E498361675D2B472AE38
7E0EB047051BE634D62F6F164085EB045535E44A641819B498D32C9487CE5089
F7ED4D8217F1F0DB37E3FF64D500C91B5F5A7979906E7215776C277A08749660
1F447E90793784480596E2853A9922271DC7E6EE3F0F650AB5B8E81DDFE9B58E
CB933965934C5CA2043B9B0E54EAD025EA62AC3112B58FAB45A60654591AC4B1
48425FA7E5C7C86996B95C59BA14D3E597D9BD47E5D3B31772A0F53859FD9E1D
5455234F366F8919BBA377177966F80E201CD7C570A39F1135C4E9D0CFA54B5C
45CD1CA9C88F1BD8E481CFAB40DBAB63E602D113C81A461ED958FF0D31A0AB5F
2ADFF816D65619DB7368927E5B23E102594076026355FDD1C3C40F2D73104612
FA58833A4EFA2E8398E3DC0B975063CBC21192C28F980C58B6ED119B8A271340
1C2C0A05FFFED46A72C245F7529B8EA55A038EDDB6CAE365F6E262500B0209CC
A5CAD7328D8654B7678E5CBEFD24EFAADA5632EB660B9C433383CA46EE9C71D4
3B800BBB94851B40657C4251E28174F4A81959C7F63EC529CDCA512B82877CB0
13CF131D789B2B17B64D34D51C34E6FF73120542EA25681E01597C9A8068828C
2AD9DEC1268A9B618529F7CD8EA0B82FFBB80FEB9F71BF086F517D998C848242
9C9098EBE6653FFBA886EE977BB30BCE49F1BEF302F68197D1C902409E2D391E
D3143A205D2E64590861B7EB700A41AAAE98152F0C2297B3A0B9FA6D0BD118CD
900AC231610AB97CEC9FDEA056D705D285B98AE381EDC905276B7C9BE5BB1E0D
293A0032D6CF19AD21811FD0A4E11C873E88DFFEBD9DB939BF23B27B2DF046F3
14DBFE68DDB61B2D4B98451194C652A189F6D7F922B8592EAC05D8CC0A9AD89B
897410F1A272D122B1BFBEBF1123C036E02397C332F85518DF70AFB3DF76BA83
E7EC6781315DC47D24E2CDE66BC6BA989EBB3EC8E44363ED00547846796248FF
F91FD52CDEA7FAF96105243EDF44B40529ED81F18430B571D1DE58FC6F22A3C5
D499DB9FE842BCBFCDF9A35C2AD9BC423E9CA4DB019ADE5687C1F2603F034B24
723A954072436EDF60F30CD8AFF952E9BAC60210D1996B3C557F2EF918269225
5F7A98CE9B93A645D041EAAE60AA436618C281E0A0E3B3A9303CC927663E45E6
D8C6DE37E623426B8ACF222C196AED0DDFA568EAF3E07301BFECB764BFC86DFE
3CE45E0BA3ED4B504D203E2522B47B4AED2D7507431FA021B312A37FE8ACD04C
5388B8892F2DBA833118BED3EE67EB2603E21287761A7386D19E3FEF3A65E4B3
A979663717D9A0A9F91ECE47ADF5F78F486AA2561A37676AB20FAEFA93C3F0A0
CDE3BD4C2ABA9816226EB744128F41014C24426A003C77DF9D4FE71401EE8488
638D7C483D983B49B04B94CB39EFB1C2B245CD622A4B9456FC899830D6050CC3
237D1C26008EF53B1D72088642CDFBF5CACC3AD41CD762C52B76915338141E9A
B69F495A99B90D08BB5BB166C8B328AA2E694C3EC4C62D25B1ED56B8E0DB87E2
AA9BDB542F5356359BEE3F8AB635954BC10B7C0A32903B67BD558BF9C884BF7C
D06926013E42448A78501B48AFBDD26AF2D989559FDF570FB390CAFF2E9A33B9
15F473EEC8A587B776F597724874212FCDDA0248DBD58A8A0BE0453B6A0E1613
EFDBA05F2F56151259B17B974C56D8467780A7C3D88E9DC831DCF5595CFBFC2B
4BECD311905F8B1D43B996BB744C3CA7A9E5DEF03CDB67F04C1470E08C365BCA
A589B9FB46E97AB020DD38D71B7FC46BFC34AF05EFE033CD1DC39CAE40A9346B
57C8105A377A3E16A0C180F8EF599A7C4146180B615B9585EF842C7E6950C87E
B126A88A279B73A0615F840608A17BA22DCA7F5E2DD56FAD7828E5E203F328AD
955AB433987B22935383319A809EAE7BCE9A7AB5B1E77B1B8CD7F5618619ECE0
94ECDB043188968A9B764661916B832E25CE49ADA5BFAD178EE10572D29BF719
BC6C31CA404A9C2F3983A42473FC98BE95AF020AAE36B57C5244013011F77091
4EDDDCFF8C54171E3379E1A86B0079EE25B86A0C5C464F9C2D7C52E02D7BA9CF
50549D78F86E725A9FB02147E7E7610D8A1D644FBF257E8C925FF8F244F361E7
8961993397B8926F0E4B4693B8DB4AA1EDD6D94926CCC30F165E2F50A4280C83
5E316588A64A0B14D9A6F44932C4B0C06A03E6F0AB1F2B5C97A5E4566EB1A48C
B7D1A07C76DA47A746EE82204A98FBF7A1F2C9A00C6561DF4B4C685326CD8EAA
7D1909D5833FAB8D6671564F796B070A2B34F70831E8490313BFC7599FDC7A3C
F5B6AF26E79DF062A40FE561D5CD198B29532908C4B94A66B22ACABC95B131BA
7C2F1C1F08244C3460FAA3BBC9C5FC2DBA24698BF56FF3A32F6B29B0EB5D5276
E4D6171BD9AA3BEA81915B81C56CD5055CD7F526BD757A006F96E819D05B97F3
0674951C27062E320654D6D23C194BCC54B5D0B529CBAE4AD98688183FD9E2B6
D862B755645D8DED5E4E059D5534E951165BE6CB131EA371B8148137CBF8B8E4
2F059715079C80C962D5D7BB0BC394A66DE390DF06504969DA2A6A0EE7DED9B2
EA37BA2C137810954373AB66CC420B563DFBD4C87B0C94C76E065F5F7F74DE46
1C7DF6560579C4F897117208399840C19930A68EB4655A46507A85203B5BEAE9
EF8D735BFB4715B7E2454D0F598F0BF61BA5307C62E49A4D20FE29087F469ADA
8F5D5D8547404A04CA819978622CDD235325B07090D8770796F7E1B4665157E1
26DA4338FB27A18C3E1F59CD6063225001812692D4A464298E5767D6881C64BE
717E10AA577ED3D5590491467F1536F5E8A1E4D3E727B1688F745FFB4F9E56CD
A8BF4732B014DA6DE060318DA4E5B1A2E4808D2705FE6F9CB45F0686ECF92650
521E67C0200D1BFE9BF830D264F0C3873D52C25C27C3C771B5531D103D50C16C
7ADA4B3A932692615492C046257CAC1867D98E969FB1F684291242494E52311C
02C8A34C0A58AA3E02DD3E4310B29A262C08F61713E439B6E14230F7C3051CA0
C559AD8DC9780426676724C864184A3E809D46E3BC3BA66933054518026CA3C3
5805BA4101E5B57F5C923F247467259BADF061BF5F70E4BA0CD7D2227F5C5BDF
63430063A0E77220CED0EF8DA2C258BB069706D9C6951A195027DB020897E28D
A4C2E24AC43738F84207EBDE856A628A9B0EA9AF81B6CF75F8109E9C4CDAF000
5B1825CF51D3CD318F065A9D95FCFED1AC343C31DEFFFC23C14065D013427D28
2B07510C3A6A9597B5C69D8F75E14448B512388D1CF765ACDCA5950D6035DD2D
098B5C296C2E3794AF5BC45F581841847BC67F9DEB35111CAD3EADA98518DD60
4EFE6715F50897F075509F64E99BEAC321181170BB05CC2CAF62830C2C50EFD3
4C4EF05D2DA6D26CAC14916C11B1FCA1C171B7B183EDF89D009DA184A7A0DD23
23D70F6BC699CDA42774EA23C62ED02160A13F5DB00C952DEE1F6CE6A0752411
EC61354347A6A283C77C2D7887B361297AE1D1E38DC82512E4336F16EE4B36FE
13D6FFE686B1CFD0EE0B6B7F873F7E4A94CB6E0E97A927AEFF1F1FA4FF431058
CC7C5468B27A13C584C96F36E9033E6406E6904C934DDF1025D0C7DC1252B14F
F01D2B6FFBD4E372B3B85E00C10EB6B5399326CCA603D337AA1E47A08C5A40B1
08AC669CDE8F23699C46DE51F6F44F8CBDC82A51AE32A4F5BBC03CFD2EF702F1
F72A16B277AB18DD59F18E3EA673CB87130BBB537D00C1F5165C07E3D267B89E
436A816CCD32E7E044FAB2E17F6874422629C08443F8B24AC016B8EF496CC4D6
CEE647700DAD2DA776EA703E6EE873EC04694B3E8243B1847292D7D4C7EABDB0
E4064184CC0FDD22649DFC2EB8EC45E5F326A3FE4769199872A70259B37B6D90
4FB0008BD647A448A8CE29ECAF881590FA30DD9567FB499DEA14079C31D65CD9
8FA769BDC5386A26673BE7E3BF825235FA140CEF7FB92ED1997C08FC0F939AA7
78396E977008090235A6078F8A673AB6F3264280B7101D384B1B43719D207E6C
29B69E80D205669E929607730606CFA7786F12B7CB19D5C7ED23A3308BC012A6
70F78AEC964FC928DC4EE33CD2B296D91FAD4848A098ACCA36F24BD9CCBA13E2
CC6D8257D9814601AFEB7EAD595A6AD78FA307C708044BC078EB8BF412CA3035
EF9C2C397740F24605882F6C5C0259E2410A72D950C9A90DADFDC11833C93823
FC4992BED1A2323DAB45601994C67F6A07F238E7BBBD6ACD40D03EF76649A6AC
929DCD3FF06B9FBF62FB189BCEE9965967502E946FB13220933FB217C7B41D72
1BF4524E85513A94BE894217DECA2F18BF6FA92CFB8D5F24C619E8EDF5D67770
223229186D86186C4086912C0574E3F52DAB2F21FB94C2D83DB87BC60B681295
05626EFF415114FFBB6E4E809BF9C33329ED0A010BBAD2A987B32794C35A3685
3AE144AC5AEA6395A2CBA52FE80E688C4F68B7FF086FC52C07FAA5BB36405724
BE29C2C16D4CF1BD1052C07117D7D6D347CCB42DDE1168CA3F7539678564AFAB
184A16968075BF2BD23DCA9572979472770FF2DF39E20DA2A9CE7073E023593B
7598A0131902B3F3D3BD3DA94067637198A7E82258A6D414179202EB74294587
304998154C59310D317A2CE6B61F2E522FBDF3F7D10C8785024E627213596C41
51DF7D5DB5AD7787A917622B6A369379949DD9BC5D4B5F3926CD47F8CD3FCB12
D0CC866F1414BA0DFB337558AA398E37BF984F934C66986C2EE9A510A819ADF5
81AA672B92965E2EBA4725344BD3C039A064E25FAA3EAEB35FA5C74AAE3A3CF4
BF3E3E7E1F8D696ADFB6EFF3D97094ED2C21EC501C3F055320126651F8DFC631
6F9DC04F1E0EE7251A03EE454C754DA9F485DBF256C3C4987BDB800DA1C4306A
C740184CB367D70D8AB7D59420CFD73B90688BAFC791B2E6517A4E1BA2F39AF2
E4141460A14440DB21AAA7719EDCFFA927B9976CC8974FA5CCBF53511D26FE98
C66E17C49C6AC5B8EBC8C2711BF67B786A58AE7C2F43D985874AB8A3F2044DBD
4B924FD5B123DD472A01FE93EA14C8ED5E9949CD49DD86CCB17F0C9C46EEA673
F31E8E07AE5C862F196EBD7415B50F8CFC497CC5A17D5E2DBC4D5C1BD11B579C
53E67DE41EA70A15EFAD684EA2927843B2F5BAD762873DA18265930F7BCC320A
4DD22B38B62EA22F453092DD5EFC206AD76D04AC8AFA92B9D29E97B41C7FAA9F
CCB40379AAB0A13F05E828A53DA78A2BE1798639B3B73E6C85C94E17C2358D2B
6EC01E2A72DD2857FAA29D07D9ED91B163A2EB46574D7853E1F92D55FE379782
B53CFB08CD56263A98BA99A20C3F1F5ED1AEE8968093BE12C2192065CD29640F
BC8E25A93D2DB28C8252AA45E015ED2236AFFF1E849FA5704CB591AF41601B3C
DC834024E7091495E95D0E66F1870354CFDFF7CEF80359904E3FD4627274C872
53CC0D096497D057C6C78109F232AADB573D69000A044B73BA7F086987A9C830
1084AE35E096FA8AF89E587F3D2370911E7F642D8DFC067362D65DF9C6AF6650
3D32708C76C3DF9AE669FB01AF398DDAE67428EC237581FB9EF12F984325BAF5
0DECB4EB0B32811C3136CB0DC4EE711AE980E163D0FF4DCE1F91681D437250A1
AAE042301E30075D8DB528B05CE3458588D34C36D40D9872B8436445C9C6EA0C
98434FAE3938FE003FC5B11BE86BEA1DDEB1C3BC70DCD4923EA83CB76A3093DB
B92DAC4C3612FA1DB75B2EC562680B5158241D7EFF0EB99D04FEB88B6DE54F9F
ECBE4553E28F07CCEB2B8C71EF93ADFC93CDB2CF8FD8F7494DDD15B13D41FB68
9E3ED3B819302826EB3561933F18FF8BA5ED8776308D50335BAC72B1DDB3E12C
DDA3AC6C0C12D6E35A3CD63446FCBA8FF12EE1BD53FEF56EE115276541AE2BEB
A473AB45201810C0E65E0B0D90DA1ACF96A6BCE7AAC18A2476DF9DB80DED33FF
223D2D0C6414CB82B46BFC0ADDA332EAB9C01219326F3ECD532BACAB16671A3A
9D540C64C71066C1E6F38BB29830B2B95EEEA34F72F4E96CC3F7ABC0F0961873
BB3759B49F68A6966852ED2F1DD38A57AB287E49BD876648568690E7B29E4310
CFE6F1F2304397E76107AC8F1DC8412CD9EC30DC0B32DA7A548BF00647E76687
C0050E685417998FF095EEA92C452CE44D0E6A9026DFC298FC5B35D43B84217A
F5CFE5AACB18FF2AFBD1A04DA19ED24E940ADDDBFCAF37BA25A1BFC2A9DF0173
E6C2DC3211D0108EAD343C0BC66DFF2A70BBA4974BBF0A2D99517A35BC45183B
7BDB88E7553211CC88CF7C7FE223927A7A4144BF87804637C528B0516E0B138C
E179402015908B125793A2111417553B9017131F4A3B1715FDB07CE7C933BD98
4E0D446A2CC4D70BF4BC52B8FD599898344A0FAFA940922DE0C110B2ABB7CAA5
6B479E9EA0B09D0A3DA94D8013DBC1E8C3388045181D7510E59A94B5887B03A0
4738103885EFB58B7D3C2AF94919F45065F9B4C16F2970BDFEC647593DACA920
1556835E6B3B6A67C6C131152BDA977F2CE16668DD4B280FB89734F437A9AB1A
1E1080CC8EC3BAD659996699E3B1BA71580FE5D6D31BFBFA40063DD2CED9C62D
6E42A47733C4B5A0D253BC5812DC72F64DB8F92BAE5E42D399D0264FCC92A625
F422DFFD3B72A1685A039E71C0EF9EAE428ED9C10AFA623CBD64B13A9B5600EE
6464719934B4342C29C7C093E776586AB4799917BC052981768601D6F1488B88
76141911D145E9787B84251AAC0FE9CD251468F3DF51AED0CA3C752EBFE7A5D9
AC68713071E844AEB6A4B845E7E9C744E32F554AE64097012FA02A1A2CECE709
78C3749F7097AD9718F79FBBFF7591A4F0CB6EFE96E4063FB23B0C1398731F8C
A865F0EB2522965FC8D8D5F5106102F77D40846CBE1D756ACC8283ECEB0A10FB
D859CBDBE800017D31FE968B8184553CE425C1502DC3E1D795A7D2D4891502F2
A50A06EACE6846A08CBDA708B34C1EC084CF1016095CF50708E38F5276221755
B4CA0FA5A8CC3B4E2AAEC6CF28297E3ED75F2776FEEF58AC323CF2E44DABF414
5B00C950347ECC97FC48061FF5440E64CEB8CE434A35760F616A00FF9C69E7AD
6267328459A805D4EC307CDE09822502713C27A28F74408AEDC0846725F763CF
B0CC9BE1E7C9ADE3554A88FB6A68DA5D76D3CBA7C5E432748363BAEF50044DB6
CF61E4A1ADEE59F8B69ECD7E001950D95D5A90DCFD30531B19FC76C331B67688
1217067428C1403FCE556557BAEEB38E8C59A2E3B70C54AB60FF57109863D8DA
F13EE20647FB50E1A01BBC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C2D1AE634032492B7023944DD1F9FD0CE2F7F4
67A41ED7A40FEA86BBD50B645BA87E3D9B98A309023373FF75491743644413C2
ED9D0848A4FA332D582D8BFFF3D0D13EE0E49102ECE2D624A0A5EEF70005594C
5E0F074DF55E0355AA33C6C0F2D5F535AE93682E855B1BDD6CE955627284BC9A
9199F188FD2CB5BE9839DD396DE541D181016DD6F0563A26851AD5EEBF32FDFC
699847D069FC2A65671D66EB451F54066661038CF2C93BEF8D83E143656B00CD
21885CEE544EA7E773049D63C65BD60F8EA4F783BAAA1268AFC408D019ADF2A2
0C75052F46FDB53266B7944146B3B7D9CA452453C825B92E606247E509F9600B
D6760B31870D69C4C15EEA09E1831354F7C4A2158796310B1E33D5B6A764A8BF
95474A18AA51CBFE9226A4FC31C9828CF2AC80B73CE2768B06545FE267B888A5
CC380114DB40B124C844BFFA3CA29E638C11C7BB98816531D1983A33A1BE7394
B42FD72BF46E4127F4F1C298D34F3811D5DDA7F33DC6E913E04ED663E84F7681
48C131B26525D173F07ADFE2C2AAF32AA5A7101270D15AA6590DA4E9FFFDE23B
9AFBDC82C3C8F14509870D004DCFF1B72D8AA0542C90E349863E8AA5EB8342C2
773CE38E1EC3132A28B15C075DA951F9AF3ECD62EBE43B473FEC1F76DA6C5508
9AF3D95E3AD5012C5ED5A9F1AE7ED88340879B2EBF04DECC857C42C1A94A526B
9938774C9F054CE6F54FB243BC6C66687CF0155E10B53A271F23B6292718FFA5
6E5DAE5894F1924E3A5BC82120DE0F44151150EDD1C65A3D5099445C0BCCE07C
CF4C82B318494F42C776D9482C86646218BDA22F6E793C31EBF5C89965E329D5
452E084D72F8219F6D0A06EE6C0F733B035CCAC9A2CAA288BD94212203C21A39
B686F88742CA702042CE6FEE1C914085E7065FB50E28631D2A286B9862B0C691
72ACB8AD4121F47D4750A5501018DB4BDD5B64DF6A6F8D30AA78C33E121DA9D4
AB827E616E7357557C23BD668FDF38CF6194AF036EB3090451311D2E0315E7E1
38A9C53D00E01279397F08669A63BE88715C699C1A7A02FF77CDEE3F0D6C30D4
059BC9F9DD82CC123F00FF7C25CAA524C8B374AACE6AEAC8CB4182A887EF4B29
4EA35FC77F7364BB75AE2083C7C66E6C13CF17915C9B7EF1487F54EB23A1CE0A
B8CB768EDF04DBF511A4639F49A908F0C231A396B14B2C655BE5952539F63A9F
8AFB0F2BABD93922C7DB78C54E81C2E4C11086C35B56160359E166BF88694D92
194916965CA4B0D9FE1F35DD53F99E96005D40B3D072F7F84ACB436A01134774
3DCDAD88BEF8B3F7104BCAA6E752EE90D2B38F2CE715C6AB21674E82E6B49A5D
CA8AEE53295494C657A9676AA0B493D7D546F9D46F5873F4E4017972377DB456
69B6CAB61314565222A1493030E61D657AECDB179D9AEE28C7CF7AD74AB715DD
9CFAA477132F828687EF2A58C54D8AB7580EE3ED58AEB83B72CB902DF6D3064D
D668D016CD47C8D086A4C9BA264829CBBA92A6F8E302F4CD994EC08C00AC6A66
C51254F7128403B6A5B2ABE4A8B54B457DF7CA439382D1E5941E62CBDE6A24BF
40246A18A8D921257BE9AC6BF7CB079D9EF5F5BAD37D218B1C3735FB7D517C34
4AFEC68F345BCEBE40A55B3DA6DDBDD8E8C6011903736F02F04C2D2EB4489007
C555A6A08B437AFCF723A8F721B0600E268AE9B589919EE6287229169AB6A7B6
79DBABC420AA6231DDD2B6A02530540DBD7FF0FE7EA3CBCCFE293D8288A3C4DC
EEFA1F3076BB941B1832E3FDBFA3335CC6D1E2BCE00279474109AC67B7D0A034
352C6BAC6788DD87665BF143F03485E11FFE1F67FB6D16A8CB93137BCE2E4D53
089C9246ADCF057578194EC0467C42F53DC0838C1917ABDE57FE1D34CA143066
E10440056D3EC28D85BB53EE04612C6A0D8E6BB90C96A90E99E7CC878C86D863
F261E8969E275792F7C38F66CE9BAB1CE577EE970A2B5E013E23CB0654536FBD
A5400F30F7E8F77C2A44865D97EEB9EFD4AB7C41035E3955A08337C981230328
0228A1E6E048CC39F0187524756597F57FCB99FFDAEF963621BBB8373366E021
ACFF86D1A71187A40F5776AF971B1A2B727DBD281F3BF2D1075EEF8C1225F96B
9660E087FEBEEBFE490C45E28A8B6DDDB556D22D3BB579328E4AD9D5C3475D74
CFC7CF7E387414E4A017F9FAE43F47C36E5544A355DD24BF3CADEE7E8C956454
650FC6D9ECFF2EAD25C3A3A326B77B817ADBF1E5A669A87C3886435AD51C11BD
77A2137AD9E2DE4CA0AC1E9AC3B8B92A16F592E4082E90DBFE87968918000FCC
C4BBB3D0F0A77E12FE8705723A5D49D049F420266F034B72EE3B707AFA7CCC7B
9DC973319C4730E532FC9A74A40B28124889243D305D4132793CDF8DB01750F4
DFB79975EAD0E536F9DE9959CC5CDE05CA9B914F8749608248E964F5DC2CDC65
AC636325718AF7EA47946CFF07C2DC0FFC04786221F2C415B3480FE8DEBF394D
18921C6015E0E9B1C3E60150E61B8B33CC90FBD867BEB880FA518D57488893EA
46C5C9397942013B540DD291372C1B08DBB589B5A8C4895D9EFE1182E11CC0E7
AE75FBCB69890B519F7B53237A6BF0906A6DFF38E77DCACD3ACCC25E153A3069
83849D58F61DBD9851718C37C2FAAC141EF01103DCF36D894D9FB2FFD42D850B
D31A8B43358DB8266AAF65EC987FC4455748C8913FC00A089EAB8BEB6F1FEB40
4E47901751F077A3443B933694631A2EBB0EA34CC47CB9695CD7C3FBC4C07402
313101DD8A026EFA8516683FA3A30649486C002BFB9868A7B499DE2304679D96
80B7C482A7999611BB127FC8EFC7A169F8CBB6E313016221878340DAA18AA6AE
A3B09943CA8A11A99510B0A8B7B1E654C8AC3E8D668AA3D9B25927B9001E6ADA
AB86BA6B2B4E28F3C65566EF5311D4A151152979A546051AF86E03D22C944CF6
67AD123F9C30FF7F2B77E767A4C9492E72CFD969120BAD216E4DB5EC85E5830B
36D54688036EE18D076090BCAB0BB0A9A811A6D2D686A31029329ECAE472DB8B
59B3D595F7C8662B9D0DCEDCB3D6B3E6F306EC12F62083A6EFF68077131EC3E9
5A693F7FA901E8967A14F6F3A7CB4A47A9FCC007F910998AA28D18D0C0D347BD
4A20038A2DC01704A1B7852C0770A8B48D694619D3B6F77D845BAEBD1B168063
03B9D219B2782FD07F94C8534E755ED59E03086E183FB95F360FED53F1A1E6E7
CE34EEA5102A369CF06A6E34DF084EBBB3DAF7B5D21F6CFD57C238F564051172
45C74D0FC1B495593B3D020683696B7E034C4CE1C6B388B901F937A299F65C32
17180D4BBDA879E194B894904916531564BA32C99A9E9E4A7793BF6A20BAAF9F
9428E3695E72C64B3C2EF23BE1C2A88F617DB51621BA229A1410ABFA2171432A
1AA586E65AAC52D45E38A60BB3CE6D39B62E74D162022753ECFCF0A21A73EBCD
D3A3780A9B94E0BEF9D47DD2385136738B81E92728D1DD4EF6168C677EB452ED
7745CBA6E884CEC0ED22BEB7364E5ECDD2E07343A63DF827BA903093EB249BC4
7A16976E813D9223A95FECFF4BBD250E93F99D78494432E4D68B26A487D01ACB
26D732FD54BDFDFEEF2AC5DF8D61E0F261A3B888175DF42DCC3BD0D5529350D7
6CBA16B7A8667DB9DFCBBABD3164E8FDF9AE090685B5308B9516256C57DC4B76
03038D6E1BB47B5C74D184E2800FE0A2ECDD5C839307D93F710B1A0035B05FE4
89494276FDA492539ECDCE2E4BF7B7687F1681D103D7DFC415017C2E5851A2C4
A36D841ADED0348EF0A843D0F05CE3F579148DC11187F63B3C8DC2BAA9230C3B
2CD654ACA8A513F352B2484072106A35F92D8DA29782A1875C6C8E74B0C86C0D
3A604DB05D2D7C3AF72212F5C808FF97D6EBB5C4DC13B15101EAFFBCE1DE0C08
38B32FB1886BF564BDD888F39086B6594B85C1F204B6509D5201534954EAF50F
BA122DE97FEC6FFFA4998E879EAA280D8C528B77C22B572657F8EFF6BE77ADAD
22FF83BD861FCD07E1302D6A3AC106A7E2A161415478975E25D1E928C5867A49
5F88565BA02F0FD97017393DC2A256F557DCBD0CBDDCFA83A5772837E7018EF4
1C5D418651E3B1EDFE3F14ED7BA85AA03028441D5AB3FEA20864A490BF977C9C
50690DB088FC05D1532D06086CE3AD3BB9DDE9851808334DD1510066DFB8B9CA
B15E072F4D80E6FA1492BDE59F46CA026F44D4214C18A3CDD0D72D52948373E3
8251C508E4505E8453DF9C4DC83E3B37D07E571957BCC050B841774BC20AAD8D
21C3991D7DBD228759702CC5B12BD66CF5E8CCDBAE52E3F8F0327884D3C7467A
1598A876ED18B65ED8CF23F20F00F696EB582F5EAFD33A8B88C6D49F1AAEFA49
BA629E633B32C3C2864C63C768C9FB963D2338E603449AA387FAA45A1675EE98
A1F25F640ADF732D0F3522AEFE1A3BA517202447C343BAB5CF6D6F7B82AE7FA9
8BF36045A5B656689AFDD90C8CEF6056EC65CE4A345F755D5137963FF6491BBF
618C94177E99B34D229F4027E09BFE7642BFB889F83B3CAD005996A6309A63BE
BA0FE32D73F301701B91AD54984598F2AD46FEE3D68A0D0886AB8D173B2FC786
78B5FB7A9D371CAAB9A8A382A36EAB6BA5C8DEA7967B2433B6BD77628D7DC922
21438E1C15460910143118ACB750D98062B2D28844E50E7E44723EB4237A9871
234506BEF22737891913D14DB366F3BECEB3445CB66848AE60015545027C5D66
43ED9E898E52F22948AA61B751ACA01F7DF1FBC7452B5D1E789929A97CE2DE07
C298648560D837FB67D3FBCA7A93A80A32481524ACE2C9A7CBB1F832A94E176F
8B529878D4C5E8A0F09E221AF65781461FFC94C69C62018D6429EAD8B7F87627
FD63CBA0AA6B857291BCDA9B6705F0B062A78EFC65E27E551C79202D3AB929B3
2AEC0947D1ECB82B90FB04F177F3A072B3F3760F5FA35BCD767FEE4E9808EBF0
5438BFF2456A323564922DBDFDAC35CB538AE2C6E1BD11ED4F9697EDA04529E9
1C03B49A5201E011D544F6C50221963188E13B19B08630E5B4945F61D09DCBD7
E32C0027AD3F0FD2A3F2449EA5006EE0724C5B5D085846A3C7C30A664C30ED82
E6AF4E94FF0D5DBD3054E122389437002F30FA2488B32710451F72B84A25624F
30345A584BA50250B1620851BE2D39031BCFA0821FED4A2A8D9F8B0FEB9201BC
B6037C927F524EE70AD24F140AF825F8A3708FAB9610B70329CBC2AC275331FF
480589012D7881C8E03A1B8D71814BE7FEE42E6D1EB7644C10A722A014371DC3
9EA254984E08E607269086C7D6D1BAADEDE43E477B859D8EEDA068246F367E88
835E166A90FB1A389A34259B085014CFDE3E2029A04B11FDC740F7963E3E020F
367FD0BEC68717E95B7597AD7CACDA2A6A4E8808BDF0AFF9D56A1126E44E7E26
4E1D33846016AD0B0A7214FAFABDA3B72860BAD93A2E414FC4E3FA2AD4257AFB
55B24991EB80EB84C857186645C467EC0164AB6086D2C2D95FA16B47C748125F
1CCF350E3930ADAE5249B3D5CAE21942CB182BF5D95A135B9CFF91A00037A302
5364DBA8603BE34024535D6C5A374D7E022625ADC54C39C18A26349A63E8CD5D
E7E5A67D422015096D6A998EB98A49CE1D72DD702D31876A1CFCE58D619A66DF
8CCC3116319857380A9B3EE1860D5F11A241C4889FC8C0F634CABABB7B4C474A
A9D083F8A63723F7E5F750F0DA9C6BACA4A3EC27477824330F5052B43E42A8D9
BABC1C3DDA7B54BE6F77A8EE6D7A1161558E0103D69F95627A6E456099191E59
CF11273AEB78CCE20956F1F48D71825B795DCE254B9F4129E55D03F4CD2CD99A
E5AD22F3797128CDF102226832FCA7120F8F3A8E42134F1B6B0C248D56F247AA
6B028C60F3C8EE3A7AE59C665CD642F51EF1EBA346173E544D66ABE1553D2FAF
26EF405C4D00E4DD9F83370A2A10901005F90632E54F8CCA66519CBD3A850793
875696BBB9D0420507EDAE822C094868ABA4C18CAA5EDBAF9DC73B5355FD3F86
C2DB87EC77133C97128A29F68619E8A1F459DC33AB828E9D80023BAC482F8B93
AD55F1D27FCBA9FDEB4022640582C972655ECB16686869E6DA6416ACBC3A06F2
A4771CF854FE240328C4A2F37B9C73FA6AF719821961FF7FB9CDC8E87628938D
6D0D86F38133965B26E2AA96012837CA40EDBAAA2ACD2B44574480A072F8281C
E8EB7069C9E67E96EA825EBBA92EC6210B4F1385E79D29EDBBA19755C85371FC
C5A8F92195C203CEAC6A1BE866FB61F0E0ABF34FB39B2397D00BB653C7710594
C25B7D23ACB3D33E5D34214544CA05DC58670265FC8FAC50DA281BB7AEABF17F
24254496DA229B295EAB9A6862DFB59420A1979C1AE02943C136BD85269B02B1
0BCD497ECAC785BBDD2D86B42FF91FCE7E06435BB294023280A0A3669114BCBC
5B20BB6045BFD5AA4BA26DC69F2A27DAC4CCEF5353BCA7EF8CE6151D158AA7D6
F4DBE64EF220697B69063847180B6DCA83EB97A55FFB23788271A23BC2A85E36
2016840676DE91F62737BB54C4AFB0862857587905A91173BC23B3D1657C9E8D
CBDAB522E1F4AC23C2BF511A27D667AE834A96925698006601802F57A61C3BF0
988FF39084FE11179521E18BC7CF33EE9EB899E6A063314391267AFF415923F7
250C5BF3BE382D95FF4BAAED0957B2A13CCC8B93FF7BC5FC7C7A37AE0523EEA7
86F83AE2F256EB21595E795B727FD7B5FED0B59CCA854BD8A05A139AC2C2C648
6D2660348916BF68357880C88CBF9EFB538C274E3C64685888A61CD2FE2A3912
76B1457CE56323C7E4428D2EE1EC6B1C465BE35668B0A4000BA2A79E72C1E086
AD76C19784527E7D439BC235430FF572AF04F2704D9367231B1B8C4102A58FD6
66120619CB151594A7DD5C38E6CB8C5F4423E7EB86547851EF4FC7D829C4255C
893F7749C4E7B6796855E211E6751437FF09B350BB5369DCCC0739E563C6E1FE
10E8C70494B658D448E92E67031B18FCC2557726A60AC1B8AEF5E26247973976
EF232F76C9D0C0793684D68FE95129C325B04557A83A6CB987E1C0442D9FBB38
539AE5B64C3EE50C428270E1C017E33650E24F353E423A9254DC034E6B06ECF5
142F182D1D02504BED42472B74E8F6E1B541E2E6380789E848AD295B7FDFC54D
C6939A8FCE4E68B91BCEC611501A2632E9DDD7EDEAC56C518175212C74E1EA5C
FA4BB4FBCDEEE2DD064CE344608BEFC72FA3BC09B59A2FA9092D9F909889BB5F
3286E69430D36A5D1279E6A6DBC5B79E97D0F2752100481BBD994D8880B4A972
C3BABBF56D75393A665BC35F1E515F6BA570464F63E2AFE52A5A2CD263C77714
E5F40109D84051311E6BAC376A65E1D55D0D712E617802976F8F223C8ADDCA89
5309CC0F6A0578E32526B0722C162E9587F3E57B9104CA9107584F937BDE200C
D5F3148055B1CA561E2BA388DA3495A1AC0589EA038360616F45D67D53C58C1D
054321E6F5949B4A6EAA92E985B513F3445ECF5D8352F586DE03A29863374A22
72E6511BD0987B6E4A1FBAD528ADB4433BCA204C5441E3A478F0933EB129EAE4
4484E084BDDE7EDC55FBACD2586F3D71442DBE3042A47EBE4BA1FFB274D92BCD
6CFD20D74471AA7E56B805097668D76F7427FFBA94742CADA77012FB60C5E237
3B24D4D476728119EF46040CC252B957DFC1A97D522C07B0F972DB969DB771C9
0903261C60884073554BD0771EAE6A1500B64835A63DC19AE18F54402D1D6B7E
CA0285F5E924A72A2E58CF166BBFB011B6C12327592F8B086ACDB860B1B84DB9
BDA9C7AE98647776122A26396D984DADE28954EAA105FBBDAAF70B7ADBB35E0F
1641F668817E64481B4479C7392E646CE08EBBC0C484315EE485A8714EB6009A
9C06D9FCAA68BD3F58C8E45D64FF0AC96A7336E70C94832B1C518D9EB6F8AF80
07B3F27A59C82174638FACDEA968C7ACCB3CDD0260801639B3024B7847E99603
9601F6AFC86423DC06ED4D34A5E4A2F4C5A85BBDE0A289CFE59086EA4FE89B9A
39149E124C564C5251F613393060892D5064D4177FFA919FFB035784ECF6CB66
BF597BDE3FAA27251F8FFFC3C6838AC1204F34A6A16569177D6B1C7CE10B9D70
6E156C470460104C977C7E113345221695665B91D05A8F5D15D1339193DA369A
7559BE855EDE27C68BF1E5B9592241DD136479A65905FD0062C91DFF73498439
BBD8D8A22E4C49A366DE4CCB332EAB20A47BA58EAE5519728F397A677D32DEED
9B4896E372CFEBBCFC66C64851171717E42CCFB6922C2D5D6FDE3D0553CAB203
DA8454C6213212E127B968C9D09176613CDBBF70DD34941FD4A6EEF3C9CA5CDA
4184D6C7C197D4A0B223B1189D460972273C6F5D2619D655C3533FF17CC7A87B
F1B8EFD4639AC309B9E8CB4472C20F42917BA4B020DB0FBFDF8454918A719C5B
27C4DBBE2DD951ABFE4DE5DF820F1FDF5E96A02F947946C46A6DA7027DF02E54
B72AC91B90E441BFB87CDA9E22839448247D40B23A37DFAB7F41D82A93F3E95C
C117E21AA4E3A42C7E69DA6CEBD01779B1CAF4DEAB86E06EACF7F5DA3BC32030
E4E23C5E0E7E83F1FA6A2A4078CCA035D62FA290C68B1AE621530773D91D9F5C
B7CE178C529CD741BCF3E19A3AD3094F5C09CAB54D3F9B5EEAB01EA2E3783E06
B4B229FFB653DD3777D643DEBCA5AED237FF2B19138C46AECED0CFB8AA39A27B
99AF6894363B2114294E66864446DAA5CE2591121466393EF1DC48BD8BA01A6D
096129CD99FFFD3CD8871F2320F97EC724BEA6F27CAB18306462FC72D92AC07B
13218E87BDB04660DA44963FE1431EBB1008D8BC9DAF2A58B800BE51509F6851
73FC157CA62976128D48E72C16998F4443F64E4037AC19B46A1050451ECEB053
DC8EB42CFCEDCBDAF3A9F80AF982F9653F2DEFA6365ABB158E156FCA11C47786
5B61FF0136346A52E994D5242B0ED0DC27BDDD67D0110B8331410F1DCF9E65E7
338B42FFA0B27403F64797942F9227920CAAD43D1B48EC23887DF28D4C40A830
DDD392F93F6CE1294B62411E6DF77D4A4C209F802B8522CD9775285CCCC1D866
1C4F061141B6A3B7206F39189A1A07946720C31C5D12522AF7CC17918F49A648
4F2222BFD38455BA078A1A500CB006AA6A7D472AB9513611ED0874B55A2F393F
513C09D57D1775AACE59AC6A88DC3E1A94A0EE0C23525B292A271029E328590C
38E9CAE8D6A897962EBECEDD21DEF42A0ACB73580E31047D1883C61EF0334681
CCACC5D024F39309DDAE7176274BA3DD711DCA361EBF3DB4F6F633CEBB85B138
888F80720839AD6ABE1A0B43184BB79D88C960053AD6CF7081CD0DC5CBD97109
E9E4E462E58A293CD1BC4E240AE9218217263B2F5966D9590049E15A05F59D56
E5EDBE7C2F9551645EF4A3399C2832F197C27808D7DC3A930E4ED2CBF7FB5979
EF5F012CAF413DABCB3290E29A0CECA13C2FC60563D081F110CBB181C03581AE
7F5CFB6E2CCBBDAAE4015F53DD5994514C074D8D84A638CDAC65937F4B53EA2F
8C915BD95CB67D9E25F9C4C27688B2FFF552E1BF35ADBFCF366596F5E3DC4BEC
30136B8BBA284B8E0632CDB7BC5DD0E9B0DA3088D62C10DA3AD6350EB9F65936
442C20E14598F0BFA3B6C2011B842784111025CFDE17CD6A626FA2286373C66C
4E402CE5D8C9E4B322038E671631D20EF5FC381131B7C4C90E04DB61386B526B
4A6BF0AE1EF7FD23C8AF7BC0ADE591EBEAC608D291B66D9DA262C5151B948E52
9F0C7A21052F1A28CE34335D3EC14A4B3EC5AF48825E4C87DF0367ECC9289A90
2F0A404C434A8B61476E86FFC4EEB66D35926A5D147CE5ADC833BDC7BA5FA259
6A6F1195242FE20B57E4BDF333D06F1CECD61A9C9A71CD02986992B15F4CAD81
E8CD4B2A1E848B467E4B0756936D8DB0925290F014F7C5A6B6186C23748AC92E
29737ACAD5B256A95A961B1EA3EA711CEB56008CE03F862BB01C30566C90DF09
90ACDAAFB55D95F94E9CD79E67394AEC64377457821CDB3B15AA06EF3D02DAFD
91362FE6C3206B35A1BFF49DC4C5835EC42812B287F3D734E62C1E3E2E2BB873
147AE0CC255E05EB61EEAAC8991992A2A1A278B2E9A7E7C3CE68481869E5DFF8
9CCDBE8E8271BA5A9A2831669C086A3590309D998E63B72E34F91345BEBA6ACB
555778CC267DEA91A4C216EABD2AC7D6D521E9D0A70DB9A2BCA8A15A617ACEDD
E70FA51AB0338BACA1A1E179F1AF0EABA623864E553A21081F8D700072E3F501
0A9141AAFCE6733B371BF36034372DD8479FD479D9E3C3C95C47088D3CBC8C8A
942A84DE642196A64D1206AB59C5FD3D761B784845155F0FD9E90F559AC5C84F
3D397E25A7393522567CF44D7E411235019B46D3127E3B9BC63324DB4ECC432B
5A081EA69D0A80893F9FF2814B42B281556547BF4519D1FF13FBABF3FF41E8E1
BF7E9CB02F2E46976B514E496BB4EC0512D3D2166C4A311A0C52ED00D2305C70
A416567F5EE87CFA25E2EB26EE41DA48C15CE91EF664C3D906427BCAECB3A7E6
7AE8CE18FFF62B10812C6E452FA02FE7E5F4E9DAC5E5E913E24F944DF0E71A1F
3A16609E7BE31EBC682D2A4D7AABA5FB1F45E6293505827D992EDA8A7651B5FE
DF5C2BFBFBE1AC5D6FC9C26BF9FF97477F8C211E89EB7EE1AAB9583F2C7BBC39
6BBE656E4B2DB8C99A25E1BF612A2097BB921884273804403A19B6A3A946C630
E65449E1C84AE6E32B58AB6BA4BA2FBB5CA6D2DE2B21ED878C6ED56E0810AE59
94B981AE7B6F030E18F7DDF4D2D3A134748872439673064D4FD1BA5C41A32A2C
D4E0654B519D57A88C79B55D644CAB29554F2E31FD6843FD85D29D2EB451EFDF
A251E9C4B888392C07F151CABAE0E9FA80E6907300DED6A5D94668AC4B5ED7D2
565B25C82DD3E6CD5FBFA55ED7E2E3FDF730425D7A2BD984384E60A01BDB850C
6D7EFD955F853F8BA0C0106657B45CB839B9FF82CC4E4AE64C608EEE0A2FA4E6
E74BE7E3358A618D5A92D990338D4C681FB09230305F7B0D57E5EE9B78A2D950
0D776DBF675838C2E27A9A1C75D9786FB528936FD8EAC5711476373596FD03E5
7B1CA8E39FA995C6AD1D3CC2370D8619DB10C162B96E490193208D7CE9CDAC97
4A98B0953A98326A173A243C61FFC3830922DD34AF3E792566996593C9C96C42
A905ED43CF5728831437EBF745B8BE29FCE6F56F93CC01814CE35C353A7EE33A
AF3E9EAC1935F8964877EA22D9E5D4256F3134B7F3A38510D2BB08E365D92A33
CFB87DFBD3B6E725E5C68BA17F78E34366CF3F566E604571D161E1A2A6051297
5B107CFE887EF65595B67ECBA01F813A9678108178F33EC11EFC185501100FA3
47EFCC22DA5BDDB8CF7ACB4B264221AE93308D8D8B1A8028B073456088F14B0E
5EA826636411EDF114A340951A0130FA36CB472AB1E6FB8721031C799F45E94C
E0A3DB78E8BEE86BEC0C9B755750CE10F3D0337E86CDADFF3B72732A4E082C00
FBD73BC06D85E107A2D0B0D46E0A05899D4D1DA41A4FE88655F94A940CD713B8
FB1B33A25F4BCC90B6ADFB4DC714D6D083227751E9465971C6B191B8D3ED7529
68F923AECB58B21B3606B5431392AE9068155217146338DE3D4C65A18311D7A6
E6017118C37AB2FE439C0785F4006CB6D67EA8415C1A4587DBA063C52E8210D6
F5B3C5C23A6085587569EBD7DA73CFA3DEC72E83650F240B54E88E51C065039C
7D59258048D63837F887A41EA0D1CF255793E8AB02E6149B8D2AA2DF53F6E853
C7037FBB63DB74A5D79874B74594BBD6F4E0797A9901190897C68CB4165D6103
ABD62383330EBB47AFB14105E20E1132918CD7C110693727CD046AC50CDCC67F
DA475E13240445D46726A6D4518E003ECB4D8216D136C4B20B96065574316F2E
E82417F460D5BC8E9167970E1D356361BFAE3F7F5DF22D8F98C9E78A4D63AD36
5F820FE2A7FC7D4B5DAD9D90CFE0F89431537F41812A143B802D3951B6D9026B
5D97D33027B9230586768E3BEC5E192ACC1FBF937035DB4920F0B8EDAB870AAC
9A32FB888F23C3803C635D1CE704C2DE46ACAB7B335C43B1B6FC95656ABECF22
484EBB508F45A2D7D0D5727BFCAAD955DAEF48CAE860C4E1AC06A1EF46702523
CD984885AB3ED0612296632D7089A71125506E62D3615D1D65EB1583EBC21520
FAF42680772C1BA775A1EC1F60A6F118E90B180B45D06B34D1A0C76B930E62BC
33F81300BEEB57CFF22C7CBA28D69C7E54DAB585AC15AB280A5C9A1C1B397781
32988F62AF56BB1C140022F7F4CF5D836C1893A1463C96AF729C75B5BA3DFD65
E2AFB1BD291EEDEC8689A98633C9302B82763D3C8145F36ECD1DAE5F65768C9C
B901EFE59DF68CD921766A4CB1560B94B4BD17DA633529C87CB33A7E80B99474
16A78AEC55D6309FAD7B43340ABCF99AC4B3D233B4A8C7C5D830161E3AF5965B
C832A8843144EFFFC2DBE5AE8A5C99448CA6DF9F5F7175382997B8DDC1BC31FF
9BB31C29200508B8FDB477010C1E685F759A9F3F1B4B2CC627C779AB893BB217
7D713F6C9D6E9D1A5E8FBCF32D200E0FAF7FD33C16A7865584AC0763BDA3A813
438D52596DD03EC48ADEA6BC796AF520E8EFBAE640A2F4B94F244D365B7408DE
DB868A2B8F010172B9CB2C76FEFC4576A763849DE43DC2D114FA43CE0B06A5B8
FB130A3936C4504264C8113803318DB2B6FEAC5843087FB8C3DC0072C465538B
55452C5B9610388BC481FE16664FC7B10192CE7D55A18F6093DCF0F7022C4E8D
FBF1D77A634F74977E6CD6DF70382EE2587AD0D3D3A48714EA217B591D115579
FA3E1B5462E328878A5298138DA9ACCBDF383D124AD0A3FACCD6E2BBE984B17F
E9303F13428A68D6A1959288FFB3943C3B13590848DD8EFA3A7DC720323942B7
7D1283624F402B67034F7316B5922CDA33478F8BB69EA1BE414AB0948E0D5819
1070F485D25B61D216B6DB3697247467BBF8D135748915856FE50D442BEB8A77
F9298A753B4367425580C68F07CCB083F2445E82187139FBF00F1BD0191840E0
27E9A5005DF162A28E497C231A0B0AACA772955E231BC8DE5ECAA91A388956E2
33994DE3021D1A162BC89E08BAF97BC30049BF62E619735B43AE01A5A008EE09
F1B2592E1FC306899AF4EE52EF7C1F4F8E7782F3668FE90272314C412C5DB4A6
BB35BC938B24815C2EB9C6F98923FB82D1C752C7499C54B4784DF9896B2790CD
F373DFA5428CD87225C7FF28FDCD4FB898A052A0B1A3CDD7DE345D300A475AA9
F5F746399917534D94483A5F577F9DAFD2048CEC24861DDBB8DB69386D274AE0
8FAFD1FDCFF30014FE1DC8921C0EA428E4809029FF9F7963FD61FDF66A3DCA3C
092A691292BFAC09A0A66B863A8702A101668CDF3DB7D7DA528D26A932BF124C
2C8F4A1619F94B19A149AE0478BAED0988228D56F068D2B7D25EAA08150CECE0
D45E10BD736B633C8ABF3817168828BF0535855CC4DC5EC98D6E36532D88E40F
D4C806A800945921F0333E981166F8F5DA8E7B4448DC3FBB1B774C324FF0F3BA
CF583EFBE1FF3856DF768AFD7C810A2697618EDAE4F6D55FF114586FF56F8275
6E7E7E6A7D1D4D7666794EC37FAA311671BCD21B2926BE4C650BD6D0D1A8C4BC
782FD582D931BA20281C551C5DBB35BA8A48F2C65BA0317919026F198BDDB718
47B77FF4BA89C15EF8B2E94EC5370D03AC8DCA5CD34748A1BC13FB31B0EF2B5D
B6CFC43BCE9B25CD64E26B57F1DE47D6F9DAD18BE66480AD2F437E51AE3B60BD
F1033C3AA12877E269C4D958649F887DF4D7213857122D75D80CA3D75F6943FC
34C47C1401E1EE4498B7F8AEBF68A600694C245667C46D5219A5B8A37DCC221C
E80014F807A53945E21FB4794951F48EB177F7241681D3EAA0C81B561E7D6169
FB0C68E45DF7F2414ACE57162F9F96CED4305F6E30A982C30AAF39DB30937DAB
9BC3FDBFAC578A525BF8B960B22DFFC0E2111EF01103DCF36D894D9FB2FFD42D
850BD31A8B4F8E9DDBC0FD00F170165DF48825F719AE145A0224A50FD2541EB4
5ABB32D64FFBE3475AC402B3DEC385C5933EF26C583509C50DE3D7C77FB86070
4EBE8C24D1A37A59A124EEE4AB04EE89A019EB6E90DD5E9973BAC93A9F5B0D60
8D931C372B3188E10E45154767656838EBC4A313A3D8ADDC4B61BD20023FF06A
5F3B1A51AE4850C6FDD082A5EE620EB7E7F02C11C1B52C95B6B66A2DF1FBE199
17545DB191274F7B85695F5F2079000CC6A6A6BA86F20CCEA18F596C2A638DFA
3A2A0E4088072A3C9E36431A09D5373122A4D63FA6DEF19465B3F1F7D9F110CE
E189C3140FDB681FF0181501606A23750D6CCF87F65670B0FA7C96E8D5460074
555ACA3D34D93B16163FFBE3370A736F2A041FD896A90E8613DFA8EC49288F55
CC3673EEF67AD03C6BF5FF5AB60CB740C9C49ED9DEE46462D60AA52AC11116C8
028E77D0FE5ADDEF0931C9EFBA2B76B1D2FD161D0B6036E7F654E1FC0D9A9A3F
BA49EAA38A1B467249E5CD6D40EBC44BE29E5C21F9C6476F02E285DFF1E38926
317766B100C21EBBCC6C6A9AAAD525FE8022690EC7F94604002D6AEBC8E4F899
5AA5159E80FF68E8EA98060610E429744B45DF032165ED466E72502FF6261250
D4FB6729B1CB7E86DB55FF4216E2F57A08E04B4564BE14013E7859D68CDF0BDC
FE954601924C473B761EA174EDFD36B63A9E05D8F4BD13318C16396253CDCB9B
8A28D37C97AAAE4FFE52F99077D9F44558D3CC6C0FA4C45774C836A0A50D8BBB
2E0EF842E744D6F2588DF12DB5F226C6E56BA3356F66D123C08884E9D27DC1FF
FC222A533C86400929C0C0FC2CC452BD5905A58D195FFA89C9320D643F1880D2
7C0F7D73029F171028FDDF8B550804DB56C85E9C77F826A402E79939286D9C9C
9EA63511A449FAE192F7CA09DC02F73B7E2378CC6217567E4232E75A7B33D0F2
61BAB212A112D3C8920FE4FFA7E954CA81E16C34676C1A750B344A8C867D0962
CD51553F259A9FE57A8EB324726265816EDBA8EF142D2940FCF6BAF060D3BA00
9C25F0C7568C71846E413E504BEAA3F459498C6A9219BC87F668804CDB793530
EF5B16FA667198CEBC57D1B984860123DB51D12DCC5FE6AE3B89F87E115F59B3
7B89AAB1E0E69C93A7B937085053C42ECF7716A0D10A9169CA76119AE6106306
60AA617FE65BF412ED4A7607B6BB94936F23D3C8E3378EC476B2556B6F07D625
4AB2BFD9AF997F71E7447D6C9B54BF55FBFEC09764D715F353CF1E33F6EC3983
7B204FDD6937F45C869DD2290CC06E09BD1943E95E4C4EF88B366E91576B6E33
0292D1A03F5D63F34360CEA089E994C36CACD2E02DD5903B14316172F65BD4D4
F1CB3CD4D6AE55A5C48AF26AC80000E55725DEE581FAFD1F33A85B6169D4794B
1D73940984F3C13A9C437607321D3E4C10059C1091823B03DC6084186134C82B
C2BE6F136D0439FF5B2585A53C7CB0DF56759AAE53C60DE5EE3A1E09CE2A3246
B9B5EA106E3FFB28F20906E6873997A3490967DCFBB99FFA480FF4A68F36C81F
B964E824A7C9994B56C119FA5C3274FEAAE4BE14431FE391C16E60AE53C9151D
A7B72ABD919C5BE7F25CDBEC366C096AE65B56E34A583A0288C1874BE8C1A509
4617692ACAE9C6921FF416129EF0D8AF161D0E08F20F4775D00C05AE65EAF85F
B57223FA553494EDAC8460F6AC2302C08791F29A7831480E17EF470AA749FA5D
4A7AABE1BD29285BEA0FFF15CE9237244C917A134DA12B4AEDBE8B6209CD78FA
CCD78AB901627FBE024354EA3E99972EC5B389955A931A37C06AD33548F4F4AC
18830094C3D498A7D3A42D0D06F379237462636934DDF131D6EB1DBA9FD950A5
9116A399EDAF32BB5631E1797596CDD4FB8BC7A1AEE0A56BE8085D76D15EB463
666E08061E512AA52EFF3D6DBAB167D3D5F8C9E32673F7190952F3504C4D5B05
FC33F83790ECFD7641DF3FB94289E2A342D4A7C041B06172198B32F99D58E21B
0A78302026FC91E1AFF4DDD78DDA83C237AF564E874A8CC6004D041BAE1C8B27
B151E8D4F7D855C4EAE8DEC82AA77763238F61D3272724858A522B9E47D4B5ED
68BDDAFC0E87886BF32D8A7DF21FC21CBED006BB1A6EACC2F90CA8E188B9BBB7
392D71113C43E1AAB21148C4E64E81EB2D210E0396FB42A9B03ED435197A7BA6
7F9C704283837A76FF04BEA8A7EF735E4FAB04830EF077A8D788B224C1843390
92ED02E372A1FD7BDD577A273AFDC1A318F77A31D38576BBCC8DE278EE68F3CE
739731BF1BA47AF05D4739657912041306FB82B973E484683DFB445134A9805F
40B046A6D6505B19161F50094F3D0BE9B8A33A421FAAD88347EE89F1A1AF4513
558F46BC41E42F1E3120A19768AA0E6D83CCB6806ED53B9BA76C8277EA0299D4
FF7FBCFA63EF42C617F6B87D60D24F43DB65F27BBE55B994DB8089CFF9A5DC0B
4586C3992FC53F1ED102E969CCE27E89BA1D8828BB42507B524B622F10AC8781
B19CE8AA275F8D67D33C692252237B500D16D93E9EC5E63A2E348BFD9D901562
6DA73FCC4F5A87276B6894D5CFCB7E8EA54238019C4D63AE6E85DDBE826FD814
5968FC237F12812B96EE82815AAA3FCACB059750EBEA5B3B6A7B7D0ACED06CC9
FE528A33C4E84D465FE6FB031B48D904C5120D41EC66592CD31FABB9681E6521
877550339CCF16751CBDF02D79887742EE60A9D67E9BD70A8BE51524F3653111
7B9D11CE71D9034EE8704CED9534746FB31E330BE53B043D4A4AE80C99EC9B00
9467B4E800789E8B47FC364035A7E9E4AEA452AAB51A81874FA8B3B9BA33E5B0
AD067DF153CD2601C5A7C39DE7FC5A89FB868D379093C76D9C6CF418EFA673A6
41E499437DD79826FA99B797CE516343EA03A5D6704780155DE7E7B00A8B99E7
33AA64B34490316DE508679B11650697901D5FCF5FADC38FFCD7F160133C9671
B4329C478509F4DF6F8293785364A5FBFACFED54F04C160CA0742BF506733CF1
C3EE17F2E7C63912002C5FF185A72F8B21D6486CD41A80EC051E875A56A69B48
78239F35C4B188CDE7D6D2D4E464FC6E82E56A66C96CFFA5BC0890A3FB0719A6
950C452FDADCA2259E8CD3EDCA1E3718899444E81EDAD669E0492887D0713F50
CC6394E725C19DF00F7DB44981E0FE11CD42565061C14CCCF75C69FE6A4B6EE2
65EC51A7451C875873165A0A293A0032D6CF19AD21811FD0A4E11C873E88DFFC
C68D865FBC10316F6EC4806316954E90817A74BFFE3D46AE9E2EC05BAB0E0475
8C7E6989E631EEDAE0D53E92B2F297E415393E6B62F58F9DC86556254A8A71F7
0C8BC95E2F531D461A1FFA9FD3D5CCC64D6788FA447CA76D0ACF6B72A26F7C5B
FB146E5B38643081A91DA1D968D161B370C2F9C77266204AF42102A97BC03FB8
6E4321D984F8D0D6B948934F8590F1A4821D500A890AAAB50C4F706DD023D6BD
1C2CA79CAD7F0FE9BAF8F71089C3F94DCF0F333B2039FDA78228FF7FFF776789
5FB02F823B2BFA42028000B909A434F417B4808AF41D9964639CAB683613033F
33AF70C0D4612011CDDE53EE22DE1EFB9A833D392577738F553F81135829F911
8F4BFE20CD511909709B8A2B24D0AE624CB648EF0A2E816D6C1C3C83FC0DBF70
CD5E15CB2104827B60B86EDFE9A595ED91541B4447DA42AA66523FB8F1BD0C4E
783952F977F27ED975072681E6DE4164A97731F59B6017188D449C867D7B28D1
D15A38CA190459E4C22CDA8CF8B8453CD009E30C9E578C66C9305BFAE7C13C1F
AB1CA780839B0A772D728B695172E69212F0779847BB796F72673EEC990AC2D5
3943C6F2AFAF1E15E6F93FE6EC986EA97D71DCFECF0BEF571355E998277FFF14
62C20004A36B0F62CBB27B688DAE79687956AD9C82A259B0732C0B7BAF37CC3B
82421D5A0920CFE21BD35AE01EC6E1B2CF12B2829BEDE804A18D8BB311CBE4B1
A4110A2AE9954350CD046D5BA6B1D6BCF35C3F9A1F92CDBF540E19CAA67BAA70
D5194FF6BD94FA8C0B1EF759617DA7A5E0609B5CEEB17454C685A003DA9868B2
0F475C9BE97DBF3AFD9FEAA5AA98B091AECE8681999D7C8CE7081C6702902CB4
97E519444446F0E2F2A2CFF9963C615AAD65406A102390DF6D9D25468C1E44FA
0E0EADDC2F494178B610C0809474D611522E42438EACB09809CF4419424F300B
0046CF004AF4D76C8434E66ADB72B6710A1830B4518F1C8AF6D1E19F8548D3FF
177F057C58A40714D71570D0831F0FBF5E2D086F3115B185CBF6F362C146A2D6
FB628D9C930DAAF6848E3A72DFD018BA844429BD3B5F207E059619411DAF8A02
87309BFA82444E5EE17335B09B876A26CDF8AD1DFB826B01DB939659AF92E960
6472B06490C88F936CA2E00321E3409D9DFA02B028A167200CED345E78E758D5
3BA23DAF7A27D7B8A4AA37682EE78C5D82E312637091F0BFF52641BE2CF1C8CA
F1C9A29877B0C9A9BFBBEF2092ECB82381D38227231EF52D57B83A9F1AECA283
F367A076B539A132E9B0AE00CEF0CE6E6719426A03277C4161C88FF591E76C76
854E53EAB3FF67CB6E0FDE26A3E257C342C1C6E41F41D6BCD36AA9CA66244CA0
1183223F41A43C87AC222FEC51C58D0E6FEBEAC22FDDE5DC2794707DC72EA36F
645E4951E3A798A3245DC59F58953261D63A41A2D6CE300AAF6E6B603C0A74C5
45AA649B9388B791AAC5166338114EFE0E85508001E9185D6B4A80C1BFA827E4
F15E623A96FA4C467947187169E8089525CECD505DC35CB17B6D8F433F9402B7
4ED7F900090A037EE1DAF46C232601AFD3FAD238103875AC83264251DE616945
97FD026472CBF13D266D5998D4D24291CD8C64D1D3A285AE340C660B41F45BC9
0AA2370A0F7C555721D258DB8C4DC732ECBBCB771FBEB2812722970C83A1C469
8C66A8C900013C14ED7BA85AA0346DB69A6383A5CDAB2CFB5B30B3566EB48440
D16A80AE81AEE13D9A8D6890F4E2E9F09632FDA612B34B33A9A9CC2FA7361AF2
7A3C413336CA6D80889436779796A91F1033670982DAB244253B8FDB3BF67A6E
AB2D85E1224C13556A9DA6B6D6EBCC95F10564A8EEBD04E36BAB1BF73E962A4A
BDCFF16ABD469355098D66EBFBDC872C663CC5956D7E24D60552D6D4AFFAD469
9B8630504F937A28CD02D884339DDABDED0F05A967215A3B09EB07F30718412D
745F0B8A0E1619C031273FD5FEF8780494398BCE839CE7FBE862FB6F39C8BC9C
E0406A094A1C6C63DF99725C9F2BE7E9BF4085E41C119A58C91E9E8FDF768069
B0E1781EDC78E93F64C1B30E31886B7B339A6BDA7E4A3C59ED5565F2096BC24D
7F12FC905E2D6DC46254A8033A3F755FBB8515426BB432CB6210B93F60CDCE22
9944B9CC67F7AF33B63A06B6CF52D85F449B56C9C6AD6354DE2C383BB4B4EFDC
6DD658FEAFE642F6F311E3B19D924302C969561C704F60EAD3DC1DFD8ABEE45E
EB683EBC8907E814009234E2A36E8509695ED769B43D21EF0238C655ED7BAD97
BDE4506469608B927342F62557BF4BE3E129E53DD04A9CFA95A90123B1420C91
601273F52D70C4129BE7F152AEC7A700E56508097365B5687EE722C6165BD6D0
D219B9761ED36F80ED3A76EC6D9C5E7990DB49AF3493C1C7FF5FFB43424B406E
C38964A6B2E6E17F23F40EC0382273E8979A4E8E3033BD18D3B1E5D72540938F
54200B5956B0333D16019A6A972910DAAFFEEFAA0C2F8BCE648CB826D732F60C
7359331530EB552CF3C551FA261B850CF9F0CD0870270F0F40EFC13B6DFBC3D2
85A49BA761BB2F8DB8234F076977B2016F185EAEB3B74487C8194E68FAAC21A3
F35697D77E0AFA4E230AE401CBEB5BCDE8FB540C0B2473F20BF05A8315BBC311
78398C4DF2A30FFD8FBEDD5EC891750D70F99C2645865C0356D3C0F9E9C8F2D1
1C5BC1C5A5A08B942528B4FDF9E42A5F6A985114B43BF2C33DC31FCA94F56F2E
E78E51767F35D501171B4757BF7017016826D699540EDCF90853ACE50615E598
AC1D7181D637A568C615AC3791D8E50942287F1E586D7E438C0A638968AC0648
1BBB1161022A4A5AB792E07A5CEC917631CC377558E376564CD974075C16716C
BF0DEE7E713FDFB10EE93517665826A01E9F0C9B401CD50129F4352F1626A0D0
40E4A14A65D5E4DA88BB92626BCB8A7F33CF3A0FDED0414D55900D3A68A419E8
E74D7DCDBAAD3059CF7C83F63AA5816A2070019D9D1F452CF51132DC14FEFDF9
9032CDF5F935D09C24007F5FA087F03014140130B04F67B9761246C24FFF6BD3
2E890B2A372A27B8D0964D651011FBFACD0470F350DD2D42984239EFBC4A36C4
0D9A406871E2FDE9D7A8A0DB44EF0FE0D7CFF77658880B3935EAE20F85DC7109
0285BF94810EF1DA43A534429AB67EC0C4DE496A308467D7C7219ABFF386E03D
9C1C9BA3F119A8D3E1CA21561EF4B2AE9336BC2301C2B38FD9308BDC1A1B3482
A99DC90A7DBEBE472DADF79F03E033D587BD339F1688191C4C6F8BFB81E75EFA
B7DB849E5F5B6A20485B1117148BB384AF3E32F5F589CC618F5D88635FBF1CCD
40245481BB1E3B69ACEB4A1273E4EDD9885CAB857C1EEEC8FC6F22C6B5CE41DD
ACF85056CAA782B3B5C55BE586BCF89071C9EB5BEB228C5A1BDB415F80A4C9A1
4DD9CAFA0CAEAF0A927D5C7DDCE03DCCB229C4467BD9C026330CB49738D78117
6A3F7E85594D2527389A7A76B7DED6D68C89247D997C8C95A50D1D6D582C7A94
DD0AF9D942F3293E79CD0191AE8D31094AA4A74D6EAE388C2141AFA02D2B39D2
D903417F1035C93BA9ED147C13AA12977271074F78E59A64D710D418B800EDC6
B8980D39D4EEF5CB0DE9A33BE5465E9331D5F9AE0D448ECAC99D847B15464E7D
C2E8F4F4B83CFF8B1EA27CF25FC106ECC25415C1B9D1C3C75A8A0D98064079EB
39E1954DFA57B09D6F27298BAFD33B0B18A74E99691C0882238595C7673734BB
34B305133CDDCDBCB7528D1827B86908FE7990EA98F7683D44C819DBEA1155C0
22817494ED1E5ABC8DFAB1D20ED3ED771168F91EDCEFF4DC9E572DE12D7C4FD4
55B3D499C36E95B907FF994688D9FE5B4FE8DC01D8F622ECFE3FA7C32B54A527
8D8300DA6A271351A831E47B7741A1EE4FF0706BCC02E75D09EC67483124923A
2145E64953D1431E63A25EAD36316E81142096A7719209AD3226D3C07F56A4A4
3758911FF6B59313804D6960AA6F0C136BBED6E020CA50ECC10075B815F56FF5
DD3AD6FC34DEFA4135B582C1F02869A643EA0201CA3D2F073F1C099007CDB78E
C136802FD7A3861CF652629D4B61FC9AE4CF4C6D1D2EDE7E91A3B93883DF51B0
C10443928450C6A8E646FF41D69055EABB539566AC94486B04DC1D1FE39B71C8
3A32D586C7E6E82C87B13E06530C14ECFC6A1B269DF1B2469CD62C53887F68EE
D03DE18F36FAFB39DCB99A05EBF8305341811EDD07010911E6A7AC69B91B1540
0EAC8A99511A28E1D5A404B8B45B2DAF636CC1011CA07C4C11B8116132081EA4
EEEFC3CD2FE26BE20AF71444421AD1DEDCB05AFBDD95032B9985F716E224A3C4
4B3E22288F48AB1A12F6647BAFD829244AF2BC290824B10C3779A1D304018A79
7CAA35C737F3DF938004CA4E9EFFF243628AAA4DE82506E7798657A420F4AA92
EAC4D3723EED99E360D1784EC0867AE2471C93412D93033DFB7D2B2F19E582C9
3BAC4A5C3CC6895C0717E2271C6A3F722B2F6C2CCC357A676002528C286AE8F2
4B4C1AC770D3C56ACF5452929765D630AA1B750AD0340D6956C7DFA6247D0DAE
0422A5CEAAEACBD2D5E9001579738029B0E7F635C6C492D498D254165ADC4C98
0F349927924B24C1112097012130B9E494B2014160CF85023E0F171856279D43
F1DCCB8A221379CED615C2118100B781FC15A582A2C7C994E02F2D00893A100B
EC19E13A6511D4EA600B1ADC4C374DDEA72FF03F2B0335B34C7586352420262A
6BD8C8C869EB0A3EEFA4F53DBE3356BE438546C0FB741303E40B36D443C1DC10
CE4D1B7A2CE5F56F369AB2355524440AF77D1C96EF46E19E446B8C3075E3829C
39B4AC1F18258080677F5E20C2807B3CE00CC05F6CA1D87A1C83530D8C7C9A0B
3C29536DCB6D816B53B45385444EE30D969A1CF8AA5A9459D1C5B8CDC769D992
269E6EC4631B1B75F390E2AF8ABC55508E470D0EDDE6465223B3ED9E26A5DA63
5F7240E389590D1BB9D82D6C8D5A1ABF35B55863027E4423E82D09E3B25FF0E1
DBE28CCEA13BF406A132E36A5DA059DA3C196B7DFE837D30F0A10FF0AA866D29
6C06659B24C73E424480138614EBA261D18BB1A26E4C26587BE62FE21E860D87
F717B64823D752D183A031142D09F63FF2DECE01632A1A1E5FE7E08A2CDC45E4
0E5DBD23BCAEE932D20D9A5B4779DFFAD7B3E5D447023D643405CC465C0AD128
085AE31D620480D82B5151EABE7357271CFE4EDBB7A447DA4C99661BC83BBC77
655DC7D7D06E46C70C954BEAA33A81A5EE27B9220C89DF8C7471DC7F4C301E5B
DC0E125346571C3AC8F053A09AB668003B272997D2F5991241159DD6AE25EF91
EEB3C51C3B43E84A6D35CF39C6C3E0846586077E38E1DF1BF4C8C223AE92248C
E4F7F89B3BD508E371B2A78B89881D1E6F9ADFDDC9B304E5A7B771CDAF558152
79A3B8306D923FD97B2DCEDAC4B5EEFD6E6F284597DC1016F2D7502E91FD70FC
C0EB1E7F551C355AF0107000AAD14CA2DFD883DC4CFF0D4616E8BE9BA7E7041A
0DBA006FD9963174FF863FAA0074AF023B6737631A91A605447FC44BDB516C6C
2A1D338FF0DC4B537BE320021EC1102A196BE260790E2DA6BD975D523B7CFDAC
57C03F5C5296CE274C11555E048334DAAB8957305817109C44A9F79C2751E13E
F768198DC897D6AE51B8EE6A26F358B803419C1016875C2FC0BAE2A92A3A310D
956421EB00D5E9FA2169518A8C7570CFC6238049BF932E05C2EED82EA1183B10
2B4387AB3FAE8E95C459191023377A30F50EE2D9C8C41FCF68538BF2F1161C8A
F4879CEAA37352D164013DA9C1D285F15D9676074A7E31F7C63BC4DA2C8E1C1C
EA7000F63CA5BB35309C511FCB552194CDACD36DB6FC331F8FB67C9AEA7A62FE
EF366F2F37CBA48E2A26DC6CE7C3F1CC174436A780EA95E281B0649DCFCEFD96
9C7AD4DAACB1EC98EF2E286A0087E30C8F91B3991BEB10B121C31DF3A3828196
C3687F15C4C86957018D428DF6244A1FB6A99122B821E3F79F3B51C476287897
BA6BE3AE9206F151777329B5F978BD5AC554C7A94BFD3A91B3FFD4F252EC7052
7D713545C985E9FA2045FD193E6EF5F8491B730E6F3509FFD616D59251F4F6CA
F977301DA14F4A4F3537BF6AFB86E6122D79E9E395F5CAB8B4637839E430222C
C6CC2A3E558A848CE3BC9F4B77EBF56B7A4ECA286953C8343219E57A2C1CB3D5
8CEB6263F98385AD7400228FFFD7B495D8C432D525376DEB06EC5DD932D3A480
A00C51EDF3E1439BFCA97676A0BE66C3DC66AA65B67B6294F4F8CA0C700045CC
E64066306B98AED8E8A2C89898F7DFE123CC7BB6AE47BB87F744D96549B1CDC6
167DFE662331A295A4D21658D789DD699CC8F0D16A130D94B5CC4531F9AB0CE1
206F5310102445D7C08FBFE6E729430D7703B2E3F01E5BC22E802FCDC4A04288
8BFCC7D504C91133A07816AFAD23482C4B5B829303BE97BA56FF7B5C55CA883E
95575A8B730A57721EE9D678A759A85F77BAEFE771122518F8DEE14A3BB7EA01
3687ED3699AC7411ABE1C0AA4E3FB3E64340399F7B2810D439A4CE8FF9756467
30E1543C91903100B8AE9369DCEC61F491A3E6DBBFC6F1FFB8A486483FB09DA8
26F677BF6ACC2410A6836EE84354211E3953CD7AD90239C1FFCA061A21652102
1B47BE476AFB688358F195BDCDEBAB71622D0A07E886319C68D4AAC414F30748
8A9B054FB5B4D0A2B019B3CA118891B7DCFD58902B637141C9C3FA28B55B1B5A
21BBD806063DBF3FE88A4C5830E729FA5DAD6381F95E1E4781495E7F4F842200
0A19374BA2AC998381014D763F1FE10167E1E179672B39A54BFB645BAB77F298
B4C43E15A84E7DEC11305BED91DF513D3154E0773828B1713C5A2C8C8CA8AD83
6B8A0941B37247789EBD239794BC3CD024893F8F40AEE5F1F8459C2080862F0A
EF17E80E36FACDC39C24FE381DCCC07F086FFFA7AFAEE3E54A00B1CF2C360B3F
C6A0A62B66FF1976403B8C17B6DB619D0DF878A2764DD59F00B920D3C62C04AA
B48F6BD8C8BD63D842DD21B0A34288A49CA23BA885D1C34836249AEF8ADE9A6E
1338BEE3601773287512DFA96E2CE6100C362812970208B5113FB87655EC865C
3BEAD9DEF9F2F8521C29148BB04ACFB1FE71C614310AFB51163ECE573EAB9DC7
323E1A7DE759C6BC99788940F8ECCB6AF7ACD21613127C3F9F56BA5DB7FCB608
1B9F3129D1B5EB155884C30E60303240176D66D31F4B4F23B1370C6929AEC200
9D38F96D25623AFE9034E573034979B6D0F7D62021E05D2622D6ACCBCF96948C
6A0F57223555F70B4116FEBF8041047D6AC4D6CEE647700DAD2DA776EA703E6E
E873EC0466221501B563FB3A21150ECB02E34FB17C3017641863963B8D666DF3
96C64D8953B4F3B0FA8AD33C0598C71A0DD7FE780D21BB0FE151482CEDB0C21D
3167BF901A46027934378E0843451E4D9840AF87F800D3B6E0248AC51C4F1CC1
4B5541515438E1F36DBC13E11854A23AF95CFA32B1CE70ACBC2940E23F8C860E
AD0EC4977851FF7A788AF2657C5EB7F326F77E7D2DFA11F16944AC9979EBB357
3F5FA1F1AEE941D71BD74833CB42F7971264162BCFB64B95B60BF4D8B3AFD0A0
02B3A6E4FA114131410D54E8A27FE3E0F8CC792879EBA47B6EF16E2C6DA9D1EB
51053B5C73E7D6A82461ABEF2983B43D784D9C57675575076828357EDBB00B60
E26CAD17086C48CEA3FF695D5C2FACB4EE5DFD07ACFFB18E8DFDE785893B5EFD
6019A331F48C3C0E4961E43F3E7435458B0FE5428EC243C02581A6B967861F61
01C28B72DAD6AA1128F196627E2411E73418FE16859A40AD64A8C869C515A069
6A8E3E16985E19EFC1DC2B9B2A175DF50991D208AA0D133C8309DB85D0CFFBB8
F5C0596D7DCAE8455188E2741758394F250CFCDF5C7834138A16E9F85EC91275
30F18DF16ACA8ED48C5E57E07CF0A0966ECF94F269208FB8CC62857044503271
D3A53CA653BF2735125CEB2D1605B65B5550F01D92944FEC39EE946A6047F674
EC3844C7A79BAEAAAFCE5F0F63F2F8A60EA6030C5280EFF0AB91AE4F207B8606
339DE4C40DF6EE70A9FF4673948A4E98E17F6D7F9D30326252EBA4C0622D2B0E
8629AC3D2BF93B07325DF94AA98E19BE0B99F0EACAA52EC073331BABC2B016D4
4885FF0FFDA5E4756A2D4B952A209C4A54244D0B32FA217B5849B3FD81E9DE85
0E1F7EF7C9BFD0A320D5F807D1B333989F371A8F30B1B39DA9B1F203A2814A20
0FFD12975AEB91297C8AC75E14B1FF34449F491D791F5D8487FBE68EA347E398
09F30562D10EE8992F88624EFCE437A596605D6577A03DE99BB78A0AA1139DF5
414824E7D678C35410161E7A841ADCE046C2079EA5BC0A9AE90D033B585BC98F
38CD281C040714C328B831F1FF08C8F7C7C8713BD09F1D6E4B8F925E54386918
0F1374F8B233A229997F1B2D22E3BD0A364F4AC9FE64C0836B09C67443D60F79
5A6CB08AF08E8E864A163A4B146C170492702E4CB417EFAC4D403595265F0306
D9CB3B26CB5F05EC599AE8B6FE7AED268986B789FF758D29DA2A03176C992BF0
FEF13F6C5D87F9C357CA8E2424585B9D34982C57A188584184656D3ECACBB7E5
701BB1EA4029C7C87BD078DCC4E03A99209B7C8C8E88016AA1A31C82587A0E78
88C571F50A079F9FA757931F47EFFD4983A7A210F25854C3FAB2837746F7F0F4
DF90476B645174CCD82C403CC2185F77CFB0784D0778A4244CAB4895B4B8A016
BFE6DF98F379F87A06CFE89468752582334DF1B004E26F9A11D270887786C66D
AFD810AE43AA33792C5D2A5A2B1976F8106FC0C276CC5020EFD9806976AA4D80
E4FB2C64C79C4E7B77F70EC13EA3094F688025BA4F6EABB40CD8F32C222A02DF
36EB00F7D3E3D2947353648C62BCFD951918E3C38FC1840E038E8BA4484C7191
BC0D3213F60CDC546ED84D1F2319C9B70BC0CE5C72512D196F8D1BC0B3FC12DA
2D13F4BC3E2DE1067D627362649D82A5C3A57DC5041B1A13FD29F3A19CAD4F89
1DF034AAA2F22EEE5AAF118E236AF7253036B61AB96148B87232D14B426649F3
38383587CB170048DF972895EE541BD1EC657ED5D3BD43A15CB7EACAD86C6F12
27D0D8FF71335393E9F72BBFCB7462632EB276D7F9BCF1CCA6A445A75C92ABB4
411AB26F33DF25E6D0EFE2EB78B30DFD071C1E0DB93C1EE96A8C4EA48560166D
EB786F9F7BB862DE9557DBBABF3A9BDFD6C700DD818753AB024B3868C0DD7737
0B3A4C7B16C5FFC37C0DA100770E97CE991AFD7C74C059790FBF0497F8CCCE35
068D75EBAB53F758648FB82BC37BE81D825F1372C738F67FA8043A2240FCCFA6
434B1639A763B4DEEE7EFB151E631D8F2F796E97E492D77BAA5654806C9CAC0D
5C47C26FE1795115AEA57B785862408C117DCC0D93D513E543164E76CFA1DC42
9B4EC14006AF6BCD22354818845AF021529034AA18227B4F8A4C88659CA617CA
10B64B49924C39894CBCF394C781FFEA191AD06ABEBE440B9B404205D12ACB83
4856A2A46D83CC900DFF2B519493C9EA98E255E2B64ED316D8E1AF7338C0DB55
745D40451FB0909789361DA0D7AB8B979BD91DBF43FB52495F20DFBBD34F85D0
6552386049D59AE3294A5EC7D40F53AC32B7BD656F43EA64F9E1ADF4363E6DF2
2BA29E867F335A43CC2AE80A5D4CC919ACE4469031D07C171363F2A5F9E7F3A1
997F93BC5B9D987B94B70D0A1B96489B78A821417DA309FEAD8D88BB59034060
C90D2A1B932C5284AFFEEC0FD69475D7C8CEE1255CCB36DDAC9B974D3E6419A9
C4CE689E38310E3E238ED8CE6105F38E5492F48B32002DE2018EF41C5D418651
E3B1EDFE3F14ED7BA85AA0396DB0331033E4F074D29DF85080F069561019E04A
197C34F926C4608660ADB1585D75CFE24AE35F45CC9BDDD0DF5E452944B5BF3F
9610B68E57D33378ACB8ED7DE1BD525F9060D2BFEEF8BFD513B0380993B8D52A
6546D69D282BBC4902525B340DC1C81FEDA93B71B3D20D44DBEC13C0EA68AC4E
643793794D37B4E4C82C5B7B12A1A5E42D445AD5195386BA6347E0F524F372AF
04F2704D9367231B1B8C4102A58FD666120CCF61CF7A1A381FF672442A66A601
DE0AF5CD890470A3F4EE079E42B7F676EBD85E5F21FA095C1BDD305F5573D973
0FC77CFA2FC6D465F9F7962D9296C044BE35646DDCD4373D11EEA2A32700D13B
25BC43FCCBC12AD7B5C8507DCD5CDE798B725558C8B741341F24E8C339F1748B
1656C1B834BD195096C9A61145921EBA98A70B52C5B7A0111EF4C989C7B3A747
27AD2AA6306C89D289A05C0DB12DCD9C4CB0C0C97CBCBFCC599720FC9CA0A2B4
436E8D791D6E09587C4C0799B8DF9651B5B2A9B70EC43DDF43EC33AE15F8406C
71B2405522123900F1EACF0056EA088F668D17B5DE1B8D5A413287D9E221BF67
68D98EB04745EDBC5404E5366F675032DB812A9694387BC6A7AC6F61682B10F8
10536A999BDAB4683EA838449C729ED3101948CBFAFE44700EC4BF9802995709
60375835946345567C404F26738DB2B8A6E5058BE0F60526DBBE8E03AED121E0
B7682D0FB7097EC5DD812DC7AE3950B73A98C4C8F2BF094E8EB21476A72B6124
E24D2AFEB2FD43716529EEE764D9AF9DD776179C1F610A95C6BAF7DACAD55E2D
C5EC1127D3FE8CBB25636FC8116F538520DADC33962F96B40AEC7C81BBAA5ABA
19D3F590A2BDBD5203E3E627C214606A3B03A8BE0F776DCAD22C0ECCA08F6B29
876C079943A661301405160F91C9158DA111A14094FF9A979F99AE37EF099A4D
AB23C36C90F3E95CC117E21AA4E3A42C7E69DA6CEBD01779BB3D2F57428D0E9D
A501524CD28C00303A6879F7154DAC65BB681F9C9EE050B1905A176292A94797
26917A19DDC0DDD30C40B6D35742A408FA77154EB77D6F5248169DE0BE9FE903
A205E1854AD4364CB8A30547FBF908AE0DBE5C9F1C5D944E99D2FDC58F6E9F77
C8A04B529CC5F6D034DCB47B5C404D62BF45C7F684E59B9AA6628DE752E1B27A
902B371A2751DF250627167FD29136A0B3696CB4B5C865179B3FAB830E1EAAC2
93AE37EE0993D38EE115BC29E2E9BD012ACAEAD854C136E1C0552DF07AE8DC38
A8914B445B822AEFB5E3B6C185648120398E67E38EA72EC4F3557FFE145590C9
12BEF49C28CE53D3DB4CAC630A2049D5A06F34DE2335626096EA26D57B94A928
EC90DEE447DDEFB6092A54D213F2519554C19369F0F9509FAB667ADD5A9DE04B
77BC897F50A7A62C8A3F5556826549F04C39EECBBBC90596EFAA889F6602C6EE
75686E321C366337D000007EF744EE23FEFA98E0CB042272255EA411C6FA52E9
323191F7B83CB246CD2E4BD540172BA8C88E7A3BC28E2E7BF13ACA6B3BB54E58
726C1DE83D06F555187F54782429A21E2A52099C6E75778A369CE90F50DFAD06
744BAE758B478EFE5CBBAB5138D6E4ABA252744F50875D73AC81C68EBC2B8D9E
9906F4B5E57FEEAAF478E98E1699826FE8A7CA7F40D35FA102FF43459B999D5C
8219CD7C4210F79D61688966D47877D7DE7C061C6101A00C49620DA84A7D1D2E
E42BC5614F0744B3D74E62EEDA77819CC32E81AE692C5AE0C53DB380ABB869C3
618B150E779FDD9DB73AEEA11615E7DEF726AACE3F2887472097BB7656081ED5
206F2827191B4CDE8CFD750BB84B243FC3A0CAE847B3AD58CBE7B8C5C86283EB
42911BD39204AC35CA6C6957C87931BC96DE8BEA1505C3220A0BEE7F6DC55C0F
4705EBE271BDCBEBBFD886BCFF63871ABFDA775D909B05A0FB959AB1146098A7
CC2A6B9CED3DAF35E795A2D32193DC2E11E51EAAEC0F6DFE271039F5041056A4
3F90D0E6A47C2521C1058E8C6689469800425F12AB398D1B9340AC24BC42C1E4
3A2FB584AAE8EB5789B071CF0454074929A23EC014E6F3D1E6E161AA8A06D584
CA516A265A9132694BF1A6C96DCFEB832CB0C3C9D3472BEA86D0DA84B4059D9B
D98E4777F4FAB956666D76CC013ED5E37335532F0C9A69AC52A688A6DC975609
5D1CA40B9417A1DB1BC9CFD7A726E5853FD362FFB63EC46935535196CA29FA21
6E7980665A358233CC72168C4F4CD1931F0531799091E33346B8D187E6ABA17C
EA3123C98713B5C56EE1B48F420EF72E004E44AECF90125691AD3748B11E46C0
0E49F600D172F96805C8906FB9103AFBCACF97B5495F7753CD1D73627E057EF9
956FA896B5F39F677BC4DBA62D66DDDD846FD612DC959E228E8C6A5EF12F6625
72A2EF5242D59F0745EAA8E7D305ACCEF9318B2C17CD66AAC38D8C282C8F75FE
296873B47C98A95D9C3312AADD7AD406237C98EE68FF27DBBA9C5F1CC1D168CF
1DCE3D95F87F1A0743CAD046C7E400FA49FB543C9665AC12E3E08831E39D01EC
8BBD6FDEE4AB8E64B27D63D52A19261EAFA7AF8CB7EAC2FA66A6F7562B0B2E24
92DE8A5713882ADEF16D49B8D4825B2B193F656C77F37904685A12B79B472DDB
05FEE5DC809F7E508D9FBE7654F08D93E09F758085C5DEDD31F9335487273ECF
D11165E2AD6B0EA750B41AF95D6266440E735EEDA834A5337DE8E2828F7140B7
02676FF8DFE9007BDF9038D3F0D009AE8B14BF5779256ED398FE2E36FF4AFDEE
42391203077ADF662302DB7D10DACC0040DFAAF2367AFEC0067BB13D8F683635
2F6EEDF417E7E48DD3CB625C856B9AA30CCF91CDD1A857949EE4AE257E3E16E3
47D219CAAB512DBA3AF69652058806B9534FFFFDDC75326ACD187E9EC83B851F
9E1C54A105463778A1EBF8948DF71579D388CD71407ADBBB7424A457845B7845
887AAFDB061CA22F48D51A6E60EFFD2C736412125D9B2182DB538D787BED5D5A
0263BF9A04C9B5CAB60D7BD3B300915D5065A6C1771DA9880B01DBF278E2F94A
94C35F3D53AFA070CC519DAE39C86A8236A3106E41A5BBE02950296B0A8B0C59
AD1AA84B08DF020B888B7FF5C20E1DE5275CAB236C54C7202ACEAED339664C0C
D1242E998A36F39DE19DF1DE3DBC0E3DB7E062C1F6290569E381E282B42D22BE
2D63B9365804BC7023AD73FEB2B2E479C0C5C37E9A8165B5ADEB9809F7D1BC6B
D82429AA14284692D2C5CB4B22DBBA1ACB8F598EEE92A34D506A47F94E038FC8
D1A47982B8DEFC0986D1E671C043AC39F303B270CBD4DA333EC3590B3DFFD113
DE164F5515AD6F5E1C7DDA7131ED018C1A95E8D3B4BDA9BF882803395C37DB2A
3EC67013526C24BE98B70F85EE2EF6FED3E750AF1A0CC8A317E994A971C1F0DF
10057A3E380EE49761BFBE4FDD5086EB274B521E519791A74875FEC2A87B9E8B
7C1FA0EA099B137C407838D9928308F69613AD33A35DD42EC037F2FBC40D4C36
B7B15B3E964F2B0EF280997EC5FD15190B8E5CCECDFC62563CEF0E33E4F147BD
DB1DC60788C87481DB71985BDFC073C2A4E0B368A4D211E1E7AB860F43C3BE6F
6BDB27152281CCD2C36B626A84919DA17A18D67B19867C42A4CAFE78FBD45E96
FA40AA847DA55BF1A8F1EBABC170E2D39A5FE16F823F199669E4547A1D5562B3
905EA9E6CEE9CD4075DE41C190D9C0BF5D9B60753A50ED0865D5512EBA432B5C
F77DD110A398BD8154C559F6720A1802DE9CCD0432D0D8375B7A147C799F2D9B
E149A8A5285E51EA524793
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5017EF863393113850793875697709861E50EA63860BCBD
4746CCFF44F0A170A875B6245B17861E28EC28D50FB9B75978D4D7919969931A
416110D7D81BE6B6F0862FE61618E8B5575F5FB13461FB79B473A8EF5C815A19
621A9BC5B1C703AB24CC6AA36A96D66D67F077FD6D0977E8069DD79D487A67EA
1D9A22A508EEA8494F7BD45B8D65D5D4375AD01D63E8F687B541F72E97A8A2B7
B1234351BA9BD6B9887890291B5550FE37F5B87278CFDAC40645DA187A19B922
7D76D85DE32DC43B9A9336AD5DE21EFD4E20615B53B485BD8C1D3C456F9C3D44
EA6F28ABE61E3BF0495B45AA403678EE2904ADC8F4EB97976EF328D6E8C7F6ED
33A0C777A8F348D5E2DC2158BC1898BBA676CC279907E39B68A4A048BA368135
DB440925CABA05B8A13B2D30D143FBC4FEEF7FD5281A016ADC60AC66694EDC07
0A1CB0C62E64A0059FD24E9E54D410482DA1202736A20F2C98854599C14B7B55
2BDCECA9697A81C5F36EFFE4C3EF909791E274A8E1C9A623B3FE5289F9867A5A
02CCC668AB5752BEA5A7725B4115BFD7BB646135640E1A18A9EC9DE3BF295416
1E90596A2675C1FF1ACFD97654CB959F9AB2CCB8752C341604BF43CC74272C78
281DD6B46CDFB5424CAD9B2753E3A579E444F20845BAE801DB3611D794FB1A1D
878BFDBB49FD8DDC5D6C6A0A76858D65B37ACD231F38F7C8D339BBECB23938D0
3CE97C90BD07BACC024235C7F526F8865DCE2406EAFD25D615800562683C24F3
BF144363CF12FA148BE140BCCDE6A492EB51BB2A1044B616C6A5AE051F9FD215
1F83B22BF0450BFE875A6D265BE53CB4F79A25DC42832C04D49E07AB2AC90AF7
31CF03E0FC58752B3FE0BF954416727160D5014548B232CF00A7F4AB92AE5949
6C6185494633D01745302484701DD2D9A0FD6D19295F9B3C214F7042C9AA001C
C1B3DEB3D5003D79CDA6132C4B4DEC0CD6A8811D488B331E70EE14A11233897B
E386F3FB0906B3E33E84ECE1BADC18658700DF91531080B2183AEDD0D0C91096
3C7051BD011A23B83D428DEF73096509FEB365AC458F5A2805F1DBD56481E0FC
549F868B8E06D5BEE6027059F6A3133AABD6EB593B60209B64C4FDA26332A806
1DC253401B1BF6767BFA06A3E9D06F41AFBEECC86CC68E62929B87F2B03692C7
5C75F46415FDDDF133A57E825056AF8308E119A6A33920FAD9A7F7732A93B98B
15310A0A7740E3F58AECF7F3C700D961DF8E1E7DFAA2C368AB6EC4349B645B4F
DCAB24D2B1763E8F95711B6E9CEFC54ABD53EDED9E8269D8EDA7875267A4B403
FF8CD91C57640730DC2814D7502E04AF62AEE24F2C22CB89AB14738CF5D96EDF
B23CF331DC2930287197856D34EF4DEC34F23A97CA65961E2C3112E5326D93A3
DA34C007A3E2254FB57209BC2C617FF62C1960390563416072654824F5E4E1A8
9954B7ABCECD7C883C5305DACA4FD6C7FB19F802AD6F90F93BFE2E417F517275
A869047FADE4A43300804130BA20217ED070C46DF8D0695BA0457E13D8754903
869694DF2103A152BAFE7EFC61AE76CDB19139E9DB0898DDD7E71B0A8C7D2B46
C649C72168F9FA5D38F90B812A9D97DCF2CD6E1C6C12133CA7F88EE867F55C82
427C497210532A273807A39D4106FC3F83A8E72786B682CBDACC80A30C966F9D
97CB6BD43E3C7F6532462C94E11B27A988F52BD4B7318468375027FEDC89705D
4701C87ADA9B558BD972392FBADDAAC8E8E31C37CF791A37B6593AA0CB1583EB
DCD762E95DF6479E8CDE80940650A84EE8DE1B9AFE745FDD9761E2DF9511AED1
3550042D9EEBC8FC7320B519F0F7FE1FC69BB9F34F7F5A0FF96827326655939D
51DE10167B3A53C74A25AAFF389346BE0CF59F8EBBD58E29B0FF5F1B2B6C544E
530D924E261676D7B8EFD56B90DE13F50BA7364E3B347B4121555828F5CE5884
5D61D92FEC29B35F139859B712B1EF3218C0BA582B7546555EF6C33E74C02E8A
7FD9C8F2F07C376CE4A6641BD19B173B00D77E69BA407D9E4507CB18C07B9861
8C12F995ED890B8AA75811AFC1D4C507E67D4F2FA04824F1ED01AFDB574A939E
AFBD724A5187418DFDEF9F2D54BE56DDD663568733A4D938367345F973229A88
482D6287DA239FA72A9AD33824AAE39E2893AC79CEF7C47A77F0DFCF29ED0640
AB9042106C0818B2AA34289F56B471BD01C6FDE62FED2AEF9C150B41EDA79AD9
1A3E815EA653C662BD8BDC2D20DA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic10-Regular
%!PS-AdobeFont-1.0: LMMathItalic10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathItalic10-Regular known{/LMMathItalic10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic10-Regular)readonly def
/FamilyName(LMMathItalic10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathItalic10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B30E8028C685C8FFFC2
3C0E2BAF712D9A4BE80B6E38C9F5A449DD2DCD493C0A130001F01DB02EE2BE50
8CF3C1EE0898661980578B4396FB3179F301761100231D260FCA63E74EDCCEC8
08E4BD0AB6545195F32F881C99FE3877DF3BC94657DAE2BD20767AE9DA7D582A
DF256F4A52C57F9D228B3E1CC5DC93FDDE8E791DB1E6FA18E0B9B2423868792A
2BC90B78D9F9640524C758D0FEFB713A9A0D66350CD78C8FC945A63D8C07C8FF
5D66E1D7D963B7567F270FB876D2FF1E76F1FC1AD80246E413D337A718699FE7
EC080448FCCD4B5AD8453287D86BC727C140A6B2C1F62439396AEDC897D546C6
F8241122821F88FE9BA1342B044AE9A33CE496ABD5D7F76B1CBCD331A08C6DD4
37A78E15453AE3B1AB6664CFBD92B9982E6C0F5AAD267804425AEC523A184899
3A2D0259E64F914D353ED128EA5774EA6F87DEFDD1BCA35A413EA5D75E42E3B5
66539B7414AF09F23C1DAEFD913327B6CBEE7B5F6258CFB98B288A2A2019D344
E9335FA5D1887F0A3E6CD430AA65E3A59B396F035C7E84875F5A5E374875FE5F
2B49567A6E8C851A51D8BA4F6AF388BAFFF88D02B166F37F0CE1D4D4201AE26E
047084E2ED3E3662B60089E355AEFEB3964748C5F836C437C042B64BE3AF79DE
75AC4E7255CEC0F20E6D9400D29BC8D9BC2FF1E08D8E020F33BDEA08A38A5E90
CDD238866C66BFEF1B3B61F2564CCDD80BD048586674B94291DB7268CF59686E
D95927FBF8CD3224572B687E01791F40D51A230B9F12EFD86A7F90A0978CF220
FA314AB43197FE6E7C4F22C4BF4C4DF7ACC7EFE7C6B152984BE0FFDD1714ABB9
CE834B59B859F89231021E34E2BEF6C78D5697E25CB5D72D2A5F8093158818EC
60233DE494228ED13DC8AB6685A5332341BC02AB2064AA00FBE26BFD27263C04
461327FBAA2D88B6D1477815F4188980ECF40CD3AD1E29DFA34769ABC993DE8A
AF8A0E27487EA582D55E45F676072FD72BF68652A4BAEA84DBC69EC21CBB0A68
F265FCC88CC89C3D9B0B9DFEB768EEFE20CD2B55EFC851BB5C4DB38FAAEEAD1F
5AF6801E270D8B35AC2F519FA7AD4487A2383121482B77276D6532DC01E77478
3650F59A037F4ADE1CD2E9CB17614D0A930928C8B79C3A3C57BC424B6E90786C
303D590747608AF3CDD6A51B5616033EC03304518C35E55502546E62683AA356
36607E78EEDC4B8B17CEC6B82F4CB8D2D71A37921E6FE3E0084B6F5919598FBD
C52F4A2DA682DDFDD93FE807ACC6151DACB35708D019A7B9AF5B124290AAF614
2E7DDD1A93770F487496B751E99D688D56674440945275CB4A4692393F561AC3
395F6D9B8AE4FD096246849EDF70EF99B1C95A296106DE15CF1B4D725B87F51A
B5DDF2041BCC6827E45A0370F0F2D6FDB8A6F25169B17C27CC63FE88712F554B
62FF88E61627AC42BE0A650D81D9F7079793D6FDBFDDDC1EA9AE95B246D9F0F1
C33C7A6363FA6FE55B3E0B88151D104227184D4C808346B7C97C616E393DAF35
53A532812A95047BEAD7FDAEFD37AF16766D4F5B87C3A0F7EDD293394A944BEB
BE20D5795B41C85D883A7B825C2C64D5CE54A6E6A2F6F710C775974AEE33B14F
F2F91B71E7AE90EDC9D68CEA7E94661D3F304E204C13DAC4C827FCD9DDB59817
5D1A0B66EC4F4DEE6485FC184E9C27574EFD751A6B7C9AFE6196B3E2024B31F8
5CCFD893FC446E4A31CDDCBFD6063379EB4FFD3FAFD44CD71F15EA7476356F91
248AB53FB92DB9DA8CCC5D4C8BAFD59C3ABA73070F8B3C4799D6498B2F62BC76
563113033F33AF70C0D4612011CDDE53EE22DE1EFB9A84E1C79A90C971445D73
1DF9B86C9C22E237F43D709BDE1227B3A2D3B42AB919C646BB3082ABD59E32D9
70790BFD101B9EE1745D9D225F1D3FF15E36E6D9CCCA5E85B0113B8DBCA884E9
D4F15701F38BB7C751BF34B0711A04314274A6E05D7DB70D81EB4FF988F2B15B
F1D0B65D64E40E60CD34DADA774007B1802DD59E18C88662F698B2CB0339036F
3C3B3AC58B3D528F5A5BB0BFAFC01188BEFCED69B203406E32FE0298D679ABAA
D9D978AAA039D18FD8B48BB9C8C865617EE2879DB687F8111BBB8542919EC35A
2E836F51E4C176129090432F0ACF6C74499378A2F4DE7744FBC062A29AEF9022
BF268AC96F7091245F032B28FD7F9617B6B85D8F3FA1C577F919F6E922CEF6DA
DD8B9AD648A150A45461A64C506C8D6F0C6DEEFBBC409B52B46870176CE58B7B
B13E19C1AAA9CFE5A198DEA5D5C67FCFE2E4DAF7F697CAE2DBE218E92A417CA9
63A3ED712C2C319414F371FAEFFFA3D14DCCF5BE95D226A0FD0A51E2C8F89EE7
B04F944F09A50DF5205805F1AB7BD6D572FB951F2E8885B440025C62D616F35F
3453FAC226D540E4BC079010DA89DD51924B8A9EA93150E57E84A2B9232DF5AD
72D1B545AA8EC36494840AA2528F8EC36D6F444016E8711DB779F8AEFFC7964C
259116EEE3FCDC57DBBAEE13C925332DD2251038A6D4C0BAA29C6321EC8F9757
C4A75C71969C7141E5811AFA9F03F2B449C4535A3581CCEBB83BDCC0FAB885DF
CF0BAC02B23E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492847AE57C85675CF04BFD1410B56E616F
68C3927EA7267C0C4BBA87AA3EC7166170B80B7355E802532D38053D427DA3EC
5D297AB110438F9AA9CEDA887E63AD877E9208260AE6AF24100E2B365BF89C5B
679912C69C51E8D0541100E3DF71D501F4BFA0AE8260EA4119883BE0E2CCD156
1113CDC4983460A31A70C6614DA60CBEA3A564539DA028D46BD8A6C8E870451A
F92C3A3D555E94EA81503E0D53C0AE8AF190625DF8F48C433C5CA5E61B61960C
10E340864F2D181B835CC0F9C87C9CC0E95FB3F1824BF5ABE0DA3110FBD87806
4770B0F94B263E2C7A3D9DF14D9BE01BEF9882A1EC2C8DDA5931F895D02E4FF1
CAD0158061CC26D5256590E51541844B9AE3A861D6412B59941B7186BC31AAD8
9CC7F07EF9A36CF5C32F54ABEE8B83306227DF64A1F4E9B350DB04B85024FF0E
6FF4C8FDEECC5DF7106C24975E54928A3679928D4D84C98B3D33843CFCBD8AED
A1A74438EFDB0BD68AB2061EF46D65CA446C190A6BF6E0D8DEFA1E8EDDFB5541
473187ABC3D34172433CC652E9B2516AD0EEC9F452135D6AC8D97A90DD4C972B
69C05585BD438731D0DA714733FABC30765D6775BB68C69704D0BA5D6DE6BC5E
10342040FAE3CA1C359295C7D2967195AFD2D94BADCE1E95F17F0F95B5A683ED
8DA83806CBF2B803C94B5A135004A20823158454E29255E8846AB1AB9E444B82
AC000DE047EE32B5C7659AA3999D8CA1D3941D1FF042DCB7834420A2CB78723F
B40B625D7418A892CFEBFF58AE1CD0F128156868B917147969EF8319C216ED3D
620588A8D3D13C4737BB89F1FE17EA91AD0A119E1754916E4957C40F7642AD75
0E847F04D456B101A89F4E76E6BD785EB1F605D78CC0AB1425CEB017B47C1D40
BE68CE2BB94BFFF5120F91CB493BAD5966F870FFA6AE560AD6A82C3B0AF0C810
C12CA6C41677519886FD5CD163D6FB351E2918F4E5B5D5A27FB8E57A24EDF9D7
42EEFF2C7558A4479E25DBF75353BF0CB3E744B9009BFCB1D37E21EC06E4D7E0
2762A656C0E348FB75DA17FAFCFA53893D1ACEFD8C3EB97C9E7E5C3C5A303193
004DF6B0E2446527C65DDDF917C6C8B730247D89C817FB276D85EB671AD64DB3
4BB09368AB12D82CC4A183ED86D2841E499B785084AA21B81AF837A206A50773
FDDBF92515FD7870D5A35EA64BA957FB2F6990DCDDDF2859681D7B7D5566779F
26081CE1DCF8FCBF985B41005EA0771D928990C0BA6CB7E33875B819AEB1EFE3
7A3656C9B2060A89B3D1A0ED127FEDDC4387DDB2E10EF3FA3985EDC86947215D
585BABD246585FD44C7FFBD5B878504A44F08C38AB4A35ED5CC53EE38F810C49
4CDE233ED8AC7E692EDA8CE219D733D37296CEE1118362904F622FC22656FA58
65B5E26CAD7951FBF3D7B27121FF01DEA6F49C7A4498656B8A12ECA7752E0477
CC7F945AA8CA30ECC8B017D3365E4F2C4D6F555DAC9A6D17C263F63D55D6424C
58ACA31C6B17A617B342EC92A2FB13D4FDD77DC3A85B2508B70FEF36DD289991
A16B4097497EEB38F0274AAA1341AD3BB645B0D7F97ACB233FFA576119456D0E
E8D5F85BD47E3C79CDB4AD769ABB374D1B705D61C428B44B213057725969D808
B280BE2A969D2207BDDCAAB6AB26EFDBF7E27A57CE61292AAD6582B3A661F4D4
8AFE06644856C8C9DCCC07407A115D6D45B7DF6929B1C79277F3957EA1805B97
8529CE833B1EECAF947E67DBA704AF3F29618A894235D7DBFC1153A5F74EED26
102EEDB139492E743E82CB61CEFAC99D77B61F60FD9B0C1645E399B20090DBB6
8DFAAF4C6C1919FEFB6E3E8EBF926C2A91C5281153D5B28BEE5E71772C8921D6
9D11ACDDE095D43077D6D8E8EEF114F60F85935BDBDDA3362A11E0BF7854BF4B
BC52EAEB261E696CD413485DF93CADCED318B5FA421EF0BC594EFBA262EB2C41
4E43D8ACC9CB195D12F3B2ADBAA0D95A443F525372BDE229F13C485324C60FD1
D7DFE515B666ED51FB61F69E18AF955D6620C95021DF41F66204845581723BB6
B76B4C3C2E2E5B8584AD015374BE36AC1E08E1C53C079B8BEAA3E0F907086AA2
3BCD6FA9812375C8E8D4ADF7A319E9EAC6238093C798878E5D558B30ADAFC1AC
17B04381C6754327FA7C65AEAC1A2839A9FF799456B6E5B9BF421E82415746B3
63938E88CA325AE4BC6B36475154CACD25A07C74FEAA2928802611B4AAC8DA96
F7CA93B7288B2491380B2F4F87646F6BA42247F5B593A0787ACF533199348D11
730EFF7C25DD5ACD0221075ED47DD6FE8909C387D8F02A88FD24540AD71A0FED
2665CFCF412B99167152D35BC0E671E657EDD876C39BA0ED4E790A79D8AD6723
4A2C9360790E4981671E3F898A1157850F48A5E0F299DD9078866AC4AC771A7E
ECE3275C26835080FD2AC78DE88BF65298A8EB4181F1646B5867D0EA3446F4FA
176517141B75FA51F69D54478E279EC2855938CB532FC260FEF5CF3FE05F4F6B
1A6AC463C1D1A24E7B41EBAD57574D43E06E13690F831AC63F570D466C8DE97C
2E08CC01056475E95FB467E2F3B08917792C1DAFD35FDA10C0E14D125C730ADC
BACC2CBB9BCBB0BB982F75ACF33109F8AE7ADE4954D0B1E1802506DBDA73CFA3
DEC72E83650F240B54E88E51C065039ED16C5B958CF632FAC74FB900E04B0B13
B26BFA8A80D5663FAC4A5C3CC6895C0717E2271C6A3F722B2F6C2CCB04097EAF
EF211683EB8F6FF2306B741C9455B48094D2958B832B76458887F0FD9D971D2C
75AAA237EFCFBE0F14F797E71B0E19D074858D2BB30FEDEF6C34FAC40779F603
770BA127BD4B9E4F5EC52314B25837FD118062685FAF4391CC91AC0ABAE56089
30E599D101B7ECAFC159AC2335D6DFEDAAD93A074010C5626DD9470582E82C12
2DAC32220AEE7C75A5BAC24E9E43AD56BA6B5B915CA1A908C4180B7DDB99E3AF
5C45072D5FDE12DD81276D7304AFF3059366F293191CE257782F236FC2299F6C
60070DD031F172CB2FAA0C0BFDAD40BD3AE7D647B0FFC9298FF9481A19CA03EB
E2F1EEE59A3D6E3FC23B65AED24295DFD94966CBFB46E98286E8AB5BBCC5A8C4
31D8D7BB6D38C459ED7811962AD08A130D7781F378AEA20293910A7716341DA6
4093C33CE11E30603EAD00851CC85FB116890A7C58F795071033711947B65B0C
07BB7FE129E446F1A58F097CC13CA9BC695F782ADBE50737CE43B15AEE7EBCB9
0CE9D7EB1913D307114496116FF0087A48789461E310DE9062984F6951B5AA2E
BC98536501922114CBB2D9698493EEFA925E555E776D6916E68159716FC183FB
83834CA958EF2A4210A873E6F7DF8F113E86D87F7B364763BBA1AA81F9D7B871
D7EAAFDE0578B3E819F2D472E963C4FB539A61127D80FD783E271DBEDD8994F8
A2E9F96F4F81D178EDFD36B63A9E05D8F4BD13318C16396253CDCB9E1EE7A887
8F02E0B498DE9C1A5F110347B7B612146B59530538023BDA6569691729EA004A
3D96F0FBB300F40752DDCE2039C3501C39A9BA928B1D8659DC61EA8FFAE3EF62
6E8DFDABF455CDF54137FD5767DDE33F596FB9092ECA87A3C469F9DC2A963BAE
1D62AAC7FCCED1E324FDDF9D8F218A4582B7A960AE3348951B354102F98ED6F5
CECE5E7AB94E4C153F2640352EBA54B29D78CFF190A9A579019521AA7072575E
04ADB576B153695BA7A1E5CE46859C2DD7FDE2A8A29D9B363576450FFA66C49E
1490EC01CE4136D822D1417AB863C2615FD14A8660B38ABCA4443ABFF10E768E
8F7111B56497589A27735FF35E7B24046953FF85DE78194EB09326163E0BE25F
EE7097C1E3E30A0E951D01191A5AA3F9C85EEFEC49D94E6CE014A1ADFAD5E55C
E850355395BE8CACE75623A92D174676B5E58B6E729BC52112E16D2D247BFA66
3BA69C8A18F607F86BE6A1662353BD71C98ACA71B28D8D4EC078B97C4F0B2AA7
E5C17900842424E029E4FB6984F61FEF1A5C7C895EA1EDA6A750662B898F6535
E1A25ECA90D105D3EE27FC276277140155EAAE420BED23800AAE1F0B28330E00
E9D210D7B972D494AFA5BEA7C9B47E579DA191A63FAB427A45CE4DB5FB80350D
BBB23230E36963118A600F83AF3F1902CB9FEDC0DCD19B1B812CBAC472813A6B
AA4F7CF2CCD726919D46FEDFAB67F546D20BCF6341D12694AB9C0F48855D7130
9D3C2C7659CA9D81B3C53C5B458ED1B685AE1B3BBE52A2860499616EE5597AF2
FEC93BC0EBC8415FAFC12C5777A08712792D1B44EE1C72727E7C3558821003D6
3EB45C70E7FCA7037D19B5F92FD6CEDCBECA38F7FA6832074BDE7BD4F485A93D
8FE2BCAFD3BCC4A79CA837E900EE8C130A72A092F8113FDFF381C8D237D6035A
F6A1FA178282D91A32ECB4733D35471A43C4AC733BB92B64091D3187C8FFB809
52629B43A269AB241A647B9B3C214F7042C9AA001D9B560A2465A0565E91E89D
1335338DDC277E4101026E3480A6619960C0A619B8A60AEE8382D921A46D8187
AE70302C030D29FEF6FD6AEFC263C2A95E45CFD448458C7E679092147F5BF9CC
0D4CB358EA58704A8EC8929230EA9FC04D479C6F4123EA812EBBBAC6B6F48D53
0BB1ACC78E7938A0A43221BD62CB3E9919166E4C5685DB225BD5B0B3AE8CEBC1
461957D7BAA20EB9168C6AA9E4248272F38FD2923A2BA43BA9064D59C171AE87
BB22E470702E25AAF41A24D9B74A0FE9BAF8DF5F77D27542FE4429423ED09D98
769F099C8FF9B12A99BB88B018D3A3FE7CE15CD0C1369B201B4DA7CE2B719462
4D33B42527A69C4F3E70CB6437C18A6FE63341D099B30191D50286634EF21C29
21B15AD68CAD72846FB5068313E89BA11B99573E4347FB11B98441AC98E80F6F
1927389F1E876DE04B72EAED243A14E0C5DBBFAE10F980A73FC2ADB01C926F1F
6CD0A92517311A1DE6A3DC8F7A01CCEB9D08C73F222FBE9366B3243C408FBEBE
D5B2EF67FB6AFC6817C5A43BBF3753353BFA8E9BC4034FDB3743E12BA469BE32
DEB307102D2286A4C1A7782B418578622E6A4E50B5E14E1A8FB5F60EF4722AD8
8C8B10C5EF052E53560BB2B7B7F0B1E400E9F96CC34E7E2C3CCF88A517FE6F9C
5E8CB76033CA32952BD67B6EF0BDA8CE6C8BDDB68BEA3E59ACFAB83995414E9D
3900926FA8087A61383E01E64C0E31953FB4FA6EB237F8ED94AF22F25DAD959C
8114343EF40515793A51CC50822E4C68A807C1A3FBC4EB639D2F6440DA61EAD2
A590DB978A39AFEAB4EC346F2673D1AD5E23F812083709EDC26146F2516D8425
D9A404B8B45B2DAF63E6B9CD5B9FCB899FBA51CB76C47C4BA4DDC4681B41A253
663EB31939D5CAA8B36A21B11AE0531B80676F03834F4B8111DBDC1D3582D9B0
4EEEB76CB486438D247D010060676164740309835B518BCF268610CC7479583D
F82C39779C65B01FEC15C424266554331231DC26D13208F9F25F7E8042488453
F891152A228CBA5632C5C642A25119184EC5A7034BD05D83CFC239B10415514B
89FAD2C001ED336615E9F77B8FCF90207EFCF7AB4D8D80796139D353197C9A77
0A1C99117EE72EE057ECFDEFCB961921F82DA0FE709B9447BB18C65636A8AF51
1CBC3BF180E28B1AB973D053D8D3A68592A56AC054E9AA49191C6A774F362772
67A2D8C37934DCAB3006734A2564BF7A5F846A44428053C6C606216322B5CB00
EB11973373D388351AF3E38D7D0FCCB303A6AD3DDFF2F57C704FD55E7521FE23
F4830EFED86917C5CEFF9ADFD18C0FEB62E93E8050A97238F88827E75E2F5133
9FAD5776CBFBFE582F512686F02CCC66343D83CA952DF1C68576FB470E8E0919
365662F6447C26EBEF90C3C5C5827A77DB585B1B6DD69E6774772F699B92F7A7
184A00FDD7F36FBF0FCDB58374934CF2F01C5EEFBE63A5C3B6BB37221F7214EB
EA334FFA3386113D55CCC4A16670BD5D8649B0CC6FD97A470EB9ED9E66709402
5A81C470D33021157B3B7E70B815F56FF5DD3AD6FC34DEFA4135B582C1F0286D
FAADC00633327021FB71628931D9362326398FE89D81017C8201CB8E9394CB45
F6F5C097D36281FFC726E6F6777C96B8930BAC7BF095200979771AEE3F8BB74D
1B1E1D851B93E01E80D140B1D3E84DC0A52286CE9CF8612D5A6B166FDCCACEA3
D4D346F919FF829316E7B9879BDF5D54EBC4650E67B8FE790851B1EE6A653D8E
A70106FC0F959F2F129E660074C2137FE6EBE918D5E46449525A4A5A2FC8B5A4
61462F841C697C15231814EA2F97D671F427C88CFD8E6C388E38A36437B7C085
B17C9070C59EE7E6BFFDB6FCEBC5799B4807519B038B56F26A59DA06011ECC75
CCA0A2F73DF858B6CDA2D02BFAB88307660277766F068F252FBF712D4F6AA9CA
51714523FC48BFBA19CFB00834C0501DA25AA2B872B756536736F4A79DAAC1A4
5A1A445244F338D090137284F4DD0C3FAA11C154881DAD9EF8A294FDDA952D6D
1DCB0481C4DBE8A6CC29051C715C8724E649F9FC87745C2CF446055EF14BA832
B6DC6A6138883A9959E2377C1B663EB6E64083D7EA5E9E4563F7B50ADE7D40F4
29F96D0DCE41EEC1EA29EA44F3FA29A1F5F4AF835B305DFD8099AE6295CE6452
FC984CD78021246F0C2147B13D704C0067DE90B53D9163DE8726E2AFF795B939
7057D3AD58244783E4BB0036D7FC5E425F7605AB2800530F414B89D4EEC51F0C
B7E9D9A86091402AD148C10C8ABA3F92560CC5A52C73D9C1AA2A57A4B3B956AB
BD26B40B67A9C17AB3E3DCAC7F57B9137AF0C7D739906422AF9E42B663611349
15143E2EE1E2B00C53DF9788B45591972391929A1D45F81E715F67BEECF4995D
C35D4691A78401D7453549879CEB262EB112537AAC2F5BB0BC9DC33B6CDC033C
E8F3027018DE88C3656A7D9095905AE89E0904AC946EFC2DA6641C7C5DDF1A87
6B9C097934A8DE6D8125514B17A8D517C377FD635ADBE9C5032A6D6E3B61DF0E
483D3F8EE5E825E3A35AD6D3ACBCBF4F8B6821501BA03919D714FB6647262111
3AD7BB240DE7DFBD1F17FCB93C9002FBC667A5B810B6655162AC7A10FCDC6DAC
1BC338332AF14A0CC7ABF8C79272E398A48E5761D90A31AAF9FCF6B7DDB6C6C0
81E1A1DFC931389878410E8829B436026109F2381E24C381E89EFF35CE1BDEAF
A26E11D89EFD21B11649C5F3C80FF3CBC35336244D8AE9FFF3F592BB136F41F1
1AFA8CC986D793BCEC4BB288C0DD7AEC8D6A3452F221D0151ADB4DC2C4625296
D0BF5E6784149C85FDA1FC19AAA54C49F6F0B6467CCFC54A94F447A97175E183
73A7A108C2925DEC6115C4D3DD9EB64CA74A51274134606E73A0D0A9ADE7860C
4632869475BFACC5E95ABCF4E50F3F746C405422CB00561CCAF1DAB63CD24527
A0A6AB453E463479846D2F8BFE9A6DDE8802BF1F9BD32E10F6F1C7F336F597D2
D23293BBEB9789B02A224D6E9A5A869916EE9CA907A17C647A6DFCBE5BF89E5C
56D299A58F1BFA1FE708F33BB3D8D3959AF1F3B2DB5A361C07E06C4962417E7A
08A12DDDA2501C6655411A4DF2DF658F42D355F5A3094C233FDC93CB79DD4760
26C29FA3779933221D8887BD279511CC1700DA348283522B5AEC490A066D1098
088B87B133755A403A3569748DE4B94264902235363FAE5B1687C92D7BF00C6F
8129E347C6489FD4FC798ADCBD4F3AE203A1EC23FC240D9E8CCB0619A3539824
DF0EEC80BEEB85E4A31E174DA9330491EE2EAD0AE6BC9EEDC8F5F46E2C3ABA05
CC5EA4891FBEBE1B6371CC3040EC63EC2A6E3A800AC4C443525D0FA14085EA1A
862537B0F53843467A18708A41B051F31A13C3EA3D583D1AA7F96A42522035B2
875A44EF7DAFEEC6B06D7DB4B3BE25BB29A426D048C4DFAF41B77E0C77F98BF0
2C1CFA6831E6F9E4D9E60528611520249698A92CF23C5E8F45272A00916DB48B
EDF193D575ED95BB4914D4A5FF9FDB15EEA40886467B15C17D2D0C33C824A507
CB2FB6E384BA8BAECE974D652D776150D7BF0974F5981679567566BA4057925B
6B2091FB0F74E34F73B119BE0CBCB087ADD6D287284EC93A493350028443C6EA
BAF73BC1B4BA53285959558A94120725C03B4132B7BA25E3B70D654CBA4A65F6
84055D47B5B0A3725EC5101252F708A3F3B5CFACD77F3AE5205535F92D8DA297
82A1875C6C8E74B0C86C0D388789DEC76BCF3CF60BDC1DB09467179704B9F04B
677AA145F255211FDDD21A92C01BD539EAC70582BC3F61529DE7FA7C8FD26CD7
74574D565B2B29AC4BBAC5FA2791EDB9B715F5D846F2220FBF861CC7166BBF91
AE735D522C31C5BDDEB04079726CA43FCABE49351B4A5FED8656B9E51CF05F78
7B2B565746C211F30813630C7EE7DC34A9BA7D7078E026DF89D3535C22C001CA
E1DC020E5778C24BB8B41BC7E2C78D6DE2F6067219784B5B33CDCF2EBFEC5F06
D14E4FB96F0F69193E868789380DC127C1A7FAB6255870CD61C8CF7AA8DE567D
174EC90945404C593B68D8A14CDBB4862DB295672C4DD02F60D1B016D12E9B77
E78DAD4F6EA76B85DE833BF0A940F07B363A39EC579094DD434C2DD9ED792652
C020CEF049A97F439393AC4BA9F2B4B8E959E8877C96A02F20FD53A655555608
9ADAB4DAF9B826BC53D97B41646EDCAF7F81C1D6AAD4A849E20FDEE79F2475C8
8FCC6DE30784A852A32989A63805EEEA8B14A64CFECA4BE78DEE307898437127
CEDFC2C10F778106BB2470BC1B9DE7117BAFF08E59FF2A6D83FE3845C1983D82
58B5632028FFA0B885BDD576555B4CD763803AE6795B23AF56AD8842B4F0D4BD
E28886E9CC715784C7BF7F0AF6DB24367F25818C0A197A853688E3AA3162E613
8192E19652A2390D256118B0867DA2ACFA39F9F6EF1D81C607DDC2409E18002D
2098D94298EEBD3E93E848FDEB52363762FC4E3150243B70B07A7F9E0672714E
2AE73E4139D9E156708E74475F36FA1D9905A3E169A1A02B17E1E5A321FA61FF
A83C5BD9BC2C57BCEA7F9A6886C9F13EC903E88782B3E3D0DC4C2312EC701C2A
55C23A71E12403A4435760E2351715605A9EE21CF836572E2BFFDD9A56E20DB6
B9E551F898B857200B7912C1FE9229D78A0C17BEC5FA7B6477C7E031912478F1
6B0E889127D5F0571E73928B5D4324CF9F0BD77C9459D61FC212A9A03F9BC4CE
F9E5B245064447AC6D1A15CF1D1A3797CFE85FB55B56AC0406E3D91564F0AC54
D70F8EFC63B94F73ACBB4CD27973C24BA04C729C5B9AF95E715EA4D3F84EE24C
324335A497DF0E519C84DC7C2404ABCAED0FAC8C87F13F130AE767215B039EFC
02996FD9F97B621F174AB176D508B97E20883AA2943C05C912B7B60343A7DC7A
3F6F1AEA9D81AF7ED8B6C20CD382EB8EEC2982333428081F09F426B9548262A8
78270D2FBEE37AA230330D81EFC166DFD53205CA36C6000BF23A56FBFBFE8478
F1CD00150EE39F08C945CD48489794E223CE3A1F5A84930FAA87A50C937FA836
0CD27160927CFF10954D7ABDFD2A4E3D180A2E97C81F1D635CECB8442177468B
4A69E269481F40D0047CD30C23158454E29255E8846AB1AB9E444B82AC000DE2
25912CB5CBA1AC1BA45DCF4EEA6EBDCD1206243547D9DEE8CDAEA25114CE2484
465A56A684012053B3D07815B31D2C6FBAE2C6354FF6A9769C00988AA1D2152F
B362622774A78B8CF1F442FF1D29BD05B63562D004710A8150CAAAAB0BFE5251
972EBF4F499020E0D842308DFA9F8474289795BA53B7B5F0A588E1E086955C3A
5E5D17261816759FD67200DFF251DB7C95C09E89EA1F66EADC36AA0A6C14A9B5
24F6026F3551AB2242E0BA2FA4BC0C1BD5C41F2B16CC460BDD35D4B5D1F13577
D32B095322C9DEE0ADBE1EB035C42C067B09C7EF4FB3B136FE6D1810A6497E56
A90079CA7DA18D25F3681DD0131C46E14DC607325351F930853B1D8F89835127
E6D5BE96DA47CE49840D1FB266A553D35D8400664F1F2E0C2F488BA00D7256D0
7D2262EC7AF31ACAC176D11DEB3601A993B6641E4A0820F81AC3AEBEB0996DEE
E69DC68C138FB4F7E2F8DD14CD82B634562E96B8EF8C66BFBF49C4C5B41E4E6E
EDB7B747BC6C90A3CD9FB434F4D12484E03E14C9CDDAC9A3482BC6A803CD7CBE
7297EDB0D63A166BDA4DC1E9C9D3429450A21C9EA0419C3A9D9E4014CC17E17E
0CA0D74E75154A8A07D01FED1C412FA9813664082503DA2F814211BF6D56A1F0
B72D203A7C5FF3017508DF9821E7D6FB91BA1BA0D16FF764CAD09F99A6F73C71
DC1C0D12D09BA536A97D54E9EB5D2927F8DD71C97EB8FD9C28D33AD0191A0720
E853FF0603877722871CDEA1DB2820B795EFF6DE291BCFAAC2BB1DEC703A7CFA
E5AA32CE2A37455D17E5B07CE7C933BD984EB713405D2B3F48124430C7B31F64
5AD8CBABFBB903B090ABC8D0222F3F3AB095198B155787439EF62CE27FB2A049
346C8F1199E124CD6ED955A7419322834327A3FF23A23FD48660178B7B0AD85D
F4BD83E8B60B622B7FF1AB525FFEA25F6999C734A9A1330604D0E557EE03662B
D31AF90587A45AE742EAA1F12E58DD926DED61EB7DAD6A6E543C730889C891B7
AF8A576C90A5A37C5AD57E9AEB2A8717F653103DCAFB468B1C3A1053C9A03276
7CA766CC888BB33D409B06D87805DE283183FB057FAC50C227D23DCA95729794
727B4760DF0B2C30952A4DD9221DE09A77B967058F386432FB88CCF943E43807
2C9B0E5A5B285AEDA6373F36A72267AD98ED0DF3B9E77AA94B712F5743176D24
9871734579130742C63D2919166684309A799D3BFF11CD94CFFBD59A1F51377E
69B684C70E9F76F39FC77A46FBA5A77FC0E0A9FAD85863CEC1B6C58479A1DDB4
0393AD8FB19DF89052E33AAE83E984389A3B3720FF0128C29E7F9F510E71D277
D9A29A3B03EA96BC30446FA34F89ED1837E9D64C82735A79BD25FADDAAB320AB
4B9278E652C2F30C6DC9E384947A14739733F9011788FF8C76EF12390D5857D9
6EA4D637174260A2DF58AF4C523FC0CE23DD0881AC3C816CE50B05FEC276B53F
DC21DE0755EEE6F50ABCA8C1757DEAE3F9E6D6626CC108A50CCC687F90B2CA3A
507EA8C1247118996064991B87024D2AD9ED5352981FD5D4C9A1E27B64C52E2E
013CAB33E2EDA7BEA5B305B1BCA2F3903CA3AB5D13CB0500106B9ED5D16E0B45
FDCB6775CB2A25E02C7BA32DE8458AAB95FFD539C34BA46D5A1E474437E80273
2D4B23AD08E64CD0EA508DB893617833CA769D0DEA864CB4353C49A547118A74
2017422B71F1FE4D576813FA42C53DC7E39ED5DF5D5B049F09A5729640A448F5
CA06A5256DB1C454FCDF55D0F95F11AE5AEEEEAD1B655F0C550D62DE43569906
53FB467B0187BE466195CC43F3BD83B2EB3BCB16D6423550A709D944B39CCEBB
8AA4C7012428ECD18DDA85175E3CE67FD4A6528AC35BBB8278191DE7BFB1FEF1
5ECF06F91A48B2F0FC092F034BABA5139548EA09718566B9DE86D04C3628DA17
09D36B12A911BCBE921B6481C78754B67CD39A57B6212B277531024DD39C3C6F
3862E1DA157FD3BC5AD0D0829C8800879AA4149F93605BA3D670E7ECD6DEE6E3
D1420CED84D3EC4901E6A1582683A09AFA8562972C5181D185A606108699ACAB
EF284C19F63C0674C9CF6C2522C968E959CC33043D9F434FAE393859A98FC0B3
EA3A0CAE063311CE1437906A0FFAC7846E4F1AC6540FBCB40BCF86CC6FA991BE
D6CD2F0AEBB87F65D5E67BA200E39A0DCF5CF0D4C547743FDD7A68BA6EADA895
5D5540308E63E5BB3DDCB07751782660484DF278A2B281C0AFC088A138F4740C
60492F5FD832FD290A6EC98B1862CA0BBA0FFDE0D897035A82372EE5B315A29C
309EBBDEC6FE4167A888E2C79ED55666FB6BE037AA2EB10BA574F4485259686E
420890DB1A817C856910A5FE389B1AF013EBCBFF2CF04E086304643B80ABAE1C
B6A67ABFAD25F281D32B528ADAE7F6D38731EF1E8CB0917657EB749149E1D61A
198920D9A45F49A8C83174A9AE3F8171760BB6F16177BC987B144E9FD272CE6A
23BADEFC0FC80B646A2FC08C867C8579A9B632488C35752639E1A74D9676E4E9
9291D2EDEF39EBEF8C5F3A75B96D98C17AC253906BA2ACDC44821688F4257826
58BDAF63E8792D79340D223C92CC04D92735D2F1F9D6BDE77DD5870A2C6F7E43
15C7D632524E9DA9AF125FA40C3BB93408AC884FB20F4F9874CB4B618C65A223
4457EC224689AD1B990732CD028955844CF37C6CF520A853DDC582060673605C
5438B65D4106CFABC41D1E7789BBDAB5EE420B6D136FDC941CE819C6D2BD022A
0E948E100C3CF0C05C0E30F0B3C40E640856403246955C91DB864820B86A6693
CC2CB6FD995D95B1FED23A9547DAD0E3923220E53C6287592E2E491B64A2755E
669A0FC07DA5BAF99675D4AE976E2399DC0992D78F7634C7FD5EB7B330D7FD29
852913C5BF793ACB714F9B797B266BB419E02AFA30376221ACC298E23BCF88F6
0EB7177E9C654A062ADA05D662F7C17BCB9130CF7D71980C9059C5BE67EF31C7
5CCC596B82EDF5BAED377DC4C941943909E975D03C6BF5FF5AB60CB740C9C49E
D9DEE46462D60AA6DB15475BFB798D8EC283BA08CCC3028052B810418619E054
887E4C92240A17C421F46E0A3F76D92989550979B01597E841C9FBECE72BCCDC
EFB7EC37E53EA6A5271ABE24358EAC006A594AFCB839778FD0925E2DAABE71A4
D0BEC44FCE8730E450F3EFF5C5CAA72856C1E874886D002232DB38E4735EC693
888CB7590966A0B7ABA94A048D3437ADBE66A53BE748C4E76934D67AA367955F
D47C9C591AC1624923AE6DB8994DD4DB0D452EE6690A8F3544BE146FEBB9F0EE
5CA712DF33FBA37D0E99953A6C9236E742E2EC53C778F677810DAD0C8F97E6FC
8724E4C8EA57887CB544E01D0385CCAA4076092B169861541E786BEB7A664DD2
F69B4CB22412ED814BD8CCF068E4A9031A608F7B812107F25CB0F1E088D2B976
B6ED89126259F62334091772BE60E5813772AF5C6C3B579FF8140898C203FEDA
97A3D6F2A8873C1AB977770C28A749378281E457DB2AE8E33FD8DFF7BC5CA9DB
F410B2012A04768967265BFF6E19CC58DAC1833118C74800B6A75952046FD276
7D61657DA01FE83C0CCEE4BCAA030C161F9670E2DA6C4A92A4866680D8CF8129
4F9DD1C68334BC7FABD5DEFEFFACADD5B64FF444A6F224303534894DF0C0EF54
F5A7DB9D25F0BA34EA859BF991D0354BCAB97DA3A81DD7539BD64CFC759E5823
64830BB77F218FB837E7B0CC4E46A17037708255E193225BC6803FC0AFD2C1B4
FF43DA42C96E5F24DEF721614EA3184A907E8B3083327ACED76130B3D20F224F
89FAB2AFD403C40871E062B994EC98B96F44FA053C6BFC36060AA715372855AB
F6ADEB270E710CD29E61733C3C9615D633954EA82B6BA7BCF4BAA29799C9361C
80955A9DFD53141DED4237971C437EA9923E50A4B786C2234C7A1375979B6AD1
E4B3FC98821263F1680C619B373A7088A70430FD59D711B74E05B1C74B2CE7A0
67432BF2EC6B5C057130D3F2F5DEFCC9BA725B302ECFB9B5F1F972718CFD1701
7E54D7921962AB7F5A6476CE7D37000847EA3E12178248A64434630D1969FEA3
F93339F4BF6A6A05835B706055808F0F1289B86A77F6C39E0409E9CD585B246C
32C0EA5C66C449D43C2DE4818BBE7DA666B96ABE2E6033690C6C3F00F588E6A3
DE004061E2664C2E642721295A097A03114FC3B11AC3530BA36711BCE12A5709
18AF9B26EA978E3CFCA37BA6367E04933527ABD2651AAF15D60E206157F7EC63
860731D56E2C73F201FCE68AEC98D434FC01F28C4E840F75C082610DAD7DF7B5
63875C641A0A4419B295B906B8FF92E2DF9B35F469ADBA7CC63F1ECDF75CA4EB
317A628FC295225C8D8CE2DEFC454D7A92B0434EE333F7E48B213D4EE05AEB48
DB0450239E35F6CF526778F7C6345680A75D1E36D52E40FF9DC01CF79C9474CF
F492B5B02616E56449578FED6C871C04898860CA75246F9411C22F26391B10F8
5D16A0A764B52FF6CFECCBD5DFCD4A08CB84F7CB1341202A6CE4C4647B0420AC
0B41477BBF6DC45EA44B58ED620D382398AA22F6521E97A881A3D288F3EB0BA6
C5FE82D03008DB749D3E77FF3DE44A684379DA99D8628FBC2A742F149BF72FE0
3087BB95C6E032F694E7568C18283BE415919AA81D2F515C46229DD04878D551
5FE4E4E13DD90A3C8E001A478517EB061BCF96311EA6253CE44248E2DE275717
77283F2CC4D8B8D775DEE46BFDE4BD1E1F77B6D4CABE3323FDFD9BF935EAAB07
DBCCAEEDC40CA1353F6FC8CC7523128F2D9CB1D4D75518FC5234C7F9307458F9
CF3E005B5AA2DC12E62FBE6243B674DD5A6B776AEFA8F752A369C25217A79FBD
257B73F8A5B6A9CDA374D42C2E018D8FB4B1585B490ED15ECE19958F60DBB58A
ADE0BF86E7080AEF8ED54B8E026BC0F9655B5EBBA00947D7DF28E7FD070FFE97
71ECA04AA4CA40671F4B568A62D9148FACA61B7267BEE23ED902DB446A0E2F3C
A21869CC8401503CA5B65166319696BE9094BC323D3EC3F70811BEB38ECF10D9
0818834ECA7B6FB93F2025B1D8DB0345BA080FBC00C8ED32BB5418C33B722929
2666F5DF23631A6A7EDA569D06C8B803E4829741791464EBDA7BA25D718C697A
0AADDF3FF37BB75CF8C971143C9F2E24B0055C1BB2F26694D2975C9BD1F38041
BDE3323926F00D24FED061C2AAA3D7DE08BB2208A408A168AA3BAAAFD3326CE7
465A8A5CAFC3A09BA3108B0505BC73350FD85548D97670F3EE45B2C548C1F63D
7206F3D1DB7D5F0133712788FB4A393200C869DDC5AAE04253AC240F7A64999F
24219600AEF0B84DAA951B4DC882EA2055C9C28A70D205D41CC8D3B319509662
A6F0E358BB96C8955AB35E846B774414250E4E811DAC06AD669FC0AA0D39ED6F
B78F6194FC103E4961017605CBA43A6BDB23D63D5CC39F7A5E72D67399F7A008
BC5947C8841C4E99432895EB79390052B4E577117194164D4B448E6FD00A2086
1726AF9B556FF465EBE0B91C0342C307B087B2ABFFA828F85886702CED82BCB6
7EFB885B604946BF53617537FB915F2620C2ADB38CAC13A3F53E9A4C8A796E6D
CC975C6CC607D7BD7DC47A0578544F0F44118A1772CE0D81788430A30678002B
BED3BAD7C1F4F8928D80C4D6E6D442377F32AADB2D67EF47E3E73612C28CCEA0
A114FFB6BA12ACA5BA1C8B63973F38C57A99B288831F65FCD4A5E6DF7D616C3A
0E8B00826632C49B0919C1794B5E5E2E7FD32559395889C0F77F7C32F8337E89
02A1C53CEE6A1348B3D09BBEE55BF1EF3C15598C4DBC6D82B640EB9B8D97ECAE
23BD68678D615016B5258DFA280A1F7A413DDEF834C34981E6749D92076A0F9E
58874A9A209A7F085D9DEC3446B62E3BB52698068476B55C10426C6B620BF189
0A7406C0CA3E143FC99C3DDB7FC6A25976ECF4C33C2B824E2C77863824A91041
4B89C23F958CF5D1145721409BAC6D0DFF05AC8127EF4D3C7DA7161661D5436B
89E084099A253D88FAE682D40B3801E4C7B109076F8A3EB2E7953298922D1DF7
E33B07A939C5B4A78ADBE451D567DD03D2B745A8D3089D7D760D6F5D48C1CFD3
DF081916412438272E4BA100202B40A4D6D2607FFDC0FED0B76799A579CC1C71
11CAC85FA3AFAE108D0308EBADDE702E972024E1162553AF3D546FCEBF554A3F
8EC561D3F7694271813D3A337F78AE81AB6EED93B251B11A9066D90AA5043B8B
D242CAA7C7A5AE5240299623E3941AAF500BAEF400D1396BE9F0F8A3D997D856
84AD1C7283ACF3C402CA60F72CFCCF272111BFC28D2786E4A6560F99688DC242
E6CDEE3739BA2E978DB0A2F39B8AC40CE16112EF690A7BD5FE85456309EDB165
239289119102D4FA8392E8F7CB4B04EE39DE50CB92802334E8A89D23551751CB
E67A6CF3C5CEE9E5618671F9FD1C615D164CDC49171F6AEE6A229B232AD60CA1
EB8A449B3A39DF1CEBAFEF36B98DB6D4EF45496E156926B792E7BC4A812773FD
80E6795923C3D507D82DC37AFA64A0ECB41C89DA220823346468C9CCC3BC46FB
EFDF1B9C7C516BC5739CBC52AB8C80C7F563CE3ACDA4A958A213FDA0C16604B0
CC631C06A42B942D5A0180B74470A8AA03779F299DDD3ACC5114ACE20676825B
E2CD87F90729D9F2871905B31CF8E3E7758261D77FBBEC5F3152CC3F8F2C1AE0
16DB81D86E43692B9A2D17091F0B756E06B391D4E677C4ABDB3265849311AD74
3ED01DCD21A0D693EDE69EEA738AF1EA813B2B25655F38361FB563378D8C5CB7
F8729D436B65B80B3B6F26A09D010E11E6D49C77FC969D1EC519EE0EEA3AB8BF
0FEDFB559375819DDF023FF06ADFCA25D742FB9A84E54F1619F4B8D57DCEFB51
CC601CEAA77B3209A5D8D1247808DCE3ED8F4248E3E7CAB9A4C2908E01869FE6
367F0DE083C4289343C14D95DA5A83730C43B62247FA5811C92E38063FC45532
AF1BD3CFAD1FE815D2C52BA87915B2E9C788A32120486AE2293B53EC1F332321
DC3A344AE6D17AC14D18F040F48BB9545EF5816EBDAC3653A946BF97F48184A0
C7878582CE663D86621421E2B0DE3A4BC715220F9858DD0FF8E48C9E81EB460A
BB133987D505F7648247033DB5193F4A95F56D83F633CAD017B7CA3D47946D0F
281BF990F2CB96D86416BD92371A48762A6F0E2D48B75686EF7CC8473BA9CB71
E64D6031A8EF04B27E813843C8A7A5FDB39541C1253C8190BFD21711CA040202
62769D1C5821B98C4BB3732FCB8F76036771D355B497BA4E9E39639056DAD9D3
88A26802B3B135CB20CAE23C6C5B529A4A00B371819B9ACB5B01366BA1791DC5
5E45724A0A0D9BFB756C144B99D77E81E0263FF42E6A0FB9698C9CB3DF3720E7
A48CAB838691785C570CDB7A08B553385C2CCA946C81DBB45AE91B1A673F5594
FA37699410057007CA98A94D8A95E5AF645A31DAEECE12FFDA963AD9E1A150C9
61D7189D9F5CA5525558EB310962637917A7CB689476939CE2EF15B108309B77
FDA513DFAC61D87808E8A177AB68481BCB9DA87822AFA2C2BD6014A828B15434
DC3DB6BB2FF28A98266D9C2FCEBEBAD9436D54D35744B732EE6B6EEAEFBB673C
D612DF68CBC5880EC108FCCF9FCD3FD61C993C40D542A257C9C09A5DB3DE2DF4
229BD9E241D2829711FFBF027F195535A84730E8A674E10B38A324CD1BC910E6
A947BCA6D6A09A6406E5CDED092B767AA221BDD82FBD2B28ED523AFEB67C0201
EBE835CBE5DE9813340704EA5691E6C30C339D2ADF81A7193CE14E97AE2C7654
FB79C754E6C583EB656397F0FB0D9F6D100FC21763A04776F70BDD9C6C2B5597
E7A5D919BD56C363AC6A218389E83DF175CDB2D6A3CD20385F56FCFB27020483
101FA9AACA4FE7AB81BF45CAFA291615C9FA9A3F4DE1B3869746C3FEE24556EC
FE380DAEB566947FF233BE5F1F5D2E5497B2539534F9CE78BD2F104A3DD58EFF
D091BD8DC936041CA8B5C62BCFEFE8ED80769BC7F22809BDFBC225CD4C0E7158
899D987AC0629D46A708D8137AF6A71BAE743942EA553AAD6E4BC0625B6671F0
4ADD10C478B7F8D9A562487A9FAD8D2C71F5D8831A45236FECDFD361063AF926
2C74859B8404F5B378319C7CD6F5D459CB2C390A0FDB243F89E6B2884ACA9462
A74A600A0E0D11CE4048136BD494DBE18C5C50875337CEA5FC192D3491557BA5
42A4431C4AA941780CAE7BE9FFD0982933CEF94291B9C6E51E4D553C570858C1
AA0CC281CFD9A42ECA884D382D451BDA83C426D3180EBE8F03A38E98E733DCF1
64966C98DB1738EB6A2AC4AB7682A65C9E9CDB95E1E58F294A79C2797B536D82
C188262D3316A7012599E1FB058003ECB7634E79015FB2BD0F300B7B0BAA2CF6
4C476C0D4BD7C7BB74BE80FB7F7207A761E747DE41D0DA1E802DF2A6A8BDD1F3
9EE72D7AC30DB2B70D36EC99B1C59076E32055791487A2EB116AB6FA85175234
E4F856A40BA5B30278267A2DEBED8AD787BB9331797889A67C32BBC941BCAAAF
6C4C77271A6B990DE602AA76CFEDFECA4A93B1DA8FEB106FD121A3FC7374FAD8
B3CDD761CBAFC965F7B242DC736EB41CDC3B522B7EECB26C4F3E1F954A4B4324
CC41E653004E502FCF837DAF5C663CFBFB38E03472BF18413C9FB40147D87DFE
FE463F712EADDA4B5DD9ED6E3482283ACB506A2D6812D4676F39B533807713E3
898334BD99CFBE66C4FDBDD9B9180620CEB5AE1ACB7E8F298366DD491B6FB178
C6D6B8F8A8A9C5F71AD6D4E54218A69F41A55F3C7189175A98EAFD6017F0C3F7
BBE40E3437246EBCE324C0623686A7D401151CA286FC1A0D1DC29FC803DFBE58
211A6D5E4DB0CAF4956CF587EBB98224E1AE2596C11902438742E2B85B9FBD9A
7F0C71D8B6C0D05E0D819262A7715BDE5C281E051A6BB1265FBC7BA311931392
3F1DBB93DEBA0D6EAC695B3A35BC473F89138F2539F3585047A032B327CD200F
AAD8CF343D8A73BF2B8DA03BA98D8A95E7D14DA398A8603EA547E7DC86A65773
110E7CEB4D7891054C2BA3BCD09ED27E2C7B139DEC9EAC296BFC3B09580C0D60
C873D0F450090E4E3CEC19071E9FD7C09E43E8E6135148FC81305C4714749AF2
90F0B0982790A5EED11D9C5BF7882D55C7667A5BCCEAABFD37DA8C8ACE2F8030
E3C2D965FE7F5CB74B412500810A62992FF88DA3D0F43EC9FCF5FE5D3203DE62
F8C57297F7E73707DCD71EC2EA71DA655F2B297465899A2FE10FB40C42D174AE
261DBEA4E6990ACB7A2498C6DF4D1CD96769FFB1418A2D87AE884533957D3ED6
93430F6FA19B0166021C87D23B3C8B87D7CA0E7F732529AA683B29B288A916D6
CBA1C7FE091A432DED9B67425E7ADFD162F697AD41C59EDB77DC7F93A87DA4A6
71EB5E2F45412C974CEC3D5F27E9BBB3DDF1497A0425101CC96B6EC14A219B9A
024C0EB5EE78FE1D6D67B1B1B0BE57B2CA78AC524069D5EFE69D162C68FFE5A5
6C27BF2C8219C6A2E1F21B737C5D723A4A7201A6F91E991366A3903C71766E97
F48F5F8A04465D28B21A5B5A7EDE2C16D93EDEEFC6A2939FCFA76B1D34C1BB90
6C0B49BA86E31FAD6B049AC5C129EC5BEDE7934CE92C6A35FBCC2A067A05D83F
DF079C9F6D26ADAB42D3AAC69C4F5FDA21D1E18D0E04498902ECE3FA1653ECB3
BB3FDC0E20B2B90D7076F35A67142B0FDDDFC1EE81028E9EB76EBDDFAF0858E9
FA03ACE7F805AB766CBB3022680CFC692364713A78C78594A198441164C4AB0D
F1DCB9C918C6B57A010E3C94B6A2299F2A7BC7A4916B6D7AA31C52603989D0CD
8E129745908EA2BEDA3C0F32B5721957F305EA1409DD776F79785132296C22C2
737A810763C85E2702AD609B90F80A589C2C8EEB24D404CA6289456E1884C78A
EC96176EAB6555B6E49051B7A302B13B950C8793170D9D4FCB017C0C2A47E04B
F3217A4B3D78B76435650C1C360C4F920E8AD6939DD39A9225DB8ECD278DD768
0E5C1088CA43363034E3C41615A138B1F602E1082FC4949E9D7C1D19CF976D05
81EAAAEB4173E5A4A83EC8B7D17B7DF4172993E0060A42AD7CBE8FF32F6079A5
E8657FA0E5C024A94C645B91417DD64CEF5EC5CEB60228704AB728F341BD1242
8C15283858D2690A7C978BBA398491B9F4DCB94478D205D528C649B3B92DCB9F
97D0A8CCB4356E2D823D3530805D689C53709D769A7239A5003B775C6DB41E92
74E32458B2A8747832DA8FE8848BA67D464ACC690908266217965D0617C951B6
1F8654B02FDD0016EF05919A9484F43D934EC5176BC97C494EF36CD10F1BBD98
4D92720DCAA83679F7A179356F8CFA8282C795FC4BEBF7E8472B700AEB0659E2
C261020A8AAB4E42DE1B24F8D9CE8F3E30CA8D4C6C87CC693DEC50A86923FE20
4A29D8CDDB282EA17BD4B8664BDDBBDD32CBD87B6B7664F6094481EAE9B6E1B0
03D35488ECA2A9E061293B7866B19C2326F0CD7CB2EB912A9C6EC57813675A80
D94C38952DE49DB8AC9D596604B0572398A2C7446EEED5576B58FFCC60E29133
C3E79DEF18F9A175C63C57153F687ADDBEBECDCE5D5144613798CBF687F032E5
BF8420AA157D2569CF91936714A6AEE5697501FA1A91DA49661EDD60013B3B39
4283857632A3737C5327B76639384776F6E525B31312835986EBD35B1DB86B75
EFF83E0BB48A576049A0BA1CB0E8167ED6CE09210AA5B6300521175573A198F1
6183BFF1A35AB0A2CBEF30663214CBC192E970AE879857AA355B67598FEEDC38
FA32B2AEBB0986BD511079031F6B8E72B2A594767948C4B404E8B3CE11826486
7261C0820219597ECEB432971BB78DF8688ECD5E5C866D0C6314F75C6304CF34
BADFEE4DF997633E53480A1DD992F8753156C33271FCE2B0B9FB06E184655B54
E82FA19C6ECB9CF4F23CA13C069110D2452AACF63BFC4A5D0243083FF2EAE5F1
B50CFF799AFF423AF24B9E1D24C3405A1300088BE07A99BDDFCC663E05797616
1208ADD8FC3CA82A587A48BB538FBD56906D273DFC57FDFD7F0602D835CD4176
A38D4B44D71F92E6815C43B326C2F08C5E8618F57F0D1E6A869B7C6B4EB1DD8B
3224639F9EF5A61C479DF26F7130F3FADE59740BB1C06BAF554B06608C939495
4B53D0A84FF84BF5939ED4F0826CE46FE7B2426A09D38C007F28E2F992F03835
3472BB48B6076AAA04763FB71DE3B24809763D493AEF011D45611AF1DFD41CAE
58128CD9BF987F1F5C5420711E268F017BB1636154A24B2C6DD9A2A89A669EA3
B88E3B85E5CB378F07F729DF66F93E55AAB1B8EF151BF316F59F7CB0128753FC
8A89DC70366AD98D593D228B892DC69A61860530A1C236624F96CE9155E770CE
56750227622749B04EDDC23CF24E948FFCD29132CF5CD6C4125E80EF5E48517F
888F93557489D2F0B9EC09397FBC927C5BBEE51AC794F232960E856C05A8D0F8
29ACFCBACFB04467151EEA58C90D15223D69B5CB223E1BD40A3B4EE8CA51D745
C84C58014E8D0E45A5782C372C049A42A9F1E6A351ACC7A35E4431F17E2B0D40
9D918AAF8532BA3C1CC48B1F1AFA214F3FC8C7ACC2AB6F94BDE4A97D0FE0D310
B083DECEDBBF0D8CC11FE804A01E53FB9421232A1DF24124DF5A362FC41CBF20
B519DA4855FA1E175CD79A43C98F0AF009DE58642CB032622A33F826C2BA1084
561F9742380EE8552174F4D93D5C32F7E33E27B91CEE32F5B6AA1883F35835F4
B3591F8892C363CE1882CB29A429A6EE5B0E879ADFF7BBA94B3FEA4395B6BBC6
1701F2732A4DBBE0E411E76626111DBB6416B4055716CBF88115262E34867260
9C26F0DFED0A9BF6AC7721B75C2090F93C6A179C558DD211A5BBED1311781A44
A46DAD79043E68FFB9229EC6DE4ED5A8DA7D9CD8E60E36CCEFC15D5D7BA5444E
39B3F2D5F5A1E57D4A4A6BDB9EF4D3A1D0AEEE9670C26C550F3CE06C7F3D5078
EAB3395BED9D610BAA3D290FBE4C644A67BEA4BC0BDB6D98F9F1533B391C7B02
BAC40BA5B8797F5177B1E90E34B48558DC4BEB66160A8FA4558462AB31F8140B
F306B6DB4C98AC32B4A9BB38C2947A6250ECB240F696BCDDD1A9F0465CB43B82
44578528AFCAED6536058B06F3AABB121C510D371125EA730B55A7C0D10460C4
56D7DE7DEC66609E80B0A3A3DA51827B10F53BED027EEDD68486D9ABB82B9FD3
19E615350D2D3D5BDEF7D034C53F50D3E7FD3C5EC7EE25D1DFBA6939E2B523F0
DECB3CE6C0BB9A046AFF09E2572CF4F8EAF073497C25E75040E1F9A5056D7788
8C16110330552FE5641F3F463F435EEB4CC2BA4364CBF8FC41CE9B2FC7B3DA38
5C1F313059125B75DFE46C986E2619AC788ACDCC8A4BE7F081D9494B9111F0CA
B78A07D83331A25C1F780B4170A9DBDE4229C9C3477B7F102F9B0E5007E0CBC7
50C615EDCBCCDF38DBD0AE67DA3476CCE84832BDA1B6BB5244DF4DCD65A9BF59
04A8B46004D5550F42CA25CD48BEB022BFB52F99214F706139B4EF9BA1177E66
3FF10FE0620DD411CED60DB4D26579C34AB27316390F19043FE9DA4A6E0FCEEF
1573932976A75BA3746BDE9BB3C3EC05E0F0A217584E6C27FCBE68A67F84CF30
8B047CD43EB42FFCAF8907C43D36DCE606D8D89FAE426033708CF201AD246E4B
E2349868E7722DAF5AC823DF21A5EEBA2F555D69ABB1D02B702973982E43C89D
F4F54DE04BC99D1E66245190475F45942DFFF4BD1969F0FDC697A2AF11EE0107
ED72606549913ACD5E5C25B8908FFCD16F409A6148150BEA9449FC0D212F5266
C2AC843B7CD228E24D50EAF2C027D67D779ED7C8C7FD903BACA8107965277375
0D3891D7D344740308DD0635CDE3A4ECFBE5949B80ACB694B617E25EABFB89B9
02D99540EABB2D6F764C491EFE720842A9EB0D01C1CB403BDE52AFB4E92E75C9
F833ED15BB2115E03C2F5B0324522F2F1D00EC9EB240A48BE1FB89CC96CAF951
05A4A782CD0C910FE12D8CD6A6C6A3E4A1518E2BCDF099DA78823F5E66A31AAA
AFCAE6A03034E2281BEC8D06F7B0C422891B54B03BFBB05D94BC32BBD9B63477
E629422A5DE4D246FC0CAC7850013FB3F1B075D4754A82A584D888B98D837D07
2CEE580FA9A741026FD76EF7A00B6780E68B254804C9126F6A007AD697659D0F
4B9B7BE0BE1976B6DBA5AB29D1F25C3EF360EC39A8D998D805C6A7C76A393747
02DCC5775268D4326BA0A196C279EAB3ABE8CA120B749691E0ACE8ECB4EFEC83
785BA50524410F6F2B77BC5B5C39ECC4DECD9505A26E9A4A45CFAC6CEC9EB9F2
EEBF50AF73DE9A17A3153617F0997F63B61409EE5AFE37868981E0B6F852EB8F
88CD263BE94719D1414C31E7C61A23D569A450AB9C59E8014889E3D7A9B659A3
649CFEB8D008B11BABC228B4704FA60EABDD1B36FCCC468011868D3030559DA6
6FE556747A21296C1F638532CA099974B69A3D0238B5A726EB20D1E59BBE5702
0406D0770CAD0E125A4F1428CF4ABE44BB355FA5602DDC855E74B5B5A6F8594A
ECE2F4C0D71B2F99A5E88F4449CB22B407032609990F47E6607D6D4D380883DD
21DC372622836117275B4F6C16E139588F707C3DA4EFDA3F39FA8F05F38247A9
26832B574F7897D9F07AC1B499224A8A389D0F351D3C74500EE5012C07BC0869
099507DB4F815F837B69204CF6A62A55844D8AB02B9165A377A491681F86C978
475EF90A0925D0E820006D2EBF51669EE713E98F9A30D264B82CA8186A51531A
796510860AD24A4FBDC537CE047F46857AE5283455CAA29624F9E630607FA2EC
75AADC322228F1C902C3D5B2112E0895D2F48BA97C63E4670B912619A20C1306
3E6730387C59712D137E919216B45B933D0DE9372953C7F9588A6462D4E4F294
C8F607E4E1609C913EDD2CD331EF774DF7A58E7CAA3A773CE4DB1A27F1AE0F29
EAFC6CD4A705D84908405D014E912B80B49405E93DAEB47BF1CC0D4E406E63EC
6F93991E948F1E6B9315C9CF98ACE7F8A4CB9C06F5A2CEDE9C68F323E4BA7086
8A429DACE417CECEA2D839810D562BC8ABC302119558B39BD9EF06ECBCD35F10
C42EA9DAF365763EC4B2E5B9CC8FDA657C5FB7C1EF58B1C8DAC7BE2803411D67
05F4F85F8CC4417D0D02BF2477552010705ED42A08975A069185AE13AD4E96C8
522735074AD649CABF39201D5C31B77C65736CF4DE904FB5AE36286FC7415842
1FBCC7BA01C2E73CDE30808BE614306731BB0705FF8A83B0D552ABE9A24F3765
B43DB403D57990B41261385D56F4FBF1F28D33806D7FE3DF5773EB157254DE06
2FA6CA0D175976D39583CEC3673CDC5DC3536FC147EBDCC78F5AD330C7A140EB
CED7F15F4ED2A4A37405176E1919A78922833E507C9E5CB0C6A73C31EC168E65
B50CB3EC2FB2E0C4FC179F035CC23BD0FFB24E73189DC728B9DB6DEAC8754AE2
9EAE5AC87616C0C26855C1E1660D2D7C092B45D9330265B56B5C8E29F71C9EF5
4CFE899C78D309DB3B4824692E85E9320C26306F91514C9EBA1FCEDAA299201D
951426BA4EB4992B5A523877A0DC35855E3BC495EBD55052F31B47841D36838D
978E766C0DC7FBCBEE39D1269CF59591E093473440FA2276ED3C1E114432E0BD
FABFD6926CDC1F9071B0C0E0EEB02B7D0D4F325AED5CE3785DD783438D89D92D
EEF30B110CF92C15E27B5A2941761F9BEFC438648B947CF7886F4D76731AEB4A
83D982CC6C553F3A2A6D298C558A3886028961E0F024045F18EC6AEF58EA0571
B13CD0192DEA885485F554D9F74AF16CB906D49722DCECBD6FD4396D0A2FFA89
2D362C124A76C934272F5B611067411F40278FE11BA6FEBA93505EB7D4B059F8
45681D61D02D28B185C9F052844D9A5F91CBCB2D7598A699CAAE9C9F8FFB86FF
1286CFA04302F7BD6CDD6AE495A872463510543EFFE5DD50FFC2FCDAB710A4F8
EC05248E9B0C2415CBB4E191E98FB776EBEAEE6D62DC7CCE9374D76DA1237A4F
BCC9FF1805B567E19727D760DA2163B45D9924D8F14C0682EADEA4A9F03B310F
048388547CA135A48ACDFC1E81D4F4DC3556F86CA53886FE164E44AC65A5F5BA
0522524ED46598E71ED045A094A387DB7EB0380EB95329B5EF886A2642CB716F
6CAC258AD20CC66A12A8FDE868A62AE9C0F51EB52B651F2DB973A3B3E3F06E73
2F998CDC7C8C47131FF50CB2772F53CEFF3745D4569C89CBC6E96AAD4B9D8054
63C5A1C471B6B548FF61B999C85AAF3A2346EA93FE7B04414B71D626B8433185
2C74B1D27C25684C3B97F38034E0EB09FFF0040DFE00C7A372D1586EB0E10BDD
2AE4A9B0231376341AC7EADC99EDB5FADC95C9355EF8491BC537EB9C158EC54C
0F04479675C9D46CD99270CB060C9118E755156C03673A4261CEA3169AC17909
A5BBC9CD0A0C0B4ECF437BE74647D0915BD1ACF7FE587B253A281DBE36325898
6F888769CC9A9570AC8043652BA37F5D70F45018920ED59126DA9400E33CD9D0
9310E77F4A81ABEF8E876DAECDA9F16AAD572FA96A86F4EC168A525D695ABF68
27FD0DD3A1A0B4AC79A30F12D10524B6C7EDD7012AD492DA4AC8A8614D344CA8
32456A72C74BE0AE8C9AFA9ABAC713DE7CEEF020D204F71C5F5FE5DA048E15F8
85C0A3B24E090B54A955B23E05E3446580262393B6EFDE32C4FE7F1B0A607197
A4FF9C284277CED5FC0448F6DA8E8F9A06E02AF511B91EC829082B0748B64D48
B9C20C75F7C3086E5A2E1FD05DE42A80956DA23CAD70A96C6F35AA8EADE03AB7
3EC8331751B20F40B0F6FD9B2EEA22EF4C5A8E284E4873BF2414651BB166A82E
FE254436F63898712D63BCE01082092C3BE6CB7EBA064C258397CD009D29B279
1B3005A95379D32AF5E5AA4B3D398965573C7B6FDCF20B4C9D72FF923847A79F
F5975CEF585AA4F4D20E14BD464473EABE30E90ECFCE19F8C075890AF3167597
A4E9FD85E14C9981139C7F09BF8101E1639902D9242CAD62EFA8CF3DED4923CE
39DEFD671C70A4A472403ECE782BB3F9A06DE88D2A3FD11FD8CD3EC75326188E
2AA9C250824E24C7539BF475C8E17334B514528A8B1A93436B11B5B3C4C135EE
E520004790DCB8569D9CCBA91ADCFA36DFAA9A6418012A04D55830D9D6B4D60F
3EDBE5C45AB1594DE94FA8C140FF3672A3098A7563CEDFA65DD77AC151C23595
23CD768D668C93BCA47D643E1DAAC08D9A2E66277777F1DA0306D306E39C44E0
352EB6B31D984F0072AA303D33D5478995B53381864E3704873752CAFC5F902D
6E00FA1DBC770FE98B8287A5110C53469584AE9A37142A3E14CE5AE65A2C7882
2333D1822450F93030CB5809EF98E9F48BA0752DFDCA4C0B0F36A79937141E27
811C6B33694B3F988AB0C9ED06E3852960BE07B7B0BF78906E3F8B77B9C2F428
FAC68C9879DA689449C6D974A97D5AEA4652625C005977FC252B1ADC5E46339F
C63A949259C275415C6553AB46244854CF5443D0E07F122A635F3870490A65C3
2805AD651105EC42AE7D1FAF6041783DF9A836C9458FE9FAE8DCF1E94FF35C85
21CF34C2CE45C4C3EC7B5223DCE6D6D3D63A972AF5B3507D7032AA640FA2D80E
2210AE5ADE0322DDBA57C4B946D6F167A57E11A5A65E99ACDA625269DD309D8F
3A20F30FB9480FB49217ED7B4E0ED4D9AE0EB8BAA3823E490AFFA83F42571137
37C13B9B484875CF9D65BAA27926D40456E4276250BE441E5720335338F0545F
C28B0031D516759DC237330A3A664A1F0864D36DF0A7846966A4C67D685CC320
AE143AB0E5E22885D802AED9BE7AEC67180B921D6B4C39DCAF32A91C6AD9F17E
25985FBFF87B60A9DED42F836EC514D418E4AF62DEC5B466EE6CA0528232C3E4
56286C1FEC49F06CA99C204B556DA40D4E6F1ADA8DF4908CD58ED54BC0295B7B
8BA38386C3E92D51329ED239334C2F9A63DCD6C8BBFCCCE8D7EBA98C1612C970
CAA2C9472E07E0D2F3F10BA883CB2046E81CE317A0B867554FC41DA8B72CFB71
7869B7EDB6649D987B1654AD20D7CFB95142E9F309431D2390B36E5A8B62D4CA
42688C704FA9A67D64F14F1A6DA64465CE987B3A1B6E00CBC41743D88C73F004
FEFA9E86C122EF05A225DB1BD4790CC8A485CD0B559ADC80EF6BBD507826AE3C
493BEB46394CDBE37FD399DCD52402093E3D039D21B2334664586C76CBD04488
77668C682F5107396F319C5C858713F3A3B4835A64DEE8D4B8897CC02C6C2DD3
F25D5A9F62028EF80152F51680949ECC786402D86FFD4C0C123E4019E4D86981
8D75FD87D007E1B5F047CDCE478DEEED4F8EFFFECAC393CADFB9CE4F29B968E8
79678830CA6BED68B08EC50B1632128481FFD5458C1DA9FBB9A8CC5D02711AB2
F1AD5D63F1A902434161CF7928C54F16D30C37BBDE712ADE9FFEF90ABBAD2144
C324D1EBBB21583FAE96F79B6A9B7BF0F838A6DBEC4DE0EBC46C10484C672938
0651984B1191C014875D0B19CEDE281940D45D3F9B39005FE49A79CE949CEDB6
5B16D92E86EF9144E9162A946DFAAD74569E61C3E739665113EDBED6CE0D9018
1317B82703C2A727F960E7AEB53480539B8EACDFDB0973A9B186E27727E2C39A
2CCB77876EC8D5480E97BB4606EE1F157D9F8895A2C1C97ADD1AAF6D6E51253D
247D91364C0C891883FAAEC7152A12160FD542F89734E08B5B8F1451561BC102
ACA484EB4FE782784BCFE203F3A7DBB81A0A202B5683587B8F726105C3987B7C
FD366BF9B140E1949B2BD271D2A649ACD0CD62307380F0166AC2E6E44047850E
A56066F06BB47092AE595797094AF07FCDACE0F25ECF30A3C903C251F0F97C11
92976B4797AB3620FE665809102BA7175651DF7DA6215F25778D228E42770CD8
B12EF879E4C8B9F8B379B482308FC8DE459A003FDEDF2824CE7CE3D5CBFF6091
503C92E0E23B3E9BB1C6C3424390D7F0804F28A5DA3B4F8E10D3A5157E4115CE
3B6A3BB452417F1D87BCF0C35B5BCE4A763886ED0DFB2A72C6867922EC3ABD50
32A13FE69FE01A114E444C1F097F6AFAC7606ADCCEFE986AE051292F1C935F26
4BC41873E40028AA8F3DD3F0BFEE5F89C3EFB5381856F76E79BE7F42723C95CC
A984DDEEEF376F9A18F720457A4AB35CE29E22519074E18E6981CAEA787C391C
E72C352EBD6216008CB1E93FC35DADD7B72C6DEE7F684B97E7D85EF286941577
A43665CD55BE83A63D3EB4E4CE9706831FF92294D7BBEE6BB1730B9E3B039852
CB2A5D2EAFF2EEBC9AC0D81CDA53DD63150FB85C0328A96A39037E276C67862D
AEF796A0E24A334BE09FE8ED5DC4F03CE6F8AEE9341E5B198890C950FF790261
872760954D2CE0CE474B3A5826DE04B5E80FBDF215F473DCDA9764F56EC19382
F2B86AD651CA2B01DB899987975675A986E741340C841085F6F913A344FB0ABB
0F890116EB24A9384C04C9C5088B5B88C90DD46B3F843685AD5613A52E81FCE4
00DF31367D69432E92394A95196DAA32BEBE4E6127C9DC4AD6EF6EE0D15AE4C6
5321DD0ADAD67FB7872B90950DE333A444BE5476340C4F274EF8D743799E33F4
7FBA10C2EF19C16713490E0DB332D9A611D3F3B6B343A04502AE821B61B0A633
61195832F56E6D82EE9F9E6A79F97AFCAB9B601D241FB8BC057F1AC61462BE33
6F3DEF5ED468E6CDB434895DCFDFD1E7595AD877684DEC63076BAAACC6A234EF
698063C9A7FEF244611D52D7D346F276C656EEFB1FD5DA9CE913CB358A83AC0C
1A07D444BB28D24ADC86CADAD2636F675A2C0B542004B3A36C555F2853FF3109
96D457C4AE4F5A48D88B627D7F96DEF8498BCC17586A60E2089E87948BBB41C9
6F9C38E159935B7923412254CE844D7A17650BEDBF0ADBF82E934E5271224CC1
9B6D45B5605AB3A47D574A3D68FE38181F8C09AD6DC1446B3F1EB7ADF3DFEB71
B17AB6126C06A3713F75408E29138D270273481A2F4E805099DD20BD5794C717
EE522FA728060C6C117377CA22D9D499FFC8F3118E30CEA0F5B50CBDF2DF8E3F
4824B954594A1F97194B19FA8DADD21642385A92E3B458333483A2C30F1E9CC1
2D9A57EA3E001CAD18043E25DCF568CCC51C22A02B970EEA08B6407EF8D7F67D
8A1DA32314A92BFD2CC72E38EC37883E4B2767E236BE25D1A176706A18DD0CDA
AAD67F1CAB6A1B108725005EC2A1DE3F390C439DF53A861F8D2A760873760491
F22DE2E8FAA745BB0E6BE8EFE3F2BBA46FF9260E54AC3517D2C0C90D143C5F6F
AD3E4A3F80C2FC2B6A1EA45B1E448854FBDD618F7D31635BC15A0DA6E38BD535
B53968F175786345460696F069F9ACCE5F2E848C25C3E46FEDD786E16D89C7A5
E26F468737E17BAD7D7A9978E5B2E05B20D542B7E6459FA2CE8C1C8A16918BB0
DF097486412461A5CB5799C8E50C1D33260460E31185CD8E85E37CCB2850B50D
6569753A3CF8FE87CB23B6830B50001E25CA4AD21DD19B49525A4E934CBF08C3
43D3AA6D7065140BF2998E6C3186826950BA1A37F4A4CD704E8EAFC757116FE3
012E01AEBF584CC74DEEC698024006E446612825DAA2F91781C807A35DAE4670
78EE0DBC0E751FCD129C6DA99FF5CCD593D3430171F100CA1441C3664BFDE63B
8D6B310107DBACD86BA685ACC8AA4CE9F65F2718F123D485799661E8A7EF831C
3BCEF0AF8D53B79FF54450E370B981AE1E9B10A2E13F8D557FA132E3B9AA0850
6150A7608135AC18E45FA048FC49889DD107F682D9DC5778FF89227A85D6480D
A41A9D0603EB0FEB09921F1BBF9AA4A4BF32E83444BC237F0D53323F563E8AD2
7F816E234D72FB99578B809358856E4E99B28E138E2DB585CDC8947098F67A41
B02DE27C7914F1F0A96E74D38961ABF2C71F285D3BD320E14BBA53523C519048
67D723EBAB7C76731F8677478BDBBBDC518BD0163DE755EE08D1DE3051087800
1181B935D232E3F1BE797ABD679FADE3D3721D129370E9B0F0F59D7A86D619FE
0045139E7A564EA5B099C094DA672C9D042051FB5E063C916627BB12FF9B399D
B1AF4BA9A5705502F55E4CCF73C16F310840B300B10370B58E49634684C21B73
8351E5B5250B1273766151F36B081FFA1E403BB81EEDEF8A16CA9602FDFB55C5
50FD3B67A0094913958D22575E85FDD0A2A87CC9FD874959462454B5D439C456
BB55FB81B7644B1F945DF2E0C86F2AEEF587735998DBB58C784E4619E095BFA2
27560156D1704DDBF898DEB78A3E79563235124E822EB5EC86F1E3322E494B0E
1D859599C70E43EBD1E81973D800E720E96FDBFF1B2D1AE9BDA4EBCB45BA7E9A
67F161EA1B875B8AE95D4CD1FCA1B376DC7ED250F98A9D54B9F2AF8132B8E428
CCFDA5D586FB6FA8D8AF2C8CD5272AAF5C45A924199B057DADB733F8E7D0C2F1
2AB40F3AACF57476FE504CB17DF506B83A5D3ABC9D10FA331966743BB807BC62
ECCE310D8994FF4745740AED1FA5436E30669CDA65742ED08E4650ADF1FB3FD9
B134E7F7B9B349EB005E2E7957E228D6916BBA8D5C6585CC4C3D373AB6530B16
F574AC8B12D7142A1D327E86BE3330CD1A5EEED203F62B05856D5DFD682F88CC
FEF0BFB148E17AC26F748ECCBD48000277EC97939B95A1B189491EAA6BB8999E
BFAAF4EC4224F95B84A2FC9A44CD058EA61F649BCFD9476C61AE1C73400B1B2B
D521E0E24D116FC909066A7F93C73E9FA891D9FDA43E7B06E55BC7A2EE1DAC68
EDA5CBB9125C8D8ECAADEF27878C1B92C19CDFB8240F2FB9A930E7E01DEA5366
E0D71E54543FE04BA6F49575728D15009510D7513AFA1F0B62637334536955AA
3A0FAA2FA6BCE3E864684640E0E8F1638B35A9FCA7EFEA7DC38AFA630E654A9C
7AD82F4EB0697106381469023368243C4F43D862E81E3594AC3AF57773A12830
D0A6EE4813061D5998CACAE66C834F0332BB4D3220063A375EE7665F027827D2
434B5B567A2ACB83BC695F080033559B56FB9D2DC3F14A813B84ED2124F12474
2C1456261F272FF509AC8B82CA35DA7C5E9D4F851635F422BB20C9558FEDCCAF
67D83107B8B89EB7BA2643028A304E0EEA861FF0259FE315D58092F7B8EB747A
364AF6733B6249AF814A3C56E69CFFC1DF788E0A5F7324DDEB5737ACDA3D79FC
CC747EDFE0FDF4574204765AD7B0A7976E37F5036F7F52A3424F1B7995A97253
C8F822C11204E34061D817AB58F78A4BE43408C7C2F6D4465B31BDEBFFA59CD3
16F80D1F595E35671969AD36CC49ACB5AC8B290D15AC17BBB00A1BE1F8387E0E
BDE8CB2D33D1710EB9C6E502235D6B23F70CC925196AFBECEB82E86734FF9C26
9FAA11CF0A2B6EA61AA9465BBB3A77B2BEBA638BFB4E7E36FB85EB852D4859DB
715C85A89100665FB4789FD782633D11DCEAB06663D976949A4E6F071E2E903A
68CA7A4061A48A2370C6222C363BC50FF446472BE6AFEEDA6E8515D6F652674E
20808F6ACDB860B1B84DB9B8A582720B2F2A2621514057156FE4E7216F467BE8
FA999AB02B2693173F543A3D263ED6927B59E60B8A8BA1B0935BDF7F81E1027F
F8BB76E9A5930DDA4C7C7805A0CED7C26E24B0281AC7228BC9EDC46D6E1D768E
DF3478338E66D97AE2FE8BA2761263464424D7FDBF80711A37764D3BD955D27D
DB800DA1C4306AC7B0B46B7F38703B8D11BE7BC22FCE1B4A916EF525415B7A83
C81B049482620C2A709C44F011D0819BDEA6386D2D249929BA4C2D6D4CB966E7
BEF625A1F83CF5C34DFA94787BD28B0BD3E972D886D408414EE091174AA6AF91
6D59437C10F28C43761EDC0E66A5E026E1A82A635AB22364382116A593A43A25
64A451C9C2B5E8F0AE32D2107D819094CD8E14744B571776B1D9BC9C544050BE
2F284C0C2FED3BCD185C36E8686D2398C6351B1021AE945B60AE3D43E04691EA
342FCB2623DFA6BE42AE523CDCB7341656791C3D210014D0D6DD89AF38C49D8D
7AC6432D4A78712F4606601ACD7D328B95ABEE16B14C76FCFCE4C848E41EFDCB
5AA1EE1DB0E3AC051E6654ED6F8D8AE278B7171B945C5AEDEBD3D08153CA578E
AF12E80BD3CAFE48B040D71A55004B6570C850B55F5AB7C9AD9C78E669300402
E5DB75B1683103305C5A43ED712E1D9142D27FCE2CC85BB5DAE1FC5751649009
B86F0805231AFBEF39C25DECEB2C64030E48733BCEBEF9452315BDD7A07670A5
C2DE587C394A8F666F2804B161B5F2C556013942C2CB9EE70B46B612CC1458DE
05592BCE6FD4F9F9C07E4ECD2A909668841183ABD7EFE82B09F02939A2D8C2CF
15FF99555E34634B52F0B8B83EEF5CCA51B26407FCE2A9E583703F6DB868C99D
17F0EC62300B94D15AA880262B01E6C40FF0C0FA10963128C153E6EF6EB6AC37
2CA15340B3D724E0DC76153ED4C9ED3FB3BE4B04F78DFD52BC02589DFAE6B201
AB6C70DE2A317DF81F62E9625582A50F194BF2331F21054DE7028830360F668C
C7D1078DE9D6B13F6DECCF25EFF515B0167E8FC7306842AA09412CE50BBCA640
F5359DFDB2B83F5BEEB210E4A527D7605FDFD06638D65224C6288468677E3AC0
FC72655AFC51729C3F2799E858D27E7D1ADD03D2E7C6A96DC29BDE666EF8674E
4EE23EE4244A76684D8202EAACC1D44318444D8026DD89A78B1AB00F59D4098B
FE0F660872399919F94C6E929273931AFFDB7E29FB0CC3B8BCACA4693DF0370A
98042E527BD65EC1E77D32A6164EB5A3A690564265135BF50848234E76845B91
73C060B717E14A683D04585EAFF7F492C91EE775E06E20F1EDC388543E6F5CCB
C5780936829A15DE3B4654B265AE6D8436ED71848D2E7CD6B766D4F3E1751C3B
528D02BD67D62725D825DC59359DAE2A50CCEA2DAF7289DE03F85F032E79B4F6
77226510BB5C56E49588D16FE2AEA61576CC7CBCCB3C05BC8EB5E7A6939C43EC
F80EC567B562F79E35A48281519D4977534D0E466F1FB5EF678E92F2BECE388E
8466DA27DFE4BC324C436303E25F013D1F713C24FA7BFD9E52B65E90528AB4D9
39F05DA6175AF8A37C2A4A4CDA6A2C6107E32195B8310BD109A1ACD027A29847
D9E2936138205983025B6E655F40FAC45FB3D1C66C3DE856C8C0DEAAFB9C4607
2830400101F36B938ECCA82492497C655970855C4DDCADD3D4F7BD5C89F7E958
B584298DC6830F31E286305261582C90C7AB5071280EFC3E597ECDE0884F0F72
A15179E1FA1A18E90331A61AB63356E24E01E499345560E928B0224E5C15C3E4
B1B7B9157998C8EADA678CE7C17AEC6FFFA4998E879EAA280D8C528B77C22B57
2651C782D837A7FE7FBAE9F372C30CBE0298C7CF0424F68312B9936FF8C8669E
B2DE84B7B61759667B7F6F52E57B8AD2BC8F1293105D38E74A9B760397A1AC78
A54A649EB4CCEA8BFA6DEF9BC50AD354C5F3F0FB85AA51B692CB6D3FCCD1C14A
E308A9DE8E06E047C76391ED93D9810E02BD63939AEFC3033B88B33AB67C5499
D2A60B5321A6FFEE51F2E58AF26122C2D5ECD87C49AA90065CD69996B62E855A
43C3097D27E513141B91A947E0A1C2BE7CC35ED19BA1AD4D40E8251B828BDBA6
087CA9889B31AA8E8849D02ED194C16B0DDD9A95990FB45E3B2D0748BC05BBA1
5AC1A6B403C1964C0FEB8320A5264D6B64371272A6FB05FF7E29BBBA2C52EE03
85F33690BDADA2B0D53999A9B10A942DBE0D1BC7AC4FCF6D46ECFAD14CC42246
30AA60FE964630F076555868BE88EDF765D326C44695EE5AAF118E236AF7253D
B5F59EBBC14ED7BC71D669091521BF6739131AAC96173E314FACAE006BA20646
23902C8AC479EEEBB609EEF32E9E71DB74E88971C070FBAE2C25A7104589EF38
806A57FBA6B6ABDD850E11E9FD1CD65241541C284CFD7EEDB8437F619CDA4BAC
FA4A91B4D4EA860442EB127441F4B6AD5B248A11EB29201440E60F644FB91038
5E80FF723387EC7A02574D98A0D0401AD3156F23F550643A23EDA8E2FBACB8D3
688104C7DBA53CB5F2A40DC831ACB586E5115B1D34E1D627BEA91A42A60CE320
E22970674978717C037E9F366C7B3BE0F6FE080C4C7E13F074D0C312BA993EFE
FB9177A888D6BA59A1AC2BACF1545E4F6F1FA94AE02BFB5505446BF1DBEA1899
3D20EDE279700DF4328E6A91D4E9013924D7B6548E29F5307470A584751B41F3
48377A602A2D5CEE4A409E83188D1E68E2617B9996E2CD033AA4E4A7DFAE20AB
DE997CE19D32C1C52050FBB44FF8C272FC1493F1A99DDB2E1FFE7A6767CA5CD9
7812C5B22D739B92C29AE6408F86D0300A15F1800E4BDF41FC440C9782D66B3D
3F89B468FAEA7A34B37D86B2669B496B20242E8CD6788805EEEDA195C32F9F42
EA06DAC30380342CEB1F4A1328D5AC6975A06BA454296EC17A80F073D8B41A83
C61EF0334681CCF92CE7D90F317FA8E688694FBF21A3801449C65C112FA86B66
30A8845A3ED80536EDE9DF4BBF6C97AEB8FC5D08A1663993A976E669D81C8B19
FEB2E62F5D35F148881793B9152ADEAADA75574B2BDED25565CE81CA375F2F26
C049117DB040C2E2CA5DD42B6374C7FE48EFBC5C66A86DA1267EFD0181C65C2F
290D74817B56C26E96BB76E360801E608E05496BE7619B8C69F24DBF4732ED58
8181E253CB5FA4D2D486752659C90B8428D7B2384F074BCDBD82DCA8B2F64974
B71872B027541E90B59718AA5429ED39CDE4F9CD1F92837B1EDAC16E2B9B672C
10FF6AF70D58A4D75A42765B460EA23FCBD5B69D71FAB040187441B0D4749E30
DCEA78D817D722F95CF0836CACA813A6FF2E05352428D4C5BDF34A586DA918AE
888095A07528C8343292E178983EAD80B1BA746C2E1B94DAEE18FD20F2350188
00DA487D57C92101DCE350C7D4B6ED5C5B004CFEB3E27B79421B6FE82210C3EC
B1A34D45E05842CF928E4520034838377FA0BB8819629965F808F6DD864EF898
07639677C6928E26C70F239E53E455CEB968888567A9F1280CA84AA8CF95E54F
FC4764C4EA0A1257DB22ACA02F60389E94F86A0BF0588380F3C5DF4A9EE8EEF9
32D2DD11437BE1DDDCE4B5F315EA5AF154E5D547DD51EEDF2217FAD2FF1ACD23
85437B638193E0AC84BBB3DCCAE7DA0F0759A6EB1907B2C5C8834BE9EC41F48E
58F4124CCC5780E4CD080024D545211268EB85CE5EBF7E2A22742D0E22B271EB
A61CD63C33FAFAB0717A2C127BEA33EF95743A5C20DA6A8178A67910F98548F4
082A02B989F127DF07F7D715CD37057EE7E02160FC7E9F024C009D0F4438E24A
CEA80B2A217F8A10DD0BE7AEE7F036164BEAD2510872FE8A9F944EF03B05D34E
7B13D2AD6D878D621024717002F67ECBBC5AF9E664BCCFBA4621BA840C820836
BF68E7F1BFA46EBB66CBB47D39A9EE4888477C26D2AE1C150457CF841E2DCBAA
EA84169A289D65367997897CD612B4EBD0B28B881E35FE5B8528407E03DD4B3C
95ACBF19F0BB5DA8C812D806E47CC4A5F6E4BD82A5915D31670D039B507535A4
1B8E0412081D3A68C7420E775F67DEB292473BF0C1B89EBBF386C0D390DF8595
2BE20210CBB7C40DC7473903F6E78E1311E071D9F7F959365EC351DF62877664
F3A80C7A1F2C9F724B476C952AE2A8F2B235E11BBD11D4922C16189CF5474939
D71E894011935441D655C4BB856CED5E0A7CAA27448A4DE6F6A982A4CE8F0DC1
0D8CD10758E6FB302F3213830B6943F111A20FE8026B86950A0E010E22B9EBD3
ED298B7179E3F7496ADE5568655D5694BBD174555BC0B7E5F1E69C5E0474DD0B
A8992F152B72D1E5A46E4FB933ADC00E06832796538C1D91E7259EF7AA3B96AC
F866E7A6ADF80D431AAD3E1624FBB7C8112F99A3B367A67209C2873146350825
AE365EA7A44553C00525A70C84FC0A4DAC7BD9FF71EF7ABB4B41851B4E83C9A2
83133797CDA3EDEE89159912F499954495765572C5592486C76F7AC2C11EF6DA
56C9DD48554B7E24707F2FA3F1D39E0AE5B0C279029552C210312DB573060A7E
73A2DB00EDFB207E3EE9AD56F26907EA71B61F3B1CD2CF31B60727EC46F1C54E
F4524C2B1A3249E83C9B84829540E2370801CD18859E18245AADF217F6FF39B5
2F7C98921B7163FB8766F048488F398030B76514945E1B1736E0BFB09AEC8BB6
6FEF44F21FBBE02A9006325466F4E933E9C82BB1A4AE531B50EAC5F9DCBD0955
D39D83937CD2E7BC88C0F1AFFA27EBBE4758FF02F24D4BBD84D38E85FB82FD95
92001520EBFD0534BD7B02C49A0209E09057C035C0FD008E8EC92B16E626C011
E4CD66098A74CC0F7165BCA1DD66281ADFFB8899C967E8E7596D4B90B8031B2A
CA2FCAF68A4F8E259F611AF039FD9272CDFFEE34959A0FD994D261DAB29859ED
07BECEA62A038CC29AE78073F07FB59B4D9C99EF3DEAD86EB7278934C2092493
C253B814E3E8336D033C44CE87622CFDC3AFF8904E3C6406C4B5D732290519E9
2125C87DC66B8AD73F017821CE4F7591A1B579793BEBD7B292AD7B43340ABCF9
9A659271156899B9EDB0DB165255887A5453ADB25DB2CF456B29A28C1651543D
FEF3F8D122AB6BD5FD327304FEFC149413960F00E278F181BFD6095C846C4660
BEF1F5CEE089F2F1642EF1DEDDA35F857D0E863F8B9E05EEB21765A48B2C6590
CD0C58F40DB98B2574E812BB0B56EEC9A2AACA698A4AFE2F1CA57EFB5832E203
EA1FF3E2EBA354D2158EFD4CAFE7740CB55812E1480AAB216D64CB6D395B5805
98924146D6D76D123D048858E34CA46E87B0E7680CADACE5F990B3ED587D4E10
94A55111A345BCBADF86FD637D57519BAFF01FEA9DF794371055BFA8338DA8D6
D7C32C7B0F46ABF25625FE61CCE6D958D2D400289A9B494ACF57A83F4EA46C93
019D4FBDFA8A8E5FD306C26593358F7E452A0CF8FFA4EEB513BBE547B673396A
F3BD69B6EAC7BD862CD41BFC68C9E43AD6D71ABCE42CDC3ADAD81E2D2A1C0AA5
AB3F785CFB4A9B44CCDC5EA6A0A1B7A474C8A65A439A24AFDFBEE3D8E6788041
12FDF8C426F1C2E17FCFA54DCFC9CA0CFA96C74CF56768DE57176010CAB047ED
2CD6D2ADED30E8DD0748A8355405612DDC1BE13CC06BE30D43E0405E6AD2D3C8
2DA6036C6B550FA423BD0609762D129832BF138C82A49E79A01C7D558B730F42
D40DB456C3208A038BDBD5E3F31DF3E66D432534D837AF50D6F045222118CBC2
48E5481FA52DE4882C050BED5EC82856CF8070E289D5068F364D9CEC474A5B95
51370B788C4A729282F1162843584D874E0217DD865E60A5CA956B59F57C5F92
B582CE96C35277B52027A455F1DA48C897609CD4894185CE0F327CAD8296CADA
2BFE9E5EC637514C4F4765C49D54AF4A475C9D34491E8A458C86BC4996E9AB05
EF13006A116C824D6C180FCE0D8420DBB94DC0617614B0404884A2CFEF6214B2
780446962744561EED378A6A961DCFC564B487CCB0E5BDD547C7554E1E6AC1F4
90950E65A5A17FA7BDDF6E057DFF979A5AABD773357687B6BAE4BA52037664DC
2B790076B36A148D42D065AD5079FBCB572B2F52196F3E8E72068438CF67050B
2A54A760D319605FB017A7FF9147F8984C52CBBBCEB0B2A85823E7169D58B07A
C3E33C46A4A327E59DFF7C3D0F760D58E95926819409CC65A7BCC5E2DE5B1C88
FADFBFEEE9D6882FFF0AC547C11BF2E561F8A334EA12A11FC4FD1FA0EE61B939
EDAC75474BDC4A0390BE4DD72C3AC6A291E36315233F62F276F64475E62FBF30
B2518F371B4D988FE490B34903581ACAFC0668A8CCCC9DB2CFD333A80D40000B
647CC7D9ECF9C84B5FF6BD4396A18E705C3684DEFF82699CA36FB1F6563DB06F
5C20463643AA215BB401BB2B2CF14C55DB9A4E883B97A7B72000C7B2DAFFDDAB
5C7C2CB19E32683B6452882D4CEC56C0186362213A68F7FBE41F4EF6A8BBF88F
9524D09DB8DA8CDDF5B8CFDC90B7417416B8051E6E901513D31766564515C2EF
D81281098E84C0AECAC6D865539CF7A99397EB779C829BA0F99C9D40BB3D27F4
439862C54E9C4A0472409632E659FB3F64686F395BD150CFB4B19C54A04167B5
CDBD3EDBAA5054E47EA420946ADDFEE44D01522AFB62889347097D66E7D26619
D78F36D82B57FF08D62DBA1F468D214C3CF67B50A3EAD8CBBD20E041D906D1AF
D88AE972CED40BC94E7465C3DA3535737DAD695A58FF249D4775DDA8575A42E4
CF2083BBBC8D37EFD7DDCBC58493ABB88D0DAEE313429088DC483954EED87A5D
8AF8DEF3AED93DB4833DEF69F1D165A37AC8A51DBB7B32ABC7219CC92BDCDE35
E34442C4BB017B438E62BD796C32C754D78F1C6DF03728FCD469CC5E81BD78DE
8E9A99F6656F7BB8E673C7E21AC2EA69176A7B89EF9BF30B043259B64A98B898
B83DD62090B39FF69A6BCC3A72CA2B7874281BFCE45BC160F88B2DFF1F45F706
862FFC1EE00E6056F646E83D1DF7F0D900075323E0C06EE4CF5464AE6CC3C41E
54B8783F793C70CB98895EAA884901DA12AB7EE221E460323A464732CA2B0CCE
42A9C8492C628F5005C7A8DC96A145DE86A83F821465EC5C39E2591B04059E90
3F98A9B48CB001DF58F895DAEFC0E7F4B354B455B43492F31376A44A28BAA6A5
F3E5EB37EEC387167E24C523B54014B92535D02D674368AB05CCF4599D6D31D9
AE040E01ACCC086F1013C8C28FEEA45A6190D04442CCB28754135DC9C8A895C5
1EC759A83EA0D92DF7983757F1FE1964674762248ED4276FB2DBC524F2C3054E
0B470A26E4F2E7D701944AAF1825038205BB22EFBF9A5310ECD36E5334DCB17F
0B1B183FAB1D734ADDAA70080FB8286EB46739139B0832FB3167C5DB29BB9C19
56C8DF22C398271B685C493DB0C78E82FCCFD099E52A3E457F8F6F13B64C5591
8911C199B6E927E8494ED12CFFFF54EE6541E59EFE45B6E8ECE390D301F09429
542FD17704A661132B72B0E91A68B70C37B5091BC674EB9886B844D8D29B8D91
DC80BCDA8CE06C159E926AF53D5A6276E0E3DFEE2398700FC7CB198ECDC05E71
A67CCE769FB2888E2C98DD4FEE51DC45856BBB8D70E4A421051396585A27C859
0106D4C9796ED819A59CC63BAF7023DF57AAEFC7C758C76C3E87D4526775E628
450D3EE4455505980663F068198C619F32972F365AC90CB76702EE9755267719
05983FB4A3A25AEB631803356529054D6FAB4797B7306929A8F8F52D3DF8E4C1
AFB1D0326C001203F0F77CC74AD17A93D320A41E0E44FD0AB598F9B1FF7C7C91
293BA68EB3492D8286197A7436856A796C0D8837CC06A8665F4F2F084BA89800
FA749132A5EB4226E46740CDD9840FFE4A7839684A6CAFBBD5B56D32B90E02B7
689BF088E1C26F277DEBEA94FA162925B204E2883BD1205259CF3D93BD2AE83D
2F874123CCDEB586E611FC24BECD1EC53F2D917141A830CD7D4FC18DA41B8ED3
6CAB39AEA9DB2D5CFC364D10643D70A8599A0C4FC6F024DDC368E6AFAC2EE98D
51830AB883AAE50D1302782629183A5D613E6E47FEACA0E61D8FE4ED5A6D635B
5702161C255034AEE709F0A3BB3C0B7B6C3140CD767B1D6515F5577B37CE82C2
01EF90DF771FAB5EF10238742B0F48AD2AD75BD6569B135A8AEF915466AAE6E9
3809FA577394B8B209048FF340D86EB1EC7361FEB33AB1624D36C6C0F34B355C
1B021D09D0A441E6D718AC2D5C32B742F01989222BA7F60FFC840BBE2B342503
3A7533E8FB790AC924C190FCBC47B7139BAE6C25F4BF31F30694B04967F5F37F
BEBACA0F91B9EB32402BF03D0C7DE03DFF5F8C80A855FA1F5211A43D174C9926
0A6D762AE96A8E31B360ED032745F1FEE209F67AA0B1DABDF5B6A955C17B00D1
54D22A355931ED4E14D5E30A63243E9F7DBEE9A4190F3B272F378B86AD15EABD
FB72869A051DE2FC6095AE355885F5AE59B98788C65FA9D9BD6512B23EA04E6F
52F2535F412EA123DA34E6FFFFE5A57A2E951093DF7F64F58C330FA4F0E8AB8F
B294BF26343761ABC3656BB7B13D68EF390C2FFE767EE986A54C1692BF515FF8
4941E802B0EEC782631EA6052C604D56C428B3661C19F159778E4686D60C5B08
6B36C2CC39C223F22712D6060B8378E543FD435DA22423E472548E3CD6B827A8
DB1F7DD46CB725008E0AE83B06B601A3C121C8F7534EF73A5AAB969ACCCC18B3
F40BDCF6D8AF61F057E49B34467D3CCC7E2E6F2CE56588D1C055CDF39B1BFF2A
BC145CD25D0776319E4D60197AC76B1F1D21088795B4676B205F576149F4A52A
048C09D0A8944DF27CFCAF8E8CDA0B40F24424F265E98635D7F85769476DDDE5
810861C4659CA74E755F0967A2A86358963544B95D67C871427FCA3512A7AC25
1023DA806EA5BE869CEB87DE10062D80F342338B2EAE4EB4EC2305885B7F924A
8A079FBD86B1D35EE484FDEB94D0DF36B284AAEFC272D665BEA0AD15E5553217
56196F2CFE1FCCF810DCE811D46F8B883D3357B0BFB3CE2F22606545EBC21353
58FE164D0A7FE6EE1551AFF5E583D41207D5AFA8EB7711EFB513CBB8ED17B803
445202A890618B0C337A906FF3A3A9279A5640DD5DF4665587ACCDA31CAD1729
7CB09BADAA0D0B8E1B4C5ADA5F038184BC0105B71FFD7171092B8C01B4033578
381200EFD7C4A9C79BB7F412AD4EC3D83D0B3BF43108CED08DC5D50C313EBA7A
706F788EA4556A14F09D7FA90387CA428543F3C7FEB8CB31EAFF60441C137E00
47C889B9CB2CE20995623431D32C7557686E761DCE0B5098496DC0142BA17ED1
C5409C1529135F9AD2E55E6C7A52C3C7B56A4D1278C4BAF550218DB055431646
331C09183DF9F1DF5BB77DD35458B674DFE0AA8BD6AC98CF5F980902D901A8EA
0CFA3D0B7AD8E80C08C43E9EE5CC0A4C6BCEA4A6A8DE369F2C507A73AB5A3743
7019B456BB65F17FEC4BC2D4287ABFFFA5CB4C867E720001765E187446088B32
A40A393D726FE8C3894E60DDA2CCED2F9E2BCF5A9DFE7205FFFA0806AE4C520D
B6151767A096F7E618252511348794838F927D10CE9CEF0436E174784D21CA93
8B86F99CD5DBD2134534F1E2791FABB78294C028A3B21B72AB37F10C38ACD090
2FC0E967F6DECACD5E9F6CF746D49DD1DF20503F48DCA2489F61FB670F5521FE
BF49C54DBE6D7589B0DC602B9E99520B35EFB32E261F8BAE4665DA8C4FF5ADD8
9D23F255AE7028D0495D6279B9B0EDE8A0841A9617F03155D8D8E6DB4BFE62AC
07107D60260417CA26D5A6F31BE1A0BD9622BF7F15692FAD2FC649152A612320
DB7A8AAC7FBD1B8C61F5DF7222323CCF0F65D54B73D1A33AF3E934BBE1C23719
90E0150E54BEA86B0ED8316D6E132DDEFA5444362BDC7E4EC0A87035E9A7A642
5A76D2BD49AA8BDF2D7AD77F1645EFCF7B330C56F9C0EA02D7269CCE242D6B79
FD66D40E3BFC2B19F87A2890CB1E4A93A1848DEAB2E9E37B7C868F3EFF195E83
FDC648540985CA24BDCA0D5BC7808541B5EDFBDFB0D9D8DB2090B950E3A3CE6D
69D57F24258E0688277563F0DCE63F0AFBC5B5A30874F2C7CC98DB23C48C3502
4315E733E2AD0A95F2439EAB8F7A71DDE94C5E7C8FB2CC2A1E080D94FED86256
4AFE705C7D0075B6D8BA27FF7EE6C605EC1D10CC823F423594C118A784A9C238
6FFCBBC824DF002E6762CFB612CB005C97BE110359E166BF88694D38D305ED7C
FCADB8B0235367EE0993927C473EC5DA4EABBFEBE2A1C3A0E87BBD109DB79A28
5E9D5C3FF5B51665E65E0A1AA7CF04F531C7E78B421565957EA1891F0827D2E1
6AB0019DCF806534A75B9A6E4C6479403BC1FA6CE2041C3D1BBCFC21351DE06D
A21F324E023836D4D0453E6E13B56F60731455618426FDC52545C9E509931991
8D07397180A6DEBD46D355280D3346EC662FB6977FF993DF0B815FF2B9617EC9
797A783B21BA81AA3A07F69CCF6CD0CFCED423E96244A23CE1D214D8C3DD4BE0
0824D38B48F34ECB0FE36A01F90065B022AF6904E511EE421A7020F325313A84
07509CF5FDEB54DD054E9A008AE69642644413C2ED9D0848B2500930226D63FA
102543DB2E524749A564A1560482A4953B96EB371D22AE58A0C50F70179E2802
8B395CE06C292C2DFB9B750AF51F3B6D2915E16B56DE2D93EC1D218FAEE7C7AB
D40EFE0FB882BB91D3478C03D88BA5053465DD4892A6582CE339E8409003AD55
942998AA1B43A00958237E8AAC5BDE2F08C9BD32C9A47CA9B054E2912FF7E071
57C45B5706F432EEE647849D079D12A4FB00F76327E1997EA4177841D988356D
AB349A95DB2F69F3754933F76E9E53C04DD41A77A51863A568184DF72CCD4FB4
34492F55744B9CC6C82B4E3E0654EC80AF030DAFFF1757A7095BCCC083FB6B4E
56A3BD71F608D54C2A9F6D2DE5E2915CB76C0BEF40AB2CB91B3A83E973F6C5B8
A8912CCD7AA8B6C4351550B76540D5158534EE24A7387C9676655BE80142EBEE
8E6755A616D1892DBB830E3C14CC5F5B032B0A2B7AAC1406BF71AA7D89422666
C4C299B325F7D669C585974BDE7A5E02502E58CDE26D39946E99ABD6F27C171E
B233953779D9B0373C202E3E218012C5F8B2C29F1C6423E1A61025237D68D9D8
EF1054CDAD8250FFBB1475EC41C9E6F2AFAFC37372396EE789A3A43A99BCB6DE
289AF2A228942A3D681DEABD82B99308CF9AECFC113FFCCF26A6AF9E4CBD884D
4994A753BCB33A927ADADF17298AB8E27DA9DE7D84AA2A08B29C15A7081D4182
9D47BD900B738568405CAB9D4FCAE5694D6947B3947517553C90CBE9D9A4B51C
6ADF99FE606EB029942104141C15FAEC2921BAFBD868A35E8768EACDD1E8C139
EA43506D991B0C3618FD977E5F817D3D18BDA4B7A7D4C1FA7E9885CC6B050715
47E782A7F2F634F6347CECA4F74D077255F88184DADD7C772F2B9A3A568E5F1F
B49CEFC1C658C8C9A2A57ABF71BAC6F6CDA30649CCD4B319C20555C126669F4A
A2D78FA3C60A27F929B1ABDD3313C560B20308058B530068CD93CA73A3D99B5C
10AC8AB2F3E452638684C6C37980AE6124BE61DECBADC5AE3B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4ADBEDE831CF53E69C05D38F018C69D14BCC93B20D730B4
3691648E5830EDD4F9CBDBFF106DA474B23CB8650C735ED33B2247144F40839F
73833141536EB05D19D244B8B40FFCA798D922C364410F36531672695DB1F6AA
8EC52EDE61B738CB32649C98597DDCDE8DDFBDD70EF02E745350785CED7E829F
5B18B621B99B494EBA7C4042809188AD43A6F26735142CF5043B84665099AA89
6C82F22ECCBDBDB5A63297B06E72C8929D5202D6A34AC897DEB86AB350C47262
FF768E35A35A8E10E1743C9BA08A087D28C9FFD6BC993137C87A7B3713976F09
BC62E0B00A93FCF87163199C3E19E8142BCBD60D7E8DA9E0EF30E5FD6C70D47D
31637BC0CD4D67F759DE9E566D9C912ACDB47A667B92E8EC88AC1286B779F1ED
6794E06FB0F9324E5BC904CB0CCC7D6B962D7379B10DE25C930FA98280A9FA0B
7CC06C9927EFAE3E38EC68101452BF97998ACDA4FDE33E87024C249F029FE21F
5579799B6BD986A2913E3B917EDF3D43F47C6F505CB6792F0D50519813388421
3DD50460C0F5C515559119F0A24AC76F9D709E512323E167B6081364D2B04002
83F97B956C132DB5322FC30E5BF06D0F86AD70D1FA97743B7726D3CAE5BCD397
BA1FDCA43DFE85DF99F0DD2A35EE24A912A8D5E2DDB74CC4C42DDC9F72447847
012A9D64B50B48894569A9C20F0165808590D86E472B0F820D9193FC0A9E55E6
A2964D7A9CBBD85B150D7F9EA73020051063C3053CDFCD8CF5DF0E67B9833273
1B147A1B7ECE2D245D29A9A0A522F695F0C4CC62A0CAC8A7CA7D3C3A6403B9A7
675DC69ED861AA0478A60D4C49D4602BB869D5A85CE51EDC81601C6FCD650274
10CE17F036C10A982D3D5A26CAB55D1F43B9F5C8624DFF696A03E46BC6EC917F
5F9D13D9521CEA49EA484AF6FCAF365D4B5550BBD8EA3D1619BCE500F78A25F1
6EE805741910083A065233C00C079D7FF5928CF0FF823FBBE686BDAF66CFC6B8
BFCDBD7E65FF7C00F722A1D4AB2DED76D9C5B4664D099649CDCAB8FC77877899
F3EC9B6F9FBA321A1D878BD76E3CDFB5620D822419B30015522153F831D35E70
4C4EF9CFA1E38569842CD8BBC7B17EACD4F369BE57977E20A595875936368158
23D50EB25F683649C36406F6DAF13C812BC4BFDAEB7A3CD213CA46DC38197B4C
4E2A8C9A342EEC5625021BA0BE613E673C35F83E5310DF88FDD270A44A558CF1
FF76F01F781502DDAA6C3E9D7DED0243850D6A1BE5DEA84D302E9F060CCC9E65
E2F73F945B06A7A4C877728D1975DB049FE7136F0AF6E5DCA10F0DA5E5F243CA
21704170CEFB37B0EED373F1E784D41E7963B64E43EE2BA7B46DBF1F62027571
9F25CB7E1AE57662FE582180BA2D2FD44B94E5058CE824015B712E3FD84BF179
5696BF6A5C1B1775C2E88B33363EC375AE92DCC4D34DF31965FFF356EAC98319
6A00F4DA1EFD00FB32A80A4B9E77DA50AB8C105194D7375A1E7CA84337B5A958
1F46C913E16E92D18BE6D8F405DB86596C08189DF051F0C80E00098191D480D5
B00B106E445FB983B14DE08C3028ED961A4B716B25F690E6E9E1CBD6DD69B7AA
2F7566C4BE0394B4A992593EE9243DE8292ACC36FF22BC6699CBC8C8CF5E685F
64D0ED84F3ED37EF2F6C8A1E78DA813427A9B56D7AC0C67D552DDE510D852B40
87357163C8FF479CABA03DF029BBE99029254C21C8B2FDDB1F05C3BBD9D7CA3E
B2C26C7DA47388BB5D8DC851CE10D5E4B24292338B39C60ED50B5B8744E914E7
63A16842893C86A6569F2C5D1BC4BC58131B555F4A931611FA77EC22EEBDC2EA
79B6D63E73DA114E3AE037C32D996A480B290B125C782999D3B8CFA218C42B54
2D23897E07A0050426DA0D8907CD32DBCA28AAED750BEE0FD48C2318492B3B17
95568A5A40D1D689C11B81F0E2C3288D7E0ADF40348DFF388F5BF3ADACCFD5A6
00E9361D452BF3C8269E9F72B52E5982104B0ED59F3D6679858CBC553BB645C8
89D7157ADF372160F27C6CFBFF7452E6D39AF3E955E159069C378CAADE89FA30
897A7DD33BC4E735D780BB2C1AA1B3AF89BF07C4B41CAC0206E79A8BE6B9EC34
CAD31069ABC0E2A7D3051495EF6D174003EF5A66129327AE7D2927338A1B7B1D
C217CB4FC62B422291DFC35513AE109F9F7763BB2D8D70A434938C2E22ADB06A
EF31F9D6D450DBC0D229350C7528710FA23459C78BC8656DB293B9440244F881
DF59F7D19C566E1AEDFCFA541983D194C371900266FF74BDF9BADE4994EEF9B6
05BC284E4C96C834D113FD7681491AEF167791869B05D0C0E96BD2DF3E5D4950
357C1BB5586BF84A9F5335977D09FE1EB2275CD5A5324C8C443EFB2AD0A3C345
6E845583D46258D10C070D1AF950555EFD97EEE3151B32FA8C77B47690ABF353
886906767F89DC2655F0C65B8546CD92D63DBDE2EF1BBDA2483C7E0D3B806FF2
29FC06CB2ABCEC6256C4403B78648F9906FD3A17C4B0A7E3E0F1D2C4F565C8F8
F565FE45BBC57B60244E63A27BEEBF8B255E8E3E881025774B527115C6C90312
A272FE0F935EFE6630DEC4A06B254689B3CD8B247DC86EF7F8E4640F35F3758B
9C5C8A0408D4D1C55DAEF71282A287AF3461096F2D2D98FA5EFE8729E1DCAA39
171F5560D154BD11E75C61427E8A29A607E3B5D11898E2F903642CA6B707926C
EF31130C3B0E0218A1AFEBF7970E835EC27A146FCFAE2165378F8EC232BA19C7
3CAEBC388C808C04E1C4A4595AA26EFF21E210178C239FD4C367979C2890F6ED
42970847A8546DED5C7091E88ACB5ED91185F9F5931827A09A84D1A1F1357EB1
71199C2E5559F4AF95B65CA1214A5D46FA48D7E177CE8713CFF880B72BFDB83E
633CF95C4042299421001587B13FB969E156DB5FCAE1576CD00BDE0579816FBD
34AF9753B47755DB113CEB73B7C22AF5037729620C7F4B5A965CD135810331E5
1B40C54117D3AC893A7C02897C364D0A78C655820EA0F432C60CF2D6B48A504A
FF53631E8F6607CBEA7EAF800F2E83AE8EE4E34DDFAA59EDFDB3E96B779A9FCF
EEFE0B5CE164677EB196F9F823A37CEC2E477AB5A92BC7246E77DD23396C90DD
308E8DE6E13D2BD10B8F58D5AEF039B22C0BAC75703EEC89A13F03F51A3075C1
B23984D6451D01D211A990D7A27FD23A5D64D267985322CBA2D836F05C651DE8
8E43D991B114EA21104288B3B0D0C10611918704833DDCE8006FD4857B3F0169
A460F7F6C112CD6019797C4BB06979D06455CC2379A0A27D00173C49C46247A2
4CADCD6330EE5ADD15620D0B1C71A4327A289029236B9CAE265E3D6421CDF334
432C0FC1EC6249173A422956211F8C21FEC47486259ADF92A39FAA531926EDB5
6A787B03D8E7F0C737953D173435588D84F88459A64EB699F68E1B75400896D7
083F4B407CB6D88E044E3DEE85ADFEE17F0A2035634B79405C35585D97C603A3
8B19C157E71478BF00A78819D940CF183A50119C05A9D8963C746261A9310CCC
A27047B26A8B6A16CB0CEFC61962A554128ED8F649048A93C6B62AB9FF412689
13430B40CD04AB1FB2DA2D449ABC90E7783BAF38711B30BBA9E860FF40C8A233
1949627F0259B07957C599087982FC6D0CA504B662C80EB662F53EF517ABC311
6065F2FE373E18EC962CE4EAB564588F5B66B82E30E78E7CB8E212E8AEA29D7C
5678C3179FA5B4E1AD982F9289B1F64082F3B677A597C3923AEA96CDD7223B63
157B757DAE57B4831C2AA33E5D43F933F4C329F032B817C70F32BEE20C1A9787
AB3E50B50FDAAB12DCE04E6FE99CDD88085326428EC8B4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD39C
FCD0E8A6224BFA03E8C6D73F4B8F480327701262285C527828E5E203F328AD95
5AB433987B229534C53061C3350047FB20E3887F514B5897FDF225685D18D679
9DC141B7F6830D6771F1A3CAE655CA173FA57D400530CA6FABDCCB4325478D0C
93AC7EAA9DF7605213DEAF94C7281D9AC68D884E15ACA3BA68034F897A2FFC1E
F76FA2A69CEE7F1E9543904F1773969F65553C3469FD85B2F2F89F0E547BFBFD
F62A3E47DAA4EAD6D47F0305CCDB297C320A48A3655FAFC810CEC6F6D68ADA4F
AB5DD7F61DB94072B0AB8F1ABF62A78E43E1578DEBD2D05109DEBBCEC64AC700
4C28C4F0A5E3A003423B9958C73D306B2B4A7C67A95F8B4E737992642BD3701D
39FFAD94524A7752560FE97B8E99A12AFCCC5044D989BCAEC863BD15CAB7CE63
0194962E4183C3838D9401260A743447DF953444B29D7CB004560D0685F73E87
72FDDAB87125F419F90D165EF1C2A06A9B7500C6AD185B4115777C6BF9C24D88
653589B431FB84E4DDB650C2F783594DE6123D3142FC5C99973AF211F2A2A05F
5A756073B85FEADA4823BC1467EF2FC0E98A2BB28E5933E2F6E50D3580C547C2
54FBBBDC95998DEF2EA825E3BB2AEEACC0F30841835121B7A7D7A973F2EF67F2
795E6DD8CF55B9823AB2B15ADC328CC3AC493DE8C2F022EBFA14A2976D8E3559
B5FEDADF4E23A07F6C0E1387DD54F5C8BD071C4E9A716737B6BA413F846A887B
D1B3B89EEF73565F3D0D2D1E40E4C2811D37C9029692DF8E94F6FE39474EE13A
EEE65EC0E099C29064CBC0503FA4C89D845F91A107C8414C1648F6EBF6C8B1AA
7B2F72302AC2C6E6E9E4FD1EDCFCB8C648B2BDC18FE07B44B7E886DAB96F8B4A
BC3C584457B1565FE02E26EFAADB605C5CFE109AC7A355E2283555E10CA9070F
BB98E2337281FDEE7EC20EA060A062235F8848946BD058A0C86C794697BB0674
C1DA26CAC3FCFFE73689E2CCCAD5DE725AF6C7DE282CAA214D69B6793520439F
2991BEE6E427D4E82FADAC6C3829AFE1196FFD8D1D0F6BFAFF4F9062FDD08665
FFBDE33DB3EBD99D8110257DD0B832CB4209074A589041E903F6D89E22D34EBD
2B3C90EF5D9AF0A0DBD5145F0FAD88EB09D1BD84D00D951D4CF9252A4443EECC
AF1E56E5FF02B9070C1A92470E3AD7F1CD944E91ADBD1EFF555FF3EC5664191F
1C11943BB76D70D356FE5D145C73670D1A8F71E5C4FEE96C8D4DF87FF05432B5
165C8DDEF25DC98CBEA51FA99398860E1C252C17EE576B7ED658ABFD497DD5D4
E49663A5CA73CA347E27BC49C7DBD28DDB3AC7A78020551168A47ED789C2AD9A
B8C8FB7EA2F8C7D4D9FAB4B8DD91CB69558534CCE31AE7E157D0B060877AAEE5
14CFF0AD50200A157151F7625E63296E325E2C36D5DC45C5129C2D342CA7541A
75675EB2F1A5BF25461BB38C84D0651F4644CF51DAA8608BC3B698A22BAE29AE
3FE5C543DB648AB544E8212B3B2F97B5844022274F5EA46CF4E9D49CADFF1DC7
AD838B09A2CB6136CAE6AEA52ABA90745D527188599641549149217DF6B36367
A67BA60DB09562E82863F6C001ABEACCA36DAC81C30C11F98A77F4D100499847
E1102CC075FA1210881D95D6ECDD37B0B820176667500E58782156ED77373459
6699116573EB74FC1C83B091EA1700BD5B069BB7DEEE2BB45E7757F7BC00D85F
75BF5F32B350E2CF46BA0E8D0120BDB3E742C15DE5A8340318F907D7DB5591A7
08C83C63D6D457915A2F41B21629926169F4AEFD81BA2A880F4799EAE1C0C57C
FBC28FFFC956640872B49219FA101B88EBFA3E47EA4515043C418049903E3F36
885AD45509FC3CF7A376A608FC51751104BB96EAF8314E2322C457EC6683D385
525F118C799C34B50840604E7C248CA5BAE81E8C76C29FA3779933221D8A612A
2DFF00179C41CDD34E7015DD7198AD6EBD2BC01221F7E35F8662AEF8B6203C54
59E883141A505B275EE1333E6958254B6D96C9E54D47A12F4D299F67168AF7E6
1F19056BD1DEB7FE32A4F4E62D202CE86DDB34598B8CAED5B6DA81A6C816C747
568DD57D21AC8F8B1CD8B2BE97272017FC8176FB0988076E76EC6E8B4CA921C1
AAFC0EC3E24C38BF6D64E9C259ACF279C3272383D7526CEE1C178B1C6988F963
BB0D7534D41E675EF1BA59AA153AEFA7AA88C44F92801FAC61A4EFA2911B55BD
7DF444571A774CFABE590CD7C75BBE8B58EDC3A2C53FE35CC6B22EDC09857DBE
3019A7C60107821040CB0824EE588C4973D9A0D51FAE6E5FC9F82277403C5DCE
FC2C316D499F60E7C6C04DE9C117345C4E51748D3A5C5167780590DD9E188017
79FBC3307C0BB8A5784518676D62FF024E380036EC605313952366F3C351EFC4
33256002C59C39260DF18DDAB0BA5A40946D550B7831A2EE2670B2FC5DF8A50E
6F0C48860C52FEEFAA70B5953345568F1DA030BEF5C410DCA1D11F770EBC2E64
1196A40F44A2BD2529610091D8A9F09161A41BAC6A15727CE914A1009B2517FA
41ACD230B1E0CE76E289C42EAB07B0F60452B537A69B9EB54A68FDED4456122D
483AE830BE0C173A0D256118B0867DA2ACFA39F9F6EF1D81C607DDC242707D6B
53ED198367C7D54AC750A007498FA31E27B0F86C6D3AA81060727EDD60506506
EDE0AF44190FD947C4B9D41C4A6A03DF807F98C68F883721E6E7E6383207B054
006A409855639AB72C071CA7DBDEC1EB29885A11D100A9D443EC282E485CBCC4
8CA8861B0BAC0B3574ECAB561760E687C3BF7B72600494F60D3490DC63F40B39
F2C388F118806FAEF0361E5A30DA786E599D9055059C0C2180824BAFBDE47BB4
6F54EDD7D7FBE6B569AD9CA1AC51B9CAA30D805089E1E96AA5F1C7D8579C4D83
3DDC80D805CFE4868E62C90C06533AE6C9A73E86D96C6E3919B677C2599BAA26
96DDF00B27D9E1AA2D9A1986D83626E0D8D0C105CB6FC5F610237BB3C6E242EC
52D4D247307FDF5269B44DAAA80E7B4DAD286C0B4469A6264647AC1D5FB8AEBC
6481A94C6ED5EAD255050003F03E16A6529971CBCB06166030EEF983EF332497
5116CEE2F516B4E2977709EDBD3DB7AE516C55E742F598B2D718232DDAFB2043
F674EA73C9F043EB73E6A0511F1E28762342120515EF4AB7CD1C0D977AD77AA3
B19AADA40A0586A02109B864FE34566E17B4A1A09F9BA10DED06056B51C42FB9
B6A9C4362429C2FBCD39A24463D3E0AB8FCC9F3FD3A30F4F015CDE9893D5D66C
804F030B04D85B48DC345FC8249F699D5364BBA3E4FC59D1F7378FB3FA254230
B9826E6322C4D6231EFE10719E907FECF478FEF51DB2687D13CA64138054D591
B1C7894E2A0D724F4369326D31DC3FED9625DDBBEEADB867DDB7FF0678F202EF
8252CED93785F720E4DE92960A101294ECE75FFB72E6043F33FD3778024A3CBA
9DC490FD77F0F3AA902CB872E59AA81C0B0A6BC9DD687A18BA25D37CED0CD4E4
F0736A7C0EDA3E239C23A9BC94D2BB2581629D0C9CEDA46E01A5443002CFE126
DF21A740D9791D4FD8CFD7A635837144E85014CE922B9801C1C1939D2FCDDA6D
CCDC6E7B4B622D86519A9A42FB03DD17290E01444DE0216C35C52F0C3950222F
A43EFF75AEA3FA058494B0BCEE5A20AF99C473D1241DDDA5FDA97A2888AF5FCF
BB88F51495E5B2EECC7F07816F1CDFD16F7B82AE7FA98BF363EDEB32B1544C9B
7F8041AAC5EF16801613FCB3273DC62300B0AB0281C7CD4FBCE2B5356A2ECEE5
118D86CD0DC85A9A53BE7E1C06835390A532F3F6B1F8FF071E03D1BB27C6A591
AAF6BEBA1976526BFC9D408297302124C1A7A32D8F5976F7CA9EB64367E3161A
5B20A7DEA7A985D1C34836249AEF8ADE9F56E298AC1D7181D637A568C615AC37
91D8E50942287BC59CCADFB67B23FD0CC520310B3EF0414CB723B3506AFA56D0
24D45A9A51D740B3A96E7AB386AB4E1154350EA81C5DF203CAB41F0E6C48E170
4F311F51451DD607ACE85F8B4F4C828D7FF50D459FB6C913BB52FEF3A6D478FB
BCE3D06A8573ED0BBCF641FDA888EB1B9654C0CD0E070A900A54D9B875E95CA8
166B84CCDE9FB92FEF1C849E210276F72734DB97A902EAF9C9DBE267C618E342
EE8B5C4DA157F0B3F4ADE8D0DC6B9E205C7C32C2724172E4E8FC4B58E6CD01B5
9C73A14DBFB287B7017F6AE0F5CB1F557AEC587491B60E2834911FBD138AB934
E1A0F7FF39F7484F43E3826342C8B8BCEA7F73C3EA43CB339557002020EE213D
928E9506749E3D0594975AAEA16E8539363D7B082B6099832A468D399CB9F5A6
C00424B2B60737C546E9A01AAA148880A67E7D95E3F2042F21E131BCBE2362E1
A7F253A0ECEFC2D2E76DDFF6D7128E80DEF90FC98F020B3D5878314012CAB867
D7CF7091C7C7FE7488B914100EE2366557171F2F72AAE38C57A5F21AE59F5A0A
27925837BEE41CFA13CA06EAD9BA13FE15B781EF82A7634A3161CDD6645A9C7D
B42FDD905FF9EE5FA98B2F04D69AEFA77F8263FF6E201C09E3AD2368AB66C442
4D96039808510971A53273FC0F14AF9F539D2289A0BEA1A7A8BEB2ADF0D9950A
195F64FD3209C6D47B46B7708F855E5A0E7F579C8A4DD8D901A5B598D721639E
2A82FC866AB91B73E08A7F3F8BC5E5831303447C940325E2C4030CBDE864025D
7176A1DA12C5F127C127C759CE5E87C067C64070AF05EE7FD59641A99D3529DD
3B8224D77F85F5C1827E436663142B2DCC67B793FBB9CEE4A986A5022FC4BD5A
7555D2CDBA53678F9F95A9E825F55134182E2BB253BCDA0B89BA1436D90E1600
6762D511C7DED1303B2561A4D010A395A1BFC7A2423D1E19F32DAC41FD436DAB
7247513CACC1CB61153358E44F4754A24610486634605FB2DC8090F2CD466968
0E1BB64E75832DB17C1EB3108C53E594D933EADE2663ECCD818CD77D944EFAE6
4D32EC3EB4B6A2A82F34478E7C279D48E8716EB8782989162F1D8B304C5DC072
DBA063140C93C17F59A53BA9D9525307D93B8C0D596E1098DF42FB714969B926
2BEA8D983F0690B37189265190F092F0B6A6E00700E33089DFCC137E376D48AB
C3F5E23ED8FC35BA33F568888E01A80060E2A242EE4CA0E11E8CC506066BDFE4
72196A930F7E51B5CCE9965967502E946FB13220933FB217C7B41D721180EA88
9E1BAB998D3EE2C0BAA7AB94A0807026C3BDF61F080FAECEC86FBE4964497DF2
8C3C460D540308A4B4878181D2ECB82FBED648C292D1AAFF87AF82D8258EF1D6
096C17624E97F8035582667799D7B99A1DB2A7E90EFB9D80F96B6A10D7D5EFF8
F0EA992128AE3DA845EA4E081D63D6327DD36287EC0226663360C910CBA51D8E
FE85A10F8E11F72D917F2828CE535DA2D0F052EDF14B2739FDF13EEBD103E038
CAC430E4350E4C3DC89D7892553730E36963118A600F83AF3F1902CB9FEDC0DC
D19B1B84B187F02003C375DA26BB94765520A3577B7F8EA6A023E98ED9BDD171
A3100D4D69D8A56566C0FA3EAC58EA3DFD72AC4C6B37FEF23A47B5A4038752E7
23288E6C564AD4EE44849F4021CA494EF6C2CE64BB429C542FF8A582AC2F46B4
9774F8273B5E98BD87426D2BDDD57353577CB01877424769AD11C53BED092CD4
C17A17A440688BD0D8601006F8ECC930DEECC72781066085C13AF52E333C74DC
A40F5946D9266E07CBF681164FEAF332C19BB64216044111D831971C4BA33E9F
D206A7B97E69443C97C3E77BE3301FB1AB1AE471287800936B812CBED8EC4F3C
2BFB4A657CCE94D311F51A49326E93EBE93FC663854E5A10F279A1233DC0BFD4
8266D36F25E6CCF2C1077BCE4BD8D3E30A63243E9F7DBE231C3DE32B82A38A9B
AC3DDDC4518306F16F8D4FFAE416ADDD1143EF22050DB2B4FDEC05248E9B0C24
15CBB4E191E98FB776EBEAEE6AD93C48739C83BEDAB386C9B13FC9996591ECBE
650E4B891AC1B4759C59A2CB5645DE059368B5AFEB6756F386A4C97262724BC9
A9A578B3BC9DB5CB1B44B1BD592D46D4E132E114B22AE36B9518755CA146091A
2013ECF11A1309FA7429F55662F9A92B658455FB81B32D8ACDD62EFE4D8F7FF4
29F96DFECFD64AD6E434D3141C0E9D4C0DCAA264EA71AA8654D8BD673F79CC1D
C21BA9618981CF81AAEE413D94ADB6DC8338098846BCB32ABDF6423EC6C03F4A
6F2F81BA6E4B03157AF42FDB1FEEFD1F89F1FFF83FDB4A95D61ABACA8EE7F72E
226760023EF06CF72D76D460EF34B60223FC6170F5DD66C147D2AE745FF5F02C
C49ED6DC4918B6879A73B9D49874E01F688EF5C892966ADC9AC306D01B6E24DB
B2CFFBEF254F35662A90683655A668931A02B1E2F133686110E9F1D25C93C6DF
9E1FD89F2F8CEEB870C409ED13E78B4C9B408E6AF76CF5FE7F2BAAADC3900F14
F17E59A758BD72AA88436F30764344CCF1B9E47D39540E4B6477A00B8EF6B739
5C7F900C2AC7BDEF8FB9D4574698BC8D4E3748AE0F9ECF7515A0F23D18B36684
FFE56A55E18E0B8D3FF671F9696E5F3C75320B4A2FB4C322929A703A21EE0CF0
830F466B96EA9E36FFFA2C3875C789CFA650EA7672135029F184C1F36006E4DD
60A05F12E3C18662C3C134AD613F7FA4217D853967AF5E3659D9628533AE56E6
57366AD50CD65B27B994508E7746CC486B7BAC60E65C59498FAEDDF69890FB20
39F35A356037E4850A34D673727FFDC1C64F6ADFB046742F77DE3355AFF970CD
CEE36EFAAD437595AEFEE8F2884ED068C52FDFDC9F3D23CA188DAC0F9ACBAE77
3FC5C3E21F2284E483D15008E84A4BEE48C9FC23BDD233CEAD1916D1BE05C9D9
5D8F947BD07D6434EABE1062B23A25485048583800F6809EBBEBFB2CBC79B26D
01D8ED2B2B70E658F0C51E9765AB5BBB896C32BF27C61D987552FAA97813EE20
376D20927C4E08DB4050A744332069F3CFF233A6A2082CA4564D9A9C6CD9922E
3DF197DBCA9EA7EF270FC45C5C09ACA1CE60F7B717B9B29A54F4F4B2D472C749
09CC47C1675DC6FB9ED4EB7B061E721B992A9FC9C9E460A62C80FC2A395F3289
1BEF93D1CBBF29B5725D3B98A08FB30B03D9DF0498BE1DF5DD26AA443B6B73E8
0D855F5EBFF6A5BCEC484FADE638FD0F998FBA3EBC109882B5C0EDDCE8A5C8BD
4703E2408AAAB31DEC78FDB04D36F53B8FA747C6D9FF8DB268F0F68085BFE4DC
F0C8E75BA8EA33617F1E8ACCB5AF576674263F62D3E6D262F980CD3240CACFB3
6B9EC749246B67B0552D00C4D3114908981F51AC4E66A3F8207D40FFCAF26153
8F608C93ADF044C39BD2A560B752BE11DC28EB556402AE344855464338F161DD
40C84177B896B9F89FEDCA6F80E6E4D69A0DFF99D86DC88F11FD5EF03B19D714
FB66472621113AD7BB240DE7DFBD1F17FD7E3D050F0907E3B61B9DD252FC8B15
B56D7AEE5FCC7B91873D02EBC561CDA7D32B64D1BAEE7735FFEFA9801CD37675
39145E1191730E2CF1B8B86DAF7D7032AA640ABA79FD821ADA931C653006BF67
E0D0918F99342104B4EE5CF8C1899BB3199B31F30DDC42416A75061A2EA63080
05A0551BB232692DFD2E9CC177779879FD043775224AAE82C2CCDA4AB39A27AE
30A0B1536D76C9184F8DAECFE71DD5403DDCAB8837EB696BAC4B915CC97D8C70
12AFCFCD94D505A649104701909913270E0060FE23E1DD251BD3914D1C0CAF2F
2A8C3E8248880242AE015219DD76234EDDC8234B8620A78AD003F279A4B22246
BEF211725FC262A6078F4DA335EFA4CA54911BC802A06B3A5634537F41812A14
3B802D3951B6D9026B5D97D33027B9269EF4C058B2A02018ED03A84DBA6AB088
4C5D19951980D632181E239065E32B17AEB326540207E4A52B7559826458654C
72FBCE10721C2B313BF29892309217E4A9F987221810546F0009F98531353C9A
8EBFE7DB9C9A1595610CCB3E4E5BF0A3151004FDD30F9F772DFF813067897570
BF71ED46C0118081A739201A18E0B2B745E35D0AD8CE552712BD7DAFDE8ACA84
4DD34A2EC1F5C5C775003995832B92C298DF2EC7706E9F77C8A04B529CC5FDBB
60559E94E015F6E5DD084E68096F0C06F419797593B7BCA85F16A54EE925C8AC
12751906439FE8F754462F21E9A2F3C11C5DE4ADCD17E1B1862A847EDE432389
9C637CC86D15F14C4B08FC9AAF420CC978511FAEB72E564662ED30792FF88AD5
64478CA576834AA7B045970F107D23215F00A7441C4EC2FCB8F10C3C4519C382
CAC59FE7782CE421AFEF19004F3B4CB98AB1431428A8BB64EF2EA43D7C1FA208
EF44EB316981B1CC92B5460BFDEBC41D0B3D5D96F624964E979454C2049AA428
64C4DB0D4C915CD937F8BE19EF71F4ABCAD445E4BF10AC02B70EC670E711E2A3
92499AF8F0FE17ADCB2B60F4FADBA3C5F91146D045F3C5D5CB3E7541626E069D
FDC2185B38F5EFF96C763F5107940EA937596710EBC86FB5A7043AEFBC3C263A
0DE6080975E31FD7764794CDBA34C6C6E12C84989D53EB4A5AC25A0858B10DC0
43CE7C27D207CFCBB8DF6A15526ACC343427EC77687424493E677838911ABD2A
1FB29A5124992CD43B1100ACFB21F9FBE769D481F38DD868CD2B4E085BC075BD
7242ACD1E3AC872AF2B85E7C1C3E750A52C070289822BB0302847709D2D07B7D
F4172993E0068A1B74F45732DA28DF09D959903700E456F6ECE4D25E13A1FE5E
1284DF66C11BFC614258E1A49C6B865B75EAA21C02F7007978FF715C0E367C9A
4B24C0499FB1611320491A48DED20371FA6E97407ACDDEFCF6B67A066C20F6F3
E491E8148E530978102F22C823310402B8CAFF2AC2FB7868A7FC61E6AD2E5C6C
A80EE9423004FE6A5544CF02B59DD72EBD81EB48FDB7CB960EAE6489CD6C8FB1
F1FE5D283A981437DA887A704305C8DE89D0F22DFF10997ABEB2FD88C69AC5E3
1A169DB201F51DE0923D0D96041E11FDA9750E1F4E6F60F29E1B5E8D34EB46F0
4E8ABC5F4D367639B4216AC03D843CF8D3D3E9172BDB50096C934921208A8E3B
B6AADD4823BC1467EF2FC0E98A2BB28E5933E2F6E50D3582A7BBEC222D351E9D
566EA091134A841CD914249FC82CED0ABE8F11F7F211B86E827E1D5139ED8A12
2CB8657B22AD2095A39C74183F41E46F2C56BCB59CE6AEF7E914F98AA7A495DC
4CE31D05873260E8287897F8C652860FDE73E565A2B8163CBA42B126909DEF15
19A72244F9630905BFE1D6D0CA544386D209958E82E39C166F966893371EF384
2F2C9362414E03C6C3EE7BFCD2D8C6A8AC5D1BFAF308D19B5533BBD35EAF8677
1B8AD9C1CCB207976405E10DF0E9641DBB70577AE828DD3CAE98FA9E1A74F24D
F7000A93E26823F80BD469AD6C685EB8A77528DB4D060EE9D06FFC2BAEC08237
395F6037F0180333B6D84F065C80B46356200BACD8C9385A18202E78D9E7ABAB
36FE9B094A8CB83BDA634521CD754B51844E7FDA50AE7A91942E143A26C67464
E6D2CE3F0D7E23C59D2CE7BD5AB538C9FB9AA802F3002A29CE268FE9D75A7FC5
9B07F2C2C78043FFB4B750C6C90B0583CADC055F9B7AC5B59A7C761909AAF09F
2E35801FD76EB4956C28D804A7451EFEFCE63F70B669768CC7AB6E79DA32FEC9
ED8B48DEEF08CF712C0C0CBCCB4E89492ADA71B9168C6AA9E425464B4DAB0687
C2E3254A4529520AA0E828A1025966B52B5D909650BD9404BED91639395DB88C
EF35A4B8506664563049701ACE4F6E8D02D1B86F6FB8429E2CEF1DE1D4A66055
EEC8313272070103BD0C1A0CC262235138ED54554434BDDCBBD35418E9E9DAC3
479D3309DE69137DFBB1EC222D351E9D566EA091134A841CD914249FC82CE266
0A42C4B8309E79BEA25A9E2BE4D1A042E188EB1985B9101CDB4D94A4EBC6ED84
8E3EDAF5E6DDE7690BE5A5B19505DCBB0ACE93422A64DEE8A6007303A2EF448D
61A9EB807C68E89469C90A45164A894F551A6EB2B7D3BDFBC169DB7C35DB9645
617AFE078E03BF9A1BCE4E42DD5CA2C34A27E772F3A28691A931DAAB33E447B0
3C1A6AAA445493171CA3A4439C3B8653C05986E9A6CBCE371823EEB6A027BEA7
EE7554248140D0CEB6EFA6CD05442A72D03BB92F68AF95AE5C97D39E01B5B135
1A739007E1C18E941B1E7F573D8C0964194509C21E85600DCB77A808BACCC9B5
C71D0890A63667CC5AE766518F978EC2CD99B1D60827C1A420DC079E3FDC2902
2FE4AC2173B2340C9B392729CD435B3D4CF6C5D452A51046621D36448EE7BB70
E64EEDEF0CA24784A1DB7F945DA3C9310C97862B35BBAFF561681D2E556718C1
29C9D2D48615CBD9965954C7E604231E3E61D172E87A663E50D8FE4951080656
7E605802D36527BB7C3758285B8940F89B5C7F32E3FA62939B8A1306AA744841
17CE5D847E287F626835542553384BC8111436058FC9A75D9A506B08D31C1040
F08FECE0F571B108C0E17D4C5C38FAD743973C6C919005E5DC41ED854A7CBFFE
2CC5EDA0E749B9ABD3AA463430C1886A60F27EF31C45E92F4717D8FBD4A0844A
8D953B37B4CE52CE308897EEBCBD2461D923E8CCAE9DCA6CA314D2EB4A3E9A65
42B4291DEFBDA8F376A832B0537384889278B440F45FC2E6073239EF68BB926C
483E82D52BB7BFA39E4CBD884D4994A7EC9407F5280FE5690CC6ECD22A50A8BB
96DA9DB538695C4420C98D80CB40CEF877F983125F1EE19256CC5053025616EE
EF28F24F95FC0D071B4BCA8BC0A91867D9BBE00B986837CF9A24DD31A69CE761
E937B694F26909D2A34BFF70378B1A9116D57E1C3D24763E96F2C385B9F9C34E
0382F02EB8C8BF9F9B07F5A3EC7103BDE77ADE41E32326604C59CA0161220EAC
34AEC76C7E9268E3BDDC3449B8D34C34ADB130C136630329D96C037786FDA53F
CACCB9944666479515F7BD85E127BBE03BEA8601B45356F811DEEB1B7B1AE95B
D71123F05440BE467933216C0A17193F829547FBDB7492E845DFE0E7484FB30B
628295F941E30A5D2EE095EF339DE9EF9EDAEA2173C69C564A8BDA78F61B61AC
9872869B0C466DA9C531E1F1D1F093F794EA44C40A9D57232B84DB96A9ED85AD
222A233EC61899AD22102AE68683CEF2C072940BA3ECFA1C2AD0E4174917B268
4EF827C53DDCD7C24466E5410DD289DF78C335D2BE90B5C581D0C9D1AAA10FEE
A3CC3D11A56D1CB957F27AE487F8CE7521A8B5C02B7FDABFE16EFDE6DC492539
AAEB170FA7E02D66332D75ADAF193E5E9B30FD11F04D70E268F1D4B2A05C4E85
513A94BE894217DECA2F18BF6FA92CFB8D535B34F399C2264540350C9C4105F8
67E2AA3F10C3D701C8F5EDABB511D068C9183BC01DDFF1781BA4CD3A2F9A3335
C035D9D6B9E25671F9AC599A40C37B2439C06FDAD67F6AC0D3CA9A8513B88BB7
B2E925DB3365C80D5604472A87CDE8DB8724D14D4DA223CDD16E6515EF069364
6F30BE9DF8E2797BB52CA05603870FE7C734D80223EB26E7411B2C07E5378B12
A51B43F968C73FEE454454EAF5A5089BFE019466013FF3A3E8684F0CBEEBCE9E
BC2D42D865998C53F28426E5E4E2EF70665FA751137683D6019C98B25156DDF8
176D929CF6922DA1704039DAFC5F9D2FA8155A2B4C4BFBEF1E1A860AC2A2F2D2
5C1BCBDD684557ABF24378427684B6F2D502D2B6E447A75162297FE292931996
E6DEFAD9D535B58A149AA49FE620EF6F1EA634AB912E238315325F66DDE461BC
6B773D779AD48FAFFCF4E6C0140240A0B3FF8730962B19E76A7776F4916AD50B
E4B379456632E7FD1A5785A2BD165C5A99C50D71D394D5219E90187A6854C768
B981453DFEC10FF237E38BC8E19B81502A19E0BD113AFA1962988ADF59B5F7BF
D55E90340B4244BADD57DA590444F17CA13C47550B39DF3DBC13329090DC5935
4FBA9D40BE460E335CD8916D3E3F77050830483CF6D2EC938116A8EFF2C98583
36F527238ECDAF7D11D36E957231FE01069F22434ECCF66634DE56E73349B1EF
64A98457F18843353171B8060DAE8A58AF29A28A5E7AFF8DF1AFC963466B43EE
F7035544EB76199525FA7D80B4A7D80DA4C26D098EA2EB484D0FF08E196EFC5F
2CE715B765EEB6D0E903974FD5D517924361791525C06CD49C701565131F8CDE
C637330A3A664A1F08E4F43E7E80E645F7AEA42051C953F77B5B5AD7E02CCA12
A44CAAE0DB157CC78FD38D8FCB62E7A0BEE16D7A70A534918AAF87B8E9E5F1E2
1189BFE6D74D11AB2D2D8E197A59BA2BC1A5B1352E3CC21FFC7FB7F79FE1377F
54F2966FE947DBF44B6AA85B6026FC81BDA50FC3126234044386036954E9BE82
3CD07F676002528C286AE8F24B4C1AC770D3C56ACF54503DD16C68B6A0437498
4B8A4A1543F4B5800C7B103AFB708F75B9E41F9876BB6949602736726BF6EFF8
9C97B212EBE8B46D051CFDD0CEBF4B0C057E5CB0FEDD062F3BAAD36FCE75148C
516079A8DD6A1D6984C65E12F25618267901DD3F7FB21D85A0AE65E064BDA1A4
0488A92FD63469B81CEB69D06DA03FAE476A30AC752C65104F6D0D9511B85D9A
1D3F408C905FD4677D025E4F9739E9BF7652DA6ED4A688023BF4933D7B415FCE
C04738328542CA6524D76D2A60F888B1514F7C668D8E781B16E78E2D25F15FA4
12E79C08908A0030F94AEB435C0C0C42BB0FFC8F6CCC6FB6A7D01150E5B38F34
10D8AD65DC3B10A7298B5BF8C28D676727C1AEB519DEAD1FCFCB2CADB6C79494
FE37CF7ACF06A8F09FE0D3E9AB995AE45BFCDEBC40A432490DAF599D01444626
F6909DD3C75B2ECCF65871DD2BC0DFA159FA1886E11D8BB8481F787C4FDE7B01
DF12573D557B0BB7B04F24ECAE62557254A75A1537C13453430045502EA83189
8FC7C1C11EAB6BC5A7960C3F5A3DEB394CBC14FF22E4B66381296DE5CE595DD7
B523B5F8BA30640DF2CABECB929477A47DC3D7A1CA12110A4FF10089462F4971
946F0EB1B32FEF200F432BD668D673C36558F522361FF49A2762762B7F603113
22828A18DC0326430F52A1BD1DEEB9FE9787F6DC6F574230ABECA71B76761C13
8C1F592053AB82938724EA2ABE62054CCD785AADEF1A4D05C8277565EC46A7B2
071A1613FE53FB628B732C2A522A1194972C9CB58AA3347BA31476AC2DAFCCD8
D4EC6AA3D5C26F1002F83E339311D85E77DDDBBB2DC9A70B59B7BCBF508A4CE5
CC29FA5287D90484579A7F040C8DD3F5F6234AF0F361C744FD0150ECD05D802A
78ABE869F7CE2B5140C575E5319BC2E9EC6ED94A55B427B524171AAFC0FAC5AC
1255CC2BEF4F604136C32351E839ABB8FE5B55E13D7D2B8C64F955C6F90995E1
89DA2B0414BD41835D60CBF7638B8474F8BF66E3FAE6291BF68F5A8A285400F2
EF06514397FE9BF4925E33ED4ACF048BA79E9034C983E600633FFB061E2032C2
3F5C730C5F1208C3BE0A7F991DC907B98A8BC07B41A4135078349FE056454692
B0FDA0A50F1E922C898924E9C38A45A9D15B8D6B3C01AB942D832FDAE3CB9067
777DCBFBB985F7EF144A4D3AF695A52246308A100EF7FEE6A373F4674AD17C39
E1F2030FC5F4F3B99EAAB4E559A35535FA46F719B503CECBC280017A82156C58
DAFC21BE735EFA0C5CE1C493B986A5FF4BDC980C5F25858274E3C472CE608D35
150BC54A47E63D318F4AD290A542AC975AE25E8735FCEEAB629E346B6D59A1C0
CCB99B440A74B68558ED3A8A63401035C1E3DB92FD2CF7E445F61F42609B1D1C
2CC906315BFECBC5E1E7978F51E1DCE2B50BF44CDA09EDDCB72FED5370A60A68
0FA3696DAC25EC3AC1D6AA016E792CA2A2944FBC269AF318028633476B2284D9
C3FDB218240688C219A12C40D67BB06DA228963921EBDE86F5F5A9B3DA7F4F25
13006A0623BC416AC6AFEB985A8D33A875B144F7EBD77946613A4A137989CE71
18A0732DB6FE03887D79B744970BA882F092DEF08FEC87C5450BB14C3C87B97A
B41BD7039225312CE32E1E1B6441594886F726C463F637EFA85C6124573C0714
CAD05AE5CFC43022F31E3F2587A02624EEC852E1705E427F256397CEE0DC1850
8E3DD6E40280BE3398AC977BA8ECF2898EBEF00B0457C7CC97CA89DF560C7E2F
B2BE9BDDC02D76120B2A3423136BCB04120F58430A7624282D773F3BB7353A6E
BFF04C43B62E93F7A88C2E34244B767EB7651F6C5E043D6F165D2A4E13735B54
1C8C078DDD4A7FBC582B09E2AD43437F20F84885BF0FFC56F99DB9ADC3483CEE
0BB6BBD590B66108DE8D345B77C6645C9BE4662FE66E68B9A0AF0773BDE507B1
43365CE11C47A60111AC09A51F38D949D58446D347025584C0BA5F59CA7313FF
258098437DAFA48D25C34B951F461C56D855E1665DB5FF5D2DD879C9B9D94013
BA5F7564B2D3A6CB01A9CAC67FF6E6159A9075F9D6E82A8AD5DBF7D86C88CFEE
9A3F01FF403643F1D606FEE10691D19ED84FE52EA96241446A6DF0234233EF08
A17ED68AEFBBC8914D0B48202557CC67D4887420FB22C933BF332614DE7283B4
93DFD8365AEBB52CEA1E76A2F70BDEEE241A60E3801A8975EEEC39C19336015A
5102E02CE13AA7F3B6DE06C01F6427BABE5FCD6A187310167EE11972303ACC58
7028E430B9E0A71FB246C2776D03800F3E410FE2E92DCC389C91A7DF74D9D007
B0747C2DA48FB83AB53C059CD7901DE4B143466D9CBC54A6AF4BA81F3C3D526F
750786FB1DF7EDB0F23BDB3A2FC9BF091ED23001AD65448AD66402ACA711FF1B
7AAEBD2FF6E6F61F1459672FCB72BB0EBE570A979DA00C412A606D33C0739E10
4D301C641D45DA8F0F3F695B404F351F8ED22F8D677284A8CEA4C4DBEF05911B
631E9E615B0B2F7266C9DACCFBC3FBEBBED15772D85A05F1E6E3269E81E4345A
29C9E631442659390942D06751B10790630744F1B883BCBDF66E2B1A0D84EE35
09B9D6C04B5CCFCC0CAFA1826BEF689BB5D2F1D19DD31FF78431C69812C3A1B6
5485EAE6D45A8CB386E22E527F54D7010E0FB6CF4EBCE2B69199189B0D4928DC
CAD48C79C13C76BDBF5154B9C545CD154DCB4F6B2E00FDF96394D903152E1460
C839637C2B96788B097C71B8019BA1F72F60BF7BE0FE58E0578C02E41EBB58D6
24F03F1993E430E1BD6BF639C92E568A3E8BDFCB6FB7F451A0582C04BA86A89E
EB7E45CACA63D3E2184FB01AF66897F9107A088C13A23F5D96703570864D047B
BB4FFE2A57C1A740EF359BCDE40E32138FD18DD1C2959DFDAF6785087C8AC18C
647FBC4AB1C18427FF0DA12ABDF5C63C5B1602823BBFC0C03B7A421A86F25FA0
457C822AE458BB6B15F383AE5CF81CF5256D76098CAEAB0975329109C6A52C4D
512B80752200BAA22040B7E558B560043129C527722B4E3302256A988111865B
3F4312A06C729BC52112E16D2D275255D108ACE19820BD700D50383378D9BD69
CE227A8A9005EFF8DC9BC0E3D843197C2A6E492E1FB579CA56F2F25FB1A30FD8
40A145F333FBB97D3B882108F8D874A725CFE03184ACCAB41B1DCD7F705EB20A
A608A72C05179EA9C616BA539707F00F4F7590BA120BA48461C0ECECF2BFA362
4AADFFC21A737454072624DF8003A95DA1371E2EE456CC692DF7B71EAAA28F00
AF341E92446E39E4D60D543C0750D7195150FF1945B9AA26C0FA6F8742178B15
884E33D4CE17497C25741B2701BF367204A88570D9204554A1C535CFF3E22954
0483008510AE06C1B7AC25E4D70FD8CCC6742012493EFC0FF73A68DC8F044FEA
2712A25350C3160D9A6EE5B72E2DC23BF254587C4D31631D3CDF0A64328B7E96
F770C26478BA5479022352BC3089BD4C491610E5B12A29212F7ADDD97F0B1224
6506CE7F602D130FDB13287B293633B0636A5416AB3194FFEF820F24AD0CCC20
C3CBFF6E28A81C4C3A2F8CEEA155645729C007E83F74B58F07A26884C7325834
6B50C4AEB748842A457D7D25D524AB32E027FFB7349F60E061C941D0FBEDCC43
893291BDCEA2DBB162B85E7721ED77F8EF1088EC186353B9C4B21D7A86F61DC5
FBDF3F5ABFBA967D5D2F30D1986CCB571F91D96EC8DFC16E97A325B53B60BC4B
6B73608413B83693E54C5DCFD5B4758E7B364613E163C8C4D713142F7C26EA9C
D045AED38D7CEE59E11896DBD20E211A3F92E81ADAB6DF03676D8FEE9DB8681E
14E2E922FEE3CD832DF83DE99C808E44C86E396197FC34B598C6F3C0A5855EE3
9E86E22450FDAF09C595213A0E59DA01E46A79ADAFD025A4555975A74AC48E34
1259FCA9B212D25A30EC568F58F458C14B82EE0000F449AC5B4E89EA1E4347EF
3D9A345544F1093851DA75A78DE71372F14CF6D4862ECD4D1AB1F9B3AC5004DC
6E3F987B586511DA430D0F87DE80D0FB723F9C6C443E9CA6CB8575FC9B556B86
A87BB271A23007BCBDB83FD124DC5730FF9F8B04A7F3D0A012DBAA34F49706B5
02EE5858E050F63C0EDE68D1A667AF01CDE87E59CB42872E6AA781F01AB139D1
380519B5616B704E2291D1B3819F8EA211223652AD7577C8EB4BCC88ACBC5A62
EA1F054D8C4299552BC97874F6459EFCC1760E9C6C78E60CC0152340DEBE0435
AD11A2AFFDE3C954FF3FF9CA1CB2D8C5A51C42C0B337A48CFB8377112784FC50
B3968B9BD64A6F16FB66D0DE4DE463181DCCA19E151AF39A5B566F1C6525327E
359ACE10B71B8C8A90A95B2CB64EAD2C826DC42D6A98BFA6DFF4959979260D38
F10BF6FB8F8459D0525B3C1FA74607E7F89B3637E12813239893E3070A0831E9
C8C6C9B8B4452F2342FBBA3D94FE7CD72CDED764916C08BBDE19F5FBB46C4B37
80084A42904102AC2C7C12AB2648C19DC971D3BF725FB229FAC5B041CE05C8D9
15373CC0516EE29A951A838FB895A00326CE1275EC6750D7E314CD83C8D75790
089092E2986F0E9BB75645D36277AC147B475AEB620FDC5D416C111F7FA1D283
DDD6E09827286FC7A85DEA23E69D2A8F101534291A25063E27A68373FA59FDD3
42B5BAEAE3AC2F9BA26322825D9D23AEA5225CEDA868577E28CAF9DD489BD660
531C2B563F3C459081CD50146460DE396ACD92A7D953831F1F8EAE49BE6FD22C
475DBFCB19C63BF056942F98475D10D2D5117293CBD56383EE54F36D5C18B435
1790E2743090744FB7012DEF0EB33F5EA35F311C2035E12EEE96251BD1ED376E
DA878A2FBBF6DE88D22257F53C9512A5377AEEDF9C5A522016FCD5FD3890B7ED
D357CF5F3BD6E52E21E198F2372270B7F3C95870A6AA91D3F37104E8E9AACC2F
E1657EB7496ED7126FC299E72778B3D1D1FD16155510EA7F6410E1511C924FA7
6B3CA894CCE993F0B4CC5F12ECA7099BAF45B4E6275982109D33523C17BDC292
F929BBF70BCA08B320F6464D55F1FBB4C2A9CF617E2C93BB741A381B0E2EBE58
DE8EBB975DB47778D4D02991B86F37CAEA073ABBBEF2819305ED36F3C3278C61
C140C5E01D100C1AAB08205BB7E6134DF67F5FA57F40C567F8B3A8D2C6AC693A
BFFF36A69CBA81196B6EAE3CC79B4650292C8F30EC988043EF6B051FBBA7EAE4
D5967EC3646F547C1BB5DC5250F1935031B9B500B8C97DE269A09D9FF7422FC9
1F25BE8508536574579DCE45F43ED178B421C67E51AE6A43294706F36CAFBA4C
D7BF56A6A10D1FFE5449980132F4C019C68C88B3F80C627605785D10E002BDF4
FA9BCEE2F3FC64EFC0D33033BC098943009782C0ABD65C934339864AB83CAFC3
25C0E322310985111A3499289335430482DBFD408624948382942C1C29445C48
DDA68C14FBF43E1B690DE731560FD01A86405F94F5CA15277E921FF0BBA77657
1EFC8F5289F2CAC7C0013F5097611DF6016684158051E5C570C0040477F7C982
8500E63C1B8315BF63C3BA9B849EDD5F620C7E451943A0A570B8E9B17D11924A
AF00565EBB6377CB299C6D92B09B7C51BFB9D6BA7697FB5FC09AABD6AC2C378C
FDEC8E1D33D7393C11FF3368ACF23CA1062857612C1573B8A97B90DF27A4A250
F917B6444A8FADA043B318CA4DE2B2B05827E72BF4C3E89E4418DB109D3925CA
B61BABFE8E6F085C4FA6A856A3B0FAE27B20E1DF3B86521D2F9CF54295649CB7
3D27AFEBD51084FC653EAE2AF9B9D2984564AF660830F40F5E27E6D5BE96DA47
CE4FB9A3B72AEB122482F87852C2F36FF62811BDB8D85F636109B1D6E7DDB94E
283A86CCA0DC1D4E723111415957B29FCE3502003B52696A30B439B5D4405495
6CC1AE15B2AEAF84C98869DEAA08348A466E0A90D0DC499EAB1FF0F28B707537
8E1B50D2784FFA92F868823CC55D48D746F18FF3A9001A41A35523A3FF2D992E
945CE6B0BD085A4ACFE178C67F720EBB4494347D3246F93FA9FE7CEEC830729B
E86ACF23EC8019E0142A40178A3CA6CD60DB575D0160DFE1E40D2C0A82DCA776
E6E6E94E001A66D729D16C4DCA326917146E628E6F222702BBA71B79B80D037E
F63E7E365442CFEA7AE782AEDACA045F663A3C778D20B652D4C20EC662F2758D
C4533BDF2264A0059FD24E9E54A0A5795AFCD91DE2B0693F2359DE0D080FADAC
3EBFDE75C48E0B0610A2D46E80E326B00E03B49176C3F25B40E61E2E28031BC2
72810337B259523D089BA20C0CECCAAA228A4C10A9482A71D666D5ACA3D35908
4A41D9B343E8FABA233B55B97DB5C98CCEE8C7AAE08967A67AF3BAE02C93A324
AAB4EBF6AD96F667A656AE31A1C5734F9EE456F13787BA015A80A2419E58204C
69A30DE378E04E7931DCBA419D6C8C134D7CEE52034B325D90DEAD4ACDED8773
311921D8B65131F6AE0B508B4325769F1694E88E6FAD1399856F508C19A710FC
AC1459CD16BCFB9B07A820AA992A3DD44E99F227014BBA25013E8B31A0A1263B
5EB4E24942FDE6721F1B68A3A5205C472C29CFDDA52C2D3958D6DF5D860AB55E
7F75E7FE589373C269EEBE9F1EBA0D351978BE1C813815645B906149A2EC10A5
3C3ACBA853E68C82D6F5E5EBE0C438B6C20AC9AB005E62EF81070CBE42E5E7D6
D7C1811BFCD559BA591BE6E6EA3582488A5DEDDB29089115E246AA8D87CEF509
48C47FC3D6C63E425090497B76761468B93C7E058B10A6A7C2E6C5ACB12FC469
9D3508048805AEBC71608E6711835C6DD64E3E71082319FC1836837AC93F3C36
2A692554E0B178D44A7592F7D33F8271E5F72144F37CBF72C73D781B13B66131
DD2332B294990EADB27572B8FA163D73C2A970C87512F08EE62BE85C8CA06B3A
D4AD02DDD72C9243460310D38D07B80520C8ACF206EF6A616656A1B7E520FD5E
BEEF83D696C0FA27B86904477A22C77C59814B292E99A4B6AD93AA4E6FD216C7
B7A8109CEC9DD1FCE87B674B174DC6CF1ED0FA43374E288DC93DA30045B273AD
27A27D510E69512B9CFE5C8F13D9C7D8EA2D9B97A5EAEF344786D22B666C42F3
21CCBFAD99897C5AD881F87032DF9DCA97F309F7C04D6AB79FAAA32D4D7637A2
50FDBE26759CA0A59A8965FA45BAA0AE968C9B8B088D16D8C395E2A7D1B8D15D
63901AC303929C4A1AA4E85138606780C8580ABDA2F36761219727F949FFCFA8
45B02DA6330AAC8899CD0DDD4828A6A15154BDC46B306EEE1D5E736560EC4BD0
9C3665B4C19B95EF3F239BA43C3FB37375B5105540212A35062CDB10F3DBAE8B
8D69794CD177CF33F637A698420B13575EB912E396F3E5E148C22DD25A11CF01
87FF048CCF86D9C2503E2BF9F7A9405E9B3B16D7D737DD02C7FC96AB70F708A6
A189CCEAB089F81045D3EAF42DD468FCCA844C15DC0B000052F03C6873861AE3
A10FFADE78481DA375953056F8B9F15A6BC161F75507833548215B7A4E53D49A
933844BE674E4BCD3F7415A01761AF688C996E2561756B8F923AE34B82BDA73E
FB4DF6E828F6F4B08C8598D7546B0636D53B41AECC1C3639A3927575CE53F10A
5D956B453B747A0FE82DFEF6F9A9A948D6C9717CA7CA31D4B4C7A9089C10B765
4CA91140D76AA69BED82B66813B7CB9B0FA2EF1DA585EDCE8ABE32112B12A23E
30B273AB8DDCC0064FF0FE0AE1E3269674208A379C22193172B15AEC3DC945AC
7A2AEF7C800878AEE4D2099241AC23A31D4F0208F45DA073212831F7B40EF392
BB6D96AC20FEE7868E6F3DD7084AA7013BDAEF69CD118338D9B1A47E7FE18D5C
5D184BD9BD0EC53DBACBC1CBB32F277CB924797E800D26B8E8FDB3FC08AC0747
40E799B979586E8B5E1EA9AACF8EAE94EB2EEBAED8ABD3D11C270139C05693C2
AD5B8DEACC4CD6DC8F45155E960437794EE03DB7823F2C72C23DDC954B1AF88B
CE768CC72F14589D293BF29C73EB3A286710B2F599C06F191AD74C9BEBB14406
92D6B4EC91B835EAA75DA20A19A4165AC73F32D06D77BD96FD2B3AD7FE426CED
CAFE92435B46DB1925F51B15EF31E5A480F082303A9BB4BFDAE74BF05F585220
B599426352380AE3F239FD63A69E670EA2CE168A2622F705E2D68AD288EC5606
7142BE156307B70534647A4C09D8C1952A973A4E1C562E457A0501247FE45718
8E24710AF42EE369D2C4D6145B48DD3F093DE0712C78DFF5C72C9AABF32F9B85
50F5A402946B51FB9A88D2F13943562863D618ADDC0E3EF92843428EF53B1BF5
71B9A6903A6480489CD2D20B73BEE0EF1FA9A5546BAD3AA6B368AA1AF3A022D2
DA69AD24F497D993A4B132A6E7DE5D7F399867841791BE7F9821DF82B89E2DD0
885CA956529EA49D7B913379DE0F1693306E17DF2D9686FDF1F0122A886D3AD6
3FF7DF0B0D5658FE6880E580359DB44661981E8B79C0C244CA2EA3C3490B8B45
29805E0E306E95001663F0EE156E4A0655C8CCBCCF583EFBE1FF3856A7098DCA
5673A6540D85A73E6E4AF8BA2FECEAE33BC66EE0EDDB59E03ABB9C6212453499
B6711E856744D00AED74D40DF86415277575DF9A4DD8C3C78DDA2A1F609AC28C
8D833E7289770A2425E8BB30C30462DEC741538D0CB0109231B6C353A497AAD7
FEE0B68C5C606D92A8425D00D1D5B53BF96FBC77302D095690DB1906123D9462
28540C8B4D62BD9533D942D3EEC6CAA1E7FB7A5B548F08444B91249731247967
B1DDD282727B846ADBEA3C7E9DB27198F77B5D57AB08960F286A5EE33B135B2F
0D67EEA794692092F2F6361D83E687DDA6509B5CE0BB0F0F1427BA4D250DD27D
054A193B85C7A0A0FFDF086FE03DCAE5F82932AA8306A3F89A4CAB0B2D4438DE
831AC7FF5423E33F362041BB9F6DE1C9E29F4AC5E6D8DA1531912AEF658E1506
4C0E798036398424760AE347EA550056DA8F3B91C80D45E3BB51AB0323C49025
F1B68D68E96228E2CB7833CE830DEC524749A6C5C0F20571C577ED03D63028C6
40D90BF7B5FB00F28D7848438AF0651F9C36506CDE20ACCBBDEB8551410ABFC1
BAD9D79E03CAE74D6724924AD4D33E54B888E4F1B7FB089DA26F38BC76823F5B
4A03556FFB0900929A29FC28C508A73216BA87955AD8BFAB031C08D7ADBAF79C
8E66A6F27EE257E88F34E6654EDDDFCD23563696AA89DD0D5AFCDB99843193FB
23721F1F6BCE1548A348C48D19182D79249080AD244A961CCBDD27570951E8FE
E0AD1803E4DCADAFFB025E5B49EF025A01D5FCFC1BB553B695799DB0819D9744
749379D39091EF428D54610F239EDC6CFE5762E476AE0D797C7A296A892E63AA
4939DCA21DD1886CB671DAA5E6F6A1C984E78F5147BFC26EB348CE8743825823
F0F6697DD7BAD6C8CF1D70B9CA4381DA2CCE50261937E9AEBAB72A57757B2CBF
C6F5D915C260859C43D16849F47C774E7D438DF32AB32B6FD323FB5A0D236560
437250D8DCFA66B001427BF5BE8D3F1C7C052B488381C7C826485F70DA5CBE51
E28CEF57925D0526B51B63AC5634E49027470D7D7F201AD2A486937EC5E0331D
522494F12409450AE9D3C2238E0D3B595913A41E866DA6742CA27CD5EE067470
D83E94791D463971F63823702ED2F3DE06F36BD4E65585DD5741BF8FA5615C67
DCE3740E009C01CAF6826E6964A1B3C9B2D82844A39AFF5F15E60E0F87037F53
4BD65EDDA5B466A2B687F0998FC59BE4B93F4381027D1B7C37610A75DEC88125
0886C5863A4D3B725B279C1005F90632E54F8CCA66519CBD3A85079387569270
933C5AFD9B42A8D53BC397F9936CBA7529A4BAD58FCCE72F001742B779171454
EE86CBBA0E84F9060C62A522BED32FE2A99DBEDB1CE18A790E3F3B598BB5CE81
ABA9B275AD7911DADFE51241774C03D4CE0C5A5B6C1A646E99D891FE018715CD
50F8336DCE40E2FCCC881ED889DB9050EFADDE6BB56A60D19EFED7D65A12CBC6
AD3E1BA62C2CD5C22EA42545D0BBC786CB84066ECBB8320B2ED6D5EBFB81A4D9
BD0B04AD3DAE54AE882100428ED37AF944D326EDDB80820D550FBC010FB41611
168794412B07E613C4798B2B1B89B878037033CD1A264FADBF483D640DE4C2DA
20573E1EF6BFF358067BC80EB5E02EE7ACBE322B1C91149F9EDBB8B37838FCE7
E728726CAB5519DBDEC177E0851EE7A3E70EF65172FF2CB08E341A39173D84CC
A6BE89FCC96B0433E125D8E035BFB0B7D228FBFA6F3D8BCB90BD07A2B5E4FB2F
F6FA3631E5F35CE4F7E73CCCB4E9ED3F3C193BCC0CAE74AE41550C6A44B3025D
A828E07C055EA5A9E1CAA5E94B0856CE64E50BDF59815F4195CB559737ED09A8
82AF74475DB676698CFD9496C05FE717AB4B2E3BD35634D69BF594B4985F9921
A8F5693E1716D3C9BADA8760AD44E31416EE4EA8C182C1D459885A2DABE523C1
7A201E21DB85365DD8B855E4BDA6A34B1C8E39F09AC718F307E80B29885BD8B9
71C8670EB6567FCBDE84C04787B612DD3A2FA850EC3326710040E77E8F1A009C
F2B0D3C979259A3E62BCA87C7A190A170D23BCFFCDC2B2F371B1559D8BEB245F
FAA7955250F08E8F5EA3F9273A02C5DFAF14A6E9660AA8253D564A36E9602718
89352BBFE0C76AEFB69565A71E1E19FE0DAAFF0A914EE2B9B09C60AF0FCEA3B6
08637039613D2FEEB54EDCF90F9D2A9FB598851624D00BA495EF48357FF71F05
D4BE545E5AFF340C1D727DE3661182DA4A939000AB0280689736BABFACACD94F
EE02EA7EDB7DD9DC1B2561263C0182ED03A0C89B0EF64BB3DA65F519DD492447
5D461CAB3F56F9570D76D01209F22FBA02F7AF4103E447214666819F9D4F45D9
4BFDFD6F1FBF6B83309D8610BC5D785081A8706D43C63AA2DEBBDE2A52B8AF85
1E9EAF9AD74A24C6AF12C6699F7B528D8735EC6EC9E847FE8D54CEE9CBC3B88A
F70F69CAE406773C32C7B1D38819E09EAC0C5F69465380E6E564EEB346C1E855
94DD380781D7FC8E7CF7837FEA844D2459EA5ACFAE1D6F204E9DD3A1A8471CEC
F1933DFDDF5CD68DF5A2AA0CEC361425C12B9C4F84AC252F855A772C5BC28884
0D9150D5B64F35E0B30FCDE41CE1882A74B0D383A20886363B41AFDB521A2392
EA4950D391C8C9C952DE410DFBC80209217D507F1D3DEAA7FF69F159F1DABDCC
5C8AB479A14206D8F9717B0595812379DF6892024FB1D41E6F6855766A260CE1
F30EF238183F8ADB04340CB71315D89A0A06D4C8C61AEF51A2BD2360E7D491B5
803E4E32D24FDE0B7C56732957AC35E56C629120B74AAA64D80F6B985BD39158
39EDE1DD265573B71E224ECF688D16FF6FC0FC4A48A072A628F6D983ABAAEF39
01A44E025EBD8640D2B9B1844E0451DDE1E542CA198D45C3FC20749FC2732040
F1A77F774B210C74DFB15B31C0EB8C910767C395ECB870DCD895387FB3CE53E5
04C6BFAC2BEF3663F1C2350D64791158CF292C65AEF9727A632EDD25058002BD
1B3323CC08532E1EE2F0737A0C904F8CF0D83791FF02F73A7DC137795EE61F1A
D71B5DD05506923B1FA81B2C7113B1118FD1A2847A259B900D8DED34B8A702E9
6ECDCF28BAE94FE49CACBA4B5EC39AD71A9DE6DFCA062CCDA135B14F4F03D058
760ED9C0A4A2055CD35D520B4061CF6546BC4C621C1482B0CBB521279767EF3F
91C2E13F63D2462F722614C6976BA27514365EB7A04E04AA2B7B5C052AEA06E7
7D7130C57D438574308F2390A1A57FD9956FD5435F2E67AD7FEF836D96D4BCCA
7B2B1B303874DADBD54A6F9360BDB66DA64022BE8483205A841CC9BBD9F4DB57
229EAAD46A53D70E0F5F68D3D47DBFB64CA8EC4A223A248133D20645D64436CB
4153ECC04ADAC1C6256B5AA8C337FDC9FFD12304BE858C14DD5FF83BA1B61F41
F17EA34DFDE4280C187AD724046BEB9360478E29A025ED6D9481F53CB3E52794
37695F4A115F669DD6039FE44F8E33DDE269A3E703626A0F204E36BEB8606041
ED5B9C21CE4207DEC332AC167E282459BDAF6F4C56D862C75AFCD3E18D81C142
E707271350A997F80E6611C6872750D647FA940D889A632583B24E79D8A96479
8A133B472EE3D09300D33FC69560EF4538DFE45A162CFEB20340335C4F7DAF9A
7AC45CAC7A1A8AEC2DFE552E96EAE73EF464C300093035453BE06593F726384B
595C5171CD76773EED70E38952BB7EF71C3B8098368115A63037EB1A743E3970
DC0FC0ADB175C4E5A961D08C9FB564966E7A753588E4F29BE4A077F51F835E2D
2F09BDBBC2503D085AD702F49358EA971ED670BAC445C59474C99A85C96F6740
EEF2F7D159C45B12286D7E963FF4123DC1F6674B508B50A1B889980CCEFA92BA
36E07FA72987C464D5A507A40F2C061D1DBBC2F811A3C19765A133D00285C4FD
7E49FA5D2FB569061CAE94BFE40AF9CE42C8A71E60B4CEB938C2EA41F8CC8BCF
A0BA10A6304C64E2F5DA31E31BEE3B6C8C57216666555848A4793332930D0E1B
FDCF3AD75B72164FFFDFB8F5CF44720C94DDF65CC2D919ABB015D3A91F42DC00
FD5F6F1725AEE489CC77B1A171AEBACBDF32F032ED0A1DE8EA76AF236BA5BA9C
3524497152E7954AA93A5D9764C98F6E83B0C9C9843DA6DD2481E1200038D281
FC1CAE2F2C0EFB48D54F40616650B24D26A1F1CC892ABAA08F3A3AB7EAF48DA2
0F1AD234E2989326CA80400840A563CE4648B26718FE184DB3337DEEBCB5C34C
0670E527BC95332D13B3980549FA02073BC3CB9AE4311BE9AB45B21FDAB27C8A
28207547267FFD6FD941F7B208519979ED23271B6AF2288430995CF657CEB146
89976428984A7DFACBD3FE28A8903CB42EB0ECB0A6D911805C7D225023470E66
EB4BD8E9C213A951CE15B441779C1C30A634A48F72899426CF9EC7C334FDFB7F
2EFD4382E4302DB3EDE6A964FBB99F8AF170A5FD7DC715D3ACFE8D730216129F
DA997193E779293A1C911AAB2345331FA5FFE140672C644575059AB7A1542E74
78345273B9A436CB1E055E6BE088F4D0EE70D05098F69FB731A68582CF3072A5
206F8D7682B3F4011A322FF61154A869F279D5465DEFCFC2547CF09A394C9556
EC0DFD5713E0C4C09EA25E683D08F55742DC36E4FF07A21FE3EB421D90BA2CDF
850F9E1AA0F2CA1F6008B4253FAC7827F4512774045B1BD1C9F763C685D6A126
A523D423D97FB908945C1AD3972F02118BA0C0106657B45CBD23E7C18E3A112F
342B108DA6FBFDB214B3134711BCD5308C46CFB36324822CF1C8E8441DC74EDE
D658C6AB79ADDD94D10267153A360C9C94BD89DFADB571089337302ECF35ED72
A0DAC208D1B93A07374374666771E209FC964D1BDC853394CF665F741994F2FD
6C49F144628D0B9E5A0BA887CFEFD1AD0E56EEB361FD009AFC5BB48EEE2D1EBC
35C101ED4E09B4A1ADF5EC54804C10B4B3E63FEF53318A2FB42F86BEA97E9B6B
1411199E278AABC24AE22C90AA37B1DA67BC83A83F169F626F385BEAE9EF8D73
5BFB4715B7E2454D0F598F0BF61BA40D48DB0DE53581FEE0B3C455B02507A476
FA3F368612142CB47D0708DB34F787EFE3BBFC9903EC1D29DC56E0AA882115D1
29C667050DD380BED42A6C3105BDFCCA4B179DD5DB3159BA0DDD6C54A36A49A7
442A2AE831FB5191D92E3EB033F8A97779333BCAF8208B167FD7ADC99D135956
7D09001B853B273DB145A8869A2DC0597E82C67732CA1D8C8F14F65C347E47EB
AE72B5E4EDAEF40876C1432B1DA965644F3D198B275B8FE0B4DDBA614FD05F7E
2D2E39A8E797DC888B65AA930CD009A5323B8C050C2A38EEA022F492ACD8D6C6
2549EC0EAFD78BF4868035D3D6878F70D749016797FB13FC7933D82DBB324C90
207B01A07539866A1DB7839361A534CB0117C0EA512125DC02C19B85C24B38B1
B40D53EBC04A5911464BA2D6CD239CAA9B28146CC516ACD809E27C77D5A71A87
D56E0B63BB3E403B2EF8C1E77099FE39D843522035B2875A44EF7DAFEEC6B06D
7DB4B3BE25BEB44BEF8E9034FB28FA68B378483D5893850A30F5B69F4CBBC083
AF5184356FA080E8576B8E68BCDAFA820FF8E097B8C6D67E95F20772653019CE
CE5A5D7D2174EAF37344789A441B786CFE74A43C2F76E629F307A64B286C0240
9330317B4FC830F541527A2FC4F09CAAA37CEDF28E1AF9F86BE6A1662353BD75
052CF81D17AA50A7E01776A21BB20E6E1582C6A33457ECE4124888ECB1BF3FEA
DB400B69870995E63BEFA4ED17FA6DA648A6E954873DCF00609DC41B13797502
A0C52D82740AD335199E8BD5599677AAEADB1F46A72EA7C69EE9D97AA1F8DA68
D5773B08193772BEE2854B571F9A985507EF4ABC1A7FF4DC2D4F31E5C64B7A39
7FDD41932F2A16CBB052084E3FE68959B9584224CD65C6361095861A84EA1B7A
991DDD346C3620D0AE2009A796D322E5D0E429760DB81F141B947C3F7834D125
F12A97B95F6A354624C31C68A7AE93007C1E13C0E786DC790316B120FAB737E6
9A5BF653BF5302B43C05DA8960309A86FF740C208AD152E12301D0830D02CF57
2199F74645C0D9B4DB9DA965633F5DCD842E51BB43C2E61C6F69E97493F3EBCD
5EBDBBE63A7C5D0B968EEF25619EAB1340719657BD58BC53D145E742BA060296
01D6A1D7AA6FEB987470CBEE6B16CBF7E8B1BC6A5185BC30646213E8AD59DCE3
FFC7FC963342019ACA0E3F1B2CA52C47B14AF203ABACBC7698CBC8184FDB1F6E
AD3ECF59AA38B2FEEB448B4CA0C8726ADC87E473C69F939EFCA683A83C9AD337
F4726906EB3D588F93D2154794B35EE1A5054F75C2C5001EB7DA809BE9F612EC
542785896CBA5400A1B90902EFE6F9C394BBC62092AD400D163DAD875384FC93
F7853899F4F83517B5AD2EF256D59D2EB451EFDFA251E9C4B888392C07F151CA
BAE5DC64256A93147E40F3C563185662EEE213EC8671211F6AD774E34214371C
4541B6645E198D4371916BC8467DA4473F6BCE8C5B4270F6A9C95573E2B64373
F20D95B565A7B1B22C9B5C4F117DE2AE7A5AD40E10979FD7473BEEEE5D9B8200
B32D7368EC958971F6DD8D5D97E9EFF6361C3AF329D0FE1C8162B1A98B109464
2B3916CD7E178F7AE88CB1B7FECAD508728D7E92EDD4D901A05B39F1A395E36E
27A8E210DE5DE94DEBD07C12F50A5E7B73647BFF70645EBA939C42B4A5A20E34
4807E04623E5A083B06F5AF0B8C5C78043FFB4B750C6C90B0583CADC055F9B7A
C5B15940EDBF0CEF41E2E467ED1518D82B08130625B70FFCDC3B6E715D9F1637
C31B755EA31D26BEAEB70F45890284510C3C28B45B30772EE9FFBB8D00718C34
3010FAF993329EAB5E50B1D94A1015DA1F95DD8D7A604E86FB666AF4561ED07C
DDF40E5EAB81057A0446E0A67EBAAF93738E22776519ABCB28AB7779FACA1B96
831C17BD998DBAEA74FD3B43A178C86F9A97423815F5FA2C09BA5F38BA0EC609
BE0B28114E5B0AA42BB0F38F2251827A46F448EF8E98A765FFDCAAD860262E92
9553735E5C10F088EBCEF3477CC777CF173AF253B71E5F491F698369322B6309
C722C1ED87EB5CC6194E2C471F8876C13CFE68DE87995EBD63B12AE869A75ED6
FE1768B8E8BE31F533D311387DB6EBBC8B5AF7C649CDD908D2A09232034154E6
61202C8112D51A2A9D64B50B488945EE7D39347EAA6B23D444C1626859CE690C
15F43EEED6AA77BD1AF52AB3DA276EB338D3A71BA2D3F48A9951FD6B28227893
84F7D9EE84CB49E0BE6E4DD3C751E3FD6AA8BB509B5085445A66B2682F31B6BE
9D16367A5FAB1D14D281D3E8D09DC525FAB5D6DE6056E972A7E5CE4B4EF73738
9F0D9F9F21F07758C11D1982C4827D2EB883A09F8C29F84FBAF1EF7C463AB041
0F50AE55AC32B2D89A82413B777C90CDD28490FBE5CBE77736EBC897B7824527
0B505F7E2C35ECC3E69080CB6EF2AE7C4C7EFC5EBC3972034CAC1AAF06A06E4D
4EA41B9136BEFBB6F17E8DE96E921502FB19F0C21F0A484339A8469F809E3B05
65A1B2E8CDE5B41853C84DAB136FBF8EE38FD37B9D56B3AA8B0073D60584A91F
EE4DC8515DDAC86140716397F92FDEF275A165FB9D0C92DE6091C2970690C002
203AD8FEB9231F5A2D0D2AB4D80076C31850131E90A5EED0AA43FB91DF06F288
DEAB608FF5FD19495A6BA21B47A2C431ED3D8507441A5CC43AAB126C9EA33BE5
18DCC3808A18F430172F7CBD0136293A03BFFFE36DEF11E70ACA874D9A0C4A7D
7F22498A17C7ECFFAF85013B5C541204F798245660D57634ED394082281F57AD
4FB0CA49893DC403EEE634AB252BBE87991F755B2DBA4BD765F7A4F966BDDBC0
507BCAB6C2253AE85AB38889B26761BA509C7F638C6CBC4D148A42BA0542A392
A103708A7365C39717F8AF6092225F3614550395F5A21DBE11C89C293AD6CB24
15433D38BCC9280ED033AD04799EB9F13AD2F4373BDA157D2389CE592B6D3634
A820A6E376B9FE4D21FE10DE7B57D14547E695CF892AF4BFEE6C45D4B46C6326
BE2E10D7644032344719A43C743589C85EFA62396D75D56EFA3BE867E371F711
F7EC2A4AB0DACF13EB16BC299CD0A4EBDAB71AC5D52844B5EA0504D4F1E15A78
6A24C555F071154B95C87EE95E7982F9CF0D4F945883986F615635BD97CBD15C
B2CB69604CBD30237CB7A10F4B6A3BA241AD8A569A91A34AA23EA906842C86B5
147254A6EB06C3E874B88A2E4A5A55DE1BCB7FA34A09E1574F0618500EFB399A
4E977B55F2EFE0A67D566EE4E202722ED52BF7181F5170D7379481E9BDD7864E
4362ECFC49D3A4F2B5820F17BC8ED830F981AB15094F74295A600EE8A429778B
0570F27485378EC827204956D533E0A0670D60CBD73D1E1B9865C9E2F7831616
C926D616D11FD3302153ECFA01B9832053CDC1C1455E18A3501C33AF14F3D1F6
3AD8688325E8CB562AB91D6BF932A853CFD684DBF7F19487E8C2B17A5710ECDC
175A2ADBF33C3567BCFB11F1D6D317D469F4458EAE9F03FA39177E5FFF4A9205
E20954906ACE661BF02E73A9AB0C9AF04166E26851EFF3167F964ADA843672EF
DCC766E720FEF720BA480BACD85853FE1103F1406731DC56E0B18562D1CE5359
DAB393E335067B526A7E21D02E62A1BF832F5C3237456F629EAD2AB3BF6CC71F
5155942E2ABBC4E3F9EF9D3768FA230A52D9F648ACE56F31BE53E20AD1F91B87
00B04CEAEA603AA57AD28119C894BD8C0C13AB1E9407E7686DE13CF4B9FB67E1
244AE7E84BE6501F47A666046D430ABEDB6C010030D085D5DF383AFB252CC94B
2903B8C9D2562CE6DD56A923B9324709EF05D35B0041C332096ED817D7E70394
960014969BD78FD57BCFE092F16FC59B70F010C266467405422CB32B2039907F
8C5F84E3E7781B5D0682C5F6D8FE4194FEB6C80B02CB53E12CE148077DAD05ED
F9EEB803F299EC1C19CFD831CF7C554C0136175D05F91135E17B8C982B8395B1
F8ED435BE07E5CFC49BD59BDCDE19E8B67B5DC829278B1120A3A5D37A68E599F
26E91883C36E7B448B7C4E0655C8FA2515B0381184459CA5CA076109F2381E24
C381185CDE9E231A78C2391B6EAC4848B2BF7ECB9AE457FD7712E31BF529DF94
6579D4E45E5F18BEEFD51455661E67BEC675BB4B5754D6AFFF077F275A4FE937
55C89B01CE2F1AF46EFDBDC92B4748B44DCD2A5D1CE3C5DCF36A5C431C4FEE37
2219E70EACCE75C2F574036E13FC1CA59DB02E731D1809F3CABF7D34EA5EEE14
B739F60D45D102706C99D92E1CA5018A023F8240F8F3732DDFE80B8F4A661797
56C6668E1370A75411D522DD7FB5C5BC6F1F91660E29A76141D7A01E6848B8D2
833F39346F91568267EFC7BEDCDB973FC16D63F967156F6E30B48E889F67FE2B
216FCDBBD497190747D198C1D3B450D864B6B348501D3073C42AC1EEB4ED2332
00869D371532480797E5C68FDECDE1B8E0749770D8BC2B4F3668E98C91B82496
E7C1F207CAA1D795932B200E91684979154D98437D6BBE4C8EEC74B6D9BB7D68
BCB73C53BA5C3565C2240486DA75E4C949DE048D1CEC2A7EEFCE0EEC76414116
026BC6FC01CC7AB541E85B3A3B281FB4E7A6CE89EA7C92E036C703AD5C787C37
A442482D69FC2B4A13B3B4891F94E4829E3B4E99FDD20199AB94709F66FE8B0B
ADA48B50E47EC0AED73FA6DCC883B8D35B12481CDDD1FE7A73DC4D181C591688
6C28EF3E0A50BE2D07493302A5492BEA01CB223FEA3B6CA4D0A79BF66041CB1A
F30804A3CC34C06C6FBA8AED58221574ACC50CB8C0D4B64A6799C8449E97E13C
A0AAAB196E8FB9CDDD77069ABEC6F1FF955C9F313F45F023FF722084ABEDE636
4C7DD392F96D4FE04507B377F4679E62D949550B9DB927DACC81D3B0B0BBDD08
1FEC65DDFF7E65F6B503D221BB268AD96199F40DC1AEB82405D7DD85E1D5A692
42FE9BDB027DB39827235D960C11850831E129F0DBDD7B5C9123F990B32A5BEC
D1203FDF173D57FB60E934D0C268E20F70981AB0EB210E41CD559B531AF1560A
833E3D3AA02FC9AC7BB46A541A5C469B6C235B675E0733D9987CD8D01DF781F2
3573C311357FD05497FF28FB3986C2438F48BAEC0683239CD120155E8ACAD801
3E6FE1B8C719BAE8A39D2888B16D90D8C2D071F1C8E049E6D7CC91A79B2DF02D
0CF510BD9213EFA7E4AA3A5336AD6AA29E557E698BF3A67C1615411F653F51EC
DEE18C9266A60A2F4C372A8527BB73F69E330DC0DB4B3C473D08995A650E84AC
F5153EDB2FB89233C089EF2F7E4D217C52529F44DD2CBABB2DB212B1EEE46A17
9BA34D45FDB832B5B1E68AF105D2AF9B220100D05743FA57D430766E9882F791
FCD66FC0C951FA3152391BC0AD42FD44EAA13793EAF317B097A921A6FC033E47
85D21C6764A9866308CDB8F1AB24F9A4D9CCE10E0E437445D15D4850A457C998
CC9E2C9F57EF88DF1B1B5EE0BD54C2C5ADEB4CE55662C9945E9154E6F18581C4
1D9387A291717FF1B1D241F1462BF86D2F57B71FC9385BED62F1BB2FFFE27661
884341560FA22EAD26AA2319C53FFF1253AA979958ADE408604369101BD1D74D
6B56FAB3F994EB96184476FA2EEF33E63DEA49521A37ED2F1C02E3E3374705BF
EF3B4554E19407D4A8DE9D2DBB767BD5C4957DDE1E4CC79DD3210CE12441E0C5
C389C7DB270824EDFA9F9FC384314FF4D2A39EB5BC3D98F65B6EA39487529D3F
F5AB44ACD1460DC0E4B3C66AB999CE97932C06A35317623DCC6809D2950C25A1
6C96C2375B3346D8F81C6E59B9E1496447311C442A247378E20053B7355B01FF
EEBA0548070D26D87E5C142A4673D8E430EA5F9220A58D23D5EF82DAFDF84A09
92A40826F0101BEDFF8B118B460C6A95F08EDAF32BA82EEB6B90061371565AC5
AA80311459CF5B0BC703B66A20112A7917653D7437C96C597B5920A5861DBBAE
294748B81850C0EB1A028DF89EA589899D5E443B6DBAFAB748127C6C28CD4389
FF7661AA26E52188FE54917209E106D8963760226A550EA44972828FBBB99D24
6C31CD57CC304A831BFD01FA930C2AE100AF9403C44E0238B52277DF3E439B42
9C607EFD76A84334700F673A14E358DE827A0093DBAE89A8BB521D6D77E51E0D
5025032F510ECB2F14ADF90D30AFA19F930DE5E32CBC4CDB0E1E53CBD64A5DF3
FCB4BE7CC9CE233CB2C9DB3A493350028443C6EA7852D0ABF753B549C4E243FD
0D8273AB62227634E09AFC5383B8967DF3626C7B0A7B10F10DA7A0FE115042A4
91D5E08D3D7329FEF03E08AEE447182FF57080006F51D02ACEF81FBD569B50EF
BAB8357D306DD9FA848D339E46C8480EFA17F90539E11E146C2C99531A22FE80
3AFB21714424D7BEEA62304D681FCD7CFE175B4D2D28D2A1B311D255B277110E
C87721667E0E22EC2D489E8E42F8523AFA992B10C644CED8F46808633BC0F64F
7AA4432468CF994F0E8D89A303CD6D3760EE44AF66AD6C6CB18E84AB3FCC5AEF
377A75FD07AC9445740F42808ECFBAEA6E170160817288A83DC376B0AA2AA265
20ADECACB56710DAD999062864610F0EB3A0269A1FD38BAB950F24FF6F23C37A
18840784C4176B2CB78BDB0E211FDEB080FFE4D989996488D77794AF8B3680F2
B826D2BA661B7A21DFAB4CC3170FFAF2E11E9DDB246570A17A37CD48A6CE6897
54C2598911BBE87B2EEF0953C24F6E4575A429DE78DDF5E3879446BF1BDD9838
48F1CCAC6FF74BA53E68C93FE632C010844BD8542AB4A9C67F42358A37D055EF
2A7543B64165ACC599CD34C6620B849ABC4AA17CC87A32F29E2B36E8CFC98D1F
7E2EAE729380BB368D6CACCC0DEF8706CE29812C9281D8B7A384A0917067329A
67E28F1F34E05BA3E55A69E5483DE3746177AF06E0667790C854DF11375F0B10
7F34B12F68DB6758AB4648173F6DA17E911F2C1ECAEBFDFF5B180D5B4262735A
8217F6EA9E14A66E3AB2BE61C69EDF9CA96E79D014DD1E741E746C4C8EBC0A4E
6A7D5B5FB41EEBF2B1CA5CA9034FD9BD98D00619546202B83842C937F319F7F8
70CF89200461EFE9B29183D7948851D37F92278A04B34E7B05E9B56338831793
7A17A7E354FB697DADCC36CE9B25CD64E26B573304EC27797B7B31B0B5B151EB
88225216273F4602AFA026619E1EBB71D616F069462B25339F4C066438A5264C
5476041F9E29940581939745F9D5EEEC621A48EBD3EFDC1F5EBC4A5920B5F3FD
13DD564D1932A35AAA2F2E73C6D0B80A2ED36B975BE50B8F7BE9080BD9E53AED
268EDCF785EA2713CDB59F72AD797D23D7D2E8BE2F390C7087ADB9C30E0FF3C6
8C35E3F5EB4803657F5358E06242D67F6B45D760DA8A1103F3916E226DDAF074
4E9BB90DC6A06E7D437DBAC3D61009EBD14EA57FA967A3C632369D0C595F158C
BE5A9DFF252CD379FFD5CAF4D70392D521281AE79B090DD14524393C14C883AA
20726108351E010ACE54CE5C53A1D254A738F749DFA7F5C260FC9C1593B7B70B
64E3E988336AE43549493C003B4B4B862AF0EC5172F5E2932718286001A9137D
B417D7AB8437E3D98869EA7239F51FFD8A579780EA98A8F76885DD0B87E3387F
07B51117CE99B6F0D8D0E83F0B6D768B23ABDF062837B12CFEC10FF237E38BC8
E159A1A6CFFB6535E43A7E4AABBB121A98C814646DB7F1A0B098A756AFB05DE5
6EFE3BEB005ECC8521B4D59B3814065C3B0A6E5E166860D80C81CE19F39811CC
1700DA34828390C1D5AEE57926F5D2C8AFAF0B4B9FAFC33AEE778FF7B4D2754E
DA034DF938EE9329CA10DA3FB3993EEEA385C3539B3491ECC21AB66929DF7A84
E3A2337D4D56E8F6344C2947A9EFC3C6872C6E7D583F9CB41C83C974089DD58B
981AAC77AC4DCA7592AD5D5E189C93328B1B4F9465BD0472E1C76993260A62D4
CA8C79E857C4FE58457052139C0C3FF32F411976B18A1AD8B87D7FCE99628D5D
15D1339193DA362B836FBCE6399F2AAE81BC44951CF3AAFC94CADD819CE26C42
FB79AEC3D3BAFAE064F6742774D15013EF8DB9C38B939602D8F7A33F162EAE82
A50D196B06756288DBE345B74720F80E0F8ADA806335BB67256F41B4412EA8D9
CED147142E5F84B61FA41C88AFAD036CBD92889A944DFD27E34C23728EF2B107
303ACD504030703DE507DD917F281F4D561249F262221582E11C4235AE1995A9
79FAAF6BFDBB2EF0448A26A9585016DD406A4BB3AEE2B63F48C343383F27D72F
207A04D921309018F47406DC8C216A0B870F619716E76B50D060965D752250BC
39043AB2590E58CAA05F7C71D5C343A366B92484E31C8D75A3628A180B5C10BB
E8F190956295FC39D0B1B9645A3C1FF0ED9E048EB0F8A75CC73B893AAAAC74DE
CFD1885083920A7FDAD0AEDAD472B45A3372A547074917163A63B081A7D3DD4E
3633B96C5A9EAA13B6FBCFD42796AA7D3C2D67BDE10E402D5277EEC98DA28BD6
DB64DE2B6C30C6EDD51C456B60054E55FAED59AC4E478263B400C2AC05514FBA
9C288EA69F81A242E2B8064E1DB19FF98031EAF4BE959DF555C1505CA5086994
022A88E36FC6F89AA9AB1F8C02D04A84F518BAC2FE175F5B31C409B239211683
67F1B8A08F3F5EA1AE1FE71E6F74D9F4BBEB55F4D4D4050A2A478B2FA0D72BB6
75A088401DF8B1A157EDA8849756596171CA497246F04F9F29FBCBF4A25DF080
3534B017AA8204D8EB6FF9610D3DEE0D34E8FB2855B36DF33A5B39AFA6FD6C64
8EC35EBE8FAAD95BD06B9BFBD2AD53FDCBD4EA74C84866D3651B43D00BA58467
219F4B4C27709F76DA1074EE5F73A6D5E3CD2BEA34BC185FB460AC156842D017
A96E86F969D738D0F1C4A3246CD38905EBB3D85E128C97045FCA441B4C3C1827
403B5311071790770D058B9FB2918398F367050EFDA24D535BA96B0073749DE9
978390F72AB65858B8E5FDEEB3AE1B4172305C779D6D21A00F312C84D8C146AF
B27C32BD7A86B553D72A5E2D5F36B0D3E84F6329E6015AC7A1FAA64E86BE021E
0CD9A657451E327DB74B9BF42A5B0F614609173D71588A0C196A2D54E2687831
A37CD5137EB4009BD31D2C693EF2D998CE9ECED283BC4D083CB70787BBBA4E81
8613AEA063A27A42BDD9E9A3D878ADBAC5A57D566DE5CA2013086566C1B17962
BB6C5A89F74AB44388BFCB235CBEF550D760815D685B3B98D025775886EF4B73
E20234EEA6E08F4C052CE18142774706C25482FECA4532993652238D36C3F1EB
25176407E3A8F3EB9EAFC566FF877B4785658BA515931900AEF430B7D2AE5EF8
CBB3DE18E8A603903D2C931546F6352905E997105061D8C8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrschein)
@start /Fa 27[664 111[432 531 548 3[731 4[399 664 598
1[598 1[598 21[1165 8[981 68[{ enclmec ReEncodeFont }12
1328.35 /LMRoman12-Italic rf /Fb 238[661 661 16[{
 enclmmathex ReEncodeFont }2 1106.96 /LMMathExtension10-Regular
rf /Fc 148[497 18[705 7[640 18[732 7[470 470 470 470
470 7[366 366 40[{ enclmec ReEncodeFont }11 885.568 /LMRoman8-Regular
rf /Fd 135[530 61[261 58[{ enclmmathit ReEncodeFont }2
885.568 /LMMathItalic8-Regular rf /Fe 203[993 52[{}1
1328.35 /wasy10 rf /Ff 198[1263 1263 2[1263 2[1263 1263
1263 48[{ enclmrm ReEncodeFont }6 2754.12 /LMRoman17-Regular
rf /Fg 168[1138 3[615 31[553 553 3[307 46[{ enclmec ReEncodeFont }5
1106.96 /LMRoman10-Regular rf /Fh 160[909 45[606 1[606
47[{ enclmec ReEncodeFont }3 1212.12 /LMRoman10-Regular
rf /Fi 254[337 1[{ enclmmathsy ReEncodeFont }1 1212.12
/LMMathSymbols10-Regular rf /Fj 194[943 3[606 606 2[606
4[606 4[943 43[{ enclmrm ReEncodeFont }6 1212.12 /LMRoman10-Regular
rf /Fk 143[610 52[337 59[{ enclmmathit ReEncodeFont }2
1212.12 /LMMathItalic10-Regular rf /Fl 214[1328 7[1328
7[1033 3[1033 1033 18[369 1033{ enclmmathsy ReEncodeFont }7
1328.35 /LMMathSymbols10-Regular rf /Fm 162[361 1[361
29[1012 1[361 1[650 650 650 650 650 650 650 650 650 650
4[1012 1[506 506 2[1084 37[{ enclmrm ReEncodeFont }18
1328.35 /LMRoman12-Regular rf /Fn 198[470 470 470 470
470 470 470 470 470 470 48[{ enclmrm ReEncodeFont }10
885.568 /LMRoman8-Regular rf /Fo 135[739 7[653 4[676
18[1079 7[838 10[963 6[1012 1[1012 361 59[{ enclmmathit ReEncodeFont }9
1328.35 /LMMathItalic12-Regular rf /Fp 139[975 990 975
2[1263 2[688 1335 1[688 1407 1[759 1119 1407 2[1263 12[1839
1407 5[2341 5[2000 3[1839 1802 1909 7[1263 1263 2[1263
2[1263 1[1263 1[688 1[688 44[{ enclmec ReEncodeFont }26
2754.12 /LMRoman17-Regular rf /Fq 650 2[723 5[650 17[650
7[975 5[1012 91[578 686 686 939 686 723 506 513 506 686
723 650 723 1084 361 686 397 361 723 650 397 578 723
578 723 650 3[361 1[361 795 1[975 1336 975 975 939 723
957 1012 885 1012 975 1192 813 1011 668 469 975 1021
849 885 993 939 921 975 1[614 3[361 361 650 650 650 650
650 650 650 650 650 650 650 361 434 361 2[506 506 2[1084
3[361 3[723 723 759 8[613 1[613 16[{ enclmec ReEncodeFont }85
1328.35 /LMRoman12-Regular rf /Fr 3[1196 23[1046 105[956
1[1136 1[1136 1196 837 849 879 1[1196 1076 1196 1793
598 1136 1[598 1196 1076 658 982 1196 956 1196 1046 6[1315
2[2223 1625 1[1497 1196 1605 2[1616 1682 2041 1293 1685
1[801 1682 1691 1353 1412 1649 1554 1530 1625 7[1076
1076 1076 1076 1076 1076 1076 1076 1076 1076 1076 598
717 45[{ enclmec ReEncodeFont }57 1912.83 /LMRoman12-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fr(WS)717
b(2.3)g(-)g(1)h(Kugelsc)-60 b(hreib)60 b(er)715 b(-)i(ZO)h(-)f(BIFIE)p
0 TeXcolorgray -741 4800 a Fq(1.)p 0 TeXcolorgray 651
w(Ein)384 b(Kugelsc)-36 b(hreib)36 b(er)383 b(b)36 b(esteh)-36
b(t)383 b(aus)h(zw)-36 b(ei)384 b(Bauteilen,)g(der)f(Mine)h(\(M\))f
(und)g(dem)g(Geh\344use)921 6792 y(mit)305 b(dem)g(Mec)-36
b(hanism)g(us)304 b(\(G\).)h(Bei)g(der)g(Qualit\344tsk)-36
b(on)g(trolle)306 b(w)-36 b(erden)304 b(die)h(Kugelsc)-36
b(hreib)36 b(er)921 8784 y(einzeln)508 b(en)-36 b(tnommen)506
b(und)g(auf)i(ihre)g(F)-108 b(unktionst\374c)-36 b(h)g(tigk)g(eit)507
b(hin)g(getestet.)h(Ein)f(Kugel-)921 10776 y(sc)-36 b(hreib)36
b(er)433 b(gilt)h(als)g(defekt,)h(w)-36 b(enn)433 b(mindestens)f(ein)i
(Bauteil)g(fehlerhaft)g(ist.)921 15314 y(Im)611 b(nac)-36
b(hstehenden)609 b(Baumdiagramm)j(sind)e(alle)i(m\366glic)-36
b(hen)612 b(F)-27 b(\344lle)611 b(f\374r)g(defekte)g(und)921
17305 y(nic)-36 b(h)g(t)433 b(defekte)h(Kugelsc)-36 b(hreib)36
b(er)433 b(aufgelistet.)p 0 TeXcolorgray 0 TeXcolorgray
921 41486 a
 currentpoint currentpoint translate 0.58363 0.58363 scale neg exch
neg exch translate
 921 41486 a 921 41486 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 765.77196 a add def
/d 0.0 a add neg def /h 310.89581 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921 41486 a 53112
58784 a
tx@Dict begin  { -116.65642 426.79115 } PutCoor PutBegin  end
 53112 58784 a 53489 61042 a Fp(Start)p 53112
58828 6349 45 v 53112 61396 45 2591 v 59417 61396 V 53112
61418 6349 45 v 53112 58784 a
tx@Dict begin  PutEnd  end
 53112 58784 a 53112 58784
a
tx@Dict begin  { -330.05199 327.20654 } PutCoor PutBegin  end
 53112 58784 a 53488 61042 a Fp(M)832 b(defekt)p 53112
58828 10641 45 v 53112 61396 45 2591 v 63708 61396 V
53112 61418 10641 45 v 53112 58784 a
tx@Dict begin  PutEnd  end
 53112 58784 a 53112
58784 a
tx@Dict begin  { 62.59595 327.20654 } PutCoor PutBegin  end
 53112 58784 a 53488 61042 a Fp(M)g(ist)f(o.k.)p
53112 58828 11383 45 v 53112 61396 45 2591 v 64450 61396
V 53112 61418 11383 45 v 53112 58784 a
tx@Dict begin  PutEnd  end
 53112 58784 a
53112 58784 a
tx@Dict begin  { -441.01752 216.24101 } PutCoor PutBegin  end
 53112 58784 a 53488 61042 a Fp(G)h(defekt)p
53112 58828 10300 45 v 53112 61396 45 2591 v 63368 61396
V 53112 61418 10300 45 v 53112 58784 a
tx@Dict begin  PutEnd  end
 53112 58784 a
53112 58784 a
tx@Dict begin  { -221.93147 216.24101 } PutCoor PutBegin  end
 53112 58784 a 53488 61042 a Fp(G)g(ist)f(o.k.)p
53112 58828 11042 45 v 53112 61396 45 2591 v 64110 61396
V 53112 61418 11042 45 v 53112 58784 a
tx@Dict begin  PutEnd  end
 53112 58784 a
53112 58784 a
tx@Dict begin  { -36.98865 216.24101 } PutCoor PutBegin  end
 53112 58784 a 53488 61042 a Fp(G)h(defekt)p
53112 58828 10300 45 v 53112 61396 45 2591 v 63368 61396
V 53112 61418 10300 45 v 53112 58784 a
tx@Dict begin  PutEnd  end
 53112 58784 a
53112 58784 a
tx@Dict begin  { 168.1467 216.24101 } PutCoor PutBegin  end
 53112 58784 a 53488 61042 a Fp(G)g(ist)f(o.k.)p
53112 58828 11042 45 v 53112 61396 45 2591 v 64110 61396
V 53112 61418 11042 45 v 53112 58784 a
tx@Dict begin  PutEnd  end
 53112 58784 a
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -285.80167
341.43292 -128.73329 399.62437   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 113.81097
341.43292 -45.91269 399.62437   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -398.33841
227.62195 -342.79268 293.8687   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -170.71646
227.62195 -225.56969 295.14294   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 227.62195
53.47218 292.59445   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 227.62195
227.62195 173.24323 292.59445   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
53112 58784 a
tx@Dict begin  { -233.21472 400.89818 } PutCoor PutBegin  end
 53112 58784 a 1734 x Fp(0,05)53112 58784
y
tx@Dict begin  PutEnd  end
 53112 58784 a 53112 58784 a
tx@Dict begin  { 19.0698 399.62437 } PutCoor PutBegin  end
 53112 58784 a 1734 x Fp(0,95)53112
58784 y
tx@Dict begin  PutEnd  end
 53112 58784 a 53112 58784 a
tx@Dict begin  { -412.87129 283.67519 } PutCoor PutBegin  end
 53112 58784 a 1734
x Fp(0,08)53112 58784 y
tx@Dict begin  PutEnd  end
 53112 58784 a 53112 58784 a
tx@Dict begin  { -191.1673 279.85289 } PutCoor PutBegin  end
 53112
58784 a 1734 x Fp(0,92)53112 58784 y
tx@Dict begin  PutEnd  end
 53112 58784 a 53112
58784 a
tx@Dict begin  { -12.78453 283.67519 } PutCoor PutBegin  end
 53112 58784 a 1734 x Fp(0,08)53112 58784 y
tx@Dict begin  PutEnd  end
 53112
58784 a 53112 58784 a
tx@Dict begin  { 206.37183 278.57864 } PutCoor PutBegin  end
 53112 58784 a 1734 x Fp(0,92)53112
58784 y
tx@Dict begin  PutEnd  end
 53112 58784 a 85689 41486 a
currentpoint initclip moveto
 85689 41486 a 921
41486 a
 currentpoint currentpoint translate 1 0.58363 div 1 0.58363 div scale
neg exch neg exch translate
 921 41486 a 3985 x Fq(Ordnen)463 b(den)i(Ereignissen)g
Fo(E)15957 45670 y Fn(1)16483 45471 y Fq(,)g Fo(E)18272
45670 y Fn(2)18798 45471 y Fq(,)g Fo(E)20587 45670 y
Fn(3)21578 45471 y Fq(bzw.)h Fo(E)25608 45670 y Fn(4)26599
45471 y Fq(die)f(en)-36 b(tsprec)g(hende)463 b(W)-108
b(ahrsc)-36 b(heinlic)g(h-)921 47463 y(k)g(eit)434 b
Fo(p)4103 47662 y Fn(1)4629 47463 y Fq(,)f Fo(p)6076
47662 y Fn(2)6602 47463 y Fq(,)h Fo(p)8050 47662 y Fn(3)8576
47463 y Fq(,)f Fo(p)10023 47662 y Fn(4)10549 47463 y
Fq(,)h Fo(p)11997 47662 y Fn(5)12956 47463 y Fq(o)36
b(der)434 b Fo(p)16536 47662 y Fn(6)17495 47463 y Fq(zu.)p
0 TeXcolorgray 0 TeXcolorgray 2683 51162 16109 45 v 18792
51162 4523 45 v 2683 58209 45 7047 v 3391 53022 a Fo(E)4354
53221 y Fn(1)4880 53022 y Fq(:)g(Eine)f(Mine)h(ist)f(defekt)3391
55014 y(und)632 b(das)g(Geh\344use)g(ist)h(in)3391 57006
y(Ordn)-36 b(ung.)p 18747 58209 V 0.9 TeXcolorgray 18792
58209 4478 7047 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 20588
55143 a(E)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
23269 58209 45 7047 v 2683 58253 16109 45 v 18792 58253
4523 45 v 2683 63050 45 4797 v 3391 60113 a Fo(E)4354
60312 y Fn(2)4880 60113 y Fq(:)368 b(Ein)g(Kugelsc)-36
b(hreib)36 b(er)368 b(ist)3391 62105 y(defekt.)p 18747
63050 V 0.9 TeXcolorgray 18792 63050 4478 4797 v 0 TeXcolorgray
1 0 0 TeXcolorrgb 20534 61109 a(D)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 23269 63050 45 4797
v 2683 63094 16109 45 v 18792 63094 4523 45 v 2683 67891
45 4797 v 3391 64954 a Fo(E)4354 65153 y Fn(3)4880 64954
y Fq(:)434 b(H\366)36 b(c)-36 b(hstens)433 b(ein)g(T)-108
b(eil)435 b(ist)3391 66946 y(defekt.)p 18747 67891 V
0.9 TeXcolorgray 18792 67891 4478 4797 v 0 TeXcolorgray
1 0 0 TeXcolorrgb 20606 65950 a(F)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 23269 67891 45 4797
v 2683 67935 16109 45 v 18792 67935 4523 45 v 2683 72732
45 4797 v 3391 69795 a Fo(E)4354 69994 y Fn(4)4880 69795
y Fq(:)368 b(Ein)g(Kugelsc)-36 b(hreib)36 b(er)368 b(ist)3391
71787 y(nic)-36 b(h)g(t)433 b(defekt.)p 18747 72732 V
0.9 TeXcolorgray 18792 72732 4478 4797 v 0 TeXcolorgray
1 0 0 TeXcolorrgb 20519 70791 a(A)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 23269 72732 45 4797
v 2683 72776 16109 45 v 18792 72776 4523 45 v 0 TeXcolorgray
0 TeXcolorgray 25005 51162 4567 45 v 29571 51162 15178
45 v 25005 54421 45 3260 v 0.92 TeXcolorgray 25049 54421
4478 3260 v 0 TeXcolorgray 26777 53343 a(A)p 29527 54421
45 3260 v 30236 53175 a Fo(p)30889 53374 y Fn(1)31783
53175 y Fm(=)369 b(0)p Fo(;)p Fm(95)296 b Fl(\001)g Fm(0)p
Fo(;)p Fm(92)p 44705 54421 V 25005 54465 4567 45 v 29571
54465 15178 45 v 25005 57725 45 3260 v 0.92 TeXcolorgray
25049 57725 4478 3260 v 0 TeXcolorgray 26828 56646 a
Fq(B)p 29527 57725 45 3260 v 30236 56453 a Fk(p)30846
56635 y Fn(2)31708 56453 y Fj(=)336 b(0)p Fk(;)p Fj(05)136
b Fi(\001)g Fj(0)p Fk(;)p Fj(08)g(+)g(0)p Fk(;)p Fj(95)g
Fi(\001)g Fj(0)p Fk(;)p Fj(08)p 44705 57725 V 25005 57769
4567 45 v 29571 57769 15178 45 v 25005 61028 45 3260
v 0.92 TeXcolorgray 25049 61028 4478 3260 v 0 TeXcolorgray
26819 59950 a Fq(C)p 29527 61028 45 3260 v 30236 59782
a Fo(p)30889 59981 y Fn(3)31783 59782 y Fm(=)369 b(0)p
Fo(;)p Fm(05)296 b(+)f(0)p Fo(;)p Fm(92)p 44705 61028
V 25005 61072 4567 45 v 29571 61072 15178 45 v 25005
64332 45 3260 v 0.92 TeXcolorgray 25049 64332 4478 3260
v 0 TeXcolorgray 26792 63253 a Fq(D)p 29527 64332 45
3260 v 30236 63085 a Fo(p)30889 63284 y Fn(4)31783 63085
y Fm(=)369 b(0)p Fo(;)p Fm(05)296 b(+)f(0)p Fo(;)p Fm(95)i
Fl(\001)e Fm(0)p Fo(;)p Fm(08)p 44705 64332 V 25005 64376
4567 45 v 29571 64376 15178 45 v 25005 67635 45 3260
v 0.92 TeXcolorgray 25049 67635 4478 3260 v 0 TeXcolorgray
26846 66557 a Fq(E)p 29527 67635 45 3260 v 30236 66389
a Fo(p)30889 66588 y Fn(5)31783 66389 y Fm(=)369 b(0)p
Fo(;)p Fm(05)296 b Fl(\001)g Fm(0)p Fo(;)p Fm(92)p 44705
67635 V 25005 67679 4567 45 v 29571 67679 15178 45 v
25005 70939 45 3260 v 0.92 TeXcolorgray 25049 70939 4478
3260 v 0 TeXcolorgray 26864 69860 a Fq(F)p 29527 70939
45 3260 v 30236 69692 a Fo(p)30889 69891 y Fn(6)31783
69692 y Fm(=)369 b(1)295 b Fl(\000)h Fm(0)p Fo(;)p Fm(05)g
Fl(\001)f Fm(0)p Fo(;)p Fm(08)p 44705 70939 V 25005 70983
4567 45 v 29571 70983 15178 45 v 47992 4800 a Fh(___/1)p
1 0 0 TeXcolorrgb 47905 6792 a Fg(WS)369 b(2.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 77350
54804 45 v 0 TeXcolorgray 24746 81281 a Fq(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fr(WS)696 b(2.3)h(-)g(2)g(W)-179
b(ahrsc)-60 b(heinlic)g(hk)g(eit)695 b(eines)h(Defekts)g(-)h(O)-60
b(A)697 b(-)h(BIFIE)p 0 TeXcolorgray -741 4800 a Fq(2.)p
0 TeXcolorgray 651 w(Eine)447 b(Masc)-36 b(hine)446 b(b)36
b(esteh)-36 b(t)446 b(aus)g(den)g(drei)h(Bauteilen)f(A,)h(B)g(und)f(C.)
h(Diese)g(hab)36 b(en)446 b(die)h(im)921 6792 y(nac)-36
b(hstehenden)490 b(Mo)36 b(dell)493 b(eingetragenen,)g(v)-36
b(oneinander)492 b(unabh\344ngigen)g(Defekth\344u\034g-)921
8784 y(k)-36 b(eiten.)434 b(Eine)g(Masc)-36 b(hine)433
b(ist)h(defekt,)g(w)-36 b(enn)433 b(mindestens)g(ein)g(Bauteil)h
(defekt)g(ist.)921 42042 y
 currentpoint currentpoint translate 0.39687 0.39687 scale neg exch
neg exch translate
 921 42042 a 921 42042 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 1023.77255 a add def
/d 0.0 a add neg def /h 690.70839 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921
42042 a 67493 32329 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -284.52744 398.33841 -56.90549 569.05487
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -398.33841 284.52744 -284.52744 398.33841
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -455.2439 170.71646 -398.33841 284.52744
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 284.52744 170.71646 398.33841
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 170.71646 56.90549 284.52744  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 227.62195 170.71646 284.52744 284.52744
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -227.62195 170.71646 -170.71646 284.52744
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 398.33841 -56.90549 569.05487
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  11.0  11.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 284.52744 284.52744 170.71646 398.33841
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  11.0  11.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 341.43292 170.71646 284.52744 284.52744
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  11.0  11.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 170.71646 56.90549 284.52744
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  11.0  11.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -113.81097 170.71646 -170.71646 284.52744
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  11.0  11.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -341.43292 170.71646 -398.33841 284.52744
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  11.0  11.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -170.71646 284.52744 -284.52744 398.33841
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  11.0  11.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -512.14938 569.05487 -569.05487 569.05487
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -512.14938 398.33841 -569.05487 398.33841
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -512.14938 284.52744 -569.05487 284.52744
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -512.14938 170.71646 -569.05487 170.71646
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 67493 32329 a
tx@Dict begin  { -547.3224 491.12024 } PutCoor PutBegin  end
 67493 32329 a
1882 x Fp(A)67493 32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { -549.78014 348.55391 } PutCoor PutBegin  end

67493 32329 a 1882 x Fp(B)67493 32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a
67493 32329 a
tx@Dict begin  { -549.78014 235.48448 } PutCoor PutBegin  end
 67493 32329 a 1882 x Fp(C)67493 32329 y
tx@Dict begin  PutEnd  end

67493 32329 a 67493 32329 a
tx@Dict begin  { -233.9224 526.37575 } PutCoor PutBegin  end
 67493 32329 a 68258 34064
a Ff(95)p 67626 35261 3790 45 v 67626 37816 a(100)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { 79.47717 526.37575 } PutCoor PutBegin  end
 67493 32329 a 68889
34064 a Ff(5)p 67626 35261 3790 45 v 67626 37816 a(100)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { -398.33841 384.11203 } PutCoor PutBegin  end
 67493 32329 a 68889
34064 a Ff(9)p 67626 35261 3790 45 v 67626 37816 a(100)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { -469.47026 267.45561 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Ff(8)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { -201.96819 384.11203 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Ff(1)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { -349.96883 267.45561 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Ff(2)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { -251.1288 267.45561 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Ff(8)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { -128.03734 267.45561 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Ff(2)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { 62.59595 384.11203 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Ff(9)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { 246.62401 384.11203 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Ff(1)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { -20.07312 267.45561 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Ff(8)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { 207.29527 267.45561 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Ff(8)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { 99.5846 267.45561 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Ff(2)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { 330.05199 267.45561 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Ff(2)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { 292.09735 575.92232 } PutCoor PutBegin  end
 67493 32329 a 1882
x Fp(T)-216 b(eil)831 b(fehlerfrei)67493 32329 y
tx@Dict begin  PutEnd  end
 67493
32329 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 284.52744 569.05487 227.62195 569.05487
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 284.52744 512.14938 227.62195 512.14938
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  11.0  11.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 67493 32329 a
tx@Dict begin  { 297.0137 520.61668 } PutCoor PutBegin  end
 67493 32329 a
1882 x Fp(T)-216 b(eil)831 b(defekt)67493 32329 y
tx@Dict begin  PutEnd  end
 67493
32329 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -56.90549 569.05487
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -284.52744 398.33841
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 170.71646 398.33841
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -170.71646 284.52744
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -398.33841 284.52744
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 56.90549 284.52744
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 284.52744 284.52744
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -227.62195 170.71646
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -113.81097 170.71646
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -455.2439 170.71646
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -341.43292 170.71646
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 0.0 170.71646   false
NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0
0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show
grestore } bind def   1. .setopacityalpha  newpath n { transform floor
.5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 113.81097 170.71646
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 227.62195 170.71646
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 341.43292 170.71646
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
114248 42042 a
currentpoint initclip moveto
 114248 42042 a 921 42042 a
 currentpoint currentpoint translate 1 0.39687 div 1 0.39687 div scale
neg exch neg exch translate
 921 42042 a
2546 x Fq(Berec)-36 b(hne)473 b(die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit,)474 b(dass)g(b)36 b(ei)473 b(einer)h(Masc)-36
b(hine)473 b(zw)-36 b(ei)474 b(o)36 b(der)474 b(mehr)f(Bau-)921
46580 y(teile)434 b(defekt)g(sind.)921 51117 y Fo(P)181
b Fm(\()p Fo(X)474 b Fl(\025)369 b Fm(2\))g(=)p 8371
51117 18898 34 v 1 0 0 TeXcolorrgb 921 55654 a Fo(P)181
b Fm(\()p Fo(X)474 b Fl(\025)369 b Fm(2\))g(=)8675 55131
y Fn(95)p 8439 55344 1412 45 v 8439 56112 a(100)10279
55654 y Fl(\001)11311 55131 y Fn(1)p 11076 55344 941
45 v 11076 56112 a(10)12445 55654 y Fl(\001)13242 55131
y Fn(1)p 13242 55344 471 45 v 13242 56112 a(5)14140 55654
y Fm(+)16050 55131 y Fn(5)p 15580 55344 1412 45 v 15580
56112 a(100)17419 55654 y Fl(\001)18452 55131 y Fn(9)p
18216 55344 941 45 v 18216 56112 a(10)19585 55654 y Fl(\001)20382
55131 y Fn(1)p 20382 55344 471 45 v 20382 56112 a(5)21281
55654 y Fm(+)23191 55131 y Fn(5)p 22720 55344 1412 45
v 22720 56112 a(100)24560 55654 y Fl(\001)25592 55131
y Fn(1)p 25357 55344 941 45 v 25357 56112 a(10)26726
55654 y Fl(\001)27523 55131 y Fn(4)p 27523 55344 471
45 v 27523 56112 a(5)28421 55654 y Fm(+)30331 55131 y
Fn(5)p 29861 55344 1412 45 v 29861 56112 a(100)31700
55654 y Fl(\001)32733 55131 y Fn(1)p 32497 55344 941
45 v 32497 56112 a(10)33866 55654 y Fl(\001)34663 55131
y Fn(1)p 34663 55344 471 45 v 34663 56112 a(5)35635 55654
y Fm(=)37619 55131 y Fn(33)p 37149 55344 1882 45 v 37149
56112 a(1000)39533 55654 y Fm(=)f(0)p Fo(;)p Fm(033)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
4800 a Fh(___/1)p 1 0 0 TeXcolorrgb 47905 6792 a Fg(WS)h(2.3)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
59588 54804 45 v 0 TeXcolorgray 24746 81281 a Fq(2)p
0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fr(WS)717 b(2.3)g(-)g(3)h(FSME-Infektion)e(-)
h(O)-60 b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray -741 4800
a Fq(3.)p 0 TeXcolorgray 651 w(In\034zierte)766 b(Zec)-36
b(k)g(en)767 b(k)-36 b(\366nnen)766 b(durc)-36 b(h)766
b(einen)g(Stic)-36 b(h)766 b(das)h(FSME-Virus)f(\(F)-108
b(r\374hsommer-)921 6792 y(Meningo)36 b(enzephalitis\))409
b(auf)h(den)e(Mensc)-36 b(hen)408 b(\374b)36 b(ertragen.)408
b(In)h(einem)g(Risik)-36 b(ogebiet)411 b(sind)921 8784
y(et)-36 b(w)g(a)313 b(3)217 b(\045)312 b(der)g(Zec)-36
b(k)g(en)313 b(FSME-in\034ziert.)f(Die)h(FSME-Sc)-36
b(h)g(utzimpfung)309 b(sc)-36 b(h)g(\374tzt)312 b(mit)g(einer)855
10776 y(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)433 b(v)-36
b(on)434 b(98)217 b(\045)434 b(v)-36 b(or)434 b(einer)f
(FSME-Erkrankung.)921 15314 y(Eine)587 b(geimpfte)h(P)-36
b(erson)587 b(wird)g(in)g(diesem)g(Risik)-36 b(ogebiet)589
b(v)-36 b(on)588 b(einer)f(Zec)-36 b(k)g(e)587 b(gesto)36
b(c)-36 b(hen.)921 17305 y(Berec)g(hne)564 b(die)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit,)565 b(dass)g(diese)g(P)-36
b(erson)564 b(durc)-36 b(h)563 b(den)h(Zec)-36 b(k)g(enstic)g(h)564
b(an)921 19297 y(FSME)433 b(erkrankt.)p 1 0 0 TeXcolorrgb
921 21843 a Fm(0)p Fo(;)p Fm(03)296 b Fl(\001)g Fm(0)p
Fo(;)p Fm(02)370 b(=)f(0)p Fo(;)p Fm(0006)921 26380 y
Fq(Die)434 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)434
b(einer)f(Erkrankung)h(b)36 b(etr\344gt)433 b(0,06)217
b(\045.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 4800 a Fh(___/1)p 1 0 0 TeXcolorrgb 47905 6792
a Fg(WS)369 b(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 30114 54804 45 v -2331 35316 a Fr(WS)717
b(2.3)g(-)g(4)h(W)-60 b(\374rfeln)715 b(-)j(ZO)f(-)h(BIFIE)p
0 TeXcolorgray -741 38624 a Fq(4.)p 0 TeXcolorgray 651
w(Ein)381 b(idealer)g(sec)-36 b(hsseitiger)382 b(W)-36
b(\374rfel)381 b(mit)h(den)e(A)-36 b(ugenzahlen)381 b(1)g(bis)g(6)g
(wird)h(einmal)f(gew)-36 b(or-)921 40616 y(fen.)921 45153
y(Ordne)511 b(den)g(F)-108 b(ragestellungen)512 b(in)g(der)f(link)-36
b(en)513 b(Spalte)e(die)h(passenden)g(W)-108 b(ahrsc)-36
b(heinlic)g(h-)921 47145 y(k)g(eiten)434 b(in)f(der)g(rec)-36
b(h)g(ten)433 b(Spalte)g(zu.)p 0 TeXcolorgray 0 TeXcolorgray
2683 48852 26748 45 v 29430 48852 4523 45 v 2683 53907
45 5056 v 3391 50712 a(Wie)322 b(gro\377)g(ist)f(die)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit,)322 b(dass)f(eine)3391
52704 y(gerade)434 b(Zahl)g(gew\374rfelt)g(wird?)p 29386
53907 V 0.9 TeXcolorgray 29430 53907 4478 5056 v 0 TeXcolorgray
1 0 0 TeXcolorrgb 31200 51837 a(C)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 33908 53907 45 5056
v 2683 53952 26748 45 v 29430 53952 4523 45 v 2683 59007
45 5056 v 3391 55812 a(Wie)322 b(gro\377)g(ist)f(die)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit,)322 b(dass)f(eine)3391
57803 y(Zahl)434 b(gr\366\377er)g(als)g(4)g(gew\374rfelt)h(wird?)p
29386 59007 V 0.9 TeXcolorgray 29430 59007 4478 5056
v 0 TeXcolorgray 1 0 0 TeXcolorrgb 31158 56937 a(A)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 33908
59007 45 5056 v 2683 59051 26748 45 v 29430 59051 4523
45 v 2683 64106 45 5056 v 3391 60911 a(Wie)322 b(gro\377)g(ist)f(die)g
(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)322 b(dass)f(eine)3391
62903 y(Zahl)434 b(kleiner)g(als)g(2)g(gew\374rfelt)h(wird?)p
29386 64106 V 0.9 TeXcolorgray 29430 64106 4478 5056
v 0 TeXcolorgray 1 0 0 TeXcolorrgb 31209 62036 a(B)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 33908
64106 45 5056 v 2683 64150 26748 45 v 29430 64150 4523
45 v 2683 70939 45 6789 v 3391 66010 a(Wie)322 b(gro\377)g(ist)f(die)g
(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)322 b(dass)f(eine)3391
68002 y(Zahl)464 b(gr\366\377er)h(als)f(1)g(und)f(kleiner)h(als)h(6)f
(gew\374rfelt)3391 69994 y(wird?)p 29386 70939 V 0.9
TeXcolorgray 29430 70939 4478 6789 v 0 TeXcolorgray 1 0 0
TeXcolorrgb 31245 68002 a(F)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 33908 70939 45 6789 v 2683
70983 26748 45 v 29430 70983 4523 45 v 0 TeXcolorgray
0 TeXcolorgray 38303 48852 4567 45 v 42870 48852 2436
45 v 38303 52297 45 3445 v 0.92 TeXcolorgray 38348 52297
4478 3445 v 0 TeXcolorgray 40075 51033 a(A)p 42826 52297
45 3445 v 43667 50371 a Fn(1)p 43667 50584 471 45 v 43667
51352 a(3)p 45261 52297 45 3445 v 38303 52341 4567 45
v 42870 52341 2436 45 v 38303 55786 45 3445 v 0.92 TeXcolorgray
38348 55786 4478 3445 v 0 TeXcolorgray 40126 54522 a
Fq(B)p 42826 55786 45 3445 v 43667 53860 a Fn(1)p 43667
54073 471 45 v 43667 54841 a(6)p 45261 55786 45 3445
v 38303 55830 4567 45 v 42870 55830 2436 45 v 38303 59275
45 3445 v 0.92 TeXcolorgray 38348 59275 4478 3445 v 0
TeXcolorgray 40117 58011 a Fq(C)p 42826 59275 45 3445
v 43667 57349 a Fn(1)p 43667 57562 471 45 v 43667 58330
a(2)p 45261 59275 45 3445 v 38303 59319 4567 45 v 42870
59319 2436 45 v 38303 62579 45 3260 v 0.92 TeXcolorgray
38348 62579 4478 3260 v 0 TeXcolorgray 40090 61500 a
Fq(D)p 42826 62579 45 3260 v 43534 61461 a Fm(1)p 45261
62579 V 38303 62623 4567 45 v 42870 62623 2436 45 v 38303
66068 45 3445 v 0.92 TeXcolorgray 38348 66068 4478 3445
v 0 TeXcolorgray 40144 64804 a Fq(E)p 42826 66068 45
3445 v 43667 64142 a Fn(5)p 43667 64355 471 45 v 43667
65123 a(6)p 45261 66068 45 3445 v 38303 66112 4567 45
v 42870 66112 2436 45 v 38303 69557 45 3445 v 0.92 TeXcolorgray
38348 69557 4478 3445 v 0 TeXcolorgray 40162 68293 a
Fq(F)p 42826 69557 45 3445 v 43667 67631 a Fn(2)p 43667
67844 471 45 v 43667 68612 a(3)p 45261 69557 45 3445
v 38303 69601 4567 45 v 42870 69601 2436 45 v 47992 38624
a Fh(___/1)p 1 0 0 TeXcolorrgb 47905 40616 a Fg(WS)369
b(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 75968 54804 45 v 0 TeXcolorgray 24746 81281 a Fq(3)p
0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fr(WS)717 b(2.3)g(-)g(5)h(Laplace-Exp)60
b(erimen)-60 b(t)716 b(-)i(MC)f(-)h(BIFIE)p 0 TeXcolorgray
-741 4800 a Fq(5.)p 0 TeXcolorgray 651 w(In)423 b(einer)f(Sc)-36
b(hac)g(h)g(tel)422 b(b)36 b(e\034nden)421 b(sic)-36
b(h)423 b(rote,)g(blaue)g(und)e(gelb)36 b(e)424 b(W)-108
b(ac)-36 b(hsmalstifte.)424 b(Ein)e(Stift)874 6792 y(wird)308
b(zuf\344llig)i(en)-36 b(tnommen,)307 b(dessen)g(F)-108
b(arb)36 b(e)307 b(notiert)h(und)f(der)g(Stift)h(danac)-36
b(h)307 b(zur\374c)-36 b(kgelegt.)921 8784 y(Dann)433
b(wird)h(das)g(Exp)36 b(erimen)-36 b(t)433 b(wiederholt.)921
11330 y(Beobac)-36 b(h)g(tet)546 b(wird,)h(wie)h(oft)f(b)36
b(ei)547 b(zw)-36 b(eimaligem)549 b(Ziehen)d(ein)h(gelb)36
b(er)547 b(Stift)f(en)-36 b(tnommen)874 13322 y(wurde.)306
b(Die)g(W)-108 b(erte)306 b(der)f(Zufallsv)-72 b(ariablen)307
b Fo(X)410 b Fq(b)36 b(esc)-36 b(hreib)36 b(en)304 b(die)i(Anzahl)f
Fo(x)h Fq(der)f(gezogenen)921 15314 y(gelb)36 b(en)434
b(Stifte.)921 17859 y(Die)d(nac)-36 b(hstehende)429 b(T)-108
b(ab)36 b(elle)431 b(stellt)f(die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eitsv)g(erteilung)431 b(der)f(Zufallsv)-72
b(a-)921 19851 y(riablen)434 b Fo(X)538 b Fq(dar.)p 0
TeXcolorgray 0 TeXcolorgray 18793 21998 9232 45 v 18793
24787 45 2789 v 19501 23950 a Fo(x)p 20904 24787 V 1373
w(P)181 b Fm(\()p Fo(X)474 b Fm(=)368 b Fo(x)p Fm(\))p
27980 24787 V 18793 24831 9232 45 v 18793 27620 45 2789
v 19546 26783 a(0)p 20904 27620 V 24229 26260 a Fn(4)p
24229 26473 471 45 v 24229 27241 a(9)p 27980 27620 45
2789 v 18793 27664 9232 45 v 18793 30453 45 2789 v 19546
29616 a Fm(1)p 20904 30453 V 24229 29093 a Fn(4)p 24229
29306 471 45 v 24229 30074 a(9)p 27980 30453 45 2789
v 18793 30497 9232 45 v 18793 33286 45 2789 v 19546 32449
a Fm(2)p 20904 33286 V 24229 31926 a Fn(1)p 24229 32139
471 45 v 24229 32907 a(9)p 27980 33286 45 2789 v 18793
33330 9232 45 v 921 38340 a Fq(Kreuze)433 b(die)h(b)36
b(eiden)433 b(zutre\033enden)e(A)-36 b(ussagen)434 b(an.)p
1132 39307 44121 45 v 1132 42749 45 3442 v 1840 41346
a(Die)g(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)434
b(mindestens)f(einen)g(gelb)36 b(en)434 b(Stift)f(zu)h(ziehen,)f(ist)
40787 40823 y Fn(4)p 40787 41036 471 45 v 40787 41804
a(9)41390 41346 y Fq(.)p 42843 42749 45 3442 v 45208
42749 V 1132 42793 44121 45 v 1132 46234 45 3442 v 1840
44831 a(Die)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)434
b(h\366)36 b(c)-36 b(hstens)433 b(einen)g(gelb)36 b(en)434
b(Stift)f(zu)h(ziehen,)f(ist)39992 44308 y Fn(4)p 39992
44521 471 45 v 39992 45290 a(9)40595 44831 y Fq(.)p 42843
46234 45 3442 v 45208 46234 V 1132 46279 44121 45 v 1132
49720 45 3442 v 1840 48317 a(Die)h(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit,)434 b(n)-36 b(ur)433 b(rote)g(o)36
b(der)434 b(blaue)f(Stifte)h(zu)f(ziehen,)h(ist)38568
47794 y Fn(4)p 38568 48007 471 45 v 38568 48775 a(9)39171
48317 y Fq(.)p 42843 49720 45 3442 v 1 0 0 TeXcolorrgb
43551 48332 a Fe(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45208 49720 V 1132 49764 44121 45 v 1132
53206 45 3442 v 1840 51803 a Fq(Die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit,)434 b(k)-36 b(einen)434 b(o)36
b(der)433 b(einen)h(gelb)36 b(en)433 b(Stift)h(zu)f(ziehen,)h(ist)41025
51280 y Fn(4)p 41025 51493 471 45 v 41025 52261 a(9)41628
51803 y Fq(.)p 42843 53206 45 3442 v 45208 53206 V 1132
53250 44121 45 v 1132 58305 45 5056 v 1840 55110 a(Die)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit,)434 b(dass)g(mehr)f(als)h(ein)g(gelb)
36 b(er)433 b(Stift)h(gezogen)g(wird,)g(ist)1840 57102
y(gr\366\377er)g(als)h(10)217 b(\045.)p 42843 58305 V
1 0 0 TeXcolorrgb 43551 56110 a Fe(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 45208 58305 V 1132 58350
44121 45 v 47992 4800 a Fh(___/1)p 1 0 0 TeXcolorrgb
47905 6792 a Fg(WS)369 b(2.3)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 62378 54804 45 v 0 TeXcolorgray
24746 81281 a Fq(4)p 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fr(WS)717 b(2.3)g(-)g(6)h(Laplace-W)-179
b(ahrsc)-60 b(heinlic)g(hk)g(eit)714 b(-)k(MC)g(-)f(BIFIE)p
0 TeXcolorgray -741 4800 a Fq(6.)p 0 TeXcolorgray 651
w(In)639 b(einer)h(Sc)-36 b(hac)g(h)g(tel)639 b(b)36
b(e\034nden)638 b(sic)-36 b(h)639 b(ein)h(roter,)g(ein)g(blauer)f(und)g
(ein)g(gelb)36 b(er)640 b(W)-108 b(ac)-36 b(hs-)921 6792
y(malstift.)462 b(Ein)e(Stift)h(wird)f(zuf\344llig)i(en)-36
b(tnommen,)460 b(dessen)g(F)-108 b(arb)36 b(e)460 b(notiert)g(und)g
(der)f(Stift)921 8784 y(danac)-36 b(h)433 b(zur\374c)-36
b(kgelegt.)434 b(Dann)g(wird)f(das)h(Exp)36 b(erimen)-36
b(t)433 b(wiederholt.)921 13322 y(Beobac)-36 b(h)g(tet)546
b(wird,)h(wie)h(oft)f(b)36 b(ei)547 b(zw)-36 b(eimaligem)549
b(Ziehen)d(ein)h(gelb)36 b(er)547 b(Stift)f(en)-36 b(tnommen)874
15314 y(wurde.)410 b(Die)h(W)-108 b(erte)409 b(der)h(Zufallsv)-72
b(ariablen)412 b Fo(X)514 b Fq(b)36 b(esc)-36 b(hreib)36
b(en)409 b(die)h(Anzahl)g(der)g(gezogenen)921 17305 y(gelb)36
b(en)434 b(Stifte.)921 21843 y(Kreuze)f(die)h(zutre\033ende\(n\))d(A)
-36 b(ussage\(n\))433 b(an.)p 14812 22883 16761 45 v
14812 26101 45 3219 v 15520 24824 a Fo(P)181 b Fm(\()p
Fo(X)474 b Fm(=)368 b(0\))h Fo(>)g(P)181 b Fm(\()p Fo(X)474
b Fm(=)368 b(1\))p 29163 26101 V 31528 26101 V 14812
26146 16761 45 v 14812 29587 45 3442 v 15520 28184 a
Fo(P)181 b Fm(\()p Fo(X)474 b Fm(=)368 b(2\))h(=)23017
27661 y Fn(1)p 23017 27874 471 45 v 23017 28642 a(9)p
29163 29587 45 3442 v 1 0 0 TeXcolorrgb 29871 28199 a
Fe(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
31528 29587 V 14812 29631 16761 45 v 14812 33073 45 3442
v 15520 31670 a Fo(P)181 b Fm(\()p Fo(X)474 b Fl(\024)369
b Fm(2\))g(=)23038 31147 y Fn(8)p 23038 31360 471 45
v 23038 32128 a(9)p 29163 33073 45 3442 v 31528 33073
V 14812 33117 16761 45 v 14812 36559 45 3442 v 15520
35156 a Fo(P)181 b Fm(\()p Fo(X)474 b(>)368 b Fm(0\))h(=)23017
34633 y Fn(5)p 23017 34846 471 45 v 23017 35614 a(9)p
29163 36559 45 3442 v 1 0 0 TeXcolorrgb 29871 35170 a
Fe(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
31528 36559 V 14812 36603 16761 45 v 14812 39821 45 3219
v 15520 38544 a Fo(P)181 b Fm(\()p Fo(X)474 b(<)368 b
Fm(3\))h(=)g(1)p 29163 39821 V 1 0 0 TeXcolorrgb 6337
w Fe(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
31528 39821 V 14812 39866 16761 45 v 47992 4800 a Fh(___/1)p
1 0 0 TeXcolorrgb 47905 6792 a Fg(WS)g(2.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 43894 54804 45
v -2331 49195 a Fr(WS)717 b(2.3)g(-)g(7)h(Reihenfolge)d(-)j(O)-60
b(A)717 b(-)h(BIFIE)p 0 TeXcolorgray -741 52502 a Fq(7.)p
0 TeXcolorgray 651 w(F)-27 b(\374r)305 b(eine)h(Abfolge)i(v)-36
b(on)306 b(f\374nf)g(v)-36 b(ersc)g(hiedenen)306 b(Bildern)g(gibt)g(es)
g(n)-36 b(ur)305 b(eine)i(ric)-36 b(h)g(tige)306 b(Reih)-36
b(ung.)921 54494 y(Diese)413 b(Bilder)g(w)-36 b(erden)411
b(gemisc)-36 b(h)g(t)412 b(und,)g(ohne)g(sie)h(anzusehen,)e(in)h(einer)
h(Reihe)f(aufgelegt.)921 61024 y(Bestimme)469 b(die)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit)469 b Fo(P)651 b Fq(\(in)468
b(\045\))h(daf\374r,)h(dass)f(die)g(ric)-36 b(h)g(tige)469
b(Reihenfolge)921 63015 y(ersc)-36 b(hein)g(t.)921 67553
y Fo(P)550 b Fm(=)p 3321 67553 12599 34 v 12598 w Fq(\045)p
1 0 0 TeXcolorrgb 1054 69575 a Fn(1)p 1054 69788 471
45 v 1054 70556 a(5)1952 70098 y Fl(\001)2749 69575 y
Fn(1)p 2749 69788 V 2749 70556 a(4)3648 70098 y Fl(\001)4445
69575 y Fn(1)p 4445 69788 V 4445 70556 a(3)5343 70098
y Fl(\001)6140 69575 y Fn(1)p 6140 69788 V 6140 70556
a(2)7113 70098 y Fm(=)368 b(0)p Fo(;)p Fm(0083)j Fl(!)e
Fo(P)550 b Fm(=)369 b(0)p Fo(;)p Fm(83)221 b(\045)921
74636 y Fq(L\366sungsin)-36 b(terv)-72 b(all:)434 b Fm([)8
b(0)p Fo(;)p Fm(8)221 b(\045;)g(0)p Fo(;)p Fm(84)g(\045])438
b Fq(bzw.)c Fm([)8 b(0)p Fo(;)p Fm(008;)221 b(0)p Fo(;)p
Fm(0084])p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 52502 a Fh(___/1)p 1 0 0 TeXcolorrgb 47905 54494
a Fg(WS)369 b(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 24746 81281 a Fq(5)p 0
TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 54804 45 v -2331 6921 a Fr(WS)797
b(2.3)g(-)h(8)g(Zollk)-60 b(on)g(trolle)796 b(-)i(O)-60
b(A)798 b(-)g(Matura)g(2015/16)f(-)h(Haupt-)-2331 9944
y(termin)p 0 TeXcolorgray -741 13251 a Fq(8.)p 0 TeXcolorgray
651 w(Eine)477 b(Grupp)36 b(e)475 b(v)-36 b(on)477 b(zehn)f(P)-36
b(ersonen)476 b(\374b)36 b(erquert)475 b(eine)i(Grenze)f(zwisc)-36
b(hen)476 b(zw)-36 b(ei)478 b(Staaten.)921 15243 y(Zw)-36
b(ei)334 b(P)-36 b(ersonen)334 b(f\374hren)f(Sc)-36 b(hm)g(uggelw)g
(are)334 b(mit)g(sic)-36 b(h.)334 b(Beim)h(Grenz\374b)36
b(ertritt)331 b(w)-36 b(erden)334 b(drei)921 17235 y(P)-36
b(ersonen)433 b(v)-36 b(om)434 b(Zoll)g(zuf\344llig)i(ausgew)-36
b(\344hlt)434 b(und)e(k)-36 b(on)g(trolliert.)921 21772
y(Berec)g(hnedie)397 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)398
b(dass)f(un)-36 b(ter)397 b(den)g(drei)g(k)-36 b(on)g(trollierten)398
b(P)-36 b(ersonen)397 b(die)921 23764 y(b)36 b(eiden)433
b(Sc)-36 b(hm)g(uggler)433 b(der)g(Grupp)36 b(e)432 b(sind!)p
1 0 0 TeXcolorrgb 1289 25786 a Fn(2)p 1054 25999 941
45 v 1054 26767 a(10)2423 26309 y Fl(\001)3220 25786
y Fn(1)p 3220 25999 471 45 v 3220 26767 a(9)4118 26309
y Fl(\001)295 b Fm(3)370 b(=)7550 25786 y Fn(1)p 7315
25999 941 45 v 7315 26767 a(15)921 30847 y Fq(L\366sungssc)-36
b(hl\374ssel:)921 33392 y(Ein)533 b(Punkt)f(f\374r)g(die)h(ric)-36
b(h)g(tige)533 b(L\366sung.)g(Andere)f(Sc)-36 b(hreib)g(w)g(eisen)532
b(des)g(Ergebnisses)h(\(als)921 35384 y(Dezimalzahl)435
b(o)36 b(der)434 b(in)f(Prozen)-36 b(t\))433 b(sind)g(eb)36
b(enfalls)435 b(als)f(ric)-36 b(h)g(tig)433 b(zu)h(w)-36
b(erten.)874 37376 y(T)-108 b(oleranzin)-36 b(terv)-72
b(all:)435 b Fm([)8 b(0)p Fo(;)p Fm(066;)221 b(0)p Fo(;)p
Fm(07])438 b Fq(bzw.)c Fm([)8 b(6)p Fo(;)p Fm(6)221 b(\045;)g(7)g
(\045])p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 13251 a Fh(___/1)p 1 0 0 TeXcolorrgb 47905 15243
a Fg(WS)369 b(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 41183 54804 45 v 0 TeXcolorgray
24746 81281 a Fq(6)p 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fr(WS)1155 b(2.3)g(-)i(9)f(V)-179
b(ersc)-60 b(hiedenf\344rbige)1152 b(Kugeln)i(-)j(MC)e(-)i(Matura)-2385
4515 y(2015/16)718 b(-)f(Haupttermin)p 0 TeXcolorgray
-741 7823 a Fq(9.)p 0 TeXcolorgray 651 w(A)-36 b(uf)350
b(einem)g(Tisc)-36 b(h)350 b(steh)-36 b(t)349 b(eine)h(Sc)-36
b(hac)g(h)g(tel)349 b(mit)h(drei)g(roten)g(und)e(zw)-36
b(\366lf)352 b(sc)-36 b(h)g(w)g(arzen)349 b(Kugeln.)921
9815 y(Nac)-36 b(h)580 b(dem)f(Zufallsprinzip)h(w)-36
b(erden)580 b(nac)-36 b(heinander)578 b(drei)i(Kugeln)g(aus)g(der)f(Sc)
-36 b(hac)g(h)g(tel)921 11806 y(gezogen,)435 b(w)-36
b(ob)36 b(ei)434 b(die)f(gezogene)i(Kugel)f(jew)-36 b(eils)435
b(wieder)f(zur\374c)-36 b(kgelegt)434 b(wird.)921 16344
y(Gegeb)36 b(en)433 b(ist)h(der)f(folgende)h(A)-36 b(usdruc)g(k:)888
18889 y Fm(3)296 b Fl(\001)f Fm(0)p Fo(;)p Fm(8)4159
18407 y Fn(2)4981 18889 y Fl(\001)g Fm(0)p Fo(;)p Fm(2)921
23427 y Fq(Kreuze)406 b(dasjenige)h(Ereignis)f(an,)g(dessen)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit)406 b(durc)-36 b(h)404
b(diesen)i(A)-36 b(usdruc)g(k)921 25418 y(b)36 b(erec)-36
b(hnet)432 b(wird.)p 3563 26127 39257 45 v 3563 29190
45 3064 v 4272 27987 a(Es)h(wird)h(h\366)36 b(c)-36 b(hstens)433
b(eine)g(sc)-36 b(h)g(w)g(arze)434 b(Kugel)g(gezogen.)p
40411 29190 V 42776 29190 V 3563 29234 39257 45 v 3563
32297 45 3064 v 4272 31094 a(Es)f(w)-36 b(erden)433 b(genau)h(zw)-36
b(ei)434 b(sc)-36 b(h)g(w)g(arze)434 b(Kugeln)f(gezogen.)p
40411 32297 V 1 0 0 TeXcolorrgb 41119 31098 a Fe(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 42776
32297 V 3563 32342 39257 45 v 3563 35405 45 3064 v 4272
34202 a Fq(Es)g(w)-36 b(erden)433 b(zw)-36 b(ei)435 b(rote)e(Kugeln)h
(und)e(eine)i(sc)-36 b(h)g(w)g(arze)433 b(Kugel)h(gezogen.)p
40411 35405 V 42776 35405 V 3563 35449 39257 45 v 3563
38512 45 3064 v 4272 37309 a(Es)f(w)-36 b(erden)433 b(n)-36
b(ur)433 b(rote)g(Kugeln)h(gezogen.)p 40411 38512 V 42776
38512 V 3563 38556 39257 45 v 3563 41620 45 3064 v 4272
40416 a(Es)f(wird)h(mindestens)f(eine)g(rote)h(Kugel)g(gezogen.)p
40411 41620 V 42776 41620 V 3563 41664 39257 45 v 3563
44727 45 3064 v 4272 43524 a(Es)f(wird)h(k)-36 b(eine)434
b(rote)g(Kugel)g(gezogen.)p 40411 44727 V 42776 44727
V 3563 44771 39257 45 v 47992 7823 a Fh(___/1)p 1 0 0
TeXcolorrgb 47905 9815 a Fg(WS)369 b(2.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 48799 54804 45
v 0 TeXcolorgray 24746 81281 a Fq(7)p 0 TeXcolorgray
eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fr(WS)829 b(2.3)h(-)h(10)f(Maturaball)f(-)h
(O)-60 b(A)830 b(-)h(BIFIE)f(-)h(K)-60 b(omp)60 b(etenzc)-60
b(hec)g(k)-2385 4515 y(2016)p 0 TeXcolorgray -1391 7823
a Fq(10.)p 0 TeXcolorgray 651 w(Die)949 b(nac)-36 b(hstehende)946
b(Abbildung)h(zeigt)i(die)f(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eitsv)g
(erteilung)948 b(einer)921 9815 y(Zufallsv)-72 b(ariablen)435
b(X,)f(die)f(die)h(W)-108 b(erte)433 b Fo(k)414 b Fm(=)369
b(1)p Fo(;)p Fm(2)p Fo(;)p Fm(3)p Fo(;)p Fm(4)p Fo(;)p
Fm(5)436 b Fq(annehmen)d(kann.)921 43718 y
 currentpoint currentpoint translate 1.56857 1.56857 scale neg exch
neg exch translate
 921 43718
a 1788 43718 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 199.40451 a add def
/d 0.0 a add neg def /h 179.96141 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1788 43718 a 5947 40613 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 161.82932 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 14.22723
T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 1 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 151.91069 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 569.05487
0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 161.82932
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true
and or { /viceversa 0.0  161.82932  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 151.91069  def
/dT 37293580 abs 65536 div viceversa { neg } if def /DT 20. abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 151.91069 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 161.82932 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 0 151.91069
 0 0.0  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq true and exch 2 lt false
and or { /viceversa 0.0  151.91069  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 161.82932  def
/dT 932396 abs 65536 div viceversa { neg } if def /DT 0.05 abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
} def /MaxValue { yEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 284.52756  mul cntTick add def x abs MaxValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet
exch def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add {
/dx exch def /x dx log OffSet add 284.52756  mul cntTick add def x
abs MinValue abs le { false { x minTickline exch moveto x maxTickline
exch lineto } { x tickstart STsize mul exch moveto x tickend STsize
mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth SLW
subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 151.91069 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 161.82932 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
4702 40898 a Fn(0)3500 39324 y(0)p Fd(:)p Fn(05)3500
37749 y(0)p Fd(:)p Fn(10)3500 36174 y(0)p Fd(:)p Fn(15)3500
34599 y(0)p Fd(:)p Fn(20)3500 33024 y(0)p Fd(:)p Fn(25)3500
31449 y(0)p Fd(:)p Fn(30)3500 29874 y(0)p Fd(:)p Fn(35)3500
28299 y(0)p Fd(:)p Fn(40)3500 26724 y(0)p Fd(:)p Fn(45)3500
25149 y(0)p Fd(:)p Fn(50)5947 40613 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 21.33955 0.0 21.33955
28.45448 7.11317 28.45448 7.11317 0.0  /Lineto /lineto load def 0 
setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 49.7923 0.0 49.7923
85.35913 35.56592 85.35913 35.56592 0.0  /Lineto /lineto load def 0
 setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 78.24504 0.0 78.24504
113.80928 64.01866 113.80928 64.01866 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 106.69778 0.0 106.69778
28.45448 92.4714 28.45448 92.4714 0.0  /Lineto /lineto load def 0 
setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 135.15053 0.0 135.15053
28.45448 120.92415 28.45448 120.92415 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 7.11317 28.45448 7.11317 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 21.33955 28.45448 7.11317 28.45448
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 21.33955 0.0 21.33955 28.45448
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 7.11317 0.0 21.33955 0.0  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 35.56592 85.35913 35.56592
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 49.7923 85.35913 35.56592 85.35913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 49.7923 0.0 49.7923 85.35913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 35.56592 0.0 49.7923 0.0  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 64.01866 113.80928 64.01866
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 78.24504 113.80928 64.01866
113.80928   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 78.24504 0.0 78.24504 113.80928
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 64.01866 0.0 78.24504 0.0 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 92.4714 28.45448 92.4714 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 106.69778 28.45448 92.4714
28.45448   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 106.69778 0.0 106.69778 28.45448
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 92.4714 0.0 106.69778 0.0 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 120.92415 28.45448 120.92415
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 135.15053 28.45448 120.92415
28.45448   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 135.15053 0.0 135.15053 28.45448
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 120.92415 0.0 135.15053 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
5947 40613 a
tx@Dict begin  { 12.16283 -4.83647 } PutCoor PutBegin  end
 5947 40613 a 571 x Fc(1)5947 40613 y
tx@Dict begin  PutEnd  end
 5947
40613 a 5947 40613 a
tx@Dict begin  { 39.74466 -4.83647 } PutCoor PutBegin  end
 5947 40613 a 571 x Fc(2)5947 40613
y
tx@Dict begin  PutEnd  end
 5947 40613 a 5947 40613 a
tx@Dict begin  { 69.1356 -4.83647 } PutCoor PutBegin  end
 5947 40613 a 571 x Fc(3)5947
40613 y
tx@Dict begin  PutEnd  end
 5947 40613 a 5947 40613 a
tx@Dict begin  { 98.07417 -4.83647 } PutCoor PutBegin  end
 5947 40613 a 571 x
Fc(4)5947 40613 y
tx@Dict begin  PutEnd  end
 5947 40613 a 5947 40613 a
tx@Dict begin  { 126.56035 -4.83647 } PutCoor PutBegin  end
 5947 40613
a 571 x Fc(5)5947 40613 y
tx@Dict begin  PutEnd  end
 5947 40613 a 5947 40613 a
tx@Dict begin  { 73.20494 -19.06372 } PutCoor PutBegin  end
 5947
40613 a 610 x Fc(k)5947 40613 y
tx@Dict begin  PutEnd  end
 5947 40613 a 5947 40613
a
tx@Dict begin  { -34.99457 93.03932 } PutCoor PutBegin  end
 5947 40613 a 6612 43918 a
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg
exch translate
 6612 43918 a Fc(P\(X=k\))9917
43918 y
 currentpoint grestore moveto
 9917 43918 a 5947 40613 a
tx@Dict begin  PutEnd  end
 5947 40613 a 23861
43718 a
currentpoint initclip moveto
 23861 43718 a 921 43718 a
 currentpoint currentpoint translate 1 1.56857 div 1 1.56857 div scale
neg exch neg exch translate
 921 43718 a 4538 x
Fq(Ermittle)g(den)g(Erw)-36 b(artungsw)g(ert)433 b Fo(E)78
b Fm(\()p Fo(X)104 b Fm(\))p Fq(.)p 1 0 0 TeXcolorrgb
921 52793 a Fo(E)78 b Fm(\()p Fo(X)104 b Fm(\))369 b(=)g(2)p
Fo(;)p Fm(8)434 b Fq(-)f(T)-108 b(oleranzin)-36 b(terv)-72
b(all:)435 b Fm([)8 b(2)p Fo(;)p Fm(65;)221 b(2)p Fo(;)p
Fm(95])p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 7823 a Fh(___/1)p 1 0 0 TeXcolorrgb 47905 9815
a Fg(WS)369 b(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 56600 54804 45 v 0 TeXcolorgray
24746 81281 a Fq(8)p 0 TeXcolorgray eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fr(WS)656 b(2.3)h(-)g(11)g(Mehrere)g(W)-179
b(ahrsc)-60 b(heinlic)g(hk)g(eiten)654 b(-)j(MC)g(-)h(Matura)-2385
4515 y(2014/15)718 b(-)f(Haupttermin)p 0 TeXcolorgray
-1391 7823 a Fq(11.)p 0 TeXcolorgray 651 w(In)482 b(einer)h(Un)-36
b(terric)g(h)g(tsstunde)479 b(sind)k(15)g(Sc)-36 b(h)g(\374lerinnen)480
b(und)i(10)h(Sc)-36 b(h)g(\374ler)481 b(an)-36 b(w)g(esend.)483
b(Die)921 9815 y(Lehrp)36 b(erson)644 b(w)-36 b(\344hlt)645
b(f\374r)g(\334b)36 b(erpr\374fungen)643 b(nac)-36 b(heinander)644
b(zuf\344llig)i(drei)f(v)-36 b(ersc)g(hiedene)921 11806
y(P)g(ersonen)433 b(aus)g(dieser)h(Sc)-36 b(h)g(ulklasse)434
b(aus.)g(Jeder)f(Pr\374\035ing)g(wird)g(n)-36 b(ur)433
b(einmal)h(b)36 b(efragt.)921 16344 y(Kreuze)433 b(die)h(b)36
b(eiden)433 b(zutre\033enden)e(A)-36 b(ussagen)434 b(an.)p
1062 17311 44260 45 v 1062 22565 45 5255 v 1770 19170
a(Die)339 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)337
b(dass)h(die)f(Lehrp)36 b(erson)336 b(drei)h(Sc)-36 b(h)g(\374lerinnen)
335 b(ausw)-36 b(\344hlt,)1770 21162 y(kann)434 b(mittels)9462
20639 y Fn(15)p 9462 20852 941 45 v 9462 21620 a(25)10831
21162 y Fl(\001)11628 20639 y Fn(14)p 11628 20852 V 11628
21620 a(25)12997 21162 y Fl(\001)13794 20639 y Fn(13)p
13794 20852 V 13794 21620 a(25)15301 21162 y Fq(b)36
b(erec)-36 b(hnet)432 b(w)-36 b(erden.)p 42912 22565
45 5255 v 45277 22565 V 1062 22610 44260 45 v 1062 27864
45 5255 v 1770 24470 a(Die)340 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g
(eit,)340 b(dass)f(die)g(Lehrp)36 b(erson)338 b(als)i(erste)e(P)-36
b(erson)339 b(einen)g(Sc)-36 b(h)g(\374-)1770 26461 y(ler)434
b(ausw)-36 b(\344hlt,)434 b(ist)11420 25938 y Fn(10)p
11420 26152 941 45 v 11420 26920 a(25)12494 26461 y Fq(.)p
42912 27864 45 5255 v 1 0 0 TeXcolorrgb 43621 25569 a
Fe(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45277 27864 V 1062 27909 44260 45 v 1062 33164 45 5255
v 1770 29769 a Fq(Die)356 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)
354 b(dass)h(die)f(Lehrp)36 b(erson)353 b(b)36 b(ei)355
b(der)e(W)-108 b(ahl)355 b(v)-36 b(on)355 b(drei)f(Pr\374f-)1770
31761 y(lingen)434 b(als)h(zw)-36 b(eite)434 b(P)-36
b(erson)433 b(eine)g(Sc)-36 b(h)g(\374lerin)433 b(ausw)-36
b(\344hlt,)434 b(ist)31829 31238 y Fn(24)p 31829 31451
941 45 v 31829 32219 a(25)32903 31761 y Fq(.)p 42912
33164 45 5255 v 45277 33164 V 1062 33208 44260 45 v 1062
38463 45 5255 v 1770 35068 a(Die)337 b(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit,)336 b(dass)g(die)g(Lehrp)36 b(erson)334
b(drei)i(Sc)-36 b(h)g(\374ler)334 b(ausw)-36 b(\344hlt,)337
b(kann)1770 37060 y(mittels)6246 36537 y Fn(10)p 6246
36750 941 45 v 6246 37518 a(25)7615 37060 y Fl(\001)8647
36537 y Fn(9)p 8412 36750 V 8412 37518 a(24)9781 37060
y Fl(\001)10813 36537 y Fn(8)p 10578 36750 V 10578 37518
a(23)12085 37060 y Fq(b)36 b(erec)-36 b(hnet)433 b(w)-36
b(erden.)p 42912 38463 45 5255 v 1 0 0 TeXcolorrgb 43621
36167 a Fe(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45277 38463 V 1062 38507 44260 45 v 1062
45754 45 7247 v 1770 40367 a Fq(Die)435 b(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit,)434 b(dass)f(sic)-36 b(h)434 b(un)-36
b(ter)432 b(den)h(v)-36 b(on)434 b(der)f(Lehrp)36 b(erson)432
b(aus-)1770 42359 y(gew)-36 b(\344hlten)467 b(P)-36 b(ersonen)465
b(genau)h(zw)-36 b(ei)467 b(Sc)-36 b(h)g(\374lerinnen)464
b(b)36 b(e\034nden,)464 b(kann)i(mittels)1903 43828 y
Fn(15)p 1903 44041 941 45 v 1903 44809 a(25)3272 44351
y Fl(\001)4069 43828 y Fn(14)p 4069 44041 V 4069 44809
a(24)5438 44351 y Fl(\001)6235 43828 y Fn(23)p 6235 44041
V 6235 44809 a(23)7743 44351 y Fq(b)36 b(erec)-36 b(hnet)432
b(w)-36 b(erden.)p 42912 45754 45 7247 v 45277 45754
V 1062 45798 44260 45 v 47992 7823 a Fh(___/1)p 1 0 0
TeXcolorrgb 47905 9815 a Fg(WS)369 b(2.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 49826 54804 45
v 0 TeXcolorgray 24746 81281 a Fq(9)p 0 TeXcolorgray
eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fr(WS)917 b(2.3)h(-)g(12)g(A)-60
b(ugensumme)917 b(b)60 b(eim)918 b(W)-60 b(\374rfeln)916
b(-)i(O)-60 b(A)918 b(-)h(Matura)-2385 4515 y(2014/15)718
b(-)f(Neb)60 b(en)-60 b(termin)716 b(1)p 0 TeXcolorgray
-1391 7823 a Fq(12.)p 0 TeXcolorgray 651 w(Zw)-36 b(ei)447
b(un)-36 b(tersc)g(heidbare,)445 b(faire)i(W)-36 b(\374rfel)447
b(mit)g(den)e(A)-36 b(ugenzahlen)446 b(1,)i(2,)f(3,)g(4,)g(5,)g(6)g(w)
-36 b(erden)921 9815 y(gleic)g(hzeitig)551 b(gew)-36
b(orfen)550 b(und)e(die)h(A)-36 b(ugensumme)549 b(wird)g(ermittelt.)h
(Das)g(Ereignis,)g(dass)921 11806 y(die)591 b(A)-36 b(ugensumme)590
b(durc)-36 b(h)589 b(5)i(teilbar)g(ist,)g(wird)g(mit)g(E)f(b)36
b(ezeic)-36 b(hnet.)592 b(\(Ein)e(W)-36 b(\374rfel)591
b(ist)675 13798 y(\022fair\020,)479 b(w)-36 b(enn)476
b(die)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)477
b(nac)-36 b(h)476 b(einem)h(W)-108 b(urf)477 b(nac)-36
b(h)476 b(ob)36 b(en)477 b(zu)g(zeigen,)g(f\374r)921
15790 y(alle)435 b(sec)-36 b(hs)433 b(Seiten\035\344c)-36
b(hen)432 b(gleic)-36 b(h)434 b(gro\377)g(ist.\))921
20328 y(Berec)-36 b(hne)433 b(die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit)434 b(des)f(Ereignisses)h Fo(E)78
b Fq(.)921 24865 y Fo(P)181 b Fm(\()p Fo(E)78 b Fm(\))368
b(=)p 5742 24865 15749 34 v 1 0 0 TeXcolorrgb 921 27596
a Fo(P)181 b Fm(\()p Fo(E)78 b Fm(\))368 b(=)6200 26698
y(7)p 5875 27286 1301 45 v 5875 28508 a(36)921 32134
y Fq(L\366sungssc)-36 b(hl\374ssel:)921 34126 y(Ein)533
b(Punkt)f(f\374r)g(die)h(ric)-36 b(h)g(tige)533 b(L\366sung.)g(Andere)f
(Sc)-36 b(hreib)g(w)g(eisen)532 b(des)g(Ergebnisses)h(\(als)921
36117 y(Dezimalzahl)435 b(o)36 b(der)434 b(in)f(Prozen)-36
b(t\))433 b(sind)g(eb)36 b(enfalls)435 b(als)f(ric)-36
b(h)g(tig)433 b(zu)h(w)-36 b(erten.)874 38109 y(T)-108
b(oleranzin)-36 b(terv)-72 b(alle:)435 b Fm([)8 b(0)p
Fo(;)p Fm(19;)221 b(0)p Fo(;)p Fm(20])437 b Fq(bzw.)d
Fm([)8 b(19\045;)221 b(20\045])p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 7823 a Fh(___/1)p 1 0 0
TeXcolorrgb 47905 9815 a Fg(WS)369 b(2.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 41917 54804 45
v 0 TeXcolorgray 24421 81281 a Fq(10)p 0 TeXcolorgray
eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a Fr(WS)477 b(2.3)h(-)h(13)f
(Maturaball-Gl\374c)-60 b(ksspiele)476 b(-)j(O)-60 b(A)478
b(-)g(Matura)g(2014/15)-2617 4622 y(-)718 b(Neb)60 b(en)-60
b(termin)716 b(2)p 0 TeXcolorgray -1391 7929 a Fq(13.)p
0 TeXcolorgray 651 w(Bei)648 b(einem)g(Maturaball)h(w)-36
b(erden)647 b(zw)-36 b(ei)649 b(v)-36 b(ersc)g(hiedene)647
b(Gl\374c)-36 b(ksspiele)648 b(angeb)36 b(oten:)649 b(ein)921
9921 y(Gl\374c)-36 b(ksrad)507 b(und)g(eine)g(T)-108
b(om)-36 b(b)36 b(ola,)509 b(b)36 b(ei)508 b(der)f Fm(1000)i
Fq(Lose)f(v)-36 b(erkauft)508 b(w)-36 b(erden.)508 b(Das)g(Gl\374c)-36
b(ks-)921 11913 y(rad)402 b(ist)g(in)g(zehn)f(gleic)-36
b(h)403 b(gro\377en)f(Sektoren)g(un)-36 b(terteilt,)401
b(die)h(alle)h(mit)g(der)e(gleic)-36 b(hen)402 b(W)-108
b(ahr-)921 13905 y(sc)-36 b(heinlic)g(hk)g(eit)472 b(auftreten)f(k)-36
b(\366nnen.)471 b(Man)g(gewinn)-36 b(t,)472 b(w)-36 b(enn)471
b(der)g(Zeiger)h(nac)-36 b(h)471 b(Stillstand)921 15897
y(des)433 b(Rades)h(auf)g(das)g(F)-108 b(eld)432 b(der)i(\022)p
Fm(1)p Fq(\020)g(o)36 b(der)433 b(der)g(\022)p Fm(6)p
Fq(\020)h(zeigt.)921 18442 y(Max)617 b(hat)e(das)h(Gl\374c)-36
b(ksrad)616 b(einmal)h(gedreh)-36 b(t)615 b(und)g(als)h(Erster)g(ein)g
(Los)g(der)f(T)-108 b(om)-36 b(b)36 b(ola)921 20434 y(gekauft.)881
b(In)c(b)36 b(eiden)876 b(F)-27 b(\344llen)877 b(hat)g(er)g(gew)-36
b(onnen.)879 b(Die)f(Maturazeitung)e(b)36 b(eric)-36
b(h)g(tet)921 22426 y(dar\374b)36 b(er:)423 b(\022Die)h(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit)424 b(f\374r)f(dieses)g(Ereignis)h(b)
36 b(etr\344gt)424 b Fm(3)221 b(\045)p Fq(\020)-181 b(.)425
b(Berec)-36 b(hne)422 b(die)873 24418 y(Anzahl)433 b(der)g
(Gewinn-Lose.)p 1 0 0 TeXcolorrgb 1289 28432 a Fn(2)p
1054 28645 941 45 v 1054 29413 a(10)2423 28955 y Fl(\001)3896
28432 y Fd(x)p 3220 28645 1882 45 v 3220 29413 a Fn(1000)5603
28955 y Fm(=)369 b(0)p Fo(;)p Fm(03)h Fl(\))g Fo(x)f
Fm(=)f(150)p Fq(.)921 31500 y(Es)434 b(gibt)f(150)i(Gewinnlose.)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
7929 a Fh(___/1)p 1 0 0 TeXcolorrgb 47905 9921 a Fg(WS)369
b(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 35234 54804 45 v -2331 40662 a Fr(WS)729 b(2.3)h(-)g(14)g
(Einlassk)-60 b(on)g(trolle)728 b(-)j(O)-60 b(A)730 b(-)g(Matura)g
(2015/16)g(-)g(Ne-)-2331 43684 y(b)60 b(en)-60 b(termin)716
b(1)p 0 TeXcolorgray -1391 46992 a Fq(14.)p 0 TeXcolorgray
651 w(Beim)500 b(Einlass)h(zu)e(einer)h(Sp)36 b(ortv)-36
b(eranstaltung)499 b(f\374hrt)g(eine)h(P)-36 b(erson)500
b Fo(P)680 b Fq(einen)500 b(unerlaub-)921 48984 y(ten)626
b(Gegenstand)g(mit)h(sic)-36 b(h.)628 b(Bei)f(einer)g(Sic)-36
b(herheitsk)g(on)g(trolle)627 b(wird)g(ein)f(unerlaubter)921
50976 y(Gegenstand)392 b(mit)i(einer)f(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit)393 b(v)-36 b(on)394 b Fm(0)p Fo(;)p
Fm(9)h Fq(en)-36 b(tdec)g(kt.)393 b(Da)h(es)f(sic)-36
b(h)394 b(b)36 b(ei)393 b(dieser)921 52968 y(Sp)36 b(ortv)-36
b(eranstaltung)362 b(um)h(eine)f(V)-108 b(eranstaltung)363
b(mit)f(b)36 b(esonders)363 b(hohem)f(Risik)-36 b(o)364
b(handelt,)921 54959 y(m)-36 b(uss)400 b(jede)g(P)-36
b(erson)400 b(zw)-36 b(ei)401 b(derartige)f(v)-36 b(oneinander)400
b(unabh\344ngige)g(Sic)-36 b(herheitsk)g(on)g(trollen)921
56951 y(durc)g(hlaufen.)921 61489 y(Berec)g(hne)610 b(die)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit,)611 b(dass)f(b)36 b(ei)611
b(der)f(P)-36 b(erson)610 b Fo(P)791 b Fq(im)611 b(Zuge)f(der)g(b)36
b(eiden)921 63481 y(Sic)-36 b(herheitsk)g(on)g(trollen)433
b(der)g(unerlaubte)g(Gegenstand)f(en)-36 b(tdec)g(kt)433
b(wird.)p 1 0 0 TeXcolorrgb 921 66026 a Fm(0)p Fo(;)p
Fm(9)296 b(+)f(0)p Fo(;)p Fm(1)h Fl(\001)f Fm(0)p Fo(;)p
Fm(9)370 b(=)f(0)p Fo(;)p Fm(99)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 46992 a Fh(___/1)p 1 0 0
TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 69760 V 0 TeXcolorgray 24421 81281 a Fq(11)p 0
TeXcolorgray eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a Fr(WS)863 b(2.3)h(-)h(15)e(Haus\374bungsk)
-60 b(on)g(trolle)861 b(-)j(O)-60 b(A-)865 b(Matura)f(2013/14)-2331
4622 y(Haupttermin)p 0 TeXcolorgray -1391 7929 a Fq(15.)p
0 TeXcolorgray 651 w(Eine)389 b(Lehrerin)f(w)-36 b(\344hlt)390
b(am)f(Beginn)g(der)g(Mathematikstunde)g(nac)-36 b(h)388
b(dem)h(Zufallsprinzip)888 9921 y(3)413 b(Sc)-36 b(h)g(\374ler/innen)
410 b(aus,)j(die)f(an)g(der)f(T)-108 b(afel)413 b(die)g
(L\366sungsans\344tze)f(der)f(Haus\374bungsaufga-)921
11913 y(b)36 b(en)433 b(erkl\344ren)h(m)-36 b(\374ssen.)433
b(Es)h(sind)f(12)h(Bursc)-36 b(hen)432 b(und)h(8)h(M\344dc)-36
b(hen)432 b(an)-36 b(w)g(esend.)921 14458 y(Berec)g(hne)573
b(die)g(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)574
b(dass)g(f\374r)f(das)g(Erkl\344ren)h(der)f(L\366sungsans\344tze)h(2)
921 16450 y(Bursc)-36 b(hen)432 b(und)h(1)h(M\344dc)-36
b(hen)432 b(ausgew)-36 b(\344hlt)434 b(w)-36 b(erden!)p
1 0 0 TeXcolorrgb 921 20987 a Fo(P)181 b Fm(\()p Fq(\0222)434
b(Bursc)-36 b(hen,)432 b(1)i(M\344dc)-36 b(hen\020)p
Fm(\))368 b(=)19381 20464 y Fn(12)p 19381 20677 941 45
v 19381 21445 a(20)20750 20987 y Fl(\001)21547 20464
y Fn(11)p 21547 20677 V 21547 21445 a(19)22916 20987
y Fl(\001)23948 20464 y Fn(8)p 23713 20677 V 23713 21445
a(18)25082 20987 y Fl(\001)295 b Fm(3)369 b(=)28279 20464
y Fn(44)p 28279 20677 V 28279 21445 a(95)29721 20987
y Fl(\031)g Fm(0)p Fo(;)p Fm(46)i(=)d(46)221 b(\045)874
23533 y Fq(T)-108 b(oleranzin)-36 b(terv)-72 b(all:)560
b Fm([)8 b(0)p Fo(;)p Fm(46;)221 b(0)p Fo(;)p Fm(47])561
b Fq(bzw.)d Fm([)8 b(46)221 b(\045;)g(47)g(\045])p Fq(.)562
b(Sollte)c(als)h(L\366sungsmetho)36 b(de)556 b(die)921
25525 y(h)-36 b(yp)36 b(ergeometrisc)-36 b(he)365 b(V)-108
b(erteilung)365 b(gew)-36 b(\344hlt)365 b(w)-36 b(erden)365
b(ist)g(dies)g(auc)-36 b(h)365 b(als)g(ric)-36 b(h)g(tig)365
b(zu)g(w)-36 b(erten:)921 28927 y Fo(P)181 b Fm(\()p
Fo(E)78 b Fm(\))368 b(=)5875 26491 y Fb(\020)6536 27186
y Fn(12)6771 28234 y(2)7477 26491 y Fb(\021)8433 27776
y Fl(\001)9097 26491 y Fb(\020)9758 27186 y Fn(8)9758
28234 y(1)10229 26491 y Fb(\021)p 5875 28617 5016 45
v 7251 28794 a(\020)7912 29489 y Fn(20)8147 30536 y(3)8853
28794 y Fb(\021)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 7929 a Fh(___/1)p 1 0 0 TeXcolorrgb
47905 9921 a Fg(WS)h(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 34217 54804 45 v -2331 39646 a Fr(WS)1051
b(2.3)g(-)g(16)g(A)-60 b(dv)g(en)g(tkalender)1049 b(-)j(O)-60
b(A)1051 b(-)h(Matura)f(2013/14)g(1.)-2331 42668 y(Neb)60
b(en)-60 b(termin)p 0 TeXcolorgray -1391 45975 a Fq(16.)p
0 TeXcolorgray 651 w(In)552 b(einem)h(A)-36 b(dv)g(en)g(tkalender)552
b(wurden)g(v)-36 b(ersehen)g(tlic)g(h)552 b(4)g(der)g(24)i(v)-36
b(orhandenen)551 b(F)-108 b(enster)921 47967 y(nic)-36
b(h)g(t)433 b(b)36 b(ef\374llt.)921 50513 y(Berec)-36
b(hne)427 b(die)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)428
b(dass)g(Sie)g(b)36 b(eim)428 b(\326\033nen)f(des)h(dritten)f(F)-108
b(ensters)426 b(das)921 52505 y(erste)433 b(leere)h(F)-108
b(enster)432 b(v)-36 b(or\034nden!)p 1 0 0 TeXcolorrgb
1054 56519 a Fn(20)p 1054 56732 941 45 v 1054 57500 a(24)2423
57042 y Fl(\001)3220 56519 y Fn(19)p 3220 56732 V 3220
57500 a(23)4589 57042 y Fl(\001)5621 56519 y Fn(4)p 5386
56732 V 5386 57500 a(22)6828 57042 y Fm(=)8577 56519
y Fn(95)p 8342 56732 1412 45 v 8342 57500 a(759)10255
57042 y Fl(\031)369 b Fm(0)p Fo(;)p Fm(1252)i Fl(\031)e
Fm(12)p Fo(;)p Fm(5)221 b(\045)874 59587 y Fq(T)-108
b(oleranzin)-36 b(terv)-72 b(all:)435 b Fm([)8 b(0)p
Fo(;)p Fm(12;)221 b(0)p Fo(;)p Fm(13])437 b Fq(bzw.)d([12)217
b(\045;)435 b(13)217 b(\045].)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 45975 a Fh(___/1)p 1 0 0
TeXcolorrgb 47905 47967 a Fg(WS)369 b(2.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 63395 54804 45
v 0 TeXcolorgray 24421 81281 a Fq(12)p 0 TeXcolorgray
eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a Fr(WS)587 b(2.3)g(-)h(17)f(Alarmanlagen)g
(-)g(O)-60 b(A)588 b(-)g(Matura)f(2016/17)g(-)h(Haupt-)-2331
4622 y(termin)p 0 TeXcolorgray -1391 7929 a Fq(17.)p
0 TeXcolorgray 651 w(Eine)390 b(b)36 b(estimm)-36 b(te)390
b(Alarmanlage)i(l\366st)f(jew)-36 b(eils)392 b(mit)f(der)f(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit)390 b(0,9)h(im)g(Ein-)921
9921 y(bruc)-36 b(hsfall)616 b(Alarm)f(aus.)i(Eine)f(F)-108
b(amilie)616 b(l\344sst)g(zw)-36 b(ei)616 b(dieser)g(Anlagen)g(in)f
(ihr)g(Haus)h(so)921 11913 y(ein)-36 b(bauen,)433 b(dass)h(sie)f
(unabh\344ngig)h(v)-36 b(oneinander)433 b(Alarm)h(ausl\366sen.)921
16450 y(Berec)-36 b(hne)403 b(die)h(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit,)405 b(dass)f(im)g(Ein)-36 b(bruc)g(hsfall)404
b(mindestens)f(eine)h(der)g(b)36 b(ei-)921 18442 y(den)433
b(Anlagen)h(Alarm)g(ausl\366st!)p 1 0 0 TeXcolorrgb 921
20987 a(M\366glic)-36 b(he)434 b(Berec)-36 b(hn)g(ung:)856
23533 y Fm(1)295 b Fl(\000)h Fm(0)p Fo(;)p Fm(1)4791
23051 y Fn(2)5687 23533 y Fm(=)368 b(0)p Fo(;)p Fm(99)921
28070 y Fq(Die)421 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)420
b(dass)h(im)f(Ein)-36 b(bruc)g(hsfall)420 b(mindestens)f(eine)h(der)g
(b)36 b(eiden)420 b(Anla-)921 30062 y(gen)434 b(Alarm)f(ausl\366st,)i
(liegt)f(b)36 b(ei)434 b(0,99.)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 7929 a Fh(___/1)p 1 0 0
TeXcolorrgb 47905 9921 a Fg(WS)369 b(2.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 33796 54804 45
v -2331 39097 a Fr(WS)749 b(2.3)h(-)g(18)f(Mensc)-60
b(h)750 b(\344rgere)f(Dic)-60 b(h)750 b(nic)-60 b(h)g(t)749
b(-)h(O)-60 b(A)750 b(-)g(Matura)g(NT)-2439 42119 y(1)718
b(16/17)p 0 TeXcolorgray -1391 45427 a Fq(18.)p 0 TeXcolorgray
651 w(Um)509 b(b)36 b(eim)510 b(Spiel)f Fa(Mensch)534
b(\344r)-66 b(ger)g(e)533 b(Dich)h(nicht)599 b Fq(zu)509
b(Beginn)h(des)f(Spiels)g(eine)h(Figur)f(auf)921 47418
y(das)391 b(Spielfeld)g(setzen)g(zu)f(d\374rfen,)h(m)-36
b(uss)390 b(mit)h(einem)g(fairen)g(Spielw\374rfel)h(ein)f(Sec)-36
b(hser)390 b(ge-)874 49410 y(w)-36 b(orfen)414 b(w)-36
b(erden.)412 b(\(Ein)h(W)-36 b(\374rfel)413 b(ist)h(\022fair\020,)g(w)
-36 b(enn)413 b(die)g(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)413
b(nac)-36 b(h)412 b(einem)855 51402 y(W)-108 b(urf)433
b(nac)-36 b(h)433 b(ob)36 b(en)433 b(zu)h(zeigen)g(f\374r)f(alle)i(sec)
-36 b(hs)433 b(Seiten\035\344c)-36 b(hen)432 b(gleic)-36
b(h)434 b(gro\377)g(ist.\))921 53948 y(Die)542 b(Anzahl)f(der)g(V)-108
b(ersuc)-36 b(he,)540 b(einen)h(Sec)-36 b(hser)540 b(zu)h(w)-36
b(erfen,)541 b(ist)h(laut)f(Spielanleitung)g(auf)921
55940 y(der)408 b(V)-108 b(ersuc)-36 b(he)407 b(b)36
b(esc)-36 b(hr\344nkt,)408 b(b)36 b(ev)-36 b(or)409 b(die)f(n\344c)-36
b(hste)408 b(Spielerin/der)g(n\344c)-36 b(hste)408 b(Spieler)g(an)g
(die)921 57932 y(Reihe)434 b(k)-36 b(omm)g(t.)921 60477
y(Berec)g(hne)397 b(die)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)399
b(mit)f(der)f(eine)h(Spiel\034gur)f(nac)-36 b(h)398 b(maximal)i(drei)d
(V)-108 b(er-)921 62469 y(suc)-36 b(hen,)433 b(einen)g(Sec)-36
b(hser)433 b(zur)g(w)-36 b(erfen,)434 b(auf)g(das)f(Spielfeld)h
(gesetzt)g(w)-36 b(erden)433 b(darf)36 b(!)p 1 0 0 TeXcolorrgb
1054 64491 a Fn(1)p 1054 64704 471 45 v 1054 65472 a(6)1952
65014 y Fm(+)3392 64491 y Fn(5)p 3392 64704 V 3392 65472
a(6)4290 65014 y Fl(\001)5087 64491 y Fn(1)p 5087 64704
V 5087 65472 a(6)5986 65014 y Fm(+)7426 64491 y Fn(5)p
7426 64704 V 7426 65472 a(6)8324 65014 y Fl(\001)9121
64491 y Fn(5)p 9121 64704 V 9121 65472 a(6)10020 65014
y Fl(\001)10817 64491 y Fn(1)p 10817 64704 V 10817 65472
a(6)11789 65014 y Fl(\031)369 b Fm(0)p Fo(;)p Fm(42)921
67560 y Fq(Die)598 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)597
b(eine)h(Spiel\034gur)e(nac)-36 b(h)597 b(maximal)h(drei)f(V)-108
b(ersuc)-36 b(hen)596 b(auf)h(das)921 69552 y(Spielfeld)434
b(setzen)f(zu)g(d\374rfen,)g(b)36 b(etr\344gt)434 b(ca.)g
Fm(42)221 b(\045)p Fq(.)874 72097 y(T)-108 b(oleranzin)-36
b(terv)-72 b(all:)435 b Fm([)8 b(0)p Fo(;)p Fm(4;)221
b(0)p Fo(;)p Fm(45])437 b Fq(bzw.)d Fm([)8 b(40)221 b(\045;)g(45)g
(\045])921 74642 y Fq(Die)608 b(A)-36 b(ufgab)36 b(e)608
b(ist)f(auc)-36 b(h)607 b(dann)g(als)h(ric)-36 b(h)g(tig)607
b(gel\366st)i(zu)e(w)-36 b(erten,)607 b(w)-36 b(enn)607
b(b)36 b(ei)608 b(k)-36 b(orrektem)873 76634 y(Ansatz)433
b(das)h(Ergebnis)f(aufgrund)g(eines)h(Rec)-36 b(henfehlers)433
b(nic)-36 b(h)g(t)433 b(ric)-36 b(h)g(tig)433 b(ist.)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
45427 a Fh(___/1)p 1 0 0 TeXcolorrgb 47905 47418 a Fg(WS)369
b(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 24421 81281 a Fq(13)p 0 TeXcolorgray eop
end
%%Page: 14 14
TeXDict begin 14 13 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 24421 81281 a Fq(14)p 0
TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
