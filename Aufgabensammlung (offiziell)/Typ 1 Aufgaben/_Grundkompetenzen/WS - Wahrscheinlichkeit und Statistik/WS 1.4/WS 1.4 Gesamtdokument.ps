%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS 1.4/WS 1.4 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:48:57 2017
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ wasy10 LMRoman10-Regular LMRoman8-Regular LMRoman8-Bold
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS 1.4/WS 1.4 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0848
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492847AE57C85675CF04BFD1410B56E616F
68C3927EA7267C0C4BBA87AA3EC7166170B80B7355E802532D38053D427DA3EC
5D297AB110438F9AA9CEDA887E63AD877E9208260AE6AF24100E2B365BF89C5B
679912C69C51E8D0541100E3DF71D501F4BFA0AE8260EA411984C107C8FD9285
F08FC3C879AE6D42023BE0E114B374F049F75FC09E974E64A63E36F76D0DCE3B
3E57F4A1C80AE684E56726F52F4A49A022808893BADF86ECD0EFEACC9F5B7E84
1DBC5A753D3803C89C438B0FB99CAF607B7B16433C977215E7F78D80C54177E7
D853C4EB05C108B4859A21AFADEEDBAB163F8C1C822C4DA3FB1A29EC3ACE79A8
C5A00293FCA8CAD6BD2A94098E88D45175D4D9A88D0F77DFD5C14FD6081321C7
AEE0F7914B79B9ED057E292AC7A96CEE551D96F4D85369D2B4167C0A622AFC28
80C6D6FCF36412F8EEC622F2783C9F1A0403E9A5D876942803F08147525ECF7E
0304D3BD24256912A2ED3C59B32CB4091040E21EA8F9253E6CB7433656B87E1B
0A17BA09B89DA54E89C36AC72560140421800FFBFCF4372B123AB0EAA5A28063
EA72DB6C8E32FA349461C1A8946B78E05C110976E5B4B81BD89C82D81AEC14F6
8511ECD14AC322A438BDBC4262A26D679ED4D87F89B2D3FF1A88AEC671EC30FB
4DDA9E1BD3A55C4D59BBFB7F5EFB232FCBE3C721D8D181B02711EE2C105FBB16
BAAF98F469068B96F7ADA96E4C628D450E7E1B4025089EDF05D020C458C7F3C0
A9E5F676EB11E606954B3A3613D4E1DE3727C04BAD9177A42914B371F4FECE62
5C47EC539B20F4FCFB72DD0EF45CC71FFA185F653F299CF0858E25008D1538FD
4D2748FD791113395323560E169AC68D884E15ACA3BA6934ACB18CFB0869D655
CC9E8B7B2A883E868B7D9AB5F1966D7364A38F999D57EA93937C58C1343F917C
4B77C7BCD394C7A7C155763DEF4609925F2B5D58FD32BB7BB54CE2DC59D09E42
CF83A35DC7802A111D96E6C592F5DA313DB18AEC1CBD734D9C289A53647EB6D7
735D9E91EE200FFF4250D413CF779E46A1A18E239FD522EDAD8AEA7F7EC5D653
0B3F2D2A59FED4C52F3D93BEEAFDDEACCA99724FC6248DFC44FCA9723223CBAF
554E37F1F63A7CC7241B6A3197C6081BB1F3246540E952D3CE37E2F63D1B34FB
1EBDC9A60F4AB8C27EF1D4E65E5E97328618BF64DE4BEE2CB0F263EF782C0D49
E6AC6384AEA13283716F280C3478C8EE4EA63876BB37A5F17C733167B2CB7DA2
0C340ABA91FF0B3C926798326D283B4A92B34FFB6273EF4F8128FCB12A4F2C8D
13768637D078225DEF89BFE7329F2B420491CAF1794C18E8AB1DEA1749E877EC
12EF096A2BE42692EA401E2A3A11F32513AB4829EF58D62DF6C4CD5658D8DEE5
58D56E17F13ED15C8E490FF120C6DBAE75E3AA5B8D06A527BA83FC7759239ED3
2C9487CE5089F76DAF6F1AEF63D276707539A79C0AA4367F4B1359BFE46E90DE
9ED306DDA195B893F42B5C037A98F21B48AB50B63BC616BA3F3C588FDD7480FA
2A14FCEE4706AA003DAE9F92D5C55727F7AC23F58C8EF808B093595E631544CC
051BAFED695D5C51797C4E9E14EC72010DB93C1EE96A8C4EA4856637A5669681
D8058179F67449AE6584B538A32295BC5C5F40DFC533F5B87A0D016B3A67CAC1
CE1953C9CF7334F7F3605E4426785042123F5784844950C5E30EFF8683D73019
7DEDF1DA5A31B8AAF9FB4F4C4E0E815AD1282D0003D149F5A1A1742EC110A5AD
42B236F512DE383DA77E7ABE6662843B857DF4EFF9DA9D4652CE666141182F86
363104165800E6AABE35B01B991AE910B7DC821CFD8A6B5C7F4CC6FC03C091CE
C66A50A9349FB3B1C2A695930A19809C222D522ADC89CF698C61B861F1B4CCA1
2CF4B2481E472FDDC90C7BF552E25EFA727413E0F7C59661F1ECF4DCCE59D724
2984AFC94A2233E590A733DF8E98FBB11F635BA1B2912109796C1C7ED9476FD9
4CA6A05BB8C3A756CCE5D25F8D2B1B99B73FFECCAF7C7531842B95B7A4A67149
2A44B7F43E4219879931BEA2B95C7510EA319DE31DA5E946E39856B07D81DF2D
0C98672BD99C91405F80083EEFA4F53DBE3356BE438546C0FB741303E40B31EC
F7705509E83E336BA0A9264629A6EC25B94E589B80B54A3BC1358EC3FA22E15F
C60EF3EC60091856CB963DA4B845FB3276FD3F0B755A375F5C9D4F03D038DAFC
2F7B2FC44D874EE1812B3F153E63FE095A87CC113B930AC5E5548B3701982522
7FD74D17B8E54FAF294389E3804F2D8827B368FD56FCA8E01B8FEC2384E26B98
803679524D46A5A1BC4BEEC335A5C78E90E121BEFE8C3E1729FA4353EBB08AE3
9BC8B715A541515BA68D3264DF63396D5C6B2FB989FFAAF363FBCD811050AD49
BEC1A5CCE5CF234EDC9466F1B88FFEF31523001CE48D8F355B2BDC20BDB11845
0F9F9C13AF26147A6F94636839CF1075286502027833484674C9ED2EE44D10C0
CE6B2EEAA9BD1B7182CE9151EF2A4AFE4FA32112954C5B86EF7AE3D015FAC570
F6596AF00C0F5C7D6336E0E19CA338CCD852E4AD9EFDB3784C6366C4A1EB3950
6A273761A898F69A36FA0E6ADE17A52A09061F578841058F3FAE9DDA4237FE83
F267FB2E492AFCBEF4C8E9DF3FA6967F6F5C9216D1F34F1F9025773C7EA50CD0
1DF13A42E9491468078630B74E277F5C32166AB539082917BFF7EF652D589681
C4958EC2FBCE0E01F764EC4EDBF1A7E60ECE54CB38A7251F23A0CD43453352D5
C5AB3E3F4D4D5CAD9543A3ADBD3DA129B2195F29379C4B88C50DF01F591763F1
6FE1D1CAD9382839AE8C789A6339F7D36DAFE163824896DC2C7B007941D39239
CFA195CE54BBFE9F13E4F119193F62F76BEAD5C3BEA1E7044636F7D3BAD00C99
38DA2463A42D22D0C888082F3DDEF6558D68EEE57DD7DE2478A2B21894DBA290
3489ABB6B2EB9F977F3F4D690B31E8F6E08514B46890A7D87B06DD81FCC70783
17F01C0E31E1A4C310B0C4E5DAEDBD08EDBCBC3BAC588F367E850F9D9D2A9F7B
17BDC34F34DA91337E5469B32C9ED1980C4CB36101226D4929EE7C9DC63EA8F9
780763E889B13FB2BC0150921CF2C5C11A3A9A52E09A006B8124A80BBF26C1B0
D309A6E8E5F3879805D13FB270799FDB98850AC5630E0DB9EA544860D688E9CD
F25E98769FDA84FA98DAA60F8B7B4B80EE209CC66F763542D242050EE1FD5980
C610C2AE6F94B0997E15984F42D43D629178D72F01CFE1AB79E6A2F569230CAF
55EB6CF686087DE12B3D6D19E4ED3FC032610EC4A97842F2BB59894122796E46
19F5CE7FC3B92ED8BC604ABBE0575CF97D126E1669A54A08243D46A59ACBF3D6
48C1AE05E9A2A4432B7BB69C467659C2247A0B25217E43C8C3A9D70992C1F31D
C6753222850ECF459A7BEFF8CE272B577AD0616D09DDA2A16584C8D40E7F673F
BC859CFE610AC653373F102E395262C8BBFCF5C16E64FBCB889EFC8F5CB01A1D
7C7D9C1D968238CADDE66EBBFEDF28BEFDEF19D1BFB83991280E8AE164321863
7BFE082D98512C9D23F5C73C6D1049D98797B1FAF91561FE88F6B59AC7CB0A06
1D63D174CCE92A2B70638D24A5445B56F34C92CBD4E80331798E82A8CDAA8046
3BCC001CB369CE5D0CCE7584FF1FD3333EC86FFD2CB48D694619D3B6F77D8D87
56065D4CC919ACE44690CDB5907C380524B381B6236164777BCFB2273E157B01
E8B11BB02F5772F0FFB1B81C3ED5CA1ACEC503AC5A3F9D962D8B23770C91FF42
EF52D058EC3C0B13410D4DF0EBBC7856F66566786826CFB01F22A944EF21FAA6
C12D3BAC92E531CF3456DD2778F1181D774D8A4CDD0A5787C961FE2354A448E4
6A492EF0633D73C071CEA58830A18AE1C56554E8935A8E29EA9053C5F3EFB0EA
307483F841C23B766D1CB22E9EC67D91F7299AAC56823CD4BE926D0EE4E8CD01
599BC4C22A42A4E9F9365D91CEFA249A039485BFA31F9D1FFB1C157CA626EC05
6A68B66C652833CDCF08803F40EEB4AD2BE99A7A0858D7D26AB192CCFE79C07C
7ED5FDDA9D4AE4C409B2719E566CDF77D94A229FF53A0011CFA86DE80FF60B45
926E88D1714610671D3923BAB73DB3747D8AA14EC6059854FA6DE8AAAAC0A855
AA667C6821D655778926F8FE0A064A24CCE1F22EBA80314370DBEEF9F7CCD561
DC7ABC387CDF2B6C6F1D7D2B33C37AE910E603808CCECEFB9AA802F3002A294E
48053B5402594A8D6CBE3144E3F023BA7B594B3C738E3AC8167A29AFB38F8708
85E83F0F87AFCB125DB47FF5134FDE8B541232027AEA2735E8E862CCF28496AE
C62C6D2A9117340F3205C1198E32511F945E117287AD86E517267E421D37E93F
670D79239ED9C23CE1CB161F50091092627CA0CE851D73E08A7F3F8BC5E58313
03447C940325E2C4030CBF4F39893EAC86362504A872500F5A72E99FD49D0BF0
C12A7175C6305BCCFD126A1E65396D8881438CA223336ED74D2CB53F1FA77EA7
4787017E92DDE4CA70E9A409216C2F6CB26B9C95E60D2DC40052D3478EC279E6
FF80B23C94DFA8ECE2B7374827AE168634FA007F8981ADA3D0355AF506D88E32
379E2C8F02E1379F36DB5250CBB102B21359C32200E796531DE4EB6632820659
74F633EA0483358A528D56A6FBE9F3002E56EA59E9C2459EEA50D4558727B404
136F691BE1541AE3E64BE682605CE4EFC5FD59DDB4A16140C85D55AF2AA52C92
EE85C37881985A9F22B7E3D74EBAF8B072345BE26EABB77DD815A2C40A43FAEC
418E16536B30D75D3462EB461C609C8D47E2B111C2A48FAB1C999BD8C3910780
3EDC1CB30FFC89509DFFBE1F55156A7951B8EFD72B485F95F8AAAD655EC46EE0
B1269CC8781D7AE8780028A6CA54C77CBABD469AFE468B7950BDC321CC873A5A
19873D58DA915279D4C414D7511069F7BF2152984266E65DE1A3A4189DADB602
2E5AA9715DCDB8A3D3D1E9FA06793C754111044E6BD47DD72384082A6ABBC6F6
2F9D368D0F93C4E2551F1E1BD1968BA2383121482B7727ED2FEEF31983E07927
F8878102167E6C23C85BE7D3C1625DDFCBB59703CCC55D0802F05B67594FAC20
AE98EAD48AEDB936A29293C513AF98CE93D5063F7D87E6F759A29F32ADBF5D37
B697E1824527ABE5B8F62F15899242626C9F22996711088F3FBA80E2C1599E58
D1F25BC54EF6FFB05AA6289ADEFE783DC387F689DDB79FCB67920CEF937822D6
AB50026A3744BF5BA2E45A826F84216D7EAC6B9A8134C4E80828B0B849B269F3
81281EA458FF71185168B5152A74B0D383A2088632E52D26886F9BED966ADC9A
C306ADAB6AB6118CDDBD6201B83D0E86C2405A02517839D51030B695AE25CFBE
C0CCD5FD1F4EFDE44C2E47EF8AF9790FBF0497F8CCCE3002458D6D475A6DCD86
4A1AA95C1F47F45B554C5DB2004E075F188A9FF4DACA08F258DA5E279D8FA49A
6B1525ADD1FE7E7420B500C440D364CA8C1F272323156F95644EEDD4DD907472
7F4FBD3C035BAEBD18239DAA37517B3FF2B21C4398EF3C4DAAA73D2E9E02B7C7
F7C277A3DEB8EDC0BB83249CF414967A020E5B8B0F4C985830CDF5E299E0C0F7
F1D0C83ECE888457C900E82C4133E43905EE91B9C549CE3D9E2806607E422732
EBC81F6DBA1E01B1AC09C515B31676917D11D6AAC4F958DB61B556DC1DDD04E4
4AD3FD17A2C6A56854206D95098E2350C75AD80244BC4D6F73FDE34846245FB1
9B5036E5A40FFAD255002931AB82AEDD0BDA2953ED797E7569F71563CA7C5F85
5EE5DA523977FB149576AEA5549B61C5475A0A6EFB0F2F0056228FE28DB2DF16
0599E3A94522133EBD574DA06353DDFA9C87125E5C9B69FE0A5923903203E49B
3AAC7F81979ECA8231422739C0C58B4ADD86BF559D2F5028AE5DA5139E8DBFBE
BFF644019D08C6614921A8C129938FA16F33A24555973303D8CF202979524863
3B82EE3BB7AB14D465CB0E4F622144E415EA54E08AF6BE26B0A20ECC10367817
3A5E658CE844D4F0DDB7D17CBEAD0F5C4AA381B8581DF3F82578AC6FFC9216A0
6EBB48A7D5CF358A8F64CD0CA264AA0476CD88D97E2B329ADEF2F4CE4EEB512E
AB95AC899DFB6F5923EC7B3CAA8F046B4CA5055A4E0C3CCE2A30757E1385F846
2D0CDA1D4FE31FAC01B3BDC0B3A663581AC44D7E7652336E2DD2A86DF840561A
91BB942FF755C0A1B04D23F4F1B2E01628DF6C5A021D50886FE4E385E858EF6C
F333D987339F41F2B8899C23CCB7AEBB5D60F011E319A23D2D54576AA26A3A33
3761183D0C720073C05A2F6D7CE4EF45440710DCD3C90B959AC3A19FA9D0303D
AC5BE0058B7AC46EFDC42A3BB7EC99ED28D2B4A7B685B9B278C77FF850296A9B
645C8A6336457245B77DB5BED5AD69086905342282DD090F725D2C12B770B646
6A74DE9180A36895C3013A45F8EFE7D6D6BB6660DCC1DC1737FCDAE025AA1456
472B68CB75E7DAECA154625D290753F8A8446BCA2EBA9FA3B59F1ADC65ADE10F
AB296A939884449842FE797BA4473543F1383986C413CBF283AA4E1B6102C1BD
67947A2465141D0CC94768B538891AFC33B1E9929C9CEE82C4D82646280FDDDF
C1EE81028E13027F26BABF3AE38AF0FD6BD081E5989BF17241D483037DEDC584
02CD8195B2DFC7EE6F2B321909F5D067042F1120EC56BDFD3602CD8C6A407734
13BF6452ED50E0454810807035BAD9B23E06267D9AB0480ED8F243C7A7491600
119C6CB203E65CC1462B7C3E811E4FBF589BFD5C15D965C316B3A1FC467F98A7
E2F4511DEB9FBAB2FEDC321C7614F30AC150E4622CB7BDB175B84F2AE6120EBD
D792769E7EF80AF8B32B1A30C9F7923E3E12C1BFDDA721786C43C071BB6CCB2B
F3DE8FCCEC8F095F164208E827A9C73C4F67822AF1D7550E5E7E677064F1C129
1F0B78C2066762B72521D78213984E0E177E9C7360E93C5A09A593319D055D1F
1BDC06C89A7EF1AB04C8E0875032E159E9575BD0F57357F4F5AECD3FDB730F5E
8ABCD0F27FBE6618401044E62C2B391F092EC6189F1CC15CFF852770A7DA208B
30DF26FC381D8D871D0D96566F0E4910D171240DF50845BAE801DB3611D794FB
1A1D878BFDBB49FD8E8E0643E025D14171FA920BEDF8462A59235F808BFBFB49
9AE48110DC766F03DBCC2EF01DEF4ED73A8A2F03FA56E8084CB0EB2D296260F8
732F097B701FE5EFA156C7956A76B5B492DD377563ADEE56C89049C590267CC9
BF6DFDED8BDE4E6DDEE9C682285AE37D8AC7115190CBD752E07400997F4C6EA5
D37263D62BA3D19ED651A41ED7303D15E633A518E3E329C40BFA2C5B33563BD0
67E0DF4748B39BBE76D32933BFB3185C3972FFB30AA5811AD7326AE12B896F41
1E09C15B0506D1F8055118B662089EFBECCA2B2664527B384EB259A7B19DC09A
16297D1DAF8473EE2767CB54BCC2EDF8E29F24577C84828DBFCD3AE3810C3DA3
34C7BAB0E5221546611A5868200841C85483A47C5E99A7BD7243045EF3BC63F8
82AC60FE2A8570054C243ADAB55F1BD0A2AC1D73029F6E0C0DFF5FEE057A8A19
3850B5C51C5B6B1416CD777C55A5760243B692C3529814C334576810697A6DEC
C9F689CFD52924ED65F147D6F231B461AF422355101AC49658B7E9D461707292
E5C5A6EA04FCECBBE13660D5360139F2D70C178B7B2CE55A8F36653841CD79FD
3514557D69134180221A48FDAF5135B233283FECCCA13A43A6EC3478FF768CD6
0F833329DE81E225EA78EC576AD591F8B278C7D09E0183117AD7AB39A00C0093
3B8D23BE2AC55FFCD92B9F3B1B48224627B776221603B39A31DEB68B5D80C88E
CE66BC6BC08C8DDDB541B5711C940798D95D2F9B88DC471C9BE3100211148796
DE969455E244A59B27F679A7F31971CEFADC7BFE832A7BF7AD6421FE060E59E3
6F66CDF7F981B9F838C1352A05CEF380FE489886299B39509828D6CEDCBECA38
F7FAE8C1363A6CBD8AF8B8B82160FE185C0962BAB12D247676FDCE51B2C79A29
F57BA500F6CA058ED16528D28E50E37BBEB1D1554503645B6B0B449583439996
D196BF51DD4FE2CE1319E382F752A14BDA4F15A736793F0C6BEED9FCD9CF230F
4B050408E3BE88A5CC380114DB40B124C844BFFA3CA29E638C13A2CCAAAB0BFE
5251972EBF4F499020E0D842308DFA9F81EEB95B1A738E62B64B42242C18F5BC
EF3BBC0BBCD8156A6767FF1A48838221A3FAB6E8027A10873C04482ACEAFFE7F
38132B7E187B4F875CDC2D0810206BBE5A330E1A28A9EF2072B2957D98A12B7D
4072EDD342E3811CA7D1C9EA1C718232391934FA35C825C0FCD9F2CCD28DE83A
768E21C2C2489D209D78E051E6002626754EA9AC10BA817F9A19D5DAECF77E23
9574B3CE53E504C6BFAC2BEF3663F1C2350D6479115D342C0995C6807B680552
4A6D24289FF6CE2EB50AF4A6D84C017FF1B1FBA0F5D7D4B35D4E24AC4A11F6D7
6801BC86D586DBA09EF291CC2E8D8CB438052AC2992420B41AE339D7115B409D
DFFEE275FE0A2E022331F1457584378DC490B04B0CA0A969E41E3F04FA629E2B
6649661DDC5D8F0FDCC7AF4AD93658D416C86E3048847925F298F334855CB73E
7A7A981C9CF9174322CC22362D93433ED27CAF0EE46A887C53B1B7D289B8CDAE
74EE3FC78C9EE6F2100DBDC9C4A58C2B81EC99E8E966AF3390E3FBCB0ECA0A31
7BB545FCF1D4CC29C8332F46F00388F75E6073CB51481ED7C692CF08BD1EA6C5
B30BE280953FB8FEC7B20E7615BAB550A8E0F36D01E48058D763BFCEB4A370FB
E365A4708189A7BDEAB2D32A6E464AAEB3505AF4F5BD11A19B2D697C75CE2B61
71EA0D39805B15434A0372166A0B047CCC1069527F86804DA275D8C6F885EA23
132224B1A63A6CCFFC30819D7EB2024DF4B5C25B167B8F5D1F73799FAF56EC87
DF91F6747833E62A193F3DF4A8D035E5084E8F8E2DAB2C25D461E2DBAFA96610
EAEC17461B0C5A9DDA5BAC7801BF0949E4A2BAD35ED28FC6DC08417E9CD3E558
0A9B0D04F36C41B2F67221876310088E6021A6B8466391813B9003AC9B950A22
EE900DAF6DA2025E64E8C5787F9D325E171DD4BFC53E2E360FC1E61FD3C00F8C
C890179E563FD9E79C9FBB0F67B045A3D18C5BF77DE0552ADA3E14BC0B82F2CC
37AE635B876298B0E30173D395E1D941320BA2A64B42C1373ACFF3D10B3FB881
EE328FEB0692AA733A3822D3CB26ED9010DC55DE55A488DE2435E8E5567D483E
1C52CB78A2F690380956749EE3C9A2EE605514EC228BB66A22545962DDA9BE86
5B2164A55DBDF4EECEF94DA40C621D4133C6B3F4FFAC94FA7AEE0D09A156F4D6
60BB7762608BF6F493CA629CD17F51C40339BBD717BA9555F70DBFCE390F10FE
15FF7FD17D352B303F2518E05CFDC4DFA697683ECBD0F03CA3A8E4F5A17D7633
23249C164B1A53439CC169C9322FB6BC949688B30F0B4F3FD3AFC9CAA04A796E
5AFB8296871C07242CA31F3ABBA9BCEA96438C90156BBF29B1FCD86BA9F1280C
A84AA8CF15CC932934227CDBAD1B668F164C19E3380ACC2FE5A47F2B2F394BCF
99217F89A85DCBAEA46819A8980A28067452810D07BA9A666A06FD2EAB5A7C83
CE622967C86ED8157CE246CC8D5C9E7CF1948D58FA78440BDE4C69A4A7173DE7
9A0DADBA75059F6C068F98C3564F42D2F7F26014DE37C4DCCB6B3084AD928F90
A32C4175B6BFB279024EAE1B04D721A6C544209B1615938B81AFA5C99B02AB37
CB7492A3032BC29ED7FF2C0019156FF9B33C8FDC27D67EFC22C9DDBF49940C08
CFD2C2636C0FFE8BCDBE3CAE02701424A6D49E4995AC91FA8947D12382B17FDC
EBBC82F61E5EF76E8794CECC64DB734558A0B4956554FEC18293C59D67858006
7985B298D4B56B91A01E225A773224878068A9224DBBD0465DEA4E75D6103602
0AEDB7754226F422E9551CBFABC20783F6DA40C59AE09ED22AE971884911F452
C339E8DC1B81890E9F2A1A8AFE1C6AF104DC95DDBD1FA5C730358B9E18F72045
7A4AB35C68C07865063A2AFC57C766B2E86E8E20702E2BBE02E0FDD97AA289F9
6062D489E90CB2B7D7775E395BA4BAF7F82F0850D4EC408D5FDA4AF648B93ECD
51D99F300E89897C9E52E20B6F985FEC3214848511AB3AE96BBA04B42C23B10E
30E7A4A7569013B23F6E52ED2F1DD38A57AB9AA6FC582E9A9B3EF96B5190C583
3C98E7E802CC91B546F554A4B9785B4E057A1577CD58675E2578A9CD6E1CECC5
7FEACEC6454D27EAEE57EF86B63BDB575DAE9F7E1E55AD308CD97CA63ACF5A95
D1A9E5969D76BDE4FC976074F2D623721D38E3F41184A7D12E20E0DC745A8398
563BFA688DA6C2BFE5B5D57B4F257028C2BD74CBD41DFF5CB88D0BDCBB4DB847
0F8A60F010BA060FE66293697F07A62418DD31C081D4506D73037ADCD10E8F00
818EE88AD2EA98D6B7F1EE7C57DE49C8017386EB0C9E4399A7AFD8703D384864
AF49F596DDF95057F1A668F7137A0C348F450B13EF02D749A5979A885A0A4AA2
6F19F8348EC62189B42297868AD7CFB9939DC3B2F7E23DF36325C38CCA699BCE
ED8D80A2C0DD0A6D3A73572D79A8CBE198C9F63FFD1470AEB4727F317BD3C4E4
E674798D1931020E3CBF159A4BD8DB7210331425C12B9C4F84AC252F855A772C
5BC288840D93CE849E11A2D878FB2541B561AEC1AFB3BD19017BF75D451528DB
B6749EC08D9B25CAC699CDE4929FFC1FEA0F32D20379B3A56AD0148429BC6DD9
F89D792DA8AA54296AD5CBF4029F6829A6B55DCA4DB5036675013A692E07729A
C192E979852EAEC1D621492AE6D4412493E0CDB2D4F9C52FE65532DB26700802
2C1DDC0F82F21CD0C6E64F61365C4228D7404756AFF88FF10A172C60310C10FB
631F70026F44F1431E1CC382E7329ED66DE15BF2428F9869F06659E600067CDD
EEC947CC33EC903080C2E498998FD0372A9663CF2F00740E383BF7F27610CA9E
08C0A5CB8CC499B7E2DEAA16597E0264A7F978D83065BDD9097F297EE28F3348
CB30D76BDAA84D2E933C94C99D13E74F1C2BCFC1455E18A3501C33AF14F3D1F6
3AD8688325E8C8C6A214BA3238EE22916DFC64E9156B8CF2C80FA084099F56F7
BC00D85F75BF5F32B350E2CF46BA0E8D0120B84DAA5D766B378FE86691BB1283
618D234ECFE8B485C8712D16AAC5E5F9B9A5D0D40021B4D64A7FB5914F07F95F
0720E5F0CF45E34F3E676F57892E7B84E9F184214B4BB676DDFF2B9DAB14A412
06C3350B9DFC1DEC1CA5705CA55B551ED33D19A1FBA979FF7BAB06B1AB21AC05
1341A0D26CF9515090CBF63F37CA1E51253191C462F39DD4FF75032BC8A1930C
A75318F382399E28AB06FCF00659A0FF5005A959C34ADF2D9D5AEB2B1483938B
B1554AEB188C4B47FB762975E14C6FEAB7BBE41FD692FBC238AEEC03772A7BA6
764A304F98143B209C374E832ABFBCF5DC7E05182EAB8A2552D56AA3C47CCD8C
1D6E639E7282DF796220D6EF04EA845A6241FF262C6E8C4C3F2D123277AA83D6
99485A7E03E71DA50FB2096EE5DAC923CDBB8923CC9AD1A901D6705C0B8ED3F0
313696F1B71E657A0B5233DA1DAC8F01EFD3C68B55FB44300E0B11954919C150
83CF3D5E1221BA2D0ABEFD2BCEBB3ED6E58631E2993770CFA038C3DB87BE3969
47FBE8692B77E9A6F486E23B53BA096EE9A53EFC3D43014A8761F3B973F45C9B
432E96C24673A9E1C59F5B70BD2C9B7D62FAEB611F9B864A801ADB04F4C74BE0
C7CA9C36E787862910C4D5B15BD9666700C095207E57106950D839087BE28F05
E813684136F6F25950DC671AF32CB7744769A4B91682DE99B7132974C601B6FA
29471DC34814FC81A1E1A5155CFF268D0FDDE3FB4F9CD60DE04863F47F7A3607
969ED203ED82534F4A6E7EFCB1F3262D98D7B9D72B0CD6A171EE2C4287DD7823
FC10CC77248DAC4E0D14CBF511921E88CECE8AE0062A6E77F33EB4896D04E61B
913B6C41736F93FB66B0540A87A937BE61FBBA74441A2F346AED22472AD07A33
8DB2B6FEAC5843088C799DCE18C6765C8FAB7FE241BF38E4E476DA4B7C3B8043
3F9B5EEAB01EA2E3783E06B4B229FFB653DD37713E77F107191BD84EACA3B6BB
0E0B6F65BE4FFEC8131FCB5D2E72E76448B6CE2AAB25ADB6B6B2AFF57F0B294B
122B7EA72AA2C2EA54482A16933EA760142ABF564B963D854EF1E3A259171749
D0FAE1D3030BBB940F9EC37DE841437560CEF500FE67D124ADB60BF52E4E9BC0
FD01C0AE10E6C52BCD44A4F9A2E41B30E5C948FAB0C8D1C62ADC191B8839074F
73F9FD6188C4727BD199CDC8B4D545497B24E484023D78E9DB5A2446FF209D47
29BC929F8367127B065F507D69BF5E60C95A6FAC2CF9D670F1FEFFA507C78FEF
6DEECA5A1D957F459CFD15BB117B5C926B46B20A9D6DB74B82604E0C15EF7473
6E17066AB07CCA8AC7C172AA8EFF64BEC027B69AB4C312D2954DD2D038B0E94D
BFDF8A78969FF3C08562DE4012BAEF33DC76E18B3B553BB914B7A10A1EFAD6A6
EDD26E87144F70B87030B2F746F8517795ED6B0BE7AA1CD29495FCB31167E323
CEF1CAA67AC1C969BA6E5884629F7848BD9CE2DF49E4E3788194F96259F8A07E
D67DCE8B5ACA00EA4C0D6C755A4EFA8616E5BB1DD3BAB615DCE159D6202519C9
E8926D3232B16F984C8AA4003AC525C1559EC5332658378C37C63F8B023CEFDA
1360E320862F2CA6E0258504B2333E2C5FA2F74A1935932332501DB49755B7D8
3FF4D35837E9B93E79D1D9B0E84535512013C74769E497F75035182CA7E70AFF
5B14B02B75CBD0738E35DAD8E6092143D05A5C944E26BD2C0F0881E7DBAD7A90
23B62FE21D966E4732BBA16E596FABF669E7BC9D6C24036B7043B35BF3A8F5D6
96D68954A42D39C58C187CE8A2A7F3F41BFD6669E10440B7A9F4A8FE35E9DCF9
AB6767ACC52B532325C2B9AD813075017DAD96DB664900E8FAE69CFEDAD61B23
CB78BD4F91909F21C0902B791400FAB701A48D87BC136FC798E09901C424769A
D6D323E3FC4A8D4D5A52E7AB43ED432D73E29A937570A44435E8833B6DC2475A
13A04C92E621AD35F605687A8E51A9A8F30C9547136CDF339EF7C9E1DE2F66F3
EDF479FDEDA63FCDCB2A1C8F43DCC32331D34FE30953745E24926C9FD4A4E246
C6FE62F54A6A98F74CB8D2B41B041652E5680118DBF07FF4ECD92DCB4CA47ACC
DAC241B3A33C110A6F21AA18D5BE49AA798F622608FF97931D5C1919135DE2A2
E352B6B337ED8BB47F8711FC00E3CF64A7FCA73646E77F36DBB10E1C1D9B67AF
13E699A90C3C52859CD5943E9B3BDFA7920FC2958C1D8DC57BA36A2C2E7152C2
2F7273303A29EDB9B07BCB5AE6068BECACB8C427695E35ECB4F39BA8D1EAE0C3
5455C05E0E2FC48C7D3B5A8E283C3A78951869E523AAAAF24883F6F051284452
372D2E75F02EB011F3D6F6EEB46D7BC3B3B23CEDB8216D1068BAFDBE642C9634
11F0D2D563BA3EBDA1E34456DACE8CB12331B3BA3DDED3A7FB4C861E01F703AB
07999D5DB888A574900398D26B2FD9E3B359DD455A1FB53F22A6337670675392
95774CC8F7F1F3D95DC9F757934F1CFDA74293423C130344CA565E122AB18744
900A3712D37A715BA34E13E06F4825097FBA71D41C6EB90D22EBE66521D644FC
05372893FB2FD2E1C1F9A36FDD3FC76E1697E656C7D2F7A27DFD9B2DB2337FE7
0391282CB10F3AE491423C3A7C19706CE7D66BB1BBAB4F21A608D310D94AA760
40FE4D8B32267B2FA346A72BEDCCC3641D24E30FC9274961C7033B70A8C957F7
164643C27621FDBA809538419B97A406ED99DF26FB66C7A4191B7D7CC1E72FCB
A7B2C40F88C8A59E0776200C13160413390276743CB65B4DD0826E24F2B9C501
3B33727EDA1BDCEE0C96F65C7D681AE3A35741E3A04EDEE49B9A71D9540A7511
4EB716447569B9DF632A105D8EC84E204DDDAA6B7F12F901A169C961C450A4BA
C0074D721AAEB71727B68BA23B3510C5044DDE449A42AA96650BF5DF1FD9114A
F0782EBD35A7B30F3B71AC073028F6724629D9CF821A8808F9FDDA598AC695AD
88708E127A1ED5C51DA9C713BC7E31E870020FF22439C9AE5937EC7F21EFAFB2
A43CE2B3928163793F569FEE56276CB5C7A5863400BBD725BB08927B936A1285
ECFDA780878CFD111E32142FFB96FC16329FC50FAFD4C1F49EAADF4CA4BFD401
632B1B40B98289F70B16C1F6ABD8A15E457F13BC9CE0523D6C5977022D18762F
7420E41BF273E075FBAEB76ADC337314DE54105AD6156AE0D843B9F4EF013CAA
7240AF633C40A0D6328D67B9844EE04428F3420D18B2BAFD40458324C734CFFA
54C29C590FB3A24C4676A6B9D5D86D966715015951961846B42304502B495F3A
0157E54C514E00A92070DA1937464BA68950467D88CF9CDE2D2AB00ABD84893D
AC9636DBFAB0E231BF351E562C3830DD1C6912EC17AAB1F1FC64E0FD7E4CBBB5
F352CB1F653CDFD2E53BFEA178F611B8C75C3C94BEC08FE29E580B0E5C0034B0
3C875AB81CD9AD69D475BC25B84D968C8BC590F9FC8D16121A237C2E88C177EE
B2F97AF1D10AD953A87CD23EE34B9A9A463F807F582E5ECFFA273F12E69E0BB3
8A1310A30955D87D72898CCAC2DEA4906A124C8E5690456AECC655D83C6607BA
136A5EC17649B5331341E9D4EEB934A0173199B6E377AA8255803096E1646B3F
3B91AD9F52854792C3A98ED50515E231B2901C8C2DA92BEE02581CB17D2353DE
9CCF6B1F4C0F3E55CF72A5A7B30C05A2886E1AF8F21DB7CF6990A76C773DB994
6D57055302081A52B65DA275220604A64192CDEB102639BB7EFA5815163EDBC4
A2F8FE224F9A8A907013B50B5359021FF20CE754E013E32DC1C8E495D38E03CF
C265B328972942589CAAD613E70EB2CBA619E1B787D5B5689A1FF97C49CBA13A
C208C324168D6DAA0DEEFC69380A10B67CABC0A5FDAF1564D01D38E70A6639CF
861E8371C24B224FBB4AFBD151A6AA9C626331079073168C4D2A07F2F83A8E23
1D0AD06A7A6CF2401C8E0965B02D39CCDEE8A4F5B8BAA0D6CFE4616B871C7AFA
CD58F93FCD83DCF3EF58FE49B5BE84E49DFBB4BE5A76DAF30053B32763A0363B
E20952BCD5343BCD5A2B2F97EB4DEA849FC61C4FC9FF6A194E6CB7189D3A039C
2C9EF3AC03E4C16290796F9FF9A7AAAE243D962F6594FCAC3D982E2B299C99DE
C4DD3FE28B9BDA3E19BF18D835C8D70C1E44436932104DB3AC1EBCAEA9E63BD5
473512F7318F4E46F945EA4F0612E2860CD30EAF7AA828B9FA9F5624BB450B2F
22AA7623D59C4998FB6C6BE82E56116B568346C69C14BB0B45F65EFA8082531B
743058E2AC31F2E73A9CA1A4FD2C9CF6C898EE6510A2EC593B475F93FC59FEBC
EEAF5C10EC704A68FF24364E70E1749DBC2EA85F33FAEB94966600A8B720DC21
DE0755EEE6F50ABCA04FB50EC126305AA1A087B1CC97D27B3DA9C264BCE1FB80
394919066944F8FADDD13762BC512A03BD408B213B462155957267F24C640389
4A7128C92EC819DE7C585AB4FBC90851D3972917816970D0335A7000BE90A2CA
EF0D45DDD780BBD1355B997DCB70978CF0B924460B1BA028B9ED7BCA294A1C24
C4B3F210FAC41F044B3F209A5B0DFD800D779ED7D54E9A85B632D7BC5835CF57
2E8AAC559F33FC9278A5485DE0BDFBEF84C96BB923B1EC82752887D7C06625F8
1231DBE1B8DF0969C8491B2E2843A19349EDFC2930C52C4F7E92936C486B9DDF
7B52398EAC97B126C3D90A10550FC330EF8BA958D5182EAECCA78D70336549EC
A933070C676F10D52258AC981B729FC76D26A376746FA1F90E90A5E4C52A5765
5ECF499834A035F934BD8FFD9B2AD869F73B80505D1560A6014225B2EAC9B0D7
FB39D2F8DF811BFFEB62BCB83DC1B9FF80A0D298E13C4123563C5D6ED62F14B9
4E5169C9CE6381897896D2B93B631FF9D11EB2D26D072D68A9313D1673210A0B
4364A81C97D1D05D48D1CE1E18E9A3C653DF41A17AD359BDD377441A1D7BFB69
61F6F79DA08D225956A734A3F3974B4CBFEBB1A625345E24F4FBC35B0DA133F5
B5E93164D533AA6F6A9915CCDAF9F5116E406C5CCE152CA0168785FF94E869EC
82DE14B8681A4916452575C7B3F2E6AFD4B800D58CFC32379D202E9FE870D53E
C343C119717FC742585727C12F16E867F7B692C959CDB7A45A9A1A2AE7130527
C9CD10E8EDA5C46ACDA49861B3F64A276F528F0928C44A0883A7B5BF4BA85F16
A8B2D3B73C56E4C2809FF4C630FC6F9B3004686FDDDC44C7B43B4F3B7B6BF2D2
2AC1BD7F4A684B18367A5A527EDAAF9A3875E2C3422D257979A77AC8DA461E65
04096B8AA0BF5F3B29BF6E97EBB93A40226B2A271AA2E5CE96C63CA85B58E889
77A325D4E6BAAEA0E4A647143CE2F2E6D5C2838DE14670B7441645465ABB8FCF
0FD7087915C7005028E37D99E2E7A0B58D4A2DEBDD549EE9832FC6295AF6EBE2
271EBDD2C4BC9721432063AB05B27442FA87E754389791C6588322AE70A7150B
BF0C154CDAA27BB937ACEC73913BA95C44C0B9E314BC09EDE62206A793A2CC7D
219E91895E165133DFDBCD99DB3DC3917BFA574D2C3C4CEACFDB3872495B7914
F168D877B59B26F959812FA275584E04BFDACB4843868B8B030E97B086E3922D
E513B2D2ECB30C88D7C77FB1097C6B36D6495916FD69B176E7FFDC3E2748DF74
EAD7424BFB22B681261D02F354EF7F460D2F61F9EA804301E995CC825124BBD8
1894988A4110B6506DA9D3A204094C64F2045DD07236D9C9D62135D7233A3459
63D9B51C9199E2219FB002B4CE131EA2B9FB5E489FE8DFB5C8AECCBCD736163B
6AD189631DE061AB8AF5D0E7824EEAFC75A1DB1E03CDB68C4C198376A165AE58
B26B9DEDECA6126BF7E8249B2FC97433225016160C781F6378C543A76AB3E7B0
42D18D1788630B9D66D528B9A0DCD603C2D6277A4301571206A4B014DD1FB02A
FDF5748DAA6E4368B6121ED70E2ADC583A413038F9CB6955F7AF06203CAB4836
C04ACF2DD4353C3E8F3E25DD401C353705D9C6AF02E9D95A327927BCAC4FD321
BBBEE5A5D631243C93CDA0D65F21839EB857852D62AD8418797B5095BACD9522
8E9F1C5B4402E64886D0CE7BBB9684E962D1B152F29BC154812F663BEE885453
43BBE8F637C24CBD69A71104DFCD18EE7A717F4D49BBB4129E529DFCD7C70068
1CBF13FD42C28389C1B1C4911A9BB2D71FC375B1621D9EF144DFDE465661C602
7565E4393B795EE7C1065A9134567FA7F06A3C36A4C792D168DC61B0E00C91D6
0564537B34DA95F37929EE55B032A5FBFE5991BAC2556AE99DDD40D059580849
39B1D3211509BAAF2B79E737AF4BB26A8DE46AD9FA0D3E24F2FDCF57193CCAAA
36A4B77429397546E44E2F5C77937234D1D6AFCA63944D3FE5126E4E33544E0C
41B8098970689B23D558FFCB32BAEAFF57D2B6317F9B37D70EB627D06BB45D27
EEF8AA68E6F613045BCADE267A0CD304B290E1E1E7DC5192EDE6622677164F95
86FE07A33953E58F76C6B6B4244BC93F0E59F6AE2B2ADB6AB064EE3252ED8DE4
44A98AD8ED3616FDFF7751D7F4D14D6002F0CF7F6247E0322A985D6602A6CE0F
390912C93AF64631020127A5EC5A98E0C65C9F2CD07EB064FA0A0D90E47FA1A8
66F8BEC315412BA9A1049B480DA09B32ADCD060B8872F59A99BB97C714FC7BDE
041A1C6724CE7A7AB2624F04CE2A89352A81777FE0C146E77161EBCF1C0D7F76
D040D9C7A1E64920F3C727A9F08AE71BFB3501247ED9107B01E0096248709326
D538C78090DF3D1B9CE1CAFFEF597A49335CC40D3865789246C29A7AA1D16BB0
8F5F997A058BE75F55270F3B2656DA24EB538B7BEB3FDC950F39D1BD1D5E5D74
70C7B115591200D37C64C624E401CFF57DF562AEAC98D2E8F4C7A5A79EF94BE5
E16F1673EEF872C73C33580C4BCECA71429CC346DAB62DE6E1D48DE1C631E94A
21675FD4C544E8D49ADB0C463DE8946812D0E394F0F53C474C166C85CA790302
F8C1F0243B79012F365F8A49FA4D2C9C0B5BDEC27230D2966494AADAB73629A1
DC0ED7C058AD150C4D5BE6CAFCC7D711875A9ADEEA249B2FC974332250E6E9A8
80AF2BF95B91DF77DBD6B2BF3980E573222D85A4B486EFCDE92C38404DF203F9
CEC757051BC9989A42AAE27ED16D17CB1BA3165B04F8958CCF682E0E29A41719
8C762589206E7A843BC46206EBA001D148CCE6D3D8C8DB55A99FB17E790C2C07
C897EBD07071D76B34DBB96EADFA2459F2E6B90131359A396EF818B1F1A690DF
C247841732A8DA2DDE3EEB17C167E15736CB60DB4FD58B0D48C9C5EBBBDE7655
BCA3537F71080F06CD000166A0B9DE9135D3FABB29CD59AB68AC092C7DE1BAF6
353586384CD1469C67E114D84B6C17E823CDA6CF3119ED82AFE3E967E2932DD7
568BB20B52A662D0CB9BABCC7E71F7ACA8984B33F1A98F97BDE236F56142A3F2
1E30654D7B668A0A8FDA746A27283D70A4C54D9782B4DB1609F81D9F6E461509
A06E519A632212A02EC3DC8E5F93BD5DBA1CE72A5F01773AE661A5A864C9E072
1C3559A19EDEEE8A1B74FFDA7DD60A942484F24043D83B7878DBEBDD114104AB
DA3317AC0BE9A0B2150FD32536C1B69F52BF119D95C79197E9EC90D4EB51AAFB
BAB10495FF43DDA214D11E1F2F06E2BAEE2FA34416A7FFF31EF3DEBF9961F2F0
3A330B76A23FDC5267431BDFC27F5DE53F34E6F88654CB05DA48ACD5124393B2
94DAEFA3FCDA6BCF81043172FA57CC058E3F1D8E25552AA25495BB1A47C82428
ACD0D2AD9C36D292941C463F7F240593DC111130AF46D4C19EC83370FED1ACEA
5B74B3C146C6C2BAE17F65580F59FAAF0479F4CF492E674B2237E61AADA9E112
09807CEA52633E5419C1D2AF7F8A14A61F8D65CD6998E813BAF9B49520CFD73B
90688BAFC791B2E6517A4E1BA2F39AF2E91D5EA8D65B74900DE1EA95B981FBBC
E8D846DAE64D91AA7C89BB2EFC1FD3A889B724193FCE3DBEF87F560575E02911
FD1710119FDDB6C7098134D90F8FB896D5153C878B1566B211C6D4E691AA899C
1E5E3EA62F8A91D2707909D79E17C5460839EBE49C27ABDF34D87751D10392DE
C748685B0877246D14BE0D1F5C4713BF503DE130811E1A2F12B9E07B3CD145B3
F12C29FEE71C2D614DF096246EC18FB8EA0D56A6055FC437E8D613D900A6C04D
D99D4FA6EAAF67CB363DCA611EAE1563E3ED4C20245774128E2C348C04FFC84E
01FCA305E0699ED2002033D0851E28921CBC7707D5182952F201365D3D90DE70
9ED3C673FE20753E2CD7322A670591C28BA2083E575D074D842EC067B7EF3E32
815A19D7BADB7AB16A2B0585687DDE1C2CFB6B2B8AB17195E37C622471FEE899
0ECEE11349D60C3140BE22575DF0754521DBC2C55E90EC48E4ACC15F3F2647E9
1C540D735BED02CFE72486226F9E9671BD888DB29D63576B85C4707A60816A89
E1490A8E444B62F5466931E545F2205F8CA7E55F16006785D78B9A80D8AAB6E8
112A0A2B34BCB1AC392333DC8B957123E03945E00151C537A025C1494A47919A
CDFDDD54E63D11368C612898EAC2D6FB3BF04C9505F9C992FEA3416668E1A4CD
4958E166EC99FE602AA5961EFA682EC62280666ECE1197A320EC084060599DE1
73033084E7C47913CB8929E1D0C375812D51961C7E5B6022B89BA6C021A6AC8D
418796C88BC4EB543035CB05E3DB568BA0C8E48DD4B1ED685399A096377F229B
EA8F99C513BDD76497FD98059E98E76943C58C48754B5E3D4A3E2E7B9F4406EF
14B5461C709509130C16303038D8DE53A0A9816A9AD6F89B59A1E6919D25D3CE
FC58F2D94446796897B716DE8C8C5C24A9CA70033E238FAC30259F43D0A0BD9A
980288B00707455C97249695424B0F7FD145A99471A6678AFE8FC7A032302C85
9D258D9B83B9F2E6E84C02FFAF60DFE7664E2F881EA0D64F3BF02C625B92D884
416C53CB94E04C07E0F7AAD7B363AAEF5CA4DA8F78B51754113B96EA310249C7
F58AA3EA3A478A2D6C151EAA827A99F59CAD1CD4C0A1A3F86AAA512C7E744E7A
765DAC4ABC26E7CB25E328F3099D642F149C0FD1D9F88C5AF948C504B8CD89AE
49EBFC127488F604E972B1AFFBF217372686B1FEEAC57C32764D531E3B5CD8D1
7F424B8A5EEBF43CA37A12B2E1CD2F18F2D5563CFAC92EC68087B0203FDDB713
8B0C16113757B7A75849C1E68511339B64251B638001A82468091DB3510930E1
FD3CC9D56704156F10018E3429A5ABC56F72EA3345F69B7C0E8A56AE41B69B89
F1D4F46D7714C1F122A4B8AF2ADE9D1395360D8D750E2D38DD80F3D20222B60D
C0F161DDEC1020214029548ECB03F2BD47F24841AF4A72EAB3D90B1444E65449
18682E0E4796328DF5F790C25C387F48D51809A9C2AFF91F638A6A9BC537F228
17455A9BB127F733E2EAC78363D461B516E618FFF139CECFDAAE2CC74BE9654F
84D5656B5084F484FC63B125ADAA66156610A7EC49B29EA2F45948D83B46244F
0115F1CFD27B102E3AB251EB9FD654EF72388C5A9D08B137772858D1A89A22AC
12775AD981AC186831F6CE30599E0942B4E4C4B778F96D983B1C4E1DFEB891E1
8A3B5A9061E9C2E6905BA403FE8C961318E88F18AAB1DCFC951DEB159F9F20C5
7DAA987D48411802B0BA0AD9FCFE3E451F6B0CA3360AD99A7E0ACCC0A15C2DEE
572BDA14D8BDDFCF2743A15F8A97774C93C81AF1E108AA75CBB741E74C47F8B2
0547A2A07A4CD5C18FEE8453579EE23F1785112E31C6DFD8E9E87AD59A435EF1
BA9457012E53E3CF7D54CC2A9FE8DCD5C2B07207BDB73030ED9DCACF409921B8
4CA12589DABA139A25E23FAABF2B20B42D90CDC03615CFC5052CA21A4DE1B8E6
BE7048E146F836BB382A7C5FE3CD9B54F431CB3AF2699901E93E23CB0654536F
BDA677156589A066E3C09DEF8C946669EF2C286DAB56E327ADFA98DFA539CBA7
3FACC5D04142DE297E42A192514D1E741965DF6D1B4F7AEBAFD456DD376E010D
766FC979E144F87A10E9D566B4A07963E6186FC14FAEB626F32646A27A355219
E2EE13D5D6369F656836EE0A77206E8558BA6E59CA2D7BA2800FCE8AE791EDC7
1A47F2AB39A55F777A00DB06BF2865C584375670D1D7E4D8B8251C682FD23538
4BD2864E4A04EF96F434FAA63CE688922D0B9877B310D4EF7BEA2AD96C4D0020
248BEA6AAC733FE0D481688E8CBA9E336CC4FB9F3E32006400010B50B7D79634
23620CC9FCE261F8D4529D93F22F21E10B76F9CFCCB378437976A4DA8BA214EC
D9930C7D99F101143AB98537745CE61D1F6101992BC493E4FCD4F014CE41F145
34BA2EE524E9D17CB9C6D20B91EE9EA3297A1972441590EB25F31E560C6C6AF3
F1381F095C03F918532C41F7B8A1A556D8644524503DB75CFA310263EDD27D32
D83A216241DDBE84D58ADB95032B9985F716E2714A6E75E3692FF8FD1B8B7CA1
C69524592B078BEA2AAB8C217F5C84852BA3EF86C99CCBFC58E2A72B6B47F7E3
FDE1D96EC6C45730B55A6159A4405C513C1960F3AD61307490E4826256C577E4
EB52EE31EFB896C593F85B927924A6428E157752FCABFE9220DE08713B8F3A5B
703AE5DFFADFEB99B3CA1433C12D1445882669B6F85CCBBE83944B20A3BDE0A0
EAF259EAF0EBB51D5B3F393B31E7D0351FCB34A3AB9FBB0C4B293548DE67A5D7
3182D8C48645DBCE0E8DB145F4D053AA9B00CE815109CA5AA6FD85FD9DA5BB1C
3AD41F790868FDA90B188505175088F43030D6A4A1BC869BCFDBDCFA8C381B3D
58482A0CC98A2604F684F8719F7941EC91235F150DEA4D72CE3400BAE4EF08CE
2E28EF274F9669A16A27ECF1891FB98CF817708C8D4ACF627C798D80FDBE9096
46FB21B04AA9F2C79C222F59724B115086BFF1CFA46E640D666F7B05EAD8DEDA
4A229E6D2E0FF95C93E01C4D4A1F2D1CB9276400AFF35CE170D31F2B166F99DF
53690FAF7F415B3CCDE7AADBCF72697BCC9D1460209E9A8F17CA0C871AAB3CF1
6015E2B1785CC9CE17A3D89B3F88B9E7E3262FB036E1F51B26BFCAC3915932AD
043995832B92C298DF2EC7706E9F77C8A04B529CC5FBDDBA30014A62A5BBB1FB
0CD99C8D4C0D16D50CB7FFF6CD3B9EDE20E41F813357F2002FD7D3BC2795CA29
E3175BF814C13D06A414BB9D434502EFAD841F0DDAC1AB95300C8060255E928A
193AC2863B41AFE10B34EBC13C443D428F4A0187FCD28D8EDA13FD5F15D99E11
D3BA99C79693EC05153D1AADD371668F7CA51662002FDA6F2BBC95BDF16D30A3
59CBADD66D7CC20B2C4129351FE5D71E721BF111F36BCB501D36630143FE8BCA
EA423DDC208B61F154FA3E0FF3704B16222179BC15E55F129F62A20129AE3E4B
A05DEB2A78E15F4FBEA19CA8F6FD74C95042B4E88B99BF90C760D537A5F601A5
C1D318B18BEF7A4D2DADA9C2961A75BF513FCCD45751A142FF5390338ECC499C
043E346A4DBA66B7EDE932FFD84E89AF8FF5387F0F57089A2DDEC2A5205FD3CD
2015A7C31D86033F16F94BC18DC911270C7B4E1ACEB5EC9B197E2471A15130E0
812C23E0851E4D2218F93467C90462C548645F0D700BE85D676051908E55A864
FB37E8F70F25136F2E142070AA3A421603EC3D59E4BD9E2AE7C50A3FE1A3242E
2BFC0D314298864C17D971BFB9B96B73EF6A90653A4D2B144EF216C0214C3138
D0B092C3DD85CE267608D0D0D50972DEC902A032A5FC7E2F15C67860F685D7C0
5FDEBE556F5C181E2C3287CC3B9E04F37BDBBF4F5ADF386732F01C87A0A53253
1BDDBE618CC7DD66B56AB89C1B289D953CE9AE6A5DED50E264B14FCE5DFB40F7
EC7E46B6E9DA84BEAD45A3598B2B5C7AC6112CF380D176DD6BC6658BB55D857C
7DBD0A6B4CDE1903873187DA86D2C1B5D2271669F8EF31531B8EA85AA74FB443
296734D6B7F9A7E71D11925CC1DBD539D828045042809B291E0F014BEB44412E
69CA9169361047D348E93D3032CA69527843A2701B4B45EB3053210C234DB357
0B65BBF40DCF26235AC0AC3ECC9FB8BBE7940FFA97F2BAAE7D21343F02D20F80
1D02ED63B52C20F9936DBE5F9C421E03A6289B2A36242AB4859851CFFB5E1E62
572C488B75390AD759CAEF842C4C080808B8D5434673BF8AF4665F09D7697C35
FD568C4B2107EF09D0DE66D79470F252D22FBF1A6B0C77C49A031843A368B740
9D3DD85939EC795AE7E62F0534183A7BC46FDE0D81E6031A829F413DBF6B1AF5
53D7C18F5C912FF84A46E088B61EE7DC2BDEA53418141B62B24B0DA986ACC7C2
A6AEB2BE1DBC2AA46C5B772567D5E7F9AB662F5C5E810C057E8A8D9E0C493037
9FF81893C2F116E499CFDF31186EA4A9A2E15E3CE5685082C9762498D5F33A8A
EA8EB9F21C4CA7D2BEFA2002F616C77D663DFBDC0645DBFF94F5BF60B7336344
83F340E20E3F99A5BBB4F12FD99D75D14A2952DC152B2CD12041A9822A78792E
00158FC9C6D4981C2275E56441B2F9B3EAD0ECACBDFF17D462B4F8CDD8566D94
D18AF20598A250B58E64EA21038954796DD33BF1058D9F944FEC39EE946A6047
F674EC3844C7A79BAEAAAD6718756223855834352478CB917D70F1B0AF793AF5
AAFB7CD44FDC681CA7F830EBB42385F020895C811C80ED037762AA818EE6DB83
51DD2FF3CCF6CE482104A19B9D4D1CF144CC2CB2B663A57ECF53174C23163938
E33AD65D4CD7C00B306C6251872572EA3E9675CCD879D1FC8BDE06080ACE7A84
62EA4D0A2E3CE3EDA1EC59EE43FA58D4FB8D465247CC08127C60B94A181D75FB
34147D9582EE967B17A882A57957CF45F470DAE0DB1288740684D9C7EF153D88
635D328EB065D146C2C7CD909F45135EF52040625064E98392B73E2D177E6373
6784F4D9008F93ED95AE429D7CCFA9BB5E36FB9674ABD86A83309CFE771F4A5F
8ADA32466E107C3DBAB84A96C2D9BC543C24439BB8F9521BCD165808CF73B196
53C3BCCAFA1AA748409D3C1E1A165DB4B2A7868D87871AA4DC5D3640AF3949DF
DE4BFF9AA2FA25A60289ECDB306F226579871CC67279A95F558EB0B8AAED08FF
2FD416DC8EF9BB6EAC27AC7A411BAB23A8B8DD8D893E477F543893AC88C95628
3FF7B7628DEDC30573F169317FF0AA61E1DFCE95DFCA2DADA7BFEA7C740EE234
27FD0132D5F48E5D967396C92CC5641A02B18174F75733E509D76E0B21B5D5A2
52757C4B7893DD9870FE3B55FD287BBD3CBD188F380E53311BEE3EB789A64FA0
737C2268095394192D922641AD1463ACA02E5F42CE4A60EA573354D30E931E96
EC843A9371DD116DCC5B5E5A3BC984AD532BB1209C8968DF6C9460F5FDCC027A
9BE089C82829AE73C4E152CF0B52ABD71B1C6B509E566F224C1EA7BC6F94E398
6C1F047F53AE1A8481C41D9387A29171366BD0BE79B9A07316311E9C397CA5C2
B373069F8F7867DE15BCBDFB5BE36DFD884D1C8A39C4631C5F666473E5E27A95
D69ADAF7EF0C7EA85EEEAAAD69CCB5C209964A2CD54F5880C4F7DA38A8550E1C
A6C504B5062D78D40F215085E60E7A74F1E8A369DAAB33F9026120FBA5929E6F
757CDAD55F23AC8FC30129DC43F07A1064B5F4101CFFA41FE5C67C04E2C2BE37
0B197378404735A0F29CF012A25BEA7D89F7BEC4939BAAD44192B4725635236A
94304A0FF6B67A7C777A1E24E9A65FF1BFDA210869050ED2476275D5384CC384
430A2282A489825C0258AFA09A8815EE6D17F25A1C26C0129DE3BAD857EA893E
94D3838C48FA67938AEA58E0FD6FECD4BBB47A4DEC94FD0ACB440E8C088C9FC9
A56C8F5A5099DC8F7DC87CDC96C72D6A23AD15E7D2A6BFEF708F9C6B3E23363A
47D37FAA1144DEA2E1B015B45459C08D45C7500C54EB139B7FEB42447A6029EE
286D87411F4BC0BAEC2278DEF6B3A2515B6BF291AD3B0AD9C6C4112ECAB9E189
5B5B4CBD7CC8F44A887EF0470CA8450BE9B6C13DE1A60335CDF8E247A5685E1E
0752C14ADC7D5A4F4D2A48072D1B7E1EFF1C7DF0537591ED3ED1E745EE5D955B
C1BF33E615386E4581BF149379B92959A7734CB7B383FC0BD91D548B1E18F84D
10C2BF11EAF45BB7685996DF253159CB42188296C4DF68895988BAF03AE5071C
BFBB2201CF6E0C6109CE4ACCC5DC6B2DE791D9F3B2BAC8FBED7AE0AA0A7DED46
9C64A532F73ADA4ED0FE8C4EB03A3CA3D46F77128C5474953C1B4E592BBB1B12
4C8D80AC27940C411B4E6051E0265B329676C16691FD00F407B4358C91C2B385
31B47930F68DADCBDE130769B9AB12F994E9EFF86E090C54BDA5C4C7A1380917
962C18EFFCED99DDC83F16FB08349E2C65E234BEA3E273447596D5A58E72ADD4
E05F5828D5E6E36EE088B86C62356D6A72BC756C5911D9A0E6336E33CBDCA6B2
41473F8252E34FA911185BBB34A6EBF5F6416236C1287938562B2203565FD277
C13BD2342C13A68553C3A468753A53512954A72DE56EEE0DA728BDD2FB62917A
C93597A9EF32C2A49F13D60E7078B512358ABCD1C85218446DB0D469724C1C74
6F1D9B8FE1B64E6936FB6F1C00CED204AFDEA28168B9A54481440C4F06CB4B08
48DA690B222D5F4DC3E857BACF340C8C4E164007A384477ABB989BA0EF855787
0D86924568AEFD3D12A4104156A84D5B54A0457C822AE458BB6B15F383AE5CF8
1CF5256D7559975188405AE9E0E941252579831567FDD5B3BA6934D0FBA88257
5B6426A82F101D8FEB1CBF633184CB8579618249A917AAE036CEFAB4767290EA
788CDCA74463C684E385E961B83BCC048F4856A15DAF21A3CC3B01EC8A38F477
9CFF94ABBCB092B8F184830F195DEBD75B2C950B1398D8AFD39EDEF8B54FE04C
3F47EB60C0F3F2280D3158A2538FA04DEB4539E465540E814F206521FFA35BAE
6AD74200EA2BC04074508F93FBB5E4C5D35D88D2AF87679C21EB0C7C68A4D037
E8A7FCE53EBC7340D1A093ACFAF2F83A7B3D47542FFF5987268E60E7FD64B017
EC6A887A35BD0CC90695413FDE088379EF2239E77CD65AE29177F042A9B03ED4
35197A7BA67F9C704283837A76FF07CF10CE16BC7ABE5075C3442F67D4C55169
0D0D92DE92AE2D8CB5E80FBFBA2FFF1155EDDEFA2EF538083B9CB739D1693C6A
B3061E4445DD5B881F6662C3191075E6A0EC348F61F3F73E89FCC6D693EBB43F
BC24445C77ED81B1AB88FA212049A910C78DAB2B7D31625245E098A980190D84
B08A3B932FB2070F32EDA18AF78988F36222BBAE11B685412270054CBB099609
CF2CEF756CD21CB1F7A44A7193EBB87335D29E446CB5B06DDA5801653E706648
C85BA050A9DD9692791DCE22B7229605912F5E7EEEA5BE7EF0EF6B0BC1B1E120
87CA692EEB2A093DF4B9B3503F21D5808D636ADC7868528B0269415BDCBB829C
CF5DA9403695A45D695B191F0C7A51D237E52235A3BD1B4ED115A7FE5A566990
0AA71398118AC1B7A39CBBE3E75DA003115C7416C29A27BE584A1C8B38579FE7
E7B9A29DF26B7CCBDC5680292E5A0261DCFDC27CF78E392506AAF7A5C8A21E06
037F6984617EFBA532F194C524458044D3C80CB40D65BF919B7FAC20F72D6449
9E6F41E0452EA291471F6AE12C9B18AE1190CD6B7FD478DDF5E3879446BF5276
8871E02AF22336CE38FA5D9A132D2962B86F6509C2B905074E7B8915E11833E9
EA5006F2B7A5DBAEF13367BA1B6F214B6C5205D7B59E061F81221A2D6385CC9A
A8C7C3F918ADF86E1B1C095CD9F4263BBB77A03413F1F9A12C6C4FA2B52C01FE
1B31352481AF68B877A6CA173489EF939C93C159E00FB691056192FBFC83F433
2A5DB7FF85ACE0F25ECF30A3C903C5E0CE6CBE926E6A7AF094A1F93C3DB5D982
5C6D852815962214C8B56768E60EFD2C30B2845B41B1AB1E0644828D122E87F8
ECBAF79EAD05AA870BC974CD88A995C71A69F35BD0CA4542824B1F4329D0502F
A97D7FBE4E4123F330E87EE12FC008971D84CD20E81038C626AC3240AC3C9C9E
197DB9B758CE4910B0D4550CF8D9457F76B5ECD03C45978D34A9AA401E21753E
86F8A3C4326C4C0619C9862D301F4A05AF43DC657B5FE28D7B390007124F787E
4BCA6DC9DCFE9782467845D8B59BF7447DA9415C4D4F92C8F6ABDCB4006CA116
2D9281D8B7A384A09170A4E57107625DF27DCA4F74883DF8BDF63B87D1566F2F
468A78B2C46455FAD9C6B2B1482D5242C1DC81B66E42986A204F0B48F018F1F5
2D04A3527310A240490473EFD9FA961CE95B7CD68E23894217135D38530FCC17
05EDA968A7E8AC04C484F12CEFDAE1225D981C287FA9BB8BE342A2EEF5D51BE0
2AC50855B9158840F97FA94CC29C5B58690C0F8B43A4F9D021F86FFB32A00B2A
97ED655338E2976CA3496814414270F4A67574C6667EB5AE7AD5C4AC1DCFBED5
77BEC9CAF1C6DB6736E8991338E5C9CA979C705C3684DEFF82699C0F42B3D41A
ADEF9B662E0532045AAB661615810AF7ED7C6593BEDB64F65C63D2455C97CA4E
8F53CB33BF9AB3CDF2BB2117BCBFDB3F8934646377E02A43FDBC78E4627ED79B
16862D939F3A32F8B56B280866A0E6E912344837868A257173ED0D30EFBA8640
39B3D9446D6F27C2CEBD637401A381FAE7F307AAA992D206BCD88DD228EEDFCA
2E75FCDE835DC0BBB95503B9070C1A92470E3AD7F1CD944E91ADBD1EFF55582C
1B1E5B53B0E292178FA07A67F60F0757AFA36912D9024FC79B2DC4B28BBE2302
57D3CFD37A0F448AC7FFBACD8BEB65938F481DEE53AF2336D298BFB0F7284802
3608C12677161CF0B983931149CEBD1D04783E2C97458AD7A361512E05D95A37
37194E9447DF0172748203021BD7214C2234AD81C620ED2A12432CB1F9E056BF
D5EE9253C6EFE87DFE5A7A153BC3AEEF9A0A9E1C37F03E39BD49697D30B8BCE8
B9341D2DAA72F7FDE40CEB817CD17409AE305169544E48CDBD4BE66361F753DB
FED3060095F72715128053E9B14A055D9F688B1F4A09F67D853689A023B80251
004C69E46C9C220B8A664250BFD404C73D283DDD92B0432BECAE3F51B3DCC1AF
6A3B1A3996AEC4092C1B220F544989112CBD3BC340616B6E25B5F5FF47117E5E
9AFBA7839CAE44964C974F08DF8F22EFABB5A7A66796AC5B925B8021ED155E58
FA101D5CAA8B08729D6FB26B8B0489085FB2353A6C18598EFCCDDFA3F8A3D23B
6EE670C212B78FA94DCD65AF02D21D146D4F0A9EE55B665E0E6853A89537F381
F8388E7EF2198C005568E9DB85B2A0D87AA2DC2639310D3C13C0CA57A43E7425
065D6CBBC712B23944236E56C04F25F4EE58850E6C6CF9E5CAA8331CF9F5C745
E05A6D93D67214CFB32FE61FD727B0CD4CAE413D61DA7D2F7A378BA4B619DEF6
2AB796C5936F1E104459291206E925619EAB134071963F63200F6F95B8257D27
2E8FF2F04462FA7E6FB87E66907A04AC501D32B55856223EC527E671FA2F7652
CF8A88B37585BE83999C07CEB7A37F7260C1A24C87F68416E49F71D056C83E5D
67187D72EA16DE1AB73A9B51122480C5F1FB2309D97FE82E9116B78CE8AB567B
7F058BD0E7FBB579894041EF451C6693CEA46EF483D1046E1A9FE6EFFA27CA8C
9D50D252A48A918EF0FEB00E6F5C40FF92A66704671E51C65880545065212276
74339C79F366B6CA9EA7CD06BAB8FC382FA96B6F0FFC435D2D40E42E62C5A18B
C174F39F085920E486BFE64013CCB6B421BA3852A7015731060412C2A8A3FD8F
A77AD87AA1C862C83191E285414B6D41225744084CA6A7876DA9C9D6267714DA
8425509A4B65ED84D3C5914B6F5470CCC59A8CEB623240957A1B5C2C2CBE3105
6C801AF3D07AD30FB884D0BE78C75C5BF6F40D300A240B57F70EAC5678FFF36D
478EB6B37A84B943A060AFDBEDE098610F35EA127871B9BF3780C3F839C9292D
8C37AAB9A049999D0E0738D1991A9EA11C8AFE222EE2576A83DB1FB64190BE08
E129244B19C1849A8C374FA53EEFAD183275E0BC3537CEB919F48A51B065F047
7B3411533CA4B6BCEAF16DED024D6F0F00E91EAC01CF6C75482AB01D1425FFF6
B9A7C8AA8206CF78FA4968F18938DD01DC6E85196462FA4E661F71722D98D0FA
CCF05D7EAA9FEBBAB484C40665A7A04E67EE5AC43AF1C87A42B86A59A3CDA238
44B3B367402F81DC19D47DE619C17762B43E6962D4161A09F81D9F6E46150920
E0156DE04E084BBACEB6FCE76E8EED63F5281ED9CE60832DC567F8D7F2C6FAE0
8F79AD6DFC8C619CE8FE1EEE3B9FE2203DC6C75B25A5E0DDBA2549852043B5A9
3B8C7DA6D16F64C3CF84D4D583CCF943E438072C9B0E5A5B285AEDA6373F36A7
21B8645ABD0F0CEB9B96FE8BF57624B10D14CBF511921DDFB4140202A964893A
4F7E03021E2F291F270C8B923DC81C2AE55C6756DD5D25D06821F2CCF1DDC6FF
153BADF652A449EC4E1C006ADFE2CCF08EE40B2837B09EDB55CED04C6766BBF0
44D93283569A723956E8BE316942855124E052D215865DE535A61C2DE2AD7AF7
29DEC052B44064AA21BF3EAF74920BAFB89889071729076D755027081BE108B8
26DE9F26DF59B2995B000E5AE2CE32B6DB00385AF1ECA8E6A0BF1DB857B9C41C
B751FEC8E91CBD585D4B0672718227A9F0C894D6D6E88D44BE38107E327EC2AA
CEBE7E0A995FE1F23ED1AE1984D78EF2399E862A26AB012950F693A42136142D
77A1741E2895CB2CF6F641303B042ADB926EC8CC9BFFE37D3A7B41CACEDF26EB
AB9DA36A53A5F235AE1BA3C6F3548CC4CE135D22A3047386A46B6444811D0273
5F484CB3F797B9D8A9E8A6D55A583800F6809EBBEBFEB251BB4C798FFBF14D18
A2C653EF52DFD5BD5FA826AA0BF9E81212DD08638A4D291567D081D4F769B5CD
39EFDE608EF6CB0C009BA7E3C884840A95B9429D4882427A2E556F10045C5B8B
BDDB702DCAE6BEA2199481C3017C0A4D5E42A5DA2AD9CD58CB5C3F41BB6E3E71
CE29B280E6D438B88D81A3D778A6463E16EAB9E86A491F8FA4BCFB0B711A7715
2EB6B0B88EA7949DA99A1027BBBEB3017FBCA616BFC65690B78C56A674271131
D3BE6A85D6E71620BD36A54FA16F6CAC7F723D7F0CB707ABCCB23D597FE93D3F
84647714941AE93638755F135C333B872F2D0B7816A1331AF9E7E7E925A1C044
49E7C74885828A07160DEB415DB6D60E1511402EF5BBDBAC1FC39DB9BAE78383
486A34CEE0179F478F514629E5A25C4FDE51CB19068F183D547C8F181D16CB9C
BA27465BCD7F113CE944A82D7A51D0CB6CB134892DE529DBF033666466D1586F
ADDC974DB442B43FC6DB8088874D31190DDD5250200A157151F7625E63296E32
5E2C3039B04609861179AED58C2B266EA36FFA425B80DCBD20223F26989D59C1
9520CBE7228870D2168A99303C3808C5AAB05975961FDDA498D72C313AEE1EFF
147266263B8FAF79A60717C38B23D7CA54BD43619A46D5FEFDD4D49F58277300
59EB2456676E931EA9D5B978AD15FC0674B5FD2445398B8E77407D886D09CB3F
569964A5C2AA9623B8674844C12AF7C0152DADAD834A43DD5CB510F4E2813868
F58506C9965C87B89B8C1DB7526B19F7F0C20B11FDB0F4A38EA494F850BD820D
668E9F913F1AAF8216CBC34C763DD36FCA71692EDD0042913BDAED8DA7D7C801
6D0FB8F2D1B471B96F06D4DB2CC78FB024D8B8C93B141878500CBBB1EB68A0B5
3C977307CE56259FF842E91C82E4298878D36E3071F631A523CDEF3329DA1D24
27F462E1B58E6A458895BD7DED0A252F40A609F513EE630DB0A4DA97CC11273A
EB78CCE20956F1F48D71825B795DCE254D70FB0436472D2381DEA09B8B3BCB10
9BCD72332A948540A00613F8DE361C46A55BAE9F54A1BCFE5626C85482B6485C
4642748F7A1C3EA0BC46A3CBA124AB6B22F93F55F33D71007387C69701183463
5F86095CF4ACDCC4CF15776180F7A037E4E7C8D1414676E80051B714940C0671
4B5A09910970249C242B5765DE750086910D16FD2ACD760748064D77BF335721
FFFB55A4D879BB5CBE06D1B2B17D71F9FE454C48DCAB35CA1FC6E44D19DC4D12
D1D104FA5B8606220481175FBF5284C5BDE55D757904286A5A413B373AEDC78A
C0CE9918EE8E8D4BBDEF36BCEB39849AF2FF244463C0DA21C717E348E0BE6312
0324CDE0D1799CCD89C4D25FCDBE772D82F92392B9224C23291CDE965CD18FAB
ECF6253EFE1E6EDCE9C0A6577A87AB7F51D4E3E5ADD940B62166FB7CBE4BCF79
28751753F1958CF4E4FDE04DE9B285C33BB90C9226FB99A55DB028501D5251F7
8AD59CDFAC2807EB52000FA92FD1DF03393B08C5BFCBC0EDB96B0326AD95F31B
A2F872C65D92D917E2BBBCC810008A5F53819A4300A2FA85FCA26A54446C3190
808B7540908C64884D3E303D1D201901142675AE6E69E7AE37609D9181092083
6C941A80F6C61424F9E30971A465BF5B2C9CB625604333C26CF963E8A98F7874
C50D3018716F2DC6EF0315D9CB1D677979EF1B4E96BD0CD5578D06CE3D989A5E
06940230DCD7ED970C8D7911DC00DC459B6C821915E83D18817B3CAD46646300
ABC90A568A8D9E0B8E611D8496788235AA0847B7E98E9EA8FE1457B44AB1F512
E65668F83FFD90F340E90C60476E70154AB80C5A40BFF38C7BE21590BA2CDF85
0F9E1AA0ED7DF0552C4BA494F17AB5021561CD5C50961FF541358E04ED87047A
1128E0AB55B25B77D399C546AD2D172C31869BE10461A0747B9A864B2964D9C9
F75FBA92ABD47A5EF18C3A43B9B7A3D1EF154B75DFA7C624EA885430175F88C9
5D871E2F847F4D2A4D7E7E95D46EDE92F8A81031B40BAB1574C26588628E94B5
48F7712C064081A7EC21FD1F6781D44DC2D13881EAA7117747BF9CCB78F9F8A3
F5D44459BF81997F9E7E715EE257FD4D5D2122AF19FB65F1E49241CA0D3B9F16
95173EE4742916BEAE0D21F24A3E4D146DEBD198727AF6D92BE1E435043FE030
50AC7BDCB219499738157FF2B40F38DA346231E9136F6196236804DAF259E3A7
4EEC06CB4029743526035017BA26FFB09FD38C635875310016F5279CC754F3D1
3AD666CBA8F8C56E27E2DA4E0D1E2A53E9EA3115B3FCA102146F4561D7EDEE2F
1DCEEF242405C804B33728DD2302479CCBE0B3EAD7DD4125CAFE2E99E13D0046
1FA3B903D27A54463619912EB1A31C8D223BE7B58F889638846B89BABBD2AAB9
718E6777940DD65A4AFAD313813A6ED355933650EC8C926370531A8458DB71D7
47584178CCD27B6384116F985E752F85BE94AC283081EBC3C710301E16C7A36D
7147522078C9BBD291CD2D30E2C98727DCC8B2CE939B622AA8C450B35D2DA53B
E3426FD6FAEF1F3D6F9F6065DF51AC0A6C78A5DF50A35A7075E01AE496765C4A
FA00E5030376021F122B54ECEC960F508A6310B8B646F1A68911F2A22F5FBAEA
13E2DCF04AAB183C7EC28104F4A9F56AF893980118598056C6FFCFCB81D78197
8DBEBD550F0EBCBF32755BF14CF68657CC28E2932BF84C79DA71A9416961FAD8
3366C8C18438744C9F0EF10BFD5CF47CEBA1D17EC53344BE351C5853C68A85CA
E16FD1F9707E4D273A8AE64C1FCAE8898926E201C9E8E2C08B1DFF96D003FD7E
DA679F526B77595BADAB43E82C231E152012617F4FA5B2075A52423F000C35B0
E0F18D913413F9844F70A6D5E8DC1C3D94CF7C0C82A3752EEEBAD3E0CE37026B
49433392C893E225EC9274CA88A52CE8C97E21C1D697B1D2C6D012D925E9863B
ED64BA7DF5B6979EEC58A65C9EFE0D89AD4FE5F58C06D50F2305E4ABB1720820
DD3C0BE7D3C40566B14AB0D51B1CB05478C0B117D9D81E16E52293E5B02DCD0E
02D3BD8695B37F9C7279613207C536B810CA63E76B83EA14591335356027C63F
E9DA78EBF6F2405833599B6543EB849FF7A21EFF7464FFD13EF4041E0ECD7C0D
A46EFFC5F735375B0515995D4734CD769910E27D5EBA913F929B0536AE7B9E97
C4BF2077EA08CDED9AD0348760B1136C4912E5DE0652F4D847CE7B282DDEDCA3
C3A4B2A1775355365AFDE8069D477F9BA1D480637F7939EF218B8EB6E2BA1D05
6F8239952812EF3A55E0E9983DA7B5270A4D4BA694CC0711E155BBE5CA0E9695
C078EF228BE295FD0AE0E336AB08331DFA5FFE32999482BF45A003B8D3D4F30A
80E197761872EAD79B1F8C2AF323A5B0385327B1E60E09BE37F6F67951CEE5B6
AC14E5440EEFB35679E01B1714E1C5EA5DDAC81A713A9106EC63E0D9C7323083
D11E25139496D2EDAE45C3405CBA0E301E727DDEDD22DCD762C531E456F215A7
08B7C357A597A011179FD3457C026E71F0C574911D0E33ACD301D7B4AB034E3A
8EBB8383EB805B97F7196DD956DD514EADB79035787CA8FD074A6855081CA961
31FE436BEC8AAD44A3EED419D4FF90D07801E404C7F4F22E34E3677EDF62CFFD
57881F4261D5ABB5466A2E9D90447BDD285089241C5836C4B0A9C8F64994AC06
2B61B42508FE578CFE5DBBB2725326EA418D69C78B280128312EE44F70791A38
887D50575EAC09F288D6665D28DBF3FBFE8FD888AEDFD2447ACCA150D05B2514
D8C2514F5875AF44A1FE866F19014DB47050CCEB58792EBF6C105E35AC613740
C35EB2F4636DA59749C53424DFD24B2AECF3E8DF0E0806969123D47CC46427CB
E0D44E0893EF26ECBA87896BB794A24A8CC1BF8A93BC2B3C593690E5438CA26F
741627689C3F021FD13AEBFF1DAF616E7ED216A974BBE714701D4B117666F339
884CE78D63B29CB6942295E17C23F8F210AFD3ECB0D2471F669379EEF2B6F62F
5CE09FC4E23DD765F0883B8FB5EEB99D29F91B505FA0B5F906C580D791664FCF
633525D36D6012C0E1868038006417C3651CE5AFF128AB489B04A0F9D24E8939
01B5FB346ECD280F7D2A58C702FC6E49118AE49DF1E3931817C90BD70E22DF14
2076A008EFA98BE24F52BCEFB7506EEB0F8F901CCEEDC6177FC89866AAF11E51
4B876D66D928B8EFF3E0762A8994502A36EF56FE59D7CF86E99BCADF855F7E40
6FDA16F3DAC432180C7D5AA3F7858ABD676A8F460D3D4E4B1563CD34AC4681B1
FDD1E556F33B9BBF4F2F3B9C97089F0502B646AE95EC677D635BCDA7F5E10CFC
A305E0699ED200EAB4E9142338589F103A485B5F11CBF2F28224DC436F936511
8904A06FD3AD97158575B51F16681AE98F2FC96350A6703C1002A350DC98F56B
0C49A825581F1CED5F18DB8C335E0D0A5714D6B8B2D541A94E1B04182B690A94
45963F34C134D13E5AF7141DDC796F1AF673301675231774FB85DCFFB099E09E
506993AE6D82A5E8438ADF772B72A982F7E439755955823D589828E3C56A5F1F
53B281AFCDA8ABA9DCFABE89079B08B7E16834382FAFC2F24AA60AB178C42F79
1B78D637EE5452ED2049FE532A3641D349B5ACE3ABC02ACB0D2D4D6F088082D6
9544072532EE1EC5D5E47033E5AF1B06BC7E7CDB36ADBDE89492C28597F172C4
D5B371CA54ADFFC6F2D703659E3F6B1FA3D859ADA717700CE3E467F425EBB381
ABBB5AFC1DB15ACE8FD4A0E37FB92186EBA21C70A44F0EC9F149FD6A55F11ACB
FE885437DB72CFAF4363F86D63AD14E0192C990369316CD9FEE8F2211160B181
A7903381463B7D0B38C3E78845ED67A14D8D160E5A62B74B268121017A9411BF
924DE05B5ED3905FB0CFD0E87044B54FB51A83178A88FBDC360160BDFBFD81FF
A8A8DB00E8CA15ED15B72923B4823C6EF1266519D5389A376AB36FDA6BADEF5D
F8C4A318148C70BD1F65AB2BDBA4C0174C31DA6F29526821B1D90FFB8BE2F427
D399C1748E1406CBAA736D9872A525996F6DBB7FE06C1BBA8B8B6045AE9E5484
B376F8A64B408114D47FCC5B356E983F4BD65023FF7C20F61431320E7C12B05F
215A1B72109DB6974692770856D2C1C3F264908C6CC663BF5C72D0CEC1E4E227
665E1753ADF60B3060CE622EBFF358E63D2037F251A0E8101FAF7FFADF49A06C
6EC57274D2218E6BB2D8A1776493BF6F36EC9A585E71601E4BAC20F2D5823FC5
2054E34C4A8382209D00C283DAF19CCF888E5408C842BE2C33D6206423126FEE
B2AD0E99AEEB154CDE64887E6AA4AC907847E62A99BE389B0BEECEC1C8B417EA
54757B9C6CADF71411A258240159D924E2447835F851F551A569E3E8F7AFDE78
497CA32D074419CB7768F7F1D351F7D1F9D05FCD32C75A430384C373F589D8CE
22108AED6C9853A30DCB0AF7C988ABC359703D879627EBD41519B3DEFBC70199
3BBBEBB04E9593B90E50D75F7FCBCF76374AF7C135C50CE02FAAAF3412E43FDA
E1D69E44A99973E203FDF590D0DACB418B0F97145AA8482BDE36343B77BB3ABB
4EB438299ADA4D3263BF6D3802C8AE131D931BB7B853F378CE68FCC23B45E82E
10AC775BDB9F70C95F12FB600B92EEEC2C2BAA72AFC2B41F8A844B1FA25FF27E
624CD099340E92266C64F17B32C60596DF02253382C418DC6BC71C2317364FB7
5D8FD0FECEC4D9FB47F55700E2034184C25578AAB2A84E2AE7CB13423E84657C
7D3E356F8B4F97E22ED0EA249DCBC35C783D87323C8A636AC01D4FD0C6DA19C5
72D8116ABAE22DCED3A23BF882D33E5A43EF20D4E53A6F0F4349DA7A66A0BF15
695151A7BDE40BF6E1D03DA88E4817579B45DCB92AB5D85D5D3A943B8EEE2CFF
B175F326268A39A6D4BB2E6A0A896423339E8E11B919348A4F7C444993CA49EA
FE457FE5EAC8D7C373300808CC94856296C18C5CEB59F92612CA936AE3DFF2EE
E9C7004FDC6E3DFFBA76A18EB5F581C64A2BA96FCA4065CBC01C18857D6130A8
8CFEAA4E151CDED111B8A2BB0E96944DF4CF60E70C41C9614E36F6E55698562B
3B0A04591E2DD9EBE18EE66B7361B44D08FEDCA5E8D258C506E2FF8748954C11
5E86649DBBB7B8A76867AA73F06400A887E39D1FFCBA9BD9FF890179DAE82FAF
2EA2C9153E8D043C714DF43314B3DF0EF5C97C7A2B29BA9FA4D2B51DAAC4D5F2
FCB5AEE8D7593F7B2C3BEF892A4562EB405E3FB240E9C661B4D8A28B1BAF6626
B8DE2CB5043A2BF56B521308F96003F6AC8ACDECAC61976C4F1970A7037939D0
CABA75699F78166D4F765C29715FE45C90C525E91191E9F0AD02466C4972FC35
D25E7E13FACD7BAFFC13B332AC05C63A0F017EA2358D365E34E9F761388F6E49
FC074DBF6BB38FB96C48AEF3F6BC589EF7599F190DCCAAE3BD4CD6D8E46CFD85
C6A960E57D4605994CB4FE83CEAD6925A44361DE5D58F4F20D8814C30E53AC22
85CAEF728EA73C5519245E20941472C3A1F44B587E78A9E38479B4EB87F2E1A7
1289C055A0D060DA64349D919A324FDCDF23E4EF88670C70A15729D0F7986341
FA3919049402D2B7380EE7E2274DC02B57D6437C5F78481966EF48CDA76D3EC3
4F31B5B6B5FFE143BC0737704B54CB93293D31ADF1E48159F0C374BD60CD03A0
ADF3306B2EA516A960A66A4AD50B669EBD1E1BF0FEBF3AA2217CD3964C4F9BB8
B958B532A7FBAC0222791D918CA68452088D4D05CD7C24554AA164F0DDC19C66
F7316ADA1171FBD389A44E25BEF82DF0E123088FE46EBEC8B1B2F3D288E52AF2
3E1144C8A256F717CA432CDA6D60B4A6CA19798CB2196E563B6ED2F0DF4C9E2E
030C297D7E8813CA4A9CC9C276A342DDEC6576D746C1AE0FEE287079DC908E56
CBD06F7615777C35BBE71D4A8624F7E5056127EF5D0ECACDE925EF9AEB500963
4B3603161D6F9F7B6A07DE7D34429519EACABA645B2D719120739F3DF5F194DE
3609F5D420DE983894F54FFD275EB02313C73A6C02711CC86CFFF15579153DF3
7459E1598B0D6A74DD7136CCFD7DFA4500565C34B97F555DC5E8FEE555DD6410
298566A1C98B0CB0793577ACA5337DD20637C60CC75E7183FE8D131D39B2CA3C
05D4808D3FA2B32AF2A93360C658893808C36FEA7AD383FCF294A9B88F40A074
D2C08E18344F210D4BC5F06BEC35C80339164A1C68ED56EE0C308D469DC51E65
3471432979C4DA25A1CCECAD50237AA62BA6E125E00C1B7A7BB55B377CBD8BAA
C82129DED04B30CF7842B0406E0B8A8B0239B7C93AF500D48BF36B2C9846063B
DC1D782A11537D749FC93AB701BFBF61C42CA593B4A002A14F59CA4E5B3D65E6
834192E0853A5C571C7AA1D6B687EC776F0BB8A5366A34A7B37CA6CFFC9C27CA
171380CB044347E34EA72ABE3B01DE23F2531F0944AB4768D0F488D5836E8054
77C60F2A8D9C93E63FAB36FCD80DC14DD4C7A070437B41A0999BF1041A4DCB17
61EBF10467C46D0F5903158B29354E56F84DEF92D11200E6ED3CA819E908B63A
F881560F4E24B60E6BE8CE9EB752C133BFF5A347D0335300478B9C93E681BCE1
723323D9001A8C827C52222A26984C7D10F764D929AAC3923B15EF6CDEB17634
5AA3FC25DBAC807A8C636CE1777A23C13F781201570006E232FCCE301BB86C89
6377184CDF4F063D3E2236599AC90731B05959EBD984BBC93C4C97F2FD06EDA6
BED0941EED3E325979F998FC09F1C838F538F13B60DA64633A7B5CEFBBB80AC4
D3D177A688CA27F97E63421DE6F23C5160CCC23BEDCE8D3637BD0BA33E25B660
3F9D5ED33C0B217A4C018EBABD31639A14A3595E7758CAFF813F794210725197
C089571FA008D8FBF8DF1682F90A3BD57DC4D8BADFA8B1BC4098913C257B82D3
AAC414F307488A9B928ABA26E849066A7635BA74A51B88E82FC61E323845F406
1455D73854DE5E009DA267019C4E6225462201357886B422FAE07D32B62AEA32
18B6A0ECD600ED7E35357B4C60736069C1645F83CF4AC5C2F379173F73DE0BAB
56823180A29D4E9F3327D638CD16AC5828E05C62B326259C7CEC0ED49AA31FA3
F9B8E314A27DC1831A21D3BA08EF158567ECA0E82225B7484B324720D2EB039B
B6133E8AA252FCFC89796D55B4DFFE1CBE4ADCD21E2446F8E830A7E633B8C1DA
E36597DF1FFBF4C7B6D89F4888CEA47529F4D9A88824426F13A45EDCB0D12CB8
4EF3E04A41C67C9F7A9A51DA494664E6CE6249E6C6DD70401629318656FBC358
4D57E19E932CCE6445EF786AE607B1BD15405573CB937747A1A0725670A38DEC
6BD0A16D2596174AD42CCC39082D78CA2BDF5B410F7B177DA3779FCE31984FDE
E2D247EAA5BF1BEC5317382C61B106ED2A800F04F2F2E526BA293BE6B1B2E7D1
39DE573A39BE33AE9BEB41C31A75013F4563A34D90FEDAE6CE190B65A1B41704
D3923D2803649F34C6AFEDB4E567DA22A173444087A2D2CAE64E93AB6A4C1D2C
81AFAC49EA4808D87E3241AB1B0AE58F882B22AB6DD03DB2FC13F1725F877FC0
F4A25FEC5B92116E463017E8C1E43F1B83C292ED0F53F3C3032409E451C0B121
D40CC1B9D6DC9A9E893B5D57B6E0868685754826A571A3D65838A7EB06AB708D
DB8FF553A556C84D542C284A928A6D08F01F698B0419DDC7B4EF86
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE20B44A2BE90
C36DA2687DCB7DBA40F6B99E51650B25F4E51941B49774F8273B5E98306C87E5
3A03E6B35B82A143A76D58265254C13E6E1A9D0DB17A1D9294C759AEDDA6D4E5
CB498912E3AC15AF88E6309CB00AA35170DBDDB43739D05EECE15112FADEAFA8
DF7BB6157C5374FE3D6DE742A6980C8C55A9DD737F2069BAABD6F1B8A83AE84F
8ECCECD0CDFA74FD3C4FA486433D06974C660A27F619ABC0E178D15C8C217270
1E6C1493BDCD772A1B9A9CB8C1205F7896343973FBB99481B1A6B865510896B0
133C9D9C98E813E0B142027A215FC75181A42E65C3E1CF5269B00E31FB47B4F7
7FD95A823A176D8387CA420A441980D3E866604325998BF88E4D0A27D4DE5AB3
F44DF52033A1EE28195614165597150B847315C78C3871F7DF0D5B8BBD40BB58
C6F12D16BCB3BE5B4EB51671AE9357176D5AC14505504C43A33EA29CBE2AB98C
D0305DD935D8F0F5EE3205B6BA139A251BCF348F2A19EDEBB709068CE066960D
6D0E7801038F92981250C3BDD77F02C296953F4FE2ADEEEE96C2499E4D5C40DE
EFB9EEC8853BB3E2BAED185D6B4A80C1BFA827E4F15E623A96FA4C467940BECA
B15E072F4D80E6FA1492BDE59F46CA026F44D74B0536463124DFF7ACBDE3E03F
7063896D3B578B229735564F4BD7CF18486E33C6AD14424873AC44919FAAE46F
12CC16254F52A26FE47FE41504D3E851A066522DD56FAD7828E5E203F328AD95
5AB433987B2296EB3B524700CCC455A521EFDAB11378FA57CAB556A4F4B23D7B
C51D926CA86263840FFCC3BAF798B72E5EE24715E42D9D1AFFF7AACCB3BE5EF6
3B1C4E79B49A3CDF145253BD827ADB43D157A1BDFCB3233B9397EA3C8B3217E2
26202117CFBE3DE2C6DBFB0BB25BB138BCB5DEBDD171A3100D4D69D8A56566C0
FA3EAC58EBE319E7780B64A40FC4773482259B8CD68CAF88862A991C7D684414
A1851EDC442490FAE839FF9DF1F980D05D8533158A7D1941871D0016ED45E8A3
C001792669DE7F11CE8CACBF994B414731F0AA40DF1541AC1F598A5843D1CAD6
C5A53FB3BDB005D9CC4F9085AF0FB4A3861C67A4552C610497D442E859E2C91A
C6A66611427E0CF66D0C4D588B8B2DF2FE325EAD0AA769A4E94594F9B3831E4D
F7FF4491C8A266242D2E055113753D000B13A98CC0339E144825766BC2EF9A48
78ED27E515FED0D26FEEE69602B2BD58D145124F6B96B585D142F943EC5C1B04
0C1139273FE87959CBAEA46819A8980A28067452810D07BA9A666A01F4F60647
C3BAA80761E6D04B760635771EFF726D496EDC79C164824B6E3E3C3E69366B75
9B352F6AF5B900661E32B0BE646E41F0E12E86750412FCEFC33A1184FFB86AA1
045A80BF9BF5C44F374D68035E63CCE8F4B450CB5D21097D7290777354D146ED
B31E80A4676D23FC0E90F03456E1231CFB3CC4E3A725FC82593B1F43C7E2B536
8958C7D0CB635547011FC50F9B0A3DF60AF84E3C2F621C38C0CAEA89B223E229
77239F635F5CE9D418D6F164B55C7031555A43190D5362D450F5CEF063234FDC
F00C43F6C605BFBB5443D27ED225F361BC0F8629F97EA3E4A864AC9AFEF69CCE
03F54E22E2B141D5417FC4E56B370A53204382A3ECBE14A62F9F5823B738044B
A1025DCE099BF32A96E5972D3847BAAA59D93E3267EDBDAE35B33859E4834AA6
EAAA6AC1C3C44CD71E21CC2C1E619079CAF84EE2056F46FC88E18E019B04D49A
781E262C58E2EAAD88CD4ECDA1AB204E2A6C98D1B656D9E499649DD7C21ED758
F20456933FCA64CC9BC1134CB640B072A8E2493D88DAB28A2112617F4FA5B207
5A316A2E61B9D842C96C765B3F23508B40F957BD55091B92BFEB5E2F884193E1
D5FDC28A8A7F6FA6EC89007816A5900F2210FD68718C39BD2CADD6E7C35AF7BF
31F66D09DA68A21ADE7E7A457B95C7BC603CD8D9A6BD66567DCEB0DA2442304F
F353060D4326034A5CD9EC8F705C7B8243F93B3BB239B9D01065B03087087215
63C6C686E003A60E71436E0A85FDEB9A467F44262EEDB6755EA3761048D41BF8
E781D1C617F53A74E2D3C6B55DA02BCFDFA7B2AEEB52D242448B756464160CC7
0D2FE0F029C5D7372EF249FA0267C140139E32A3C82E6EE3E637F92C64ACB8AF
FDB462308206949B826C31C48AA092B9C46DB5891C5B4803C011464FCEBF55ED
9EDD49D77B928F1470EA702423E369484A4945CE4C8CE45584ED8CBB888F0C20
A0CCE499532A4F584E7631B9FA7332AAF569948EC55BAD355BBD85D66D6166FF
AABB2AA1DB6AAB259CAC63412153E8B87D7FE41323F444804368E12CED705A58
23BF6AC2348B46BB529C377E831E4FD8D7385C115E229FFA8A794F671120EEA8
55C8CF4E76AE27517A9B3ACEEE42F3101F44954756B4A6E50FDE64083AA7CD0A
8F3C0EEA6E6D9A0F173FDF77718900E4F5A4B84DD25FD7B650D3DCF5F836C1FB
CF2A5DE493245D4BC6FFA1EB7F044A395C5925AE56BA0FDFF1E76B74CEF2C452
CA230A1EB0079D422DBFB9F42CB40A63BBEC54EC63CCB18E93BC17CAF44BB4FB
CDEEE2DD064CE344608BEFC72FA3BC09BF8F1F6A039A42F68D7BCD3FA87C57B7
38A24E6F88FA116F2891F38E8A011FDBCE928DD79031E37A1BB92C1766E4CC14
4B9C069FBDB9CB89FFC702276681AF7D03B31878FBB1F73E41AE236612DBD85C
A66FEEB463995EF7066EF0AFB220FE17CA39A5D2D1E6453952696AA1701E3F95
70842E6DD6306EFE48EAF9D430593B28EAA745DF0FD059D2CBBECDB2CCE5BE6B
094BE7DDBF840A7A035F2CC5742F5F9146C1CE04C07F49CFE75AB051887AF051
118A0C374EA8853C695C665F4565ADB933E9AF223B7EA064DFCC944EABF2EE79
29B3899EDE0AF512C228F4CFC3D000A4589E6CF3F0DC1CE20D421F3B3701AFDA
B9984BB65558E91A078067A3F9EF95AA52DFAD26D000CFCBB8DF6A15526A4C2A
14F4E19E1CB877B4EFD118CAAF668339CE2364A75F034DD192697C4EFD4B9DCF
C50A59EB8188C56FFA843B1EF3AACA3FCEE17C7835239CD8296480332CA317C7
C7F1E95469943D8FA54558F298E383ECC43F8661F3F085EE06633C8A9D62411E
0C7813C2AFB348F723A1B5EE0BBD792B783E0E46FC8481CC9FDD01FDCE6E41E6
C4AEF2CE7215F9FB88D09FE4D1FCC0B7A01D28AC2595BD123E8C062B8D1A9E1E
0D8BDAF66CDACD356C5790F6307562481F07F89473D24F0B4A8233C59028BF2C
8521AB6B8FC85ABE689B800B8365F09F8AD95B2DDF4B5AB8E1B0DC311FD77D52
210EB2073CEB06E68B348DD48AD94D0DEF00E25E76AEC5B22FD073701F486F0F
91990C201FA4DDF49EE7703D9DFE30FC3F11D3578D30FB46A5A0E9958490F023
7B0921143CC3675F4646EB8E8171D61C586026861AD5B6F039B09F94B5758DEE
373152AD8347A2660B90A70A8821E9A558D7CAEED313A2D2987627D584458013
5B616405F42758BDD2C8CC2A8854C109EF02499A9EB93CA71FC9C0D3222E949E
21E1A4AA9B1E248D02EA353EA834E1F86079F3BBC478D2E71DBCC56ADC1A8061
9F155C66DC637B24236DAFE0AF978F56E4DE8F5DDC3BBA41CEB43E46E9972EBB
66CA1F21346D21AB851B2E87AFC42C04FF587430F65BA9DF1584826D4B346BAB
C17BAFDC897254CB4960DC6D666CD1F49033AE80CE06895EACC815D11C5043C9
6E89E9C036EA29A15C4EF9EBC6E20CCC7DE431F9CD3A1B4F8868FE1309DE7E1F
A0A815B73988E64998757389FA16DC560B81EF048234AA1C9900C092C3CBECC6
BCCE8BFF4EDE18EC80DFD6853E15E9B446D6D528C55D9D6688C530A9C87F9827
CE95E6DCA24FE75E77E289B172AF9BFBFEAC4092DED21E55B42B6D4AED6EE209
1E33FE3A23E68BED36AF2D0B480AF0C39A12B68F330C6794A3CA9CF5CE733D7C
9E33319AE8172CC0EDD3FBEE6667EDA6AF0524C933849D8E474A3945350FD283
F04E72AE6EA40AD3FDE96AD0429403619BCFC29B109BE23860C670D5EB5B0EE1
C4775D19AE386456AD8C5D6D789015B2CC356F40419158A56CA1E10837B4D590
E004C2C2B8AC7C9FA1BD662284A82499D32DA8283D0A6916DF317E50DEC99764
48C4D7568BF989377808FAA8E35418AC833780EA85DD29EA8DB76111F10A1422
E72A76924FB212800F14C070DB3FF60A9B136C1BD7179A5B466114BE4306BEA3
8A3E49FFCA7473C36237A1D4EC030B897874871354ED6A9738AAD4A2580EB460
4B02C3FDF11D056BCBC84DD4E38CE7E9E4B043868A218FE18DD301AAA69044E5
E94FC0BD251E788EC5852048F3AB967BB12F93773D9BA9597ACE2FA8F5AAE916
06BC8FB9FE50103F0104F9D5EA36D27409617359037AA954D63423CA65D6445C
9E5DFE0C28AAF68F401CDFC0241B4712D56B35AF4D8F91FCDEAB86E06EACF7F5
DA3BC32030E4E23C5E0E7E806E67289B557663D53DE4C578F6993FC10789AC6F
A67906A6D7053A236404661DE55E772F5982E78CCADCFD096403ACD60B440B4B
15716DAC2AA7D4EAEB84E9764345ED23F03F6D79DC011146CA28EE32BE98532A
F24D5D2E9D786C4E5A68F5DF71FC609F11AF528652EB3D0DDBD5F7F21E645A85
0C35B267F87726155A4E50C3B0C3EC18942E87CA9B691ED3689A3E5A0B011295
D69534C6B152E9ABBF7D6834CEBCC5E45032EACECCE1A8AC85F974A2D2145BE0
10FF9ABDFD72C4D5B371CA54AD62FF2C66804BCAB7DBCCBA80F6B2568910A40F
1A19000F1997187917BA23FE1D021F0D8D0F224B875C05157CD351DC708D082D
9A9FCFE22CB9ECD544CBE2D7C6FCEF4143E50F9A9079DD2FFFBDC53B29B8EF5B
8C6E1FB46E5C40B1D2D23D99FAE303602A75CA6D2D249929BA4C2DED2BAA764A
41DCB7D0038307ED2B999CB46D339DDD22319BC0732326C35A3B1B5B8F4C0DBB
619C8036F6BE8AE79EADFCA48A889164DAA33CCCE62E5E2182AF738D23014641
BD58F0EC389FACADA308A1723A5C2492BA0618C77D24E2CDE66BC6BA989EBB3E
C8E44363ED00547E7FD4506E19FE361FE6870EF2EB19DC31D08B3B506F8BD46D
5E766A1BB33298840D0D678CEB623240957A1B5B7382ADB63411F870A4523AE8
E16F422AB07D8800C1D8C02D4B7752E461D1634D57CE39D8E1DB5CFB4C451D33
81E321FB11C0E58457A66912299D5CBB00ECD376899C8B4B9499CD6ADFE6A7CE
E9CBC3B88AF70F6E34DFF42312C26F1F566BFFBE869D035829810E73CCF15F09
C9D2112C7C9C3DD5A4315AE0F672BEC79FB647627DB6DD020C5B28A5F5867F1D
07E70480CDC744969631C0E140672C6445756E4E43CA8AA6C934ED48D403AE22
72FFD1124BFA91C2B251064F8F0B8FD51ED85F5A5252FC52EF6EC557C8B6642D
A14B5EB2AAE536E59FF87E4DF116E24E0B2C3DACF2BB4D4F11C5FE4243E40961
E56C594ED6F276069D11ED9BEBDE43C59E2F387A5FB73BC878C5ECFD97E10345
761C1536F888C3C39EE4851947D178DDBAF6E0971324F72468AA5AD6D13FFC9B
A637CA9F6FE381E282B42D22BE657E462C8123BF810E7AA2C66C941FE659FED5
E582EC2347A9D9D53465E56D293D6BF610E54C5F0F312A9D8D13095DB60A2334
5231147669D4AB63536DFEAFF11DE3850A36AF4266D8B8F9041C564626D94B23
D6B63755279D4388B6BAAEB9A327BD3E7CADD265CF3D42E7B4F483087DAB7EA6
5ECB115DF97CF787A7573C23EADD24CBAE9832EEED1AEEEC95A7DC4044F60BD2
A1149862434B7002E64CC7BCE3D0DC4C2312EC701C2A55C23A71E12403A44355
804B07BC37BF915A60F7C027C12EECE50DA567A89BB3FAFC79A6212F6B840C94
DBA183551CBD575163718E5DFD4F8AADCD73CB0823C68CFDB0AEE3ABA7AF04C8
C432B4CD16282F1E9E66AD9E7C3CCE1E1CCCD7F040538170E6B4DE0356C702F5
38EB0E8D658A3D44DD192024F7346872E84795059D0A12F0E03B9B88A093555A
7D35BD9676F71B57619324C5DCA1C555BA94F10C28976ADBB674BC51833FD726
D168E25ECF5385E0C284F01CD52E27B685371C875A6FE35B2A7ECF50244E02FF
10D6184095A1FAA83944ECEE55A8F40835DCFE1BC82E285FD99B6CC9808D4BF6
C5E91C51725CC9428D0E30F8841589FE146D0525DF5FB31C974FC3B57CF0F9E3
C7ADC327457BAE54CDA11B7C316065BB27BBFF354AF01E2FFBF91D99B8BE9B62
1CF7CF9BAD07616B65E2251BFDC4E34068475EF1CECC81F0CBD9533A766C23DE
C66232477D1F39A73F7CCD64404AC251E82C6F8DA89C17CBB515F1B16E2B05F8
2076631C38774FB9454F368D7BC1B0BD37D5F03F931477AA59235FC33C523F93
DA2273D2A4A3205A594FA324A80535967BB035051254C3B55CFC849CF2523466
F8951DB52E0D848C5D9668F6C99939143ECCB38C704FBA1E221F4025EBE109E1
623BE56010366031C22F0A9189488F94228B0127757402E833D79637701C1041
B8A59CAF3791C219F930FF9F42A78CC859D27915C7EE363C4A24562849E8FA14
1C5A0DD35FAA1270B30242AD7D07C2EF599D28170AF9399BCF902467AF75E1FD
CE064578CE287B9AB896001714CD4537FFD95EF2343B95478A506D5036270445
661E0B5AA0AC40A985CF5A5C4187AA81C5BA8892EF2FA9F87A6A974058BE8B4B
E43DBFFB0C6D14EE78FC84B1BD61C526475C35A0601BB7A2FFB0FFC63B7D9F12
B2F4A61E66537C09C6F7619157A217BD7A0F49DBCA253B5A47F44758445700E3
4E47CFB247CFE8AC2F2FF46DB2B95247BD8261F39BA7C9EA276853D1D85C71F5
50300999F2BD75F2F131961EDBE2B9B17F3714CECB3E58A0A8C4489E239C17E3
4CBD51D992F2ECFBEC965700730C46F4B358C2890599A3C77CCAFD3C85932525
DED921561818551B6F7D1EF65CF5CF19B2B72268C40F772CFA2CD7A598A02422
2D41328515D7868D9E0C4930379FF87D4EFAAD7ECB31744984F3D5A30FBAA86B
2ADFE7375BB582AC084B353062263C43E8AB34218E6B25E840A594C538AA8052
854792C3AFBD5338CFEA5EC147472821B827DC3EC27D239604B5D286121D92AA
8ABD1FDBE17E30BD3C035BAEBD18239DAA326489AFBA4F271732429D0E7D2F25
A4CDA2190A7C4E411CC5B8E5487DC255D76461BCA90389032FE6682EB04EE536
7556933433DE557922C20D8C1D4BC1F344CBEE7231C396A07EB96D9070355166
25388373EEEF0D2F42143E0A68C1C2482A0BCDFFD9613AC0C46F3D057FB5F2F3
0C4BCD2B7969B6F1BDBB70EFF0F6E4AF1A437A205F776C256E4AC6D819088D50
C66063FFEC2811B93E04BB2E158C4B47FB762975E14C6FEAB7BBE41FD692FBC2
3E41B991101455F3530F8334C211268EC5D0DC5911767005E8E70DC80DACF9BC
45510C65521BEC3C9DD3E47CF1FA44EFC7A7FF4E314E461637D8801971760FBC
1875A846990DF6F891480E09CEA0CD72D2269D74A45BDEC29084B97F9B4D5DBE
B964DB069020777A4430D62C69FD5478896163D0EB5432491626B0C23FEC78B0
3C604B50A5F961AFE5755E5CAC6B1AB8FF47AC7E1AA0E7D67AEE9BE9CD45EDE2
CCFE5C7594E2D8B7498C00DE1C735AEAE93E456ADFDD1D655C54F2B88C06C928
783AE7E32CC7F03BDC406DA101D5EC3AA812E09406550B33757833953343D5DB
7A1D92E5465BFA656C08344C43DAE47ECC664BCF70081C2ECE8BC92D0D26A7DE
DA6FE09F7DC39F9F2DE66A6618565420D6D591D11D35F3956CDCD2C060A03B7E
47417C3454FC3164BBF15FDF39AD407E8FA1FA323408D17A9833AA1DE6AF42F2
20B87F22913A4347A4522359194528C8492C8AE579801B110C76FD7357B8B065
9B1BCD7334229646AB571CB1AAFF7D49756A20BD84B70334512ED3783BF783E0
F5AC5136C94541C794E25822B724600C77D92B1A9C176C47F7AC530B409CA2BB
F912DBB455D0657A39CCA1BE7B257D8041C6E9DEBE123998F9048769240DD0FC
1C15B283E2959F3E1394F6212E9CD5D1200A48DB99158291D7F537E66AF56C22
A58D8D35E53CEFC1C9B5E814CFA31029F8E45D5A2095DD40AE0EA50D27056390
F59E04FAEE6653798941795B253A86C73164C0B29DD093412E4EB6B7D7B2A078
E26A1657650D50CB35C748B00951BF02379B80399771B0B21149DEDDCD569B22
BDA5FF18C687E3717FD8D10B05176B2B267B175587EF3F0C71E90DF44E838B58
56D6FDBFDDDC1EA9AE96637C2E765F5755F019E3F198F267A7C3B79F9A6C1DC8
EDA91BAAC24515355F9825C843D0C6BBB366C705803D5B86E125446E5CCB325B
F943C3D7F32D49651F5744A148953526FF8967B38478FD9A143A1D7010531EC3
868EC2C0B22C68FD70E972EE164F6BD2127F47880DC9D6FB42469367406B8CE6
51196D0884211D48DFB521FD15326675399BA25DC06AA5E5CDF0DB7CF70534F6
20EE513F6A247C6B8AE6DD3081EF8B5E7EDEADB65C77E966173E0DD2C4527982
F9CF0D4F945873774ECC50AB47A6107119E94B1ECFB9AA7B9F0E4E6C466BC0F5
343D79F05E9721BED9326D7F4D9C73B08A835F9753F3363920AE7C7DF6A31F99
90EF6C927B65657F25C0011DCF5A74F5D7E7EAC9F12F4EC5F788E46EFB2EBF78
FF44364DAE6371A64FFAA0EBCDCED96FF1576600F1389BAC04F9EFA749674ABC
7F4D3D2A68B2366102ABAD3D8ABE1CFB0A9DE45DB3B9F562095F81BF4684EE4D
0ACDE9CCEFF38357C8ED9E25631C7370F75AE8C56D146650BCB958319D356A7A
7267DA5DFC521AC793BD28FCA5B8642474DCDFC2D70483AF30D56CFE8FC26805
B455CAA9BD0A2A3286810DC4F70082E28A8D951207D7C494A7B2784E050A11FE
8B1CC4BC2E8521474FCB68D8D460A41B61369BDAF603292C738D9A245FEE1518
EA3F8F5C9B9CF9347ACBA91577EB17593B668D20A9C04B43955B461301E0BA8B
F96F5B965079BFB307BF0331BB6CA781113F8C14174377AD4768FBEBDF3C4F4E
F183B863D350C6DBF1672BADC2751B3FA5FD95D94F5DA8022E9414A86AC30CD7
9198DE3038D43DEE9C4107949F2C483F0D2B4266B025DF0C80782B325A0B3CF6
34DF829297D1C902409E2D391E2FD8F764C2C694137ADD71C333908392F13CDA
64C769B2B01695D2A12BAF04385923CD6D7EAC386165819C19C75470FB635CB7
271D8A28A9BFA0254541A3FE4712B1D0739BEA5B0586EDC6E621B7C95F99B731
FD69660310783BEE1DD3D04EB580E52FD91905A6F1F8523E200FA546107734B2
76D7DF579A30043040E15E4E061ED9980FD96EC54915DDB68FC9CB38C903C0C0
2EBB5C74893583625BD4DB8249856413B86B4B6F635A0065BCB6BF7EA56EF64F
E87BD4D2A69741447342C7736AFD804063927C4FD3E09207905970FF6C42A54C
A9C48F2F39A20FBAD9A9EA80CABB0532B101D2209DB0285A401B0F8DCE5335A8
335CC64B06598C9177701C73BF0EC0C7801F2D22E3BD0A364F4A3A843343B465
830C94857A7D421BD10B4EF1DE150D2674F352427F53419F15335707709A91A7
0B097C96928D4EAE1056CAB94549CC808E590F7457128CBA3831469F621C590D
C9F916755B1D9869027158C4A93DC378227BF763183218442729250D597C404F
26738DB2B8A6E5058BE0F60526DBBE8E094B8114AC473001A6EBC721B3AD347F
9CC5C2A27C339C9B1CDA81D0885196DDE3331E23EDE760BBEA210077CB891D2C
327A2EE0888831119F214E625FA0CD4248B15A986A08C55795337D8A456AF592
730E8722A632641B24E5990880EF29384A5AAB483A5B9E87B17D39B03D2D153E
38CA6E436B3DF24E7DC6AD37137B49327871EA80F0245E7FF784C649F65CA60E
BB2461AA63CB1F7A4969B0000217F76093F44A497312DDE006B19569C83F1DF9
3D43ABB8DFEFDA12D59DE5A8E2A2AFD63B328775E3B449E0A9162FAE42F33C6C
8ACF74B49C313653846346846ED2A2061F27D2DA45CB5AEEB66CE99FBBD9293D
622388C905BA7E5A89408B4B0278013E81BF48B8D0FC7705BAAAE903C5E79258
9DC8B9172A0752D4E0EF8B8C63299DF4AF1BA87D1EB408C340D047061DBBDE1B
F5AD5D038BD6F67D876DE7D40EE0544D5492C33FA350F6787ABC2C21A95C123A
4313C58D9F29B5C004304B83F04462DAC9DE937B430996030C42BCB6B3794F51
D6F7DBCCB9A302FD64B673EFFDF8F0815D7853C6F61278341A10182864B9B670
6170B67822A5FF7C730360CF6EB23BC007F5338181797FB00B7026D3CAE5BCD3
97BA1FDCA43DFE85DD23457F1536F5E8A1E4D3E727B1688F745FFB4F9E56C954
57CD447ACB8FAA2F5A7CE0F51CCA3DBB2DEDAB06779284EDC0EA4262A17C8D17
CC29ED048CA1D1822D1FAD817B111D5BC2A9EC89E2F19716811BA35FEA5AF653
0FEB3694C5DB326FC1900C1051A12EA0AF63D45D80F3C0EF96F0BC5151B2FB09
97E30E10B11C2ED407DBF4E83DB4DD06D936C579733D7270243C367AFBB76001
E331CD3074A4F13ABD480EDCD34370F71F9BFE330C32D011AD656BE4740E8895
169607D57C89956B526A664B28A2AB50B15AA6239247B1EC843A51C17C0DA28C
E15626CBA5AF20A2AAAA97D4644FEC03C23E2474E3A4886556443EA05637515B
0AF0CAF7AD84550C708223DACE1AB5B13A4DE8C6819F70CD892B5DE377790862
DE9DC9EB8BBC0EC81A43CC7D8991E2D2BB4E21AB095BD961FA70CCF2A9568E3A
47FF5923031E7BCAAF3B3F728B2278F2B24CE9865F20902D6358440EFC9EAB6F
3CDD33CC42A9C8492C628F50E3885C00D662DAE00DB4BBBFE2FFCF9AB319C9F3
BCA04911B77B657C0E6ED90F9D16DA63302657F3B8E1D9231EB1EFB3402C2A45
83C60C199B9885F7A063D99B451BFD666E82909A1D8257272ECA9BC589990656
D0ECA75DFC764023564E8FF99756AAB70DBCB73DE06AA84522EFD87ACD132F40
F2ABEB4265EA1B3F4AD2FB7E0DD08759F93F78F34ED841FD5E310A2EAD916E26
8A701EE5404CF3ADD7D79A33AFD79FA72710FEFB1EADA686DF87BCB59F4C395D
341CED9DECAACA7EA5B90388374D2E7BBDBA729271D1230281E2EE99A4E7A4CC
FF81E8B58F2F29E19F7D715AD567F556BF4BDD84E9BF5C9F1644E40B2B0C342B
848B632D0B88E1482C38619D46A2EFD36F9B6DD070EB10982D93A8B6B7EDA7FC
9E19D9B48709CBCAECB30FDF85C8D7EC43C53CF9E9DF25E82B764F67FA7165C2
CA2C4DBAC2EC5EFF28889B7841CFC4905B7C195F49CD4B2F3040B545FD263654
60BB3539E8B0B2053E697EC96B4976567F1CD02EB361E7591E1B78FB92A8A32F
408CD9208A66A14DD2BDC5F9F9C9084BFE13F58D0A5B2A7C84A0897807AB1C2E
F74F5CD50CD7AAC72A99F351D824F86D33CC89BD70DD41F432DB118698B1F328
0F90A2FAF82D4125EA3FA457A2B47935E72EADA68F6A0DDC1BF80268E5088BDB
E5E056BA20E4D55D0D712E617802976F8F223C8ADDCA895309CD3EE87575C35D
E27F2042678B072162124C8155F713FEE002C686802E49EDA9528B7D8F8724EA
DAB1EA2DE9F6B8F8189A258350CDB97056F97CCC4209CAA120DF414ACA831C3A
C2B15DB2DC33012FCDDFC8ACF206EF6A6160B9F719FDC4AD5B38CE04E4C55575
7F69C669C5EC403775FD6AF873FDD624ED688CC9A6DC06F4B0187CC87BFD3690
4031D39EB760C8F0114D192702A69111A4467A43445A6C8F90CDA90EB5BF6138
47EA4515043C418049903E3F36885AD45509FC3E6A26D9A4120CE9A368F6DF4B
EE79F5042BA7C1BC0737013B4956C72DC9889E13896C84FBA0BF4D5EE4F6B4E2
D1ED09D1BD84D00D951D4CF9252A4443EECCAF1E56E75CCE61AAB16B9DF17605
1ABB7C78512D6F34A84B9DBC00293A8F7AE05761B5334EC794BA47E30E92CA26
0328EBB1CC3BBC829FA6CE8505766A92A30DCF28A4BB318E224C261F70D0F141
65FDEF1C160A16A35865B057F75C265E17E5B07CE7C933BD984EB713405D2B3F
48124430C87CA052190509727D8385E5F898B7E28470245FF44EDF48F0ED1666
CA8B3EE1411D7260FB5697836EE2A0E2EE366F81951039E754F9244B8534DB44
8ECCC2B849CA0A914FB174E3C63454AFB214A8944B2299D75F55E0409E722D4C
F64802A82227ED89B7E927DE87A8D4ABF3A8C486164FD2016CC43256A16EA86B
4045C16068D8B27D05FD215872715967549F665E4D31FA89D07F9F7B71AB660D
02C2E601831FAA6C3B62B1FECE5096ABE807EC5FDFE2B019C7207B0558CBEFB9
CF25E8D97B854F2A2925AC7829586D1E0321559F67C057FD7902194490A4C139
E6AB0AA17AADDE64DCC9318096FD87B5398776E612691F4FC285CC72DC550BFE
DAEEAD411DD89A32CB8A923809F889227A85D6480DA41A9D0603EB0FEB09921F
1BBA93D82A56E4CEC34D583169C4918F791067417FDD3136C1921A1B884CABA6
261D560571CACB5F15D022A8472E8F4982A39CB410107BBCBE4B5F3F8CF3C20A
8E023AEF593E55D24A4BD23C04CFE4EC3C5E8F62FB9F8B01DC910B511875FE81
E991C81636CF4146058A2C52D99BBF3B508F862EF87FCA9016BA8B65D9294431
598E605A1FEFEC719850E1A9B91CCB3EB15C6BC666101BAD394692F4F6ED81CF
70228085BE334806070B534E0DB951517598D3FC6C96BD3BDE3321BEE521AE6E
10CF664940FAFDE346268FF446F974F01DA8B66CE6C6E2484343AE644DFEA910
1B1646488C2FC5C5C44DB357C7DE9B455DCB92AE9502453E6BF41692DEC5CBC2
465BF1CE78A971F4AC9BD93AC84D84292C1307A5CCE2837283F96D066F4EEC9D
6C99A1A2A5F44B948ACF6C46F5357CFE54802EBC92CBEFAC094346C06AF01FF1
D4784AD33491DBFB17AA6A4A9149DEB2FA6018E0221B84423F478D768046E0B6
5CBA29A39A879F6DB6228C0105AE5F8C1D033F0ABCA75BFB3919EB0B4CA4D6C6
93EB34F5732C8B73FA833B07A413527E4CA410FDAE034C078C7202359B78D425
37BAA87E0BBE78BA5B5C0BAE2F3534E6FFF39D264A7F4B1C259E4B1010AC355C
D9D1DD0C6F1F686C6A95BB66E9002D608A929061557B2FAA7C41501636975CE2
65F1145D3B1428B90D09A2EBC928A7F45C2DB768C1D39A78B96EF9DF60D8ACAD
2BD90CF4641D3A1EFBF7DD1A97A2841500B51C672DDD9181CFAC6D5546FF2726
336F684968000895E0072591A530393E0EF9FDE55840B8B7D33B55839F745424
D22BA34F1BA11FC742A4859A57981BA528840E4C5F98BC050A5C19D339591110
4E7FB06DCCF94195191D65209B15A249DB0640E85AC696258ADF096D86A27896
2BDA35CC68A1B7094108395B9E847C09D913F35AB9B9F6931BF820312DBDE76C
EAF6668BE46B5A66BCB6C210AF684333A64BAC551A3C5BC2DE90F7A0324A41A2
C2E9885420DB19E1EEE2999B2CDD5126C36F1608E534EA5FFF06387DFD9185BD
17E8FB9C48168828BB42507B524B622F10AC8781B19CE8AA275EC198B63E2E8A
943C94C5D0112CC26B45288E707897B826EA3ACCE3E30A0E951D01199A9C9984
BD45AF96FB8A579DA31F59584455FCA7617F2744370D43F5E2B9EE5E001BFEFF
D5E8FC133B2DD91215E75E596E08D144D087FC691D53BDFCD4A1FEF82C14CB57
CEB27382EDC9D928F60F240ED2B4513467DD2E9F214E625FA0CD4248B15C0F23
9F5407670A26DB1F7F5D67C4D22790BCD0F1E86971607B9996E2CD033AA4E4A7
DFAE20ABDE997CE19D3119D8E06372482BD913736E5EED8C9C455107A2D2C945
4849BBE35D527F40F2E194844E76B625836C94F281B30535ADA8040378EF40B3
A93AA01DF86760FA5C65BF5F08DD89FB10C7BE1D5563DD47A48048AB09DE7108
99BB84464DC5B3D7BDE64177D18907706E2EC4109E8FCBF983775560A2C81AE7
9DF8CA515C323A63498CF6A5082DC811AC0DE34D55F775F2EC2F97FEA85F4B53
BAE6049789918EEDA068246F367E88835E166A90FB1A389A3420961AE108B826
DE9F26DF59B2995B000E5AE2CE32B6D8F4C6508DBA86A2ACDAE6B930FB8DAF84
6931370FF1C57F9ED89200DDB63772D73C36E0280F8ACDDBDE5CD4F5AC80EB89
75DEDEE759A2BBCA40C811B9D857CF8E5105EC715C86F0B6262FA6B9121BC44C
5A8E284E4873BF25CF878DFC0C7BA115D3388CD49E15D50DF45AB5BE7635F2EF
665B54CFCA5BBE96B39E69D388D9229C1E361D6AE41947D12B80B6A14D2E4803
A47DDC45AB8194BE9FCD2D8356D88A6443513BF22EE8DAC46B440C7190054211
993B107AD30872AA1D431330C9ACAD4CCF8496D3902408F0EDA8FD8E3EE8BFB0
B49A2AC41080DB9F3D8ED49A7E5A26FA00A1ED4CF20363A4562F836EC514D418
E4AD85D7C2198D16044BBA796678C9ED23D6194A5CE794151BBA0E7066DE7A30
7BF33C3021A3C3D207F5AE931B834F541E480FE0BB79A2DC3F72DCCA2A8F59A0
CF417AEA8EFE6296D1C86E153D774B9B69D5B3E64D4A9E9491D18AF7DC524229
B8679E82D99BF69330CD97738A875E2B09EB46346EC80B6171119377D458D193
B1F81EA3BB704C7D2F9B03C23C59305C7A2A9D392AA29F99E97B1A349481E9BD
D7864E4362ECFC49D3A4F2B5820F17BC8EDB5B7D6AC20A57DED246BF8AE7CD9D
AE438A5E3A74345D050661694C99C244A6C28AB016CF6063D0B8D2C5B93C0E9A
10B43EA1BC0A15AB6F0C136BBED6E020CA50ECC3E46D0402E7895F3C8D5E18DB
68271F9A0B3BBA37E62F3A4AA59579136CAAA1B40AC36DD171BE4B505A63372C
B1EF043F33FD3778024A3CBA9DC490FD77F0F3AA90292364C5A8C686F4E4A3F2
972382441633AB9F4342BF10C88BA0B18E7063D7748945087CFF16DD1DFC964B
4C2264FDA83DDCD78D676E71B6C51A64A87FD82AC7FD782E12CC4ED41D6F8B8C
A6280509CD27903207BFB7954A2EFBCC656DF4B213F43E7E565C737532B16B0C
2B1D11E8E7972CE4DA12D854BF28B4CE8E7EFB5B7E3DB938C4ECF572C5C6E2C8
8FA9336082C86E84310DF2E15C2A8EF42C62E8CD5DE7E5A67D422015096D6A99
8EB98A49CE180BE3F79FEEE1B30ED1EAA29FAA9DD9CB641E5BC06A22DF6C4135
3FD1495B99CBA96ABA9147ECEF29D69BD30D180F2B723659BE98EE64343BBBB0
B662F44D186BDDCEC37AEC6FFFA4998E879EAA280D8C528B77C22B572652F731
F8E3CBE52FAFE31266C2CB600E2D63BCE01082087139AB21BF4D1ABE0CB264EE
DD6BE0658FA2747C5686B1C291C62036D3705E771E93F9232FEB35A8AC6CC6C8
994DA0FCEB4503D281F5443F84BE6EC4ECAF1BDF49C506011D354C0AF52388BE
94F3F9B3AEE160AC879F5721D621B8F47DE1694B408603A0C4AC0EC5B2468083
435CE978F9696E5F3C75320B4A2FB4C322929A703A21EE0A1B8C5E26DD1E3BD8
52A017138F4C9CF842249CC9E1F444D0203CD45EAC63D7202E2F23518545A755
68CC03D8A037DF121F8F41E58435168EC78444117FE734A95976378C6D515387
0BDF50F61ECB986B27E37FD67F410278F242E3EC779A517C4D6040629FA35ECF
5F72BC11EC57E1175A4C76D86C83882ED85FFB721A5FCBA3AC1C1F7391FA4380
ACEBFD70A6CD51D4BB9704D549CB937ED3D9967C0290DF568B818F514EA83266
2C580500C0575C98AAFDF0C4A0A7CED679B25D1AC2161B2251B235512E1BABFC
79975C870E6D88A5E7E0269BAB29E63CA91A99D154F56C933AB91593FA24BA11
A61A8B40D3229C18FF673680C0D98D851C9629B978FA10CE2AC0425C7839991B
24A82CE1E3192849C4397A469C12B20727A4CA38A6CD67A8E46E91402D5E8C59
0CF59FDFD8BB1CC5A9F32DD35116E6810E04C1EE107555A6B9B15BFD37418CA3
3E33BAE8A1313E4A271AD388529BC0F787B9E558AAC41DE84647DB0FE6EC50B4
44E7BE8F8EEAA651DCCEC032C7FD80AA17013CA099DEB71A9FFD511549C61F9E
E36A63E36C3A928D252C6E5DD599F32E60A1D5251D270D0D2D0D0FCFBECD3B9F
74A6B21D04D33D8D6867E328F1F84E578A84AEC5B55B92D9319A8760B2C3238E
9D9407B355489B2F649115050BF7C3888F92E015CA5D91B363F99E47A5573260
41571E6E1FC8DB900F977CD9FC6A5B91EA8389F040836605EDAD3970BFDD1E72
00FE6F7730D33F25ECD96EBBBAED8A49B82FF79AC6EB0B36E2F4794FF8D4879C
88728874706381E06CAB4FEF345D361E6BFEB0F6DF9881DDD84095D579B1DB60
F4C2AA92B696284A5BDEC2B188A4987CFD39CA40BE4EBE0174BA827E7DBA9578
C19EEE807B83CF7E1E095CB10D5CD3263B03C83FC4B3644B2AD2BC39DCFBB8B3
6B101C9796565869F375D094967B3FA905E88E03863FA67D3BD8E03F418C44A8
95C34A1D6C4034B5A2C6FEA57D50A9ECF4529BF907C09443DA2108BD49DEB714
141A10B4334FA5A5B665E0B3FD74065F3EDCCDA8B1329836CC6136E0B2DC8292
E36DC443CC5EB14DC0296750D8A3D5099541416B91533637D5D1BEDFF6AD5664
0152A5010D25C836FAD8B8569DAEAE618EFB80B0C4C682AF762302005B0400CB
5F7CB4982A81A83E1DC4203744C86A1FE55F5369B12A05851331961A7FC541A5
F11E5AE7C363134DA775544B63D281D68BDFEA3770F82264386ED3307C69F7B4
EB8C14B2A4EE6C748420DE835260C8569B437B93FE55D79C954243E49E2AEDB3
AA13D89CEE02664EA934E0777BD01EEC83BB56732899437A9522A015D41C58DC
E0075458FE5CE174118A1A4FB4138450AE3C9C1B184DF5E4681019A2F1C3406E
EF41E9FB1367E89709CA7AAAB9AE3B273DB6E751F509150466B4076AAA04763F
B71D6C28247BE7CE7E7206C3C6DC02D67D3A8132670FC6F33F0EFF343B69F77A
375EA98302E471759DE406C018F9EE020A5F6C02176DF5BE946C60C1E7EF7566
232A6E513C7453D17EE21BE265B2C7361CE0730E2148AD363D40FC75EB3F94FD
F3A730788AF639B1FEBDD9E80690D779E5A9A4B01B3C370E48F0A6C6B58CEBEE
82D396F2A3B3276D8416EA2DDF44717FA62BFE1755F3530F8334C211D603F860
04C9D4A7379CB09D4CD7D67E335CD1D4CB26193D06F753FC3BD99FA74BE8A7CD
3268D06EDC9C961F361257D41DFA162A4DDD046F422A49EF8453EABC2064828A
2254F5568A8D9E092983638DA625E36CB1C3D5EC97B9D19604F4CA460E1B78B0
82AA93E1B541228CD9817B27BBD0AD095F7A824222AADAE7850A668174CDABD0
BD1FD8087DEDF5DE863849881EC3203062681DFB3A2BEBF5913DDD852CE7E521
6FD342904CB71AC037AECD69BE9AD7B87EC13DF7B6618B71DFD709C036188AF8
69E8D791FE3DCFC3E1A07E4DE218175604B228BA1A08DEF7D871A1D5C5EF59A3
C0DA83988C3497C382B1FBBDD8DCC67CF1CABC23E8D3B4E3FD19821961FF7FB9
CDC8E87628938D6D0D86F38133921B3DE1B23EBD4E3C802D8BEA7EEBE241E7C7
DA1E41386C8745008E5FDF9C86DE6697E60438DA76A0A508D8A049B44F49E103
5E0D4AC54FAE46B09A0A16D02CF3159423FAB4B95F4CC83D93AFDE394A7F95FA
260EA13D49E594938A2B24D0AE624CB648EF0A2E816D6C1C3C83FC0DBE4B5DB8
D462224F084DC243B673C98D881306BAA4798163F8D8ECCBD1FA9E023AF72273
42283FB0D175888E68FBDC2D6B02C0965CDC0D91DF1A487ABBBBE2E2896F183F
7BA0BCF7739D813518451BBF41F9D9F03F146671B749ED0D0F1B79AA194C275E
02F4F59BE1AD9366701C85637DD4524218C925FADD7DF27AFA5891074A2F61E5
1698FA818A39B5489FC9786F6E8654072DF4E6506668FBE0979BE26BD4EACDD6
5A72FC17E059626A92808381BFB36E50D4FD64F9460DCF8F417A6738877F3A07
1F3244B412E0B99462EBCEF02BF5B1512E248DA0751CB8B065F6C9B5BB891DBE
5A66FAC40B2EEEB4EB3645D256BB1837213660A34F28F09AFBE2B61C477CB7BC
D967018E2F3A3C54E382B3658DE64FF05D504D505330458A9A314FDD21F48294
E98EA28F5870230E9DA69ABC80788F2F72CEE5F55948AB24397BA533607DB32A
00177997A0A95C3E7814F1A49B534B5D100995E8AC6338BFD959E1DBEA1E6755
3F22DD27EB75E0479F1F39C59DCDE1599B54D3A3C1B102D576C592BE54DB2A70
FF17C31FF80F7CCEFFB0FF30CAAF679B6A6CFC2E5CFED3DC6D83ECDA5C54B6F7
6075E99EC503DCBF36AE39C7A9F05EB13C7183551996EC523911D3D349C04C81
756910E93FB9BDFA37E07D48D28A21A03DF5D2D4A3E294C07EE20AF48A29FC86
15A405ED00E79DA92E23BFC84638A54AAA9324741BD0673DD59C4924E17E9200
4685B1BC45A841EB3B92E1C9CA60DDE5810861C4659C00112EAF398E2A60F51B
B2DC84C2BE19FDF1BF03737057D22C125EECC5B6161D1EB5521787F7A76DD68F
7E5D640C87FFA05C0EA432E618E2E5E364D7A24E7B41EBAD5757C73DF8618AE7
798C3EED02E053F88C17F8EB7E5B9A1B7CD8E0B256E3A95D462DE66938A23FAE
D49DAA399B058D098F00FEEAB2EBBDA734117A04843B8FBC60FBE3B3489751C7
30AA4C11F8D4F068FDDB8C6D947F1E0D986BAD1BB3BCBD225D11C064B367598D
A0A0139479BE135A1FD9BD8169DA305B14E94BA1E6666149FC2772672A7D9E0F
5FA6D3FB5677BFBA6B3E7550B750C067AB8F2705B9A7011D570F3831518D629E
8EB5DDC809F85C6BEF3345F3A6F5149D2EB7D8488DDD78D9BEEF25BF02427893
F032020F581B1384039664D46FED71D83D1D27243FCE7183FAA45A1675EE98A1
F25F640ADF732D0F3522AEFAC04E25F71065BCB57954C4CB5A9A42C6CF6EA0D8
0B6D2FC36DE74B7B16AA04828FE02F8C2A22BD64092A5555BA443EA2457F5670
3B271F766E4E8E3E36F9D84B8B5D21D25D6DC0252CA2E3EFEDE150916661FEF8
5C14B05420825DC8CF194AD161C1C1E17AF35DE84823B04EB0B46C00493EB4AF
C5E78B5CAEB92E5613773F0EB0011D994DBFECB3C601EA960243345E3E802090
D675D955B38F4E038451F64EEC1D8C7C96A755879EA66E67C74AD316A3E6FD9C
20D410874AB4427CF191DF1FDAA9AB6568D999353941A59B60AC7FEB3571B037
07C81260736637CB378E73CAFCCF788034799297C2E78FE892B755A7BA81B3BE
49EB6F17859C46A687772B58FFC25F37C458BD636E7E2945A17CEC4A0F58B466
2E40A2E6FE6C67AFB98FBDDDEC71DA8737A84BAD294030AA8FEECB0392A32E43
FA49F5870695901E686D807DCC3888DD01492095E0C27CCAA30E0DB63F02F11D
C0CE8A94BA0EBC7F12425CF626FADD7F013DBD6E18D63CF46DACBFF664979693
8EC3BBD7FE5B14FE97CF4139BD6C4789FD52D129BB0CC3145584C7E77E0C449A
5D8AFC82CC63082F68C47FAF8A1835995302B7DB1D2BA009833C6751B2725F56
D27307A1F764D55D094A20DF6325C9A7DD76032D79EAA61EF4D49813F6135EE8
C2F588B1B7E08078385166BF03BDD6CB96CC3DBCF7A0B95174809A2346974D75
2397E6D2ECFBD520C034C86991ECD1873495FA252C7E9B3E4991E4F7FD979914
C08E65B561D169FC16768392769FF779169869678721C9BCC5DDA54EF931BC12
C2F8344C98E007587251CD0B76A96FB72B689096E7517A2A77561C127BAFABF4
530173A252DDC7E666571C8790D9670CE5D3DFB2424B7CC45C67CC3D65D86376
FE392900FA19FEFED037760D1B21CC8D621A53BFB72993B36E3217336A50E712
0DD85CD390DA342FC60563D081F110CBB181C03581AE7F5CFB6E2A68BACF559A
079F2FF1C3615FD8AF94F0747C51AF4685416092FA7B8AA3866FB247E9FB0150
0448E7447559630FAE3DE9B5E2972A4DA72A6BCFEC4E47AFC480BE37C9B90520
FBD3618AB79C7283E29A3FEB313E054934D4FFC8186A74967D677909BB797D55
382CA53CBA27577BAE78117195B72AE08A0D398286B2FB9050CA34766751B3E0
61F7E54C15A992BD7256F92B621AE360A3635EDBFB7442973C3BADCC94CC7F68
5CF1CD48E29D2446B7803AD3BFDA9E0AF3660519A999724580D25DC1987CD70E
6D92290E412ABC9B21E5A8D3B2F2401608DDB2981435FFE05E64874A24664CC4
FE3A22CE19AE9C0CD35483B9104C7CF4B35038E40E218E86DBBFBC5CD230BF44
9926A43A2363231BA16B08B1388AAA846763C47780D7F1EE6C00ECD23E4BC88E
6104E7DB68E0313D2B2B6051AB4E76E6BD785EB1F6019BD8250B9B5A29475E6D
8C7941A079B1FD89BA0DF0E23D66FC33E91D93114E59B3A0A8A2D206AB35C0BD
AF21AB2F0BED8A8CF2D09B98B2CBDFA71196E5E374EE8BBC8656C010B163C5CF
1C65DA4E6C2D6488F2A74A317D798DD4C856E80A964E9BE3B250375732876B43
7F049310520BC67676982EED85AF2521EAA74955C0D57264D27A27E8BF0E1F22
A6299DF95EC2F0C3FD1E3D88480CB9317BB0D22AB4CBE6667C58F98D48D70B09
83CF42D5E87C2B5BA916618D19CB084ABA99F090007EFBBF6AB320B5C9593B11
A4996137E2514259EBF85D11C6AD7F824090A09C00A41CD1B1E5FE13389F8115
927B3280305A1D05C55A600DFBBFF1BB568F2E23D742590A53FC4717798BE575
08AECFCF0432D359FC54BF45733B32AA09760D4F19817A7ED74415B37337F283
5A094DB27FB18FCBF06EA0C01B74CC9BF8C49BA9AE080E25C85EEFEC49D94E6C
E45E9FA59E657EFCAE1DA5FBE871D87E06DBB25ACD834E7061DE907C2EBBCF6B
C40D41D67EB6990099470E7328FFD700F89DC2F7EF262AA503A0C73BB707FD29
D1C8B3CC4262FBD996C09DBA013AE03EBC5207B8EF800F52B1D0922AA79E68B9
63A08E7271CE124E65D8CB497AEEDF31489FED6C4F4182BAB1640F39199579B0
F92C439FDC8F59AAC8AAD4375141633300549D0DEC82610A15CBD344CE7D714B
EA6287E7197936C67A0B0A99E80FA010F6D1CAC1213A55062C244797D75D8B8A
EBD5B9FB89188D46AB3414056BB5B2794CD7CF23263606151A23D28C042B1E88
32A48D7D9281D80F5FAD69EB763FB57A947893208D583BFE57D69E4CF8A759EF
D7C89DD3F0B328490C546A2BD7B5C158C66C1744413E6D78388251FFE0BF86DC
B132C9BC7D2FF015AB46A3891B01066BA36B19BFBB47A27984EA986747BF632C
4C84D1A517B53B0BEA8A936F9CF329B2F4350B0D98C3D1255630E5544FD39421
BCD57CA756D71EAC0FE3969966998BB4E92AE72C6688A5942A820EC853387884
A1522D04D05046DE4B8AA759050A4CD64E67D56C072C15B3BFD96112F27F9B4C
DC7DC12D52AE6A36620F4FE66BAEAA1ED3F498EB33F599A9B377084AA5BBEC4D
F7F32E388B3C0F65BD90C45171FB5CC0C1A1D15B52371CC1F2E4ADEEA1554980
E13B37FEC33DF3B23FC7BFEDA3E59E5CC26F81903891204F4EBE91954484A8D6
368FD7593871D24E593CDAAC31293FD023C5385B064B0DCA64347B4743C465FA
B600044307DC8129BACD028AED1A81AF9DC5772D8563D464EDD37818C754F1A1
39177AC9E90635084CE8FF15FCD80B7758DD6FAD89E0BEE3408D38C8E6AD22B6
9062CDDDC054CB3867AF0B8E3222280682F885E33BCDFD92FFBF73C91DEF0676
63ABD28D55E0A891159E6E0ED19E120A6D3FBA33C632806562B8254FD981A252
828DD501FAE92572FA02EA94A40060EED4DA427650B354A10B46A452291732A3
1C37399449EB4AC20EB75E7EF41A4D523580C0D9B3240023605ED2F84862A838
8E70CB183D808514B7C196D445A36D9FDF61EDB1964C95E86577760CEC1E6F7C
63F1F0772CA5DD9EC3FAF40235B245A61FEB930807252DBF233A902804854957
1530698EB2413D09631374C1F1EFE6C47B877807ACCDBA27059BE3FF97E8ACD5
C424E3035E59A43442B99A627FB18171EE39B9968333DFEA81FE1DA580CCB52F
DE7CBFA758E990A77EBB82AB698B150E779FDD9DB73AEEA11615E7DEF726AACE
31E3275742D1EAE4DE0A8330DE53B2098814C128FCB7A073A8D6F00F51D5DF92
8AD43784B4FD67B38DFEBD02AD61B8793F7563BF9F01744230CE0ACDBAF6C1F3
127A7952173340FC375EC2941EA3F99E623EC4B3DF7B624CC6A84DD53FD274DA
B5FD497380A43AE513D71837FB78CD002E65B96BFDE4A362D5BD17C4AE8781A2
A9338E8F49892490A1CF05305DC3B29A1E30B00047A5A0817887BCB9F55C05FB
87B760B29C99F73706CA69F2EE2798076D9112F645A161110401A7D0146E07B9
832292F6443F52387F3E2248E2841D8E58374E527A3CFAABB21BB3ACB7ECE734
3C84230FA484C51966D5132F151FD236DF8CC593E0BD48D08F9D1450AD9D4E89
A205813AFF5E34AB029F484BA14BF5262553A87258FD46FC919B2C97F82843A1
4707859217A6167024155EE3A67C4315CC93251DD04C031216BABBF9992841D6
949F12D9FA80E00139646488CBF75E29A4F9F8F4018D60857E4C24847BB02D00
AB2014D077EFCB6765432DB9BAF0DA8C65091A3D988F37E978A074EBCD934CC3
5ED54A34F5B33D9B3B9017F7606D99CE1D2976040390C9C2757C8875D901C9EF
EBFE0078093EA47D0DA522E23D917ABD72698FF688E5524612DB78B0EABFABD3
FCFF303E36B6E9E00B01FAD7705D8DC604634225C5915DEF90E21541C15D5756
CC52CA9EDD64727BD3BE976D4963B8B574D67B499D0018976CCB04676C0F14DC
71F3703811486427A640F6E8A33CC915D2F836ECCCE234C13F17FCCE32FFB476
B8B54F5F249AD4F43487F61D3712FACEC4B587DF55429E396C9C0AF8D0AC0CE0
2F15E45F1353E3FD7004E31451B4793C421785141391BE74AA714547A69D7989
D63BC6C9F8FE89448B7D384609C8D0C94F31BDC02DD3CB8923CD3425E39DBDF9
D6393BA4D3C31E842F4289D42C467CA23C96D04BFE252EA736BBA19FE77C6CC0
ACAC6299C3B30C0E56880907BDAF5229408AEC4A8149338459F8BEE4E3EB8047
907EE518787BCE05D1DBE78D78997F6D0F5C252D34C8CD50548F30F9FA0E323F
BA9EBAF56A0848BFB3E538AE0836DF7C8900E8EA6FACB4C54125E54552C3BC00
D57C5F2E8CD429E350C5E5064F89B3CF35D7BA42E12FA97880A39F959D60DB74
FA5CFDE2802DEB7F5FB70B196921FC615C062D6B9BB2ABFD71523E5A083C399A
2744D0F969B43B0F361FDADC54CD1A8B717A6973F1C0A06EFC9BDF91470F1F50
4644EE43EDBB75AD763F04A51940E3E00F45773DC20480C8D6BB75756FFD8F5C
7EBC5C2F57D49D8D3353FC7DF3726A2A533CECDE6F535D0F4B39893EAC863625
04A872500F5A72E99FD49D0BF4187244785EC754C8C57735031B7A58D1CC858B
C7B4D4DD2F5295DF066CB6F41C2E2C7E30CB250783923C878C41FD826CFCB8A8
3AE84F8ECCEC5A349C21BA72209F1BB2B63945F95C3CD4F2645D8FC0D4E76A40
DE306A08E84E11BB9F6D28F1BADC25F47353473BA778E8E510D109528AC6D254
E74DC13229E1B46519EE8B3A333B63D44EF29D334A64C61964CEF3E6543950C3
9028C333EC869F439054DECF38B5F687410C3EEA5EA1DB1FAD71C69F5C5C9D10
3BC20518574238996BCCC959A59D93608E66A61B5B69129D74C011E17D237DE1
C7FCD757C04C263AA2A4A08D7E08055E5B922A7A4FED03A449DF4655802BC326
5010F286DF8660274E19C5FFE0C1EE9442889AD25165226B49D7050D44AF054D
EA71E08B1B5D45156D9582CA59F8A49846E440FBEE516AAA8ABFF5C4C36C97C2
3029D2599CCD06FC306E6213FB8A07A7593334F5596600AFA61B697507FE0753
D76B208904F0928D97C2A77894DADB216105AC441F75431E012BA2745E6A20B9
E4CAD41CBBE07CB7CAAAD5C12529DE8527CBE79FAFF45FC72170D3FFC156E3E6
7D5BAA27B649BF3B5A7D1741CA7F41FF0D891D6BA5D04021F25218AA1D1D45ED
FF24E762AB1BA76D8F65A61B19EA8A04DC2F02DE6388CE2ADB1B7390B6A08CDD
1D4CEEE74CF6C7345A1D58CBC3962BB5598C1C42432247E9027A59D6FA060716
01E9F237A2ACF3EA310242870C96D7D5CCE26595D2C09CA9C5104D82FC727A5E
F191E5B6312739E01ED567A7FB5BDD03BE2EB63277AF156AA902B30C7E35F33D
B0AD41ADB02E0FDCD5D4D01ACFCABB35BD346AEE13F8EEB93F1C143489363330
FE17A7CAC73B25AA27BA213BE377996B8BAEB01F0F81E2F33E81335F7086B17D
8AEA615BF622CBFC2D1CEF22898F1639376A8639A1D3DD5D3F0DF35E760AD363
F6F0684EB1EF6CFA1B26D09D67B14F07F20910B19841A194B474BE68CD5FF84E
23C1DF6D0E2437A5FD0637A8804E30441D70B9CBE2381F9438B5F7EEEB4771EA
AAB7691880EEDD6B992B27681EB6DF1DD36642B5A8BA107BAEA2B7086DC2E484
876ACC6CFDEDC298DF2EC7706E9F77C8A04B529CC5F8B4981583124324CC491A
A909ADDCD2D038C3174BB48F03F1BE0F732F55DC22ACC3195E9040B7DEC0E8B8
41F9F1B81BA3CC4B2AFEF64B1CB095E96F9512A2419CB0026BAA2FF276010D7A
F738123415E277C62F8D923A4F27BD22F5D5AF3CCA4A47F78B4368FC5B9567CA
5876B77D9BA3C61D437BE1DDDCE4B5F3B3B3B71C388245D8BF66D94B24C3625A
B14F5CF73CFFA8E8028DCC3032E4386F9FC05BB416ECA4229F8358FDC6856BF7
AFB05714C26CF9D6B8CA978D6AC89C5D7D115D20015326BBB45A5A1007841348
A46784BE9BDFD1AA8BFC116E09414E329D0B33DA0F0721D66DF5DBE2E04E2592
CF525B62B002D62ED5C5112EF10E47177E70F3B0CE1151D24ACF6EDA1D64E472
F292CC5EE7D17B87B417B8F253ADFD6272EC073ED88D3975DF670EA86EA88BCC
A44930ED82E6AF4E94FF0D5DBD3054E122389437002854A0A0B4C5524FC0BE43
8049DD58719392C09593CACF29DAC76E44DD49577EF2E015E85944FB78505EEB
D738ADBA04CD0068ADF2EBE392B52BB9C0004A405FE4343AD551B298F9D31C0A
6D69B8B5D1062B50668F7FB89FB4A061230BA9606633898582A93F21C861B8A9
3035C202B06752D28682CC9ED169B358515F1C587AFD2B4054070460ECA7D33B
7F01F9D3456F4CE6FFF9ABBF04A189018A1594E36A01084A0ACA770670111799
5FFF3F89BAE25EBF1C6E9C2395F21CA4FF19C4DEDDFF0353B07F96CD7F4254FE
0C28AAF68F401CDFC0241B4712D56B35AF4D88CB63D2C5490FCFC21CB7024E2D
8F4807D027C96D69FE6DEC834B9A083C4CC2401ED331A25863D89A01934A2D7B
FB7729277141C1DE33016126C2CAA9ADFC6DB6742A13EB5A6EB879F4A7F4F841
1325854B99C4E856B81774CE40C93A493350028443C6EABAF73BC1B4BA532859
5CE6597DD946D7994FF2820F8051DC08BB115CD902D7E5B6AE136568B1A93E68
22C1FDE10D76708FE3C4103C1671FC9045C7AB2E892CE1999AA7567DA118DB4E
6B83D9B8BEE6FA6390D4F9D3AB952D7D7042790C73FC040BFFDD46783229EBBC
BBAE76C33A9136633843D76F54A40DA11818955A55D630AAB5F07303B4073ED1
90E2447225A33BCA287E4C01F8109864F5BABE1EB7F65A47E872408DE7311A00
6376660DC7C687555DF9C55AD867DA9F028446785C0C82A208F4F8F34A3DA698
A69BA804B9AA293A89E6301D04E91DD624D25C17C01C6EB24F8BD76656778D7B
849CCFB180F8017A840A96106B772F96B46AF0E75C41D1510FF0BA78C2F247E6
76B4F98BEDCA7B3BA46DF40AB052D9EC49DAAF46F100D75C858476A9ADFEA281
C21FCED367C54FEC7D6B7B2B8825737F1A518EADD83773A2775BC54B78E23B62
E3A2AE32BC724EC6D503D5B9D6FD73C9AC4437AE94EA563F9CB6C43FE96580EA
56158579DF245B6555B32B69CB5568A22AA97DDAE8E68BBB5BB64ABE18FA3D7D
71894AFC07B14FD7BC9E02B904A2C9D333C8B1796B3C19309538BF6E670FC496
64B666C9A97B6F4CF82916F0AB41B429CBF347632CFE037499C0CF471376F3D2
3805CB9620828E3A3B42E9FC445974401418B9062855A334042E14145F4684AD
22D461E740FA8A48C8D2F93158A6728EB552FA09202865142FE8D130092F36D2
E28F9ED3E42F346F6CD7CD1B8FF50F7D9EE3DFA6F118AD84599D2969FA7A5C4E
FBE8377A3603A3493B778AEA389707FDB84EF47419B48EA951E92337D102BDF4
6D056AD022E21F6FA83A84FB5E1BD1465E84EC54E446A1C6D663FC7D32096C6A
7E4E081D61DD7A3FD9373F9A710BDE36A297936EBA8F80BF5B2ABD3536A2450A
B5778BFC5F814B292E99A4B6AD93AA4E6FD216C7B7A8109CEF2CA69D31AEEBFC
1457D8B9EC0579FB5E1F42C4533052EBCD7EB952823D2261AA9B3F73296995CD
0398C35E5181EDE6AFBFA6625B81A141C3AFD1CA05777BB5680272D3928BD258
D1C694069BBD9DD80466FEF5099993B56921349E7EC16450E008B9A2A9C69D70
4164C36B9E9D41712528A57CD458DF6ED9F8FAF6B0A70F46877976C12C647DAA
510FF811AFF97366C6142BCE4473932308A1D0151678C8E74F80FEBAFE5C35D9
3A2CA3F5EE57E80137A72D6496D02DA951336995D2DE6BE506F7CADABDB3E627
49DAFCD55BBDBEEC2355065FAFFEE86C8BA72ED4E7655374992821556F4E2234
E00BC6D71965ABFFB6F13A15E1411F28CCC2FCF1A0B58CB86EF5DBAEE69A6A02
3733FEE5EE0C43F75CDE7AAFB6255A72BEF2E876D67F53DD8D76CCCBBDDAAA58
C51B9285963DABB886B3CFFA939E88D0AA704BF411FFE90AA72079D4C8CE6C8C
9F8C6B7C43A58C90F1F1907585979F1578EBFE7790A7AA4CF7F1F183C6EC2B21
4AA99E1741F6262F917B629295DA2E8254CD0C0C3FA72C8A70DC76B5B36B2EEA
DDCE7423CF78AD8F9382F85EA515D665F6BEFD477FC3D2D0497A8FF12755F4BC
0293BD16FACB5C78714AE6F776AD12743DCB177AFD2248A1547A381B388A32DB
B41CEED0EC58FEFD6895B29523A3E2876BEF80C096036DD4C95B6B6EF4151CB3
4E8788A7AA27D398BE9EC3ADE5245DD627628FF633BB1629720E21956A2E0336
865660580AD6FAA5A61891C1A49B700AEFE3F8CD4087B0766575358EC8570A20
D3AAB802610A0BF6A7DDBD2B1241785EE4E3C12C981718205F964052C7D85024
33ABBA6374CE96C956BBF7CB8F141B10EA40222918FACD5EFE018023D70C571B
D48EECFFB286BC0FAAA429AB076AE45B20CE176D103623D707BF1E06DD6A2C26
FA02ED392C0F88494C1B514EA52463B51E71CE4F9FA406446C3F30BDB2FCE712
EB0B990ECF43210965975F32FEC44D2878D5F3FA56057227D5EEC72951636576
6DD0E3F03EEDE74319D9E39E43973F306B28A700D83D367D4EF294BC48CD4DD7
925CAC7738D360D07B11B0513259F1558E48A4D99845A669BEE00685E959E29D
2ECC08DA5DF4A1E25783E947D40F9E6B3F8299146F27789460CF1F7B52162878
7B8D52899DC4EE64CEDC5C73DD9C6BEDD2A467C58639DC0E0728CAFFE3C5B6A3
B7302C8F150CF2A6A20E81D81903331AF2EA0A248016BD9CB8132A7760C13A25
D4F58FC0C20BED7AE3AFC8DC8AB319257AA2865584AC0763BDA35878555CB70A
86DB9A446EFCF857A59A2736ED5A7D88CE7F1861ADF6AAE47FEC1CC2B1DF6FEE
82362CBD1B9916C432B33F1E4AA97827FC091B52CFBAF1CEA0B66A6581C893AB
5DF250340D8FF6101C8B0C2104775A169F8D87A8240C73F379D567BF4868B13E
A291B2E20029034C8869677158B6B5D9C27C58AA432F300714BED0094A83839F
08E328486783AC3979608E0F6D544D92EC2B0F3684CC2E3986622AB76F0B1157
E28DD3226CADA9AA369809BF94B56F63555435CA52FA43595977F98BF85B7C09
B94B10567F71B2431DAD39518BCD96A0E4155EBDF9AB2A053F432A3149B7BA16
8CA488A7C8F2A453DDC582060673605C5438B65D4106CFABC41D1D41A2D4EAC7
FAAB2B6EAE8EDEEDF2704C327E35FB77C89CA26B4DE542328895A6CCE36F5287
47ECC774D5CCF50F041A6BD5BF1F8E62D380C7849CDF06492BEC78C9741C1A63
025D2261A987048B8DAC71B17769AAB13BF630CF3A877A009E553136B9DEED11
E9048F41D76525EF6FC594F7A269A1480B694F268CA7C9F788B1C2B92F34A764
6FBA54E11929F21078AB158F3D371257512495CD7D17195FC9CA9BCC9CF53232
454BEB91E3D3A8FA2CC6F828431225D771467ACBEDDE4EE4E26BA79FB4DD0872
F989234607894AFF7153A7B5D4448C6640547E35CDF1465C249CAB870818FA5C
C7B9DE515E4186049D8EDAE42A5C96228ECAF6B0B132392D317A0E2802C4F93B
7EDACF6460DADCF9530726BD2FC1329EB14CB1D1E041A9661E60F079E811E71F
F8D76AAB2B3E29803E85D729D9B42E7F78165CFB6C2F67EFE4DA81248D9FE20B
31BD7F2AA1DE45FC978490BB69153DA6D6161F7C596A92B4D6EF00FE931D4F32
23992DBD811A09457BCF7EBFF1AA329748EB929258416A34D1F24F412C710128
547A15D695F3947BC776B062381C25057FEA90D02F1300C4F512FC14D9AC7341
D5046C96E98C17C37FF58412D0E3E73CC759AC64F3CB8EBF8B5EB56F41B247F3
F196B83DE8D49099B46F4A9032FCFC5AF1CF8742A92AB81B06A52C4087386CCD
A558F5050025A45A1049C9625FC3E6EECA7E622D460701760E7495135D6EE121
5286E7584890E0ACCAB225D733E123302C0C9B054E97386886EA031B2FC3CE92
8A3B7A62E15F0374625739FCE99B64D7CC8F9D82A412650F50E47FB25F865D3D
EDE7CB7E62266C7DA9A9879DBB7FB52F25A5A5DFA45DB0FDF9B94F0F92BD7F1D
AE3FE9FFAC261F75826E8A50B36923BF75D22F48DAFE5A53E295F62ECE33E2FB
8243221A2E8AB1CD6D89AC5D30D323726526F7E76B943FB1082E09037CB62959
D3214F031777E35175370D71931B1B43BA4B41C9BA652F6E37605D7BE1D821C6
7C6D1B7D6DE18064541FB74001AF33637D19547C8D92E24C1190A50E8DCED4C3
7884A7D1E170C47AE4059FE85CABBB066949A02C4E3550ED22A70AC9F474F46C
7238DB10C46D453AFC04882DB8031CBD81363AB2976E904772710962A12C6003
BB22098E779E4CF492A168A044D6F2995B40E5C55FBC81DA9C274628D178C3E6
CE58D9397D49F15E3DD59D463A0B0BB825FC556678061CAFA7E187A3EBE1B307
4D13B722B73FAC9DFB7FDF80B37DA16253F41785BD1ECA44B691274F7B85695F
5F2079000CC6A6A6BA86F15CD6D854C5AE42B7888DB9FEEBB7BB5138A9E24821
DEB27C4E926E779A09F2EE7F6697E406B507D64CFF4548189411784F90B6F9F5
96730F28FE49829809557E9221DD9B2517472982ED98260DB84399BE2B21FD99
78651D5CB22D6852FA9E84D5B42AE5F9848260793B2FACBB2EC1B02EABC414A3
F2B542B3138331B41165DD50A32002CF14ED1392402B37816E9F52A3AE6351D8
ED2966F9A50E3B2A8E3858239D9743986093A1AEB536572011E0A26A3CE4C458
8AA1B9BECEB12A59108C122115BD6D84BECB52AF43A3DF68BEFF16003D1F52B6
2BC341084E1B1C775D0C33B10A5336BD1E521D18869E4C6165F558F664C0DA00
9F15549E0A5D45A0357FA8A5AC12E289CF2D93F383A28C5262CBEAE15984ED81
596EB2039CC1A9D5216067E25D3EB90ACD0A2157892D65BDA098161F82569CB9
13E1A5D4B3326832B50B45C50D8F3B912D34199D96B609FD3FD7FE42F04D18D1
33EE2768FB6AEFDBE92E6D99AC8DF51679CB3AF165B19E278ED874F8E46362D3
A9694BA101A3E0BFDECA8155EB4BC6A59DA04F61BE0BD81E1875205908AE0FDE
0203D61BA3BC8ABE8B6060942ACF0E359C26E38FB7611FE9041575AD1FB8FE35
479E20CDDDE2B4711FA3BCF65F7C1BDAFF8F1CB40CDD078B2B3129F771A2C165
1CF31D319EC3E946CFF341E7B705B7CA581531A2E16F148480E3E0A426609735
1A03EDAD9D7E84CE05380CDE0374B8B6AAE0E2B20B5D8032B07D62AAB963FD98
D715F7B90FA7EB8899FD5103FDB69B9B1404D1C398A0CED7323C24D3C84013DC
49C5FD886EE73DBEE0069466A1B3D42D3E6BB7E2FD58A489ED97546EC95BD894
0EF1700A543708FD91D7ADE548F91F6DBE5FCE6EDADB8A3512329E3473F6983D
F6D12822DB358ECB4BB213DDB43A269C5A177A574D79C7B97F87EC56DC335B39
3889B9B10812F44F413D923E4859B4EBBEE0655114E5FF7110BFC9D5E0419ADD
2F5CC1C09AD68EBDE1599CB6069CFA2C9917F00E7676DA3426665A73D5F08959
2B920DC304A252193F1D935ED5268A6AC194D2150935D6D7E9C8821D945DAED7
FB5E33FD5121D3770B4BCC54EF81FBFC0F2486C3B71FE0984CECE060A10A0C55
286786CDE9F7DC6B39DB37A7CE0E60F04ED9E86DB24A7C57A984890C62B75E5C
6F1B03315347A11607EC857D332880A85D103528A79957F00BF8849A73B9D498
74E5162DFD3164CE25F9A19F120360F93E7BE38AFBB5932FF6739E6CEB1E2B29
30DA1463937707D0661275B66BBE01571FAB72377BC9C451141309DFFCB2285D
87CC3CBDF04BA71D37F1F8CB449E80DD98089E11BD8BEC95738021B6DF7AC21D
9B88457317ED0F6CF9FF5A2907997EB777365C7556ED2E5B611274D0052E67FC
03A00F343FAF00B50E3E633D0377C07D1FCAD57D73137406742DDB36BA5642CE
4114175387F79E2D99A27ED6066CA17F5497ABAB38C14A3C64C6732337440073
CC4C3320653402A526E679936C6A0A4E839B74411B7B4A3385DA035E9EE81724
A19ABB79606B534F8E7AE523E0362AE977FED22B5D04F2E705851B7A0872EFFC
E44FC5224F35829B3986C68827F3A7E91B930F501A93455644ECF8414F66199A
BA373DB1AEA3B05787F79E2D99A27ED6066CA17F5497ABAB38C14A332C68BD7A
E08722DCE6A5762EDB87EA4AD820C359201C2A18BE6A4E8332F2357E23D06689
B27DA4C2057E3B5B73D14AEB1AA03BB07CBDF05B12BC69ADEB1659F33FC3E549
B4200D36D20926718FD37CD8FF81DBE43CD8F459770323F9A29B49C2FF1894F7
3C44AFAC86FE1D6BA10A3CDA7A1E5726FCED59380E3340BA9AC3E9F704859D74
95D9E1AD240C5C1E3E022AE5604E62BBF96E8ACDF42D79E6E714278AB53CE7A1
24D7FDA13D06C1E03028539338323F06B3AF9DDF627537F71DE3B160630CFC57
6339091662B7F1AE3CB1BCDD4120EAF15385B878485A966B136E08D4D6B920B8
4E040C63C1A481F0D1070B27D4919792C03CA93AFC986C34C0835468F8E76F10
48FFD7F31682DA02DD0A0B0E576D84C6A064440BA9A30C9B59A56B57B4F59910
07EC0A61F38CDB831D448C306BE3A3D3C74D8CFD33808A8A1BB4FA240228CA75
AE82AC6B0A5F7A74BFFD484510FA428A10857D35B43D4347F6DBFC0F0814E31F
464499435270B17B9AFE2E0C0729E5F10461A8DDB7AB6E9486AF082785CA8A5E
6F4F1A755E97F12D70263902A8FC574FF4C0E9655171298F5E7D4A4FA4D822D1
080E8013C270C5B650730412E9B8304950CCB83AEB4164DB120EA81CA66CC6C0
F7E5FEE545FF0E15A12C958EBBF6067C47325C1F72F813469904235C1C8B3063
57EF02FC4EB76FDBED9F976D08BCDC3AD62B13E1AF63B076ECB3C414AE2E4E24
93201FDE2D2E1EA7349E324829A88CD39230C05843485B3CD9B043D922DD870F
F5D2F360C48CE0694C85CBB48B4E62EFE21AE265C240D44BD90194BD3F6D96ED
689ECE3789403D6A88CDF4E0C8D41C64B9B1DEB72F0E9058EDB9A8521F3FCB1F
C8FD435AD5424312FDAC01C613D99E0004D037ACD19E72E02132283C34E1C1C2
771321F8D552AB0E789DBA81CB4DDE7D4A970A3162D903EDE288067257F8C7C5
2F0052A6652E6CB6DCA3252162B0A68F3C222F87CCB41F8F9F578737059CCC46
416ACFD62C7DD8FDE96A4FDD39FF9EC115E9E715A8F0C351EFC43325694557B5
03E5F7DEF09F93790003E163A166902C80C45B2A7ECF95085911926F07D965CA
C05C5F5C13676E0977BE581C95C0925FDC49F75C0ECE031D17FACAFBA8B43098
33BEDE25850D61CB75DFC0A0ACD2E5B15B0525D2D55BA1358A3EFB2641881863
0157976998E8E09407012E0A16B914CAB0CA7EC5242C43AABB1F0D56B3E6EAC6
6F8915564A45841C767356FAE0F79A12DDF0880B1CD099FC50E7068F615EEE2B
310EAACB5839DC818BF6E4471C9875B998842FC8CB2949498A39F3687ECF1229
D9BA0A6773C8E3AA1A9D95416FBEEA9322D805B2E6B4CB920DE053CA8BF5DB5D
CAED1AD012FFEAB32D4C5A72476759344311B528608B8BFF9A63D18ADDEF5FFE
63A9B2A73D527D3338B3E89A18C5A3DBF575BD2DCEBCE299703314D84967E7D0
57B246BB2427A14B33842864731E366FA94066871BF4B3A4BDD20B799C5A6354
3C4A14B3E81D0C5892DDF43E67EC31F1A4A3193EC28271DF4ED5890AAAE411FD
6F899938CEE7555BD3D5822106ACFAAE6A381EA2BAF0C3630E1F118B332B7B3B
428824F281C13557B4388BE0BFDE518CBF66E378DD13AD561030064B6D267FC4
1B36F7868260DFB4A94EC6FC5544ADCDF0B0AF2F35E7BD25C7AC13D6C57D2B87
2C05B9540C3F5D8595958A47EAA5AF0CFC749FAB513205F0A8CF8E4559BEAD53
3D5C666C38917A5A3E6EB9881D0B12D572E63C4A588B3CFFA003EB0E75315911
A001FC6A9BA60F85FCE0E63BE2711921C271336C20F9B372678F0CA59C720791
6739A8135A1EE62EF447CC527B9C6414E65A7F33AB05D0836214A94EE4E5537A
BA90E2E1F32E3F90B51313D7430BE1825C90D88DF40E7C92A52E3F29539FB7F8
E16596FFD4151B332C718B173CD10E99E31548FC7703AD5E1BFE6AC2F8D58573
11A800A25C4FF3679FD580042BED8B2A1EB380A4CE242F174AD0042E0F3F132E
D94495BC1892BB688C4FF28BEFE90847FED3B7470B94624512485C1D56003286
2BC7FC1D40DB27B6ECD62DAD0950121002350D0A3DF284860763728949F87DAF
E0BF09A319FAEBDECE5C8B4C660F77AD5A48782A6BD3C68A6A227AD280C24FAB
F65D4971C1C4D66B774E1ACBF2A59249A4ED17141E8776F8B18AEDA9890B57DB
8FDF8A6088AFEF5FD1D7F8363E5D0A84F00264461E1F89031611BB0E04427277
48C6C1C87AF42E2E6E851CA4AD72305F06A98717F96D1B700AB3A058588EEBC2
7AEB32B0F8BAE9C83CA29988D0C1FA9E3F3BE78B853E4D6EA1976DDBF9B0DE52
A2F8BBB81EB4609221DBD0C90DC1226498D6FCF77BA88F0CA48F9839E55F2016
899C638D2222A166899DA82740ED7C654294531755804B69F0A9E5A7E814754A
C2D4F6C747E078A2F69069A73AC219A617A73AF3E6F6A90A7E6E7DB6DD020C5B
28A575A8127E9E909143F108506076921A7EA5CB057740CB93D49AE4652EC436
6D31EA5F9D8C803C6CAA63F37EE3AA316A4E698A16E4E419722853E34EA34C35
A67C75F34C0D1177CF4B19FA0C4DC5203A938609AAF6E62AAD7D146EC588C4BB
2850159EB32377172FAB8D553CA6B822063A011F2B8B421C1BFC13E883B361A1
BF7720BDA54EFC4EDA6BD06799260F3EBE31F182C8131C29EF15BFF53D00261B
AC16BB7325C65EA7217E2FC2E433E97483CC6E33AF9FAB650662CDF673161238
6A4307FBBD64ED1C8DB6CAFE563BB702F436A4D008BC830C77532835DFB0FBD4
3162807432094253858EF1D2655BDCF5E10577569ACA7BCF5FE543BD08457C1E
2758E512D538C12E0B6C6799BBC80F0E476941B43A152BBB12E56033D532FB03
14C612BA1350BAF797016ACE1532C42F7FA97CA40A8C8A36621ABF27F90C7599
B5F9965751704D8B6BA3AE52D331A0F830B88E3FC97FE619677D47DD9DA7F4FE
16C0CB095CBCA10C8DADFA7DB963DA52C2C3992825C9075E74E9A18584AD36F5
9DDC638387C6DB3F3E54B5DE3D2A876E45022253AE1FA046467B10286645ACF6
E2BF62D45D4ED444A3314C7568F9D7C0250D658C633DCA9B4164D99DBFA007EE
08AE3F5089279CCDEF039851A7E6811944C39DF8A664335F67056533379BD621
96853D5FBC0F13FAFADFDC6BA8007980E5322AF35D28A9024DE4C27B9EAC0A1A
5C927E87A11B6649D1065E3D2C443B871947A3A55030C71C1167EA82BA07F1CE
FCE0977B68BBEF7FEF155A86AC029D9A54F1AE319BDBE33F637D9111786C7616
A508D3D3CD92959019D9812ECFA8208705D5C45044AD02EE83A494FA008DD91A
1A5A2D7E0A49AAE3F19AA1E00786B68B8DE4CB0008DC13655D7241BB0B1FEE1B
6076CDD15D107C95A23EBDA0920CA6CE895B7FE6D18F7129F73A3CFC9EDF4630
C2479F0D2D03EC76E25C4799D60C2C788C47E790954D374427F01FD92A3DEEDF
68AD2E92A3FA746BC8277EEF5AD4D0527EC20C1312EBEF48DCE5CDCFD1C3D890
552475FE671E64A0943B48173106ADCCF513C99618D43F970496133DC8C50B40
B3B362AA3B778CF335DE053C2C4B9E0172DC82801738BA5B717E9BB1B0730BCB
CB20E288B6D62977A40C93E75D916AF6D1463C123EE49E4BB8D88996227C83BD
C92869148DBAC1EA482CDCF4B512CD2AAEC303622CD0FCE7ED48388AB0D3A750
37D2D131BCAC81BBBD76524B4084D56C3BAE3D1DC9922BAD375A3AFE24948B7E
8D5CA69040DE4513C2B16E59080CC25B4995941D661AACFAE477E18018491577
2571ABE9A65530A32E20D0A15D57C0419673CC763D7A058759FBE1E6F328EC47
A800CE3FEDE5F026FAAB67213A4BD56AABD09CFF2921C14B4C8FC1F2BB4EA23D
EE18BE786B6C108B0E8ABC873A6AFFC580BE76EF29D1BEEB0B2AFE344A0D4C18
B7EF5195B2E535DDBEAF6219782C982C4C5D3EF840B9639C0D53326E8C05157D
68857287F883924C525C2479F47D49AB653EECE7655DFF9DEE6E3B40237EBB79
11F09BFB2C35C35093A16DAF98DB46AB2BD86E95E6EA9B38DBF133F3B6194996
B4F30F4F00CBDBC42EF173BD86C842D1C90DA9E387175CDF7A0193E2795F1080
08775BA3274A937B12BB4F69B155364C506F4F4A5A37C0D2A83483331F75A3EB
55CDC9422C0FFC4B2E607E7780A12741BD8B9432F2D40F8D48690B5BE9808704
5EFEF6D3B6C77CF66AF53817EB39A33FF176ED183DE511511F8518CB6A769229
7F0A499D4D00E39A6BDE175E5993B3CBF7270730CEA6A6AE0DEB05AA49248D31
D74ED875F39CD900506B923ADEF2702B38F3569949D4E6CBC92F00AC092D6A43
16A394CC9B3A0BD62801B843CBAA6B698E8EB37004DFA5F0A0C7C6159E45182C
39E87917CF2E34C79FB403126A51D42DDC44F6E00DB536AB3AC3361DA1F55596
92B7327B67CC3D02C8B2C0D02556F1EB6909C6DB0EC6A68CD690D06364111F25
10C29D559A18114EB845A98581B64742B85EE5EB9EE2AAE45B07F3B12DA18AA6
7B14FF8F9C00D6C90C6FD94CF3B8481B3C626DFADF63D8FE6CB228D6D54BA332
4D236F33A5145F9AE33616E6AB6F34D7DC37751897F7A915390DFDA602E0B688
2D0168DA689467DDC78729CB80E472BEA77E69C80AF89AA0B8A2D150A8CB932B
3C509D3B0217E89286AB34841238255E8AFF5A5116DBE2EE59F57C962CFCE5F7
FFCF388377602E066F91EE326D7E7E09C0CF79555093A6F313CFBE373A634875
B8A1A9D5E973EBA94494A39D949DD7ED9198BF42B3A4D91C3F7A1E532822D3DF
34C7708DE1B64B9A92F9F94B4E15BEF6772758EF71F87A0CD63522882FFD39D1
88AE70E8875B589BEF606041C51A5FC13C7ED0170E42B2A51448320D44DF53A1
E21123ADAABD43A613DF520F83CD5BF3D06212EC4D35A3CBB29E6E5DB7CBB32E
204819301A2FB27B427B96D280A44E957958235E59151FBDDC442EE59FA70198
74C49B52A57D7BF763A30598A602C5C7AD6BB60FFB5C9CD7321D73ACF961A28E
01A2C4B07782FDBAEDC0CAE78F03C3B2E217770F36F7456BE7B3514429FF1591
41B0BF37DAC7746722390343E81AC31D24AEB2F9BA12BF85D6BE9CDD2F0925A0
A65192C2CDC467FF71B4B443B2A717520E711183E1179C32019CD43EEE15413C
2F80A73D608C3879CA50A44E0DE6B8DBBB019217241240BDCD6FDE1D590B830D
37BD99F7AD77D54CF5DAC250A102E7404C35839CB1E7F6A7C3AD148F1876825B
833A0DF43D3E63828A23743DC6E2002A2FF442A44A667F6E11390E5EF57F4639
1662BD31F852298B2C63BBCF263FBEFAF22C1C45805F7AC940DF416EDEF552E0
B7E09338F454EEDF7D8E94DBA7B8DDC015197042E7A168FEF0750FD8EFDF8D9A
30CF3F6C7A6AA342F187813AA372109E146DB3FF65905FCE82958F9DD6243681
7DE6E0BDD9F64AFC2ED9D2B7F958DCEE08CECD1B73EA74AD464CD041B700E8AD
348F3CA11A8D84D3F1C791CC833DBD52CA2C4A0B61C40A4DC3808DF4586E69E4
80FF751EB7A3E807380B2F5A49FB0459D243719A04907194E6349FDBCA6ECE62
F33F0C59263F1D43BE0D6F16054C9E52001FCE7DCF237F27288ABC4164E11F68
1017F794ED5BE1D0DC32C47BFC684C3D8EC5B9F7771CE2356B9C7DA53979827F
B00C6B82AF3AECEB7CA0112A55F84FB2810D23C08B0CD780120286F4F41D41F8
E57FCCD3D021C3F91C829E0F305D87956F09EE86E84234C89429ADB8566950D0
F8D1E5AFCB1B0939FEA6A0D7CEB300E75BA85894EA42E05C66208C8E3BBBAE51
17463218E2D50759B0BA255EFAB9BDF548BC6A0B0570F9A57C1F0BB0AC26311B
C666823CAE61D20ECF1793D659DA7BF759D6111866B6DFF8923AF3713DF229BD
1741B26A430261F13A7301C639E862F78E727FE45C159799FA7A31477191EA47
6E88A666F0C5FD113F8D077E6197CC2BF958A68EA2D55D9859F0DE7911291847
65411925D03D581D21CAFD94E27E408FE33A703186FAB80A411CC9A04EB85404
E5366F675032655B931047BD05E1B8D7B00D8A3189B7778F703085046848CAF8
8278B6808D7FB69CFE7DBD2B08898B172ED3639E840823BED0FF031AA5BEF549
9D2263C8ED3E0E4961E43F3E7435E3D437831EEC1C178E3331C20AF9A4205DFB
72DBF2E21DC9D50063FBBC7847704DB582B5FB6F130C14FA94139F730FD00562
509C853323895B6999EC51570A619D9105A5AAB8545286A1681D3D2C4E7D5BCE
A92ADD2EB586D76BAE00B232F617AA6E347655E615A458A19562C0D678C0ED8D
0593E4DB63F719E46B48B51FA306B224E44382793F99F496A3D4F322589CE0C7
B65137CC843E2F67CB0FA128FEBCFC17563CFBD0E12B6DA8EFED4F35279C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Bold
%!PS-AdobeFont-1.0: LMRoman8-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Bold known{/LMRoman8-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Bold)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 54 def
end readonly def
/FontName /LMRoman8-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-519 -307 1704 1136}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105F332F89EAB76829F343C32D55C117728048C3
4CCF7A24765C866D3358620BE013CFAB4BFE9F6A9DDBD3AC5B860DACF39EC43A
6647BB7036401325A952F6BB0DAA5A3A236FC933F3DC95CB14E7AF036A954CCD
0705F4B462AE4BD96196A04EED549CB4F6892E90BD44FBD79D4B0C4190B7F3F1
BA98776794C365CEE49ACF063DFF9578710B26AFC3BB5BEC4B3CAD467D7EFD3A
1424E188EA6D39EA7EAC6BD4C4A20DBFCB04466A6B068A001BF9F5284E263753
0EFE138FCDD0C9B580D1D0ACAE1AE950B42F0072FFAC47CEAE0BA3A3E44268D6
211E311F618634E8FA6C523BE5C46DAF17DADB107A437D688E896F9A95AFB014
066F7ACB02B1070101773BF971B6F8641D3F42F1D0BF99AA5D41FE1CDC633A65
10CF89C90964CBA27DCB88807D235C769E06A937586AD07B82DD25DE718F1081
20433661B7BD38774D191F60D7124A15DACACF1833AD2B56C7C56D0362895A94
FF1371BDB237172C5CCB561C6EC136E74AB802AACB7F485106CBB4D59F07EA21
61B24C809D866BF9BD71AB5D296D881851AC736AECAC9F20664CADC0284A9ED3
13B983196C14E5DF8A2BFE526CCAC2CBCF90124FA9CFA7B56B80E9898D75D501
35BF4E96D5036DCD805FB64AC8F6F96F6CC176DC1EE6786681E34B27A0110576
B295B3EE9772D76F289091BBB20F4FC0BD937EF5482B08FA1259611A86559D77
EB355475BA9D9D36AACB5F1F6CD453E214601EA1288E204500779AC4019BE725
0D264A96D76F16FCDE62596D87B391A94E23331C52A894B559C5A73D5596C286
AC9F5320EB77740E5A46FB37CA9887908B8216E0B1954C3E8856CBE4CE138B57
1ABBE037881F6C47A8E9DD62FF1347CBE2B823D0D5F7A7C07D2BE76D1108C199
1B88B062391F2676C0CBBE4871D1DAABFA24A9C414C900AEB44C51E080489E97
5B80F148B55429CE1F6990173529970048B6EB117644E955DE66067D4B71F142
8A74D97E2D53AC26AD01CEB4658CA78761713780C6A3520AB4BEB4FE5BD6975B
583024C06A48C7D5F84C2BCD06B9D09F6C3F5782288F63A287ADC5B34ADE0644
C0F55A6A87E740D8095E63F78C7C487D6094086F1DE6749FF3C622A38F15E122
C28FCA68A67A4552820E583E0AB51C2D9CE82A3F2BD73789B3CD654E2E45D721
A38D05E1FC212028BC7B3EC68B932CED8C9008B4FCD3DAD20FE0C6DC07949849
C1E9F9B5DC087429A3D691163C6C771B112CADA74CFF4BD78B817C02F7491040
C32C0393AE250B09CC34151D889198743D5BBD1EC08E9F58EBD803A2F090A3E1
90CD2CA3DE2CCD2A72104CF1B404906DD2A1FA3458D3F0BA3FD7DB1C1ED50943
8C43F1BA4FC8D83F382E452115769CE63EBA96263A8DABAF62E453C785C7D827
190D9ED5D06C04491752C8EE2B3B2B10399CA17B715C8A6DA4099DE697FA5B28
1A08DB3C631E95910F965940AB8DB67D033098AC3B0B2A925839C8C34CC82E72
8B395222C1E9BB7172F4618CDC774CAC643C8A0519441C6043AFE0663F4F91B7
7B22E158BA172BE33861E18AAF3A48C72C74839530DFDD8B9C9935E7B787F601
DADCC81385EBE775A3D3261F152EBA489EC9E5BB44ADFB7558DD95314D45238D
D0FA9F678D4929D69D192707B1BA6A2F2305D7FC8FD35C3A2FDA178DC51B0D9F
7E1037D7599DB6383FB3CF998B84796AD4F1646204CFA8DE394E35D6A1DD200D
31F6BA872ACBEBA94F1FE5920A18A7EB5697146F66B9C5BFA5415ED1D6DC627C
B8D85DDFCFBCF7322BAE688DFD73F7115169B32AB8B6C05B24A4748888F24F4F
B46F07CCD2FB9583937F0BE8B4197E4192D1193BD94E99C0CCF702D9EC100066
E1490B390E2C08646BE73DF766E216FCC9E0D3B13991A131B275F892F868823C
C55D4859C09148529FBA57A3916212947FD36BB2C736225102573D21FD0B0396
9BA1CB2331D6B04D84EC272A85F97D2358B1DC13AE97EE47AC99E70422024A71
11D9A6816E165DFB4DC616FF628D9C930DAAF6848E3A72DFD018BA844429BD3B
59701387CB512AA64E156D060119C53CFC33D924B396928324FE2647C4AC2955
B7719019C977EC66869BDD283CA886E10296CE26A4E176415F55FF32E4308FE7
138B252D3920883C966C6C44E7FFC2E83ADA764F9BE93ACD646C1B9E0113A1C0
9295667F372F2176DB8BB77D73304B66C6BA835EBDDFC19E88CF11D2E7FBC54C
479EEF9C03F89E026963830B08E9BED0FDF83EDDB246DE1E57E1B738ADF6FD49
E6A53BF48C6C2A730080DDED690D96080BC8A4AB8CFFE1809DF7903F6844B14C
4BDA9AE6DB8755B830F8D53490BFAF28A556C6C49622969F5488761BF2229D98
546B4D60320FA0F2B43DE13EEBA9C102C40045692EE3B52643A0DE3E60417B86
3AC7E6CCD3D272C580211B33A99DC5E168EF07120C3B6B1BE15CB055823E59A7
06B3E0260FFE7583FDD1A53D0FB7A4EA0734BCB86FE47C846E94E393D66B761A
5E47340C37814FE1FB817C7C68A5AFCE827F3A4C13ECA61A8D261B3A74307AAC
38B50C0E552726397DBE404BA26E352CBF1D23E685CA897AC54A3D7DE1A758EC
0F8CCFB7E060FC724B0190424C7B39DA5FA5C111311744B77AEBA5674EF5FCA7
70729FEF0D1C0A261708AAF92541E013073FCB815A2B83CF7E28063D3B8D6DDC
59C6DA3DB9B063A7C548C58576081F36DE3E0CC49BE3BA370215A15953B84105
8296B4C1B9CF393561712972B4422D91CC4843EC97AE75953CEED7ACD77C30FB
52A523A63E5294B8EAB30ADC515FB8C8C8DBEF05911B631E9EE13317E8FBB485
151A410BBFE58D8315D95C3F4E7B7B2E1F2895057F1AECF69BF2F43AA3B9AF63
A2DDD3A44E4CF388DDB70D053195996477A763C3178F38BB3685144A0D49172E
098D84CE608DF598EA17CA0E8100C13E89B700D4CE116057B1FD87B119E54704
7F43E9CCDE1C1F8645DA03E94B872EAA06E9F7541E748C473676A396158E522E
D70BCA88F8E98A4B3C055C01823C4384724518CA938CE4C6D6CD198B29532908
C44B42DA92FEAB15171D254076B8626AE3FEB4F127D094B167C7ECAD42D00305
86A238349B82BD0EFB82FA41790431CA16082699BBF878B0E924B11C3DC8938A
559F0D5BF2DAD4417251602DE610C064F95504C55B0B33BA921D3E0053747489
69CE7950969557336AC8DB3B61E01D64D56E8C49283BE475B6AFA056DD3F3F52
5DA26365A2DF7F72C8838237E30DB8618BB04B765781A7EAA080503F9514C6EB
1984E30EC73AE00E97EEB44B3FCB53808E0E47D67BD7BCE91BB83992C45710ED
1D59C50642A0CC134B0E7DD748B8F839254BA9139D345103CB03226F4AEF886C
5417DA88F96BD9BD67E0A5EBCEC560B2C889C3F9D662FC2E59673DEF563AECCA
BF724C09CEEB5B55EAE86EB7E2DC73C347153B9B9135A79D2898CBF3B1C83587
A2536500DAFBE0CA7772A589F8D9CDE095894CA55DC54B2B25B0996C2C590BBD
DE3789C01AB433ECC4A22BF194362C862C904C6646E450C3BDAEC1510C6F70C1
B6E7AF8E11BA4798C1DD2EB7D4F962028130AC20BD16ECAAB6DAE2D890767124
8569054F4CE8D00B423765C2FF3AE200C83D5ED0A4866444501B48FBDA21D0A9
02F21C5F50FCDA01045EF1F9BCE3693ED2E19B6A5BF6B667F721032A8FE68032
B72C34E7056606C6576B9697457E6FF9E0F1EB6964C2FBF1772069F9F59670F4
69C6352D659FA6F3703FC79A13034AC236DBEBC18195D4BA3F2D9C1BA99FCFC7
C1AA0F2DA733242BC98C5AC006030B0E5C758F7A279110D73E986668628BBE87
506B6EFE85BC3E9E6E9B3D7798E83B8FA2A51DFB6604687AEF8F52D54E743292
24C0D1AF05E482ED4FBBBCD151358672B9E6D6A900BA44046812884F2FEFBBD3
9715FB1DEB0D0FC5BC9721317E21378E75D88DEDAE45EBDC90D56334B16EBDE1
6DA9FCCCFE6933499EDC15F23FFF7A8AFB0869D655CC9E8B8BB20FFD9430E3FF
F706DB281940D45D3F9B39005FE49A79CE949CEDB65B1960783913F1B3A6F4F7
DE7899B7F10887DB9B912FE4464F14D0F503064F1C78C7A6DE3181A839528F7A
F714C74744F93ADF8FE08B4C8BDE976D18C8F669EFAAA19213E10848498C3410
54EBD5FD116DE2BBD1C0E4828191A04EA90994D3233D447E8F87527C35F3CDE9
4D93ABCDF45E0D732902199C52E26368C631242A501B1BBDC7AE37A8D78C8996
A34FE405AD6C94D34A2D6E714578CBDA4AF2E9B350DB04B85024823654FD33D3
C4D429D0D495EA7EACCFD32F670C45D154E8F01C7F8542871DA42E536C037EC5
139AE5F97CC27F2840FA366F1E2283CAA452D72AC7474753A387E4FF6B9907F2
8808DC922FBED66607B11A2A76D8695FC766529FDF04B414323D1270446C105F
0258CE2084F898D7571091B18B212D48B4392E4C3700C49E10091FAE714F63A2
4AA98A5781F2DA463A5A93C7129FC3118662032D05CC768DB05E7B70CD601AC9
BA0A4BF8557C4FDCA4A0A4EEA74A36B3873BC99F9B02120E72412526349C5B4D
3FE5690BF4E925AB2CBF5867C2CAF198CEB491BAD552FD0CA912D7A12E6590BC
0F4E3F553934AE1CDEF29DE336B98C4ADD7F99BFF30C1A94DEDF81F7703CE2AA
B392531104ADAE188A6685F3B41738EB3D1BA708653BEC6F7AC682EFC326331F
40C3020CDE2BEA26EE8E974027A8027D3F4EC6373B30B200BDA19050332212CD
062A6B96FB18552EDB51B9918709BD4B5AD87BC27392D7A101E273541B8FFD8A
9F88AF46C2E5D7ABD94719F604EA68B1108EBB5BEBC3EF465BDD27D6BA009C25
F0C7568C71846E413E504BEAA3F4594C145A00E1EF6358A8DF8CF7B4AF6BF074
A9EF6D192C2348ADBEEC84B992D45A2680BAC63497C593C90728B12FB175D662
435C900AA958F922C60B2FDBBCB7E7026A91E11CB3F30FDC52C4F01C92EE0943
40736483040A14051B0671ADF319AA50F05431FD7996DB1B6A97E165EADC6CE2
3BD6CB9700745AF1DF2DF7278597CF205683610586A8BEA497E867582A10D6CF
F394CD7FA1132EEB0C7442A63B99930B70AF8F8013E3F431C43C172F4B2FCD30
3237B01E13D2AAAE0E884077CEE01DC08FFBA8919951279F1ADF950EE828851F
832B5F97C1A80E20385D4B83145AF95FEBC160B04369AC0460C55FDEB881EF52
12133C9FD7C7BBC8675CE57729209861009B35FC4F352864D039E8B2D4E72B03
779B88B0BD861801D55698E3D6ECE62CE5CC9FE34A8AAB8BADEF7D89093DEEC9
37526816B76078DD6593D8DA1D4D800473F1CB0C0E77D7AE4D4EF60D44B745FC
A49B09DBBDC312189D77F70AF8035C331FF71F130C31ED8EECB10E5F93097129
01FD044F3AAB455EB7D85772D62439D87BF2647F3E3B8E35767A23F132AC8690
9FFDD31DB374E6542FDC8DDC2993BAA42FADD50EE2FC151AC9B702F40D8065F0
25842B0F91F6E4080B3C6D4A4A49F2347598EFA855C8CF4E76AE27517A9B3ACE
EE42F3101F449C2F6746E80EEBD1B06127A7E7797B41DBCCE9E48F09A9375711
1A5955246043C8659E8714C72144E350AC33AD80C9280F51BC2300C56A6A6FA7
700D6F6C131841B0AF27B4451326750308A8F0348CD16D7E9BC60A0E8E6D9A15
C3F90C55830CCD8D5B824BB25F6B221581344C344A2B9834F97C6EE56522D30C
F42556F87D1216539DCB188A534455CF1DDF844B80FD932D1C02DA3CDB78AED5
3F98161464DC5DFD2B460B990E9D8C75EBAB53F758648FB82BC37BE81D825F13
72C73E9096DA19968541E940E2965DEAD4F76711CE6B9D74B0A2E25CD23969EF
9E387BB3BE62A351C14DAC4BEA7FB4CA6C26130180B89DC4F46FF9216F1C43F4
414B7C12B6164EDF95A39C74183F41E46F2C56BCB59CE6AEF7E9165EC02EFB6F
A0A9802B8B22DAE7BC3650E52286E6F70B104D33496F8D1A112381C573C14103
789F6FAA26FA10E73CC09A62F2A89E84964B2B68602D92E9EFF00404DFE37583
AA92C55955E1D06531A5EED36C30AA15C66D57D161719A2D1B7F5A905DDE997F
3513AF3FCC9BA70E3A319D56A104A3ED4DED4B0752327FAABA1B604C266E6FB1
1E0AF0066B4EA38D4011CA65109CBCE47B48D589829CCD689CC0DE5B6E8F976A
E8191B49153930BD20FD2351D91540E33AAE83E984389A3BB7B9F5B3406E3F50
064E0DB82C471A918E8924B6861D8AF54191792FEEAAA468EA1D26C738D1E878
2D670A7D3641826B57C7A59BEB12FC0A87EE76AD317CD944528FD6D2338146CF
A73BBE3898EAA4C17D53E4CFC681A17DC79899EB338C037A88DA00FF11BFB205
B9A42EC1F50B435E4D44E14E2152E5054FB8B0A13AB598BBC481A3240450D145
3A1CC3FBCB32024C378A87CFE7506B67F7A6FBF8635703C7EBBC26661DA6A7C2
E6C5ACB12FB054A7F7E2988C00C40D31D3819006D1FF3412D504943284C1658B
6FF324C0F901DA864D8D0C9C297C3062343972BD08BB543638203F9D23269A51
CE9FE17DE9159D0A1B04E4B2AFA895CCC65D57660E1296A414C2CF494ACCD741
FE70DD833BEFE93156F059330D67F8BEC315412BA9A18E9744CAC5F1C047BDAD
0EB4C7D348B097477DF8C6C324CCCF965C397AF1B7F0475079E7E96DDAD9059A
3D7F3BD63827E28F17D57CEF44D31AAC43F4EC19D387D38B78DBDAA0645B2FB1
C9EA8D6685B5393B876ECEC4101176BE636CB678AE18A2C283E940457962C372
3BF6E61E3C3E10DE25AE1908F863EE4F6A6DF0234233EF08A17ED68AEFBBC891
4D0B482513DD6DF3651B03236C930A1938932638DE190F0106455220B85563A1
1A1C5B6FF398F35BC5DA8C0901C0933C6799C47C2EC1C285506A1AF4C7592C47
1FB73047F2C2447008AC29D1F25C3EF360ECC5DE85C9F339E8DE7FEF4967FC92
3AB87182C9D634BE8B5E06993230B0D079701E8936B337C6925E0CB5BD963CB7
91E28CB54B37655E4201A789CBE20DEC1DA560FCE287B86E393C824960DFE41B
C99C4FD0FDB0357BB5233F3D0F6212F013072DBB672A3D31DE5E0367B7006F75
7508FCB5D653DAD14A81020A55C920430B9B73AF085CD308DE598078BF655B07
CFA3237774148DADF08503BF166A9F41AAA88EE6187F3633847B83AFF2D45661
D8895227166F7AC9B7A2D6B55A19241BC72354153521F52CEA26439A9CAD543D
A059407D5945415FC06B0EC169287349C52D39779DAAF3AD7EC4E8E27CF34B97
2AD10DFD269E762E83D1FAF55AA92E985E8CE27B8C4B6E8B4F056867F1C0B014
E2B65B5C3A8F71E443E19808D80B366E84FBEFACF55316F9F40C1386F58B199F
71C9B3616A0F7573B82A681D124DE7E6AF4034D031967AEF5E1D41A8DBF2D5BE
B908CC73E80431B1721C8F989103E4F6F8A25A31E864651CDCFEE7AF19339533
448F2FD46C3C3C7017FDEA8AE2DA33E799775F787AD291C4F0BECF14318F0C96
8433143A19DAC00CE647F98992021217D666CAD26486FD8A4E1F4023DE10B61F
8CEF273808B048A910329044B0344247E6C405F16DF96657943255D62F0C84FE
8A630204A8E64D8F940DEDE5957272239B7DA8B9139CCF9ABC5294AF21AF58E4
A76787838F532359D6FBC18512610FC852B07E15D4B247548724FB731C3D6403
E3C10BC977ABCC68ED6F3A241766E0E18B1B22579F08F4E68EDA829B4C0F8235
86C2033BEBE0F523F174D1B87F8E5A06CB2F03B396D8F5223486FE982C7C8890
636CDEFDED3CA00B86C57DEF55FB60F5B2320F6AD8E6CFB0D2666679C13A65E1
D6872B1E28C1B4941370B9CE7E88DDDA40AD9C0ED36BE45455AD3AB3CABC5928
AE68403AC7D2174BADE4B196DE9E61C31E75BB463992A775E1D468BB6EDE702D
60DEA3E87672461319DEFDA17AC2E515BDB3D6B2980655EFDB97B56E08C371BB
6CCB2BF3DE8FCCEC8F095F164208E827A9C735E522D1183612B014A768752492
1D1F4D39C1DD6D8AF62E86BAAFF593D3F0E6EE3118647B765FFAA4E16B494211
A725867D8C47D291939025EE8A893CBCA7253327A6C8DB6A267733EEE15CDA5D
8597493D825B14C2FE7DA51E175778EACAA24805B0C79243DA91D2701CB7A4A9
988B75B8B18D8D9B9D2227C7649133EC6A81002AE7A205CD21E82E96046449A5
58A88D426B6C046E9A088FA1A77E4526D5861D0184F4956DB9D9BEEF25BF0242
7894A1DCED30955B9E08D8BD04B6A33FE4897153F85738BE6CBCD57B97F5CD56
CB80CC88111C9E1CC5A95D86E6614FE980EB84C857186645C467EC0164AB6086
D2C2D95C19D297E22194A490DCFBAF39159FB3A63B24AA15B2D7A204204B0D7C
712C1367086F0E83C9A242C22593968F5C85893FC874E4C934D42A9189737343
ACE032D575B0D7D87AF1986FBD7FE6830B885C8EC5C9866A2A0732535FFCD58C
CE004BCF212516296D5EFE0E2EA6E2FD72EB38DD5E113605DCA21404B9128559
9E58D1F25BC54EF6FFBB790D209F321D7FA34172BFC50C04FC2A6D8B6285F5CA
5D56BC06286039E75042D510134D54D45D7BA56255BD7D3DDE6560E9414A1410
886EFF8D5789A925F499A5E23CC2A3BB444370D98713904754558B8A0BEA8C8D
4ADAC9367191767CEC3941BE4A948B3490EA861BD99423B56C2084560DFF5E8A
62A9926FB0E1DCFECBACAC50B4CE8CD9DA18334EC1AD011D0985932814A716D8
401EC872E2222476134A0926182486AFA66185016F9E506375D1E089C675FA0F
A140F5535D6AF761F437E074AC111838A2837E1EEB471986461CDF084B59B578
6859662242E4FB89185D36D77C7E9F73E4CCD51A57D7682998D349D4B7BF5031
1D85046CCA214F7DDCC1A0BE0EFC7B05BE85D1DF560D44E03674D56665F190E7
C0BD07CEF58273EFC3332282032CA7361AF27A3C413336CA6D80889436779796
A918B7431FC1E88B8BAC63A006735A03AA2C8633A9C8DAB77EE26D2988439EA9
6FEA19D808A4FF78BFF8C9AE5A3F38C68DD60FD6FAD3C8ABCD673A03A694FA77
09C320C5484340A830DDD392F93F6CE1294B62411E6DF77D4A4C2D13B485F688
4A7B560FAB7F0EB5F6FA72DABD6F0BE0240CBA9EFEF377E49B7A134356A09947
85F9078D1B8D7705C960DE81273E2CC87AFCE644D65932A5F34BD9703793C4AE
F5E1E1F02AC9FCD1D87929953EE6CFB6C2FB2B3C7E021790A1443758736475A3
8D8E5132C5733B4A7C74977E1210E201BBA9A805612B4645162EF6350933F1C1
A6D6273E235930A6084624F35F8E4D6A4C78CAE5480535D5579F8E54D3989E1B
31830CBFB0EF9AF8F15566AC294E182359C7A01DA9C60ED3C0A20A34F5041056
A43F90D0E6A47C2521C1058E8C66894CB1C4CE5BDE7A2C9A124900DD8F173279
1A32ED4820FFE98481D067D7A65C52482D6E2C5740794958D0D12B5541B51C9A
222C6861BDBCCBF5B17AA9F218A80D732FA18E2E5F958A4D4D40C21D7643EC07
24B2284CCD6B34410AE1CD0B91088F3DE113E86442C14C4F16926330A6CC983B
5BB223BA6AB44C3DE99624DB1B364E6474BA273DBBA6C8991992A2A1A278B2E9
A7E7C3CE68481869E5DECD50589E0980EEF27FF33ACB54F0A6AD8849F98CF9A0
B95F8B4911B8C82EA079623BA19E2CD19ACC174A587B898AFAA1644FA922FC56
B0B93D32362BA966DDE41AE1BFB7F1786B432C43F3C7361171FF479FB4FDFFC8
1475A048F4D6B25E3C834F74628B06ED1299497DF6964570E66646EE4A3F0349
311B6AB1110FCF6163A409D01F64CC553BAC7EEA79290016F6CE1A8332A77F78
B569AB435C4347780ED76337619F86AF1FB6373D0CEE6B46717AC5F34CAC53C7
21060702EE12C6641799994DEBD48FC6792E35BBFC367448EB7FE9D1349E90AB
58CBFAA79D5C8BB6D237AB3A9CE8C36492E99AED33256A1A6F3303F356F5996F
F48C5C5ADC8820A6316463981C89F3ECDC3634FF5424EC1C28487B7D93628E03
9E14526B19E4EC1603597DA47285A073A8183732577DE94ADB70CEB5E67078C5
6E0E7854CB47132679FBABF1DF31D16F8FA295C83C19C1B72D6702AE620AF391
022A8ECABC9E50D69CC6C14D48F13599875048DF2F55ECEBAF8931ADDAA4018C
278DCF28953286A517B34F61512C317E9210A89F4D2BFF4ABF0E3FA1B3BBBA9B
8CA038F113C57B5B2DFA65BFB5D19DFE9E7E2ECF47D44931E96950E83E418B52
9E90CF2C9554E7D9855E01803A2E4A4A44D467EB26AD61D695AA560664A99038
D69D48D76476BF5010E5E251A42205CD31588DE29FEFCF03915CB1C641410492
19FC028D02E27BB696C8285F78C66D154289455C5FF2D23C1A5EA34EE5399237
AD01061BCDE92EF88DF3CD9B962A65FB06A1C28E3975893E1B15A653F05FDA97
C15FF191604BF31B2D41FB10A63104AD5F9CF990CCBB01C6ECBE840DBB8AF55E
0C54691132BE1A965A3DC333680B3067FD358B2528A177FF01BE719F6DD2F442
48DE66B6EADC06031330073AF8D0CD314243BDF9C1C91A6EAE8CD0ACCCB30B6B
DA27795EFE5F6E32A89FFBC59649CC759617E708660D6AA899A70DC8848152E9
51C0C3F6AD7B57B980E191D4C6DFB8FFBAAE1AB34DAAFD32AA716301301AF68C
3F86AF8CEF2A277D9F0F8229E041D85DFF60479439B95D1D2705E323EDB4957F
9A271F30E71EA8E2F40D990C8EF0F52DC619649FAF3BC7D3F0867D1B8D78B9A9
DE9A1A1123236F5F33E63C9115F80624303534894DF0C0E88E6094310E4C81D9
D739DF88C655165C148CA55C7A1C49146F8F3B0DFB89AA1D0FA3717BF3CD52E7
FC86C8FE383A014E46DD1F1C5C860525CFAA157F44AACC55D51C6ACFC8FE00A7
2C7D2F3AAD415B961F52CB0E71C1237F5653387DBF7F59869CC9A2D5E699820F
4CF92C09C7BAEE3DAA7F73D90272AF096968AB75F3F1EBB30B5DDD605EB0838B
9314BEBFEED880C0B58DF772B2BAB6BE97ED600EA7DB19BAE8A38B794E7B2864
4C3FBC75583A7943ED882DC2C6ABDAF38CAD4CBD421B2C55A43C3D7FD8317443
078E3A7FDB6B95539DADEAACB72F3FE026E0D86E3C761B8BE4A0ECF381E74CAA
10E10A03AE12C23098B235D5F448AFFB74D75189760F0BB9427C07939EB5649D
ED6075ECFF58FBACC2E0C602453F5F150324F5348BEEBAF5BE5B3848DC05D38C
68A6D268F5AAABF3E48C1DDF045E80CFE0284337B737CE453EA292BBC6F33628
CE825E163FEA3BE751DD38527D027F572991AA890A8B6CB720A8FF751E0626BA
ED7D922C011F78FE6D542317CCB82B906D58ABEC0C1485BF51A4162D29F9FA78
CDB32A0060FBE6744617685896E9BD38CF00A0FFECC8A7D0D58259E53A4B2012
9777C73F0C0519737DDBB167F06DC088C78888EEBB74C92AC1A16A4C2B8626B8
6EDDB355D66FC9A90DADFDC11833C9333B111505F5B7695B2F355214B7B880F6
1980377137386FFAC3A407C19851D98823AC4376B8270587E8F3721EFDC6F066
C4D6E151ACA5B821C74BE4A19E86229BFCB98310AB2F720FC5142AF5CEAAD07B
020D3CCBFC275E71959D709EE54D544E286F873B83CA675BFB2D7009025501D8
996B3C557F2EF9182692255F7A98CE9B93A645D49F213FEBEB709BB571CBD6D5
1C00B349268DE077F06EC590484CDC022ABE678A7F2E298A7FAD967A2EA7DC47
64654D02C0902B167500C2538273D545447091D9D01E9F4968E74FCA43C0A00C
038BB32C43288B1149ED2093D5DFC5FA4A4247E469A15621739B6E1DB9F51288
987FA9ABA65A8CC12079C24C649478843833534B15A83434C294608B289F60FF
F8C732825DA065D7C95992607C9E3938A24B7130A94CEF9322DF0CCE8FE0405D
523BD8070B89CADCB0655FAF3BBA11181556B22414DDD6C9781DCF850CF86E8A
78841C25F3AA946FCDB5C0B35D25F8D8D023432A48F3FE434C00771CF4751D8E
85BB97A7F1555F4DDD5C79D026CE9F5B78A5923B07946AF750F7C23DB8E9E75D
ED7E5034670F9B401A4E995B235DCB849F985999088274216CBAB096E8804492
D23773D92B41C75C5F1DA6C042AC6847F2B3291D30D4EEB934A0173199B1E74C
3866DF6F25481C94C0C99771491E1E13819CF6A55CD86E751565EC4E0AC8A7E4
182AF7DEA896207FFB11945D230464AF01944BA2D55B6E014C8A068F6391E117
63F9D9FC648CD35B1E03827411BA7AD177E43BD168057F11F5029011D8526850
A8606A7EF26357BD2707948B53F626C361BE135F4E101511B9440376547482A1
BB752E5979B7A7D6C45C305D4E5E329E91344E2B3EB75F1A13E4F1526DCF6D38
9B34C824538EC663458C94BCA7D8288B17D2DDB83815E3868E2F4F86F53BE69F
3BBA3D0D55FB9044CCE1EB5FC3CB80149DE54B2FE9459AF2DD2B9BB65D0FCB8A
5F3E321815C3C7AC714C3DC89D78925406DE6700D6A10203D03263B1C28B26EA
DB953ED292A6003B3B10E1DCF7DBB4EB6DC13F61C0A90C6BD0FE377262CF6F63
A8DF81E537B689FE89AD254C935178E836E1BD9D6CC5FDF052322E21FC75A175
250DE6FB69CD1F3DC9262AF28647D31AC19E694472A215D2F495D9F2B2AF4E6B
0ED7A97EEE66BC28B9DEAD2A7B39EAD4D4A4E454768C043311EF45E6EF1F6C38
9CABC69B231B033132675A5B9D97BC1D32360ECFB378192605E726A3DDA7E5B2
878028143F6B180067B2F9E68C5528E0DD9A56E20DB6BA916FA557F6F211E57F
18329A7824A3550E96593387F9BA9D63753FAB6F4BF4D7B35D01E3A198153B35
49111245A4E2D29711B655EFC1D043C7BB99785482A577F8201C041306FB82B9
73E484683DFB445134A9805F40B678B82F58DCF6C885FFA8B3E42F7CBEC366E6
0C18416C423A3FD70D1FBE03B7E6E5B7FFD0EEBBC826E2C4F588D15BEF57A74E
AA4CEEAEA98AF92D5E758C290A579C29BBC367D7B1F6342DCC35BEB2EB86AE5A
B1D2CE23F3263950BDC80F8BE5CD3D12247C36E4258C6BDC84ABC8F5382CF6CD
FAE2AB99ABA68FADE90898D7F48AED17DBE9CF41F01FB0F15F7D3786FE1AF77C
E0C06AE18F8C86E5F2CAC3913293D99529B8F9EAC85FE548406DE5D90A0FF73F
771DC0346FB0B2BE60F45ADB075D21522955F05154A576C4288FBC0046ABE6DE
E542E1F77DFBD40A3D19B46EE23D4C54A325CDF9C7444F649C145CE13B21A2AE
A4C8348BD4A6AE9FEE690C5A5AA7C69E764A8CF05242D972C33816113602163D
500E957D7591699856E44453AFAB99C2D6657E242BEBBC0D9C6CCDB639869DB9
B640ABDA5D6C7F4B7CE7389C563D11219A887F01853AEF9F30D2BDE1D7CCD1A9
73BF297FE6A8821E03A381C468BC3FCC97D6AE51B8EE6A26F358B803419C1016
875C2FC5B3063A8B82FF19251B1D3735B67FF464CD57295728AE4A81711419BD
805E1F6A2B94E8823C3996FB208C3A9CA555332849ECE66F8102383F02F7401C
3481B529E3E7B8AE1343E5403003C28CF53047A07DC8A48FD12C2F3BDF2974D6
4CF20AF491CE10C53D272ECDEC1C574EE6880500E8A3010266862CF39FBBA573
AADD91993E707C36F856D715668BBC03B92FF441FC74C7773F68111CE4A4B446
779D9D0EA35D4BE263DF490DC590052EAC34F2AE5A043A449C6652666AADBC2F
5FA54F47F8B20547A2A61D2C5B01191AC5FCAA0ED19FE46DCA9886450C36C749
3CAACC2060694BC641C156B1BCE10ABC618BF77560ECA48700DA3E929B52F207
382364B1C62AE8311C433728464079E8F147BDDB1DC607885E12FBFA7343990A
15C648B6B44B7EE36B8356A8740617776F18D167F6AD72DBCCA6BC918A4FFA02
DFDE27DD96537D6B45F1FABF411B97D99A1D21DC64FC882372B81445BEDD4CCB
91A7A246F323E50AECFCE6876E4E770CD78BF0179451C84FE2CBAB4265B11F1D
1501F7C4FF2686F1BF27180E6F9B00981BC4796293CBC9423D966DED4F341D22
5723A96091CEED5DF7EEC7F87E5FB5F9B4D986B6E975BF8F27A17CC6DEC1C8F8
C4FCBCE04F3C65EA91889541467D451A5EAFE21BCFDF65AF0146DF74E0240022
D6B75361C9DE43CA6C541E1EFB7AF0F1EFF4F1FD4C20B8E3F22CE2C0394FB784
5E26DD1E3BD852A017138F4C9CF842249CC9E1F442754ABEAA80881D2272C1B9
691FB5D5274499BC1302E4EFCB517109806DD2CB6704EBB0D4389D1217080B73
AA8F48073CA60ABA155F4A03A5FEC5A8E14E5A17FF676D81584056D02CC030BE
48814FFA0AA41F08AE0D5B33C5776547F63EEF3C0ED308218EB19B25DF20C182
AE98C6B087F06E8E01DE68CBC124049EA103CD8FD9A327887500B2E7A7C849F2
80C7BF46E448EC325BFB498F928E8A4B08908ED9FE7959EE2EE52949E995E7EF
9153005F251ACE17F036C10A982D3D5A26CAB55D1F43B9F5C8642AE277F29D40
5791E7A1701989FB0AA3F0D78EAB67ECD30D76FB49A7C535BD506B2B226033A2
97EA3C8C9C8CD1B4A8D91896E73AFC4DA03A52EEFD6EC22A73914655B352EF83
324E37079E6B44A586D80CFEB32246F16C0F1A5CF8C7C52F0052A6652E6CB6DC
A3252162B0A68F3050C5A16B2F5431B34B0B08C970F39BB0B33254A1DEC83759
A338E60FB97E9B4C0A2D50833E3CE505A453E68052A79CDF16DC6A00064D7077
F2DEF495F3DAD5C26B051EFB4CA3DC5AC833C4B0091084660574D12B0EADD3BB
463008E9D4AB856B9CBC75EEEF8D77DCFD4CD6F5A57F0C9D14DBD893D279F20F
49DC8C5F2C43537EDC6CF4451263612755143BDCEFDF9812CB59F95F25C76E05
50BBAEC90FE98236360548F75D58871FEE5164282E9A503E6F07D3673A778B83
3326CE8172363B1B4AEFDFEF230B3AF7E84F05543BAF5C0E25FBBA5BD8448937
9218C0E7D800169D9B8A4E33ED8CE8EC3AD987CE15528ADEA1C78E3BAA9C6CCD
31E1B3C5D46C68A5E4FB3D8509D3FF3BB8BB9CD9676102B0B9E22A4744EDBF29
9DB408B7B0B56F98EE85B34A9A5F22879FB0BD63A2938F9981B2C52A73BF53BC
DF199F90DF5B338501403614E907DECA0183144C2EC1976155C3A0DBEA41F63C
710152DE098194D6BB29FE5B83E1D2DD33E5F85C523665E89BE08571244810A7
EE9DC972DDFE5750B9009F8741061465C24DAFD49153BE2F7EC3151F50BB9D5C
0D6ACFBAFA134AEF156E1B9819F41999337A57A67302CD793D3CE49CD8DE2762
AB836EB4F5FE15650CF4487A938A117EE85ACC8102EB23DD52BAEDC245455943
A3DFE5422C5E45E5D0CD32FD2EC7241402A3EF85B6AA5A10B9373716136C63EA
DBA897031A513BC9ED89A17D8CDE9B86BB0D7806B03A4DB95C7888422B0051C2
82B4B49CAE5BEF89C4830CF8E300B02E73FC4B62D766B257DB2E4947F750508B
0076DF12914E04DDEFD817355D4F877256023ADE33D6EE10BE2F9E359A1ADF85
5A6BEFC921B4896D04E61B913B6C41736EE4B1733FCD50FD46178004C1FF0F26
06AE7022A3315F8CF3D734E62C1E3E2E2BB873147AE0CC255E05EB66D2375990
E282C94F6C12EF4B456CB7B423E3CAF96725B2D3662E48F649117CA18CA484E1
1F30598F44A65E28AB69E6111008B70521E4C3F3EFD4F84DC63083CC9EB79310
C0528917E8327FB8B6B10274907C8E9A28945C75A0DAE5EAF6B977FD1DCB5EFC
2B60537995FDF06E846072DBEA36D27409617359037AA954D63423CA65D64459
74885FB547FA8D8E2EC2BE15336C1B2C006DA31157A6A7FA506762286E5F5AA0
B73BE21C91DC891ABB0F75E4F0CC3A553C55AA3402337C6C9B077A033B01F3B8
78BED59F33BE34A345A80518480DA06DBDCE3E790522806ECB0467A82845403A
4DCC892D2809761DB613442B58CBE6ABB4EF904FFEF935954AFB9BD2041241B1
BC8519EE8A49E0D2A3BB67D048395E96F45F0AD0B7C512232E0B8373CC674C4D
0ADCFE9C9883B5B532CA46FBF8872149742B6835375E0B9E13B07B4D38BF176C
177353670634A2FC810A39E38267DE1497B597DDF127081FBCF0407FBC06A42E
F6FBF55D8A0F6FD9E30E3B040CE6D23102936554095C9B38704024072C5FE89B
E9DCCE26E345425F481804E06BB7EC873DFABFAAA713F9F7D2697844E0FA8071
4580AB02B561FF49E6D9BC9858A3ED3CAA1D77CE81E3F153EEC4FDC93D0FEEC7
24C9AFC18168AE7D0CA00AE1F4637E52C0CE533016DDEEA851DE7E5567C54994
B2B76D91C2946D5B9FD8DECF9B210557E0784EE5F62B3733B60456344BDB08C9
29F9453553452C97E016C26D37FABF6D684FD9084AC279F5EBCA452889175FC9
0DDE059DA8962DCCDBA5432CFA52050EF03C0F93AFF40959EA7096058D10C669
8B02878350F3965C4EBD3FBDE0C95D977CA473A1FD2E01CB1197990EDF8444CC
83F1AF7EB91F8F4EBCCF7BA65CBB6605D4D72E11338D87D5B02D2F924E59812F
6CD9F83F21CFE1217CF272748BB9CD7007BD9FE903A205E1854AD4364CB8A305
47FBF908AE01D82B32D92BD20A3E2112F44701EB6466C1DE8DF646D9265169D7
62FDC1622DF8D7621812685D7D153D09606FCED30A9985A13B16D058121778E9
3631D91E3BD5243D4AEA1CF05F787B2B565746C211F30813630C7EE7DC33F45B
E3B4BDE678D0712508C2D49378842275701D9CB7CDEFD0DBADC1EA404EFAAF8B
E15176E475E95DF937A618EF24F2D80EB5CC9C2D3BD64C29728FAB41BE31F50B
CF9F9A5E53D1C1C1E4306F83CA58D52A369E8E8645AA93505DB1DE6054E882EE
083ACF0B95B9F10B011176003C07B5418FC765D3EA63E5EEB2380E4AB9E6E655
AFE35503425F12AB398D1B9340AC24BC42C1E43A2FB584A69DCEC51E46955F30
A76C6B243487AE5A649D850B6E250CA17397EDB859A9F9A257A366CF288A27F3
2BBBB40E1FE57668D569B2BA9FD4066AD925D51BAF05CC288C093690088DA065
84BE2E6A1DFAC98532A65305D47C7234C5D186FADD7D7ABF910EE4798D537E85
42C599D4E6B9BFBE9FBE6E3E609D282666D71108683107EA60C6A2890CBA291D
372242340BA0449DE1343A610605FF377C58F5AADD170CCDFB350BA1C7F3ED4F
1FCAE0F8BF9ED8F4FDB3B745459A36D8F643413CD4B4125AEE2C4A30C9371B81
2126A755F8B48199315804893830B3542A09B69E1EA6B0F747412F2204092DC2
8DDD20976C2FC2D3BC35ED216DBC6D00C44C6FF0D374BE43AEF027BD34EDDDE4
AE8929B98D35736FD2CCBB0E36AEB6643C283A61B6EE1E9B745CF02D7378466C
DB231C7A899431DA79EF5371D2159C29074B680191367ED29A5A7FBB4EB2423B
73BF33B172499B916012CECABF4989E9508EC480AD837EEA864136590BCE1D42
0F1B6DB72361A82EC811DD60CFD6AB2D661DA6A7C2E6C5ACB12FB054A7F7E298
8C00C409FFA862A135EBC938BBD745F701B259F9C797559384A20B59B2A6B8B8
195337FCA53EE1174424C26B9F11A2703A3B266EA89EFB538C274E3C6468D760
A28E8B84C5E59904124CCAA942BE9EA866C03B25956C36B5DFF93277B9D9877B
A8DD1F5A472158D75C45B9678668CA56B6DF9B5F710E1090077D54B2DA24FA63
90F65149A5D0C1E27647FF10C61AA552D1158304FC892466EEE88F51B7E88D7C
A3688F37D1756978C648F4297C9C04BB882813BAA27586ECC2D3B9395DDB1780
ABAE5FF50DFFA7D1CA347A8620A93397E52BB9D83B411ADF61F9C187536679C4
96D82F903EE6695DCF3CED36060BBA2543BF6C09B3A973CC43AFC2BE532ED012
C3EB58266CBEEBF2DDE7EFE8DDD98B55CACEA45D4046B046D2BD09D897291B57
A1B312AD723585048D44006BD7390AB0E318392110EEC79C50CC844E607854D3
2C6D52E83F24A890B95FC3A370671F12FC2A455157B1BF595EA3E14929085DBA
1EC29C38F2C2F487CA8BC0696574F4D97784BCD075E67826A814D84D969B2AA0
1A9B83E82F1BED7F32F9EF2C85224925810A365A9D8E21D9FD21944D8BD1E10A
52F64E74E7BDD95906C31E33AC2E1F9EA80951E4920AA689DE799A722117650C
8F7ED57684A4CDF5D554B1CB65ABF05B2226F3FAD2BE387F0BBF649A5EFC7BF1
36C8ECEC8591A1C3981F3B8A7AAE82B7642C9DF1E1024D89E14F44C22D559E0F
0BA59CCCFB9D76F547735EE0F40D261F6336900716A4E585578EC5D5769AFA45
5C17BCA32CD5AF706309D198B7D05743D17711B8E138E42C9E9B2D301131410A
8D02E2EB73D4E7D573A06A88806F4661B0AE22A7FBCDF61347F594AE5FEF6C37
73F335A7CC092ADD26523D2BEE7D6858FD8EB114AACBAE769A5115F7BFDDCA23
830BB9DC0BB659B2598C8A3062BB4D58D6E0EF213BD5F4516895203B8B15293B
65444080B62ADDDCA6F9771997C4574658A3E865BBEDEF8E1BCD305A5ACF3C42
092187CDE8DB8724D14D4DA223CDD16E6515EF0693651A2D0A3A66D7E19CD940
1354E70E91D1079439233B523413DD88AC29A6F9004B478D6B6C70889E7BEB52
136F731D397F8DE601741DE4509EC41E52196A8C9FDEA0C8CBD8774A450A85A9
163ED0C8CC1080816FAEF0986F666716473F85FF85369F8745430EE172BF8D7E
4AAB4135794361FBD8D70AB1AC2065B09B185B1C8E9C4255F5522698DC76DBBA
DF193233FB4633FEB114CBAB8C3F498D0AE331A2DEF9D4E3C06BC4ADF8132CE3
C38C5F6AA9C7698A1E383942D0C6CE6F6240554BDAB784379081693B70E98C18
01A6B5C62854B3D276E1E29A7460AD65654709589BAD7E23898C781A33C18EE2
704CCE4C9C679AFE350E0168E12BD0DF359CCD59FA104D8A731354D0417B94BC
DBEF51157B9089806E6D33041F610EF1E29C578948CA7987EF5621585D16F8AE
FE0525B14946794F96BDAF0BD36479D99FE32BC07A2450AAED0AE4D3E3043A86
0F652A34C6998140760A039B1B77F03CE50B118D2B932F1E32E43D20631F1BE5
623FAC43BA476178E8419F8F9D7A21275F7AF0F8A7863552ADE2DCC586ADF778
8671895F7B2D7EF1AA59C9DDFE1F60AB10B6F9F83C5FFDA82C4340F2E793A0ED
8D143B9CB5FD8950EF78BB3090C0C8FE00A72C7D2F3AAD415B961F52CB0E71C1
2379A54962EADEF7E262E32940DB52D0635323E8E33DDA82C69EF58A9813080D
0D13DF2D681EDF7F07AF550F3C88DC4ED4BCF8AB4CB14661759C675824F94CD1
51CD192E88D97E4A3C59ED5565F2096BC24D7F12FC905E2D6DC46E268E6DD1D0
D5A8590FA66FE389609A47A92464C8B07E5ACF610D4AFB61CF85D718D772F812
C6DE3091F3A2ACB1CC88AAB0CD130921560822D8F89DCA5B1802B72CCD72F5DA
72A975945FBB6481FBC4F25889CCCD84E3374D94469582FAC2901B629CE41373
26A88F6E1DEC6637650638A22CC05BAB0E04758C7E99F48FE6C200F40F5F4FDD
ED3C7882787B65558B61949A229964FACD9FF2B634166C3C5DCC5B4EFFCE08FE
019DAB0B0085001908C4F3A484B4973BDFAD8CB5CF26D1D9A92A93BA0CF4B079
6C113D22152BCC51D37A229E4E4BD0B8F9C6B3C67B7E6107FAB7B0BE98E6EB83
1862EE554E9164C29F2A000B55A9AE5E10C21879B5A61D3BBCF2B9DB1B6F52EE
33A42EE78D80F752ECF4FD37E61600E790B267787325DB8D0098125D86265402
07E4A52B755FB1EB39EBEF8C5F3A75B96D98C17AC253906BA2ACDC45B30C4250
6AAC676750DCEED099E66D428930A8484AD5F62716C4BFE510F180C63CD039D3
99B1D9C4208BDE9975BA00B09507CD86D2AA045ED87A1B8640873D9B6C7288C1
9F4FD5440372901D17D378F39149346F23D2B1EAD4530C53F460DDCA13DB1F0D
B668EA4C8F3C9E38F2B845DE24BFEE15DF9DB5B2A6D4C0D58C10F8E3C4E29080
95AA92A2C4F2837527124582DBF9B81EB3B2C7642AFC675C4C1DCB2C662679D6
B692A04DA68DAFF042AFE03FC4BCE19873ABA104A9DC3B36E2ADE80DA3F4EA84
9BDA7D1BE960D91B6BF3715E88D977CC25DD7A119778233A125FD5AE10813048
09DF523EFE64D400BA4D2277366421F85519C036A4AF7E79D9015D88D623E83E
C18C1D711447839B74411B7B4A3385DA035E9EE81724A19ABB7BC18DF9E3CB38
01A1338E70052F863C4AC914313AB457FD1C652EF97E2AA16B50DEA5759F8297
54FF928F0BAABD27942293274D0297943A864F686189756B5934361BBA4D76B6
29D1A1B8E267F7BA17F65DE43BE20D3ECB645E33249F8E83376913386ABE994E
43F4D9C50E81F583D049D68F7F48CD6C17CBB9303FB192661D2DD29E79A49D85
7A2C5D718778DDF3CAC156B4EA0DE7E79E9AB6AFE60BA18C4AF2397149ADDEA4
7B1B5A6B4202DE3D1092A72523920CFC9BB999946FEE7A202A0FE61CB5AF6D38
8C0216D7213938576C81F457FBABE48CB53364CE4B089A976F98E08D98A7EC74
DFE4B9A148D9DB524EF389B1FD4EB8462D9B14AECBA8B20ED2CF3FDC5CC361F3
9C73245DBCE1C05723E725D41D2B5EE0C3F03A603A161713216AF97C87628B2A
F034C738EFD85CDB54556BC6C7FF68FBD0436E777131E0EFC7FA91D2E9AB6B3E
D5569C5C5673B880A2F947F46CFA54D4184BA475B5D0F2361EAADB7574BF393B
0459A8C4DA9C56A0E7FDF5AB5DE3BB012A4BB5176376C38A4170544DDFC5C889
ADF505F6E5B52EB05F1BFC0554A50A66A7F0E606D1ED7577FF45529994A69627
05C0DB6B1A94DBC963FB1BA1018BB02F3E02EAAFB0BF862DFE1755F3530F8334
C211D603F86004C9D4A7379CBA8C9FD8E30152DD5AF9200F8AC8B8FA39413858
E8AE25B28A2C24D781EAEFEFB6AA49B036F3A5D6B2E57ACB461D7EDAF9B56C36
17FEA2E77A32F1D21471D485F512E4D5E361ECEA4E7DDD253666AA024FFA986D
DF098E43023E3D6E537AD3B43C6F3A905597570A8C6B0B4A5E09964A8FA43925
639BEF4B041AD7722616B477CCFE4F4E166B5AB05F22604D380FD3572448A7AC
138BCE2F26105022A3AC5C7AD5348F07AFB5F7A27C2B8D494E4EA1401BEBE9DF
C0F91FD52CDEA7FAF96105243EDF44B4052B45464213B4FC74A1DBA9ADC2B4D6
E38CC1F7D36D1F04397E447D968F75DC250C3954162F74C0EE7A00160C3C311F
48346D2C00518ABADDEA6ECD7A1713DE7AD5B639995F98FE2FD44122E511E5FB
2FDC8CBDF6A69012CF9F1D1D6F5FF943AFB3C5EE92636BFD30E26E9161790F01
6608DA6A271351A831E47B7741A1EE4FF0706BCC02E75FFCD301929BE09F85FB
EE99D21B512779E121066B43B0324B08F47527C3D37F285153BF1EC03635E0A8
F5146C13E80E156920B7AD241AB7309430CC88DA52512681E09AB96FF071BC1C
3B8023F9F47A64E9F02623E0997C77BE03EEDF430B9B73AF085CD308DE598078
BF655B00624B869AF24C16FE3DEE57917017C65752C45EE8EE6FA1008901B9B0
A0DF61A899BABDCFBC4030DEB1309E91A49800A649B80FE0359DDB6BDCD292EE
0320B1B6AF50C86D1A523D4FCCF54A0886B36BE8F6E9775A927F2EE2A123BE31
F7E98BA78C2B52607F5AD63067BF47432AFB3490E5465BFA656C08344C43DAE4
7ECC664BCF700818D2FC9BBFF2EB908D91B24511AC525E15EA2EB389640BEAB3
1D2E9B06FAC2DE33D3B1965E05B2B363111F45FF01F93B5F3789A77B21A4B5B8
5EF3945AB516BE7B6C395E583F31906127617D2AE1B888EA771422EB425F3963
4AD887A0215C07DDBBDE53F1A751EF7D3B64D21A8A69415B1C921EC9198BC03C
E04A0F0B2113C7B19A19D7E6C07E010ED88BA5053465DD483F36AB6A169951A8
78D3A85D180832F10589F0FF9F1D002A4194A89B0BE1A6F385603E1A4D816B85
DADE28C0C67A74F8126AE35689EF89555AD63F2CA0FF6BE3B8CC09301BEF5ACC
DD50E32045C4FACB777CA1C5C32CC0FA8AB3125B0ACBBC32D386FAC013AF8224
33B0E8C971CB07469780A64CF28E5256D3CBB816E9FD1247E31B3B62EC4BE2B7
4B57119AFA5405B39FD265AF493DA79E9B3A2FA343BEDF77B840B2BE0A014BA9
6C9C79539574C2C49EA3A32B7A2826CEA8A852CD213A8C3EAF808D30E08C4AF6
34888FDAB5D7234377B595D9864A920F648436B2C37E25DE16CF312E54FD8DEB
51DB7ADBB202C8C98CA44FD069F63372B9182E8CE99598513A485B0615F0D3D8
80CAE4ACC7B6E8B260A180B7665E4C43A33EA29CBE2AB98CD0305DD935D8F0F5
EE365C1F19DEFDA17AC2E515BDB3D6B2980655EFDB97B56ACD5FAE1D80AAA5FC
3B713F6ED26A0E7A657DE220EC3ED53913C6F89B4DBC3027B3CAF2C6EF0A5000
F53914FE302C686A3D22F12830D995534A8D82E4B822F07B115BFCEEA61F56E5
B463649E058E104A8537D3D81053D9DAB76063A19BD8063ED4C879861B6777AC
724163300BE8601114CB0940FD9FCDD82A301269AF10459826880114143B3D73
F91714DF5153EB24AD6BF4739C511499D4D2B1F245E01C1F36626E3819E7DCBA
9450A2BAC75D0E0ABD18DA8559D7632BD41D1B82A28B48E37067C10DE96B095B
4D29114FDD325E6CEF2AE08263950FE6CD70EF9B49A0E3E2DF4FEAC551B910E8
AB17977A1A785B3D30983C4FCDD1836FEDC80308316401D8B181EE2D5E09EEBC
53684706E5AA02982C49EA0FE82B5C3D0E0E591D2704C329A4047457D5602459
CFD87158D2B21EA834487F659F22DE959D8A41598061F2E1FE237A54CB90EEDF
717B1904A90850C46D793D572A1C405E1F8665870D89D1561CB28638D1D24AA9
F358AAFF93B9564AB1B910293F2CF30358B76F04C6C0E80D3AAF01749ADCFB9C
2F8547D95025D9B717498EFC65F8B5D38042D86D3F1C7D679092147F5BF9CC0D
4CB358EA58704A8EC892960F9560387BC6B7C2CCCAED347A6C741B8976945E19
AE8761867F79996954F36C5C090B0A18F81586A94C06850A116464090C441AB1
D0BD751575D0A364947AC31318BA2E9224A7554D77CAD3FF8AF4F8CD3B277C28
9C864D59A1D953121BAA5F9D9225C407C60A015F642EA2054D7DF02E8A41DA9F
3E4CC07736068896CD3CED88E29373F15EC4410332BB292482F4EAE349549927
0DD88D160344DD5A66AA91E5B215EAA4A65C880D6A11F2D202FF26F6AD1B4D86
C188F1E2EBC7191F8CF6627BC3064CE5E640948E27E1F2FA81FE54BE6C57EF8C
2B2E460F08608C22B91BEB6A6961BC58263EC5157743FF649F75309BB2270A39
F3FF2A2F7121B0C1D25CE74C0DBB29116D97B15092EF95A63990BCD918F159DA
7EF9DF36E73806275B85784A4EE507A70844333C992103556ED89F984EB1BF26
52C6B23574478290F37C42140BD42106DF4CE939D02CD15317738826E365EA2E
5831E662E3F99243D20E855AA9676AA0B493D7D546F9D46F5873F4E401797235
9AF2469F71248E271FE38DB3B824A78B6761B22CE4D838D0C07EB52F3849F14F
D66B8A34A64B53A37CF300ED057A1BE2F98C8C73A33DAA0A97C4C4DBA825B0E4
D340DAC9B1CFD59EEBA7F5DC2C1BB8614BF8524B14273B086F69E1AE01528C75
262EF6C5B60BD81D2770945D3D69DB8AE094B48AE11662FFD3D82CDC8C6B8E69
3CA78283525623B1F41340EB97BAA2AAA2D619527A955C5840E062C3505D979F
C7385149C47AF9B23BDC083B62C5AE6256BD512098DA104ED36FECE5E8A3A1C0
0D543A2EDEE3EB5D2E44D418FD23D84FC4E874F5F49506FC6999EEFCAADEEC12
77F9FBFC43D5683219FE9F9089EF50E6B3D85DC53C915A90E7B8F96E9FC47D29
5DDABF9DD69B17A2799EF97B8A93A198E955D662DC9AD78F82C29C3DDC08B6A5
51B0C06C42F896029B671A1993426378241B3230E538EA282FD6243BE1BD4F9D
B7BFA685B2B8533B1CF6A78D926AE9BFAD727FD97F4B7BF77964423ADE6B21CE
57BE8946488EBAF4EB40BEE8B5C55D9F5CDCAD17EA73EE0AAD14A6148B140749
BCF7BAE63A8A6D1F499F067ECB8C163606C3851355ACA79EF5C5033D4A4B8F36
B344E43F5EE5683E3A7F18BD164E2E92CBD92DB51A60BA9D54EA09C0E2FCE850
7F619CDA4BACFA4A9084A08BE9EB710C0C4158958CD6707E3DE6C99E7B22C7CC
70F0229EA507D4DBFA5ACE89BFDFCE18AA88283650B7C48467250DF1DA97A883
DBEEF75D9A9869D1612D5D29C26B7E45476FE9A4DA66E7ED5B79615A168A1A4D
A7212D01EEFD648EDD54A1BE9C8ACB2070D262AD3270B5F307E18BA5F2D87535
3AC655038C76A8C28C5DB37EA170AA764573F1394D6A310BC16894B35E8D57E6
CEC103906AF6D480C76F8B0EEDE11F9BA22D8CB5E80FBFBA2FFF1155EDDEFA2E
F538083B9CB7359B7501011CC5E799B3728AF82636AD29812F61D0894D782011
9F555DD52E640679AC1F52F1B5E07C08619F9F9207BD27291A7AAD14E945924C
F1C45F6C5921F3B67F8C92ED932589114E28A4E64D52AD39D3BDE3E416E13D6B
23272517D28E9E093AE16C3658BF4870481D8FA433728039209E7FDD13ADBB95
A0DDA073E552117442D802DF52CEE62D333C8680E45B76EC57882F78857C87E5
74E30710BA9731D8F27AE69A6B01851F0E8333769BF901868D3A942347330560
1078841CDD937194ECD03E78CBB916BC57037DBE008CF0C8B52429984E45911A
2FA16D8104CAFD1564D3B589B580D0100E116E1CD6B5888BB4EDE0EB9190DF3F
07E2D6219B7824A3FF370EEFBCD54039208ED7DA3A6C181536F502EB480D7C43
865049C3FBEA1B9E7BCE95777759EA2981114E7682641E7F09BFCEB269B2B71D
44B77142FCC413AD1BD94ED66F67FE83BC051480758FFAA8B678DF131FB3530E
61E7C365D68A64D44F23B08D001E397185892595CAB07E357F5ED54CAF1186DC
0C60E13D5CC57BE7A2EB9D0EC0BCDB65EACFBAE64657F8A3E9827F6E4730B1F9
745DA9590BA94CE6D342D6916059AE84C186BA3DDF8A3D03A6269D7BB2137241
40C128BE483D01113B2BD7AD8D322D32EEDA3DFF2E9A386959299DD9529CD003
AD4E0847689E519FBB2B7796522ED09DBF020D89506CD1270C0B3EA235BDEFE3
E2419A962F17A615B1FD4252DB7D7139592E2A6D585CED47F2C5E05587419C70
AA92193462DE726263DBFD9635B70589521B47C6DA9DBF0F87E5F9CC7BE01927
BD85A7797D499F07FFC01CBAA10C0032E8E7384836BDE8A66BD3DEACB7FFAD8D
5DB44108662E33BD80F37982E97287961A1F4AB0041A3247EB7E667B2842D65A
5E184D7383D2D3BA577DE32847B3CE5B6F1B549B9AEBB0B61DADB95B6204C044
DE8B99D6205FECE23D72A9F61619E09C929922E4FDA94D06EC532E7F720BEDE2
D292AB7B01E9712C464511BF6D56A1F0B72D203A7C5FF3017508DF9821E38471
21A0080D2E917EC3E48A45B3380636F06F3DF2CABFF3B59F90EC4E790133AA57
8C8AF018B06D7B9F5E1382E0A0098DCDD32D50196DB55BC8463033C452199671
D8FCC9BD8E80C4653E80F243C7469D4550235FD56FB84D5274CE25BBBF3E7B16
0A35E96685E39DE90AE39CDFAAAE022967162A1F55641176C3B6700F1A001295
64D37065A0F6F9D726CB2CD81B49A9F47C12FF76284D3B01CF3D87952E5A701E
0F825B35DBBF865F372CC051A9D01408C9615F0DA4B21E7AC862145E3D814E78
17C6B9307253EC20A9D8AED089AF77F0C5D896228A3AF8A96329A5E2B530D6C6
977137319321BFDB6A526B7AEA07EB667FF9BEDF5E26A4CAEAC397152D34458B
281D8EA05D66B691CF201E3A4AFDB7509A19756865981D6C109D9D4FED1FCB48
3BA3EBCD9AB2E58CB96372CC1CBC690B43D80BA21706F748014CD294E91F19F8
3E7C0F58421A0C3041E852D07B30951C7BBC506AAA36D5F42B1CF906AD42EC31
B59E4DAC2C64FF09E360B3C3A85CAB5CBB66B464B941F26B04B69FB1E640A4C0
9191F2A840375C3B8977CAB538996BD041721579FA422968D8557733F46E88F4
93197B79723F7A2CA078E32C968C0BADA2601C1CE1C1B4F81F8C27504FFFF0BE
8E237AD5EECA0A809F8EF098A4B06FEE33CF2810647622AB644595F7860F1538
363CABDB8EC033F6D1A5B6E1D8A2A3EA61B8AF242E4F815D3119DFBE9B4D20B0
BE8BBE3C1A5459A27799E63F136B6CF3BF60C4D07048BCF34879B683B2846019
287CC9C411C0FC0007733572C4C243D9DF0E9D06A41B396DEBEAAFA70A015209
3E834FC1F528AE69C8454E5D0DA086421634EEE0F45A6CEC462468AD09E6EBBC
D1EB55B342D95E2505A17DCD8BED5A8ADC08494E5BA8B57CE522758AC34578F1
9A26D9BEC6A777904EDD6949D621BE879C3EED73977F936EA40B070524C76749
AAC7760A44DEB1D538DBE4434034B48EA578982D5F6BB2C396C57BEA6D1DC84C
A22B4B525D05C90AD313D29262295E2C7E90D9F96E2389B76EED40845D9AFB54
CAA90EB44E4C1819F1DF921F5B74E8F1633C58C6C2770DC561F2703F8A109E6A
84CFDA96F7CA93B7288B2491380B2F4F87646F6BA4243B7827D34D3E982DB93A
891AAABA4C543AE5D534E65D813E0B4E320CB26E2BD241B993D1925C487FCE04
C40D2B19109CAA85E7535243002B3C3264CF573DB6FB5CFB0046A0F3744E683F
88050A9CC76AD73A11DD8736326702EAA49285A45B4BE4AAB05AF4C971DE2097
309D269F7318EB0E1351CDC979DCC5C686D4C9E96650E4FA7093056682E8CAAE
F1F93926CA457899A06AC3DD5F51240599607AA13E1F15030EA41B1E721FB0E2
3746B9F8A98F0A163741A724CEEF08DD9F520F03E5F54901E7D1914D4B91D3E4
D1A8B6C56DFDE887E01FCF6FDE7E553889B94401E231AA18D6C51D9DD3D307AB
F939BD3783CDF913105901D9477A7DAC80AF7C8244917DA635EEFA010F6283D0
F4545EBC55591235C56A4CA40CB555A4BA1A2E7E3B37375DC205CD8FFD81E90B
BF30579F13EA06A36998F43019B3EBFF84387DC0AE4856109095A7780A665FC6
63276F38247587B5B9B36B62A41A88A2BCD96FC01F540355F9558FD8D9D5B747
8A9A196FB1265991CF32B730B9D0738C4058BC14A458F48494769116E197A253
5597ACFB00C65F6F7FEE25EC23E5DF02A3787BDB9245562286488CDACF7FA1C6
FF8AF6320D750231B552FB90F12361FFF3BA821F31DB2754D4975BBD240BBCE9
4315760513017D1B7C37610A75DEC881250886C5863A4D3B7259B41E09C916BA
B4746FF9E2C557AC4504E3369E3A3FABF49EE07EFFC894400464219578846685
909845C2A0BF4CAA5FFD6DED41E0AD41690F22866F0EE5D39073FCD7ED1AA129
4A88CACA2481C23A34DBE22090B97CAAF5171AB72DD33B92A53D58C697C487E3
C9F825B5BD086A6F17367230AB37C02E120339A1BAB7493AE33853F181E22738
DDAC41D60D4F71F6CEC22AE275C6B2C110792C0F0A75EEBC9695DD8C5936023E
B71C52CDC9D40D9B1A3233D8FDEB2D1AF844712AF0F70DDAFDFC2E0B23C3575B
A7422D8B8743AEA49E26DED6E9861BAAD4020FFC9E1E34E55F359081DB55863E
11A21455AE0DAA5C0FEAFE4828FFFF9682A94A759A52DABC55192C708AC32DD4
739F3143F0E12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B2B662D2DA2A3096
0687F2DCF03E8EC3B3355440F8790FA57062157E6D94CC34A4E8E3C92492497C
655970855C4672FB06379D3A469D9AB505B94F2B82BC63104BB1514F2FB43746
36F2E5DB8CF80B65E415BDD44B433185E033DC662AA69A316267E1B0C145D36E
FDB7CFC476690168B83AC1F2FB02C145A7F169398989C741A0326A1D62782953
55E2C03DA634AA10D12CC0C35B8399330235BF13206A3DA1E62970AE119EF374
04C17535023E73FD32A1EF0C65955316358B689AF6978D929610EB3B5B3F8617
9CB516D728726E9760CD44D71FBB7259FF3D745033E903863C24A2FBD2233C85
4A7CE8539682A09B7C6820CFC12980C2E94B0ED3CA0B9CFFFF0802EF93C18A00
207C13BD757BD17E21925621AC4EE580A496B1062FDB354D0361A3054DC28FF8
8E4D0A27D4DE5AB3F44DF52033A1EE28195612BDDA01232775857EDEBD007AA9
E1BEE3F6605B45B2B19AA1F17DA30AFEB722FEC5701CB3691A04D0896F1A6F2B
30F1F2C83C47168665599D948896FB43C31F703202BDA74F19126C17DD16A391
3F27F12C896BDE5C6BFFBFD272589D06D3FAD451B9C70A1870543B57FC8ABFFF
46A2951615938B81AFA5C99B02AB37CB7492A3032BC29A9F0FEC35CE3F946D7D
804C18E9DB580E492F7617EAE272D8ECDFB1034D0314F44164667B8993158E72
300A27BC5EB5D12BE21B2B2B48FF19EC93CE7420EA4E8638DE339C8146D02EC6
4F0DC1C91B985B114CE454186605DDD70CA4FD6A4DDDFF737BC32456C980EBB4
EA8B81AC104302529C635EF4F0F627F510F88B13609014E6BC506A9E9F251401
8792CA5E16B365ED83C24C44A68CC2E0CE3482804FE10153467FC0AFC951B645
E30ECCABC655EA0B4027ADA78E407D0E670E2F2454556BF38810457171CD44BD
6DB6A7A50B07D3BA3E41BC17DBD54CEF2C90CDBD10050A1DFDCC768878F88AE9
0E87FD781289145C5009490ED863242A2203F226507612115330743692D0D47F
C6348A527EE4B7681DE25865DD5159CACB293FE234CBD463FC2F876B779DC3E8
C553F076877079FE2C27A8F95C3A194D84C7B6487A232F85E82EB2C9D5C2056F
460B57D118F5B418877256CDC5A7A08C426A39C954F7861E03D364410722F6D1
60A04EBCC9B06A2E3F4E207AAD54A6A4BE1FE073DB7DEED7DC4A62C0B53A5731
671DE03CE6FC40AEC595B42C0C9E56BD799B6A93858BDF6E0BA462BADF76E107
548BA0552E4D03D2F128BD6AF030D18E559DAB50A977CF474EE1410D7097785D
1205C987214494EEF9B605BC284EE34062E3B392D2CD315816A2B33F25434DE5
76FD76BAB1F0ADFDF40D0BE8D9D796D7093AE4B6CFB2A7D380936EF03DC811A8
503601B00D4CEE94D1CEDF1E2D29BB43864AB5B770A14C98A43C9C773107BC34
BD195096C9A611AFDC17298B4BC7B1751EB7B435C8664B7FA44D468232B48D68
3FC3536CAC658AB6CD5E16B47B0CD568C66EF1168FA287440D5D8A2E1E7E81C9
582C36A894798598F28A525CC0DB7CDE2FDE3B37F6BE5F347D6C294E2696139F
0365C277336D959D1871BEC575BBC7636091AF42D8B2A4823899781D1E749C6B
CC3C3B73DC0CC3EB09475E7E7257B3142AF54A203CA38E8B086AFEDC71A687CB
17E4958E7BB99F1A104B0B38943A1E86C4E965501F2271CD1D2B02623F2BD64E
6E57D1ABD3CC18C001B3CC5287036C50757847790D1948B7FE979969998A42A6
9C01188C5B9A01C4B661F681941B435FC633150A8281CD41E2B4271AB9689998
B5EC31CA5272E8711E9E015E0D1D3591BEFF2D1E7298808BB9EE7325CD18DFA6
A8DE369F3FAA212538014DC7DCEB4DDDFF1266E87F8449EA57ACAA7CC99A7EBF
02801B05E6AB4BE8D816524ED13CB06564350AF7CA583A1573D40EF34ACA9A41
E986B66DD6397D7BEF067C7257DF083F2771255EBCE57776365988BC7AC45FAE
8695FD595313E165E8FB1005C030C9268E492FD6C6CF6B4480898F7AF245A0E6
D9454C95E9E7D77E07D64C91659A68A452BD6EC7369BCE21C5BA8B1D3308C2C0
8AA62D0646F262EFFD72A5AE2829C0FC8BB237C55CE4C8CED0A831A6D84DF2F4
0D7EA9206C04AD6C3C2231C5E34A93ED6D24E1D1DF16D6654B35FB04C8D9896F
238737DB296B9DA4E599743D37D975968224C50A9B5209F7E581E04BD937DB4B
5D75F9026552697528C7E8F4904A1A00E1BB27EB0303FE4A3155D41819ACC33E
CAB1C24AEC817DFB50F53177890AD60FF059AFCC4B67828D60CC8C0C1792035B
C66EC4E30AF7620DACC3C175DEA9E4AD4B92CF9327C0B4AEA7AECEF514F72326
C3F650CF1C6F62E2F3B69D5CD73255BA48202A5F61C55D91B6309E7F1224F81A
09A5696316B1DDD8566CD049434825159F4CAFA356E38B5A0A71BF9F85D77085
E425643F78D0241961D51099C454900E33839C306D63E9DB75642A3CAEC0E02B
6FD9BF44B1637415C3EC919B6E5DA9B0BE84A132E345973DDE9F3B04019CE02B
F379243E0850550ED5A274188A69F0FC132C56972CD11256C8A41505C5803892
AD1A6AA18A21C4FAF6A43F3D84AA8A2296E2AE08995EBD925705AF75F33B1ABA
5FF72E0256646342DF1111DC4F70CA8642AE5A5463A92BFFFB6279251CD4D6B4
CDDB087D9A62A389C590700D01F43DFD338485347C0BFF45043294DC100B0CC5
152259D7DFADBB3FAB61A1AAECD0DC303FA6728B7E1F7D96DE9699A98604F4A3
1EC4C71DF4A027C2FA705ACA11C2A6719E94730DEA008B164DE6B4A2EE2376CD
9FF8C58F7EEBFDC1C940ECEE3BDD6FD4D3F5CD9757984BD58123DCBFF4518D1F
02E07794D36505D87209C8FDED6D73AE279EF12B8D0065D37C3D0AFDE3B08F88
C9961E8137897CFA719892FD16526A057057F21F7BC923340957142B1A91E26B
1708066B73C74412E8F6486B8A322300A1E3AA07AF91F30703A8D69B9C0B4EC4
13CCE70D9BAE626783C10B79E2C6129504138041D13A4D4F1488C39AAE610DA6
49A8307E12314A864470E9C8F9B6E5C4662E406BF29DFF6E01E8662BADF79F03
E033D587F0BA008D4B6AE8A432C28E729621556740DC1CB6F481B0385ED60CEE
5EA5070F08F2045155F5CEC43251BFA60655881F568BC224101B947454CC9DF5
4FD6F361B0664B8EF31A3A42490DA4BC6F938BB5B219B7C9F0E930AFFC09788F
5DC36F2DE63FBCDA1E3C3D50B413DDAE2003E308606D4D3EA7E7391BF7A5CC67

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE27995D78FD99C5784B2B7C7C509E9B93BCC29
35CD2714C50B246A7DC70C99B7DBFADA1E01B81749EE49A70853CD45FC323019
A45BCA3DE39C3E7618C6322D264556FD657D9270933D8B167D2575CF146336BB
1C76735F3B09470E40B0624E52F21809704749F6D81E3B829D163D9F61E070EE
D8CA803E56CF227F71EB8061B83E035C7138A7CFB6D6CBAFB766754C0E8934F9
AB738930EB75A2713CCBE333CC60A6A8F2BFDB043ADC0B94FA3370BBFBC61D7D
25524B08C70599D58E7521F58D26AFECE212309BD7BCF62735379ACF3309DDC5
C3F30DD7D3A37804BB23274D7B30DD69E1B2C3CA70F2F79FA29543F526BB808F
04609B43776382C4389362AEA7FE4E03637B4599D176F103143DC04D5B5E53D8
568E7911839EB05C8F4A9E9C911D746C4C8EBC0A4E6AC3CF08AC86548A8FD6D4
7450B1FD87B119E547047F43E9CCDE1C1F8645DA03EEB02B27E36BB6C87F39D0
505579B2D0FF4DA9D4AA971DB4C82693DEB59FAEB3A14C1547C6C46C24FF3513
EBC97357AA2F25BCDC92F98CFF9F3D5881095B96FBB30E8330499FB4803EAF74
920BAFB89889071729076D755021515BD8DE5177013854B10911605F872456B8
F504547AE968C323B85DCAD9AAD5FC33F29A921D427EEE0E098E8591EA7F2D7B
A5CD8A91C01AE80B672831C286C900AD20776B50D4D2004F7295D860A2974B73
A9E8B594BC8BCA8356DB43399E6A6918A887A64B2EEE98060E47C0F371681713
13F92A306D1A7DD5FCA29CE223138B98E6C6BE9F3B305E2E4ECE098AEC270F11
2CADA74CFF4BD78C5DEF4354211E3953CD7AD90239C1FFCA061A21652104F54D
4CE1C6B388B901F937A299F65C3217180D4BBDA87A96F4C31014265EFD9206DD
DDD45DD3F56823BF8236F0E6B94537D9CEF904EDEC7EBFB0E60995CF6457CF0B
1D76EFC8D22A8E991888FC44FF9ED2954B7A9DF5CF6F256C8A86C3D98CADF1E9
24E6C6725EDE1262199758B2B070504BD81147F35D8989D2CA44BEDE6B8BA09F
511388851B9D9865887D4EF8AA7AE6AB234B252A506EA2EB59B1AD40A04BA972
EC6DC7C9E4ADEB7E40045F10F38E0C8D50CD28D96A028BE7C67D1CD148404CE3
0DE9213AC26B82EB823194818E6DE249207343C37BE9B926EEDF21E1D52251D4
37D555CB1FEF227CD15A08CA2A245C3C6508DD3592E809E0C72380B92F4B946A
7BAF34835CAC375077A843F61978AB4876871FBF42DF8EB5F877033452F08D41
970883CD836D1668B85BD642F7F50AE117B3ACD1A1372D5D4D2555A2E8E23E29
D8C8C5F39807B5A01188DBAA07A27A116C80E837DC740E86068952F0A57E9027
C39A603A4886213EC782000DEABF71EAE1B8944E2EEF19E1F7FBF442840845EE
D13FA9B4C5CB1FDE6F0DE20AAD69160BFBDA23C2D29311C4F82514DCF27C6B94
A8E727522E182DAB2869CD2C2B0F39016EB778060F35A6FE085A1BDB04A65CBB
6605D4D72E11338D87D5B0283A4B81EC83D03F502E7DBF202BA558B4EB271C57
922F0CF3980A02A40CEB2FEE42B631C999B71EC234FED7B269E5D91564F0AC54
D70F8EFC63B94F73ACBB4CD279716F68783C493794BF12502E04FC52064E63D0
05F2034A1E7E4192D1193BD94E99C0CCF702D9EC100066E1490894F5ABC92A92
C3F42F4101AC88024884C018C7D0DF65F7CEBDD46FADABA26B5433D34C2AEB07
6031841EA02F1C9622E0B64CD190A4AF3020654123563C5D6ED62F112077A1E5
88A8C8499A8917CAB23F00BC124FD93096D2603BC6C1734124CA3176AB14F488
26ED2E56C67571DB18177A07E082CB873440C4648D3FFF06A1499A5C7EDBE172
1759C1BEA3DE43B426C5E175B059005BF2911E685D076FF12D01742E9AAFACF2
CFCAF0517858C28A24FFEB5A26E46BB5B788713FB8009CCFE62C17E001C96636
A8DC58B71D4BC720F615D2873CD11E06DDB3A7788888A8E713D0E82FC861C0D9
ED98E873821095C6BE6CA909BCEB6C9BB1B0730BCBCB20E22D06AD1AAE225D51
25AAA901A78E86386D29A7CCEFBAA8F35B4813CC9D289E5244483DFEC10FF237
E38BC8E19B81502A19E0BD113AFF02F4E365A4708189A7BDEAB2D32A6E464AAE
B3505AF669EC3FE5A7C9320D907438DB23A82D8CB9777BECA40890C137564EAC
CE768714D7430BE1825C90D88DF40E753607A06AFC0046335F97A2FF20EA44F7
94C1DFD6B105FDFC6EBC6D5745C10D2C3BD560C939B80707B471D13D7A910F23
91FA6B63F2E6A01890368EA8F0D42E7A93B343C664BBCEBDBC0C99138A50E5C0
F57977D929DC9CC159568FBF5523D79229E9BA352E4193A44EE745F76035DBC9
34588B2B8FF44C8368C9C69AD17E91BD78559AD4BE219C8B110472F95FD5CEE1
A7EC2A78941AFD0B102C6CEF9D5BCD4C4FB87316BC327ABA5D5F5FF14BFAABDF
9FC06879D91DADEAA25F850083BE6CC26AE7437664ABB66CCEEA19D0BDE898CF
328861C3CB4423FD2C0C1AFA95A6195FEF30511D5C87876C863364CE4B089A97
6F9C29A14A61785C42D2C746A98194782D9A504B2A0A92D4E4B5062855A33404
2E14145F4684AD22D461E740FA8DD232D18E559DAB50A977CF474EE1410D7097
785D120CA5C6E051D096CC40E931BEB074AA9E32BBFA361593C78D0D2EDCB1CD
D560A14E93017099D24663633B06BBE3C20A2718C044731B6DB8007749D1B605
F397413DF968722DC03BD138B0559D3E5887B7EA9C9C54F8335F55CC3F1B9135
C70CD0214CF04A4EC5AD120D492F25CD6E1E80CE87C5709112938ACF9BB2E011
87FC035CEA0FD5C1147D41630F1CC9B82B395BDCE1885A1D5F3441B03AC321C1
5CDE681DBB192993B553048C58C55F0E420DCEA46CD16B75173C5D37047E511D
C980EBD803E01C35504C4092D93AE476AB15324149043E713261671835DDF160
4B8DA000941FC5F85C754D5132402A0A94EA3D0E37D6B9890461CF1C65AB7C2E
E42288BD17DB983600580BB1513D30983C4FCDD1836FEDC80308316401D8B181
EE2A3B114F68DED3488EB9ABDBCE6E73EC5A0AD42D7735045D594C43A33EA29C
BE2AB98CD0305DD935D8F0F5EE3205A7576650887883B3C9AC23E217F48154FD
6CE1454F09486B47A5A18DE65034D0CC9F9F66DE2BE45C2D6F1AF8B10F578B9F
F66D78D738FA85FC454C23236FF4B665EA0E6210060F6439E9CCA612DC7ACE7A
D12F478F25D40CDF7D23E3E543B75A97A7BC960A7F742A2C89212832C36801A4
C384B89A91D53E0CD886C7BE0692CEB0CF29D9B4BD53E08D9FC1A863599BCF9A
717F4DC319B4B59AF009C11A91ACB087542F94750DC53232E62ACC3C660965F4
5849011BD76FF8489964A7848FC6F3CFA44B7F502649EAD20FD32FA1999CB88E
A646C764BD2088A3EF00A4F1862F2CAE2F8B6A8DB26A1287AB3DD941A92AC57C
EC6D4CFCE0ADFD99BDC3BE161F4C1FBA9B854899BDB7E9D09A1E25A95E9789BA
DC6967F96E550903DF9B81969E38FA3DE2A058EE2076C77C33A93F2FBAECA0A0
EA98FA4C3D1F8700B04CEAEA603A0833E91FB4A44AC83C4E86308B6E89C99A84
8AAAF1BD143560B559176CAF28B1D8B2C8370CBAD5873329B24AD4A743F2CFD1
8B26B1128AA48F72767FF2268BED8317FAFDB532191FA35C2984AE7C50481FF3
126BAE5309893814BA28263EB863D5E6F01C423E6C5D3289B152CE19FDB55A11
282FEEFFF3E262F26041CB1AF30804A3CC34C06C6FBA8AED582215711B0A17F4
1B505FA0B5F906C537EFCDEE4C69AFFEF89B74C5B83E2DEE7642AA85B1615F9C
BA1C3C3197223C98A1ACAA495A6B8B8F1919AC158DC63FF4600FDF993CE8D2E6
3DAB7E352BE200322BBAF6DDD2628694612A7790EA8E1836533738405E9B7AB6
9DC77FE9A283B3A8C6A3651DE8AF71499D39CE0567AEA286091BEA9D6A443A5C
D35747785C433D4E18A02ABA38F55742DC36E4FF07A656AFDC3D0A32CFC097B0
5F9D90CC4B614AE7F58F3BFAF22EE6821291164B14DA11FB16C0E671A6104082
94D05830E44ED3E9908B59DB3B3506C60D3F766ECE69AE23369AAC3B5951B557
D62C7728D6E3F13BE05939C2A6FAA336EFA57001DE299223DDBB333D71003681
B4A816B378AFE37543607554F1F1B427784EFB366CBFF1CD7CD5FE3CB61842EF
56F134AB25DCAD2BD08AE61E233FE6FA79017D1883C61EF0334681CCACC5D024
F39309DDAE717CDDEBF80C88974D717C4539732DAD1226FE504620FDEEEC6266
41060E55159270B4794F9C0945FEAC295D17B4E252D015910B847534A519CFC3
2D52169510940A9E9AD636AE141331BE35D1D5308C927BA3940B773F20E5B3C7
813663D33205454A1A4B2D9173D593615C4459845E1AEEEE1ABCE3E5328D3F81
11610DB32C86FF6F9DBA1B8D6BBA3C4AF64523F37F176F3256E298D22DC5F1CC
F1A67A355219E2EE13D5D6369F656836EE0A77206E8236649E81A1F0E02D8D3A
3C8FAAECF7839D20329CBC5ACB43482D3A3A1E9C3A426BC7FE406E89FF25FEB2
34CCD7F3FB3C608FF37988C7DE6A41FB1020DBBCC762F2BF24BF424BBB2D3207
9DD408226AEAA0C4DCB8DF16CC6767B0BC73EBA052FAA5311407ADDD4BDB1061
3A860B10D2C219E96E61050B98FB04425912F484F5B79B9C0735F92C1B4353B0
76358780D1547206329F302AF6853E5DCFBFE199A76734AEC487BBB103A8547A
0090F0342D48DFF9EA9821454CB759B3D82921AB4B9278E652C2F30A8A121781
8CFD111E32142FFB160DB6422A5884151A4671D631260FB1758BAC67E14234D2
5747F1E68E0C36FEFBD535FA5C64B046AA8835817140B76DC22B5453AE8F3F76
C69B9F10988BE7D061F539CC8711030D2483F752706E27D43E3102CEC57B8A58
6D3FF862999D20CD6BBDB23762249BA7031D4D97DE2280C10756DAC422F0B747
E427E5DB0B265FDD57193B8E7F00C2162FB111DC4972B51E59320793EC60AA3A
F4A3F68AA5E11F657F898F59F67E0D285167231B9F444D42F17CB182EE584117
FC81DDB5BEF8EB957F817C5699C7293E47DAA4EAD6D47F00FC6443EFCDCCACE4
627CFE80E82179579BFE305B9AA1770E8E8970E70524F9F7AE081E64AD1F71D6
CC6FF054661866B68CCC383E5403F0A734ECAD86937D32FACAB6B04F3F9ADD79
94C11CE94999A3F38C88115D6082DECDC2125A4643102DFD0AFCD8682BE5CA11
AABA54285DEB171209CC4CF8879A65088C7381B9029B67CE9029093EEBBAEDD4
403C382D29751340F63D14C45D0C8ACE829FC3034643F4B76AB7BF41CDB0A2CF
B2CFF7A3E022256D29AE0E789DBA81CB4DDE7D4A970A3162D903EDE2880C20DD
FCB205309DA145A55A2C6763E0D8BC8A0BF42461DCA1CB7E613647A93FAEC756
3535886E28292A422264BAEA373D5F1AD84FC79DE23E2BA52D8EE1B1D3F80318
8614D6ACD81856288366086F50154919E5C99CF62A7700E896F5B69456110B9A
8BBCDA8551C3C14F979F3CBB597AAE41210AA7A444428DD055DD35D91A1DD465
3800988005F542BD304D2D1798BABD827BC8A689C3C35078CC3502DEF40DE082
B544B4AF7127EA6D5B8FF5A0735257BE29E36A29B707A51A697A4D8A360D4017
19C5FDD791A1C640D47AF86948448DD00039DB41E9C5BE1A7E6BB48920932280
BC552ECD04E2C33B76A0F6172098AA76CD4660980EFA1C84D5348740B8A4885A
BE1FC79E81913524DB238155870C6B9819E5842664A4049499CAFA7351D3D3BF
FEB9A51236038D4452E44A34F25718B7158C40F12ACA152F1EE78072533F8900
CC3A1869BE48305DA62447B28A45D6F516078C72A4B155A2715B713EC359F680
FCF2663644C985191135F0156722F0BF1DFACDE42BEFD5278ACEC4A55F1A082D
537B3C1EE890A6FD2ECE0EF3999DB161EF7DB88DA4B0C592385D35F705BC2A9C
CD7351AE879DBB7FB52F25A5A5DFA45DB0FDF9B94F0AA69918932E563C8827CC
340AC4350DD2FF1A3EA9F8F3711A16CCE9A37170F0C02A9C7143D722CFC08677
6227901157114767FEC20D2DBA71C87061EE8BF523D591180D29A8F8E14A7959
731A74DC4B215D7EC095EBE86A3CB7C28C2EA7E6A19A68B64EAF236A3468C0F9
453189A1DFA55A9459D1C5B8CDC769D992269E6EC4631B1B75F7E6A511DBD978
F3032D2FC6BD54FD7664FAF472BBF13AC7F619FDC4AD5B38CE04E4C555757F69
C669C5EC403770F681C400FAEA98F62F02633E0F85A780A61DF255239F9BC3EA
AD652E6D5E754B9ADE46841E52DF90C3F0D7CE5DD684566DCF0B43A0B0F975DE
AE2F7601EB63C39D6EE8C54611D9D515EEBB7192C63D22D02BB2A5A27270225E
C95173C09068553725ABA9423F4B268C58072241D2DC5C080E7881848222220A
63605F00205C205B35DA93F4D000126B2CE72AC322B4D962537889CF225B3381
6EB449BF2C28599EB66F071FFCE3410C547A9B74D216032B72854A0B8A6ADE15
EBBFD5CD2BA9FAB7E75099FF1B68329FABA01826377C35067A7C6785ECE0C669
C0392E1C02A9F69CB191E2F8FCFF6FE23A3ABC8D6EE13773BA099E9F33DE6B1D
442AF96EE9B4EA9012AD3D9EF3C67E4341383124196569481872D2637F7C4006
1417CF942117F2DD286236367D3FD6206DF1B2B7701C20E811C3B65FB8B29B70
C0831ADB61A92C2DB592CF08B3DE2FFE5C4AB1E7A8E709E36725A1250C5907B8
A7B5D6B23DA27838D078225DEF89BFE7329F2B420491CAF1794C18EA07230E40
7DC950C01E31D915C6626F6E421543DC7754F1AA11748EEA4132F47399C1241A
A3613DD291F5D1D046FD9EE8832D60E91796C916FAFE58F51818B80BBA556C14
38BBAD22C404896C6490EAFC75CBF6CADA6A6B7C7B6E01A7BCF422C9A4A46BCB
3A9089D8B41B2CB3007B8260783AC9A3A8A50D9E4040DC6ADF8979C2C77291AE
9C13D9DC197DBFA7ED11B3B415C97314D28889AEC6BEA809470BFCCFEF0C622C
FEAE7F4AE740D9D7E24185FAD3D7048EA67AB4E1DD05CDD42DA117D5956FFE71
11F3426ABA50B07E0C853EBD237F5F284CDBEE82439B418703036305A7184A00
FDD7F36FBE5932DF128FCF4C4E5CE4CFE0904353C10378E611ECE652B37E911A
E0E16EA81274C5AB5F77B2C4564899F5DF9BA49D9D26DC2FFC59181147EB065D
30A883FD14933F4B11CC112DE73301FD9118CFA0BD6F3615B632568E0EA67288
F7AF12B051C4E298AEE276B5FF364A289222E6D4251DF41E0518AB7B1BC7F70A
162DAFE55AD7817AA62773CE160F630FD00345C1DD91C796157A282D8BC6524B
578BCF2CA6C2E48058A8D65B74900DE1EA95B981FBBCE8D846DAE64D975C3746
50DA926F24CFC1AC7172514CF1F4CC942F4B9DD6FF29A0F681BB7C42AB16F3DC
305839233A6D79FF1C7CA9DEBA71EED8BD7ECF7829B310429383B5497FF39974
7A568AB4C2B2317D3C80B1A70B71AA537516A6AE9516D7DAA2DE6C0097EC1BC5
52EBE9B4BEDDDDF27B0F06F006AF07A0FDB7C9FBC784A1C9E0506142709DA997
1E950373E5B501F24B33988323DF970D0D828005E45C4A8C4BD625056509BC9B
DE9DEE1E8951142A28319378A3B3EFCE8C60473C239DBA7010D3C9B6F79B12C6
005B99E6F7F3A6713E67E7C08467C617E31DFA524A30DB6978E8EFEA63DE4D8A
AC6484D208FA185432C09B97FD98032422B18100BEE64228990E597E21FC63BB
E8685F31189067F87F494CC6B431BAF0804D83527ECE7ACACA59B8688F63822D
A479E4279465A6CBD43EB5B5DB8B72E96257500EA7D9EA5958819F5CE03BEF6B
59B669723240EDE1525C5C1331150CEE1B942E6A555049252B35E961494C96DE
DCC822B75C8DBB2F8F03639A13E6F3845521A3F14AF26B04B69FB1E640A4C091
91F2A840375C3B89738B614AADD69471CE6B07099AF0E0F7240A1B663AA364CA
7EB90D4C37C4E6C970F7D4EA4D8333C5B27CAEB1C046B8B5D24ED5D673E26A25
811D4BCA9D693EF8ABE786B61C7B7E2D7A8185EB91514A80F81FE7226F672089
0FD2941250CC5A3B60478C7CD7C2D18483F808522BEC54D877EF9C47598585ED
0C78B4D7E5B9422B3CE88E98C87926F208D2B653B93AF76866E38F6F5B4953BB
6790BF383CF2A56E4E746EE98B9667072874B21A5F98225AE4D547C925E8C00B
B3E642A64685456B6BAF629AB8085CEED1CDAC6B7AC4296BCDC0A475363BAE29
98C2FD754A65945A958D9250B329ED72DFFF1413E660A1ABCBB985D94ABEE7C5
95B123A580A6D198644049DED12F4BC6817CAFFCF66BD9DCB19A5853273485E7
2F65B9817B90D23D92B264D2A274CD739F6A9A8920C2DF579A8C1E5ABC2E74FF
ACCEC903E9ABCB6ADFA4EB07AC36443DC19A5BE5EC10A5E013BD7D621A9025FA
A444DBC3E4C66B4530CAAF0E79D1775A4271DB221ECCFA25639CFDADABB26CB2
5314E5FF7110BFC9D5E0419ADD2F5CC1C09AD68EB9A83F51EF690F901A50B844
41C4DB391255574BC6C5F36FA9DC30E799BEDE4F80E5CF50E44B9D8319141D0F
640C2FAB459AAFFBA750A16A4999D5A59AEB5FAE6FA51EA6EB68C744D6880714
44C6EBA6D73FAF4BEB8741396750BE8416A3F738EC0C9FC2350C3EF29619FFF3
F800B8ACF3E15E01BCDB6D4CD8D1F8188BBAA1A71A96F1A32525FB3485903C00
361D3E72B126ED17CC167AF71471686937FFEB7E81904730359D72FB1F64E3B0
41A69B2441AB076D0A741AC388F04B00DE2653B18C99512BDA1612DB547D75B1
47C85088703C68C018951631F2EA80DF2F50241D796DC4A59A6A3159A5DBF34A
90316A3FAC59C053364AE5CC71BA9B8CEA1FEBE62D888E525888557F6B064CBA
5D4C249535659573BC504F7BD9AD7ECACCDEC2CDCC7D47FFAD34A12895B6587C
EADCC469FF3B2A422DBF3A339BF3DA423C82A9EF28E83FDE0C3C995E7B4F9755
F6C52B2F1E9E66AD9E7C3C3C96F6FD1D2A69856DE1ADA86B4EE8FCB5924E01F7
3A956FCA977A5793953E2790EE733B4D4C76A47A1335CA1AD3C2B451361DC744
F4815256430F566A6DCF28A6675A0EB20A8A3263C17D6B79FFB92592316FB237
45EE6EE084196CDBAE8F16946D857CE704F4293D1D7D5BD0405A163AC9894C52
4D7ABA6326C39829DC8A2ABDFC584BBBC8AB8932CBFDFB9FBE0FF0161C8AF487
9CEAA37352D164013DA9C1D285F1589F4B98172F185FC890116846F6EC00754B
2523E1F4D80ACF16020091018865E23D6C0C9BA0696A6B6CCFE54B6B1DEB0F94
AEB1E311381ACC86D0856C90A91D904C918800DA6A271351A831E47B7741A1EE
4FF0706BCC02E25EC3124E538CB207A3D156167BA2B5BFF816F894ADD3727655
612374EC339DDFEF0101A9CAD4EFEA168F36C55A6E9F4F58E4908EFA20B7551C
67CB65DFB3A6A4F462BFFD7FA6F55790E477C71A2F7CAA6DF3E02D22CDDC8EB6
6EFD45A16A26F5B8E1ABE5009BD17D8A90C410881A96F9B40CCF15567797367A
96A03D3AC106E06F828E9615640596CC91711D12A4155E5D1DCFDE9F4ECD69FD
31EE19C5D98A6566CB91770EC7F8004DA518F5ADAFBC89A00C0681726C4D377C
A89ABD1BEE3C9BD84A05DD11CF10D6B777A6AFF563AA3CF9B4F1B0A3A5B0F48C
D2BF96F92CA5FB5B497F4632B1E1826CFE046796B89912BCD6B7BEE52FE335CA
9BC02E9932C4295E25982DE1DC5A7E47644E6175E9B3AF676603DD8C5F5B0370
22B38CB7D8F49636053E2BD0287A3C313E1F43F07D3DDDDE40C2AC635ED04731
C461CD14359427CE75FB0E2B46B3E57B2E14CFE2728FD062DED1FC4552C0B714
EEE9BF2B469ECF927A50E97BD02496F62FB0778169721B3F1714B1B627B79606
E15D1DFB6E3E5386A1D75068986D021414BCA08AFD84BAB090E3434034B8BF9C
336D7991B97D2C102D99F17118D9CAC94359426F03AE236B9B02B7EE66A54BAC
3867BE0389CA1678E09D9D2EBD374BD0E2F84C30594EFBC77AF9059895E49154
05709607F4B3FEDC85A3A7380BC80D15DBD5160922AAF2C11B32778159AE6E49
89B3E184DAD4004F875E8048DD691A98B1DE92D88DD77B8715D6A220A3B1458E
A90D68B2B13A5D4A79B827C93FC2322684F24F3418F9B6CC9AB5C8DFE79E4026
7EE1B15AC390E3A7C5FE2404D7748075F07DFD48CEF6189F13619637A90BFC57
B1A5CA1A11C56146853BEE469B08171BB5ABBB29858F65E937CDE31D67C84771
9779DE0B331E51AD8846A82AF91F44923F25BAC6773C8AD0A81075F9B4A3F72A
50F8C443BB34DE842F3EBDE357648BB47871A70137CB99E97048161FDD3D79BB
1648BD39E15558B38FDB6563CAE2C57548E0182F692E585713B5FD22FD41E4C8
22E7774D2E36B7DC679E91F344E2181C9631F0E3F0E9D10C6306693FE71BAD27
746BB08B22018E76272937A91A1CB9421DE1DD7BC5D109B52B7093D785F4380C
E7E2D15E9763A4AF799EB15520B2AAE41F05B4B317C454A0F5F54B21DD7097DC
BDB747D975077B37CF09EA6F16A1452EA51C9AB784C23CFDAF6F044A5C2AAA6C
CA36A436B73CE97C83E306D223CE7774FA5AF973D985C02A46E776365CDF9B6A
32D8427EDBDEF885B59E018386AFA462D3FC884E32841E6BE12817A12E65BA65
C7CE675E399D4AAD46370C76C3162444F3AA3672C66C81B3B00D9D4F0432AB3E
A1F5D8579CAAE0CBFD02AA25E4E522F1AF1AB4EAC6FB4A789EB88F31D5F2337E
AB4F70211EE6DD75D887C411A4C185B878B8003E1782E9A3484F8CF8B3DD20C7
3B220E9E8A694F5AB21C2E9BA2D96F527B19FE75037804AC7C59F192653317BA
26FFB09FD38C60C117C441E4160DDE659F85ACB1F058AB549FBEAEF52AA3B808
61CCA95504DD63423BF603B14459B7C691BF68F5854FBB70F3F5EFDA7CA047CE
71B49325EFE87D508AAD5DAA2F732B12BA10B7B6B0263B8B5CE6EE63CED9FF7C
620329667BDB2B79A6C97B54B8BFE82A1E6D7F3FEB2DA1454935E38C1FAA3A22
54B70BAA79EA27CDA4EE2247F7B8CFD1429C72E269A2B8FBA0D207B75B05774B
DF89381798A1A62A0A6F8E820ECB5FE4ACA6A493180E0B5E7FBCB90CE9D7EB19
13D307114496116FF0087A487D8130DA7AC5BD0F503D3ABE63C3D4530E353E52
70D5FCCCCB54E7F0C9CBC54BC4CD46657AE3FFFBB204C6D59B5DFCD3E19A4F5D
703731C17E595D0E697FEC6C9A25BA86E49E0C7247962F244E4B3EA74280B710
1D384B1B4FD9F3CC4C007DB73015E52332A3685589F3ADE54C2F30B0AE131698
FDF6B55E5B1B11C5AE8BD7FBDB7BA6E909226523E23AA93628A6B5887CA2263B
F3F5A696EE8686AEEDB31E73863967A4FF7FCCCD04CFD61476B4495F926D1F42
39B2702AAA0A8F27EC86192E30A5239A449B68FE52808798B648EF2E5A7F38F0
1298636F8E1A427D4AE6F0DEA8CE198ACD51B48CB8EEFD48E705F80B009AC980
3066E498C82811CDE551ECB3C8DCC93024F925D8D44389868B07F5431C973C89
C949FAD868DAD4334BAD9F343C0361D03B248E7E7501BC64297D3C8BAF3BC9C0
D33067D50AFE8646CCF705322EFC4802EBEDFDEA9EB53E3804510BA9F24361EA
4C88733185E2FC5BD3720DAF7999C66F6DA0468D5C98B4E9C99FE1B4DE04B482
145F3CB7EBA49C7009564214078E4A64A95F3973DFEFFFA71B3B2BE1D5167D0E
2E82D385830EAF3992E4D8C863BA7C9E05717986CC8A452AE463C1E004348320
6B2C87D3A3296D84F61FEF1A5C7C895EA1EDA6A750662B898F6533036D413777
7EDE774B4792EFAC0D84C06D3D1AC023AD13814FE8FAA4A4E29ED940E9AB5A98
1D904C44E2AAB473137ED9F52818FAC02AC17A1D5484A8ACAE902CE9F29800BC
B01465B2BC0429162BE040639F2EE9C0FA967C96E8E54A1BC5E7269F5317D031
A400EE8C4AD035FFAA196A95E598C9C34E74DDF7A657AF1327EA3EC00A555758
DD88848D48A7E98A78F95DEC58D847DC65E9CB0E30B28A72DEC59D297CC24DB8
9EC76930D071A679EDCE7F36826C7C0C0289A1BAA29D4467B2EDB0A303437071
0E83C814854602CFA5EAE2D3112D43FF22C4723429BCDC4268B1F9CF94C24746
C3FDA17F2C848A4711583826284AE6A9495B072911CC814C19D53B95DE0071E3
A439D65A75E6227FFC6637647F60685A0DAE8F715731AB8EAC7DC648C5C31523
B52641B2281242D1E8539722361272D9A50C5C4C7A725889284D623CD8E5DF6B
C4ADF8132D9F85C7C229F5140D0B98341339A5470B4C89E24C9D753811731297
11D3BA7C52C08E87AF023C833F2E36C2977602AEFC5579B8123C43E8AC022D2F
38D2C47100AFC4401601E1EE4498B7F8AEBF68A600694C245667C46D5213F053
C32E9EF3DE510D05F01B979454C6280A58F8BE30FB98DE2420B3E3A28D735CDC
6DAA8E1A598B5A1519F8F01D006ABF646D25C4A9B937FAD5CC305A0836C5C198
E51243E50DBE5DA38D700443A638FB7F35261F2A09032C9F3A272B7A987888C1
E9D50C054CE99B9F7530982C062593DF513D3154E07738A2E39D6AC9429F1A35
9113F89A45395CDC48DBB13D7618F4FD6A066A4DF35F8BF28C680E7C90DC710C
4909D50036BB8CEC5766421818C10E6B336804C9D88F0EEB0C993216CD336AEC
EC76C438F1859B7494E26582C63DA46ACFF5D5CA41BAF982AB046F43B2DA7552
C98FEA1ADBBB93C025B00E220389962060DD83522D571226623E88BBEA686CCA
DB88397DB2CEC4EB12C2BEA2C26F768EE4BDC1C612B31C7A4A924DA62AD153A5
15079CC4F3EC104592D3D38E10A40C93CA40F8C88F69F5F803FC20B59D8A94F5
9777FF203C063AE8D9EA873AC7B461E0FB63D7C1CE62B8FF34647199204C3406
C65BD371F2E48C48712ED6CF7509792BD183F6711A994C31A54DDC94C9A8E862
5557BFA0C123C0DBC628D7EB2B2787C65B147FB7AA49FD7B056D8E1B1611D4B0
2E05A0FC41A267943125A76D7886A4E6E5F674F6AAF028CFB851E1C22E111F6D
B9A7F8D9F240B8532A91268E9AD2571CA84F117D8558ACD6BA0098C6EBB1AD2C
0A04BA1E0069833A45342B060EF38B19B97882E8F13AB1EC270722A28D29245A
4AFD3AE32BAE8DFD59DD21624E295E5D05CFB53BF7212E2933DD050FB0820AFA
1B2AB99EFEC6D112762B8527CBE3381953B0908617A28D2D6A522B49382C0377
8F67FDECC3DB4BBF0897CA4B909C878C935A958D9250B329ED72DFFF1413E660
A1ABCBB983608D0F5AC9308B32343F2A9CC22EA7D87E512F1249123C12BB8964
D3312AFB91898526FC628BD2AA4BE6827C91AE15997127DFFA9ABFF8C858A51C
83CCCC572024A7D128D2D567877FDDED97FD7C9E73DE4D6D4ED370EFA66156E9
15C6FEE8103DA73B5D782BFFAD7F7C029E12E5D24D547E35CDF1465C249CAB87
0818FA5CC7B9DE515CE6BBCDE3633FD159C855C4CC46FA71B56A2DA46A21D10A
567852020BF0C27F175DE9AFC917F2D783A0838DB0BDC5DFFF8BCFDF1D312FC0
FC0162F47FB4D8D9034DC5D3CA48DB26F515B6576AE85A29BA65112121E1DEDF
8597ED4F734B0AF63F7CAE541F9D511E2DCE82C4C641402C6A9A97BED4C33668
C231EF31A4D5750105FEB6F0C532000809CBDB3C5DCCE929A32C7F0DCBA32F57
AE6C9BA2FD61BE07C5DCCE8CDBE1C6E174AD0D12926D48FA5F6E1D7AB4A025BC
216C928B09F06332844EA9D12718D41C771BE6B07E1C5BB164A3361765B4356C
4E2C8E6EDC84FC313F99904E29111C174A42B49151D18C1047F69B50F6742929
09EE79FE294598B8493F9991DE93CAFEC8A86650ECB240F696BCDDD1A9F0465C
B43B8244578528A86BDA20C9BFB9FF931ECEEE556BCC9C4374EA6B2CCEDF09E9
3A469326883DFB3EB9B157C4EEFE7B4C2CAE4E07F76321A5D3A5906E2108DF5E
38FCD9C55FF4147243FDDBFB594E0FCC622BB066A369CC2474D56EA9D08FC3FF
7CCEB0DA2442304FF353060D4326034A5CD9EC8F73E33DFD982D182E86B3CB63
C968430895741B98CC31540F0B62F18FF86AF9B2A5B3E2A8E7AD8930C9777AD0
ABC8D24F75CA3925E9D2221524462A1F98761B4E749C534262169923CEB18025
FF4554899EF60A69BA10A8E42255598A24FAEA2264AD9C7AB786BB30C4007538
6C8F15EBF8BDF8396177D83B6AE2475B45961043BD8C7908EE9AA670671F12FC
2A455157B1BF595EA3E14929085DBA19DD5D6F37D2BDE9E18C4A49EE7BBC8F82
D8EBA66BA2F0C51C4E4DCC86D3C62FE9E069A1725AEBCC5CB1F7A80951942419
C67A9EB8EB3D1F5B0524B381B6236164733DA8E7A8C1AF60D163801D296860FF
ED817B1F5B4DE32894AD125502A33F3E65A94AC101903963A84EBD442BDF3B49
515AB10DFBF0BC3B537C3B1E57934EC351A8FECB9C6A2D42E04AD651074A7FB8
EEAD846888F724105E9709365231D609DDDB0964A51388C81CDDFF4DA1926B65
7225002331798829B9D72775996ECD8788D9E72EBE4912456D1A78B7076ADE3F
E148F1E7466E6F151D914B01F3BE6B9E21D8B933BFB3BA4F733A59F736544D5C
9BCA08C7C512DE231F44EC16EEB206287FF5F52F63541E76948E91D70112F8AB
A949F5BEAC192A4F0AEA4103BD933B08D5E68858DFB59BB3ACCC436E7CA1DB4F
D788C12F342516093022E01D500E1249B3CBB49C339F430D83A82090B22556B9
04FAB0230F5FC603B307B32E6B502A124CAF3E921871EF6A3E598C971EA81D99
AEBF76F5A9F0B2784E050A11FE8B1B130B758010DF14536C1550920C90992636
2E4CCF5B8AA7EBB59A09821BD121F361A0BB39E02217B34E09C287152425C6E6
07C1EE5D38720004E4858B624AD50EF95F68AD5FF201329AC69D41775618AAD8
209A2A32E8F4AC7502B677A74AC48E341259FCDD1E8D932840FCA372775F1691
CA52CB6583FA4C6F64BD28EC6F839F95D74E2EFA7D25364396F37130C0E488CE
C4339C9309BBA8B4AD3C40F938AAF88CB18CFF74FC89AE9A0B32ECDFD0BF97D2
D2940D54DDFCF2DB627140ED8AD5DBF7D86C88CFEF46D9C126F05A3C85F4400A
796D49A47AF2111C9A3A61A7F07D84B51D8C3E4B86EFCFF1C0E19F4369AD260B
A77F520D10EE8C58E25A36BE601E06A1739387577D67DC35BBA3417520FB95FE
B69D59AA5BBFE3F1CBBEB778ED8BAAF227D57119A0D31F9156AF4D76E60EC293
11F260C358AFC4E6F63A24B5A2CDB4EF4032DCA5CC6D1E11BBA2AD0259A9ADBD
D053FFE120C493DFF9FD4972DAE07D1E9900A649B80FE0359DDB6BDCD292EE03
20B1B6AF535B0EB766985B59976EB80A650E2FE93269C0C848BC437ED3EF4A91
B7729E904D5C2A30E8A58496198E4DA707CF69165E60781CF17E988B84FE2988
4100B6ED20502633B56691F6CEABBEF757D9DDFE05D3D0D001445D16F8BCE217
84152DC21BF8F4EAABD416CF38837E68BAE4A82D035050177B992F6D8C8B9872
BAC7D6BF5C653FFC1EFEF8C0967AD886D051CE75BF38DC965CD18FABECF6253E
FE1E6EDCE9C0A6577A87A99429C4F3557FFE145590C912BEF49C28CE53D3DB4C
A140577FF3BF07644BE345E1989F01BF6F95C6BE6CA90DFCD7992597BE968B5B
231DBC59328B0F92E1CC7C2EE240F893271EE576454A86A0C216B224E0DE81D6
6ACE411C7FC74D849A687903AF43FEF1EF0E50E84F9E953A90696B33FCDECEBC
47C3061DF4C70CEB5C3F6251F58BB47F87E9016F978C6B2B032599C3B0056C79
7110E8AC8612994FB7B037709082441C1FA1051FD258535F8DF459F987D0EDCC
D617391A2E852ACD221A178B013892BC8EC7549097D2E55E6C7A52C3C7106FE2
658CCCC0E009FEB4B01D2D25F3DD96B454547AA6E39E704842B17E1E8C6CADCA
D5B9383AB433359862DCB30BA53A413B5E9943A3E81D0A668FF731A43F7E85F6
40CFA5E7F8BDC7A6426FD0E9AD38050D7784B535AE6D73BE63663BEB150622BB
625C8A6336457245B77DB5BED5AD690869053422856CD51C4A95D3B69AC42584
F602B69F8B6E3C20910E823B6D1413A13E707E88CBC5B2CBBB2642E6E2925931
19C5C43A3416B7D9498707C04E9115D411FD74AD771B5D4E576397053840C010
9C325E5820D3C9EF826C2CABEAD3E7A3E9479F0C48140B475573873B2FA48758
B7E84E8CC8DFFD0665DDC72FE8375C91FBD9035841767258BC7A7E4557984EBB
5645D175505AFB1AC5CE8B310138933B791D390CC7B93D114349060759E60006
7CDDEEC94550E3520330EC6936141F6BE214776C7AB2623C5837463DF560F4C7
F19A7195E992B3C0533C07A21CC042E626D244C8965DA246D11B291C3F9A9535
3F31235306174AB37612C6F9B64B028722F227C5C2B8FEE51B1FEC64FC984E01
72004C2C2D3E3F4BA139245E95B76F3695B0B012757555F8C422617BE29C1D00
78D5942D9ED60284FA2675FFA8CAC2FD1A29623CB12869FF3B4A25D1A21ECB1A
DB0E501B8F4CAB74A5F64B4A95DEDCB0179FF11234EB70C6552C3719CB2FB7C4
B1311ADB97C07BA24772553EFB6F9040E36AA71D4111CB414AF4C3A1FF1DA06B
DE61861B900FC8BB076A5AAE81B563648DC4BFA739886CC062BF707CE1CC17CF
CA2470A5A78B89E2F0779747F3575B93CBA749A101DB81EAAB53A20199224C5A
58268C49F028A34776A6D67B0DDB01E0AA5F9913D8BE1ED3DF215C7E7C32BB7B
B54CE2DC59D7658A65A9AB1A0323DA3A5F6B05A1F353A17E1A3496D6963C4292
D07DA5C9CEE4EFB147786586BEDE9B4149FF1F2F7F9A4A5F752E9A7CE92289F1
D8DB442575753A6ABA3C8FF08EDC1D254AA9E355048C87857CF229376A70ABC3
D18568C06D4DC79BE0B9754B8F88632FC3A74FA352E86A4C65603D03DFDEF92C
3AAD7F159CC26C9FFCB16451A6860F927EAA1BC80BC534E9DFE3D3E2FB855CAA
2BEDBD1FA0531017D74B47E173553F7727CAB5EA16F02CED6CCB0172E299B1F6
353CA60FB57A0FEF4F937EE7193006C65BD371F2E48C48712ED6CF7509792BD1
83F5434042E39FF48965E7EFE8D1351F24BAEDCE29D0A9F75E563ED2D4F69A23
BCC5743A6DF5F634D5A1793EB144B0D3EA8442C6E5F1B697672D9BC06AABB13F
6BA87C97D3D3F37C940A8F4B3E4DCC91413C3273DAC2A3FD2C4EEA92BAFFABFA
38EAF53F517136457774C464F3D84202CC071361B82E1B0B2F7D7107A377EF76
DF1F1D6A1120C5B45CF7080163A73F6EA328E4B25BA9DC995D596617603B99A1
52C7D1EBCA092E0FEF4E95A5D65BB47DAA57699F112892C3F540F17C22EFB6F5
3EF9D3CDBA49BB546549DE95A4AB15713652EC9A03DCD5ABA8277F43C8D0BB2F
CF2FDD4899640EAB54788F786ED03DB82C53C5CDA311CCA88C2CD5D6A973C98D
881306BAA47AB743F98992021217D666CAD26486FD8A4E1F4023DE14F3F19F7F
41F5815F3A3191BCE2422D7A2ED72A737591449EAF9BDC42C781963830BAFE4D
6CD2356A3D2733F05AC4BA0BCCF6A7BB8F8071D07B6046864713C780780DDBB0
EDD7382241D8087A946368F8147A7C3F74FBCA00E51B824F9FD2C73F1D915C9C
B74B1DB734A10BA4315C3480C9F8C3C012829FA69B8F87FBA0F1F8CCF619FBA1
1F2D350AB5803CB705BCFA9E5004B2FD887CA074CA9830501E4BC8065BAF393F
FAB924635579E7CF52B739B2987EA7F323F1A17FFB4DA0E728C6AD8DFF966E4E
EBA5B3EF7339161683C3F4D34A8751256D9D4B1A16D4D3E769DB2D367E68EF2C
3F555A3B98ED30070CE54B0FF34002C59BC589990656D0ECA75DFC764023564E
8FF9975319EBCF408214A4AA87D2D24B95D35C381AA7D2DDD0E834431719539A
584A375CC8B9C4FDF77D301680CB83FCF81C2EB808ADCE756C19FD44ADB2C427
4B6C0F87894C36EFDFF71385693E6B75BFC0436205231264EAB0C83B642E4172
AD5A4A4D0E8CEDA9F2CB3699402576CBDF6DAAAB3947E293CC426E38653A16E2
A7EDF6D500E9237530D67740E0685E046AE1B99F5177F66C4A4B2D5FA12CD80D
C5ACBE8B292816772463F644C7D257C583A300955BD0F21E2D20E13788E5C6CF
E951C45FC49196DD8C36334AE0DDDC9C1F8AA659C6E06D1D68E9F7ABB5727BD1
D718795D6DCE4ABF60673775EE6B1E48DC653A89EB1F733BAA7944AB0472007D
1FC5978132A8D4E9ECB3F9E564C868CC03FAE8A0C82756B94420EADF6C5BD8BA
61BD6E3A46244F0115F1CFD27B102E3AB251EB9FD654EF710BEB94B9151CCD6F
99AC59DB0719C9737134921969A586967817CCB865978492F2A9FA7A855C906D
2220332E471C3AF69A27FC38AFF90EAF946CADE0F509EAFD6CD02B4116577986
6825EA89C3A02906ABC54E3B4FF2364DDA9FF885D233DE4656E4CCC1AC1A5762
BE48F5FA88A7E05242FC340CB11389C30786897E49A974E9026CE5ABADD4A9ED
3B44B090C731EBB8E4C903AC30059F04637D00CA306671526361ED2C379A528B
A81DFF14211B6E5FBB8AEF1FB0A24A449B1D1D0B47D0C8F0B3F8CFBD1E7BB30D
B76C39EA6587B515F5CAD0858001D0F08DA33F14F4F869376ECB29BB35D08017
FDB67ED9FD13987E816F071501B02AC1925E792B908A541D32880AC41C3C5F84
A0733BD68E1479AD4C6B5471862C52AEA4D824C9B26A3588C2FB1BFE35F67D7A
5B693EFE15A466950C44AE2E7A35DCE0C6B2F44FF369069917F3BB200B8F1EEC
D7E920FD37CB3303A57193A074A75CD8BB734D2D090457DA9BBF6209D2B777C1
3DEFAB9BBFFCB3FE9740C6D9FF884DE5A1337693FE4708FA07991672B29087B8
E5E649DF1B97ABC6BBFFEBF0F70C0EDD2BD69F1C8B71B7D3DB7FE941C954A906
EAD36D53FDEC9C70BF01856A65B9674811002AB51A2839A6AA5109885F46BFF8
F4C77C6C64C75E5040732FE2BA1F6ADB2A95D564B19A3035E27F66FDFBCCDFFC
D23AB28D932EEFF25B5D70F45018920ED592D65866C50E41E94B66B5CE1ED0AD
1ED3B185D5177C121787CDBD8B600FFBCFA5C1900BDB11125CE2C263BE329DF4
8175DB7A2F2DCF94A078C5ECE127ADA570D5CA0B5E449F07FFC01CBAA10C0032
E8E7384836BDE8A66BD2186ECF7E1E27CB13D8DFAD0E258D61B3C4F03884D528
88525A07564A9D3C2275458700FD01CB5E99962B8E89BD26C03999939FFC6CC5
0503BB871565797EC537E26940DD6BAA1D80F1562BA19D44A904C99B2005FA7E
0F02C93D1677441EDA83014D7534582A02C675ECB0DE30DF9702DF0D1F6AB397
2215CAE0BD116522F39D52AE693BF824C385BE62E6ECDE3EE487E2E4CCA729FF
94C41CF76C71335EC81AFDF3F629F7967B89B09EFC1C0822DCDDA6D73E5141FC
64FF28F1CA6D4F1BEA1C64018190825482AB7064A6F44AB8719B95C8C26C9CA2
6BA670D4EE328FF780B60089D4C18F187D265E8494A80BDB1FCB3EC91497AAED
EDF87704921CCFA16F0DCD60F522EE900DAB2F1E7AD545C10EC243BAE06197E7
A600CCB5DE4956F2EA34B881EE328FEB0692AA733A3822D3CB26ED9010D81910
16784B01E538A60CD0507B3A795F0368768AEEFE012E30826BB295C4BCCA4F91
6835F5683F03CF7C7A4F8E07C026F1760854F731043BADC914D489B407CFA86B
14FAD1C8D598B54BF11E15744AD6836652D627B5D77569014B7E3BC175C3A3BB
199137C3DCBAF784D79C2F0B4F85BEB87C84630C8BBB5D7AF413ECF1D03F5749
82E03DAA69C0D3B776E5E469A0E168DFB6AEF318B1F51BA4B4F0EA344E8EBFE1
3BAA70CB43CE4A979D8225ED78423F98C9E7DEAE85DC7A673BB1D8E2B410F5C5
A738B3CCE7E857887CB544E01D0385CCAA4076092B169861541DB185C7CD159D
C7C72517CAE1994A0A790E475C4970EAF13970498F91612605ED32F13637A1C3
D46A8D5FF5962699184FF84ECF6C23AE9B4973051AC7DBD3D1FF26AF2430D069
CDC39527BA94D9A56DFD14E08869A3DD42E22F5851D6BB7E3F7B3A279F329192
5B9A3579ED72125D6388D074182C58A6FE193719A5BFEF3EC9C9E9CE600B868A
5332EC72EEA1B900DCA5B54A71495EBECDFD0353655C34FAD31485F85AE177F1
CA2958718576759631D8A0E1DB0B4282CE3679E2524F1346CBA9E958A86DB67F
479D8DBE682DACBFE0C0E5F2D242B83CCC05D2B4BC05B37305EE248B50CD28D9
6A028BE7C67D1CD148404CE30DE9213CBF2E3D8DF4024EAD5CBF3F5EB4F2B352
F6A9FC7FBC2B3FA9C4AA3EAA4D8EBB26E20BB00D228B4EAC4A163E0DEC677C22
AF294B72EF9BB34E10042752C0B839FF9E58FD69820BBAF867A29A8186E7CF62
3A14EF467C870B1643ADF9142D947AEF115AA3D597D94A23BAB91561D07C937C
ACA804CD809616BE4342A5047C07E76889E53BCE6D4B449EF06590F446448C1D
ADBEF2BCEE271D2BA5DE6879EC9892A63B15B4ADC1953305807B04D4C1CFD28B
64412C8AE579801B110C76FD7357B8B0659B1BCD733195AA0E7B564FB9D11FBB
D82D1B22C0DBAA929919D80E9FEA376E57B6E45D2F375499F8118EAF5C7F6607
DAFAE857ED1A79961C8A15842664D3F1345CD967A08A9C8D7F780870B7575D67
832B87E025992C81E31E226BD2185CB3F9224B1464E2EAA7C8A723BC408CE4A0
39F76724604F7DACEACF1625BDF902DBC4062BE896D00A355A1B495845FCE585
256923F98A70DE5036BD9C54DEDA6D8DFE904F033343ED04ECCDF84588B72834
13A413A9FFE78414FE4F0FE7CF85FFA8B3E42F7CBEC366E60C1841680FB17E57
9DA191A63FAB427A45CE4DB5FB80350DBBB73E86A8C979E696CCC57988D3B725
E16659ECC4344E707975809AF6881F745EC71298D454AD31AB998F5821B9D372
D8E0C96165F1DDAAFE732B4D2F88F3AED9A047586DB7F474A9CFA2EC28FEC134
22167D2F49D7601A570853AEDBAE0C452EB77B9EB60BC8E8DBAC5E4424AAD009
272735D7A1E7162E501AEFFD43AEEE9AC38AAD2250EC180664C84E8D514660A5
434A2AD96A53C0EADF3FAA54343B9C52D6E4EB10CE7B2A266F24E369FE2D7618
C624046BE31324B0F048C2F099F9085FC2395C8F5A89348AEDECB7DD6B6C1E79
369FAE640729ED0A010BBAD2A98865E53AC879E13964049E20BC606DE3024A5D
BD396F2A40302BBFC8AD59B3F6634AB32C24553F137AF0D768D2451D7283CACA
75B3E1991251AF9DDBCEC84F40FBD93EA0E2929121E532C6604C059CBABE2C9A
512F7954BFF00F3196463F528D5160C7E9F656D93EB214E1FA04F01DC61DD5E8
909C07B0E83CB291B89B4852A379E8315592545BC0E53963712A6EAD0F218DAD
2781926594A4119A5A29042F143B3959C09ADE231B76140270F0A05D53FF0AF2
C9E12E45F6931C49EC99D5D48F0EC6A4E93F0E00BF9FF496041F09D34B681E4F
B941B56A2D110EE04B89FBDC7A41D2F69B4CB22412ED01BDAC0BE83554A4BEA1
590B9B392729CD435B3D4CF6C5D452A51046621D36471C8706EAD8E149AD5B28
578E554F7DDB26D77984A9B1751DF5DF1E54C31DD9978CF04C83551CE25FFCAC
C544A277A75348EEE15DFFDA2503C44772003487DAAB5D98E4E2F43D33AC52A6
8BC65D4942B5B5187F55648DEB107334A07A9B319C38D4221576C131962BCC57
28D65B804A92FF8BC53C16D34888A41F8C3108AFD4ED24D99E1E2DAD7E8E6334
08FF890A4296F3E9B0D405E9DEBF3A79B642ABD3D68FDAF7F8756B8466846368
0AA78A41E4BB1A63BE8B596E67963AF1AE578BD3400269549C2DC29BED5898FF
7634856DF64281C9CED09781909AFA9F3F57B1EADE7F5E744708F7EF151FC837
2F53E6DF5B21F050DE623BFA8FD8E07B509D9A202CC760AAA33138167AC6EA8D
FEEDD25CE29D4CF1C45F6C5921F3B67F8C92ED932589114E28A4E7744751CCA6
B1E339DE260B1BBF233238D511140375442481663E67B8D29CF63309F98AB436
039124DBBF37CC9B06F0F43C7B79A779FE30DE86B349EA688152F658569E0F45
3CE6FF552D7BF0BBBB51D104136DF446974C679C100A22131DB04E222FA8EF0F
6A31B9820C7AAF7C785C82D31D9FE8EEE9CC9FB78DBF164F52F31EC79ECF19CA
2564C3DC2A325932A4EABB89DCEDFF4E028F3583AA2F46E4C03D01CF167B0D7B
BBC53023A12C5B3581D8F7A6D1EBE4AD895425E4FB3315BEA6E2A5443A083B4E
C27B4D14BCB334503F9F4AD87247E41367FC2CEC2A5A0098CFCB2898E1E44C25
8D2B274A9CD17D384B8E746F84EBF1C3D020E853171B0D1612A3DFA5264D6B64
371272ABE0444B6DF528FCA00A4CE5BB7C3E53EB9E4F129372532D92F73D16FB
82BCB6BF1A16587FBD71F44A2A99BDBC012231D7AF3FB95A99A9211EFF343824
98160E4B527F80282B565E841B4098228FB6D6B41F8FE51016A41B1FB126EF5B
2BFEDF4CEFCB3FAB423EE2021A2D8761A94CB9D93E5CA158ED057C9BF9160F61
584608EE366E34149AD01BAE3BB56977F0E8D21158CD18F6523CF7B630B6F6EE
8F6219D0882DD96CFAB8653D43BE4C4CCC091B8AC1B1C8A525B1CED15790CF63
7B59BAD929E3E3E5217D2B13C841DDE80B196F6617BAE9F33AC5E0DF808A030C
7C517CB3A8C5321D3CBFE5655D0CD47033F6D2513C321E114432E0BDFABFD692
6CDC1F9071B0C0E0EEB02994B45F2BD0FBFCF937DD3BE4A5B31D1B869CF99D01
F1AC2EDCD561C67D2DDFB5451451F3C27E48B4CDD5F287AB34B16C4AC4DE0635
4A28409B5F47FCCE9C3E73DCED521F6552E9231CC55FAAC46EDA9984444FC750
9374EDE8EF6F7B0BB69266D0FDC747F0F89C2635D595FD9845DE4F52405A6C29
08EBEBE3E29F7C6A759857EEF72F24D5F3E15F7597803B1B466B77EAAE2FDDCE
250F72D21F201B6552E9231CC55FAAC46EDA9984444FC7509374EDE8EB36DB60
87C93FAA703EEC7A2E1E0CC035BE26A1467ADAC6A93A6C0E4A2AE7B930B69005
A3A2C1225FF0F914D43062C786EB15A5F0DEC6366D20DFACC9A51E37B303DA1E
62DA447AB71A060B5199BF7899D41F602E32618326D3AE5EF9C240EB792EB349
A684547B6F5E170EB542B2A65CC080D414F3A6138865BE994C6C74228EBDE5B3
E463589DCDB652FF0580BE54FC52BD298B1DE626DDD2879D8FC843020887F310
3FFDADD38034D8F34EBA92D59B2E512670D9F815F28B5F09AC38F7B3F397CDA1
777ED1220AA9CDA067967A43B3D1F3FC4F591BFE0EA1DA889E8D58ACCDA547DA
19D30B5CA65024D9B041E66338B7707618883EDD882A7A6A06BF41E73310943F
A7825F86C20C0F042FBBB8155EC868D4F208148F4777479522DDCB58D4C98C67
64B00D6917766CABAAEE890025CF75A51F80C6855C94FCC02CC2B21C06BE83AE
A88DAF729886E06AF9A7B959A8DEA82B3FAF3D8CA197EB10B290FF9CBBCE75E4
67680764A4DF585AA8EA461D7B9AF339231BE6F180782F4AC8C68E473CD0F8C7
AE272F8CF645EAA01A6ECFF709DD6ED93D942CF65E691018CFF8D23E90B62EF6
9C367F0DD4D73689183798A4A2605095672AFE34BBC64C04B9B9C1300B4CE6A4
306C5FF41162443F7D54FC8C8D76A53677E7150CB9A33D3DFF3946558639AF03
9F7B41D1DA4F460189CA64DA2D8AC35DD10A878533EAB1866ED9AA11865B538D
351174CA94DA51B8108E56BA83E218563A89AA2D11DEAA3714D0DAD54DC35284
3DB3914FE043312773834D2D1F04E5A80489DBFA423359C766C5AA3D8E7009B6
21DAB35992D9A0152EF4B0116C4BE6C6D5C98D7AF768B0F428AFEB03148A2FCA
BD1B95200CE96AD65A9A041BE6C4F8150C91B30C60AE2F9DCDD95E17E5FDB9A5
5FF38EE51356B2B3C5476FB0F676DF1CCBEFA0376F2EDCB7189D780C435427C9
861CC74393738ACCFEF0BFB148E17AC26F748ECCBD48000277EC997BB084E30A
1D0391179FD995E5020FB2B56B488D0D6DA5A9EB6C07862D3090AC8A81D8019B
F968EE3121032641E063443F5376EC13D4824C8F9AE2E675EF11E395B4185993
C6DF9E1FD89F2F8CEEB870C409ED13E78B4C915C7586DAD3BBAA7BCC1FC72BF1
E02379BE1B8F3D3BA9080AFD898FAF5022413AC49AA92BEEA25BB7C0D502FF1F
047BCE9413D853847B32CD7D5C5097943F10715FA28843B8070D31E6FC60F8C7
961BA96362CA771E3DB9D2678C8DF214F09E29FF55CF49C204324D050BF5D846
C87B624C28FE4D8F7FF429F96D0DCE41EEC1EA29EA44F997DE0A9FC1F5DAE96E
1A7A9C6023DE05228EC140AFBBF9D93BF1DECD1AE4FDF62A5C8A02F9CAB15CA0
78787C8E0CA8E67A3FDA799F40F541FF2DF0E7AD1E993050B9A60C9FF029B665
9B40BF3DD9AD2D9BCE76781B0672E928CCB0BB2665D2F48BFE234A4920B74A9D
C82D267222FE02C75AEF406420D45D3A4A4D9CD0419A4E7CD45E6107F41E96D4
69B396D9EC72DE12F979F22DF68BD1A015AAB011D664736A462CE369A339D5A0
15F0E75B02AB9910D3D25850AECA54E1383C7E87AE2DDB34D1160EB4F97EF46E
169BD4AC3DD2E0199740528CF49D2379412FDB7A47A67143FD74F39DBB07AE26
BBB90DF9E630E0BC8E702C7A777F33D08DDDDD20E0BAD41FAFB87147B4ACF2FE
46A458952AA953832D094E694ACCBFC32D09EF5D4EEC556BE863E1447BAEE060
822D3330ADFD72AE128A6B95E913BCD19F0B0B1AA217D73D62F6D70122650D65
13EB0DFA57954FBBC2D25113EAFCD1DBD9A52701251C8B2C13F8D4D081AA1263
5B16EFCC148C7AE63EE63D34A62DB6A10D9F5C03B3C93789F835959ADBE46D2D
8678F44EC0CF256BB19FEE02D4F5061564B89DFE45A7A0D605C9D5759E33D073
B5403351832C5FBE4281165CEDD5930CE76B1D99EA75CCB6F0ABBB6E729C0584
40D93F853EF828D45215CBFE4182338EDED32C46FF9EE2212F4EED4E74547CDE
2E7088AB085129518A7306A92F2BBF8556182DE9A34A84EC598ACDDD33600B20
7F9C5DA3D13E6C3BB32D79077E73E1127EB9FEE92764F5BB09F8ADBA78395BAE
59DCB4F0EE7D02F515ED19EF413F0B59DFE1FF8560E6A51A6C350EA5B2A8CFD5
F20BD90ED2EBA758643660F49E0B041862E22FACDA50FE8C31B773665439897F
ED67FEE4D905A1BF4AA6D15740570E195E9897E3DFD9E1D0135AE0AA516B707E
54070A5F002772946C5DA78F3B27208C61C039ACEE41AD25BA1E970FE64700FD
A7EF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890A7D49B0A6C7268E399C6C68B6ACC0D1E9F5B2
931BAF9EEEA6ED985835323E85D72C6A607A99212BA2DDD24D57809EDE36890C
F8121121306593CBADA65AD9EDED7740C9A2F402E3908B54CB4AED249AE575AF
E64C76BA802490ABB489275E5A3F2B926955B0D961A0B9B3AE205C074AA695C8
68FC2F6997531FC328B8FC65BB06C17B212C8C06D5127A14D7989D24912D1CA2
1FF37457E65829B6E1C65A09C1A101047DF20ABCD57E067A7298091C88C4B587
84409C67D00F7D95FFA0D125FB938B5762D912E1C0E116AA0593B1231FDF3BB1
498BA3D20DF13C7EC6D40091B789C9FB7CC872BB73E6B9D4ED8A555CA31581CA
0F057B10C7A8CE1D7CDD4FE2D5332FC533158B8CE6CD3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4ABCC72B6CF075717DF5200D680CFF152D215865DE535A6
1CA8E063640C195BD08DBB8AC7B4A3EAE77A96BC881F674B33575A0CE6AC3EBC
22862808E84C47AF37E871AB5A85B043190EE840144F9F85E8C54196C594349F
1E95F04AC99AB789ACD0FE5A2F6587BA6A0786B3E4FE1AB8D3A3BFDDEE2C5A08
EBFA713F917FAB61A4908CFDCAA68441D85A6DF5E034486589BA82E6B61BB21C
8220A1B04358CB908B8334BD4FE84255E25619ECCD6543192835643F0F4C37E4
BB21BC9EA91B74EC159D4156C7C377DCA0C47712680B0BEC6B64CA31639834A0
34A4A0583DB12C2F9B5DFF024365C4C6000EC7F2AFC3834D6D07E20F6DA0C49D
5ACFCE13DBBF04643E01C1B9B1E34416B0B5A95CEC868DD2727D2CDDC3474D3B
EE0DFDB90C2CDB817AF6032BAEEEEB3026CD822D093EC145AF26526F89928EEE
A5970DAF096C35BC59465CF76712AF5811328DEA4A388A039ED761D714386F9F
470880F84AEF19DE22BAF340B62D5A6EDB21FF1DFAEF2F16F83CC74B69C47673
3B58596F30F7C1669BDF9FF2E14971C2B08EBEF52EA5EC767FD901D3814A5098
ED2DB35F888E140D74B4CAA6E87EC8E3F3C7594D973E766B292FD2E4AF95FEAF
2C9F5D34625383841116A0C370DEE1F0B0BB4AD0215BD3F2107775FCA1187AA9
B9C7704A20F6418C2338A5526973B5EFD9DC77BC41E2FA96898DEEBC4B7D10B4
BFDA2ED28151EA93F4EBEDF57C355350FE886260683DBBA89856A104C1325A07
FC4493384AA080AEC4384176014D47E85AFD51D6F22540ED27380BA45E04C8D4
0D468CD2524635EDBFA327496CFF2D514DFCB0E846F0D416A2B2344D8CC2F5C5
861ADE1C8A108F3D93F2B6373478C67C68F61E7B0BC0A8F9E6B292A538462AB4
9C25BFDD095CC7F8811DE6CC317BAA08E2C478E29389E7DC23CCD4B1A3827C29
8B79D2320003DF5EA6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD39C
FCD0E8A6224BFA03E8C6D73F4B8F480327701262285C527828E5E203F328AD95
5AB433987B229534C53061C3350047FB20E3887F514B5897FDF225685D18D679
99974BE93A89999F153727432CFA9D0FEB17D073C904F5426F7148BB8FA709AF
1344271173529372ACDD21882003FDC5DA687CFA43C0D1856C461F97C7AEDE13
08C661A0312C0A930453867D1BDA0D5AE27DE83943B84072FB99578B80935885
6E4E99B28E138E2DB585CAA3CC5056C324BAA2C7919C7E116629E963F00FB88D
12C7B187FC10B4C71E24BCFED96E689908E9D864BE3DDF19BB3922F86224D004
E35AB8A8F503F391632AB92FE41DB9E794630D674AC5510E1A233D02A00DAF51
B816178B4A639FCABFF4EC3BCC994CE1FD48E705F80B009ACC13C7DF2EDF2C3F
52D34947E0964D0E8E89F6043C0D2C9A4ADF9422879682A8D0D249CDBAB31345
F45FCE242025991536E174784D21CA938B31D8127B9B6462C898A3A3E77B061E
721B992A9FC9C9E460A62C80FC2A395F302DF32395A029F7CFAEC61194397D4F
36743FDA257F5BC8DC009E94281EE90448387DC65F1B6E5D964834D39F64F6D8
69729A22714A5F0E7DB43CE31215A0DEACBB95D7D86174295CB49AC66E224B32
478EEF14B427BAEE583F82C3B8E6D1DCB67230EFF3F206ECA7D35A79B6D617CD
92A1702B10B0E40E16407433FC9A216DC7AFCE1C5C7B2113AFDD907A17868AAC
F3226F7700A65F3469CF89213BDFFC5F1C26E1774F200A5CB8D7EDBF8D085F08
A490121616E6A89F524CF7E9EC16ABA1805BFFEB4DE8100A966F457050E356F2
216D58A02D0343E76D0552827DA03147024D605E2D021855769031EA15C1CAF1
A47E569A48CB4193904CD450286613C9A925DD73C4C95C7973EEBF1E197FD5A4
3EF0BB732AC06C381F7B842AFC59DFEB9F2CD9452CF89BA16E5EC1E16F206873
F9817505C2E449112DC5C3C2C8FD7D537F9884A1B726C7481CB54DFEC01D96FB
D7D076357FD85F26EEF6C10AAC0E89A61DD3FADFBC43552E075CF52E6F149345
C500DADAC14A4271358133833A505F8549AFE87D9E1FB63B8D9682C2144D7877
6B1A1D36B43A7DFCF5FB138400165597F7E064724F0DB92AD6442393E4D67B47
58249035E05E21EFA8AF51BF06EA53C4CA7EA1C1D0DF8B24B993243BD5A6ECBB
A19755C85371FC39C88EC838D41D58EEEA33957679755C4CBD2D05F9A170FC26
9B792E8CF7A042EB1E1A331B3E883E490A8B71BAD600D899D91052FD830EEED0
090BD9A658969B3BA995F1D6868BFE9F953BF0CEB4FF3FD6C2207B1A429577D5
D9D66A0F8268D4AAEB2CFAE48987D716DCFB6FAFBEAA28B0A27F096F99C841C6
747DBA39D6C253F4D15F2192995E2C892AFEE4902E5D6EAB1B3DCDAEFF62D7DC
DD227BEBD759D4299F4FCE2F3E17C2BD09A1C184648EA8B562236B8C4F251290
1206108315E38FFF635A3F57C728E8D8020D71C170393719B822DFD34841FCB3
F5AB7E1798B23757A3613D6B59D4F815AF894B558561839D7F33962AA01C1302
C92270CA3FECEA0420BDED07210EA1A1619F298E71FA5F5C80A7748DC0BA6830
0231A952157A8C0FED42257A27F85262AEFAD538B644942B6B97E778000DE2F2
AC2B22886AAAE6D513DD08D5F199F9EE15A3A8CC593E472B57D5954EFAE64D32
EC3EB4B6A2A82F34478E7C279D48E8721C355D6AFED8EB3CDE280D8103C72CB4
F3111D1B86936CF0CA706C82DF89CFD601A78DD8A0DDC4B5C9E4EDB36BCBD3FD
A14B561E74EE19E602DF0FAE4434AA09AB58599660F5A885B6DB655F64D923DA
D6AA17D0C48995C2462BC9B1F16C81D45AF2452DF95656D645C92FFDC3179382
B4D6066CEC3C313244CA986CCB616C7E26129B8D019DF527D4E82FADAC6C3829
2458961C7716671EA293901CD3C293274ED2C5CAD0C162EBF98632D63BC149DE
88E514CAB8EABF2D703BE382BFAAF85172E6561998FB60A2CF8E5755258959D9
3624FFE199D39A3DA75EB091FC2EAB5DFE53A769F6124346CD799C0BC10A4169
4740F625A286CD730AABE43C93C10EC159073C4911728B598303C8B29B14DE42
8AE8162B8FB4D092B79F1CE8988FD0C4DA89DE1602AA708AC0C701F9EB1FBBFE
0D48E4A2F7E92558E579A94464822C8973EB8766D839FDFE58085B97DF00EEC7
8D91412E4EB6B7D7B2A078E26A1657650D50CB35C74BD92665572235B8CEACFD
7733CEDCAA991212FC3C15A44766F9637AC3E4977E95A4B4BF0A8078677867DA
3E958A87B109278BCECF4B659DBABB4AC20EB75E7EF41A490713257CE4B002E8
B036374D5C37D66FD69C26DD0B3967BA697D90CF0F8A4B01F9F1848E690261A5
E37FDACD2740F658D020DB057B1AC3ED1E8A75DCFC69B0F51A464FF102F903C7
0BB29D852EFCF3751A5D80A8849721E4E76B9B2548AA66104BF95D06AA66A717
B9867BFA591D2FCEDC1A3155B980EEAB9CABFA84870534F910816F6A2083BF93
96C0A4B4C18A9A7997E2E16AF16799EE4CD9FF64C0A8959C2D5CF28444FF7870
AE8CA98A36AD9065888B2B7C1F4E93E0147DBF07D04413B317E6F789048BC037
3F3DFEC0732A013ED4C05A63658B21DA28065552A4F0977045201E64134B6F08
67982B8E51F67A14B5B2C6F84E9503B6429B70C9A491AF478461D1319CF4B7FF
AA33E67189A63DFEBB88CCF0CA8C2DA31500445B3ECF6C6035F883EFC0DF2AA7
5EA01B6A774F36277267A2D8C37934DCAB3006734A2567CE069889DCE822D58B
48EFD185C651E24ACD1D0A7FFE244BE9F98E6E75000536FE414BAACAD3C3B795
85B0D080AFB058F46A9E1B1A2B01CFE59DC489CF112C663A58E0DCA3D23431DE
441E0D14ADD66C3B5C2E9F7BE3D10E5FA0B419C44D8310F79B48D59CDD5C44A6
72F9820A6764590E0E74CA44D80BD99657E6B1112329A103DA1F842A91D4DCA9
75DC5053D8E9AFB6600B7E2D72C3661E566D6D8D9D14BEE9262BECF1F824F718
B21D74FA8A73F207257C688490F6CEB331FA03DA5E7C9B6F7D4D9156610A28BD
D1387351F132628786B0770966896C90BB3CE4EE546C0086C730D91093F42EB0
554BE826A2F95A986C69DF6F9F67952116166482CAE5E08BB53FC5E72D3EBC84
18593D8013072D6BCF9777D2D3E87F6F5E3C48CBE8B8D468C50DF812D8CF9F07
F4648192A7EF6EFE726C5087B577319C3433A852EB0B3E5A1B0528FA9F8BCF9E
B05ED254FC01407126D3973FE22CD3AC4F6FBB0AD7B96F6B1B5710C6FB48E552
AFB2C2BC452857FBFD39547954EEA2ECE6E43AD2C51A70E6342A85169FDEF806
0D7DA45EC4659CC291CD5DF9CCDE6DA0FD3C77D56D063AD44AD4E1FDDE97D4CB
AD7F8FE89B4ACE18BCCCD4EF93EFBF50BDFF82CC4E4AE64C608EEE0A2FA4E6E7
4BE7E3358B140D2F362FC1C2780E963028ED2ECA0B7A027A91E51F289506B027
A1E5D547A55BE0E8FD19AA6BD9207104404CEBD00E06A7EF3CAD09AD5ADE958F
AF5BCBA6A0B8F97F8DCA815460361594AFDAE86BCDB745ABA11C62B196A42605
71E39BBAB45A9653B2BB937C5EE37908C4BF897666EED9888A92A58C0F11B0C7
EB28F470193CA13D0735987D4AE2153E761A458E5D7FD6AF386280FB1E7C70B9
E987F29905ECD40D7AB9C0EEB4C75EB7B3A707A6D447DAEFB6250ABAC16F5D4F
EF586267439F149549A6615B4315E82C359BF2E9D3B8648AA4F3378FF330328C
AA3B0E487196843C73BB4ACE24F94C1BE830FB6349CFCF86DA7C61388B92A6E8
9EFEDC20BB3166DF3C5389F960C2262A263D11F3C1C74B781A8C787CD363A398
058AD4ED21814D5132E07D90B694F64BE99AD5D15052BE4101EFA8E39744C231
5DFD376E150AB8206D97E4C59DD6682ABF66B4DC1611DBECD7C24F798B2719D9
BAF6807337B8BBE3F3002874511F65EED4C88684059A8E655208D31F95A44F88
08F069DB0331AB2303FC215B5B353C8B1D386CED0321AA1103F4CC2A599A513A
5A5F8F39BBA8D08AEB6465A1FB12589FED096E92B775B1065B7905FB03E72387
826A14D181B9BDC1631005135EF22BFCDD25E2C8CEFD0151FF96E6CA53257EA2
A8F2405A282E1B51C53B4E90AE8CE2FD511FFACCCAF6A701DAC4FE7D780A7584
C71AFECE41946AE57589E52A9DAB9B4C1330ADBB412452A1F976B7A481011C7F
D0CFD23B1E1537ED3A309F302BDBA57DA671A26A6A2ABE9D3BB94C816955D657
D745A8C617E1FE0CDC22314E9F28CF3726514860C256878800CB1EECA4A9775F
8C77E6CB71AD1D4058AF8C715EACA0D28D6A0F247C07FC508D83491CE04DFA2B
A7B80F25113B884DA2D1596E14FCC7FE2B528806F4D7C8814D9930B9E0544CA6
AB5B87D0824E4A4E81527F685ED9C453FBCA9132C26716B73584C049A786679C
FB5FA26D27BA9173B2B324C4A9667F5692B30D09EFB60C1EFC4476A5067970D2
2734B027285AFF2C77E0E26F3A5125692AD67487DC8A611FEB52A12D9D030405
FC314ABF7333BC45355460BE4E0C5D87B5B3B91F8CD458C787BA1620C679F654
F27464C3E04E4B15FA6FE9D0EF916A1AF88F7D33CFD614E6D82DF617F77EAB04
8E71B51B3BA4303493B5567FFD39CA40BE4EBE0174BA827E7DBA957EFA0CC1EE
66EF483DBA433035AB967248C166797ABD092C092D284D287BF3AC834D9B7784
9C378DB01F63F4F1A1BA5D021B2F4DA417B2CC983EED1EA00FE4561A01DDBCEF
CDAF0910E0F50AFA773ED0C8C9EC51AAF37FC48D5838761F14FC5AD5D1BBC93A
8D6377B4AA9872A10C06E6873997A3490913A2E95A51112D2330DCA1520CBAA3
043BD6D5775CC79CB5EB8434F17B15274840BEB842587F3B9AED05B97C275ADC
90B9FFF47FCC219A2556169FE98FF9B3CFDF391714E1A5D4B3326832B50B45C5
0D8F3B912D34199D93217B15DD0AF81C83B9097C0EEA28DF3E233F9E875335D7
48157D77C71A385C3A77DE10828C2AAA8D65134C483857E583461ED91A90CA5B
743636AED81E5142CC0A7ABBAF42B2DA264DF7A88FC29DC6E8BF9A9AA6112330
4419ED405ADA3E1BF030E67C7B8BCD803B4C9ED2CA50CAA8C172CCEFB6270BE0
52F658087D5C67D702AEBF0B8FDF017251506608A2FE4693A2B9B3D435499D35
A59EB972DAEF0D0D40D6063A7272A9D341BEC0C11FCE9480BF7BAFF945F0281B
5A24CC391AE3E1616B5B5E4B670FA189A10776A74A77D10C6C1DFC91DE62C1AE
05CF60692C84E3769999035BFF29D6477B2C3EF7CAB079820BDC7C06D91ADEFC
852D2E598734CDCCCFD8C05DDC3040E38DFF9456D4CAA8B36A21B11AE0AFA9BB
07757F02EF6276EDA898EE106D34CD0D4E15BC0A018DED92CC65DA00725C23BE
6775EF2CBED9F5051110AB2E76BD8CC4C5663815B4FDE7BF52ABEE0CA1C4BB8E
9B89B65A3E416FDA65CC2DC72CE09AA133598A0A66EC02085C18FFF27707F327
7B501F4D84943CC2883C98DA8B112A75AB907C4F917CD9DF29B22F885988C306
058ED73421F9D738DBD7BADA31A79C6D5AE5DF43B5A93B8C7DA6D16F64C3CF84
D14FE61779BE5DCE90183592A2C6E2FFB3AFF49BBE499A694B37BCAD21A297C6
9FE7FC09DE4E7768D68B27DA24471A375AC09CE5AEF44A9C3F70237BEAC8805B
0F5881FC4455537C76964BCDA7C5ED1C52DC4F978BE757E7FC82CA995D5060C9
B13CA0FE121D17B57524F6D8E00EC28D69DCAD080F5B1CCDBA678620BBBDE41C
F0C04899E716980AD8B3D46DE19C8FA3CE2C27F58B068E8F6CBB6CD2F2D3B7AD
10801C278365895F851B59E74D61BB2CAA803DAD50DAD599B10948800458912B
40D49897857603B28471B69EED368C093661D2800CFDA7E1FC39DB9D4DE96F37
F184798F01F0022F452D00E6C3F408A9D75D43E12F62F7BC8501B9B68F8E8367
991AAA1C8BE4873E0065A9F726733B0736BC25D02CE66AB3D5ED1F9AA2644EC0
87D61BD7F509234968915C6A9FAB3C7047839B2705AB65BC5AFD9F3DE5666DD1
3387024C1156345D551C1BDE7D5E9A26CC8D7CCE79CA02A223ACAAC9FB5A36FE
45E57BD5CE0C7A57713AF055C0A0F972EE67A51C3C43202CF30FD1073D72AA9C
30219811618138AE8DB98DDD8A8691F3FE1D7B96C516DA7DFE48BF6D5CC92C4C
5441E3A478F0933EB129EAE44484E084BDDE7ED081383B908D8923413B4763CB
439B326A162FA0CE6933F7D7A6974371748BD7282EF65DF0659993DF1C0DE114
71B8E45E3E72C373CBD756881C1853879EB79905E02D38E03923EDA8E2FBACB8
D3C58CCD07BFCAE08D82288E670DFC26A600CB272F79AE07698A0018620539FA
F6A00AC966CCA91A1736D45950AE1DF665EECE2BA7DA0EE6244925810A365A9D
8E21D9FD21944D8BD1E10A52F14D5D51C97073905D5F48F6F789FF4E73AD9F90
1D26B303DAF8F92AFC1924FF85BF0BD5547FBF0ACD890470A9A5FD26C0A9D46B
AF26F0F97242A8E2A4EF3E11F3B4E1C480273187F24F9D209D78E0A2FD3FA71C
28EDFC157CCBAD36E058D3409002CAE1C904AAEEE79B09568D1210FBF12C896B
DE5C6BFFBADA8DC1335904DA22349A847ADE3C060AEC69C2987EB2AAFD03D284
15BE077393D77C96B6024A57B5AE20CA4AB5B8A57F831F6379060E3650CDB2C8
7FA552F5999A1B544832554E529BFFDCE98C901A79E3E0354517C3D95E4BF7B2
320F6AD8E6CFB0D2666679C13A65E1D6872B1FD846EA0224D826BB690432609A
67E306F6F7C2CD4CDEE443CDFEEF80ACA698BB223B6648346DAB2D48777BA48D
2EB436C58A28CD0FCA766ECE69CC4A60829A626196EA35121D5A26A64FE34862
2C6CDA9FAC1A26DBF07A9551840D0E8287EA387090CEA410275AEEC243C01B50
D0ACECF6B8496E8CE5C80B53370085F3E7A28CD7E943953EA7E904A6F0E431B8
A50063EF09EF9607CA7FF0EC2A2A2BBA7622E2E44E7C653774029E709393A4F8
DDC880F65BEABEDA778F7B38E900A0C764E942530CC560BDD999845C1B3331DF
A06E332B681A450A2957916CC7BB0E381B5A4188D50BC8527BB8FD0C18F1B7B4
C6F79EB00044726B5610954A6E5471F8D8344C07DB8E45BE34098716261A9B18
047663F09E30886042C59F9FF2662369BA317C42F6F4FCD97CF3756F137A2377
53DECF6B9C1822F1F848BEF99438A2EF8990A519D704A287889135BA6BCAF136
D6DF2322FBF59875757C3637C45159BF0E1C327EF7A2F0BBC8221F5B71F51DA9
B563DF30F06E69DE570608652116A3472CE2059E675557E53A7F82EE00522405
B6F3E31C24376E079EF3DFD42216DF919897ADE3CB03FB158884B759AC9A551D
E5D4DB804554D23C10F87A2608E40DEF001C0EF439972F57369290DD3D9879EA
5B1CBD45E5D0C0F7D8416730AF4BE4FC931E965594E034ECA4588AB326AF9512
F818BA924F894BFAECFA026BF656C26951E3D2772F46B84E908CAECA64B09A6B
156DACB9A7F005953EB28BEF26A9BE5C6B9AA0D1E9EE8B39A7BAF33E6CCEB018
8A1309F39157CEE8D09BA136B97662D43F0202E77B33EC7CF4718DD267EEFF4C
0000F2F315C82CDF4B0D7C712C1367086F0E83C9A242C22593968E934A261E3C
176C1A1502B45433C0BAAF6FBF423892110EA33BCE67DCCD4E73F9288693726B
B1E0D39DC3EE53541307232339F3FCD771914933CABF613F0F9FA3E203886E97
3336F2CE1184E77B7909FA1E1DCF959B8111562361C3528793C574A33D7CCDB6
F875BBA9E474804EB20F00B8F37DE282B5B6062984CA5731AC4034A3B9A917AB
C7B178FE624B1AED5AA201D467D1E213B2A0E953A6FA013FC0B1AF189101F024
98290F371FA6B0A5A39B0A37B7DB0AAD09C439797D92E1120186B88DC96CED6B
15134236588A4234FC70CC583D630C563D9C33FCE5BF772F06734A510548DE17
88FF9C89DFBB823DF700E40C2F481FDFED677569C646EA23E316AEE1EC29BA8D
4A7B94EBAC2B83EF282429D430CE35AA150D692C3EA405779B1549D95546DB11
FA32359BBBA7F8046B52CB4BE2C7A2BC5FB75E9F85F6D97E297FF1FC3CDCF9A3
CC69C76B1E140EE3594598F9D3C98F98210C5DF95DA0CED5D7215BDA0FA14C72
D396FCDF472EA459E0D38F1B3CFA112EAF60A27A9B1BA4146388D1505662661E
4B7DAABAB61AD0E8829EB605E0167D24052ADA3213CA5EBCA0F8DB437DE6DA16
E97039C5B076F16A3A6411A3D4BF6AB784505A0CEB71B2803A6BF70C74D8EF47
83865CE3532C2BFC659D8CD4C19085122B8D39BD7F62CFF8703071D204F98E61
2E8C4A133F7EE497B6EACE17516DCADD90525F5047E7E4CE6E3396AB329CFA81
A3FD438C5C31BCF78C0D660A34CA85BA749C7CB1687ADFFB0B83A7838452A6F1
86D726C8E0AEF59CA261835523E983C166979C9357FA3C68ECF3AEE83693A8A2
CBCAF17570ED25CEE324888E63E8EEE78D7D547A1C57AACB90A8FD5C40FB2284
2FE6426C8D2E541C1A3AFF4C57B0BA196BDF885DB63DEB07C113F8F13EEBD103
E038CAC430E4350E4C3DC89D789254052B762CACDEE383614D564D3EB1A4DD9D
4C46B9DBC88F67B115079B64B9C7888D2D783D99140C43040D8CDCBA40C68A32
2971F6A0B8C2FA887BFD5F3B2C23FCEA73428DC4965F27BF8327C9FE55B586D0
57A5B67F97297F547027B21A7B06BBD319026C514AE2BFD687F8117DA3014EA9
682559E4C206881B58EA640A934223A46C1810E91B6CF0AD620CAA7868BD5481
6F6121D102A8E3C0069825FE2AB22E277B1AF591127CA8A28EB491FD8491738F
4BAB066F94EE078C9CD251103E5FB8E75BF46534F71129E27882B0D6E75FAF1F
0EA49BF15B2B3893392704696B07B39F8C8409CD1231C1AA22459EAB183A52F3
37595E89C0361768A3432BA668F5301555CB7F97E4D8A9EE70C74E8867621403
14F3F2106069D58578B215A961102FA06DB14CA1F713A8EA6A54D4D4D8A18B49
B704871DD8B3B3AD271CB5CA98A92163FD90AF07DE1610FF965D366EAE85CBA7
D0FCFEE888CC7FFDEFCBD573725712789A543FFA059F2DBA1E5502CE2E76C38C
A97A8F71080554FC85D08E90341B411382A5986E1F3DDF5AEA237149C29BA8A3
4F1E77B2FC8CF73D877D1A660D5056FFD41CF436013901C9671F77F34A63F361
C5579EC5E00C5822E281AE9888122A244A44A8E65BACA3DDD206F4785F5587FE
3568F5F91EE275365769916EF1BF70C062A454EBC9A9B7B8DD2F0B8D82752DF1
9FF85F3ABBCA8FA901C346CF304A825C3D1783A46FE5C046E30F75E8935FD141
A081D5EE21179FDFFF655E4CFDAB7EBDF1D97E15152561559A53BFC7CC1CBDAE
2D8231BB7CD198E97C759211AE85AC11BD27F60027459721E0E7D5BEC1C0E35C
490F815CEA9C52EC8E98D78E01B81DE3A78F6FF1BF957A58A03B9CA089F7320D
1B9BA214E43E83C1FCBECD5736FE9457C85DE0838FB8478B1B94A3F1AF5D53AC
484C5646EE862B74C090DB4AD61A73BC0C1D2A286E8FA222D6B771BDCCC82C60
376236C2126192A7326616CD44DBF91DE97CAAB72BFB900699E6CA7B672D208B
1FD63B002F27A1DC3D574FB8F5C503C55B5C9E34E3DABE9FEF9D9DC0729CE593
91338C51207B01ED36B53F1E1FA003F01801C5274748358A86D49F4C14AC5096
BC97BBF995895E8A5646BDF7C38D8480A71A9FCF98F4F9501DCF69FCD92C04A9
DB9B12A5D759909821BB1FAA64201B5D9092302D4EA71367A3547C70F2D1BEF5
D7E42578DC39AB7CAA7A9314DA56A83FC9AF59940CAB5680A26E061D2F60945E
62A9C2C4430DCFB2CD64CDB2EFE57CCBA8C540B2E2319C67F0FE0ED9B64F9EED
0F48C9CE0F760604F8356FA4BBBAF6B3769B667D2EE5A3923CFC69FBCDEA39CB
07BDD7665F0BB9EFD60F9D0ACCDE739B576500ADBDD6E189F8F216B54BBCB082
2D88E46C9909074C8B69A24AF528E52DC90F8BAA20A49AD863023AE1DDD067F1
52B48513426E208F20774549A2D4DAF2AB5AC55D031A2A37B4F87CA6CE358A3A
3368746A027350A9FBF947BB7C46F790871EC7980216CF5F7DAA44BA982BBB0C
D6FEFCF89ECECE550FD0FDFA747EE9A89161F93F178D7A24AB2C7526F2A17E52
3650013B864E819CE819F2D472E963C4FEE7FA859EAADAA9F0B3363576CD1D4D
AB0F4FD5F090682D0D41C9D59948E7D6E5669C0EC13FA59846364CD8ECFABFE8
897742B373024638CF93B2DD6E1BADEC43FBE22A57808068DD12D1C1064A7EDC
B584FD784D9CDFFF8EFFF295A8F536C6DD08CA7DE3558080F1363A04FABAF51B
9AE1570BA2AB068CCE168552299361D62A2BC2C0D8EE4C86655EC6E370B94F19
A54C3ADAF77BFC22A20734771F1B1646488C2FC5C5C44DB357C7DE9B455DCB92
A997FDEFB61253C837805D7BAC8046DFC3F1C85E335DF9038517DCD523FE710F
F61D766E9B334BDD7EA54C5BDCF6C48496338CC250F9AAE45862D763AEB0594F
BD382CB1A2473726E1F3D6DA978D71BB0A50519CEC6E1EC233F722320B45EAA8
E7D305ACCE79E0A80729DA7693BF3A84A9282DD75BBCA2375339927906533FC0
39FEB875DD496774975F2499F50FA04347CAB53A5AAA7A2C22B6732E83AF6C98
3D4950AE2043610480AD2469815377244CEEFB7337DACD25AAAD8279BBC4FCD3
B5DB37880CE771C7D12FBE443764E6A62177C66ACAAA20500A09579E660EC059
792ADA821140C4AF794D8BDD162A9957B73C117285B298D4B56B91A01E225A77
3224878068A9224DBC85A794453D99349FC4F65130127A3BE678478083367214
C432BD31F29F0681E5783F91AF0CC0EA7062B322BD629CD3FAE75852C3BC7CBD
BB5EF23FC98FFDBECC7BF820DAE0874E94EA4F222F7D3D1B877624D02C9500FC
54EC6552243B879E39CED2CC28ECFAFBB7188C0766F4F630162DF3F9D6BDE77D
D5870ADEC8900D6346957B84CFA86E5E76DD0CDADEFC54FDED78A9446ADACB1F
10AE182932A51467138A612BAFE4093B34FEDEFFB814E1A0E66B419A9AFD6452
65013E717B3EA1B56DCCA040C9F83F73D42D3C71B5E645C82E92F057EB5F859B
EE23DAA959C11A73164EC0CAF0220DBD01CBF5D8D8F19B865E66B74E0937485E
F58E37EEF30EAB487B6E7AB230EBC988C4B54BBF0EF187845C9D8FA07562B023
47CA3DE34E6216F34B4E8DBB6F049C331EA174787ABA8C3EBCA6A4A7ADCFC6C4
5631BF269CC8B89441B674EC0697CB2FFCE88FD5E25D34781B178A186480F353
2DD7FE7613B1A5B4D3DB4309F4FEF9ED2417593C51061309D2F9A4742DCB0B34
A44671A6A97BD8C6807C21360D0C3F7742F47CBC2AECFB7996DB1B6A97E165EA
DC6CE23BD6CB9700745AF46DCC2025F12147C5C8D5E39937B03356D453D819AB
0C77507FF3CC2582AA9FAFAB0ED3CE81D63F54FC400D50DAB43B7ABB3F13781C
6F65C00591A0DC2601FC4F93A4FC12C416D00ACCB2883C2384CE146E963EE5EB
69F69E350C2A4E7C290926DB52258A8EEDC66700FB549A92848A64806FEC35AA
A4100ECC05416ECE2F061CFDBC3211D7EB07998778B4E07497DA3811243A8611
5E451D3EDC675637BE323E2DD2566059ECBFE65551927772803D9080C1E5DC0A
FB32A9BCBECCFA292AE5BA0FB51396405FB61AE0179DD51D77FFBFAD2BBF8868
D71E522619EAB84795A2855C607DCBC8D9B8184287C8D73D490133B7339BE95D
9A4E479C21D6A7DA9D6B0B4FF494C2668BB221ACCE28B2A6342E7FD23E1BFE14
87D82689119BB8567385C7ED843368A40C23317C6AD3EDF0ACBDE1C823F1E9FC
BF5B846CC8D970ED51C10F44C8415FAFC12C5777A6B87A1088D410AEA9CAC3C1
C46158F508D7AB7F99ADD7704D9098D9EC60165DE651EC614F6696E844A143C6
310868396D9F990892C2D7E95B159A68B1967CA98D2A8BA31181544F49D54A45
AE6D370441DE9711BA3E3907187E23A37FD2134D35241F5A4254DC11A417D465
D568006CD10B225FA38BB516F3DCF11B96F0A32E97E31CF40C6CEF076BBCB72B
CA6D80E9B8E781FA5DA60DE4E92853EBCDD370A91F29A4CA724B9809042BE9B2
EDEA366C4BA6C68F883B0F301B2962F17EB8EFB11F3E314557860D200AB3AE2E
0B1F5CABE244D8F1F6D29DB3997620BB2B740AE049A86DA160390743698C6DB4
95B96D2AB7F853FDE8C8F1CEE20C43F067B52E270DD0DFBDDC1DA61DEBE78F2C
EE88F7A612351F3EFAD2EA53AB06C46134B09ED2A8409352766D80E77B127001
9E0EF57F31E9F13B9483E07E4DF116E24E0B2C3DACF2BB4D4F11C5FE4243E1EC
A5EFF044237CAB3726CD9E420F208782A53B7D8881FC8FEB59338335AADBC930
1FBD0E96D0E434163479FB8DE6828392F3978EFB0530AA2239903E4B3F8196C3
AF9D92E0A8869527AB5FF346430D6058274E8876AD1DEC1BB7B1511530748BD0
C84A82670866C0BE24D2A04F1B4178CB57AF8627FAD7CF058B83D56F6F32C766
33C0B6FDBA05535AF1295F851C0521EA898E6E9AE4BD9DDDD2F55A610CCD4545
ED6F8E5D494D3398D0982D3DF6327D21CE96AFDEFB3B209CC382A85014CDFF35
CDC4D262274B38C1833D928F706EDBE3D02242875F977FFCC1747AEF5F2614E5
B1F01ADD0B572767BDD10A3E2A78507909156F7675A5280D3A92ACE3AA3E3C9E
F2EDB99A3E62F6ED8920C04B03D5A1869D195C433147071FB3E1F98C64937543
BF34EED4EBEC331292301EEBAD2FB8AB3F1D99AB309889D8066CAA92EFB9B443
746BFE45BC252B6097E5423BF4D12FF184319A02FA673DA3FF0FB1EE89142440
12EE7051C04D02A0B9A85A239E751405D513AA44174D9C1E801ACE1A50913B43
A9CB30908992C83858DBF175992DD103B6F14C8353B1A09DFE7F2FF96B4282BB
57E417DD99285A0DCECCC4089EA5452A7E6D14D9B7D76F0E89A63DFEBB88C965
23566A104408EAC417BDB461014FA86C383A1C9ACB0354180F30D4CF9CB9086D
116D5695C71190EDF7B8F51A228A15FAFEABF5D1C740641790C2817BA64C0F7A
C8DF8E36CB893FCBB5A5C980746F78795E16BC2A13A064A7A6BA506E07465A25
70D6EDF1B6C249DCB20229EED306851381E7F8AC15A3DF8D34B6F50FFFAA43E9
8DEF36194F52484E6140F1E3FEE3CDA1F46A149B8C7486D695FE3A85A92EAF26
1500E68E40DC3DB158575152A3B4835A64DEE8D4BA60495F502234D7275F749A
C69C7826A5EF683AD4C7DFDDE56F7ED3AE787428233F8377E4606149B21BE6BA
7A92D44F14C90D06A1482E74333370CE74BD730FE2084033A8806C648C3DEE3E
85B3832F859B680D87F28299A8306B973840EB1E2817E473E90807FF6075BD2E
BF5FD53507A2BA514D3EC6CBF31C7AF698CDADE597A9E73E38681BC3F0A48211
6CBD4B4A8B464DA73C41B67A11E29BB71AA5AC78F2DF01F8C9A6422BE3155BD4
E73AF44FC7B92640493417753D170D1793E33BE1C07EE0E151243CF4825B739B
0EAFFD714720506AD64A5D056929E31BF95F2A67090FAFE3AB4BD250742966D9
96DBE6C98DF941DE2475C41AB0BD928E3C8A19D6B6390A36B8FC98FCA4CB272A
FD5E435C19E37FF2E29FBDC5C41215AD40DEEB4165BCBA8A94DF48130048B8A3
BB6F6D6FD27E9AB5E00C0D9BD7BC103A4026D62AE7F08F060FE4F79743B7FF99
159EE4A027F1AD69C7D281C75D3BC79F5BA22E45C9042F46A8432CB795CB1609
A3A49FE22E9499C9F032B6573B03140D3286D35973763F3E2B2040E5918C6BE7
750ED6F9D988F7CB3D8C6F1F71DB821F444FD5130445AC905D8E005ADB59F301
BFBD4C9CC00E6D21203FEF3315563A89AA2D11DEAAABC70E9152557C23D3EFC4
7D856C6A78C58A191FAC4AE2DE1BC8CD91ADC4CD7E04C22E7EA41A9688E21800
695DF610A91333268493522D9A0366F355325790C6FC898626777DC8DA8A094A
C9A839C77C53EFA7609C350FC4D66E715A1E99C10C40843874808D161D0535D7
72B8DBA6B00957727F7586DB08DBEFEF4890289905F3CD54F14AB80698E95587
3C84678F38B7DAB418176A2854CB27C92424054C35BC50E0FF7F79289C663EDF
22052A12B3D14C007CA68E74F04288B9D00DA52EC3A8AB31F21F5B7569629AF5
0EBCF7152E3715510FBF60F16750CF54B975BB5A6577A03DE99BB78A84DED8F8
D4E39C2353B4B4F715E7657EA4EEF92A578BCC98876176C34821908987376B93
0BB2D5C3F1B82C472BE8A9EC03B0A49F8B40CDE83DB47B0BA362694FD637B86C
C65B1FD8DCA6479505CA75FD905680F96A281920A73D0F5719B9D90B1E3E447F
68FCFFF779B9670C100D26E4A92FE0E75EE6DDA25856EE22B29110DED2FE6AA7
40FBD1A17A5A07FAB805AD78BA4E610AC877E0D3D03E6ABC274D984FDFD21C42
513314DB03EE09858D3E6E1372A50B92DCC55FD21ADE7AA9D6F64905DBB304B0
88F3A684B7727CACD93ECB15802FF00288E4A2A48514364C9E6418FE1EFC14D9
AC7341D504EC6A0F1AC5079001C59427AD927312AD23BB242697FAEA501ADE9A
5EA45422E03750055B93C1963208A4BA187878B714FF097D8B398774723FA137
F694D5943C985A15C873476C6F3C1F0D44F5D1D8B79964265CABD45727B594DB
6638C4DF43919A6E398670164406F34DB9BBB2C1AAEEF51BB386FDE3AF2723BA
C68622A1200FC37425534D4FECFB22DBE1B117119D86DE3BE50110BF096BCE09
2EB5FD6EE186B529352D640A35043C2BB357F62ACECF6206236B5ABED45E319B
B613EA2586D53A0408C41EA05389646B04C9DF76505754EDCEE32A825B9E4192
593815F71C117A16B5CD20353A89809B5A4834EBD4D69DC14FB1A805E339774A
67DBF32C82B22A364F02BD65EFA7F94C8C11E5BA36869351278597A28CE61848
EBA94F1FE5920A18A13A269EC7FEEE5B8D8919E0D1E69B1FE209C5F74C458DB0
57850DEBC593B844B77C34B7C17AB9B7DB8AF11CCBF6D7A7918073D89DA1A5EF
78FCD1F235F32A62F241533356B78FA2E8AA6A9433272C23534CF0E8DE3B2E3D
450B666E6E37EDFEE1167C08592B4F4C1752149DD6F249101BBB32B19363BDA4
CADC2EF38A091816F6294F9C619C6B53B9BD184579A2BF691DED4618EFE2846A
51C639E66C1926E0C912C6ED391428AFAF28B7301E7A9C1462A320F85267C51C
F64143E86462BDAF7B0EE302EA4F137FAE6CF0E9CF7073A61AF3896FB3C4A0FC
84BA13A8433ADBD62AD824919DC41B93A262E824E5DDBE10E438D292F8AFCD8F
40637E24C7DD2CC62787FCC34BB49A80CA4750694FCE95A4DF574A6133A6099B
5C0CE9BB9491D96675544A44263B1240C839164B65A06C6F605BAC9909389052
259F5C558971EBDA8DA4309864998BDA533BC167E60316E25E8B38BB3043D259
8F931953F5B7275078C893F64618310C65AE56BFC7763ABAAF7BE3FFB0799442
B3B8F23B4C4899C31C95E408DE86D0513886E9A2BC3FB4C9BE54B96479275A20
0A4B590817122BF902565B7FC2736477F94EA5BA7591CB713F31CD26062A397E
7BE6E455F0B2A60467AAB52E9D5FA91E95BC38BF1AF34481CE5A0EA4E01108DF
54D34CD30FBD7A664AB5EEFC7B820575D35624FAA504892ABBF97E87E51E437A
784C051E021D36141E5F1B0E6F48F934FA9B13E10848498C341054EBD5FD116D
E2BBD1C0E486DBACA28063EA72DB6C8E32FA349461C1A8946B78E058D7494B87
1C8C41269ED78A6557187160DF820523385FE180873F5268E234F184D3D7E6FD
6C118317938425FF5E62B1D2E28B2AB9E7C9F736EB26B889F3D42AB4AD790289
0F5AEF513E2FEA10039521983931036DFC7D7948E52CE6323B60F0D7EB3080C4
92EFD44EBB4E7249DA585A12620BF007FB1F6127A9A61888F0060ED56A9947DC
9406DE7410672590BD7BAD0513172246F5EEEFA423BBAEE305AFA3FB216983DF
61299A9741779D9D0EA35D4BE263DF490DC590052EAC34F2A8BD508CD3D8330D
96CD8F687E8947B12E123AC89F962ED78448E1C966330A3DA363331BDB4A2173
7805D0C1CF3B41E52327532670AEF2CC724BEBBAB62ACAAC378BDF366E72EBC4
C789C70C3D7BE14DCC66292E62F8EE307A2216857977698CF16112731B81E2E9
B87AF973E1B2B194FCE29B079B39FF6AC07F252CDC3278D6EA1527A9F3E829B3
5D768FD00D4F9EE67CA73AE034C75D229E583EA70D9D11D5CEADA9622A05BD48
FCC253A65FBC45BDBC9D79D00B02C7711542A1CB4BA38D1F7C51F9F53DE7F5D6
0D90579ED89744CAC5F1C047BDA9316EBFBBD3EBAEF12DDF571ABDB6A9779B51
5D6EAF26FFFBDB25CA5133C2FECAF638873BCFA78E83018E42A33CEC9D56EF93
DBD0EE3C9F9BD27CE3AD60D9057EF4324929C84C4197CE6BDE432BDB9993226C
477956336C394A5FFF622C02FF0BDB856A4347C984BC57D7AF12007F3902E9B6
436206CB268678205472D85AD6131F1732EA8585B15CEDCE735D13E3FE2921D3
2022B8FE695633FAEB94966600A8B720DC21DE0755EEE6F50ABD55AFDED992FC
ACF11FF1A9C5C71DFEF4DDC4709FF15AF7D71AAC43F4EC19D387D38B78DBDAA0
645B2FB1C9EEC682AD101DF51A51B1902F650D61A0914635854E96041EFF86F0
213F6D2790D9F623C83753963CA85E8944075ED891703D3A1C188354695617AF
56DDA1FBC56DBE85B06243BD062FBA5D740144BB67E26C165FC611ED44F5FD46
D2C191A16ED86E07D8E45FB322FD0B3D25692D2D9410C0528917E8327FB8B6B1
0274907C8E9A28945C74F5EA94EBDC3D33C8B63F94DA672C9D042051FB5E063F
2029459049C09AD75A27D5D356DEDABEBD4D7006A2652B44D2914E385942BF82
AF3E3DC997624DC06C800A6DFEB6951A7063B1F2970CFEE5429A5B40AB52A3B2
0DA23D46C2368EAF513D47C127C23F603C18A8B3B1880A30E9969BEE703BB19C
1FD74FD12D91C0C2452E6FA3C41FFCF0BC9EB0F2470952827BC9590A50BE3B19
ABB80CAAC86B3DF026820939C4258A107254A69A481B8483514F71D841BC2F95
92ED0F4A404287877D3D3DE0EAF8962C832BF9D3B9575721950A734EA9C36137
C2137DE0D765AE6B398265C7ADD36D92EAC88FB9507577328995317B0B09B6F4
613F513F5BAB0543D50C4CFD489BEB8909789D6CC351EBCBE88848CD32FC90AB
7AB9712FAA657AE40F31CC2527E85602028B9575A55555C7D5A7723D64EF872E
51D59B1327271C75E4AD8AFBF92F72CDFAE75DD20D42CBDE1D3BD3710A1EBD40
DC44E21C27D5FE8A6DE4CEC6967E6F066F7E02555CB54C6E273FC28CA962BAB9
0AEC62F1C351596257BE683CB5F0E2B5D76A7486E7BD674523350CEC0EC64A4A
28F3C2B33BB8640D13BCDCFBFF122902ABC8332B4FB6AB4D2E00806806E473DB
071CE078A0F5687EE83A303992B2A029FAE3EB24729ADEF9BBBA92AC3299B7FF
088779B0F1A8B0429ED290E0A4DC979BD5B66230DAE58CA6ECCA884E81A1C5F1
DDDEFD80FACA78ADB12B5432785A35B26A4BA1DC216B2D085F21C7051CA0C559
AD8DC9780426676724C864184A3E809F3DF47D64873C9811B3B5ED20ADAF657C
7CCD6C2F209858376F0C6D97CA9A576940C960CE776822B96BC53D62C06CCCC8
04E92A98751B68FAB1423C4C1A42775F847C37959C0D1B887EB22E0C4478537F
CE1B1E2DF64852E3D33DB4E56E540063BF0D7EC9D3121B1EC95AEA2B3C21B30A
0B7EA863F05EA4BFEEBD2922AE308A23353CFB381FA0DCC62998A0DCD272392B
5482FB2F50F7EC90630A37E4B63FC37EEF1F3EFDEC36828A13988FBA45F0CDD7
FC14F2C58162774B50B6DA2CD0159823F9AC6C61A6629053ADCFD311353BCA97
CF885991FC89794DC92576C740F46C1AA781C2E42582CCCC2CF786B294776AE8
FF003132946F29A3CFB976C9151056EACA79E2258D77C264076814BFBEFAD42B
86273D30CE80C424CB288CBB7155E850C325411EEF1ABD87F62376C476215742
7BC374B0F396787084D250CC54B5DA0FBF3CC35837D0D72B5BC5478A7BA2F289
84169ECF514FE9FC1EAEC88A2C87A30F52A5300D17005E57593E81E77DDAD4DD
25BC4BBA682FAC8C1016FD554771EC3E916D2342FA914A7F055446DACAEB067A
5D979D91F3AA8FB36CB5B02E4902831DA9F86F0593259A35C0939520A6EE299A
4FDB80F6C7979128EDD4F9537C4F0E870DE54D18F8E1B354269C007745AA9866
3DA46206E75758807AD9236D6F07F27D22B16403F856B4B1C83439F870B2C875
43D25331BE76DBD05B6D9512BBA95E2C55A0D74BE8CFC892304CF39C9FFFDFFD
0127F883ED1133614CE691205F30B7E5708599D51DBC744998A4A4ABF8562E1D
016CFFBC57BACEC5C43BFD874B36A028E5F7A7E920518B904E08C0F930E7F069
6FF0766CD37F6F1488D29341552F4D53DD73CB6BE04F829C90391FD2F926B0DD
8907193C155BF58B6A7ACF320C39376D90BA20341B0F8094FEA7BFE9B364A389
CF37828097BDCA20108ED7631C74D2BD8A16E33683A8AA736E289894461E4750
0E434E7533B715E99D5BAC7F5A5581C16A36524EBB791A7613DEBA91D2049F47
B54941BCF4F80154F1403F14DA4D2C8D56638D347B78C6E1136C0FFE44B68AF9
D67A17BABD89C2BCFF8CCEAD2C7292882F18427AE27053815DF1C072940BA3EC
FA1C2AD0E4174917B2684EF827C40A1FB18B047D2EE6B73A28813D757604C861
804434B15ABF369E01489EAE2A620BF26BEE2B3B96E6A81A8304D840CED84D8F
D687D7E573AA36735869E4A9C542E5F323FFABD45FB8658E90E60984A77E582F
3777E1EEFEC2693451191055025C731C764200BAC03D1AA472AD0ACB5867FF72
940BA3ECFA1C2AD0E4174917B2684EF827C40A1AA973E69FF7AF32CC38F4F466
F9A29FC258939FA4B5AE29F69DC60D7A205EEA83E24DCCF0EDEFEC4BF0F50007
00E3645699C53F29AD0296D51AB12218F848671773561BADAD0264AC48C13E7F
250DF4A544F0D25DEF0CF269C1A13A6CED42FC81FFD714DDFB628CF9E54476B4
CD5B9D8EB2E53E15F94647C5EABC7C20BBB90B79A821F34E92316D32F80BBC99
957FC27C6F97018C057782853BB450168311A786495AAAC92B40E6D67A3B2B87
07B2C4F023369E282622FA6C76F04451E1282A2432E88FF45E1B5BA41D61FDC2
7D53B109DE75916CBCBC6AB44B240F45198D776E6B1E81944C5799AA781A1557
54F6DBC52F634C141625BCA4219E5E738A75554B55894BE8609ED31DB55CC730
B940AE16FE775EDD32B3DC830B85550424DB395DC2FF42B14DF29639696261CC
18AA3DD498B6DB59B826A5CD8C815EDC1F6F18BC4921AA305FFCBF1AB8F360AB
CD956EFD26E255C1D175C5F576D694AE248505974CF7057CE08A4211AD764B9A
718E2F26C2FBE4645D97728CB3FAD7A2EDD414AC71F9346F7CBD7F0A4AE3FD89
5A2663C36EAA8328A7707F813E554CCE17D7C4467D0E483C14353193F32CF014
D26C287D881F3F5300A42C93F5A25E8D00304DA29A83B653C7D2A3108D8678E9
99E2F67E464669C608307C3B82DE5483E3FDC1667BF5CA187E5FAAE9E09B1672
11D79523D6DB4B392238AAC3FA7A436F422533C48BBE2DF74D7A82F4B605BC02
67578E5EE76C57E7A62A27BB640EB4FD42B0DBC242B7C1CF800C50AEB034A4C0
2E516DD131325357A24630A1BAC64D85B6442F844F2FD7D0B9789D902A8634AC
093CCB48DE1C9C8CD84C4F2304510EE263083AC617954C2504CC73B27F3638B5
9766AC2FE42827D171434A374848DD0BF179A7625A65F55FDB5407D4C7BAF438
865A23FF5F3BAC7EEA79290016F6CE1A8332A77F78B569AB440FCA2EFB6FA0A9
802B8B22DAE7BC3650E52286E6F70F68E7671DA58803170DB43BA10C7628A9A8
A5208EBECCAEA279D18E171F04F6E164C2CA9F56BC5D4E3E633D6D477A89BB2E
FC1FD3A889B724193FCE3DBEF87F560575E51791678E402EC73D4064328E15B8
921F38FDB6F240DECB6D4AE23E173182D4D98D4C5EFA0825D933E8F5803E1EED
8BABAFE9416AA5E06C7C4C600BF38B70C87E5ACC597905A91173BC23B3D1657C
9E8DCBDAB522E1F4AB73D5D6EAC709B039F529F615707BF2D2151A145089E8AF
36EEE1288588CD52CB0178E37213EB4B15F2817F7C0F7BBCEBD4F8D399E8581E
EAFABF5F90EF2EB65FBDDBFF2B02772B16F6E7154C570048AD99925459B26B50
2EF2079F22434ECCF66634DE56E73349B1EF64A98457F0D7BE8D52BA5FCB423C
7FDB8A3F8803C0342BE9A2B0185EE03CB7EBFD4F38C31CF4FBD46EB44215D6E6
46EC35D6D4E9A9413FDEE39EDAC35F56A3644C27673F40E02B63A13D046B0ABF
CA115414EB4652911C21C71EF12B84F7C6F066C4D6E151ACA5B821C74BE4A19E
86229BFCBFB0387DFFEF8071B9F1BE8FA48454B62A6A1F98CF4440251836913E
3C112ED828E9BD8DF6C8C55B60A919F17C6E2505156151C09C20569C0263B109
4C3D5D44902E11D7A428C02EAC8E3D9D62AEF2FE82CD41DF9E26810848860509
022CA28F8D814A3F0622B5862263DFB194A2E03372C07EC4D6535417772E66F4
D60ECFED26882003FDC5DA687CFA43C0D1856C461F97C7AEDAD3A9B5726E5106
16412B7B63E421AC2C8430FD153C8313E9853295A07CBF1BD05B6887A353B1DD
446D33A0B0CFFEBD2B2BB94F6B2CE0E8D61CE21F9E0E06870CA3CD8819FA6B86
AE3CAE6ACB65B659EB45F814ED3149D51AD655593A5B010DF513B41A140FDEDC
F0868480E2ACA02B1F4DE65BA34E0BC2409584AE9A37142A3E94A2A00624A966
F834616E5B40617D74F36296E3CF8C760AD46A708E867324870A7709773BC106
147D6FD763F6F4256589A21D6EAF601ED481095A3ADAC875AA8D5657A0E4A558
AB0BA93007579732EAD475E56421A3B1386C8878EBDFF132070DF8A4E2478187
7CD72C3BD154AF9052CDC3205DB03D849D2D1EBE4266C139A295D808662B7F77
1B08E89597394FC627C1D4818F237D67F4E6D9031F874AC47BEB4E84870290E8
B5F7AB2FFDA24456666C28476F9C08001CA1508B0EDD5E982026680D97565FE4
D1E216A9C768A454647DB379C0ACD1B7D0C8207A291FE4C18F6335FBA135BEC3
293653AED1EBE4AD895425E4FB3315BEA6E2A5443A083B4EC321B5246755E05E
BD8614AB2FA897E8227A0BD7526BCBB7D76A13AB49D23BBBA5D38653AAC7B813
F29F450717723144EA46E23778024A3CBA9DC490FD77F0F3AA902B83C232BCFD
8326248FB04666282E574E03D11C268D902E88A25C0FF5F0D840032F95D39F25
7C5FFEFDF1E30EAEE83904BB3AC4563D3E778E0C96590D2D4DA46741AEFABCD4
03C90458CE63FE51E3FC0865957D33A75FD9A025B46C0FADF9A6C05BE3499567
E930F710682B89541769059EC8B85552135F93EA5553BCB27643E0A3FBA8ADA5
23934B35E2E80EB89F4782D8F34A5DC8CEDCEDEDDBBA4678F19A26D9BEC6A777
904EDD6949D621BE879C3F9681E485C71B916AD96DD66792A732A188E6A57C45
9111C2E8BE9A5EEAB01EA2E3783EF6C79A2DB00833D8084461E5963BFF176B97
EA84067F0D7583EA1B8827EC3B04E8FC6265C595062A68BA800B6AF8B46A5910
325C702FE35DA2CDD1FB80987AA1625BE96300BC09AA276E76CB6598DFD42AA2
2CFB939A914FB803C32485B80B7893E5710855134A80FAFFA126081DEF322453
4CC4070650AE7BFD3C6B73BACF76E1E5D2187136E1E88EEFA9A562347DD12AFE
72E2FA971F0B7F498FA3DA42D01593128D0C9D92CE1AC3301B7E99A4A14404AF
24867A0B342A5887890C9DA4E53930BB5BB89CA8BE82366D4186302B9F7C0211
1FAD1A6854099CBB30241F0C686FBDB7F72BF5518AA1955CF06D88ADC4FF697C
5CC43539A48D0B1DFDCC768878F88A19AEDB4C5A18273C55236CA29155911C4F
5CD8CF94938D4EEC253893A711CCD4B86E02E8E8DD948E71E9ED9BE5B69F45D9
8A619B2414EED3E50445B7E8B881265EF41110CB02E78F12F4FA30CDFC5AB855
D56C6B1D3BE08AAFE98B384EB63CEA5DEBFAADAC6AC4306F13059F0E2D4CC01A
749CB90B88FD90913D77B6417FEE8C039C12D8CCF516AA5A4757C7E8310B98BB
42BAD91B49DA240C40FF737ACE80B6E03F48D0EAD5CA6A019FF0364F5859F14E
57B437ED6F19748A50D9F2D1F26612468D2ADE91D3E10BD8D6FE07AB1709E1A3
FA4C1D12A5CBCC8407183522D3C760C16D8A5E977FCD4EEA7DF1A12B0880F0FE
592BD2E9B5E501890085ED0CBD42A0215CEBE51566778BBEDDE0690CEFD7F132
7328FEB2C1986547967105F0DB64D57B60C7293CF362A457B088E51440ACAF6E
D22D9D14A910801C278365895F0BE4511A6A0DB25F6E9A1427CFD5B69BAF5891
402BE52A4C0B13602E392D96DE2D6FAE4E133DC1A8FCCF41B71CF582343250BA
953453ACD53CECDEEE3CBFD5DB2D469E372C3FB3ED0907B6B7690C641D6A1C10
22F317703EFD7FA3ACD52870A97C08AC7540D2F1D473CDB0D165FF3E3C777CEF
27E631A9252EEA25BC4B0F86A034F5C64CDB55EBEB56F2BEC8DA74139230216E
1E4EF1B76E3CDBF1B72CBED5F7B102DE45BD7B5A88280122695505FEC1A10C5C
3F6DB7B4D9F03CF7F3CDEBF9AF6DA57A5D06041CDD0580E8C3CCCABEC81D8D64
2F424FC890C3A963B9FC8FCC9E461E1FA37CEDA39B40C3291F44280567A3E0BA
E2DC26FF4CFFB4C707B8CCEF0694F57A327C4643FEAB6D1CC91AE662CB73E82E
06DD21A7C173D5BC366A5862B161701E73234DC803CFAF7C88ED35A539DC0896
95E8F754462F21E9A2F3C11C5DE4ADCD17E1B1862F8BC32A21E60A61A01402B7
ACCC86DB1731F1F1240F79125898FD2B4B362D9DDB163B01F60CFB6D04978EF4
8F970CB843C46AC6C97DA00ACF82C54A4A49847E7FE2A9DC1C0D80EC88EBC3CB
B32CD8BF51D6E38CB457C3AC8C5F75A75348EEE15DFFDA2503C44772003487DA
AB5D9994D574B2072BBACAB46E5B0A71F87F3F942B6C39F7D99F70092DEAC5AD
2DD3CF23C92428A613CFA40B9BDE775553D9DD5A9F5D60B13DB60903E7694909
E0D4658B7F623753F66A8C27CD99D929C3F95541B536E04ADDF673C64E8FFE44
90B6FDE666370B2E3E03CEFBEECA7614314A73CB5954C6D639CEB6F8A0A1F4D9
414F1CA56619D7518FDA16DB9280B9485C4867644D32D0D91531DBD6C76D424D
ABA50B232A8254B034F051838810E0061D4F10FAA37F52B7E3E586EDD0CCD68C
CBD3F0A6D550FF4846BB83E4728E1CF8E4497211DAE158F2DDB6A86E3906080B
4FE69807BC5F37C37F75307C68061FE700D03CDAFF1D33319957690CF7CD56EF
967765F65632447FB45333885ECC1E34031896EAD69F7E04B96BE9F081277F76
52A6BBA8B1CCCCF8383C30B055496DA59E5BBFB2D16288D0D1461DF583D049D6
8F7F48CE1C03E6880407EE8ADBC6FBEBB247D772B3A60FAB4F732840A4B1C012
7C76FF82E579A09DFFE4786E9DDEAAF4804BEF88C7AA0A9CE359D715DED82B7C
87A4FCB903ACDAB961F93FCCD9D76BB1A0D1A8EA738945BA0F664F19C5305737
EE04E90FE9A484A1109FDE26609531576970CBE2E7386632417FB0981634E875
FBFAEBF8F3A3C08DDD6180EFC396385BFF862ACED7B7F1BAFA7217AC70D8D9D0
2544A545F6880EED343998210963B8163B3830C989DF40F9ED122BE1D03D9328
B63F0B6E92B775B1065B7905FB03E72387826A14D181BDFEF2CDA62B59D893A5
959E924476E93CF7DCA4E9552CA602B43CF881BAD3820DCA4D00D8F5612DA38C
110B0883731997E6DC26B83665DB71ADF03DB565CB3278F5B723EBA5F4712D1A
E15D95EE92368F47EE16B78669BA722068960B857516AB6D71E4B00F202CBC7A
829EB9B316C5C705E96349386689386BFABA5CFC0CE6369C638E6E45A356B226
DB7673920A2C426EEF8DA67E650EB7B1DC82CC52A93C98F9B314A48BBAFF7D44
AEFD978AD183133D546FEEEC0FFE3672E1FD8B9395D75E8581B5DF4492D6B44D
E0F522702E81A86688AEBBB7177AD139137E1E992023356C5C546DEE5401E58D
91E7C272FB9E9857356C4ECEDFCAAE74590B3DD20968B2903E361DAA5BC1326E
0488726E2D6F672352A159D6EC2FD1CEA84B0A20C8CD2778CCCF79752BE36C57
9DBDDE2FB17539A099E86DFC1487B0A5D18E3ADCC9FF33FAE0E8621D16846C8E
8359D1B984860123DB51D12DCC5FE6AE3B89F87E115DE6306C2448A5899FE940
A25B29B941A926561478FEF140E0668B24430916ED58EF36404E3B912BF4BFE1
6F013B235EB315003C9E761163074D583A55C3C86E52E4061E53323C21D8208C
F7F2854D681BBF176A08D3C975EDCB5A8A6AD12C95E35E48F94F97079164273D
164E1385D1C3998C5F2D3488996A754FB35623406E03B982B709D3C9C03359F6
2327FEA224A856E0B7309A9711146DA955F1321FDC68CDD7964228AD7A5AA908
FB05F63FF80AC93C6B92C7CEAB400829E6F649EABAF8BAFA31DA0FF01BC58F89
BC0440F5934ABBD4AE34AC857443E951A146E464D2DBAB0E92E04D408557841A
846A1C0EBFAFD245F8DC7EB69563510C525D05E195960D0EAEFB7710500128C5
D49ABA27F0C96DFFBF5A41C82EC805FC436052C5FD76BA624C499BC62FE7B473
4070F8C123A633E515982421704FD9FD5AC7065959E797BC0EA0A0C04F9BF6A1
45ACBEBDC37B3AFBB141634F0D84EB6821FC9B0C4B507D007D48C64C19A374D2
E21792BC0CBEF817DCE1BA46DCD0441AE799E71AEE8C1151643D024DD774EE22
ECDBDFC568A9D1FF8A80FC58CB10F4485A2AEA55611676C2CAF977D12A5C7BE2
3CB6EDE16C25E0D9EB07239AC11EC741074D80826B2C67C6975649BF090C1BB4
77C45AD03F9BCEF75CA4EB317A628F42F7EFAF5804FF38589029AFA408FCCCC9
7F38EC859BB4944602BE875C0E8D3C425BDC73CDE8F9B85C14FF1821B9F35B28
EF86C23135C2709AAB1D8195A8A68E42601813C1E8BB064779C789C6A320C702
B89AC5220EDA163AA5527B15C683D3BDCD3B11FEE683786D29E045ED614CBC30
35C738ECCABB39F621AF0EEC88DA0243802347427FAD9E61165B691898291760
36B644D38BD0D40991A5C7C5B0545F6FA98F6E6E37B1F325D0567BB004E3B5E0
039FE7704B8D86E980962317F05A7CC4ED61B502E510A24171D3E508B67D68BA
F10B91251AACD3D593D3E2644444F7539E67A8C054CF8FFA69D8B2C865CA2BC2
70E4E404F8A08B6EA22077FDDCF0DE434E7DDA170187CDF780CAF45A0E70BFEA
B75CAB526117465F964A02921919960F7DA71C82A089CD2DF10B219B6E43EB00
1FA13E44683DC6CCED04122D1FFF56BEAA18622D9415114EB2F3FC4EFB8EB31E
6D5FC58CADC7D77E340148FEC00842BAE3BA5EF2F0A91D7E4B1168FD1911257E
01D14C4C65A43095F770EF2E5F94DBDDF2B141234CEA140B59BE1E94F01D7821
D45586AAC0425BB388754AE7B80B072AD969B0353ACDECB582C109585F829065
A21A97A9DA4ADCAD6C3F8A80A011F4D7127CA67B6A9665C86474422353ED2E01
FF4C3FF4C098F6FCA427D2A45364E4D2858747EAAE222B1D550213BEA0636439
6D279482C1F71DB2687D13CA64138054D591B1C7894E2A0D7249924CCA18FAEC
2921BAFBD8687C4F810F4EFBAAF7E6E3C6D0ADD658D704F64C52A77F03BE07CB
52B6321F7F46F03C00576F77D4DA319B068FFB6060AAF40EB540CD5413F51491
FA65C5A183BB8E20C9C72188A83CB6FCB80CE6EFBF6B348FE702D99EC976714B
5FE29DEAEF0BAA4058AB2B3DF3AEE8D8B385478AB2ACD381539802981F477206
CAF450F44198BA633D8639980EA7B22089247B99AC55D2AB1A425956BA861357
2596A1210712F120CBA7B4281544180579F7EE5FE54C36FB32E62B80EAC98894
15DCC73355C84532F7A083D5DDD9A52A0E8E38C85846F8B4C6F9947D613D7508
533669497454E52766AB705B0B85164F0ECE882054E0EB1701F32FDA31A09E0B
5CD3B75990B6AACA1CC97287EA07031C4F6A2E6266E053B8DFF34BB8732B7B1F
DFAA901217BEFE5F0EAD98651394CCC742D048E391EBB2D5FBCAE22D74D00B3E
EDDF41DEBCB1FC8F4F3B288515CE437135700C5ED6D7CDB0C0D4E78DA460FB06
216530AA86C1A0346D992EF5B9CB036BEE99855EBFA4EF4B7B119AFB50293D8F
D5D0DCAC2807EB52000FA982CC11B675F962E779D53368C404ACB111BB0CB063
97DA8C3592E615B6E462AF1D80EB8BFAA3D4CB5E17327404D6A835514F62BD91
B92C5168F3B5F4FCFB4ED010744C0D753396941A903A9FACC96A19EB6A3E1BF7
6F90C6FFC27B544A46BFB4267201A96691C682B067F1525DC438EA0076574A37
6BBA74565315AF3E1BD133241D58DDCC67037061D453352535730871CFA9672B
DF5356746638CDD9FD68E308DDAD10ECEFBDE8801B074589368AB6A3A8A84435
466248A746B448DD95802B11CEBE404018E767F294FF5F7DF72EB99C52770C18
9CF924E96BBCC2E1CCDF12F852BFA2C3AE4A82E1BA6082EB823194818E6DE249
207343C37BE9B926EED90F823229BEE3DFB670B5C4CFA70C155B0BAF00D0B10F
68C5A52F764BCF5800CAAF2AD0A2765EE6EDD840B3082BE683E1D37D9BD147A2
D7C0D6183278FE8A4C3B716414DC182735B36842AE49F6F875DFB2AAE41F05B4
B314B8DEF45696C589BC74CA556158DA32EAD64629BDED7B5F4C5832075CB13E
7FDADF31737F3614E907DECA018089CDCFE2E0FBE21F14EE8754D0547D6A39C3
14F2E838FF36073B795C41F68E5F98F90921CCE377260EF06A3218D322BBA326
D4E3F1DC5CDDCBB1254A1ED245390029D71DA12F86DCE859F1F48AC037F26DED
B1C48ABA276B7E8B2142252659DB735F2A293166C57EA432AB2FEFD667AA739A
4D51F31430C0F17BCABB834250DB2AF689BC9A13BA20AB4921778E857480AED8
771C6EE2F7129ECC32EE59DEEFA84D627AC497AC2C7D1DF99112935BA5FBC2D1
C1ACCE1A959A22D34EBD2B3C90EFF0938CA12D77CBB95B14224AEF928980ED32
6C8BC4D4CF79DBE6EAD6DCA669D921F23DE0029849C2F47353053B24F0FB4926
773C06C1CA21BA8A9A66A3BC822BE4B1CAD1C5A764AE6F6F9CE0956ECE9F5C56
2071356A8D2A90D62328EF718ECDBFD7503A0750027042AE2ED27CAA83D69948
5A7E03E71DA50FB2096EE5DAC923CE61F281745A7D2C3B8999507C609A2ED663
E1D24F98509ED6932F962F76D5C95ED44B939B27616A053A193A18E2CBF9A620
A10483B09CA310083CC6AF9DC188856920ACC8B7D9B3874138C7E04994CC74D5
443843F1A6D6B54D8E8ED6C0184D558925C941EC08C8301EB6A81029F3B86915
083489A14C8EAE44E172D358E005C55B6413A92EC36EDBDF4FC7DE2392905875
FC28D07872F48FED6BBAB94BF55DA4FFB033321740F4B82C9E1D604056A768DB
342EE2587AD0D3D3A48714EA217B591D115579FA3D6B70FAF1B1BE5B9FD0D277
D5AFB48E827DD0B979E7FEB4D621E0B7682D0FB7097EC5DD812DC7AE3950B73A
9710009ECBBEABB9AB7AE45221207CEEE97EF66017F71E15C27DF0C8EE88C508
D30C7DB7017BEF93A6640D1BD1A6F1FDBA6E4F0859AFD74E72167A3D3BD86F38
1ED2C22D03C967950F4AFA057FDF163D3A8E42AF782D48D84F28CF8A780B2E45
B649F2302CDB4B503D98FF2A38363CAF148150989F4B398FD87BC27EF47166DF
B2C258B6D3306E141633B71E25E517C60BC4F7BFED578E050DB1F4FE181D2416
64679A625777D4183D2F930AF1B361E2A8FBDE55D7832EF90A57B7930BC1ADE2
F3B45CF3C4E828DCBEC0E245CB336A48445E64140F3096AC095EF9356D9D3124
1FBF24D742CCF065FA6DAE74E7DB97A5A756C66303F276E1C1F837B105D9B6BB
9AD2454756638C8C2104B9A8A9D5FA08DD485C3B1D952361F75B6CA0D9B4B21B
B58C7BBE9242FB65D39E7085771859C7732BD57F066B6FBCD370455A98A239D5
8B788D47EF32CCEA3A27019DE70E386F32B5BC0788181F511102AB15CDC60F6E
F567E9206FCFAEF68CA01BECA56517AF0ACDFD9C0B72FAA544C04A62DCC8BBCC
B2D9FC04EAF0AE36B55033A1121786F22EEA3281F8A4E0DEFDBA6814BAA36398
2544DE0DB69B12C8F50D426C741F0BDCCC3B0E5FF30BADC44430DACF47FB4C20
5413CA5F80917AA26D6D0D8F74A67881D55BD503711F47A328461D67D70E3284
A835BC656E205A16B3FFD4F252EC70527C42B850095AE69DF2B4F2D2CB2529E5
15B57FBA3CACAE8B3E0E120CC7232A2C9BB1170B6C44A1CAD62048D1958D36E1
73AF753EB6A4A690BEBEEB3ED8F70B361E0BFD3522D8F4BB99621DA283150D1A
82689AC16E80E01503CCF7F51BB23C69CE245B810C4219A274D8EE872AE7400B
67D1914ECA6774814A03BFD8412C9239AABC9B861590C6A7FFE09897138C27F7
9BF274C1CBDDF7FDF5E9B0FBCAD4518AA69116755BFA3996D8C3F699E083CA93
7810FBA8EB3B15AF0FC950DED36898DD9C5319A8527D0DF5AEFF333584EBE1F0
2D264F529350D5D041814636E1FACF5C472D65D5505880FA2D9DC2BEA7F1E6F4
A0AD7BB12DE8FC5C1D0641FAC450A860DDEB73E854FAA7A124BCAF578B2F419B
6E6B77B3D776AB3FAAFAEB72167A4CD062369CEACA37D885CE76C0093CF0B489
1409D89D08A2FC5C02DF765CEA96C919E6C7723403A4B8A8A4537F2D874AA9B9
E9661119310D776E2A65C4A068C377E7B4C1D228542E0CBB730345B4B646DEFB
E4B556C0E026F3DCBB29F24D885366D72B51980D739AEA62B903BA853059BDFE
D62624FB8C49C1BD469D7CC984632216A9C15434401A545F96EBF3D7496B5653
5D861ED537E6316BFB0F9C2FB8C376B572DDAF609CE76EEAA6F8867B8E325D90
9EC7760AA1B3DB19648FA207424119E004C1486C57E52DD412FBC760B1766841
F2674DF3AEC1E202C9FBD8978733A55FFD19DED3CC5E86E6BA368ED91A5553BA
6075CC05362C5DAF218DE47413288D87CEDBF99CAD602733BB61A9BD1AB53926
D125E0FE979BAFC1F263E447664B59D15B5E3172C7E6CBA6DCA6552FA6B0869F
7A54B0D640A6A704806B681B4ABB6F0C294725AEDAE2DD7A9B2CAD4AF6F256BE
2A178A1E5DB9650133A172F5119D205CC536B9EAA9F65412432E63EE3D18B973
8105DFDBC7ECDA793F53DBA3535849C0F0E2CD43272CB0ABC575D35FF9FB7FB6
D35742A408FAD6A1E5D4EF5F3F7EDC1CDE4F33F6D2EA16D057EFFFE327A10C87
EAE7BBF96012A862D73ED59611CDA9D4BDD1B92223D7BCFA5F87A7A8B14E96DF
13B1EC14588E97FA0AA55662D112772FC8666B4D16AE0F82C11F46337A41863C
5EE9610E2610DE733BC68DABD124EF953556F47325B589AE72F30FDAFEC63127
B2A702C6FE7D0FD3AB9968A65453B3D87E5BA38327811A6B76E5B6DA460166FE
DDE0D1784D5DD8C92695818BA4948516162623A138AD742E4116ADAB9FBD2978
574DDEAEB6504EEA104FD0174CE213C1DD8BB99DAED38BC58B88BC83E4A06C58
C5F01079E56F972C397DEEE8C66D61B1ED6E8FAC923498BE03DC5D188DC696AC
676A35AD4D5402E3E9610387B01E84A565197906ACB3DFC6BD7D6C013D9CB740
AD40B7BFC75E886FC44218248D72EA10167A49B4673B453F3DEAA0163BAA2335
E2A02DE729DF56CC79D7E1F921E9B3468B0408B1989CEAE99219B50E06F817BF
B6E73F34484519287C20D8AE2FAA0ECF5E7441A46A93FFC81C0D4E7D221F02D3
25428739003766FB193D69C6522FC551C77DEE4DDCF9DC00C9E1ECD468542422
ED51267657F2D8DA1DB7E8406D0A927EA473EF0FA27D784E662DB84966E8EFCB
4D3BB68835FB44FFF9ECC814325EE5DB7BCDCA96C4B616910F1139CF20395C89
1966DFBDF41E5A26A64FE348622CD21CF902F178E5C506F373F8763496739786
EB1F3DC99A9AF889F2B9ED9E578449DAB2B2402C3A0B7B4518E411826D96CD63
E312932C9D10DDF61C8992E30A1D0391179FD995443E529D2D39074356D50EF3
D172AF78E737650723B4466C509BB5BC7D667C474ED4BF89A1B1D0900D64B85A
08291C7377B17B93F37348E5E9F184420E5AF28414ED92A9F4B5AF4502C02535
1A17F5D2A98DE889FF90B5413021236C4D064068DF9F7ECF0049C5B79F06FA20
48EFB9C4995848D962EF4603A086079F4E6139EEB31622160E6D76208C077E99
2D3F6CBE5A045D10F0FBC1232166EC01871500ECD4A80211F24ED9F18CE92169
88B47D26C2F44AC408A6F1F8523E200FA5E3FDFE2822A02E2D21AE0A1B24088B
AF11E4375345A6EDCE39660BCEFB01035BB9A209917709BAF6931412F5CA3AD9
D97DC162CFDBF0794E0DB53DD0B7A87B7A5AE878C73E367394C0C487D77C2849
1810DD94B862FAF569F06B670BB494916D5EF2A997E31B34AD5E22C9F5A2E322
B280B617DA2118E7BD30224DC67EC01CD55072069CC2867004C06D3C4E8BD17E
38A3F22746C9EFFC968E108680C54230315EC7785401AA80BEB80B44F8103421
D1EA777FF625AD864A0A8C9985149D040C86A567FFF558D8AB476C5628160678
D35382545AC87BBD556624F9029D907230484039E4F06CF0DBAD8B24607FCC2E
93718569336768875F46E69006137DDB1F370A10AE69C1D8354C700E60D768C7
8D94B698B6E803A0A99CABA8B570C957F24DAA95A65ACD9F77DCC1F4669DEDCE
D0114C8B49875196F621A54BD9AF0D097629F990B02347F8F44E59AC3F38FF5B
C4C9548E4535DB978A28E08FEB1444E38891905DA0323EC2D6229FD00D2EE9D5
954E2F96F346E95080E8C6F52A821FE36EAC2473414A8C20A18244E5708C153C
D8DB16C1D5CF628FF55CBB75B7341F06D8E3CE6CDF864686355A40148F22B98A
223A9D7E18890BE0453B6A0E1613334B2BA5D91F3F7F8D29A3236B29C4FF7B52
3579198C44E30F8C070951DF7ACAD8961C5DEA8E574482485C46A3A53A9676C7
7F9414DB9A20CEE7220A2BDC397E78D6F2B1FF0B9BAA4BC291D9247CB6E873C3
1A2453496044A749D4801175AA72631D9817F019B385DA8E59E6871F0565585D
C04A60B07F51E0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrschein)
@start /Fa 194[1012 4[650 3[650 52[{ enclmrm ReEncodeFont }3
1328.35 /LMRoman12-Regular rf /Fb 198[470 6[470 470 470
48[{ enclmrm ReEncodeFont }4 885.568 /LMRoman8-Regular
rf /Fc 139[422 428 448 3[603 904 301 2[301 603 542 1[497
3[527 22[559 407 7[817 23[422 422 40[{ enclmec ReEncodeFont }16
885.568 /LMRoman8-Bold rf /Fd 27[470 108[680 497 523
366 371 367 2[470 523 784 261 497 1[261 523 470 1[418
523 418 523 470 11[705 3[732 3[862 2[483 4[640 11[470
470 470 470 470 470 470 470 470 470 1[261 314 261 732
5[784 37[{ enclmec ReEncodeFont }40 885.568 /LMRoman8-Regular
rf /Fe 168[1138 3[615 30[553 2[553 2[307 46[{ enclmec ReEncodeFont }5
1106.96 /LMRoman10-Regular rf /Ff 160[909 45[606 1[606
47[{ enclmec ReEncodeFont }3 1212.12 /LMRoman10-Regular
rf /Fg 203[993 52[{}1 1328.35 /wasy10 rf /Fh 135[739
60[361 361 58[{ enclmmathit ReEncodeFont }3 1328.35
/LMMathItalic12-Regular rf /Fi 650 2[723 5[650 17[650
13[1012 91[578 2[939 686 723 506 513 506 1[723 650 723
1084 361 686 397 361 723 650 397 578 723 578 723 650
9[1336 975 975 939 723 957 1012 2[975 1192 813 1011 668
2[1021 849 885 993 1[921 975 1[614 4[361 650 1[650 650
650 650 650 650 650 650 1[361 434 361 2[506 506 2[1084
3[361 3[723 1[759 27[{ enclmec ReEncodeFont }66 1328.35
/LMRoman12-Regular rf /Fj 133[956 4[1196 837 849 879
1[1196 1076 1196 1793 598 1136 1[598 1196 1076 658 982
1196 956 1196 1046 9[2223 3[1196 3[1616 1682 2041 1[1685
1[801 1682 1[1353 1412 1[1554 1530 1625 12[1076 1076
1076 1076 1076 1076 598 717 45[{ enclmec ReEncodeFont }41
1912.83 /LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fj(WS)668
b(1.4)g(-)h(1)f(Eigensc)-60 b(haften)667 b(des)h(arithem)-60
b(tisc)g(hen)667 b(Mittels)g(-)i(MC)-2617 4515 y(-)718
b(BIFIE)p 0 TeXcolorgray -741 7823 a Fi(1.)p 0 TeXcolorgray
651 w(Gegeb)36 b(en)433 b(ist)h(das)f(arithmetisc)-36
b(he)433 b(Mittel)p 22376 7118 740 45 v 434 w Fh(x)h
Fi(v)-36 b(on)434 b(Messw)-36 b(erten.)855 10368 y(W)-108
b(elc)-36 b(he)658 b(der)g(folgenden)g(Eigensc)-36 b(haften)659
b(tre\033en)e(f\374r)h(das)g(arithmetisc)-36 b(he)658
b(Mittel)h(zu?)921 12360 y(Kreuze)433 b(die)h(b)36 b(eiden)433
b(zutre\033enden)e(An)-36 b(t)g(w)g(orten)433 b(an.)p
1062 13068 44260 45 v 1062 19857 45 6789 v 1770 14928
a(Das)408 b(arithmetisc)-36 b(he)407 b(Mittel)g(teilt)g(die)g
(geordnete)g(Liste)g(der)f(Messw)-36 b(erte)407 b(immer)1770
16920 y(in)390 b(eine)f(un)-36 b(tere)388 b(und)h(eine)g(ob)36
b(ere)389 b(T)-108 b(eilliste)391 b(mit)e(jew)-36 b(eils)391
b(gleic)-36 b(h)390 b(vielen)g(Messw)-36 b(er-)1770 18912
y(ten.)p 42912 19857 V 45277 19857 V 1062 19901 44260
45 v 1062 22706 45 2805 v 1770 21761 a(Das)329 b(arithmetisc)-36
b(he)328 b(Mittel)h(kann)f(durc)-36 b(h)327 b(A)-36 b(usrei\377er)328
b(stark)g(b)36 b(eein\035usst)327 b(w)-36 b(erden.)p
42912 22706 V 1 0 0 TeXcolorrgb 43621 21636 a Fg(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
22706 V 1062 22750 44260 45 v 1062 27547 45 4797 v 1770
24610 a Fi(Das)365 b(arithmetisc)-36 b(he)364 b(Mittel)g(kann)g(f\374r)
g(alle)h(Arten)f(v)-36 b(on)364 b(Daten)g(sinn)-36 b(v)g(oll)365
b(b)36 b(erec)-36 b(h-)1770 26602 y(net)434 b(w)-36 b(erden.)p
42912 27547 V 45277 27547 V 1062 27591 44260 45 v 1062
30655 45 3064 v 1770 29451 a(Das)435 b(arithmetisc)-36
b(he)433 b(Mittel)h(ist)f(immer)h(gleic)-36 b(h)434 b(einem)g(der)f
(Messw)-36 b(erte.)p 42912 30655 V 45277 30655 V 1062
30699 44260 45 v 1062 35754 45 5056 v 1770 32559 a(Multipliziert)344
b(man)g(das)f(arithmetisc)-36 b(he)343 b(Mittel)h(mit)g(der)f(Anzahl)g
(der)g(Messw)-36 b(er-)1770 34551 y(te,)434 b(so)g(erh\344lt)g(man)f
(immer)h(die)f(Summe)g(aller)h(Messw)-36 b(erte.)p 42912
35754 V 1 0 0 TeXcolorrgb 43621 33558 a Fg(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 35754
V 1062 35798 44260 45 v 47992 7823 a Ff(___/1)p 1 0 0
TeXcolorrgb 47905 9815 a Fe(WS)369 b(1.4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 39826 54804 45
v 0 TeXcolorgray 24746 81281 a Fi(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fj(WS)717 b(1.4)g(-)g(2)h(Monatsnetto)60
b(eink)-60 b(ommen)715 b(-)i(O)-60 b(A)718 b(-)f(BIFIE)p
0 TeXcolorgray -741 4800 a Fi(2.)p 0 TeXcolorgray 651
w(Die)620 b(nac)-36 b(hstehende)618 b(T)-108 b(ab)36
b(elle)621 b(zeigt)f(Daten)g(zum)f(Monatsnetto)36 b(eink)-36
b(ommen)620 b(unselbst-)921 6792 y(st\344ndig)379 b(Erw)-36
b(erbst\344tiger)378 b(in)h(\326sterreic)-36 b(h)378
b(\(im)h(Jahresdurc)-36 b(hsc)g(hnitt)376 b(2010\))k(in)f(Abh\344ngig-)
921 8784 y(k)-36 b(eit)434 b(v)-36 b(om)434 b(Alter.)p
-2313 11596 48191 45 v -2313 11596 V -2313 12941 45 1345
v -1604 13854 a Fd(Merkmale)p 5359 12941 V 6068 12549
a(Unselbstst\344ndig)6068 13854 y(Erw)-26 b(erbst\344tige)p
13031 12941 V 13740 12549 a(arithmet-)13740 13854 y(isc)g(hes)13740
15159 y(Mittel)p 18498 12941 V 19207 13202 a(10\045)p
23965 12941 V 24010 12941 V 30511 12509 a(Quartile)p
40367 12941 V 41075 13202 a(90\045)p 45834 12941 V 24010
12985 16402 45 v -2313 15551 45 2611 v 5359 15551 V 13031
15551 V 18498 15551 V 23965 15551 V 25859 14507 a(25\045)p
29433 15551 V 31345 13854 a(50\045)30660 15159 y(Median)p
34900 15551 V 36793 14507 a(75\045)p 40367 15551 V 45834
15551 V 5404 15595 7672 45 v 18543 15595 27336 45 v -2313
16895 45 1345 v 5359 16895 V 7597 16504 a(in)314 b(1.000)p
13031 16895 V 18498 16895 V 18543 16895 V 24196 16464
a(v)-26 b(erdienen)313 b(w)-26 b(eniger)313 b(o)26 b(der)314
b(gleic)-26 b(h)g(viel)315 b(als)g(...)p 45834 16895
V -2313 16940 48191 45 v -2313 16940 V 27047 20510 a
Fc(Insgesam)-30 b(t)-663 21895 y(Insgesam)g(t)3826 b
Fd(3.407,9)3653 b(1.872,8)2916 b(665.0)g(1.188,0)2551
b(1.707,0)g(2.303,0)g(3.122,0)-386 23199 y Fc(Alter)362
b(\(in)-143 24504 y(Jahren\))-685 25849 y Fd(15-19)315
b(Jahre)4171 b(173,5)4385 b(799,4)3281 b(399,0)h(531,0)g(730,0)2916
b(1.020,0)2551 b(1.315,0)-685 27194 y(20-29)315 b(Jahre)4171
b(705,1)4019 b(1.487,0)2916 b(598,0)g(1.114,0)2551 b(1.506,0)g(1.843,0)
g(2.175,0)-685 28539 y(30-39)315 b(Jahre)4171 b(803,1)4019
b(1.885,7)2916 b(770,0)g(1.252,0)2551 b(1.778,0)g(2.306,0)g(2.997,0)
-685 29883 y(40-49)315 b(Jahre)3806 b(1.020,4)3653 b(2.086,1)2916
b(863,0)g(1.338,0)2682 b(1892,0)f(2.556,0)2551 b(3.442,0)-685
31228 y(50-59)315 b(Jahre)4171 b(632,8)4019 b(2.205,0)2916
b(893,0)g(1.394,0)2551 b(1.977,0)g(2.779,0)g(3.710,0)-423
32573 y(60+)314 b(Jahre)4668 b(73,0)4253 b(2.144,7)2916
b(258,0)3282 b(420,0)2916 b(1.681,0)2551 b(3.254,0)g(4.808,0)p
0 TeXcolorgray 0 TeXcolorgray 855 40135 a Fi(Wie)601
b(viel)i(Euro)e(v)-36 b(erdienen)600 b(genau)h(25\045)h(der)f(30-39)h
(J\344hrigen)f(mindestens?)g(Gib)g(an,)874 42127 y(w)-36
b(elc)g(he)483 b(statistisc)-36 b(he)482 b(Kennzahl)g(du)g(zur)g(Bean)
-36 b(t)g(w)g(ortung)481 b(dieser)h(F)-108 b(rage)483
b(b)36 b(en\366tigst,)482 b(und)921 44119 y(ermittle)434
b(die)f(en)-36 b(tsprec)g(hende)431 b(V)-108 b(erdienstun)-36
b(tergrenze.)p 1 0 0 TeXcolorrgb 888 48656 a(3.)435 b(Quartil:)e(EUR)h
(2.306)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 4800 a Ff(___/1)p 1 0 0 TeXcolorrgb 47905 6792
a Fe(WS)369 b(1.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 52390 54804 45 v 0 TeXcolorgray
24746 81281 a Fi(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fj(WS)857 b(1.4)g(-)h(3)f(Arithmetisc)-60
b(hes)856 b(Mittel)h(-)h(O)-60 b(A-)858 b(Matura)f(2013/14)-2331
4622 y(Haupttermin)p 0 TeXcolorgray -741 7929 a Fi(3.)p
0 TeXcolorgray 651 w(Neun)642 b(A)-36 b(thleten)642 b(eines)h(Sp)36
b(ortv)-36 b(ereins)642 b(absolvieren)i(einen)f(T)-108
b(est.)644 b(Der)f(Arithmetisc)-36 b(he)921 9921 y(Mittelw)g(ert)448
b(der)f(neun)g(T)-108 b(estergebnisse)448 b Fh(x)22152
10120 y Fb(1)22678 9921 y Fh(;)221 b(x)23999 10120 y
Fb(2)24525 9921 y Fh(;)g(:::;)g(x)27511 10120 y Fb(9)28488
9921 y Fi(ist)p 30316 9216 740 45 v 448 w Fh(x)393 b
Fa(=)g(8)p Fi(.)449 b(Ein)f(zehn)-36 b(ter)447 b(Sp)36
b(ortler)874 11913 y(w)-36 b(ar)448 b(w)-36 b(\344hrend)446
b(der)h(ersten)f(T)-108 b(estdurc)-36 b(hf\374hrung)445
b(ab)-36 b(w)g(esen.)447 b(er)g(holt)g(den)f(T)-108 b(est)447
b(nac)-36 b(h,)447 b(sein)874 13905 y(T)-108 b(estergebnis)433
b(ist)h Fh(x)10920 14104 y Fb(10)12285 13905 y Fa(=)369
b(4)p Fi(.)921 16450 y(Berec)-36 b(hne)433 b(das)g(arithematisc)-36
b(he)434 b(Mittel)g(der)f(erg\344nzten)g(Liste)g Fh(x)33583
16649 y Fb(1)34109 16450 y Fh(;)221 b(x)35430 16649 y
Fb(2)35957 16450 y Fh(;)g(:::;)g(x)38943 16649 y Fb(10)39941
16450 y Fi(!)p 921 20283 V 921 20987 a Fh(x)1660 21186
y Fd(neu)3548 20987 y Fa(=)p 1 0 0 TeXcolorrgb 433 w
Fi(7,6)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 7929 a Ff(___/1)p 1 0 0 TeXcolorrgb 47905 9921
a Fe(WS)369 b(1.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 24721 54804 45 v -2331 30149 a Fj(WS)555
b(1.4)h(-)h(4)f(Statistisc)-60 b(he)554 b(Kennzahlen)g(-)i(MC)h(-)f
(Matura)g(2013/14)-2439 33171 y(1.)718 b(Neb)60 b(en)-60
b(termin)p 0 TeXcolorgray -741 36479 a Fi(4.)p 0 TeXcolorgray
651 w(Um)552 b(A)-36 b(ussagen)552 b(\374b)36 b(er)552
b(die)g(Daten)h(einer)f(statistisc)-36 b(hen)552 b(Erhebung)f
(tre\033en)g(zu)h(k)-36 b(\366nnen,)921 38471 y(gibt)434
b(es)f(b)36 b(estimm)-36 b(te)433 b(statistisc)-36 b(he)434
b(Kennzahlen.)855 41016 y(W)-108 b(elc)-36 b(he)627 b(der)g(folgenden)g
(statistisc)-36 b(hen)627 b(Kennzahlen)g(geb)36 b(en)627
b(A)-36 b(uskunft)627 b(dar\374b)36 b(er,)627 b(wie)921
43008 y(stark)386 b(die)f(erhob)36 b(enen)384 b(Daten)h(streuen?)g
(Kreuze)g(die)g(b)36 b(eiden)385 b(zutre\033enden)e(Kennzahlen)921
45000 y(an!)p 15260 47700 15864 45 v 15260 50505 45 2805
v 15969 49560 a(Median)p 28714 50505 V 31079 50505 V
15260 50549 15864 45 v 15260 53612 45 3064 v 15969 52409
a(Spann)-36 b(w)g(eite)p 28714 53612 V 1 0 0 TeXcolorrgb
29423 52413 a Fg(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 31079 53612 V 15260 53657 15864 45 v 15260
56462 45 2805 v 15969 55517 a Fi(Mo)36 b(dus)p 28714
56462 V 31079 56462 V 15260 56506 15864 45 v 15260 59569
45 3064 v 15969 58366 a(empirisc)-36 b(he)433 b(V)-108
b(arianz)p 28714 59569 V 1 0 0 TeXcolorrgb 29423 58370
a Fg(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
31079 59569 V 15260 59613 15864 45 v 15260 62418 45 2805
v 15969 61473 a Fi(arithmetisc)-36 b(hes)433 b(Mittel)p
28714 62418 V 31079 62418 V 15260 62462 15864 45 v 47992
36479 a Ff(___/1)p 1 0 0 TeXcolorrgb 47905 38471 a Fe(WS)369
b(1.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 66490 54804 45 v 0 TeXcolorgray 24746 81281 a Fi(3)p
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
