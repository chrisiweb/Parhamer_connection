%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS 3.2/WS 3.2 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:54:40 2017
%%Pages: 14
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ LMMathExtension10-Regular LMMathSymbols10-Regular LMRoman8-Regular
%%+ wasy10 LMRoman10-Regular LMMathItalic8-Regular
%%+ LMMathItalic10-Regular TeX-feymr10 LMRoman12-Italic
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS 3.2/WS 3.2 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0854
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A746147F456517EDB169157DAD9D8AE5D7
EF2661E266C5C812B03E2569E0F138C2D58E38EC9F0B780C298874616D09E399
6CBC81BF2A98EC7A9A573A79CCDB6327D0DD0F821F886FB4496ECCA78FD1A2BB
CBF0CA1255799DF587CE66F042F7A5179B55075FC89BDC3302D01D7138DA0828
4C8C35A8E26752CC2EA8F3AC2AC68E70946C3E8F46B9C2DF790F79269566BF9C
9A6E54EC87BAB7D34EF99AD642B738312FC6F300093EBC7669C934250A5CE240
A1171441D03FD75811F371B3895AA29DDC6A984C0E944711C77542A66680C933
9C7F2D5A30471C6693CEA46EF483D1046E1A9FE6EFFA27CA8C9ACE821AB92B0F
5D9DC9D0A91B93ED65003BD0C4D6608A6236426C7859229DB42614A54EBFB4DC
8097C0D9B0FB95A5A87CC9FD874959462454B5D439C456BB55FB81B09E3FC5B3
26D850A5DED9EC17E11FCFDC544B2885995B5EA543CD7E8E17FCB8B4ED57D7C6
1B0C70972F86F67336647589FB0EA874920BAFB89889071729076D755021533F
B886A9483867A5E3CB8A961CEB372CDE1EA852052312ED4484491532ECA79ABC
3EE60C00312665A8DF22AACCF0CBD84EFD9EC148AF4245BFE780E23BB321DA56
DBB416890407B39D34B68BB61B00B146D2E8F794C1546CEA6E037D7CD767AE50
843AA610583CC318C66E25ACE786FE7B406E5F1F232517AA77DD3875AF98FB1F
E6FDDB6323E23AA93628A6B5887CA2263BF3F5A696EE86831C603B0AB1442AFF
5FA6C191F7A83C324AF0629A269BC5E6602B15D0B8881E6F37D510D53C60AF3F
6159041212131F18BF75E71B5B6E7022B99AA55C94130C7A4AFC72E016B43A65
AA522E7EF3FC6134D5F715878D99130DE16A3ED40825C75260C7BA8A5A084766
1FEE0F6B8798F96EB458F2E1ECB61B6A2C9887A5D0541AC711EC68B79C2CA3C6
175D4A90F08ACA408540796646E0DAC8220792B3FEB61999671C1DFDFA0919F6
35FC2CB139762BA4D20490AAAB168B00EAE492D1EF564F9D4A077B526322E8A4
4E42451F694443F3C4E2FC9541C8344D3575996B2C50A6E3D62384F9ECC1679B
6514C107D7B3A613F7287269594865E9453E9B6EF227867D9CF9549B3B5E2A6A
F748308BAE99AE06106D90DE65FFC15685F8CF6DED13F50F406270CF873290E9
9A3BD506A8578376F788CFB65E372FC69FE9FD47150A0CC019FB7BF22A3B979B
EC26787BAB2D5F893EE00D41CB48E35CE9C08D0BDC30768CCB856C1CD7DE9E9C
0848692C38D1E3016BF4B4E37EE291081DE21AF12C1240C57540E73362D1F9A0
904081FD330AB6BC5E2CECD68B9981B2BEF1AED8D00A3AE7ED338B9E18F72045
7A4AB35C68C07865063A2AFC57C5F2062F908641625F5C1C0C6A364E3100A357
D10632538A2A0CDB6AD680DC773ACEE840A11C866CC356BFB3FEED65526A133B
8800E5D9734B24E017A2E354045A20128E1705A76CC4A6F6FABD063ACE8A01DC
45383306CED62F67716BDE9F3379CE9878306CD4905832A6D7971824A12374A0
CECCAC565C16B53C7C5E1A202F5363892C77B74A200C9DC2E2179D79AED00A2D
FDA9B22773F34FFE430F51DEC9D81F1FFDCCDD178A0CFDE0E7E46CF99B117B55
B3CA9B1F3952D101D6CE60D1A0A97C99EDB3FADF880821AF7D1CA940090DB589
20B9219284D91DA3BD4A61CB3BFD0D14217EB9F2CB21F0FF6087C7308074735E
E35C87F51AB5DDF2041BCC6827E45A0370F0F2D6FDB8A1FC5066E1BC3F1D7B12
B234F60899F20EFFA823A8ED6489E6A04A0110DE316A16B9A8A6E831396813D3
F551F18C2D70B0FBD115BE7EBCE816AB40D2ECDB17E15F2AD8D3BAD0B94BB1E9
E4397ED46382B7F8A62CF533D4295155716F96B850D6FF61144F6A9E51CC1B8A
86A35082D9ABEB8D2DA4B491536CEF9D1E9F4FD8C0003E6F23293B82B65EE0DC
F0830C02BEA2CAE21DFAAFB537D8D9F0A74B63C9D0A6A9BFAA49F87C4FC0A724
1808AB8A4938BFDD1B8644456D6323286CEB879B3BDB928141D3E5403F1CB5FD
773C8B9DD0042C5E51323CB81A8EDE313FDE90D905B45223A6504CA4D48826FA
E6756223F2FF5B5167ADA7EEF2D2CBFFA77D88827236660260C19CA8BAE9DBBC
7A911F54C201E4F627816CFED662D19C21824CCDB8F71DD18800B7E40E164074
33FC9A216DC7AFCE1C5C7F7EBB14725E4813E05782683C877C7EC4C86D6FD378
06CD3E28E86F10868948EE507B47172D7B52B09828010DB7975266138B7C5168
19F07C1F01EE32CDCE87348E9A967B430996030C42BCB6B3794F51D6F7DBCCB9
A30006C7D60C7E1AA2761AF25BD01C501409DC094980FE3A0D2A24B429285A06
EBEA61BB134055B25332C4F2AFCD776ED2ABDCE78D2BDC07CED874A173236473
98EE737ED7C6090E857AB029E6C75123998FC42D3E0C3F20960FE90B3CC6EFBA
5BE1F043F38C1E3B3CB2173152213DF78D7C0934B29652E763300876BB073367
A61A91B741B3CC4B68E496316C1FCC57968F790C5E7948B72C4AEBA496FEA882
575B6426A82F101D8FEB1CBF633184CB857E6D5AB42F92904B4D0DA750DFF2A8
3A30B03BC1DB36EF6FAC16F69FC8885EAD2CAB2644F1E25DF5F6EF5B5ED1E80B
82B3BB7F5B0B954E7078DE3E31D8AE65F9EA55FD147FA2DB2E8385C7B35F69B7
D06F576D7570D2B23AC1D7040992123A276F3483AB90D7EB79A87E6467D40C46
F878C63E035056CDBBB9F4DB89659D42B100853BCBD4D0A15071AAF8079B7768
5637DDE51E631007A29FAC4FC89EC53A42AA58F08999C1DDDC1F129EF7813073
EF9409838CD519B1F9384DAB415A394588881EF3502D2588589B5ADD4C1F23B1
6A9440ADF2974910C58F6BB26C4F58D573E5546629028DCA3154FD567040DCD5
C54B9234618410808685806BDBC524F3914FB3F945E0A8B3D0BA3DB62D680AE9
DF1C22D1E205B546D86FFB6D567AEF67B112126E2ACF3642047B54B09D3B31DF
2790637E4375815EA4ABE99BE732D6518A5B8365DB72AEC255D01E5F51974F8B
80E5501D8F33616769788FE84E1E85CFE56E137BA47C2A14D106F554978FC07A
154765411925D03D58A22DCD2AEF5406DF46611E216F8B9161510B36B230EF3E
93590FA686661BC2390E19CD3DEE77F3538ABB1119F13CDF297EBD29C3DD1888
F0FE99AD7ADAD0922C1BEAAAD9B337968A02FCA0132E033BED6E64D0BD1E9C51
FE0264A18B16E899EAB7FB6A5D283005D97035874D2B9AFD4D3F29B4B1E6EDE3
0FB077310016F5279CC754F3D13AD666CBA8F8C56E27E4466907B099BEC7CD38
699015DDFA5E32143ACCD729EE43B417EFAC4D403595265F0306D9CB3B26CB5F
05EC5FBA7C19AAC361613A028572D68AB9D20F3ED4130D20DB5FB364F7BD728B
86D3BBE1E37BC2104E797474023611FAD7AC43A659829BCD60A999E9F3E78F64
80C3C8B6297958A634242E698BAEE3C5CAC2DDB333270F9AEB92A892D0578C34
519695EAD030B18D2B1B928D2CB8CAF6B4484B03FB878D974AD04A770977FBB2
C31C4F8FF8BB1E7DF55CBD0EA7805A438AAB424675C45984BC321B8331096342
44037384B36372980DE4F1819DC2B4F825D7F6AF5BA3889A9481A39115215105
5D2B2B9DAAA7D85A7F1D36345F3BC5A90CCE79572D44A07DB50823C01E2F535D
FC2C0655A9A103406D8CCCF97174ABCF4EBF022831694B2773BA052B475D09EB
09469D2BB86F7BC232B842C924ADC1B1AC7AAE6732DAC6E6E6F989D279899F03
7BCBD7DF2830E4F2AC7BC9A0512C5598CD6A8558B8C483AAE9A856CB690E4D9D
6B4452C138A84B53712BD7B639625938CDB360066803092C41828FDFFC40EC76
529B3017997B118F9C0019B318CD3A83CB0A1E8891BE5F6A0C940C93A5B74FF6
4283F15EAA51DF4C74CBB662283EA2CABC19388DDF3C5B474F5374D80D469AED
90BA08D8A72E3547B40BF4ADAD86EF5BEE825C3F850B6EE405BD38D761485512
1FEEDC70965D0185F5E174F0758420612108EA4A58025B1F47E53E0B124A48CB
687FEC13BC7E48802CC39BE1302FEBB6C5A7E2509195211FF1A494D7743D2BCD
9E84D94956A1404882E6A29731FFADE7B187078C481987BA74CE27B2C4557D4B
04E7F771105122A7F30165F29EBD4570C70F7860B7D7E3F1E81AEFECB5313C2C
C1E66069D56F6579693CB65053BF56062972DE5B56E950AD3B58BA187935BBC3
7DCC97D12D866DDBB2E9D6B02D4ED0A53C6BA6B301D3F42EEDB6BED24CEA54F2
A86A1887361F7897A2D28A562A935226FF823955C3AEC37426299AD32E960DE2
CF2E3C9CA94D43E219F06892F0F79B02434ACE821D263606A374B64A01E25C9C
7B71D4347CD5D07A9411B6E88C18CFD9B234CF2F2D603D0260B53225714419B8
C988456CCC24B81FAD59AD71A3EA68BA6A9A900EA9398CFF7BF2CB6AB91D17C5
793A8F9EDC7858C953AA3EA5788239D1FD4176B9C310D775443680BD38AACCAE
08206EABF5E61E8EB6B71AA4B19F8037836D8D8AE278B7171B945C5AEDEBD3D0
8153CA578EAF17D2B2A7B7B9AA763F56FFFFE98E8B960C5B942238491264EA29
AB731DEEDBE78843300158908F77C0AC759565A2314109D6F3AB7D037E509C5D
A4A954235A57F0F59EDB31F78C17CB202849141A1F5FC0C086DF025BD411A9D6
5745FCE585256923F98A70DE5036BD9C54DEDA6D88F609B0AA79104E10420C3F
67E491EA298A68097564A90A2DA6A2A2574BF892347DEE8E7A09633AF7B2E1BF
75521FD6C2925E38CBE6CCA897724AE8F908EF485539C45C6CF62652F79150A2
D35BD4580DAC8DFCB09C9B2F0F3258476531B36AC6458551956CA08156AF9C33
D3F197E87AB3C26371305DCF1687976964235049BD3E3CE70137A7B7FA82E8E1
5F366CE98A40838258D452E731374A7FA2B08ABBB932D5E6A03F957B7C64E89B
B59C4ADF07B4FA90460372E170BB98B788972C8F37277FC53686C2D27FFEB476
65EED274860C3BF880DC2F6C80CEC4A92BF9FA09EF0F76FAF0533551DD2C8C2B
DDCB8A5F93239B9DB45E600F1C9F40AFDFDFE2E7C19B6D1E0F9382BEA9878AEF
1CF8DB5AA29D60B224C9B8872CD9E55B2E3AE3BD97E3D9D52215AA05E690FAA7
3EC216783CC4F106FDA563F8DBA452AD22FF83BD861FCD07E1302D6A3AC105F2
8EE6A2CFEAFA21AE6C39FDE40B9D08EF1ED2E41BDDA53210944053DAAB56B107
5A0C3832220752D104FA14EE869F741128948A218EDA86F30574CAEBB8230076
EF42FBA55397E2CC27E11DCFA24B47253A03A99363DD7EDDB8CF9B4CC3BF7B29
5FB8E3918CD673DC3B1859B9B68AC9C092EA151A6F3762571629775247A6AC65
DEFBCDBB07BE8D8CFF4DC312E6A454DCCDF83FF2BBC7B17EFC05DAD545F7DA47
1CC77A08633A53B62B760DF589FB2A1C0D78314EDF4F4361872DFA2C65EB44D5
CB662BE0B2839CEAC16D813DDFFF35ABD92E13ADF85FA7B62AFD4348B8790328
14BBABA742ECE84EC3C70C8281FEEDE824560FC686802E49EDA9528B7D8F8724
EADAB1EA2DE9F76DD4113C25175B14083CDDB3ABFE914A9AEED19BD22F6E09C4
198C7AE63EE63D34A6E5E6483031F98EF3E460553709C60CDF17E6D6E4E78CB9
D61F3FD30E78D7EE3049E2E505776D90A2D1A68B51C0B83856E9927C936DF456
4199A66A432D5FA8044190358D9A42B02D8D79081A54EF4F7251DCA4D16C84E0
3F2249F606EE1D4DCF4F15301A634A43CD2AA417331E4921194F6F9B939EE166
3FD02D1E1D74F22C4DA4143A4D5C2AD9BC331525A4BBB12EA7EC525CE0D7F6D7
02247E93CC25E56B176A0786B3CE890314191082273187F24F9D209D78E0A2FD
3FA71C28EDFC157CC5F6750F1A32DD6B38F76BBFAA9AB9E3FDBE3B65729C39A7
D5C90614F22E02626ABD343F3AC0A9698AE84CBA2D8F5378FA26179EA32176F2
464A2652C19C8D31C9300E613650121894B9D280C4F16906654393ECB9D74206
B1466753DCA4A6667BB22C841A91A8AC118812C9BB0FB24D2166D5DDD4EAE075
395D7BE3CB0DFED4D966B2FD281DDA37184E620C8C9F2834C6AC70503BFBF3F5
EDD60A8269CE7950969557336AC8DB3B61E01D64D56E8C4CBB401937D3114220
AD0792429566BFF55537F41DC5950A76B816F8896C4BB18C575AADC6F5886763
3981828EC2EEBBC3928390F72AB65858B8AA6F0EDD3A3763F5A8F68A0B93B9AD
CD647D79A3E56C4B5AB275FD52B825F9C86582DEA06C1FBCEDF42069D00CFE14
02347AA07C49D2672C513510C5F90752F7DD417E32DD6EDD1689FD3081EF84E7
86D3F04F8724EC003F8E8C117DCC0D93D513E04AFD9BECE706135D9789ED8296
F3959B3D87FE3E4E2B176AF68025E0C72F52165A0DF06D6A2ECBFB29FE4D5CC6
EE8458FEA2FE94385B2AF841D9A755FBACF6167862A987D153AEFF6650578358
B43FB420AC4CFF68E997B6F7BEF0C52DB9469CFC0E9E9A6D7958D9C8465C0AD1
28085AE31D620480D82B5151EABE7353E18FF6B1523DB565BBC3A1EE19170598
C4E94B5A82490F5F3EDCCDA8B1329836CC6136E0B2DC8292E36DC444F34DBF0A
476985495B8E94E473052F20C5E417A6AFF317746B50613961F9E542A99E1E9E
AB27BEF2BCF74FB29855ABBE60E7A2F5DC169BF13C56D9D08860763C7F8F92DE
AB54453E6A4C7B7F667C14A284047744C14EDA3CFE3DC73BCCC0F2F81D7ACBBA
A1B71056D018CA5CDFEA1929E0FD99044E1B7AFA7834A95FE1307D53A8436600
3FBA0A0255ABDEB555EE5EA7AD4D7782A8387E49B8F03ADA7C7CA74633545ACC
6E1B0078A6D40CF7C7D8E436EE1C70047BA88646BAA9D6F0E16636DA27AB6AA1
6C638A6B48382CCDFFEDE240D483420C8089E81DFB3BE958C865B2B9A0705095
755901A327881880298D9DB49E020D5A7E6290AB1C4B10165DE8C3E9109949A8
FC60CB1B458121246F0C2147B13D704C0067DE90B53D9163DE8672BB96AF649E
3CC9D18701E91F5A47FF6E933E21F0F0F9F31D06A6F3355819580C478B6E2A50
9CED4243271F069DF61D27D3FE8CBB25636F48E6A41F205D04A802E45FD0239F
0F41E86F2D4EEB998520A57985CEEF4463EC7CD398769ACE9F56B1616DF4B6EC
47260A1A82EDC3B258C45EE70F2575FE3A0DEF48E5C9008EEA4F990890CFA24E
B5BA14B6722F4521E7C552BCB2882C53BDE88CC55844F1A036864BE76727743F
9266BFA212BD428B67BDB8FA30947DAF090BF54FD4E7B01311521458871B0C8B
D1AAA6452B05A9E0A4D4AC85DCAD1DCD36CB4D6288560DD839B975287260E0FA
E00E1369F7ABE64B951812C84BC29D13B78FA281C6953833F378FA3D5B296449
28DA32EAD64629BDED7F973655A8047BAA8166A39AD81188A0BCDB316CE04AB4
08327D5BED24A373E6CD0A8650EDD6F01D290275630A7BA34D7C65622708FB34
3B1EFDD4C09FFC7E49DB8929F2E3891248D81727E4DDB392685584B5BDC9308F
35A246EFDDB2CDEB75F63F693DCA492BCBB376A278F2D4AE601E817965E370A6
CE358A3A3368746A027350A9FBF947BB7C46F0C949D8A718026FA6E3BFA81B90
3519E95194C314334242A37FE3E0F8CC792879EBA47B6EF16E2C6DA9D1EB555D
555A07564A9D3C2275458700FD01CB5E99962B8E8CC2D6A52E0210B9848E6FB9
1C81497FC1AA96D6B4817323D6A88E851D672F598789D1EE0B99F19132698163
478C02F72EBB0DDC10C55C02FB02663AA47E2BDC5A51A03F48BD32FA0B0816A0
C7C6B4E3C8CF98D1B82FD0AA19633433CAC268C6BB20D3A288E01E2B9173557B
D09FD610F8281F6F34EE241674A3EE2645DA90652D589681C60C4FCC6A8AE100
116920383B0A69281E3DD8A266D484D28CC30F9DC21D974400A8C2642147D4B6
52A8F1A7E0B77D82D6A36B6B588ED0ED38C61CDD2A8431D15BFD53F1FA3B8DF5
3EE8E41302E597B15C2F640CA86F2917456CF5D301929BE09F85FBEE99D21B51
2779E121066B46DF8C2DC29BBFD9378D8E898275EEB2B9BB17486D50FF253FF6
7EC9FCE378C4940303BBD456FD31D028BBB565B96FD4E4D1FF377A5AD37C15A6
173CCBB15CFD2FD66605EB29C5526F99362C7693B01E7ECF132C62BDF74FFEA4
B0CF559A079F2FF1C3615FD8AF94F0747C51AF4683EDF97728F3068203896C93
1C86081B9870A584F81C6C24126DD123FAB23AA37B36092D3F6CE83BE0B858CE
E312A4C003B01CB922571B8E5E7DDA3913705D4DE85889C1086133C916B97604
9158408EFBBC55FA1B1F3F3E031B7169E8089525CECD505DC35CB17B6D8F433F
9402B197152704622AA4BA96347B69E844752017BD9301866119490253B6CDC9
7E1CC04D2640E97679ACEA830AB447B3B980521CA52FDCB634318CACBF994B41
4731F0AA40D28BE3700953D590A62AD8AF0F977CD9FC6A5B91EA844AA2981BA2
64E7B739C4088A25F551F578189A3285E5F32C9C8A8FA9E7F90D27E38DA7BAE3
3901AF57C7DB9106933246B30E960A439F315C4093F4AA8854274B18E9808EF2
FE36B36F9968B5CF9FDBFA11DCA0E08D087C4D099838554A169249B307AD318F
9745E6A9DB8D45F1EBAD4CAC35152F1EE78072533F8900CC3A1869BE48305CFA
07531605C233BD19F3DDC54F3DA89A38A4C935C8D023CEA0AA6B857291BCDA9B
6705F0B062A78EFC65E27CF5C83361C2AC17638689E052523D7558A09FE3BDAB
6A282D97A07C671850972D3CD9AA74EE5B605950611393C08541403FE386DFAC
2247BE094A885352C70B1CECF2F9DCA91DD007AC7D759CE74D6A9F75B373FC70
31B45B179B10EA85E741412DF41F4C59FEB8AEF11EC7D1484A695673D7CEE75B
91B36DB3081871CDB3987169479C468004344921545DD99DB567D5486DF8C298
64621BB2A03883BC623D906EC7632CB075B9D013C9266B223C04E45A07BFFBF0
CCA7BF4BADB8D4AE414A1410886EFF8D56DB118E81068DBF528C83F702F2EDF4
E45D0FEB7FD43B1BCCBF20560D772C14FED32A6D10966242774A0E978AD35C01
AAFB04FBDC7B4B8770D3E62C7EEA9759D337AA2628F08079CB5D0CE2CEAF2D85
E987DD9FBA00895D87DC834505C606643E0ED45C2BCCA0E3448730FC94AF580D
C139ADC11FA69DDC5020CC3C14EACE61BCE6EC7A9E3B71DA8E024D71908160B1
EE7C648F246AA8FB60C78AC2398C16112776678BB400C75DE3A3E70D68714FFD
8BFD9E00BA27005CD6FDE60CC49B767DD3BF6BA86CC368E9D29C6BEDD2A467C5
8639DC0E0728CAFFE3C5B6A3B3FFACED0E119E5ACD18F96868A8BCC914FA5EB8
2DFB0B03138E86C15426E4FA49EB9622E45801FF0A29945D6FC7A2D65314D2BB
69D35F3F089F755BA04D5D03A83FE10DC51DA0C4BD0F9DFA45413DB1BCC3DA8F
5A3D194C1BA4490251325AA04438BC14D47CD354A980A539A617ACB9C702EADB
545806ED3373D16487801F7A6CFE211D8F914B49D4602BB869D5A85CE51EDC81
601C6FCD650275C9828C9B2131051DBED189118B9279A11243BF04609FBE1E06
9C0B0ABC6B5C2A2B08E8F5AE4C1E037041529A9E53CF6211D6F89B3F9D78E0A2
FD3FA71C28EDFC157DF84D2F45B211A00225A607A5E867D601C60088FAF1AE5D
D970FD1BAFA2CFDE8A20546520EF3367BEBCD43247960877DEC27C2DA43A8176
62FDF1896DB204DCF51404875DA9CBAF21DC1BFC18242EEBA6A5AE45421B52AA
31DA19DA81D0885196DDE3331E23EDE760BBEA210077CADB81C773C3EC8920EF
E16FE5C7A72657A80F1CFB288E5E944D65E08722DCE6A5762EDB87EA4AD820C3
5920172BC16F63F51819C4206CB45D52E88EB1C042E28A6DFC1C6D16681FB947
7E2A1243CB87523D2492EBC0F85F5DF63C333529F06FDFCA1636023C3B45D998
37E560B854446966D0F4316983578CC350251B4474B677CEB6C248127A35AA5C
7691B72AD442BDDAD18F30DB190E4D0046924EAC9BDEC7AD1230772D7B98333D
5398A82465238D57CC64D9EE4D3417DD8BA249945228E14A389F089207FFBD60
3600E77410A768936DBB1162F16ABBA50F261D5685560A2465A0565E91E89D13
35338DDC277E410104CC34ECC71B411C533A5CC6E235B63CEF024C8BA29293B6
34CCD345102C54FE2208132979EF8740F922F120AD44F28BA8080801F9BC7611
DCF9D6AA4A8651177CB856C986119738E420E03ED77D9824DAA20B84FAA9A2DD
D4158E9AF332256FCB3EA78A9EB74B4B091BB5B674B00964CC2272497284B49F
D0B1A273C1EDA6B778AF995CC45FDBC6DE448491EE057D1A0892D6FC840E3AC7
988F2569B887412982ED98260DB84337892A232A3A1E688B8068D1DB3717525B
37D33DC7D4DCE62BC5140AB590C15346B95A72B52D8380C5112F4CBCCB78C3DF
9F8D82D9EF2CD2E03261159C7F50054928B9493CFB72DA0F5B5B75A7E3C6A182
18DF587BD534F0297E3615F4E68DB6BD2AE92B0B1D5F1E1C12B0E61751FE10EF
24A0AD0FF9FED81C2B83BB3238BC779091D87E5D195DBD7CFB9AD96E1004F968
AF583ECCBE6FE0329A031820D4D1DA9D11F02ADA84BC6E6DA0AA29EA8B96B98E
9CAC0F97387B731F438F86AA00411D4359B3AC5E1A129D34E4E1DB2ADED17246
920EC84462A1C4A7008885277DF6688E3873FBC7A10EF4BD172958717963AFA5
FCC1C753E473E21EB8BE0C7C96BC7BD5C0274440824A95B61CA0427E6CFCBC31
3ED9F5F9B0D028528F61F0B77F668BC7CD4399F08141D19BC64AF0B2552C97BF
BD1C6C0062488763FDB07939C47EB3D323D3C90009A4366F34513C6FDB2A0232
D1BAFFEA22CD6D7EAC386165819C19C75470FB635CB7271D8C8FE3DECE61CE27
31FDDF7FCF2AEF7CC2B1EE7095F485BCE6F793CC26242D918F052AA2F06CF217
8D997C4BAE6D8646785C0C82A208F4F8F34A3DA698A69BA804B9A8B27DF80902
AAFD2B6018DD0680B43A5AE7900B43027FE37891837B822BC091A27912F60DE0
2E09F6EDD7742C73BE07D03DAA4EE95D353CDED25EAEF73162A697698F8925BE
31F7E98BA78C2B52607F5AD63067BF47432AF95BE8E7504AA1542D7B23D36C6B
AA8338AC2D98DE543DC31B759E557505A1366EEAC1142E6E43E7C50DD0AF354C
ACDD111DFAF08A68119DC69C2A9360CA05073141CE21883E3595088CEABFB137
634D2AE8694C53BEEBDD14126B4825CF63C13B40CE21656E37A0FCB6836AAAC0
7BCE893A76FC1FA1CABA526EE65F6439F9FA6F27F763634C662A001B2D429D90
F2A70FB18CAF8575273D16EBC3E54475416262747ACFFD9C16129FB088DDCB10
080AEA9DA70289ECDB306F226579871CC67279A95F558EB0BA035576072FF7F7
722EB48E8F701C11FFD1B7F263ACEA49BAB119C6057DBFC2B0085C818FDDA774
EBDBE7A95500883E675C5C28DB99242A8330E9DDAED388DB7A0B4FA03C84CA36
F6027A26FF421BFCE5DAB2D853767FE8A7418038277FAD0E908C48A1B8FD98E4
EA36D07A87F9D6C0E5D31A2BB9B1494A567EB5016EA36C45F006BF7BECD97F89
0B6847370B5BC9EA4EA774B0595D87C2F5FEDBB500ED2A188680E41CEE552DF5
5A235EA7E738E9BFC10DD4C2B6ABDF8794929B68C055789F3E9C32180B57AE8E
CA4C6DA654AA4124D577D774A217D4897A261017117D7C5C55AAEF32B582FE54
F0B93A85F0DFC1C267798F5718CE4ABFBFA159B07ED5C93D976CCAD20691B072
DD49D3965FD79D8348CE3C1F8B633847DE60058E645058E425653878A1F10CC1
C84D2B69E1136A43B9372388E591DDE333E185F4E23E0A66DDD15BDED1FAC380
B91F8DE0F875032BC8A1930CA75318F382399E28AB06FCF0065DE36F91B4DBF1
2F6C352FA5F0492B73CCD90086FDAA14AE0CFC2742A66EF2BBB6B29D16487C3C
FA6F892AF5C05879B5224D3BB7D31681D75354427E16368E1BF924A8A0748B40
5513A645769B48F4B3C4262F57BB6A235DE12B38D5DABBD8DD0F6F9FD27FDA3B
150A099993B56B83709540C46BDA6AAC09689487F5E0EB021CADA860F83B7338
75079EFB568ABD139F70C1EA8869611D9D4D5CBCD692988A989C16915E134A47
A4A117A55B66ADF5E53F82A191848F9C630F52EB497E89B5F145D01D56694106
9B76780164C5A1F030379CC9E763CF518CF9E2DD473EF2D166BA507A1EDB1316
16EFCF91246FC75DE3D8AFCB7CA1B7CA84EEF0FAEB46F0B4B88192BB6AB1758B
6F406C357F05A6BFEAAEAC4737AB470623102FD547652082269DEB7CCFC1C840
AB18CB9C2773ABC9DD5B1A5F83AF6A90C0313FC09C2F4991EDD9FDFDB76A9F08
5962FE7F1251D652C1E371D57B511B52A4DB8F69D76C3BBB447074D1103036B6
95EDB12D5762D8075F69A145829864608FB4D78854124B117B2F35A1E2F724B9
928D3272F528B238359944962E09541FBB7A00956D1ACA7D8C2350B454C620B1
E6D5B8288CA707E7FA2C69204A46083988A52547BF7B3C89184B4B6AA619D660
B1402EE393F12610C83BFF918FC60843D1751DD0FB67FF10DD87E3187B485D84
58FF1D6A46682D801AAE769BE7F49BD6526B9B1584A4711E28698C37F1DF9A09
03B2FE9462811FB9AB1961065826D34C38C598D8626BFED7CB672F132E065C48
463D49DBB6803FD753A9E426992ED6BC8BEFEEAD4ADA8477F6552EEE7B621ADF
DE8A66A223AD7465B8FE6E531D9770EC0ED49AA31FA3F91F3F32707774DB00EB
977C5EFF7AFE7DC3807891D039AECEAC3F500A09579E6604D10675F1D60FCFB1
B6D26AA24377760FEA6FEE94FB119E8EB366AA299FC67178BBC57EB673F38730
E2C28D89F1B4B8DD91CB69558534CCE31AE7E157D0B060877F9FFCC4844A5984
1C7C7682105E23A374BCA91885E744912DF3620A245C8A5B229AD308A71FA00E
007F6BFBF96C927E23E338A655247C509A950BD2C3ACCFCBCF71FAD299F22A14
34E7D661083C7F8D02F91CCD580EA19FC26EB49BE412452247B0D8CDAD32D698
2637028A7DB25BE15F0AB1195D2F25778C99A04E82B1BE8D3870F6E3002F6E79
164A87AB4CED4A848913531321E4CCF342930683CE8B995EEB19420CEE8E6B3A
012AF00EF8A7E879A61719EA286FE90C2E836AC107BC883A33507560FEC3ED72
D91546DA4EFC75CB69B897C9EA83852D31F31DB5D0DAA584E4FBE6EDDFA3B58A
343725C742A8ADB8E2490D6B3B48CCFAFD2392C817B8F7FA666FBE36129A3641
9CD98EC0DD45A62C8B6CD6D07686293565232BE739AF0B70E5046A4A17B5C3E9
DAF063B335EECF830F146463EE85354BAF0C4AFBAE8CFD73A596F7C7AF437B8A
D4F2F5AB3DA5462EA74965A151E84283C2FFC9FBA8B7F9D8DA8836A078A4716A
24CDF975CC7EA03D80D1B3F78C5A27B19C016CCCF8AE794B156F8A765F5298B1
2F090260981F6C38AC8D43CDB3A383FE182EE89A49C28C2D635A298D6451C6B3
D02964A9D8352191AFBB572C2D61BFCA954964BD918A9DB9077118A042EB52EB
7800276E7502DEE57228948FA48884514D67EDFE7911E4EEE0C0AD432443B8B6
36C43D2B50F1EFE12D2352A8DFDBEB066F94C0F37AACAE40009D0682CAF5DB88
E408B799859A65C143CF499E5E03218E29844B569E2EBD6271DBA6A5B619FDD5
8DB3FD8695CC7E4D624573A635B65951DC366F76FC5B4C11DFDE03CCC5709F6D
806CFFFDB6FDF9361520D4422239A888B8FC65FD9DEFC68C0C2B37B06923F120
D2DD250D693391DEA7CB26D4A418E48A2989167B7DCE22F1803545AED50CDFCF
7246DBA338D269EDA4D6177AD9173235023D5E0F563059F9959F021413C8DC61
3D035BF22544BC8487EAEB01B65023A6FD20406E7E21859EBAA5AC022E22AD61
2B2F013E31B97F10172423BF5A5407F54179190726592F5D4BCE6738CC357F0E
B6F73D82D736703874D4991EFD61104D18E85A53B73A1FA96E48942DB6A0146A
B08A3DFE98951927F9C3A83202250796C59F8E61D57DE5ACECFAE9F3CD33E155
543275D8C75FFBFE827E47FEB12D4C3841165CE7E2B5F9CD05544030F7BD81F4
954E3E9F458653B6CA43CE1F9164BB0FE39FBDAB233679C8C3675A673E6E6554
D774D715491E2407ED9F8154824B719C8B575FD784DA7688FA287F7069D4808C
D9D7C18DD6A189304A5B5BD93348951B354102F98A86E317AAC4CEB41D8964D4
FCB5E4DD511B6A9D5A0C7973AE8E183D32A58D3C67AD87A413F6D9746B6BCFE2
EDBF4A89C4EE9C0C48A72985276AE70079BAA0ABCC95DAAFA46637704C683E6C
590BF2EF885BE65A9F57662C7908E0A47D4C92EC61C5342099C27D93A79D9C9F
278146FCE5B34B8CBD7B6D29896E8D1807150C2282F119071A2E23A9B9F38145
F1DACAB2F44A3C82D04E639C8A3488DA9CA87BC9F910524EEE46F14F2E5DDB7C
197D9B33CDA2861D1EFC1616B16091EDAC559A220F29084DD86CD873EA8E7DF0
9B18829BE2523F89F383D270C1312811B1D3A29D3668F7FBE41F4EF6A81C0F9E
BF9A4CF024C1D10194D7EF3EE7745D6460F94622AC516E9D777D6C65386C7E60
7E26481C02A184638BF92CBA44AD89CFE59081E3EB0AAAA7D87D8EAC69E3C8B7
7D780EF389B8367EC78E45BBE693904A72A20A1F7C70C68627A5356470BDE95B
95F19198D5EE9A7DB22D584FC7B6F9C35C47D639FA4FE1D6B6C4C7A6F71524A3
FC7E01BA3CCCB302F2F1DA611EED5AE7BA60B9974A0A2C7449C76238BAD444D1
29DD1673129711D3BA7C52C08E87AF023C833F2E36C296B4AF16F3A921AD5E65
45C414346FBDCCF69F29187B325AB3AC6F537AA03AB6FD0D5BF4C9BC3213A5BA
19D27374316C27000C17941474D1D90B1B2F2A74D00F0E54CD8D56C87234D559
4796765CBDDE8E2C7662221E2CBE5FDB8E63580BC6F3F69F041C7D00EE39ABE1
F010512D099E6991007574B51F1790EA75B813598D80DF5253EA093841444545
D7177A3F0A1E7CEBBF7EFA1DE6F11F14A2DAF8FD6991020450E767F2BAE509BE
09CD82AC7E689BA197B396CD462AFEF719B98A3B71E2A4EE7E20EF246C6E0A3C
23DF8013D65769CAF3BDB6BAA50BABE2CB47D7E251C0724CB34C69B407CEEF63
0162F27380860A97C486B629AA0476D37F812FED3DDD7CAA05A8DD97A96471E4
C723CBB45F0FADA7995818043B761F41DA28411430C42A3D1366F57F0124EE7C
8370B7A96738A152186EF35D59BB974980F8D0478935C577AACE253B118E0F3F
CD26977D99755C786C272911BE7935015193246FBFDAB3ED718CC8AFFDE2BAAB
56D5937DAAC2D54DD4EDC963927D1BA8B8233AC009EC59392B7E3FD59E27B303
7FD1752DF6AF33E5A6722A26ABF5A82FFC70D5688069D3A61089A2911C7D6C56
6DF75C3281ACDC131428CBE0BE100FC2D83D762E93668C0619E6C0CB4C42F5F1
0BEDDA8DE50A06B0937C0610026DFD8ADD7A7102DAFDD18952F92018C388553C
4C1DC0A7037B5A91A910B6AC680A894F4CD10296D1AB863C95186206F7453C17
4D514A9C4125B5A1A79E3CE4232E4A1335F1966DE7C21DF3510978F78875D415
94E6DDDE2D44C7385CC38494DCD832CC94C08F0492155ADDA8E704EC5CFDF86D
3B00CA7934C296F9D359945ACDCC8DA70D5339C919D9954FE91E079DCBA8B8FA
04C041A0E29BAC5703A83039CA96985A76B61AAE665224EDE522641BB0C9DC62
EE166334B9919AD6EF2876532B64A356B32A047802C9BDEE75029E991753E678
D013B8AEDF306CCF2727CAC4A13B4ACA339E375F376B7BA9CEE602E9075C5E50
9FBABC9016E62D7D5AC2A95EE29650B98ECF391A95DC4C962DF3F79C7E16FA46
3D1F514335FCE76315CA77389A431B2238DB083AAC5E39450EF20451EA02E057
2FA58CEACD61235271A975B0C11E533ACF0668F3288A152CF5343F52865C1827
BBD06810473DD85A580AE391C17BE4638F1B649958338E69CB56B870CDD727F0
B655F71017568EF083865FAFBB85EB69A6E26A45CE2C98622A6A385B447E164D
B7299AD6D1BAADEDE43E477FDB504AC6B808540C553DFF75F3A00495714800B3
06BD5DC235EDBFFDEE3E46DD584F04936B53C3C81CD9E76D9B6CCF78220F28E4
5A84B0FF35C585C18B19C61B51CA3E6C3AE72F666D681A4FA8B2477893175F30
08EEF551C2574B69A17F5C62AD9CA923E685213D53BFACB55EF49BE17964147B
02C4CA4F0806BA52F8A891A88B2F519575FD86F61DD7C7EE5F015B1BAE83E79E
3BB86BC0CFF599A80F5C4AA381B8581DF3F82578AC6FFC9216A06EBC754DE4C1
BE1E185A26488ED6138CF334D63A75CDA61370B656188C88BD1E7273E1A42F36
C0C6E0FB68F94CEBDA1CEB0CDCC489BCA1DBEA94AF6F37027434E22EC932CA5B
E3B470A5800B4FEDC4A99823CAFF87E567B96572BE6D9DA262C5151B948E529F
0C7A21052F1A28CE343530C96B7E92807415CC510ADEC7AFAEE3E54A00B1CF2E
9D4E9F057BA99AE776E482E332FC6F4EBD5E2952106E4600ED59E41847A2C431
ED3DEFC7267AD9DE87E23C236E70E1A6D7602606094B0C91DCA122F0BB3D4FA3
AA0CA96DA71466748187222315252264773FDAD954D114082DB6BC7FDAEB7C85
3A4B7B464A26A459F4A2593310245B1B9E7B8A0B7FF55338A74D2023B34333ED
B0DEE3ACD02BF724CCC2FCF1A0B58CB89C444F4564C1ECBC4CA3C544CFCA0D01
A294276F86BA1443F753A7BC8B7A60E9C5DC48A3DFFABC322A2A3F62BF60D6F2
439E2D50DCB82C026ADAA0169B6A38F6E8D65D483940C97544F888E9316A1381
F8185C146C3B2548A3817DB684926C2123318D4F634AEFAE03E5D4BE6B04697F
F3ED2A83E6E7875D6C2D53D4216E11F852EABDD845959D6C4CBC644B29781604
7EB63717E2C06056A800155E42E6B63290DABB71D4D1B394D7AE82EAE4C82760
C5849F6FC5FB394169622625F2493AD95E1A2BFFD0BB023BB23B95A95C52C138
94C9156315E5AFF47E4041A45DA7B0CABD8DE5F42B0018F834D058A09E910DF1
314D1B5A2E3CA886E10296CE26A4E176415F55FF32E4308FE22F0D0A45B8D17C
B74BDAA4BFF6DAB5380CBF6172F37B84598335AB3A61FB3C873145863BEC1B5E
8CAB530411E7B006480769434E9BF13F872380603A47CE5A30AE40FD497F4586
00B1A87AE31E65B7EFE7B1CB025613E53343001CDEFCD8F5E62795B990DB5F01
7A12825C0D642263A70EAA178D11BE7F34711A204432DA217576D9871A8E8784
028006F3F3248B5454ED6DC729CC5070524D1F1367E7D491B5803E4E32D24FDE
0B7C56732957AC35E56C635F6B316C147E4148F43F68B433E736D2E15CBE3A2C
9D93556A1DF4CEB57A1882F307F0EE099AF080659A1C90D89200DDB63772D73C
36E0280F8ACDDBDE5CD4F70A7A98F5267847CA1EA003CAAC24B337D6B2A8AA99
A53780AEAC7931FBA708E4052579960B3291B0BCB3D6138198E70881E7FA290C
6A3B164722FB8BD5CDC14E7E20CB3586C815A75E1C0585250D9F6F52025D82AD
E11AFF1EFF8F6FA46187E0BED9DB2F1525FF742755D9200C3C1FC2E172E0DCE6
76DAC7827316D2F90B3326C12523D372BEA69688A21D6EAF601ED4810A03B876
02F6FCDFB887A83C42C50F08E66B611F543149B7E31EC9602D4654DEB38E8E94
225D8F864E791EA6689395C19ED992688C38D5AB822DB77434BDC79A29F57E30
98ABC7EE49F007589A2A08E976226EA7F091A006D3E457F0FA404657430F1CEC
53881DF1B3457BD811E6152E7A6DA01FF8F441690E196B19402154F4AD4A1522
5015497AC2A59B07C199F94E3D08301AF343C837324B9EA595BAFFABFA38EAF5
3F517136457774C464F3D84202CD343788CC991B61ACB6AD7863E30EF2DEECFC
D5E0AF64571044339C2037CF6834EB429617C33666A20F94506F7AA03CEDE934
367F083F6561C939669E28B55BC3323D71FC7B4221C1A677B413EC24C29DA1F2
D33041FFA5D3B62F29CD0570748C3BBE64AC88813A2339892CF290B7D9CD73B2
B2A80AB7B924F1BEAB9F601CDA2C40EF93971D344A24F67D9508E4AC3D5068AA
B174E0965F73E7B3A5F532B99D116357AF029CBD77D99A1656CDB76C9282269F
570C0B57ED78FE33164934EAB70ED3852DB084C16B6097540C5C81A8CF53AD64
448E9130C01AB94B0657A5490D7BA7606326881C5A6CCAAC22D5454B2C1EB503
764C5B0691B761FE3254E951B3259B2EEB4FE37392533D3695FA6890A620DD86
3BD5364A28DE4283D9697AF2F4D165B73683B97280E3F8CE4547F56244DC6838
06DF7DE0E28FE4D056969AB8C04466F6B2323849E5A87116F694B78DE928155B
9D611E085902458C96E9107074347E144EBD38FF9C114D75E7B867C216989AFA
4EF66975C7C64CE5EC2AB958361D31BD648E1C0291A57F6AA25FF78D0E59C262
230123C5668C34A7178C9284E340D18BFB0BA4BEFE101D5BEA3B3CC5C384E1FF
F89E502CBB5561E9AF3C9B374D73F52611F17AAA550E93C8B39DEFE59FA506F8
812F8DA2BE72F0827246FCA44E4A772C5FDAAEFC70EA6D36AE941E3291793B66
598F7718C18CF6B0D1B1310C75AC850FB4C642FA3710C2C99051FDAA642A91F1
947AAB4A780D034BC00B16D7C4D77CA697B044812DAAEBBB8006F056F294A4A5
B77983DF1D1B3EBC3640262FBE15DEED450E81E397D0ABD05A9CB3E301CBB6E4
5FDA05D04DE260D94722956833588CADED91C5625989AFE8DD9E0B1844B116CE
5CE8DCF4C788F037BD3783D1E73023BB66A4AE15DC7959BB36A10B51E9638794
BEBDB65521D0010402575DAFFF833C4D59C1941E14E0BAECD4A9FBA8B9100A31
AD1DF7CE7CEDF45D8D75B8008CB234A10836AB34663A141DA69B46D41A04EDBD
E8A440911B183955048D808915D7BA588590785C36322BFE321C6361D12879D7
8AC6396BC3936BD40FF1476FF54922F2FD14A340951A0130FAB6CF0B56BB38CE
81015FEDF0CC3F7275F567D40E28BE131B0E4314D86EF0D6A8F840F462D9B2E8
C1F2B51F6DA60AD71029BDA0BE43A26E6F18EC0E9085AEA66291B62D69D698EE
B767B641BCC569A1EEF8A12E6263CE2C073CA42993FD8CECB8E7948261EFEC90
FFF20B1FE3119DA2CB9F6DAD1D6382F999E9F0692CB34C1344C7B86466716272
82A8947668FDF9CE6C611CD1BE1A3FF133DA6279F25F80B39F4A584B970D6156
292B8DB08399673F0DC75F1BDBE806E51B2946873E90D509B25853AB0F25FCA6
BB860E709684EA675A3C3C4F60A604BEF0EFF30EFE00E05C08AA50EABE80B564
D7AA72D05EAEE83D45EA12B8C2EBA316F10AFE920ABABE1FCB5723D66953BD9D
0A313F39A6A3DAAD30374F96FCEFB063F4E02A5A1B8F12733514B688408CA41A
769DABD9518E4DFEAB5DA339847235425AC5056E7AD9D54E4DD1BD7BEF204EEE
7DE594518B78765EE60502B5D4D8FC36D030FB2B0EFDD9A57200A82974EAF0D3
6C036B66FE05FF7E29BBBA2C52EE0385F33690BDADA2B0D538EA64AC7CB9682C
E60E17947E7E675D19901C7E8272CF0D458A8B0CF51077748D1F0A95AB030712
E24D053E101C9FD35AFEA96E669B1101E8644A4FA79BF0E2BE0D5D63D4C494AC
CCF815B9A464B3C0D47AECF229AA1EBC2E208024F3703B6B0716899B18263C29
2E1E8332654022615883F3B3D95ED3FBB8E563C2CC64E2DA3631AB809AE0FF99
F0DD777666B14EB7C80CEE58DB653AF6DEBC59D3AB82A2891C3C5224977B9464
55E674261A0932ECB029CC6CF4EB93729D362EF1C610E85FBBFC6151D81BE225
7C3E7C876E836A1E6009BE548E105149EB6052FA14D106E242C213CB237B187A
7B54F41B54433526B5BCF13ED43C4C3DD6C02669F517D7458EAA898572455534
CD8DCF13B125739FAB9FBEF8523676B7509EA7AD0D2111E3585BD961ACC52E50
F44E54C91326E481093C909067BED686BA113C18825686F9ED9588F06261AF3E
8D1343D17A35A511312DB573060A7E73001ABA76E395D789B19B969F25140187
92CA5E16B365ED83C24C44A68CC2E0C0821FA6C1C3A5B210E9C2146C0797AE35
5583D824B2BC3C6BBA9B877B857DA39049F5887F6C75EA22E2C1A23B0A23E741
9FD67B5E29F807987F3637173FA779ECF224B222F7278597CF205683610586A8
BEA497E867582A17B16335CEB85520A70B252F935F7CDFB69A1F8A67E1041C48
2B300306CB5E11A1DF57C36C6E9EA13C0560C3C8A14BF98C1530A3598F35E26F
2E8ED5D8A0B0A4EF950112B2A40681ED8E00E63D89CA32AE0687DC232178A07A
BFE12694DEB838C8B360EBFFB8D45798018A310214E9BEB7C62F58C1E729F224
EC05FB4EC009EF48E7E56CA2A9F84FDC460E352F0263ECE4B0148610E480FB16
13536FBB8EB7DE66C5F0C41B72060988FE907F39B32311E32A9B1946D8CACA5F
0DCD4EDF3A72A9A4A949376BC805CA2A372CF172D46B6B94412E7CF8B2C54489
E6D6A897790D5623EB7D6A90860842964426D9E506537B3F8B4366976D3F56E6
CF780B37CE39F605793D904FA4650A8AD23254FB4E9E9E4CE34660A7B6C08496
7A50FB5E53F0EA8ADEC17CF4BD5B6DCC5F7E835C3CE7D4454AAB910F223E3FD4
0709EACEB5AC116266894AFBA1C099D37DCC25C54AF0B2552C97BFBD1C6C0062
488763FDB07939C7885FD686DBF6C8D2BCA099078135FDF722D4C99AB28D06A0
A4080A732B877EA2DED6026CFA1807B087EAB33A3B2BFA56928987EB0BBAF4DC
72DA6B4EBF8B9D022DEDBC3DE44DD04F6367E04C3CBB3400BA3C1943B874CFB1
254F9A99F998AE7D06DE000B4293F4FCF1D78EFDE074FA6A057A6822533E61A4
C1E2E7B3AB456D19D9769EAB62AD01CA1E0C4F2554BD6F1F4C69E46C9C220B8A
6643077B74C1E100F1D9DD0E0ACD8468C5EEAB6B8AE5324CC077A3B24AEF2951
4FE023DB03883EB57564AEC4B94B42E8849A76945AE033F5D1C37EC63530A2EA
90F559625C437D4AB2016C4670C92D7236CD1D199C612555168BCFE359EEEA98
E07DFCAE1DA5FBE871D8035F777CF210384EFC671842C40D188F4E304C4610FA
7CCCF0512FDD24CB36B1F63F732A2D472C414FAC37B3A34E1E9C8CEF668572CF
91AC3CF6986C9F252363A207D88AB66A7C0DA4A116B14F03AB13D7E149FA176E
E68606F0B35312506C02F1A2826BBA36B4A8C4D61A96C406DF4CF3A843159D3B
AA527954C016D28FAA91548361B38A729CF1E6DF63A016E3F17980CE3D505216
E026DEA02B7D154B2882A031A276522741ACE718440F9AC620FFF89CFB7FCB19
55C7DC8933C690E226CCB41B71BF28FE6AA68AEFC449D6F2C5850581D95905FB
83958C19FE475DCA7075938672E207A41ED8B17A35CF2E4C380E50E1797F8558
26EAB926A054616AB45BAA486A85DBC2F45566226D9EA08B48360A2C205DED1E
30409EA873F16CF157EABB93758D7B49B76DB0ABB2C2646D3F2500142328D8D3
B40136F3CF6DB796FC6949F82AFF3FF151EDC1EF95339F55314E30DDEE869CFD
0E6BB75FD52D81EEB6FC227022120BEF4803811BEC75CB029A6DB10FCE7B5992
5A3F5FB7DB35B3D7944B49B6283A0129D49E7E9AFCA904B37EDB25A80BF2A041
0C67EDE128761D164A9843955BBFEC7213307B78378D8CAF1E08E1C53C079B8B
EAA3E0F907086AA23BCD6FAFB826793EBFED8F1CDA2D49D7672E195B09727629
C1A422D0405FB9B60B749DF353AFF70433732530AB1063F98984CC6C46F3E412
CAE11A023ED7D360444EDD72A0CC432E23DF81945A0E9729DF3EE2000E417BCD
E241F0C257CAB8981A6EA85C135F60246D47ECC90571044E7021EA984A40DAF7
FDF2FDF4017F94D9D89F1B6F249BCAAC5E185E4FFF0AF7FF5CCE31B93E4048CF
BFCDADF56B75CA51C950537F9643D44B6981772E8546A6D79EFC00389188E5C8
2D606AB2BCD7AB93A8795AA46773CFDEA40374D87CAB4A5DD8C92695818BA435
6E9666091CAEAC8D1832F2AD07EFF1919E9BA90194E24A69649F0DFD0046D39C
47645DD6E78973BF5EB3A43922976B876293A1ADECD08D35588B794EF9FE03CD
D26508432F9ACEEC0C86CA4D7F8BF0DECC07116A05B5D6D42730459DD44EB860
468A7C643142F5804346C1264135E15756B43D90E252FBBC1F618530BACF4716
5362C1E0F6B93CCEBD0545DD362FF49B08C9033A1E95F5F8A1717DBBA7AAA1EA
72855EB4ECF4832F29721F2965759EDA7ACC778D03F409DEB008EB2142A1B4DC
97D164780529938A4FA7BA0BACA855B706CFAD5EFC9D6CA122FB2077E554C9C8
4A1760A73FAC61EF6C050296ECF0188950E744AB53050CE216C0166D14BAC758
B30905B56CCEDE37F37167FBCFA2CC9AF077A23862B4ED64CD18471A49B62240
FEF22F4D82468BE65F424F267E9713229F7B3ABA30559D9E4B6B06AAF0053FF6
A81D815ABB1F31A89E1F1F3F3712315F712F719E2104FC38B591366950DCA065
662CFBC9594DDA8A2D0B424F25A1A8E0DC96E47F52F335D4EF5B45ED1A9CE37E
2A2A6FA2C2D8A082FB786FE87094992733E0E8E7B556BB4DD1B0EFDAF667A918
171169D8669AF155525E2C91A8525079B97D9FA6FE5B7DA4A263813F972B036B
CC08CCB25B2BADFDB659F305315BE273E5D52D4A69DAA10D9AC7B96C817AD352
B5C4397872ED1E0BA765B0309FE98988CAFF8DCCEB5A97352B6F2DC523CFE336
6996B02D210D844B1FA28AAAB93DC7557045787E987A0B316211C89EC7A8EC3A
02D70409252A8D4FA50EF1BEBA5095045ABA7952457E62E4081D591C36369479
139F23EB1F9D299353CDC99BA9CE2DA27F3D413173D9F296B3DD186F8C3F8658
C91B59C58B51B79E9588AFBB6A2D10D335B76934CAEC6AB8785BFB6A876FE189
F7500B393E531E77C5D38E2FA764893C50807D386C31A52984269355B641D8A0
414D327EB4BC88FA87B910008EA8FEC3E81B8D3532498E7875E1593E1DF8C371
9500A4C4A0951F09F5CDA85FDD822B626F0B4DF1B16AC3C8E46642D95E4D5E8D
E9927E16E5582217693A50FD1F5B7569629AF50EBCF7152E3715510FBF60F167
5356A9FECDA71F649EB3C250BFF809D81E427E3BF24E83613E8242308FE26F51
C5F52B538A85716A62F327A107BD87346338B9DB6F83FE557134C14144A554C6
2461266E19E262F020AC43AC01DB8BD67102E1322FD08D6A1AD08B87EDF29D57
6787EF5896E8747BD177565DB814951BE7CFE6591438894018072909D00732D7
1F63668F46B20EDCA647E66B811F82F08DFAE1979E9ADB992C57D4BC9FF7769E
0A6E389AD0B2A5D10CD4C41A40097EF750675B8D8743FC64B26BF9E44921A707
C2CF3EDBA686132F333DCAAE5B6CEB2B2A3C2A5085BB0E87DFD0B90AC4B62BB8
8965B8D22AB04A724DED273BA060E797C1BB765049E61C0B63D478DBD9D1F904
EB6959B1D3A39766501356651F2B690A9445963F346D0667986C994880FE8971
FC86F06FAA5E98124881CD477B308B5B7341714EB80B6C57DDB50EC74C20E497
DF8C5D90DF2EB6F0AC1521FBFD1538DDCF25F9748E9C7C49CDC758CA99C4B063
212655C879F6EB96BB55BF5157FD09085730695ADEFF8C47E610779597A25E67
8DB4EE7B616DD99080BF793667DE800E6DEB1FCFA76FEA448A60401A3B11DCA3
E9524EAAFAA83DDCD78D676E71B6C51A64A87FD82AC7FD782D6126DD787FEEBC
4A63D583CE7227EC10365966AF2C08726F27A20D095709F949F404909374B2CC
B0B57BA8F2F422BFF55CE7D534A2E4DC1BF74D5A454BF4485E2B7DC8C9A39E76
8F162336CEB7BE8A5C27AE952F4946D01DD1D65C1D50D6E1D486FB5FDBEE9826
DA01DD8FA5EC384E9B78FA5A7F6720D207815F79EEF626A126E8005FCA77ECB3
172F5199E5C54611D9D515EEBB7192C63D22D02BB2A5A2727BC0458997642898
4A7DFACBD3FE28A8903CB42EB0ECBEECE10F4D9FD0C5B9E9F3A14F9BFBA60CA6
556B0473D5BBC4C67C2D25384D8E7B9EB31D79E2C460742138982CEEB80F3AA6
BF99216652ACBD7F2F5349E857177D94A431C46347867CCB8E4EDFC64B532A24
C570498BBC81C4FBEB957EBC6BE93183DE178479FA333A00B88F0BA650AB274E
35E9F7715EE1E8617FC7BEC56879D91DADEAA25F850083BE6CC26AE7437664A2
7C1C6EC83AFCFCF697DCC8808A931CB62997E29B6877A1BD00BC1A7A9D57AEF1
E1DCCEEBAAE87CF5DEBCE7349981D834A1E8AB45FFE334532FFF6EE351252820
E234CA2EEEB4DBB360CA7518709F74BCB9FEE4077CC0C490F7C2A4855B442011
F240BB7390D79EB357A06CD67E2C5BD39E004F55F754A8E2469082BBCCC3E63B
027A4C3DF0C328E89C5355F29E7EE697BFFECCAE75C27AEA6C7B73B4B4E4A0DE
B874CDB1570739B1A1A213262E4D4AB784EDEA3CC6F0872C28108F7EBBF5BF77
0C0BA6C712287CC741D17C19DF574028247317FB22442B6DAAD517B60D75302E
7A8703A70517C9FE24A6930AC314870AC4D133C60D9CFAB56CE8F8D14472BA88
3831DE798AD51B71C2CEE666A5693C95962D6AC49F31A5D39135CC8D762C5E53
C23CCF67CA8BF1B1274494E363BF0890FF5C1FB5FC75FD528B2FC34AB914C268
C8874E34F01A8F3E17F33925DFE5F0CF45E34F3E676F57892E7B84E9F1842147
0D2F0274738CB7DB4E9A14291AF15CE3BBD6B3B90E59C99B4085E7065FB50E28
631D2A286B9862B0C69172A7B286134925909155C60AD3A77AEC843DC75C97EA
CBC20908E329F5DE8442FF13EBBD0D06D7E62CE534576EC62AE892310FD56056
AB112633DC84FB7743B5F73E9DD0B021F9ACD205A00D5C6228AA1D43F1C6F0E9
EA338B2E8A829D5D4EFFD8613B50B2DF38EEF34AD0B05A9F13D36244225B77A8
8166768942CF7E11D8AC59AE55F0F7DBAA322E1E5D976C33A4C1B9D5384F70AB
C8F9F74EC9689248EE97D7DC3783A048D871AC6F3464517ED20118D09F22813E
9A8F6B24CC94A37ED7FE37D7D03026506C2132A9A68ACF4E48AEA4E44DD23AD5
437110523A774873BFDB9AE479901957507D4B848A373D2FE906518513D56A96
586FFF4CDCB491617876DC12D9D703BBF1E814059F231CACE3B876EACEA2B463
B4F24C1D3D7510A603C11F295FAC3B649D8BEEE2DBF85283D1B3DD65CB510702
758F21F8DB9FABFFCDE8B4D3BF99190383F85FB9B692A0A29241EE13B4F6714D
41A2DE46FC28194AD2063A1D0C54EF86D11A29D25C36591746DD9783CE80D770
7A404B5B7F34AD778608F4CF9EDD7501A2AEE2F85AAF60771CDB854398BA98AF
AEC951690051A2662DBE19109D42CF3575A4130B81E97C2A9BC215A2E2A34BEB
5AC89CE072710DEF408694402960947DA3B6BF54DA82FFE0222F7AB0E97B3290
EDAED775EAB0D7D553F222A3B014EB44EE9624B0C96706BB7AE92041B78426E4
C7EDA2A77A7C129EE67D6D67C2BC96C880A6B435F850206D0AB69B74A7E9FD53
8C4338F8DE787EF2B604061C0118BEA317D3620FD9DDBF75FB63DB4ADBB1652A
3583ABE38CE55C584D2618007F4825DFDAA3116D2B7E450C8F7B16278DE567FB
37E8F702A228AEF49047078B06C8A968F278BA7BCA00EA900B2FCF2FC9ABBC03
23617AFE301047C9646BA848529E3D9DFFBC86682BAC2D53944F47E4D257CB17
98520F27F65D75B2E795E40A62C9EAC215ED0EEB650262CCC5BAD1744FCB6DB4
032EA0C0ECB7BBC044D8B0C662A0B19CE448D189FB99AF0D7FA4DA1316C3C527
9767142D132F62E0029C751A0D375757D95AE364394FC25E6E0D02C6840ECAA5
EB3D39A3B9FDEF15DA1F1505CDD37755796CD5F76FEA4D8AC7A08A586B816A9F
BE78FF96BF1E3CD52791A35F612F1A0E540B3911A7D28491883B928672AF8E70
6194412994A5A0298BEF561152F82FF64CD3298D11287B46482FBEAD4031D9AB
6265FB6BB647FD9FD95E0A2BC79B11AF3FD1E8FE988132C26317BF8119C2B534
65DABEDF733F2C517D970B01BF2FD7C2020471CDA35DFDD2FA7A020E5B8B0F4C
98521838E9ADF7C3C36287440EF39417ACBBED2D94330DDD281BB30948DBD034
3D9ADA66016E6C568B9C0A0C4A73C9437FCF888AA207280ABF9C548DDAE35A68
2EAD10C1D99B2680471B9EDD0A850116E26EA531F41239765F162569F759E2E9
BFBE93365ECD78C43550421105FAA095002C608D530236299EFAC453F01520EA
D1DE4AA27BBAAB316BA85F15D688F0CFC0B3BF87F354791D1B7F50DC42FCB4BF
631D7AFC04A7AE35A828E5176FBED9684B44FC15E248C657ABDD70332E2CDA72
A006A5C4665EBADE22D37B3C17FFEBEDDA1352E9434AF034C41D79D42A8DBDDF
3452137701A1025BB76A1E7D89CC9FA226B6E31912E61805DAFE3B27F1096E72
E5B935E6E7A9A75F857814C939EC948FAA42110353C8334FF30349EEE1C6318C
25A73C3F5BCA2E57EAEC6C778353C94B545E9FFE47829798BC8BF5F2EB62C24D
60CFF66B2F79DC14D185ACCB8F49A9EABA4F2A2DF08501137CDD9C856FC52AED
DEF7FBA2546A68D706D2B66E8E9EFEEEBCEC7CA22E59972302B9045DDA8B0BA0
69A78FDC06810D5EE81E9779E94E2C4FBEADA86F78096CAEEC2D4A652D021955
4B3098509EA054F165BB8DD8018CEE4B4D4AB428EF6EA84B1C027BF552E25EFA
727473D9E5495C8E3FA89F3E05AAF926EA592C55CA764A6CA7D77978A826B223
E36E496B797FBA887A417D17A69B5DB6015B758F0AC2A0860838C73C979694A7
5E98A136ECE4443993EE94A4B4BD5A159105DCC761F2253E4489192F0EAA3DD7
E33A30C7FAA87E30ADAB889EA09902187DB80FC9524180A89D2885613BEC36F5
2F04FCB575A11390875AA0737BBE5B414C9D998EC18D0EFDF16D6F2CB1AD459E
7541EF3ADC74E565F7C06457970ACA72E5EF73CB4D70E21071FADB7353627DAF
C322EB1973259896AB55E336A06B0070047ECE96EB36F6CA154EF94616E6185C
84284AAFC9FA97879D882E91DEB048FA449A95E6EEB84C22704F3620BD59EAE6
B718F9BC1B7AD6A0F8DFA72AB80E1C5F15D519A1A1B32E78D4CF5D8B108E04BA
B903A27E6B9462B16DD44D392E22F7BA68B8C44821FB6E5818A0A2F0EE20347A
532FC601F1308BB51E420FE7C555196B775C453CC1FB7B431789C065F4D62FF6
07CB0F36687D57B0291A1D127E308A316A01F0E46EE0F7062A5DFCA863D2A259
EA8A5C504FDA20DD3F66E6A867A81C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Italic
%!PS-AdobeFont-1.0: LMRoman12-Italic 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Italic known{/LMRoman12-Italic findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Italic)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Italic def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-449 -289 1358 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD115081973393AA2048ECC
1B38C1B45AAF909E1D0187A0DC16F505BC42B5C6AC12168C73DFF1878FBDDFF9
5CE859CBF7A88E342F565C04C06D9DEE65C66C505D6B44F028A7659B7B18EBC9
AF12D18FB2C70E54D7C524923386E488A5781001B47276F3CCB8173466544141
F99FD85B6BCEAD8A7E1294BA184AC78C372F2F08D8C26E0D96C407EA8F1F5A28
509753BFA423684568D7C86E4655ED88226911F0DBC9B8DF79A35791C4A85AC3
E8EB007E7AA56FA62680DBEEF9E2A976C9F5A863FFD9334B04B4E297D672402F
7CDD0A80AF1403FCC0BF0C5B8BC58BA6669717265C300F0E5EC871A0896CF482
691E8AC48D1CF9C06AF63CD3C7B0AD16E4A0EF76559A251DC81E06549C9903F4
E755C2E6BAFEF9F3FCE61B6426C9C0AF1196BD504C1C2D8C735C0B1E6267C57E
93AA51E6414CE90A92DAC96F8694EA081AABCFCECB0665CBA6B56524CD5CCEB2
B5DA0717E989F874329D4C73CE852FAB8655DC1B57FCD0742B35D37C3377912E
A7FFBFFA9977C6B45233E203C745C84ACEAB8BEEC1A8C5E2B5FAD52657395DCD
3471FAD4C2A70F0F31C29BFBE131D671AA20209028882857976D4515E730CB30
4A404BE6BB5947361A0664A8BF8B33C6456686A1A4F59FA091122433AD0EDA97
E83CD285BF2D96805461215F4A5CCA6B378B9C2B93CB71E36835A8AC3FE2601C
D2B1370B82A4668FF8C1FDD66C5B526E0890BF226625457059659ED51CAB74F5
5FA7945797237B1656BA0B7B7F533F360894FAFD189B50A1CEC76E8E8974788C
239B91EBE8AEF647688A1CA66C7D5D7C0D055BD5DD5A0BA92842730DFD09DE92
3358806250590FF35564FF90E9DF85FB4B082B7806E3E941AFFA6336D4F9BDAF
124193F6E8396008E5BD04F19BB4EE30FD4A80DBE4DF9EEEADCC816B3C84FE39
07EB828519DE800A9C2CBAAE3E98D910EC76A44AB8AFD6B95D1B72B8B21490FF
528777AD3BAB19ADC5105684FD87B37B67B29AA6628DE75A69A3F38EDF33CC72
BA1C6A089FADA9A92F60CC2FD61EADF93891FC191896A5EAD415224F7E256A4E
A02D876FB0B68E723AFD17D0DF08550F90FEF1751E7E403F5F111E5712BF3AB2
51EB9FD654EF748846E38E374DE01977C142E0ED10318333382EA7FD01EB2A59
D9EE46F33362E4C2487FBD9CD96837286EBB53EFC8AF3FC1FFD3D1EF05061D80
B5E3C87AC8A76D16591A3380A49D57886D7F7BAD9BBD84F73FA38EAC51CFBB62
DEF89CE32FC2649522985C27941C58E4F50B9C2CB497E519444446F0E2F2A2CF
F9963C615AAD69907EA4205A0BC3435596988D1C67406AD33743D1E984DE8C3D
F484971F00990B88E1931C59D868369DB620A30ECD347E1717AA5D4CB03B26C4
A34300BFEE6E72FD1AC6CF819110E6FEDED3E62A92EF184C7B979C4E20450603
8E76EC13C6264E69B55D1971CD164A032BAC23C2866945E46981F9406B6E4F61
160966AA3E2B029EA8A7323F271A6643341F7720B16123685CC289FC0EFC552C
5FC511935D0402CEA398F99BBC58873131733D7FFFE2E60835E8E570EE206034
708F56EAB17C698F2052A9C6410435FF3D114F67EACD436BEF9EBFF0D3BDE9B4
FB0A540610BDB59FC4EFF8586DAA59BD102BAAFEAF854C1B48B036052A3D727C
050B93AC55B87A0E337A5DA9985EF7DBF5E1072D4D4BCADF078CDF0EDB3A2C78
66C977678C571CCC9FFFBCC76D0895C7BCA510FE3F3DA02EC5384C4E5058FECC
591ACA24662FF0B6783E357BF2DB29034B3007E7EE680C5EBF4434464C47F8DF
4DB69281479EF18DA2237CD4F3A26C1458B3F69670B72A5D4C1CD5D8613BBE22
737F3AB7AA70C37462134CBA469EFF52B99E6C1F4DE95E59DCF7E38BF93A153B
0082245B574C006312B1A0A1DCE0E4AA6C193AEA970F45D01EFCFBBD18095B62
AD860BE59DD9C26FA72639FB421C3457FDC09D3ADD6AE6CC86E8B493367C1BAB
3BC0C3405741CAD56CC6A606BF71A39EF59C9E976C5F562F31C628021C652ACF
A5745D606BBE742DCDC69705BE94A449C5EB8D42E88443AFB83F96DECD5E0B32
C5EA329CB342002792FADC15213545D7EB212CD29841E176122E3D1E147F1276
12C7EF5F32A8A3C6A4E7C3BC8F04EF6C58A10CF8D6B0D502750247BB25006F46
6250647F37A36A4911B97E5F975D12379864A4CC14D3103C4994E6CA97B1D789
3DF52D57BD6C1A6B744024CFC65AAF32058BE46AD9FA0D3E24F2FDCF57193CCA
AA36A4B774280AE1D3230BB98D2190912BBD038F21047D0019EC24C1496E1DE7
71B3FFD092BB48934353CA645CF41F7B2EDCE9FF9F84EEAD17B366D678E61C61
76FEC09C94A3784C817AB37CB52D23205066E2D80EF7C7866BAFF6B23D88EB36
BC2E699A11EC1AE28E0E6F2B383713FFE2B13A67B51AE8B12E5BFEFDE5D92BE7
BC5EC381B6B05335F5E9BDD8C3A4A82C2E598302E5493842F0A080F6AF3A9121
D8EF4BCFCC80EC71F78908BDA227422F8A56C95877234F9FD6BB97B3AB5C0F27
DBD4DD8DC2FB1BFE35F67D7A5B693EFE15A466950C44AE2D4F9D99F833D72AE0
88F54DC0BDD441EA5EB5A1FB810A2926A27D510E69512B9C70C2434513CE55BA
9EEA1BEA15C5C24ED9F31705A32503BE7225981770457FD937871241EF7A195D
4747C9FFDD581537610B95B188999EB5F2F53D263ADE076A5DDB61CB18C2C4F9
1CB227C6E44CEC46B305D67E5C253CDB908754242EC4D9CF4E75722C9F37E4C9
B4E010E3CA56EAA8868DB6F226C6E56BA3356F66D123C08884E9D27DC1FFFC23
D36AE111FFA48845C0A7FF2E0CC929CDF9447D83A7167F3FF009AF8CAC686052
7DBD2B62750C163DCCC99F21237117AD4B234438CDCA4A7E25421A64637FC8F0
AF83863CDCACA331175F46778C3202D3D4F36FEC1AB9B1973A7DD95352BF1532
EB87DC7346FD25DA53A3BBB299CFBC46A80CD1D1820D329A68E9056D5FA94871
56FED518164901F83DF3BAA6A0ED3E1145BF178CBD4637DA34744818D2364CC6
932DF0E2362CCDF28E5A9D054A1B2BED399E780DB66D502014608F6D49CC34F4
A6767064EA4E5F469E48F5AD2885076AFE1635CD9ACC3C44B5755DD9071DAE1E
651ED94B4CDB4FAAA1AE95682AB3BD762EB1D2F722477ED3C9E8221F88E54918
1454004F18A348FDA4446E35C019B5DEA938B851ACF798EB6086D99D6AD77CA6
4AA2EDC679AF04FE139D653820FB3EEA998267FB51CF42EEAD7BB5AFA236AB35
C6DCBFA1165F47F8F52B0787EB4B70B9C8A6D5E61B5B11D5B16C646BFD7EA160
518EC3FAA454407E1B8A7520C2C08F8CE3CEDE80F4C4C0838B8D797205EDA240
63103B89A932C946455256DE821247F764D8435543A6A69628B40736B1AAFBAD
A2DE6F39CD599135BBDD2D6A67F05C3FD7CF64D8F619AE619F5CF7C0B1DE078D
A0D6C0E48F1D065844515CC08B55C960DAC383D2278C7302A34A4F508E05E8C9
08C46B93419B93876B1AA19E70A1D92D48565DB08347E934C223F5A1504F2CB4
5644E610A3C02D768058BA2B97ED67821A10F50F406270CF873290E99A3BD506
A8578376F7816D6F4CD48A5197F98F35341EA3A752FBF80C009DA521C0399993
9FFC6CC50503BB871565797EC537E267EBBD1DDB3F3EDC5FA135479FC9FA2409
826AABDB6DEB72774923AC44C82D135453BD56678689754F0DF84269D869E5D4
0EB344E5D2C11E525F08CF4752ED284A1719539A584A375CC8B9C4FDF77D3016
80CB83F3BAE0A70B1DBD9977A5F4C77183F4CF9B18D3648CEBFBE395E68FC891
329882A2639575674B2A47C068AB093F74813A6BAA4F7CF2CC57A84CFBA77156
ECFCF83454E56C56A2CB0297E6C99E604FFF638C9DB5F9EBE90F1628BFF1109D
A71D85A35F40871DD6EDDB2FE95037EB3E37FC4FCE8F9492E884E432F5332C61
62371112A5529FB7CDE3A1A0DB98D05D8301FEC82EBCDC7D7A02A6CC5310ECA2
4348652BF62276DFED27FA18C1B3075EDD207C35BC17DA8E255C9216E000486D
0F3FDAD463346259844571401A131E488A004961B9D77108922CB750BE2E146E
CBDD16A1584F3EA2AB3D9A37849E283446B177BFFBD9B94C2C008FF74A20138B
EB2D0CD90BB842436D3B6DB6ED212E9BFFEDA7D3958C62CD9A5A77E01F15B23E
59C215E93A3F5018417C37FFED36B01A47F01974BD8E120C8087675EC96EFDE2
CF5F084CE3AB688CDE87C535EBB201D3A169CD9DCC4C3C256A0960D9745BA378
2B16BFCA3976097402F18D4B4395CB6BEF299F72D4167DB96B594B7F8296FCE3
845ED8FAF19EF4A13D06C1E03028539338323F06B3AF9DDF627537F714A1EB34
8C863EDE31E97ADF14D9F180343DA29EB6D49313FD7D6B89CA8103F7C53355A5
E7C09E211F59083D4949DEC5B425EC8BA4590DD3555C2E4BB60197FBB232487D
704305C8DE89D0F22DFF10997ABEB2FD88C69AC5E1BE1F51A743146106BA16C4
2008E18377AAB2DF1A89C7677983CBB8EB531837396EB5AA7BE08E08FEB6872F
D6E324AA92744A35840BEC3B48876DE9EF1C24AD166CB39392E2E542186BF255
B2894F3FE445439F65967C51EABF6051C66694B87FE408D52ABC831EDE8F5F1D
DDA31A8F0E74AF023B6737631A91A605447FC44BDB516C6C2DA486E09234A543
243B3FF8E29549C849F5592390320054F033A0EF96C16D45B427465DCB1466D6
2F4436EC6A4009977A5BA6FBFAE1FEB947C50CE8BE18F24922B065C415431E62
9B6246DA4B173E61879C48F6B34D06B112C23AEB062936004A2EABFEC7CCD31C
F0A0B8E3654C810A3ECA6807D768CFFAB4CB966B5DD8436D1ABDC3EBF1860C60
DB75CEFF3C692BCD8174BB9537EDB0F8769AD1AE45DC94719BC63DC7B186F527
B1BAB95A33180B0AEC9979C1BFA5A90471B7D471C3BDB86F519E59A0C711962B
BDAB0A2F50FD97666B5D8929A96E6D27DD8B231EE77669141698336E57C37939
40F17E797B2189AB6FA2E8821002C467B05AD7A7A7BE352CFCCE52D9325C8BBD
EE984301A8834048C2F40563527AC4DB5221EEF186188FA7268132F886170E24
17CD39A79265C7EEA862D9DF30C68409FAF5273613D3368B9DCD15C20059F4AE
94766840E2B8614AB4CAB58A065F5AF8CAFE8E0BDCF4FD673EFBD34412312CCC
D8E06297A576398B0ACAA04C99BF3B313C1F10079402E2BD9735E61CE48C7E5A
10B6E3F94560A3E3B82F4A439AF0F1B4D45E4DB17DA98F338822A9AD1DE686C9
2C60EA329075C30D3F97A3214A47893365280BB0CB1E0C1CAB3C9C29062266F3
163CC283F2D871037C84534EFDDE0F7BBB3FAEB89D737F9FDD69B4EDAE7A1708
D7ADBAF79C8E66A6F27EE257E88F34E6654ED99B8D51F1E2D512647277B9CE8F
B16D00896BB88B0A87F420FE446CB294E9511AA1C5BAFFD1B11E93F60FCF813B
4F606EFA4CBB077034D588198BBB5D13982D6EB24D56C5496E1DE771B3FFD092
BB48934353CA645CF41F7EBD2D97AC1E6D882BDA8C2669F8B0719C21ADD52EB6
C374CBAADA19797B2A3AAC758995A7355F79D06964067EB59AB8A735E82BA885
886035E32F00C15325D93A4476F16F217B35CC08BE1F342CBF6E8E6097A664A4
C4B32788DCDF2BE90A92E2F1DBDDCEB0B89F8B1D06278E80D3FE43040899809A
443C00042C681FE3F9BBDDA0912757FCF72D950DB053BB719CE9B2D2F75106CC
A90E75B245DEAF72B67756D65C6A9F553C365E20F0BA59F8537C88E68D9A2294
1AEE6DAA90426104738F9FA9A3A1CEADB063AE4B5982B409F49232A61A6549D9
74FBFA88369D0B2BB155F557E7B7B72FFD2F1D3C3EE5A5451D2E3B991F3DBF22
F8CC741550397679EC762DDC1D253B978E020D434B01A876A328D58784A92C4B
CD75A6E7F80E84757AE155ED1BFAEFCF250DF79F6B91A1C43AB587F21FEB95C0
855A9E08E4484F46950FD8026C281C0A7FE832B124302F44D54DEB4F1494C878
F7F63E43BD416FE1BCE947FEB8327B7330D5C8CACAF6B902D417DEE27F3CA8CD
77EB6E0C26B2CC349422E2D46235457BE1F5E282AFFA0B06CE8C5BF15F4BEEDB
07D2BF8C80C00BCA4BAF9648FBC06F69EC4478D2B7149AEDD094C1377B083502
A7852DC66AA3A21E955A1F39AFE6A74CA03895652CA58D31B498318FD29B5223
DEC13621FE9DAB1B7B3B8FC3BC680FC60DC914BED8F059ED59616B9410CEC569
131D750A8FFC0D4CEDED650AF22390A12EA62A3E8CFDD50F2FEB41F68B435567
D14C88B95252782AE804CC426F0D63FD0F7A93E44FE181776AE7210281DE9835
92EAF55841DCE74A596DD42F739C8EA0AE02D54B8553DF09F6569E41690A6D8E
6697FF2F5AC06CAD4BEB4AD7FFF189EC56AB00C6C757576EA0E4C8F0F1461423
1A2758331116E0F7E6160CC2B113F5C9F44CFB38976D7D00609F58ECB34EC2E2
AD193F4267384FBD38E55D7951FE1F9F5810F4E54E99C1DB82AC245B5134E71C
17177E335A1F783C77ECA99EA55B3781A7A6A992819907C8F393567E7F71700D
732CB7F8D9B878F93495048439B2A9E2E526AF2069FE6393EAE0E90E7FF7BC23
33D4E0215D5201E4B0BD7CBD5840EF7B3457F381362AE29CA13ED2AE02B7CBC6
BABAC4A17EB9CE2C7E3E02F715161E7C7DBCCC1797E01F2C158167C6BA509BED
34E0B0DA099434D7FE9578E16625CDFF321ADFD514B2BA1B66E7CFDB8FC93B6E
C152460212B87A1528AD133A2681B4DB647B11B5705059EBB474DEE01EA96209
ECD0CEFEEFF70DB9BAACFE461AF30E8DAF39A64BDA1CA0E2B0CBE3D100B77E84
45601C8BCDD45FD63CED289FBB5855C5E84E529DEFD87E69D6C612378752BBB3
448D45F7CC3E888EB73F9F198E8A7E9F995B5884C0DBA5F0745A55F280DBC23C
9DC4EA36D0614735C74555C48EBBE3E164732603FECAA8B45F3EFCA21C4C44EE
F7EFA9EE3A4D97CB5243E23F8AF4827C2CEAAA660756BBBFF4699835FE511011
A08D0719FEEFC7C051E6BE0B2ED84B59B6D51D54C2B1B2F8DC4FD19DAA642FB3
44CCD1768782FB26687C3C0F890F6193620D1F1948287517DD923B4209821B57
BB45E069C587FA522F4822E2A811BF5CF5CC741EE4E92E9A64C5A0E024A9C6E6
08AE42975993E68DA3E1ECEF8F3FB57A5CC84D1EFD53D265C84D914A718710D3
58014F05D7703139CB391604AB0F3F9ECB7CCE3CFB3E66F9334C2DA766219CD9
1DC99EA95E35043900CF3BC8D6A3496230AAF1232518D07B147E0E305D771F19
B59A2760C551DA63A2FF97C11C0C1B9B8DA9374BB16ED65120FF1ECCC4153149
43E3B4F9BCD5218E795C57F77261820E3812733E620B47854DE5BFF3373A506B
0A5C59CC493FCB373265E98CACC26BF66CCB48C54348B7B3EEC6B0AC459A62BD
A296A30047A214FD9FFCA4238A8B2C1E76FE37FF11A0D2C3420FF030AAAD03DA
692B5399BB4B9FC60874B68CDFB700A71669055D5BB7C787D1877F41AD3480FD
2E15D8FDB96136B3184A476C7A9FD222E7974D9D1CFB10EEECA08E71818F48B7
563D7A515F545301022C75A1C4BAC0015B777F679E2F62A0A3EE9CC1BB988165
31D1983A33A1BE7394B42FD72BF46E412A0CA1123723667CAA346973A0F5066F
1FE1971379E236BF13FF9A22A528922308C00CCDEBCE60D893C887B931A9EE62
0EB7E7F02C11C1B52C95B6B66A2DF1FBE19CB5AC552C62EE04B6FD8976146C7B
55B5F032F85BF380B043814DA90F05AF8195CD5239ECC86AA143DA36873A44A1
82CF7070473DED607FEA43CBFF16DD187BC906ED1770E865A1D375A952EC8D65
E617F6D621053402A291180BACBAA77D5512943C367DB9BE2A98DC8F23BC2363
052278975DA35A724B445CADB06E4F5A7BDEF178B16743C942CFC3F4C56D472F
CFB5C942F5517FAD1909D38C48E3DEC9F43EBEFABEF2C792DCA151B0D8E1B141
2623F2E2E06CC77A2F522AF67E91EC2BD667D6856ADCE234D2947F4274D4078B
82EAC528A901B8A84B85CF4E5CBE707477AB3CA57976C42268883D6CE738E1EA
4518C1D3637ACA2C8A17363CDFAE5FFF28D6FDB96DD8A39E50CFC7B27FFD7574
454D0106221532A687B6DB4ED2DD4B1F2C0B05BA94990C5EB830A3BB3EE13209
C0979345EB64E681DC8BA48F5FB0C8D9F9930A345744584FFE4DF8CEF4DB706C
0A99C9D81541C90D77042BCD1B1D18597BDDD0D2F4627743D13D6D988647D550
DD5FC5F4D9AD5B4B5AAEF2AC803154F29697392B5E0ACA15C2FF5AA68C58112A
149249BF0EAE8BDB052CADBD37E7C360D4F5E4E095E7C1E3281DF826701BB054
D77B8878F0CD9F6292FF6963995204FDCE57160DFC02245CABFEA4E244E2C75A
BE8BF87A4075601FDE672E71EB4EDB0798552FEF837967018849609274F63F00
1333121EDFB366BD9D08E647B1473E65363D3AB746CF69DE29ECFE6349E619C3
406AF7788A04F93BBAE1CA8812137E9897C4D86A21916BC68407DA53CD7AEB11
ACC73C3BE7101628F0659CA4E7E1ABC89FDA4A07569D562FC7339CA5DC685CE5
A6EF7568C9961F86E3ADCDBE9401A70890F4C4644283DBE3DC78A53161CB1619
A76F02FBD40708F6E4BDDD108241F68A7BCA1C18DACB1C0744AC8FA0678603F8
5C0F30935D11FCF652113C49733B66C191D34DF2E530C20F5D6F7CC03011F12F
4551F3222973230DADD70F1A60CC824477CE658AD221985C9F3F51306127D8F0
A976572D0CF854C73991D9747A4A39A931C4062EE7D81A740217741CCDA026E0
64BD4F5367EE7F7EEBDF053A4F3BEB6DA73CDB9424EA2B5DEB2ABA2092D99D77
467D31B141FD22231671E704ABF1C99872D9679F873A489F4E40FB3D3C63714C
FA439B5C9B16ECD96A3AE5DDF1685BC315EE526112B5260972520647FA07B7B6
A0D06F3C5A9923AA703FDE154F2F59805AD622BED937FA03CE2866467A7D2781
E8A0F7B0E24A000449DCEEF92A43D088C683347E5C549EA788EE1BD6CABDFD60
1D14EABDF8B2E1DDD9C71F509560C1D919B8CB24867DB19AF35ED97B9CA989FF
7B5C3FA405A611FFF1D1D2D8D22D9A3D22ED43CD7DCB77E0047EBE416626EBA3
2974964F4A4BB329F67B607A95BAF4F9168008E46C7159FD61B5622A49051771
EE0C2CC96C1301C7744F334F5F15A7A119AAB88B1600F80B0D6F5F9EF5A94103
72B9D4D7B07E75C247A70FEA6DA222A2CFFE34F365EB6EF863A813470F9E996C
C5056032303B61D3F71315178FF31D317E81F7A7C4A57AF3CF685295A1159DE1
351AD1FAD58ED012C86BA84EE82781C2C94CC11BA0E79E579FD0D0A50137E964
CE55D55FBB95644C52DA6E7711354BE5BCE0B15217DACD125476F525896CE535
5E5DA1A7D29815356C68AD633A50DC640DEE532CB8779A7EA4308D969B1004E0
7F30C20112D86871D238B5FBEB488BF40CDF669E3415F6929385B9BD72ACA755
8EB0241D5D59EDED75E63BC1059180275AF2288F103F5FE638FE012CF2706C8B
D0C8B580729A795288E168E18C8694A019806CAF559ECD0A293D40226636CF8C
61221FE0317F6D6267667E1D4C76AF0CEA8A936F9CF329B2F4350B0A059050DE
5B24CE25814E3087647001463EBD40F0E3A654D833A551242E010E3907F4D1B0
FD4CAC78783AAB55DC414D20954B790A81A5B8F2CF07533BB76651728EE0C39E
21A554BF934AD8DD63FEA8D337752EC867F5AE3BCE64277EB496349424541D47
43D032D54AA26844722F8A7F5699DCE619FCEC8D969A44C45FD5186397820E16
922C2F8D1F738535888216257F5D0EF7ABF3FDC0488ADF2F05F0626650DC373C
0F5DDA17EB4AABF9965A7AAA895DD48C8D1F4E853433340952C7F472A4DEEBE8
D06A555B642D686CB0F0DD3CA419BC2D333B8AE54DCF5364857EA20DB515C86F
99D9F39C0C4E35D6EE2EF6E8A8CBFE1F62CADDC2C0BE04D80490C44881B123C4
70984611DE40272FA2F2D2C9CB6FA88646D6C279AEA9BE6801405C5B9BAF8A33
936C04696DE78CFFDBA261398BE804913C2C679417A472C2A24360CBA6A0687B
8BDD53C58051BD58CAA56A23341CF3483C40DE4DFEF01E7DCD6F9A27D97508BB
78E0660B258C2F4103246E8A5572B0FAF2A13EFFAA140403D1DD41DC82087754
3FE763B1A5A4EE7A883F8B7079F812B3E3762DADA808E838472A8F1A94A919DC
06F72EC8D2A2347451F3EFA021D02B02DB6D0832532E9C412E4EB6B7D7B2A078
E26A1657650D50CB35C748B45298FCAADF807C859CD6AE76596420C87D291D12
CAD3715A493FFFC27F6AA52F79225868783A50546B12D1CCB4B023F30BDA21AB
8C8AD7F1F7F6455E4CBD4CEED57BEB307ED49717F2E9B515A37869A7146A097A
AC9BD412549188EC8755519A8E6E704DDE0A0AE2818E9B48A020A3F6E0CA44A4
D5ADA81C5EC47F123A2A4A130A77C04C33D371D02B021C66818A8D68F245C55B
547025DFA0D5DCC09F3D90BC139AC4EC64AB3EBD65EC53BDF5B57D86FBECB3EC
01DB4F678147E64800503257171AAA2DB088385EE7A2FAC997A697DC99D94248
9D76D5CABB65C4E5CEFA99295AAC8E302BAE37FA9FBAC8CF7B768D42AE0E9C26
B392B5672367BBA4982983EEF68E155DA488CB4901D8B6D321F4C332A4367EA9
C08745AF54C10EF6322A8A21DD980D540792F54667A6C5F4E7C0D77883C8FFD1
E42DFDDCFA618BBC705E96485E6D35BF4ACD6EDE15204C2A7A3D055148571458
6B7E235C103548984725D01E66D56E0684FA4F2851E599B4B8304CF70729EC7B
74F1E8A369DAAB3305C440A686E566386C4F0390AC544402C80DC7D665E1DB96
647C9654D20BC7BAA3D453981D2EDA952854D4EA1322A1200FC37425534BEB42
45F938D448B724F859C71755A6A1C675AAF5A91A2D1C900B874D954832FB0A5E
89F10544DDFC05AC2B09640D77F39A029770DE55E70C32197FB7E36C4E8E7867
31D711FBC6A86B3F7F1791395AB401F7A62146092F8AED837C587847DE60BC3A
B9095D4A4744C50931CD3080C29D568F09B31DEE0C540613F32FE18524B81074
FEFB87140928694B054B60C981A6E060B71A69F7F0DF27041CD5CF75A58E95F7
74F78954757A0327796B3BCA0FFA58169FB2DDAED575F353B94EB63F6E52ED2F
1DD38A57AB9AA6FC582E9A9B3EF96AA81BEBDFFF78EBD97F40F1B3C7C78221B0
081DCEE066E4076E992C7DACD8026D7F4C5AC1E5D796C0E5A79C61B178EF6DEF
B9B9F62E3A3E951935607FF315815CBEDF0EFB7DA2FA3DC63D9949EE1309DEBA
04475AC72F5ACB20823300B696551E8CE35DF9ADFDED69E824D2003742E625DE
A28C9FC3B564D28DD64EDC410840B2CB3773F861A9947B4F4D3770141C560672
3719D38D75023575086AF58BAFABAEA97F6E750A9D60DE712CBBE9341B1D98EE
626EAAA26E544807E5D3AFF93AB3ED41A8130B071D6971AF31FA95258B6F3426
E99016C180CB85FD2D1D5063EB4B2B2D85542665F9B8EC36BBAEDE1CCB9F8DEB
D21E86825581E3955A5ED3F9FF9931FDA9F1FA542076F28B47B045B7B7F73CA6
9BB31C647968ED4CF408AD2EAB027B77952A40A24492FB3E37E7FE4B7CB450A9
C45FCC1397C6B0A86284D5B10787B7B42AE6E5FCA3C6AD820A8ED4978E6E330D
A55D33BAD256CA233093AAFA54FFA50A3C775B46790D67CC0DAF86195EFCEA92
0655B93EBBAE2B20BD1924EF282F92E8E1FCE13A965CBF919672A732B0304C50
813B94E7AB08801EB8C68BE6E624D6CD83D8E39877230F79E2321AF1E6A70C58
60BCD5267E1500A7A725EC2A38CED29D3B9B1DF17E6920B7F22828028603E10F
5FE2C4EC6CF19CD6A2945F8CFB7F513E2B95B934E0634927BADD912728346A71
00FE2210B510D758309CC82CA5E6AFE7FB64EA4AF41FEF1A5C7C895EA167BF52
5D60A3EAFD13E762AA7A41804E43ADB6280428787D137AEE41F43F14A1AB7847
7DD71731989401D7DA5A5FE31E1ECCD862680B1EB422746BE5B0B75015C25FFE
69FA29D6B3ED6C1F69787BB33388A0537F7E309D8AC0BF8D1262B3A58EF8A923
AF0B15A57513B793B2BBA15CF320F33FC863BA14FF36175A16FE29FB9EE32F0F
94CC9D675700317A06B3722A5CE0F192CF8BFD11AC59DFF36C25AAA8C771A83D
9CBB7EF50962F3C701390274F4A233B7C21EABC56271E0D26F4EB807D3031D08
A9591029380209D4C769FD636A4A1AFAB99A307BB4A1EBC0863AC06F0BB192C8
BB84303FC26A3F2576F203637782391C3025D117004E920FEC8041F499CE98D6
2BD263C77714E5F4019439BF6F50962E2637570F003EDA5EBD854ABA70FA36BB
BBB78600C2BB8EF4CCFCCF1DBD3E0B157A2982647C139AF77ECC32D8EBE8BAD1
4FB4595538647AC98A4CDE1F9B0C385932E7C73A02D5A87E37A32A5B9BCAF927
3F46E705ABA15FE2C8E0EA949B419CA03850D3A3D6FF82DB99C3D8C711996A7D
0629F4D47FD8922AA183C9A242C22593968F5A2BC20B2622E855369903061AA9
3740C8CC072B11B0042BFA57133549E2FE0D5F0CBC78FCA613979E564E704AFF
A5806161D31FB9F7B11D1F3A161B31F7072115A036AD524CD65D4404D0323445
D7B0D148E1843D354DEC570881F42A504E56A4ED8BAF6E29CAFBDBF11307E008
5075E5C9E739BEFBDA9EC9C8F800F862999D20CD6BBDB23EC78EE9659D0042E7
EFB30F910EAB7E9A77A1671EE380A6FC5A51E7F50385C4A11076467D5A11AB84
55BFD9D56FCE28DB743BC92B2EC376370FD355FA08C74EF1437595F6B9368142
FCB34668AF303A6455B248FB866AED881191FC3D85580E60350C3A635A2B8832
61095DE95EEE39EC62159B5621D374878E633D586BBA62D1BDD9E0D6EB91B43D
A39A7318173C479BA6576973BB976BC387B9425BE949333CB114626707A58426
2331AD37EEFDA2B27E1FD0DD52519984B29E6115709E56C2139C6FB2D8EE3625
57A3DC0555EFFFAE37A034DEE613C1808E76B02A0227FCEAB447F87860C77C30
8D17E303514869A6CDEA54B39E92BBA5C42182D221558128CCBCD41BE10E91F0
043E24640A767F2497968C1019DEFDA17AC2E515BDB3D6B2980655EFDB97B56E
0C08D12ACB834856A2A46D83CC900DFF2B519493C9EF9C28339E298FB3B1EB9C
376E87B346CC0210DCE05E325B8EF4CA0741BBE9B037B6EA815C3D70DAC34AC0
84B5E7BF8B1B05BCD9E873051C730ECB6E0F01085AA2E37F7078B1F74794F79A
77A6779090AF0FFE0D3B0B72D0903188D7A3A1B81718F3A994AA4CEAEAD1F1FB
02B3052D5019F2722A8A64D56F9D6F5536ECACEAF139EE9AFCEA1EB21DFC41D3
6A56770F7E779108021E3AFE578357F440EF8C20F3F505874C644677E0BA0A6A
4B288F4E35711243EEC698024006E446612825DAA2F91781C807A35968A273A6
88CD6EDA68951673D6A5657D8B15BBC270CD8FB42AB21C07D44492C6C4DDE38F
23776DE1E8D0614E48C812364BD39B252EF0259254A70CE422C95D84FC7E2A9B
AE018B6A9893CBA8E582DC56B714D750D38C18DA9E154D8B28E46617AB920F13
13A2E592CF9D48D0D8DF0356D99ED3D8A8DA9F65F460EA1E5927D4524FCBFA76
25C922AD1FF68DC915FB214B82459C026B3A1226E7BF21558D70B55786D18220
07395A5D78C698C7366C1C453FD7CC6E94C47E37A3DB9FAE17B29A59D2C328CC
6D94A70E8C4DDA6E3C321E2560D97EE9008373A9D2C02A63E2E41F3E9543FA61
E59C9B85F02AB573DF6352E12A2CB9940DC6832881BB4BF55DA4FFB033321740
F4B82C9E1D604056A76DC12FA7806045871AF6D7D534C89BE5845CDDDA0862D2
C640A8770A4C835ED0BE381CA8423F9E792CB7C220CAE6B3E9108C28BD3BDCAC
E2D523AC51DB2BE615EEEF43E3B94516E95531B250C3F352B68B3A44C5A4EFFB
389E6BB61ED0549BAD624D9A1762B670A9A506C02981DDD67B15B24C7F82297B
A7530C442B5E22F23C7CC8F7E46220A704961A7DBF1AB5613C04521104E01410
75B747F095A9E13C19B474AE0A92A80ED24D98F32BEF868FB88AAA0334199E1D
6FA71F8A4F048F596C8FED28F07755AB6AF19E04FAEE6653798941795B253A86
C73164C0B29DDC67035E63CCE8F4B450CB5D21097D7290777354D141EDB824CA
A6C346A08DBE65B1C054C0587AFB35100BC31DE1BAE2DC26FF4CFFB4C707B8CC
EF0694F57A327C42055FDD2778F1181D774D8A4CDD0A5787C961FE2354A44100
181A08DCC0511627F96C725962EB3A03C8EDF837812FC804AA0C6670967F6C3C
2A7310CCC64AB48219EE6F34E2C67A22346CF155930698C2E76B71C22AD65A7C
65BC33B08E86B537A0CC012744A4BEA7FA46C14DB12A2B7FE269640C43F59233
29E440A4BC1282B989F287F5C9B850A258E9EFC4E9DA426F9E7F8D2811727965
C75B0A17CCDE33AA193D61A35EBA7F7E101843E35DFDF3E077FE78BCD95862F2
884FFFA17C26969FA7AC28A6FF2DC5688DCD56F58B5B0B4F975E854961290F30
C0BC06DA5A712AE2E881E755D62BF45FB7F79DC36C582C274D044D0C3B023902
30B01950FC6AFAE6B3F4AB7E65048990DC9BCC4489F682CAE39E3FE7543C5392
CDD26DBB0B3E1796189F1ECB563D4909081BBEA2BE164FD761EE98B8FA14EDF5
CC29C627E5E1802A7A76A7BF92DDB84786A73C3948721B8A7520C2C08F8C1098
BF71196B775C4AB13A4E7C4E03D2E085E8303E92D7EA80E70934CEF2CE7652CC
57F48767637093A0A313BDF17ADEC6B5D27A5D3C0999BC9881BB6CE76FAFC31B
D5EC1A698AFBEE2418D16ED2B61CECF668D3B57D6EF154E44DD2822D40E023A5
4CA8B0F48FFEA848817AE1569E2D6156C2EBB3121710EEB1CAE2E44AABAAE30F
105376C3964BF75AB5BE763267C86641C7DE5F26AB8FC01951A22E97B68B3C6F
723EBDD6E6CC6B1905140B6A496100C45E9108F029E68713A21C181A551912A8
9D32739DF1D3BF7CD7DF18EBF95CF0396F550A87C7C3696AD83CA15099ECDF3A
273E8CEDAF1F5F7FD494711BDB12C2B9B8923DB092390E4AA06F9EC437578268
51F98A6AAE8CCAF8786AEE3E1072BA087A2AE5A8C234987FE1A8FF45975BE538
FBD81B239C4F50E87D6904608760D111F44625B25F470A3FF2986C690138E803
F42A5648E6561C12F0CDB0BA121D3B83F8FA918EB4A5C0D6E3D543E11290FBA9
612CAF16B6918D1F44D44CAB53C0CEF51B2FD6DBDC547BD5328E7AC7CF5DA8B7
FA06455E229C987A128F53C951E0B6FC5784C06417E60188B8C82CC9A471A550
4E98DDF4DB835C0C0896B65E38C23AE0E328D4FDC5C2E8652C59215D05298EF3
AA35FFB72E03A05ED59A723EA87D7B7EC6CAEB5D464A9CF623C12C1BCD7239AD
483C23383B1BF965219C6624E7A4454935E38C1FAA3A2254B70BAA79EA27CDA4
EE25EF33B77D59901570F600FAF4342598828BF88EF4FF6B561E9EAA98854725
87284CAE46FDDF5CD68DF5A2AA09416451C0779DAE2CFAAF3F4C13FE413330E4
44779002D2D59C9AFBAD362573965B49F0F6D5BB19657EB68AB654E1BC55D3E7
8A9CB5BDFFAE7EC801AABE09A13A368F76612AB11506ADE702CB2E8CA3FFB8AD
D5C2470207BC61171EF01103DCF36D894D9FB2FFD42D850BD31A8B4826AC9051
B56A295964903BF471B2D638EFEC915577D27AF7DF3CD45EAC63D7202E2F2351
8545A75568CC03DF0F6638DA50EB448DF2CABA8C237022C0FFBFCCF21DFF32E8
1AA53FEA9445FB1EE1032A98D49B895D90AC79CD284EC8936798FCAF1AB4CFD1
799A16772F79611D38C68D8DA28DD378FF72298CA4CF175198F196CF2AD3F92E
007646B58DE9FE4AA80F52668004A58C8D2BC06C5F9339A83580E315F57C2C8D
2492246BDD86DB936D479EC94BF9DBCF314E86EEAC33E4D2C1D1824EF8B65209
F7067A61CC9849A0B137708F4F07EF69543F130F9658D782EC851F84B02AEC07
8CCEEB604BF5F39840266A3ECAF4B9B8BD27C7EA54BDFAFB92C64EC82EC805FC
436052C088DDC6DE37E623426B8ACF222C196AED0DDFA568EAF73938E635D27B
9EB2020C908E91E81B07A92AD544D204668FB7B653D90E146B6AAA318E165C83
53C9CC1F09256426F0333E981166F8F5DA8E7B4448DC3FBB1B774C35DD266E96
BC1C1E95DEC7CD47FC235E96D3BB3D354DED04EC862AF354FC6CEB056DA14257
49E465FAADFA4BF11E81475E40139298877221F80A246E375B2AAF8A4BBDC57C
4CF55C88A384578D427F6A7F96140C43040D8CDCB990EE31C87818324ACC8BE5
4953A284C888D0AA472F0CF5CF2C4D2EB942BB3D915186E222EF53C533AF3B21
0C201FB75FED518F62D40390A7C2E5682DA716B05A65B268133B9769CCFA21FD
F0DC77CA7AC67CBFAA34A117DF6DFEEB7FBD3285F689A85B864F9D252EAF5F5E
73E2F3FE81AA949D18BE7A0C27B1870062A9EE8AE41F5838B639E7FC13D79202
C898ABF8814F6A2E740041BB1228B09A445E8F64F293AC397201E04A676205A3
D794B7D036F5385C4010FC280EAB291808EA2EB1505DF76ED457E3173509FFA3
7B6CC0AD35FCFDDBF7B4B6C2BE6916DE22BBFDB5F81E5D42A27D3BC70BB81589
6C3C727D60E9544CC891E283ED970B130C0A04502D832AE53000DBB44E67287B
E32403361CA7364E39F2377A27C8FC2996D819B7D7B737B63982514CE4041249
E3088A321630BC1ED1BBD6899726DA27EBEE38443A0995BA6ED0B538A698CB9A
59D600AC85DA22DE061E1197C67D23C540750975DB58E5810F201E3B2C79E920
12950167935869EC0E7EA36F755D70BD5E2BF0DDDEB2CCBF9AE69C1496A8BEA7
69FF9686AEA33CBBC14A90191909AFAEA9BDCE7871DBA48B3B3A0DFD699A8218
937CFC81E2FEDC87AB035DEC6FAB3B6CD034C264D1E1C18DEC47C52E96937FEA
BC9273A52074BD1AE4BE971B4B4805A6AF3F50DF969F3B5E0706624D393D3908
4762F438CC5490B29471B2C7A7A05495579F8BB5520F841891A43C1D7993E09B
ED045DEC3CE1668B24430916ED58EF36404E3B912BF4BFE16F0440C24E06B7F9
CAF79D1D1A0535FE16DE3909DA1132640DFC158F4177AEF0B44D466103BDAE0D
6DF3697FF039FCB043A82E05AEC0E8F423974E8CE0083904A6D968D71308ED2C
97B53738B4B2ED56EBE617BEF17B9DF4F316178523AC76A1F343BB3E1061CF4D
CFCFD87D706A3084D0B3246755E05EBD8614AB2FA897E8227A0BD7526BCECA32
4AE44B7870D343DF102BE43CD5058C3BD0263C692767B424A262AE0E744AE5D6
0CD3A8379888E6847DF1F7737C5FA2A0EBCC7E875A641694AAFFBAFD9547DFB7
9428E41619BF8224AF5287216637D2D784D667AB71B4049017A4CEF30634C710
7FF9847C634E68611C1C54AD870E78314EDF4F4361872DFA2C65EB44D5CB662B
E0B3BA9175B16D071E432931CD32FB8C360C24FBFD400EB33A27813D247827B4
0DC36A2CBA4A701C45942DB1C91B4F2058D0C4E5F9C7B68C529D474D4703C51F
CC2F27BDF68EE096398364675257F65B680EECF4703EE34ED5043ACC74EBAC4E
AF1F31FD2889F302A9C5496EDAFD8740990E17F59CA9090C11E7FB967904D7E8
57CB98BD6EB94579EFCA572232EB422CFDABCC87FE919B5562B9D588A5F27B1D
B0A04FA4A80796D144BC1875A846990DF6FE49CF296054E247D95BAD5D9ACEAC
C0C606B74BF157F175F42C3F299C26161427A5A179695656156FE0833F732831
08AEF0BF2B4578A29D8B8920635C95C91C4F6F4D640FF94A0B0B027E483F9ABD
1188942CDAF54308CC4D9788C0E3CB5664C60D8E524A15FD6DA786D10893D5FA
F5B4BBEC5416501276491B79153F8DF7380EE025B1A51E10221B4EF82D270EF7
12C3039997710674D631260FB1758BAC67E14234D25747F1E68E0C36F8C761E2
3BFF084FA32F9CF94CB99302EE9FCCBA020FA252BCEEC69AB8DC0E7556CB820E
CA92F0FDE9FA21697B99637ADBBFF6C4F2731D5C431E4C3EFFED3BE58C550A23
EB7A89F6BFAB852558421A0C655590768CB9ED22479CEF8C9D19E8671ED38371
6C4AECECB9BEDE2DB5844F8ADEB35CFD32FDCF4A14D82145BDFB5E48BBC4C53B
A168E988F73EFDDC7855709D9BA73B3B1E3A926B6C6555E5388EECD61697A0C0
DE15D31F938C3245F1A6B2A48291F051DB2AF69EF32688CB6E2820A68642DC89
9B1603EBBFE1DCD5BA2764539BA903D217C728AFDE49C8B394753BE2CBEF29AC
80D5F1249243C2A0366D689A3C7AEACC0AEAF5D1A879CA57D0B9D0A0AACECED9
2235FEA97B1ADCF587302A09D349BE7AEE25E3A23F3E98FBBD0D4765CAD1BE6C
965BAAAAAD293CCAB966A25C6CA66332E946764549039CFB556F43AEDE477DB0
FFF377935EB93CF868CC6BBFF3E5EB26EE41DA48C15C3C5FED489D7F5F6AC381
6CB558BCF46651F206831E8F728FB5E8A4F31DE0D5608DCE3CC534DC2EEED299
8206F24A189E57A0496EAB04DDA4D8556BDBFF10288A58AA8722F308890D5342
531190AFB6FFE541F2E11FAA97E16DFBEA99BE0B123B30495E206ACADE045BC9
53F66977DE66E45B59CA8B776BE09EC4A1278DAF298ECCD2940F9D4ECDE0CD4C
5DB461042E700A8079E939E8E50F7BE4115B2CC6F06065C0A401CC65DD593C0B
B614B06FC036141F03DA35D68D4F786A0DBA452880EC266712C58AC2B63F4815
79AC5072AB642D024B321D2442D4C542EFA6D623AEFF9D809EAE7BCE9A7AB564
508C7A9BA4BDF1C8243092A041C36E0581EF3B5503760EC6DF2CEA96AA2FCF22
A6CFE3FD00ADA2285EE80422F5B5B56F6DFBA425A0A7AAF144F35CB227F228A1
28FC32B372704C0B8C186619F8725C43CC44642AC3473BFAA3F398C6556C6163
1F2A8604236CA79184A500870EE0A42C2567838B786E6485CBE4EB335E932A91
83B2F9515FC689044A8C4A5CFB575E855F523E1614BF8F7764377B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: TeX-feymr10
%!PS-AdobeFont-1.0: TeX-feymr10 001.001
%%Title: TeX-feymr10
%%CreationDate: Sat Jan 5 18:49:54 2002
%%Creator: Thomas Schröder
%%DocumentSuppliedResources: font TeX-feymr10
% converted after April 2001
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /TeX-feymr10 def
/FontBBox [-178 -195 823 877 ]readonly def
/PaintType 0 def
/FontInfo 12 dict dup begin
/version (001.001) readonly def
/Notice (converted after April 2001) readonly def
/FullName (TeX feymr10 Regular) readonly def
/FamilyName (TeX feymr10) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /e put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3166449D69AB0542CB99558019EE
97CFE9FA87FAC14B55E860B5663A3D528CD3784FC9647A2EB72CF1AF4E31964A
3073722CB69FA5370CC5D9CDBF105662CA6188C1B3BFA7658F71EA5765A0D152
E60FD5E1DE3B99CE70C03D8CB4F775B5B17CE9573F5046E61444C0DAFD894CFE
E17604820BBE5A8FA11A10565933C0A8320DC5D116C780706E315C54E72426DD
AF1E6786D883AD182ED327CBB03C39C1A2602471C39296B7681215EC4F0E0E0B
264FBAD453DD3B112065828DC04E265255F9FB51F5EEC233C6A752ECA0246E0A
A2BA69049BBF94E6C8F510D29A7735AE4D122DCCA7B22929270D51C3F1E68174
E38AC54D6418690C765264C7897AD12A84B2C5269A6BFBABF05C20A37C94D927
81FD24D7817897529ACEDD9B062949D02FB9B0E1B2D0BF765675BA16EBFC1C7C
DC437BEE4D9FAC437C6B9E5B0C00111499A90E1BD29C52263829FFEF1946619B
1C81623A436D2FBD670D126855C400F38CE0C88122C60EA0D331AA9636B27218
0CC9B0EDE940FFB5EBCF83EDB330F8E83C7166452669E04F2E95A7718ADBDA8F
F99C2DC815F7ED17655111692621430D077DE661F297A8B6A33FECC10B3892A2
4F8E139F3E446CC7D7F5D64E4DBEFDAD72AECAE4D64289A3E2BE0212CF4A91BF
04F60B14E7522795440054CCBC40C49886656B6918198778A498EDBE40AF4536
7F96E77E40A9D65B1D5447D2596B382447AB5549A11BD5B765F9133E1C5C3071
32075009D2AC8147BC53B4C07B14D548E0F914E600CBF320E1639435733D7563
0053CC74AE3E7F5B9741E8CCB3DAFC411B5F846FC583B7771A7088B1C9B9613B
86FBCA1EE9E8263406C1894EE246BE87CDCAD2BA7ACB7030E45B0866062055D9
EBF7F562FAB6190196A7B8AA1B61F407B2BE0F537129E27376C8DDC7C6416358
384B2A676AB3228144586258F2B82A5BD9AE9E5442462DA626088BAB0C29E8A8
0EC75BF6E5E897761B5D095E2A8EDBF2CA742F3BF155B4DF28110FB8B7FB9A6E
9229F9D0B47376BE7AE5CE6A6AD32F50B62023CB32E8E0CBCDE2110AD8251854
5F8934CDC91E522248E019A6DCA06A0C2D005D541C6ADFF72812F474050C709A
5ED08B5F83DA1FD76037AFF77515188E13073B30F9A49A970613659071E0A130
5A4DD21C42ADFC1DF8CEE802CFAB2A75B7460E9F46DAA8CE31D5F287D3163B98
5966C073653074E89114B1B8A097A43E58DC5E49AC1F70F04A922FF9955F9FA7
20A6FCB10A2670BB3F44D959FC897BA487147A0FFDDFD368EB1A41F4CCCB619B
A362730B373EAC754EF5CE2692576DE100E10402670F41FD38F11A1BB43B7F42
B4BD7BB5F4322C4A9D04BBE445358F4B59B1A5C85FAE03B06C950485E5B304E8
BDA4BB926C21E17B3EC2D4DBC9353CFB90DBC6976B566C310DC801A28907CED3
2126B72E26578DF77022D969D09E111BC1C489E88E7B0315E926B0376B085BB5
3CEAF925AEF208D454C49A6B239924FA18001BD1A7D3EA4E7904830A6A948A79
F50CA56EA772D92627A8380A37F3C30845647AB612D5F6B5CB916996A0EE6697
BC62B6266F4314BAAD796EF51EB965F7C30C001F16442E0CB7A6984B78AEFC46
7D6938EFB347E3287600228311BA24326714E77F1932B80334F933C2926274FA
21BAAD0605BBC9A01BDAD6D5ABB885A4E651B8DFAB60487319C1C386CE6A17CF
CE6F1E639526FE52759F1C88A2B52EED4B93C0AEFE101EEEE8C108F389F9D1E3
205904304DCD3F06198594F313F1BFF10CE7F410ABFE3BD5F47CC3D7DB91E197
AE2EFFB9015482D6C79EE33D31EBC91E7797ADADAB7F682F72DFB7B0B0B6AE27
CDA9C0538E1246167FDF86008881E9F917291B498DFD93885C05A1AC6F3A7C11
57128C3D6CA767C80C7AD866074879C24CC063341E85B910ABD13E4BBC7A48B1
53E24D05C43CAC6F3337ED734614EA91EBA620346F23693C7FAA9F488FEEF7DB
E525E547787CCBE1B9824B1CF0B92007A8884194388AE40560BE9D79CD4DE9CB
96359F98E85F2A49F75B7B66C6444DB0ADF62964CF1A47855F8C4688F95EE5A4
50C96A072FB8069A59B20CD2FC703F2F90D3AD1BAA56A93E3D2E2F33C6E2A7AD
258451B1411DD8DBF07CA0246640732F5ABE58B44AC29D9EACBB671334A141D5
FF7CB44C5D629EF4C3E479B76B6A11B47AE63003DE140FB162E88854291E52CD
218D3E70E007E24FEDE321E5814C501169EE40269A4130721A95CB23F48C32AE
DD7B0B4F6320A76DA8A605679B0863982D6B3D4903CD8184B2B829CE9FCBF77D
6CC854455B66AA88CA78910178F748BAD7A4F32521BA7CACB879CFC719BFE2BC
13CF49FDAEE217C53CE31DAB6FDCF81ECAA2E72A2CF15BD84D275BE55251F82D
C8A19F36545C0BDA65AE10E063F5E05A8DB056F7A41D4DB694C98E4246E3B38E
230D155F7ED10F13F00679BCDF5604F46E28FD15B81B55471B8262F8A2F72AF4
E5387E41E401274B350EEFA6C4F03A1E6E4A6B16E528088EA3C7E0299E38DF46
D345559937225879790AF29198B2FDEFE6FC99C66C69959F3FF98F67C07CE90D
F2993F8732E88A77355D4A186BBC8C299C85DB3CFE829BF9F22AA8D3BD63F0D9
CAC57A7CBE25193B289D8A9A614DA9202F69ABA8FFB96F4281592634A7FC4A21
456B69BF77848502657B7B934003418D2BC937720E67D4890E00A199636842D3
DB74B2F004A6E3F3EA6972D62C62E5D4F096AEB2F194E77B656822D9CFF41D2A
7C14F16D7F07E90306AC87B528175244B92D6C10024132A3A1FC2FE78F688904
3568D0BD312C635BF2C024B53B5624F8B17BEEEB424E619CBE804E24E6EE1BE7
3F159A72AB7ACE1C0347278BC542E4525E503DAB0127B4DB6D8538634CC60BB6
7851F14F0753BA3838ABD61E83ECC39C427E62AD4293F672F8E7C2A49B534F60
E877F23EF5EE0E849AEC5F5E12463F6F05D059854D701CE420D546867EE7E6C8
7CD2553F33682A0BF985671C6433700CA8FFB638E7C7BAE78BDFEFAD10DC5846
AFF08F08956041F2912B4D70FD34495C96D3F9B091293B9C738CF5C9563277EC
3C6863C4A69B09E4DDD525D77FD06C322DAE13FCD48A4EA7B1B6C8F0256FC16A
3B47A4BF0DA1C49EF53974B4BF01C9BF194CE7EEC2C3AFA9E4CECD8C4029CC6F
377E4269806EB0FB78AA812F1513C2CEFB8F50CD18615EBAC10976BD12CBC1CE
8CCAD0333D455C3ED1518FD7F80539AE63A5045D34B982ABB471ED8EB18B50D3
1A150C82182B6C31CC9B161A87361A6D96B63CF0D97A286090DA8CB72991B175
EF3D690C64D9CB5EDDFF5B00B7C179825A1794CA054B6F7A8CAF03DFD7E62F10
CE5BB34BB02E50AA4DD4FD704F147DE3DCEBD3B1DEBAF3483E01CA3076EB19A5
FA2A8815CD360568A9A05176CF4111CB27C54BC8B4B991853982BB7307283D8B
93E5A2D6DF853B6E17BEF7C06A182456EB73D4A1B77FD58A853B07B04ACE12EE
D04046A4E977A39963B144EAB63C7D27F2EE65F677B9892C999BC81B3BBDA70B
E7FFF8E673275F9B84D39E641BA990B9AD160BB73CC391B6C36A7C1D68438243
1606D2298D58EA3879D2CAE2D285011E229372F7FA98F55556F0C4007621168A
A3C1F9A9DE81DA70AB287ABC70C4BAE94321D94FAD2DC3754CA39F689C8221E1
6E7E57EA41F552EF612080D82122D5733CC48978F6BC62E40728DCB3134F4536
C33E222D0E79486EBF9A506F92CCE773BBDF3A764B3793E96393DB8EF1FF0FA1
F3801274B7B982FC53258A752D43261486A2A94B321D90C9393EECE5B3CBFAAB
D0BBA6E49ED462B20AFB384AC2D3E290BC8FE7805D5C0B0D37F04586BDC8C812
686C653A47B40A803819C86FB0C8EF10AA1344350972910363FC0E3DB49A5D75
BDBED15C823E1E870E2F0EFB93A856F3A63E28CB7ECBF17E444B271FD92157C5
8727745CE16AA9376735A8B02F2CB426BB91CCC365CEE49AE5C9938B08DB12B1
EEE55B954D3694FA0AEC0836883D86F6EA4E10ACAFB7CE5D16F858F6DFF1246F
B2135837B67DFE58003AF012885480947A19B0F90980366EC245AE6D8D33FD30
E080775680F701952B697FC8FC07A014B78DEC48017E46AD78EF6EE80BF81760
B2ADCBB63D91D25DCFC77F2B8867BC0092BD9DF8EDD0F7DEDF2458F1F938D05D
DD4C3A7D4B3008EE86F787EACD7C687B6BB09D362E814AFBC75209C457A19F37
C9780469DCD173C5E5BB7C88F4A8FF1E664AD95E1F5D005B4F15416A320366E4
41E5CE5C8A53B64D290AC210490EF404D08C7C93531FF8CFB841AFF5A0E5A8DE
1E25EB0D03018A76C701E737D941569CE252FF92E3C0A05798F47B75B501B03C
D92B56739CF0D76A13E06283CB4F55177E3D6B28C265954DE0EC80A4CDFD91AC
A2FEE87917A4C63BCBDB24928F99D4836A62D3793411FFAA4CC7B12C934350E8
0C241E5C83E1BF8BCE56FFB67F9C7970CD00D64E7CF92F0A9CB5E672852960AE
8959AE74D4DE18D69B095F9F83C2D98F5D6D14B13E76E4686B85A3B606479B6D
F3B52D950EBCFE01639F6B0D9C205C947D60F2F0540D0E8B1B78AF3C5376F94E
D5769B92FC21082A872ADC4BE261FE71F0EA2422B17EF9C0338F63F4D4BA4AC9
D6C76169A46B500885E2CFB8671C053163F186C242F539453A72E3CD4F416A30
6C7A154B28FD021A13A11C78D113E65FAE2A6602D55510502603AD648CA7C698
E61A5B8F3689308EF934594FC5EFFDB86BED8324C690350CB92005EA3EBBB9CF
83EF65EA37BB27D684B89F18AB93968DBB6D0BD835EDDBF6F9425AE707A9E732
7418E39DC60A6EB89299E14D62AEA38D7E1ED70829196DB28D4906BF73574AB4
5DCF1FD068BE2B5B597021EC43C0396D5F172A723556BD8937D6800A6CAA33F6
A061415D49DA0ECE5C1959D9AA8513D8E616BEF8C9411F93E9FBCB6D2637AEDB
B0E719D54E5840E6F71109A5BFB26839255C305080216C0FD2477BA7613C8198
8EB16ECFFBB6D745422204786A17705DABE8FC123005E476FECEBE1C3E240E66
9EC0C64922C42D88A87D2D9766DB3E6273110B2F9281D80F004D184E9484EF54
222058917A0DFF5AEDC9213979C8716488573FC308948F839BFADCA37353F9F9
C7FC6FF049F4DD9DBD476228E880E779C7122C3823385F85F86DA752C3E01A8F
8A103A854A8545E4109BE8AD304A60B54F124EF2A6AD3E5E7EBA6AE533E22954
261017699960A1E27D714C2E2D370FB1449ED84B4169EC1057AC8AE70B3962A8
2A16D2F5EC8818734A52C2211FFFB785AC27000B218464AAD820DCAAB31DBD3C
2F0ABE99FB90E8A188E9E95E3320B650E814FA72E425FC6D0B5E245330843CC3
DB6AB767C90E8EDD41E12FA1973E681A7180A3917CACA630FB0BB7A62FAAF292
EE1F836E10730B4797B72E335F6C291A3BFD7F71EE335C3A6233735DB2A379D7
4D1CC655A657023C0B72C819D778F70D9654BDF7C3DD44B733468029F6DBC37E
1D00A80D8D9E7DB37593FE4C2AF5E00949062085BDB51E9448A41DB88FC7401F
725593E1E2281E1F880F829778EEE4197E71F8E59420EAE7964C98BDA67D7224
51A7781696EE91A0E6138EEA37EEA66A29A778841BAED8A196FA2C9DC4DE9BD6
4915CDF114F441422F0FE6F6DFC899C05D171FC0E370C9D27025B9407AFBA04C
19CBF35CBA1E6328BEB3DC8BF3F27EADDDB063543BBE32195A9AB39C791A053B
9D6B918B1E101C98DA8A4EB26FB47BCACE2863C768381DF68C4C8033BB3BBEF5
E93514207A5AA561F78B3F9C70C691B40F4ED7449650276BAF866B77FC16D797
B91398B1797FC8A8CB148D5C234F59A7E4E6F661431598B68DBA780DC8B34A19
AF4EA912CB694B86D5C7672E57EC16F21F87944F7585ACC0847A31E2777D0068
69A9C658B4729A5A2DB08E093EDFF069067F02F93C4495F9F171AB52A1A5BF64
C71D97FA60A71E3E705E51531028D02B1AD3E8E032AC8E599DE4DA19227401AC
F79915BC3230D5D90FA77C29DB133FB7B4ED7B0D7BDD3B018BAB38126626BE19
57BA72362A12E23AB2C4F2C20CE67ADBB39FCC59111A7A0A61ABB82CE1711D0C
193F0D086B49494669F901CA6013B32E0160B72239DB3C2E229535BEF14DD08C
A8E603EF0B6A5D6FD9CE8EB6DEA304E959E394802B82E7C4BC31E75E1CF077A0
6F520EC408B4237E2C5D41DB0B4395D891BCFD008BDE2F5936C9B7D3D7F7F9D9
06FD7B552B784F7814AE16D8351899FC23B6772BB69B5BFB57D118FFFF07511E
8C6E994823E198A79376EF3E24C11B6FA1F6DEA71942741038EB332490625EED
2F92A7EAA26C64B36C180E45C35457FEEF8039855872511C30AE0BD536024FEF
2E0F40D53EB1845EF5EA9E10FD5C63E01D074E58590F0C8112BC26F1969F9C24
6A4027E715AA573228315FBE916274AE6D17F25A21DD9629263D6D83E1C5E6F0
D0A42464C558BDB4FDBF9201F57C808EDE384E12A8235EC30E90CCA8AA3C36CC
C09C6A6D74F9A30B50CF7D4ADDBFC902F6A006AACD90582B29ABAC673E1C6D67
3A70B27EEDD61AD0C422B387CE691F8ED807C137C5841779A540211331282F9C
2997E5A81A6BE710AEC12B347D9238B584F24C63DD4A34D620644424F315D15C
C710ED000B0D28DDB19A4D99AC1E0E5589B7A6F7B2C86F2F7FA4CB217F201436
991656F10224C5AA8341E6658ACFBCD76E73AFAB6E5B0FC14CB8AA60A1E845E7
5AAE0C73DD9F872EE3D28075C27156BB8D803A64E4126866360A54D16EFA11DB
13E7E52C0693982399545875D6ACAEA88BA0A3474783CCEF9A4B65EE64958091
8951AC0C438C2B0413761A253A43579B0B640FDD1497DE8C21A0856E475510E5
142E3842906AA80914CDE9402E4B37D2A6E53BD127D2D3AD5149AEB5ECD8CE0F
A7609D35FB71A5E542B436D5C7D71A4CB29EE71D11E0C2769C4FE6E728D24E56
A0169D3676D3B731B35E37C70B8015A53A9C15AF4F78D0FBDCE03FDD2C3D52C7
5D852346EA02BAE2FD29487245DE75FBAB597E741336005E4A549429A51271D6
5CBCFF634640DB0D056DD5EC6D5A7DB00E37F666CA703105ECCDBC670A47CDB7
48FE6D422825339A8CA5AAB0B1235F8D8BD2F5D6A3515FEFD32540521E20DA01
A0141AA1F8B223BC02156AE4E096FED912A6C33DF4E150052091700123102EAC
E6AE38599BA0A0CB94E1099475C28A540D3EBC4EEB382E906F6B4A1CE6940F16
77D474945B0DFDB54731F85B138577CCA34AD3BF8B7677378DCCF3999EEC8E5B
5BE10FE19D636B006E7D7290A3DDAE1DCFD312C2726B08676AC7B03A9E5BF580
BBD88C779EF23B655F9BBBC31F4D54BCD94E4D1FB85ED55AC4475DE0DF309494
49CF2BC0A9C60D7DE24DA0C0AB8F50953F4DCE4B2FF8E60DFF1EA75F4BAD4B11
3C735758AE622B81CEB5A8F845B2547C6A43812D4ECF9C9E042425176A20004C
2C4A815A38E237DA4ACD903D32B7F9844B2E42AA7F5A5008C4CFBB51F2A20C24
C4EA6D69F6CC5E79CC490EBDB8A9D4AF6103A6CE3906449DCD35B922EFBDE023
3D5ADD67F4F5BCF49D61F67FB313A8E2F92D29A0B15C6792D299B9510A5DFA30
56DF9000191FA35C2999FDD7132B3EB5E95020B032C8EE2BB4543DAAEA0DEC97
3133A99719D7ADBB2678384749B7E1ED994548266CF51E5DA1E7D78283F24197
0EB74E258585FACA9CC47BAFA7AE9E116FC4A042404FDEFC6D20C8510CDE6796
BF13356BC9A3EDF5DF353F6CB8D21EDF5EB9B50AD6BE2804F23B1727C373DC13
E4B7B7F5F1A0333C4BA7842F4E9F3D067DA11B64EC3D1EA2AFD82DAF0087AD2E
0876AFC12C5777A2743F938C01847747CC7525DE041402CBAA4C45F273A75DE8
528FD3BC80427F9E3AA1EAB57E9E2F625484D388DBA06AA511B556E660B7C58C
232E6191D34214218E9C35838F7532579EF7430063A099A176DA59B024B2CE56
FAD58E3E9AB280F49EFE8B13EB67D91B6BF3BBA8BD16CB5EE0B3FB9BEF37503A
F4114D06702D250FD78E921D8ABD0BA3647C711CB3FF3CB1EAB2DD7137A9CA46
4E545382727CD0F1D75102D7BEB5737B3D3009136C2DD9950F1DEC8859F21328
330224F695949BFE58241CABC4D378ED409FBA824D76C2EB94A55575E0B44B99
5F05EC9CCDC503CEA55FA4032192CEB9D7160B024084A468FCE4AB2F876A1B22
2FCE1702E00029F29A50C636A6C59226685F2B7F885CE26FF2D2836BD9C03367
13420C1A8BCFCB324EA9D26744B77B4BD9099611FC2209A53321B737E518950C
751B2F929CFD04EC824A2439E9BE1C56A3A02420C2B86C24BB936C7752DFE88B
A682B788BF0113BC92352E873AFFFC279F2F3ED949F3ECEED537F134E3C8A2C0
13BE80DE36288A86E93DB390E241AC83B926EAE86FFDF45E037CC3794DDFF403
DC64962FAF85B9714D399C221E36A633C0BB26EE127EDE93B54A6C34C1B1F322
7503847E9CA4622FF6CEB1E9828DABB65D66D658349E0404BD3E7871E3952C91
81DA87EC0F40B008BBE4253D7E8E7EF16C916674FCC41131B68BA2A9FDB59917
8206CB366282C90FC91B59C8A0FBBB26408CD0110EA1587A07E4FB09130E5B0B
852C429A88461C2C51F924B919B8C4F98BA8BF058EACE6ED42C208AAC866A1CC
DB9FBF4227F1CCD9FFAF49713AE4B85EC34FFD123CC49EA507D36DD69F0072CF
B01CCFDD0BDEB72A427A0485F0FEC84B315C854A341951CD338D8B4E7A77E3B7
41ADBA8C621DE2AEB91E65A0D3E1BDEBD508A0CB08F4C4E57D8481592C817520
4B6BCB5196CBA074
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C2D1AE634032492B7023944DD1F9FD0CE2F7F4
67A41ED7A40FEA86BBD50B645BA87E3D9B98A309023373FF75491743644413C2
ED9D0848A4FA332D582D8BFFF3D0D13EE0E49102ECE2D624A0A5EEF70005594C
5E0F074DF55E0355AA33C6C0F2D5F535AE93682E855B1BDD6CE955627284BC9A
9199F188FD2CB5BE9839DD396DE541D181016DD6F0563A26851AD5EEBF32FDFC
699847D069FC2A65671D66EB451F54066661038CF2C93BEF8D83E143656B00CD
21885CEE544EA7E773049D63C65BD60F8EA4F783BAAA1268AFC408D019ADF2A2
0C75052F46FDB53266B7944146B3B7D9CA452453C825B92E606247E509F9600B
D6760B31870D69C4C15EEA09E1831354F7C4A2158796310B1E33D5B6A764A8BF
95474A18AA51CBFE9226A4FC31C9828CF2AC80B73CE2768B06545FE267B888A5
CC380114DB40B124C844BFFA3CA29E638C11C7BB98816531D1983A33A1BE7394
B42FD72BF46E4127F4F1C298D34F3811D5DDA7F33DC6E913E04ED663E84F7681
48C131B26525D173F07ADFE2C2AAF32AA5A7101270D15AA6590DA4E9FFFDE23B
9AFBDC82C3C8F14509870D004DCFF1B72D8AA0542C90E349863E8AA5EB8342C2
773CE38E1EC3132A28B15C075DA951F9AF3ECD62EBE43B473FEC1F76DA6C5508
9AF3D95E3AD5012C5ED5A9F1AE7ED88340879B2EBF04DECC857C42C1A94A526B
9938774C9F054CE6F54FB243BC6C66687CF0155E10B53A271F23B6292718FFA5
6E5DAE5894F1924E3A5BC82120DE0F44151150EDD1C65A3D5099445C0BCCE07C
CF4C82B318494F42C776D9482C86646218BDA22F6E793C31EBF5C89965E329D5
452E084D72F8219F6D0A06EE6C0F733B035CCAC9A2CAA288BD94212203C21A39
B686F88742CA702042CE6FEE1C914085E7065FB50E28631D2A286B9862B0C691
72ACB8AD4121F47D4750A5501018DB4BDD5B64DF6A6F8D30AA78C33E121DA9D4
AB827E616E7357557C23BD668FDF38CF6194AF036EB3090451311D2E0315E7E1
38A9C53D00E01279397F08669A63BE88715C699C1A7A02FF77CDEE3F0D6C30D4
059BC9F9DD82CC123F00FF7C25CAA524C8B374AACE6AEAC8CB4182A887EF4B29
4EA35FC77F7364BB75AE2083C7C66E6C13CF17915C9B7EF1487F54EB23A1CE0A
B8CB768EDF04DBF511A4639F49A908F0C231A396B14B2C655BE5952539F63A9F
8AFB0F2BABD93922C7DB78C54E81C2E4C11086C35B56160359E166BF88694D92
194916965CA4B0D9FE1F35DD53F99E96005D40B3D072F7F84ACB436A01134774
3DCDAD88BEF8B3F7104BCAA6E752EE90D2B38F2CE715C6AB21674E82E6B49A5D
CA8AEE53295494C657A9676AA0B493D7D546F9D46F5873F4E4017972377DB456
69B6CAB61314565222A1493030E61D657AECDB179D9AEE28C7CF7AD74AB715DD
9CFAA477132F828687EF2A58C54D8AB7580EE3ED58AEB83B72CB902DF6D3064D
D668D016CD47C8D086A4C9BA264829CBBA92A6F8E302F4CD994EC08C00AC6A66
C51254F7128403B6A5B2ABE4A8B54B457DF7CA439382D1E5941E62CBDE6A24BF
40246A18A8D921257BE9AC6BF7CB079D9EF5F5BAD37D218B1C3735FB7D517C34
4AFEC68F345BCEBE40A55B3DA6DDBDD8E8C6011903736F02F04C2D2EB4489007
C555A6A08B437AFCF723A8F721B0600E268AE9B589919EE6287229169AB6A7B6
79DBABC420AA6231DDD2B6A02530540DBD7FF0FE7EA3CBCCFE293D8288A3C4DC
EEFA1F3076BB941B1832E3FDBFA3335CC6D1E2BCE00279474109AC67B7D0A034
352C6BAC6788DD87665BF143F03485E11FFE1F67FB6D16A8CB93137BCE2E4D53
089C9246ADCF057578194EC0467C42F53DC0838C1917ABDE57FE1D34CA143066
E10440056D3EC28D85BB53EE04612C6A0D8E6BB90C96A90E99E7CC878C86D863
F261E8969E275792F7C38F66CE9BAB1CE577EE970A2B5E013E23CB0654536FBD
A5400F30F7E8F77C2A44865D97EEB9EFD4AB7C41035E3955A08337C981230328
0228A1E6E048CC39F0187524756597F57FCB99FFDAEF963621BBB8373366E021
ACFF86D1A71187A40F5776AF971B1A2B727DBD281F3BF2D1075EEF8C1225F96B
9660E087FEBEEBFE490C45E28A8B6DDDB556D22D3BB579328E4AD9D5C3475D74
CFC7CF7E387414E4A017F9FAE43F47C36E5544A355DD24BF3CADEE7E8C956454
650FC6D9ECFF2EAD25C3A3A326B77B817ADBF1E5A669A87C3886435AD51C11BD
77A2137AD9E2DE4CA0AC1E9AC3B8B92A16F592E4082E90DBFE87968918000FCC
C4BBB3D0F0A77E12FE8705723A5D49D049F420266F034B72EE3B707AFA7CCC7B
9DC973319C4730E532FC9A74A40B28124889243D305D4132793CDF8DB01750F4
DFB79975EAD0E536F9DE9959CC5CDE05CA9B914F8749608248E964F5DC2CDC65
AC636325718AF7EA47946CFF07C2DC0FFC04786221F2C415B3480FE8DEBF394D
18921C6015E0E9B1C3E60150E61B8B33CC90FBD867BEB880FA518D57488893EA
46C5C9397942013B540DD291372C1B08DBB589B5A8C4895D9EFE1182E11CC0E7
AE75FBCB69890B519F7B53237A6BF0906A6DFF38E77DCACD3ACCC25E153A3069
83849D58F61DBD9851718C37C2FAAC141EF01103DCF36D894D9FB2FFD42D850B
D31A8B43358DB8266AAF65EC987FC4455748C8913FC00A089EAB8BEB6F1FEB40
4E47901751F077A3443B933694631A2EBB0EA34CC47CB9695CD7C3FBC4C07402
313101DD8A026EFA8516683FA3A30649486C002BFB9868A7B499DE2304679D96
80B7C482A7999611BB127FC8EFC7A169F8CBB6E313016221878340DAA18AA6AE
A3B09943CA8A11A99510B0A8B7B1E654C8AC3E8D668AA3D9B25927B9001E6ADA
AB86BA6B2B4E28F3C65566EF5311D4A151152979A546051AF86E03D22C944CF6
67AD123F9C30FF7F2B77E767A4C9492E72CFD969120BAD216E4DB5EC85E5830B
36D54688036EE18D076090BCAB0BB0A9A811A6D2D686A31029329ECAE472DB8B
59B3D595F7C8662B9D0DCEDCB3D6B3E6F306EC12F62083A6EFF68077131EC3E9
5A693F7FA901E8967A14F6F3A7CB4A47A9FCC007F910998AA28D18D0C0D347BD
4A20038A2DC01704A1B7852C0770A8B48D694619D3B6F77D845BAEBD1B168063
03B9D219B2782FD07F94C8534E755ED59E03086E183FB95F360FED53F1A1E6E7
CE34EEA5102A369CF06A6E34DF084EBBB3DAF7B5D21F6CFD57C238F564051172
45C74D0FC1B495593B3D020683696B7E034C4CE1C6B388B901F937A299F65C32
17180D4BBDA879E194B894904916531564BA32C99A9E9E4A7793BF6A20BAAF9F
9428E3695E72C64B3C2EF23BE1C2A88F617DB51621BA229A1410ABFA2171432A
1AA586E65AAC52D45E38A60BB3CE6D39B62E74D162022753ECFCF0A21A73EBCD
D3A3780A9B94E0BEF9D47DD2385136738B81E92728D1DD4EF6168C677EB452ED
7745CBA6E884CEC0ED22BEB7364E5ECDD2E07343A63DF827BA903093EB249BC4
7A16976E813D9223A95FECFF4BBD250E93F99D78494432E4D68B26A487D01ACB
26D732FD54BDFDFEEF2AC5DF8D61E0F261A3B888175DF42DCC3BD0D5529350D7
6CBA16B7A8667DB9DFCBBABD3164E8FDF9AE090685B5308B9516256C57DC4B76
03038D6E1BB47B5C74D184E2800FE0A2ECDD5C839307D93F710B1A0035B05FE4
89494276FDA492539ECDCE2E4BF7B7687F1681D103D7DFC415017C2E5851A2C4
A36D841ADED0348EF0A843D0F05CE3F579148DC11187F63B3C8DC2BAA9230C3B
2CD654ACA8A513F352B2484072106A35F92D8DA29782A1875C6C8E74B0C86C0D
3A604DB05D2D7C3AF72212F5C808FF97D6EBB5C4DC13B15101EAFFBCE1DE0C08
38B32FB1886BF564BDD888F39086B6594B85C1F204B6509D5201534954EAF50F
BA122DE97FEC6FFFA4998E879EAA280D8C528B77C22B572657F8EFF6BE77ADAD
22FF83BD861FCD07E1302D6A3AC106A7E2A161415478975E25D1E928C5867A49
5F88565BA02F0FD97017393DC2A256F557DCBD0CBDDCFA83A5772837E7018EF4
1C5D418651E3B1EDFE3F14ED7BA85AA03028441D5AB3FEA20864A490BF977C9C
50690DB088FC05D1532D06086CE3AD3BB9DDE9851808334DD1510066DFB8B9CA
B15E072F4D80E6FA1492BDE59F46CA026F44D4214C18A3CDD0D72D52948373E3
8251C508E4505E8453DF9C4DC83E3B37D07E571957BCC050B841774BC20AAD8D
21C3991D7DBD228759702CC5B12BD66CF5E8CCDBAE52E3F8F0327884D3C7467A
1598A876ED18B65ED8CF23F20F00F696EB582F5EAFD33A8B88C6D49F1AAEFA49
BA629E633B32C3C2864C63C768C9FB963D2338E603449AA387FAA45A1675EE98
A1F25F640ADF732D0F3522AEFE1A3BA517202447C343BAB5CF6D6F7B82AE7FA9
8BF36045A5B656689AFDD90C8CEF6056EC65CE4A345F755D5137963FF6491BBF
618C94177E99B34D229F4027E09BFE7642BFB889F83B3CAD005996A6309A63BE
BA0FE32D73F301701B91AD54984598F2AD46FEE3D68A0D0886AB8D173B2FC786
78B5FB7A9D371CAAB9A8A382A36EAB6BA5C8DEA7967B2433B6BD77628D7DC922
21438E1C15460910143118ACB750D98062B2D28844E50E7E44723EB4237A9871
234506BEF22737891913D14DB366F3BECEB3445CB66848AE60015545027C5D66
43ED9E898E52F22948AA61B751ACA01F7DF1FBC7452B5D1E789929A97CE2DE07
C298648560D837FB67D3FBCA7A93A80A32481524ACE2C9A7CBB1F832A94E176F
8B529878D4C5E8A0F09E221AF65781461FFC94C69C62018D6429EAD8B7F87627
FD63CBA0AA6B857291BCDA9B6705F0B062A78EFC65E27E551C79202D3AB929B3
2AEC0947D1ECB82B90FB04F177F3A072B3F3760F5FA35BCD767FEE4E9808EBF0
5438BFF2456A323564922DBDFDAC35CB538AE2C6E1BD11ED4F9697EDA04529E9
1C03B49A5201E011D544F6C50221963188E13B19B08630E5B4945F61D09DCBD7
E32C0027AD3F0FD2A3F2449EA5006EE0724C5B5D085846A3C7C30A664C30ED82
E6AF4E94FF0D5DBD3054E122389437002F30FA2488B32710451F72B84A25624F
30345A584BA50250B1620851BE2D39031BCFA0821FED4A2A8D9F8B0FEB9201BC
B6037C927F524EE70AD24F140AF825F8A3708FAB9610B70329CBC2AC275331FF
480589012D7881C8E03A1B8D71814BE7FEE42E6D1EB7644C10A722A014371DC3
9EA254984E08E607269086C7D6D1BAADEDE43E477B859D8EEDA068246F367E88
835E166A90FB1A389A34259B085014CFDE3E2029A04B11FDC740F7963E3E020F
367FD0BEC68717E95B7597AD7CACDA2A6A4E8808BDF0AFF9D56A1126E44E7E26
4E1D33846016AD0B0A7214FAFABDA3B72860BAD93A2E414FC4E3FA2AD4257AFB
55B24991EB80EB84C857186645C467EC0164AB6086D2C2D95FA16B47C748125F
1CCF350E3930ADAE5249B3D5CAE21942CB182BF5D95A135B9CFF91A00037A302
5364DBA8603BE34024535D6C5A374D7E022625ADC54C39C18A26349A63E8CD5D
E7E5A67D422015096D6A998EB98A49CE1D72DD702D31876A1CFCE58D619A66DF
8CCC3116319857380A9B3EE1860D5F11A241C4889FC8C0F634CABABB7B4C474A
A9D083F8A63723F7E5F750F0DA9C6BACA4A3EC27477824330F5052B43E42A8D9
BABC1C3DDA7B54BE6F77A8EE6D7A1161558E0103D69F95627A6E456099191E59
CF11273AEB78CCE20956F1F48D71825B795DCE254B9F4129E55D03F4CD2CD99A
E5AD22F3797128CDF102226832FCA7120F8F3A8E42134F1B6B0C248D56F247AA
6B028C60F3C8EE3A7AE59C665CD642F51EF1EBA346173E544D66ABE1553D2FAF
26EF405C4D00E4DD9F83370A2A10901005F90632E54F8CCA66519CBD3A850793
875696BBB9D0420507EDAE822C094868ABA4C18CAA5EDBAF9DC73B5355FD3F86
C2DB87EC77133C97128A29F68619E8A1F459DC33AB828E9D80023BAC482F8B93
AD55F1D27FCBA9FDEB4022640582C972655ECB16686869E6DA6416ACBC3A06F2
A4771CF854FE240328C4A2F37B9C73FA6AF719821961FF7FB9CDC8E87628938D
6D0D86F38133965B26E2AA96012837CA40EDBAAA2ACD2B44574480A072F8281C
E8EB7069C9E67E96EA825EBBA92EC6210B4F1385E79D29EDBBA19755C85371FC
C5A8F92195C203CEAC6A1BE866FB61F0E0ABF34FB39B2397D00BB653C7710594
C25B7D23ACB3D33E5D34214544CA05DC58670265FC8FAC50DA281BB7AEABF17F
24254496DA229B295EAB9A6862DFB59420A1979C1AE02943C136BD85269B02B1
0BCD497ECAC785BBDD2D86B42FF91FCE7E06435BB294023280A0A3669114BCBC
5B20BB6045BFD5AA4BA26DC69F2A27DAC4CCEF5353BCA7EF8CE6151D158AA7D6
F4DBE64EF220697B69063847180B6DCA83EB97A55FFB23788271A23BC2A85E36
2016840676DE91F62737BB54C4AFB0862857587905A91173BC23B3D1657C9E8D
CBDAB522E1F4AC23C2BF511A27D667AE834A96925698006601802F57A61C3BF0
988FF39084FE11179521E18BC7CF33EE9EB899E6A063314391267AFF415923F7
250C5BF3BE382D95FF4BAAED0957B2A13CCC8B93FF7BC5FC7C7A37AE0523EEA7
86F83AE2F256EB21595E795B727FD7B5FED0B59CCA854BD8A05A139AC2C2C648
6D2660348916BF68357880C88CBF9EFB538C274E3C64685888A61CD2FE2A3912
76B1457CE56323C7E4428D2EE1EC6B1C465BE35668B0A4000BA2A79E72C1E086
AD76C19784527E7D439BC235430FF572AF04F2704D9367231B1B8C4102A58FD6
66120619CB151594A7DD5C38E6CB8C5F4423E7EB86547851EF4FC7D829C4255C
893F7749C4E7B6796855E211E6751437FF09B350BB5369DCCC0739E563C6E1FE
10E8C70494B658D448E92E67031B18FCC2557726A60AC1B8AEF5E26247973976
EF232F76C9D0C0793684D68FE95129C325B04557A83A6CB987E1C0442D9FBB38
539AE5B64C3EE50C428270E1C017E33650E24F353E423A9254DC034E6B06ECF5
142F182D1D02504BED42472B74E8F6E1B541E2E6380789E848AD295B7FDFC54D
C6939A8FCE4E68B91BCEC611501A2632E9DDD7EDEAC56C518175212C74E1EA5C
FA4BB4FBCDEEE2DD064CE344608BEFC72FA3BC09B59A2FA9092D9F909889BB5F
3286E69430D36A5D1279E6A6DBC5B79E97D0F2752100481BBD994D8880B4A972
C3BABBF56D75393A665BC35F1E515F6BA570464F63E2AFE52A5A2CD263C77714
E5F40109D84051311E6BAC376A65E1D55D0D712E617802976F8F223C8ADDCA89
5309CC0F6A0578E32526B0722C162E9587F3E57B9104CA9107584F937BDE200C
D5F3148055B1CA561E2BA388DA3495A1AC0589EA038360616F45D67D53C58C1D
054321E6F5949B4A6EAA92E985B513F3445ECF5D8352F586DE03A29863374A22
72E6511BD0987B6E4A1FBAD528ADB4433BCA204C5441E3A478F0933EB129EAE4
4484E084BDDE7EDC55FBACD2586F3D71442DBE3042A47EBE4BA1FFB274D92BCD
6CFD20D74471AA7E56B805097668D76F7427FFBA94742CADA77012FB60C5E237
3B24D4D476728119EF46040CC252B957DFC1A97D522C07B0F972DB969DB771C9
0903261C60884073554BD0771EAE6A1500B64835A63DC19AE18F54402D1D6B7E
CA0285F5E924A72A2E58CF166BBFB011B6C12327592F8B086ACDB860B1B84DB9
BDA9C7AE98647776122A26396D984DADE28954EAA105FBBDAAF70B7ADBB35E0F
1641F668817E64481B4479C7392E646CE08EBBC0C484315EE485A8714EB6009A
9C06D9FCAA68BD3F58C8E45D64FF0AC96A7336E70C94832B1C518D9EB6F8AF80
07B3F27A59C82174638FACDEA968C7ACCB3CDD0260801639B3024B7847E99603
9601F6AFC86423DC06ED4D34A5E4A2F4C5A85BBDE0A289CFE59086EA4FE89B9A
39149E124C564C5251F613393060892D5064D4177FFA919FFB035784ECF6CB66
BF597BDE3FAA27251F8FFFC3C6838AC1204F34A6A16569177D6B1C7CE10B9D70
6E156C470460104C977C7E113345221695665B91D05A8F5D15D1339193DA369A
7559BE855EDE27C68BF1E5B9592241DD136479A65905FD0062C91DFF73498439
BBD8D8A22E4C49A366DE4CCB332EAB20A47BA58EAE5519728F397A677D32DEED
9B4896E372CFEBBCFC66C64851171717E42CCFB6922C2D5D6FDE3D0553CAB203
DA8454C6213212E127B968C9D09176613CDBBF70DD34941FD4A6EEF3C9CA5CDA
4184D6C7C197D4A0B223B1189D460972273C6F5D2619D655C3533FF17CC7A87B
F1B8EFD4639AC309B9E8CB4472C20F42917BA4B020DB0FBFDF8454918A719C5B
27C4DBBE2DD951ABFE4DE5DF820F1FDF5E96A02F947946C46A6DA7027DF02E54
B72AC91B90E441BFB87CDA9E22839448247D40B23A37DFAB7F41D82A93F3E95C
C117E21AA4E3A42C7E69DA6CEBD01779B1CAF4DEAB86E06EACF7F5DA3BC32030
E4E23C5E0E7E83F1FA6A2A4078CCA035D62FA290C68B1AE621530773D91D9F5C
B7CE178C529CD741BCF3E19A3AD3094F5C09CAB54D3F9B5EEAB01EA2E3783E06
B4B229FFB653DD3777D643DEBCA5AED237FF2B19138C46AECED0CFB8AA39A27B
99AF6894363B2114294E66864446DAA5CE2591121466393EF1DC48BD8BA01A6D
096129CD99FFFD3CD8871F2320F97EC724BEA6F27CAB18306462FC72D92AC07B
13218E87BDB04660DA44963FE1431EBB1008D8BC9DAF2A58B800BE51509F6851
73FC157CA62976128D48E72C16998F4447393F8D082AC5C1C04204113A6B552B
4E9135A0EACCAF84AFBF5D808D3204842E0FA5E10F441BADC966829374E4CA55
CC716EECC5821942383009136CC91A8E901BFAE877E4EB59F3F56FF9C1CD901E
CEF7777382B77264E93192E37A07A6CA7CE22C4287DD7823FC10CC77248DAC4E
0D14CBF5119218DE8495A5B6E6CAA4CDA0371D452F65EC9097657F51EB4D2493
1A723A236AEDFF5676ACDE6EE71DC9EEC1130254E6AD0DE2514FB118396A7A9C
3D50F45DA7B7AC84DB9EEE7442D9E34B3281BEC63A84CFFFA66D1C3CD574544D
7A61513691DC7010505C0F1C9BDDF1747CA2F97096D17973ECAC4D16FD02C19C
53EA68FDE62754AEB1E15C5555B9C70B20180D686B2FD1CE008D5BDBDDFE4BD6
93ED67DD30E6FD18BABF43809C925254830DA1CB099A6F82A33222572B4DF407
490D64247BCC7730A01122D446E3AE0942C46A7199C7510F9B2A10DCE4F97976
7770FF9E5D6B234942404C46943A761BADA6C3B4B9C8B9A0EC828BB7070E2DED
D1593FB0DCDB5087484584C2F7356E2A0C67AED7B24F09528EC9648A398EF900
78D11D6C03B6E2F3AEE83693A8A2CBCAF17570ED25CEE324888E63EDEEEB173B
2F166FDA22E38A447F7408BD9DC974B52690E20903D75CD251701B242F82E220
5AFBF3D4BC3AAE4E45E7A0979048EDAAB75DCB29EE2874EBD426E37B28D9B043
A8E155830744340826B71B9DE34E73FE10D63BEE196A0A83F333D76A43C1AB10
951F53D733841C68460A00B9D4BF5D79A01DEFD54B921A3E1EEE011BAD68C03C
484CB57B5D5B537BD2FF89086BD0C4CAE557ED6632CBE325B1A51E10221B4EF8
2D270EF712C303999771010C3A7D2A9ABBA798E5F77B8BABBD1B13CFF6A9570E
E02051A7FF5F8BF26006164709596C0E78321C9CB5060AE2686E6CB898806826
0570B288C7A70612C79D84175DABC90EE55CF8A90422F7D0D4A260E391060966
EFFD184FDAEE2BB5328CDE4A0138FD7FA882A8C031D718CB10253A375633442D
89735D609CB0F6C0971EC9C5875A3B85B077CFE4FE4CC5F070174140B9901874
A34719D07E1ACD55D0AB9AEAA6C3C33ADEBB543EA93D2D21D077C840384652AC
962A19C387672A4D101E1BFB07CFF9F577580929FB8E0E5BCE6581A2C28C3511
26B799284434C917AAF92C822A026D57E5E0A4FB5A8D08B96311C845ECA7BF9A
70761909AAF09F2E35801FD76EB4956C28D804A745171FF2ADE6B0BCF0115B22
E5DC4AC9B7F548EC241A295A18139F61877B66CD0DF79C3AE123796DEDAD425B
DC1C6FA44AA2AF44371CA8B9A4450DA76EDC0167B40150C5AFC58D3403A416F2
43F1B58CF54E94F3DBC93516312D82AAB17B920AAB6FEC1B5DCED2A635506B1F
A06982ADF386FD92A9101B9377C16A41AD9D29D5AB7DC23CFEF8C3A49B700AEF
E3F8CD4087B0766575358EC8570A242F88156B652A99F4A644D178FD05C543B6
DDF44F265C115A842CE017CC46FE08016C3D36958D8BA418D5047A098C6F69AA
201B4F06C7E8832678B831C3582E1A5A36B875907703F08A3FC801F3C7162AA8
8D31807317CC009F2DAEA7DF82C1709D96CD3D475CB31F758C0B8E45B86F63C1
587C09CFB052316D4D96E57440D0CC6DB88EA8AAA236AB35C6DCBFA1165F47F8
F52B0787EB4B70BD05817FEE4E7B14727B086F27E43E6E3EA6EF0DE68E1DF341
09215DEEF49B959AE6CB67471140028BDB77F8E7B8B6E869D3E55D11D9759587
F283DC60A2707EA23063CCD810AC96F667A656AE31A1B152FCAD7FAF84983CE8
1E63A663B5894F0DA159792577541DC4FCDE2F9A9ED056CEE5003D5F23F7CC75
812D2FCB2475F074A0D44FB6C4BBCBC4198F4DD44AD245F4A10FB1903405EEEA
F0EF6792E8F5CF49F3E712EC33B1DCEBC465D8997EB80E9CC1D17998A32A0F64
14BFC5E4AB5E0BCDD5E76534B21C0CE175D1DE07002E86961D2048A927713588
BB8FC5E9DA86BA113C18825686F9ED9588F06261AF3E8D1343D49A90C916BF9A
6BDAA24DE24D6CD65831B8E50C195D0028E77A8FE6B6F2BECFE199946D22396E
06DA8FCA17AB7D274F6763C471FCE09BE830EFAA1848D82076C95BF7C34676E8
F22C5EAE00C1CA5E0AB1B1C4E91D35DF76798F8EEE3A4373691772A120BEE770
98BB898BAD2174919C3F21ED67889D8D6E2037377FA7CCD8A82788A4CAAE58DD
95660BC6A6F743E66DDE0A4A395F7F17F5D533EF8A83A239685716F6A646D2CF
FCAAB29CCA2414C2B1A0F7577FF148B2CDA2B90CB5884440F464CD57295728AE
47792EA4AAD3D5A9753BFEF2BF2C41938C4F0D045A0C6449F4D734347F11DCA2
502FBCBF32161D54A462A9B88240B5D502D625A371A5F803DC9543E5330062A9
E9DDF05C6D7A8CDD807B3CE00CC05F6CA1D87A1C83530D89E8C5659FBBC1132A
2366F8776B13371D2259CFDA8951793745C80493B3ABABB911186600AC62FEFF
F4F7754E3AA455FE84DCE9B493838FE10BC530306D2C11583E4DFB2261664222
5A5AD8C4FBEB07FE262D75AA093A73EB46AFD8CDFC66887FF3C563185662EEE2
13EC8671211A7D1F1CD90195F79A0A30F5C3E3FBCE53E520C96C0E14D81D5932
0793EC60AA3AF4A3F68AA5E11F657F898F58C7F8D7C4C4305B192D25B4CCB9A9
D05281EED29F7F795E47F8978390F72AB65858B859427724D09F80311996E964
292ED9D9954D71AF0B943E3C6B83B82EC62BBD310B59E5567ABD3D9951F55183
CA0B9098477F133CEE715943C7B965D9AE82D16F0DDFA0306B260C5CD4D9A581
ED5E2C21579BA36AC6ECDC5F4BF936EC6E3053A312FA5051DE199400DB4E7D4A
B056669452D995D8DD5BFBE8F6547ADB7CAA32BF9D5C2979D409E4D68BB6DFCA
0137B29376D8D365CDD8FF305059C2E913B7978671AC30CF33D72D634ACA4FE2
E0A3A7504E4A466962C44C451D312DD179CF16BB1D590CE52AF6E35A84F73868
1252FCA4A140C04B567DF3008C7C00ED5B17DE359DA187810E21A59699964B98
2FC858089BAED969370631951C63F5ECFA17EDF114A340951A0130FA36CB472A
B1E6FB8721031D20B6BF4C790B5512330E38997113EC573B375CF75F70765628
AA0078EE24881E12F14EC441320B96A8CCB7644420DF80DB1BF5E73B33A29B7B
447820B08DFDE19F665A0C32300D5004DB1BD238141F6E74CC0B13B522BB5F53
10208AC999A8717636059CBE56B9B2FE8226C32A4A1F73E73A197440942994C4
8662C0A8E0A51ABF7D6E42E8BF55D21E90C0B112A1DFE4C1984FB097B3F39502
E6E46C64F6E4BC4E3FB452F92DE7F4553BF893C52737F3CE1218629AF962EC95
FBA423CCCD94DAE6EDE99697B0209A0E06E6873997A3490967DCFBB99FFA480F
F4A195E119164764D83577FFB50B7976A5BD188036F0ABBC1D53368A519148EC
8E8B05282FCE440A2080394DE1A4E48EC8552BAE2FD82785988D02E3FFC53FBD
9B984B078D99D614E5C88C16C92401CBEA5732C69BAB87EE2217FA91AD48D816
1D8019F411F46AF98FF43B1D23ED27CF3330CFB25E01E9F870CA8523DCDF93D5
7CE57C1759F57AAD40360422F59F50625FAE9DD08A8BB3C39D282B7D67204F64
AB620EE152ADFFF6FB35CB22667E746FCA5BDC03AD9BDD2B9ACFC3FF359CC866
7D7887C9BDB503D478F92FB6CC5E7E81AA4BFAE2931190270D36854E49471D53
8D36CD1DCE4AB6E7671F4276E6CBC2A4EBA4E6ADBD59519520CC06361F075BCC
C0E4C90A598B0F9E10ABA2284A49E4A05E2A67BC0B4901E9BCFB5BDCE3DFEC1F
1D7EC2651BD7C0E4425A68862E6BD94F47F5E0344833AB2E8E374EDCA9ECF658
E4B8978DE1907C5B7D407533BF8B6E4AE102F5299CF5F46587C653E59E17F19D
536F88B42E357A9FAF092F7C3D4B36042FEFA70953AB89F5B5DB2B4BF81C5349
1FC19E2A7D7C95AA320141BA36D681CAE0F562A8FE056259BFC7302C7B37A245
44943A920B54CBDBFEED7D4FA7FBA53D05B1E203A0A2127751EAF49A810281EF
3B5503760EC61C5A47ADE1BDA0E7CEA9245CB429E334610A086977052B17A032
6267723881234A0A0E4BAD9A9260DD5D895AE3276AFDECB790793CA4A8AF7BF3
CF980657CCE5506A7AC923DC5E300B27F32617373CA7CC3A03996EF52A5BAEC9
459623B4C55EFBED1F8CE9016F978C6B2B032599C3B0056C797110E8AC87CB43
C954A906EAD36D53FDEC9C70BF01856A65B9674AF7E93E867FDC00EC4D156C85
95AA55147A388E68FFBFE22B9527D01989A45B5543596F832A953F8F0CF61F35
89D7E111A000D42EBDFE2F1E19060E939D525F8D0115C7B55B31026B49433392
C8930BD9661B23C2EC0E0BC217C7F09AC718F307E80B29885BD8B971C8670EB6
567D6FB320A18A2606939F993310890EA3D630838F6E008F965959F14F692AB2
81984EE6A56410101576B49CE7F7F0E37FA72987C464D5A507A40F2C061D1DBB
C2F811A167EF58E2677AC6AEF085D4C0C92A8021611C8CE90611DFBB2ECA1278
3242342904893D044DA384E4836D27E1539B162BF6F4600DA9E1C448DF914D27
66AD793BD03E07D5932A5E64E2E417C6B64D84B19F7C2D7C143E287B6CF88C83
8BC00D349557D51B7B124C64E88902FDBCC38DEF58124AD43CED97BCA4105BE9
609DE67972EDD1D80BDB9BA1AD4D40E8251B828BDBA6087CA9889B31AA8DDCA5
ADF851722AAC41B5ABF27FD6F447801DBE77B00FA27DC639481AD72268CE4545
54DBB8E693716D9FFD979342FC6BA3315D4C717CF34DC2F50D45D391FA8209D9
515AAF77F8C38CA8468E616771E6C9093D7E3479B0D900A9B7490556C59FF1D9
066D38BA8190707725C13B8627EE29DA3443EC28D399200BFC00FD0236F2EB01
AB00F69C9BE2920418067A8406791A29D28EA30D94D516469FA0DD449577EBDC
00412F2189F2FF6EC30EC7E3EB3D804958813842795F463A942A211DDF7F5179
A1F26393341B8C4ECBA4CC50F8131D570FF2C9540CDE769503A9108831362E78
8658C0CC05B50BD5510B97CF2A25C5AAE4EFA94E1642B0216F3FBF9475529E5D
B9407FDE0D0B58F1B0E6288A657E2F3B2C51A3B31A2BE5D9AD31138629FAE129
F796770CE972003AC25FEAE68EE79FAB1ADAEC2CA063B9C5500FF2F234B79DC6
5856CA9A6F6CBF2D473B9E7C89DC19215FA388179DE4D224F19182BA7A39058A
0B57DB8FDF8A6088AFEF5FD1D7F8363E5D0A84FCD09A2ACDC9BA9D2A1B213B20
B0EBBF2BC4A0E37DE2DA9F46F9392B643309D447F1644A716DB481B54E0DBE14
3624A8FAD974BFFABD8E22DB7EF8B5E3A28F83EF3C473A6C31A52984269355B6
41D8A0414D327EB4BC88FA8416D1996B3C557F2EF9182692255F7A98CE9B93A6
45D3EB8EBEB9FECFEFFFADBDE676D98DD6204B3EAD5002C5200EC7F81248FDE0
B428EB05FDD26BEEDF3943D11F3CF29BBF653EB0FF18A376FF6FDE547A4CD3C7
D183BC22579756D7837D8F9A6060FBCBB8298ECBDB5E6259038E0C942DD92E72
09B2CCDFC5C711A3A752FBF80C009DA9652852659DCB7D2970392C6F0911FDFD
11B254DA5A780FEDCDAB6C133AC3DB55A9E502D237B04DF5EC040F32F4124B95
714559BC69D21AC4F1156404AA533533A8B55480307DD211433C8276293FAEBC
789B1F6DF42411B35DA56CA1E10837B4D590E004C2C2B8AC7C9FA1BD66278994
37AD0FEB03A1C547FCB7AEE8B46CA1410D0816267E8DBF928B644276D106E370
C9F20A160173B95A050A9515BD7715BA7AA3BCEC0FCDBBE065A4076A4D467ABA
1C8DEB8975DEDEE759A2BBCA40C811B9D857CF8E5105E9E3B98B5C8E1C938886
7DA67DA47F1AB1477AB327556B3A901BF499128ED228A0548CD9FCD5194B302D
289F4F28020A1FB4687EFA685543E21302A9E2117BCEDEC473CD9F69B43CCF1D
69F55D56BE380C358B794C2EE61099E7E67EAE73CB4E02BF60F5463B41824A76
02820142AA87F6E014AD71DA71F92A5D25B7789EBC6E59DDE60D2C11E0F66519
015DDDEF46F228FBFA9A2B597EF2230DBD6CABEF71D59DC7BCCCB1BFFCC5C70B
67BB5867F44079C6597C601BDCF84562F77158BFBEAD3AB69689DD7181C40B47
3C32A5DAF8C0F963BCA758B2A02CF70A46A485F5C5593A7FBE0018B685A34C3C
85CEDAABD9BCE6C4B1229D1F161BDA867582B43AF9F5C8CAA12D9F6EE5A8A2C5
FE898EB349CDBE1919CC375D1D12A1B06B72A0647CFD29D1C66EB4EDA345525F
D4FCBB4E5CB711DE81DD7240C890618A9B5B66A7E7AF6435290BB20178DA4F00
35A2A87D4A69365579571DE66F500A75420DCB24BFED4A425CF100156741524F
3B68C24FFB3540448715CC3C7689C0AC818C4D8691E084B841E6A856A4DCCE22
9791C6BD028B70E194489B1FD064E515CD8EABBCD4488E89D3E17BB2DF1E3AAF
5C41EBE3D6131603EF1AD7BB91A4F2843496FEA6D64E1FC582E77F6E21A71D0C
319A466F63341DC6A599CAFB5997D5A77B20D702EDAD43518F28C3503314EBDF
74EC146BDEFC01AF39249F47283B9827038439ECEE402AC2178EB9AC1FC6A01E
B4A52E159CBDD04A49B7B4737AD52783C5737C44F9E81FD417458096F165223E
FCDC28F428501DE2740A781E2FAB047819D297B4E7C4F285F9BD614A00DE6825
572189A19315AD39793138ECEF7C54EA07F6FDB19C96DBA02AE3B0DF0C16846D
491F52FC3FF1E48BC9621717E6C707FFA2102DB5015E21CC28D856E1923E8FDE
EC710B6CCFF25048A5010BA19A56DCAA101DAA6BE705FF575048CC768BB8F13F
A339A6D825DE96A8A5AAF64EAAA61967F079C4B3C2FE1DEDB6F84B7EB6D57CDE
9993D2AD4F956BCABA7F257550F1C4843DBB1521E14C3D3DD17958D2E8D1710B
7ACCDA0A6B627687D3EE4AB64AA66E7C7B7FE2E7C825292C453D52C32FBAC82F
0954D1DD57FEEEC115BD91491415851B6F538914CA986D90864BA13504A76E3B
85EB914B54C25BB69B7607279862E41917DA08F87D352652A3C1D5269587E229
5BD4748871D5A349370AA3F656B45B5A31A4B2733ED14AB7E9F1BFF74B6E9F91
9EB5EF964EE0545069D7AF3ED443E932F28C1FBC220A4657478652D91ECA9474
A6AFBA7603ACDF0BB64DC77FA78F87D3790ACFC94DF72001C1F094DECCDD9F43
AAB88640D0E93478869EE8F6D2EB9CAEB51D021C4A341B3FDDF6431296ADF0EF
B0E8B08AB13015B27D05780681C3BC28000980397CC58C2EA7E6A19A68B64EAF
236A3468C0F9453189A6DEE21F2D969EB0B7E169D0A3EC24C9454987D9A8FFE4
A83E7968D3E4B93F95F9B04BB3598E49B7B58B7F38B6A8718E5CB12B8789A8A2
67C1EEA6D458112EF1FA850B7B7BE95DEBA7E62F33D813B1D32B75ABCE6A6BB0
30764C2D51B3AA708541C4671738A1E0CC16CC4016405B084DDD59A9B9AD1018
F245F33A42CF224F327CCEB361E84B748FE760822D3330ADFD7241F285D511A4
10A3CDC5883DF8E3CBE52FAFE31266C2CB600E2D63BCE010820924B60194240B
EB2B017C9C4F9E43D85CD32C949F3D91E33DC5022CE64D636D0BDEF9A08A4AFA
85AB3502A38EC4C6BE7E0A995FE1F23ED1AE1984D78EF2399E862A24CF362327
272589C6F61D91A79C2D61038BA7A2B491D495B1594A04C8A90B658A61B785B8
AEFE9DBA015D717BEFFE0767FCFB1BACE58B9B77225A134F852F6EC3B1A72B4F
CC5528FB85163B2E2D8F055A5D09646BB6027B536748A68C4F8F52F0A87021F7
73E844F7E60E12E4EFF056C33849DED78CFE4ADB26070E46F7E452BECBA1FCE5
2E033C9427AB5FF346430D60D8F895722E36DD2C2DB6DCB7D04102E568DFC932
6B499854BCB7C7CBCD9F998E85943DB92538098BD30B3B2BEA74A8DAF0873163
4F31F67BF63DE42402DA190130A7712BE3B76ED36626C93954684919A3011856
6A9B9D406D3BE27796E51BE6945A8CB020D3517AA2725F29A668466E60F4B88F
D73A25CA0B96D8C2434A8886D583181CFE693F96F674A02769B296C0468C99A8
771958C008DA29E18492BF190333691B300B4F520C5AAF132A27B809011676A7
0056DED9C4CE09D8F673A91F6451F6CA0AF3C9D75F66C83E885A167CE6ED9014
7C5AB8EBC973CD8D3946E50D5357E57CD8F3FE6A3F7FA4217D853967AF5E3659
D9628533AE56E6505E51643B31245412952085C699EF4D7E65ADC8CE164FC697
FF3BD138B0559D3E5887B7EA9C9C54F8335F55C8F8DDE3302867D2027B198F10
AB9C32AFE6492E434EAAC50EA03835605E573A5E9DB59361545F5AD98E4A7945
9E1B53F2573655D4AA05C100CE303EBCC73BB5F44FFAC4064ED88F5C38BDA87F
5FA8880517429B9C4E5FE9872F32EE1D2D26278D146F968614587DBBFC546E89
9C8F026B7DD5435CF699EFFC1E7C2FF53F19060E6B43DFB2B83EC0844CC2D620
523FE20328A0C23830544D48FD3C0AD0D58A4E7668ED6054923188627F7C9D62
3037D399D0C37680C27310CD065D11C45046EC33B07469F871F477D9BA068AF2
F85591F15357FDFCDCBE0CD472F226ECF7FC25E0B4CB920DE053CA8B70AB72E6
BE676B128D30841360D30B9407C3D09FFCAD95A1C64FFBC6312A96DFB2B58F0A
E2AD2EAEC84A3320B7ADF8AFA0646A4031EB17409200E5F7A3C35D2DAC2AD31A
4A8FE8112B67C5D6DBD490FFC22AF831712233AA23BA994FB0C2B8AD99544DF8
6EBC6D5745C10D2C3BD560C939B80707B471D139214F755ABB7172E970A6A9D7
AD2F437A6A02C12A14E36A6A8140F9EF7A02B92E75A597785BBED4857290DC14
4232883FC9107AD8C633ECBC2EC7B55F467F12BB61BF9E7FFA41EB0180BF47E9
A19B639DFC45AEE111E7516AB7A98DF1D586036F8CE4AC5F50D35E03E9D102FF
D1F8037349FA0951B4D18F263CD12FA6753E7654F0DE1BF608B16B4CBBFC7AE1
9CCCBEAF2520E24795876EA5CE997570C8670759B57D52EBDC2C4FF626E4BA9D
40CA5D8E3A03F83DAF2B37630CC4D58454B20DEB45F3181E8C3953F5FFA4C578
B5F489C442C0245D7243DE3921BC193817D70A92841ACCEEEED42ABBFB41DB60
0F4C12D38DFD32D59D4F345780D65D2D113D3E734BB0BD3A801E1D0601F68D09
5B0D13DDFCC74EFF552157E23654319E9300234FA430803038A15FF2D3AD8B2F
721E215A7C62855254AC6A66C51254F712840500234492D7F4DBE3C41DB9F9DC
99116C1224EE53A7545495487C7FF69DAB764D521EA0D98F68FCDB34504BCE06
3CC6EFBA5BE1F043F38C1E3B3CB2173152213DF3B78FFECB7489DBD42DC2A120
28ECAFDB6CEAFCD1246CD0FF9BBB3BAF6B285A4CB0057689E72DE1D7D5770F0D
A8C128BFCA648599B81B1E5F956714F9E17000CA4110EA280384F710A002921B
4C4B63F25AE01A4F8BA05BF9D1F4887B80F89660C0D86A22BE594113A00F62F7
A57F9433A8203FDDB7138B0C1611C7E62375F2A114F7BFAF0CB7975266138B7C
516819F07C1F01EE32CDCE87348A4582237DFC3D22F7133792FA609EF8309B7D
698BE3077E300899766C803BD553B328E8B5395152050BEE6D782E4665A24170
541F206D336E47569386E3C9D62D0606BCA84920EC157D3AC9181815F2AB48F1
BABFE440B6CECFC01076570890A26F24EC750F5889A7F25DF608D62AB4BCD3E1
68DF508738D237C4B23FCDC0CE7BD81AF1690188D62E221895400567BD76F0AD
4A9CA9E2CDB52B5266D3EBB25171A976703020D493FEDCBD97BA0595847C95B0
B50E5204E612A84E61DA20F004DDB1EA743DEAB0A329E35305FFC71211EBB0E7
8F0DCE9A1928EF6140F86A3DEE16B83E7A2DDB24B704DA1014F052E527C49A2C
9BD0FA97743B7726D3CAE5BCD397BA1FDCA43DFE85DB4207BA9C877E260AC58B
70027B0D64F633DF5B6BAF1E95F530947DAF090BF54FD4E7B01311521458871B
0C8D45DE5CDCA3933857B6B20A947FC11063A06A3393579023D6638917E67309
9D1508A1C2099B24A7C1F40DE6DB1B65A4A387ADC0517A537AAC8CE0B11732F6
6CD4B05E35276000E260C3BE0BA3F412A950B1F879F4084FBA798CBAE598E39B
8DDB6A784C8E3C3C68980DED8563C3B4F2FBB1302AC2C6E6E9E4FD1A8CEC5EFC
3ACC0D5187DA632D4BCC51FE58FC26FAB5DFE97EF4B743CFC5807C551651FF92
2639E5077C139E3BB132457C149A25CE9F8E3F4F73415A620F8F1D9563FC377C
038B6FC5BF776DB24668F0F4594572EAE33CFF7911E0DB6CA773A51FD274161A
28F3724DA810A30D5E92CECA87C7F57B650581E5A7AB8D40EEE7FA0C9557FEFE
4C79D5A71A87D56E0B63BB3E403B2EF8C1E77099FE3A86D7B002F71A09AB94F1
A9224922CA9E246F78FF2B39F405699A0CEF950FCE792DCD31C714C56C6EDAA9
001EA995CB7BA6CFA1615E97450AADC8B1EAA65806E520A544EF38388AB7A76B
06F5B23362DF87703E32C4F864C0182E5A28D6CB4EF2176906045A9812AB3F68
DFADA0092C5D4400C3B3CF86454726E2FD2BA0A0DBA393880093752123CD5AFC
BC03E5773A1FBA4DD1B958FE9A5A0C6DEBC833692D4A13E2D795232E925FB4EC
9A258F1C983A2C03A2967EC7E8754C5AE41D324FDA332659E9E663591E79784A
80175E3E4BB0392370980FE8C49545AB92DCF193A0DC0E0A7B0B3A647E93E5B3
AFBDD4A87B5D41387F50C5E0F59E80EF4B772AFD59D0135EE291656717F2270C
0F1D1D5A0C48774E2E3E1308F919F5961A88B70008FBC010D53C07AE90521E02
2F87185CD0544CDC62AFCD73D3913A129A75D1EA4F02CDD6099693607BB2B753
FE50C04747C5752EFC1FA09EDA5C65620DB04A9850FC4A761A4638CA88B36F7C
2AB439E5C406C82DFF7D86EA382C9F29DA0DE76D33E1AC1117C47FD85E96DA11
8C6ED2AA4F3098FF6446B3DD4CC5A92EEE9AF483788120D19246EE202BBB6C3B
1CDA8FB87E99E2829D103BC2051857423B2F9EF3B9CCE8FA93A71128B87293E6
90C242ECD53B617B622F6CB26B9C95E60D2DC40052D3478EC279E6FF871C690D
2FC177544A6C425CABE8D56D747D1F82D049A07F4504DD3C883396E0CD2FBCBA
C78714A00E89C93A756B5DEE70F5BDB495EFF99DE85EE281228C7336E07F1048
3BBE95D3FD9BDF91470F1F5046C5C7803E673FD63595733899F8C540F98177F4
3BFBDC211932F8C6B34C4BDAAD1292CB56F0BD8CEBDF6D6B467E2C6346C1B987
1E09A99EFC81C4E885423A44E171520B684A54C23577217F131C7E4EA44041B3
E52CF302A79965AAF1C69ABB2C8FC85B81AB589E26CEAA2F605F2B651DD36643
371D0BAA627DE623B3B8E9274798F32EB5455A608A969848587DC70269E1129A
F438705D08BC04174D1CD50A27D94FB415AED59C3ABA73070F8B3C4799D6498B
2F62BC7656356F89A7A51648F3E80D344B5F7DD915AB7188FFBCE3A84E4052F3
D8F9274D85C1B59A2A11E07EFD6044AED5256A770F7159438C42FB1CFFCB08B0
AA19301D76B745084304DB4DDD3E54A6FC00F6B83D33DAA908377AA57FA690C5
084BB1D69B96D07F2D617ED8BE90E81563C7BD4376E2475F529AB777EEB850C7
481BCAA32C12CFD969F60C1457FF9799BACC238DB7B5EB3CDAC8A34E4A4774A7
EB9366A30F91D0B0DA4A633A28FDD94503024C15C56218A44846865A7FDE4B99
10263EA3F9C2B3137B7DA4627F4C5BD0A858046E1D6FE64F69E8DFDA4C908E91
4C1DA00BFB42478574D2E38E135FA3E075E3540574AF7AD03F235C05E67CF0B8
6296B2DE88001F03E1AAF83C2A1BF319283A82E3B86F6FA538D46C3153553EBC
BC81C341D0082658D35A251EA07539866A1DB7839361A53319DFBE9B4D20B0BE
8BBE3C1A5459A27799E63F136AA02C69FE6393EAE0E90E7FF7BC2333D4E0215D
5201E389B6D4BEBE57A128D43EC71195A52EC5DD80799FB13E989A07705A76B7
50D9C65AEE5A462A6D012FE2D27ADA1A11CF6589D9861BB42B71E9914B4F3D82
82417A7C16FF8340A1ED2577DC8324716DBB1ED7BB864DDCB2335E63F9C0B319
C453911C7F03FED4640C4AA4DD26FE70A69B58F455646837F53728D93B32FFE5
B31E80A4676D23FC0E90F03456E1231CFB3CC4E01ABDB8BB9426E5EE16B5B00E
DB7D6C76F14F86FF697358E54E4E10824A8EB84608A5E95A2593A77AC3B48D45
967E88148E53F04D4CA153663EFF8A63016F79C7D0E1C36DE53D4A9D07B0BB2B
3DAC473287A4E1483595B2885197E3D854243B2D272CF5C16F0AAD1815A417E0
437093AFA7B8744351564FD4E82BFB94A1F6C35E1C0A7E82EDD2194BCBA71DF7
6FD4BE7B248ED96F219D4D5B7DB4FE78C96F57ECC40BBC6A204C4B3E5FA327C8
5021AA4F53FFF806FCA5E982114F096EF0159374A9FCA450F88FFF32C51A581D
ABE4A39A24E794A01156C564A011AE063FF3E250D8ED115246FFE36D3FBFF66C
F6FD00E817053AF5057C6E66C3F351072DEB65F7C005C682B10EE7A2B8B857F5
F468582584C21E0F14BF83ECB864CE6662153FF2FEB28700903A8FEC0119ED1A
1660839C74458AFE461803EDAAD78BF5F7A738766E7FA50B4898FFEE955E7C8A
927D947E18E7DD9DCA76378C0D0F2049D5A06F34DE2335626096EA26D57B94A9
28E2A75D1F72F813469904235C1C8B306357EF02FC4EB761ACB7A93D8EFEA9A4
1172D1D82E14B0037ADC38D7A959BC5F0DEB044A8CB83BDA6345213E7E9D2A5A
DEB3097ADEC48DBEB93FB561FCFDCDDB6BE660060C19AE439651F0CA4B80E97D
FE8470CBD66EF2656CDDE5D846C8731B157F18D1AE9B6771B273CECA3B2E4A13
3EB995B0FB363167EC02E05B66E57D5BBFE3F1CBBEB778EEB8B464FCB583E515
D1C4E58291186ED4B8838B8F4432DBDDFF020119C6D53139CA6294B11E968D16
C8451A3B4A59FE4A3AB997602D71B3095A09C2FA698BC6F8F231C9BF8547D8FA
4C28D5359113B6B2DFAC28C798B92BD5EF666C5A5E2027AA1A456FD7DB150B31
87741803227FA2702D5777E90903717D7DDAC8CCAA0089594BFD7A69C3DE3397
E5EA93499908CA3F6407D9A11E2AA72DCF2C614732F3FBAB96C858B95979BD72
B7D5F06053643B0EBEEA272FC931E5D0AA71CCF2633EDCAEB9A88117633BBD60
B0A8C79B17752BC4D01A23B40B4706EF716D48661DB17D104C4D84CFE8B1362B
A3A2DDF29C622FA55D54800823824AF2D6AC022F158043BEB6A6820566EAD713
25D69BF3460A405E7822B3B824A70DA042C65F687D8908F985795BEF6FE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA19EDC0FACA0305B27303AB8B016B22
376C8C335B8BBA09A83BA60E372E7D7204C19A9B5936CE906E36608A566E87DD
A6B3C25DE35B795BD2C5F093CCBAA801761FD57E8DB4ABB870F0D7557BD333B9
642BF675C978FCA80A791DB87C1EB3108C53E594D933EADE2663ECCD818CD779
52E250547F952AE97DD78841A24DA9ABF40DD1F36D63BC7834B346BF63C8CFC8
E9F733204FA4F2D087E6F860C5B8CE75E467680764A4DF585AA8EA461D7B9AF3
392D0CF62B29D0F8A3B2AC6F0EC2D0D72D0BB11AF8FF0AD1E4A05B6B41E04B31
65928EC47EA505C0871967BD9419B71064AAAEB4B0BE5CE51D102BC0EC8B0E3E
69D117EBB2E283E58B1EFDF083A5E8E4B299607534E588FF88BBF4C8C391E523
EC0B48FB12A98D4147A4AF8F821BFBA318557C468B750A7C0B3985DE4F4E8AE6
31059F57AAC90AB25B846CC8D970ED51C10F44C8415FAFC12C5777A4C4FCE76B
58AF101A0AD64320E0217F90916924BEAA0A1E9876A9C5EB6A15CDE8D5992255
C82749370F2CDA253C7C63D27A973743521EA5B0C41133C69AD75946DBFF5610
D54BA0959261F9098B70D161B2E281A539F8903F7C3C09C60CDF17E6D6E4E78C
B9D61F3FD30E78D7EE348EDCA07D507CA97CE92E3DAEBBE3858C8E8D7E1FD046
9EA114A654509D31772F680E47CE4FB77C94C9D447386DCAE75EF02F7E3F51D6
E7D60A9C421889066A22AB062C430282787D44FABB12DE585B297E55A609522A
90C14C21336C627BABC4737FC72F8F4F6BB7D73551EE33D7037BBE56D5B8C597
A7E175B5B422414744779BD6DC557C2E6C2E3794AF5BC45F581841847BC67F9D
EB35111D54EC4964AFBE6549ABEEAD5264A033FB29E70F1D17F9545B8A6A1FCE
F61CD2A5097CCF506C626B18E1CC6E4BC2AC355013374B68132A30576D4DBD04
EAC244CAD6FEA231E44DD04F6367E04C3CBB3400BA3C1943B874CFB07063FB08
BF9D15DA7739FAB5D8E03BD8F283FB6832C60C7F1D6E09587C4C0799B8DF9651
B5B2A9B70EC43DD1107BC02FE9FAAE87F5A611B1D378B62358BF5E25F6502432
1D949E2E806F56EE5F2956C660D58021CDA39290FA5A61589F84D291DF298C3D
A60FE3CB7207E56E71C49EB4EDD0897269186E9B9BDB90A1C44D61641030BCD6
A733F81028BEDDEF64192FFE69A219D603E1F13740B80430DF4322929D8632C4
BD136C89169D45718A88BAB92DA4743E8296350CA4382200124B7C22AD75592B
E8CE7339F5059299ABE075FBFF390738673CDFF3EED771F3CDAD0D00CFC5CF80
08EFBE21C38F9927527A4AAC3ACE2A25404BBDE5111A09F2F70FA32542FF1E83
E1FA20A24054D4B7F8E6A25F53AB0F25FC5AF711FD5943E41E2A0E30D7397D9B
8EEDB7EC399CEF002466CAAC8874B61D34A962D0727BFCE5B90DA98206F9E5BB
67E78A9052DCDAAE55AA6F7C67E69835B9FE8F76F502F1ED733A19B030315740
9B88DA26F87AE38BDF027216BF3225714419B8C988456CCC24B81FAD59AD71A3
EA6CFA6F6F13A8292504F21D932CA72B041AC9E555164796564B564A05519BB0
C8190FA1FA8C8A21B412B32B89AD737CDD3CD527317F3063086D8B6746817FD3
1B267DD2434DD4BD7A06D8EC0F00E69984EC55E0B487FDEBB3F6C4696F1D13F8
419547DF2F02374450EE7E26F463FD6182DDDF5B7963E6EC917BC6FE271EE6C2
3FBF532ADEE6A6EF2FD7F27C852C97CEE1630AA99AFB93D3548358D76C984EFD
D3D7586D95E7DFE70FBD7E679F03A8E2E4CAAE65D662B269929C431F13BDA571
E3523E5AF4654282E484D477D8D5530779A13D11C1A61E854163E286B22F2955
196D56988E5FCA6F75FFE97FB18171EE39B996815DBE2AC7D6D521E9D0A70DB9
A2BCA8A15A617ACEDDE33430601AF5B44B016B77A11893EF2C8B92C906A72502
1810A4F4719E66EE3C64292C209A832AF504B1BCEFB4D270C0593D9F6B89968B
1A8550A5FD751E70531636F42FD4076E3FA521B5941B4A74D09E1EC4F2201CA9
FDAF3E77924602E53DD9BFD2DAC29A0339A42F6A342FAFA1F620E278CFCD460A
A15777BFBE815955AEB9C37A06947E64E0B5F37A43352667CAD340C0D42D850B
D31A8B4C7EC186EC72A3F81C7EF13974554B395E50287798567B99E8EA3FBEF6
5ED35C6D8E31D2914E409D64B390B0BE9362B848830E6987404A4ABBB490D44E
E8874E54DE38E683D1C295FFF3DA9644FF0D2941614936BCF433D4FCD0463C24
77DA990FC58E46BB65AB0676A40A8130F05EA44BD877C7CA57A43E7425065DA3
567D708849FD9F82FA0226638AC15DBAD4382137312390F9B44A7AA8DA3A7D35
A37897BADED1ACC8D240FB8116370456E6017FF5D962F67E7F831A0D06CD3088
9F575471AAE6E79902EE817A98E9539D1416E709E79546B1F58CA901D9ABB0DA
7C9B7079B268C34B97D4835920E4A88AB178EE1ED00F71743144286E5D0E689D
52D329087441C0DA178687006069C2BF5D498496818C244467171449C73BABBA
B53F4EB1481591F94EF054A7FEFBAC66BB7BB9B715C44B89D322ADDD44238D02
38534D64E7EC67D856934FA7BE438218AE9D34319957690CF7CD568224E9F66B
93EF3B53FA340C81599002E066EDFD837C54B7985532A77E7ABE60B2A9E6D74B
6A4FBFAF7245D8F075ED7497FA4DC7720BD88A797FB00B7026D3CAE5BCD397BA
1FDCA43DFE85D9EAB1AA101F7ED5E4ECF1BAE72C82F807CEE69B552323872F22
79FD4712E7CFB1554FB459F06712270221C596D7D98A026EFA8516683FA3A306
49486C002BFB9868A91149B1E5705F6DB7EF310F0BE1B88E80F8DFB0CEC46513
5E8A6A1FCEF61CD2A5097CCF506C626B18E1CC6E4A15BD1566250CDE486DD725
54B45330B3EEF2AE90BAB16293B969C1C36C72AA60D2759B3D6FDBD9B88CC93C
4CFF8C9FD9D7A6AC1A896380F2762679E60FA6E763176D6CF7060DD19EF66DA5
E780DCCA30F180F8DFB0CEC46512A9AA1897A0F984F440B9BB0EFDD09656C615
245BC66B42FA1D97110E3AD5BA3103CBF311C1BE34D08A8AA46260A14AF1A3A7
45549A2C8D8F6C93CCAF12CBC1C77F18519F1C5D944E99D2FDC58F6E9F77C8A0
4B529CC5F97C17855BC4D8EFF39ABAA0D3138F5E51E6484AF6EEC8E843948F1B
06A1B8A026B3CA477D4CC612D0DC8CFFB38F29CEFDEC66358B3938BE62E79A78
D2928FEE6F38E9B3024E780A9B59F3176A5C5AFB83AB20AC92EEBB23646C5226
16854D1E757A25D45087B19E408F778E8EFDC803D0632D9379F30231361D03BF
91F74904C7106B6F8A7C6F1EB7A024989A6D910914C0224A700E1245ADAD0EE9
DAB56EBE39D3DE9B6F1F6205F3D166F2445E020BAE6214BB3BF446C9FAF0EE7E
E51BE13F6E5753A079544AB89272D4167DB96B594B7F8296FCE3845ED8FAF19E
F2C0F9D83FDE5ACF3EB0BFE5228B76C00058434E3250B79C6544C15BD25D5128
3D153D8785DD1AD632A308872B5834167108CAA90BD20054D93090385F7C313B
4F646EC480B26913EA6DF16B0DC337D4C5A33C6F9166B40070B1C0C1F75CDEBB
D4BD866647D52BA254D2E4B701609A2DB23239EA4B42BD9BDF1CFE6774250E02
6264EA6B1FE78B4B17D84CF28A3938EDEE01BC88437393D604FB75665229F184
C1F36006E4DD60A05F12E3C18662C3C1311CAC4E8AC7F70BCD0AEE3C4CCE6E17
93589423B942DD10576CB1CD75FD3D866DE63393499AA5B89BAC5BCC7D10E54B
E97FA35DCF80C1E509E8A7490CBAB75084B1C995E6E8108DC4406159F721C233
3589F78A0F7496601F41DA309E79BF38C72A3F14BDF4E46B0E95C35B6057FC33
57EEC2216280187059B0BB02205C95B68BE31E790693F653C32E9EF3DE510D05
F01B979454C6280A58F8BD0DC81FFEB7DF2A7921D57603B41B9AC5E0FB1EF3B0
2083D24EECB32949EEC57EC3D3F5B690C7C4181757961F96304C622CEA332147
C7E17F4E7D1A3D592C795528DC4BB3A3F373E18A9DD16830E2806DE4BC8000E4
9A10ABE64B3B972E55D57FC85CD2C5AFCF02DFFB4445692A4FC09684191F886F
2B2BBDCEB0A04AD8EAEE5761B51B373C76C69B9F10988BE7D061F539CC871103
0D2483F7577B01D5B20D8896713764599CABD316B5BC7684724C60464323B9DE
B2FD22CDF770BB77CEA13495326FAF275046408B1FFD3230CB86CC47C8229176
7018909002301A1D295294EBE1BDF98378FC18DFE2E7D56C84071892EFF997FE
C6260A5EEC79FE5C0BF35B1A7D48F4E671E4C97A8AF8FA9E42AB0E48089C2099
7F91ACEDDCFF80BF0AAECFBAB26D9432503032B0997D7609865EC8B429D85541
B303E4EA0497E420BDDD67D0110B8331410F1DCF9E65E7338B42FFA5A4CF61A9
AD9FE92290D6A0B3D5AE24E25393D501AA2F5CCE2FAD15FE866F5836A00A3BE6
0BE77724829205148807B2E037FB2EE97F5290CC0000476C0235F3CD2DC56073
E7B0B568F3EBAD15B1E0E2853C4A1A9EEF8CA37625E006A6EABC6CE4CFAED0E1
A07845153B6D4F7B38E408B5A10BC47E59D475EC12451F7BACA032DDDFC1FCFC
1E72217DB6C8F2F209C4EF07C1FDF20A19AADB222DE0E415E1BAB6E7EEEC6CA0
A6EE762C39CDFA05F1E4A7E8465C6FB7FAD0C346FCB6CB449F1872A1C253D156
26504AC40B14F472CB4F3E1D8B852485F974A2D2145BE01699385D3BF0599B1E
4A6AD4E0C2BAB7AA375883C30B8050C390E3A7C5FE2404D7748075F07DFD48CE
F6189F10D064231D3B7E999C1166890D3F5F644F8AFCC6540A519F2B4C6AA42C
40192634B360C4D9BD88735ED4D83C16F059FC31B227430CF55057B0D3795AD5
3F1ACDE16334B92B48C39084A9C71516582BCE25EBF7C1E0D843144659295FC5
CC8821B070E435D5120C9161873E9AFD34D81AB913F8DD625749018A1EC19C7B
47A86BDA04DD10E831F6DAD6D831D091C08DC8AFA8FD5C40FB22842FE646AA2F
BA77A3F888F990BAD4D1810A9046288D9C33E403D6095956B0333D16019A6A97
2910DAAFFEEFAA0C2F8963E3315C45488D0B1F7C9F3575B48344498021970204
DAC7D7913EFAF442F2AF2286420A0770670AA0B84EE70380E457FC565E44F8F0
808F26A82E25AD6B4176B3B8A0158765EBCD0BD1C62E95F659D68F0D69B85BA1
88CEDA0ADE59F506812770372AEA533706FB1C83E14DFB0D93192B0912B5D948
6B5C8F6CD5238CB94A0C807F4BA049DE39DD517431692EE1FA1132ED0087D8EF
5E30FD8F8647A8A4942074E5E6B2DE3B1299F0A1E6B43480FB53CC3FB6EBD834
70905482FE174288EC9F9541B875787D14F639B2C1A064DCCBAB9C238F3064F0
4C6C0364BB5B30FCD25D0F0805B0EA04ED10F3D442573A56648C90BD38C3D3AD
5C7BE95535B486F8C805A2EE1D38F2EA5854758B3DA00ECDF9FEBE424C8D607E
F6BABA6D1482E9CE813316A7865584AC0763BDA3A813438D52596DD03ECFA12C
59CA218F0E68D0FFC9CC45041B488CC7AB76EE1E71A81D17B88DE9FE4AA80F52
6673253166ADD34DAE1A2902E565622CAB1600174589928B2F17FE6C990D513B
6ACE15C580ED490A505250F1A3AEB1B3AD90EC607C7859E34BD92099E1AE77B2
AEA255F63FF291B2E624482DCAF786C10BEDB739584F60D2EFC55A23E9F87115
9B2F3CDA9654D2FCFCA727506D0D10CDAD0BAE965DAE012540D9DF5BDE9F4F5D
02D46BEC3E7ED5D4E49663A5CA73CA347E27BC49C7DBD28DDB337E4CAF7A3786
4A8B18325C60CB9284367B49478A0E873EC4F51D28CF849D07521DE30F80A6CF
FBAC0CA1E1F168D79EA75A119F2282B0FD2150D8E88F7B3CC749035A893AF3CA
55BE5D1F91FFBA4A232B68F8079219AA89FAE9B70EC3855E96425AA5F10CA1EF
4608FE644DA9ECB65F4AD71FD442CC584FD6EA914F5FCFA9A23037BD321C41D6
9ED2A40004E7C6919C2B5834B520BABBEDCEF1662FEA0F10ECF433D4C9901B0A
5D2888B29FC66B4FC57FED2DC03FD5276C6CD7F3B16D23257DECF0974678EA51
59622DE15585DD5741BF8FA5615C67DCE3740E009C0CE3B90288B81EE909C1C6
481A61401BD72C146D133AB8325CD2C294C3516F1EE4C13CAAC355E995A962D9
927C1D0635760D221A457E0EF8D3509E39837359BA3562E9F04520DE3F79C14B
02F024EBEE5C1E79A408C9BD1DDCE705A1FB96DFE2E68556AA79179ECD78B161
3B0BEE3A8C21660C0FF9AC67990BF99DF9CFCD285C800FE6B2220A47C3DDF73F
19B5844003D336729B91EF96425FFD14913CF80C1C63381CAE11715FDFA135BA
DFEE4DF997633E53480A1DD992F8753156C33F8C5666761E290D9E1774A0955F
7A1770C2F25785DB652554BDCA47D36E0DA51E215709FF69322D42C893A30185
4AC0E9F98963FC566AE808AE20CAAE74590B3DD207F1FCA47995230979D99132
FDD9A2C5D5A5C90863C064C76064546A1CD08616E674912B25C8FBDA1D46AE86
275B9EDF3694BD7EC9430C3C2F7970B696DA577C2145294B522D192FA4ABF53B
D1A28704B84939C7E339BA3F4D4892FB6074006BA0A1E1A4A307BD9015DA3F03
FDCA0CD01C4568BE386A4DC43CFEF39B65672F9CD4FDFA83817DFA0155EA8DC3
F8EA9DB943789A191542089E218EFD4C1220F1647CCFF023A404BE28D37CA8CF
48FBF19FD938DE5C080E7881848222220A63605F00205C205B35D155628EF494
D17A439067508590BA42C25D0D6F49D45414C59010D2DC807B6AA2AA2BBE0611
0745FF37973547AC05B0ABFA6979C0AEA235474A2581C01C4AAF34A4FCCD2276
2CACDEE383614D564D3EB1A4DD9D4C46B9DBC385782ED035D3527D67762027FF
52096CC941F47D986FAAD8D0DD2D55D65A53AC7D013C3C685371FE4ECD635DF4
AAC70B239D36D31E5808B877D069EDB2E2ADF1F8C6A8DCB53FFDFBE812757E45
3A5CE29E71571B42A53151E1DB4A2D38625EE58E39BA27C9B6DFA186E0352A98
5731F161EE965DD7631276D51652A77823CAA8C4DFF3BFC6A862A1FE070173D7
AF2FFFDFD104E67441D4BE4A2D8F846CABEF6B9964B04EE1A6892E61026F8AC2
417B7F6C67BFEEFB41A343AD66AA4D2FC6AE27B27A17C510E257D1D6E842A797
547F96F9206935478D5133B9E76143084489655D79EE67D722E54198E66CA6EF
6FD2B82E5443BAD8C63B4FCE2D86964B7DF30DB1230AA9F267688973B91400BD
CF7A4BBAAC2CD397686834A6BAB96EE0FDB2D6208CBBBD76524B4084D5DBE193
4628528987ED96995168FDAD7F86556D7A49C65A2B28B030CCEB0EFB99921B7B
78F1B38562E968F162D67BB5DB67595670D823F6B06D603E8D09061E486AF75A
8C1BCEA9D210579587A0624F5A768CB488A01868F8F5FC71B44F27AD672FA6CF
647D01A19BD70782CA4698C639FE6EC028F53081513EF1AC2679EC035DDBA628
E6C4EEA8E4B391FE883E55DA75B9DFEF69D54DE590019C6A8A8C24A7312EE7E4
9354516DA918AE888095A07528C8343292E178983EAD8F95330445C933A94C5C
F53A7A6710CA4067778777625A586D985818B87ECCE3A0213E77E529C2C074B1
74625DF584A310B15DA4EA154E2A1ADE60DA0AA5FD94C653A34EC57A14C6F913
E666C27F082A4720C63E0B47C3BA1D2153A5A081C99F5B28FF8772D7555F07B8
2CAA60391619A1836862E09D61F332E73F358EBDEDF2AF09F0298047B467AD18
28F0EA42D40AD2AB05D4FF47C9D3FEE9836C7E72B73641A0EB4F37265EBB3EC4
488CF143FF3B2A427C5E1C756D1925EF7175DD8EBC615D289362BF1999B6EB81
5C6111A3B9C619E39FCA701697A8D987BFD735832BFF11FF54BEF080CAA66C00
3517F3F0D97ABC1624B8A6BD215DCD3DC80DB0D4E7E539D1158E8EE6A53D29D8
F33D030DAC84B5CF96EBF7A9AD5EB62569AE428224B9B9359905B39D875B8B3B
0275726493ABC66E60FEBEB6D16BE28360352E7F6497C9C4023C972EA04537B5
55D38352C946D23B34CFD32747D77A293EF85939960D6691F445373FFCA681BE
C0517FB1CFB1BB9D749995E77E9230C0A8B953FC749A3F0FCA033624B3E21217
8CC36568C0EBE3A8528883F5DCAC115E75E18AD566D49C692C92F8130EA39E16
92B1369210A538B7F8FA1C1847D58D277C42B48925EF3DD5755DDDEB1BC4D0F8
0F8200C73E87D95C6D627DCAAFE011021500A38596B7627D3DC3DD9B13785961
1121681CA5607512BB17D6AEA991BAA60B5BDCB8F639963C51013D916BB3AD50
CE22DEE01B1786714FA22CC7D8494C0B1EECDD72BD9B0476FF7F6172B2C6A3BE
A53C53574E77A19275B748C0A22074ECC8E4BF4B1312DFD83327E26302193442
5ADD22C031A217148A9A90D0F92CEB581438A147FCC6C1E2FC8BBF6E54A6805B
7F680B56700C7843313992754FC09034F122B3D07E178620B97934ED58886A55
E84337B5CC9C4E58DF7CAA3658B8AD58435BDB9E60953B9FB10041CB78D4D7E8
DFF46E09421E681C5EAC3013829CA3D96CC07946A9F6AB3A454E25E6E38D8C5B
1A1C549F3D5FED31CE9A4C4783EEAF6E8F6EFBFB5B588E9177DD278C26FEF449
7BBC0181759CCE0A3CE7D11489713C65301BAA7280836F5C2205ABF698CCFDE0
01A4BFFF40D982D625FB7A9FD41F638078F61FEC73D0F1CB2945E364507BAFED
3CB12254E5552E8D0BB9FE293CE1B9D3B0443F8982C1D8E1F97E474818982290
2611783104B19CACEE335D898617918A68DA9CC86C8F84687FAB047E54A96F7B
3E410F57C1B05593359570C0ECD25225E411E639FE802E4274E44F2954EB6710
7F074748A4C2CDE805DB400AF8DE535C77320770AFB9A9126760B23C64104A2C
372E4A92AA22C0C0928853AEA5B77B3B5A1742BD4B90B0CA430CF1DBD3C28EBA
A7A06C4E0A237F5DADC41FCD6EB40F7921DB2D08D80B4ED86AFC91DA500E5926
AA784E569125203347DB64FA59FACD8A0366F3A78D6D4A50E8437DE245FFCDC3
F1A53833DEEA4376BEF6717696193E60830B5B6A57A051C6694F055A7ACDAF5C
195BF31C57935C929DAEC298AE657CA4E6AE77C3474E52FEA25A44557A403399
55325265C0D5A059F5C8BE8FDBDD91C194910B870ADACB24B82A1CCE47C2CF57
FFA92921203B39B3AC3B6B5119AA20E12F5BF5E66F9004CD5DD2D1AFE348B6C3
679A4E6CECD513E9AB863BD71388786DF0EED3A2453DA685C8A088DF3F3BE145
2F23B3F09E3008DDA13CBB1515E162879F4774E362146DEBBBB31057D51D8D76
E18A350E9CB9DA8096EE93002BD7745BE8A52D107ECA5894FBFD3E251125385A
F1647AF8DFB164CEC1D12EBB0BC277D3DFD3B1B7C3D401037CD05C68BEE04629
354A894C3DBD5275F47E2A31386D6148D9E1D8483DB6BFBB129FB1F95B9FE562
53EB0B7164B8B47854A824541E5139B70361C1B0056BA971A3B973ABEDC8F84A
37F0462272E6511BD0987BF86EBEC28D7B8B960600FA89BE5F7B3FA6EC1A6E27
EB9F377CBC220E22381ABEB28BD5438B9A6CB831AAC203FB33444A6683292B2B
8C9ED6393A5898CB767E458C5EFAF62FC93E9D5D2B095A1DA92D51B6EB076727
BCB0B360A4FAC09F2AC5CE20956F6A920197FBB23D1E7F49D12BBE8611519E0B
5C9642F426D65F4A92DA6E9D02E792F11275B8288F57A7BBA20F3236F6D182FC
A5E76B29ED0A0E8E8971F2A7EF5CFCF269
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic10-Regular
%!PS-AdobeFont-1.0: LMMathItalic10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathItalic10-Regular known{/LMMathItalic10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic10-Regular)readonly def
/FamilyName(LMMathItalic10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathItalic10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B30E8028C685C8FFFC2
3C0E2BAF712D9A4BE80B6E38C9F5A449DD2DCD493C0A130001F01DB02EE2BE50
8CF3C1EE0898661980578B4396FB3179F301761100231D260FCA63E74EDCCEC8
08E4BD0AB6545195F32F881C99FE3877DF3BC94657DAE2BD20767AE9DA7D582A
DF256F4A52C57F9D228B3E1CC5DC93FDDE8E791DB1E6FA18E0B9B2423868792A
2BC90B78D9F9640524C758D0FEFB713A9A0D66350CD78C8FC945A63D8C07C8FF
5D66E1D7D963B7567F270FB876D2FF1E76F1FC1AD80246E413D337A718699FE7
EC080448FCCD4B5AD8453287D86BC727C140A6B2C1F62439396AEDC897D546C6
F8241122821F88FE9BA1342B044AE9A33CE496ABD5D7F76B1CBCD331A08C6DD4
37A78E15453AE3B1AB6664CFBD92B9982E6C0F5AAD267804425AEC523A184899
3A2D0259E64F914D353ED128EA5774EA6F87DEFDD1BCA35A413EA5D75E42E3B5
66539B7414AF09F23C1DAEFD913327B6CBEE7B5F6258CFB98B288A2A2019D344
E9335FA5D1887F0A3E6CD430AA65E3A59B396F035C7E84875F5A5E374875FE5F
2B49567A6E8C851A51D8BA4F6AF388BAFFF88D02B166F37F0CE1D4D4201AE26E
047084E2ED3E3662B60089E355AEFEB3964748C5F836C437C042B64BE3AF79DE
75AC4E7255CEC0F20E6D9400D29BC8D9BC2FF1E08D8E020F33BDEA08A38A5E90
CDD238866C66BFEF1B3B61F2564CCDD80BD048586674B94291DB7268CF59686E
D95927FBF8CD3224572B687E01791F40D51A230B9F12EFD86A7F90A0978CF220
FA314AB43197FE6E7C4F22C4BF4C4DF7ACC7EFE7C6B152984BE0FFDD1714ABB9
CE834B59B859F89231021E34E2BEF6C78D5697E25CB5D72D2A5F8093158818EC
60233DE494228ED13DC8AB6685A5332341BC02AB2064AA00FBE26BFD27263C04
461327FBAA2D88B6D1477815F4188980ECF40CD3AD1E29DFA34769ABC993DE8A
AF8A0E27487EA582D55E4D6A667187F57E7FA1489459912F122DDD1B9BD9DE5D
89AD1DC2B59A7FB193183E0107AB636082E7EFA02DCE3FBD190E191E921521A4
3DABF60CB7665D1ABC5777E2588CC3D0A29EA131D482990C368BC2123A20C935
E0EA158B8AA0EADB08865836B98C22DBC04A91CE237B8ED9D9F56D24478E4442
B9F54CB68D28FA7C2B3BF01142F9FD0EACDD8433869A00CF375B55B8906C9A0A
C65B231BC8DE5ECAA91A388956E233994DE3021D1A156BC83CB7D22D504C13E3
B3CEC8F2FA39486353363B10533A8BE1080729D86FEAA2193FA6D6C3442EBDD3
6FA9C48822F17C1071C0C7FC963342019ACD933DB8A48C4794FFCD5DFA64BDF5
EE0FD9971FAC61BB37A90D095709F949F40490820983C8FE9CE6DEE56518601D
39EAA191AA1B20C21D3E3AAB480E9F56D62072A0CEBABAF870F84CD97490CB80
33C900C573093AF23102AE8CFA6A587B8B10C3D9EFCBA75F5AEC83FCAC81D26A
C8A9975FEE9307549F8D037AEBA832EB995E27D36EEE7386A786E482EC5ADE2B
7176C9524D7CA2AB7B9C639CD9CC802AEDFADED0030A473D2EAC2F9B94FA223C
45C32D38934E40372F3908EC588B4CFB64BC0DCEA70D390396F1D3BE6F94AFBC
940EAF782A3DD97E9D9C38B45594AD68EE45EAD303AB2DBCD015EC7380AAEA0E
342F54E13C3F488387C558B9F2EB0504A2F8002B1B13E2A496759FF4210FBCB4
DF33AA193D61A35EBAFF2EAB6ABB5A29B2610C249640595BC8ED160727DD2692
C04CB6D6FEE4E0FE14AF2BB6D572A1CDDE8BB7BF42B24B337D6DE432A9D87ECC
6B9BCC2C9F87D50F006C19600A57030B5BE7A1460A6C6D02AF56E86916FB8C10
47F6CC82C1363D52442372A4E92C416C7C88EF98CF8FFC6A54701A71B428CE20
7DFB4D079839B527CF451EDA76E0F06E75CA95E5F3203357E344BC911D197D92
7951FB1C9445A124672A2A47B9A9433A363145B25918C59FBDC76DAA8EC35120
7E15680319C7ADCC79CEC5CA892E803E55FC01D68D11F3BCC9B378B0D0FCAFD3
D5961212031E8F7DFA91EFFDA792D14552CA28288DD9043A122C6B44A5542D60
295D216F39AC5981F58C3318EB537C32DB57A2040C055942A181AC8199A4C298
6EBF4D259DDDCD08EAC22DC9A68A4E997427300ED26BEF03B0F94A78BB03A80F
D968BB21F21427C14E8BCEEEA1955928ACCCBF878C7EBEA5FE46D20AEF0D507D
8A43C58EFC899B2297E4EAED21991EA6B8E04BDE109B03EE234FD76467DF08B8
518DB10BBAA0FF98C5E41A8D2778BBC89626821C98BF4DB7A203E9182859D217
B5CE206E7F3DB3937E411E74CB697A51F0C01E3CAE1FF24FA431374278DD225E
4F1B4012F1092CE6A2FABF49DE07FE8F7185DC5866687FD4BB87290FAC26EEA9
E1DE1324BD4EFD15C362E1A931224E547D2A40E255F4CD6C17CF38F2B2039554
25941ADB3386A404CEFDD29EF28FA9AFFEB5EFB9D44F7CFECF76F45DEA179838
8BA544CEA1E6F2A3CA05B8D33F7C0DFF0B32950BE788F6D726A04A5DCF085856
EB0EA53FC65CA4CB2CB0E7293F72E6462871EFB3E1C2E95F12CA8903E7BED5A9
B900208AA9A4ECDDB02274649A0B20443B44045953EB2B04CB791E3E887C60E8
195D59E27FFA4C5C1AD4D20755FE4446628CE1A04474DECD67270238055F26B2
EED0F66A2C724375396E153D27B312329D15D61BEC16244AEEF84D5ADDD06E6C
4CE8ECA4526288B7727B6D8F5799885E7FBFDE9E19CAB952CAD9F577C79FF0E5
E746859FABF599844633FB099B182AEE3C0FF03A720F751A10CD10FEA448C2AC
7C658001460A6A5F9D330E6C4BF9F79B48A53129E5AA212220EA74C2D05580FD
BBF433819D03A35D3EAD784B20ACE7A1D9C3524F6F8635AF69EFBAF7532F267D
04115EFB28C3D8016E2DA60B8D5CE15F40A5C257B2981B6826A3260C62DDE781
33C067113EDD3894D29C820FB2F6F25E37D9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3ACE7772980137BBF6A5C4C136C45CE680D23B992D7F
7544FC9F70CEB83E2B66980ADA7E13488B61554D8CB264FA76074355F7FF6C55
FBF130009A03EEABEEFB1ABC2BF844196D67F7A6D7B5F71162E03FFD780CDCE6
720DA5752962EF6FFEDFCD9C2CEA3A186DFAC113892B6E7F1EC8B28E99D09742
86959C4335F1C11135880D99DE366FD7A9FF7917C89D789205E574FA14895D60
74559B3CBFEB1985C97933EA251CD6756B1C77F32C734B1495D101CA0AB6BE91
B4A9D58388082E54DEA065A8C90782DC87540181D5C092368FB4CED9353E0404
D3D05A7FE264B6D55DCBB79ECAFB3D66DEC5959AFEF22ECD78D686050DCEA6A8
2F8E29385F3F1EBC4EE457F2362E4F3F83B3F7E57973A0068AF16661FE21F632
9733323BAB1B32BD7EDC4B8B1FE0D8E4C1E289973F0EDC58EC9043D405AB56CC
84D8AD43A5852DB697102A64DB5F69E37609FACC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890A7D49B0A6C7268E399C6C68B6ACC0D1E9F5B2
931BAF9EEEA6ED985835323E85D72C6A607A99212BA2DDD24D57809EDE36890C
F8121121306593CBADA65AD9EDED7740C9A2F402E3908B54CB4AED249AE575AF
E64C76BA802490ABB489275E5A3F2B926955B0D961A0B9B3AE205C074AA695C8
68FC2F6997531FC328B8FC65BB06C17B212C8C06D5127A14D7989D24912D1CA2
1FF37457E65829B6E1C65A09C1A101047DF20ABCD57E067A7298091C88C4B587
84409C67D00F7D95FFA0D125FB938B5762D912E1C0E116AA0593B1231FDF3BB1
498BA3D20DF13C7EC6D40091B789C9FB7CC872BB73E6B9D4ED8A555CA31581CA
0F057B10C7A8CE1D7CDD4FE2D5332FC533158B8CE6CD3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5020D74C7714FF08F5AE00F69DBED351708B1C760171CE5
5D0FE3BC5F6769FB19C7951CD5DCA774B841330A2C8CF59CF458230A1642F956
21D23843C4332F05F5AF14E70EF052F02F7E3F51D6E7D68A4FED8D2C4A733AA3
8973CF4CDF768C31E35C395C3BF67A79F8B1AC292F38AB2EF22A87A8ADBE2C55
747D7AF3101C5F1A2A1BF6C0E245A1ACA692EB09DFB0B9564767237E134B2789
D25D2F628C2DFCE0C21FB4730D9EFA2BFF8BD3B45540FF72F828729D3CB5DA64
7B3EADC84B1D25AA90B0A597B39F50D34C0380405F8E70FBBFA27DF0D9A200D2
2EBE60111D64086FF83162CDDD96166F795E3C8185F36C8D567C8BDA504CAD36
73DA0FADD3EBEFEA15954F01DB19D0B2217A275F139F173E270CBCB6037C927F
524EE70AD24F140AF825F8A370870919E9E6D97837356B4B1F29D4B0F67C8A86
43289F767FB1901DE7CE1A8A0168690A2244E27C67003C1D6911750F761F9907
A438DDF4506C6ADBAE868F8AE268A0B023DEE119BF95755142A91F7303A2EF44
8FC6656EF72C8DB903C21CE30CC7FD16DD4BFDC262ACA6D622516B67987197DD
3E233670D60B90AD71DB8ADDDF5B6C96B9741D43C663184177392EC083E7426C
2A14172416E42B9A370DEF24EB621EA5781858FCE8FACAB6D62B65CB782D69E7
91F5E1091579D89DBB17C83648300C8C4E43B1425221B68BFBF3F265B1D1A114
6A91079B753C8F00A57A355219E2EE13D5D6369F656836EE0A77206E810B2AF8
B942265142A0B33145DB1F3C339A30E9D1DFFFEE8ADF4C1E0F10AE5994B91583
65549268534A174417FBD33AFA84CB2B00AA9353678774E20BC1564318882206
C9671139D062F50D15C5FC1822BFEDABB02CBF73B2A5373B7461127BF3C22017
8AC8B82D7AF58BA9D3303C9A88485A24013E9B99F63FA297AF95FDE13A684728
B9EA90E7E511DFA1E79936742B6037BFA5630CA71904D12296218C37537A84C0
B59AD1C86E153D774B9BE9ECC831686B0597322F8B0B27D8051EB864FE7E2AC9
72EBC0BFAF6BEA6F3482977107B63FCC60F0E03F7EA00DF423CA480D0CE94E74
44562E93070578DFFDB29FB3EB03ED7E6DCA1676C889DEDE61E4038E911D2A3B
74D96AA43B3A419607ABDED46AE8669C07E2A226EA63543E0135DFB4F45C42BF
86D511075A313749E1C88A79A72C14D6A2E815AE080801F9BC7611DC2C4F040E
7AE5F8DB542F31AACD620D5366BD47C4F798DD4FBDEC383A863158385C5E7DC3
2E557005CAEC8CBCA4BB45C442FE29A1E1871957B34F27826905F9879BD566EB
7253531102660D21C528778BE10668B7794078970B3A5AE4E7A7C706E94465FE
9C56FEFF00527EC581BAA25864BDFFD4C3543F43CB4E5FB0E5B261B8926BE0C7
74B14746A41083F8BC08673D204D816692BAD1AA1F466BCDE26EB1F0E2F88804
6F095F56B93D56DF69ACF152DE25C76F784EDCCEA40A3BA108A5C08EC4AB01A6
E797C89A7F5530B8CECF71E9B190D9533D0FE9502C4687DC0CBB1064FAC924A4
3DA02D053AA7FA25154DE79BB65C0AFAE13AEF1E4347342F8C8DDE5C23C88AC2
1EE68639B6AC0CCF4AD32D0915F9AD3755261ADC7F5F1480911AD3208F55D9F5
B0C3E7915280A1C2CDE4F94F465EB0B420722A8C0BCA3CFA9D29E586226B4216
A5D0791D9B56580470CF971D16BC5E7F0CEB71092CD13556F65F31FC47E103D8
DA938F1D1F61F5EBBC274C25A94828B4EF9612E400977A4F89D1D8983011BCB8
15702552EBC391CEF4B59C59E1CBED10B1C9263C2F9C17E1722B1CD5E4AD65C1
5C50AFBA3CEAEB4D6ED2BC6A97C20D15E1EC3ADD97D6F4389424CAB3E1C2B4E5
B18DCF779D590751C1618780F7AF5763A0649B6EDCB2FB9024AAC0B8B6A02357
702BB182D60595287612B2A69DD47B19E24A2BE14493E4B5ECD9822B4878D590
22E3C10E063EDF11D275A580B5BF5A12761057E255685D5878CFB52300556744
AC35A22FACE7724E37EFFE3F4971A1021E04F116503104B137E44B21C47A6327
BC1249FA8F2758BC7A2015DBBB2A6D4E5DD7175F429A8958D38D8065F2AD787B
9B8D91EED687B56C536003DC88848A44EB246D89EE6E80405EBAC2922E88DAC2
AA3508738DD4AF222E21EA477A28184E796386AA809B2B0349A2D8D2685CB6A3
04B3780D0F055908FF6131B9424BC956D22C2D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A229961ADB1D5023BD93644E4C23176BF787664F
CF245203C8C3E557669BDD382731E334C06F4B6EA145D5DF351211A0511605B2
8C540290A08A304CB1279FEB8FC14062F495A5EF2072B2957D98A1AB2E4B2A21
6F53829103F9CA4A8B6EB5766A44A7EAE4D5967EC3646F54568E9FAB28736D70
AE87CA7F3E445B1F49315332AC4AB47D502B3BB43D41B903236BBC63A21C6D86
39287A9AE22A8C59CD0D5BC29D872CD46D534EAA7A118D62EBB87EC39525359E
0534EAFF9A60B39E3EB75B2B450B1CC71C6BAD6E8C7AD132E55EE698E81A2A91
278D3BB3C70CCDD37700AE75F07ED02209EF7A08BFEE1BD54C0CA21B136043AF
CF6550D2C9CEB43B1C0332DB15426CC6516C5F83EB8747B098D480B0CF258DCC
71CB2A946C4754464FDA83B0A947F8E28C06E840AE3456408EC73A5A5FE8BEE6
FCB2184CCBC120B842E3ABA2C843FF22B6A8F07A4E2F01078D2E2105BABF03F0
46A3D118A78110BF762433CC35D7E606A723A7DBD5915CE9D187DDB69BA727C7
CABCCFA38FC8FB38AB35BA248094C1AC80A38D01C84B564D9927CA00236A9630
5E2DE9549B962E48F4C0A438EBED7E05A86B1A8760131D869DD290A477C54AF4
50478B271910244C43305F72FA5873C61E92A8859B7B13BFFB70B7905B9E558F
AC70F2C9AAFEE1BA49C95751781694694CAA3660BE5845FBDCB239767E9BDDFF
066F647FFC7237F506434F6C3204F5FFE8B2108E03153EDB2FB8A03CD798B254
7DECFAA2C6E7330CC421D34F98B69FF4C3C9E061AD4AA3C3A406E51EF35AA158
353516858663A121454BC2C72305236CC8D27442C561FF31D794E9ECC6C73D18
3BCAE039BDC92B7664AA25A34ED52858B9A8C7D78788F43E8C1B59036F70DA6E
FD330B28D118C2659809E34299C45DC7E08FF4CE42D03685E6A74778B8F75570
B954EAE4446C57CA53642DF9C89089D6E93E53DB1BD9CE3AE8F07AF8E01AC2B9
435BB470B405F95C9D539BA1FEA7519DB1BE6D82E8E7A63B40D06B2971028CF7
F8DB8E10647ACBFC5EF409FFF9B8CDEA2C1B875AA2ABD2CB176A3FED52286028
A8C1B8A652516B7FD16DE67B26A5E77BFA73231685F70C4A1AA27E82649788E4
68DFCFC1BA293E1715CD161EB8BF612B51D462DB7E2B6148E319E528954BE9F5
716D443183F894995AB31EA8F0F039D33680A7F48FA56A9C6F0B1688B19CEAE7
D66A080D342D5059BA8D1281BF558DBAA40DDDE6AAF06C9900FBFFD6FB31AA6E
48FB1F1C77F5015E8EADA535401970461B7EA1FB0D28154C9D41ADAAD100A63E
734497649597486A1BBE4E92F94D7DEDF785062213E888166958B0A94210B24F
E98AD9AAB65E911A3C6B683754E51696D0A8A02E4DA5335ECFFC5158471BBE0F
1AB4DC1FC90B8A125B22EC05B5E9495DF9D230934B92ADB143884FF941B8C87C
90508108E79E8C643A16530C5F6FE73E5E3B318D05A56BA06E62142B996A8D7B
B466E02C6CF9E750C7790D7A3A22CAB3BF45EEFE416ED6B4D191A54E1D2A0A27
F4283936B4ED4C59C8D1A7DA5CDE5FDF9E97A2B6D930E08759A0BA1FC3723145
7A132D9168BAED7D45F44F4599ACA2F75F25400B9C542682EFCF01038347E8C6
491883ED2C0B9FFE257A16DFEA94B6E4214D5D456B8114085F14C9DBA909BCA3
27F72500B879FA78846E36F4B6CD6BEB41E2DE6411C7853F10A168012F0346B4
2E8CCD6B1B9D8C4FA9A0F943C56D39252FD4D42AE39C344620FF88537B1A9713
4B684A02FA7076053BA1BF90AE000DBA04BDECD6EDC167EC7D38B09447B728CB
005C500A51CC049EB18A29C741DACB0A69693ED173FC274C30B00DCE62DAA72E
6E5740D3069CC57832248F27C031D77C156577DBE657CE1A8D383F82BD078138
BA175F1341A730816704D1D597050E53C18175046652442929C4E25C3CE76819
75B0B840772D3E8ABAB486EC8903415CDDCFEEA8B47DBB2EE895789BB69B794F
366C49A201EED8B4E96B5CE59F51F85EFD1572F55D6F151C267F52218EC061A4
CC70EDB2C174E1795F3EAC798AA3C8BE8FA14392777B3A929C4672395643A85E
DBB6B3F7FD5CB89BEBB756C14AA9E2143528E88CFB07CEFEAD9F600DF046839E
D7DCE7121D3299BFC1626EE4CB3F910A64CEC677B19FE32C54EA0743FF3340EC
F503DF25674B125653A3EB082EC760946A878A46652736420EE5DF7D67485605
22CD3D665B58FE07C223E82965B3C072F6BE4931E7746DEC5A672FFD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492801936F5E8A1E4D3E7274DF2F942B199
6D1183CD9CE1840868C9F63FFD1470AEB47FFF33703961AA34F3DDAB60E003B8
2AC1CF96295105A1686F43AB0766CFB77AA11B6C2A35FAC32CE4B5F87EB125EC
C6514500A94323FE593E382C53036412B09BC866F7FDE874F7CC79FE5120FF31
49483DFA3A94C37DC02088BCC1F9216D904E39F0F309DD6CB08C7537A7232DB5
812FF744EB62B67DCA2A8F59A0CF417AE778624FB2EDB7C4BFFC78BF8F01FD26
CC7062272CDBEF76089EC94D81E8CE1799CE9683265DE8EC9081A4880B2A464B
362143F510C94CDA3E6D8CD562DA5BB51608D3FECD3CE7F9544C28040B982EBF
8250E2EF1CABCA3F1DAAC0C57FA98CDF96EEA922F4D8370DABD6EAE8A6A87593
E33305B43B9266E2F919DD8B7797BC540066E380100B9EC3D442D09379385581
F3364B326657D7172A764FB4B7694BE549678FF4A9990BEA9CE519F34D465E01
301F4F26DC0970629D51DBD141B845BBC7080D960C1297C7925F24BE0B3832AA
D8C9B7FDB02CD351E05A2A51475934C7A76DC59C4B00181228D92288345BCA78
F879078CB928997E517D5E8DB9AE11433CC61033F9D44CC9B5C2E85261C505BF
2F227F31FAF8CB61DD5E0BF53200DD4FB17F45EDCB4C14E3DF23487EEDD3D9CE
F5B4636A092EC5DF2FA0F4243D324A5983198F2A73CDBD54D8633CA393BAFCF3
13178E02D3BFFC709F92ACB6CB2BA47A5DB2B394F6C7F031E02AA401E30A9096
08E8C4C56CA2ED91162BDEEB2DCCD7C4B742DC3CF9CAC9D7E3D281E9C6BAE428
11C87F72082C9BC07B07893B2E4F162655033BEBC0D2F93158A6728EB552FA09
202865142FE8D1300E2E0E66D52D087A2188BC928DB56231BEA4051318283859
CCD6D02CBFF67018A565B949A243A214842D1606270CA23CF3A2456A87125569
56C5A48721B1B1E140ABF9408EBC65BEB7705A43DA4915B95B8BC2391D848094
4EAD3B91C8BA9E2EA5654B276D8B695D12E43E43F6E03946F2C402ED527D6D94
1A52336F85BDA9D84810C541FB5CB6F89CCF85AFF0C765A2418D01DA1DFE6F39
368C16F7DE93B26B72FFD337D62DEAFED226F2B8ADC613C45F872522F3748106
B4BAC63967F79359D1B291F8702D49E38CE7F78DDB94091786761EC80A22088F
D4C9D5156F2043E9B57738EF8AD1C3D450F67B0FFD5674189E887AD14E32A6E0
67F6112896AB991D6C62169A602E510EA85A1675EE98A1F25F9884B61D126806
EC59743E29682DD755AF7C35A3444D643B1ACDED1FB6FEDBC81F42E9372DE5AF
64F15C4ADFC2BAB2DD04B1A7097D9A060C74ADF8ADFEEE2DB7270781DAAA3488
8B83CC15BAA041EF80C5BDC12EC1F5786BB41A5A210EF1503F63E46DE52CC01A
232C2456EE913CABB9B2A1CEA9E0573B012EA2371452E23091C65D76AAB3B0B4
77418D6682D55F6343E2E21E4F330FF9D869E1F2FC3FF4B1C049135B3B1530C3
0E1288EB5D9D11D7D9BB39FDA701503D426C7859229DB42614A54EBFB4DC8097
C0D9B0FB97171C0C5AD05C2736E54B1C37962B6AFC229BC6F0A4AD169C2EC212
D7741D517DCE40C6943373DB96EF2F4010ACAEDDBEBDA6B8EF328EA7E5E6F658
D88D55F4B2AAE6A9516F92F7CB040FE694AB4879DC5D9F5FDD8580DB9122DF99
42B38B748FE347926A7AD4A39C3E3E57EFA61F56E5B463649E058E104A8537D3
D81053D9DDDCCC41A6A77F829E3F6CB40BCBA184059390CF33937128D70FE747
739A0C92EF6EC74EBA6CB20D0AC3FCCDE4F78E0DDEA0146E9E5F0EF49715BDCD
ABD4EFA0BD65C68721BCFE282588EABC04F4E40A42037773349DE530D0A2E148
0210E0BA1D53E704FA24F55107E8C5B9DFFAA7864BFB720C86C730D91093F42E
30A6D341225812EF3FF71793B01AE3C643439EFCCB1509860B0FDF032739CF2C
C73F89825EA046A4D883F795D4E16F79713957F4ACA332BDCB5252DD213CBD4F
A5311591A3A52101009DDE43B62C069E427308EBC12D763FBD6503011ABA247A
0AF3051EE9FD3C2388C1E140DA4004919027257F2186CF716C685176CCFA85D1
17825A1595466DD4A1542B74D7A7D21A017F4FDC7D79FCF8CBD4F22FB2FB76C1
EE427DD625A2F527FC8EE49F6068CAF0F6C4215D24E482152142BAE76A41083B
036DDF4CE43930119F7238E314A92695B19D551F3819A196F5CDE323CFBD7566
DF1B34B583A55D5659F886A3E68A7D3D06321D6DB80CD676DACAB1311AAA2CFB
7F1A888116A70B06EE212F87DFD1C76A574B199F1775B48EE0F0C862742F9A5F
889F5C57CDC1BCC32B6E3FC28ACAA03E1E72C0D37CA7DC832D75FDFAD81AA210
A2080AAF04E81A47A3FFDEFDBA01DDDDEF0125E3465D4096377D2B1B27D50B5F
8E93AE8BF9453BBE8FD563B464468472BB6B2F202276A7F985C31CD8F76524EF
15561690C9312E87FBDBC45E45A08706F0E124592741656B6363B046D86FFB6D
567AEF67B112126E2ACF3642047B54BD12FD844E958D92EACFFC826FC39DA0D6
86041177ACA8473F6BCE8C5B4270F6A9C95573E2B64373F20D95B2C45021CFE1
7E2DA671A7FA88213B596074FE4D777E0688DF71EA7A458EB6620FCBB0A5872C
27D7B74DB62ACE58DC16B92EE2BAACC2BC51A8ED14F7A1FA42886B5EB480BC1A
E2FAA8D878652A4CAFD1F9EB162702D1F680589B791039A1379C374B81944E67
1E72CFBD77CBE0A95797B82E8521474FCB68D8D460A41B61369BDAF603292F99
1A813A22F039CACA201AB5BC51D79FF8D818EA9EFC3F37B5222166C447B82E75
52DE05711B3883394BA9DFC3DD84705383D05EA02D410DA660EE50583BE34AA6
7E925AB1FE7D0D6EE6721F4F33BA41B670AF286F432239DB702EA6E109CB0C7C
D17D94D85644B1EEF3318B83B5AA236835375E0B9E13B07B4D38BF176C177353
6706311EB78A2DA52D5BD2F0B2A939C42476B611F1F52A0405CA821B9D986588
7D4EF8AA7AE6AB234B252A506EA2EB5DF30E34AF76A51E49D3987DE5A6D98BAC
A13BCDBD1531A0F70903410B4C7EE09941F9ED40BDCDAFC20C8BE5EDF8A7DF54
973E9F237FD4F509708D4C043017B3ED910E01231450985FE13F6F382BED2C03
33FCCDE9366DD9CE67C1063341E30B49E0AF725F33C1522522D8B549791B5289
C33C65E4D6D12AA512DEB267C6C06AB90DF171E51DA849E99BE97280ED370D69
09828DE61CA45D557DABB453BE17D4F25AB9ECBD3CCB4EA3A262534603D41B84
8EC91CFFB79D7910F03973685DD97F036BD60D4E370E139161520C5D9CAED67D
9869D7CC5684BE0ADB28455D1308078F25132450F9540DF8438A07647427475D
12A0264A1B9924DE9EDDB672E5CF64E5F89CA229298398F53940E5604C958091
0F6742AC40A7CB3E08E73FA1E156091B19E56F01DF05AB58428789656A2049EE
BDF3A700F251720BADA482532CC7D31442097396CFFFE9A495BD5D5926A7AA84
A5E965D2148388C79555E642DA9C8EBDE42F5C0EB3D35D6C037EC5139AE5F97C
C27F2840FA366F1E2283CAACE06BA0AE68F883D9F85B81A3A160369B6F94F049
EF27E940F53F9B36D7DA980C81000E8E512EF9D135FFDDDEA0CB78723FB40B62
5D7418A892CFEBFF58AE1CD0F1209C706D5F0FD13E5C8B5F2421AEEB7D24E833
F7B8BD50D2D13DECF2FAD9DBFD939B0DFEF5275B9387723E28AA92939B8FF2FD
682FC5F4572E7CECE7E548847AC42C7DF8775AF26B6B341FE71E4A758CC1C96F
3F206743EFB08E84714F1970BE65FBCF5161148D666978833B0DFB89AA1D0FA3
8DE1F505C71A88A2BCD96FC01F52A0FC9BBA510EDCC40844358B9C066F083572
FD708DBFB5012985157D55650E784004AEE9BBABDF8794929B68C0D553F94B3D
E2881BCECA4E7835CC0E34199E1D6FA71F8A4F048F596C8FED28F07755AB6260
DF0EF192AF561E7AFB4C67930174BD2E954DA063DC72630522F6FCA9A6998107
32A792F833A4B1B51E5606A6280694A18EE6402B3C9FB77D53B451C623B7F42E
ECD3D54BB7682DDF4D6DB9326A5B01DCECF76104D76978B921AAF1E522B01345
27426997D5711E1FE9DDDE60530ACBFD53EE23242B4CC75114C011DA79F4B743
CFC5807C551651FF922639E5077C139E3C67C677E7EAFA734D911FB31839155E
86F09EFA9F7685E2D2629FE219742C9B7B3879945DE53317264E49BE7AB6708B
4E86675FF8F85AE37CB7303363C061B1C4A5F6FF4BA2ADBA75E71438857726EA
CCE3AA819B699F67C7ABEB483EE7C939126639C927B5968B5BC6C000DDB987C7
CADAA74681BE30C4E6826E7BFBDCB19A090AA25E8D00371158A7FB77EA8A21FF
44CF705F01EFDF76BF48F7F7FEDCBD97BA0595847BE55D8CA4DC465C27AE3A55
8D36540D5715F3DBE986B0BC0E1F41AF5A67734E96DE66A08BDF692066C49523
AB41242F1D916ED69D1B7FB6EEF9B64B27044B3F72DD84699ED708C0A0CAC3E2
A3DCF1C827877C80FFE810F076D00710C302B4E5E8AD40D6C4854FEC5E5FE4C6
E3956DFB2E008F22E3792513C2AEC019B0737391555A8A575E542EDEC2D02746
5D5064A6D8E1BBABD8955203C9A0DFA23EE1A42C93F5A25E8D003711503409FF
6CC8F3C38638084F8F4F7DA8B4AEEED927BEAC784F874870B8D6F7096E251C6B
883608352261202F3F1488D2EFD004E118232A5C3DC535E2271088995A370B19
C2F050BA73D021C39EA26F677C972818BF8C841E9056D60135F7B7941CCDEA0B
C0168ADAE8A1716BCB610CCD8AE0F36B68AA8C5FD2E0E871DBD2628AEC0869FB
A39B482AB45A87B7902B28E5BF820716D1B70F8A58953C118E0F3FCD26977D99
755C786C272911BE7935065D67D69E7127AC4128988F493604E1BC8DCE99225B
C1D8A991490C32785858538FB9793E0F61F648EF2A0C6C5504BD72EBBD07669E
8156254F3A79C7976198DF7C495B95A55CCF4CD98B4739CF1FEE0F4E6DD1CC2F
69717EC83D687FCB4D1D82C6ABE5F6BCC38A2A054B57FED20D5CF51905684C06
1D1D7C732CEC85AB5EB853B7E8ECCE37D4138087DEDFE8180D50828347D2C3A8
E45AF3E1A25929325144E4F7D8621DD9DA2E6C41628AC3150F98DFF1BE0E0026
2B4D50A92969F863CC4E2CC4BB97B92A8CF3862F2CAE2F8B6A8DB26A1287AB3D
D941A92AC57CEEC8227DB52D3E7748E7BC0B19A3C64DB376D4861E83F1A11BDA
0437225E8EA1FC5CA55634C938CBAC138CDA0BAE9415FB2FDCC84CF8DBBE924D
0DA8D8EA2256CF09EC974A808E0157DB843CC75FCD5986CD5B73AEA3B947601F
A61D1D9C192421E79A5C0FE0817A835A1A91BB942FF755C02B9219CF174EA729
3B57E07FCC6FA4804EE6F29D00C325FDBF2B3398D130FB2B0EFDD9A572FCFD86
0383066DE1EA38F836B50E41CC9F1663C1028955844CF37C6CF343A58AF3DA62
F98D8CAAECD64C0070EB08B5CB859ED24D4FD67668A6294769CD3329117185F2
DCCEE820423C6672481FC77B5C6D8493F731A50FC2F1DAA952BA4B4EF8FB349D
B3C25CCF3AF3E0E78A3FC6CFE7D4A4E8845DE7B7993E98FE31DC936F38276EC2
96E3BE6B8D5205497B8200FD0ACFDDEDABDDBBF35A0CD2A66E9B605CE51B681C
19DCF72A684B37FB7BA9F1FC00D98E345F640A71C080673C263D09152CCFA61F
A12A5C83C65E54BEBB9C0C800002B474ABB0AD5818B78949101079D6A386B9F1
786B432C43F3C7361171FF479FB4FDFFC81475A3DCDB809BD0C73EE2780F4950
CF5CE88342AA2D1639D0F3D70AFCCED406694CD0A9F1C745974FEFD29E6344DB
53724268869683C4FB7DF2963032947A51DFABA0D908CB64DAF1EFD40AF797F3
2DC9655692C15AC45C83A79D19824F9FD2C73F1D915C9CB74B1DB734A10BA431
58F37897C2D7019C9D7DB4E0B1ED0B680FB004DDC927300B893F2C5FF185A72F
8B21D6486CD41A80EC051E875DFB477CFAC4FF8CAF758CC62A6765AB1CD0F3ED
D3C555F120099492C4F071336D985C0C360B2F5A5877FD00B5CFA1B57DE7D10E
A7D651D2112D36C1AF4F2E921D25546AEDA3E9479F0C48140B475573873B2FA4
8758B7E84AB704D14E7456D7C51CB856383D1AABF0209B70104DD639AE4D6765
9C31F4F6F7DECB5E57E0C7B6EB1C817BBFD2BAE8897742B373024638CF93B2DD
6E1BADEC43FBE4818C6FA2E226B8B932A195CC0EEFA8E39744C2315DFD3080A0
B52AA1ED57CB36EC8753B9E05ECAEA530F0145DF3F15A58B67024E71DAC6EAC2
55431A3AB81FC61CFA1985DA2332DA1C884762EEB3EF660DADA9C04B5EBD29A3
3A47389073AC94EE08DC1CFC9E0C469B09385B88D9E5BDBF54631BD38C0D8333
43743003D9EBF5AF03297DD12734511B47B3B6FDB110BF87F8ADA28B1791D942
3961752173F2E05385D9D9B472E4E275B3894B4DAD7F9251CE43A969A656E7F4
E76D7634AB97167A72810BFAD7E035073965683DCBA5BAA51ED9F1F601F0F088
C4C285933BD82BFA3DBF496A99DCC954BE39E51507B12ECDD92B7C8553AFF93D
541651CD027D5B23BE4FC86005E73CF4346A6A943A69EE82440BBAC733326922
43F89ADBF3B801481593310AB5CF3C2E2A3768C7DCCA5C9F6BC48A4A4ABF4486
E7038C3C3492C914860E06521EC9E8056810DB35ACB6E85DE4B2B15B93B7BACB
79AC25F37A4E4D1D96C9DCEDB7655264E5A5CBFF0E4E7E7536E7F6C62123B63C
9006220706DC806409EF7E5BFD966C2815E1A1DCB8602B74EFF8A0D27FEF34B6
F095484FE976DA3426665A73D5F581CDD13E320306982406539FD8BF5190391D
C5FEF24A6DECEB2441985488F0E70614CBB28CABC0B24669D2C8E2B612C261A1
60E6B246FC90967F1BE1F52347C6E3CF2FBDA627C06AAC52F08DB31D3E5D8429
3E7380AF786BF3954F5B5C6CBEBDBD569AA588C694A1FFE1162F4B61C257CED6
EAB227200220E95A58A830BA7E592654E23426AC90B2DA708F0AAB8811523FAC
80F02D8A1ABA4FEAB9BF1D3AD988E4F2F5552A55A7CB98E1A825C2CA606671CE
34FB84E69575D385D9EFB01B024F768B5B88A93A38F93B29D9CBB4719B52D651
886EC83777DC4B946660818EA103F1754EC5E6375773C2FB5EF2E2C02F432D79
029C1D33CC92326AB20D9F9AA20F92F1501F9FD6F89FF2652453807A31A5FEAD
03D419801615D6C37B6C75375D31E27DE293FCCD16D35E96FA40AA847DA5E22F
00136F21273615D477E725B1A51E10221B4EF82D270EF712C303999771005443
EF38FDFA07FE94011A0BF512C9250112ABD68109F0808BA68094FA7E0D033E33
8E149518B5493D7E3503F67F4F27F5B212999D21D23C50687F8B8D343063014B
2A0D12D90DCCF1CA0A25AB10E0FD4ACDCF7FD0F13F5DBAC1EF8FC4C3E1232D19
F2D87E0A9B59F3176A5C5A08DEA8F04BEAED2BF5C83DBE0891D0F79B10226C4E
6175E9B3AF676603DD8C5F5B037022B38CB7DF5A9F3D0238B5A726EB20D1E59B
BE57020406D0770CABAEC24D22BDB414C852C8CBC40EF59777F7F8A3912679C3
44064447AC6D1A15CF1D1A3797CFE85FB55B56AC04035F9ACA4D26C28195A1F4
C4CC623B30B076D4861E82C485666F77BCE8BCBE2D8EA485D5BCEF24DBBFD388
AA75280CC507E56DF287386DB11E7D28098837404CBB27E0168F2868FFAD1BA3
78B23B9336F12F73A22316553960D3BEC44FCE8730E450F3EFF5C5CAA72856C1
E8748F3005C8DD404ECE7B7EBABB8F8300601476CD50E2FF86BBBD27C6E44CEC
46B305D67E5C253CDB908754242EC26019655F5AC07D7CD353D9A69D62C98039
BCA169B6BBA942C1AF86E6ADC99C2B3950CD64B436889A2A6C9C5C3BC34FA9CD
62FC8EF32FB37D937B48C2515A46A3FCFDEA338DD7902FC0E967F6DECA7277FC
A73E841737D9AC221F683C2E8A590F525F07677894590F5479F0D8437C91240D
980227CD94D475968A50A10A61F1ED23876289D9F0276A4400CE3B5D20969635
7B663D35D2E7183BAAF3ECD2F7F6618C375D1EC39D0B866481D723779B3787FD
E5C15C73DD46A2C464936A164325EA88A7A3362B711A6B332209F3BB6C732E19
1427FC63A7A675AE7AAC03CEAF0F5DBE9B08932B33CC7FE1E9E6473AE9140BEC
5918FD2BFF29C668B8081D81891456B5C2A458062AE8985A69A38792A39B1620
251961C8D837DE3CDB0DD546C22143D2920419CBF15CD531E36D1BA17E69AD2A
2A9C19526D07E1EA0897B4F8DF63107CA946BF97F48184A0C02B7ABD90085AAA
33E69BE4F483891FF5C525ACE7CC2B6172DB1355CCF8E3E54C3BB8D661E4DEF3
D5B062FFBCD84A261F70D0F14165FDEF1C160A16A35865B057F75C220A32CDB7
BC5DD0E9B0DA3088D62C10DA3AD6350EB9F4F65A8726B901790B3780CD4482E3
47D5CADF769F36D2E030AB21E97643C5FF3296C63A572B75ABED136062BC563C
81D37E3D54588330C297834EE3AF5505DB8C31AA8BDAB4A74F7EE7CA9C2CB80D
6D2407B228FBEDEBD1FBC3B97E28093E66A9837BBF7948D35B8E99B6A625861D
2DB4119661265B9B7840134A710D5ACBCB0882F35AE8A3E3B1FE3903A941EA20
9281D479CE950FE60DF0A794FC19FD095BA2CA9F4E9ADEAE5CA33B5E7B1A6A40
3CC958FB840024382EF8F0841B68CC373A5DED53C65CCBED35671A31DDC35687
CF41E76CC99D436A0B5C8448D0420E8062916A646F58084A7E30CD995E07B3C2
4E75C142A970F63BC1014A091DC9500332CC012322BF86C75D542DF2E2EC8627
83E843F96289492887A949DCE6F28F677B2B3B2669D338BE71BE990D27DC1A98
5E6F3CE8B6695B3C201F4B7CD67C0896DCDFA124C8217E924000A0F81F7D4672
0081C498018149DEC88C23F82FA31232BF9D0CF9C597D22FF591A28B78CA6664
84AD85E62A5BB2568678DE7ABFBA623B59103BDE49F31CA82B278A73BCD044A7
886164FFD25ED2DC8160948EECDF403BCD3BC892094A5128E251260C8CEE49C9
7281FD22D4E3D4FAB8CF8175EF5935660B84B213E4FCCDDB6B1A94DBC963FB1B
A1018BB02F3E02EAAFB0B9D2F202F8825A21D0D4869F02FA1C99FEE1A786CE64
B338245D5B147C74880C06A2606E3AC1E0302E4E863FE45A46252137451B79C5
2B101ADAA48FB0A461461225894C2340B40FE2F0786E979497CF2A3361B37930
2099ED7C547F2029FE2439769D67DEBDC8AD8C861E90E5322B33B39C0B81390C
67B61C835FBA29F185C0181148D2DB1717B24F440A40A69FAC2613E33319EA7D
CFD8E8868579F25787758D1EC8FEA77EA7A810F4851008FE54E68027067DEE9D
4CBEE4DC23636D83F81ECC28DB55A59A2E48437F2813197CF8F595F1555AAA66
9C28B477CE801B6B7ED36FB14FF28B55E34DD28FF9F20C92E257EA85AA714C36
FEA1F9734C08FE0B84109D86437D096DC2576A2549945DE1ABF68E2522908443
7FC43831FD101E6847585A1A470B19CFA88B9599539A819E3C6AB5AC68574BBC
C8AA7A47C5F3D0C745262B88DDF05E7E3C1682E8E8511E1E8AF54803847BC15E
9B1C1C9CC76581A50B6A65431A8F4EC9EDA06A351791A3503D7505694A84795B
B86A312684F24F3418F9B6CC9AB5C8DFE79E40267EE1B646E2EFD5C01936F03C
32E26E9752568586AF8F68C038A8A0A9267B104DE7D912C5BFCAE5E84C5F5B24
AE8BC55DF7F212FE99477ADC3F692797103CBDEDCD86C7C85359EE6C98F92E3A
81C8BE23BEE4B7EFC230F62253BC1B68F965CC057FE1DB587C8B2D7A74FCA897
EE756EEF7852A243732C0F5C811531DC9DBABE5B5A768FE14AA8B54951F2333D
FCF3D97A98FCA949B1DA71AB27885183D960A25071C516BBFABB12DE585B297E
55A609522A90C4D1113B18CB7C8DA45DD0F6707DC77BE488A36A54D9D8AD5F76
1A0C1B7BE2A1A8252D0E7FB672D76A531AF2304BA863314391267AFF415923F7
250C5BF3BE382D95FE9C68141C8B5DA393DDE17C782891C2297D5B212A3173E5
2035D6DFEDAAD93A074010C5626DD9470582E82C10458C65A9AB1A0323DA3A5F
6B05A1F353A17E1A3496D3039E2846C6EDA2A2DED66BF5952BE904C3104E28F1
BE7AA15A766C9C67C95A518A4E514DB0410B1E140095EA29C0BAA42EFF6873C3
DF76B77B850D5496A83F008B193E8AE9D210CF36B6EDE8ABE94C8BDDA908C412
D1709E95A64A63AFBAF673B83A89C8BE6B2C5565027A5E6C4552F5469F71248E
271FE38DB3B824A78B6761B22CE4DD2EED4A8AC97B3EB2FF024BFD60C0AD7FDE
DB23C805F27CB258256AD59910E1B9D0959793EC2AE0FDEB52BB3E9C91509624
0AD78AD226ED88CB897914239C1FB71614A57DD8063CA1BD66649F597820D559
9B548EB4F8FDE2733CAE86FDB44E9C724CE688CC8C9B7E56A46B87152ECC0C5B
ACEF26E3BAD7AA10324F81D897C359E348223674E79981F1AD5778B2FD0FC05C
B4C628A1F09377B8555958E318551EBD9B8F4AA038DF79588063FA5C12788BCD
96D314E7807F206E0C13AA68398A6E28FEB3B0BAFCD62BF3608619F0A669DCAC
8A04695C7C992E8920BFE86BC58DD1549B730374F5251C04E601C27E854D53B8
5FE3A6A566ECEB61CF2BF6035B98EA90F559625C437D4984B04DAF0BFD6BD22B
450926B69A090620505014FF96B2A95767D18142144D77BAB2ED0A4447580C3A
67A90FA665FA149FEDC651186F696F54D06555A5B0BB86729E1AE63E8DF36628
40E32409951CADA934F8896AA603751063E3161A5B20A7DEA7A985D1C3483624
9AEF8ADE99A0D553850158CF3C78E858E34B8CFFDC7A128BEC0942A719EAFBC5
9BF0404A36DB4A079CF92AFED25998FA6113356C54D73D83655895D321F9F0E0
5BCCD097059201A330FE2144681E7CD633056BC77D95A916F54291575FE7CB00
6F857EF419616A0D2E3D646143431C318824FB0FD6B885A69861DDB635B02814
BAAD9672A14E50D6AFCF129DB382F2181EC00A0208E0451F6B0CA3360AD99B29
7A144E9FD272CE6A23BADEFC0FC80B646A2FC08C867975837A508EBF531591F1
A56E7D1E22A65FB87F274D990D36535FC5FB1EFA0FA399B6DC866B23C3D7D7CF
EF17A1C582F153A378F4DDAAB220DEE7F6D38731EF1E8CB0917657EB749149E1
D61A198C4B54CD26548C24AD096915F3D1256D4F620A7CBE6185AA5242DEDA2C
FC1099B1C95A296106DE15CF1B4D7740DDDF451636E19BC9CEA795AF21EF3258
E5238D15F89FC8241402A3EF85B6AA5A10B9373716136C63EADBA8916D34EB3F
9C4B3893DF4E25B71CA17D427219E0E2F2C3347593E7F5A0D4B7460BFEB0A6E5
96B32BB3D9CB62D4318307F90041D351B844947C40B5D8C75ADA3F1A5E3227D1
2DCD08C323F8920A6BC3812322B8BF3B6417389D3B0D9A79B8AB56EA0BFB2AC4
7F2E423410C34A1D86FB380FD26FA9763D1FD97BC35A2DA583AD57D3DDD01FA1
895E268F936A1015AF245D194DF08AA86E554A2C868AAD79A6F9939A298FB39C
D6BB24A6903F8AD3E1BBED4619D54BEE001D6A439BCB4B3B7895ACB7AF7EC82D
C213CE5416042628EDCD86876B9AD32BF87142F762E101DC22D3ABDBC8CD3907
AD5C96F7A59C33C614D69D0A6D5B52DCCDAC76A75523184F814ABCE4E4F66095
2474944A5E27DE3A06A64B95E285E8AD93D568750046F603187FFA4D814CDCAA
C830DD6D2B2353019C8CBCEF3798217E0B02C3678DF44F20E718545C2F6F7E7E
A4526FBC431D353085DFFD5EBEEF83D696C0FA27B86904477A22C649879935B5
37A70F9439B5E8BAF9E2EB03F07F09F177A34A6505105669122D86E83B18D074
889EBE0E123F912FCCD2FF6DEF4366C1C08E0B09855E04EC3BBD8CB6B7719DC3
1A90C79771C91DC4D21798EE7C1C69BCC4C6E917F2C07247CE5236EB13B7F1E8
A15AB9B0819C356918CA7E3DF2205019EAF0494ABAC8B0D0FF9FF6BEB1469FAA
217DF24CCB36C662C7BB5E8F7DA664D1CEC437E170EA50AC903B06A5700A7FA1
CB7AE5F53FA2E56F84C5482BB8157B04DBADF56C73BB31E5B6776501D8038DCB
285E7D45515C3A3831E5B5172880FD66C321DAC4222BABAA82B8D83192711F97
3F0DE96B4533F5E9B79231AFA505A204961A7DBF1AB5613C04521104E0141075
B747F6B79B45E6421646F45EA63BA74E4841CF0C7A8CA4DCD334168BAA2B2514
321AC39763FCF69CA897AEC52D74BB6747FB9CD5A633DF53752834D5A2C53158
8DE29FEFCF03915CB1C64141049219FC028BABDDE9727DDA9DC6806E9B9557CB
4844083E1E18979BCFC8003DFE467E6FD1B5291ECBF6B1AC7A25C002DEEDA34F
DD29B3B4B551C48CF2F739CB2EC7AC3F669435FB7E0F080C018C74B3E2FD3752
95CBD5A72650506707281D167AB718101083E94631B8295834C8C3BAF1CCD313
57CBFE5DF69233DC41378E58BD33F44D76204AFF41F796FDBBA2AD823BEF7DA8
C97C30F1452006AA3B1A1681726ADD32DDBC7C4519325DE1D2E508C9294D5581
61DBDA35FC754BF88042FD98C3040855DE8339B25C51257A727C4648B35B9C84
FBE4B94E616C0BDDB44A1151E2CE01A44F1F0035F01F710F91F1E0E49E70FE25
FE7FBB87600F4F520C5AAF132A27B809011676A70056DED9C4CF3E7516341DA6
4093C33CE11E30603EAD00851CC85FB4AFDDC481C68FD4C026A95D677617CAEE
4CA4B282C8E4CF20CA3CBC729416976BF6A20BBED57C6C0FD85C86DC10C8244B
0A88652F5A1EC5546FD4DEAA2A82A209E2449AB8CEDA2DE760A98868ACB45CCC
8CC2370FE267830999DEA83B5BDAD51725CE38479A8CA61A5985F7D9A1C2DCB1
20A0566AF29195C653FA085F712258B8A1B9AAB917F6BD2B87F56AFBC998A8BF
F455DBD4F8C7D91BE31B4C17F66568E7DEF4CC7BAD936B666058EC5E3EE1949A
A0671424A42779D38CD5D8A081FFB8F1FFFF1D8EE990355299E95268545EF303
5BB17779B78B1194830B97A80CF4C1299F9F5CE06FF9D33DDEF04231C329E922
CACC3EDD7E2B34E8881BAEAAF0797B378783D951F33C4AE9D062D782DA5A1610
9C2DCADB8D486EF308ED19E7FDBB400425E4AC57C3B12B4381A1266AB07B63A2
2582C276FB4E820D853306254D86ADE32A34931DA21E0D999C3FE4D4500D258E
5DE087F538A178DDF57E5E5435E5A6F60D580953645949706C496AA58E47B44A
9CF5140968E78B935CE265F1145D3B1428B90D09A2EBC928A7F45C2A1425F398
1C3871CA476BE8D70C2D2381342CD07DB1D381A07F886B61F7D7049BFD4AE6FD
24AC3BA0813294659D4ACC7CC959DAD76FAC48EBC42AE0A5931DD508CA7C7DD0
D705DB5C75D7413E125C5311D7AE1E7BCF960EA2A16E1C3BAA8668CBBA0F7C33
68A51A7B6CF5501A9B9F78B514589EC9EC34BEFDF366DB3B9E12DD0CAFEE1DC9
805E0F016B0F61EA4A4B5C8ED885A21CD3DEFA4EF30E3C70E3CFDAF94EDA5D35
1E44F0321C2CD1F0609704F10E01248D85BBA4646BAB5BE121A7157A4262249A
72BD047E2E173BDD0A4632BB58A08FDF474CC179216C716963F48F31925EB6C6
E6DCFBECFE2673BC6E8A83981E36B7EE5759CDD4218072D43D5D58D6A560E55E
1C6D4B873EE5BB3CEC9E06FC3DA85FC16F9B7892B5356A840C83E2515672F9FE
E8BE51ABBE9A153411BCD87D525F445D2FED21A8FD3922C6886C0FBD8C643417
787AAF1464D4A0E1881898D399432A7D7547172D15F4E86AF74502E8A26FEC25
5F3A8CE52E5774444CC4506B6F4B665982A83DAB93226A75103D628F6C5DB8FD
2F38712B36D28B874C82329729125EDBD5678218BA61BE7E5827BB92E34AA85E
CCBF7320050EDD219C3E67C7A2598B436C0190DB0886B45D854A672AB460910B
937E339D8CFCFE6EF8DC28EB6CCEBBAB7AF79986E4589F920A36F67F8D1C45C0
D58E4DD94707E72CC0381C0923E250EFD0FAD46E3B0E5FE6D004C5F54DF54205
33232ED3EF948C93013862E4CF4150DAA9152852C40000F6B016BEB8BDA2B278
76DEFABBB1EB64A7F07CED518E378AC2970FE8671D0C0C24F55DE82FFE5FA897
12E065DDF4E334FEFF5C894F43A6DFB8E1043B303D2019706CE5FE7CDCB686AB
A62612885B9772B484AC7C4DF2205D13BEB8EFB45149C128507F648221B48913
4C3E77B75AB541047FDE948337A2C88BB4895C8F9AE1A1518397447BB61BD2BD
88C990F3B953FE7F9C916B14356E22ED00932D55EED0530F6A417C826A71EE13
28FC0656F01548B4487E7F986129826F93D1ECC2874101DABBE41E9AE8B9D68E
2E55037F5BEB6F360784E7242F1DE215DD98B56280C373F247FEAD6CF7EBAE2A
63B152A60EC8D650EC111087D62859168030CB789CDCAB46F72322E858916083
EB94D90A0AE6B1811DFD5FD3FAC0177FDDEF75298D2534FA77A5BBAB2ECBB831
BF683C3E61BEFAFDB9E67AFBC51385BC9A347D1210150A69024ED196DACEE38D
1B00CF95E187173574F5ACFDE6C15ECA68CDDBDEB17D9DFACA2045049C18D2E9
BDB03A9CBB7406678DE3D89D71989448A2E24FA6557F57387910E966E2604C08
27CBDC68EB6BBE908D927EF0E4461C97625240F6846FC6C2F57A3685B82A89D1
2A73FCCDB578CA46D65B0351CAA822B96D31B7B9954B1A90F9989EB9A6759B71
6258433A4F58F3D878FE55C9E371BB1E149A3778DEC95A9CE644F4E15D9C7F33
10B5F152073C859A27525EC750F9640EAD4CF2071B42B41481BB42BEC15A21D3
6016C8BCB5DEDCB0F126A777AA78BCA0645CCF64CFD08CC0B325BA32CFC0D293
EB26E60B05B105EBEB7A7476D831D2C0383F3938925191F445DD18C42150008F
FFDC9DA85E46A319CEBE2B53982D507408C46AEE9AE963710BCF1FDB503563AE
18061D8BACAE513273C92EAB67EE21E4664ABD9115B4A2C7523D53C72109FE8B
44643B0F39415150E2FF4C23067D39264CB3E631369C2066C7F89C496C265D27
A6FB43977E74598C85AF3C0AF24D180E6B9FBD1B4703575E2926BC88E3F3D1AC
995C5070389E4C9F865B75813B88C46AC6BAC0508E4AA8C8E4B412EDCDDD5995
A6E38779F80D74723ED58E344E9105D93CA03B6ACF4F8B9C2E5D8D39A9C7C9EF
BD318D67CD720C0E7C73B449A50B18049D899725B722915588116333BF8779BF
FE22161DF090F63E527C11E94614C7D58358534D56067304B32B675CF9A47716
731649F5281532B6EBC72ADD3D1E3338520AC65E70BB93A9F11F0CC5E5675DBC
60F1898356A924CD90F7373C50268B7CB0F826121084DBDBB9103607563E77FB
27FA7405C993A135BD76CC64B1FA8FC18427516844BA4C7E742E2E3F3644C94C
55F86C0A57EE678D424C5A09179D63CB27787564D670A6E831396813D3F55408
9162772EB694E6FEDCFBE292901F033C34089EC1F04979890FB8347488724396
73064DD2A4BE59F5466169EDB33C7583854A99A3D04D03F8730D8B4BC5547351
3F5478D4F1F95C308BC40646F4A440F7213CF66B4922242A8C04236D9AE712CD
6E841DE89E07D0B5C8BA6C1690B07F65489EBDD10F08A80CADB83AABBADEC2CF
E36584441E425A3F3B4683FE4894E9F7DA7AC4263D11C2BFC67ABA8FA1EF8B6E
3C87D834C4699B2241FEAE4A186B24263403A4775F50917C1A65540A14E0F3D8
345B9C273AE95BE3567A2099418BC8B4971842D18D92B6DD56A42C6F5D064A16
93DCB8691764D1FDF723DCA14537BEE41CFA13CA06EAD9BA13FE15B781EF82A7
652DEA49633F90FB0390AF00C19FAB04A1F911EA9DF456BE7557B62FA9DA625F
59C7635EC3F103C69BB516D670EAFC4F51F35748CD04B321BDD42450D8BC1665
058F427D19C5509A837EF7390CD3D05FEED51041FDCC258B9D4F60E2FC574D16
1EC16E48FCB2EEE7E25F8A68F1DF6C22C6BD63511BA4C65A35C6AFFE40D8C99C
E3C0BA1BD04CAB50D9085789CC6D91517EA4B3F8EA867FED0C94872F92559815
8F2E1F58D33CC790BED8948BBF49D6777B1D1BE173D4E9B0AD22CD9757F85A7A
F0980C672B2E0D694EA46DEA4005C707A7F89DD09B1592FADF40DCB80D117A31
90D122F45E324EC7A68FF2C5F4D82FD271511897DC55DD109549E89B32B35F62
3FBB73EEB1DDC025A94589F2374904402D53DAF71EF57BA5E6FFC2963A429BC9
5F408AE33020E6C57E68D943B8813D55C1F17C4E7F9A6C2E0F0FB0D3904CFA65
B000CEDC0BCCFC7792A18449B153979377800E047CA409DA46AAACBD1D1541E2
7EEB978A8BCE877640C27032E69A65588CD61115FC966FCFE51F081FA12F78CC
F3BECEFDCA01075C07B67CC7F6C981A08EFF32116712218F9741A9D0BC2BBB60
C369C4183F6048813DD9D157E5E5FDBFBB4F19F878A151E7D50EF13D356CEF14
B8F7201B4791DB35ECE85E1B4D2032B7894CE6161BC61877960336527BA58DD6
0E6D044296EC3CC6C318C4E4AA70E25F57A1C62687D8BD8E9465D4F742B6EA9C
57DC26C0A6539C50C450BFB029D92F9EDC99E8B3044006EA2BC2EC71E93D5DF7
A388CE408CBD91E7FCEB0436DB1F63D9459FCC46CF804BDB954C9A7CFF278976
720B3208D2CC89187A517CBE4B9708BEF19CFC1E1CA352F141B9057BDDD0A6B9
D60C6060927EC46753E42E8A6993E888C31C3AB5E90816EBF8DBEAF45F6C0CFC
A91069D0BF58A93005B59AE2541295609560F1D9244F9C979305521FDD845642
891F28DE364288DAA87562F696457E0F9577ECCBC8EBDC56CE1CE12C76717CB8
F9AA076C8D68AC0BFF2D6D545363E93F00B8FA325A3B33A895080ECEBB406AD9
6012C520EF5235E1EADB4C7BFE1A936796E59409AB7BC232EAB93115FE510698
1EEDD915D7E58D777D53156CB5D90105651F3CD4CB937DA9E0AC593164BE4C15
3AC914517154E28B2DBD744CC02B761BE3B41CA72793D9A50379F6FE13F8A025
E0AD616CD0516F9625DF53FCEFA624ACFC66773985686A9EF1789FB2C23E242C
6DE954812F223643B8830141C0B86418D7FAB262CE1442EA05FA4E9CB9B106F1
87088D08B71FE1D915BC8EA6526C0AC09D3C0DD1BA7C0EFF29EBD5EA783CC728
72B38A305B1B13A96FF7C4148090360984C499D5C2F291B8D177DA5905E8B396
E7492E95B9E76C94149A3F18A2A8DAE59125C5B2F5AA944765B7242FD0142959
2EFC62FA77A5B5C6E541B2083D0BC2A32CA42019E79D04A8FE6EA291745206B8
2DF81AFA9EF31A59E49D672CA418B4228BDFE439E7A3D05755469BC25CDAC4D9
BF018FD0A53E8BE8D6A59ACF7636E481B6B6889D1189D565315E8ED8D7EF9DCD
8B8B6A81C3A7095AC402ED23119C62C4E1124200C0C3A3D17285F9E2E321C969
CF8B48E1C966330A3DA363331BDB4A21737805D0C1CF3A97A34D37D9FAF5B4BB
EC5416509215F7DEABF9F535D701DAED58E84F379C810779393FABC1C8A1D328
1DCBBD328A425987F2ED35234572B003AEBF146A8202DA825B9BAA8758593D55
C2FFE83346755571DBB75965C3FD1D719A17098551C42E29E3B31A107AC9D02F
9C740E5E3D5E0704492A716035E62E5E9615B260C5FBAE8797973FF896483937
0D3D46F2A59D57FE699CD9F0CABE974568F321C49995064047AC82F19513764E
567C73D8F49D01441A430D3EB78E15402A178A33C6EDEFCF37A943FA4CEB663A
3075AE9725C4330D8A6DC32A753FC6F5472AD0BCA745C640CDD863C5DAF25E03
8E4AFD6C39E872480AE1CAB2BB51188C2DDD8672C1382B5C71D6F20383903DFB
0BD94426A44D6A4EA27E3521C498D73E69E28916F0AE1E45DCC7E785EB8DD542
C5FD49E9D484CBC296341641D63881EEA17761A05167D67A64569DF2F0DAF1FC
EC584B8C5CCAEB7D7650484926A546D12BA00D761B6CA83BA90A9426A286D65F
3A1B7CF6D781731E262DCDC0338DC2D60BC4AD9F7244FF2ED7FF9AABA8C181C0
30BDB2FCE712EB0B9BEC075F9C804F1B279E6F1C7C2106DD21A7C173D5BC35A0
6DA71466748187222315252264773FDAD954D114082474D665B3A7A743AFE1C0
0BB78188932A427A048A8B140DFA2A534AEECD08BED2831AD3129945498E78DA
9234EC144F738267DBA4CB53CEA571038F56B350D35636F7376EBE4D569D49EF
3DBED1E9574B42445F8FDBC463A8A0BE6696D662FC4FFC2B197266CE015DD475
C83D8949836F7C91B49B41ED8550DA016DB57C055E77181A6DE9D133E8D801E3
7D6AEA2B09D52416ECC11B4BB90611129A4088D4D361C5814DD53049F8C9AAC4
3057DEF5CDA8A93AD9B24EE0A930903AFF3578A637E8D41E976B2DB259187DD3
39A1F2AB6AFC3E79BD199CC74C43983F7446FBDF5F017E1A708B7D0EFB2BDF93
B25624D31778EA4930DD40A8F0C3B58724DA25EFF09DE65E5056C6601714FC5D
F5EBBCF1BE52EE5E8FF9A0F642D05B8E9C2A77E3304BE3B869D174E11407CA5C
3D4F245473BB850490A1CE7F2DAE5E2248BD96580E3D0C274A812C2D0EDBA8E5
6937CE2B73DA91F15CD229DDEB50CE80EB06CA34DB4A058B98CB93FF2819A112
0512BAE13A13A957B0197F0FDAC11B6888BDBEC147B508130F779B9F5F152334
06E4A57CAC327AF171FB8B87B9C0778EA837852C23A0FBA6F9B16EE7725F8760
DA15537C688B463ECAA03130DA93E13FBEF4DF3FB18CA3A215C67222BDE4A780
DC523D8FF4E3D78110D3E57964B7D418705295AA7340D21855966DB30732E502
C92D35204C48670BE6701ED41B85052861922F557A7DBA291906037329F54860
A72CCB6D7A1E485BFBCE8371653A289F9849ADB2AB975CAD94E8B892C03402D4
352742FCEE9661CAED94FC1C2D200559B0534092C936ED4F28654FDE2E6D8618
61795736C18E888B687FB41877B91D222996CAA02F4AF2B4576DB6A6FADE4A72
19AEB3D79BC4361F24766099EC6F818BB3CDCE8EE7070179A44850B9EB097FF3
1C13D0010E4A3B947F6998826D17702AB79504631474FD3DF494713730986EB9
A221A178D797702A5BD0DC90D4FD90752A479A0BDFE93DAADF11849FEE6144F2
DD8C6AF619688760FC4306A5FB5700794A7162BF68E6D336AA56D0AD14276366
D0E39AA58A7D8F7DE9574B42AEB2CD00C3F53808427C21E8E72FB85F6D15B461
70D3C4F78C20D80F5BE8ACA9FA26C971AD55FC6BCF596A5C543F074779858000
5BBDB81518718D8EAD29A9F7C369A1F4CEC6402D1DC0F37C7BBDBE7154C15167
44DBF090E5F2CF866715C2A492F3AC5D779699F25FBDC8DB73AFC63766B63764
E8A812ABE5CB19DB27395F805EA09530D29617D1737BEDA691E4A62D5AF6B69A
BD9CFCCAE361770F7112D35307DB7BE8A273A04C8F9210E9C4ECE00BD8D482DE
F3BD95BCD8D52FD260F7A8EF5AA2540DDBFD6153EDA8C6D282D568FB6C961E98
CBCB1292C27303D6346E5C2FFEF7621BD2069E39A3BA17BFD9B5F5970F3FF582
D41F48DD2717FD594366F4C08AF721CA5BDB3E5C580DD2994BF15E9F216D4060
83D4699EB2A930890EE2689F27AC0CED2FC273AE23DFFDCD5D253F23249551B5
CD95B4B9F60BD9D18C498A4F1FABD5F04004E965A4C92D2B91BFEC3F001EA967
D1D977FF2349D5E55233039CD3A829D5A188C6BED34312E0F015CF2B6454C1CF
8519A7FF726722C7640DE8CABF617F4B65510AFC720DAC2814227E42C0E93648
08248E7CA630483CF51296ED0E58AC65EE13077831824210531E56CCF1989CFF
93F10DC49A872AACAEC7DABABE1EB7F65A47E8719592F7AD55497B8FC451BCDB
48DC414AE5293A605A5E8BA94C0CAB271CC2ECB9BD45FAA0017AC1381B400711
92F80FFDA5E4756A2D4B952A209C4A54244D0B32FA23D95A1292F2167597A4E9
FD85E14CB81BD9A3AB6348A8D2FBCCE2A264DE05DE1BBFF79AE1D092E589D7C7
D6CA1631B74DEA80FDED97A585AFF606EB19AC6EFFAA083AB8F17D2E9E1544CD
B2BA1C1D28E255DA3E9C97B43E79E733EABF03360572B49954D81E42431645C9
54A906EAD36D53FDEC9C70BF01856A65B9674BA7C35691FF205019EAF0494ABA
481CC74BF285AA1A3F243AFBC508CC89471648A87290550CE49089DA96498AC8
E88222EA6BC348961E077E520EA6B49CEDC0AE83608B851055BBF923D96BD096
EA3011417722744C73C49F797DB4596C94EF64095CC5CA95728F5805BE16ACD5
83D527CD51A7575F5131DE59CE2BF06B0C40C1294FA9FC04B12E0026B50E8D83
2EFA3675F1386F3FA0700A77387EA8EC418455DC1E6468226A64A0577ABD2065
E1CBCD4C96751C50B2FF3D66C588D4F5ED781A032962EA0D39DBF402F63DF090
76345D889AF437A7D65BA1B2A5A091A9FDA9C5C3FAE4DF058F4B300620D9A17B
CC91E12C1C605676F0F2210F145D91D4AA21D8943520808A6B7AD799A6B7E55D
603E03017DCF569148740BDD8F4750DA6B02CEE9DC5A918886861F14889BFABA
8C6A4808C923BDC951C61F28A306E85ADD5C8470F71E781C06A73E41EA5252FA
B87C784C2BE421EE74E54F7981C442771597C069ED5BA76354C2AE4E276EF952
E28B286451E2568BAB78450E61755E7EB7F4BA8FBA57162992D8519C87B65E08
047C91637E104E6E8E426D2D3B4AC68FDBE6716FE3C29DF06DBFC1F955C17DAC
FD1C61804AA59064134B7840F6712495B3FB7E3A06FD06469D48481C5E263567
7C4EC711FFAB85612D9E020BC411A4FE6887EF05803B328DF34031A19520D0BF
1E72217ED928B3E2A22530406B7B9CE11DBE245254972A9E47817675C9444CE7
4AEEB9490809BCDB975DCF4200FDB08F3C4AF163097DE1D7FF83E377D5D466A0
4B399E30C0094F673F0971D04BC3E9DF6572D66BC3CD4B228759910EB7880240
4B790B2432F2668BBE6AAFC74E5CBF5D4BB3E98ABBC4AD0D22CBE14AB47337A8
0AD302C6B0E28A1FE4DF68E66F83EA24A32C462990DB2960ED2C624CAAA8C031
D718CB10253C90689F4356093B5BC70574DCD936D1472378FB9FF81448B7B5A1
FCBDC46AE374548137F015D0B940ABA897FBFBFC0D679D2FBC5EA1A70FD35D28
E89D54206E0D53B09ABA6E56E85A9F23A8DB6AE5614372F7A163423E0A464A6C
BD978B169B121155CC018012893AC143488EB42B699CE80A7F069577F96C329B
8C02B80A001E4C647E2F6ED22B5745CDBF73203755E933437F913E70C2F1A545
55FFFE67A603E620B4085F9760713537D11A5F505A8DA93A12B62CF39B5A79B0
085C37A8A44265488EFA2E70E462D7D5F7DA7F62362A6AEF12988077AA601955
A96050447B4291C312BC747819EC958B5AC48BF7CB983FC223A55FBF610F1CFB
3A972F7121D70F9DDFA7D73E3473149516508793BE17139EC5BECE91E3EE39CA
AC6A7B9FADBC0C3AF7E81B9B01E709F7AE20C528C50C0DBCDECF21AC15FCB04A
666858942AADDF45AA498F0D68268F9CC280A699C733BE23CE377F8E33B3A50B
9477E9DF62B48124A8D4E7B259DEC6ECAEDD8F5289F2CAC7C0013F5646AFAA79
DDBAA9230C3B2CD654ACA8A513F352B24C98AEB98939883BBDE13DF3AE054E6D
6836A74CAB1E9F9D1CE110EC193CDE96E63A19057D9244318DB05C7BD5A42728
205AE6C4EEC0E27F3C8176C36BB85FE71957015B2318077C84FC084629DD8F03
4408295808E37DB5DAB0C5591D35B785A5E58EE0E7270BA4BB607494E68E3439
1E2542903355658BD278E6769611163CE57541A9C9A4CE8482AD4BE58057CB7D
DF52D82B2E83584A66F95B05E91CF259187F0C9520DB51DD4C7807701B29B3F2
444CD8DB148023A9CFFF8155B7287E9295B3DC47B51F3B35EA8225886A7B405D
628492563DBACC92458DB6CF61F17B77E8BAB04CFB019D1EA06B6E8BC8D89EB3
25307BDC913521F90293851FF89C29EE46250E95199F6B19286A62D3C32FC0EB
E4CA8DE7C1A2D6A52818D98058FD3D64C66BB4D41FF7EC5E2FA1A51C75C27BCF
496AAD987F035FBDC6BA771B0F74D91C99CE95BC3BC6F74FBCCFB58AC2D9A3E2
06E8362C788278FA86C4C2D50234844F5216FAD042ECC5B6E3A06E957827E12C
CBFE31342961417901790508FDEBFCC4E3F3D8112A7E8FF270331D2FB475491A
55E691A702BAAEAA4853054622B71E68E8EB85702B44619D35E05F8351434248
BB8425A5F9FA49189D45C42487ED4E135B3B1530C30E1288EB5D9D11D7D9BB39
FDA705A9025011999870F0AD19B5EB1B9D54BBE7593C45B8F368F3F16A8EB16D
D619A90441E240D6126F7F13B0B077908F9AF7AB1CB23E5416919C2E0B7C279F
84FF15CC916A7C64F27E1B18A4E3B76C15C811BC90FCFB428267A6196C0C727E
8C68194337B35099B41AEC1F5C7AF9C9E0F86FBE1CAA9AD1066CEC3C313244CA
7D165B05DF6F387BB9711EDB2DCCB6037DA1629475BA17122B1558D8215AFA48
4A50E28241F68D8910EA4ABB4EC74085A8175DBCDF2364E952BE0E10208790DD
1C9DC79E4C13923EB502A3663ABA6B27746C9DC827B1E08975F998B4C43E15A8
4E7DEE881ADE5B792CAB89DC298EF489C1D22AE431B25416782BD65781066983
3A45342B060EA6452293D962FE6E325494152AE7606F4C572193727348FC6BDF
B9FA3CA5E5DE644A86893CCD7EA624D538CDE8B6DE8361ADA57E7BCAC54061AE
4EE25588B553115D9D4CA3EE1D83956749F3E6F9C974FCA897EE756EEF7E0E6D
2F3C22A1B53C2AFD10D395E36081D1ED265E96E303097B72FD370FCBF53C18F7
6B79AB072E704173D2132072D72DBC2E4B72A2D895A5278651158393C461970C
9546DB03AE3BF95C4A3A8932F75ED2E4B398A2584A4E6D8223139ABFE5889825
3869D4ED74417B4E08979C730706DBA509E4DE58E641E688A9AF44AB803E5287
4D20D33012645C4E8BA1B65B0D7182B0C3798DA5A68D0EA4AF872890576B1DE9
85AC07ED2FEB500C2C5AF1427197EE6637F539123745CA8A390A5C3386D1D094
605C22E58B9F9C3E9C6D2F7025ADE02760BCD025878AC44DB91F33D815AC9DC3
F44297979618E10939525FA2CD9E35988FD5B8584B58D2A96BA0B87CC5C6E2C8
8FA9336082C86E84310DF2E15C2A8EF5DE4A2854AE79405374E0CD5FA29B8ED4
A8217BDC85C663F04F0CA9A2241619C4B2F00E32C603FC2A137FC9C4BE135BBA
0DDA3F3F7061C15460E3C1BC8E20988FBC416AA70773FEFF6D236BA47C5C52A8
48CACE3726EC5A039533BE1584B91F787B42359B5D6765A88539866AA756F4C2
13BC31C09E9E16D7BF7B1B878FA300BD93ADB44442D6B6A38E68BDE163C17BCF
95976200224F30200CD7834E06BA770FE9B8F56768EAEE1FE1727C28A51595D5
6AE7BE2D3C53760A4D5A7D58A46954CD768813DDF7E2AFA021A6B5EB84E7D085
0954AAFE86C5A47397EDB859A9F9A257A366CF288A27F32BBBB40FC385355AC2
54508F6207BA17A89280FE34639833E29ABDECDECD1E30A6E774696C251F318A
C1D9EF5FB1F77A499052EDE5612AB895CEE0901707F717AB92EBE58A418D0457
B4181134CB88476E32DA4D66981384DC2E6377F733081EF21A2610055B5D7794
904C0CB95E2AA8351636B8D877882518FC4532B2AA0637438712449733447E8D
F770392697C78A25C5717BF3DFE41CCE2050F70B6685CE01DA7F4B6B56E45B57
2C3E4E5C9E9BD1D8D7912DB29BADFEE837DBEFDEC8B6216FDA5B792ABFE8E8EC
3AEA4B978AA85F9EA066D77B06FB5164F54C11C6A839E00CF51155E5C7EC7E5D
C586FE35DBEE9CAC7E77D79BA760EF4C53A3C983853B0B4D1EB3E85EC2F094AB
06D427B5E1E7412B3369336C7AB1D40247DC7BFDA8939AA82604F3C12F8997F1
A4071A95745386F481ED8E8C84C42315564A45841C76735BE9102DF181129DED
B9A655EE349F0956DB6D6268C6CB3A9420A8CD622F9B0C79E4635A10CFB39EE2
50AD0FE0CF1CA9A27AB193338E68135091A05E039EB50115E23635310F7CFF0D
A7042EA776C72F7C9C7E35C160CCA316FF404E773764563F625DA3AAB272B272
84926F4C160C28AB98094B8CEA4F4A9959E045F04179E90A97CFBC936504373E
EC109B0EA1A9FF6443202D5321652D970BA54F2D5FFB2C395B38991F932C461F
35A95A925A5A33D6C604DDD8AA7095E95386D0D1D4B0DA26C720EDD9896EFEB1
1E9953AC9527FF3A91D6EFF971666FDD84471D287F1C007345F4A670030B0854
D6E51F1B7D279051FAB8406A0BEE0797AA8575D901C9EFEBFE0088F71F3B5623
BB3E1D4DD3A30F7A2F8D1455B7FC34C2667863373612A5849734682FEADF62DF
092D00B2A40EF75D9A9869D1612D5ED577EC6F438AE8E4EDFB0178003078CD12
C80EEDD13076FA64DAA4CB8B858F27FF375FE0EF5BC62BE59648DE060E01A983
82A1650646BBBBA3B046AB52F983AB01D8D27BB5903FB71AB68FAD4E316BD628
04CA36D4619D88875F441D5BF444704AE2B065259E1897503A37640E7BA1CC10
3DB35AAABBC04D88E7AA04711D264260C5FE7B1E33FE8A70564B1DFDEDBC54DD
74694A5B3D813235C450451C550EE140292A43415B8C958B346537659450D641
95B170A798AF20E99ED07FD2550CE2A96156EB5EE9F9A9A9955143B9C22381B5
63F4E02A5A1B8F12CA8DC01FECB891CB78FCDFD0B0549679013551E227533F9D
40C9B93724957BF6EC847128FBA362EF592690E6A0942E6CB28AB93609ADC471
09C1154208709631FC738C19CC1478881F66DAE9986A2216BD56C167206626FF
532DD43A3E0B767F6195F605FF7E29BBBA2C52EE0385F33690BDADA2B0D53B70
FD2B29C5ECCA686818060AD0DAC52555949347C4838BE0DC4DC3EC4AE46AF93C
6345788371BD7E6DE471F97F10607A65F4A309603CA1BCB827A7DF36CEFD80F8
8CD7F9D9FD4525919FE9B34EC2E2AD193F4267384FBD38E55D7951FE1F98F9F1
94E4A4A8617B8C8D09650239DAF887E2021E75F59804BF146F398B9FE829119A
4ACEED02EBA65E3D0C37CCC3580560136432FB649DB9DF113D5863CE41432952
E854C1BBEDC359E616B0784729D844566898041893C50054D27ED0EE3EE4E304
1C7222EB6AA1B50E2607945D99EAC8F09A260BFCE7C040D10575084BC081821F
B75EBA3348AF0E1DB32EDCD71B48CDBA049DAFE3EFBDA7DC3909DBF81D603AA8
E1C41CE5D48D0DE181A612268EF4316C94832C8EC9EDCF022E141A5DE5496F54
EF7A005531A8F1CF418DF3783F0BE805FC51625D2C9C187AE05A04D25C77460A
88979A0D9076C6C149A018EB0660BBE4C75F1CBCC9D363D8DF6CD6BCEF847D5C
6382424E97DE2CDE4D8A591E7A3D403614E6BAB8A75D3C7B857B20FB849A87AF
757E77D486D15793C2155AB8D6C978DC702A7278890312F6E32B536B9972E77A
5A241B95FE357BF672711D63BA44954452AD52338A1D0D59941DA7DDA423CD56
66B4D5175A10A8327225E622A025B622141DD7835B66F8155E342B6A57A68A45
77BE5B099C7598CACA5478991E31AD3D824E3BBEF65ED35C6D8E315236996E1D
D088E36EA1E309509AF71B1C483E53072167BBEC9846C7A35A35151648C5C395
716960DB1368951722C3B9321061EC43267F444605D9E9CD6D1F52ACB1700C09
608CE433C390470E429A7C70A02308BDEE3C1CC5C75E2D13A602FF0A74E0E324
7D19A1048C679137C6964828D96DE9E4EDE3EA13A73C8428C8CA13E9CCBC0EAC
7C3FF43F0B82BCA6BF93B0B1373AF102E48C52BB7B201D053025A68118D8FAC8
B22B497F558B0D9DA5D63471EBF5739689B9658F75B4746F0788B37B51B2A11A
EB683C95C33EE383FBFE0E90ED252D4161363440B14D9CB146BD79FD912E31A8
F3DF360620DDA411833682CBFB8DF0C9DEA6E2FD49D0F039B09F94B5758DE9CF
B4B351AF17E0C816AEA2F5D3BC9B70FBC55DE44189896D3D4717FCC770E127C5
26F11678DE802058F165171E0E831AEC4BA26841D8DA228F4479D36DEB0C1F85
69294961DDB9D8F64E87CDAC584B12E1502F5B21621FA4102F4BE690364A7B16
30CA0BD02D10BDCF38AD210E155E83ECB2BFBD27A0969F4752ACC6BD2365AA95
A8690BD455F5229F483C457DE20D81C6B496C5837850DAFBC9BFC2A76B135D3D
9FBEB56EA48CF73849F22DA41325876BF20CC50851DB46594BF4D608E3C46ACB
03FD405EE5CA4753579326A4FC31C9828CF2AC80B73CE2768B06545FE260D437
5AF541E38E374DE01977C1A3935DB8923AAEDC5F19F542811397ECE1909A56A7
80429D7446446F5B1FDC06C5FDEC586BB317123C3DEA179DA4FBC32DCFE081AC
8FE79BB880EFC696D77DAB94BF484CB992EAED716FC0239B6539F14DD736516E
C94ED5DD3649517688CE14AB8B919EB51BDCB6F7FF37EE21DB74674BFFEDD140
3738309EA996076E3AD1F6363E18CEF8715CB464AA160538FE1BC9BA728A7EB3
8EC991B3E47550FA8781FAA94172F8DB3A712FA6414009FDC9D750868FF03306
B930CF7099524E1DEF50252C036ECC9A1B2A55278FEB80F7D0A6298620E5154B
D4372980CCC046978FB9CFFED5A207C7CD42FE914BCA7ADBD99A087302B8EEBD
3A08A03DF9ED571D6A1334C758EA75F2074AE87507BA960696490C218422B6B6
5B34343AC6DE09F74D8CE9D646DCB9085862DF16BEE85BA2BB40F538F55C11D5
0F882B739138471B7AE4A6D5A9FA4D18A05926998D1D03E2532F635936C49CBB
A42DC3CEA88BC85FCE976E29494343FBF47F4D36F66930FE447CEA6BBAD9AF53
1381A0D4498A70B19E7A36A065390AAFDBA137D3B30AE2D428B279337804161B
B1196ABDD95A9F649546B511C31BADDF54FB72A8C149A74CD2B23FA32E4C4BAB
90F481E433D905EA5AF0C5E892B9AB8482DBCCD5FB2B752C328461917930995F
04EDA3B2AD8EE6402B3C9FB77D578D6C38A913F49F512CEFB66551E391684533
40E1D15DFC653C37120C95D0E6C9D16B443C959B20470BFA24183B0D3B3D82DD
B8575B65C902935C2AE246CA69DBB0F958D082FF7D86251B59C66E4DBBE47880
F9AA8145A18255BFBA19DF9635CD0EC2541BD78DB233853325028F5913D60203
EBEC19F3A13DDB602AF4F6BD72C6B3158EB82AE67338CCDFCC0B6C535BBC8643
99444976F34F301F29BA4C8D85C255A2E1DAE562A1CC5F97FCD349F8418B6A01
E5791944B2968689F1814854CCE270ECA3CBD43509A81501D0B2B10BEB60C05A
990EBE0EC8E139341C5943A699E3E852644F97E5DD35D4BDCC5DECE7948166A1
7752978167E5CBF1D1E3A0B83726A867BA24B083E54D93B7AD3A08388B5A56C9
FF8C4D4EBCE03AA1FEFF62D11FCFABDE20325DDBA2AE94C3A6F116D4155022BF
FB29E23C0491C450915B2BB84853F6FF53E0A660A408772005580FB2BC843D97
464EC0180ED00AEFBA5A2A7B9BEC5B4DFBC7D89A16EA2AA6490C71858A4445ED
454DF04025316AB8C94ECF5A68EEBA1BF98D45BDB114C53C3FA7DF9599D1B4A7
146E8EB79C0B897C2EDD4ACF4A67747954966C7F2CCB70A7565FF6BAEA8C53AC
A9C12FA2E9049715F8AB623021FAB977DBF011E7F0FD6C9B3E98788FF151D340
2FD0AB800B022A9B59AC93D44CA1463EC3CF88E1C3923E344AF2DBB26F098336
9BC48AEA1FB37AA1507B058CE03F862BB01C30566C90DF0990ACDAAFB55D90F5
0B3C9435632CDCC750FE60815894D70ED29CA909EBDDEC0533FC238883C43625
A6F45B040619A41E130B8D15C28641F4FA7266B4A71D2AC288F3F4C1CE151FFF
0B0DE1AAB7C818DE8BDE384C295209B3E9C85B7466D8BAE99E2E5B1DF9A5B1FC
2354BC7509DD6C87F2E6C68E3B49833812737E5307BAF4B2870163C370AA6043
403EF014225041AED232BF936527C3F6251DE11B8B5F815032AEDFF4FD8C6022
DED85CD17537341741214AB77054C921F4CCC0EFA1650B8572CF5531B250F2EC
E3EC57084E56C900C2ECF867D61348BAD6E29DB8D4E2E7794AE3B23DD4EB3E43
7DA8C0E186C1646CAFE072D90018C41F280242E9E51549007981AC786ECC0A8D
4C8BA7A4BF2BD33732C62B9D446C5C73035F559BD95F6AF5E67437A661E3FFB9
907FFC2D5A568F8A75A5FBADEB6A24588446552C30CAB001D5F9DA84FA530FC7
306F84CB56870EA2BE9D0B1D1F3D34CEBAA0367ADFF2C9ADA4918075715B97A4
63CF3E66AF2DD3D0BB8F6FBB9C117DC2637653261B1EB6D2A6A0AA9538ACDE20
9765876938B115940415B0D98B08500AFB9424434CB0CA9DAE7AB22ABF2F996A
5101E0F85E1E6FCC916ED5D9D17D5E571772F4FBEE308CEF5469C744D47ADE5F
F0829E448996DFE133425CDEAB9FFEB3D91A9145311D3BC15A9DE0B380531C93
F0F9BDFE618C99AC385340EAA8125921E0646C0C76B875FF4244C72B2CCA5DA1
8A0F9447DEAC39141E4A8C8584A38E5747AFBAB72A57757B2CBFC6F5D915C260
859C43D16849F7807E136B67E2F9CBBF7CBBE4CCACDC779F68F2A2183C361D72
8DC24D8C2C25B06AE091DB97DCDE55F701A6394C1597A0F3FEF9ED2417593C51
858986B38A951EE87FB9C2C76C2F08B571B268525E2EF58A024BF39EA8822520
74BCA98A6094EFD7A2A94A2BDF2E52E31B6F5E771BE54B09E2D6EBFD77645845
B7C08389FC4A8FDAB2FCE4B01FDE418380A16AEF2B0C50CAB47B1AC2BAF56D75
393A665BC35F1E515F6BA570464F63E2ABAA2AD12658B7FF166C507B49AAF6FA
4A71C74683F2BFB9896CCC0007BD95BBF88379F413BE60C6CA25AE8C24EF0C55
92DC31004A9B21D2E9366735F2983F7D46685E430D27E842363D3B7FDCC2F4A8
9A52DE62973573648201DB893134E7635AD800F71595CD9911260606FBC9C050
EFC156E6C1F4E53398D418C8D726BAFDA7F86CF2FAD39A7166188DDB17F8D8BB
6754CE78EB0ADB7714C746A342B16C33EA16A99994E9EE69C25430BA2024B32B
33E7D9023B3B8CFB63CF6C8AF9623945555EF0E842E222CA480F1F22089A3807
9692312519392538DB2CDA32888E0742B960442432CE407A290008A5941DF436
D3E82E3489E226DCE8A666DD779E94B4F401C0E5C6B6E6244E5CC893BEAB5212
75D0108121C2D778E264A44F1C48527544E28F808AAC801670C3D6BAB0DA0574
D505E6A62F64EF5974CD8E25A6906CAC83605B885B70DC9400E33CD9D09310E7
7F4A81ABEF8E876DAECDAAAED9C12771C6D0E14A141A52D9465223B3ED9E26A5
DA6E7335C4BC4571233251666E6A9AFF653C2FD3734F9F8950DA8A2E5BB6DAA5
44104684E71F3354A95AC94BCACC4CCC2A7F7D7F82616A3ED8031D3DE6E3A564
FD47B9ACA13AC8312D5FC7A703DD66B7CE29E6439209F72EC8D2A2347451F3EF
A021D02B02DB6D0832576066D14BF085FBF50AF7CF2D153881B994A7A8C7FF2D
428D3529DA7047970A8F7E0327C5DE420DE0A9F56F62DF1026F4884E0B3ED3F4
3035C7A00491551F32C13E853DFFD278E7464F3DF65FD0A764A54500F3DC9999
9554F93232509E529407EB088FE949430E8AEC854BD719DCCAEB40E1EADBE5D8
07E00FF971109CBDE52BE32600B1223684F7BDF71D049C508FCCDB05F38E5492
F48B320E5EFEB561368DC3238D11C2E2B2243227391D2927ADF9121B6B54C479
53704E864AB20FF7A1C4EF5F0C549BE0DC92D8E37B44CF4005094B9F6749394C
35686307842337CD1F9695491BBBDF271B5345C4491DF639B2C1A064DCCBAB9C
238F3064F04C6C0364BB551068C2991D2EAF8F1F26C506DECA2CB27E92FED95B
5EBD656B38272829C49B77DA56D8C3459AEF9356949ED18FFE09BF804BE0A72A
AFE74199DA8D088056F1F1323B8DCF550A802E43BD6B5BC6954066F2AFEEBD40
C7E998087BA7AD87A6E403E9A9B807AE920FFB2A1CB844991545CD5D75EC2C77
03BF21B61B9AB61172F6E763B323938A546FB0BA74E02030C1CED85B9F5CE348
E7F5D669307C9F8CD2E9ED0636A38F806B594D2683B7B77732E5D23AFB67EDA2
394715CBF564DA9C823E695E71BAF5C7A30679179E07C30D58AF929C90BDDB81
B5C584B2B3988F94B413C00C13BEB50E3DE9459264BB59E8ED0AD0695AB25955
EE47DE4AA52ABD1A4B48C58D6023AB4F8F512FF3F2DF2F74C024E9B29A65F337
927F282C365B39520AF1C7BE13D597A4FF1AD2CF4DFCCA93E93F82F7477A180F
F36462E47AA6C890D4ABC0D56AAB4A842E446B9BED7210A96702B1FFFF4F63EC
516DCADD90525F5043A95B3ED87E0932C8A88AB1CAC033895ACBEE4C69197152
C5A4D1A5C1A7C51A1ECEBBCB86322A1D71CBCF1C316F28FDDF8B550BAEFA9578
28763FAA13FC126ACCE98121AC8959757B5F9CA35BCF42518172ED3C53F27D0D
6CE6168253C97322A2DDEBBD713B9BA50198074FC701F826FD1BA4B0BA057826
9F9E21527F91F5F20D556E956F19270A4455D81D673B18F7DDB32F4F9BB812FE
D25639E9A8554F23A623FC9FD3FE82396C934A72101EED2985EC52C26E5B8E62
CCB86A50F1DD29199237B98DA402B1210A09757E2EAA6F66150C86768E3BEC5E
192ACC1FBF937035DB4920F0B8E96876396B1FB8ACAE10E2EE812C36C1E2B485
259EA0731BE310A656D57B0F558DF37991065BC191C9077BF8E53765791DFFB4
FF1570574EAC7E17C772540440EA91FB736EAB1F06080262C0D9BE2CFC49FB39
0CBE8D4CFF098965F80EFDE9391FB1A1FAD79A57DFBD94A4FCC106D7709BB80A
4BAA9676EEB9BA4026B9252AD7B574C8411046179C59970DDBEBA58D71854ABA
6BABB05B04A44633846D4AD436C56480C6961D4C4CCFB028C7529B81B8C11FDC
99167D6F768153607F0B154A94B631E375E903ED9EFB91038543AED1CFB4DD19
EE28A72ED3A6048A3485926C35EA52D3CE37E2F63D1B34FB1EBDC9A60F4AB8C2
7EF78FFC29A4FA8C83E4AD433C084D0AD5E2164D50C910BC02D39409E075C600
5B59B995C36E7E72E727957D134E05C0448DF2939262A37FE0A743AA4741A76F
CFD13491C65150264A443188405D5CD3255479B96DDEE53455F41AB052F11C58
8936C2B3A6D011C03BFC4D497466C7F09105A287FB8C8D3085A897C83D3FB66F
981FF9642CBE065FC6CBFFCAE54061A116D37C2C44B5EA0504D4F1E1A971F9BB
C812E6C2B3BFF5FC238199319EBF377CA7952EA90F97DE25C1CE70319438E6B5
3EDD376E010D766FC97B40E853CA87D94F90EDEAC8A3A8BA41E7B0638039B6F5
B5916D336C008A0C6A122578D71E3EDBDF97D4ECF8402101E632267460026CB4
1957431D149C2F17A615B1FD4252DB7D7139592E2A6D585CED47F063A634E2B6
4DF5D843B05146BBE60080BEFC2F2A12B0AB1BE68F5194CEA32E5E6098A1F7EA
92932FD6EA708C2FC36FC9583A048A83F68049C707E5FC1473E7DF90018211CD
6EBF9453B2F632E36A15B373FF3FAE53532C1F710EEABB70F615B86F0F94CB57
08DCC32814564A07DCB908A31A64F6D9C34344A966B64FE5A50396F18FFA2F91
2FD822B4967668244A2EBBB9310ACA9EF05193524C4E85AAA0DB14B688D61276
F94706B29796358956C55E2AFF9E1DDF477E35AA5C7691B72AD442BDDAD18F30
DB190E4D0045E75A612FCC6F434D3202BA66D3F05F8128A99ACC30716E46E31E
441196011D609B32C5AA4708AC8A56474AD6EF97061C880593ED7C9E2AB4B0FF
87F771A190A68902F13381CCAEB66C4C31EC771108FB7107FAB8973BFBDDFB74
A180180943E21DC3DFC0F2885961670BE2D2CE87F11B7F430A89BD417C9C3A47
B945865D42CA061ACE401105AAFFA262CD22E3E4A8E70082F0C085AF03D89E76
4E46770C2FB99A83284D3F6E0192DD8E788CEED141266BBFC3A6F09A4CD7D67E
335CD1D4CB26193D06F753FC3BD99FA5E9246E76CB6598DFD42AA22CFB939A91
4FB803C324848E8F17ADC676E012A737EFA5B743C0FEDB224E360B00EC0FE4B2
3C38E06E376282C94AFD7ABC1A8391E60EA8AE5BBEF081A0222207E864C7F397
73638E3BD2FDDA14698C1D1F3041B13A105DF8C41F14E954B6395B87FE5B882F
C14065D013427D282B07510C3A6A9597B5C69D8F7873A03CEDE934367F083F65
61C939669E28B55BC333E9BC718B426C20B5288AD0347968808E0C31A589D074
E9C9A468753A53512954A72DE56EEE0DA728BDD2FB634701D20C40631420C685
B7742DD1E5B287F5743B651799CD320C3799862772B241D62D5FC87371F912D3
A7BF1C45B9AA26C0FA6F8742178B15884E33D4CE17497C27D4FD84740B68AD9F
EF4DDB7A1169F5A96C3FD32EB2011F557FF3CC2582AA9FAFAB0ED3CE81D63F54
FC400D536F375C968FA7D88916E879A232B79539667BC689CB291410D2B983EA
E3970CAAD43ADAEE90F3C443165E311B6BCEC76ED1B2EE4CF591CF933B63EEBA
96C35025EE6B09F90C315C706A63D4E868BE0DC8ADC24869BD5B50DB037983D7
F0FA3E14291795E0287697D3FF39A888FA68FF87295F94EE8E85406CB205B03A
9A7D232FE0F7CD9413D853847B32CDD047B78DB8D00BC601C66C5A38FC5DDBF1
CFD40574FCF4D481A294B8874E0706C7631697D4CBBDF2276A4F74E39DD3158B
60B775266CE7FC9641A7A1509B3987CD7F1CBC388D46F33B1E073A873EF8016C
166D73B7124871AC35FBB383F4C4323888AA009B85B7C89CAC6ACA8C12EBBE3D
47CC82B1937B920E81D13D3F046ABD2F6E793C31EBF5C89965E329D5452E0DB5
05F36A75482AB01D1425FF06DF3671E2423ADC3215D113A2BF34A30ABB7ECEF6
8EE3D3050D3C98651FBFD7289F22B6A883E4ACED15502C9F0934E0D4EF05C58A
7895D9822721C68611B4755B7983C3BBA67587727B64D2D561F2B03924452EA6
B6C929A92C24148F27BFD301D9E42253940B871068C6AF2FC22DFB7068DD8E9C
4B2E20DAD9A162A8155602456F2EBF2705ECCE7B2ED90343D23E006ECB282BEC
8552B2DDE3062F4EBC4405EACB93FAFB5FD17868BF5A24B9059F9665D913BB9E
03C71969DCA4791A423FB723392E3F9F7931E113247D7E76DFCF5AA362A030DD
C31B704A2593203E3C75051A6C198C74F39B53FEEC8C2A4AF378B0DA79583BA3
C7DD774A20164C48032204CEF2949742FA593E255E1239FA44736247CBAAD5B8
56D7BD6E5E186ACBBF9200A4C4A0951F09F5CDA85FDD822B626F0B4DF1B16AC6
732337440073CC4C3320653402A526E679936C6A04A7E905277DAFB8BC1543CC
1E8EB8BDB43518BC2CD237AABE18E8AAC8484973285F05248F17BE84DAA81CCC
80A1623325AF73384AE27D532FD3D3F43B665BD7390E6ACE54B7E7A9CF3D32E2
78603FDD8C754C624AAD0589195E8C10A3A63EFDBE34981B98132D246C367AAE
5AF31B59F9BAE2149D9BD0015C0494B7332A5900E9887D195A350B80B75F198C
1ECCDDE0D5CEB2B3C6630F8764659D6F27EE1B259F3EE4D4042BE0AA2CEDABC2
B11C5604B2AB90722E1CF60A0D3F1762AFC73420ECFA3FE176226CD40ED75D82
85CCF8270E096FDD8292CA99DD01F61570ADC7CD473DCA54ADBDFE9B11CF60A0
4277EE7EA802CE692B9060C4BC53114F7410A709E23A827A3AA14F974A82001F
AD71DF31900868DBDCE11106A4CFB5B4B79011B86CE236D764680BF435A8E236
DD1DF8E8E207B1491442320145FBBC5A668B21C7D5BD7CF207F281277F182242
80A54128A0A38C61A4CF5B0F58B4C250F22FED0CB8BDCDA6FC50DA8CAFA39405
04BE7D41001872AD02AB5B5B8E1B23FDA7F17EAB2BE220085A60BE373EECC094
8B9F73673E36E5C67377FE7CC8C858992245015F759C9F9826D5BE348C4E6A4F
E82055E7ACF9439C1C0EEB83338ADC00FFCB7ADB2B99A085B3B5A87A0428D0DC
BAF82F60EAD6E27FC4EDBA7789D33D8242DD5BB620AA33DF4B72808AF1D6858A
317F6B6933BEE7C1DA51185FF5B112E5305F888B5DC6EDA08D24BCE4695BAB02
C708C404AF163C3F0C1E822E1C286CE87482D85D486866308BDFE168944F25A4
0C683D5545AF1C9A68AB0FEEA3CC3D11A56DB9036DEBDE55509119A4BBBE5CAA
01611B1E0F4429C8E258818F2E326CD8E2332276F3CB9B9795A914999B2F2BAD
E178899E229413FA03ACBC18728BEC8821E6F5E2E17FE3B9C0C35BD1C45D2C57
29769CEBAB49F33E3BE65D64985C29E17ABD0F0A1D20C6ABE14C2DADB4C7A4F1
99C002375D5B89CBEA8B244F7B800984379678F7DC7F9805FA4EC60CEDE51AF6
574357D6A6DFAC128897AA079D2BA993B27DF6AF141D84CE3124A96A86F4EC16
8A52132B9954C981310AB1866281C51F4BF4D6BABC3EBE58D6E2D956531EB146
67B1F1095205161F6CEB5BD34F5B436D99A45EE0E94DEFF65A54B030ADE220BB
9C23783E217A144534037232747B43A4A94B466F8C06F00A26631DC0B9BA7942
3F275D3719633DC20D15DD88DACD628B68B1B7206EF286D4D70946B9A39AE3BF
D7DAFA38D0DF8B631884B502A8AFB0855D83BA962CD34F23F656AA2F26505C43
58678109F568AA98AAC594B27D96FEFE07F9A67B475B940570447231E48163D3
7CCA99CF316CF2EB17276C4936BB635CE96348577FEED9DEB0C9C3A23A3FEEB5
F11F9EFBB5ECEE405D01EF03DB3F12E5E02CAE79410C0EF444B53F992CC9763E
F9D0835721D12F8FB7690832F900E03ABC933FA19D80E30F713BB943AD132571
551CA5205D33E11497F798C0FD408C79FFD56BB5878FE24D1A1E9D7D035A0A4A
BBC532662182AF7ACB0A474B4B836254E10BE38E2DA7A8744F29D1C3B6EC7650
8517A7550A7F75590ACDBE418BBAB70C68BFDC4A85050E7162824F01BFD6F0F0
83D1505660B93092EE478B74490223C9326DC9BA82FE39D4845BFDC96124B05B
3706F74E70DB07312C9666A51A0F6B29D2318662A1B28AFCA7ED612353DF449B
8F794F11175985B8162DF961937E230638E96F5DC2A2002EF4D8A7CD05E804EA
18A95DB563F4FE750C289F9B86E6390E66F32AB53978FAB8F87020A4517E05EF
17DFDEA2CB4507D5F28B38AE222BA566D2F3DF67D8E440AD8BBF33E3B7C6F651
E03F1AF54129375399C1FA04ABC51B7387BE337EC3A3E992B7D4F0B70D6EC245
328ED4DCA90D9E2500860675FFA55FF89031CE97245D76C00D3CC02C2F8DC8DB
4204175BFAA9C4E5B04E5CB28290423CB5A842D89318ECEFD9494F4E785E63F4
4B17F4C2BCDB7B6CA22D834FCA9646CDDB38D6F3F4B059587CBB87C88C4B964F
B772959FC4F7C455DDC2A4EABE90B7B58D8AC6D13F5CA8A788B6C36DEC37DCD3
7AF4757E45359B541DF8EE3C97A5445103E9C9495E745F5DD9C3EBC78C00E722
62FCA7E045CB8027706AD0A466089333049C300DD61745BCD1B4FE4559CAF969
3076C534D847032902763887F53EAFABC2755FD0D52C7660D07B688077ED4F06
084FCAF49281E9CFD0EC0EF25BAF6470AB3818FE8ACEA3E02227F4BEEC6C42DD
BFF97E46973F93CA68FD7E19FD6C05A3D76563DB63A4BD76B0A9EBC1E87259B4
DEB694F16FCEC51E07BEBD8DD13A9DDA28EED42D571D64537A529235C795B5EF
B1AC98F209AFBA5A4CA92B6A7259803047AA5B5918D8A6A074DBAF19F78AAF6F
D9382A86E606A39FEDE32FAF6C8CA619A25AB5875FE0E49F8F48BFD90705D85B
7444A12BAE710791ED8145BCFE685696FF213DAE32538BAD01160A4F2E3FD700
CC9F620BF58BAB1B9CD96A43F756B051208C3E590F45036626F1FF408583E1D4
A6BA535F77A903F546E40F4CC40AAC368899AB78C44230BB7DF9A4BDB0FEED1B
8ABEF109C831F314068A0C3DBD4190F576CBE630EC88D3BE99E3B10DB9CD28B4
4433413093487556B55E2C0B581AAAA0549481BC21B7C2FC8B8BEDF18B8339CA
6BCBF9200147029444D9D9936C07BE2335FA61A8E6C5C3FFA27E83072E291B84
CDF27CA1303A920845BF99EED0BC26B2315D0FFFF52088466F0D63B6EACCA661
44F836F8EC13084FE8B4DB4AF64AA1DC5682747FF8D176A03F42763E1B7AD025
F24591E5C23F3CE164B23734B1C6A21FABCF5B82A07431A367A6A25FE11A43EC
B11D072CC54AD62B4269FF7E9827C250ABC42A957F5B6617E8C34859B0FE9B16
184A52707731682C4569241013B192E46F066AC96A626B65EABB229E49B5D231
FE5E8AEB60404BD12EB3DBE777C9029DF09C39D8E2E24E051FF0C72E70E5EA65
A6624B1D36E7DBB067D1FCDE4CD8FB0C293870C77073A76830CF99F248C30FD8
BB249C282EC4EE7B0FC0A54D425A5A719F0039B02BB5E72FFEFCDDD89164DC9B
7EEB77DA8A590B0890F38877BCD01C556AAEA2D3159B34A7FBAC0222791D918D
BD5BC1E4E6D6930200D93373E91C809FC7CF4E83F0FBC6C41F500190EC39B768
77EF93300F62F73412A0204695782387252CB6DDF6B2E6D45D87AF79C7C994DF
48F6F2937F4D4F640BE16373FA003B260E5409B898810C37376F6DAAC6B28EE9
898FE8D974B905F9EAB7767E58836929BCD32348F649117CA18CA43B0BEDA38B
FAE233EAFC869FA0FB20EBEEB41C77190D817AE48BF7E9B86B13D095CD885B3A
6DD1988290440F20C1AD65C3CD6139D8E66E981F720A5F9F371B70D71E5ADF19
EF6BF7E5085DD877E376081F2DFC78E92E127CD04A87433E17638B00884A469A
4031083517C4FD399F0DBC40FD55F12C9D8BB8DD997B4146C3BB844048F778B9
2496971D652DD9F966A12E2A489795290CF76B61CE6F2FEA31E90BB97520E34C
6ACF65D70955AF15F9E55782A21667311C089C97A5D66DF0A91B1AF2464E38DE
9836B042A2935BCD7B47881C4348C3109D067135563BE5EF03684C281F90EE7E
3BF47691A875CF61652E5611DE73E578CE394EFFA1716D8F1BED10F08CF33D4A
BE1284963441AE0558EE06041E4820C12FE47E31F6F9C6DF5E59F19264DB08E5
42F18E83586D04284F7AECC603966156DEA6E2F7AA09ECFAA87C0B0E25FB2395
D9BDC6EA6F56AEA8055B924E4F77D062F6AAE9683F4BB19086ED9BA1C2CC03A5
D7FF7DE0CBFB42499B3B907B2433B6BD77628DD1740AA7F225E6292BF2845921
8876AEF4CA69AAAB7B2701AA91CC69FA1A90FE20DE19C0C491C292C34C0E1A89
B8A78B1052E2D8B6214F98A81DEE63901D1150165ACCE96FB2A0CCC913580C1C
3C201BB287817657A1D6AD6445D23839209CC3F2A92D38B784BD1E8996BFAB27
5D40540495E72AD3F7DA55F0CBF97136357817FC86DC844C5135F0B1263D00AF
952E9EAFA31D0A3660412D6BCD527AE2A5EAF166636F9DA44B7814416B2ADAF3
D573EC075B640AB0EC8ED1B1553A8B1FB71F57A7380B13E60B89549BEDD027CD
D56ADC7C2E957B767AFD2D8CA8FE7E5F4803FDFB184AA1165BB8EEF6FC07EB6E
E2A7174196F6531E43866B80B054D559D65786A8CDD4F4B3D9549CEE7DD0173E
3B8EF4E2A894E346D9049A7CE80A64D7C6AA3597DB52F5730E04D42B1DA11940
8A78FA8A5225F7EEB128DDE781263F77006705947A2B77692F7A11B06BB8191E
FA3BAFB7E8B3F7F1C4F2356CF4B23DD4EB3E437DA8C02BA386C6817BE2929B3D
5800A81540144E5099E035E2E915B3B786BC995780557BD9F0490A20ED8FBCCD
A5F8EB75CF7DED0A5A9245BF63CE58E29640A6E9D34794250878E3B7559BD137
E63ACB13BDAF8BC30A76FE0D4EF5558E1BA95A3ECA7A24EEC18AB4B05622F6A8
20F026A193C71754A02C82C0387C248AE20DC976919BA3C55908E0F973DC78F2
2082D37D0D5EE172C616B8CC75C19846E7BD7DA3CC431B37B6445888A67153F1
6DA5F7FC3E0AD5C4309B546E22C092CF31A30BD6C42949E6F8DB83296877DB27
24B9733FB022ED6B245E3C59DBBB14DD7CC8E0E831371E9E7168EFEDE813C6AA
4413549A83F4A543148C45F44E0E98D46A9BDA1AAAFB6E0B6EE682C60ACB7514
F9D44929D0E5906866694FA7E762EB1E35566E9AAE75440BDC409BB445B10E23
A37EF3B8F07D8F2EEB8F78745A02DE4673031437400FEAC16C3B321DAFF45364
620766F18C9C80831467E44501282C45EC67E8C5C6B78CB8217946FB7F1E58BC
FA6879312B0B1A5256A1500DF724FFCE1E5BDA17CC67D8C9B734E77D6EF038AF
560BA9158D0337555DBD2CD1C6581749939AD33C2363890E219B2560CEE55CD4
3E38A010251B72B478FC0B8C96EFBEF1AC18B42C5C66019F6D11A0FC033C6114
04141741B828D74FC2E6B849B586DEDB0B8154C131C74B8AD4A6AE9FEE690C5A
E4EE02D5E1471611BFB9B985373B2D7F47EA73D59294960B4C606F05E866A845
3F607D12B6DCA662F2A5511A650DB4106630253E8941AFEE58AF8E6D32F99038
99F45EF641194F737650E04B6119F34402652DC93033B0D84EF3C3C3E114E6BE
0BF369D721F201166F975AF387067419A964024383400B3253891BC9DC2999A5
D1A7DF5BA8BAFEAAFF695624EDDE9F877280F24C8725F69BA98EBE6D8D4A7B7F
2AFD8236D558DE72E0CF17DE10158C20D82B94055F059B108D2CF87726FEFED7
E05209A175FB013CD3C2370A20BC1CBD260D0EC08B37C2D04F259140BE2BCCBB
E9B404B20440A8663EE0746422A228AA38D8302CCEFCF454444A688107AE1CDF
C5AD66060746C0A627E3ACB5ADA60211A4186E4030EAA7EC63E800DE380A94F7
15CAA53805D386A7BB172C73E69E3F918911F0B3A010215D9B115C4FB4C5E999
720D9CB46F80BE13A34B4AA60C37BBB5AF319E8A107F109AC87C63EE72646930
FF1A48AD11C3F6D4C1369B201B4DA7CEE153E3507681B5F9CD28FC121D13E5B0
96138788AF1CDA241B8FCE7E59D31BBEBAC6C404A62D491B71915D3488F98FA7
83A23F789E4851DFF2FAFEFE9403F26BDD49CCF2AE8911ABB5C5756E179950C7
F721ABC6C7FC56C524E15C7E5DD0B891F762D461560C8B4885FC560DD60AE86A
A5C17A819EED1AF6E4A25BCCF5968B41F7EE23BD8F5A8F9F94BAA80194974435
08B7F43A1BB11C39342C425C3B1A278E207A021AF4A4B037542825949C7D3ED0
E15235B3B2C48C372FA30EB36BF33D373B969DD45731C5158AEB392B52A27982
586EE1568C0E165E715F2074F5B96D3DF35CACCA349F9B26FD74E823FE18C14E
E8308469F0555A3068216051A9E587B37E3A0478D200C9C3F6C7F21AC95E4EDF
54C05DDD9301884E825F2CA12BA2AFC7A9BE1F0B692E4CBA21BDD8235CA039D6
BB9BDD1A785B341D8C4D3608C7903E8CD9B7A00B5D42B8D17CB74BDAA4BF566C
318E7ADCA2CE585177956ABBCA6915E53DCD523582A49732E3909C4E7E2B5E38
81BCA1607954C6DDB9091ADA94BACDA53AD8C3EECAE2065A2598129B29144448
CC29BFA1AE0E1C0C1F6B6193ED1495C6680861826A32268B48A20F0D70C74A86
EF61B670DC6F1C0A8185CAB27EDE3CE581E6CDF4CE38BCD388A74629FD56C65E
415984DCB181E046A9B1048E3BBDC2327DA41C3FDD79728BB55AAD6BC7C43DB4
D00BC49F0E64A5612ED810C22F191596411AB03E9E24FA76CD1694EA486B8C2B
7220C8E764C5C8112AEC233BB8210863E94262266D1C7FF3F6674DC769C521B1
9F673C1D65DBAA425CA02AFEDAD07E7AD8130421DA2EA29C1D23B39D9E804375
6ACE9006331BDEB8F25846966AE0A41A36F8E4DC76CD2DD2A84DBE5AF3E9CA61
25A1216B9BB15370B4EB98CC16CBD444F05EF20AC47F38BAE52B273B7B00D068
0B711A8EE132E6C7534B2847820D9945C193E3BA37379887434FC54FB9CC8E1B
FAF8DA75477EB81D71BC767A2DFAFA09AD6FC10413A373A9E077DAFBBCFE3106
E1CA0D5B88CD455D2DEAFCD11F791B3CE3455AD77645BAB8F77B1A94E25D68E1
26229CCBFD97B92109984F0A9CCBF47F4E2F07204A3D8CB8B96944D2084FE9CF
383880A56F7257A9B8B6030C5A3C4C35E6D7C852D3EF1C0634CDCBE317E77523
9C5B86CFBF7ABC0989581473A9918F4C2B7E7D0D417F7CE4CF479635B1883277
E8F1DF0F1A23AB766F96EA31927CD972CAB2635C7AA9CD629A719E6764AD9064
56FA399B03BA3EA6C0F98B6715B7F7E949D3F1904AC370A471973EF893C7CDF6
70F48B6C573A79A0735023F1863874350C91F96A8D065E31D9CC21ECA3FF7766
81F29EA268BBF549309368380935B0B8EB1F74EF96BF599ACD70B10D69B53C08
9D36BDDA1D5A3BE628E93AA0C3C2DB8F0E70853D172C4798504CF48448BD24B4
4025F9EED7B7D5D6195C1276C39B077ADA9F3D899B52E138B4501AE4A6F202F7
AD4B081AF86248931D4BB461A5BD93FED8AF1342C46583683988B836C210E1D9
0637074BF2CEC42DA56BD4ACF74696B75B1F184B8AB837FF7D32096C6A7E4E08
7F22B7CA26F71DDEFAAFEFF9F2C76379846A0A63601CD999950CBFBB6F8947B1
9A2A953F8675EA746F11A16D1A67EE4C13F89EAACA4590EC7CDF76B3ABD658FA
EDF55ECDCA8140141F3C674BB9D5E2B672905E7A4222EDC2B024ED6BF8D26E57
BFC8A2D3B445CE1B73DB7046B1E210A933D6148DA6B7CF16943C225A1E7C95BB
C257315CA7690F023055A99EE9A96058929D3C180083DF326D7CA50C1EFB11EC
56936187A6106ED48E4CB5019222453A2BDD7543B4D2697CFBFBA2DF21EEB01C
841B8F9D893CC0FA006EF4140E2744364894CD8088BF4BF969E3902803B067F9
AEB714FE7C241ED7E2F673C2B96D7535BA6FC31DF88B6ED044C2A8E3E593D4D8
886EACF9A877AE64F023DBDCB7E9B30843354C1A673C6ED1B2BDF13BCA411479
D489B8F6CEAB55C6E5FC28CEDF82EE2FD8CB3BAB7AD38A66813513FC73C33631
217A8844B52F385E995D00ECC58971E6978B68421CFEBF9820172FC6F3FB4896
47FAF0A9415D254F684DAD7A69E5EA6B40FE599E5A005351EF1246B289DF0856
419F0F00D4340364EF8C04CCA238D61F3CF70EFC69C71CDC0D0164F780AE44
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC88F86B07C1097F9C5C5673B88582CEA8CD622F9B0C79
E463DF7F2F4C6640FF3852BEB520F7B23D8A22E7E601EF9CC6D0A2E6E82E6840
65B82C6A3A6692811E2B4F57723AA3A6E27076A2F63D6CE1FBA7ACD844E732FA
02797B386F2EDCE9FF9F84EEAD17B366D678E61C6176FEC09C94B74DFC090CCC
40AE9DA65E5DA02E7A7E8A840B45B752AF11A279BA06F821525DD0F477831176
84C80B29D318260FBC314986223F9EC4DB5B0EF2EF5D424C6DA581B49C709E1E
98149FEAAB15DFE7F94977CD2041DEBCB1FC8F4F3B288515CE43713570027C3A
C603C44D8AEA1F9821E0124F9AE3E5A1EA6D1C6304DD03CD20842B335D7FA068
735311F96609901AE3F5EBF70A777E892F5B7B59DF5377CE8622F82EA3D4BD51
B1C7DDB9F2C31CAC3C31CBD886DA508F4F1B051D110607EFD0914F27AAB77D2A
42103B51739C7CBA24D989635B289E5EB0A087319F567E3C50F98DFC652FAE88
AB78C203C6D210C162942911B3230B8D462CB2090B417B18667B975BF873F4BE
A9022072655ECB439854EF36829B0DF494ADDD3500D4FFA3CCCFB7A33189094C
20524B5C1B8CFA5229C6416AE398AFD61DA638A562170ADA9F263DAE6A1A0F0F
9D16EBB1ACB02CFBD155AE83CAD53EF0D8CA6A1BD395D9AA780BCF8C3821F493
C8F5B7691CD0C5631017E5180B59AD5C1B122C2284C7D7173F8F556A04B52837
C373EB0C3312BCEA170D055101C9B7AEFDAB027E467473012CAC6D121FEA8627
3DEF388AA2B223E95401B7CA56631A4A2D5AF05EA2047988AA020AAF03297DD2
D87742C6E449112DC5C3C2C87A0C80EC6455DD3AF5A6C5408A8BCEB22B84AC79
B4158CA408081FDE576CCA0722FDCA00B232C2D14ACB1111744FD69BF5937E96
36ADC6BF8F74416319D720E3C79EDBE00878008538C79938E28B7444592036A2
427850EBD6C17EF1545EEE457EA5B8594F7C2EE6C45CC9EBCFA1CCE5B5244125
7B0330764ECCF6A1D4CA22B9ABA26B04BD6B9F73EAB95C0874E5CAEB8A21B1D9
5224B78BA3F554CD4624A9A77A34DCED6A289C01AB88876D626C0DDF493F8752
41C4B6C4A04F78A0399AD1358F5C8A814CB377C8FA448189A17962195295C877
93D5F7EAD01754C8F7BF16D9D836A1F0158053EF23F04C866AD601196760CDAF
F5AF906B5DB4BF4D49D2DE18178B7CA0225176DB9894C7BFBB36E142D94194E5
FC2564ACD7935C70E29C366993193033D9926EA4B86477CFEFB8533665380CDA
9F2F9D944EDB02F6B95DBC78AA4630AB1E8E00F66D1A9FE670D9D40197A8D676
6B887D7ED369B9E01BF45591DFC3BD2C120476718A1CD9960D5448556D1B2623
BED9C8858630A3A930E83872D8BFAC1B099162FCFC58DEC1641699F95AB445C3
B76095A2FDDB571D943539028F73FAEF5B444EE5DED3BA693B109CD8C71F6F59
3EB6E640A902CF7061DF62028BFE27FD6559E2BD4A930AF77466A6F184A51042
0325A26F3753A46D09AB2740332F04F25A70BCA5DF01D35B555F98CAED6F9AC2
8ECB086AE2D38C05A45A40D55F45F719FCA6A50C22CDE6A255BD13A448EC7B06
3C7A0C36B13A6376C0A417AEC22DCED67B93708DF0C94BE501657513EA197659
86675BBF151C8BF50AEBAFB219D7397646D45951B1AABD72AEBD7D68E7EA5DD1
0EF9AA0C3F92C3D3237C9C3AF36CC05BB9EFA99141A4D1FDA1EA5536812BFD3F
BAED69819541A0A5BB5249DA6BEB86E0CFEE0BF0B44B0BB5002CA10E6CB604F1
CF6607E5B9491D90D6547AB3A95D40C779E6CF3EAA910573C27BE685E6E988BE
D4308569020BEF18F70932FFCC120960205388CF5FE13966D83428C55B8DE69B
9D6E7CC7FE0B2E6AC976D893143708E6D8B0FA039A915725FC475DD8C9269581
8BA48FBB5A9A5E96600A49FC27A63C6DC574A27C80739283B7DC53820831B02C
BA3975AC4BFFCBEE8C68F8A9E4D61849BE743010C9ADCFCA72E78745C77DA1CA
CBD0E7FAA2D64533265D620ACBF0A1EF224758D901DE9D8603EAF2B4DEB6E827
F36CD32DE12A5506AA99D3A7F083B0AF8004DF3107EEE88CFA07204E8AF409F0
378EFA75CE6EB448EDAC541BC3368BA58F80344A69BAF223A8996FCA74C033CC
42FE05CF981B0C2134215AA424B2F55F85579FF64738E57EA2DB2FD668326CC9
4C19190CB1DAE7C5533B057BE77D80BA22F58AB1DC9AB6C50CAC2DE84FD78553
0C7479C9614ACA7723A20BF425F90DF8FD6B50D5351B868EEE94D64E38A494E1
62890B0000531EAFB8744B3B9871EBCA9625287FDAF43A33010F2D3DB38FD1BB
C14F0FF192B20BBB3F232523809D9D6A87EF2F9E922753306A3531B9E2CAF10B
FF5BD5D954140A0BC88ECE21D4747F0C7BFA311E9868B3E2166B1CCD2B6DFF7B
080851990E80ACE8DFD6D48A5453D6FBBFE905EFFA0BEC9A340896768D076D89
345BAD2EF58A1C4FEE60CD3BDA3E553A7FBAA110FD34B6B0C923D6C82506DE3C
DC068885E75028CA56BC14EAE3649B42A9330E003CB092417E75CD42336C3A4B
81330254A8BAD98A34292B54B78F7D5B2E672B092866312883330C9C475C2652
AB0EA2130877E583069F2502ABB538FBE0D13DE31C8934DAAE160E8C4DA5389E
0582B72090651ABEC71BE4242CA9C96E5C31E19CF93D52CDF705B08D7E77837E
E8F2305A5B469421A078D9A44265F6A48A35E9ACBCC79450C8CC88C266BD688B
148C34540FCD356E64D9C4B9D76C78C7D1DF7178B4FD06FC6951AE35B62E89A6
DDBAA70275C0DAB814F20FD6BC48BD59F3F434899C8DC3B0AADDD8094BDB6B0D
39E6BE91582B29FD88395B31F31CC1717850E92EC0E601E78EC2AE1EFB42F25A
A4367D071709A7F92C9D782209C055A1915435B158BC65DC7F1BF5AF164F7E08
5F421721FB91A850D09930A48E998B4637293491236A762841616DF3DBFF45EC
8D7FF308F28B8BF159D3ED08B2B4BFBD65E330127BD0F7C30315EE1CC1A39811
33E4F074D29DF850368824D60F99E29E4BDA394F6E63CD57EC8323E54DA62E9C
F572D34B01FF5613BAB82366CEDB518225D7A89553520D2E89261D2DB3F9F4EA
250DCFCE7FCC976989A10482D57B9B424C708CF54245550063A3422969A955EE
F562EF89A94A4CC6C2BD18A61138B3A909BFFBAC82ECB8B507114F9A9AA03FCF
F5452780F759604B6150C06A25C1062B94385EA4069DB198BFC00D00A0FDBB7B
19314DFB159F64F600C40C7A767BA66547085485EB33CD62EA59D0EC8BB06CAF
1DA00CF05A01B8D88B183F800AF18DF6594F296632BEAB6D40D67E7DEAAC1AE5
F0C51BE3704513CCAC20D5F42C983DF5F82A742B571158F8D769050FA2ACE6F7
22A37900B0F4DBC9E590991DF6DF0517BB7D51BBCFDE2A0E7B77DC5810E9F155
AC148B51A1D8E541967035D9A588CF4E15280C2EF5658C086E2F3DF874FFBD38
FEB3A11D048E3C9AA85B14630673F58647A81588824EF0678F2EF863B9231B9B
6F9110AD27951D154F92A2C4ACAC6652E6FCDF4EAFA0E5D98F311C746AB83D47
A7724092A978D89A473C8E079A1F478574EE417FEA538CC7E6CB912BBBB2D048
49271EC5BF5ED264DC56ABA2CA02B2693C0EFDF4E3D8C33DC2FF7834E3E729B4
1C880B5D5E098C881E9AC2D16B0852CF86B15EEC81EE202AF2AE16E3F6C300C2
0869EF3EB63E47A08C952746247689BA8E42122717AA3854AA8C0D8B8F2F797D
E0C467DDC1FBE323DDE853F7A3C1517D7B5D39FD481A9124F6BF955517426594
36A6BA92FB5AB2BA8562C18420F453F76AD936F1EDE779BA33E20E4AC7E5391D
AB442A878079912B7A60D72B18F6DEFDD5CB89A12DA879CA55D78E385A74CAE9
48E093EACF875C83A4CA336F54B05C81BE2AD99D3E7707B0EE4ABA7B2724AD37
380AF9E63D83CA9348B91706232B6FFC2F6659F580CCCCDC369D181A6BD92BDF
4629F0D5AFA7351E302AFC52FCEF33BE42FFF78FA67225C68787BF8B4E90E849
517F4E82B8FDDEDCAEE10E6BFB253876282B3BF980870EE0B3846E32109F191C
6E3C6FB9DBC75EB0E15B6541075BC577C9D61950A08640946BD6703C0C0A4562
EDAE53BAC71A85F5AA424E8B88045985534017B139D212C35E5FCD5A07526537
D6F33F680847243F616DC41FEAD4E9BB0905DC7D680B2CDB3A07C83DDA1E0E65
3F9D1C0D915E5A5F90419CCE2662E87E0EF6FCE87EB7D57FB67ACF787A389913
CEB059B73C2AE423C84484E9AF8FB40155C393A87B3ECAF5CF0545E6D4D9FC07
90C7BF225DECABCDABBF8BD4DAE836C28948B295576D46A1A4938A676C8BAC35
82D3B5587594E2D8B7498C006689770ECFDF0835F223999CD8315F04DDB1446A
789A33BE8319A0E423C38D21A1998021233C29CC64FD1E55D398F6ED286251AC
19DF55D9351BA0B7D519436E9FA0CBDDEE337BBB70DA20FD3E9C0E037493B926
C6C895549815A3CA0E73719CFA327642DBA85B9D0647347CD177744B14DBAFF9
467A97A5C81E86C0F7E38776D97BADB2743895FA96C1B94BB3275906B559BB55
57C0ED24191658430C8975AD946AD134DDBEEF31A30F965FC9B9F38EE166C826
BB49CA10A044607DC4222E8DA169223B8B47ACD2E7885923828DADA6F1520D85
BFBEC86E0082852255EE4D8B668867813AA0E4C33EBCDA66846C34AE53E70977
D33D8A05BA9D68CA36F310DEFCD5A05344C9081F7FE057A3089C7BBAE1F1CF08
DDC4174DBB64B56B498AB23C128AC01DDB12947BD70FA9C8F5D904CF1A65F99A
66E7CBF4B36E7CAE51DA66EE010916117682E684724C619CD88685D4E7F45850
727F0450DC572382E544ECBECE85074E5BE978D13CF42228E62FFCA06996A76A
CBF3FEB6ED83935DD785B9852B732BC3945E38FD54E0565C0BA3839FE546CD48
092D5A2909D380481128723957E22F305C4C501E1C6272BFE0D6B3CC1E7E6A4E
575D28A15DCC1961D0DFF2133CA730CB73B147170CE36ED3047B1C7DF7DD294E
6AB00EEA60FADB90B74A0E5EDBFEA7812E90F0F9DA2A3E8639678834FB4D4D06
1159D2121A79C07E9ABA3AE22578C92C18FEB1A63D202F6C5285B51EEB416941
DF53984E5DC9A64A9945476E3EE3A14AB704AEC0354C0CC511BEE53025ABFD2F
B2F98B674C1CE59B879FC9187C9C7ECC1256EBFD71E07ECEFAEF08D840A1FB08
8743343CCC4DD637EF08ED638BD9BB905703FF93CA3ED6201192A8C45E1C3FFF
5A76D13F9B029D2D35E28B5E2EC5810FF9479AD86DC9FC062FC63D1AB38F7F3C
5D38414F15105F904908EA5CD73FF6097414CFCE42EC828589C46CDDF6CD59F6
AE1AD82C70D8B3DA7EEB9F8A69C24B15B915EF01160D37C95D8A8D0357E150D2
CA51E7502AB40609612C2E7B7A485F8E76A413FECD2CAC29900AA1945B589A3F
C0714382B54E1CAAEBB29AC71F7F1549907F36204256523590559D5235934169
A8C2B61443DDF620F99A2335536CD76C50B8A3A03BB2FADF6EDAFF02921CAB26
7CC028E073917BC20A2321BB1C3756A08A161E0DD0F7781D90CA77266A14E424
27599D90838D62E282F8720FA8CCD17B67C2DC49EA8487A454A83AC0949C0076
69FDE1852BB53DAD6622FDF343B27D3D32D2CC6FCC4A7C767869D1BFE331D49B
396DBEDEC3B78CEF5C85BC628ED112D857DE2A4C41F4B4772943AEE48A5F2B0E
0645CE99343D1361997B36D214C715754405B8A697CB638852196577DA0BC23E
80EE4E998F17884B89013ADCF8AC445BD878536425D82869B29181A806E6044E
C906D20ACA2E76EFA6D04A6DB73CB34A286502435193A6F92FB536068DAFE0CE
245D45C35C1FEAEE28EDAACBE6B7B6109E828D129B2748550ABBF4EFB0276BA2
F24B2293E58E0B29662D25C39B7D4F8654ACF165E9387F902629EE16F38CAA44
F3159A7CFB0EF4A94052453B00F588C0E0AD34FA2855A2EF7F7494195930A95C
EAC9D9E958453AC4F44B0BDD2823EDC71041A16C8E25A7B1F16EC1231F6B64C9
61A478F79155A7CC82736DA203F27A7B8BB799996A74BAD3E22CC14502883A38
1E5819E9D2050E48D465C3BB88F75346173A4E2743C85F977C64F39EB8CD4670
AECAD96AA1E8A52A620C7AA3F3756D55BFBDF3A2F0492B6B56D10C7CABD13DC9
A6EAA85BDA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD39C
FCD0E8A6224BFA03E8C6D73F4B8F480327701262285C527828E5E203F328AD95
5AB433987B229534C53061C3350047FB20E3887F514B5897FDF225685D18D679
9DC141B7F6830D6771F1A3CAE655CA173FA57D400530CA6FABDCCB4325478D0C
93AC7EAA9DF7605213DEAF94C7281D9AC68D884E15ACA3BA68034F897A2FFC1E
F76FA2A69CEE7F1E9543904F1773969F65553C3469FD85B2F2F89F0E547BFBFD
F62A3E47DAA4EAD6D47F0305CCDB297C320A48A3655FAFC810CEC6F6D68ADA4F
AB5DD7F61DB94072B0AB8F1ABF62A78E43E1578DEBD2D05109DEBBCEC64AC700
4C28C4F0A5E3A003423B9958C73D306B2B4A7C67A95F8B4E737992642BD3701D
39FFAD94524A7752560FE97B8E99A12AFCCC5044D989BCAEC863BD15CAB7CE63
0194962E4183C3838D9401260A743447DF953444B29D7CB004560D0685F73E87
72FDDAB87125F419F90D165EF1C2A06A9B7500C6AD185B4115777C6BF9C24D88
653589B431FB84E4DDB650C2F783594DE6123D3142FC5C99973AF211F2A2A05F
5A756073B85FEADA4823BC1467EF2FC0E98A2BB28E5933E2F6E50D3580C547C2
54FBBBDC95998DEF2EA825E3BB2AEEACC0F30841835121B7A7D7A973F2EF67F2
795E6DD8CF55B9823AB2B15ADC328CC3AC493DE8C2F022EBFA14A2976D8E3559
B5FEDADF4E23A07F6C0E1387DD54F5C8BD071C4E9A716737B6BA413F846A887B
D1B3B89EEF73565F3D0D2D1E40E4C2811D37C9029692DF8E94F6FE39474EE13A
EEE65EC0E099C29064CBC0503FA4C89D845F91A107C8414C1648F6EBF6C8B1AA
7B2F72302AC2C6E6E9E4FD1EDCFCB8C648B2BDC18FE07B44B7E886DAB96F8B4A
BC3C584457B1565FE02E26EFAADB605C5CFE109AC7A355E2283555E10CA9070F
BB98E2337281FDEE7EC20EA060A062235F8848946BD058A0C86C794697BB0674
C1DA26CAC3FCFFE73689E2CCCAD5DE725AF6C7DE282CAA214D69B6793520439F
2991BEE6E427D4E82FADAC6C3829AFE1196FFD8D1D0F6BFAFF4F9062FDD08665
FFBDE33DB3EBD99D8110257DD0B832CB4209074A589041E903F6D89E22D34EBD
2B3C90EF5D9AF0A0DBD5145F0FAD88EB09D1BD84D00D951D4CF9252A4443EECC
AF1E56E5FF02B9070C1A92470E3AD7F1CD944E91ADBD1EFF555FF3EC5664191F
1C11943BB76D70D356FE5D145C73670D1A8F71E5C4FEE96C8D4DF87FF05432B5
165C8DDEF25DC98CBEA51FA99398860E1C252C17EE576B7ED658ABFD497DD5D4
E49663A5CA73CA347E27BC49C7DBD28DDB3AC7A78020551168A47ED789C2AD9A
B8C8FB7EA2F8C7D4D9FAB4B8DD91CB69558534CCE31AE7E157D0B060877AAEE5
14CFF0AD50200A157151F7625E63296E325E2C36D5DC45C5129C2D342CA7541A
75675EB2F1A5BF25461BB38C84D0651F4644CF51DAA8608BC3B698A22BAE29AE
3FE5C543DB648AB544E8212B3B2F97B5844022274F5EA46CF4E9D49CADFF1DC7
AD838B09A2CB6136CAE6AEA52ABA90745D527188599641549149217DF6B36367
A67BA60DB09562E82863F6C001ABEACCA36DAC81C30C11F98A77F4D100499847
E1102CC075FA1210881D95D6ECDD37B0B820176667500E58782156ED77373459
6699116573EB74FC1C83B091EA1700BD5B069BB7DEEE2BB45E7757F7BC00D85F
75BF5F32B350E2CF46BA0E8D0120BDB3E742C15DE5A8340318F907D7DB5591A7
08C83C63D6D457915A2F41B21629926169F4AEFD81BA2A880F4799EAE1C0C57C
FBC28FFFC956640872B49219FA101B88EBFA3E47EA4515043C418049903E3F36
885AD45509FC3CF7A376A608FC51751104BB96EAF8314E2322C457EC6683D385
525F118C799C34B50840604E7C248CA5BAE81E8C76C29FA3779933221D8A612A
2DFF00179C41CDD34E7015DD7198AD6EBD2BC01221F7E35F8662AEF8B6203C54
59E883141A505B275EE1333E6958254B6D96C9E54D47A12F4D299F67168AF7E6
1F19056BD1DEB7FE32A4F4E62D202CE86DDB34598B8CAED5B6DA81A6C816C747
568DD57D21AC8F8B1CD8B2BE97272017FC8176FB0988076E76EC6E8B4CA921C1
AAFC0EC3E24C38BF6D64E9C259ACF279C3272383D7526CEE1C178B1C6988F963
BB0D7534D41E675EF1BA59AA153AEFA7AA88C44F92801FAC61A4EFA2911B55BD
7DF444571A774CFABE590CD7C75BBE8B58EDC3A2C53FE35CC6B22EDC09857DBE
3019A7C60107821040CB0824EE588C4973D9A0D51FAE6E5FC9F82277403C5DCE
FC2C316D499F60E7C6C04DE9C117345C4E51748D3A5C5167780590DD9E188017
79FBC3307C0BB8A5784518676D62FF024E380036EC605313952366F3C351EFC4
33256002C59C39260DF18DDAB0BA5A40946D550B7831A2EE2670B2FC5DF8A50E
6F0C48860C52FEEFAA70B5953345568F1DA030BEF5C410DCA1D11F770EBC2E64
1196A40F44A2BD2529610091D8A9F09161A41BAC6A15727CE914A1009B2517FA
41ACD230B1E0CE76E289C42EAB07B0F60452B537A69B9EB54A68FDED4456122D
483AE830BE0C173A0D256118B0867DA2ACFA39F9F6EF1D81C607DDC242707D6B
53ED198367C7D54AC750A007498FA31E27B0F86C6D3AA81060727EDD60506506
EDE0AF44190FD947C4B9D41C4A6A03DF807F98C68F883721E6E7E6383207B054
006A409855639AB72C071CA7DBDEC1EB29885A11D100A9D443EC282E485CBCC4
8CA8861B0BAC0B3574ECAB561760E687C3BF7B72600494F60D3490DC63F40B39
F2C388F118806FAEF0361E5A30DA786E599D9055059C0C2180824BAFBDE47BB4
6F54EDD7D7FBE6B569AD9CA1AC51B9CAA30D805089E1E96AA5F1C7D8579C4D83
3DDC80D805CFE4868E62C90C06533AE6C9A73E86D96C6E3919B677C2599BAA26
96DDF00B27D9E1AA2D9A1986D83626E0D8D0C105CB6FC5F610237BB3C6E242EC
52D4D247307FDF5269B44DAAA80E7B4DAD286C0B4469A6264647AC1D5FB8AEBC
6481A94C6ED5EAD255050003F03E16A6529971CBCB06166030EEF983EF332497
5116CEE2F516B4E2977709EDBD3DB7AE516C55E742F598B2D718232DDAFB2043
F674EA73C9F043EB73E6A0511F1E28762342120515EF4AB7CD1C0D977AD77AA3
B19AADA40A0586A02109B864FE34566E17B4A1A09F9BA10DED06056B51C42FB9
B6A9C4362429C2FBCD39A24463D3E0AB8FCC9F3FD3A30F4F015CDE9893D5D66C
804F030B04D85B48DC345FC8249F699D5364BBA3E4FC59D1F7378FB3FA254230
B9826E6322C4D6231EFE10719E907FECF478FEF51DB2687D13CA64138054D591
B1C7894E2A0D724F4369326D31DC3FED9625DDBBEEADB867DDB7FF0678F202EF
8252CED93785F720E4DE92960A101294ECE75FFB72E6043F33FD3778024A3CBA
9DC490FD77F0F3AA902CB872E59AA81C0B0A6BC9DD687A18BA25D37CED0CD4E4
F0736A7C0EDA3E239C23A9BC94D2BB2581629D0C9CEDA46E01A5443002CFE126
DF21A740D9791D4FD8CFD7A635837144E85014CE922B9801C1C1939D2FCDDA6D
CCDC6E7B4B622D86519A9A42FB03DD17290E01444DE0216C35C52F0C3950222F
A43EFF75AEA3FA058494B0BCEE5A20AF99C473D1241DDDA5FDA97A2888AF5FCF
BB88F51495E5B2EECC7F07816F1CDFD16F7B82AE7FA98BF363EDEB32B1544C9B
7F8041AAC5EF16801613FCB3273DC62300B0AB0281C7CD4FBCE2B5356A2ECEE5
118D86CD0DC85A9A53BE7E1C06835390A532F3F6B1F8FF071E03D1BB27C6A591
AAF6BEBA1976526BFC9D408297302124C1A7A32D8F5976F7CA9EB64367E3161A
5B20A7DEA7A985D1C34836249AEF8ADE9F56E298AC1D7181D637A568C615AC37
91D8E50942287BC59CCADFB67B23FD0CC520310B3EF0414CB723B3506AFA56D0
24D45A9A51D740B3A96E7AB386AB4E1154350EA81C5DF203CAB41F0E6C48E170
4F311F51451DD607ACE85F8B4F4C828D7FF50D459FB6C913BB52FEF3A6D478FB
BCE3D06A8573ED0BBCF641FDA888EB1B9654C0CD0E070A900A54D9B875E95CA8
166B84CCDE9FB92FEF1C849E210276F72734DB97A902EAF9C9DBE267C618E342
EE8B5C4DA157F0B3F4ADE8D0DC6B9E205C7C32C2724172E4E8FC4B58E6CD01B5
9C73A14DBFB287B7017F6AE0F5CB1F557E34D6F3B792A1257B9FF5EB18BB80A6
425EBDA44D6753DCA4A6667BB22C841A91A8AC118812C9BB0FB860D2DFF11716
82E86970679952012FB4D39CADBCA6419979CFB0A877B1055CBFC4E8EEAB50A6
84882F5AFA6776BEB4765C6ED70B6BF84F03FB878D974AD04A770977FBB2C31C
4F8FF8BB1E7F5262B2649200FC5C77003D22C3A1E82B87DC2C2C554495B74DAF
CC33DADDC64D2A8C99DF087027EC2EC8DE518F1F6A50D7011BCAD9B86BFB6772
CA98CA95FFD014D72924ED65F147D6F231B461AF422355101AC49658B6396F4B
551044BB5A01FD8F30E96A773B1E19920DF95835D87D2262EC7AF31ACAC176D1
1DEB3601A993B6641F73D01D09636D8DFE49F75A1FEA7FB038BD30EB76410ECD
5062BD50BAEA04E96DC81F6F9F742A10CFFDABEB16062CA90F69D361C3182674
3EB62C444271924C89E11F2F498E401646F45EA63BA74EBBC62EB7903268006A
98C1CAD6065BC69698A27F3A9CA142E39598151578C3C118D40E9E8419C1A968
F1DF66B627B992C83529FB4BE67A1833D36D09829FA03EE7D559D5AA9875885B
96A2B47E4C81BA6C9E6FDA99321F57F6794E4F864073CAFF73E3C7106DE30A0B
E3EFD47261CBE2F070C5A57E223A0565DE2352C00C1694F3526F0BBE8E4F5D2F
E9D3A7C041B06172198B32F99D58E21B0A78302026FBE7A6BE1CE72DCE5CDDEE
C7E3113C9510F18204616B9019BDA26A143C18825686F9ED9506C080D968E979
B03376184591951FB17F3F4D690B31E8F6E329F88598FC36B36F9968B5CF9FAF
82BD496839A32EBCF1D18C6905B4FFB0432DF191F6023D154D4E5B3692276D84
35C2A3E01214CC90D74A9E2EDAA794F62C8E955CDB8AC8BC34C602D0F73A09CE
AA55A74E243D08DDBCB12F26FBBB8F9C43DD7BF7665D5F14CA4BD5E05B7DA8C4
35A28EF529B15DCFE08B3574C576E3AAD2E26E78E543F2B250A4B6BCCBE8D90E
DACEC433E0E45CBB75B7341F06D8E37285BEAA9AB71AABE3C85554A5A06B2AC8
B13D844A44C61135C81F9D586E0FBDB5221FE1F3BFE28ADE72E1F7E45D55CA20
34552666D5F1DD367C3FCF5311083B89C86D81AF27BDCBDABC57530B1AA9A74C
DEE023FEA051AEFEE5DCB52CF065EE27C9D3F453CCA5959665E40FE323256A36
6A45877CF940CA779E14D9530E8A6887BD14D5580C88C5871E9038CC62498A89
898025EA873936EB69BC17539AFB4E5E6E11F46E976EE6BC32FE658EDF088337
1DAAD3E660F09D520D471E487B130E254DF39B4DE5BAFA5B9682D05205EEC186
F876671BD65F869D2D389DB0D75797A8D577CAC542265A9064D7950B82F1DE12
E1EBB53F8D738E0ECEECB503FCA3D467865B963C6CB6C2BAC0238F0A2AB3DA27
6B209B473961A55E2618F1D8B444719E07C6768FF004AB0BAB8FC26A6302FE92
867358E2F5C27C016B20B867FEE8ACCF82672026B3122E379A0012322A325BEF
16B1FA0D85B65C1BDFB873D1B8AA2084BE9D840DA0D79520355177AD6F525F9A
017A34A18AABBDEC20E7700686FE88CEC8A3A326B77B817ADBF1E5A669A87C38
86435AD5198F5ED2CC8C4AA2D7E81DC82DC43051457907950717495F62AD860B
E59DD9C26FA72639FB421C3457FDC09D3B8D5255384A2C0EF7347C378B111AD7
92A90E38E1552D1936410B0E8ECB71ACDB08D469FA914C1ED1B237EB729260D9
7F3F1DDF55DBD314B20F9215B085F4E2BAC9E70578002E221E3878624A015FE7
5322A710B0E857532B41154D4588FA10A67EC13828136E1E719A52A0F2135609
B0BA01181B1E0CB73B74804696B14F0C6E77EB72E933CC0AF6A8C1095C726856
4ABCC720B69D111D278B122D39F103536F07E4B5325EDB72234C4966A716489A
F56E781AC3C53098D0B721C751699D83E8826D4AD3607A91673A3DF62988DE97
DA96C5C43CC63FBB7EBB8A678026968855B88283552DD3CD9831BE0D702AEFD5
278ACEC4A55F1A082D537B3C1EE890A6FD2ECE0FA115CB387A35DF5272A9AC76
5A0BBD8CEA4AD8DA18756756F9C9D4DB5C342277749E85C7BE53D7191ED68390
5AD80C2F016A43350F0034B1CFEC671B7F820C3863C1C59177AD0A23CFB7F631
E00CC979AD410F813119C05BF6F3A624E2167F7BDD45A9C222FBC9ABD8D3F08C
926AF66356A2A5C3B4C1F7A671760EED5D95F602687628A7F687B76F89E628D7
5CB834F24C4ABF95BF80FBAC642A003D8B8116D143E653C64F79B9B48DF5E401
CBEB5F0E7939858CAD24FFB5D675000565199BC15C451E1A1358E0CAAA3A6EBB
0C27F6B3D45356DFBEB0F12864B22FD1458FA08F195038907F9EB5901BC33833
2AF14A0CC7AAC1D3D2B2EE4CF591CF933BD8B554D763E0F9026E2A9EB717E9F8
F68C52EF8D76F50188274F566C5B2A338425938C1BA49A25E227C139495A4F80
88E006FF95E07F1CC14DC82CB3D7C5BAC359A256E7F30905CAAAB4FFD115846B
F98CD6DD8CC10E1237149141FEB9433AF21E8D84C50F750434191ECF16684BFC
ACA28701B13895988AD2D1F42F8CB2A04C1F8D0F7A88154D1DF0103E0A79EF11
310CA22F253FE4E3D1E56E432F655A8C234A301660D9C83425FD0B0E5186F694
9A70C40B3E6AAB5B0440DDC5B71564ED71BD85AC96EFC164226B9C2EEA6B9666
28A1F8CC1D312FE2FFD0CF3E5B55F0A7492A8E73B103DACFB5D7E0CA1DC96A72
C881E694C4C5F6A2E9ACDE3B32A9DF4998B1B1164EB30AE3737AC094373F1D21
6881361A7D66BF775292DF056CFAACA8C087B4C0BCC2AAE1F05DD911831536E2
F66A2B9F9683381C56776D27F95AA5C5241E827D0608A6B90E08CBF44A30669A
F4E20CD5C1F791865580E510F180C63CD039D399B1D9C4208BDE9F2A8B4A3F5B
8AD99FF719D6C5FFC31F458936B9EAC17F808DA4775A7C08F3776B20C5900D6C
452937B11FA74A52666CEFB649B15B905E4134FB8A0ECA85100824A14C5F5DFA
4D67E59B58C6D9BAD063D247787282EC4820B3C0033BECEDFB1567439AF718D3
B7B02416DF5DECABA6E0750987ACE9F2A8EC2DB98F85783C01623FD3612C7CED
EB8D19CD37E3D1881861E2B8856ADBDBF5191C525448245BB2957D602180678D
9CEE6397F787B06C71940E20E464BE0532CA2D8205BD6EAAF03A971F6814D3F9
FC9BD17D5326862338562D9039641247C5F33B540E92D1B87C3998E988F4E0E7
C56C93EAFB9C7745EE9FA75E286134EA2C9A685A4C4D38AF1752A6547B2F7F77
A71910A3F648EBC576E16E367D09E7F61B5646999717D017ED4301789D4FD191
9A0D5E617269DE9037EFB267FEC472C8BB99A926B3C76160D8DA7321E6D222C9
572BDC4DCF1B2E6AD172CF9DD1B8DC9E23D1751721FA293BE262D477B67FFFEE
3BEF3E46AA957F5D1988A3D8F64CA95E29E05F90678F7F3C2B15E13CEAB77811
E50A8FCCAD408D69CCEA8A7917A0F359C4C172951461E884747D6E5D2863C0A8
5D7F90D278D7151D59D40D28184F00034AF1BB3AA8E7A8C1AF60D163801D2968
60FFED817B1F5B4DE58872A36235197721FC55311D39C41CA718F5FF28B9A59F
7A20EFECDF6B1C287FA48581CF4FB723E2238AB55AACA0F17E1A3FAC930A2C3C
2BEBA86CD8754FBF01CDFC8602B0AA79104E10420C3F67E491EA298A68097564
A8434BFC38A821AEBAF5D0C7E846542A358E0B8F82D79031D8B4C564C26AF256
96553753718AE0425FD9EB66638D78D111B10FAAF8DC17EFFB7A46733C277C65
06C04EA79F36181B4C66B50A643D86F407F2239F4070B73733590E562622002C
3DDF0D5BB0D1F5A4FBAE0C602130444A300458269D67C83EA6B9F5351815E661
85FEEF6C73AA4D791886B52275052894C39DAD40632EC98DABB7DBC89D39485C
226284125367D10FDC376F2C32D769F3657CBAC8CB205DE87280206EBD32BB04
2F46824DA25032697E79494A189878F20FF7D0A11571F69B4EC965F20D7C056B
3D608F4089340F038C4A68DEEF068032B92723D72A61658CDD33BE34ED09BB1B
EF9525DBECFE5A994BC1E14C7115B5D8DF47C67E367D2376B73CE5E992441A59
B2521787F7A76DD68F7E5D640C87FFA05C0EA432E062EA4F71C63297B03C9F7F
76B44EE925C8AC12751906444D637E97F8985B6823BC95500AA1711E0010118D
36E15B500332A74F141D8778EAF3910486B2EA25AAD16989E8F517E8BE682D61
7EE310A79C945126847769D6DFEEC37DF1491BE959F1418F547082D175022311
5919DA3CAFD232BF936527C3F6251DE11B8B5F815032AEDFF168F06EEBFE36A6
E658BD6D9B72486CD5D51EDEB314960567040DD351580824450D62A12078BC05
3A65AE1FF0A347BD6C35AE5C1107D773495C4743BCA601DA71B7A8008D319A80
9EAE7BCE9A7AB5B1E77B1B8CD7F561861D275E21CFE17E2DA671A7FA88213B59
6074FE4D777E041409717E410B6673373215DB1BEB6EF81BFD7640789BE629D8
4375718AA931E5FA13B644B884645DAF9F4EB18C3C9F861BF4B3A4BDD20B796C
C7DE1FBF2AD98445AD543A339A72DD46EF815CF944AF37CC5A43AFFAADDDB805
B21236E42B64F1DE8F7B8246C840F68A08DFEB68B4A63771DF955001433FE00D
93528FEC9ACD00389398C67FE15FB05B53E1B9BDC776BFBE74BBC7DD92D941DD
6215DA3B58792D4F9ACD92ED5A79AE617B77D886B36E185673540FD199188132
7327B90CD5534097225899D5410EBD7F1F3334AAA50B56D05D29B98C9D152D6C
0DC98D182BD0C8D6B4811AF48F65A36B0399A326E0A57B695D391D64AAAEB4B0
BE5CE51D102BC0EC8B0E3E69D117EEC5C8F84D69BD5B50DB0379832507E2D443
91785BDA31564D715104C19AD63F2DA95091108D36C8086072F20123F59E1B5E
8D34EB46F04E8ABC5F4D367639B4216AC03CD74FC736141F03DA35D68D91E93E
80203A62ADA5F283FA2DCA1314503CFFFCE5CCF041A02877B76050B077450F60
DB75CEFF3C692BCD8174BB9537EDB0F8769AD30E9556D7837D8F9A6060FBCBB8
298ECBDB5E6259038906F04E2BB54EDCE5D6E365450F5CD528BDCB140E3F6C3D
0B5F9F79BC1AAD0208ACB0CE04316685304F54925DE84F8C740515971B4CE437
5A1A9F1EC3D6148A1C850AC234953FB4FA6EB237F8ED94AF22F25DAD959C8114
35E406B8F085FC7A58576F23CD19CEF83ED66EABA8CF178FE068A131AFC76773
2BC332AF54087065083A6524E6537DA1E5D5E4B896D55B67837FE1B0D9EDEC97
11F4E9AB33DCE6F520A16FEC6BC543657B58D17313B32AAD52FFAD3ABBAC55FD
47082DBE00ECB6C5C0F3CB6F2433FA5AC144B40C5D496DCB96A463116389EAFF
5982413687F580635C555B6473652776F685FEDEF296CE3177297C136F3C6C1D
3B6F61BEA096CFB1380FD318AC45D3E7C548CDA606BF71A39EF59C9E976C5F56
2F31C628021C6520EEA7711B75C6AFECFF846191F4C6B573815A3AA979F327EA
F34D51025EF8B6CC482ADAC3FED84C85ABC9D17103FE42EB033DFBE2E387A0EA
EFD03A12376C5901B01A89119088C53490119121DA941D8F96C9CFB1946D4B1E
23701D12DC75C643BD36443DC1E1D1AD087B2E4304E9229EC2855938CB532FC2
60FEF5CF3FE05F4F6B1A686C1E90D208744A52E593570C6EC8E49BD41ED97931
4AD32902C65E737066229312A018E607AFD73EC28FFBF4DA48BBE35D527F40F2
E194844E76B625836C94F281B43CC02B1F6DB3AFA1BF4B117E4BF69789878019
0F1359019823D94203EDFEB2A8899B078698314F0898139734F82F63BD025D25
7624B3EE5A864F6E65094FD7C70131796BA27FD30F540A1E177B6FFD0E22DD7A
119778233BC38A804DAA2B51B443839D49DE5CE537DF8352F46116F8E7C21022
F91926361763B86FA081E98DFE93C6030A94C7F7540FA825DE6E0B910F0CAF88
E6309CB00AA35DCD1F7640E0DAE8EAE60218354FBFB4894943AA2C3AE6703322
C3B1AE04709B28E38E80485BAC718F97F2805F0AB1437E9B37D21481BB42DF9F
34C5E80B618FA651F9B7BD2AA1761639E638CE9D89C4CF0AAE1B38A2837E1839
7FB78472DF419022F6B4D7B1E210382DB0321D08CFF1F462C25CC8EB574B11C5
F168849F68876CE406261BD738DF16D6CA98017C7C118D8C67F71A4BC3C8794B
DE910C96040C1A6741E56D793ABDE9F34D71C58EF11F657917FFDC1281379FC2
AD3324AE6C9704D3078A7EDB51C8DA98AA2A1F02B7155E76D0C80E31B39CE0EA
E6322374409365090D58BB4E0B099DA528E5BB6426A755DD92B2A2CAD73E31BD
3229C5F8931981B7F9C278F0853C03D60E4AD7D836AD02211578672376E2B3FC
E63EA6188EA0B330001790770D058B9FB23098A309023373FF754C9199C9E7DE
AE85DC7A673BB1D8E2B410F5C5A738B3CF732E1A6D55FC6872A733E861E2EB93
9323B64066465BF7D4EFBE89ABED3B1422A124751EDA0CED4C3D2F1D52B36E0D
F0F6638EBDDED0DC98950D9D07C0308D173F61BFDC3E247502747D6F4CA1BA70
0D97CD1B89A25711472A6FD8A594210FB5200157C0F02340FDD61392BE9B08AE
D0C5E76D39946E99ABD6F2B63BDE0EB1187C1B15AD0671302C030D29FEF6FD6A
EFC263C2A95E45CFD44843128CA28B531B1E987FFAC89B9386ED6942A6888B1B
3AA4609A93C7CF4E83F0FBC6C4BFEFE178BCAF292623EC448988C56FFA843B1E
F3AACA3FCEE17C7835239CD82466086853DB8998F9CBE0472F641CF6660A76C9
29E56D744E3864E8AC0F394CE7BA861E4C1E9EB7DC11D6579A16F91AA1489D01
74E713B976F3A0B36C575DF597A3DDBEAD8960B17260850FB1E3077451FD4A24
570EA79346E6DFAB6B9C8810A52BC5F9674D286FD002DFA5BB313E0B784ADF9D
2843FC809A040B9287F0C71D93F7C2B322315F070559EB2456676E931E4EA1EE
3C44EE4DDC284786865A90540E5FD5922F512C0A83999C07CEB7A37F708F9CAC
6B9BECF2190F31C568C908C2A31E6042DBCDB8113CAE81027650945A5FD5CD86
CFE17B5C184328F419AADAE3606BED42095620764487BDF92633CE56BD2E5DB6
21849C266CB622F9F7DD740A0E8A1AAAEF6F9D84C265D2BAB01501D07654C470
FD226F1E98C07ACE01B11211D992556B38F254A74BFFF2BEAAFB4F0EA0D1DA71
F0DBF300737540B21745BD882FFECB8914A1E25B2A8B2BAAB8D7B6B60A83CFDA
C57BCE423DADCDB7C3931096D2BD7D24A3FF370EEFBCD54039208ED7DA3A6C18
1536F7EC84D7D6DAC8936854A0E9B5873E0C43A98002905B1CF228EC7B27B429
929742FA4FE73B31D9075B4D37B78394D8D0AEA1C81BC3D6DE2A45C15172FF2C
B08E341A386A50EAEB261E696CD413485DF93CADCED318B5FA421B6C7B9B81A2
598C9422463D8B1D450DC7E71CA5DE4E227ADF70F36340D8417D27A83D007491
C542505F3BD5D5A71B4A05218BE6DCD49E7B623D9A8677E2ADD1495E24D9E86C
A4698631D4DE942B7951DF193524704C61242B4B1983A5D0B134C8052495CBAA
9D2B9E8332FAECB356174BFDE732B68F61B19CB6C0D61EAF53F6C91D33E6F388
E1C1C7839B309F0421354ED4AF854150AC97AB16CFFA3F66FAFBD0B269C85A27
43EA914B847378572EC9BA14A0944E37480AD3FF9C10590C07082B081CADB630
138C9B03ED2F4592D3D38E10A40C93CB76DFAFFF0D1623C49F3A52C4EDA18B7B
6BE5C494D3BF1A8A32F8672E0E0600DEB38A0C2618A58148687C5C917444A99E
A3280D9F3320A3FAFBE5AC5CA9E7D404FD4DA5F55CB9568AA9C68C085E87B32E
DCAFFCED2FA9A16198E62CD5BCEEF0235965AEDBF2AAB6D34F4564D288AEFA5D
9158AA483FBF2D06CDD4D82A6B974664DB6555775D1C728DC24D8C2C25B06AE0
91DB97DCDE55F701A63B21922C483F0D2B4266B025DF0C80782B325A0B3CF632
7D436F1B92489BC74B93B7D7BED04206674BCC38AA81885557A5FBA9F331A244
01AD23B81C7C475FDCA1F2E7B8341376C47B399F2136B6E9A563BB6CF6EE049B
C37E715513514C2B1A3249E83C9B3BB09C5FE38C7AC82B45187AF80A06360EF0
D88095025D7A154E7FAA68EBE49DBD1D1D6D06E838F7245B1347921D8D93659E
C8BF5397E77D1729711369CEDDA424A9E19BED13D137DFE3F01A3E95448917C5
B7C0486172439C132B32E829D10EA96E9110C0528917E8327FB8B6B10274907C
8E9A28945C75A2475162294547525ACA6C964A1E08423D9BDA918220ED02C2C2
7956D4647D2D624D9688C49F9C1C2FBC2086358AD56A77CCFC0E17F59396E501
6B8018BBCF4896017B08CE192B694582DBC021CFE1217CF272748BB9CD7007BB
023B8982C1D8E1F97E4787BB31E0D5EBA5C714737006EC344D217432E9C76E6B
590845648531D696EE446E5E98FB3EB79FB2082A98312322579423DD55BB1379
B465052193B39981240F1DEFFE0DB47E9F0131F902352918244E0C1AE41BE63D
5B88A26DA17E970D312BC85B225F9F0100EB969617EED5FA87B1BBE5E5A4746A
6348CE631A69123B4D3CDC533555EFE97595C9E9618841D3AAA74CC86F063547
C020780F44DA865D57DC28C51D6634212ED83D0A9F7D51E08CF73F7B8F214D36
CCC762DA0B116F46A1051D1E7388DBFB71D19D57F32A387396D91CADA9FABCB6
BEB4345E70A4DBD6C5BC6F23D4575AF893297DAE0F90750C0FADD494059473FA
4AD9FD7FA4F51F0E5B6CE8BF3954A70AFB8CFA27BB5F602FE5BBA81FBE89262F
8795D10CA2F3CBE05861BADD1C27D9702DEDD099AF451F42E7B4563C6032A532
7E64A66D1D940282B76947DFCDCA808B02040C743F71DE04F56415FDAD29CAA5
E9F125FF8752496C78BF62C1B20E7D493ECF2FB8C4D05F5987F0A43DA27F1F02
C5A9FDE613BD8B580EC83D442D093C335ED3B98D5778239697D8F33BAD32703D
15FF20CC36B41259473BA151A2A42FDCE3C59C556E5235557DA055A16C37A2A4
896BC6C10F7D0B536D7975937292F8EF33F7CCB6BBC9EF2FD43D3A5177844FEA
D69573884E94074CAC6128191FEA4E45F3CB533B4F95C67AEE6B6BCB89331DE6
076C540EBEBAB9694DD67D11755F9946FB44501848094B820AB159E9228ECAD2
6E0259E13661330BC7B20E44696B40086FCC1D9247A0FA8DBCB6BDBC8698AE23
2F86619C6A16FF8278D579BD798E6F8D9FB82FFBE5B79A5881E202CB5BF6B636
02A962B0466930A61D40AE2F6930EA0237D1C2F03E83E4CD94FB53AB83F1D7E3
9F46A5A2D7FCA979988FC986975C6C31EB55AC0F2A4D9FD7C77314C26E91F9CE
194C6857463175B51749FCAE27B9EC10B0C2CAA9336A84DCF94436A8E00EB7A0
36B1F62E5D9931AA63E99A8B70EB480C64CC68C567968D7809758F441AA812DC
8709C9C92BD94AEAE43FE5DD542C146D5F7CE984B79986BD41CBAD3D87FD767A
EBF32804B0561E1A738F418096A284CBB437323B0DA838882BEF5EB66D79C82C
EE63108FFB9E645D7A072513C78F718D990572703837C588D4738AAE02907D56
076FCADDE10ABCA7225DE1F9944B92AF336752932ECFA08714350323209E2FAB
0736B49A8C3B45A65BB67B5831CB6251F1462AD52BF6186BCEB5E46C6AF7DBE1
49552DA1CFDF5F1837A1C6CAE11C87697994FAA8B3276D2C1C1BC62243BD03C6
E2082416C8E666C1DA5C1A6D1C1FAB6DB5933DE007CE8CD31630296861A64E75
B844730ADE21067C4BF5EDE564B68261E8C9B3E38C51ED703C27AECEDCFF88E6
DF99899EFA61D97D8DB121DF70BB153544CFEBFD80FD150C011B2DA2B394C2F8
A52986AEFE74A9BE68DFFE845ECDC19E8985972BD94B8721C8EF7C9293FFD6B5
490ECD3BE748F14C5394AB986AE39929F15635D2A38FD9B9BF2EDF7421FD3DDB
E204DDA4A23908843BA5C66DDADD997BCD17ABB88E5E1F585EEA0E720BBD6A61
FA9EC10B49907F7A525AC8997A13F071151796F26DE77B4650AE0A41A96BE70B
9BC77574A685673BBF00FDED16CD681ACAD93B0F593F5819CAAD8639897215E9
ABD33BF64775073FFB1A2E1530E42F94C95375C3AD430142AFE54BD335998D0D
D8F7E43AF80E182633300A243F883FC397A1602A96BB4163F9C2ED5CA14A2696
666918788B8E7E6BE88B52240CBA7CA2D25CC9EA66E555DABE6889F0CB09D6E5
199299CED36FB73CD88672B32ED5EA77E77E68E2ECE7DCA5C974FD9041DFDD40
0C4A9A86190454A47E92F3F3FAB80EA863D05FE7F836FC344A0CDFE59449C429
B7BD31BF6256D5547980735B1B94E9731C1FE53F72877182C4D5E5CBF410E934
421A00E21A3DB8F8D4F1B1B2EF1947133CCE565A472449495944D4EF013FA41C
3213DB9E576B7AE9AD4F5B979C9A78223FEBEB709BB571CBD6D51C00B349268D
E077F069D715C69A855743B7F51A9CE3A629287FA9F1AFDCDDDF4C362889EA49
26D26D882C06287955DB290E85F67E617D99C098F3A6EAEAF18F1BD65A8FDD03
8AFE9A0774B1450820659088040BF1870A9330BD7633879C182252805FE37233
D85104E19B8C2FB5FCBA3636383DE042A74D52687D4A1DCB21C993097AB0395A
39429DFE6D0F6DD5A2C2EFF17709A067602E36663E6A6D00B2340CA8592FA580
E657B45CDC6B071B3DCFBDEE78F4CD3612AD8FAF8F814CC92D419B23A5F2E0F5
D07400242704788BFE9406C6E8D86B05706661604092FF161525A93EA842C6E1
53CB0CEFD9C08E466E283361823797364E0E8FAD867FDE092F721AAE7BE4EABA
60D6BFAF89BC13AD16101FE07713BF81044E441CFCB2CE39DF2CE705450500D2
4B96B7D34CDFAB5DBF99C8D3BDB5186886E2EB745DA3C77A7265F19C2CB41ACA
E23951C777BAC3513300EC4686A3AA00A08A82377CFD6AEC6B0A953E54BFE053
081D3F4F31A498A25DD2BBA07616AB4A90F437533D1951685918214A94887DC1
FC99CA5D83F9877306E4DCA49805DD0D4F8036EF04AFB8AC2D67D57DF225F302
2C99A15E21DB97DFF6B3E8F8A7D545DF938D5F1A52CE643868BE1A85A7E4D60B
E4168BCD057704C2F988CE1D06E2396476D43081E025EE45D7435E511E1EBEF2
B13CAA49CF2ABB931E29E6ED6C21B67E76D0D3058DD78DCA293DE256CBE60A84
98455FA0B8ADDE5A66645D1AC0B3CB38A74D9AF23BE7CE02C0350F3C3908A191
468F77AFC2022271FE6205D65C1785F299C80FDAF32065A1182A8380E74F8D4D
4FAFE246FEF66C656BAA613EE8BC3A72ADA80F21B7A8BBAB1D4675D2510F2703
2F05AF81BB3381FFFC6801FC793F24F175B4395881CCB9C478EAE5A0A55DC4B7
C0B5D6C66ACD695F68A16A7C1C2C1E47324D9326C985C5A557815F4E6BBC36A3
C72758F66340CD223B14F092509E874886351B64D1981C4BD43B3F399F388DED
B4F72778763AB0033FD0349475F7883C66C8F6AC5F1A9257E04DD44E5484C429
8F87C8258E7AE9AD8278CFBC0C8A20367D101A203C1FF017CA9DB7BAB3BAB55E
AE639A43AC6F9F7AD6B6E558F1E9C5DC4C9888AD0A3D85BBBAC38A2A054B57FE
D270E9686C074CDB097FE571157F6EFE88FFAA20E0DCAA36935CAB6B0B33BF67
4F7C42446D6CC0BBF97AE7C6C44258F75DE7FB37F9453916CD44133B9125EC63
E8487056687A3535F08ABE183ABC9579FCC75ED434A8172EF11333216405BF42
848AEC42D2FD95001CF09AFBA1DD5DF63AEBC189EC9924E436EA5BA1673CB9A0
7C919EC7477F04EE81E0102C57FA8C8CE3CC56B804C6685BB7D41605C71BDD79
CFD389B75740AD00E3C6A859B7751321605C3D0097DA6034E11511B50E1ED342
A6705D973D3EC00E968E0E2A4BDE70BAE3A6D4EBF7A9FDE0E88D6C34A91A1CB9
421DE1DD7BC5D109B52B7093D785F4393E86CF5F957B2F2CD39BF76B47EDEDCD
5A24E346EBA2DCC6D6D02CBFF67018A565B949A243A214842D160623350CD054
18124E11ABFAF29103ABF419D2F80488457A845CE1C7210DC653373F102E3952
127ACE37771CDD2E1F5C85FB2AFABF0041AA0E53E426062C2126D89B66BCC801
CB9A768DFDF2934E015390C2BD601053E6A733E32EFB96B145DDD9ABDAA2243A
7E868879073C3358B53384BF91F67C7D52871C394E864C44A0CDDA6BBE27E7CC
3FE9452912322A325BEF16B1FD96C9E3819AD4B1F15E6143963E604D3D090517
26FF8F6FEA6DA337391A8D57A4721B05050720120A845ADFDE22C074F93E08C3
1A40FCADEE4C76195E6C9E1300DD6CD67DBDF0888ACC234A8D1E103E54963BBC
E94F1DFBCB6331DB9DC558F5564CF27813856806B749EFCDB42A170560F53D05
55035637753EDD2ED2F9D306F472C7921D42726505BE7FEAC5C0E505C505D742
D7E2DA01ECD37240A02D4ABDF4FE7C245CA0CA9F32EBE677F59162B8C17E320F
B920A87E0B65A45232F7476E49CE8428F7D6F70ADDE7933354537471D1CE91B5
8412B12DEBBCF33A8765F3B7D2BBFF24C854105A92317BD40423941DC7D1CAD5
002674345F57C943BEA716555C15E6E8A88F7FF2AA4FB60C88E9DEAD5432B521
1C951416FE44ADC485B080A7AC7A3F8A6DC26510591341EE1E896557C5D491FF
D9C5ECAC8E55D91DA6E607ADAFE8D8460FC48FB39C8126488FA258BA95528D04
63541489F56666025C854B28533F3D64DEFAD1B7BA1EA2D3C022B8682FB98898
3C6693F2E4D40721785F0035CC48A04DECCC0B18CF9AFD5364224F26652D4FBD
C766D6265DFB8EEB4E661CAC8E2DED941070C9009B2069F5147E1CBEE0ED1FA0
DC3C131E864E56E69AB3829EF067194797F48F688D20229F3C26E38EC686F403
289A43BE74D2392BC34590B3B8966AE8115CB5DAC2DE7F396FBF3A48A2C59539
E7A7BA4F4C863ABA5EE030DF5C1F7900F5ECE7D729F35FA2851C69A476E0C79C
C01D629A4FF3EBFE04437063B314D8CE1117B262CB3939EDED398A875D69D2A9
8A44555E05DB91B5AD671E6B9D9F262B9DC85983F187021C8E52EBAED6F3CD7D
E7CDFBD4F019E040E9B99577F01778E49D5F9AC84E4A4EFFE4DBFD4C77DCFA28
219043900D5D8285AF2F7054F130183F199A8B15B9D866871CEBE47949816FE7
A8F819D2B964482285FCFFCDA7DC7C5761C88C2704465C963D8EA3833BE27127
957ED14152B6B3B574B0CF6BBD32B42A7980B2E6677E45801856F5218BE56092
B6152A1315A744DF428CF467A21C4FE73875A04E1B00F52DDCA6FCBCB858DD07
D1A6F2D3892C5B03F9E08CF1DDEB3F14A2D64CC8B0498D0E8332A8DA60C69C80
9F6F3D0C18295E3149CE5B97DA1E5D27161C10CA5470C0251C0A40027DB9407C
9839C2DE308D3329788FAF24F2CA2280D82DE4420F29C0EC1F76DA6C55089AF3
D95E3D7DCAEEF9EB162D4608394B82E838F786ED1A1DD861AE1AF810AB651DF2
19A9661BD54F39B17B9EBA9492855E61973760A52D18672CA240750F5B5FFA74
681FBF524C56B29C76C25182187EE782BB5E3934F5E159DB3F53FA18FC060BF8
253EAE4E9B3D26E5C2F0ABC85E163AEE04479CE9C963A38C30F2490362FAF9F2
A76ECC6E424FE0A4F7233DF9A6BD4EE76B603B08F34E7D44C65AEF0DE3631E0F
EA8C168B1F07AF698BBC6014ECAD507680ACA37850B30D1BBCDD128AC4835989
372468909E4F59803685F804B0C6A98E5D37F963A15B1C0F4D1724033DD77772
22349B653BB0B23A3D9378095C0C7C724D753A032208E37AB5D5BA35B37B79C8
48D286B6461DA36A34C0E93FEE7C8F654BE28AE1E4B09B17EF2E2BC772DEED22
FD17158DA65C17A0C2D6375830F2276A54591908BAEC6AF46FE0FB24DFDFB8C7
44D43F1F9C0CF33E9852F858439F583773D738DE5D28B02F39C2B543288F6E1B
4EB9C9FBC004B4DFCBAA05ABDFC73D3F63A0E77220CED0EF8DA2C258BB069706
DBA9415A0E4C44FF6732B5B95A45847D1BDF852FED9788FAA4868BD9140741D2
C8AA4AF11F4DE14594A803AFC64301C31CACAAA2F8CB9C7A049074B95A207637
9A5935DEADBDA9776AE1ED3A03FA21D28727A3761534789A730FFC0ED5655D2F
ACACBFBA708DA6B8902E9EB713E05B6E94DAB92BCA05FB3C4384724518CA938F
086088E67E7AC8E934D993EFAFC5D3C280C6065CC8EE72ABAF67D919685FEB75
56FCDC9D79CC6D60881693C0F01D4569F2F4629141CF756FAC27DACC81D3B0B0
BBDFFE8ACD01AA6B8BE39AAC8BDDDD758DE725BC513932180895DA6EC4055F98
165EA32A0A84A2533EAA36594C8A2300E5975F35D602F1E9E64A5F795E157A7D
64A8A39DC49E47C3BA9EF25978712A2175688C040A33B603A59742608FFD3859
3AADAA9509DD9DA93FB92613967677CDC346D52E78D32DCBFF5BA35507A0FA49
C480AEA2D9AA73A6E14F1A5CB48D36E7A4EAB872C507AF2DE678B727CAF536E4
A89B0450F0AB0CD57796D02CD9AA94EAA76847B52DD90D2E587BB2A7FF2C177C
77587AD1924A66C6CA7840254A5F400CFCC26C5C3C3909FE37CA3F64F26CCE16
ED43EEC79BE670E36A741F2AE7219BFE341207F12B03968966A34F5891EA3104
9BCC4193A0A5F6565B966BF650F7F52B30E63C4941E808C97917A4785F1F9205
29B697BCA7FE294070920B3A31AF9D7527FFCF58C6C9F1E00CC2A9815C2AC5CE
65B4875DD86F92C389DF0499459B3918E39D7DE3319F88E62DD50D02341DEF12
738F49B2E9B378A2A1A2C5265A4E912B59A0DA7945BBCF0B4AA548F1F5EE787F
FB03766BB698809B5F2254D8260BB933C2505DD969BF5CA4637C1BF7D00020B6
FECD553E83928271B7787EFB68261B061050B255FF677C45356B26FF41B72275
8B9674C7297B9DB2FCA8CBA507E8DD7F6774EE91A7AA75196CE71EB9F118ADF5
5C3EF253353E6F15D700070BC9482CD6620CE6845BADAE1622E7679017780078
4CAB8F9681DF2901B611D9294AA3CE601D827E3DA29A3A4117DDEEF592560899
1F068270F27E7C54BC19EFEB0B16C2B242CFE39371D68FA4CC17AE96052F54CD
2D59FB07A90BED8DE3ABE52F2F0AB998C8F3596BED405D32356C6233A8DB18A9
12F357C0F9E023ECD46EB505BA96EFAB108EE41EBFB00663815F9BE1916B95DE
F79AED6DC956A62EF0396CBE6E45181E1924C67F791E4BBD646BED8080D4364B
AA14524C6047F35E2A2E8D8C8C7C5CB432190F6D73F369677E6CA9C1366C5DF3
E19283D1B556102D74240AC852F27A9281C50C05402C555202451BDA8330930B
474869F2B88E61D71B6DE60CBAE3DB92F4C6B9396786F65405355F0EE7238A3B
AFB32F74ADB6BD4B80C719B361B3BB11035E2CE43776643E46C4F146CD7C05F0
C4B63DC1C10E03B9D34C6727AACF167ACE8467250DF1DA97A883DBEEF75D9A98
69D1612D5ED8825ACFCC6B085FA277618A1FBD9B828B8E5DDE11724FADBD8CCB
5E65857EC1CBE59F04F0392049F3CDCE2BBD8EAEAB3B4D79247443A1D9BFEAEE
2AE724F657025355F6DA8A914CAFCA5C13B6B9ECC3761AD0636F244F92C617D4
3CC4E02DBFEEB27BC8C205B877E971936F2E1DC0A8A81EEA2C96FAC55E9FA2FF
3D0224A7529926ECA160447B70D0905BD24925C8573D95FE98D969E5996187EB
83174F748F9F5C6E7C9E45C5D11DB82EA36FBABDBA9EBDF4DECAD18E55E66FFE
629F90CE371F6ACC3370F78FD8A11EF86B51A024C8FDAB53E5BB3B795E8DFC95
3A77454D56B839D561BC923D308B76CF5B6C5F92C6385FFB6944D821C950FDB4
9EEB0A16F6936C9A0AC658ACE08EADCF824EB1E7AC6127A60EB694CF3507EFDE
48259777B85FBD75844F3B2CEC8D18246A358D42DCC3D6F33842470FED409C85
70FF6C234DBA27256DCF847CA1BAF6B52997F87AC5D9C9D36573E77A01E5C87B
0ED471DB941811EA907E77A384D23915B6F54E3B94ED9209A41A96447D49536E
2A0A82688DEBC02A6E020E757C5C2BC42EFA67A23ED97725D6B5B9F55151D5BA
9E9620835A86137923E7A5CDD01CD6BDF4DEFEE13909AD28EE79DDBDB0BA4E82
901BE73AD202E0DB631F373664BD8E451BF775448323FBF134C50CF87B942771
D28DF2C07B567DA70D25CD23C259D2CC7FA44044CF1E14A026561FC62438E51F
E64AD8664B372BC17787C412E7273DA30DFD995D6FE2F033CBD929BB9A257B4C
27E4412229D55B3782417CD36C8587590A6B5953A6940DF6C07B28F07B46E30B
AD7934AF1D2415DE17F63BA216C53E62FA636F6D26F927CBE82E0AA3EC414E0B
3A1A6C53FC6B951CE935ABC955B8194F9682346338B9DB6F83FE557134C14144
A554C6246124898B5E2422871B2C50F5B279CA79EF8E71DEB88C6A84B5AA9152
890F009DD6E5A3F1A7115371355ED757DD0DAD1735FF4B0CA4193A6AE39479C5
3DBB57E6134635C7D91247E92CBBAA0404DF595ECDC4207BED1F3B5D595DF391
385C949D6F873429AC429977FAB5D91EF7FC163145089CDD4B91305E825C22A4
9EED975F759F4C4DA588E58AADC234BB3AB8A5EEC199CD8B74A77DF9F145C998
AD3B62E16CAB06AA1935C339E5B9652C3CC128ADB9A37BD738795171E82762DD
6BCC62AF998367DD80BFAED80D2DEFC29073C37BCD32A7885941AD2293441DBE
280FBA35589BACDEAAFEC6E0F31862296F17D9EB213EB3F194CF371C1A07A956
81A598232B4F17C90B1F96C69CDF30586958C707F0205C3F9872476833B252DE
246423BA7167A4E9931F28981F37461BD360D2D3A2CF436CCEC9A305ECC299FB
D9A74AC0CD41EFED2D2CC5A3137F028A63F6C90C68AC833BAF4B22CA8E6E1FFE
F2F2D3040F5E1CF4B2F470678D23AACF6B5615DFD34CA544ADD64BE974F61B47
AF24FCEC9744AB9B4C25082F8BBA08528AD4AA1C78EE4EC55EE9B648E27054E7
D7D3F205C5F33758FA63F49DED128A2C9E79C2663151C82028A77F5606A69A36
687C8E5495BA8863EF5B4A94B001F198E70CC51AC381FBFF2D7E49D0438F77C9
4C332D32F0CD11F9FCF13B23CC376C2ABB2BBD70C79768D39E812A50724A9E37
C39E8BA26BED006781012D19ACA1C46A4DC02A48B47B161614660E79542AE1E1
949BD79D8D80F241785EE4E3C12C9815BDC3DA75C1A2BA226E00766FF8290790
F19FE912E0C2DA5025248C4E045C96A87DB298B3E2B1F339FF2E6C44C46DB5B7
992004CB50C95F27976C32B7F17097AD1156DDF7291BA79A50AFEA329E03DCC7
C86821486F5B4198394F50132FD2F86254BE85240ABA985525866EE1A58786BF
6AFE1E5A4F1E267E78F8AAE6EB29CD4F50D01B09E2C1C32F54ABEE8B83306667
C5FA37A28699D9C0F3EE94AA32E3C58F8D7F803B59EC183963E8A9EF7165583B
1AE09C3F12BAA82365202CFECAC158BB77EC34B98BD1099644E30CE5DDE591CB
20B81C70B3F509A3EAA3441E82FF724B53196EEB9D5A83ADCDC8FBCAF232FC4C
567CFD7F82EE726DBE6FC611C0DD940C42B6FF44225684B50FC56691BB3A1D22
6C2E079F96B27A350233112B0A339366B7373CE058456E0E13B2968981092DBE
C6563E7F0586F5E3892618A1D6D53267B8D93CD89B84F14D18A2C653EF52DFD5
BD5FA826A8ABA96E4C628D450E7E1B4025089EDF05D020C458C7F71DA3B1B9A1
6C5F1DEBE19C1C27AAD6EBF4CBBF8A7D8B3A163E2BED41CE8DA5C50E9EDFB700
47B6D2CFA4ECEB3269B7383E97F32358CE522B711037CC8FFC175CFBEF2E8A6F
D8D85DBA9094E105CA0C6CF6C122C2ECBB711E02B4742436AC513D1A305823F4
6D95CE210EA1EAAF30C2C513AC9569CE318E21C11AE858AB0BD573C2E4B68734
60108F44975B7A94588215878E6866C71C6FE5F3B514B6D2CA0CB8CB8E904E75
35440A065493480FDA1C5730FD1ECA64BE4C153AC91451F122BDD5C724CB8023
3316A52FFDEF81158A47BD89E38372CE2D82290BD895D11946CF303DFD961CD5
057F44D52C1B5FCACF66DB19F40147FED1A401EDAFBE8A3F9F871320D840B1BF
DD84BC29E9F248413B9AB45604C2037E471BD24485A77247B5666DD4126A3D71
4BFD49F6DBF07DA6681F7B501B55AC0BD9D2F78DFFED55F5DC30A04C6A95AA15
318645BCB78F6AFF264AD899D61B43C15576F77441C115E83AAB48366554669D
B1932AE29CA13ED2AE02B3FA4D4F416A08BEA0FFDCF8A90638660039D6EAD9A6
2EEDFCE5E0F97FC9B58B6A605314F854A16AC3011DA8D642CC9569BAFDBE642C
963411707E41DA572B2601547BABDB6C6EDF4200CFA4CE3773808A4FED69E5EC
16B7A41A0F8D4E0BE7B10B9F90A8F375E6188BDBA94EBD379741BABDC94C9BFE
593725CDC0EC8F2543CBE97F1E5F02341CA7037B2E8B38D19B03C4CB58EE0EE6
617D174EC90945404C5FE79985C1D40E34B1B3929EA15ACF48ED2482B01AE40D
334961EEF0553FDFA08AB50879FD9EEE032004B5B1A3A61C798777162F2928ED
0DA8F7891B0BA3C521D7534E48C018EF8428F583F329C433B95DC6920785A326
592D07637DC90AB901169D9B8A4E33ED8CE8EC3AD987CE15528ADEA1C6D767F0
4383FCC871AF08E7CDDA69390985D83828FEE9E35C1F7D24C5A0B90A66F0FFC0
44D1E80652D0836E0825FE41B714D4FC0563F0066505F278DB2174928D48D9B8
03CE1EE6302C0AC1C7CA421B81B6DDFEA56902F01A12B3FAB486FE7BC2E431EE
3F6186F857B2FB2F403BEF08E0013884A89FC8D6AF6B602082FA5C9B2D978406
7A2306510A28F4711700040204A47C39359AC7480C14BDCC4603E79C04FF94C5
059BAC10947BA16CC916C66B18A7FCA83FDFEB9DF7477A180FF37F1BBC754BC3
C82A799EFA532D6278212587BFE00D23516833D0DE99D08AAF59AADF82B07D6C
0AF1CB84EE3226F02972748A1AE3F5499FFED03EC47B9081856C01848DC47EBB
5D3F92F9EA5056124CEFFBEDB202555C742B13039E3653A4BBC037614B355E9E
71CAAF5A17D5598D8E8BB772EF73E44F174623EA6464AC86DBC3773EB7AE9C40
8E9CE5EC89307E453F6A4DB719E4FEDBA7F882054BA0E6B528F42137A9001E29
CAAF77B9BF050E361DB27B7C6165CAE7AAA052BF9A618F653E61063B0C26BD9C
68F81C0E73BA4F9BB223D4190E5A7B7D2CA40349B32BA1EA9D659EBE967CDA1B
8562C4DC3ABF2C120476718A1CD9960D5448556D1B2623BED9C8809E5773A554
034710B4A9DA4C7B3F15FECBC036634F67C7A190809B55941884D3B9FFAB4AB0
D161268E156F9427F4D97CC65EF09C6550B470AEBA4A90C0FA4E7CBA25059C89
3019075DADDA7A75C7E65C2AEC9E22A6A53873660197A2053EBD8F16D022A0C7
A5865A52C5F4D31C49B716E117FFA6428294A29FD1E033E35DB499AA42EA63A8
CD56AFC62B6A88BD186CFEBC508FE0F13E9CF1D70516C98E4168F58AC9A9699E
4FE3EE55BB0D18F2BD07304A4C94605256718D37291A678CDD477F64532E3231
8CB05F5C3236399EED959317DFBAF837DCB81BF77BDC45E4E6250D89667A1FF2
A2BA4CD7BF56A6A10DEC60C98145A281C544FF0074C8717EA1205C78C5192B32
3E14154DD5FB270ED3067C80C8C172A8C59173B67341A4BD0E85DD55560F0A86
81BF7E09FD39B4341967F54537ECCBC61816D57CA78CDA59A9B9AD1018F245F3
3A42CF224F327CCEB361EBD4B98B04B43EA1BC0A15AB6F0C9307EC56148CA0A1
6BBCF5C5918C40E504942649D426DE5098035CFC92E68F50EDA36AAB11FCF6DB
29D425BD33474212954A992DCE10272A9B23992492626D70E0594D3DCDD5B1D9
0F09E59977A17A8B8EB4FE5FDFD64479DDC94349D17FD1474743DD4516C1A43F
4B11CC112DE733040B78EEB864E376B4E430431F04CFFD9F72C29A1211DBE598
D69FF7CFA8B595B8FB485637C39470B76D1F4FD34324F40D77C9FCCD5F1804CA
5A2E59EC0F3245EDBC9B79D95473A13A28FF856D6E2A3A5608D1ABEE882F8B8E
79CD3CD43932C02CA9125AA09D290C96D22C17CD43FFA7D0322F706283C7C60A
1D9E7E1FD69388281F0AF776D0FB2B01EC5CB1BE74CE9522C06896B9E641673A
87B479CADF2A81AF8BDF3E922245BAA2713F8F9E8FAD9084D8CBE7D7DD310521
9AA0FAE8C412D99783805405C728BDBCF1F6E8DDC3EE97021C4A4FF58D78B0B0
F672C3E4AF63525B99F0A8D519F3DF2E510CBCD51D7CF582120472FE866A8EA2
5B2D5079716163EF1C37923D7FF23CD7A21B6484D5CD3F2B38600ED82C96EA5B
DEB529B090F1CA82CF862138C254087065083A6524E3338198D13F2F465616F7
949B5DF28EDD3FBA26D6EF295B977A6C8A5613A89CCDCFB0A0971DAF83EA858A
E2A316F0D4C7BEC93BE0F7E73E52E0829DD5C3B6B1397246F8E2D19845D63A6E
D2CB38988BA640D58DE8CE8101F24829280D627F3B9B8FA1023CCEFA5B1EF883
C94927F16B798046B0313478AF755C3429D4974976A5447CA8059C3813482C48
FD1456BB3C1337CBFE3E0BF24777EB917E73BD2FB9DB6751F7C31C023A70493D
189B3E4F336841E83C80535600DA05F949F0CF90E3E251F0B36B6EC2225459D1
B146467606BEB1AE93533B341E3D62E5EE9FE92F5982E78CCADCFD0E6BED84DF
0DA98FD84AD4180E993172DCFF4F82A8D7AA719485C6751EB1F9F31BDD08499C
EE7A9B2A3369417F90F0F374AAEBFE99BCDFD32EB647D987E1423804454EAF13
4AE09392546A9760E5ECEA9F2FCE0B991E85351F6BD9735CF09EBF4678CFABD1
A6D3FBBF8357D4DC052383FB9DF1F980D05D8533158A7D1941871D0016ED45ED
A8DF471D1C6F941BBBA29A0CF844AECF49D237D1CABBEBD1F0C05A364A0DBF90
F6E32CD28887F7E237E040911737C9A1809435FEF402FE317FAB705146DA13AA
DA0D42C757F3D5586DB8783F06030B0E5C758F7A279110D8E8502F531D461A1F
FA9FD3D5CCC64D6788FA447CA76E39B876D83F1B3A54A86155156DF58AB81E26
7323EC3DA1116C6807CCC1E019748034E368D045CF03A95F9A1F503788BABB31
3CAF6EEBA8CF4D958EEE7916B8F6EE868D34423D7753B898701C5C0F35587146
86EE6F14C1DDF66AF356091BB307A72D083BF65B6D8554C69FE92AE4B79A69CC
1FB83B0DEC0FB53FD296608FC89E374DA427632F473075AE8882CE662D88AE8D
5478CBB2A7C73F841E771987220F3909DFF0F3FD6B2286FC1772431B54553E86
60DF4FC881B1B290AB76EBD11A36DF260C3309C8022933B5BBEC2150F5E35BA8
BF9060CAC33E35DFADCB9E85A6904AAFB352F840F8453B0B5FE4F667223638BF
8B5872580E379881BE02909D7E57B80AD9F00ECECAF977D12A5C7BE23CB6EDE1
6C25E0D9EB07239AC11272BA9253BDACAD222C0120DB1C13A15F9672EE555184
7791342A64C0DBA9D76FBEADD4768D3CA388EF75199148C203CA0306F8BB70A2
DD5DEDD4BDBB3EE69823C9E436907D9D7ECC96CD53E79DBCD8EDAED0A2FB923B
5497EF22BF3645D4AAE35E132D1CA61DA76003FA5C6E294547525ACA6C96BA2F
ADFCF50FDEDE381B211A936B3E96223253300BD4A24A287C67A0D0E478B3FEC7
7A460F985AFFAC955BDB4E89F3372502D683BD07EBBBBBEEFDAADD4B7DDA455C
AE6D29EAD6CC0C7CA81E95727574C28FC8490DC6CDF7C14121009C89006FC911
FF4CAD8F47EE16B78669BA72206131A125992C686832DA19007A512B2432256C
401DF418619B132D1D7DF3C37E35E2ADBABCAEB14B34D2A428A3EAC5256F5453
1F9515FA7A9458A630D71D56B737FC0B6AAC9E9CA9193C157D2489EF10958D9D
DEEDECE7CECDFC017BAA8166A39AD8117BF368B91934BC6F0BB314A369C15420
318F852377C83331457AA47AC07B6224609981DC574B05043CEDD7015FFF40A9
272A53548760D60E9C43B860B5A9C51AF0BEF11CC8E85B067A4023452DC33BFE
10B6C23F1C7ACA39A6117CE4DB91E197AE372A9C936847A155567102C65DDEF0
2EDF43C5EBA02A9DECD8DAA5244C0DC2B645CD0FB2FBA4AF9AF75330EC6BD23A
2C2055381221A2CA4E37B22402A2B1DD43674111895BA7732B48245056238420
4494BAF2083D9DFFC0FBADB40AE130A9F2002BCD8A1356D06042CD991A055D41
BC77DA4210A8D394ABA1B3F88D91DD4ADA95093D064B0E699C59892B661E5A0C
F7024D62494FA96A594D27DA3C12373686525F522066698825B545A201E0078E
734D6DA147B28393D13E4F7903B82C3D0529A466C6A313CBE372C6FCD6B3EFF6
27203630AF2BD897DB3C7DD9D71AFD016A4BFC3B397A617E176C79AD0A7293D1
C9772456B2C31D44C06BCC58D737F7D239EBE3EEE1A4F981B402691BB032EF0F
402ED81971E9FC729AFC1E778A3C02DCEA9D5949D482127CA20F8DD56C8A500C
6E34DE1ABBCDE8C0AB82FBAB2A72B5C5839D67E26A540DBDD8EE8292D9BF3D25
14456D6EC34CA66C04BFA09E8706E8C94191270D6BB87B2186B6ABDD86F04C4B
5B37F3CC150D13BEAA8C90A4B520F1284E1B7C20D28ADCC3E4136F2A42C0BFAE
BB27F26A5A3389398CFAE168DE655CCB85FB2C97A3ED752F5393470DD641BB17
3B202FB9C5CFBABEDC2BB26BE5C83A0D92C36E2531163563E652BCF2B2444457
D1A88ACE524159B4902DAD7B8E6ABB9062310BE7704CFCCB698730F542F14B01
40956714F9E17000CA4113717F24A7C3875E7151C6C6B30762F8B71B62CB959A
1C22850D0E75E691EC815A22E4F06AC52972CAAC14E86E407367C259A83EA0D9
2DF798FE51658E2648D8CEFB6C2479DC08753733A94EE437ADD2B1F010484E86
E0B72B923CC2D5965E5E2A1303E1863DC916241EAE53D08755A29638C1727712
50F53A63D08960470F56DAD42A7C37E155BF9736395C609B315ACC4F49566EDF
37EE388ECADEACFC09D88CFBA928D5D432170FBCB19B4C29CE19795C7F41812A
143B802D3951B6D9026B5D97D33027BC467C4DEBB4C6F5538E7F57DE66A98C22
236F64E78BB86D81131E105AD89529EBBCBA731385F8462D0CDA1D4AFD2E0442
15A4E5D214862AF46F37A198505449439796B5DD5444AAA1BA4C17BF640D2A71
0CFDAF0B8424F7BF22427B0074E81AA4F04D9E43E18123CEA7A42B8CB89314E8
AE0F6E50387FF65A63CF2A927E5F2D7313EA2C5610209DAEE736CA9B4F60CA8D
75878FE4BC40C0ADCB09448C465F786BBF02D0E32620F3E8A2D06FEF8A881079
1D8613AE626527D04728D49F9A4531B87A0360124FD1504C60DB8A0972243748
F7A097529B9C4495A1F67111358F429D34A8A566ECEB61CF2BF6035B98EA90F5
59625C437D4AB338601DBBB651EDE7B5DF05C8C4AF686C6D96A1774CE610C009
DC2482DCDC04F2BED16E0B45FDCB6775C880A53F56EECB028F93FC3751A9EBD1
D97C1B4A3D172E154D10FB25DA53070C2BBB4411D9608F4FF0B2E1718C7840C1
DD91C796157A282D8BC6524B578BCF2CA6C2E04B75201A7C8DA8CD1CBC87E83C
84C14EF5FC4FE4686185EBBF18D3B9593FEFE0C88BEED5C28CC3BB9537EDB0F8
769AD742C8C673B6BB38C9AF59940CAB5680A26E061D2F6097E85D5495DE6B1C
067C7F67FD1FF0E9B41FA08A40882B882C8DDE790812C4251449DFEC70677B8B
3BDD77FCA7A65EAA2B6ECD37DDAC21C5037E3A7AF8607F194FDB4159FB09B21C
FFC872CA0212753643FACFE8DF1F7B0A69CC97FC2F3919A7074AC1F62C3D65D6
01102C3BE5C3B18953DC92F10775089CF00EFC3846B680BB0FB087E05776A268
EFC6C2F83AE423590FCFCD5F871F03C22DA4FA52D73B41D2CE3088529A5C2BFE
F390A55C29D0B9F498D5204E9AA3172312B4DE5B4C1C14ECECBD54B889053CDC
0F9F1BAE6CAE8EA99AB61E5BDF85218729BA9972B1C7AA6B56CEC8FA79F0BA44
E771E68D0268E30691B78155AB90C61B8332070B750191CD8A539D6D35C09A0C
E284E7CB1A70B7F934387FDE0B8736AC99C312BCE1CB7C2B01910AEB7005A526
481C611D9AA7AE34F17DC740742D3A048A08F0C450E5063E960F37D24CDFBD32
1052D556FD54EF849AB9D60E418ECC5FCF28B3004A57E094DB56B8D23E1F130D
EA693AD05F6FCAAE4BFC1F60C355698E3128BD8740A816C9CC7B59EEB58335FC
DB592821C7797DC1E1AADC11432E1514664240BA1670909F6AD0DB8B55A160F5
380A45EC1335D644F29EBA0D92EA3F5DA27F5064E2C031A7C11D6019ABC39591
9329509252E1B551EEC3CE13B1FE4864981041B247F3F196BF8353A849B60063
FDCE90E2ACA2D45B649DD784995CB9053C9070F96241E324DBE45F66E1F25932
76B50E86E0D567B68BD03129DFE6B47267A2FA06A0A045D56CD8D1C4D6024677
A39CBEF701D77D05FCB64F261AD82C488A11005FE7B9CE6A7410E32401A3DFC7
09FEB708BBE6F874AFA443ABCACEFF8F837083F21026CF303DB053CD92839388
ECDA1CCEF25EA04CF7DB2B05CCA9BDB8E39783D3E1179C390BC240DA061C9D53
9B20F4FCFB72DD08DD780F7159438C42FB1CFFCB08B0AA19301D76B745097285
B623A143311EC892D1BB9554D34547816955434F5FB9C7D1115ADF2DE08AF7B3
1448DFC1C98EE686B4AA5A58BD9E1056EA0246914D3E20F1FF3D678495416F40
D68F4885F2DFABAF978850233463B9A034D3F5936C49BFBB711AB6D0FDEAAEBB
5289568D37943CFE6B7DE09DD4E8261969592E57250F65306A1666F002A9B36C
608B6E3EE55BA6C3E0FE565DDBD45AE467A782725D8B3E30CF07912342AAF25F
7B190EF15AEA7A75F7C114E62D234EA997922767D3F96891818B8D08E4964BF5
ABE0DA3110FBDE2AC747136403B67CB88DD20DD1970CA46E058A2DCC6D72A971
5B00D1495B99CBA96ABA9147ECEF29D69BD30EC8FB9CCF772CB5742104AAF7F6
B37234BD3256784F91042F401FE47E5D8CDF584FDBACAA5FE65822616E0720D0
F3D28FD6296AE76BEC4B0044AC2984337F2EA913D629E8C07A0BB1C59B638E67
7A4FC26F9D9A17F28132BBC2A6BF716407E9F63873237D152347D3AA2C575D1C
0DA000526826B6DE423A1EF22B2D3583FB42CA25E958D6355EC1CEB0D534C2FC
7FB9484D9C4CC4D7F1EA19BF17A7264AE1EB3CB5D9AA73923D89D63966FC98D9
3A557103DB60953431E7162064E2B94CA0FC9558012C56EEE0E6467F67E84F70
FBFC86409023DA03944E1755CBF508210B167656B0E9B9D20904D72933788FEB
3484892D702B4B8B60C24B78316358915893BC1D32360ECFB378EA1772D6F9A5
94D3993DC10222F557A2D488A60F5078F9F8E074C18FAD80AD511F464AD56E8E
56DB43399E6A6918A887A64B2EEE98060E47C0F5D50F1D37D1EC32C188F311A1
07CC79FE5120FF314946585AF5608562153DD6A09E462ADBE677E6F550F93920
0D4C4B50D74D647D3426CED42B69FE1F617426738912A5787B37885856BBA23E
FEA2AB1902F879F1361AF8C2240D2281BEB2D27D8ED7FB312FC415A0BA6147E6
6500E9B07124373543A2C18439DB2227247B30A41C72B88180AA2B83EF282429
D430CE35AA150D692C3EA405779F6C3890EAEB73B9CEAB98A5E5B24B1B627B7A
8FAEC8F23F95EA7F2D7BA5CD8A91C01AE80B672831C286C900AB437F419CBBB0
D22FD5E6E8710362F6624E5B8240DA8626EE043AFA55C6AB9E1895E036BA65DE
15BF69090B70D5C4E14826785042123F578404BB143E60CF3AF1721923FB5CB2
9441C616AE2B54E4294A8D87F5B5C3DC10D7975B3926FD05C8FC76D9F1E4BA09
FAB2311285D5B266B81D9CFCA85A1AB47D180AE3AB5EDC9A66EB2152A391BD1F
540014EF1AF57B30934D33031662A6952B2A578ABF6F0E3723A1E3F1D178B1AD
29AB763EBF6194A28C83F47F7E970BF81334F2F843EB703B00BE97F434F30C39
5BFB54F289FF9BFCB0365F0026E7CA91F0E64CB8EB4A006AB373D61BA5EEA4D9
07B5570A9D090B86A2B91B87C992C7DE36CAD6DBFECEDFEF976AE5071223CA6D
6773282DEB1A8750DF7E7961AC02510F5B6EE04E45B561EC2EC7F812AD00A931
626533380BECD9A77158110E3D1062E894B894904916531564BA32C99A9E9E4A
7793BF6C96D40B215C01EA61946012C986D17A147289DD4C38A0212B21076B58
A9D69B6A72F68743A3C4DC4D7CD5BAFFC9BFE88E3299560DBC638C18325B5098
B04BA53758C31B675958EBF63E296F9109677915EDEBA3654EAC3D7C8DCA5020
37451B79C52B101ADAA48FB0A4614612258D8B704914624FAA4BF2B5FCA3448D
360B18D5B8F984E236BDDBBD48508D578234BDC461B17A4B86B6C30752FE71C1
E3E94E94DBEB950B4BCB005D12AFE73ED961640092FCCAC5116A4040CD614F18
EF9B1293B4F1ECD10284A8D126A67FF92A4C8630040627978FB004D2BEDB49F7
459C1B006D83B9020CC042D595A786560E692CD097005D150018F1E7A67BABAC
765972A4E31D6D94AA4CB15B525556796BAEF2FBB53441591ADB8D295F760980
D6404FE29CE4952D5E875A00D8AB8A8DB882AE4A60B05215E5751F64E3B06BF5
FE4608C05C76A8BD9EAE2406FEDF8DF6AEBDC495F28D3D57D9C33CE829163C80
C4671689CCD589FFB1FEB9C248E96E0477763E628DA2067894B5C5CF027D5C1D
AA720558DB7207ACB6E08B071117DCD758459C4F3BDE0B6B8CAD87EFC08E6ECB
74146145D2EE0F7C90DC710C4909D5A34BFE2EA76BE2B63A16B48BFA6BEF02C4
C6545135EFFEBAD844A51573016AB67421D2209309918D2B77BDBCFC71BB9D2E
9EA68E2B7AA768F6BC92F585FF18BCF66904150B000111D1F7551E15E27BE7A3
BF9CEE16B7B35165381A995D9E34A5CB85F0D97A41472695605966A347FF2F1B
0C5FFBBA1D132EF6BD7A17513A75570ED5824A9897FA58433816DD9736F4B7B3
82DCE9C6539CD8C0594BBD3DD6AB86E8184B9FDDC5B0FC935CBF8B621B53D106
4102CA922C49DE84930EAA05A5D247C38B1C7DA85451656E615BF382CC68A690
BFF863AAF3362D2CB4651823E3E7438AA80AFAB668A5E0E327EEC7FB8DCB92B7
012D6E918F888D2B271EE8943A1F617539F0A63F6917FDC3758C1F85166FC154
8AD8BC7C7BED0D9F20225C86F14FC2C9B3CBFD39A2BE9114D570E86D5A58F2D5
7048E6F8CC0B32050C1808E9BBF183265327078D26CD2DDB550AB557A9E426BD
6E77C572547E68615ADB771381BDA5295DD6B5C2F5719F7941EC91235F2E4A98
FCDA45E843C2378022B75C8AC616A2D32AA6C81FC7C1E5331E64875E5929236F
024B16D088B9BC1B8B5B2BF1623CCFFA4E1C4F5A9851EC3057C14C2B7EFB8CD4
B779B837F0155DAB0069B9C18E6B98C6F0C94FA6D87F4A2547111F179669D722
9BA4ED82DF1E010654A80F5B5B97F50F57C4BCF6F544FED87A5D4F4B02A95DD4
FD0683B44F39BE6AD6F25E3B5BE21745F87EB0BDF8D90351BEDB390E15C35BA9
D7B664BEA78C6224643A52C627E0EECAC8C9B1B9E924317DB4827BF0875AEB84
4A4CA42E140DE91FDF75C0AF5E39761A5775D5DB65038D098E412B3E79AABDF5
BD539A05EFB85592BA7ED2A31199F3C42F977C18BDA3885326C15B080D2070AC
99D99A271A52B45C00A8080983AD266480660D4A48B117D5D4B135C2CBD7ABA5
114593336A5D980FBF7F59D5B243FB12A0038E1479E8E85284AE4D5F2FAC0CFC
228F9E5D73229070142F6DA8812363E1AB59AE11BB5C340A21B4537A39170B9B
ED3A336C0BFE2F02D26640A8CD12895BC07F442BDA267E0875234241B85450B6
1D996B63AE0D0EC3D50B4CE7EF0F74D9719B8BE045F1769201B7DDA8CB372C03
A2967EC7E875F6D4F6B39D90A39CF170850879E08D105423C6E52B6DA1BFA7CB
2C670B71BD537D0534E8C6E60FBC27A8550F248CEA02985DE0565F065FEF9339
A386071A62AE7E7856AB7042011584F107F49A5EE85B983D0A1FB41BC088A320
DCB2079D6E76EA108644FA247ADA90133C47CB9E11C8D330F0AD6E393C9264F7
A9AC6BE3F9111FD20C5476C241F4E7DC55EADBA8EE1FBD1281D2594F790F31A4
ABBE8AE755D4E4FDDDA02B3C62CBEEAB94FB659A755082BAE0AEB7BD18CE2D8E
F8558615350A3C098A8B1FCAC82A6186CEB06CDADB270AE864A736D16D17A192
3D788408824B2956AB398CDFCF61FB416B34298C02D1DE0462CA73D02FBE3F81
111D09FC904704314FF5E378E864A8B9FEFC3998D9CF9F1CC710A1158ED58853
6F4B17712BFD5CC16A95BCE8418B643B081A08EE38791C680FA98EAF74A87B9A
52C00ABB62A5A136C6A42320F009D56A0CC017D36D14E92D605813D223363220
634C1285BDEDD3F6138DB02D74E9530FC28A3271CA39AC192CB33363AFCFEAFA
21AE6C39FD5E44957B059510EBEFBE60F5B31A5F10BA738FB9C9007904DA8A7C
E4B86C16648B218BB1609C4FAC8DDA7D81FFB78D96DFFBBF2F1C0FA0F12500EA
B792A65F19086F22569A9BD942A18DD8C6BAA50EEB28FDC97E4E6A03345BCA9E
3E68779C994A19752219FAF918C569400F05E445FE8D64E29BF0CB13E8E7ADEB
132A34E517B6FA6401D0CC4DE3E6CF103794C29AEF5B08B144E997906F1B5684
40EE2E1705DFF76CA9EFE14336FC9DA7B20402CB51189FC9C49B588A354AD19D
DEE823FDFE623F1DA20C3D092BE8CE7E9A6806C620F000463305CF4195F2C30E
392CC3A8C841C469D8E4B8BDFDD61BB629847123089B783F2B6AC273FBCCC14A
32FE891E58D86D5DE6A9446C19D1D6823556B9D982C4C8A0C313B2B3E4FD6B3F
AE9CF98148A2B2C32E2AE094AAB1DD01A1126D2A4652EFED6CB993F6DABE1072
F2ECD06F68196A2FD0365E4D382FB51BB1F8158DCD80F336F42393D01D7A722A
73BF0BBD64FA6D370BEFF0FE425138A904214992E3EB4BA1AC3A0761F95B46B8
2AA6C46B8B320D079887DBD0CAAE9B665274FBB32AF1876A9144C93E01ABE7CE
FB00711B6F3CB0CF46CA1E741254040BC520FEA60722A087068CE625EBD2162C
306CFAD1EA3EE36D668CAFA000077C30DC0E40C2D8A62D37B12C32927DDFD22E
D445F746EEB4DFFD1843DA2D89794FD537D7AC87149E4E534F3E231AD597E5D9
7DA7DE934DF21D0655E4AA575A40896DD82F00EBB6211CE96439F87ECBF991EC
29DC07BA0CA4D21ED53703C664D6E491AFF6A5F62293B5B78F76E6809B20E25E
F41ECBC1C84A5E56C2996538DCED363C1E977B5D6F1CC38A1890863C60947378
E715FB96EEE074833CE414F8D16B6700C095207E5710D6BA99DE815507DAC593
5E833CF190CA72E1B82B3955E1CA0251C4D90C0B028714C0F45E1BC2C31A4EC8
A05022BDAF8B8101FD404D6B8D30AB7A01FF661F5E62A860C77CDFC3355D0480
AC50F9C8AA16DE00972976FA8F4A66BF25E31E27EB8344BB1C2CC9BAD4816ACA
5ACB5FF34C2A43EA30A8EE16315D4FDFF5B28627EF21D6692058E6E6DB0FF6C8
5ADB284F7134EDC9C2975B4A62B1F08034D1C4AD9C1FE0C93BF719CC5AA744CE
7FBF6C1180AC0E81C7F24D4EAC7EFEE30314B370505F8376A881B33381A8A9BF
FF18515B92327AB1D11DBB537C4A4BFD7D681216454821AA0D55C8234DBD23D2
651D5F5276DA759A50997E7A9A2D15F2027ED0D67C48EFCDFB6A8EDDC68B9B2F
2C9C9576452DA8C1C2DD10F711576729064F4D52E5F0DB3B30E4367A0413074B
6272E7D69FBF95874C5D2EB8F6E3B48B766E69325AE481D4FBCB5BDED0C269EC
96DF9983F73B2EC2F26AEB5AE7A6476A2EBE86F6F87B2EE7205F7070230CA5E0
BD22B670696688282F58FFCF42133C2F9F3DC7E6BED51FA9412407E10CDCF6B1
0F79CA24723A0CB430127CC86CBF3373E2FE27AFC6237E32404EE68E8B63B9B3
A0C3FDAB5C36AA57C7D845D8A694EC754526D0D7D8A1CB7FB09E08EAF7021ADC
5958B3963B60BB5A35BEB3DC606037C874491F6393A814CC1C961CAB37C4E5D9
925339A3E7A236D8D4C74E5B4DF3FD86A5A1EB03245065871761DF0528151755
F6CE20D7DC54A661B88CE682FF819218F8A9F700B59546F48DEECAEBD27643B8
15DFAE859F2E26CAB1A2FF6F70F245D9E49B3A42967A46499F2534353C1E94BB
7FB36B09C4FF80165BC0BC9387C73328D0908F3F088BB76CA846A545E8EA867B
B4E23196EE55EA3E57B684AD301B1FD4A3681A84D170419BA1956C1949FDA6CF
B8A2413E1727FE71D9A476A1E660153B9FFB0187D5D279897F6C0E28ADB35A80
27531FD934039B7F463982BC2448801DBF9CFC369A6AAE782E002092CB82C8E5
2019C3AF991B3613B43BC90021B5B86DEB9382757F6DC28BAB7A78F3BB6B0C30
340F3EFE0AB40FD7FC26DED67261D817BACC461A9ED5362DF741E2A7A21562AE
B34BF2DE986520CC8A186EA9D851F75D481AD49FCC6F0A01AFF01C6D568DDECB
57B1B4536405F4497AF1E2E5D8F4602693CEFB1246750CBCF1043EBBC5197575
539DB95F50F1E379C249B0A8D03A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrschein)
@start /Fa 201[470 470 470 470 470 470 470 3[261 44[{
 enclmec ReEncodeFont }8 885.568 /LMRoman8-Regular rf
/Fb 133[531 2[863 1[697 1[531 548 1[664 664 731 1063
332 2[399 664 598 1[598 3[664 20[815 4[1005 5[965 65[{
 enclmec ReEncodeFont }18 1328.35 /LMRoman12-Italic rf
/Fc 154[966 101[{}1 1328.35 /TeX-feymr10 rf /Fd 194[861
19[430 430 40[{ enclmrm ReEncodeFont }3 1106.96 /LMRoman10-Regular
rf /Fe 148[576 18[917 7[711 80[{ enclmmathit ReEncodeFont }3
1106.96 /LMMathItalic10-Regular rf /Ff 197[261 58[{
 enclmmathit ReEncodeFont }1 885.568 /LMMathItalic8-Regular
rf /Fg 168[1138 3[615 25[553 553 553 553 553 553 553
553 553 553 1[307 1[307 44[{ enclmec ReEncodeFont }14
1106.96 /LMRoman10-Regular rf /Fh 160[909 45[606 606
606 47[{ enclmec ReEncodeFont }4 1212.12 /LMRoman10-Regular
rf /Fi 203[993 52[{}1 1328.35 /wasy10 rf /Fj 198[470
470 470 470 470 470 470 470 470 470 48[{ enclmrm ReEncodeFont }10
885.568 /LMRoman8-Regular rf /Fk 143[1107 70[1328 15[1033
3[1033 1033 18[369 1033{ enclmmathsy ReEncodeFont }7
1328.35 /LMMathSymbols10-Regular rf /Fl 142[1107 47[969
969 10[738 738 738 738 969 969 30[661 661 16[{
 enclmmathex ReEncodeFont }11 1106.96 /LMMathExtension10-Regular
rf /Fm 162[361 1[361 29[1012 1[361 1[650 650 650 650
650 650 650 650 650 650 4[1012 1[506 506 2[1084 37[{
 enclmrm ReEncodeFont }18 1328.35 /LMRoman12-Regular
rf /Fn 135[739 7[653 1[776 2[676 8[553 683 8[1079 1228
6[838 8[1026 1[963 6[1012 1[1012 361 31[739 4[783 22[{
 enclmmathit ReEncodeFont }16 1328.35 /LMMathItalic12-Regular
rf /Fo 650 2[723 5[650 17[650 105[578 1[686 939 686 723
506 513 506 1[723 650 723 1084 361 686 397 361 723 650
397 578 723 578 723 650 6[795 1[975 1336 975 975 939
723 957 1[885 2[1192 813 1011 1[469 975 1021 849 885
993 1[921 975 1[614 1[1012 2[361 650 650 650 650 650
650 650 650 650 650 650 361 434 361 2[506 506 2[1084
3[361 2[1084 723 723 759 5[650 2[613 1[613 16[{ enclmec ReEncodeFont }
76 1328.35 /LMRoman12-Regular rf /Fp 3[1196 129[956 1[1136
1554 1136 1196 837 849 879 1[1196 1076 1196 1793 598
1136 1[598 1196 1076 658 982 1196 956 1196 1046 6[1315
2[2223 2[1497 1196 2[1470 1616 1682 2041 1[1685 1[801
1682 1691 1353 1412 1649 1554 1530 1625 7[1076 1076 1076
1076 1076 1076 1076 1076 1076 1076 1076 598 717 45[{
 enclmec ReEncodeFont }55 1912.83 /LMRoman12-Bold rf
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fp(WS)717
b(3.2)g(-)g(1)h(Binomialv)-60 b(erteilung)714 b(-)k(MC)f(-)h(BIFIE)p
0 TeXcolorgray -741 4800 a Fo(1.)p 0 TeXcolorgray 651
w(Die)460 b(Zufallsv)-72 b(ariable)462 b Fn(X)564 b Fo(sei)460
b(binomialv)-36 b(erteilt)461 b(mit)f Fn(n)414 b Fm(=)f(25)460
b Fo(und)f Fn(p)413 b Fm(=)g(0)p Fn(;)p Fm(15)p Fo(.)461
b(Es)f(soll)g(die)855 6792 y(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)
308 b(b)36 b(estimm)-36 b(t)308 b(w)-36 b(erden,)308
b(so)36 b(dass)309 b(die)g(Zufallsv)-72 b(ariable)310
b Fn(X)413 b Fo(h\366)36 b(c)-36 b(hstens)308 b(den)855
8784 y(W)-108 b(ert)433 b(2)h(annimm)-36 b(t.)921 13322
y(Kreuze)433 b(den)g(zutre\033enden)f(T)-108 b(erm)433
b(an.)p 4866 14030 36652 45 v 4866 21372 45 7343 v 5575
15753 a Fl(0)5575 17745 y(@)6543 17104 y Fm(25)6869 19096
y(2)7844 15753 y Fl(1)7844 17745 y(A)9108 18033 y Fk(\001)295
b Fm(0)p Fn(;)p Fm(15)12083 17551 y Fj(2)12905 18033
y Fk(\001)g Fm(0)p Fn(;)p Fm(85)15880 17551 y Fj(23)p
39108 21372 V 41473 21372 V 4866 21417 36652 45 v 4866
28759 45 7343 v 5575 25420 a Fm(0)p Fn(;)p Fm(85)7886
24938 y Fj(25)9179 25420 y Fm(+)10485 23139 y Fl(0)10485
25132 y(@)11454 24490 y Fm(25)11779 26482 y(1)12755 23139
y Fl(1)12755 25132 y(A)14018 25420 y Fk(\001)h Fm(0)p
Fn(;)p Fm(15)16994 24938 y Fj(1)17816 25420 y Fk(\001)f
Fm(0)p Fn(;)p Fm(85)20791 24938 y Fj(24)22084 25420 y
Fm(+)23391 23139 y Fl(0)23391 25132 y(@)24359 24490 y
Fm(25)24684 26482 y(2)25660 23139 y Fl(1)25660 25132
y(A)26924 25420 y Fk(\001)g Fm(0)p Fn(;)p Fm(15)29899
24938 y Fj(2)30721 25420 y Fk(\001)g Fm(0)p Fn(;)p Fm(85)33696
24938 y Fj(23)p 39108 28759 V 1 0 0 TeXcolorrgb 39816
25420 a Fi(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 41473 28759 V 4866 28803 36652 45 v 4866
36145 45 7343 v 5575 30526 a Fl(0)5575 32519 y(@)6543
31877 y Fm(25)6869 33869 y(1)7844 30526 y Fl(1)7844 32519
y(A)9108 32806 y Fk(\001)g Fm(0)p Fn(;)p Fm(15)12083
32324 y Fj(1)12905 32806 y Fk(\001)g Fm(0)p Fn(;)p Fm(85)15880
32324 y Fj(24)17173 32806 y Fm(+)18480 30526 y Fl(0)18480
32519 y(@)19449 31877 y Fm(25)19774 33869 y(2)20749 30526
y Fl(1)20749 32519 y(A)22013 32806 y Fk(\001)g Fm(0)p
Fn(;)p Fm(15)24988 32324 y Fj(2)25811 32806 y Fk(\001)g
Fm(0)p Fn(;)p Fm(85)28786 32324 y Fj(23)p 39108 36145
V 41473 36145 V 4866 36190 36652 45 v 4866 43532 45 7343
v 5575 40193 a Fm(1)g Fk(\000)7849 37913 y Fl(0)7849
39905 y(@)8817 39263 y Fm(25)9142 41255 y(2)10118 37913
y Fl(1)10118 39905 y(A)11382 40193 y Fk(\001)g Fm(0)p
Fn(;)p Fm(15)14357 39711 y Fj(2)15179 40193 y Fk(\001)g
Fm(0)p Fn(;)p Fm(85)18154 39711 y Fj(23)p 39108 43532
V 41473 43532 V 4866 43576 36652 45 v 4866 50919 45 7343
v 5575 47580 a Fm(1)g Fk(\000)7849 45299 y Fl(2)7849
47292 y(4)8587 47580 y Fm(0)p Fn(;)p Fm(85)10898 47097
y Fj(25)12190 47580 y Fm(+)13497 45299 y Fl(0)13497 47292
y(@)14466 46650 y Fm(25)14791 48642 y(1)15766 45299 y
Fl(1)15766 47292 y(A)17030 47580 y Fk(\001)g Fm(0)p Fn(;)p
Fm(15)20005 47097 y Fj(1)20828 47580 y Fk(\001)g Fm(0)p
Fn(;)p Fm(85)23803 47097 y Fj(24)25096 47580 y Fm(+)26403
45299 y Fl(0)26403 47292 y(@)27371 46650 y Fm(25)27696
48642 y(2)28672 45299 y Fl(1)28672 47292 y(A)29936 47580
y Fk(\001)g Fm(0)p Fn(;)p Fm(15)32911 47097 y Fj(2)33733
47580 y Fk(\001)g Fm(0)p Fn(;)p Fm(85)36708 47097 y Fj(23)37706
45299 y Fl(3)37706 47292 y(5)p 39108 50919 V 41473 50919
V 4866 50963 36652 45 v 4866 58305 45 7343 v 5575 52686
a(0)5575 54678 y(@)6543 54036 y Fm(25)6869 56028 y(2)7844
52686 y Fl(1)7844 54678 y(A)9108 54966 y Fk(\001)g Fm(0)p
Fn(;)p Fm(85)12083 54484 y Fj(2)12905 54966 y Fk(\001)g
Fm(0)p Fn(;)p Fm(15)15880 54484 y Fj(23)p 39108 58305
V 41473 58305 V 4866 58349 36652 45 v 47992 4800 a Fh(___/1)p
1 0 0 TeXcolorrgb 47905 6792 a Fg(WS)369 b(3.2)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 62378
54804 45 v 0 TeXcolorgray 24746 81281 a Fo(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fp(WS)523 b(3.2)h(-)h(2)f(Graphen)f(einer)g
(Binomialv)-60 b(erteilung)521 b(-)k(MC)f(-)h(BIFIE)p
0 TeXcolorgray -741 4800 a Fo(2.)p 0 TeXcolorgray 651
w(In)433 b(den)g(un)-36 b(tenstehenden)431 b(Gra\034k)-36
b(en)433 b(sind)g(Binomialv)-36 b(erteilungen)435 b(dargestellt.)921
9338 y(Kreuze)360 b(diejenige)g(Gra\034k)g(an,)g(die)g(einer)f
(Binomialv)-36 b(erteilung)362 b(mit)d Fn(n)370 b Fm(=)e(20)361
b Fo(und)d Fn(p)369 b Fm(=)g(0)p Fn(;)p Fm(9)921 11330
y Fo(zuzuordnen)432 b(ist.)p 0 TeXcolorgray 0 TeXcolorgray
3296 16984 19912 45 v 3296 29983 45 13000 v 4005 29038
a
 currentpoint currentpoint translate 0.73485 0.73485 scale neg exch
neg exch translate
 4005 29038 a 4438 29038 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 206.56885 a add def
/d 0.0 a add neg def /h 136.57199 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 4438 29038 a 6517 27463 a
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 187.78989  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 187.78989  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 122.34476  def /dT 1118818 abs 65536 div viceversa
{ neg } if def /DT 2. abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 8.5359  mul cntTick add
def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 8.5359  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 122.34476  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 122.34476  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 187.78989  def /dT 1864793 abs 65536 div viceversa
{ neg } if def /DT 0.1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 284.52756  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 284.52756  mul cntTick add def x abs MinValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto }{ exit }
ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW
subTColor subLSstroke grestore } if showOrigin { gsave cntTick tickstart
exch moveto cntTick tickend exch lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
5272 27749 a Fj(0)4540 24599 y(0)p Ff(:)p Fj(1)4540 21449
y(0)p Ff(:)p Fj(2)4540 18299 y(0)p Ff(:)p Fj(3)4540 15150
y(0)p Ff(:)p Fj(4)6282 28809 y(0)1420 b(2)f(4)h(6)g(8)1185
b(10)949 b(12)h(14)g(16)g(18)g(20)6517 27463 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 6517 27463
a 6517 27463 a
tx@Dict begin  { 187.78989 122.34476 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 6517 27463 a 6517 27463 a
tx@Dict begin  { 5.0 6.51384 8.33331 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 6517 27463 a
6156 27925 a Fn(k)6517 27463 y
tx@Dict begin  PutEnd  end
 6517 27463 a 6517 27463
a
tx@Dict begin  PutEnd  end
 6517 27463 a 6517 27463 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 6517 27463 a 6517 27463 a
tx@Dict begin  { 0.0 0.0 pop 187.78989 122.34476 exch pop } PutCoor
PutBegin  end

6517 27463 a 6517 27463 a
tx@Dict begin  { 5.0 51.35863 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 6517 27463 a 3675 27795 a Fn(P)181
b Fm(\()p Fn(X)473 b Fm(=)369 b Fn(k)45 b Fm(\))6517
27463 y
tx@Dict begin  PutEnd  end
 6517 27463 a 6517 27463 a
tx@Dict begin  PutEnd  end
 6517 27463 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 0.0 0.0
0.0 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 8.5359 0.0
8.5359 76.8714 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 17.07181
0.0 17.07181 81.1435 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 25.60771
0.0 25.60771 54.09566 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 34.14362
0.0 34.14362 25.54565 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 42.67952
0.0 42.67952 9.0825 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 51.21542
0.0 51.21542 2.52243 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 59.75133
0.0 59.75133 0.56006 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 68.28723
0.0 68.28723 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 76.82314
0.0 76.82314 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 85.35904
0.0 85.35904 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 93.89494
0.0 93.89494 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 102.43085
0.0 102.43085 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 110.96675
0.0 110.96675 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 119.50266
0.0 119.50266 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 128.03856
0.0 128.03856 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 136.57446
0.0 136.57446 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 145.11037
0.0 145.11037 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 153.64627
0.0 153.64627 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 162.18217
0.0 162.18217 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 27305 29038 a
currentpoint initclip moveto

27305 29038 a 4005 29038 a
 currentpoint currentpoint translate 1 0.73485 div 1 0.73485 div scale
neg exch neg exch translate
 4005 29038 a 21791 29983 45
13000 v 23164 29983 V 3296 30027 19912 45 v 3296 43027
45 13000 v 4005 42082 a
 currentpoint currentpoint translate 0.73485 0.73485 scale neg exch
neg exch translate
 4005 42082 a 4438 42082 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 206.56885 a add def
/d 0.0 a add neg def /h 136.57199 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 4438
42082 a 6517 40507 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 187.78989  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 187.78989  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 122.34476  def /dT 1118818 abs 65536 div viceversa
{ neg } if def /DT 2. abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 8.5359  mul cntTick add
def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 8.5359  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 122.34476  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 122.34476  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 187.78989  def /dT 1864793 abs 65536 div viceversa
{ neg } if def /DT 0.1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 284.52756  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 284.52756  mul cntTick add def x abs MinValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto }{ exit }
ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW
subTColor subLSstroke grestore } if showOrigin { gsave cntTick tickstart
exch moveto cntTick tickend exch lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 5272 40792 a Fj(0)4540 37642
y(0)p Ff(:)p Fj(1)4540 34493 y(0)p Ff(:)p Fj(2)4540 31343
y(0)p Ff(:)p Fj(3)4540 28193 y(0)p Ff(:)p Fj(4)6282 41852
y(0)1420 b(2)f(4)h(6)g(8)1185 b(10)949 b(12)h(14)g(16)g(18)g(20)6517
40507 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 6517 40507 a 6517 40507 a
tx@Dict begin  { 187.78989 122.34476 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 6517 40507 a 6517 40507
a
tx@Dict begin  { 5.0 6.51384 8.33331 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 6517 40507 a 6156 40968 a Fn(k)6517 40507 y
tx@Dict begin  PutEnd  end
 6517 40507
a 6517 40507 a
tx@Dict begin  PutEnd  end
 6517 40507 a 6517 40507 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 6517 40507 a
6517 40507 a
tx@Dict begin  { 0.0 0.0 pop 187.78989 122.34476 exch pop } PutCoor
PutBegin  end
 6517 40507 a 6517 40507 a
tx@Dict begin  { 5.0 51.35863 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 6517 40507 a 3675
40839 a Fn(P)181 b Fm(\()p Fn(X)473 b Fm(=)369 b Fn(k)45
b Fm(\))6517 40507 y
tx@Dict begin  PutEnd  end
 6517 40507 a 6517 40507 a
tx@Dict begin  PutEnd  end
 6517 40507
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 68.28723
0.0 68.28723 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 76.82314
0.0 76.82314 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 85.35904
0.0 85.35904 0.57742 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 93.89494
0.0 93.89494 2.1013 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 102.43085
0.0 102.43085 6.30392 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 110.96675
0.0 110.96675 15.52103 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 119.50266
0.0 119.50266 31.04205 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 128.03856
0.0 128.03856 49.66728 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 136.57446
0.0 136.57446 62.0841 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 145.11037
0.0 145.11037 58.43286 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 153.64627
0.0 153.64627 38.95235 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 162.18217
0.0 162.18217 16.40236 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 3.2822 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 27305 42082 a
currentpoint initclip moveto

27305 42082 a 4005 42082 a
 currentpoint currentpoint translate 1 0.73485 div 1 0.73485 div scale
neg exch neg exch translate
 4005 42082 a 21791 43027 45
13000 v 23164 43027 V 3296 43071 19912 45 v 3296 56070
45 13000 v 4005 55125 a
 currentpoint currentpoint translate 0.73485 0.73485 scale neg exch
neg exch translate
 4005 55125 a 4438 55125 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 206.56885 a add def
/d 0.0 a add neg def /h 136.57199 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 4438
55125 a 6517 53550 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 187.78989  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 187.78989  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 122.34476  def /dT 1118818 abs 65536 div viceversa
{ neg } if def /DT 2. abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 8.5359  mul cntTick add
def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 8.5359  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 122.34476  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 122.34476  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 187.78989  def /dT 1864793 abs 65536 div viceversa
{ neg } if def /DT 0.1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 284.52756  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 284.52756  mul cntTick add def x abs MinValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto }{ exit }
ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW
subTColor subLSstroke grestore } if showOrigin { gsave cntTick tickstart
exch moveto cntTick tickend exch lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 5272 53836 a Fj(0)4540 50686
y(0)p Ff(:)p Fj(1)4540 47536 y(0)p Ff(:)p Fj(2)4540 44386
y(0)p Ff(:)p Fj(3)4540 41236 y(0)p Ff(:)p Fj(4)6282 54896
y(0)1420 b(2)f(4)h(6)g(8)1185 b(10)949 b(12)h(14)g(16)g(18)g(20)6517
53550 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 6517 53550 a 6517 53550 a
tx@Dict begin  { 187.78989 122.34476 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 6517 53550 a 6517 53550
a
tx@Dict begin  { 5.0 6.51384 8.33331 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 6517 53550 a 6156 54011 a Fn(k)6517 53550 y
tx@Dict begin  PutEnd  end
 6517 53550
a 6517 53550 a
tx@Dict begin  PutEnd  end
 6517 53550 a 6517 53550 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 6517 53550 a
6517 53550 a
tx@Dict begin  { 0.0 0.0 pop 187.78989 122.34476 exch pop } PutCoor
PutBegin  end
 6517 53550 a 6517 53550 a
tx@Dict begin  { 5.0 51.35863 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 6517 53550 a 3675
53882 a Fn(P)181 b Fm(\()p Fn(X)473 b Fm(=)369 b Fn(k)45
b Fm(\))6517 53550 y
tx@Dict begin  PutEnd  end
 6517 53550 a 6517 53550 a
tx@Dict begin  PutEnd  end
 6517 53550
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 0.0 0.0
0.0 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha  fill
 grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 8.5359 0.0
8.5359 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 17.07181
0.0 17.07181 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 25.60771
0.0 25.60771 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 34.14362
0.0 34.14362 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 42.67952
0.0 42.67952 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 51.21542
0.0 51.21542 1.3806 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 59.75133
0.0 59.75133 4.14183 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 68.28723
0.0 68.28723 10.09843 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 76.82314
0.0 76.82314 20.2012 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 85.35904
0.0 85.35904 33.33005 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 93.89494
0.0 93.89494 45.45163 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 102.43085
0.0 102.43085 51.13039 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 110.96675
0.0 110.96675 47.19695 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 119.50266
0.0 119.50266 35.39662 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 128.03856
0.0 128.03856 21.23883 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 136.57446
0.0 136.57446 9.95515 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 145.11037
0.0 145.11037 3.5123 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 153.64627
0.0 153.64627 0.87698 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 162.18217
0.0 162.18217 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
27305 55125 a
currentpoint initclip moveto
 27305 55125 a 4005 55125 a
 currentpoint currentpoint translate 1 0.73485 div 1 0.73485 div scale
neg exch neg exch translate
 4005 55125 a
21791 56070 45 13000 v 23164 56070 V 3296 56114 19912
45 v 24758 16984 20904 45 v 24758 29983 45 13000 v 25466
29038 a
 currentpoint currentpoint translate 0.73485 0.73485 scale neg exch
neg exch translate
 25466 29038 a 25900 29038 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 206.56885 a add def
/d 0.0 a add neg def /h 136.57199 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 25900 29038 a 27979
27463 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 187.78989  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 187.78989  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 122.34476  def /dT 1118818 abs 65536 div viceversa
{ neg } if def /DT 2. abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 8.5359  mul cntTick add
def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 8.5359  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 122.34476  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 122.34476  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 187.78989  def /dT 1864793 abs 65536 div viceversa
{ neg } if def /DT 0.1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 284.52756  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 284.52756  mul cntTick add def x abs MinValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto }{ exit }
ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW
subTColor subLSstroke grestore } if showOrigin { gsave cntTick tickstart
exch moveto cntTick tickend exch lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
26734 27749 a Fj(0)26001 24599 y(0)p Ff(:)p Fj(1)26001
21449 y(0)p Ff(:)p Fj(2)26001 18299 y(0)p Ff(:)p Fj(3)26001
15150 y(0)p Ff(:)p Fj(4)27744 28809 y(0)1419 b(2)h(4)g(6)g(8)1184
b(10)950 b(12)g(14)f(16)h(18)g(20)27979 27463 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 27979
27463 a 27979 27463 a
tx@Dict begin  { 187.78989 122.34476 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 27979 27463 a 27979 27463 a
tx@Dict begin  { 5.0 6.51384 8.33331 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 27979
27463 a 27618 27925 a Fn(k)27979 27463 y
tx@Dict begin  PutEnd  end
 27979 27463
a 27979 27463 a
tx@Dict begin  PutEnd  end
 27979 27463 a 27979 27463 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 27979 27463
a 27979 27463 a
tx@Dict begin  { 0.0 0.0 pop 187.78989 122.34476 exch pop } PutCoor
PutBegin  end
 27979 27463 a 27979 27463 a
tx@Dict begin  { 5.0 51.35863 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 27979 27463
a 25136 27795 a Fn(P)181 b Fm(\()p Fn(X)474 b Fm(=)368
b Fn(k)45 b Fm(\))27979 27463 y
tx@Dict begin  PutEnd  end
 27979 27463 a 27979 27463
a
tx@Dict begin  PutEnd  end
 27979 27463 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 0.0 0.0
0.0 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha  fill
 grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 8.5359 0.0
8.5359 1.945 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 17.07181
0.0 17.07181 7.92331 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 25.60771
0.0 25.60771 20.37486 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 34.14362
0.0 34.14362 37.1072 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 42.67952
0.0 42.67952 50.8916 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 51.21542
0.0 51.21542 54.52547 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 59.75133
0.0 59.75133 46.73674 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 68.28723
0.0 68.28723 32.54857 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 76.82314
0.0 76.82314 18.59918 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 85.35904
0.0 85.35904 8.76991 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 93.89494
0.0 93.89494 3.4168 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 102.43085
0.0 102.43085 1.0984 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
48766 29038 a
currentpoint initclip moveto
 48766 29038 a 25466 29038 a
 currentpoint currentpoint translate 1 0.73485 div 1 0.73485 div scale
neg exch neg exch translate
 25466 29038
a 43252 29983 45 13000 v 45618 29983 V 24758 30027 20904
45 v 24758 43027 45 13000 v 25466 42082 a
 currentpoint currentpoint translate 0.73485 0.73485 scale neg exch
neg exch translate
 25466 42082
a 25900 42082 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 206.56885 a add def
/d 0.0 a add neg def /h 136.57199 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 25900 42082 a 27979 40507 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 187.78989  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 187.78989  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 122.34476  def /dT 1118818 abs 65536 div viceversa
{ neg } if def /DT 2. abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 8.5359  mul cntTick add
def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 8.5359  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 122.34476  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 122.34476  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 187.78989  def /dT 1864793 abs 65536 div viceversa
{ neg } if def /DT 0.1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 284.52756  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 284.52756  mul cntTick add def x abs MinValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto }{ exit }
ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW
subTColor subLSstroke grestore } if showOrigin { gsave cntTick tickstart
exch moveto cntTick tickend exch lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 26734 40792 a
Fj(0)26001 37642 y(0)p Ff(:)p Fj(1)26001 34493 y(0)p
Ff(:)p Fj(2)26001 31343 y(0)p Ff(:)p Fj(3)26001 28193
y(0)p Ff(:)p Fj(4)27744 41852 y(0)1419 b(2)h(4)g(6)g(8)1184
b(10)950 b(12)g(14)f(16)h(18)g(20)27979 40507 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 27979
40507 a 27979 40507 a
tx@Dict begin  { 187.78989 122.34476 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 27979 40507 a 27979 40507 a
tx@Dict begin  { 5.0 6.51384 8.33331 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 27979
40507 a 27618 40968 a Fn(k)27979 40507 y
tx@Dict begin  PutEnd  end
 27979 40507
a 27979 40507 a
tx@Dict begin  PutEnd  end
 27979 40507 a 27979 40507 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 27979 40507
a 27979 40507 a
tx@Dict begin  { 0.0 0.0 pop 187.78989 122.34476 exch pop } PutCoor
PutBegin  end
 27979 40507 a 27979 40507 a
tx@Dict begin  { 5.0 51.35863 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 27979 40507
a 25136 40839 a Fn(P)181 b Fm(\()p Fn(X)474 b Fm(=)368
b Fn(k)45 b Fm(\))27979 40507 y
tx@Dict begin  PutEnd  end
 27979 40507 a 27979 40507
a
tx@Dict begin  PutEnd  end
 27979 40507 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 102.43085
0.0 102.43085 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 110.96675
0.0 110.96675 0.56006 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 119.50266
0.0 119.50266 2.52243 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 128.03856
0.0 128.03856 9.0825 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 136.57446
0.0 136.57446 25.54565 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 145.11037
0.0 145.11037 54.09566 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 153.64627
0.0 153.64627 81.1435 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 162.18217
0.0 162.18217 76.8714 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 48766 42082 a
currentpoint initclip moveto
 48766 42082 a
25466 42082 a
 currentpoint currentpoint translate 1 0.73485 div 1 0.73485 div scale
neg exch neg exch translate
 25466 42082 a 43252 43027 45 13000 v 1 0 0
TeXcolorrgb 43961 36859 a Fi(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 45618 43027 V 24758 43071
20904 45 v 24758 56070 45 13000 v 25466 55125 a
 currentpoint currentpoint translate 0.73485 0.73485 scale neg exch
neg exch translate
 25466
55125 a 25900 55125 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 206.56885 a add def
/d 0.0 a add neg def /h 136.57199 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 25900 55125 a 27979 53550 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 187.78989  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 187.78989  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 122.34476  def /dT 1118818 abs 65536 div viceversa
{ neg } if def /DT 2. abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 8.5359  mul cntTick add
def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 8.5359  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 122.34476  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 122.34476  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 187.78989  def /dT 1864793 abs 65536 div viceversa
{ neg } if def /DT 0.1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 284.52756  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 284.52756  mul cntTick add def x abs MinValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto }{ exit }
ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW
subTColor subLSstroke grestore } if showOrigin { gsave cntTick tickstart
exch moveto cntTick tickend exch lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 26734 53836 a
Fj(0)26001 50686 y(0)p Ff(:)p Fj(1)26001 47536 y(0)p
Ff(:)p Fj(2)26001 44386 y(0)p Ff(:)p Fj(3)26001 41236
y(0)p Ff(:)p Fj(4)27744 54896 y(0)1419 b(2)h(4)g(6)g(8)1184
b(10)950 b(12)g(14)f(16)h(18)g(20)27979 53550 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 27979
53550 a 27979 53550 a
tx@Dict begin  { 187.78989 122.34476 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 27979 53550 a 27979 53550 a
tx@Dict begin  { 5.0 6.51384 8.33331 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 27979
53550 a 27618 54011 a Fn(k)27979 53550 y
tx@Dict begin  PutEnd  end
 27979 53550
a 27979 53550 a
tx@Dict begin  PutEnd  end
 27979 53550 a 27979 53550 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 27979 53550
a 27979 53550 a
tx@Dict begin  { 0.0 0.0 pop 187.78989 122.34476 exch pop } PutCoor
PutBegin  end
 27979 53550 a 27979 53550 a
tx@Dict begin  { 5.0 51.35863 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 27979 53550
a 25136 53882 a Fn(P)181 b Fm(\()p Fn(X)474 b Fm(=)368
b Fn(k)45 b Fm(\))27979 53550 y
tx@Dict begin  PutEnd  end
 27979 53550 a 27979 53550
a
tx@Dict begin  PutEnd  end
 27979 53550 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 0.0 0.0
0.0 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha  fill
 grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 8.5359 0.0
8.5359 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 17.07181
0.0 17.07181 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 25.60771
0.0 25.60771 0.30824 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 34.14362
0.0 34.14362 1.31548 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 42.67952
0.0 42.67952 4.20695 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 51.21542
0.0 51.21542 10.51956 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 59.75133
0.0 59.75133 21.03479 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 68.28723
0.0 68.28723 34.18098 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 76.82314
0.0 76.82314 45.57755 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 85.35904
0.0 85.35904 50.13182 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 93.89494
0.0 93.89494 45.57755 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 102.43085
0.0 102.43085 34.18098 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 110.96675
0.0 110.96675 21.03479 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 119.50266
0.0 119.50266 10.51956 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 128.03856
0.0 128.03856 4.20695 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 136.57446
0.0 136.57446 1.31548 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 145.11037
0.0 145.11037 0.30824 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 153.64627
0.0 153.64627 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 162.18217
0.0 162.18217 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 48766 55125 a
currentpoint initclip moveto
 48766 55125 a
25466 55125 a
 currentpoint currentpoint translate 1 0.73485 div 1 0.73485 div scale
neg exch neg exch translate
 25466 55125 a 43252 56070 45 13000 v 45618
56070 V 24758 56114 20904 45 v 47992 4800 a Fh(___/1)p
1 0 0 TeXcolorrgb 47905 6792 a Fg(WS)369 b(3.2)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 60142
54804 45 v 0 TeXcolorgray 24746 81281 a Fo(2)p 0 TeXcolorgray
eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fp(WS)759 b(3.2)h(-)g(3)f(Kennzahlen)f(der)h
(Binomialv)-60 b(erteilung)757 b(-)j(O)-60 b(A)760 b(-)g(BI-)-2331
4515 y(FIE)p 0 TeXcolorgray -741 7823 a Fo(3.)p 0 TeXcolorgray
651 w(A)-36 b(uf)472 b(einer)g(Sortieranlage)i(w)-36
b(erden)471 b(Flasc)-36 b(hen)472 b(v)-36 b(on)473 b(einem)f(Scanner)g
(un)-36 b(tersuc)g(h)g(t)470 b(und)h(es)874 9815 y(wird)311
b(die)g(Art)f(des)g(Kunststo\033es)h(ermittelt.)g(95)217
b(\045)311 b(der)g(Flasc)-36 b(hen)310 b(w)-36 b(erden)310
b(ric)-36 b(h)g(tig)311 b(erkann)-36 b(t)921 11806 y(und)482
b(in)g(die)h(b)36 b(ereitgestellten)483 b(Beh\344lter)g(einsortiert.)g
(Die)g(W)-108 b(erte)483 b(der)f(Zufallsv)-72 b(ariablen)921
13798 y Fn(X)578 b Fo(b)36 b(esc)-36 b(hreib)36 b(en)473
b(die)h(Anzahl)f(der)g(falsc)-36 b(hen)474 b(En)-36 b(tsc)g(heidungen)
472 b(b)36 b(ei)474 b(einem)g(Stic)-36 b(hprob)36 b(en-)921
15790 y(umfang)434 b(v)-36 b(on)434 b(500)g(St\374c)-36
b(k.)434 b(V)-108 b(erw)-36 b(enden)432 b(Sie)h(die)h(Binomialv)-36
b(erteilung)435 b(als)f(Mo)36 b(dell.)921 20328 y(Berec)-36
b(hne)390 b(den)f(Erw)-36 b(artungsw)g(ert)390 b(und)f(die)i
(Standardab)-36 b(w)g(eic)g(h)g(ung)388 b(f\374r)j(die)f(Zufallsv)-72
b(aria-)921 22320 y(ble)433 b Fn(X)104 b Fo(.)p 1 0 0
TeXcolorrgb 921 26857 a Fn(\026)368 b Fm(=)h Fn(n)296
b Fk(\001)f Fn(p)369 b Fm(=)f(500)296 b Fk(\001)g Fm(0)p
Fn(;)p Fm(05)370 b(=)f(25)921 31394 y Fn(\033)417 b Fm(=)3458
30060 y Fl(q)p 4564 30060 7287 45 v 4564 31394 a Fn(n)296
b Fk(\001)f Fn(p)g Fk(\001)g Fm(\(1)h Fk(\000)f Fn(p)p
Fm(\))369 b(=)13600 30440 y Fk(p)p 14707 30440 8495 54
v 954 x Fm(500)296 b Fk(\001)g Fm(0)p Fn(;)p Fm(05)g
Fk(\001)f Fm(0)p Fn(;)p Fm(95)371 b(=)d(4)p Fn(;)p Fm(8734)921
35931 y Fo(L\366sungssc)-36 b(hl\374ssel:)353 b(Die)h(A)-36
b(ufgab)36 b(e)353 b(gilt)h(n)-36 b(ur)352 b(dann)g(als)h(ric)-36
b(h)g(tig)353 b(gel\366st,)h(w)-36 b(enn)353 b(b)36 b(eide)353
b(W)-108 b(erte)921 37923 y(ric)-36 b(h)g(tig)433 b(b)36
b(erec)-36 b(hnet)433 b(sind)g(und)f Fn(\033)482 b Fo(im)434
b(L\366sungsin)-36 b(terv)-72 b(all)433 b Fm([)8 b(4)p
Fn(;)p Fm(8)435 b(;)221 b(4)p Fn(;)p Fm(9])436 b Fo(liegt.)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
7823 a Fh(___/1)p 1 0 0 TeXcolorrgb 47905 9815 a Fg(WS)369
b(3.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 41731 54804 45 v 0 TeXcolorgray 24746 81281 a Fo(3)p
0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fp(WS)717 b(3.2)g(-)g(4)h(Flasc)-60
b(hensortieranlage)714 b(-)k(O)-60 b(A)718 b(-)f(BIFIE)p
0 TeXcolorgray -741 4800 a Fo(4.)p 0 TeXcolorgray 651
w(A)-36 b(uf)390 b(einer)g(Sortieranlage)h(w)-36 b(erden)389
b(500)i(Flasc)-36 b(hen)390 b(v)-36 b(on)390 b(einem)g(Scanner)f(un)-36
b(tersuc)g(h)g(t)388 b(\025)i(es)874 6792 y(wird)369
b(die)h(Art)f(des)g(Kunststo\033es)f(ermittelt.)i Fn(p)221
b Fm(\045)369 b Fo(der)g(Flasc)-36 b(hen)369 b(w)-36
b(erden)369 b(ric)-36 b(h)g(tig)369 b(erkann)-36 b(t)921
8784 y(und)338 b(in)h(die)g(b)36 b(ereitgestellten)339
b(Beh\344lter)g(einsortiert.)h(Die)f(W)-108 b(erte)339
b(der)f(binomialv)-36 b(erteilten)921 10776 y(Zufallsv)-72
b(ariablen)426 b Fn(X)530 b Fo(b)36 b(esc)-36 b(hreib)36
b(en)424 b(die)g(Anzahl)h Fn(k)470 b Fo(der)424 b(falsc)-36
b(hen)425 b(En)-36 b(tsc)g(heidungen)423 b(b)36 b(eim)887
12768 y(v)-36 b(orgegeb)36 b(enen)434 b(Stic)-36 b(hprob)36
b(en)-36 b(umfang.)921 17305 y(Berec)g(hne)319 b(mithilfe)h(der)g
(gegeb)36 b(enen)319 b(T)-108 b(ab)36 b(elle)321 b(die)e(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit)320 b Fn(P)181 b Fm(\(22)369
b Fn(<)g(X)474 b Fk(\024)369 b Fm(27\))921 19297 y Fo(und)432
b(markiere)j(diese)e(in)h(der)f(Gra\034k.)921 58875 y
 currentpoint currentpoint translate 0.95947 0.95947 scale neg exch
neg exch translate

921 58875 a 1788 58875 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 278.24278 a add def
/d 0.0 a add neg def /h 347.62756 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1788 58875 a 4274 56419 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 255.78207  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 255.78207  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 325.44228  def /dT 745860 abs 65536 div viceversa
{ neg } if def /DT 2. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 5.69046  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 5.69046  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 325.44228
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 255.78207
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 325.44228  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 325.44228  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 255.78207  def /dT 1863655 abs 65536 div viceversa
{ neg } if def /DT 0.01 abs viceversa { neg } if def /subTNo 2 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0
0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 2845.27559  mul cntTick add def x abs MaxValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet
exch def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add {
/dx exch def /x dx log OffSet add 2845.27559  mul cntTick add def x
abs MinValue abs le { false { x minTickline exch moveto x maxTickline
exch lineto } { x tickstart STsize mul exch moveto x tickend STsize
mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth SLW
subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 325.44228
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 255.78207
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3029 56704 a Fj(0)1827
53557 y(0)p Ff(:)p Fj(01)1827 50409 y(0)p Ff(:)p Fj(02)1827
47261 y(0)p Ff(:)p Fj(03)1827 44113 y(0)p Ff(:)p Fj(04)1827
40965 y(0)p Ff(:)p Fj(05)1827 37817 y(0)p Ff(:)p Fj(06)1827
34669 y(0)p Ff(:)p Fj(07)1827 31521 y(0)p Ff(:)p Fj(08)1827
28374 y(0)p Ff(:)p Fj(09)1827 25226 y(0)p Ff(:)p Fj(10)1827
22078 y(0)p Ff(:)p Fj(11)4039 57765 y(0)790 b(2)g(4)g(6)f(8)555
b(10)320 b(12)g(14)f(16)h(18)g(20)g(22)g(24)g(26)f(28)h(30)g(32)g(34)g
(36)g(38)f(40)h(42)4274 56419 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 4274 56419 a 4274 56419
a
tx@Dict begin  { 255.78207 325.44228 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 4274 56419 a 4274 56419 a
tx@Dict begin  { 5.0 6.51384 8.33331 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 4274 56419 a 3913 56880 a
Fn(k)4274 56419 y
tx@Dict begin  PutEnd  end
 4274 56419 a 4274 56419 a
tx@Dict begin  PutEnd  end
 4274 56419
a 4274 56419 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 4274 56419 a 4274 56419 a
tx@Dict begin  { 0.0 0.0 pop 255.78207 325.44228 exch pop } PutCoor
PutBegin  end
 4274 56419 a
4274 56419 a
tx@Dict begin  { 5.0 51.35863 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 4274 56419 a 1432 56751 a Fn(P)181 b Fm(\()p
Fn(X)473 b Fm(=)369 b Fn(k)45 b Fm(\))4274 56419 y
tx@Dict begin  PutEnd  end
 4274
56419 a 4274 56419 a
tx@Dict begin  PutEnd  end
 4274 56419 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true -2.84523 0.0 2.84523 0.0 0 Frame  gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2.84523 0.0 8.53569 0.0 0 Frame  gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 8.53569 0.0 14.22615 0.0 0 Frame  gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 14.22615 0.0 19.91661 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 19.91661 0.0 25.60707 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 25.60707 0.0 31.29753 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 31.29753 0.0 36.98799 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 36.98799 0.0 42.67845 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 42.67845 0.0 48.36891 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 48.36891 0.0 54.05937 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 54.05937 0.0 59.74983 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 59.74983 0.0 65.44029 0.73805 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 65.44029 0.0 71.13075 4.16788 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 71.13075 0.0 76.82121 8.24893 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 76.82121 0.0 82.51167 15.10857 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 82.51167 0.0 88.20213 25.74536 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 88.20213 0.0 93.8926 41.07101 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 93.8926 0.0 99.58305 61.5197 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 99.58305 0.0 105.27351 86.91774 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 105.27351 0.0 110.96397 116.0061 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 110.96397 0.0 116.65443 146.8745 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 116.65443 0.0 122.3449 176.6575 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 122.3449 0.0 128.03535 202.44629 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 128.03535 0.0 133.72581 221.46225 0 Frame  gsave 1.2 SLW
0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 128.03535 0.0 133.72581 221.46225 0 Frame  gsave 1 0 0  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 133.72581 0.0 139.41628 231.66489 0 Frame  gsave 1.2 SLW
0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 133.72581 0.0 139.41628 231.66489 0 Frame  gsave 1 0 0  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 139.41628 0.0 145.10674 232.14246 0 Frame  gsave 1.2 SLW
0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 139.41628 0.0 145.10674 232.14246 0 Frame  gsave 1 0 0  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 145.10674 0.0 150.7972 223.19887 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 145.10674 0.0 150.7972 223.19887 0 Frame  gsave 1 0 0  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 150.7972 0.0 156.48766 206.22343 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 150.7972 0.0 156.48766 206.22343 0 Frame  gsave 1 0 0  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 156.48766 0.0 162.17812 183.3869 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 162.17812 0.0 167.86858 157.07713 0 Frame  gsave 1.2 SLW
0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 167.86858 0.0 173.55904 129.81223 0 Frame  gsave 1.2 SLW
0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 173.55904 0.0 179.2495 103.58928 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 179.2495 0.0 184.93996 79.88445 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 184.93996 0.0 190.63042 59.65283 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 190.63042 0.0 196.32088 43.11154 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 196.32088 0.0 202.01134 30.21715 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 202.01134 0.0 207.7018 20.5355 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 207.7018 0.0 213.39226 13.54561 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 213.39226 0.0 219.08272 8.68309 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 219.08272 0.0 224.77318 5.42693 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 224.77318 0.0 230.46364 3.29956 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 230.46364 0.0 236.1541 1.51953 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 236.1541 0.0 241.84456 0.73805 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 241.84456 0.0 247.53502 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 247.53502 0.0 253.22548 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 253.22548 0.0 258.91594 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 258.91594 0.0 264.6064 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 264.6064 0.0 270.29686 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 270.29686 0.0 275.98732 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 275.98732 0.0 281.67778 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 281.67778 0.0 287.36824 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 287.36824 0.0 293.0587 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 293.0587 0.0 298.74916 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 298.74916 0.0 304.43962 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 304.43962 0.0 310.13008 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 310.13008 0.0 315.82054 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 315.82054 0.0 321.511 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 321.511 0.0 327.20146 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 327.20146 0.0 332.89192 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 332.89192 0.0 338.58238 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 338.58238 0.0 344.27284 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 344.27284 0.0 349.9633 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 349.9633 0.0 355.65376 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 355.65376 0.0 361.34422 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 361.34422 0.0 367.03468 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 367.03468 0.0 372.72514 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 372.72514 0.0 378.4156 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 378.4156 0.0 384.10606 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 384.10606 0.0 389.79652 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 389.79652 0.0 395.48698 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 395.48698 0.0 401.17744 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 401.17744 0.0 406.8679 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 406.8679 0.0 412.55836 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 412.55836 0.0 418.24883 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 418.24883 0.0 423.93929 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 423.93929 0.0 429.62975 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 429.62975 0.0 435.3202 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 435.3202 0.0 441.01067 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 441.01067 0.0 446.70113 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 446.70113 0.0 452.39159 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 452.39159 0.0 458.08205 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 458.08205 0.0 463.7725 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 463.7725 0.0 469.46297 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 469.46297 0.0 475.15343 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 475.15343 0.0 480.84389 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 480.84389 0.0 486.53435 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 486.53435 0.0 492.22481 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 492.22481 0.0 497.91527 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 497.91527 0.0 503.60573 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 503.60573 0.0 509.29619 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 509.29619 0.0 514.98665 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 514.98665 0.0 520.67711 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 520.67711 0.0 526.36757 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 526.36757 0.0 532.05803 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 532.05803 0.0 537.74849 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 537.74849 0.0 543.43895 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 543.43895 0.0 549.12941 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 549.12941 0.0 554.81987 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 554.81987 0.0 560.51033 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 560.51033 0.0 566.20079 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 566.20079 0.0 571.89125 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 571.89125 0.0 577.58171 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 577.58171 0.0 583.27217 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 583.27217 0.0 588.96263 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 588.96263 0.0 594.65309 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 594.65309 0.0 600.34355 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 600.34355 0.0 606.03401 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 606.03401 0.0 611.72447 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 611.72447 0.0 617.41493 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 617.41493 0.0 623.1054 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 623.1054 0.0 628.79585 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 628.79585 0.0 634.48631 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 634.48631 0.0 640.17677 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 640.17677 0.0 645.86723 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 645.86723 0.0 651.5577 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 651.5577 0.0 657.24815 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 657.24815 0.0 662.93861 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 662.93861 0.0 668.62907 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 668.62907 0.0 674.31953 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 674.31953 0.0 680.01 0.0 0 Frame  gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 680.01 0.0 685.70045 0.0 0 Frame  gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 685.70045 0.0 691.39091 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 691.39091 0.0 697.08138 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 697.08138 0.0 702.77184 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 702.77184 0.0 708.4623 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 708.4623 0.0 714.15276 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 714.15276 0.0 719.84322 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 719.84322 0.0 725.53368 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 725.53368 0.0 731.22414 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 731.22414 0.0 736.9146 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 736.9146 0.0 742.60506 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 742.60506 0.0 748.29552 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 748.29552 0.0 753.98598 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 753.98598 0.0 759.67644 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 759.67644 0.0 765.3669 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 765.3669 0.0 771.05736 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 771.05736 0.0 776.74782 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 776.74782 0.0 782.43828 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 782.43828 0.0 788.12874 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 788.12874 0.0 793.8192 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 793.8192 0.0 799.50966 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 799.50966 0.0 805.20012 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 805.20012 0.0 810.89058 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 810.89058 0.0 816.58104 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 816.58104 0.0 822.2715 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 822.2715 0.0 827.96196 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 827.96196 0.0 833.65242 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 833.65242 0.0 839.34288 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 839.34288 0.0 845.03334 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 845.03334 0.0 850.7238 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 850.7238 0.0 856.41426 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 856.41426 0.0 862.10472 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 862.10472 0.0 867.79518 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 867.79518 0.0 873.48564 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 873.48564 0.0 879.1761 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 879.1761 0.0 884.86656 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 884.86656 0.0 890.55702 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 890.55702 0.0 896.24748 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 896.24748 0.0 901.93794 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 901.93794 0.0 907.6284 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 907.6284 0.0 913.31886 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 913.31886 0.0 919.00932 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 919.00932 0.0 924.69978 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 924.69978 0.0 930.39024 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 930.39024 0.0 936.0807 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 936.0807 0.0 941.77116 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 941.77116 0.0 947.46162 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 947.46162 0.0 953.15208 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 953.15208 0.0 958.84254 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 958.84254 0.0 964.533 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 964.533 0.0 970.22346 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 970.22346 0.0 975.91393 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 975.91393 0.0 981.60439 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 981.60439 0.0 987.29485 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 987.29485 0.0 992.9853 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 992.9853 0.0 998.67577 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 998.67577 0.0 1004.36623 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1004.36623 0.0 1010.05669 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1010.05669 0.0 1015.74715 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1015.74715 0.0 1021.4376 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1021.4376 0.0 1027.12807 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1027.12807 0.0 1032.81853 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1032.81853 0.0 1038.50899 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1038.50899 0.0 1044.19945 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1044.19945 0.0 1049.88991 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1049.88991 0.0 1055.58037 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1055.58037 0.0 1061.27083 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1061.27083 0.0 1066.96129 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1066.96129 0.0 1072.65175 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1072.65175 0.0 1078.34221 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1078.34221 0.0 1084.03267 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1084.03267 0.0 1089.72313 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1089.72313 0.0 1095.41359 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1095.41359 0.0 1101.10405 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1101.10405 0.0 1106.79451 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1106.79451 0.0 1112.48497 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1112.48497 0.0 1118.17543 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1118.17543 0.0 1123.86589 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1123.86589 0.0 1129.55635 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1129.55635 0.0 1135.24681 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1135.24681 0.0 1140.93727 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1140.93727 0.0 1146.62773 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1146.62773 0.0 1152.31819 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1152.31819 0.0 1158.00865 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1158.00865 0.0 1163.69911 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1163.69911 0.0 1169.38957 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1169.38957 0.0 1175.08003 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1175.08003 0.0 1180.7705 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1180.7705 0.0 1186.46095 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1186.46095 0.0 1192.15141 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1192.15141 0.0 1197.84187 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1197.84187 0.0 1203.53233 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1203.53233 0.0 1209.2228 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1209.2228 0.0 1214.91325 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1214.91325 0.0 1220.60371 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1220.60371 0.0 1226.29417 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1226.29417 0.0 1231.98463 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1231.98463 0.0 1237.6751 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1237.6751 0.0 1243.36555 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1243.36555 0.0 1249.05602 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1249.05602 0.0 1254.74648 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1254.74648 0.0 1260.43694 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1260.43694 0.0 1266.1274 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1266.1274 0.0 1271.81786 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1271.81786 0.0 1277.50832 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1277.50832 0.0 1283.19878 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1283.19878 0.0 1288.88924 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1288.88924 0.0 1294.5797 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1294.5797 0.0 1300.27016 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1300.27016 0.0 1305.96062 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1305.96062 0.0 1311.65108 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1311.65108 0.0 1317.34154 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1317.34154 0.0 1323.032 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1323.032 0.0 1328.72246 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1328.72246 0.0 1334.41292 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1334.41292 0.0 1340.10338 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1340.10338 0.0 1345.79384 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1345.79384 0.0 1351.4843 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1351.4843 0.0 1357.17476 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1357.17476 0.0 1362.86522 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1362.86522 0.0 1368.55568 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1368.55568 0.0 1374.24614 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1374.24614 0.0 1379.9366 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1379.9366 0.0 1385.62706 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1385.62706 0.0 1391.31752 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1391.31752 0.0 1397.00798 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1397.00798 0.0 1402.69844 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1402.69844 0.0 1408.3889 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1408.3889 0.0 1414.07936 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1414.07936 0.0 1419.76982 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1419.76982 0.0 1425.46028 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1425.46028 0.0 1431.15074 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1431.15074 0.0 1436.8412 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1436.8412 0.0 1442.53166 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1442.53166 0.0 1448.22212 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1448.22212 0.0 1453.91258 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1453.91258 0.0 1459.60304 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1459.60304 0.0 1465.2935 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1465.2935 0.0 1470.98396 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1470.98396 0.0 1476.67442 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1476.67442 0.0 1482.36488 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1482.36488 0.0 1488.05534 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1488.05534 0.0 1493.7458 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1493.7458 0.0 1499.43626 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1499.43626 0.0 1505.12672 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1505.12672 0.0 1510.81718 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1510.81718 0.0 1516.50764 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1516.50764 0.0 1522.1981 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1522.1981 0.0 1527.88857 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1527.88857 0.0 1533.57903 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1533.57903 0.0 1539.26949 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1539.26949 0.0 1544.95995 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1544.95995 0.0 1550.6504 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1550.6504 0.0 1556.34087 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1556.34087 0.0 1562.03133 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1562.03133 0.0 1567.72179 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1567.72179 0.0 1573.41225 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1573.41225 0.0 1579.1027 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1579.1027 0.0 1584.79317 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1584.79317 0.0 1590.48363 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1590.48363 0.0 1596.17409 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1596.17409 0.0 1601.86455 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1601.86455 0.0 1607.55501 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1607.55501 0.0 1613.24547 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1613.24547 0.0 1618.93593 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1618.93593 0.0 1624.62639 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1624.62639 0.0 1630.31685 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1630.31685 0.0 1636.00731 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1636.00731 0.0 1641.69777 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1641.69777 0.0 1647.38823 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1647.38823 0.0 1653.07869 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1653.07869 0.0 1658.76915 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1658.76915 0.0 1664.45961 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1664.45961 0.0 1670.15007 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1670.15007 0.0 1675.84053 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1675.84053 0.0 1681.53099 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1681.53099 0.0 1687.22145 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1687.22145 0.0 1692.91191 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1692.91191 0.0 1698.60237 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1698.60237 0.0 1704.29283 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1704.29283 0.0 1709.98329 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1709.98329 0.0 1715.67375 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1715.67375 0.0 1721.36421 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1721.36421 0.0 1727.05467 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1727.05467 0.0 1732.74513 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1732.74513 0.0 1738.4356 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1738.4356 0.0 1744.12605 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1744.12605 0.0 1749.81651 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1749.81651 0.0 1755.50697 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1755.50697 0.0 1761.19743 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1761.19743 0.0 1766.8879 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1766.8879 0.0 1772.57835 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1772.57835 0.0 1778.26881 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1778.26881 0.0 1783.95927 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1783.95927 0.0 1789.64973 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1789.64973 0.0 1795.3402 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1795.3402 0.0 1801.03065 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1801.03065 0.0 1806.72112 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1806.72112 0.0 1812.41158 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1812.41158 0.0 1818.10204 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1818.10204 0.0 1823.7925 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1823.7925 0.0 1829.48296 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1829.48296 0.0 1835.17342 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1835.17342 0.0 1840.86388 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1840.86388 0.0 1846.55434 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1846.55434 0.0 1852.2448 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1852.2448 0.0 1857.93526 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1857.93526 0.0 1863.62572 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1863.62572 0.0 1869.31618 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1869.31618 0.0 1875.00664 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1875.00664 0.0 1880.6971 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1880.6971 0.0 1886.38756 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1886.38756 0.0 1892.07802 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1892.07802 0.0 1897.76848 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1897.76848 0.0 1903.45894 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1903.45894 0.0 1909.1494 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1909.1494 0.0 1914.83986 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1914.83986 0.0 1920.53032 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1920.53032 0.0 1926.22078 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1926.22078 0.0 1931.91124 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1931.91124 0.0 1937.6017 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1937.6017 0.0 1943.29216 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1943.29216 0.0 1948.98262 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1948.98262 0.0 1954.67308 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1954.67308 0.0 1960.36354 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1960.36354 0.0 1966.054 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1966.054 0.0 1971.74446 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1971.74446 0.0 1977.43492 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1977.43492 0.0 1983.12538 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1983.12538 0.0 1988.81584 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1988.81584 0.0 1994.5063 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1994.5063 0.0 2000.19676 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2000.19676 0.0 2005.88722 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2005.88722 0.0 2011.57768 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2011.57768 0.0 2017.26814 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2017.26814 0.0 2022.9586 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2022.9586 0.0 2028.64906 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2028.64906 0.0 2034.33952 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2034.33952 0.0 2040.02998 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2040.02998 0.0 2045.72044 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2045.72044 0.0 2051.4109 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2051.4109 0.0 2057.10136 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2057.10136 0.0 2062.79182 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2062.79182 0.0 2068.48228 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2068.48228 0.0 2074.17274 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2074.17274 0.0 2079.8632 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2079.8632 0.0 2085.55367 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2085.55367 0.0 2091.24413 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2091.24413 0.0 2096.93459 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2096.93459 0.0 2102.62505 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2102.62505 0.0 2108.3155 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2108.3155 0.0 2114.00597 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2114.00597 0.0 2119.69643 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2119.69643 0.0 2125.38689 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2125.38689 0.0 2131.07735 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2131.07735 0.0 2136.7678 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2136.7678 0.0 2142.45827 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2142.45827 0.0 2148.14873 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2148.14873 0.0 2153.83919 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2153.83919 0.0 2159.52965 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2159.52965 0.0 2165.22011 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2165.22011 0.0 2170.91057 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2170.91057 0.0 2176.60103 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2176.60103 0.0 2182.29149 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2182.29149 0.0 2187.98195 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2187.98195 0.0 2193.67241 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2193.67241 0.0 2199.36287 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2199.36287 0.0 2205.05333 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2205.05333 0.0 2210.74379 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2210.74379 0.0 2216.43425 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2216.43425 0.0 2222.12471 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2222.12471 0.0 2227.81517 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2227.81517 0.0 2233.50563 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2233.50563 0.0 2239.19609 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2239.19609 0.0 2244.88655 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2244.88655 0.0 2250.57701 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2250.57701 0.0 2256.26747 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2256.26747 0.0 2261.95793 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2261.95793 0.0 2267.64839 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2267.64839 0.0 2273.33885 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2273.33885 0.0 2279.02931 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2279.02931 0.0 2284.71977 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2284.71977 0.0 2290.41023 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2290.41023 0.0 2296.1007 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2296.1007 0.0 2301.79115 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2301.79115 0.0 2307.48161 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2307.48161 0.0 2313.17207 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2313.17207 0.0 2318.86253 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2318.86253 0.0 2324.553 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2324.553 0.0 2330.24345 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2330.24345 0.0 2335.93391 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2335.93391 0.0 2341.62437 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2341.62437 0.0 2347.31483 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2347.31483 0.0 2353.0053 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2353.0053 0.0 2358.69576 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2358.69576 0.0 2364.38622 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2364.38622 0.0 2370.07668 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2370.07668 0.0 2375.76714 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2375.76714 0.0 2381.4576 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2381.4576 0.0 2387.14806 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2387.14806 0.0 2392.83852 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2392.83852 0.0 2398.52898 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2398.52898 0.0 2404.21944 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2404.21944 0.0 2409.9099 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2409.9099 0.0 2415.60036 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2415.60036 0.0 2421.29082 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2421.29082 0.0 2426.98128 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2426.98128 0.0 2432.67174 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2432.67174 0.0 2438.3622 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2438.3622 0.0 2444.05266 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2444.05266 0.0 2449.74312 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2449.74312 0.0 2455.43358 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2455.43358 0.0 2461.12404 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2461.12404 0.0 2466.8145 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2466.8145 0.0 2472.50496 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2472.50496 0.0 2478.19542 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2478.19542 0.0 2483.88588 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2483.88588 0.0 2489.57634 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2489.57634 0.0 2495.2668 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2495.2668 0.0 2500.95726 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2500.95726 0.0 2506.64772 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2506.64772 0.0 2512.33818 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2512.33818 0.0 2518.02864 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2518.02864 0.0 2523.7191 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2523.7191 0.0 2529.40956 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2529.40956 0.0 2535.10002 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2535.10002 0.0 2540.79048 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2540.79048 0.0 2546.48094 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2546.48094 0.0 2552.1714 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2552.1714 0.0 2557.86186 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2557.86186 0.0 2563.55232 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2563.55232 0.0 2569.24278 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2569.24278 0.0 2574.93324 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2574.93324 0.0 2580.6237 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2580.6237 0.0 2586.31416 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2586.31416 0.0 2592.00462 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2592.00462 0.0 2597.69508 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2597.69508 0.0 2603.38554 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2603.38554 0.0 2609.076 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2609.076 0.0 2614.76646 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2614.76646 0.0 2620.45692 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2620.45692 0.0 2626.14738 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2626.14738 0.0 2631.83784 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2631.83784 0.0 2637.5283 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2637.5283 0.0 2643.21877 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2643.21877 0.0 2648.90923 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2648.90923 0.0 2654.59969 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2654.59969 0.0 2660.29015 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2660.29015 0.0 2665.9806 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2665.9806 0.0 2671.67107 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2671.67107 0.0 2677.36153 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2677.36153 0.0 2683.05199 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2683.05199 0.0 2688.74245 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2688.74245 0.0 2694.4329 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2694.4329 0.0 2700.12337 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2700.12337 0.0 2705.81383 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2705.81383 0.0 2711.50429 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2711.50429 0.0 2717.19475 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2717.19475 0.0 2722.88521 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2722.88521 0.0 2728.57567 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2728.57567 0.0 2734.26613 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2734.26613 0.0 2739.95659 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2739.95659 0.0 2745.64705 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2745.64705 0.0 2751.33751 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2751.33751 0.0 2757.02797 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2757.02797 0.0 2762.71843 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2762.71843 0.0 2768.40889 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2768.40889 0.0 2774.09935 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2774.09935 0.0 2779.78981 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2779.78981 0.0 2785.48027 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2785.48027 0.0 2791.17073 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2791.17073 0.0 2796.86119 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2796.86119 0.0 2802.55165 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2802.55165 0.0 2808.24211 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2808.24211 0.0 2813.93257 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2813.93257 0.0 2819.62303 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2819.62303 0.0 2825.31349 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2825.31349 0.0 2831.00395 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2831.00395 0.0 2836.69441 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2836.69441 0.0 2842.38487 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2842.38487 0.0 2848.07533 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 32588 58875 a
currentpoint initclip moveto
 32588 58875 a 921 58875
a
 currentpoint currentpoint translate 1 0.95947 div 1 0.95947 div scale
neg exch neg exch translate
 921 58875 a 0 TeXcolorgray 0 TeXcolorgray 36046 22699
8713 45 v 36046 24347 45 1649 v 37002 23853 a Fe(k)p
38525 24347 V 1656 w(P)154 b Fd(\()p Fe(X)394 b Fd(=)307
b Fe(k)35 b Fd(\))p 44714 24347 V 36046 24391 8713 45
v 36046 26040 45 1649 v 36754 25545 a Fg(10)p 38525 26040
V 2244 w(0,0003)p 44714 26040 V 36046 26084 8713 45 v
36046 27733 45 1649 v 36754 27238 a(11)p 38525 27733
V 2244 w(0,0007)p 44714 27733 V 36046 27777 8713 45 v
36046 29425 45 1649 v 36754 28931 a(12)p 38525 29425
V 2244 w(0,0015)p 44714 29425 V 36046 29470 8713 45 v
36046 31118 45 1649 v 36754 30624 a(13)p 38525 31118
V 2244 w(0,0029)p 44714 31118 V 36046 31162 8713 45 v
36046 32811 45 1649 v 36754 32316 a(14)p 38525 32811
V 2244 w(0,0053)p 44714 32811 V 36046 32855 8713 45 v
36046 34504 45 1649 v 36754 34009 a(15)p 38525 34504
V 2521 w(0,009)p 44714 34504 V 36046 34548 8713 45 v
36046 36196 45 1649 v 36754 35702 a(16)p 38525 36196
V 2244 w(0,0144)p 44714 36196 V 36046 36241 8713 45 v
36046 37889 45 1649 v 36754 37395 a(17)p 38525 37889
V 2244 w(0,0216)p 44714 37889 V 36046 37933 8713 45 v
36046 39582 45 1649 v 36754 39087 a(18)p 38525 39582
V 2244 w(0,0305)p 44714 39582 V 36046 39626 8713 45 v
36046 41275 45 1649 v 36754 40780 a(19)p 38525 41275
V 2244 w(0,0408)p 44714 41275 V 36046 41319 8713 45 v
36046 42967 45 1649 v 36754 42473 a(20)p 38525 42967
V 2244 w(0,0516)p 44714 42967 V 36046 43012 8713 45 v
36046 44660 45 1649 v 36754 44166 a(21)p 38525 44660
V 2244 w(0,0621)p 44714 44660 V 36046 44705 8713 45 v
36046 46353 45 1649 v 36754 45858 a(22)p 38525 46353
V 2244 w(0,0712)p 44714 46353 V 36046 46397 8713 45 v
36046 48046 45 1649 v 36754 47551 a(23)p 38525 48046
V 2244 w(0,0778)p 44714 48046 V 36046 48090 8713 45 v
36046 49739 45 1649 v 36754 49244 a(24)p 38525 49739
V 2244 w(0,0814)p 44714 49739 V 36046 49783 8713 45 v
36046 51431 45 1649 v 36754 50937 a(25)p 38525 51431
V 2244 w(0,0816)p 44714 51431 V 36046 51476 8713 45 v
36046 53124 45 1649 v 36754 52629 a(26)p 38525 53124
V 2244 w(0,0785)p 44714 53124 V 36046 53168 8713 45 v
36046 54817 45 1649 v 36754 54322 a(27)p 38525 54817
V 2244 w(0,0725)p 44714 54817 V 36046 54861 8713 45 v
36046 56510 45 1649 v 36754 56015 a(28)p 38525 56510
V 2244 w(0,0644)p 44714 56510 V 36046 56554 8713 45 v
36046 58202 45 1649 v 36754 57708 a(29)p 38525 58202
V 2244 w(0,0552)p 44714 58202 V 36046 58247 8713 45 v
36046 59895 45 1649 v 36754 59401 a(30)p 38525 59895
V 2244 w(0,0456)p 44714 59895 V 36046 59939 8713 45 v
1 0 0 TeXcolorrgb 921 63592 a Fn(P)181 b Fm(\(22)369
b Fn(<)g(X)474 b Fk(\024)369 b Fm(27\))h(=)e(0)p Fn(;)p
Fm(0778)135 b(+)g(0)p Fn(;)p Fm(0814)g(+)g(0)p Fn(;)p
Fm(0816)g(+)g(0)p Fn(;)p Fm(0785)g(+)g(0)p Fn(;)p Fm(0725)379
b(=)368 b(0)p Fn(;)p Fm(3918)j Fk(\031)e Fm(39)p Fn(;)p
Fm(2)221 b(\045)921 70121 y Fo(L\366sungssc)-36 b(hl\374ssel:)390
b(Ein)g(Punkt)g(ist)g(genau)g(dann)f(zu)h(geb)36 b(en,)390
b(w)-36 b(enn)390 b(die)g(W)-108 b(ahrsc)-36 b(heinlic)g(h-)921
72113 y(k)g(eit)434 b(ric)-36 b(h)g(tig)434 b(b)36 b(erec)-36
b(hnet)432 b(und)g(in)i(der)f(Gra\034k)g(gek)-36 b(ennzeic)g(hnet)433
b(ist.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 4800 a Fh(___/1)p 1 0 0 TeXcolorrgb 47905 6792
a Fg(WS)369 b(3.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 75846 54804 45 v 0 TeXcolorgray
24746 81281 a Fo(4)p 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fp(WS)717 b(3.2)g(-)g(5)h(Binomialv)-60
b(erteilte)715 b(Zufallsv)-120 b(ariable)715 b(-)i(O)-60
b(A)718 b(-)g(BIFIE)p 0 TeXcolorgray -741 4800 a Fo(5.)p
0 TeXcolorgray 651 w(Die)434 b(Zufallsv)-72 b(ariable)436
b Fn(X)538 b Fo(sei)434 b(binomialv)-36 b(erteilt)435
b(mit)f Fn(n)369 b Fm(=)g(8)433 b Fo(und)g Fn(p)369 b
Fm(=)f(0)p Fn(;)p Fm(25)p Fo(.)p 921 7759 50153 45 v
921 9751 45 1992 v 1629 9153 a Fn(X)p 5508 9751 V 4990
w Fo(0)p 10494 9751 V 4336 w(1)p 15479 9751 V 4335 w(2)p
20465 9751 V 4336 w(3)p 25451 9751 V 4335 w(4)p 30436
9751 V 4336 w(5)p 35422 9751 V 4336 w(6)p 40407 9751
V 4335 w(7)p 45393 9751 V 4661 w(8)p 51029 9751 V 921
9795 50153 45 v 921 11787 45 1992 v 1629 11190 a Fn(P)181
b Fm(\()p Fn(X)104 b Fm(\))p 5508 11787 V 1374 w Fo(0,1001)p
10494 11787 V 1374 w(0,2670)p 15479 11787 V 1375 w(0,3115)p
20465 11787 V 1374 w(0,2076)p 25451 11787 V 1375 w(0,0865)p
30436 11787 V 1375 w(0,0231)p 35422 11787 V 1374 w(0,0038)p
40407 11787 V 1375 w(0,0004)p 45393 11787 V 1375 w(0,00002)p
51029 11787 V 921 11831 50153 45 v 921 16634 a Fn(\026)433
b Fo(ist)h(der)f(Erw)-36 b(artungsw)g(ert,)433 b Fn(\033)482
b Fo(die)433 b(Standardab)-36 b(w)g(eic)g(h)g(ung)432
b(der)h(V)-108 b(erteilung.)921 21172 y(Berec)-36 b(hne)433
b(die)g(folgende)i(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit.)921
25709 y Fn(P)181 b Fm(\()p Fn(\026)295 b Fk(\000)g Fn(\033)417
b(<)368 b(X)474 b(<)369 b(\026)295 b Fm(+)f Fn(\033)48
b Fm(\))369 b(=)p 1 0 0 TeXcolorrgb 921 30246 a Fn(\026)f
Fm(=)h Fn(n)296 b Fk(\001)f Fn(p)369 b Fm(=)f(8)296 b
Fk(\001)f Fm(0)p Fn(;)p Fm(25)370 b(=)f(2)921 32238 y
Fn(\033)417 b Fm(=)3458 30904 y Fl(q)p 4564 30904 5681
45 v 4564 32238 a Fn(\026)295 b Fk(\001)g Fm(\(1)h Fk(\000)f
Fn(p)p Fm(\))369 b Fk(\031)g Fm(1)p Fn(;)p Fm(22)921
36776 y Fn(P)181 b Fm(\()p Fn(\026)165 b Fk(\000)g Fn(\033)416
b(<)368 b(X)474 b(<)369 b(\026)165 b Fm(+)g Fn(\033)48
b Fm(\))367 b(=)i Fn(P)181 b Fm(\(1)369 b Fn(<)f(X)474
b(<)369 b Fm(3\))g(=)g Fn(P)181 b Fm(\()p Fn(X)473 b
Fm(=)369 b(1\))165 b(+)g Fn(P)181 b Fm(\()p Fn(X)473
b Fm(=)368 b(2\))165 b(+)g Fn(P)181 b Fm(\()p Fn(X)473
b Fm(=)369 b(3\))g(=)921 38768 y(=)g(0)p Fn(;)p Fm(2670)297
b(+)e(0)p Fn(;)p Fm(3115)i(+)e(0)p Fn(;)p Fm(2076)371
b(=)d(0)p Fn(;)p Fm(7861)j(=)e(78)p Fn(;)p Fm(61)221
b(\045)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 4800 a Fh(___/1)p 1 0 0 TeXcolorrgb 47905 6792
a Fg(WS)369 b(3.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 42501 54804 45 v 0 TeXcolorgray
24746 81281 a Fo(5)p 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fp(WS)906 b(3.2)h(-)g(6)g(W)-179
b(ahrsc)-60 b(heinlic)g(hk)g(eitsv)g(erteilung)901 b(-)908
b(O)-60 b(A)907 b(-)g(Matura)-2385 4515 y(2015/16)718
b(-)f(Haupttermin)p 0 TeXcolorgray -741 7823 a Fo(6.)p
0 TeXcolorgray 651 w(Der)616 b(W)-108 b(erteb)36 b(ereic)-36
b(h)616 b(einer)g(Zufallsv)-72 b(ariablen)617 b(X)f(b)36
b(esteh)-36 b(t)615 b(aus)h(den)g(W)-108 b(erten)615
b Fn(x)41566 8022 y Fj(1)42092 7823 y Fn(;)221 b(x)43413
8022 y Fj(2)43940 7823 y Fn(;)g(x)45261 8022 y Fj(3)45787
7823 y Fo(.)921 9815 y(Man)434 b(k)-36 b(enn)g(t)434
b(die)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)434 b
Fn(P)181 b Fm(\()p Fn(X)476 b Fm(=)370 b Fn(x)25859 10014
y Fj(1)26385 9815 y Fm(\))h(=)f(0)p Fn(;)p Fm(4)p Fo(.)436
b(A)-36 b(u\377erdem)434 b(w)-36 b(ei\377)435 b(man,)g(dass)921
11806 y Fn(x)1660 12005 y Fj(3)2619 11806 y Fo(dopp)36
b(elt)433 b(so)h(w)-36 b(ahrsc)g(heinlic)g(h)434 b(wie)g
Fn(x)20643 12005 y Fj(2)21602 11806 y Fo(ist.)921 16344
y(Berec)-36 b(hne)433 b Fn(P)181 b Fm(\()p Fn(X)473 b
Fm(=)369 b Fn(x)11700 16543 y Fj(2)12226 16344 y Fm(\))433
b Fo(und)g Fn(P)181 b Fm(\()p Fn(X)473 b Fm(=)369 b Fn(x)20964
16543 y Fj(3)21490 16344 y Fm(\))p Fo(.)921 20881 y Fn(P)181
b Fm(\()p Fn(X)474 b Fm(=)368 b Fn(x)6118 21080 y Fj(2)6644
20881 y Fm(\))h(=)p 8964 20881 15749 34 v 921 25418 a
Fn(P)181 b Fm(\()p Fn(X)474 b Fm(=)368 b Fn(x)6118 25617
y Fj(3)6644 25418 y Fm(\))h(=)p 8964 25418 V 1 0 0 TeXcolorrgb
921 29956 a Fn(P)181 b Fm(\()p Fn(X)474 b Fm(=)368 b
Fn(x)6118 30155 y Fj(2)6644 29956 y Fm(\))h(=)g(0)p Fn(;)p
Fm(2)921 32501 y Fn(P)181 b Fm(\()p Fn(X)474 b Fm(=)368
b Fn(x)6118 32700 y Fj(3)6644 32501 y Fm(\))h(=)g(0)p
Fn(;)p Fm(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 7823 a Fh(___/1)p 1 0 0 TeXcolorrgb 47905 9815
a Fg(WS)g(3.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 36308 54804 45 v 0 TeXcolorgray 24746
81281 a Fo(6)p 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fp(WS)903 b(3.2)g(-)h(7)f(Erw)-60
b(artungsw)g(ert)903 b(des)g(Gewinns)f(-)i(O)-60 b(A)904
b(-)g(Matura)-2385 4515 y(2014/15)718 b(-)f(Haupttermin)p
0 TeXcolorgray -741 7823 a Fo(7.)p 0 TeXcolorgray 651
w(Bei)581 b(einem)h(Gewinnspiel)e(gibt)i(es)f(100)h(Lose.)g(Der)g
(Lospreis)e(b)36 b(etr\344gt)581 b Fc(e)798 b Fo(5.)583
b(F)-27 b(\374r)580 b(den)921 9815 y(Haupttre\033er)613
b(w)-36 b(erden)615 b Fc(e)831 b Fo(100)616 b(ausgezahlt,)g(f\374r)e
(zw)-36 b(ei)616 b(w)-36 b(eitere)615 b(T)-108 b(re\033er)614
b(w)-36 b(erden)614 b(je)h Fc(e)921 11806 y Fo(50)476
b(ausgezahlt)f(und)f(f\374r)h(f\374nf)g(w)-36 b(eitere)476
b(T)-108 b(re\033er)474 b(w)-36 b(erden)475 b(je)g Fc(e)692
b Fo(20)476 b(ausgezahlt.)g(F)-27 b(\374r)474 b(alle)874
13798 y(w)-36 b(eiteren)512 b(Lose)g(wird)f(nic)-36 b(h)g(ts)511
b(ausgezahlt.)i(Un)-36 b(ter)511 b Fb(Gewinn)578 b Fo(v)-36
b(ersteh)g(t)511 b(man)h Fb(A)-66 b(uszahlung)836 15790
y(minus)464 b(L)-66 b(ospr)g(eis)p Fo(.)921 20328 y(Berec)-36
b(hne)482 b(den)h(Erw)-36 b(artungsw)g(ert)482 b(des)h(Gewinns)g(aus)g
(der)g(Sic)-36 b(h)g(t)482 b(einer)h(P)-36 b(erson,)483
b(die)g(ein)921 22320 y(Los)434 b(kauft.)p 1 0 0 TeXcolorrgb
921 24865 a Fn(E)447 b Fm(=)4315 24342 y Fj(1)p 3844
24555 1412 45 v 3844 25323 a(100)5683 24865 y Fk(\001)296
b Fm(100)g(+)10504 24342 y Fj(2)p 10034 24555 V 10034
25323 a(100)11873 24865 y Fk(\001)f Fm(50)h(+)16043 24342
y Fj(5)p 15573 24555 V 15573 25323 a(100)17412 24865
y Fk(\001)f Fm(20)h Fk(\000)f Fm(5)370 b(=)e Fk(\000)p
Fm(2)921 29402 y Fn(E)447 b Fm(=)4079 28879 y Fj(92)p
3844 29092 V 3844 29860 a(100)5683 29402 y Fk(\001)296
b Fm(\()p Fk(\000)p Fm(5\))f(+)11248 28879 y Fj(5)p 10778
29092 V 10778 29860 a(100)12617 29402 y Fk(\001)g Fm(15)h(+)16787
28879 y Fj(2)p 16317 29092 V 16317 29860 a(100)18156
29402 y Fk(\001)f Fm(45)h(+)22326 28879 y Fj(1)p 21856
29092 V 21856 29860 a(100)23695 29402 y Fk(\001)f Fm(95)370
b(=)f Fk(\000)p Fm(2)921 33940 y Fo(Der)434 b(Erw)-36
b(artungsw)g(ert)433 b(des)g(Gewinns)g(b)36 b(etr\344gt)434
b Fc(e)650 b Fo(-2)921 38477 y(L\366sungssc)-36 b(hl\374ssel:)921
40469 y(Ein)289 b(Punkt)g(f\374r)h(die)f(ric)-36 b(h)g(tige)290
b(L\366sung,)f(w)-36 b(ob)36 b(ei)290 b(die)g(Einheit)f(Euro)g(nic)-36
b(h)g(t)289 b(angef\374hrt)g(w)-36 b(erden)921 42461
y(m)g(uss.)393 b(Der)f(W)-108 b(ert)392 b Fn(E)447 b
Fm(=)369 b(2)393 b Fo(ist)f(n)-36 b(ur)392 b(dann)f(als)i(ric)-36
b(h)g(tig)393 b(zu)f(w)-36 b(erten,)393 b(w)-36 b(enn)392
b(aus)g(der)g(An)-36 b(t)g(w)g(ort)921 44453 y(klar)609
b(herv)-36 b(orgeh)g(t,)608 b(dass)g(es)g(sic)-36 b(h)608
b(dab)36 b(ei)608 b(um)f(einen)h(V)-108 b(erlust)607
b(v)-36 b(on)609 b Fc(e)824 b Fo(2)608 b(aus)g(Sic)-36
b(h)g(t)608 b(der)921 46445 y(P)-36 b(erson,)313 b(die)g(ein)g(Los)h
(kauft,)g(handelt.)f(Die)h(A)-36 b(ufgab)36 b(e)314 b(ist)f(auc)-36
b(h)312 b(dann)h(als)h(ric)-36 b(h)g(tig)313 b(gel\366st)h(zu)874
48436 y(w)-36 b(erten,)458 b(w)-36 b(enn)458 b(b)36 b(ei)458
b(k)-36 b(orrektem)459 b(Ansatz)f(das)h(Ergebnis)f(aufgrund)f(eines)i
(Rec)-36 b(henfehlers)921 50428 y(nic)g(h)g(t)433 b(ric)-36
b(h)g(tig)433 b(ist.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 7823 a Fh(___/1)p 1 0 0 TeXcolorrgb
47905 9815 a Fg(WS)369 b(3.2)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 54162 54804 45 v 0 TeXcolorgray
24746 81281 a Fo(7)p 0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fp(WS)687 b(3.2)g(-)h(8)f(T)-179
b(ennisspiel)684 b(-)k(O)-60 b(A)688 b(-)f(Matura)g(2014/15)h(-)f
(Hauptter-)-2331 4622 y(min)p 0 TeXcolorgray -741 7929
a Fo(8.)p 0 TeXcolorgray 651 w(Stefan)335 b(und)e(Helm)-36
b(ut)335 b(spielen)g(im)g(T)-108 b(raining)335 b(5)g(S\344tze)g(T)-108
b(ennis.)335 b(Stefan)g(hat)g(eine)f(k)-36 b(onstan)g(te)921
9921 y(Gewinn)g(w)g(ahrsc)g(heinlic)g(hk)g(eit)433 b(v)-36
b(on)434 b(60)217 b(\045)434 b(f\374r)f(jeden)h(gespielten)f(Satz.)921
14458 y(Es)h(wird)f(folgender)h(W)-108 b(ert)433 b(b)36
b(erec)-36 b(hnet:)921 17159 y Fl(0)921 19151 y(@)1890
18509 y Fm(5)1890 20501 y(3)2540 17159 y Fl(1)2540 19151
y(A)3804 19439 y Fk(\001)295 b Fm(0)p Fn(;)p Fm(4)6129
18957 y Fj(3)6951 19439 y Fk(\001)g Fm(0)p Fn(;)p Fm(6)9276
18957 y Fj(2)10172 19439 y Fm(=)368 b(0)p Fn(;)p Fm(2304)921
24670 y Fo(Gib)433 b(an,)h(w)-36 b(as)434 b(dieser)f(W)-108
b(ert)434 b(im)f(Zusammenhang)g(mit)h(der)f(Angab)36
b(e)433 b(aussagt.)p 1 0 0 TeXcolorrgb 921 27216 a(Dieser)454
b(W)-108 b(ert)452 b(gibt)h(die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit)453 b(an,)g(mit)g(der)f(Helm)-36
b(ut)453 b(3)g(v)-36 b(on)453 b(5)h(S\344tzen)e(im)874
29208 y(T)-108 b(raining)434 b(gewinn)-36 b(t.)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7929
a Fh(___/1)p 1 0 0 TeXcolorrgb 47905 9921 a Fg(WS)369
b(3.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 32941 54804 45 v 0 TeXcolorgray 24746 81281 a Fo(8)p
0 TeXcolorgray eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fp(WS)579 b(3.2)g(-)g(9)h(Gewinn)e(b)60
b(eim)579 b(Gl\374c)-60 b(ksrad)579 b(-)g(O)-60 b(A)580
b(-)f(Matura)g(2014/15)-2617 4622 y(-)718 b(Neb)60 b(en)-60
b(termin)716 b(1)p 0 TeXcolorgray -741 7929 a Fo(9.)p
0 TeXcolorgray 651 w(Das)370 b(un)-36 b(ten)368 b(abgebildete)i
(Gl\374c)-36 b(ksrad)369 b(ist)g(in)h(ac)-36 b(h)g(t)369
b(gleic)-36 b(h)370 b(gro\377e)g(Sektoren)f(un)-36 b(terteilt,)369
b(die)921 9921 y(mit)585 b(gleic)-36 b(her)585 b(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit)585 b(auftreten.)h(F)-27
b(\374r)584 b(einmaliges)j(Drehen)d(des)h(Gl\374c)-36
b(ks-)921 11913 y(rades)561 b(m)-36 b(uss)560 b(ein)h(Einsatz)g(v)-36
b(on)562 b(5)217 b Fc(e)561 b Fo(gezahlt)g(w)-36 b(erden.)562
b(Die)g(Gewinne,)f(die)g(ausb)36 b(ezahlt)874 13905 y(w)-36
b(erden,)502 b(w)-36 b(enn)501 b(das)h(Gl\374c)-36 b(ksrad)501
b(im)h(en)-36 b(tsprec)g(henden)499 b(Sektor)j(stehen)f(bleibt,)h(sind)
f(auf)921 15897 y(dem)433 b(Gl\374c)-36 b(ksrad)433 b(abgebildet.)p
0 TeXcolorgray 0 TeXcolorgray 13433 40579 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 180.2418 a add def
/d 0.0 a add neg def /h 183.64253 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 13433 40579
a 10969 42916 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray   113.81097 113.81097 2 copy
moveto 85.35823 0 CLW mul sub dup 0 rmoveto 0 360 arc closepath  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 53.45352 174.16841 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 199.1692 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 174.16841 174.16841 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 113.81097 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 174.16841 53.45352 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 28.45274 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 53.45352 53.45352 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 113.81097 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 10969 42916 a
tx@Dict begin  { 128.81708 170.71646 } PutCoor PutBegin  end
 10969 42916 a
925 x Fm(5)217 b Fc(e)10969 42916 y
tx@Dict begin  PutEnd  end
 10969 42916 a 10969
42916 a
tx@Dict begin  { 158.29095 142.26372 } PutCoor PutBegin  end
 10969 42916 a 925 x Fm(0)g Fc(e)10969 42916 y
tx@Dict begin  PutEnd  end

10969 42916 a 10969 42916 a
tx@Dict begin  { 156.59038 99.5846 } PutCoor PutBegin  end
 10969 42916 a 925 x Fm(10)g
Fc(e)10969 42916 y
tx@Dict begin  PutEnd  end
 10969 42916 a 10969 42916 a
tx@Dict begin  { 126.54993 73.82404 } PutCoor PutBegin  end
 10969
42916 a 925 x Fm(0)g Fc(e)10969 42916 y
tx@Dict begin  PutEnd  end
 10969 42916 a
10969 42916 a
tx@Dict begin  { 85.35823 74.39105 } PutCoor PutBegin  end
 10969 42916 a 925 x Fm(5)g Fc(e)10969 42916
y
tx@Dict begin  PutEnd  end
 10969 42916 a 10969 42916 a
tx@Dict begin  { 51.7842 99.5846 } PutCoor PutBegin  end
 10969 42916 a 925 x Fm(0)g
Fc(e)10969 42916 y
tx@Dict begin  PutEnd  end
 10969 42916 a 10969 42916 a
tx@Dict begin  { 51.7842 139.41826 } PutCoor PutBegin  end
 10969
42916 a 925 x Fm(15)g Fc(e)10969 42916 y
tx@Dict begin  PutEnd  end
 10969 42916
a 10969 42916 a
tx@Dict begin  { 84.04013 170.71646 } PutCoor PutBegin  end
 10969 42916 a 925 x Fm(0)g Fc(e)10969
42916 y
tx@Dict begin  PutEnd  end
 10969 42916 a 33385 40579 a
currentpoint initclip moveto
 33385 40579 a 921
46555 a Fo(Das)449 b(Gl\374c)-36 b(ksrad)448 b(wird)h(einmal)g(gedreh)
-36 b(t.)448 b(Berec)-36 b(hne)448 b(den)g(en)-36 b(tsprec)g(henden)445
b(Erw)-36 b(artungs-)874 48547 y(w)g(ert)405 b(des)f(Reingewinns)h
Fn(G)g Fo(\(in)f(Euro\))g(aus)h(der)f(Sic)-36 b(h)g(t)404
b(des)g(Betreib)36 b(ers)404 b(des)h(Gl\374c)-36 b(ksrades.)921
50539 y(Der)434 b(Reingewinn)g(ist)f(die)h(Di\033erenz)g(aus)f(Einsatz)
h(und)e(A)-36 b(uszahlungsb)36 b(etrag.)p 1 0 0 TeXcolorrgb
921 53084 a Fn(G)369 b Fm(=)g(5)295 b Fk(\000)5970 51800
y Fl(\020)6764 52561 y Fj(1)p 6764 52774 471 45 v 6764
53542 a(4)7663 53084 y Fk(\001)g Fm(5)h(+)10712 52561
y Fj(1)p 10712 52774 V 10712 53542 a(8)11611 53084 y
Fk(\001)f Fm(10)h(+)15310 52561 y Fj(1)p 15310 52774
V 15310 53542 a(8)16209 53084 y Fk(\001)f Fm(15)18173
51800 y Fl(\021)19204 53084 y Fm(=)20717 52561 y Fj(5)p
20717 52774 V 20717 53542 a(8)21690 53084 y Fk(\))369
b Fn(G)g Fk(\031)434 b Fc(e)1083 b Fo(0,63)921 57621
y(L\366sungssc)-36 b(hl\374ssel:)921 59613 y(Ein)409
b(Punkt)h(f\374r)f(die)h(ric)-36 b(h)g(tige)409 b(L\366sung,)h(w)-36
b(ob)36 b(ei)410 b(die)g(Einheit)f(nic)-36 b(h)g(t)409
b(angef\374hrt)g(sein)h(m)-36 b(uss.)874 61605 y(T)-108
b(oleranzin)-36 b(terv)-72 b(all:)435 b Fm([)8 b(0)p
Fn(;)p Fm(62;)221 b(0)p Fn(;)p Fm(63])p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7929 a Fh(___/1)p
1 0 0 TeXcolorrgb 47905 9921 a Fg(WS)369 b(3.2)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 65413
54804 45 v 0 TeXcolorgray 24746 81281 a Fo(9)p 0 TeXcolorgray
eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fp(WS)1018 b(3.2)g(-)h(10)g(P)-60
b(arameter)1019 b(einer)e(Binomialv)-60 b(erteilung)1016
b(-)j(O)-60 b(A)1019 b(-)-2331 4515 y(Matura)717 b(2015/16)g(-)h(Neb)60
b(en)-60 b(termin)716 b(1)p 0 TeXcolorgray -1391 7823
a Fo(10.)p 0 TeXcolorgray 651 w(Ein)547 b(Zufallsexp)36
b(erimen)-36 b(t)548 b(wird)f(durc)-36 b(h)546 b(eine)h(binomialv)-36
b(erteilte)549 b(Zufallsv)-72 b(ariable)549 b Fn(X)652
b Fo(b)36 b(e-)921 9815 y(sc)-36 b(hrieb)36 b(en.)395
b(Diese)h(hat)f(die)h(Erfolgsw)-36 b(ahrsc)g(heinlic)g(hk)g(eit)397
b Fn(p)368 b Fm(=)h(0)p Fn(;)p Fm(36)397 b Fo(und)d(die)h(Standardab-)
874 11806 y(w)-36 b(eic)g(h)g(ung)433 b Fn(\033)417 b
Fm(=)369 b(7)p Fn(;)p Fm(2)p Fo(.)921 16344 y(Berec)-36
b(hneden)432 b(zugeh\366rigen)i(P)-36 b(arameter)433
b Fn(n)h Fo(\(Anzahl)g(der)f(V)-108 b(ersuc)-36 b(he\).)921
20881 y(n=)p 2656 20881 25197 34 v 1 0 0 TeXcolorrgb
921 23427 a Fn(n)296 b Fk(\001)f Fm(0)p Fn(;)p Fm(36)h
Fk(\001)f Fm(\(1)h Fk(\000)f Fm(0)p Fn(;)p Fm(36\))370
b(=)f(7)p Fn(;)p Fm(2)14937 22944 y Fj(2)921 25972 y
Fn(n)g Fm(=)g(225)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 7823 a Fh(___/1)p 1 0 0 TeXcolorrgb
47905 9815 a Fg(WS)g(3.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 29447 54804 45 v -2331 34875 a Fp(WS)661
b(3.2)f(-)i(11)f(Zufallsexp)60 b(erimen)-60 b(t)658 b(-)j(MC)h(-)f
(Matura)g(NT)g(2)g(15/16)p 0 TeXcolorgray -1391 38183
a Fo(11.)p 0 TeXcolorgray 651 w(Bei)436 b(einem)f(Zufallsexp)36
b(erimen)-36 b(t,)437 b(das)e(25-mal)i(wiederholt)e(wird,)h(gibt)g(es)g
(die)f(A)-36 b(usg\344nge)675 40175 y(\022)108 b(g\374nstig\020)472
b(und)f(\022ung\374nstig\020)-181 b(.)471 b(Die)i(Zufallsv)-72
b(ariable)473 b Fn(X)576 b Fo(b)36 b(esc)-36 b(hreibt,)471
b(wie)h(oft)g(dab)36 b(ei)471 b(das)921 42167 y(Ergebnis)434
b(\022)108 b(g\374nstig\020)435 b(eingetreten)e(ist.)i
Fn(X)539 b Fo(ist)434 b(binomialv)-36 b(erteilt)436 b(mit)e(dem)f(Erw)
-36 b(artungs-)874 44159 y(w)g(ert)434 b(10.)921 48696
y(Zw)-36 b(ei)391 b(der)f(nac)-36 b(hstehenden)388 b(A)-36
b(ussagen)390 b(lassen)h(sic)-36 b(h)390 b(aus)g(diesen)g
(Informationen)h(ableiten.)921 51241 y(Kreuze)433 b(die)h(b)36
b(eiden)433 b(zutre\033enden)e(A)-36 b(ussagen)434 b(an.)p
1062 54200 44260 45 v 1062 57418 45 3219 v 1770 56141
a Fn(P)181 b Fm(\()p Fn(X)474 b Fm(=)369 b(25\))g(=)g(10)p
42912 57418 V 45277 57418 V 1062 57462 44260 45 v 1062
62517 45 5056 v 1770 59322 a Fo(W)-108 b(enn)334 b(man)f(das)h
(Zufallsexp)36 b(erimen)-36 b(t)335 b(25-mal)g(durc)-36
b(hf\374hrt,)332 b(w)-36 b(erden)333 b(mit)h(Sic)-36
b(her-)1770 61314 y(heit)434 b(genau)f(10)i(Ergebnisse)e(\022)108
b(g\374nstig\020)434 b(sein.)p 42912 62517 V 45277 62517
V 1062 62562 44260 45 v 1062 67617 45 5056 v 1770 64422
a(Die)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)434
b(dass)f(ein)h(einzelnes)f(Zufallsexp)36 b(erimen)-36
b(t)435 b(\022)108 b(g\374nstig\020)1770 66413 y(ausgeh)-36
b(t,)434 b(ist)g(40)217 b(\045.)p 42912 67617 V 1 0 0
TeXcolorrgb 43621 65421 a Fi(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 45277 67617 V 1062 67661 44260
45 v 1062 72716 45 5056 v 1770 69521 a Fo(W)-108 b(enn)433
b(man)h(das)f(Zufallsexp)36 b(erimen)-36 b(t)434 b(50-mal)h(durc)-36
b(hf\374hrt,)432 b(dann)g(ist)i(der)f(Er-)1770 71513
y(w)-36 b(artungsw)g(ert)434 b(f\374r)f(die)h(Anzahl)f(der)g(\022)108
b(g\374nstigen\020)434 b(Ergebnisse)g(20.)p 42912 72716
V 1 0 0 TeXcolorrgb 43621 70521 a Fi(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 72716 V 1062 72760
44260 45 v 1062 75978 45 3219 v 1770 74701 a Fn(P)181
b Fm(\()p Fn(X)474 b(>)369 b Fm(10\))g Fn(>)g(P)181 b
Fm(\()p Fn(X)474 b(>)368 b Fm(8\))p 42912 75978 V 45277
75978 V 1062 76023 44260 45 v 47901 38183 a Fh(___/0)p
1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 24421 81281 a Fo(10)p 0
TeXcolorgray eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 54804 45 v -2331 6921 a Fp(WS)522
b(3.2)h(-)g(12)f(Diskrete)g(Zufallsv)-120 b(ariable)521
b(-)i(MC-)g(Matura)g(2013/14)-2331 9944 y(Haupttermin)p
0 TeXcolorgray -1391 13251 a Fo(12.)p 0 TeXcolorgray
651 w(Die)410 b(un)-36 b(ten)407 b(stehende)h(Abbildung)g(zeigt)i(die)f
(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eitsv)g(erteilung)409
b(einer)g(dis-)921 15243 y(kreten)433 b(Zufallsv)-72
b(ariablen)435 b Fn(X)104 b Fo(.)921 42882 y
 currentpoint currentpoint translate 1.08183 1.08183 scale neg exch
neg exch translate
 921 42882
a 921 42882 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 375.57611 a add def
/d 0.0 a add neg def /h 208.61995 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921 42882 a 3782 40936 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 349.73047  0 -25.84564  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -25.84564
 349.73047  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-17.58325  def /maxTickline 191.0367  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 191.0367
0.0 -17.58325   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 349.73047
0.0 -25.84564 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 191.0367  0 -17.58325  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -17.58325
 191.0367  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-25.84564  def /maxTickline 349.73047  def /dT 1864793 abs 65536 div
viceversa { neg } if def /DT 0.05 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 569.05511  mul cntTick add def x abs MaxValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet
exch def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add {
/dx exch def /x dx log OffSet add 569.05511  mul cntTick add def x
abs MinValue abs le { false { x minTickline exch moveto x maxTickline
exch lineto } { x tickstart STsize mul exch moveto x tickend STsize
mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth SLW
subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 191.0367
0.0 -17.58325   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 349.73047
0.0 -25.84564 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 6696 42281 a Fj(1)2680
b(2)g(3)f(4)h(5)f(6)h(7)g(8)f(9)2445 b(10)2209 b(11)h(12)3782
40936 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 3782 40936 a 3782 40936 a
tx@Dict begin  { 349.73047 191.0367 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 3782 40936 a 3782 40936
a
tx@Dict begin  { 5.0 6.51384 8.33331 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 3782 40936 a 3421 41397 a Fn(k)3782 40936 y
tx@Dict begin  PutEnd  end
 3782 40936
a 3782 40936 a
tx@Dict begin  PutEnd  end
 3782 40936 a 3782 40936 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 3782 40936 a
3782 40936 a
tx@Dict begin  { 0.0 0.0 pop 349.73047 191.0367 exch pop } PutCoor
PutBegin  end
 3782 40936 a 3782 40936 a
tx@Dict begin  { 5.0 51.35863 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 3782 40936 a 939
41268 a Fn(P)181 b Fm(\()p Fn(X)474 b Fm(=)369 b Fn(k)45
b Fm(\))3782 40936 y
tx@Dict begin  PutEnd  end
 3782 40936 a 3782 40936 a
tx@Dict begin  PutEnd  end
 3782 40936
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true -14.22636 0.0 14.22636
3.43849 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 14.22636 0.0 42.67911
22.94072 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 42.67911 0.0 71.13185
68.81349 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 71.13185 0.0 99.5846
122.34476 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 99.5846 0.0 128.03734
142.73265 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 128.03734 0.0 156.49008
114.18265 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 156.49008 0.0 184.94283
63.43866 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 184.94283 0.0 213.39557
24.16504 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 213.39557 0.0 241.84831
6.04343 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 241.84831 0.0 270.30106
0.89435 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 270.30106 0.0 298.7538
0.27785 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 71.13185 0.0 99.5846
122.34476 0 Frame  gsave 0  setgray  0.5 .setopacityalpha  fill  grestore
gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 99.5846 0.0 128.03734
142.73265 0 Frame  gsave 0  setgray  0.5 .setopacityalpha  fill  grestore
gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 128.03734 0.0 156.49008
114.18265 0 Frame  gsave 0  setgray  0.5 .setopacityalpha  fill  grestore
gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 156.49008 0.0 184.94283
63.43866 0 Frame  gsave 0  setgray  0.5 .setopacityalpha  fill  grestore
gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
42496 42882 a
currentpoint initclip moveto
 42496 42882 a 921 42882 a
 currentpoint currentpoint translate 1 1.08183 div 1 1.08183 div scale
neg exch neg exch translate
 921 42882 a 855
47419 a Fo(W)-108 b(elc)-36 b(her)618 b(der)h(folgenden)h(A)-36
b(usdr\374c)g(k)g(e)618 b(b)36 b(esc)-36 b(hreibt)618
b(die)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)620
b(die)f(dem)921 49411 y(Inhalt)433 b(der)g(sc)-36 b(hra\036erten)433
b(Fl\344c)-36 b(he)434 b(en)-36 b(tspric)g(h)g(t?)921
51403 y(Kreuze)433 b(den)g(zutre\033enden)f(A)-36 b(usdruc)g(k)432
b(an!)p 14853 54104 16678 45 v 14853 57322 45 3219 v
15562 56045 a Fm(1)295 b Fk(\000)g Fn(P)181 b Fm(\()p
Fn(X)474 b Fk(\024)369 b Fm(2\))p 29121 57322 V 31486
57322 V 14853 57366 16678 45 v 14853 60584 45 3219 v
15562 59307 a Fn(P)181 b Fm(\()p Fn(X)473 b Fk(\024)369
b Fm(6\))296 b Fk(\000)f Fn(P)181 b Fm(\()p Fn(X)474
b Fk(\024)369 b Fm(3\))p 29121 60584 V 31486 60584 V
14853 60628 16678 45 v 14853 63847 45 3219 v 15562 62570
a Fn(P)181 b Fm(\()p Fn(X)473 b Fk(\025)369 b Fm(3\))296
b(+)f Fn(P)181 b Fm(\()p Fn(X)473 b Fk(\024)369 b Fm(6\))p
29121 63847 V 31486 63847 V 14853 63891 16678 45 v 14853
67109 45 3219 v 15562 65832 a(\(3)g Fk(\024)g Fn(X)474
b Fk(\024)369 b Fm(6\))p 29121 67109 V 1 0 0 TeXcolorrgb
7230 w Fi(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
31486 67109 V 14853 67153 16678 45 v 14853 70371 45 3219
v 15562 69094 a Fn(P)181 b Fm(\()p Fn(X)473 b Fk(\024)369
b Fm(6\))296 b Fk(\000)f Fn(P)181 b Fm(\()p Fn(X)474
b(<)368 b Fm(2\))p 29121 70371 V 31486 70371 V 14853
70416 16678 45 v 14853 73634 45 3219 v 15562 72357 a
Fn(P)181 b Fm(\(3)369 b Fn(<)f(X)474 b(<)369 b Fm(6\))p
29121 73634 V 31486 73634 V 14853 73678 16678 45 v 47992
13251 a Fh(___/1)p 1 0 0 TeXcolorrgb 47905 15243 a Fg(WS)g(3.2)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
77706 54804 45 v 0 TeXcolorgray 24421 81281 a Fo(11)p
0 TeXcolorgray eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a Fp(WS)477 b(3.2)h(-)h(13)f
(Multiple-Choice-An)-60 b(t)g(w)g(ort)477 b(-)h(O)-60
b(A)479 b(-)f(Matura)g(2013/14)-2331 4622 y(Haupttermin)p
0 TeXcolorgray -1391 7929 a Fo(13.)p 0 TeXcolorgray 651
w(Bei)595 b(einer)f(sc)-36 b(hriftlic)g(hen)595 b(Pr\374fung)f(w)-36
b(erden)594 b(der)g(Kandidatin/dem)g(Kandidaten)g(f\374nf)921
9921 y(F)-108 b(ragen)486 b(mit)g(je)h(vier)f(An)-36
b(t)g(w)g(ortm\366glic)g(hk)g(eiten)487 b(v)-36 b(orgelegt.)488
b(Genau)d(eine)i(der)e(An)-36 b(t)g(w)g(orten)921 11913
y(ist)434 b(jew)-36 b(eils)435 b(ric)-36 b(h)g(tig.)921
14458 y(Berec)g(hne)441 b(die)g(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g
(eit,)442 b(dass)g(die)f(Kandidatin/der)g(Kandidat)h(b)36
b(ei)442 b(zuf\344lli-)921 16450 y(gem)434 b(Ankreuzen)f(mindestens)f
(viermal)j(die)f(ric)-36 b(h)g(tige)433 b(An)-36 b(t)g(w)g(ort)433
b(k)-36 b(ennzeic)g(hnet!)p 1 0 0 TeXcolorrgb 921 18995
a Fn(X)538 b Fo(...)435 b(Anzahl)e(der)g(ric)-36 b(h)g(tigen)434
b(An)-36 b(t)g(w)g(orten)921 21541 y Fn(W)181 b Fm(\()p
Fn(X)473 b Fk(\025)369 b Fm(4\))h(=)e(5)296 b Fk(\001)10306
20257 y Fl(\020)11100 21018 y Fj(1)p 11100 21231 471
45 v 11100 21999 a(4)11703 20257 y Fl(\021)12364 20563
y Fj(4)13185 21541 y Fk(\001)13849 20257 y Fl(\020)14643
21018 y Fj(3)p 14643 21231 V 14643 21999 a(4)15247 20257
y Fl(\021)16203 21541 y Fm(+)17510 20257 y Fl(\020)18304
21018 y Fj(1)p 18304 21231 V 18304 21999 a(4)18907 20257
y Fl(\021)19568 20563 y Fj(5)20463 21541 y Fm(=)22211
21018 y Fj(1)p 21976 21231 941 45 v 21976 21999 a(64)23419
21541 y Fk(\031)369 b Fm(0)p Fn(;)p Fm(02)h(=)f(2)221
b(\045)874 24086 y Fo(T)-108 b(oleranzin)-36 b(terv)-72
b(all:)435 b Fm([)8 b(0)p Fn(;)p Fm(015;)221 b(0)p Fn(;)p
Fm(02])438 b Fo(bzw.)c Fm([)8 b(1)p Fn(;)p Fm(5)221 b(\045;)g(2)g
(\045])p Fo(.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 47992 7929 a Fh(___/1)p 1 0 0 TeXcolorrgb
47905 9921 a Fg(WS)369 b(3.2)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 27894 54804 45 v -2331
33322 a Fp(WS)746 b(3.2)g(-)h(14)g(Binomialv)-60 b(erteilung)743
b(-)k(O)-60 b(A)747 b(-)g(Matura)f(2013/14)g(1.)-2331
36344 y(Neb)60 b(en)-60 b(termin)p 0 TeXcolorgray -1391
39651 a Fo(14.)p 0 TeXcolorgray 651 w(In)411 b(der)g(un)-36
b(tenstehenden)408 b(Abbildung)j(ist)g(die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eitsv)g(erteilung)412 b(einer)f(bi-)921
41643 y(nomialv)-36 b(erteilten)583 b(Zufallsv)-72 b(ariablen)584
b Fn(X)686 b Fo(mit)583 b(den)e(P)-36 b(arametern)581
b Fn(n)623 b Fm(=)e(6)582 b Fo(und)f Fn(p)622 b Fm(=)f(0)p
Fn(;)p Fm(5)921 43635 y Fo(durc)-36 b(h)434 b(ein)h(S\344ulendiagramm)h
(\(S\344ulen)-36 b(breite)434 b(=)h(1\))g(dargestellt.)h
Fn(\026)f Fo(b)36 b(ezeic)-36 b(hnet)435 b(den)f(Er-)874
45627 y(w)-36 b(artungsw)g(ert)433 b(v)-36 b(on)434 b
Fn(X)104 b Fo(.)921 48173 y(Sc)-36 b(hra\036eren)432
b(Sie)i(diejenigen)g(Rec)-36 b(h)g(tec)g(ks\035\344c)g(hen,)433
b(die)g Fn(P)181 b Fm(\()p Fn(X)474 b(>)369 b(\026)p
Fm(\))433 b Fo(v)-36 b(eransc)g(haulic)g(hen!)p 0 TeXcolorgray
0 TeXcolorgray 5417 73165 a
 currentpoint currentpoint translate 1.15968 1.15968 scale neg exch
neg exch translate
 5417 73165 a 5417 73165 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 280.29918 a add def
/d 0.0 a add neg def /h 178.30206 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end

5417 73165 a 10390 72157 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 235.37376  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 235.37376  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 169.19525  def /dT 1864679 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 169.19525
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 235.37376
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 169.19525  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 169.19525  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 235.37376  def /dT 1491834 abs 65536 div viceversa
{ neg } if def /DT 0.05 abs viceversa { neg } if def /subTNo 1 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0
0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 455.24408  mul cntTick add def x abs MaxValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet
exch def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add {
/dx exch def /x dx log OffSet add 455.24408  mul cntTick add def x
abs MinValue abs le { false { x minTickline exch moveto x maxTickline
exch lineto } { x tickstart STsize mul exch moveto x tickend STsize
mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth SLW
subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 169.19525
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 235.37376
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 10390 72157 a
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 10390 72157 a
10390 72157 a
tx@Dict begin  { 235.37376 169.19525 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 10390 72157 a 10390 72157 a
tx@Dict begin  { 5.0 6.2015 8.26648 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 10390 72157
a 10047 72614 a Fo(k)10390 72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390
72157 a
tx@Dict begin  PutEnd  end
 10390 72157 a 10390 72157 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 10390 72157 a 10390
72157 a
tx@Dict begin  { 0.0 0.0 pop 235.37376 169.19525 exch pop } PutCoor
PutBegin  end
 10390 72157 a 10390 72157 a
tx@Dict begin  { 5.0 41.2817 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 10390 72157 a 8106
72489 a Fo(P\(X=k\))10390 72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390
72157 a
tx@Dict begin  PutEnd  end
 10390 72157 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 0.0 0.0 28.45274
7.11317 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 28.45274 0.0 56.90549
42.67912 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 56.90549 0.0 85.35823
106.69783 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 85.35823 0.0 113.81097
142.26376 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 113.81097 0.0 142.26372
106.69783 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 142.26372 0.0 170.71646
42.67912 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 170.71646 0.0 199.1692
7.11317 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1 0 0 TeXcolorrgb @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 113.81097
0.0 142.26372 106.69783 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 142.26372
0.0 170.71646 42.67912 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 170.71646
0.0 199.1692 7.11317 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 0 0 0 TeXcolorrgb 10390 72157
a
tx@Dict begin  { 12.80363 -2.27844 } PutCoor PutBegin  end
 10390 72157 a 570 x Fa(0)10390 72157 y
tx@Dict begin  PutEnd  end
 10390 72157
a 10390 72157 a
tx@Dict begin  { 41.25638 -2.27844 } PutCoor PutBegin  end
 10390 72157 a 570 x Fa(1)10390 72157
y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390 72157 a
tx@Dict begin  { 69.70912 -2.27844 } PutCoor PutBegin  end
 10390 72157 a 570 x Fa(2)10390
72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390 72157 a
tx@Dict begin  { 98.16187 -2.27844 } PutCoor PutBegin  end
 10390 72157 a 570
x Fa(3)10390 72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390 72157 a
tx@Dict begin  { 126.61461 -2.27844 } PutCoor PutBegin  end
 10390
72157 a 570 x Fa(4)10390 72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390
72157 a
tx@Dict begin  { 155.06735 -2.27844 } PutCoor PutBegin  end
 10390 72157 a 570 x Fa(5)10390 72157 y
tx@Dict begin  PutEnd  end
 10390
72157 a 10390 72157 a
tx@Dict begin  { 183.5201 -2.27844 } PutCoor PutBegin  end
 10390 72157 a 570 x Fa(6)10390
72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390 72157 a
tx@Dict begin  { -19.91682 25.03508 } PutCoor PutBegin  end
 10390 72157 a 570
x Fa(0,05)10390 72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390 72157 a
tx@Dict begin  { -15.6491 47.79868 } PutCoor PutBegin  end
 10390
72157 a 570 x Fa(0,1)10390 72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390
72157 a
tx@Dict begin  { -19.91682 70.56227 } PutCoor PutBegin  end
 10390 72157 a 570 x Fa(0,15)10390 72157 y
tx@Dict begin  PutEnd  end
 10390
72157 a 10390 72157 a
tx@Dict begin  { -15.6491 93.32587 } PutCoor PutBegin  end
 10390 72157 a 570 x Fa(0,2)10390
72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390 72157 a
tx@Dict begin  { -19.91682 116.08946 } PutCoor PutBegin  end
 10390 72157 a 570
x Fa(0,25)10390 72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390 72157 a
tx@Dict begin  { -15.6491 138.8461 } PutCoor PutBegin  end
 10390
72157 a 570 x Fa(0,3)10390 72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390
72157 a
tx@Dict begin  { -19.91682 161.6097 } PutCoor PutBegin  end
 10390 72157 a 570 x Fa(0,35)10390 72157 y
tx@Dict begin  PutEnd  end
 10390
72157 a 1 0 0 TeXcolorrgb 0 TeXcolorgray 36445 73165
a
currentpoint initclip moveto
 36445 73165 a 5417 73165 a
 currentpoint currentpoint translate 1 1.15968 div 1 1.15968 div scale
neg exch neg exch translate
 5417 73165 a 47992 39651
a Fh(___/1)p 1 0 0 TeXcolorrgb 47905 41643 a Fg(WS)369
b(3.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 75201 54804 45 v 0 TeXcolorgray 24421 81281 a Fo(12)p
0 TeXcolorgray eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fp(WS)1073 b(3.2)g(-)h(15)f(A)-60
b(ussagen)1073 b(zu)g(einer)g(Zufallsv)-120 b(ariablen)1071
b(-)j(MC)g(-)-2331 4515 y(Matura)717 b(2016/17)g(-)h(Haupttermin)p
0 TeXcolorgray -1391 7823 a Fo(15.)p 0 TeXcolorgray 651
w(Die)501 b(Zufallsv)-72 b(ariable)501 b Fn(X)605 b Fo(kann)500
b(n)-36 b(ur)499 b(die)h(W)-108 b(erte)499 b(10,)i(20)g(und)e(30)h
(annehmen.)g(Die)g(nac)-36 b(h-)921 9815 y(stehende)423
b(T)-108 b(ab)36 b(elle)425 b(gibt)g(die)f(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eitsv)g(erteilung)425 b(v)-36 b(on)425
b Fn(X)529 b Fo(an,)425 b(w)-36 b(ob)36 b(ei)425 b(a)f(und)921
11806 y(b)433 b(p)36 b(ositiv)-36 b(e)435 b(reelle)f(Zahlen)f(sind.)p
0 TeXcolorgray 0 TeXcolorgray 15631 16204 15556 45 v
15631 18196 45 1992 v 0.8 TeXcolorgray 15675 18196 7448
1992 v 0 TeXcolorgray 16773 17599 a Fn(k)p 23122 18196
45 1992 v 6382 w Fo(10)p 25796 18196 V 1373 w(20)p 28469
18196 V 1373 w(30)p 31142 18196 V 15631 18240 15556 45
v 15631 20232 45 1992 v 0.8 TeXcolorgray 15675 20232
7448 1992 v 0 TeXcolorgray 16773 19635 a Fn(P)181 b Fm(\()p
Fn(X)474 b Fm(=)368 b Fn(k)45 b Fm(\))p 23122 20232 45
1992 v 1682 w Fn(a)p 25796 20232 V 2055 w(b)p 28469 20232
V 2055 w(a)p 31142 20232 V 15631 20277 15556 45 v 921
23295 a Fo(Kreuze)433 b(die)h(b)36 b(eiden)433 b(zutre\033enden)e(A)-36
b(ussagen)434 b(an.)p 10273 26254 25839 45 v 10273 29317
45 3064 v 10981 28113 a(Der)g(Erw)-36 b(artungsw)g(ert)433
b(v)-36 b(on)434 b Fn(X)538 b Fo(ist)434 b(20.)p 33701
29317 V 1 0 0 TeXcolorrgb 34410 28117 a Fi(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 36067 29317
V 10273 29361 25839 45 v 10273 32424 45 3064 v 10981
31221 a Fo(Die)h(Standardab)-36 b(w)g(eic)g(h)g(ung)431
b(v)-36 b(on)434 b Fn(X)539 b Fo(ist)433 b(20.)p 33701
32424 V 36067 32424 V 10273 32468 25839 45 v 10273 35383
45 2915 v 10981 34336 a Fn(a)295 b Fm(+)g Fn(b)369 b
Fm(=)g(1)p 33701 35383 V 36067 35383 V 10273 35427 25839
45 v 10273 38645 45 3219 v 10981 37368 a Fn(P)181 b Fm(\(10)370
b Fk(\024)f Fn(X)474 b Fk(\024)369 b Fm(30\))g(=)g(1)p
33701 38645 V 1 0 0 TeXcolorrgb 11671 w Fi(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 36067 38645
V 10273 38689 25839 45 v 10273 41908 45 3219 v 10981
40631 a Fn(P)181 b Fm(\()p Fn(X)474 b Fk(\024)369 b Fm(10\))h(=)e
Fn(P)181 b Fm(\()p Fn(X)474 b Fk(\025)369 b Fm(10\))p
33701 41908 V 36067 41908 V 10273 41952 25839 45 v 47992
7823 a Fh(___/1)p 1 0 0 TeXcolorrgb 47905 9815 a Fg(WS)g(3.2)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
45980 54804 45 v 0 TeXcolorgray 24421 81281 a Fo(13)p
0 TeXcolorgray eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fp(WS)684 b(3.2)g(-)h(16)f(W)-179
b(ahrsc)-60 b(heinlic)g(hk)g(eit)682 b(b)60 b(estimmen)683
b(-)i(O)-60 b(A)685 b(-)g(Matura)-2331 4515 y(NT)718
b(1)f(16/17)p 0 TeXcolorgray -1391 7823 a Fo(16.)p 0
TeXcolorgray 651 w(Die)562 b(nac)-36 b(hstehende)560
b(Abbildung)g(zeigt)i(die)g(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eitsv)g
(erteilung)561 b(einer)h(Zu-)921 9815 y(fallsv)-72 b(ariablen)436
b(X.)p 0 TeXcolorgray 0 TeXcolorgray 5418 39331 a
 currentpoint currentpoint translate 0.91745 0.91745 scale neg exch
neg exch translate
 5418
39331 a 5851 39331 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 350.37822 a add def
/d 0.0 a add neg def /h 269.93126 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 5851 39331 a 8416 26733 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 327.20654 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.45448
T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 12 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 156.12198 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45274
0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 327.20654  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 327.20654  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 156.12198  def /dT 1864679 abs 65536 div viceversa
{ neg } if def /DT 1 abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 156.12198
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 327.20654
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 156.12198  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 156.12198  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 327.20654  def /dT 1864793 abs 65536 div viceversa
{ neg } if def /DT 0.05 abs viceversa { neg } if def /subTNo 2 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0
0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 569.05511  mul cntTick add def x abs MaxValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet
exch def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add {
/dx exch def /x dx log OffSet add 569.05511  mul cntTick add def x
abs MinValue abs le { false { x minTickline exch moveto x maxTickline
exch lineto } { x tickstart STsize mul exch moveto x tickend STsize
mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth SLW
subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 156.12198
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 327.20654
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
7171 27019 a Fj(0)5969 23869 y(0)p Ff(:)p Fj(05)5969
20719 y(0)p Ff(:)p Fj(10)5969 17569 y(0)p Ff(:)p Fj(15)5969
14419 y(0)p Ff(:)p Fj(20)5969 11270 y(0)p Ff(:)p Fj(25)11331
28079 y(0)2679 b(1)h(2)g(3)f(4)h(5)f(6)h(7)g(8)f(9)2445
b(10)2209 b(11)8416 26733 y
tx@Dict begin  gsave STV CP T /ps@refangle 120.  def grestore  end
 8416 26733 a 8416 26733 a
tx@Dict begin  { 327.20654 156.12198 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end

8416 26733 a 8416 26733 a
tx@Dict begin  { 5.0 6.2015 8.26648 0.0 120.  Uput UUput } PutCoor
PutBegin  end
 8416 26733 a 8073 27191 a Fo(k)8416
26733 y
tx@Dict begin  PutEnd  end
 8416 26733 a 8416 26733 a
tx@Dict begin  PutEnd  end
 8416 26733 a 8416 26733
a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 8416 26733 a 8416 26733 a
tx@Dict begin  { 0.0 0.0 pop 327.20654 156.12198 exch pop } PutCoor
PutBegin  end
 8416 26733 a 8416 26733 a
tx@Dict begin  { 5.0 51.35863 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end

8416 26733 a 5574 27065 a Fn(P)181 b Fm(\()p Fn(X)474
b Fm(=)368 b Fn(k)45 b Fm(\))8416 26733 y
tx@Dict begin  PutEnd  end
 8416 26733
a 8416 26733 a
tx@Dict begin  PutEnd  end
 8416 26733 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 25.60728 0.0 31.29819 3.43849 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 54.06003 0.0 59.75093 22.94072 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 82.51277 0.0 88.20367 68.81349 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 110.96552 0.0 116.65642 122.34476 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 139.41826 0.0 145.10916 142.73265 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 167.871 0.0 173.5619 114.18265 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 196.32375 0.0 202.01465 63.43866 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 224.77649 0.0 230.46739 24.16504 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 253.22923 0.0 258.92014 6.04343 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 281.68198 0.0 287.37288 0.89435 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 310.13472 0.0 315.82562 0.06078 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 25.60728
0.0 31.29819 3.43849 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 54.06003
0.0 59.75093 22.94072 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 82.51277
0.0 88.20367 68.81349 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 110.96552
0.0 116.65642 122.34476 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 139.41826
0.0 145.10916 142.73265 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 167.871
0.0 173.5619 114.18265 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 196.32375
0.0 202.01465 63.43866 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 224.77649
0.0 230.46739 24.16504 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 253.22923
0.0 258.92014 6.04343 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 281.68198
0.0 287.37288 0.89435 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 310.13472
0.0 315.82562 0.06078 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
44637 39331 a
currentpoint initclip moveto
 44637 39331 a 5418 39331 a
 currentpoint currentpoint translate 1 0.91745 div 1 0.91745 div scale
neg exch neg exch translate
 5418 39331 a
921 43316 a Fo(Gib)1383 b(mithilfe)h(dieser)g(Abbildung)f
(n\344herungsw)-36 b(eise)1383 b(die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit)921 45308 y Fn(P)181 b Fm(\(4)369
b Fk(\024)g Fn(X)474 b Fk(\024)369 b Fm(7\))434 b Fo(an!)921
47853 y Fn(P)181 b Fm(\(4)369 b Fk(\024)g Fn(X)474 b(<)369
b Fm(7\))g Fk(\031)p 1 0 0 TeXcolorrgb 434 w Fo(0,55)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 921 50399 a Fm([)8
b(0)p Fn(;)p Fm(54;)221 b(0)p Fn(;)p Fm(56])437 b Fo(bzw.)d
Fm([)8 b(54)221 b(\045;)g(56)g(\045])p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 7823 a Fh(___/1)p 1 0 0 TeXcolorrgb
47905 9815 a Fg(WS)369 b(3.2)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 54206 54804 45 v 0 TeXcolorgray
24421 81281 a Fo(14)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
