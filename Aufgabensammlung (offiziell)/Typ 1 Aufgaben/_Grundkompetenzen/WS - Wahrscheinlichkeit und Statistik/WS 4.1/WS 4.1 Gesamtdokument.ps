%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: C:/Users/Sarina/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS 4.1/WS 4.1 Gesamtdokument.dvi
%%CreationDate: Mon Feb 26 14:54:57 2018
%%Pages: 10
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ LMMathSymbols10-Regular LMMathExtension10-Regular LMRoman10-Regular
%%+ LMRoman8-Regular LMMathItalic8-Regular wasy10 LMMathSymbols8-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files (x86)\MiKTeX 2.9\miktex\bin\dvips.exe" -P pdf
%+ "C:/Users/Sarina/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS 4.1/WS 4.1 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2018.02.26:1454
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 856 2013-12-09 10:34:40Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.21, 2013/11/28
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def

    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 

  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 801 2013-07-09 18:10:41Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.04, 2011/10/21
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end
 
@fedspecial end
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E08614769C017F6D4F14C52D7189D4AF8CDA367D8B04CA8D3F2307C
0A7A179419A80695912F456637F539123745CA8E696E250E0BA6B7C6277394E5
98A8799C29B6272613C152B0CAB05F3C7795791EC9AF2BDD416861A3D13FA858
BCB6ACF5BDE40E5DFBC1A171A7280E8FF4AC0D4C8A2199E9E2BAB5CB9131A76D
EAC166A7C449A549EA5111F1750CA2C6E1EC6F00CB6C62BA52D17FC66E06ACC9
1E6B858F9393AF9AA5E69F799E01D301B647DA57225C2920E3BCEE9D09CA5C60
F22B07F24A26DD8F4D6F9C78BFAA8D12A21531E713B80CD03A5FF4F3BBA2AD82
3BEF7DA8C97C30F1452006AA3B1A168483F6EDC4089ED02E567923AE6DBBCCA4
8C246A080448200C2A29C34AE6255BC79B73AE14B980A7C357681BB0962894CB
DA32FF2B70B21AF4D158E0F74652684A7150D0967F83E13EBBAB33588541AEEC
0DE8C53851845A44FFB46A93CEE3E8A0263882542F7F103D13C367EA8E1ABFAF
6486A9DBF6668550BE7858F5790BC87C66492C0FD34DB08EDF842E1AF58A09B0
85A9B7FA402029FE2439769D67DEBDC8AD8C861E90E5322951A2904FD702766B
36916DBA8F9C96141BBF4788FA435556B2B4E1B37DE4506ACC4224CFC00A8F83
33941A050B51B9508758F4EB2DC074D799F5116296B8822ADD743A043F9A6426
88D10767A9F99A072BD4C88CB579B34687BA4953B96DBA29F33211B12A0215F7
5F2F873E5074A7D593DAD0EDD97270FB9A87BE870321A49958B10E3353D075A1
E740C054E9AA191CC6A2B8E854AC7E02D6C53ABB1608ADACCABE3D5AC2F894E8
5E234F72A1C099901DE1E49328D413CEE1295B615F37F139B70238D0C3177995
99A49939640D06478EF23B0FA6C4056FC2D15FB7800AF689C6868DB1E0A5D946
81993A3B3C100B5FA02EC334CEE85D1801AAFFC4A9253F6BC832A0E63EDB6F31
07FCC58C94F34096603C9E8E3719950691B4B5D8C0BB08883E09585EB7530664
C79582CCDFDDA4B4E487A57D8207DD18420AF0A75C5534B47DC12F571F827CA7
B93D28D1B195DACC47FE5FDC29EDD6C97DEF92E40FA9F957D6EC2A2902F7C4D6
8E837E7D573068C55D4470801D8E2D6B5972D30B54C54E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE50715EC09E2695DEE674510EF3316D5063189700AD11B06
A9B158A5C9F8A936CA75D225105149EB6052FA14D619092D73F356FD3F3C3FD5
D1E94DB7F9314D07150C7E075D88B33AB63819BF6541E7B7F30C7626F08BA3D9
C9446A52614B36A286CB84C14FBD5C09AF84E16A5EEC8E9AB476DEC31843EA7A
77D900709AF60D09B87E6267D000C9A961BA44F2B0A5FC7CCAC95D93BD7A2C0C
6BDEFBD41D7DD1DB2BF35B1BD23F1FF599194A044AE58A8A847A0A30A4181860
0D7A52B63B131A1F71845CC5FB1EFA0FA399B62F4D5CC32B5445B1A53170F9A3
7D5032501CA2C904FD0300ECCAD06E7BDFA504961A7DBF1AB5613C04521104E0
141075B747F32973FE8EE529599D9A44FD88B0C6886F43CB004B68A96B69FCAA
0AC6E03A3BA8C85A85252C09656DF2882C83F5BDCCD3700A331F863C02AABECB
8CB89DCA1BCC921E470FA1BFBC8C9FA6F3703FC79A130A25656B73B1A1EC29E2
AC3B8B7A0430AEF9BF9DFCB9246160532B48948C4B25D81FF6A99A3BBAD79D0B
44AD81EB832C4C485AA946B5A5848C28634C55827DF596E91BE9D06FFC2BAEC0
82377DDAD87A21D2363B3D4EBFD58196E18D2D82BEAF4D3BA4D9C40C375D3DC8
2A24BF9F00CFFBCC235784681645311DBF9674E66920A45DB0FDF9B94F09E68B
793A259DAD2B970B9DA222F7B00A29DF94657F8E2095D84ED66F67FE83BC0562
10B0C9E83E248C7EC2825320E167042716BADABF362AD3BC92C2DB942772F7F8
4ACB436A0116D9FD73174F07790D00E851167F0440BAD8771642F8E331531B8E
A85AA74FB443296734D6B7F9A7E71D1682A7D7A57F866C9C0AFF5C365642AD58
C0CC3B547A9DD7E9604D22387E817FE689469DA221CD574565057422BD311717
E1BA4D72AF8E8FC0194CE3B471871AC8DEFD25E2AF631BDA2813DE839E1B8523
C221C7F7D978E7C7E741FBB6EA22CF30E8C602F388834B1E6FE3BC9729F08079
CB5D0CE2CEAF2D85E987DD9FBA00895D862EEF79B9FF090261A42EDE520FC4A6
FFA4B25E979C0A84E8BF38F78E2241B799A276FB2D77062ACD9C26270842E977
3FC418E4D717A48CEF1E97470508AA403F5F8B1C6BDB239DA8DB4B4AE45B6488
2E559787327EF35CADC64BFFAC4DF761B712FD53BA500E1997E7A3F4DFFC4702
DB0D04492596B4146B23182CC0BF95842C77460C55264130EDA16274A71125CE
0CD50BF38118E7F6ECFFCFCE3711084AC21C3D2BCA6C0EA0E397AF714E6A8472
54763CDA911D5EA0052ACDA483D5BB7928D4F95069DC1877A824D731FB0BC986
7199DA5AB0486E3034FFC6D36B1C289252DA67B7ED31D7CAEAD26D095B61AFF4
1983B1FA5937DFA909A796919C2AE528885E4FE4A80799FC68EB1FAA47CB6EAB
AA8F3A5E476A6D28F9287C666D86EE0D52C9F3AABA597667178BD111CFC4E659
71992C6466BECDD7032D189DF1B523136DCC7B4B64A2CE8BF08E5BC37AA482FB
D20B41802B4678C7425FA5028EEE09105C0BBEE6C43E90CDEC45D7F79B81700D
2DA67F315DE2BC2CDA2B39D8F0727DCCC054AB0C33B95A8FB892E27C494088F0
610C618929A9F98504856CF066DACBBB94A63CA577660E46D556FD033D18F4D3
4ADE5630458D697596493E53121AF131B5B01E3B7FA3D8BBF5AAD520CD3395A5
60635592B93FAF660596F2B9087036FF9B4AEF3E11A361693F2DAF7987EAFABF
5BD1B07738E02F118D53C3FBAEF0FEFEC5991CC576AD6FBD30DABD5241AAF941
F72BC977225B655739ACAD1B6882F184AF50169601AF4CCD12C6640EE83F3059
3160468F4080D1CD2DC01FD68479A7C03673CCF0884CEEF8798BDF8C858506DE
89DE56AF098CA21025289C77DCAB6D2DB010AFBAAB4716B2CD70F53012670D7E
3CDBC6CFD12DA7B450C45FDCFADA86281DD5AE4D8F6925DCDE30F1BB4C5F9AA2
AEDDB0152CCC0205676660F27EF31C45E92F8EDE3C3AE92B1C7027057E66282C
FF8C3EE31E7A66718E5A5E1C7C24ABD10EE22CF1FEFD19B93C5D32D9061A2E09
468602B32E6EB0F0EC8B23FD183A4BA4B9D1644EC9C866AEF6B025FC03EE45BB
0CD25F8FF52F7E3A31CD5C8496EA164128D15437FF0060F944F458B3F3B439B9
B056428FAF8E9920C6355A2FF947349E63CD98455499A1717AAA83717B0A5487
F98040D8245E1728B836D510DEACB54CDF258EDB6683E9B7A24A72BB4B46C0D4
25385918A6DBC36AA3F13EB9193C38B5D0603296F296E63A01269463EC1F8444
614D13988A078AABCE50BFAAE0CFD602F1B52D2BCEA184FB1AC4FD75D38430C2
BF8D0EB01EF3CEF78D51DBFCB67156B5AD1BD7F86842756B9C15FD2D9D5F4205
456C63853C0EEE6E0B1CF57EEE55D0D481202DF527FD4EBF7513B0A12EDF7555
4E50AAA0D86310
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /Box put
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890B0BBF10075D53739F7E84CEE95B40C3DB68D5
6E9847E37B7920412068C3DE2065A77281345980956AFAD312499818890B454F
5DD8C92695818BA4DAFEBCDD4D268763515CE077A64C5F3AB384A6DFD7DD9641
FCDA0A3344B3A14F82D478B4BE7BFC2822A4D67AD3FD07B11589B93842066528
1E51D954D7E6019F6921DB9B00ED303B4B8F557EAC7A0B0340A268B0DDB25B3E
BE0982129B0D3416CA5D07ADC689CAA181270B8141F9D0F60C60F156CB305E5B
E71D9A5D5FB3216BFB66284FCABF6D74564D1288EA99D3FCF6F29C3AA690A596
02C0AD2BB29A2D457C66031E5571A1454758212EB4D053F4C28FF629FA94DBF2
9677AC4B92C4DF5C7FFDE31A8F2D6F9477896C11CBA890DD464C9231B1C350E8
E8CEE17F2E0F5D10416F7D7FBC6085E9BE09E692951EA7B93A9F49CD458476E0
A380E1D122F275093ECFD398FCA6D714187CC12A2B16318F9E1D2B0E9EC134A2
C4D2674AA68D2E7EDBCCA383
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3CB3A677904DB96A4FC7509374E544FDFD4473683CE7
52445AD38E6F3AADA886EAD97F34E1B4DE04B482145F39350CB3BD73F6BE22FD
F714EED60CF92C851335C54AC440689A9CFB00470F98FE893DC9FE736A73D749
8A032F336C94C4C3C0F4ECFA9007FD8BF48AC4747D6A07A1EE6BECB17039FF93
8277AE848F2424871BB26E5F9963F3C6022BCB476ACDDDC00930BE769752504D
9980BC8D8085015695A4B206D94F9FBEE46F6B6338DD6CF2924E49D59702A6B3
E394C790FB4FB698F2DE0CCFAD5EFC9D6CA122FB2077E554C9C84A1760A7316F
84CB56870EA2BE9D0B1D1F3D34CEBAA0367AD81238EA8DC5905A6024BD320877
6426BDF60108BD68D8A7AAF86BF58F569F4BF96B536CBFC6C74CD595FB817AF0
E2549769A76C00B68008740B2C901D1ECBC7E64133C07C6A7C61C9490B5B638A
B4F1BC4953D431C1A7FB385631BAE78B3581282C7269594865E9453E9B6EF227
867D9CF9549B3B5E2A7C6D2AC7EA54BDFAFB92C6C9A23BF719E4B2B55E9AE212
41D9DCB907E0811223725DB1493FC24A9B7FE570116560446053E79671706D15
DD0901FC2CD6C6B2575AEF517D39943213ED57301C74F34B0DB7C5804A3564AF
E71B5A359C4A0929163E8EF660794518DA40FFE364237B712FB3FB0A027FC924
23C555A7BA87D34F0C578D5760BF6A389251D6969B8AF3AD360A8CC37D010DD4
3EF4D36C3C6BFC310B412ABDC95F0615C66E065E6267113421BF6430B94091A2
B42A2CC2C3BDB9B8E81DDFE9B58ECB933965934C5CA2043B9B0E520785125D47
77602F732DCCDAB71EB262B8A87DFD9AEA2142A1B4DC97D164780529938A4FA7
BA0BACA8504B3ABD63E8F9DBC207EDEAA7B233DCC023AF1C9514ED3EB19E1036
F9B2B2897627B2D4EAD444376B06C8A6377C4F25DCE1715C035FC2CB20589131
EAD11B2A32033DA19818EA9DF794371055BF064C172ADA0D306BB9E83B05BCC9
3B20D730B43691E149409C10DB07153311CE877589B206A1363B24D9F8E434FF
EB507EA58F37609763861923B2F335DE040A8C24E73A0DC3FFAD5DF0AF5343B6
D1D2491E61E60409D7E5B7D4980F2C2EC05A505C334D9D374A9C1B6CA7BA945F
E9F9B246BF2AD101F3F541C5830AB2C36ADC4FAF1C8D4B27E99BE63166F9D6D3
DFEEA09902AE723952DBA6B2133FCA62CF876F27A32E79696AD03F4BCAE54DDC
F291BFF8773E768AD7566AAC2199099FE62E9A751CA321B950C8CB71D6601D92
3050EC544CA894B638BE24CEF779048596734F0904DFE7DE500AEFD4BC1AE421
E4A471327081A08E7C26A38DA79FA4E37FF29298BAB57C692F129B8055A179B6
D9DA365CADB8EAF2141A35046BF230A2F1C7B4303259774FEFC77ACD0B8EEF53
6015B08240B999A5FFE8BA99B8898E7C32B8682D37AA663EB4897A10D9C44799
5EF7D297C33A5518ADE0C9F65B5CCA7CB94A3ED16FDBA56879A4497FEC651B9B
ACED8C7255E5F5F6ADC3B8A081FCB71ECFBA063C91D644AA39813563C79CAB76
A08E6D4D1A8F77199D09D11902507B6B378FE86691BB126F53947942DE884547
2491870352D939532389A8DEE2AC219A1027709D2D3D4A1081A6D35B551C0C8B
4D8768FE54E55051A69DC2B07EBC1DD684C4139B0111BF8809643CB79713A47D
945E491D8609EBC7D8858CF200B5C0E4D5D8F05D0B8B0AD795751F54A26B3AC2
2D64D2E9B446D25010C96BE223059AD3BFA73C8F8049212A5A554D64C4CB5724
1858E1036FDA46B729E72BE77945C1477AD36443A7606E8162E600B409ABE443
D8CC032E7CB7396CB8101B191FB40170E2AC02C29A5C4D9B5521475207914417
0EA5E84AAE651CBCE1159D19D3A6496A5B9D6627EB32BED2ADFE60953BE17E9A
CAF3618F1A4CA10D75F4E83AB6D9EB1E8751402F55C38E0C02E6CF5985714224
094C17DCA1746EB6829C20FE53B49C7117B499BF4381665B9609A47355FAC847
07A18B0BF116E1C92D78D837835DE7CFDBCABE28C63F2D3915C0C6F85034ED93
B5A78618AC22CB7AB2FE29BA280B1F2070B196612A0A8D6DD8C0E59DC19DC370
7461116D21257EECB89395EE63ED2246530EC4A01D8553454E4BC6D9124446E8
8266A56634B638D326D1E7ACA444B3EADCB24B5F723DF082603F50416CEC3F71
2C764F57
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A746147F456517EDB169157DAD9D8AE5D7
EF2661E266C5C812B03E2569E0F138C2D58E38EC9F0B780C298874616D09E399
6CBC81BF2A98EC7A9A573A79CCDB6327D0DD0F821F886FB4496ECCA78FD1A2BB
CBF0CA1255799DF587CE66F042F7A5179B55075FC89BDC3302D01D7138DA0828
4C8C35A8E26752CC2EA8F3AC2AC68E70946C3E8F46B9C2DF790F79269566BF9C
9A6E54EC87BAB7D34EF99AD642B738312FC6F300093EBC7669C934250A5CE240
A1171441D03FD75811F371B3895AA29DDC6A984C0E944711C77542A66680C933
9C7F2D5A30471C6693CEA46EF483D1046E1A9FE6EFFA27CA8C9ACE821AB92B0F
5D9DC9D0A91B93ED65003BD0C4D6608A6236426C7859229DB42614A54EBFB4DC
8097C0D9B0FB95A5A87CC9FD874959462454B5D439C456BB55FB81B09E3FC5B3
26D850A5DED9EC17E11FCFDC544B2885995B5EA543CD7E8E17FCB8B4ED57D7C6
1B0C70972F86F67336647589FB0EA874920BAFB89889071729076D755021533F
B886A9483867A5E3CB8A961CEB372CDE1EA852052312ED4484491532ECA79ABC
3EE60C00312665A8DF22AACCF0CBD84EFD9EC148AF4245BFE780E23BB321DA56
DBB416890407B39D34B68BB61B00B146D2E8F794C1546CEA6E037D7CD767AE50
843AA610583CC318C66E25ACE786FE7B406E5F1F232517AA77DD3875AF98FB1F
E6FDDB6323E23AA93628A6B5887CA2263BF3F5A696EE86831C603B0AB1442AFF
5FA6C191F7A83C324AF0629A269BC5E6602B15D0B8881E6F37D510D53C60AF3F
6159041212131F18BF75E71B5B6E7022B99AA55C94130C7A4AFC72E016B43A65
AA522E7EF3FC6134D5F715878D99130DE16A3ED40825C75260C7BA8A5A084766
1FEE0F6B8798F96EB458F2E1ECB61B6A2C9887A5D0541AC711EC68B79C2CA3C6
175D4A90F08ACA408540796646E0DAC8220792B3FEB61999671C1DFDFA0919F6
35FC2CB139762BA4D20490AAAB168B00EAE492D1EF564F9D4A077B526322E8A4
4E42451F694443F3C4E2FC9541C8344D3575996B2C50A6E3D62384F9ECC1679B
6514C107D7B3A613F7287269594865E9453E9B6EF227867D9CF9549B3B5E2A6A
F748308BAE99AE06106D90DE65FFC15685F8CF6DED13F50F406270CF873290E9
9A3BD506A8578376F788CFB65E372FC69FE9FD47150A0CC019FB7BF22A3B979B
EC26787BAB2D5F893EE00D41CB48E35CE9C08D0BDC30768CCB856C1CD7DE9E9C
0848692C38D1E3016BF4B4E37EE291081DE21AF12C1240C57540E73362D1F9A0
904081FD330AB6BC5E2CECD68B9981B2BEF1AED8D00A3AE7ED338B9E18F72045
7A4AB35C68C07865063A2AFC57C5F2062F908641625F5C1C0C6A364E3100A357
D10632538A2A0CDB6AD680DC773ACEE840A11C866CC356BFB3FEED65526A133B
8800E5D9734B24E017A2E354045A20128E1705A76CC4A6F6FABD063ACE8A01DC
45383306CED62F67716BDE9F3379CE9878306CD4905832A6D7971824A12374A0
CECCAC565C16B53C7C5E1A202F5363892C77B74A200C9DC2E2179D79AED00A2D
FDA9B22773F34FFE430F51DEC9D81F1FFDCCDD178A0CFDE0E7E46CF99B117B55
B3CA9B1F3952D101D6CE60D1A0A97C99EDB3FADF880821AF7D1CA940090DB589
20B9219284D91DA3BD4A61CB3BFD0D14217EB9F2CB21F0FF6087C7308074735E
E35C87F51AB5DDF2041BCC6827E45A0370F0F2D6FDB8A1FC5066E1BC3F1D7B12
B234F60899F20EFFA823A8ED6489E6A04A0110DE316A16B9A8A6E831396813D3
F551F18C2D70B0FBD115BE7EBCE816AB40D2ECDB17E15F2AD8D3BAD0B94BB1E9
E4397ED46382B7F8A62CF533D4295155716F96B850D6FF61144F6A9E51CC1B8A
86A35082D9ABEB8D2DA4B491536CEF9D1E9F4FD8C0003E6F23293B82B65EE0DC
F0830C02BEA2CAE21DFAAFB537D8D9F0A74B63C9D0A6A9BFAA49F87C4FC0A724
1808AB8A4938BFDD1B8644456D6323286CEB879B3BDB928141D3E5403F1CB5FD
773C8B9DD0042C5E51323CB81A8EDE313FDE90D905B45223A6504CA4D48826FA
E6756223F2FF5B5167ADA7EEF2D2CBFFA77D88827236660260C19CA8BAE9DBBC
7A911F54C201E4F627816CFED662D19C21824CCDB8F71DD18800B7E40E164074
33FC9A216DC7AFCE1C5C7F7EBB14725E4813E05782683C877C7EC4C86D6FD378
06CD3E28E86F10868948EE507B47172D7B52B09828010DB7975266138B7C5168
19F07C1F01EE32CDCE87348E9A967B430996030C42BCB6B3794F51D6F7DBCCB9
A30006C7D60C7E1AA2761AF25BD01C501409DC094980FE3A0D2A24B429285A06
EBEA61BB134055B25332C4F2AFCD776ED2ABDCE78D2BDC07CED874A173236473
98EE737ED7C6090E857AB029E6C75123998FC42D3E0C3F20960FE90B3CC6EFBA
5BE1F043F38C1E3B3CB2173152213DF78D7C0934B29652E763300876BB073367
A61A91B741B3CC4B68E496316C1FCC57968F790C5E7948B72C4AEBA496FEA882
575B6426A82F101D8FEB1CBF633184CB857E6D5AB42F92904B4D0DA750DFF2A8
3A30B03BC1DB36EF6FAC16F69FC8885EAD2CAB2644F1E25DF5F6EF5B5ED1E80B
82B3BB7F5B0B954E7078DE3E31D8AE65F9EA55FD147FA2DB2E8385C7B35F69B7
D06F576D7570D2B23AC1D7040992123A276F3483AB90D7EB79A87E6467D40C46
F878C63E035056CDBBB9F4DB89659D42B100853BCBD4D0A1507680ACA37850B3
0D1BBCDD128AC4835989372017D208167AD025F24591E5C2F51F98C01BF41ACD
72DA94D28866A036F901A464DD4880F9F40FE635F580687D0AFF1DD18800B7E4
0E16407433FC9A216DC7AFCE1C5C71363A6819F959EE20C356B257165197946A
19E5C7BE0C4388BC2EADC60BB6225D9CB6CA887922B117EB0E7F88EC910F8DF3
92FB73AC3324F36921AAB291F94D0DF09A825E5023D34DA177B1DD3787D64255
F26B3D26D7F5BBEA15237FAE74B8D924E48E8EEA7BAB1F7EF9D23EC7BBDB05B7
5831FF3172069E6700B37C86688FAFA81FF6D7051F0068E431EB425FA04DD315
AE10FD3A72CBDDE7E050D961FA70CCF2A9568E3A47FF5923031E7BCAAF39492D
B6B31D984F0072AA303D33D5478995B533818649C64BD8A696A7DC3322D57784
BFA903DC5A829DB662C70E21ADCCADA33D971AD09BB3CD3F0B7CA95D9DFCDDF5
4631182971A143737D515EC7EBDAB4AF1ECBA1C6E90B454E1F911994E4587875
05F98C38ECCABB39F621AF083C05E38A7D50C6FCAADBB9EECA944E5E27C23C75
A187BA522253C08645F0BE1E25404BF8131379A057266481BE460641116F6159
4BDFFEBE4B49A1DE68B5FFB595ACF8ABDF9F1234B69484C237E2D1E2E64C0D48
329329AD3163CF7F52E058415778334C75C7ADDF2B56C066ACE9F77FFE1A9367
96E59409AB7BC232EAB93115FE51069ECDA25AC0244C26ED6EEA47C3FD8D9159
594CBCCB611D701BA76B9E0D0920C9326B499854BCB7C7CBCD9F99899EFA61BE
5406E7BC10B8386B25AB4CF85048789BE20BB070528381C4E322949AE9033744
9F9C55DC86637A15E04FF26BF77D9D52F6CB8D6974DFB548189D085A7DE2E7F2
8F9F4A0FCEE7B11A31731DE6B46EE9D1C3D61DB2A1ACE0D8558D54219531226E
D1669D0FFECB6894E20C2ED721B7E4F39B4E372C87AD9B9979BC0426DA3CC71A
C744AD23F49087E3B4F7B2017CC4DAB7563CDD7BB8510F569A64768B17FECFA7
C2E70A4086F25183DAA9D88551F04446797CD20753F196A12A09781F4BC06848
F7FBF186A7D7DD69E01C7636A79E102F70889BE3FA0347CC98BD7DC49648D46F
2741B3A91D9032F24ED8F7853E8E12667D01A19BD70782CA4698C639FE6EC028
F530815B29EABC88E28B653076CA53A9D73D5FB903C296E7B8D5BBCCFB22495D
38BC8D05DABA5643B0356EBBF5032B6769C2CCBFC37A265AF506B75CB8F49891
4E17C88A93144618AB2A3A44B1EB69C07BCBE3A853130C1166EE98EAF0E5C8F0
9A260BFCE7C040D10575084BC081821FB75A629547382DE885B0C370FB104946
1E4F38E19D26A7438848A9682559E4C206881B58EA640A934223A46C18119F29
11FDA4C818B0A3812B714D9025814369FE71C3906EA51E75FA45E7C0806AC25D
D3073B09D77F9DF706F9E6252A2D88463EA735A8A10E8796D3D03BA155A1DE78
1B0153435F46538BA5C30C185DDB06A284AA5034CA29DEF651F60F496088AFC5
AF7A29C4E365335A08E4F941FEC43D60E0D67A4323F17D9178D32482B903E093
F21C6A672DB4498C0EDAA9F293E7264A221A21C15AE0743D640EA3CBC14D8D08
7E4AB1D89F945EE06A5FC0B48EBD94DDE333E185F4E23E0A66DDD15BDED1FAC3
80B91F8B0A349DB48187EB148AF69215DAF450DAB3F60B618854DF95C0B83559
BFF38F41627BD8FB32E62B80EAC9889188E5F0795FAD09FCE908A5BAC001904C
1FB4D0A3796356F2ED6510E900FFFC8BCC3D355A4F3C7BB8FF0113F63C66BFEC
839D4500138EBAE207115E8947123C8464BFE89C409BCAB867CF2D3F12E53440
5BCCB859F8A683E368B3C6F947205DE82F1F269661A95AC6CA56E7E1B0F3D3DF
94035C5AF7538DE81B5B4A7A4AC5F69B87DF1F833CC350508790F5A5BDD2DDC8
AC150F6BA142E6C2CE640035AE3392E4D5B7DF63406467FC8E6A63DE565844A0
55D086FADD7D7ABF910EE4798D537E8542C599D4E6BEA3CD03915F269B7B231F
5D9B1F61DF7CB03421C5F460457A63DC721E0041BB3DDC3172FEA590380549E1
39F633399946F115492C8F03055C82927FFAFA6E43AB24250CF29962034819F2
B5B36DE73A691A3166DB4D1DECF2B55BC3450F0473D5983C8671BC0EC4F54A9B
7A7F52C6D4400EAECFE4448F77D161F6228107C92BBA3269401FCE3E8DA44750
6ABCC3C649EE21863E4C426DE4581140121831B73F09457859EDAFD61E776823
6FC0A4304940D005FCC57E7C01E510D507ECCC190832266609281D85FCE96D2F
B7F1523133DA1537C79EE63BEACBB06368818F093EEDDF41DEBCB1FC8F4F3B28
8515CE43713570093409BE8321430B4EB6B72238B57AAB07DDEECA4ACA5DDEDF
C21B126F607D31F950B24B2C9042139D5E7DD438696A098E153341BC60653264
E799832A468D399CB9F5A1DDA2FE214955FAA891C7AEC18EF33485035BD4C479
BEE49B0C813CAC93DCFD9043706B83ABFD905E60E745D553D9666700C095207E
57106950D839087BE28F05EECB6F4E6128ACFCBE80D55A54E9B0A6134FD07C07
6DCB32292D2C05B69E55969AE74CD3A31D6E5204F368919512767884B8BD7016
B83FC3997DFEA159A40DE56AB52DD28DECB36B9DC8744E250A9967E7B70BE19A
5A755A8DCB30FF06342E7FA9FE4BEB970EC45F7A56748D8DE39DC304BA7BD6A9
F971DFCC0433D3116D7E782BDE113598D36ADC7DB84DEB6DA73092F21F04F718
009DBA58BF45FC5D20A5428CD87225C7FF28FDCD4FB898A052A0B1A5AFC5FC0D
AA0822F331CCCD4B8DA3F4CBDF92D8C0515AA8330A6BBA324DECB086CB36468E
DC8CCF17E0FD80252E1894C1637653261B1EB6D2DBE47EB9CA9D1CB1644C5290
BA2C884669AE0C0DB079050609754CBBBC246B3F9B0C5A4E6BE4BC682C4552AB
BB7A810FA459EFA57D47E890F8ADE1EC7BC7F3F3684C55112F7C511BEDC3CF77
526FF59FFD601A6123A48DB34F11EDF28F34019A1D2FA36F0718E793CC8558B5
E07F44850B796F9DB95EF9D81C62943378B575646DF47F999BF6FF6FAD1450F5
FB9B42ACAD360EAE847144E85014CE922B9801C1C1939D2FCDDA6DCCDC69767F
24E1D1DF16D6654B3533B519C2658DC69C4AFAE08839E2045D57945A929B28A9
AA2C21E05D767DB0D84BB045E44FCB6708F22014A1028F24E6CD6F9A07B3684B
3F735BF1C5976FB22AEF42D03E33DA209123B6E2B4558CBC63BFD8062A3915AA
5CB574BC60C16FEA1B452AC5DF51E04215CA250B7C6831F55435E628A295E895
BBA4DEB89904A846BEB906269EF691B4B66A9FBF2F42FF3947730FA8817294EF
F9C89AB74DC4418F77DB1E421B05CA8AA4496B318283B80AC61EDF21B109D7DC
8DDB8FE0540F9F49DBB59A4E38105266CCCF5F5C7BBAE143894819861BA8F5E9
8EC3B3355440F8790AAD86835E58CC579A53EF65B459AB35C2BEDB8D8B024C79
34ABFCD37E5C04EFD56DA9F09EC524565A13DA373E854B17B86DC6852124DF4F
5104A9280E4388FF05AF7B6FB67E620200B3CC2A36CCAC04A31826653E500F0C
8397121C5373821E34D0D205AA3826267FA03B2CCF128C42C46283AF59375E58
57479642EF670263A76E5B77BD0B8A7BF88EBC67BFD892E35E6940E94893E1CD
FD2793D8B7AFCFD66778364FF72B116D0C52E5E9849D674A19DE7EFE057FE488
17E2A2F71DB6E33BD5AF7B51FD03E8B7D63127434DAB18D387013C388D384018
2F35ECB41A09863E670F03DE2BA917E3284D54F612C02DD4C626DA9535CBF8C2
255DE4C035D2303AA66DF56526A41CB145196F783E806D7FEDDC4387DDB2E10E
F3FA3985EDC86A7AE676CA6C311D84D4D071C1465C95E05BD1F6B603AB078B3E
36999482BF45A003B819B9240E0346C843AF06A34BF536716B5BA9F96F91476A
E3DD52279FCECD3C4B2605CD6A89C52B018E46EBE636B6214175D6C3850D944F
0EBE502673FF855FE49B1B3DCEB358E59045747E0AA2AE8A174649A0504BBF5B
A6C59C6BE0B2BF3FBC77584B2008B21D9B6D5A3669931BEFCC716F622A965225
7E01C551E1B64DF5D843B0514647A70CB32D9A9EA2796126B6BB1A69877EC2E7
90D0E6C9233DF8DDFADD039C013A82475C093525EB5729D8AF505B26F99EAC72
A872C10A268B3398FBBD0D4765CAD178A6F93C5217BD2547756A3A345EBA5995
673CB82C886682E6E3EB568F46CBE9AD7B9CE18EB82274BCFE2E9DAD577B6623
2B3192CFE26656E256891ABBAB7980B1B1B4711FB26D09C83B0875DCB4156625
0CDE486DD72554B45330B3EEF2AE90BAB5BBEA411FE48CF96BCCFAF7A173C1BF
D4B934D3C3358D73CD312FFAE07D32B62AEA32B58B8D127C00F3B953C79CA988
DF0AFA1E08FF5177BB72916D578C2C6E72A18AE75BD5A0E98313585FF78E1E96
26CE3536948AE25914372D0D39F12785547266190E57ED06C2CC580967BCF982
686F13A8292504F21D932CA72B041AC9E55516479335379863857D8DA321738E
E1080DE466AE8A508BCD673716FE480E278BCECF4B659DBA484141D766CEEEAE
CE9FCF90586E27924EB356059F2A92904B4D0DA750DF01DD7FA57C51ED9E9D0E
3A3CDCC9BD02159950185ABE396DAB612C3059CE3053CD18E028C0F8970AE123
65C2303F48D7E4900E19A725568E617E921CB54292612529D4FE44D231A37C2B
30EDB15F6F26B737855CB73E7A7A981C9CF9174322CC22362D93433ED4DEEA51
BCC61B14C231ECBC73C511681AD69F4B470D4B2CD37893BFB424316E1AA4B387
46A4ACA9B0683F0CEC66794CCECAA5994E06CF580742E50FD7AED054EEED61B1
165B3942784392AFC1444339665254CEFC2A3F996D9206B5D21D7E2DDE51A0EA
DDBBF0BCE98AE75735DFA13DF811A9B7270AC4A6F7CD311C5443FB20CF288B12
23DB2F08424BAD2A76790BBB18E9A73A3AC40F568486FCC79B95474217BDB214
742B280AEF95FB492D5FEF963CAEF227D57119A0D31F9156AF4D76E60EC29311
F266F9AB5B38469000FBF31BAE9CE8703754A099D21B332C0ED4FF4B5719114C
0DA6D1B0AD44E8FDB48008504176EC790954645CE99CB2DC823134BB06D2AF45
F42DE4DDFB4A2493201FDE2D2E1EA7349E324829A88CD39230CB7B7C37E2052A
9E884984EC754AD5FFA2A1DAA2649DEE499E7817BF9B0F2BE120B0C0F663659B
BD109420C68E81A3BA28D197E739C1A1EC70760EBFCCF49C7D65C9DEC89A59D6
00AC85DA22DE061E1197C67D23C540750975D8CFCACA5E2D35E33B794FD84C27
4A4D9C2643EBEC1372E11304827B5672A08F7799B3929DB0B130E9F217EA031C
E627B8433BCD698BFF4B9805B0FAEB53D9EDEB8586C0569CD39CEA3D28B6228A
8E3A9678108178F33EC11FA768EFC6C2F83AE423590FCFCD5F871F03C22DA4FE
AE492B8626B86EDDB355D66FC9A90DADFDC11833C9333DF56321A5D3A5906E21
08DF5E38FCD9C55FF414724552071EFEB789F812D0565F4BC740AEF26EFE447E
2C62B4BFC0E245CB336A48445E64140F3096AC095EF935694599F9FEE4E81E15
2F9E1712A25EBCC360750585E50A56E7D88D4E27E5EDFBCEC126CD722AADA6DB
8732764E3A7CAEE7AA684866DE13145E5DCF2DFD5965B0A9705FF54F7FFB36B2
867E0B88169A56393222CAA9B96151B905ADA562347DD12AFE72E2FA971F0B7F
498FA3DA42D5058A590E4D63BF187D8A93FE9F8CD6208492E7A448BB0D248AA9
8A3DF4D154176673A003851DE425A8AF6BA29D4C707CFD45E588F7F0CEA77179
76FBB04E6A3577A4F5E74D3ED8950B75AF0B6BEDFCF429BEAF8B3559A6C60DD9
CACF97B0D86FF2BC399BEAA86FF6D34DCF21BCB463C942CE42FFB593697B786E
CFEA320CD49838B5DAD017150A5364EF1F6F3A8F40FC28A8F80062CD6C9CA9EB
486FDEFBD41D7DD1DB2BF35B1BD23F1FF599194A044EC8F4B8CCCB4C1E7696D1
6531A5EED36C30AA15C66D557E03DBFCD5E9907E38EB02257D7F32DDC1190AF6
1B764CD780E93F82F7477A180FF3D6F876D5E3064BB81E62A67297CE0615963F
33B07FDB0E07FD50A10CB644878227C4A601C49F3450F08A2F61C19EE2E4F105
5A044092E3E68AB828EEC69F3D2498503AF00EAF3AE0B8065555CF7FBDCD3B48
EBBEF3576781FBB7D433B58368D34E59319FDD1E4F08E9A6DB793C1B1F3B8F93
7AE7E4D06993C8F91AA195D9F12E03463930D05A3D71E1E9830AC1A5F13D0055
EBA91893597A866F289B75B6C623DDC0E21D2E440645C8AABF5A037944087CB2
D5D260D28129A5D82915D8E4CE08C3953F99A361F8B5590BA9286987A49E59C0
861D89D94E697F79D6C85FD95E498FA4F44A0E1FAB29855A43C3097D27E51314
1B91A947E0A1C2BE7CC7933E3D99DBA4A742B4993D2CD41C77916F09CAF327C7
D7DBD94ADD48BCAF67335C61B7F2B2B654C70F5370E0F3B92AA3FBFBE9BB816B
42EDF445E9984AD71187BE786C022950A86415391A609A7ECF4FF731353DCBDB
E24CE21B229DD993D11E519F94F7427E6E8B27F236199CB507C6F0650E649AA4
B5498ED7FF197AFC2F97E36F3B4C7762CAF304E656F659C6948C180839F3F7A0
80F28CACC46E50BDA39792AFD17B52513AEF6ABD14878C181A4199E187BB2F45
F6465F5186BF3C603D347C7DE7F9C6FBF61D619BC67D712BF7CEC27CE0B7ED8D
31A29D7F2D8A626FE8CF94DD353E88B786F963BB76469CF7937893E35122F5BB
02ECCC44A5DE3F200072E6CE16B421FE7092411047D178DDBAF6E0971324F724
68AA5AD6D13FFC99CD740748F9387D8A5E83CC8AD922B2A8BDECF188505442E4
DB6CA773A51FD274161A28F3724DA810A30D5E94AA1B6DD71F93F498F4E720FC
9819E6C6AE3A34049A9E45C6F9D662FC2E59673DEF563AECCABF724C09CEEB5F
A58215514B0FCD8B218F5D6F402974C4ABDB32658494C12E71749274D7BA7ECD
77D24FE42D1BEDA90BBECB8FDB73B909954466C7032C6FD3DE6ADE20EBA3FA90
A3087BAD0BC9C73264E946226627968FA8AD8EFA4530AD69A5639CE90611539E
E7C418A9DA70C894C59DB05CDC0BC8B313FE192599F5C1BE52AD65C5F78B048C
0028AFD3703EECA97FD68BE71AA73987D570CE2DDF953C6EC9791208181C883D
F60990A47DA285D767E651964E4398897A695F3BEFA23F1D0E9D0D05DF4C44D2
3C067C14FA4AC94B42E026CD4846D3276CEA9AED7E1958A2844855CCD9FA3B5F
EAD9FB2A1398CD00188333431902E82B66A2F95F230464AF01944BA2D55B6E01
4C8A068F6391E11082B1D40191FF42EF52D058ECBC2D37B7A8D05B1D00B08EEA
604E3D7B784BE985DC577101E8C0B884FF5107FC3AAFF583E1423D4F344C2CEF
37572E4BD892DA454AD647BD8F0BD6F297DCD3779B48A23BA00CA211D4684B72
AE4A9A69B75DCB34FEC581E5FD8846A45307AC3C6AC2ECAD8686137C75E49C91
A533B409E0D086629220B4256153F9849D5B7ED1DAC77D33CA607154E6B87413
30E5F766004E47F96B61BA0F88E99544E109918AB0BDCA95F770FBD661C1D267
7F77D4430A609D337439B474B241CF8A3B3A0DFD699A8218937CFC81E2FEDC87
AB035DEBBB7A127746837223316D9B95988E20E1E71BCC60DCB4F02D563A806F
B4EC884B26DCAA25E29F413C3847ED2F3A935DD9AC2B500B37969F6754D6506F
B87D745018E03861976101B7018BD702271DEE3CA37C242494FFCF3EB1D73CEE
23A92C79920EE5FA94A734A30DACA484EB4D0A7A3F7B3A279F3291925B9A3579
ED72125D6388D077A70A24BFCCE963F89BA1451F39C3A7752BD478B2CDA2344F
5A0C143F7D89F5A7906D76138611002FE7E9282E52853496FEA6D64E1FC582E7
7F6E21A71D0C319A466F69EC1ADA526F99362C7693B01E7ECF132C62BDF74FF9
B50292FCFC8615892C4304686401B0AAE619F7F850AF1BCC271581E1D3384770
90C7DB3C0591B53CBD3D2B96D7D3A6B3C25DE35B795BD2C5F093CCBAA801761F
D57C2E8D72B9E6D6A900BA44046812884F2FEFBBD39715F615647942D643E711
8C6FB8485C3B49DF8D5CB26E31B789628140F9EF7A02B92E75A597785BBED485
7290DC1571B1869EA93EA653EC384A8EFD58C7DE4938EF1CA41C4174A440F398
7FBFC0689BE4C0407E9819FE68FC2C4CB9A5A10E3A4E2B8A1F5584EB0A7E91A4
FCB9BCD2AD4F31BD967F940532E3CA8507FB01B0DC74484791223B7540F82459
F2E6B90131359A396EF818B1F1A690DFC246D5EFFC4B58E6CD01B59C73A14DBF
B287B7017F6AE0F36FF2823F1A1C7DD2F7D6535FD7B412EDCDDD5995A6E38C6A
E4740E8895169607D57C89956B526A664B28A2AC1B567E9D4B958FC9C413E5FD
F7E3F203BD2D3299DCFA139EC4C22A42A4E9F9365D91CEFA249A039485BFA319
E3CFB3D77B63E54344F80D589438BB8AA51657E0899C81F795A8F536C6DD08CA
7DE3558080F1363A04FABAF51E2CFE1755F3530F8334C211D603F86004C9D4A7
379D65FF52BE18F0CE103B2A5565A54C85367A7519E343CCA4D385848F038485
EE701DFE15086D6492464AAAB6F90DFFEE82FF494BC2F3EE7C2DFB92F6E09747
7F8C211986561A14100918F605CFE56DA8B9A95E2F71E964DFE4363E888C0521
8DCD8124F8E93E24F05AB2FA84A4AC44DEDAADA0D9E78E54D2667ADE6068986D
1E79CC4B2926D2A6FE7C406DC55C0F4705EBE271BDCBEBBFD886BCF39D09E40D
EF001C0EF439972F57369290DD3D9879EA5CC990927DA0EB4A84E947B055CF58
D72D9AC8286E6164E8172F7C511BEDC3CF77526FF59FFD601A6123A48DB52044
2C8AE579801B110C76FD7357B8B0659B1BCD7332409D8AFE456986F268ADBEE6
4EC4EA851AF4CB1A21CDE228B435C268C6BB20D3A288E01E2B9173557BD09FD1
2FFE41E5D245E820EC0195E99B6E47CBE1D39D16881E68D83CEA6CFFA363D804
FAA42013AFFAD1401B54E1E865F0999DFFED7C736E945F8453ABBCA099EAE8CE
A0074420C14DD642C3C97AC15E4864F7A7979AA05D395286E104DF0D1F6AB397
2215CAE0BD116522F39D52AE6939125512C9B6D17D206F7034D0EA4F1FB73476
024F8769BD6B29F05004B5D058DAB8192EE7F657BD8752A46D29C0EAC76E45EF
546CAE548825A0BCA6BF93B0B1373AF3E6E9932A5E64E2E417C6B64D84B19F7C
2D7C143E287B68A398196B0E2E20CEDB0A589446AB52F983AB01D8D326A099CD
02DFB0FC278B529C5B6D43B55A3F3ACADBAB75DAB92F8F73013AD9CCB7B29C95
3456EBCF09E56387D6C50B17ACD50C6D8989B3E8688D2A74E9C9F9A5A88092FE
18390F67BF16F9B4CB43B26AB9B8ECF42FA5581EC87D20E23B36D9B12A032418
B9321A056670EEA02CD7163AE058C6917D4D2261EF3B27F4F84A27603543947A
18D6996BEEBB7E1A4F11954E669DE14B907CAB448E39C195F64B37B48C6DAFB9
2FC1F21A4EC7894E2A0D724A45C12D56555F98CAED6F9AC20EF569E656F19E72
4FC39C8465084F358E7E6CEC1C94E4CFC3000F952E0666A9E065909226DE954C
56B5DFBE90C804C68A75B2C92CB8EA096C4034B5A2C6FEA57D50A9ECF4529BF9
07C094422486B57EEA86ED95F3811AD256DFFE665809102BA715F050BA6AB6A3
618EA101BDBEBE827D1D060322B22672F4FDED7F2A8425B8CA67E41DA48E3E9A
B280F49EFE8B0B55AD39D3BDE3E416E13D6B23272517D28E9E093AE3C9023C91
F1F66DE67304C8151ECB8BAA2419D4B6FAD97354D8BE2DC7029117D29FF0A396
A4A4AB4BB2CEC3DDC69C35F62A539E5B69070B528273A685278C5988DB3A1150
06206B00C684371EBCE5B655FD47D19666640C773D66FF93B9FED0372D8DF634
81255FB07C915411AFA0657C2537C4EFAE92A0EC0ABD9DC217A467694AF23238
C20E595662846464B25687240B575A6CBEEF06521A3DB945B03C08897AF9EDCA
74EAA39D08BC61C5D58A8D0042F7B2320F6AD8E6CFB0D2666679C13A65E1D687
2B187A432318C2C88A955A6054DC9013584E066CCC93A589BEFA8C838BC00D34
9557D51B7B124C64E88902FDBCC386067EACE9D30FD01A920F287B0681169A88
E0C8C0AEE0CF2FD3EC6A3ECE8816AA5C60500DA5759D88CA155549A5E7A942DB
E072F2BD0DCF8346DE27FA98D21C0F6CC26DF3F33BEE98F4148B65F4AD87FA59
FA1862E4277A7A1D7310A056B151C15F895BCF076E4B6F85A94D6216240AE68B
FDC01EF19C34C9A6885403D18C17AE5C2620A5B9DC9E20AE49D3FE7B47F0B4C5
BE36297E9DA5DB6CB73AB16360A1E8B82FFEAEBA6EDEC5FED81176BA98D9A76F
99BC3B1CC6D379B05809BB83D175B1DA90C2478DDC362D3AF00AC044A759C633
970514118193C5E291E4B65349ED37FA454ECC45F7763C6D8F71BEB6CC5282B5
2CE0CB5F989871CCE60042E3E8AE2DDB34FB454F1FD31CFE83412B07E613C479
8B2BB2DB9D168701DEC925484149A74D1489DFD974588112D4CB630389A4F601
F284F25AB5B31EB70F31F472166B18FF30E1425EE578CF0308A1A1DBE19DFD88
B3993CAB581A7E340178D6574F68CF598084DFFCBAADFE1AF8356BCEEEBDF060
5A719ED974261E5CE6827A0ECC31B8BDD49938EB436641D9980348CCBDE94E7B
47ECE15B865346D956FA91D2C2028FD1434DE4C67955EDE53044811EEA8D75D9
A93A375C05DA2A5F37EE7475CE269618C727B596C3C119E92E2623108971A2C5
CB23494F45B1A378C2334376FB34610D1A48030D1691AB117144FFE2B5441595
4F79EC983D8DF840A922145C3A7D01579D8C6A3376B918772D7F77F992B88411
85FADE184AF8C02A0F597E6E21FA55672F22685B418038553D70B02DA2F49827
CCF0F39BE0C94CAF9E0295C87A2A9B0044B050747E7D512F9C67296CB735C412
0A0AB39595658AB429EEF5356F7CCD11E4F2FDF3675600FBBA1AB7FCA5E3B9A0
C63FADBAFA0F37397279F2A7E1CAFA99AFFE71134457105F3B8D3B7E33F4A6CA
A538F7F0251D3A910DF8505ACECBB6F919ACEC8D5987FFE0D309240230221CC5
8CBAACA6B20499A21AF248A1245E0DF36E1F985DD607832F8A6922F3A7991E8A
856D787BEACA71A556DBF48CA2635DD7C68D01DA1DFE6F393688DF532944415E
2C941F291BE9137089355D32757F3679DBD3A0ADDFF4C3ECD7CC083D70252227
836371FF8383825CE47C78E253AB62BB381907EE377CB8DBD44016C22C0515BF
6AE3921693A7B12C5083F0C991CCB5EED232617C65280CA2AA2A7399918BEF00
43812F3D71789892873437395900A64CB18DD6F7DFE62B1720EFD4515E01048B
88AA8FA5A38A2A7BED7CE91AB3830B682067181282DDA88B0282F50FD1EB2568
CC35D8A54FFA0388348BC74FCC54A74F4E5D1F69A9FA4867386F2284702C5F6F
255A2EAE18188849E708A4E69F2C5A3E08AAD4A9BBC69B3954E56C56A2CB0297
E6C99E604FFF638C9DB5F9E796E83B2378F20710019695188C430E6213CBA49C
02D66976363E157B01E8B11BB02FB00762A522A3DF2BD022F65C4B3CE2A37EBB
06700474F4A4F93E85707759EA2AB270F38FD2923A2BA43BA9064D59C171AE87
BB22E477D31D8FFFC3C6838AC1204F34A6A16569177D6B1C7CE672895F48BBD2
8B37BD51EAC7264D45CD2BB8B613752DF4009B6E24A3E27A49CE8CE993FF1F35
20F40D36C8A0596588E7B23653E0063E0C15FDB7D763FCFC95483BB2A6D4FCBC
EF3494BEF638403F3559D63183D4AB1457A46E6D8A3D44DD192024F7346872E8
4795059D0A12F0E408C339D359F2E8A6DC5EB9B6D9D3B4CFF4CD3FCB4806AEDD
EB4B4B37C5C1538E75C144D7ADBA18820FFFF179F9B4ECFD4473683CE752445A
56F3C953E0080C2F6E390C5BDBB970F1EA2861AE50704AD81C1F42AFA8C29978
C09071FDCDC0F19C8D0285CBCE07513C22253B9753998A613C9D20196C165955
42D8F32E962D41213E6B67A64A1D593C3FB192661D2DD29EF941C0FFE601698F
DCED7F5E2D18AE3897CF65C8389617F534EC699BB12C33F63E57EABDD6EA2816
A459C8B82D140344608E6AA9578B201423440294FF5CC9FE8D9AD16D79F0AA2A
F395D5F42E79EF0780C9E7E19305AA321ACC2A527E64AB00A99D23ED548D6A26
86EF3312C25CEE3BD6115EC9269C39CAEE0CE27C52EC292E58198DB5C232E966
DE8831BAAFFF10247A3A786D1F5B095D079887B8A3EEDF3956FB00FA1C28411B
272A07ADB54E71E3E20D524E43B9781CF8824ED465A01EE495EFA400C9ECCC91
7450F15E674FB96267CD8AEB11ABD8FD50423F2913012DC4FBDDDE9D108C42B3
4CF410EDCAC303AC954222B4F6D27C63D287B55C070BC7250F889152DB29A99B
4DBC1A7E46F5356EC92FA9101102BAEEAE5C1875DBE42C23E120E3F7CDF9C65F
94E887C1E8E92C01FE6E9CAFF32E3626ADBEBDC37B3AFBB141634F0D84EB6821
FC9B0C4B538670F101DD501B215E0C207067F1E695951C726032A58DB0CB9A5F
96C622B04FCDDB403682281BE49F96293F7C693055397AFD4170BE71E7E7206A
0BA0485658A0090EC7CE0685571EE55F8EEFDB979558F1443063B64381A8A2C5
84A4146CD067C922E0D14DD3B1393B00627EA9EC1AB2A7AABC07EF82E5AABD47
0633B8D9D473FA145B8325EC1DE6B91732A86738FC4C2E7A3A4438D1D16BC516
53FAA26E70906D3F56E6CF780B37CE39F605793D904FA4650A8870F033A419E8
91E8C5AD303FF87050363CCD7CBBEFE7C0FEDBC8748EB0D26D527A7665DBD5CF
D0399338CB01339414DBD893D279F20F49DC8C5F2C43537EDC6CF444659722E7
26F3DCBB29F24D88E90FABA5076969F99A82B0E7315C9285436E5868E756EFA2
6237F1F33881825A51F0DBCAF910A75A1ABE13802EBC5EF7908D61DC74206991
AAECB93C7FFF2F16174606AB2770299A4EAE741048F482682DD0DCB6A0F346F5
DDB0BD589A54893931D3FB32989A685F4ABD904D7018A00F1D9803BA6100F69E
4FF750E76EE86045491F796D8AF861E9ECCE5CC5753CE9F4B213B3AAD85762FC
03918F97C4874862052110A76F4B9CB77C85176D8232A6CFB4F065BC852A80B5
23F1788D784309B2A2880779DAFB8FDF8EB957A0E053C8715538935DDBAEE926
CDDB7B9EF439F0BE0D97722802E13488311FC4ECE1293A20998AB62C411C854A
F2EF48FB3A28CB446A04F299294537274E5102564EE586F97C1FDE8E7BCE0164
5F1AA691490C32785858538FB9793E0F61F648EF2A0C6BAE5F4F2DE812CF0A27
F44E3AA88DE45F8F70D60AEE97CF2A381A51DD43C6B44363FDCF69CD663592BF
1214E5E7F895AF65BA0898D5292037CB52152485A610A2A4CFA09C579CD2E006
4E5832E860F937F033783A44232196BE4A446C77F005D897D944251600E7A6B3
04DD76E0899149EC2E1DA96256A9C8141D8B7C8067797C0CE920DA8C453DFEC1
0FF237E38BC8E19B81502A19E0BD113AFBC2036AD8693B9120BCC420302FC539
68133AC8D20F500250A1BEC1F1A6A1A5A5BFB54A1BE8C704194D72A799F252A7
49EAB7C6F6D76DD96C7795933CB7F3E7C1A598AF5B22527EFA589455B7C07547
E3BAAA4AA7CD8A2387E060A66C2C3B5E16FDACB9A7F68828EFA0F74BA87F75B6
B2ABB870F0D7557BD333B9642BF675C978FCA80A7ACEE65366520D713D1D90DD
8D9C53C9C4BDD0F3E0EAC53CFA25ED64D56A52BB620D29153A1A52CA65303AB4
20F2B3B99DFB0390AF00C19FAB844F6F01AAE2BADB3C2BF6C594D6FC7B8B746C
4B214A485F9CE57642F42A032DC416E323C2C363E3D499F3DC7411DCE3D20E2E
9F67049766B519B6B0A216CECD233B141C8302FD0F5B244B373AD47A4051F998
5A4C77BD0AEBAC90BB3BF0C993A46166786826CFB01F22A944EF21FAA6C12D3B
AC92E531CBFA9456A104A3ED4DED4B0752327FAABA1B604C266E68D2A3871B0F
32F6D281F0F9C45F198EAA6ED04FDC0BC171648126F89B38719649F5B4E0F99C
4BEBE3D760F96D4EE91B13459100D5DEE867A42E7BEB319864C32065C6A7C5DF
A1F2E04EE2DED13B10E73418D62ED96D2BC402FB9895F2FCAD6181F82F434EDB
2A5EC3455DB3B914A0C7743B56A92453EFD2A56C19094AA454350CB8CB8E904E
7535440A065493480FDA1C54ACC8B6B654F55A192D587A2826DDC53126346B09
FC6DDB12C692E6D986BA910BAE379E30804F50C2DF2870A2BD30686307842337
CD1F9695491BBBDF271B5345C44914B7FE0AF47722E48B590F4D9D412F7DCF5E
CC838773EC5CF4BE79651FE79FC065EC14246AE06156B8DFF94C2489C9FBBC31
65C34863C9ED6C46D85A5EAD76FEA95129D12E4108FB815ED1D54A3661DACC54
5C7C06D6F2882D6ED63D5B8B42C34172C5F5B536F44B4F3452249DA1421D7004
7BA88646BAA9D6F0E16636DA27AB6AA16C6617479A988692F0931B645389DD9E
EFA606C7C16504FCC2FA5A8773FAF9ABED1306F7C5D34E2B7D5A9E4FF57797C0
45AB58388D6060D8095361657973BEE789B1578361D865980B5AA8FC9928E2BA
5F7457691AD5BAB068DB87335C7478C2588CE112A6D2ABD436C313DFECFF9F90
2C6A17DB801DE4EBC1B83B5454E4C35C09E1D2EFE9ECD734A31DBFEA14AB6379
D8DA03783632834BC136E18F95F314391B6552F78AB0AE233DF00372AE1FC2CD
0DDEB07C800FD7E36CD3749C4AB08A8DE3A9AA88107883193F280D2C4D9B4D86
5A9B1F05A63A2589A4711E28698C37F1DF9A0903B2FE9462811FB9A9B4274537
274E5102564EE586F97C1FDE8E7BCE01645CF06EC7B61BC71CB86A66D2262E4D
10F3FF50620AB8D4DFE11DD6435FC6A7C2B91B672FA23D9F875C001E76E909B6
6E44EB0771512E7D7086371BE3A8E4186D7E9616692FFBF9287B75346C3864B9
9A0C16F468BE1E3146E48982192A73243F324E91B0424EE530FAB01CB47BCDCA
75ED4273E07B8DF4BA5D60BD978A4104ED1ED365E745994788BCE1FD1B1BF12F
B534F7899E4912EFE1B93D0946C306AC2ACCAA6366E6F24A603AC3E2B599C47D
E9CB9D8BBB745EB935B1369349F751A65279AAB1FBCD29DF3202B5E0E8706A72
A69CACFE93147FD30EF2AA58DA322B6C54773FF3E432D45103C75A2A0537B9FC
B7B78BDBE5D1741193D80A5D6A6D2E1E26746A94A779EE401A85A400F6CA058E
D16528D28E50E37BBEB1D1554503645EF7D8F82EBA11D53BEB168DAA474049FA
840261F7A8ABEC3A504521FAB3A35463DCC628BED7B28B217E936D4F9DBA1C6E
0A74481B0B3B5885EF51C89659D8ABB19FAD92A429E064DBA9F0458FE35CA018
91DE0DCDDF2638DD95A3F250E805C5A55E36BCFC73585F0C578B53C31C392774
0F94414FE18030F79C658F753E052E06897C5964B74BEA0D5E6C596E8FCA1144
3552C4912617C174C738B507D364410722F6D160A04EBCC9B06A2E3F4E207AA3
61368DA447506ABCC3C649EE21863E4C426DE458114454F0DF8E3F4824B95459
4A1F97194B19FA8DADD21642390AEBA0839A4BEF765CFF4C6A36BE1591F76166
981009771AD7721F9C8776BBA7DFFC2BB9F1575D5F79B5C042F2C5A61BAD8A19
B416698F37E82477227E4C7449D74E1DD795E1E522771D7FF4A99C62B6D732AE
42FB8817A29A339F99A0BE9FC33A702D808AAB91FD490A1170B909954466C703
2C6FD3DE6ADE20EBA3FA90A30D7FEE0E3F9FE749AB039FA29165B50ADA66B10A
8B41A78F168514DE43D9EA8AC68B343772084D45B94B8234269F1FD518A5849C
B4888A353080A6446C0D86A6F09F191A17E3F51F5EF7039DD184011B7B7F6505
A11E4649F0D503882EA96A4BC7AAAF9EABD6BB272B4DDAC2A26AFA63810E9342
674F814BAE3BBDFFCCAA3EFA2BF0762C955697300841AF0F3A67E1E6093BE6DC
B400BDF8C5B29A71916D6F2508D429C62585777EB9E6E9DFCA889F03CA3D43DD
5903762540856C9581EE6076F3482F71DC669C1A910B6EF07098D4E97FEBA8C6
50810E23D6351C7E61D40564CE8AC122B16BF9132830C8F4EA9DED9CA2889D59
6B4AA1598B436C0190DB0806D6AB666B48CEBE79971ACFCCBD8C1CF29C5F0DA0
AD053279316D2C62A3F6B8839FC3184140CC21F37FF38C44D2402846E7BBD650
78DF79B28E84FFF5E83A233E2653BA602C9EAE510DD75927D1EB278CCFD57B53
3BE50833ED0A165FCAAF5D02D4339FC2D7ADBEB8CD07884F403ECD84F80F0BDD
AC3DD65B4D7682D1A0AE125DF60CFF05C7454B82F991CDACAEE4206A96B530E0
992F3E91EAFB51032C05E7D4251081B5FDE7BF52ABEE0CA1C4BB8E9B89B65A3E
416FDA61F76F3B0EDB2BA4B97A09D1EE0CB37A713AE355662EB52964096A39E6
210AC25E07669C5BB03EFD1554FB81028CC3569268606D6A522632D872DCE712
646297F9DBB85FCE08F8BEBA84F509932A5679B1CC6402C7C3E99B4D4E924084
B345CC06DBE98FE9E52BDF3CF8FEC118F0FB704829157208E3B37B9CE3F1D0C6
16D951BA702DBBFC298105F4C0C7A0C8632D335E169B0EF7A62DE9A66C36A1A1
D29C3C72EDED884CA9321BDC6EE944C5EE7644A666A11C6F8B4D4D32F2F7C002
945F2928A218DA7B66F9885E50D566E0D1D8FE56392710816D3FA216B10FA37F
FB0C176F77161CB6F2E8C94663789D1A94C3A655B9095640287C7BE851B7FB21
C1A563AF7CCBCC136AE87B81C780B0CE60DD84203F3BDF752E73263248327955
3652820FF0C888F976BE53A8E2F5D224FEFC2DEF84ECFA903E19CF0145CBCA74
5791F2A7410DDABB73F0767894474D840165239ADB5D3E324BD820BC6449A228
E70E9C8B64A36C95FBFAC89720BE0C02B78E9D05CD846EBD47D789DBA31BDA04
37225E8EA1FC5CA55634C938CBAC138CDE45FFD3B0D787379E79F168B55CBECA
8C6249F0739922B70F3A587AC9523706FAB55BDEF2D9A3B50D9F5293BC3FCCCC
0DC5B4F3268A8831F3391A7B2A17E1A8397AD1DB9622E46D3E61F8C996A63AA3
D616B447B0D88B5333661EFFA358EE448BBB24E1B44CE0BB474DFA01B0F4CB63
A3A5C2C736CBF9D48F60E7E170697D0D5D7C3D570CBC46E2F49FC971F94007E7
CCFE301062DB793BF0C98AE337A18C531EBE04D392E4419967E0D5695B8E2F53
EEAADBEE2B98E0C1D30AF2F4B677D1DEAB83F49CF037D31588FE982C7C889063
6CDEFDED3CA00B86C57DEF55FFB3242E07884EE0A5128AE2D8D5A8649CDEFA8D
0F98E2F46B81F6AE1E45DCC7E785EB0D360B9CD0D9B84426F5D95E2DE91ABF81
C8AC2B28B098DB90E754F6CB19C6F31ED0BB94C1A8D3A0DED696A7EA5CEE3FE4
92C02A138CCE9095DD704764914593BB144BBB0F0AE0879CE48630691A34FAEA
F8703942158003E586C24BEFDB1660A6DA6C6F216560A52D57507C8F16BC6DA6
89E34C8CA29571BAD0AF5EE41814285EDEC18B272C7113B1118FD1A28471E53F
170E712ED46D21B92CAEDA580F555C164BB3ABB2DBF3C31130737273FFB6429F
1A3DE552BDD61FF284641674D8D53D8DD0F4A812B51D773ACCDF91E46DC721C0
5C070790C12668D96C827D82DC4F14637E71EB29B666332CC7D54C426D3E5207
04A5B0FD809F2C02709DE6FECF13720D3C291A3211D91902B1B47F21FA1BEBF9
169AED1ADE0A08009D2CEBBD8EA7BA2E9F8B8FE40033F99F0E341D55CFC940B8
8FA9C09F411132EC6D54CABB0B333164AE6602C376F6D2C9A086DBADB8872427
39F5DA5A9BB68CEAF2FB34EF087320F134579D9E18D1E0A10BCC9B5CB415F1EC
1B57DDF194B61D4473594BC46DCA814C70D72F0059E35DFEF5A8F444C41D300E
540D53723DE65F589F8A99057B450A38D203F15211DA39F2E97C0490B34CEBB5
FD0F236A17293D2A720C72FC5983C22F49DDF6AE7EEFF90937C6FB7A0C27C56B
44B37C97E610E1235D485E40A6FD2DE5B292D97D0335BFC690BCDC1C24C42D74
A4D2FBF20E45EBA5D846EF69573C5C757A1F12F5D7738DC15185D782DC6922B3
A344DCEF584652EDF463FACB892CD8541D4066FFB88BA2EE4ED4246CA0155C30
F1D7765504E4DA6CC0CBDF15FE40AA423055761A67AA5CA5709C80980C93D33A
CF90ACEF63A98362133AF921B0B745459A36D8F643413CD4B4125AEE2C4A30C9
35BF858D4DC7D81815E0260D9F69D2E42819E144C777231C4E62D4FB5DBC1103
123F6B206E78E597B6C42ED148806EACC336165402863E27C1A4EA602F4C370C
2628CB2F86C215CE71B98086E3722B28571052662AE666F7236174A08CE19229
209F81567747542BD1857B6F5060D1BC78D8B47E300E3F5F6B8B75060C761A63
AC861E5E7B6492D89200DDB63772D73C36E0280F8ACDDBDE5CD4F65E5B06F644
205E11D810C3394BB359F98A79F25C60A60587BBBAC38A2A054B57FED270E968
6C074CDB097FE7ECB41E01EA99EE04EBE92CB0E8CFAC3F0679CB4C01EBD025BF
2C8521AB6B8FC85ABE689B800B8365F09F8ADF70919966FBDE2B55A8B0031DE4
55BEB83DF8971CCC330F6B9F49A908F0C231A396B14B2C655BE5952539F63ED3
33D7CAFB950DF5FD1CFDF348B8A1F08379922A63735D6DCDF7F981B9F838C135
2A05CEF380FE489886299F77FBD3B08A4B47513E1F8CDC2763558C93AC71A4C6
A30C6D52389921BF84B06A7F9D4ACC50C374D88734FBD497DC54F3D710DFEBA7
081967DDE35D22FA28478ECA85072A4F8584C0C56BC9B7259086F8350F7909F7
92DD39B717578DE7052692B762F300AC38430E55C912A759F1CB5C37DA0BF1FD
9F6A923E6FA1D906ECA7D35A79B6D6111A858237E30DB8618BB04B765781A7EA
A080503F9514C7A13B9CA089F7320D1B9BA214E43E83C1FCBECD5732BDE82BF3
0706C80B42BB37178508EB5EB02F088194A2CF0FC2C17634E2F501BDAD29F6A0
B4858DC52C5A8A9244C27A4589A0257051C54716D2440C2CF4262663EA22132A
62886E7D1782813C55CBDBECE69835137D4D76F9F998377254B981CAE483B8C9
A80BADAAEC8F1602CA4B0E2A9887E140801399E5D9D2687A4FE6FDEFE5BF3213
D02AAEF512224950615DA2039D4EB3B18C87BC21D8078251589F8A99057B450A
38D203F15211DA39F2E97C0494F35146975C6E920D8B6D8B559E66DF370A0216
FE0E91EF043AFA55C6AB9E1895E036BA65DE15BF69090B70D6FB95ABAD9978D9
51090105823AC61EE692C31077A94AB96083B0267E52474998E3E6319EBAB3D1
D4F44B2433E7A5267D952A379B660FE3A9671DD13E01433F2F6A42C11AC2EFB4
24F73D1CB7518F207500359B651D485D7105BB2D09F2A0667A4E0B5D6BC54396
22D0710C560668A4252F5D38820C6950A8B323B1B8648E3AFEB827697D3D6220
2487944A1FC201C6C5263EDD2A7CC63B5B7318AD4E88426DC433391AB62250D7
C4C702A0D45D4311C372F63EE8B1561650B6F11F7028F186EC532EAF53C9DCD0
C3AD5E7844F40FD2CFF0CF5929900BC0C52AAB18CA613F7B554D09121992BE7E
AB28DA304E5F9B1587362448935E2C28DBC443E06E13690F831AC007A75C10C3
5A95B63056A0ED3DDED1C8764477F6328B6D052A4A7822FB23E5DFCD5FF7BF21
EE316AEDA07CC4A99A8102CE2853EBF17B2BFA2E5CAAA03C4BD9808AD0EA64FA
142CF8E49FF59D0132EBA0E54724514A96DCF812CB74EB14F8D958DCCD2755B5
07A75650E5BAACC776F0BC37736BB7988B5C5D0B62A5AE1A81612C6E9BC99AA1
AFA733E4BE2D4FF03DC811A8503601BF61702F87176A0D72ADC1049F1BA37779
AFC8C0315E0F3591E91804815203BED8972A2E4B94BDB2FC07702E1C1BC9ED69
D045E949E25F10F2F48C6D08A7F95F6BFF0CD961E8CEA1EF8D26E4FCB55C6941
8D7A4DCEF51473A539E008FF2FD416DC8EF9BB6EAC27AC7A411BAB23A8B98A51
54DB44D5A187F806B5D7B12FE096BD13F4515A4EC494F9FBAEAAC3B3A5CC1C97
44253567A7830362372E59F5DDB6B2CE6E15F0C7670274541DB212A8520DB33E
41F7C2FCCD16E95C9143AF929A15D06D5FC36307D8A2529ADC54C2FB1F6353EB
DDC027D3925BD32D89219A71D28AE54C4E5A1318F12E614AE73E51EF48603F40
53F16C27E9CF94103AC36D2E1E53C13785F134CDC2B76DF755B976A14DA18413
C9221F730F4CE2BECA91F339C38BCC0E8A7BBF8E4801DA35056CA00B0CEED005
0C709C5F3BE56E06B3A2480DA075AA929C4C36BF112678869F9D1F7AE01F15B2
3E59C215E93A3F5018417C37FFED36B6387112A31EDCCA00299CF0857234BFC5
A88A53C478496A3B19D0573BAC967DB05685E1E2031A7EA3B7A971E2708AEA94
605EF6283222A4FE45E411657A64143555622793CAB8E1FEBC2FF6ECCABC763F
F7C995738B082B32F823112D7A8432CA3BC75E4CA0C1DCBB6CD5E7C8C134677C
18B1B44DBB0703BEFEDB3681A2B60906330212907A7A380AB31CEA643513D898
45184EB5F9852A13A2C0741EBD0A48051A8AA4DE3EBFC3F6E2EC78B63B17C343
2DA80525182B0BAC8AB381658DF10814D8C2A0F73A040D2009AAA8F44A6BB4A3
4F1C35114EBAC0B0F263ACE997E858124AD43CED97BCA4105BE9609DE67972ED
D1DB9D5C392478A32E11CECAEAFB7D4C6127C4A26EAC47FA908E89883F4B3AA0
690A4194719604D655F83392CE82971B9AA3E5470914683E6EB80D0A469D302B
99AEAB36694D2F8AE3A1C063B64CC59A66D8B73CC953D2598485203121E9C7EB
2BC5CD3AB101475BB0BC91B3A3CED4817FF148E58E47B971167B69EB88F05618
4FBE3AB791E28CB54B3765589ABDE795E40A62C9EAC215ED0EEB650262CCC5BA
D17B26122EEAD0BCCA6315D5D70AC07AC571FE97F0350984573F64AF5AA364DD
E7579E59AB8F63B4E0D1C4D5047BDB435F27105260CF2CDAEEEFEBD12888FF26
D3263B07E8CA75CCEE298E96A59755370E746320CAAA9DCD5DC0DADB7CCF14E0
EA440A74DBD51ABBEE7629C98D586F5F930BE96B57C6BD029C1FD1E5EC6983AC
6A3611A50465F747B5D502D625A371A5F803DC9543E5330062A9E9D610A4B7E3
5A1FC8B7FEAB73C6F92F56558DCEDDDD5F86DBCD07AF86AB162929462FBA8B82
69FCCF60A488AA8BD6B6A928D0F96B2F1290E845144DEBCF15B83C7F0DD201D7
4FDF7F448889F2CC1668FFA0AD62A14289BFE2575672E1310821155B82405190
00CBA3B7FBF5919A2893BAD39B99FEC7FDB24FFD726EA1BF025C30CE4E498AFD
FEE909382EF0E686A3BEBF3DD5FA707AD291C4F0BECF14318F0C968433143A19
DAC006CE4EB8D5F3CA635184ADA4CCB77AAD095647EB85042C6E78DFA40EF09A
72B1959517A0630A94699E2A1BD96B7ED397EF45C542582B6F56F890EC5EE8DD
9D075383D04A13A060C09502E182EAB0E7D0D01ABC1E310F7D2A2280C56AB67C
7BB260937BC426C835D610D7A203D903D820554F2930E596BD6CB249A05F229C
DC2C7B3F4693DBD40F4EAE895535B776F6A58C2D632060FEF80336C9891058D0
45FA7B95DE5A47A7CAEF9406DA16A1BD6B4FC7D89648E34D0C2E929AEF3C8034
A681E5C185DB2E6099F26D59596C63BCB936321589906AB24214F3C046A1FFA9
25A1F0BCE47E0B9CBF4A0605D4FEDA3366AC5994990DB55D0FBEE47DE21300E0
86B6B72A4A6C75B51E4E92B09BA26AFBBBA1E86D352FF8A9BC757F9DD3565AC9
C0859E5E8D63E7A7D6CEBA67D8A83EAFCF490DB7185AD9914DF5CB87A377ADBF
202718B9E47B1DB784435B7ED3837C6C492D6B462BC7BE6E9ED093C8B4A7B752
09AA41E1C03396FF5DB218AE2CA8EE74F547200678D6AA9628117E464AEAB154
DFC2C08F8C1098BF71196B775C4ABA7E868A1157850F48A5E0F299DD9078866A
C4AC771A770614994238F3B603EA8489EF99E770EED78A968F1DCDF75F023291
1EF18186172CA4175B9C54145E5B330EE17B769E60BB4E038223B7A6E419ABFC
5589937753F7877838F2D5B1F79DBE83B6B7836E42C2E1AE0093867B053D339D
E411FC4B41FA37916D6925540323301C44136C44A2AC31D49CE3175A99CA26F4
D706A98E60DA7C2D6E21A4601099749B4D140304D056EE19F0646E6F3717C146
87B4D7B85771D39388CBEDBAB8FCD55900D5F58F37B8BF0B208746DB46E7EEB9
94EE7043D43F35EAEA8A72EDBC9A633CCCEA810BDD121274D492B103E77B80A9
643541BFA570DFD8F4C41F743CAB40A330D19EC06E05F9BEF1443C55E60FB949
15A5445F0B5E13B61A7D4126CD6A528BFC3FE53F15ABFF765192B6A29EBC2AAB
129933A84172836F7EFB4DEE53DA4922C8661BE65734E8A75770DE1368D2F206
63BC22AEBB8393C4BA4185765E02D5A186A0D5AF2D15E33E6F6A2701AF81BD10
AB44439173D67A15C059E6A89CAA27721625093B0548600067355C06F644205E
11D810C3394BB359F98A79F25C60A9965FA66AAB8B2568DA5051F0BDA8CE6C8B
DDB68BEA346D846A2397BA520E686CAE8E9320DEF5363899F97A99492A50FED5
E82F60EF74D2DC69A76032DF5CFADB42DD62DCD91816A84B5A0E61B4A96FAE74
39D74DC29EBEA61ACD1767A472830FDBEF494B64F6CE0342AD2CFE207C720243
B692C3529814C334576810697A6DECC9F689C433F510D626A9235C76FC301089
5BE4AFF551597F0B12BD571BEE28D7319ABCDFA4A21B5DE536B34845B32A39D6
C5AE9E13D35F87E6E91140E84EA48A09618DEEDE011943673C2E7442DB7B4B32
6CB1ABCCD61754F54A0F70187FE95EA2F774F5881E3AF035A96CD83831472E38
74EA9FE8F5CF49F3E712EC33B1DCEBC465D8997EB80E97D85D5F8DD5FC1640FC
B2723544574BE6FE1505687BCA1C093FC4681906BD573C7A473787910AC263CA
C0EACB251090DD74D635520606A6BC978B65CCB6E8BCFD8FD2681FFFD4E00966
A059B1636E4BAECFB2FD03534A1D5C8D9F34BA93BE68F19CDECAD67FBAA485F1
3A9F22CD672E245A91B895E0183959C50CC0F6715A8F315DCE323BD90CC3894A
C04E2063F82561A725F3FBDFBFF6BBEA548847816D253298A1B514D379923D53
4C25D1751C2C54C602D5F2259223F792A16CA77A3898BE64BADBDDBD74E52BBB
9C37A0E672C0D6699A187ACCDB4273AC81C68EBCAB23FE732697885EA225972B
D6C53606559C9798C718E4EC9439DE17DE051C7D00D59706B2C3B638A81BA51D
7F09A8F02EC4ADE87F7C412812B30EBD9826468EF776AA50DB09D60404B5C0E1
AAFC5A44427AC8731575559A054A22093F422DB0D46666CCFAE58CE0E5B4B50F
C5C34097CA970495BDAB7A304C0CBBE8744B8F3C526936AA05EC619A0A358D1B
99759EA49CF964415E1E7DBCC773CDAA6F43BDE220C5EF04E756EAF2F0BACE36
C7282E4424B8DE1EC272D494711BDB12C2B958721C141AA1C9AC7935AE268D6C
C0397FD013422FAC74738955E93C419852F87C10FF7BDD24B7576A32BAFCE624
5C728C031DA05B2C4DED20AF7252900F4A5D89F0AECE484F074436D904988DB0
09251F67A075C6404F857603EF0FA890E89A03048585C5773CF126204519AA60
0E3CB03FE4F31C83349715FBB342BD877FABA6838977C7B7DAA3DBDF1296B333
4BD2CEC1F29CDC576838558F288B084DA266E37748CE08A6006407F3A70E315C
395E6C66D0BA44C5BA74802BC4EA0BEE5A6FB6F2FFC3D8E2CF5BD4A4C836CD9D
22210BACFD41FDBB6DF26FC64850532BB3A7373C19707804E8BFF35474313856
F9977220B3B0A27425262601E683F9442726508A21751D9DA646B4F9AB61E236
0E6B1CC77FCDBAC1928BB57F75C7E09DAFF5DD7C1B142979D80DAF5B823B6A58
176F5DDFC289AD65CDB653D801205915E20ADAA3D36CA6151BB9459AAFFBA750
A16A4925D1D12F36D415DF7D1EEE90B296A62C0CA341D9A267DD625278CA43F8
F19BA6D8D6ABFDDAE449FE6818EF6C7FA569F3358981F9FDB90E98DD83E7D478
C3C84986E351C607587CB7994C3C4C2E47B0DD39392C8A9C6815FC319E206F50
4A88C0174C22C667BBC7B0B298CCB403E7CD69254257410A1FBF9ABE10F0D5A3
F8E947F99002EFF1919E9BA901942931CED0DFBFA9A38602E4109F6BB90E7999
075ED9B8E55874A8A285804F386FE67F38B62DAFC9A13B8D4442B48D0867687D
6EEAD1565462C79C96A9EA0016DDA6A4ABC2061A6389C844A4C3FD66968FA5DC
9525A29E42B85236B9EFD5350F929F8AF64D51B39D0C1AF6ACE836B4F90FC669
42DF7EC5322FD08D6563AF9E92E279A1E74A9EA489EADB775B17B8BBEA64DA7B
87985DCB99CF0C05D74B7423824191620BE3A74712257DAE407C8BD0E2B022B5
566C544B54
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE27995D78FD99C5784B2B7C7C509E9B93BCC29
35CD2714C50B246A7DC70C99B7DBFADA1E01B81749EE49A70853CD45FC323019
A45BCA3DE39C3E7618C6322D264556FD657D9270933D8B167D2575CF146336BB
1C76735F3B09470E40B0624E52F21809704749F6D81E3B829D163D9F61E070EE
D8CA803E56CF227F71EB8061B83E035C7138A7CFB6D6CBAFB766754C0E8934F9
AB738930EB75A2713CCBE333CC60A6A8F2BFDB043ADC0B94FA3370BBFBC61D7D
25524B08C70599D58E7521F58D26AFECE212309BD7BCF62735379ACF3309DDC5
C3F30DD7D3A37804BB23274D7B30DD69E1B2C3CA70F2F79FA29543F526BB808F
04609B43776382C4389362AEA7FE4E03637B4599D176F103143DC04D5B5E53D8
568E7911839EB05C8F4A9E9C911D746C4C8EBC0A4E6AC3CF08AC86548A8FD6D4
7450B1FD87B119E547047F43E9CCDE1C1F8645DA03EEB02B27E36BB6C87F39D0
505579B2D0FF4DA9D4AA971DB4C82693DEB59FAEB3A14C1547C6C46C24FF3513
EBC97357AA2F25BCDC92F98CFF9F3D5881095B96FBB30E8330499FB4803EAF74
920BAFB89889071729076D755021515BD8DE5177013854B10911605F872456B8
F504547AE968C323B85DCAD9AAD5FC33F29A921D427EEE0E098E8591EA7F2D7B
A5CD8A91C01AE80B672831C286C900AD20776B50D4D2004F7295D860A2974B73
A9E8B594BC8BCA8356DB43399E6A6918A887A64B2EEE98060E47C0F371681713
13F92A306D1A7DD5FCA29CE223138B98E6C6BE9F3B305E2E4ECE098AEC270F11
2CADA74CFF4BD78C5DEF4354211E3953CD7AD90239C1FFCA061A21652104F54D
4CE1C6B388B901F937A299F65C3217180D4BBDA87A96F4C31014265EFD9206DD
DDD45DD3F56823BF8236F0E6B94537D9CEF904EDEC7EBFB0E60995CF6457CF0B
1D76EFC8D22A8E991888FC44FF9ED2954B7A9DF5CF6F256C8A86C3D98CADF1E9
24E6C6725EDE1262199758B2B070504BD81147F35D8989D2CA44BEDE6B8BA09F
511388851B9D9865887D4EF8AA7AE6AB234B252A506EA2EB59B1AD40A04BA972
EC6DC7C9E4ADEB7E40045F10F38E0C8D50CD28D96A028BE7C67D1CD148404CE3
0DE9213AC26B82EB823194818E6DE249207343C37BE9B926EEDF21E1D52251D4
37D555CB1FEF227CD15A08CA2A245C3C6508DD3592E809E0C72380B92F4B946A
7BAF34835CAC375077A843F61978AB4876871FBF42DF8EB5F877033452F08D41
970883CD836D1668B85BD642F7F50AE117B3ACD1A1372D5D4D2555A2E8E23E29
D8C8C5F39807B5A01188DBAA07A27A116C80E837DC740E86068952F0A57E9027
C39A603A4886213EC782000DEABF71EAE1B8944E2EEF19E1F7FBF442840845EE
D13FA9B4C5CB1FDE6F0DE20AAD69160BFBDA23C2D29311C4F82514DCF27C6B94
A8E727522E182DAB2869CD2C2B0F39016EB778060F35A6FE085A1BDB04A65CBB
6605D4D72E11338D87D5B0283A4B81EC83D03F502E7DBF202BA558B4EB271C57
922F0CF3980A02A40CEB2FEE42B631C999B71EC234FED7B269E5D91564F0AC54
D70F8EFC63B94F73ACBB4CD279716F68783C493794BF12502E04FC52064E63D0
05F2034A1E7E4192D1193BD94E99C0CCF702D9EC100066E1490894F5ABC92A92
C3F42F4101AC88024884C018C7D0DF65F7CEBDD46FADABA26B5433D34C2AEB07
6031841EA02F1C9622E0B64CD190A4AF3020654123563C5D6ED62F112077A1E5
88A8C8499A8917CAB23F00BC124FD93096D2603BC6C1734124CA3176AB14F488
26ED2E56C67571DB18177A07E082CB873440C4648D3FFF06A1499A5C7EDBE172
1759C1BEA3DE43B426C5E175B059005BF2911E685D076FF12D01742E9AAFACF2
CFCAF0517858C28A24FFEB5A26E46BB5B788713FB8009CCFE62C17E001C96636
A8DC58B71D4BC720F615D2873CD11E06DDB3A7788888A8E713D0E82FC861C0D9
ED98E873821095C6BE6CA909BCEB6C9BB1B0730BCBCB20E22D06AD1AAE225D51
25AAA901A78E86386D29A7CCEFBAA8F35B4813CC9D289E5244483DFEC10FF237
E38BC8E19B81502A19E0BD113AFF02F4E365A4708189A7BDEAB2D32A6E464AAE
B3505AF669EC3FE5A7C9320D907438DB23A82D8CB9777BECA40890C137564EAC
CE768714D7430BE1825C90D88DF40E753607A06AFC0046335F97A2FF20EA44F7
94C1DFD6B105FDFC6EBC6D5745C10D2C3BD560C939B80707B471D13D7A910F23
91FA6B63F2E6A01890368EA8F0D42E7A93B343C664BBCEBDBC0C99138A50E5C0
F57977D929DC9CC159568FBF5523D79229E9BA352E4193A44EE745F76035DBC9
34588B2B8FF44C8368C9C69AD17E91BD78559AD4BE219C8B110472F95FD5CEE1
A7EC2A78941AFD0B102C6CEF9D5BCD4C4FB87316BC327ABA5D5F5FF14BFAABDF
9FC06879D91DADEAA25F850083BE6CC26AE7437664ABB66CCEEA19D0BDE898CF
328861C3CB4423FD2C0C1AFA95A6195FEF30511D5C87876C863364CE4B089A97
6F9C29A14A61785C42D2C746A98194782D9A504B2A0A92D4E4B5062855A33404
2E14145F4684AD22D461E740FA8DD232D18E559DAB50A977CF474EE1410D7097
785D120CA5C6E051D096CC40E931BEB074AA9E32BBFA361593C78D0D2EDCB1CD
D560A14E93017099D24663633B06BBE3C20A2718C044731B6DB8007749D1B605
F397413DF968722DC03BD138B0559D3E5887B7EA9C9C54F8335F55CC3F1B9135
C70CD0214CF04A4EC5AD120D492F25CD6E1E80CE87C5709112938ACF9BB2E011
87FC035CEA0FD5C1147D41630F1CC9B82B395BDCE1885A1D5F3441B03AC321C1
5CDE681DBB192993B553048C58C55F0E420DCEA46CD16B75173C5D37047E511D
C980EBD803E01C35504C4092D93AE476AB15324149043E713261671835DDF160
4B8DA000941FC5F85C754D5132402A0A94EA3D0E37D6B9890461CF1C65AB7C2E
E42288BD17DB983600580BB1513D30983C4FCDD1836FEDC80308316401D8B181
EE2A3B114F68DED3488EB9ABDBCE6E73EC5A0AD42D7735045D594C43A33EA29C
BE2AB98CD0305DD935D8F0F5EE3205A7576650887883B3C9AC23E217F48154FD
6CE1454F09486B47A5A18DE65034D0CC9F9F66DE2BE45C2D6F1AF8B10F578B9F
F66D78D738FA85FC454C23236FF4B665EA0E6210060F6439E9CCA612DC7ACE7A
D12F478F25D40CDF7D23E3E543B75A97A7BC960A7F742A2C89212832C36801A4
C384B89A91D53E0CD886C7BE0692CEB0CF29D9B4BD53E08D9FC1A863599BCF9A
717F4DC319B4B59AF009C11A91ACB087542F94750DC53232E62ACC3C660965F4
5849011BD76FF8489964A7848FC6F3CFA44B7F502649EAD20FD32FA1999CB88E
A646C764BD2088A3EF00A4F1862F2CAE2F8B6A8DB26A1287AB3DD941A92AC57C
EC6D4CFCE0ADFD99BDC3BE161F4C1FBA9B854899BDB7E9D09A1E25A95E9789BA
DC6967F96E550903DF9B81969E38FA3DE2A058EE2076C77C33A93F2FBAECA0A0
EA98FA4C3D1F8700B04CEAEA603A0833E91FB4A44AC83C4E86308B6E89C99A84
8AAAF1BD143560B559176CAF28B1D8B2C8370CBAD5873329B24AD4A743F2CFD1
8B26B1128AA48F72767FF2268BED8317FAFDB532191FA35C2984AE7C50481FF3
126BAE5309893814BA28263EB863D5E6F01C423E6C5D3289B152CE19FDB55A11
282FEEFFF3E262F26041CB1AF30804A3CC34C06C6FBA8AED582215711B0A17F4
1B505FA0B5F906C537EFCDEE4C69AFFEF89B74C5B83E2DEE7642AA85B1615F9C
BA1C3C3197223C98A1ACAA495A6B8B8F1919AC158DC63FF4600FDF993CE8D2E6
3DAB7E352BE200322BBAF6DDD2628694612A7790EA8E1836533738405E9B7AB6
9DC77FE9A283B3A8C6A3651DE8AF71499D39CE0567AEA286091BEA9D6A443A5C
D35747785C433D4E18A02ABA38F55742DC36E4FF07A656AFDC3D0A32CFC097B0
5F9D90CC4B614AE7F58F3BFAF22EE6821291164B14DA11FB16C0E671A6104082
94D05830E44ED3E9908B59DB3B3506C60D3F766ECE69AE23369AAC3B5951B557
D62C7728D6E3F13BE05939C2A6FAA336EFA57001DE299223DDBB333D71003681
B4A816B378AFE37543607554F1F1B427784EFB366CBFF1CD7CD5FE3CB61842EF
56F134AB25DCAD2BD08AE61E233FE6FA79017D1883C61EF0334681CCACC5D024
F39309DDAE717CDDEBF80C88974D717C4539732DAD1226FE504620FDEEEC6266
41060E55159270B4794F9C0945FEAC295D17B4E252D015910B847534A519CFC3
2D52169510940A9E9AD636AE141331BE35D1D5308C927BA3940B773F20E5B3C7
813663D33205454A1A4B2D9173D593615C4459845E1AEEEE1ABCE3E5328D3F81
11610DB32C86FF6F9DBA1B8D6BBA3C4AF64523F37F176F3256E298D22DC5F1CC
F1A67A355219E2EE13D5D6369F656836EE0A77206E8236649E81A1F0E02D8D3A
3C8FAAECF7839D20329CBC5ACB43482D3A3A1E9C3A426BC7FE406E89FF25FEB2
34CCD7F3FB3C608FF37988C7DE6A41FB1020DBBCC762F2BF24BF424BBB2D3207
9DD408226AEAA0C4DCB8DF16CC6767B0BC73EBA052FAA5311407ADDD4BDB1061
3A860B10D2C219E96E61050B98FB04425912F484F5B79B9C0735F92C1B4353B0
76358780D1547206329F302AF6853E5DCFBFE199A76734AEC487BBB103A8547A
0090F0342D48DFF9EA9821454CB759B3D82921AB4B9278E652C2F30A8A121781
8CFD111E32142FFB160DB6422A5884151A4671D631260FB1758BAC67E14234D2
5747F1E68E0C36FEFBD535FA5C64B046AA8835817140B76DC22B5453AE8F3F76
C69B9F10988BE7D061F539CC8711030D2483F752706E27D43E3102CEC57B8A58
6D3FF862999D20CD6BBDB23762249BA7031D4D97DE2280C10756DAC422F0B747
E427E5DB0B265FDD57193B8E7F00C2162FB111DC4972B51E59320793EC60AA3A
F4A3F68AA5E11F657F898F59F67E0D285167231B9F444D42F17CB182EE584117
FC81DDB5BEF8EB957F817C5699C7293E47DAA4EAD6D47F00FC6443EFCDCCACE4
627CFE80E82179579BFE305B9AA1770E8E8970E70524F9F7AE081E64AD1F71D6
CC6FF054661866B68CCC383E5403F0A734ECAD86937D32FACAB6B04F3F9ADD79
94C11CE94999A3F38C88115D6082DECDC2125A4643102DFD0AFCD8682BE5CA11
AABA54285DEB171209CC4CF8879A65088C7381B9029B67CE9029093EEBBAEDD4
403C382D29751340F63D14C45D0C8ACE829FC3034643F4B76AB7BF41CDB0A2CF
B2CFF7A3E022256D29AE0E789DBA81CB4DDE7D4A970A3162D903EDE2880C20DD
FCB205309DA145A55A2C6763E0D8BC8A0BF42461DCA1CB7E613647A93FAEC756
3535886E28292A422264BAEA373D5F1AD84FC79DE23E2BA52D8EE1B1D3F80318
8614D6ACD81856288366086F50154919E5C99CF62A7700E896F5B69456110B9A
8BBCDA8551C3C14F979F3CBB597AAE41210AA7A444428DD055DD35D91A1DD465
3800988005F542BD304D2D1798BABD827BC8A689C3C35078CC3502DEF40DE082
B544B4AF7127EA6D5B8FF5A0735257BE29E36A29B707A51A697A4D8A360D4017
19C5FDD791A1C640D47AF86948448DD00039DB41E9C5BE1A7E6BB48920932280
BC552ECD04E2C33B76A0F6172098AA76CD4660980EFA1C84D5348740B8A4885A
BE1FC79E81913524DB238155870C6B9819E5842664A4049499CAFA7351D3D3BF
FEB9A51236038D4452E44A34F25718B7158C40F12ACA152F1EE78072533F8900
CC3A1869BE48305DA62447B28A45D6F516078C72A4B155A2715B713EC359F680
FCF2663644C985191135F0156722F0BF1DFACDE42BEFD5278ACEC4A55F1A082D
537B3C1EE890A6FD2ECE0EF3999DB161EF7DB88DA4B0C592385D35F705BC2A9C
CD7351AE879DBB7FB52F25A5A5DFA45DB0FDF9B94F0AA69918932E563C8827CC
340AC4350DD2FF1A3EA9F8F3711A16CCE9A37170F0C02A9C7143D722CFC08677
6227901157114767FEC20D2DBA71C87061EE8BF523D591180D29A8F8E14A7959
731A74DC4B215D7EC095EBE86A3CB7C28C2EA7E6A19A68B64EAF236A3468C0F9
453189A1DFA55A9459D1C5B8CDC769D992269E6EC4631B1B75F7E6A511DBD978
F3032D2FC6BD54FD7664FAF472BBF13AC7F619FDC4AD5B38CE04E4C555757F69
C669C5EC403770F681C400FAEA98F62F02633E0F85A780A61DF255239F9BC3EA
AD652E6D5E754B9ADE46841E52DF90C3F0D7CE5DD684566DCF0B43A0B0F975DE
AE2F7601EB63C39D6EE8C54611D9D515EEBB7192C63D22D02BB2A5A27270225E
C95173C09068553725ABA9423F4B268C58072241D2DC5C080E7881848222220A
63605F00205C205B35DA93F4D000126B2CE72AC322B4D962537889CF225B3381
6EB449BF2C28599EB66F071FFCE3410C547A9B74D216032B72854A0B8A6ADE15
EBBFD5CD2BA9FAB7E75099FF1B68329FABA01826377C35067A7C6785ECE0C669
C0392E1C02A9F69CB191E2F8FCFF6FE23A3ABC8D6EE13773BA099E9F33DE6B1D
442AF96EE9B4EA9012AD3D9EF3C67E4341383124196569481872D2637F7C4006
1417CF942117F2DD286236367D3FD6206DF1B2B7701C20E811C3B65FB8B29B70
C0831ADB61A92C2DB592CF08B3DE2FFE5C4AB1E7A8E709E36725A1250C5907B8
A7B5D6B23DA27838D078225DEF89BFE7329F2B420491CAF1794C18EA07230E40
7DC950C01E31D915C6626F6E421543DC7754F1AA11748EEA4132F47399C1241A
A3613DD291F5D1D046FD9EE8832D60E91796C916FAFE58F51818B80BBA556C14
38BBAD22C404896C6490EAFC75CBF6CADA6A6B7C7B6E01A7BCF422C9A4A46BCB
3A9089D8B41B2CB3007B8260783AC9A3A8A50D9E4040DC6ADF8979C2C77291AE
9C13D9DC197DBFA7ED11B3B415C97314D28889AEC6BEA809470BFCCFEF0C622C
FEAE7F4AE740D9D7E24185FAD3D7048EA67AB4E1DD05CDD42DA117D5956FFE71
11F3426ABA50B07E0C853EBD237F5F284CDBEE82439B418703036305A7184A00
FDD7F36FBE5932DF128FCF4C4E5CE4CFE0904353C10378E611ECE652B37E911A
E0E16EA81274C5AB5F77B2C4564899F5DF9BA49D9D26DC2FFC59181147EB065D
30A883FD14933F4B11CC112DE73301FD9118CFA0BD6F3615B632568E0EA67288
F7AF12B051C4E298AEE276B5FF364A289222E6D4251DF41E0518AB7B1BC7F70A
162DAFE55AD7817AA62773CE160F630FD00345C1DD91C796157A282D8BC6524B
578BCF2CA6C2E48058A8D65B74900DE1EA95B981FBBCE8D846DAE64D975C3746
50DA926F24CFC1AC7172514CF1F4CC942F4B9DD6FF29A0F681BB7C42AB16F3DC
305839233A6D79FF1C7CA9DEBA71EED8BD7ECF7829B310429383B5497FF39974
7A568AB4C2B2317D3C80B1A70B71AA537516A6AE9516D7DAA2DE6C0097EC1BC5
52EBE9B4BEDDDDF27B0F06F006AF07A0FDB7C9FBC784A1C9E0506142709DA997
1E950373E5B501F24B33988323DF970D0D828005E45C4A8C4BD625056509BC9B
DE9DEE1E8951142A28319378A3B3EFCE8C60473C239DBA7010D3C9B6F79B12C6
005B99E6F7F3A6713E67E7C08467C617E31DFA524A30DB6978E8EFEA63DE4D8A
AC6484D208FA185432C09B97FD98032422B18100BEE64228990E597E21FC63BB
E8685F31189067F87F494CC6B431BAF0804D83527ECE7ACACA59B8688F63822D
A479E4279465A6CBD43EB5B5DB8B72E96257500EA7D9EA5958819F5CE03BEF6B
59B669723240EDE1525C5C1331150CEE1B942E6A555049252B35E961494C96DE
DCC822B75C8DBB2F8F03639A13E6F3845521A3F14AF26B04B69FB1E640A4C091
91F2A840375C3B89738B614AADD69471CE6B07099AF0E0F7240A1B663AA364CA
7EB90D4C37C4E6C970F7D4EA4D8333C5B27CAEB1C046B8B5D24ED5D673E26A25
811D4BCA9D693EF8ABE786B61C7B7E2D7A8185EB91514A80F81FE7226F672089
0FD2941250CC5A3B60478C7CD7C2D18483F808522BEC54D877EF9C47598585ED
0C78B4D7E5B9422B3CE88E98C87926F208D2B653B93AF76866E38F6F5B4953BB
6790BF383CF2A56E4E746EE98B9667072874B21A5F98225AE4D547C925E8C00B
B3E642A64685456B6BAF629AB8085CEED1CDAC6B7AC4296BCDC0A475363BAE29
98C2FD754A65945A958D9250B329ED72DFFF1413E660A1ABCBB985D94ABEE7C5
95B123A580A6D198644049DED12F4BC6817CAFFCF66BD9DCB19A5853273485E7
2F65B9817B90D23D92B264D2A274CD739F6A9A8920C2DF579A8C1E5ABC2E74FF
ACCEC903E9ABCB6ADFA4EB07AC36443DC19A5BE5EC10A5E013BD7D621A9025FA
A444DBC3E4C66B4530CAAF0E79D1775A4271DB221ECCFA25639CFDADABB26CB2
5314E5FF7110BFC9D5E0419ADD2F5CC1C09AD68EB9A83F51EF690F901A50B844
41C4DB391255574BC6C5F36FA9DC30E799BEDE4F80E5CF50E44B9D8319141D0F
640C2FAB459AAFFBA750A16A4999D5A59AEB5FAE6FA51EA6EB68C744D6880714
44C6EBA6D73FAF4BEB8741396750BE8416A3F738EC0C9FC2350C3EF29619FFF3
F800B8ACF3E15E01BCDB6D4CD8D1F8188BBAA1A71A96F1A32525FB3485903C00
361D3E72B126ED17CC167AF71471686937FFEB7E81904730359D72FB1F64E3B0
41A69B2441AB076D0A741AC388F04B00DE2653B18C99512BDA1612DB547D75B1
47C85088703C68C018951631F2EA80DF2F50241D796DC4A59A6A3159A5DBF34A
90316A3FAC59C053364AE5CC71BA9B8CEA1FEBE62D888E525888557F6B064CBA
5D4C249535659573BC504F7BD9AD7ECACCDEC2CDCC7D47FFAD34A12895B6587C
EADCC469FF3B2A422DBF3A339BF3DA423C82A9EF28E83FDE0C3C995E7B4F9755
F6C52B2F1E9E66AD9E7C3C3C96F6FD1D2A69856DE1ADA86B4EE8FCB5924E01F7
3A956FCA977A5793953E2790EE733B4D4C76A47A1335CA1AD3C2B451361DC744
F4815256430F566A6DCF28A6675A0EB20A8A3263C17D6B79FFB92592316FB237
45EE6EE084196CDBAE8F16946D857CE704F4293D1D7D5BD0405A163AC9894C52
4D7ABA6326C39829DC8A2ABDFC584BBBC8AB8932CBFDFB9FBE0FF0161C8AF487
9CEAA37352D164013DA9C1D285F1589F4B98172F185FC890116846F6EC00754B
2523E1F4D80ACF16020091018865E23D6C0C9BA0696A6B6CCFE54B6B1DEB0F94
AEB1E311381ACC86D0856C90A91D904C918800DA6A271351A831E47B7741A1EE
4FF0706BCC02E25EC3124E538CB207A3D156167BA2B5BFF816F894ADD3727655
612374EC339DDFEF0101A9CAD4EFEA168F36C55A6E9F4F58E4908EFA20B7551C
67CB65DFB3A6A4F462BFFD7FA6F55790E477C71A2F7CAA6DF3E02D22CDDC8EB6
6EFD45A16A26F5B8E1ABE5009BD17D8A90C410881A96F9B40CCF15567797367A
96A03D3AC106E06F828E9615640596CC91711D12A4155E5D1DCFDE9F4ECD69FD
31EE19C5D98A6566CB91770EC7F8004DA518F5ADAFBC89A00C0681726C4D377C
A89ABD1BEE3C9BD84A05DD11CF10D6B777A6AFF563AA3CF9B4F1B0A3A5B0F48C
D2BF96F92CA5FB5B497F4632B1E1826CFE046796B89912BCD6B7BEE52FE335CA
9BC02E9932C4295E25982DE1DC5A7E47644E6175E9B3AF676603DD8C5F5B0370
22B38CB7D8F49636053E2BD0287A3C313E1F43F07D3DDDDE40C2AC635ED04731
C461CD14359427CE75FB0E2B46B3E57B2E14CFE2728FD062DED1FC4552C0B714
EEE9BF2B469ECF927A50E97BD02496F62FB0778169721B3F1714B1B627B79606
E15D1DFB6E3E5386A1D75068986D021414BCA08AFD84BAB090E3434034B8BF9C
336D7991B97D2C102D99F17118D9CAC94359426F03AE236B9B02B7EE66A54BAC
3867BE0389CA1678E09D9D2EBD374BD0E2F84C30594EFBC77AF9059895E49154
05709607F4B3FEDC85A3A7380BC80D15DBD5160922AAF2C11B32778159AE6E49
89B3E184DAD4004F875E8048DD691A98B1DE92D88DD77B8715D6A220A3B1458E
A90D68B2B13A5D4A79B827C93FC2322684F24F3418F9B6CC9AB5C8DFE79E4026
7EE1B15AC390E3A7C5FE2404D7748075F07DFD48CEF6189F13619637A90BFC57
B1A5CA1A11C56146853BEE469B08171BB5ABBB29858F65E937CDE31D67C84771
9779DE0B331E51AD8846A82AF91F44923F25BAC6773C8AD0A81075F9B4A3F72A
50F8C443BB34DE842F3EBDE357648BB47871A70137CB99E97048161FDD3D79BB
1648BD39E15558B38FDB6563CAE2C57548E0182F692E585713B5FD22FD41E4C8
22E7774D2E36B7DC679E91F344E2181C9631F0E3F0E9D10C6306693FE71BAD27
746BB08B22018E76272937A91A1CB9421DE1DD7BC5D109B52B7093D785F4380C
E7E2D15E9763A4AF799EB15520B2AAE41F05B4B317C454A0F5F54B21DD7097DC
BDB747D975077B37CF09EA6F16A1452EA51C9AB784C23CFDAF6F044A5C2AAA6C
CA36A436B73CE97C83E306D223CE7774FA5AF973D985C02A46E776365CDF9B6A
32D8427EDBDEF885B59E018386AFA462D3FC884E32841E6BE12817A12E65BA65
C7CE675E399D4AAD46370C76C3162444F3AA3672C66C81B3B00D9D4F0432AB3E
A1F5D8579CAAE0CBFD02AA25E4E522F1AF1AB4EAC6FB4A789EB88F31D5F2337E
AB4F70211EE6DD75D887C411A4C185B878B8003E1782E9A3484F8CF8B3DD20C7
3B220E9E8A694F5AB21C2E9BA2D96F527B19FE75037804AC7C59F192653317BA
26FFB09FD38C60C117C441E4160DDE659F85ACB1F058AB549FBEAEF52AA3B808
61CCA95504DD63423BF603B14459B7C691BF68F5854FBB70F3F5EFDA7CA047CE
71B49325EFE87D508AAD5DAA2F732B12BA10B7B6B0263B8B5CE6EE63CED9FF7C
620329667BDB2B79A6C97B54B8BFE82A1E6D7F3FEB2DA1454935E38C1FAA3A22
54B70BAA79EA27CDA4EE2247F7B8CFD1429C72E269A2B8FBA0D207B75B05774B
DF89381798A1A62A0A6F8E820ECB5FE4ACA6A493180E0B5E7FBCB90CE9D7EB19
13D307114496116FF0087A487D8130DA7AC5BD0F503D3ABE63C3D4530E353E52
70D5FCCCCB54E7F0C9CBC54BC4CD46657AE3FFFBB204C6D59B5DFCD3E19A4F5D
703731C17E595D0E697FEC6C9A25BA86E49E0C7247962F244E4B3EA74280B710
1D384B1B4FD9F3CC4C007DB73015E52332A3685589F3ADE54C2F30B0AE131698
FDF6B55E5B1B11C5AE8BD7FBDB7BA6E909226523E23AA93628A6B5887CA2263B
F3F5A696EE8686AEEDB31E73863967A4FF7FCCCD04CFD61476B4495F926D1F42
39B2702AAA0A8F27EC86192E30A5239A449B68FE52808798B648EF2E5A7F38F0
1298636F8E1A427D4AE6F0DEA8CE198ACD51B48CB8EEFD48E705F80B009AC980
3066E498C82811CDE551ECB3C8DCC93024F925D8D44389868B07F5431C973C89
C949FAD868DAD4334BAD9F343C0361D03B248E7E7501BC64297D3C8BAF3BC9C0
D33067D50AFE8646CCF705322EFC4802EBEDFDEA9EB53E3804510BA9F24361EA
4C88733185E2FC5BD3720DAF7999C66F6DA0468D5C98B4E9C99FE1B4DE04B482
145F3CB7EBA49C7009564214078E4A64A95F3973DFEFFFA71B3B2BE1D5167D0E
2E82D385830EAF3992E4D8C863BA7C9E05717986CC8A452AE463C1E004348320
6B2C87D3A3296D84F61FEF1A5C7C895EA1EDA6A750662B898F6533036D413777
7EDE774B4792EFAC0D84C06D3D1AC023AD13814FE8FAA4A4E29ED940E9AB5A98
1D904C44E2AAB473137ED9F52818FAC02AC17A1D5484A8ACAE902CE9F29800BC
B01465B2BC0429162BE040639F2EE9C0FA967C96E8E54A1BC5E7269F5317D031
A400EE8C4AD035FFAA196A95E598C9C34E74DDF7A657AF1327EA3EC00A555758
DD88848D48A7E98A78F95DEC58D847DC65E9CB0E30B28A72DEC59D297CC24DB8
9EC76930D071A679EDCE7F36826C7C0C0289A1BAA29D4467B2EDB0A303437071
0E83C814854602CFA5EAE2D3112D43FF22C4723429BCDC4268B1F9CF94C24746
C3FDA17F2C848A4711583826284AE6A9495B072911CC814C19D53B95DE0071E3
A439D65A75E6227FFC6637647F60685A0DAE8F715731AB8EAC7DC648C5C31523
B52641B2281242D1E8539722361272D9A50C5C4C7A725889284D623CD8E5DF6B
C4ADF8132D9F85C7C229F5140D0B98341339A5470B4C89E24C9D753811731297
11D3BA7C52C08E87AF023C833F2E36C2977602AEFC5579B8123C43E8AC022D2F
38D2C47100AFC4401601E1EE4498B7F8AEBF68A600694C245667C46D5213F053
C32E9EF3DE510D05F01B979454C6280A58F8BE30FB98DE2420B3E3A28D735CDC
6DAA8E1A598B5A1519F8F01D006ABF646D25C4A9B937FAD5CC305A0836C5C198
E51243E50DBE5DA38D700443A638FB7F35261F2A09032C9F3A272B7A987888C1
E9D50C054CE99B9F7530982C062593DF513D3154E07738A2E39D6AC9429F1A35
9113F89A45395CDC48DBB13D7618F4FD6A066A4DF35F8BF28C680E7C90DC710C
4909D50036BB8CEC5766421818C10E6B336804C9D88F0EEB0C993216CD336AEC
EC76C438F1859B7494E26582C63DA46ACFF5D5CA41BAF982AB046F43B2DA7552
C98FEA1ADBBB93C025B00E220389962060DD83522D571226623E88BBEA686CCA
DB88397DB2CEC4EB12C2BEA2C26F768EE4BDC1C612B31C7A4A924DA62AD153A5
15079CC4F3EC104592D3D38E10A40C93CA40F8C88F69F5F803FC20B59D8A94F5
9777FF203C063AE8D9EA873AC7B461E0FB63D7C1CE62B8FF34647199204C3406
C65BD371F2E48C48712ED6CF7509792BD183F6711A994C31A54DDC94C9A8E862
5557BFA0C123C0DBC628D7EB2B2787C65B147FB7AA49FD7B056D8E1B1611D4B0
2E05A0FC41A267943125A76D7886A4E6E5F674F6AAF028CFB851E1C22E111F6D
B9A7F8D9F240B8532A91268E9AD2571CA84F117D8558ACD6BA0098C6EBB1AD2C
0A04BA1E0069833A45342B060EF38B19B97882E8F13AB1EC270722A28D29245A
4AFD3AE32BAE8DFD59DD21624E295E5D05CFB53BF7212E2933DD050FB0820AFA
1B2AB99EFEC6D112762B8527CBE3381953B0908617A28D2D6A522B49382C0377
8F67FDECC3DB4BBF0897CA4B909C878C935A958D9250B329ED72DFFF1413E660
A1ABCBB983608D0F5AC9308B32343F2A9CC22EA7D87E512F1249123C12BB8964
D3312AFB91898526FC628BD2AA4BE6827C91AE15997127DFFA9ABFF8C858A51C
83CCCC572024A7D128D2D567877FDDED97FD7C9E73DE4D6D4ED370EFA66156E9
15C6FEE8103DA73B5D782BFFAD7F7C029E12E5D24D547E35CDF1465C249CAB87
0818FA5CC7B9DE515CE6BBCDE3633FD159C855C4CC46FA71B56A2DA46A21D10A
567852020BF0C27F175DE9AFC917F2D783A0838DB0BDC5DFFF8BCFDF1D312FC0
FC0162F47FB4D8D9034DC5D3CA48DB26F515B6576AE85A29BA65112121E1DEDF
8597ED4F734B0AF63F7CAE541F9D511E2DCE82C4C641402C6A9A97BED4C33668
C231EF31A4D5750105FEB6F0C532000809CBDB3C5DCCE929A32C7F0DCBA32F57
AE6C9BA2FD61BE07C5DCCE8CDBE1C6E174AD0D12926D48FA5F6E1D7AB4A025BC
216C928B09F06332844EA9D12718D41C771BE6B07E1C5BB164A3361765B4356C
4E2C8E6EDC84FC313F99904E29111C174A42B49151D18C1047F69B50F6742929
09EE79FE294598B8493F9991DE93CAFEC8A86650ECB240F696BCDDD1A9F0465C
B43B8244578528A86BDA20C9BFB9FF931ECEEE556BCC9C4374EA6B2CCEDF09E9
3A469326883DFB3EB9B157C4EEFE7B4C2CAE4E07F76321A5D3A5906E2108DF5E
38FCD9C55FF4147243FDDBFB594E0FCC622BB066A369CC2474D56EA9D08FC3FF
7CCEB0DA2442304FF353060D4326034A5CD9EC8F73E33DFD982D182E86B3CB63
C968430895741B98CC31540F0B62F18FF86AF9B2A5B3E2A8E7AD8930C9777AD0
ABC8D24F75CA3925E9D2221524462A1F98761B4E749C534262169923CEB18025
FF4554899EF60A69BA10A8E42255598A24FAEA2264AD9C7AB786BB30C4007538
6C8F15EBF8BDF8396177D83B6AE2475B45961043BD8C7908EE9AA670671F12FC
2A455157B1BF595EA3E14929085DBA19DD5D6F37D2BDE9E18C4A49EE7BBC8F82
D8EBA66BA2F0C51C4E4DCC86D3C62FE9E069A1725AEBCC5CB1F7A80951942419
C67A9EB8EB3D1F5B0524B381B6236164733DA8E7A8C1AF60D163801D296860FF
ED817B1F5B4DE32894AD125502A33F3E65A94AC101903963A84EBD442BDF3B49
515AB10DFBF0BC3B537C3B1E57934EC351A8FECB9C6A2D42E04AD651074A7FB8
EEAD846888F724105E9709365231D609DDDB0964A51388C81CDDFF4DA1926B65
7225002331798829B9D72775996ECD8788D9E72EBE4912456D1A78B7076ADE3F
E148F1E7466E6F151D914B01F3BE6B9E21D8B933BFB3BA4F733A59F736544D5C
9BCA08C7C512DE231F44EC16EEB206287FF5F52F63541E76948E91D70112F8AB
A949F5BEAC192A4F0AEA4103BD933B08D5E68858DFB59BB3ACCC436E7CA1DB4F
D788C12F342516093022E01D500E1249B3CBB49C339F430D83A82090B22556B9
04FAB0230F5FC603B307B32E6B502A124CAF3E921871EF6A3E598C971EA81D99
AEBF76F5A9F0B2784E050A11FE8B1B130B758010DF14536C1550920C90992636
2E4CCF5B8AA7EBB59A09821BD121F361A0BB39E02217B34E09C287152425C6E6
07C1EE5D38720004E4858B624AD50EF95F68AD5FF201329AC69D41775618AAD8
209A2A32E8F4AC7502B677A74AC48E341259FCDD1E8D932840FCA372775F1691
CA52CB6583FA4C6F64BD28EC6F839F95D74E2EFA7D25364396F37130C0E488CE
C4339C9309BBA8B4AD3C40F938AAF88CB18CFF74FC89AE9A0B32ECDFD0BF97D2
D2940D54DDFCF2DB627140ED8AD5DBF7D86C88CFEF46D9C126F05A3C85F4400A
796D49A47AF2111C9A3A61A7F07D84B51D8C3E4B86EFCFF1C0E19F4369AD260B
A77F520D10EE8C58E25A36BE601E06A1739387577D67DC35BBA3417520FB95FE
B69D59AA5BBFE3F1CBBEB778ED8BAAF227D57119A0D31F9156AF4D76E60EC293
11F260C358AFC4E6F63A24B5A2CDB4EF4032DCA5CC6D1E11BBA2AD0259A9ADBD
D053FFE120C493DFF9FD4972DAE07D1E9900A649B80FE0359DDB6BDCD292EE03
20B1B6AF535B0EB766985B59976EB80A650E2FE93269C0C848BC437ED3EF4A91
B7729E904D5C2A30E8A58496198E4DA707CF69165E60781CF17E988B84FE2988
4100B6ED20502633B56691F6CEABBEF757D9DDFE05D3D0D001445D16F8BCE217
84152DC21BF8F4EAABD416CF38837E68BAE4A82D035050177B992F6D8C8B9872
BAC7D6BF5C653FFC1EFEF8C0967AD886D051CE75BF38DC965CD18FABECF6253E
FE1E6EDCE9C0A6577A87A99429C4F3557FFE145590C912BEF49C28CE53D3DB4C
A140577FF3BF07644BE345E1989F01BF6F95C6BE6CA90DFCD7992597BE968B5B
231DBC59328B0F92E1CC7C2EE240F893271EE576454A86A0C216B224E0DE81D6
6ACE411C7FC74D849A687903AF43FEF1EF0E50E84F9E953A90696B33FCDECEBC
47C3061DF4C70CEB5C3F6251F58BB47F87E9016F978C6B2B032599C3B0056C79
7110E8AC8612994FB7B037709082441C1FA1051FD258535F8DF459F987D0EDCC
D617391A2E852ACD221A178B013892BC8EC7549097D2E55E6C7A52C3C7106FE2
658CCCC0E009FEB4B01D2D25F3DD96B454547AA6E39E704842B17E1E8C6CADCA
D5B9383AB433359862DCB30BA53A413B5E9943A3E81D0A668FF731A43F7E85F6
40CFA5E7F8BDC7A6426FD0E9AD38050D7784B535AE6D73BE63663BEB150622BB
625C8A6336457245B77DB5BED5AD690869053422856CD51C4A95D3B69AC42584
F602B69F8B6E3C20910E823B6D1413A13E707E88CBC5B2CBBB2642E6E2925931
19C5C43A3416B7D9498707C04E9115D411FD74AD771B5D4E576397053840C010
9C325E5820D3C9EF826C2CABEAD3E7A3E9479F0C48140B475573873B2FA48758
B7E84E8CC8DFFD0665DDC72FE8375C91FBD9035841767258BC7A7E4557984EBB
5645D175505AFB1AC5CE8B310138933B791D390CC7B93D114349060759E60006
7CDDEEC94550E3520330EC6936141F6BE214776C7AB2623C5837463DF560F4C7
F19A7195E992B3C0533C07A21CC042E626D244C8965DA246D11B291C3F9A9535
3F31235306174AB37612C6F9B64B028722F227C5C2B8FEE51B1FEC64FC984E01
72004C2C2D3E3F4BA139245E95B76F3695B0B012757555F8C422617BE29C1D00
78D5942D9ED60284FA2675FFA8CAC2FD1A29623CB12869FF3B4A25D1A21ECB1A
DB0E501B8F4CAB74A5F64B4A95DEDCB0179FF11234EB70C6552C3719CB2FB7C4
B1311ADB97C07BA24772553EFB6F9040E36AA71D4111CB414AF4C3A1FF1DA06B
DE61861B900FC8BB076A5AAE81B563648DC4BFA739886CC062BF707CE1CC17CF
CA2470A5A78B89E2F0779747F3575B93CBA749A101DB81EAAB53A20199224C5A
58268C49F028A34776A6D67B0DDB01E0AA5F9913D8BE1ED3DF215C7E7C32BB7B
B54CE2DC59D7658A65A9AB1A0323DA3A5F6B05A1F353A17E1A3496D6963C4292
D07DA5C9CEE4EFB147786586BEDE9B4149FF1F2F7F9A4A5F752E9A7CE92289F1
D8DB442575753A6ABA3C8FF08EDC1D254AA9E355048C87857CF229376A70ABC3
D18568C06D4DC79BE0B9754B8F88632FC3A74FA352E86A4C65603D03DFDEF92C
3AAD7F159CC26C9FFCB16451A6860F927EAA1BC80BC534E9DFE3D3E2FB855CAA
2BEDBD1FA0531017D74B47E173553F7727CAB5EA16F02CED6CCB0172E299B1F6
353CA60FB57A0FEF4F937EE7193006C65BD371F2E48C48712ED6CF7509792BD1
83F5434042E39FF48965E7EFE8D1351F24BAEDCE29D0A9F75E563ED2D4F69A23
BCC5743A6DF5F634D5A1793EB144B0D3EA8442C6E5F1B697672D9BC06AABB13F
6BA87C97D3D3F37C940A8F4B3E4DCC91413C3273DAC2A3FD2C4EEA92BAFFABFA
38EAF53F517136457774C464F3D84202CC071361B82E1B0B2F7D7107A377EF76
DF1F1D6A1120C5B45CF7080163A73F6EA328E4B25BA9DC995D596617603B99A1
52C7D1EBCA092E0FEF4E95A5D65BB47DAA57699F112892C3F540F17C22EFB6F5
3EF9D3CDBA49BB546549DE95A4AB15713652EC9A03DCD5ABA8277F43C8D0BB2F
CF2FDD4899640EAB54788F786ED03DB82C53C5CDA311CCA88C2CD5D6A973C98D
881306BAA47AB743F98992021217D666CAD26486FD8A4E1F4023DE14F3F19F7F
41F5815F3A3191BCE2422D7A2ED72A737591449EAF9BDC42C781963830BAFE4D
6CD2356A3D2733F05AC4BA0BCCF6A7BB8F8071D07B6046864713C780780DDBB0
EDD7382241D8087A946368F8147A7C3F74FBCA00E51B824F9FD2C73F1D915C9C
B74B1DB734A10BA4315C3480C9F8C3C012829FA69B8F87FBA0F1F8CCF619FBA1
1F2D350AB5803CB705BCFA9E5004B2FD887CA074CA9830501E4BC8065BAF393F
FAB924635579E7CF52B739B2987EA7F323F1A17FFB4DA0E728C6AD8DFF966E4E
EBA5B3EF7339161683C3F4D34A8751256D9D4B1A16D4D3E769DB2D367E68EF2C
3F555A3B98ED30070CE54B0FF34002C59BC589990656D0ECA75DFC764023564E
8FF9975319EBCF408214A4AA87D2D24B95D35C381AA7D2DDD0E834431719539A
584A375CC8B9C4FDF77D301680CB83FCF81C2EB808ADCE756C19FD44ADB2C427
4B6C0F87894C36EFDFF71385693E6B75BFC0436205231264EAB0C83B642E4172
AD5A4A4D0E8CEDA9F2CB3699402576CBDF6DAAAB3947E293CC426E38653A16E2
A7EDF6D500E9237530D67740E0685E046AE1B99F5177F66C4A4B2D5FA12CD80D
C5ACBE8B292816772463F644C7D257C583A300955BD0F21E2D20E13788E5C6CF
E951C45FC49196DD8C36334AE0DDDC9C1F8AA659C6E06D1D68E9F7ABB5727BD1
D718795D6DCE4ABF60673775EE6B1E48DC653A89EB1F733BAA7944AB0472007D
1FC5978132A8D4E9ECB3F9E564C868CC03FAE8A0C82756B94420EADF6C5BD8BA
61BD6E3A46244F0115F1CFD27B102E3AB251EB9FD654EF710BEB94B9151CCD6F
99AC59DB0719C9737134921969A586967817CCB865978492F2A9FA7A855C906D
2220332E471C3AF69A27FC38AFF90EAF946CADE0F509EAFD6CD02B4116577986
6825EA89C3A02906ABC54E3B4FF2364DDA9FF885D233DE4656E4CCC1AC1A5762
BE48F5FA88A7E05242FC340CB11389C30786897E49A974E9026CE5ABADD4A9ED
3B44B090C731EBB8E4C903AC30059F04637D00CA306671526361ED2C379A528B
A81DFF14211B6E5FBB8AEF1FB0A24A449B1D1D0B47D0C8F0B3F8CFBD1E7BB30D
B76C39EA6587B515F5CAD0858001D0F08DA33F14F4F869376ECB29BB35D08017
FDB67ED9FD13987E816F071501B02AC1925E792B908A541D32880AC41C3C5F84
A0733BD68E1479AD4C6B5471862C52AEA4D824C9B26A3588C2FB1BFE35F67D7A
5B693EFE15A466950C44AE2E7A35DCE0C6B2F44FF369069917F3BB200B8F1EEC
D7E920FD37CB3303A57193A074A75CD8BB734D2D090457DA9BBF6209D2B777C1
3DEFAB9BBFFCB3FE9740C6D9FF884DE5A1337693FE4708FA07991672B29087B8
E5E649DF1B97ABC6BBFFEBF0F70C0EDD2BD69F1C8B71B7D3DB7FE941C954A906
EAD36D53FDEC9C70BF01856A65B9674811002AB51A2839A6AA5109885F46BFF8
F4C77C6C64C75E5040732FE2BA1F6ADB2A95D564B19A3035E27F66FDFBCCDFFC
D23AB28D932EEFF25B5D70F45018920ED592D65866C50E41E94B66B5CE1ED0AD
1ED3B185D5177C121787CDBD8B600FFBCFA5C1900BDB11125CE2C263BE329DF4
8175DB7A2F2DCF94A078C5ECE127ADA570D5CA0B5E449F07FFC01CBAA10C0032
E8E7384836BDE8A66BD2186ECF7E1E27CB13D8DFAD0E258D61B3C4F03884D528
88525A07564A9D3C2275458700FD01CB5E99962B8E89BD26C03999939FFC6CC5
0503BB871565797EC537E26940DD6BAA1D80F1562BA19D44A904C99B2005FA7E
0F02C93D1677441EDA83014D7534582A02C675ECB0DE30DF9702DF0D1F6AB397
2215CAE0BD116522F39D52AE693BF824C385BE62E6ECDE3EE487E2E4CCA729FF
94C41CF76C71335EC81AFDF3F629F7967B89B09EFC1C0822DCDDA6D73E5141FC
64FF28F1CA6D4F1BEA1C64018190825482AB7064A6F44AB8719B95C8C26C9CA2
6BA670D4EE328FF780B60089D4C18F187D265E8494A80BDB1FCB3EC91497AAED
EDF87704921CCFA16F0DCD60F522EE900DAB2F1E7AD545C10EC243BAE06197E7
A600CCB5DE4956F2EA34B881EE328FEB0692AA733A3822D3CB26ED9010D81910
16784B01E538A60CD0507B3A795F0368768AEEFE012E30826BB295C4BCCA4F91
6835F5683F03CF7C7A4F8E07C026F1760854F731043BADC914D489B407CFA86B
14FAD1C8D598B54BF11E15744AD6836652D627B5D77569014B7E3BC175C3A3BB
199137C3DCBAF784D79C2F0B4F85BEB87C84630C8BBB5D7AF413ECF1D03F5749
82E03DAA69C0D3B776E5E469A0E168DFB6AEF318B1F51BA4B4F0EA344E8EBFE1
3BAA70CB43CE4A979D8225ED78423F98C9E7DEAE85DC7A673BB1D8E2B410F5C5
A738B3CCE7E857887CB544E01D0385CCAA4076092B169861541DB185C7CD159D
C7C72517CAE1994A0A790E475C4970EAF13970498F91612605ED32F13637A1C3
D46A8D5FF5962699184FF84ECF6C23AE9B4973051AC7DBD3D1FF26AF2430D069
CDC39527BA94D9A56DFD14E08869A3DD42E22F5851D6BB7E3F7B3A279F329192
5B9A3579ED72125D6388D074182C58A6FE193719A5BFEF3EC9C9E9CE600B868A
5332EC72EEA1B900DCA5B54A71495EBECDFD0353655C34FAD31485F85AE177F1
CA2958718576759631D8A0E1DB0B4282CE3679E2524F1346CBA9E958A86DB67F
479D8DBE682DACBFE0C0E5F2D242B83CCC05D2B4BC05B37305EE248B50CD28D9
6A028BE7C67D1CD148404CE30DE9213CBF2E3D8DF4024EAD5CBF3F5EB4F2B352
F6A9FC7FBC2B3FA9C4AA3EAA4D8EBB26E20BB00D228B4EAC4A163E0DEC677C22
AF294B72EF9BB34E10042752C0B839FF9E58FD69820BBAF867A29A8186E7CF62
3A14EF467C870B1643ADF9142D947AEF115AA3D597D94A23BAB91561D07C937C
ACA804CD809616BE4342A5047C07E76889E53BCE6D4B449EF06590F446448C1D
ADBEF2BCEE271D2BA5DE6879EC9892A63B15B4ADC1953305807B04D4C1CFD28B
64412C8AE579801B110C76FD7357B8B0659B1BCD733195AA0E7B564FB9D11FBB
D82D1B22C0DBAA929919D80E9FEA376E57B6E45D2F375499F8118EAF5C7F6607
DAFAE857ED1A79961C8A15842664D3F1345CD967A08A9C8D7F780870B7575D67
832B87E025992C81E31E226BD2185CB3F9224B1464E2EAA7C8A723BC408CE4A0
39F76724604F7DACEACF1625BDF902DBC4062BE896D00A355A1B495845FCE585
256923F98A70DE5036BD9C54DEDA6D8DFE904F033343ED04ECCDF84588B72834
13A413A9FFE78414FE4F0FE7CF85FFA8B3E42F7CBEC366E60C1841680FB17E57
9DA191A63FAB427A45CE4DB5FB80350DBBB73E86A8C979E696CCC57988D3B725
E16659ECC4344E707975809AF6881F745EC71298D454AD31AB998F5821B9D372
D8E0C96165F1DDAAFE732B4D2F88F3AED9A047586DB7F474A9CFA2EC28FEC134
22167D2F49D7601A570853AEDBAE0C452EB77B9EB60BC8E8DBAC5E4424AAD009
272735D7A1E7162E501AEFFD43AEEE9AC38AAD2250EC180664C84E8D514660A5
434A2AD96A53C0EADF3FAA54343B9C52D6E4EB10CE7B2A266F24E369FE2D7618
C624046BE31324B0F048C2F099F9085FC2395C8F5A89348AEDECB7DD6B6C1E79
369FAE640729ED0A010BBAD2A98865E53AC879E13964049E20BC606DE3024A5D
BD396F2A40302BBFC8AD59B3F6634AB32C24553F137AF0D768D2451D7283CACA
75B3E1991251AF9DDBCEC84F40FBD93EA0E2929121E532C6604C059CBABE2C9A
512F7954BFF00F3196463F528D5160C7E9F656D93EB214E1FA04F01DC61DD5E8
909C07B0E83CB291B89B4852A379E8315592545BC0E53963712A6EAD0F218DAD
2781926594A4119A5A29042F143B3959C09ADE231B76140270F0A05D53FF0AF2
C9E12E45F6931C49EC99D5D48F0EC6A4E93F0E00BF9FF496041F09D34B681E4F
B941B56A2D110EE04B89FBDC7A41D2F69B4CB22412ED01BDAC0BE83554A4BEA1
590B9B392729CD435B3D4CF6C5D452A51046621D36471C8706EAD8E149AD5B28
578E554F7DDB26D77984A9B1751DF5DF1E54C31DD9978CF04C83551CE25FFCAC
C544A277A75348EEE15DFFDA2503C44772003487DAAB5D98E4E2F43D33AC52A6
8BC65D4942B5B5187F55648DEB107334A07A9B319C38D4221576C131962BCC57
28D65B804A92FF8BC53C16D34888A41F8C3108AFD4ED24D99E1E2DAD7E8E6334
08FF890A4296F3E9B0D405E9DEBF3A79B642ABD3D68FDAF7F8756B8466846368
0AA78A41E4BB1A63BE8B596E67963AF1AE578BD3400269549C2DC29BED5898FF
7634856DF64281C9CED09781909AFA9F3F57B1EADE7F5E744708F7EF151FC837
2F53E6DF5B21F050DE623BFA8FD8E07B509D9A202CC760AAA33138167AC6EA8D
FEEDD25CE29D4CF1C45F6C5921F3B67F8C92ED932589114E28A4E7744751CCA6
B1E339DE260B1BBF233238D511140375442481663E67B8D29CF63309F98AB436
039124DBBF37CC9B06F0F43C7B79A779FE30DE86B349EA688152F658569E0F45
3CE6FF552D7BF0BBBB51D104136DF446974C679C100A22131DB04E222FA8EF0F
6A31B9820C7AAF7C785C82D31D9FE8EEE9CC9FB78DBF164F52F31EC79ECF19CA
2564C3DC2A325932A4EABB89DCEDFF4E028F3583AA2F46E4C03D01CF167B0D7B
BBC53023A12C5B3581D8F7A6D1EBE4AD895425E4FB3315BEA6E2A5443A083B4E
C27B4D14BCB334503F9F4AD87247E41367FC2CEC2A5A0098CFCB2898E1E44C25
8D2B274A9CD17D384B8E746F84EBF1C3D020E853171B0D1612A3DFA5264D6B64
371272ABE0444B6DF528FCA00A4CE5BB7C3E53EB9E4F129372532D92F73D16FB
82BCB6BF1A16587FBD71F44A2A99BDBC012231D7AF3FB95A99A9211EFF343824
98160E4B527F80282B565E841B4098228FB6D6B41F8FE51016A41B1FB126EF5B
2BFEDF4CEFCB3FAB423EE2021A2D8761A94CB9D93E5CA158ED057C9BF9160F61
584608EE366E34149AD01BAE3BB56977F0E8D21158CD18F6523CF7B630B6F6EE
8F6219D0882DD96CFAB8653D43BE4C4CCC091B8AC1B1C8A525B1CED15790CF63
7B59BAD929E3E3E5217D2B13C841DDE80B196F6617BAE9F33AC5E0DF808A030C
7C517CB3A8C5321D3CBFE5655D0CD47033F6D2513C321E114432E0BDFABFD692
6CDC1F9071B0C0E0EEB02994B45F2BD0FBFCF937DD3BE4A5B31D1B869CF99D01
F1AC2EDCD561C67D2DDFB5451451F3C27E48B4CDD5F287AB34B16C4AC4DE0635
4A28409B5F47FCCE9C3E73DCED521F6552E9231CC55FAAC46EDA9984444FC750
9374EDE8EF6F7B0BB69266D0FDC747F0F89C2635D595FD9845DE4F52405A6C29
08EBEBE3E29F7C6A759857EEF72F24D5F3E15F7597803B1B466B77EAAE2FDDCE
250F72D21F201B6552E9231CC55FAAC46EDA9984444FC7509374EDE8EB36DB60
87C93FAA703EEC7A2E1E0CC035BE26A1467ADAC6A93A6C0E4A2AE7B930B69005
A3A2C1225FF0F914D43062C786EB15A5F0DEC6366D20DFACC9A51E37B303DA1E
62DA447AB71A060B5199BF7899D41F602E32618326D3AE5EF9C240EB792EB349
A684547B6F5E170EB542B2A65CC080D414F3A6138865BE994C6C74228EBDE5B3
E463589DCDB652FF0580BE54FC52BD298B1DE626DDD2879D8FC843020887F310
3FFDADD38034D8F34EBA92D59B2E512670D9F815F28B5F09AC38F7B3F397CDA1
777ED1220AA9CDA067967A43B3D1F3FC4F591BFE0EA1DA889E8D58ACCDA547DA
19D30B5CA65024D9B041E66338B7707618883EDD882A7A6A06BF41E73310943F
A7825F86C20C0F042FBBB8155EC868D4F208148F4777479522DDCB58D4C98C67
64B00D6917766CABAAEE890025CF75A51F80C6855C94FCC02CC2B21C06BE83AE
A88DAF729886E06AF9A7B959A8DEA82B3FAF3D8CA197EB10B290FF9CBBCE75E4
67680764A4DF585AA8EA461D7B9AF339231BE6F180782F4AC8C68E473CD0F8C7
AE272F8CF645EAA01A6ECFF709DD6ED93D942CF65E691018CFF8D23E90B62EF6
9C367F0DD4D73689183798A4A2605095672AFE34BBC64C04B9B9C1300B4CE6A4
306C5FF41162443F7D54FC8C8D76A53677E7150CB9A33D3DFF3946558639AF03
9F7B41D1DA4F460189CA64DA2D8AC35DD10A878533EAB1866ED9AA11865B538D
351174CA94DA51B8108E56BA83E218563A89AA2D11DEAA3714D0DAD54DC35284
3DB3914FE043312773834D2D1F04E5A80489DBFA423359C766C5AA3D8E7009B6
21DAB35992D9A0152EF4B0116C4BE6C6D5C98D7AF768B0F428AFEB03148A2FCA
BD1B95200CE96AD65A9A041BE6C4F8150C91B30C60AE2F9DCDD95E17E5FDB9A5
5FF38EE51356B2B3C5476FB0F676DF1CCBEFA0376F2EDCB7189D780C435427C9
861CC74393738ACCFEF0BFB148E17AC26F748ECCBD48000277EC997BB084E30A
1D0391179FD995E5020FB2B56B488D0D6DA5A9EB6C07862D3090AC8A81D8019B
F968EE3121032641E063443F5376EC13D4824C8F9AE2E675EF11E395B4185993
C6DF9E1FD89F2F8CEEB870C409ED13E78B4C915C7586DAD3BBAA7BCC1FC72BF1
E02379BE1B8F3D3BA9080AFD898FAF5022413AC49AA92BEEA25BB7C0D502FF1F
047BCE9413D853847B32CD7D5C5097943F10715FA28843B8070D31E6FC60F8C7
961BA96362CA771E3DB9D2678C8DF214F09E29FF55CF49C204324D050BF5D846
C87B624C28FE4D8F7FF429F96D0DCE41EEC1EA29EA44F997DE0A9FC1F5DAE96E
1A7A9C6023DE05228EC140AFBBF9D93BF1DECD1AE4FDF62A5C8A02F9CAB15CA0
78787C8E0CA8E67A3FDA799F40F541FF2DF0E7AD1E993050B9A60C9FF029B665
9B40BF3DD9AD2D9BCE76781B0672E928CCB0BB2665D2F48BFE234A4920B74A9D
C82D267222FE02C75AEF406420D45D3A4A4D9CD0419A4E7CD45E6107F41E96D4
69B396D9EC72DE12F979F22DF68BD1A015AAB011D664736A462CE369A339D5A0
15F0E75B02AB9910D3D25850AECA54E1383C7E87AE2DDB34D1160EB4F97EF46E
169BD4AC3DD2E0199740528CF49D2379412FDB7A47A67143FD74F39DBB07AE26
BBB90DF9E630E0BC8E702C7A777F33D08DDDDD20E0BAD41FAFB87147B4ACF2FE
46A458952AA953832D094E694ACCBFC32D09EF5D4EEC556BE863E1447BAEE060
822D3330ADFD72AE128A6B95E913BCD19F0B0B1AA217D73D62F6D70122650D65
13EB0DFA57954FBBC2D25113EAFCD1DBD9A52701251C8B2C13F8D4D081AA1263
5B16EFCC148C7AE63EE63D34A62DB6A10D9F5C03B3C93789F835959ADBE46D2D
8678F44EC0CF256BB19FEE02D4F5061564B89DFE45A7A0D605C9D5759E33D073
B5403351832C5FBE4281165CEDD5930CE76B1D99EA75CCB6F0ABBB6E729C0584
40D93F853EF828D45215CBFE4182338EDED32C46FF9EE2212F4EED4E74547CDE
2E7088AB085129518A7306A92F2BBF8556182DE9A34A84EC598ACDDD33600B20
7F9C5DA3D13E6C3BB32D79077E73E1127EB9FEE92764F5BB09F8ADBA78395BAE
59DCB4F0EE7D02F515ED19EF413F0B59DFE1FF8560E6A51A6C350EA5B2A8CFD5
F20BD90ED2EBA758643660F49E0B041862E22FACDA50FE8C31B773665439897F
ED67FEE4D905A1BF4AA6D15740570E195E9897E3DFD9E1D0135AE0AA516B707E
54070A5F002772946C5DA78F3B27208C61C039ACEE41AD25BA1E970FE64700FD
A7EF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A229961ADB1D5023BD93644E4C23176BF787664F
CF245203C8C3E557669BDD382731E334C06F4B6EA145D5DF351211A0511605B2
8C540290A08A304CB1279FEB8FC14062F495A5EF2072B2957D98A1AB2E4B2A21
6F53829103F9CA4A8B6EB5766A44A7EAE4D5967EC3646F54568E9FAB28736D70
AE87CA7F3E445B1F49315332AC4AB47D5296FC1D3B96A166865C2FCBDEBAB3DB
6CDE74F5FF556BC9358EFD0B43F697D889D0331D1EBEC40C00DAE0BAC2D87AB4
3D41ACCBF6A6FADBA2DD35D3527D67762027039ADB78387FC3E99E2434938DF8
27688969CDFAFA4926D0BEE8557BEF5FB811DEAF9B25D6BA08A8928C507CFD96
7D8812CF8D329B71144320A7DC680F041EC8FAE73C900CAD906559B152ACA0EB
467AE6A17C5B405F104F20946147101DEC8E8CD370FEED048D2DF4A062BEA119
982C635CA5D9961ADBE408CF7CE807B1837158A69087E0101645DDFAE1CE356F
061817F8C267775002E71FB38F69420EAF2C8F0F0D131DB7BDFBB6CAED4A7694
A0FB71D0A32876F7A984F03C31A52771B4CD2923FF5F2538ADE8195CE899E10A
ED72918D45362E76BDBE26812E0ED230A8F0D23799304DEFA81FC8A069273248
CD3491FC0E8934EC5B3DADD677A7D4D394149E0427669992009E677EDD681D91
0E1964EF95BB9316320D5B9F7237978F03D3240CFA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC88F86B07C1097F9C5C5673B88582CEA8CD622F9B0C79
E463DF7F2F4C6640FF3852BEB520F7B23D8A22E7E601EF9CC6D0A2E6E82E6840
65B82C6A3A6692811E2B4F57723AA3A6E27076A2F63D6CE1FBA7ACD844E732FA
02797B386F2EDCE9FF9F84EEAD17B366D678E61C6176FEC09C94B74DFC090CCC
40AE9DA65E5DA02E7A7E8A840B45B752AF11A279BA06F821525DD0F477831176
84C80B29D318260FBC314986223F9EC4DB5B0EF2EF5D424C6DA581B49C709E1E
98149FEAAB15DFE7F94977CD2041DEBCB1FC8F4F3B288515CE43713570027C3A
C603C44D8AEA1F9821E0124F9AE3E5A1EA6D1C6304DD03CD20842B335D7FA068
735311F96609901AE3F5EBF70A777E892F5B7B59DF5377CE8622F82EA3D4BD51
B1C7DDB9F2C31CAC3C31CBD886DA508F4F1B051D110607EFD0914F27AAB77D2A
42103B51739C7CBA24D989635B289E5EB0A087319F567E3C50F98DFC652FAE88
AB78C203C6D210C162942911B3230B8D462CB2090B417B0ACA22B640D87E79D2
BC6EC256BB95AC00C80736108036887D178CAA33E6AD70D7F0ACC12401A36F6D
CE34D7E99BC0F7AC24E1BD2CA63AF299F716B09B512A591D69D954435EAB031B
C8901A89EECE3BB8CA238922035BBEAAE7FA181E97431CDD0935FC9D12DBA2BE
A04B1A8319159222779410AF291A8C4147F7E7E2EFF13DE66C4DD23F83B202EA
C8DB0E9409329C5B5B11C43EA37D5C9BB397700DFFE455483CA264654F4FCCB4
AD39CE31F59B4315D432F83162898FAB36A950F4C5CB41DA8F0A1A0372C6F83C
FCA0D4B69BDA5F6825733B48FADB06F9C8BEB8E1585A0174737903DE67E77566
3B85B3BEDF0AD31AD80A15A1597EB756BA24DB51A2A1AA055D17CA8843A70DD3
99E41CAD15675113A491AEFF1D1BD064592D5DB2ADA8766C663DDAA9367F9147
A59D57104698BA30854D6D093217CAB537A70F9439B5E8BAF9E2EB03F07F09F1
718839EFF456FD952E94337FEF0B6B2D1EB3FBCC801BCB2381BD968678CB38F7
4D127CB43F1FF37D834FA994B4ECD8E58D2AA0A9A70203E05F26F0B3F3342C6C
85358C383D0946E1CA8433C8219DDCEE361172E7723F0549A2E5EAA6FF5D81A6
ABB74948ECA26CA86C4EEAE7081061EA1994E911990A8E893818D58FA8598C55
080A631118035D49458A63223ABB4926E7B949D91624C9C324733BB02C6873C7
9025624CC54FEC4AEBF44A5CACB22DCA7BFF6469BCBD30416E874194A2C4AA47
5A156096793EF552F59784794A0288065E86D7F5A832B11D5CDF6CA9D2BF8E8F
AF25DB3B6D6796FCCE2711938D605AAC075AEABEDA778F7B38E900A0C764E942
530CC560BDD9999635B7CE630194962E4183C3838D9401260A7436215C92BF6D
506361A0691665975BA76C73D64A2190190F88052AD2FF57994795C28FF57AF1
8694EE704EB7CE0FFB316FDD8A8566C8A215951E1D875E93BF55D1703AC66E30
3B1FED02ECE802A4A34D037511650BE936312F91C5EA3131A109077655A717B4
CE1D74DA372E30FA76C70F9DF19CD70E8C281DAF483C33B97B28C87C6017F9F6
FC626CE3F887A00D02D2010222E063DD82DADE030F788A300C3D5C30DDF6C0F5
B8A001EA85292ECF2B3482A950AEBEBF215F8301DA3AB400A860FC832B046E86
A12A1875671D94F4E114A51C2F6987E543075F61E5A84C96A5774D7C7F037356
2C994EC71610657E092A527445F926D4BD834D167DBC8F12C08B4557C5BBCA01
DC6B68C7BAE2508103168C0EDFD1E315C5C7C098512F9B6B3C160D5D7FC062D2
00CD2B5D3BD320E14BBA53FE1B7B523D3BCFD6BFC88725C278DD98C687AEAA9C
8B5FF0D9B81849F53C5E4CFC076D3627BD364D7DBAF383FF268A00AC83CABEF6
027AACDFED7861BEA1B7C7C14B4B2019AADFAA5A975BB73DCCF7EB42ACAA6485
DDA21FD1B9365A2EFDFB5E92FD772066972FE2C3BC09C167E3CDFE1E5DBF5F7B
A58422774F47B8FB3FFA6DD5B8981F3FB8D6B95768545E8A6401ED0D1E333591
877B3C8B5B670CC00232AE027570CDBF3CCBC0C6FEF4908E4063634376F3E946
7154784682DCF8205C332F680B26D0FE504AAD3FAA0AC608E7DF540355592C01
38C9A5740E4AA713F969C3186B41060E55159270B4C3403E0A66A15ECE305024
30290E579CEE61908C743418438CDE58A3A4614BCF9F848A9BA9825BB4280084
8BF9B33EE021E4ACB77A0391E24A7B0C0937D5E86D1DFF01C3BAFA9ECDCDE853
8AC6C22234EBC4F14AD5DABF804D9F588E320A1014EF731DD0A8F2E6FA4EBB6E
4CBFC36B1A1D64794668CC452B5E015B878EE75E2EAAEA5F3111D89820C6C159
20703A1825BF515CB127FCA171668E98D03C281F4ED407BAF5A67553084BEE2D
B4C0B5B708CDE49FECD3B8C611F3485721349B30691CD14738B731E8F2AD7171
FE5C7372781E302F506A45D6363C26CA640E144129C1D2CC4970721AF87B6CD1
F67896457A8D13CC087753848043D16A75090C7E9FA5E7E051146846E6FFA59A
0CA55C855E6101E7298424EBE293401AD0A661A78635F0C296504A9E2A3F1CCF
C0F97FA53082956E3D6742C2F590155CCDBF95259F42E7E8458A3906733A9296
6CC68EE6899445B5099F5E631B22D454CCDE573779CB8D137C6AE929C153C16D
BEED9C9A57CD9734F4D97106F04A7E65DCD7CB33967FB7BF4FD3C4F3C93AF7B9
35C05A191DB1DD9D378048BF59F63CAE7067D4000B31419A0C1C3B77506465C0
3DC33B0D52370090D1698D1CADCFC9152667BC837D94CF695E7E4AAA2B0FA374
1BD2B78811CC8C197C99DA80B4E906012189D80E56CD36AF3529D7494070F341
C9EDD90D72ABF692EF10C94BBD92D988C7497FA4A01D58234980D69F0DE94C0C
F1DFF6B527542F0DEE2416B1703368F8A7A2D2F879FE683A3C394B643F748C66
FFDF1DC8DA2ED37C47FB5D99D41FDC94291116B4A1DF84AF742B52214ACDC3B7
F9A9C19CE8C47860B4CC8295682A4ABA98126598CF2ADCF0573B4359078470FA
B5BA5E28FE7828E9CEB701BFAD0E620899940E019FA47B51B023D730D149C585
4D31E55BE7D6345C9AA36CFAD1EA3ED1A4BFAD13D120DA292201550875E60E67
A3D53159147AB6818AC98AC9D7F9AF5A45C19E87E65AEAF0EE9135D2E0E9F3B9
C8020CF798A75C5E26A249EC359E5BCCAB635DA3D29958446FB9FCE0F2E895DA
2A94F4AE840CB3A2458C8047A08CDBB0231835091094CB688BB18676885A6B72
CE8AFBFBA72C28DBBE0E35C9007FF52DBAA51729118667ADEC740DAE0AF31EDC
801D408FD81BDFEC0024DF9959750B88F63691531D78D64700FBEB904AD43599
604C988305857DB8483EDDB5F8DEE7E290CB16F6CD257E99D1F66634BA0704A3
7BE9A758ED784F2A9E460502BE9131C0FDC2830EEBA817280892941EF26C99A2
F328C879B9DAC19B1F9896598E992371C84E092FCD8639D15199A95CC09A8500
AFF373276158D541AC98843E2802BFAC6F95CCAE6FDD89270934AFACD2C5115E
E06FC005E56FDE64E3C9B0FE71321B36B11E64802F86A79A15655C2CD5BD23D5
B994E7F4BC40B64276B48844057D7F85560C82900CFA121A1C268C93D554874E
1165B32528BF32096BFFB8F6300FD5EC7309731999FFB3F7B10B4071CD78729E
DC6ACD4DB0C3AF5F65DB3858DA2418FA2CA515296EF476B4F90FC52136E3A508
66B88B2F1414A9ECDB385ACC14E7D96D123BBE0BAD621A13C9CE405FCC7EE558
DCE82C1D61D0EC1829CAF6D71A7B0AACC69679BC380C5DD4AADC2BE01F83B081
D4C1FF1A9FD710F097683B839EB6EE0B6E4601207C056514D8DCE5B441A96CA4
A7C67A6DF424127B1DFC2CA82EDCCBA80CA9653252B5AE2B8FE652DC81CC35AA
FEE2114BB630FCC0A5D65AE6888E8BCEA4A951FD50CB412E42AFC38C175DA8A3
69F72165EE5A38712E9054898333215E2BA0805C0CFB2293B23A5AC46C7D5EFF
E090AB97B30D81AB57AB1563145841F979980DEC1B1387D0D5741B014E24B8E7
65810A9766015070FD4D48104580A022A808BC1282147D73DDE8F3B50C9ED51D
6AFBE901E2216AB020CACC30BAC070D8470891F9B23CFF8A8925D9ED068A7E98
2B1037F4E940A66F44E341C27F2E4EDAEC86276C889ED1142C54BE7180EA615A
DC23E7BEF43B059B5DB78302DA3F53600B291652C5F3F507F297F2F4678E6531
F4B98D47D7DA696B9FD9B03B91A34C5B996202FFE7967CC9BF22771614D30EA7
C630C3B050B09174E84202B0D2F637FE436F99C331BDEA1504F817F53B30F6FC
9BED32D5088EB7486060FFB8E5D85C5BE20C8B34B190C9BABCE7D3D918F91F40
C3A8CB56CC67A329E27A0227F3E347A9655D7B57798F81337C55A93FF0A6D00B
5DBE0B1401050A2948A5899FE940A25B869F895091FA4DBFD209D77D9DF37502
0F3F37E4FB54A098E502D3AFB06ADD1438AABCCDD518451F8ED24B8BC26A4EDA
2A72E5E0E9C32618E9BC48EA8703218F8529FA97FE20DAE7D8E2AE5A7C8448AA
B248F6F6BCE0CB7ABECA782E3C64A14E580441A02025136751EF0A43FDE45C36
EC62974A39270FD06086129AD2BC488BF4AC694E550E6E69B298EF152D36913E
689022F9E7EB7F6FD4DA355D509785C1D4AA89D67A9B951235FA964D6E8CBC86
E85DF3372A00A981ADFF1659D9344A40B1B7D2157EE57ADB79C9B7F2352BDBD1
DA9AC761929039753F9C1CC1344E02D54A7990BFEB4B57CDD82347DB602C0EC5
59FA2429DEA4E16418A6250FFBF4733CECC94AC4B6A41422DE134626F16597E6
4F3C2BA7BAB079821B92343E2FAF97D6E02EE4F3E373E4AB621524B270F51841
643AF9F1BCD6955214AE61CB8C405CC2E05F88ADCB5C4F381F9EDCD7B6C30979
9A577B668123284E0905C23FA14E1A7CF794BF8AF766E8EF9BC57668DEA968F6
340291998542B3532399E60131400208685A55FB4B6F2FFE17E40019264241D6
6BB7A8E44B98F71018C1E4F8D59EE9F26F52D5C55A6BDC1136BC67BFD212144E
7E2829A7BAD04EAAD102828E1E7A2B33BCAC3D6F01F29649A547FBAC64172F8F
33CC06BF5B658A982734AB96751BF9558599B310150997579109A5BD9782F2BC
7BDD866E8B1E86E2A8577F4E2C97396007CEB47E8EECF689D53069CC5F78502B
E5609BE1B96CBDB6458FE905F90E084B97D871A2BACE6A459CA05E718A52AD4B
E00CE501A61AD74C31D991171DCCBA54503E65891BF6BCC562DE992D4AAE79EB
6BEE7660C2EA9B00D363AA455502B93AAACB292928693630C402504C6895A8A2
7F42966E2926DE6916C1898FE0544DBCD64452C53C7788C13DF42E60F2B98BC3
2EF7BC419DAF5BA16DC4A6D2C8A64EBC96E27E886ED09BE1A0A3F7CE86AA76C5
CFC588F37BDF9FEAB755A9A2BA809105C5F446859D6486D60834904A34DBA079
10A0D6E4A41C5BA6079D9110D92A03656724A54F357AA41CD62749256685E511
C1F351DDB979C8AE9821E6289F81735EAF2F4F6164860A662AAEB4B2FB5E065D
21338CDA3D3D0473063989CD7941707F2BAA33687536DE912A351A0007B07399
EFDBC4CD9CC322558790D00A53121B44A79372BCA1BACF8592049A63D218C8AA
CC2A53B1B097FA7EEEB5D3C9D51232A2B2A8D1AC26AB748EF3C2378D0E58AF4D
0AB8E0412494B8D0DB7667A6571B88B5B18116CAE1B5832D17889A326B96D731
DF51F0024AB2B268100B6DBECB71A616E90130DAABA33CBCD85EAEA571D161A7
4BD9EEB20D278060A456F647E1E4D89F25F1B7521A575FC55B608D07E96C97A5
C0D167075AC937180DB50F4515E28AF3A5721B854094E3B433200ADDFDC67135
ED10C6DC59693893CB4AAEE9D8F0642022E9F8946007C94DEB364DCB96E0E45E
5D03ECA62B4C3B665E1862072C2453129122FBF23B6AF6A42352C18364474956
B03B82E485705138487B63A39EDB143624453A3F10B0D944489677C071844657
3E9705BDC02E88FD558C99FFF087C75ED78352BA83F4A58E7D999377E1FFD04C
4E8649E75AE0B39F6C773F10FAC130EE7507659BD2D72FF2581449C99488878F
0106CDC5631DF08D823F959DC9FE3811752F68208AF1088E3D6F29D4F5903F88
91F86CAD39F60583E3B19AD57137893EAB58E1E039A6347138EAF32568D72CAC
172FD951E2E17D99750B14F9A15941E74957D2F874310BE24AA049E1B58CE886
E18D907CE229A80A0E57A931BF6D517332B1840430A163CAA18C1D504FEA7243
03A2F67D3E675C15D3BC05B7759EB6C376C41B514D6E2825EDC2C25D9DD08DDA
5F522A8CBC483BA1BA82FC1DE6BB57E9AF9E7D4DCF61011DAF1BBF80EC93F7FC
FE3F419BACFE53321D46C3D0AD652E2D3429F51EA2D3592E79F1693AC25F71A8
C206C6C2AF4BD063E1A6ED749EF591DB35D8E58E487FC2DBF7C921F1F9F1F3F2
AC79615A8484823DF1D4D7DD7DFADC576F7FA92630D884DB70C9CA9B11B9008F
1271D2F23547C2923FD123A94C3D698B7BBA50746FA7C2E745005036F90A1493
0ACDF2D4645579BA271299AAE0C4512CC8CEA72A07E664112DC3369160283FD0
CEB7D025FDD7756BE2D6C3FA7BC37ADCB12BD3CFAED22BAA112D7C015151F9EA
D029DC1DD5EA94467A488EEF0CEDB46E578525946060D7D602BF0A841517F75A
92764BD87C3E0DD6B80B0D6623BB375C956C7E52D7B05ADC3E93AB0E3388B6B6
1F01DBFE226ADDED5AC30A081FEB61C8C245C0D3FF0E0A51D03256233770267E
8A6D20D712EE23DF5E76C420D227156EDB232F91C4A6099E1AF58C79C665F687
461C59B3633D9D97
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492847AE57C85675CF04BFD1410B56E616F
68C3927EA7267C0C4BBA87AA3EC7166170B80B7355E802532D38053D427DA3EC
5D297AB110438F9AA9CEDA887E63AD877E9208260AE6AF24100E2B365BF89C5B
679912C69C51E8D0541100E3DF71D501F4BFA0AE8260EA4119883BE0E2CCD156
1113CDC4983460A31A70C6614DA60CBEA3A564539DA028D46BD8A6C8E870451A
F92C3A3D555E94EA81503E0D53C0AE8AF190625DF8F48C433C5CA5E61B61960C
10E340864F2D181B835CC0F9C87C9CC0E95FB3F1824BF5ABE0DA3110FBD87806
4770B0F94B263E2C7A3D9DF14D9BE01BEF9882A1EC2C8DDA5931F895D02E4FF1
CAD0158061CC26D5256590E51541844B9AE3A861D6412B59941B7186BC31AAD8
9CC7F07EF9A36CF5C32F54ABEE8B83306227DF64A1F4E9B350DB04B85024FF0E
6FF4C8FDEECC5DF7106C24975E54928A3679928D4D84C98B3D33843CFCBD8AED
A1A74438EFDB0BD68AB2061EF46D65CA446C190A6BF6E0D8DEFA1E8EDDFB5541
473187ABC3D34172433CC652E9B2516AD0EEC9F452135D6AC8D97A90DD4C972B
69C05585BD438731D0DA714733FABC30765D6775BB68C69704D0BA5D6DE6BC5E
10342040FAE3CA1C359295C7D2967195AFD2D94BADCE1E95F17F0F95B5A683ED
8DA83806CBF2B803C94B5A135004A20823158454E29255E8846AB1AB9E444B82
AC000DE047EE32B5C7659AA3999D8CA1D3941D1FF042DCB7834420A2CB78723F
B40B625D7418A892CFEBFF58AE1CD0F128156868B917147969EF8319C216ED3D
620588A8D3D13C4737BB89F1FE17EA91AD0A119E1754916E4957C40F7642AD75
0E847F04D456B101A89F4E76E6BD785EB1F605D78CC0AB1425CEB017B47C1D40
BE68CE2BB94BFFF5120F91CB493BAD5966F870FFA6AE560AD6A82C3B0AF0C810
C12CA6C41677519886FD5CD163D6FB351E2918F4E5B5D5A27FB8E57A24EDF9D7
42EEFF2C7558A4479E25DBF75353BF0CB3E744B9009BFCB1D37E21EC06E4D7E0
2762A656C0E348FB75DA17FAFCFA53893D1ACEFD8C3EB97C9E7E5C3C5A303193
004DF6B0E2446527C65DDDF917C6C8B730247D89C817FB276D85EB671AD64DB3
4BB09368AB12D82CC4A183ED86D2841E499B785084AA21B81AF837A206A50773
FDDBF92515FD7870D5A35EA64BA957FB2F6990DCDDDF2859681D7B7D5566779F
26081CE1DCF8FCBF985B41005EA0771D928990C0BA6CB7E33875B819AEB1EFE3
7A3656C9B2060A89B3D1A0ED127FEDDC4387DDB2E10EF3FA3985EDC86947215D
585BABD246585FD44C7FFBD5B878504A44F08C38AB4A35ED5CC53EE38F810C49
4CDE233ED8AC7E692EDA8CE219D733D37296CEE1118362904F622FC22656FA58
65B5E26CAD7951FBF3D7B27121FF01DEA6F49C7A4498656B8A12ECA7752E0477
CC7F945AA8CA30ECC8B017D3365E4F2C4D6F555DAC9A6D17C263F63D55D6424C
58ACA31C6B17A617B342EC92A2FB13D4FDD77DC3A85B2508B70FEF36DD289991
A16B4097497EEB38F0274AAA1341AD3BB645B0D7F97ACB233FFA576119456D0E
E8D5F85BD47E3C79CDB4AD769ABB374D1B705D61C428B44B213057725969D808
B280BE2A969D2207BDDCAAB6AB26EFDBF7E27A57CE61292AAD6582B3A661F4D4
8AFE06644856C8C9DCCC07407A115D6D45B7DF6929B1C79277F3957EA1805B97
8529CE833B1EECAF947E67DBA704AF3F29618A894235D7DBFC1153A5F74EED26
102EEDB139492E743E82CB61CEFAC99D77B61F60FD9B0C1645E399B20090DBB6
8DFAAF4C6C1919FEFB6E3E8EBF926C2A91C5281153D5B28BEE5E71772C8921D6
9D11ACDDE095D43077D6D8E8EEF114F60F85935BDBDDA3362A11E0BF7854BF4B
BC52EAEB261E696CD413485DF93CADCED318B5FA421EF0BC594EFBA262EB2C41
4E43D8ACC9CB195D12F3B2ADBAA0D95A443F525372BDE229F13C485324C60FD1
D7DFE515B666ED51FB61F69E18AF955D6620C95021DF41F66204845581723BB6
B76B4C3C2E2E5B8584AD015374BE36AC1E08E1C53C079B8BEAA3E0F907086AA2
3BCD6FA9812375C8E8D4ADF7A319E9EAC6238093C798878E5D558B30ADAFC1AC
17B04381C6754327FA7C65AEAC1A2839A9FF799456B6E5B9BF421E82415746B3
63938E88CA325AE4BC6B36475154CACD25A07C74FEAA2928802611B4AAC8DA96
F7CA93B7288B2491380B2F4F87646F6BA42247F5B593A0787ACF533199348D11
730EFF7C25DD5ACD0221075ED47DD6FE8909C387D8F02A88FD24540AD71A0FED
2665CFCF412B99167152D35BC0E671E657EDD876C39BA0ED4E790A79D8AD6723
4A2C9360790E4981671E3F898A1157850F48A5E0F299DD9078866AC4AC771A7E
ECE3275C26835080FD2AC78DE88BF65298A8EB4181F1646B5867D0EA3446F4FA
176517141B75FA51F69D54478E279EC2855938CB532FC260FEF5CF3FE05F4F6B
1A6AC463C1D1A24E7B41EBAD57574D43E06E13690F831AC63F570D466C8DE97C
2E08CC01056475E95FB467E2F3B08917792C1DAFD35FDA10C0E14D125C730ADC
BACC2CBB9BCBB0BB982F75ACF33109F8AE7ADE4954D0B1E1802506DBDA73CFA3
DEC72E83650F240B54E88E51C065039ED16C5B958CF632FAC74FB900E04B0B13
B26BFA8A80D5663FAC4A5C3CC6895C0717E2271C6A3F722B2F6C2CCB04097EAF
EF211683EB8F6FF2306B741C9455B48094D2958B832B76458887F0FD9D971D2C
75AAA237EFCFBE0F14F797E71B0E19D074858D2BB30FEDEF6C34FAC40779F603
770BA127BD4B9E4F5EC52314B25837FD118062685FAF4391CC91AC0ABAE56089
30E599D101B7ECAFC159AC2335D6DFEDAAD93A074010C5626DD9470582E82C12
2DAC32220AEE7C75A5BAC24E9E43AD56BA6B5B915CA1A908C4180B7DDB99E3AF
5C45072D5FDE12DD81276D7304AFF3059366F293191CE257782F236FC2299F6C
60070DD031F172CB2FAA0C0BFDAD40BD3AE7D647B0FFC9298FF9481A19CA03EB
E2F1EEE59A3D6E3FC23B65AED24295DFD94966CBFB46E98286E8AB5BBCC5A8C4
31D8D7BB6D38C459ED7811962AD08A130D7781F378AEA20293910A7716341DA6
4093C33CE11E30603EAD00851CC85FB116890A7C58F795071033711947B65B0C
07BB7FE129E446F1A58F097CC13CA9BC695F782ADBE50737CE43B15AEE7EBCB9
0CE9D7EB1913D307114496116FF0087A48789461E310DE9062984F6951B5AA2E
BC98536501922114CBB2D9698493EEFA925E555E776D6916E68159716FC183FB
83834CA958EF2A4210A873E6F7DF8F113E86D87F7B364763BBA1AA81F9D7B871
D7EAAFDE0578B3E819F2D472E963C4FB539A61127D80FD783E271DBEDD8994F8
A2E9F96F4F81D178EDFD36B63A9E05D8F4BD13318C16396253CDCB9E1EE7A887
8F02E0B498DE9C1A5F110347B7B612146B59530538023BDA6569691729EA004A
3D96F0FBB300F40752DDCE278F26B5D50F9C8BBDC7B3D5D144869BE59F0BE9FB
57853D65DB474E4CEB98EAAAE80FEA3557FC29E982F4E43B182BD85FD6FF9604
20E3B5F8A1C120887EEDD7CEC677E95307847599B02E5AF54BE91F662979D0BE
A1CC2205A8493A22D252AEBA66664B2A0FA2AD5C2BFDC446E8217D3E5D67616F
A9C8D25588F1689221B896E4663DCB2823847EA18AEC15EB3464CD20830192E9
FA76A8D8C8454C7E9ABF6C0F725BC64477D228181C86BA782F4FE02493A70F60
73CE5AC25BF5C0579654DB07E4ACEA3666110AE5DED90584F99E14B24810C5DF
7394EE947676E459D57DCBB3829ECEFC74DC1A1B3482A99DC90EB52844D07B8D
4D86246B30916CF5B9EB30CF2688AD5470018A3F2D47875FBB75E16CFFEB450C
B8BC91FFBE6C83D561EA7819C508DE4AE8DFA21E23DB7E05FECB7CBC4A049B24
336687838F532359D6FBC18512610FC852B07E15D4B247573263395579F2B2D3
3E0A136C429A9D806C2CF8AB15954BFF59B4AE356D1DB3175DDC2A6AFD06EEE9
950911F36A10ADD8ABFBA9D53C42A690A48B179E6725265A12AB4D9865210714
AD7EF694588DD4594813371CF6DF55FC8BCE3B9F209F7A66F4CC713EC85C44E2
C692AAC42C9E5003AA9AC548FF0AC943ED9E898E52F2294B3AF6C494A1A62A0A
6F8E820E383A2F9A9BE2FFB3AFF49BBE499A6E4A6D986438CC0F8950392B6CE6
1423914058FCDDBE245DEBC2441DF1AA6A52716A7EF812A28813BA8D3D655ED2
66551C59852C1BCDFAEE9FCA1B8B7B45FBB5A049FC399C46C1426F4FF72A744B
8EED9375BA41440D24BE8D533BC804C1C8059928ABE24544F41569DAEB218F1A
90A339268479552A5D4F025C0446A986C64DFFC2C0C909AC2835EF3FAF19B53E
44F7EEB341005187115312A76DCABF4133E260320CB39E191970C0F0E81DBEF7
772D6C5F077DE5916A5E4571236CB05E25C0B681EE2902AF18783CA81177E26C
F828FED0D16B16987D62B6E83BF9B59F90EC4E790133AA578C8AF018B06D7B9F
5E162C7BC6381459BB3BD8E8BD8CDF61FEF2585E482EE3E3235E4B3C55CB96C5
D792E2DDFD91D5D62FEA685E885923620FAA16910AA9EB967D0B382CC9929D8D
11C794E55DEC8F51B5D7BC7DD0F437F1C1A89AFCBF166B5E882C1009A9DB4ED1
9128C657C8098ED5BB7691BBF8C1F6EBA75C1C9C1670B8A568F69091BF0FBC9A
D619AF7C314419A4FD057F51ADDF7DC9BEC731AD6040FD9B804FA147488D0E30
F8841589FE146D0525DF5FB31C974FC3B57F01E1D7A2A2E477EFB20457C17812
98694BCB0A51F6AAD0A5B019A8F4C210A4EF832E7D6DF3E913A142458A406870
B3A796EDAB7569B0D96F4665D013427D282B072CFF5FACF67B4ADA7A8FF35840
A4FE3D981216B1214415D55F0490CC2304501060CD4B29E20116F74FEB99A1CC
BD511DF8BC21284CBB01E5147CF95A00E8E775BB357487584644F975CC568F47
3DBDE6278D74ECB3172F5438402E9D77EACBBE3D271C3DD27C28F754521E715B
EF18A179D64952A6D39CFFDBA38C11C7238C738370C48C50E025B66055E56D4A
8FB3ECB4BE8FB8D21D943D3328065A91592BF5454FE871CF4302F1550F56B682
1344308331EBB7B2E684B3B6C374B061AC0CEDB050AFEBD734238E9DDC831883
C93110751B5F8637CF00C7C14D8D087E4AB1D815951E4BEA2690A552606F1EB8
A796E8FA21BB9E5CF8DBBD8D831A0B996FA2E67F9064EC921830EE707FFBD444
DF0A703A999B75EB8351EA2396AE35A6BA0B59619C35B4D329A8522B1EE90448
387DBB0912FED5852BA7AA362087601A47FF693A1CC34AC367036829996120FB
18D883F38EF4131EADDE2C756C2DF9F395FD83FAE697F3A69B0A0D171444B807
727C458C55F973274598E7624305A0F7EBBED6B1E29CDB9B8ED28CF387644D49
A2010C5158CE82BD52FE87C5035DFD9425EEF795DD0B09D4B1C7EA0C98434FAE
393859A98FC0B3EA3A0CAE001DFDA94760FF7862337BB4A2C3A8C8803E49B607
12658E7EDB16D9BEB4252D67C718C2A4595075C1818F6A1EE734956DBFDB57FE
6275D1873E08F3DE5886EACBFF2A132DE63FCE4B2955A9C7950E7043D7750667
94A2DA0D72B3D7E787DD83DBED95F86B97E1E9D80D9E991753E1723983D4DE05
CB5C6CE7C221A2038461896FF0EBC22B776FFC66AFB8F4EE72F16F4A83FD3B6F
7C02C8ED058B4AA23DB4E4F368D5CD221D0EA7E1022CA012CE9760152330C73A
4BCA1399C9CD243FA385624CD426256168309F04A2D2352DE559933C8B4E514D
B0410B1E140095EBEA1B13933221F95DE894A8F0FB390C4649872B940E5AB4EA
A493F99CE2D3DFF0982549271B429927D4775BEB5A12F660844638B9EC5214EB
8B4F3B900C34193E943A90C06ED8D9799646156E1491E5521FC8B9CD9158D756
8229D15D0FFA4E22B5A0CB4FC82C4BB848D07EDE0C11344EB69D0A6F329CF352
2C81BABB8C9BED90F772BF2077526A35E9F2844D17BBDC178AFFB0DEB4493D2B
EED930887D30C9C040B1498E7EAF30501BB2121A750312941839C81400086942
7242D783CF8D51DF73DDD9FE1950DABD3C95E57686BFE5C55E13AC8837A6492B
618815B78E78BA5F281755B0743FBB60F2952D9041F7F6EEDAD2563E236C584A
BD904D7018A00F6017ADF508BF63F64AC406DF45C6C9B90489846E9685287879
2D64A7BEA283E698CD7D8B2DF6A3B6681C63BCFC14135382469123169E3DAFF4
AFDBBBDF75C60D2808EBAD09A641D93EE38D274EBF132E2F1C61F31242729A9E
BE877B546996C6520013AB058EA55E58F59C374DC6AD4AA8B125F40114881ECF
0A7ABE0F5DFBB48002662AF720242D74012508F26D394925F71065BCB57954C4
CB5A9A42C6CF6EA0D80B6A99ACDA48E5ED3A2BA43BA9064D59C171AE87BB22E4
707510F8EF3AAB303ACA4121E9C92051578244155F5D47FDBC558AB5F9CB60A2
B2B7D3726D4D06CAA2CB08BE16E35F416B79718F7C53E34C5057880AB32CF159
42D3673538F51A2646DB93A34C60583DA3CCDBFF4F315D1FBEF4A12AAB726603
8BD7CF8F237D8E9B7D4AB72F83176580F0FE60F48D70FB98C3ED8305C7906E17
50DC71A816B0D510008080A1C3DEFB220D402F3CAFC75D5A1D09F5985687685D
0DEB29A821CB8D0CF788A0F4A87C061D56CE72CB67E59EAE0D87FE8400FACF1F
3E0B024C5FFE6777D6E374B40FC2ADE40888C5DC808B622836891157769C8BEA
7D15C98753C1756AD232C556098B581BBE5842E94DBE3F911FD8DCC3FDBC30EA
F5F569682BFD37A002015A3CA98EDB8D21E8DCCEEB631E12C5B4AE0BCF689146
9EA758F720407B837A1A2EDC4B490B3B7670FD4809B69FF65DA0CED5D7215A18
18A20093B619E51942C0292D48C76344A84198F453880A813C368B09C15D29F7
84CFA094E8674EEF4ABE3C40E65E60D66F58717ED1F730E956CCF855DEB471E0
A772CDC7174D8C4887E2FC486524C9DD9001F4782D4C9E406C46B171CE29CAE9
562DB5FA89B3D468E216BB509F4120B75672253A86C73164C0B29DDD2EE715C6
AB21674E82E6B49A5DCA8AEE53295494C0B4DAA184DBA107D65FCF751CF72DF4
710CA42F96220CB2FAFAA81AD2E91846D59CBAB89268B6CB078368109C9E8089
3A908DC4D0DAC6FA6AAB73CB8F02BA4A00DF71230BE65BBA5AF39B237C53D321
76E0B17A5F655AB0918BC6EA5573B0381BF73CEA99D4E06EAC2C8E77082880DD
E794EE877AE7A911A5ED5DA4BC69BDB43E36DC214AF28E55765856F9C6888942
D06B3634A820A6E376B90D763E1CBA4B610081BCBBE17E81F552B6047C988419
D2D84CE582ED340767DD50BD28E2DD1BE5802362E87EACB8F517FB3103E52595
BA002E0282E54CBA85C897D6AE51B8EE6A26F358B803419C1016875C2FC5BB91
23DA45BD60B4BFF2C7E594C5E9BE1BD08EFD522FD498000A60B8A3DF7F12B1FE
9D0800C9DA440F8F4DF29BE3054D332ECD422011A3968D9FCAC28875B34AB846
3292EDACB514713586695C0797C7900E8E6AC46A6B32C80210805D19400A7362
13F9916D014A560CDB431366DDCB35E206C199AD291CD4F0E033445E86EED300
3DF83B89F7C1D7F378B62DB43CA4BC3A8669F6E924D719F0D7B16FBF2402581F
6F84BE8AAA3CE7A906C63EFC4CEF05D20FE747739A0C92EF6EC74EBA6CB20D0A
C3FCCDE65075E3FFCEFE1D9D56A1660DAE90B755958197A33515567E98F07B2B
47B4EA06A0FC7E4FCE652FA38CDFCDB93D1C9185FBAC13AC58FA76B08A81656D
D25A7835DD6FE9B47AC1A10E33FC1E611BC3142D4A9B58F97102E7AACDDBCA91
E0C88FF6F0EBFAC5F9837A7EC7AE3F0134DA9274E57A04DA8A7CE4B86C16DAF3
4D8EC2BAF04A0C94FC850F41B05B63CE0F9832AE6CF22A86CAFB7DD0E30FDFE6
92310FD56056AB112633DC84FB7743B5F73E9DDB5069BCBDC41758B4122E88E5
48D22E15A2087B61FD6B5415B49A57FA350664D6021078EE1EBFBDBE5AEE9EF8
D5A8439351E9B9EF85ED875422A0A51F2333C9056CED49C1CA6111D592F4184F
ABB849A3676A8D175D44E7193EE8F2B50D7E73B29419F7312094C3C340E4F9B1
D89D5B41C8C0A3C14544F068343D3ECC39B6820E335081806D628FE867857D58
5ACE25A158AED63B8FE391030C55D26EA2ADDE6F26A46CBAD656899D01B503CD
DCEEC86BF6F5F9E64E2EEBE0E82A93C1D6CA5EEDA4FA3059151D7A063D8F787F
F1BD66A511B0F671D8E266E2B4177FF07E132C62C90BEC03F13845FC36CAEE6C
3D067D95F37BAB936A59CD4D305F731ECDEBA2A8C7B93F359219DBEA4A1BB376
7417A353BC475B59116D38BDEF3AD8BEDDD1929E077CCA4B6D69CFF950270D32
57720FF1EA46BFD8AE8172D2B9223D4668105644AB865122BB3360316F9612A2
9FE93C9E784860E5049057F46E18DA533BB2FCA2267FD97ACDC041F923737AFF
8ADBED344C0A20BDBF4582011DB242B488416118607D2CCD09AFE15B7C4C75C0
C00F4549D250A8D8D0B82FBBF7960F2CFAE1111C8E0CE9342B06AA7C8A26591C
258741F4C3A68CABE3508F62EE68DFDA4BDE678A10433A5DCE9E5DDB312011F1
9F94F8BD632589AF0FB8C8BABC8057FFBB73EB127855B8849431DA4E0D14DE73
7964EB1C709AC16C5F0E3DA61AE13BE61828CC3175A31BC100DD086CE280DC5E
0CF619E746402D25CB99FE1945FBDC9A1F4B52F1E1390FC739FCA36621F2819D
71BD224EA8B7075B95137A61DB977EC7BDC3F755DB6693581C5B4EC2F5D855A7
419322834327A3FF23A23FD48660178B7B0AD5CB98C94B6D69CFF950270DC1AB
3B2964A1A9472235FFC3C9DFB624A248F2B3FB6C70615176F41A8DB91E63250C
6883AB1D2D1A624F58B382C2FE2DECA6AE8458D3FA193CAF36832BB25487385C
E06EEC0A53E66A785118F26D5B64C90F206C9482B87517AC36F53EAFF0911FF1
FFDEC09238374D5BC908EF970D0E8D3721CE0C69502FD345C40D188F4E304C46
10FA7CCCF0512FDD24CB36B53437EF76316462C6B8077A367FA8D052D2E47A97
25EED7476F4AE151FA3B1FD7795D169C15DCF39B860BDF928782F91D980CC66E
AFB9E1E29EFBD9F0198C07B86D8CF8F8576A0FA938B0A6615694D1A83741D4F2
58C06B01B8EB90FB0BEF17F7C10D58787200C749BA0DFA1F59474A4CA38F0A18
6733A8523992CBBF6DFDED8BDE4E6DDFAAF27A8AAECFD1F72BFF12AB00F60F99
80CB3BC380F955B83DE6AB078CED5FB3D4EC94C08179DF1D96F5D2CD7C52D714
E42CF90800DF87BD77BFD898EF9C75EDB109164D3AB33413FB84F35B3C001608
9A6C4D67EA0050A1ED9C0FF6E45FE00933038F1BE45766247545BB7EBD0AC94D
DBD260753B64030759472D938C84A71C114A56219A5EE95AEA69D149FA897899
0319C453911C7F03FED1DFACC86FC63BF01D3A6A10A5FE389B1AF013EBCBFF2B
C00797C5D9896F2BFD0D101F03E134E14130A409334FEE079AD9681CA7F830EB
B4233C443F9C36A543B27050604C4E3E8B5854442C5FB9B7C287E2FA10D86AB5
C6B614D2F5FBB02F3B296B007B5830F70507FC28949CEA51360BA8E687DCEFF0
26052802E70BCB2C63BC975934FC508353AB024B3868C0DD77370B3A4C7B16C5
FFC37C0968E4FC4BE55ECC5BA2A7A3C5BB32EEF0CABB86087F2DE1837BFAC59A
DCDFB637B2AE97252B52101B6F33F63E54ED49617809FB8B2F24322AB310F16A
60F884A5889A50C9F977D12A5C7BE23CB6EDE16C25E0D9EB07239AC4A5ABD1D9
75CF9367CB92EF11DDFCDB04B641A6EE6B169F72FCCEAC871356DAF0CB205917
DFD1A8F1216EB432F3AA0F8956B8E334E69C67DDD1E8A652FB8DA2064F166549
1344E414D0D88A66D6B4F56BEB9360478E29A020EFC155A5FC36A7C291A47A69
E9C57AB73343F5FD68185CAF9381F5E959095F3F1EB907D1413F647D905576F6
284CD1D2B4A1367A5A069751D45FB473FD3CF2999563B2E1188F7FDBE2A9AD81
F7002A27F2EDE3459E49C2763C753C65D91E8B28382FDCEEAA89A3E0A6CD429A
2A569308FB018964439FA7B3877858BBA8A26697C5929DFF1F9D66997E964CA3
FC7ECAE9218A915BDDDB73DCD865976920BD253E4F8EBA8FA68830E6BD9979FD
51C8355EB9D8EFEE1980413950EE4337ADCCE3606B1AB98B58BDA3031FBCD1C1
8A271D67A94B587DB3D7BA51638B64DC57F5DDB6B2CE6E15F0C7670274541DB2
12A8520DB33A05C8F9A7A1BFA435C1D12E3E64C256F10D66BC78DB5A8702AB4F
4962A697CA30668A1809DD72B71A4BBF6C6181016243002C75ABD706FF6272EC
8B127F512CD94B4A671C2DF4F7CFEB087725D960A54F2535EED864F1B747BDC8
55D90C8CCAC8BFACFCF0E923F2EF64841BC9B7B3193238E2040E429B59000BA0
12AEB09790C43C27E568E37DDC754E1BEE6C8EE443D62AE6A2C9A48EFCB71AD0
B7AB827E0814F1D21FEE501DD6EEC702869029C91DED60E30F4334B48EA57898
2D5FEB53407BC29192867A15843C7ED3C22DD5AADEA97C9E362CAA752F7B3EC5
07CE68813545AED50CDFCF7246DBA338D269EDA4D6177AD8662C88F79E638606
2BE839C1F9D30AFFDE82CADE349141E110A5E013BD7D621A9025FAA444DBC3E4
C66B453792851257891A08FAD24873CC2C75DA3473DAB283233018246F25BAC5
50C282E77B265156DF6B789ECECE1886FC26FE41E99CDDEA8DA5B4E516AC3993
5DA37F4B3EEC014ED296FC220C6416877F7F1995EA262713DA7EC6ABDBA82FFD
EF81158A47BD89E38372CE2D82290BD895D063B427C6E44CEC46B305D67E5C25
3CDB908754242EC58D7066E98BA573A3EEA5967F58691C47B09CEBE352FF45C4
FC0007733572C4C243D9DF0E9D06A41B396DEBE9FF4BDFC1EE27EA837EDAF9DB
BF8CD8501F51DAAC063B8CB46ED92B0A55BD56905DEEBF48435B699E1EC954B8
03C19DD406B73DC1A9893B2EEBA53898ED08172CD2FFCE0793330C9C40B21239
36DBF7D6E0C043CD6D918C8C67320A78A1D87ECC5243915C0BA12EC2F8AD6305
A2F219F877BD93CCF679A44CB4BA96B481982C59847B9DD51F01AABCDBA0ADDF
F4C3ECD7CC083D70252227836371FF8382D26C8FEA5FB6D820FE9E6F5613F30B
43AB82895F7B7C0964449350CD6DE913053B7A675D0F0519B5B7F5A93362B23F
38D3BCCF435AA6701CE98B48F7E4D1145CFB136BFE186E0CF93660BDBB489FB5
C5BFD22467E3B7B7E93FECAD02B6123F25D2E5978D05E9EDF07B8E6F61A8177E
7A7F8E621902C64E72635E4E341C068360C704174962854CA55DC54B2B25B099
6C2C590BBDDE3789C01AB80F181BE5AD8919376E03009FCBDCA96015D3822CF6
21366EA3865EE6C1D1F312CD89FC6818FDFCA643042EC1369A0222A52D28584A
FA9041AB7D7A43F3EC9AD09B1E5BD56706C5B8623C5878851829764ECD7CEEE9
FFA5CC77A0E3D42177830C3B5B440DA51D295CCDAB8AAC408A0E41984DB26FD7
837618BCE16AA4C235EDB1DCC2D866C8028CEC212A30D4391FF1229E4F84AB4D
F31358F02777A494147AD18E43156C122CCE24C4A474BA19F3AFCFA2A79444BC
6C666BED4DDD31720C207725C84E675EBC22BD328951941B644D69538C3D0231
68CD87F7D7697A523B5CC753581597B69E752603992965170D2945846AC615C1
E63CD0B7F53872A094C4C437D31470F038E8AA2B0583C5806A5D2A68A0D7DE3C
F703F23838F8AA7E10A2CE1FFEC4FD57B0891FBA2E75BD5D5D17618A9ADDDD8C
C6C3C3AC7708061FAC0F21DE18CC23D29A563527B33C1FF11FAFD503506D7773
2DAED9B41D4795B74CF297C0285D5F195A0D61A2E5CFC76D816168B879E23DDA
5E71E23B5DB3E3B467204B770A5088DB16D83CA1303AF89C286DB03EA3E996BF
BD4BD92AE5CD0F2636239BFCE301738C05216EB395BDC03A687ED357992CBFBF
2CE283367A8BF6CDC7CBC908A3CBFD39BACCB220DC470F094500892EF579A535
CE2816498D130303EAC1F42151470386221BF45A12AA5072BE796574CED16247
1670D544BE3895786D966AB6C821B1B553C3680E1333608D46B78A084192A8AF
A2DD43C672552C6EF9D27EE4E0FF266F35E74C0043F6C8C98511EC1E2A09B578
217601D85E1950B7C532AD1CD0BBCED74EB5CDA7121173131882FFFEECE9FE52
5503DF25B27B0B383BD654E8B7DDB9983A97A95C1D97479ECC18F73683CED569
94401EECA10758CF9F5CFB1B3156064CEEC693C16B054FC0242BE6E5420E0D14
5E3C82485AB07E93D34E70B9572AA1F5F4AF835B305DFD8099AE6295CE6452FC
984A767DBB44B4956AFF8512D795E77ACBDE9908C3FD76A18E3B72616F29E720
8C0082C50185450C6BF6C94254D4ABD62B4BF81C53491FC19E2A7D7C95AA3201
41BA36D687E6D2F3F10BA883CB2046E81CE317A0B867554FC41F000C6D0E2BC4
321030752BF6E2D970D1D6002D80C54A92F319FEC839F4D48736977F5B21F696
1C8A9ACF420975F1E79822D2E558771160CF7D5B4C1DF1F410B1B4BADE5938C0
C2899042585D01A59AAA201B4F06C7E8832174772ED1B628E6C5A586638CE50C
BED2257B820AB36C2DC5214AD810A3E22CBBCDCC9538BB8AA51657E0899C8357
C57FE64B4D449EFC540F7CAD8DDA990A4E2CAD54FFB81876C1DB3A6B32B70C9C
C4B27DA28E97CCA8A885F321FE5A01B90848A5ADCC95DE49241DC602F4B71F8E
08B48E174328A4B90D93FA215065DF8C19C153EA76C608A1C28AD71D12C26632
8D8A8597EB2AAC2897FF23DCB90CFC974C146F8230D82FD510F8C8DA9D0B6F86
82C70315A0A416E4948946A719F38F023CFFBA26D743AF423D5366FFFDFFBAA5
529C0D339EAD65725C9C3A74C00774B0E532A9CBAA1C4E2B050D86DC498C4E09
B536F10A6728C9BFE8D812842495D0BBC564F75F6311572D4A734F5E89F5782C
41E646FDC10DD9C5D3A0D6C41B0A771000E50B35EEC92C502928A746A8675CA8
6F11F7B6044A305545557D807AA36C7819284F7DC58262E52A30CC96D72EC36E
959F1AF73F6427559E7B49ABBFECA7303B0154BA288AE899BDC29B75D8D0F5C5
7950899E634D2049751B821A42C920430B9B73AF085C536961C96B7B022D0B44
C03F179B21D0BEA188FA6E63FC1416554BD786C08975A30C63D210874D07C5A0
0E3D78913B13E26F16E4A868BF1B41A31834ABD8C2F1D179113CCBDDC434B0C8
52703F774C52E91BE082215E5795479B0E6172DC5FF7BC558AF9989987F1E225
31089C33C1EE91B832A0B6E532C45303A1737C199AFDFAFD441E6577739A004E
93648B519442B1696D9B4606912871BE051D5FC05E7E4CA72F37E8E63F6E85FB
84764517629855E0D8A9F74DD2977DAE76EFB3687808DA0E9B042362B27ECF06
15AB2E3BF6D2D7AB84C2DDCF5DA9F451B7CAB8CC18DC84C0F3F5C6555B7CCC81
BF21B23653065487EFC15F7DBE94CFD823D8EB47F1843DEAFEA7A7F5725DAD80
09F3104344E6F291670BE46D6699397D2993C93B75C6C4C6AA5235ED717844B5
EF6A9E2E378337B23AB3ABFB5FB98187652AAB4A86CA4F05FD5B8F0225A7EE85
B5EE040C38DAB8141CDE675E060ACCD1F48CD62E5821FCCDB99F67A1E818A090
C8B37E09972137672F5C02592949F1A760AAF158F2D61336EFEA36957382D300
2BF7A80352C24D787E9292FBA5B020AC2CD1754FC84C0A8A0C1A20137FF095AF
5AA8B406DAAB683B72AE073C70D1DA6F9A736D87C306ED81D2C4CE8B524B5ACE
58005E20F6B188689C4FD8E1B74CFDA093706DDAB99C9346443DE53587023FA3
14F8FEB63C46B53ACB64B0130EA3B56028E22E3FF09425947C225930AD882374
EE74388B7833DBF2854ED3820034663F3F33151F63AA8DB53561C02C90A2B39A
D5639DD618880502A71672D8D508A5FC00C13C8BAF3E7AA121263CE279775654
8C0124260C701969EA2D9E243DFFD75CBBBCFD6E2E25139D12601CC3F7CBA031
D5D151600B11EDABC76C59B741445D70E309507B7D26E5130A3936C4504264C8
16292EE5971A4D84C7B6487A232F18D491A656984D4849665541FDDB68AA7697
5EF5A9845A142743C95F4B68345CEFF63938C1F89B58782E4FAC55229A3E8A16
A8F2EE723BD799DD357B38CF0786B836855426AF5435C5CBE3FBAE7E5AADE7AB
018B8216AC682C53847E946C2B5122D1498A4FB9DCB5A67105381A5E3E351144
FEE289C9A35D7AE5F8DDDFF64257E2F45CB0A57D303302752C7B4E810D2159EC
6793EAB8B97B0F365AC3BC7771DE6C7CC083E2AD9FF54A565D4F320D241FC81C
B0D6620E66B1133931A554C2624DFD0AF403EEBA2C528B526089AE461705A6ED
43F775A5317087226B2FDF7D929E5DC7EB2C6DF873174345CA9B25F491371A13
50855A2ECD36C354ACC0C01CBAA10C0032680882457B154E461BFA2CC96423FB
D0989B6A0EDB6B6E1683172E768133E162AA4A64D5B92AD0608A580161B67017
E2208BD00C62EC363D79DAB52DD65B98CC9CFBFE4F4E89202C9CA6A23357D773
8C197F3A18CA21EF7A9367523BF15FECDCF94AD1AF6F03383432010160DDA1CC
C886B507B9A1073596B53C86E1DE5613B7B447E6A6669428F89D6C46D5A3DBC1
FDA1FBA84BF4FE1A22B2D06D178032011F3E59709BD1E7248C06A173A17CEB3A
E63D923B70E3E1CAAC31B077242A4D74ED83862EE30D3475E80E1137CE45E234
D38960F37A78AADC402A62B1B4B0E80AC9EA48924B76C4B19A73E9B1E343F1EF
AF588BB1286AE293754F056E24FB7487A236770342470AD29C85377CB3B1F875
EAB3905C31B75FE8521F0CFAC6741EA1E7C7CE51A47919B706CF91293EA0DD51
9C41A7A92B7E9DB8CC469BE5DC7C1CA99791F9FA01CE8A53D53656799EC41E2F
43C1C41EF2E63173AD5FB1D14AB501186FC14FAEB626F3277A28B436C58A28CD
0FCA766ECE69CC4A60829A626191E904C636176BB75FD52D81EEB6FCBFDEC167
23335BCAD0BEDE3A1AABBBD3CB12FD61F050E26BDA1E01704C42B0ED17154080
EBC94FF20977435A324565152461953E3D9624E37F3855FD14683A6CC5BC1E55
69A42DB9C3AFD0F93B34A8C87A5CEABB378CCFD95659C0D77187C7D50FA04AF2
0F761AC2275E60215FC944C289BF49FE6D372DC7C415FCF91F36FB6015E8EF91
1E94659DB9FE33DCCF63DCC75EE80136D0D094CF85E03FE658BF21993E89E047
16C7C3F33A912C6B626F4590BEC7E8987C7C07FC9AA833292B2DD4988432BF3E
266C7E76C1A0E779009C4B3893DF4E25B71CA17D427219E0E2F2C9ED00618F77
2CEF0B8831E122CF6E34290E3D634C038D73EF9A5D1EE1B942461CC02172EEC6
0E86108605BB2A39F2E7467C8D9234CDABAB5ABA46B0E49BCC70A75B0D6BCF32
E9C0455649BBB2537AE1F9B40CB1E2A1D02F10566843BCC71DE45E85F719216B
2AC75F43A605F6640FD65FDCA6AE86528C238866ABDC4863DF569AAEC9AF55C4
0284F2775E93FC68EC79AF7D8C4A895BF1DAF22732CE58012FD29F9FA88386A9
62B4A4053ACBD0A8AAA5C6C053D23207EF99AEACE7E86A6506CCDED119FA82C7
BA3DA6DB9479F935FC64A15FCB71EB1817785A4C981B06919CF2821689F86CFE
1F94282C69219F5A1E75035FFFD371D4EAEDDE2038D60974A7321FF847EDEC1F
CB81E6AF09FF2AC2FDBDF7623B4571599E6477463D378B566B0A40CAC041DB11
FA3C53043689D194272D1162AE165067D7AE45753BB057806CF607BB092A912A
719A5C01D1DB7E77B78D5035FA46F719B503CE4B2E2D3463B468EA89336C2C2B
D1B8AD4C61E9683CB5741A968F8B23FA77F42D0C73E57AF781BB2F85B330D0EC
D4F969AB2868B391D6AB2BE71284B9BD33673C5BA58E2B82F3F71005B60731D4
C68D362D6D4292404CB280BE45999C7C5EECA6513300C6AE3FCCBF0C2D6C8959
E2136D3081F8544F603F14E054ED441AAF1D5E9FB2016BACD273C0BF404DC85D
FD13FD3A75380951AF0D4D3A15903026460269248E26E2CD1543CB6FA9FD028B
76C0EBBAEA4C65F4FB1A658288C3284CF83DF3AD97681C45ED36D8DA30FEFB04
811A71652593CE33FC4F48CA199B9E202CCE234F7D09BE4F1608CF29DF203EF9
241D7C99F76DE420A23F9EC397934449CA37B718C7562AC1BDB9E570751A50E1
29515D51659C32307673E76303B49AC43C1E96EECA4D4B1BC609DE85734E79D0
6C42C614EABB4576807346A41FCEF41C0C5BB8C3D26709D1B348C0F3D31EF2CD
E8BF036C71D6DE5A88F3F80A268DE490724F8ECD8EE6AA363A8356B7C7F4F8F4
429FF7A64C4F4801E72492F9627AE39280772E34B9B9532DFA8B5421D6FB5824
4524B6BB0173698FF688E55246125BB9C1E4555A8DB595358745CEBEA89AA04B
C769F18EB1C2A41D37584F852423080ADABE7C5DFDB6FC51F84F1CB5623A4CCC
87D2240AA5E7A3AA9E8DC73D3B36ABD635A89EAC4D11578E6837059CBFDFEB86
79A9579BF880FFE96F16AE4A13A267B90A211F72C826A57EBE88D1B98AE3C752
A1E1A3CFA50F41B44E5800A7AAE8E6405811BA428CD87225C7FF28FDCD4FB898
A052A0B1A3C54E92045C0A486BB5871AD692296D2D69F6CF1E9FE22CD511384A
3A39BD49697D30B8BC68FB8C150E2AD68061ED5BBAB4783C6F2288B4204B894F
EE6A25AC5AFF902D5CFCCB6885FF6A7A18DDF282BBC7ECB1EAB5E1E28A7E5872
349CBABC4DAC456EAE726C8C60AD934442366DC8907D9A944F0D067975580D29
FEC2A055B21D3F4A36F9AF3D0899CF243AFA76EE6C3F1F6DCE427961C7AE24B7
A6DE379D297C8B3EDB001ADC7A8A8B64EFA71DAAD3E660F09D520BECC8A907F1
7A4C84ED0BF61A99266AFE0BC2925DEC673B0CCC74F48A02238917E270FF6B62
334E598BBF94B87CAC653FAB3B298D9D6DB15B4AE96636BDDB65C5D2CE7C1D06
F12656BCB0D94A9E0928F2834027B98B8EA262C750E8662C6B8859493CF57516
91F6993393F5E5146D505EDD9D7B0865BD22B5A07653AFC610F7951AACFF179D
704A30832CB558A6AF7463A929FDD8ED5C3051F414BE1969FC2F73FF5F643CDE
1F1D17CAFB0FDB50695EA35917AA672E6D9215D742F7206D3F2AB389346894AC
8A9F6C929ADFFC2F1CD0AD6527AFCFB9CBF7A48E4AD1C7FED832B8DC052B9655
F066B2E0F663A02B5E760BADB6799AE6C8D877BA866DEC1C79EA40E674873506
809F05DE26D5F86FAF095793958080A3B9144C2E7C3F3511A7147C43D219FD1B
2B78E0D9C860BF914DFF66DB3DB15291BE6E62DB57BAB78918A4109543D77506
6794A2DA0AEB7CC4B9F7DB58631DB3B240E1E7BB813C5E9E6CB0DC59BE29E4CA
B6A62C769B97679952B8781C0A486342FEC5D443F39404E3EEBF361A293533EA
27BF8693F946BA85A67CB310ABAB970DEF85961523F45D9CE4AE207BD5B33ED0
18B4C39F2845F746AFD6BEE3B373CB13E06ABFAE8649AAD17FF96F61F468040C
BE2BA3B5794AAD3433796F4AC32A989C4FC0D586CB3905B6484A283601A5CF1C
41FA375E9F77145D3634B3659F8D287984DE208F74497DA4693C2AC04B785474
07F7ADAC9234F37CB55FDAC64566A120AB6C4C95CF3A75DA9623741EA838816D
232011D47587BFC768B1DEAF8BDA8ED320AE1608267BF9CD5A76F6E2B2737AE3
194DEF1B7EA5D13D60C88DAC92661D81467A94555961414D80FDA088CEA3BCD8
8B74208A2A3889E7B11B551AECC3692A38778E34870D52D97A6282A2B685F4F0
2D20814AD6BBE3C4364BD1C64F9C1F155026E38A1AD62B814A8C332C88E3703A
C838A52AF679558CFBF616A62DCF2F6B56095FC757ABD99D36A7386FA594BD06
AC9B274F0A9E0362BE7A5914F0C9CA69522C86BA2678BBC4CFD08C004927A36F
BA46627D3DA1D00B6BDA0D9771EEC3AD00C32E62F42AB344181BD06B167A38C1
8909388CF082E0660E960041AA8195C13595E51A1192D2B9EE91A223403F3C2E
DF7E097E47D26E7AB0F9383679C8C3675A673E6E6554D774D715491E2407ED9C
72ACDE838EF96D043E0EEC1B9D820CF93F5FC0BA139014A73F8783ADD66BAF94
17F5CBEBC991DEE8B831FEE0653391538587C43446FD806BD3DDA76B43950754
74368FA748DF16ED0A5142906DAF7A67945BDDFF53EC6FF1D9B7F541B8887ED7
7D79B55DEE2AF50BBB996FFD2F020BE75C83705CC3EAA7D698662B29D9D1B0B1
F90C51A951122F8F928B25E975C821524479D4168551A607C3EB4A6C06AD5D3E
4ED4B91045A60E6395AF687EC804F0A8EC0CBE6050C3207794C840283E1ACA69
68FDD3ED2FD4A98572FACED4C4EDB0A0D753E74B63F31B882A8FED977D3429AA
505B88C1FC3ABD44016BB63C2BA56ACAEEC81CD5CD46E3F9FE3390C874746C01
958C266E752B0F5E9EDEFC20834E910DF4D952A27047D6A5FE3172A8A92215AD
092A9C03E35F1173E3BA4EF1BD303DF089CD579E7F895D006C7B615649B62EC9
B29A8CDFEE7947A8BD11BC01F0C8670CDBDB8241D06A19FAB13029F8868A62A7
261E5DF8497AFE2489F12BB71ADEFDEF25C0E79EB7381F9E09ECD9C83B5687F1
7D97A8B79E17456E13B4A4CE457785B3675C75D38CB63329495550C44BF636D0
6757441D80591096267CB1762CF92D5EB272AF9F86825581E3955A5ED4A9DAFF
4C5536562FFF26C1CB5FD8E91869E0A83A5567C3E42E244C5DCAD2DCC519D9AA
B120E43E3E0BC266A2084EED2BFA6F154AD0E1CA74B9BC7D815A93FE689EEBF7
849A8ADE3963C17143430E3DACCEA6BF08E7702EED0366E4D920CC87F1FCBDDA
CDB843D08ECA4744D4EADA518F7D82FDFE625AC3A8FCFAC9CBEDF29BC3EA828F
539DACA90BA2380B35BAFE57C97EB0DC58F3B92C1ED7367371EAF1BCBE3F7585
82F6F9D08E28D53E19876A0BA94B18E991C2945FAF9EB7B2CD54F90007458696
0CC7E7E7EE41A8556299A1DBA55F77CFFADD196517691C674DA9DB3324A20519
ACACF235C56B3392DF5ADBB29885DFEE42713F4239774EC5D2A531FE69820BBA
F867A29A8186E7CF623A14EF467C870B14E53EB4C64C87BFAED952676CDC78D6
419863689A170F6D07F43E57FA9E944BA7F64F2379D9A975B9A2ABD21286B6C3
A8ACCB9872C25FEE0831516E7130259050A83D28E553BDAFB6E952F98A9E8A76
1AB7FF4748D628A187A3CE1092DD1935F1999CDAD81E26176F780F886A86B646
9B87D595B117009E9EA4FDDC033FF50CB5F5056F14D3370AAC64261038C0E763
946AD23553724F554FDB2DE753119097B37C5189C755B5A67A1306F1DEFB6B84
9283BD7712702925C5A225AE587DAC2E63854990DF1A7B78B17EED102C249FB1
AA3B2BE223735B0569FEBD67747A04D8CE052366FB6445AE11C7F008FC447368
3CE752445AD6927642F86EDD19AFFD8D6BBCDC23D4ABD0402D34D121E06F004A
C7D1B9C8FA804A6628AD51568D24E510DD5B089F379790A261D80FCFCA839B8C
18003AEA0CC379D43216CA936BD71C36DC7B489471AF1CFCC5B47E72D90250E5
5A96DF0175F9ACE4CBD8F00EC4DA4B4BFF0AE586ECB36B9DC8744E250A9967E7
B70BE19A5A755A8AA3C2E2D2A1E3A7D87373B3B93A7A5C6A3AEBE2BA17C6E4F1
7F02A3ACA687FBB3F42A7704BBD690823BB00186227D8810476118B2339223DC
051AAB8395394C2921BC0BCD4280F011DD40349746E9C25FD9F4A021B0AD98C5
1C14007F4E4323711E2FBD8E98BBAE16C31AB9784EF942F3CEF4F3015F08319C
38EB0CCA86B64640E4900E535DE5B9900DE27065D766C571573CDD5657CF9D3F
6E3AEFE9D30D704E29D08E0488BDCEC10D2C69480C234AC2112E5A0E1E1C7125
74B3738108A19EEF52704E7D35BD18745DE29942902818A35E1689C4D58445E3
376EE46E7E218A3868A1F35192B6A29EBC2AAB1F149110B5BFBE8D380ABE4CDD
74110BD6BA8C25ECCF80227826F213A0527DFB9564EBAF3494AB079292C1F339
2A00B1B2123CDB15EB0795320ECCB44A31BAD5E400CF454C6EE9A460822CC075
DFEC57EAA76DB1FDC24E04C84C38E1EBF07C6295A5CF60985670AC05E429DD3F
859D30E480D442D205BA3EEC9ED476B95D251E5308988C81065A6869DD7DA5B7
2C2E8A1B23B3EF2FB80E29405A632A951499236D5ADBED6390ABE1CBB68FA80D
3BE4430E9C9FFF5747D0E5467B256530D4492AE7E4E3CBA90F50E8BAF9435EBB
9FACE7CA78A970003AAB80E1A3A0DED939A74D521D8AACA2C6EF81A38F76EE1C
2DD7F2A9466959E734840F7ADF3C6DEDD8F549F257F51B22CA423BB2598A5E19
BB92AACA7A317BEDFFEC805FA5AC52ADB332A0143C4927D8657F910CB0FAA763
56C5A7DE0C4D7F5CC5FC31298A329848CD32A06C9ECEED08C441FF305ABE6FFF
3787A7C2CF893B0D3DA4B73DE605FC851D7C8B3711168190C5377D1C4E4E4CA5
45B6589B63C20AA81ED644E3A2C48A93329B1B2073F27ED4363C254D513A7845
C61F0D79F409088DCD4060D09352CBFAB8079CA633DCBAA9659A233C0D10364A
010ABBFE91261365FB53F78C6F639F571F9929ECC46C87416143682C4FE9C37C
B816C4E104353270A7A00BABFD10AF17A09E0439F9D2BE1418B2DD513789892E
2070D7710637E18C5EC89B2796860CB6BD172132307969C4E57C7195C72E16D4
A8E35C475F10EFD42891A81C53B0A33CA759C488F603712AEDC64F94988285A9
7D588890E336D348806363B907BB47E6B700F7BC13EF3D7E723C6406BDF51CF4
09246CE2FBB04C34D5062D41F011CB702255BE42C0D4698921053D7B8E94F9E4
9AB45DA0D07CC1A050492F71312B7A7F0202DE8B6805434D9DF2F7E592CA3274
28635A0A546D91D9383105D920788B7F81688C5EA33903DA3C09B3A13E28A782
B9246E01572156D599F468223E8908BC6915C5F45D0E78BF2EC3E236B95EF9D8
1C6294337F149145BDF78DA021349902332707106BBB5D307960E84812A11802
E9325FD23F5E98F8DD4DF1A8B03D7A3E2A3AE9F5DA668E2543D55E22A2979679
FA1D8518444680F902EDA3B29D3952D65BDAA16657A59E1181AD1A8B21838377
A9CBBA4B028171270A9AA570993D1FA67C9A0E815A96FA51C9B4F109FC99CBF5
AC6F40EED88D4E27E5EDFBCEC126CD722AADA6DB873276480BF39DFC5EF250B9
CA106F9B96C3BE7B897C1F95A0646508D24AEC1784B8B4229126C9AC20E54B68
97169951DA620FAF505780A725D15A2BF385111F8E41F06161DCF931C615BFB3
784E5C40EF54967C43F97346A02F3A84160EECA6430B91BF91F719E5568DA09B
750655E76CC07CCB3A4A7094228B0127757402E8371C7F9430A185CFDBA67ED9
8B479375A3B6452EAD78F71B35A00AFA9760E32E2DF8C6B33D06AE33BC36DF3B
8ECA7CE177421745C3BA0803D23A8840FB5613F7B640A9E8A801175017C0FC25
F57D9EC58F0A93D81773B314F49E4B1A08EA61653EAA60868049AFD61EFF6291
162167E3044463FEA836F9BE6691B79CE69224BD5CFFF40E7A9265B6B00FC75D
50975BDB44B28010A3D54FCC8EAC3B04F079E4557A6A93A97EBADFCC56AD53DF
63E2560041C6B2D5F97282656528FAEA25678C383956DF68953BFF38C3BAB23F
B99CB9ABF80C87B72F65E4FEB15BB472ACF586E5CFC80FCB47182C3732A4B5DD
089F3122F852E51BEFFC727E07AA69625A775A620B08423765C2FF3AE2004877
EF5992995052611E42744B36408EBFA799704EDBF235A0FA556E12D8E91205FE
6657F6E3FFAA781634F3F900E19D639827B5AC2797916E2BEA774D669B3086DD
7C38C2A1FCBBF1956C43768A626F2351F79DC36C582C274D02D4D502B6D812D8
E1177725E4F0DDEE18080D23859E77DF6E5B940BF9377C91F9E00D3730EEF2FD
1B1017CD172A97B2C8A40E6CB11C31D9C29C7AA3B71450BDEAC4AA2AE172C730
016968AA3FCF6D4C15FC110A14C6B17D86F995627429929156E236281118679A
10464816AE9870FEA23C2377D779DA1F0DE6FC09910A13B23860D75CE74853CD
43F30892C88B3F789DCED98F6DD8C1940F207546AD347FE8F35A8C4C12D091EB
D1F2FC68916973002558E54A60E7119BBD13182A06793DBC2B3B545B6F370829
DD2A6D758F83E8EC2F2B510C36A392C026DC41AFE6EFF69527A09D89726B2F47
40839E9F11B10A6463DFC359DF93689A4792AA90CEFE72EB6453491E313D8DC7
6862444EC789010784DE3411BFF0507432AFD6FA28C8DC4D810A0BA2696C7913
B275F5F44E5EF83B48CFF24B78C4B4DEAA10A30EAB988A1C23C7B8940F5D2568
FCC3524F6F89EB643C9BCF78C8BF7556BF51AAB5AD4B903096F164D6086C9357
C4C55E4DEC459759D7D302254152BB069013EFCFFEDC8F8CFB72019A3A243D0D
7E7FBCCBC0F0636DCCDF19CF599EC5F9AFCB2CECC43C5BF432EDEE5BCC566363
DC2A3F28326256489550D67ED1E5E73ED8CCD45F8CBFAB2F8B0993B8D52A6546
D690A84D06140427CC6BDE166ACEEC8C9F63BF23EB2C41813A6318A99BB161EF
7DB88DA4B0B89B64AE7DF8E448A515E1DF85E2AC29C2D430D884ED216D31A8D8
84D3EF5ED365E88AEEAB7C612F5C311D0891D67BFBCF0D82A303C997E8A43010
3F5E79D33D979BD858CFA89DD94EA97EBF0CE89489B7834C20CF97FC0FB83F1D
4DA612CF18EC2474C1692092402C43865262C00410BBB31A89AD23AC7FA95F4F
F0791564C8066BC70608B99D8E44DBFBAE691DDC4DBE171E004B7A30A20A08CE
BB59E9E075326A8B65C63F985E0F54E3F45BEBE22B79C1DE6FC9226128EA9635
20F82B54B156921AA8689AC88042C30A58B2473A333E603F36F68AEFEF88DDC5
C338F9573334D07FEEE0594095712FAAFDF0A13E3D1A1DC8B9643D9B7EC3B35E
1F3AC6C95F14FCE71364386FCBECC62720B27A31F79DE69649CA9EC65AC5DDBD
FD647985B6F0D4D325D8F2CF7D6A8E7FFE556472E7DEBE3FA0507112C6D45939
C9425C116B70C4970DF70D9816B8F9AC41229306EA37B9DF6E8DEB1C6C2BDEC9
E6EAD99567F8A268857C7C013561FCE2D5CC58CFB186696DB29506FEE14336FC
9DA7B204022166F1C1DC489D5F234600C222AD6AF0A4CE89B8E52E6AC50F194D
94B35E1C20FC15997C1CE1381418479D71F11F70187EF476EB4CE5DA6C81003F
1515EA05050273FC62FDAA4FB1D2E33D471A528A5944BA2ABEEC3473680F0D36
CAE4F26F889BDD09E588340740D2D996B142AEEC358963A8B0783FEFF90D1ADC
9C0A356F1927389F1E876DE72928661EA9C1B94B2EAC6162483BFC6A074E90F0
395C6804A5B17E3209DF9F81567747542BD1857B6F5060D31C481C37D159D01B
FF4511CDC412A885258111779F31BBAE3304BF771CEDC1ECC1EEA9D34523544C
00B58BDB14CA1DC0694534AADB7CA1C907C3EAD979BA7BFDEC43C4901AD58FE2
9E46A3635D2AE3390593FC7EF25EE5C264CE4BBB73A61F7C685A3A9A518734F9
E4D7E801AC7A5134A76D1FBCE0045C8F147537B7C2221103C664299859CC7324
89176B20C5EA3F5A5FDEFD3DE2F2633F9FF8905FC34A8D92DA14C42A5D2B2D0A
62BF0BCAD5451CB67558BE950F7D32F87570E7B3B8130038AF72608158B414A4
D055FBCEDD0F0E36408092A8BE89FD6492676C01A494127574D949072B425DF2
35BDDD5F24949CEB89A93916C86B2A9DE768BF6E401EEE99304F22B4BC7CE51A
6036DEE36B990182A384BECB64471AA58488620156738617681E0A664D2281D3
46E8873C9F74186C527DCF2C26EEA6B5033525C1D6C84CA35FC77F7364BB75AE
2083C7C66E6C13CF17915A37B3967E130CE848C798AA7786282E1FAE278E6048
CD63D76FC9B3F94B263E2C7A3D9D82074A5E985E66C9E67518986A3F098F6602
5E6C1CF7C5D531222231BECA9549F4691CC1E370B57A2CFEFAA1477A2AF358D0
2E50D0FC5E96BA2D52AE6A36620F4FE66AF8BB7050541282EAEE8B9563E8C38A
F242ACF66AE7A6F0DE7BECD18991F4302567C46C5C1D9FB5A9794CFE67BCF69F
4C2ACFFFB2EA45D25838FD97E9514F2BC51703F3BE1104ADAE188A6685F78778
3EB2B16202B2F1B9B785E55D27267A083AB75D91CB9285C1BAC3490528087EC5
2EFE4DD9EE467FDFB65EF9871EC247C07B89EF93F9FE63FAF76332D5D63D3913
CCCB1138E91D5097ABA157EB526F421B72D06B581581990DBD75C07F8B1A4B87
36A021BCCEC52EAA2364B7C0854F69DF3E71BB572126735E72DBA99689DF1C56
FE9986CB77AB2FA01C45314190E6B7EF6823FB409FE0FD5208959A215B75D561
571CADCB0336C97076BFF950438DC7BDEBEE27653324215D2855B6955770F81C
522441AA6B84FE86F1B15EF14ABA888E8A86F13B806247DD4DFA9063C9B3FDB8
D97999CAC241F0579E8595497C63E2591846E9AD5D00CF6104B8A2CC620AFD14
E9C62431A5805EDA613947AE948153A9BDEE22D46F9CEC8C17FF66C1F90D8C4E
366AF96CE9217A8B47246B7C4D03A5B1814448ACFB10D380F92B2E06BCE976DB
2E19A8E62EE3BFF87BBAAA4BD4B20A4174891826CA3D337F2407F4E94981BA98
28BE6A053E1F3D0DC0BF0A14C73A8D80A911F3711EC0D63913330CFFF72592FD
63DC55025D605E817DCB44F89EC0FF58A403AB4D120472AC822B3514D3C73DBF
1486A8CBBAE70C1090D208744A52E593570C6EC8E49BD41ED979314CBF0B7AEB
0EACDD8433869A00CFC75FB43966EAAAA129990E142DCD0D1D732838EAD2106B
B6E62D5454841290C9603D712437E2CADCE7B278DB2CCD53ACD7B6B523463869
E3095E39958FCD80A39E4CBD884D4994A7EC9407F5280FE5690CC4708BA56C6C
8A5613A89CCDCFB00E9591AC7BB7FFC8A76618F83320D7F8951904C487DD1390
2FA3151681C85F16B88DB2AE61DED07A7E351238AFBC13025DC317E7CCFC13B5
6E9DAA19FC336E939EB40A8E211D618499C8C9C5984F546EA3EADAC2A3EBC99B
93533EF96BC248751D33F7C872EA5EA529F6DE126C11432D8C0F806E783F019E
874F2C339E74CEAFAAAC6085F994AE347C7D8D7F27643D015A4423506A9A2A9E
1CFFF120534A70767A0F17EDBF9B8D010255944700567530AACDF075728F046D
3E8F0B8C9F7961392FB22C4F8680188E87C70A67289FFFEC582BCF933E7EAF91
2C86CB6CD5BBDF8088C3DA96F7CA93B7288B2491380B2F4F87646F6BA425EC91
0F2CFAE1111C8E0CE9342B06AA7C8A26591C25825B8E03DEEA22B6373ACBA6F0
38D6990AE45488DC22AFFCECF3E70F54E4103A90A2F7E22C3755D719F580705B
6FE699F9DC6492EB0BDC0648F3699E2A1BAD94A5E02D053B225B7A50361D743D
9901F47C72B0FA3DBD17AABFB9D89DC9FCE175E01B99D2DC50C74912DCDF0580
1008A17E25552DB9C9AD58E39EBC791CC3DE809D22EC9F219CED0A89C6333F29
8C1067620EF2834C6D858AA45E82106A159B20C6B32F68FF4E007A16C4F20F7F
1C3EB72CAEBA74FB2FC6A0771E2ED96EFAD0CCE8782F32E715BC45B074054B71
08F68EF8B861A4309D40FFD31416692E53CB22700B9683202A8ABDA2B06D3FEC
6931E86638ED58E48FC81627FF349EF84074F350F57D75F45282DF1A317E75E5
E54D0FEBCDF72570B71623D2B20006D2491128E9A78A8870949F658B1F8937A7
45C5AD163ECA35373E68B72AF88CA61ACBC28DAA73EEAD74E27C57D09DEDDEF2
C616D951BA702DBBFC2EF6A17816E2266EACD9B591B91D2F2969F0B9741DC789
B2F6F1C133040301738DFFC58125250C5C9AFBB0242EE303C5F78647D31AC19E
6944DF4A33D1278E1FE08A95D640010938FFDD649CA084E79383632F0F225BD5
63B1E54D4B4AC20FFB7B294C9C6C0231824AAD36B6349FADA4CF4F90C80CD44F
934E3CD426A8FA9C7E0B7C2EFE4B860D31840BA1BB321E935F523734B6422CE1
2CF801FE6EF350A9E73922AE14CCBFA261C125FF30F9A250F75CC7893BD6AF06
E2AB54ACC206DC00F5B520D62527E4D492FBEA5EFDAECB42CBD17B2B867B81CD
B61DF740F9B321FF8FDC58B6AD408F5A44B4F9A2B6046916C12028284FB38882
FB8F69E3816F315788F094FF4D1EA668E20C05CEEE31443F1DB59AAF43195945
99685FF3C27FC5979E64CC216E706FAAA28ECD2A4A055856F171208F5686E188
8C5B92C236C8D2015B47E99B7FFD856E601510B4437C6332293B35F6DBCB7A9C
897B37857F7D517CC14BEE324383EF00F8F578BFDFAE49D3FE7B47F0B4C5BE36
297E9DA5DB6FC02D19BA41210AA7A444428DD0B4FC9457234545B4DE9A0270B2
D7CC22998F19C4D2CE6E76DDA0A60C06F86FBAE0C0D602C1FC6FFD86B42C4E29
643EC14B422947E190ECA7149C40D1DA853625D200B2859ABE31EC7D85753E9E
99C9C878DE977CE9EFCF11BFC945DF5982E6FB9CE9CC8E257BD495D1BCD1841C
0BAB1574C26588628F43FDF85057119AC29535FAB365FEB61999671C1DFDFD94
384231803AC6C3532C83927908E2CA59421142472001FA93DC88E851901C77A3
604047CE13129A74D521F597C4B27F96EA3830CD0A847D1BDF852FED978B0694
6A2CC174B667F18452EBD489C9F1DE58AC98337E420B23475AF250B9CA106F9B
96CF9CAA6D5C34BA7012F05D437402784D8B67F29AA760D099D44A5AEF7021A0
EE3944506E9AA4F9DC68C58E046A35B9E71A6C2AFA7A9CFCE04ED74EB2796B5E
04D757ACA1DE7EA3B5931130B648E9A6A7B936C2656B59AAFB74F9E40E680D89
0903458CBE3D2A1A9F1C30D13BBBD899E1113DB8E9E10BBE2AAAF75878643142
F5804346C1264135E15756B43D90E252FA895926B4280C0E01296A4C3B457A2A
0E5005D5FE3AD4F6A11981EE934DF2891D0C954B8D167057A1258510EFB63008
76B96F523C88E2101212D8FD09DC345CB12579B4530C0FB5CFFD64223C611208
4D1DD8D7E4FE9DD4CF498AF17C7BCD12030D71140AE554DF045C875F7C0D86FE
126B9F115C246859FF91ABAC664EFF03C9218C9858D9383DDF4C56243C490B1B
4A6A8897FECD436C9D3B793B9113F4442D87238C0E8B747FFF6F4BA48B668D77
0904DD37F3B1D9C5D34017A12D8C3F1DFD0B90AD438A22F57B55ADE3A451E37F
6A8C672B9351DA9385C5378AC3F839C0A2F1C2CEE86A393BB350CADC4670BE8A
959BF9BEBAF5A07DDCAE01540A753A547D3842D04A336C94414705F290A16E14
D632FA718E246DF879D6AA221DC09190CF963CEE9AE3DC0B975063CBC21192C2
8F980C58B6ED119B8BD0319DE411FC4B41FA37916D6925540323301C44136252
E586155621AEFBA84C9BC409B1F78E81309A27289A7C804017C4CFFF374D1D7C
AC781DF958042FCD04C2FAC2AA55214830F8D75EFD165CA312FC1B0207BCB904
41EC59D1E57CB61535E56121B29718F758DA1570B980F3596906C0D7D69D8007
89533D3BAF64009FD11A081790132252D68371D08C9CD4D8835BEF91F5FBFD2F
3A488F7C144616D7149DA6F667EE13B4F6714D41A2D01FD300C91B5F5A797990
6E7215776C277A087496601E91FC5E8AC509B9BE9452091EFAE89FBA64D95F0C
CD144DF4E78F988FDBACA12A267EC5DF0634EF151BA2298107B30E470322BC84
0BD375490CA2C9A62E6A064469B9F4ED56C6C5CFFED6937B739314ADF4BCB1A4
9B7316EA35532804D8CA51A935B24333FFDB3F5525A97C2C1AF6963F1248D086
23E1290B983A7CFD19B9DB65CB41D0CE65F05CC6ADE25ED80C060CAB8A06F6E3
69D3D200565F58DF9C93B7D2DE21B184846B76AB69AC3CF11F513BEF0C35FD17
808478771C747A6B5D294CF4D47AC12F1D9282D2DE0F808DD5B9E7C534D0F261
BAB212A112200539BA01F7B8607FEAF9CE25AE4EA72F2EFEA54DD61786AA6F7B
BDA3F4098978E4F78DF58F745BCC67DB6E90FC6476E25BEE707161B0444258FC
AF20B7A34569ABD981159344B1779A9B08B6332880D256B76955E82321AD63D0
551476655BF60ECA481C16B1A3E60620A8087B69105422956833588CADED91C5
63685AD18B7648BDD7170DBF7DC6E91446BD309C1545DEBDB0D7A1E0810B01C5
54FD4BA05F5ED61494F683FC61C34D6EE8EBBFFBE7C7F679AA36D48A85F8CD02
1B60D2555F023B7D95A916F54291575D0FA4CB78723FB40B625D7418A892CFEB
FF58AE1CD0F61433B881290CA34E3C531D23DB33FF8672678EF4B76BD5DBA6D8
91A0A0D07E70483750571F347AB50AF1EFC67B93FA18A529E50624B2659A7011
A962E8E32098E130FC9EC2ACB05B8F7F517BDF4F3414C620EB2706CED22A53EC
EC43F6F4292E26DED10F52D92DAC7AFBA2521772F4FBEE308CEFA450C89764BF
440ABF080661452508DA090970F9AD3D730A6E69A4838958B9FB658D644C8CB8
D349DC6F1555193E405651EEB82353BC0E0FCCC3818EF2DD0F85DB1D1D85F6DE
7DD73FF7ABAC26A634CD2D2206519D53EAB53E924A60ED01FD4D1BF48AE4F7AA
E4A9D1779A747EBA5F945E05D1A6D9171807660747C0A48205DD807BBCFA889E
3DF1F3A9B5858B035621B4061D680CF64AE0E7C27027236C04B7C52D41596E5D
82BB9E05390DEEC769C63967F79359D1B296E7A090808C4B8175703FEC53543E
60CAFA4B6E09024479E6591FACE84C24472D9701728FF412E1E77E772B2C1CBD
CA6CFA4DB4C08432BF7F31DA7B869DE8E8AD38D9632CEC6C7803AC212291CA5D
2F1C02027B7D03AD363FA5DA0622CAD53E310D0453CA98B1FE509230F7BE5AC3
3FBD8E3A9B022F882184FAC1670551CB5E0D692B3C9BDE4F8524286CB1EB9ECE
A7123064ADA03DB2711DB0E843C914E253EF34DF40DD3C1FA731E3F8AE2E624A
DD58869960793BF80321D8101ED47F36A3678F407275464DFBE5AA7D8D424FB4
114D7AAC6AC5870D0FDB7D9B36163ACF2F2777808CBD16A82F64A29C7CE76B35
4A5CB2A662E847B43F7406C75AB32AC7D1FC0357593951C2C06B9F73D6ABDD66
A5F035DB6AD7253C77D0AA193EEE986BA9F989429EB2F16161E0E56E4CF7E096
632B3ABCBACC1261C89D81B3C53C5B458EAC70ADFC54810310CB0B51858BA112
0E26A9432F7FA1A7A64CA98B2A9EEAB8D364658143B171CE29CAE9562D45218E
F07DC7F74A0D26361F4C3F5A3DDB5381CFCC78F31123A59E84A773A3D98A1D5D
22D820DD846E4D23028826312F07F715DB714344588D86C106679FADF3E2C108
112B3410C6DD545F78EAB8C95C208C3E590F45036691F1A6FFA490B18E3D36BC
86EB8A78789EFEA3EB8929EF655F1D5D2918BEB04B2B35069395B41D5BB131FC
DAFB5CB678DA317AA3082CFE55D0265952CF508955B9042CCE1666D70382E470
66EE769F46EDD935018D616E4B6C65760218604DA7671E6B991D1880A7048295
A277AD1D4022BBBEA0A9483EEC2101DFB110889221A826EC20AC0AAD8C057C2B
B99F6F0DE4B3A8146A54D5E9A8F841A9BEAB7C82E4FC09DA2509DC295A5DF4AA
0EA7F0B1C126314700F5DFC454150184FC1A299434634D772D2EE66CC0C4FAA4
2D7E02961B19DDD3634F58057E38B21F897429B05E24FCFAC5F8AAD937150B85
ACF426AB882040885CBD962ABBD6C7305EBEC76A8BDA7822CA4FEF57C382B9AF
19EE50F3C79240CEAE05D3F76762C4F3F49142BA778FB64F830F0CCA08D642BF
CAACD20C006514FE43CA455105180FEE49E49D8C4ADCDC0A07BB36B0493F6DB6
4BBA13A42F48F0B86613D7A19EB389C460F5A99B47A84017FBA1411D6DA5F7C9
8550BCDC5427F0201AD51FEE2D08ECFF39D19C62A5987C3EABA48D96E18FFF53
F67133462A0982C99B854FE7F13577D32B095322CC6C8BD6FFDE1C3877469E1E
28DF94EDC5D3AA4B388E53F4E7B256B88AE676FDC3CD9831BE77B254972132E5
796F007251506608A2FE4693A2B9B3D435499D35A59EBDB8FD13B1C5E2DE5B1C
88FADF22976279F1B8285F5EE8BA222C789B363F4B77BB6F513F2D1CF82BE364
B0469D775C716F3B0FDA3DC799FD07485EA5CAB2E519E8069222ADF84A6F2E1D
641C8AA40C64A83B36D8B34CCA8C7EFF050B07BAAF0D4499C138F0B25159A408
C77D206AC2CCE58AEF9BAD291A3032F4198B33187CCF68EFA1F9F2A2DD5111EE
88B2B442C2FEA628E30361B1E29DD7C61E0F9F0E4FE246ABBF5F0F768ECD6DE7
B532F189EA1119ED592365FAAE25BA7D61118C5189BD9D6321AA7367F1769C7C
D3DF69C9D59471B7B6B183B2D5CBFECB8A7C0EB1B38E84AB3FCC5AEF37593A81
061006BAE77510F9B77F902D67BDDFCADFA485BA8C2DDAC8022FCE98D85CA90E
455C9B4D8E318D1623B71809BDAAD3BF598A13257E2415EB7288324D3AEC7298
5B4F37CD9E17D396CBDDC206ABA8662D086943B9335BFEC3A59203A9B6B8CD36
0A3C91DA06BF2865C58437567C2CC0456BF76187C2A0DAEDE802B2818F0E79EE
BDC8FFE01665324375F629BD83579B2C564DF262166FDCAAC6417E96A348886B
A862140F8791BF4E805C0DB7A42F614A93E98993D42137021F80792262A4D2F0
313057153F687ADDBEBECDCE5D5144613798CBF687F2AD0ECBEC9BBA82740C4B
DC7CE426F4239D4551FC9A82DC331CE2AB57F8B4CE5CEEB7482302CB5D72BD92
E6CCD52971A01D77C07385C9C27980E709E4D642D169A455E2579E8FC7A7ED3D
99BC762576D38886EBFD84A70D954F72564646B0910BA9E173FD2222DDED8C4B
B4813D949092FB61F519825659E854A83D4E6F02B610E5B65F1DEF83BFCBBA6F
05F8821359AA00F71313CADEECA749950B2458A082AEDF8E3B035DD4598E9590
DDC2A7874BA7FC9D17BEE8EE8CCB1DA1A852152D4BB72DCA67ADF5287921148F
4213CCAAC483B43BE2A9763FDBBDBBD50A09E0E6AC471E8868944268B357434F
DE7449E8E87C7563ACA84676D49949C3EF19932A2029BE9D741D1840074632CF
AB89A48F151CA288979D90F1A4A4492768CA28811392146BD35349A018B01E0D
5BB9E79E2441C56B90093EA4FD1EFC73173819BABE5F350C8F07C35FC6931CB2
4080445A15AF3E1BD133241D58DDCC67037061D45335253575E59AFA7652926C
104DDB7A1169F5A96C3FD32EB201188FCB515F12AB398D1B9340ACD779FB828F
22BC7C5BC0E8235288A8D1E2182CC2DA6645C27CFE3A2245AB309D511F324E32
956172DD0F223713165281177A7AD24B7591C4260450089DCAB1BE65B8C8AF5B
39EA303CDB728DFB83ECE29E29F8ACE917E40577DEDD7EA8BA95C479340B9E18
848E9E29CDE08559A43DFE966AC1214E4DA3FC5A7CF6F15E408382FB27750250
7EEF7338B7B14ECB61AA9DDEB8F83219C031DC7844FC127307D30727B94E23F8
E18D75B96F61EE0592365D4A01BA10E1C4F148AD1C9442FB05F7B4575ACADF62
A4A55B298B06001557EC92332BE6BC21ECB0B22B70CEFA5736629C359D1ADE3C
1E4BA1EB8855BBFECA191D4B80212DEF7074AF098A82FCC8BE6B4F275F66ABA0
C84D149863019F1A29BD396BDDFA44D7A52F00E661BA207C15F18D8C5C3B1FED
95A43EF0C9C39205BD0A525316943C6E16AA7865FB0B7856D540B61473D5A112
D1F716AE66126E3E6A740EE4F99E8C4A77C773CF44E83B7C9582CD9E37A01A67
E5EBAC122CC2B4D7EED2D642966DEF6B5FEA3C9D5D4269E2126A1F9D58F0CF99
1AF88820F1237A88AD72D8953E25AD52CF4809F57F6513B74F9F6C1F90E5FA90
79FAA3E2361450C0DB25F5B010131BBD91387BEBE127FED3E0DAD617D0E20E39
F00BA99FBF0F58790DB69856591230B56C914EE1082D8DB99454AEF0AD008875
3DEB92924B8AACE236009F2633732286C17218A1C312D1B4B33FD277D0AFF5AA
66F17057A67579AAA541588E6DE6010E1E43F5EA1F88493C6DB9CBC69E106EE0
7FFFD590BEDC71CA9AD4AC12B098E9262876F04BF1B180B36040D8AF94F0747C
51AF468727BF3868A8696DD77372304300B93CECBFA91BDD117F70819CAA9A5D
07DD4E68D1245B3D956F42146F9744EEB0669436BB0441D1ACFE4B66296218E1
EFC5BE6D8546E99C57981BA528840E4C5F98BC050A5C19D339591113DD5F99D0
BD87F6DBB5CF39C981133CCE565A4724494A1A726824976B790F553FB24087CD
6504E6961B63F208B93F686001B66E6F09E890FA521A931274C30C6B87C1B42A
BAA32F2A94D9355ECCF69B6298116DF61E5743403186FDA4598941E7DB8D7BD4
120DB5282D4BE8EAEF44BE07806138BF547EF45B3D8111AE4E0CBFCF1D5B4E08
59BE2B3B7349934E69E48EB70222D8B9D52981FA0472021DB469C463637218A7
66F14B803332E19DBF11EB708B30511B47B3B6FDB110BF87F8ADA28B1791D942
39649A8A254FC11A4FDA5CC00656C0B449E94C749BD813E749D63D73843902BC
CCB3580B83DC0102166269AB6A4F56755565E2FF4CEA127335272E992411D2E8
28C1489D05CBCEEA7A28C90C5B2CB40D737CAC0FEAEB80C0B0C0CC4392158E21
E5FF523AA403E37185A14FE17F1D42B924A7799A82D7EBBA2B3A142704622AA4
BA96347B69E844752017BD93018665539EBAF2FABE7C94EDB0AA8E432CC2BDE4
7A570DB69E708D26A6A086E514A8CE865960C1AD7828820DFEB380C4D2C822E3
6A57E3F58DB7A9DA21AC1F3D78A1F10CC1C84D2B9B4D3EDDD19DD0296FB1895E
92DEAA35F14CB320FAE625DF1ADAA65226535F722426F03AB2A04A2D8A1B23B3
EF2FB80E84EF9CD99FB074B2F9B6E670A8E5071B797A83A4153B8E5D37F963A1
5B1C0DD5A53301253A3743F168DFE505CC1A0F2477CD1A5C0180925141BB5331
8A8DC246467D4011025C638471E3F0B4BC33427E5A1B7394FAA48BE555CB0D6A
779958306C68196256E8CBFA8FBD04096AC0FB4CC79A6110CAD90C56843513E2
A247B213A287F8D31AC4AC1788A4E78E365F57B597A429E064DBA9F0458FE35C
A01891DE0DCDDF2638DCEE8A3B6818DD0CDAAAD67F1C43F8454EA7BABEA8C3C6
1F93A26CE5358129796FFC38A7E677E126FFBFF16C4C6AF6884458C4B121191C
D23249B5EA441F6C28F8FFC6DDEE8432471EE99C5620F73BA0E13DBD47FC4A2C
C8053E67328F4348183D6F36D86511C36F576ED80CCE5C3BBA4B56D34A99CEEF
BF687C2500E3DAA62B3FF0C184955E04FC32A6CA4156340E04A449ACCC3C2DD6
DAC54C9E5456E4DCD8776CC1BE7B4138E47A716CDAC49C14C105BCB2A10E67FA
EB5FCF007D027109817055B8EB3707429558C69FA1F3B656410AF3C084FF5DF5
F69DCD8FB92B332FB6509FC3FA395199FC46BBBCC0993871E9718A75DFFFC743
95B532A58983B1CAF620675765573824EE24E9191AA563B6D8D882C09198DE03
7BEA807C8DB15485BE5285E83600D55508E00EDABC32590E6E1CF675F16D72C3
C6FC29D60D85375C551240C531BAEB097FF31C13D001FC0FA03D1D41A2DBFF41
A89CDD3877ED007BE6D9A24CD68083784A02A0E429848E1FFE71F7CA4C23F05E
43078E3A7FDB6B9557D2FC49C93A2DEC74FD1F4669F20816D93231B1906BF7C0
70972F58E7EE1875BBB3123ECF3733A72F550ED695F62C5C29BB006DF06A0987
AE903B8BE25A7497747881F142B92F71193D204C6FC5AFDB0C9830B84060C0CC
594B206EE60B6558D9513CC806C8F372FA31142BAC568DBCFD71E8DE948FEAA0
AF135EC3289049452E49EAACBEC7B1BE0468CEBB3AA6AA80BB489BF43D3D4124
685B04104687006F4C2F41914FD1919A0D5E6172E9F246C8E6A9E2E128440C36
8B428E9BB0B84A445FE6EC09AE45CB2854F6D12058FD85BB39ED55C5FAB5960A
2E3E919A7568A68DACA84FC16A9784E1D6D442E2A21490125D91AD2D82D290EE
43A84F9D48A990A31A8794695ED47F44ABC9F2A6F66D76ED4A3F74B1A95A2D9E
DC774C724540AFB8833D7A946CE397EF5E0389ADC3136B882AD6D3DEB7B2C2DB
A21E9972A3BC3D2955A24376D02217FBC8EEC75F083FA62822D0FC3B07871F7F
0F811F4EE2B4D402C5CC291E2321AB16B65FF4B79CB88B74F18D974EFE41BE9B
874F2EA7579C7E3D872C09A757E3289EA462B07A38278CEAD231D2FE957325C8
C04D6B2F91594A7A402AC2599C110C329C117FF68BB0702B8643F60A515A2A1B
24875E6FA313F1144C44EBB9A54493D4AB68A1188B36E347C858EB39798EACF1
DB6ED6907C774100C8765BD08DECBFC1B5DD471E898B9240AB9038C5E3B1C020
D893E936A8EDFCFE1B17A454024BD1D00268515EC98735AEC5D41AA6D6EBE04E
7104F7D45EB5E66273A0E4C588F40F4683084F16244D9ABBBD8FB46C0C1473F3
3335CEA66AB167151D07BB156DE7712AE486A6436E25B4A5D6EBD16FE141CB27
077B56D945B1772EC7F921FAE1111C8E0CE934C29B4031A283991CBE1DF8CEAC
45B1A17A8FFA51FB391C53C67B4604629E526DF9FE32FD78269E4E9516BDC079
6B00F97411D68A4BA351437B4553058A13F0BB2F9B14896D3B0DFF10E8F2C663
1E208D861DBC4E4A147B5649242EF15E332B4DC49C22D0441922A0D5813CC4D3
56D6A5A2233DE4C92B0BBC8FCEEA8F7057CD4A6A8DADD1038CD6A2E4D13A42A5
8A05CC1169F9A98B078C99A6CD4097BC15A4FF64A46EC2A59B07C199F94E3DAD
2AD89BF49B49F6173C2D43E74A7FA3F51F1D2CBDCE87FE4F6D309E689F30A0A8
35A8C3CBE447A3FD124A767745044ABCEDB64CD190A4AF3020DA56B9D990AE3A
C299BF91548D8F1815F21245478E81ED5DAC77C9B5A9DBCD202D00D4B48157CF
757593D971600700AC0BAD4C1C0DA37FEE7A32770C602746F82267DE72262C23
3F1DDC9A8AA52D3B1699EBF47912FD6DE0481ABB020D0D6127028262742C3505
3D3CE3067BE8026E4EF54FF14B56E1A8D0C140D9870C9F03C794EBA0C73C84FB
E009F9DE8724E97303734C2BB339F9DAD4690C4085C4684D850119FD8C737FF9
B007F302A8DB79A02C3355CA6B6DDDFF3EC6B04F509B57718352BEE956A3E229
309A98396FEB1A617E0FAB9532E83FA2BA4A95F13D21B963A4C2DCF873744228
1A9AFB6848D34C50995BCDDBCE8943B4A27011722102981AFF4B4F7E38A3D499
549B2B853C811532BC36279AD263819CC622B47BF8604A88F3879353E48A3DE8
C400E13CCF53CEB179533B86FA45AE991E6FF79A49D19A37A5250B87B5F17811
A1AE6489A8C3009A4F31A7E02C636D2615F6B2BB7CA0F1A9233B220409B136B2
8194544D257C2B0331C1E9327CBDA77FE9E936BBC50D28B560057DC3EDE26982
32BA9E2B50D32AD8D36A1CCCBEBD1AF2F31C4F0499935074B51B6C1A06415B06
C7DD699F17755371FB31AC05C17606E5B8C03463F8A5ED4D103C4DFC71F9DA4A
FF4E2A0187BD325F68C21893AABF688492DB2262178E7540344183E42132F3CF
F4DD6C5D6945073AF8B8BE369F850DDE93688E266263B8C1F8F880270EBE9D8D
D86C5FE7E85D4311359713E92C2BF79589669FA3341014C1DD42E43F08923CC0
64BECEC16C4D793CFAAED0CF7DBFD5BEEE76042DC17CAC29A8F5BF3F897260DC
EBF7970E83536A900B38373987DF19D29CB8EB945FEE6E4ABAFE7B1E2BA8A65D
A2A425109C24FEC7BC6230128047AB55D3AA89A9659B35C8686AF116701C4981
2E08FA547AAF78CEF0F7998F5EA6FE30A2C766F6F0D628F794F09DD2718E35BB
4DA5B28F23EF6886202895207B6D9575F45562C31E92A52CB6E7872309340C4C
622A85CFEB60C749E3ED436DBA8BA9565A47BDF1463104419CA0B4D8FCB24B2D
0F785AB220B8BC1A82F3BA6AEFEB1EB248F38085A7C5527D08D2F83850E449F1
01F2533EC217451B4C53F9428B6B265A63F4F6DD4507455A761600CE58A0F53A
8569E03A72E734CA67BB29FF393770A167C6FB2E40DEE0E7C1D96B3478C644BC
EFCA722A7EC3999B5DA35A724B445CAD1D6365ECC48BDCB019EB800D78A40D27
4F1D67A277B16BFF5E6A10DA5A3CB90BCF2AA5C094231EE2EF23824562FC0A59
57AFA853D7FE9CF458230A1642F97A73C38665837D78351B895B8E5328C951CA
5FF689A1261E6FB06F9107F998F5632D237BB8ED8B1EC0F4306FDC9ED4D92ED2
2EB784F03A0B9580312773292683D976CF8E290FCFA2021FD17B86F6D409A8EE
006B2B7B3F088F29D8562966924D434739AAD21E2B25924460824976FD723598
E1FB8411A786495AAAC92BFF20D61D3E4928556A9B1E366B25FA456B0CAC5ADD
E78A45B5F2661A917CE8CB8C489D5D6BB7C9F9AADF020BA72F93B0691A982D80
7E9524DA99E494D9E1630C4402F9D49702D179924E3623DD87D84D5BD9EB68D6
75CEFF3C692BCD81D0A986C776318E641640F69AE163673A0592AFD3D1DFF4D0
B4525D7DEEE210116425CBC12FFD261E7931FB496C83A942B8B0A13AB598BBC4
3E921C06029CD9C5A7D4A390FC911845CB6E6E8C17CBCF3306707631F5C61331
66FC7A3274D6B4793392095B31EB49B98B01A2ED44E51A2B40DA2603F85883D5
717EE6278F0B96B94C8A9A228778A828DFF55F77E3BA840347B13A1CE63460E1
9F6F1DFD8FD53AE8B98C7284A94D540ED73DDD44EB8F3E515F78C1769282769B
4DEF9D34374DA6052D30F8FBCCCDFD1E0AEDE708DC227B8E8B919102454FC951
E4319AA46918D7B1841777D79A1EAAEE69E358FCB41EDF97B78AD52E35E93929
62AF9206585EB7D5511FB4317DE4BAF6F1088A69A2B740583DB6DAE1BC90C730
BD8654F29494E5D94AEF4267749FBDF55F16CB14DFFA466099FB00EADC60E91B
1F9DD0341EA39445D82EEBB32D8D6B2A1EA88B5DD98B6BB0F0D6436CC7E440F7
49290CFFA39B6F4D46B0957C4C8051FEACE2641AE6EC9E2C68DAB4E48CCB42B5
38562509A2AFE15E6E4BE19370ABF63A7BE29F978EB0532A201D354DCC505784
C05DC79042CD96825F19D9689C94CA612BAFAEDC37A28347934AAE36BE93763D
F2301019FD4ECE405592D5BFDC37A921D19D1B5F47EF3FB302D5BDAED8471FF3
FD7F42EF4FE04DE900037A745839F67A660EBBBC5919D67C2455BA13AD5FAE3E
E66C4E0A19CC1E6CD10E5758192843364B549CCFD0B3F5B92CC51CC0A01CD09B
697D9D25BDBBEECA0053107C553CC2A1E0F50520A092BE132524367B430280CA
2AF8F1BC788BB7E150E69AAF6BB795E4973826495613D1DB4355D406EF575574
6D9D4813929CE7D80BEB00B24813225661853D2C1E25594EFC2986E429D36E4B
4277735C3CAD1857AE9A8864D4810006E7D8CC2A52661DCF19BB6F68F7EC9B0D
F3D14A3C488DCFA9CC753A51CCED0234188986935FFDD0B7FA64CE169BD7BE4C
F21B7F8DCE46CDEF60A2B8163CBA42B12659CFCD29CBB70C48731E264D60D24F
085A00A03D013080D65EF94B9840838BDC41C49DBAF150DB8EE1A70BA2A8999D
4037F607A6757213E7E6F70D2FBA55A8B6D3A6B0C8AFA3C114EDD4023B2EE2A5
232FBF968A45AB0A905AFEE7CA49ED6AA76A06EE25B42404E6DAFE294EC22FA1
309BB097A7680A9F009704033A4C316ABB86A9957DACCDEA47BC4EF2F9EAFE79
BCD3390664DEB8E92B336B18733034E423FF872067514CCAFF52829C58570F0D
C71FD7C2DC3988184B490DA463AFBA14DAFD087D3A6D6196AB96A9A9F4BA0C38
8F507CD2EBA783421D05E1918FCA8C45A92C3A6B9F0DD8E8836DCC4D960F3F91
52FE776EDCB73C1409B01A969F9EEBCE7EED79DD95C2C7A8D3FFDF2BFB0842D8
CDB5154F2B0D00DEE30305CB41D56F3790E6587FBEFCF5483E1EB6481E6BD638
339C9962E62067592D026753F643A8A9C8FAF925A4981533042BCB3A072C0C9A
4C880907405488EBD2959591D1627DB0E3846FE4D215EACFCA078B700F9473E1
6D523177CDABF8971F1746847EE071B137F768AFBF50FD1B37865C9C0A12E9C2
391B5BA164AB77FAD23A45054CEE95EFCC464EEBC14C1C9DA468D77C8F0C1F92
3E596E752D08F2F781EE5C350969CDD22CA80D6A7EE8A381E59991B2195ABDB9
54F4C5987A8E1664D0CAFB37B04BAEAC72DEBD80BB8B48A79D12FBA41C4F956D
BAC712E0A813DA9BA1117D98888525049847881947ECEB64490B428CF7DC2918
863967EAD16FADCBD5DE6087D77070622E050B29247A8206F11D21761C36058B
BEA21838D9103F507F0A82DB07D5A814D198E1E0EBC5C210C7FC638A928FEDC6
2B089BEB3053E25D96514D2AA6EEE03C5AD70EBB6B2FA6856B9A477B6F87D69E
EE3C34A4D9E0AF8885ED46976700F135FD348E5CF46B55FED999E89616B741C6
58292646C6618C1395D34BDBCCC91BA140BC9D0FFFFBDB68C7CD6DBF35F91770
872D51E0DF96B289B38DD6134B7BA2584C45FFCE0285F87B9B5DF0E8DA154070
CD76787BE7C8F3CAB28A62DB746F0419CDED739402094F46F6F960796F222B5D
8DA9E0F475F0145508A802CB8BCCD7DDAEBF3806F07403A54AAA87194BA945D3
9F5D5145BD39A57FD6306823E90ACEE4382F9DF791A59B15B918D1BEAFA5965C
D58F391AF3AC71BC3E5EA5C47CF55186CFB32B81C78184BEDBBDFB0FA0FAD1DC
9FB47BDB9E05CC32E08B89FA10801671CC2C452B613A5A5C3047DFE2F94C1BB7
09F58D7A4AC9C78F4DCD351E4D8FCDCD8702F6F7C31A1664AC31C545859F01B9
07E7C5778FB1DB39A1059779B8C76AED77CC7F4C961569DBB184B921F1E6200B
BBC5CA508A4D9D07D74108A56A8AC61A48DCFDE65E90F7942F933A2FE6A0EEE0
665D3AC7A999BF561EDD64F2606DA07AD896DE24A1E513B3E57BD6D122BFC358
7C484FFDAD6CEB4B9A9FD6C78745F5681CC35EE0591BAB345A16E164BE900A8A
6A0B93FD7927DC74A50BFF853FD59662C788E6D8D08A6F3758520073DED7258D
018F94E082E1008BDD37AAD1A4337D396A6E32D909FE7078E235B42E232CA008
7B5B30B19DE50674DF061E0270B32E66ED79EAD5CADB13A22364441689F914F8
4DCD12E3470B4B43338895398F1A753A3CE34A4836603B243BE9707591BC4467
EEC6B759C621A772DBD03544798C2FECA4C48BF9E65558DD53184839D0061389
31A41EF4C85D7CF4815014DB856B66D74F0479865F78F1437078F78CAC5D3A3D
89F68B6894B08FDBB584EE0E509F7CA3A0C90AFFFAD8B6E70303B9CD3AD442B9
6589B20A16C2E1CEFF57D1B7287897B6E824D21033B78D35A54A8B8C4E66E6F0
B4C14D48D8ED5167216393E9C934514CAB4F1A4E26112EC6C42E994C0DB80E2A
361748EAE37FF7379810401996C6A71BEAB8CE3B29FCCD0528DD8937623B51C4
ACED1FF87CEAE9859BA53F2D7622C018EBDF7E1F4AFF3F82A65095784B0EBAA7
77885FC4148FF7CA544CF5EBF0548BA73104089E2F68B71584579329382459B1
0F6B2809E3F88D1501EDAD912106FADCA2D4F63E7A8604FB8322977A15C85371
BBABC6325E1E0E0D26DCA322A55F901FFFE486659009E177F9D651AD9A36851E
1C2528D2F57FF1698DE9F30DA6FB49C42CE73B049F9E6B913FC9F4663C6B0120
A1CE12616B2C414496B53215A96EBBD7D11FFECA4C326D2A8B8078BBAF79FAE6
9BA5B8A200CF784C16A4EE7B51F5EEC233C0DD154573B91877B0B41FF1DA2099
7704823AD15F95EACD72A587A000FAE98814420EF2C022BADFFC7FF627B99358
0059CAFE0A0C91978E895784B9D74424E984CED3B386392B5A258484252FF3BE
5154BCF49F81BFE446F1EB353AF4F6DD49F42D84579D0C6536AFA8ACC9FAEF82
F328BD801D8512D8ED941711191DA408B7058142941E3BA143D382FD8F2C6436
E2D840C80CA1FCB3812928E14A30A397F9ED31A84162E9F1547B4A71495B7369
368B36861EA684EB30B2EF3EAF317BA93AAA001053EAEDDB3F172B2EAF0F0808
B9BE213DB82D0944E21B12A54E07E73519EE02E7557107361C66AB27F275F5D6
856A92E34BD841D8ECAE5ACF6848B5D1EA7E55708B5130BB27CC2CAC3369ADE8
BDF01FB563BFF46C9E573CA9D3915F9370508A80E21737C2281F581400C11E48
B8183A26BCCD90E6C475D10BDE8371D165320BED45DA2E15C64A3F80B7CE86B8
8C5FFBB73A3D4A2B13FE019616FAA6FAF779A64E39E02C98CF2978A90486A2A3
0FA8820AE2A7863A32B9325FFFBAC2E0F8AC3DEC2DE4F1154726A485A05B0971
76C014782B949EA6A521B979EBD844943D7B61A0A7717F9E858E7D1AD9469D59
4009FFB8DD176574C4580082BC2A0DAFB9B193350B8FECF1924D0E9ABE76E4F8
27A49944F74DE62D62F521C4B6A9F8818242A446C6FA56DFE0A4DBF43C6D4D5C
AB8FC57C831167CC81A521D2F9E1F97213F5B1CC75CE9A589FE97CC0853CD62D
5359750ABBF94BB7D6193B6F809041D2E59BE21BCE5E7434EB6408D5605DEF44
E1D26AB749602815374F9CD1C95D3F9B6E46C8A61CC0F610070D29757C4D5B62
D298E8D66827FD396C02357E9B004DCD4DD3120B9FC8909DF193B6CE0911ABAA
07D3919B9EC9E87458601099D7153DC7E4B034607A696BF6DC92801963F07CF5
E5B132D4FA73E9A77365DD0E97E7D664DACF18A79FD5757EEDC643717FF995E7
6FEA789962039FF49CA120BD16ECAAB6DAE212491829B28D8680C3735043295C
C716CC988ED18C330E04D2E0771877F605FFC6BFCC19532A5BEAC117D4961574
5EC9D6EE8AA1151C0C85021031E55353DAEB148112D3F899FE8C6F61BF74C8CA
C1BF1778C0B54F958D83194F0502B7E610DCA12EA4F57A6A7F259A9D45EBBB04
D32DC6AD81E62DB71A2D85E22A3FB234D1FF2E5774AFE4A542C8641D1F8C69EF
98866647EFBBC45E78F67D8F6A80C949A2710C3A07F6F14094650926CD0180EE
2D6F60DE3BCBB78E9B654FCACB59CA5B2E106F1DEC3F9C3DAE9477A6C10BDAB1
E7DD968EF089E9BFF0AA23D98C3AE27C211C8CE975D7EFFB87FFE12374AF2B61
430118D6F72FC2BAB6649D5F12E48E614C291A9D5CB6EFFAF9FD791AE277E459
424CC456CBEA7E5155B86436EA75C8BC648A2E42D4D0358B380B6444C85A2023
FEA2F648568BDCC6E8B757D65CB80497A1F367B30EE277292505B99111693EB3
83774011F4371DAA0E04A7855FAFE94F7EB1C2C5C480CECD556ACB9FD06206AB
2FDCB21E81BFC576AF1A2596C872F35944DFE6169D32BC59F16906620F859177
76DC5EB687F9F8042263DF909D3B7F25FF4511C640E8F65BD658417E88D38A90
575B3BAB35C6DCBFA1165F98941913043E6A6F844372344E8EBD7132B04640B1
D57CEE0E26D06C6C4A033D2D591E7ED6C02676970C404A7AA78513F0ED07E932
51A0E4102AA84B2ADEE7F3AF0B6DF4E56612ACC976A7B41908C18DC0D88750D0
1D127A6B840BA0FAF94AD5C9FF0DCE66DBA8F0B2048F0D1BC35726760E13421E
66E57EA760D6BFDADF09EF1E8DE1FAFE4A71189DBF4CD4A051A537AC014B1A32
068C859820C31D66E2FE97919C5C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD7C1
CE928A3B7A62E15FF0E53E8441C88EA7EDDB16ACDD26093F27AD276C7EBE9E54
1686DA5E26A4CAEAC39715DEC0AC3226F89606D8EF5ACD55D67B059BF6E8F30E
E359EA6416D91CE21ED908D6F8E0DF883970D349DA85F749026AB7D8CBC93B9C
B12EFD2936C1B63ED2B929C033A7F9759BF94C668AD787FF73B1BC042E3BA32D
6008B89E8E030D46B0E9F0247510E37735D1055E32143E97A11060CF072D7955
9B316AD1B56F342BD5347564C463171E3B2271E4F2B25C44E345854FB204CF96
E9441266931727DBFC72CD872C534A411593D10A734F54D32BC5663D02A3008D
95BE5EC1AE472B75ABCE6A6BB030727318366835FCC219DFFAD9A7F7D2850C50
C01F95F2BC7443FFD645E8EB8863132403F6552F82A6C3CF2AE112F8EE4E7A06
63367535A261D18BB1A26E4C2157472E938C018477D107652BD59E002C56B3DD
423BE925DD0B46BB86D33CD66D069CB847A315262F8F4F114D713DDE8D3C9B37
40FE2E9D8D012D2D358ED89B9258E54CADBBB3CC59D3FBE6A84F1F9521B6E05D
0A0B2E0FCA57280FBA427EBCC9F86882CD96EEB8F3DDC554ECFEC9AAC229C31F
9E8C66735C59EA38E3BCACCC6F85A6E4576CE0D0B850C5F5505B61D785C6568F
D459FA6AB02F16E58ECE66C909B7040538B5E7DE80B6DE055DC28C1B3CD4A50D
077FE7AE2463F40DA89824D1C5D17DC70E135F666D6CBDEF35A8DF7CB22CD7D3
71D2156E4C040D7FFF62F56653DD40C4DF8D976A9561F7A2A4AAA27D75E805BB
F6F2438217BA5121CC668458620DB3D381D5677019CAB09FD5A5ED804CF9A763
367BEC85D9D26CDF0AEAD7D8C7AD77072FB9419F12077754BA3854A60A3676CE
5844945CE732C268C6BB20D3A28813680FD8BA18BF655ED97EE45989D6781357
B5B413B6E97541FE06864484D4629BD483AF6E2109089894073709DB34C1F5FE
63935BB8431F7E829B9FA5A21173244A15B102222B1C8D1651E7DB72782C46D8
4AB230F78CDD9B74D0D17672F0AE1327243C3D00DA2F61CBB612AAF94D5FA688
675B555FBB346AD5F2B5229F163101D4B98559AD18A41A8FD3A88B4FDFF9A4FF
ACB66E5DB49804228E74B02B2E1E8FA3B00C9278BB0428971CC9818FC947D897
5301E53B187DE4E19B4429446C0981B34070CFBF71A5FD30059783C16070C4D6
DC4777ED7A723EA37BCF5808E562A93805FCDA2034A6E5CFAF53CAF1C31EAABE
44B4E65AC234DAE81FC2CE7BA777B592888D38EDE68FFB3EFE83870BBDE47A05
F1DEF0CCA48FAB214208284A8F508D04F0C6C3B9418C1094CBAB96EE405DCF58
E3A569DF070920495F8084DFFCBAADFE1AF8356BCEEEBDF0605A719EDD4C0486
768E3BEC5E192ACC1FBF937035DB4920F0B8EF034C9CD1F0FAA258942085741E
E832FAB1F7ED83D153379339E47749CCF7812E0A4CB2D756FB0E9E49038148FA
7E2B948DED6C44828FBFBF98843FD61AAC4452EE1DEF48F9594F94E973E95CD7
826754E0C9F973B650EA43465B99D41113AB38B1C20D59F9FD224E87DD65812E
E02A43EAFCDE30B3AF34CC9FADABB3B773F278CAB0159DCFB8320B2ED6D5EBFB
81A4D9BD0B04AD3DAE54AE8C660BF294CE1BC740EC90A0764E9027D61CE5938B
121C480CA14DA5BD9E017D60FC01124BABE23FF62E75FCA074B3FF6D21CD197B
4C7B75948DE075B321B73A951B872F8CF22ECCBDBDB5A63297B06E72C8929D52
02D6A34CB172E269640C43F5923329E440A4BC1282B989F287F68A6BB6C11EE0
1EF5EA9A3595DA8DD910D7770583AE6FC14EA7E1CDBDBC5A0541FF5E194CEC0F
3A909C9E8EC0A4B6328BD50F4B6EE65D2DB6ABAE8133C7BDA5A03B58ED24762E
E335051B39B658BB0BD12DFC322AA7F265EEDC06063966D180AE2A7514B8F6E3
52C4039421AEE22B2C2E3F45D707240C8DCA8223B2C3120035F01F710F91F166
DCEB7E1C1AE72CE581E82E6AA51460D46D3A8247773BF93CE1C3441AAE3D35DF
B99AE14D14267FC316FE59F4C3D398A0F977D29ECDB26BE99D660D8269553667
640D3E1C81416DB353A4EC3E8784399CE0C86BEE448E412B9E72DFC04B7B823C
551E0567C0A543A4B01D70AE10D506C5586279A28173D35D36E744A5CAC7E93A
298A73D96B0B0340A268B0DDB25BD184FD79C57C9EA994E8F7B3A2CE5CF814DB
309DDE9B1771B3FCCF461733D1A9459E77F2696444216B219E69016B8849DF99
6E76C827664C531B8DB955C3C5793EB1C455C9892D6AC64FC163EF587150A5D5
AC2380D273D2284F3DCCEBD34BA5BA6F5AABF3E7053A6128190A6962680A04A5
CEB915B8E21F640745A0AB66CB06EC36841C4C77CB3775052A962C832BF9D3B9
5753EF65E313967A0B57292667588D0A60A045AE5775EFA120503A485B0615F0
D3D880CAE4ACC7B6E8B260A180B09968B751ACA01F7DF1FBC7452B5D1E789929
A97CE2DE04BC32881DDB7B0ECCFFCE5E082CD7FF922805C21ABA08423F35946C
6E3002646FCD01738AACB9AD52BCD0D3A421EA222FCCDA3CD2A9C193BC563E5B
01C3DA1CFC81818D4CD95FDC0C8D5BF2E7D04AF5F2FCA69C377DDE8855A7827F
8912C3DB8063860692D8A40F41E91238E4D2C9530F9B8D07A7519DCC7CAF54AB
213EF255E794235AC49EB7DFBE843A27C1064E9644F4CD1629E833A91C6B0951
AF6C0F968334ADE8D5B5D732FC54FCBBAB3F8669EB9E086797F74F876028A5A6
CAF48B87AF59619638A93EC6D6937476FA632068ADFB8871F8681F09B64433BD
D91BA70E84115929BB08D42023B94C5E0A0719AB5978361D83B9D6C514372866
A572B31491F9BBAA3638B6B9A5998D6BF35919DB26271A70FD551FDA5D66CD5D
8723CA7D2A6B00CCA24AC55E90EC48E4ACC15BEABE0AD280D9197054727BA157
B2B027B791FC0398466B4A27A3FC408EC625E310DA3E7E84BDA3755FE79334DF
5BC626ED3A0752A698D4275D81725E961D50F182C0DEC7FCB101A40DC768D553
5EEB54678E70AFD52D5B609797D231BB07679EB2ABDE895E12261315A776E257
9241ED886DD56CD3BECA6BBD5518ABFCE86CC6CAE184B2DCD831442F409F848C
2646EC58EC8181601B97C41B94790A035234D8F9A6363E7A49FC22BBD34D08EB
7FD439A843997524BB0DAA770498539B0212DE3A620060C06C3BA3D8AE0E1C98
28C293837334C0BD8008943710FC63EF2115ED76FFD70142E86EC2265134BAFF
2BF705AEB57C58A7FF124E3C90EC49059AF265FCCC9ACB88D1A1788D8099CBCF
DB6C84A32807C0BC46CFA13B270AB88AB2AA416B403551C0BFFAFCE6B05E5371
44CA3F6E7E9586FDBEDED4512B493D4CE9712BD8D0E82E5F05D1F96032DF2A78
7A7711638D5760569422E603172B7CC7BC55ED7CE8324A259293DB485A3997A1
70DAE50451FC90F485FDE158EC1F4619F671605FACD5B6AF9A887A21D5935371
32B85666C30C8CF296757490D6FA81BA659F74D54B8100D6C3C61B924612C160
DDD5172D98DC5DDFA80D93A4C0A9E04AEDF9B4CE2928CF3C1223F6FB12A35F89
B4558AF0A1B8BB3F6165335C2E2D45A67FDA34DE10D995BBE95A6889CBA54B96
C650A14153D4FF9DB92D17AF717F3C02DCBDD7E2AC003FF35033C237D55F6B18
117AC22BB07B8DCC70715B5E938D01EDABB0F53A95A8F0DA64552BD4EB56B325
DDB879E9E677F4D74F7A90529619CFC5DA72D820E41F813357F200DCEBBFB883
77A738C4F548E35CE9C08D0BDC3380AC57654C3C9EDB461249DD27D55A3459FF
867D15155BB07828A529F46FFE55CEC85629C30877B40378154A334D0927993D
1E3D64D048CE34560BBF01C461E2A4BF761741C6CB3D2E2CD4FF98DC7F79C989
CCC086CAA9FABFCFE634517D4C7214E2BEDFE7B9965171FF22F317EAD87B1D3B
433DD2B301F57E978BA76768086AF935F715C80717243059083F5E07E64BF7DC
CF84F9B04D08E9FE87AFB1BC9737DDDB8D941425DE145DA043A710A148B8841F
A9A15DC7802A111D96E639679CA6DA215459EFC47E59F1A33C94A3B9DB6DD7E8
9DF4C5AE264B38A4205298875DAE24F8B63DB23A8D041AF820430E7DBD90AE60
643F1CB2682E0EF94B6F2C482E965CA923BB65C781A4BD53C71809F8E21EF907
890BBB82CDFABCC6A17BDACC1B2B64C794C6F19B2493E5C38C5B17861E28EC28
D50C1C172C920C27726380FBD329D29ADDF290883487CA36C46C79E332D6423E
07B092D8E28E4B265AEAF52EC046FD6B2926828CFCA83A445FA080A9E7078A90
9F5324AD4CC249D28C16CAF047685B84868A864914D7D81C56574A8A37285AE9
629E2F0848C85C7C1E25C98E92979341A8857C6032426D3A136D03DE68ABE0CC
CC8EC2079FE9F74D53DAB010AA035CF61A754AB93C3547A7BB5829775140FE09
4734F24C422B2974FD20C49BF08EF65CBC703EF6ADD2DB56EAA02A6C80911645
631CA225811B174959C0DCBC8B95F1B879C1063732D62176E87C9CE253A193BF
AD2575B7B23BF4B0381D6B69EB18BA4DD295682F6E109B03CAADF1C109B392B8
530CA739CA4BD0183349154498A6C76FEBEF8656C3A54F1C48527544E28F808A
AC801670C3D6BAB0DA0120F575BCDB10DC587D1D1677FD06E90B2E752137BCE9
119518CFA0BD6F3615B632568E0EA67288F7AF12B0501BD96AB190CC96CF93B8
174635419BB15723C988A473B3CD48944AAABD5BD1EB1FCA7CE575BC429A9FF3
EC920769DAA49600CC8214C53F9C312498ACFB696090CD556C341C4789266733
15F3BBC2ECAB70AE3B687DA806711890C1AC5997F21A14E7523CEDB29547486A
A34B5A860155B96B4CD17D25C1F6918616CE476C118C33B3EAE57C27B1DAB7F6
91529194054B3709508F2FD93687952E5A701E0F825B35DBBF865F372CC051A9
D51A20311789C24CE9E9CA5619AAFA6D0AB72B06AF55E28C760AA3BD38D8ADD5
82C932F59D55ED4D70E4D7D964C3D343E56F7A71FA3D90C5EE707D27FD89E29B
985ABDE1C9C4D9CB1C5DCB1689E9ECDE57FB0FA418C674FED3C768549F666DE4
01CC381E57D7B00FCF5F246C5AFD97D7F7DAEBF8092CCFF10FFEA970858E80AD
A63052023889668F4C3E845408EF741C8EFD42A1792CE5A2B6C325C39CD88E4B
559B12D9FE57C39699CB7519F3F570311C08074B3CFC4E21AF59ED19750A1E41
123ED4BBE53BCEED26A72ADC4D9D04FD9932B38E256682C68F3DA790E9B0ADF4
D5EF841E7D98D4DC1C9D7573936FFF6BE7481A49FAEEB2946B73D29AF3ED13B3
A092119275C4A4E8E7635BE88FDA35228BC278DF352FE7DF150D49DAC406FCB5
23E307D6F3E8F3FD95AF65BA0898D5292037CB52152485A610A2A4C8C62FF69F
EF9D270035F96FA9C8CC081BEB7063357DB83C4E5551F77959D5919815A98A89
EDBA52FFD7F2132FF04334A31AD7C1FF486172439C132B32E829D10EA968E57D
2285757CA11233A368C666168D45B8D27B595658D0E5B86016F847845EFF4DEB
CC1A2CFA0BCC95E3FEABE5025C6247166107D6C1A4FAF9AE46BCF6A6475B4191
961E6A7518D86054936C7BF0C028B92D0BF1B02876E6D295C6B424F1D39D1167
0BA89B298DE40E91D1CBAEDE0AC854E7F0C9CBC54BC4CD46657AE3FFFBB204C6
D59D332EDCEB3669E8934D1DFDF43498A55EDF16A009E3EB0D3866F9F7A94394
FD517973078F27D6695A95B4313D0FE6D7D8A29BD62C37CD1D6C55544460DEDA
4F8244B6C84D5917829F413DBF6B1AF5A3923521AF702F2FB73FF5B7AEB9A327
BD3E7CADD265CF3D42E7B4F483087DA8EAE9D3EAC896C9E50A85C1E620574519
E6223753B16F6025EAF21AC7E214FC46936F3F2E2072523E9772E36D52DB191A
0720E853FF0603877722871CDEA1DB2820B6E9338B9E18F720457A4AB35C68C0
7865063A2AFC57C6B83CFB41EA6562C59C5C28F859D516B562BE6C8DE633C754
A5AA75A309651590C7027991D9BB1EA11EB9A6B628C9F41F49C40B40A681E5C1
85DB2E6093DA6DB3620F03410B4C7EE099410A99C64C719B140E5445B9BFFE54
694EEB77FD1DD7520624DC5A11D6953BF88092C655289D84FB470959195237EA
D55FA9C1CC2D90D058B71D4BC720F615D2873CD11E06DDB3A778888B3E114AB0
041A3247EB7E667B2842D65A5E184D7383D7D3B64D7CC2F28CC4EFE8A891B2A3
1968694C04BAA55ACEBEB0F795CC6D377F09A17FB2C3F45B2E98C37EC1F59681
ABAA89561C37924764E3A077EC5871F352CCEF1AD677C339976E9A138108F567
FDA124069BD4FEFE2F25DC16759EE22D9F51DAEDF5873816653E5215E436CFC3
50819D8FC843020887F3103FFDADD38034D8F34EBA988256E70B6DBE472F8338
9D74C3B83B7437FB44CE93586C019C43B860B5A9C51AF0BEF11CC8E85B067A40
2341DA28A5E4052ED21E50BBC80F93F95F2F4AFE08768C4711BC45E754EE14A5
2E72AD3B8B87225562F446E9C588CDAFA1A2F363888E2C465AD7B95E7641782E
3298C0CBBDB6BC7D550144AF357A32CDCE079C1047F1E55E05DC533B87A80BFF
75CBCD814C6B5C42785DD8FDE082F79CDD136F8BD7E05A596025A24F1BC9C18D
FC58248CD5437A29C7B2CEB9827F51E088BF97F042D872AE90EA4AE7BA3359AC
2FDFF19FDF6DCFBCC1278850466A1FE663624FC26E88758AC01C1C98B56ED5AB
2095A39C74183F41E46F2C56BCB59CE6AEF7E915A5AE01314E35AD3A5788C3B5
48A2C299E6A83440DB5AC20C7F859E4DE89C32EECBF78A04EFF66FDDB2710B09
1AA85ECCBF7320050EDB404D839AF3D5F4DA9A0824C92C7757BAD964F6AE9BD6
158B3912D9BBD9393247D435B57D760BACFA908B1248AC3531FC6D236BA47C5C
52A83C1AAAD52E4279CEDF3F77E2EDC9E2C1FF4F9E51156B1A36A5D0F0E0CAFC
BAF30F16DEF714A1468207592BFCA2FFBB4B083155753E244194128F43F852E0
0722DB35B1CEC9ED226397F98EE15A9DEACCDB5FF5CB13D0CAA24DBEAE0D1090
E753792A90B57218D82EC626C936209AAE5D9735BBF8799A87D62A4679051CB9
421DE1DD7BC5D109B52B7093D785F43FD468845116549D2FF228A4E253490F1A
C29E479B090CBAD692988A989C16915E134A47A4A117A55B66ADF5E2ACF7C16A
DFC9E6BBF635DFD8CA407A41CBA205AC0B546FBE8EB5E7A6939C43ECF80EC567
B562F79E35A48285AD70B0CC1D1484D908C8A61059B21A2B3771D04D150A1E52
7601F30C7FF2B337B41232EC7CC4F97EA37953528EF73485903C00361D3E72B1
26ED17CC167AF71471686FD18B90A55077C7300F05F1B24073ED052F37A3183A
270E37F9582F33B2E198934294E52A2A25163FDF224DF923D76D2A60F888B151
4F7C668D8E781B16E78E2D226FF39C92443E6BA71C5D4237AA1345B070AEF092
7B025816DFBF1CF95ECE64E3EAF3F47EA8666A75B1C69B00E5A616FC93470554
2C841542BC1FDB26DBE389CED1923AA8EB334EDEE61F171B62E7EF2085C8D7EC
43C53CF9E82B664D35522EADAC9FFE1131374EB2AADDB2337DB8651D6A0B047C
CC1069527F86804DA275D8C6F885EA23158C92954C67F3EE4D176E0A4B84C9F4
7E5E871C6769010384257F52C766EA1C1B863CD2256C232F8973C6C00516A145
7BE695A3CF1A5C16878D44BE38107E327EC6E6F514C6F7FF2FC245360AFEB127
79E6BD0E2D9CD6EA4EA182CF7070473DED607FEA43CBFF16DD187BC906EFF983
C46021F039173A98507B84A1ACF2699CAE723458F7AC3DEBED0BAB636582D103
823BEAC6FE0A2813A3537D12A51F5781CAA9A414AEEA78ABC17DDD10E2B4D770
AD9F641004773886A04ADAF6F101831BBC569396194DE6A6CAD73E31BD3229C5
F8931981B7F9C278F0853C0485B486986DEA740D744963AE53A1B8DCD067A4C1
60545AB93DB669C8E4378C777769EAC9EF09FB04124570D32F87B406DCB59972
FFBC57BBBB493F2C1B5C38F173A43C773748C22CA51ED191C856B61781C6CE9E
A7124993C4424063FC4B82E8384BC8E1BDAB95429B2CB750BE2E146ECBDD16A1
584F3EA2AB3D9A378678923B369A7D65F430E83301544A1596FB497EAAA77BB5
C59AE64A92B3AB194DA6FA06220921EE7D2A520E10060049234EB51EB6E52C68
40365835E3C5F9582E3BDFBB4AE4C1BE1E185A26488ED6138CF334D63A75CDA6
15D1DFA154996A65A1606C0E1387DD54F5C8BD071C4E98928801800155AE380D
EC3842751B0C9CD72E6375527B427BB063615D5CAB61566957AE18AE6ED6C800
EC8320B8BD5180C92F0640CE6A8AF3AE7EB181C2E4C11086C40D1BE108B826DE
9F26DF59B2995B000E5AE2CE32B6DF5F3DE2C180BA49BBA59E918E4FA36BA2D0
47B3E52E6E86468807F6E0781FF8233AA10DF72E6E09BCB6C2DF9D2239B24414
7EA1144A970FD8B12EDD4ACF4A6774795102057614C862FF6E6DDFB20AE1B843
ACC7DE83ABB70526A754348ADD815687DDB99DDA88F1E2C5887707CD4E0B008F
1C02CCB3F652A2EDF25D95A9456C7098D09D52ECDC16BA311C9236501F2717DD
AB52753B36705655AD4521B825216A78E7C80CA7211010D2C00C5BFF35F8A355
A0C6134BF0DEF1E84FC08DEC39D507B7E8BD7F2A2AE21307F27FB4A6CB0413BF
89C195570CB758BAE3A342DB8B75EA2A55A5187666E9D9BD19EC0057F585DA96
CDB8F417C72A4103D5F478A55576C1EEDFBFDE9B94904F32C09BC7C0F4C7A421
734301813921B971F6B6E7B41F58335BE8A68E408A503AAA09FC4FE60646E7AB
730E5F3C3D1DAB34185C68A03BAB8BE3D59EB3A023876736C9C37AEC6FFFA499
8E879EAA280D8C528B77C22B5726551B5B99D72D0A04E30A519843CF02060620
83EAC81F22587D35DA9FFC01BE0429EB06D90CEEF83D4B8D7191AD1B18B210CD
E52E53936BF8271243F5505369467F0661650C4AEBC3BF45F83594C8413EC71D
41739D3BBC75D4671A7C324ED9094148BB33DB26E3E436B06A04B309E8EE5B4E
CBF6A26DFED9BC3104B7D31460E3FA77DE5FE01347D02B4D2B19D64773149444
27FC7FC91F7BCA62781954553E8660DF4FC881B1B290AB76EBD11A36DF2609AC
CFF6C58F596DB80B4A8BCA33E2CA12037F3F4926F339AE00D70C6060927EC467
53645F880BD138BCBADAA15705A45E454A8F91807CE5E62A4B6761FE2A12AB35
11696544C3920853346594F0D3026F4900770B39B28863D6E36BD0F0A7165BE3
EA9261F7BAD646B373701920ED863DD904B7FFBB8A539A5A7870C9521A69E792
093D19E676DBE77748287874E7DB593866FB52EB9EF208B1E6D851A41ED7303D
15E633A518E3E329C40BFA2C5B3356335CCBAEA46819A8980A28067452810D07
BA9A666A06F20C5E0FCBD81E0308986556C728BA46265C2617B2D069F3542034
96AAD69A05A3349349C965D9025A5318E286B3A57A4B574265A679334D5EBCB0
73FF6966BD9320DFF04D31E6E2A081E618F0BC2956BB1C3F176142CAF2EB581F
CC57267668A760032C6A56C9C2397905EFB38ED31493ED1013818E5121FABE4D
CE1B5AE35D7122F1ED692621B1F50E79B62C4F6DE12998A6A5B49B42DEAD15AB
EAD2201CB19819C28263893057FEFFABA2CF401E5CDA59B6969602161C8FA3B0
A8335A4D3AE1C38CDB5F11425B6E5C01BD4CC597B395DF8F165DBFF17AB9A8B5
803B6657D3CB97E342F78AFDC691400DCA846F44FC45B329033FA18E62BA4676
860D0F2CBA941C24205C9F179412CD29609451258BDE7360066362DB24465EFB
ADDE94551176F0199A192B5B00DAB7F7EE9DB5D5F94F4D4612CD45F891475C26
52AB0EA213BA38DCFB2403CAA45CD50E8E8A1D866A83A5A7F11376C17F2D291E
BE20C9AF3AB54400B56497589A27735FF3B9EB0A1BE8206426CA46F04B14EBF6
6B06D640012D108ECD3329117185F2DCCF926B1979BDF422BC83B4B51D1A0AE3
CE120540E9B655EF8D15273734AF782E067931074A6DCFA5D0AC6373FF8EC9B8
3FAEE7B897F107662E8467FAC8D9E2AA0F9069089B4A6B271326A2E7B313EB38
E299D348F0636EF973B6D309D574766075BA04259AAC658551DA940B4655CD62
F4D4C7CCD9314923F532E28EDC1F4EC3D0E698D826EAE54A3A6242DB2233B50B
987DB1CEB9DFDB7D27791C217FFBD51E0BFF44D56F0B5A0AB3CD1F01A0271DA6
6B6A3DA48C5147CD646223EF5DE660A82E05BA98AF862AB608287FE939BD9F4A
12191B15548AE275EAE43BE62C8CE11074DCC257ACCE56149A49CB4B62561534
BD337498C9FA9AB34BBDD9983E5D441DF74B89E58514FE8D51001D90D15124C4
00CDBF7319457F7523B721B2B9C0C1C356286CC46160DE1F11ED73D6DFC7336E
49A1AD47F88E77F265C098A20D5BCBECB3BDD3E0907D3E933A03442D7DCAFF80
81B614157E35B519BCF359E1537EF69FEABDE40091A2315EA8C071AB631CCD04
C3EA77541646B1C55D356338CC0F8950392B6C66759DEAAA6C9E414B7A2796D6
46AC1CBBA7BDD35F637D616C7003024B08E524770B1BF88AD26FB7EE9A331172
C242FCC8E3D582A3A031916D3C9D2C4B706A00CC6FC0C6FDC412D1B1E0A59E0B
48430B0CF7FD64C0DBA064ADFCE9115EEDBE11EBCED6A204C06901C6C70A9A76
5A38C925EFF79271B5ACB98C9689E21CC1781604FD41C754EA86809BD2E2BBE9
84B17FE9303F13428A68D6A1959288FFB3969BCA0E17EC9B53EE00E596D563AD
00C3A09316897268514B69EEB8584D6AC888FDFEDE4783A639A6DA91EEDA7E63
DDF3174A09E363E92A1EAC874E4BF7544FC324CF642D11B839AC94252668AEA0
4F23329A968E3863DE0EB30F5554A12B671BB2CA1398F65FD0A764A54500F17A
556FB679DBB3EC55E1F756439D26453525D02165FABC7B3295FCED7EAB37F392
14430BFDE103834356A677F63486B14136429634E4766722F56E044B37BC6D86
B8396889AE461705A6ED43F775A5317087226B2FDF7D92951984874886CC9C2D
CE86D7F37CFEF89833AD1FC0B517D95D6DC0252CA2E3EFEDE150916661FEF85C
14B055D074B8113DE184E683D203AE0DA141A1BEA4E6E3E77ABA850ADEA1FDB6
EDA22EC0FC539AF4F8FB11CF19C87EC57E9821DF82B89E2DD0885CA956529EA4
9D7B9133782FB7C349CFAD8F885A3D4CA30C74613E0205AF23AA271A60803CA3
B929414B1B29EDB53F00CFCEF86DB4F0C659B6C642597373C612E87B273DB68A
4A83F1390445F18503B6A5B2ABE4A8B54B457DF7CA439382D1E5941E63FC2A26
8EEE5C776507CBFFD885C109EB32CE5162701F30BE255F9F771F4DF75FF33399
74B377BB84AD85C2EF20ABB5726E510616412B7B63E421AC2C8430FD153C8268
FF4B1B997B5F1221071122721945DE6356BA976B0B441788F4986D0096F0216A
62A4CCE62E5E2182AF73883A8AAF8FF5387F0F57089A2DDEC2A5205FD3CD2015
A612E0C46E47A7C65EB3AF97E72594C518A0034038946DD94BC7EFE3A8D63D22
76C4236933CA08C51C6CFF8FA8BF8F75E8F3C861CB90E032EDBB29432AB3533D
CA6D56D4A12B393C1329F91FF6E05E273B5DB89549315DD15AD58F3E9ADD2BD5
FC05D3BD77DA90A733DF8E98FBB11A7AC767D52C6CE4D2A88834CEA8080C90A3
D588D03883F2D3B59B8A9BB23D4218042307E484EFC0157825F1BB8AA8C61702
A2CB7DB2800FC2D38F8437D0FAD3B909E378CFAB8FF8EFC8DA34C873E57D38B0
1DF487377213709D52954F393FC406C0129378B091F6E0E0C2ABC7FECB9478F4
06499A2B12B953D0AE1984D78EF2399E862A25FEBC86682BAC2D53944F47E4D2
57CB1798520F27F651A1F0575732043B774507B75DA4D49C7FCD52FCAFA6EFD8
268F44CD9D5F5127D99FA2132E6C41628AC3150F9EF460E952BF60DB989AF3F5
38CF0D5D1234E2DB9A16BAF27A4EC2FE3E1D71BF5CB13EF53E8B5993B89B9614
6D226E4186EAF63F04F9415D7F1CCF81D513116A2E9E6B2F63357E843AA41FD2
A7DC0244ABB09915FCE4DA65A4CAE0C6D5C98D7AF768B0F428AFEB03148A2FCA
BD1B997B34C03458D9BD552DE9B8B026EDE899A33A846BF362A6C30CB94140E5
8C4627A127D4600DB448D32BF2E94CE70BE0FA25D586BC15614C89272DE6D1F2
5C31FB754FC0686C1F992A1D8ED0E05E441BBF12394F7EEB8B381FCF0C649D44
399EDD9E9B893820416437F76C29622F954E955DC5CE4093E2F1A817C538EA4F
64E96C20699C8A55A2454B6CD9DC64DE1112D9A7F5B61F8CD458C787BCF52E0B
E15AFC6D052F79B8FC23A4E6FED2DFCBBDCF4D977FD80141CFC69B62A9EA6B30
0D08E8929D7014098316C131156E0315F306643F0BFF06EB0DA016066AFD30F5
A507A76A0D952CF226A3AB8E36539689EDA836270C5B071209B70BA56CBBC8F8
94B06AB69A867B1C0322F65434A9BAF76DBFB5783DB3C0F6D60E34BE594B65D7
6CD93740FAB5540E8BD4A282569BF33E2D2633CC89B946F400DC03B613D3BCB3
784407905226AC4AA63AFB215596D04F7449237157219D79611E52DE72B51F2B
B6506285DC6C3C9EC85EB4131305F467878052E009E0E1AF6C26B05161262BC8
B0012694C3EF26452F9B772CD7C7A8724BB2DD29E77A3FDA799F40F5417F50AD
82117B922E9BFA9DC79122E00034E5C192BAFD712A3801BE0491CF787773262B
3E65B9F8E43AE46131F9BEEF982210D4C2F772F12A8818E86A20C3A2C6B9151C
B8159565B5A1AECB7A4917E4FAAF3188A3E45E394AF0F083DF0E11B9B0B0E27E
F85BF8A914E997776E38A062E80AB6CB513A7214BE655CCD0B53D7DAA2CADC66
13DFC9CDBF53BBD835231C317FBC71F97BAF66ACA3F510980A7C5B3EAA6B1282
D71ECD0E1F1D51DFCCE4922C000B0531C1EFF078FE9812354AFED37CD28F9666
7BB3DDADCCC04E94943B9778A11F33461C60B97421AF092C8C55FDBB299CD46F
83EFB294156FE06BD7441F6166667D1EBDC1D9EB6609B183D38CCF531B725A77
93C5BB72BFFCF45EAB66DBFC647B37D31F50DF2DD06823895C2542246EF8FF68
373CE05BC4574C5061040CA7FE00770AC6DC6DD705CE7AC6D9A264F230C21BD4
C25193D95508A27E159C0C7B4C63567E57C7D2FCFE96455B0E5803D083F0A902
7459790AF10814D8C2A0F73A0798C80E45682139F85FD44F45A013F484BB0C07
9FBEA974823F5A3841873CD3DD3281D715F4CBA0A29B64A3604EF3BC81B149B8
744BF281E34208918BFA75C6650E8B37EAC3D872DC2CF386149AECE60C6D23BD
F989D38F66105131F8F9E4F87C85DB2C9FC5DD2EB531F957A5A2FE6FD09DDF48
7765D86932E0BB163206F0A0B44DE9CA43381BD00496DAB7B33D58AB87DFA96E
6BDA109086F6CA2A8BC5C107ECDDCF3B334D18D06FA131838E20B61EB38EF3A1
DD23AF9142D35E51269F366FB11B9A9D5F2F16A7F9C9EC3B142792A55A59E45F
2695ECE06FAC75C5C66EE14A0128143127251C552421177C306C0AB42C03028D
5310C00AE33F4040772FE01CA88B4BAEC456CEFAB3FE36B611CAFC8051F6EA4E
BAE56A89CBA4A0C6F9F33A134E2DA03AE725DDC86C1088755F4B84B105505F3E
B2EEAF027D91995F08560B16BB146340B6439401C8F635875F01E9329D079B32
B33CA6CBF06675AD4761E340D5487EBC816381A543B6BD66BF7C07C4AEB89A57
7AC441F71ED01F5FD352B77A190302B5905682141BD141A181034B852553A370
E99448AF6E20F7B26C572487B568569A01A871F680EAC0A402929B085159FFA1
FE2BAB1C5C971A011499657A3A8A652FC8B86CAE97D2E98781E3E7ABDC84A838
FDDA42AA0EF31769F98B252B29209C5A7D3156D2DD0306A0C8E4B96A8560F012
D5247352B9F972B62A4C531ECD205D6ED7E8D4FE1BB287B6B585A3289CC30551
D5AFC2502E23DB548992ADB2B1A71814B301C214466C2F1A3D9EA8CCFB11BB8D
6B2A70A7C2F6CAC18602FD5C98BBE16C2686E135FACFCDBDAA68E19677A1AA90
605ACF955206DE1E77907A0B207B1246154E7FC98638C8BC7F7868F8DF5118FA
831E69D86D5619BB0DB3CB050979F021A2DE1F014947296484A20AC22A39921C
B656C81AD5ACB7CF0B454505D1C24EDC1EB86FB8CF3BD7C79B800C679D29D91D
F239FD8298C679C367E8782A27DA9EB01CC94CFA17C521B4250C5DD3105DDCBB
A6A9D8AC7AE7619A22B8E439659B8150E943669316475213FA38B65972C61A83
0E0AD081DDF3DA88C838A4A7CCA46585C3F1CBDDF5C1367A54A71FF3419336AA
668923597AAF62DF5E249AD148875015DD095BE7165F454004593E0CA5BE572A
DDC74DB6A332DEFEBA01E6B9020EFA4EFD4652ACAAB8875BD58ACA1204BE6F15
45CADF6EA081C8B366CFC04B7209EC639CBB5B30B9CC3AE4833131B5DD325C0E
98D802939DA323674BE69453CD1284B4D750B7A7259FDDFE96847E5C4391A721
44F6335D6912BA6F944E47F20F51A8C5BA2F06C624A3FABA625133DE62457D3A
E9D40EECBD6B4B098CC59AC14CC589A8046D76FB57FD98E1AF689A22DA20F2B9
53E23197600C24AD4BA8714F590226C6DE969B974AE885B786A3D5D0C5AC216E
A68F8F7D3A5BD929EA9CBB7DC1C48E4D054AA38BC5095FBC6E3B50D616386A6B
09D3167CD8A78FC59B998AA734ABB01D4D1F3F98F5DA6026A8B46BDE930B567B
9EA32E53687B98289B73A71CECFFDF2874BFA3B0C77EB9AFC8D8647C02973E41
601CEAB214508BAEACC1D60CF9A92AE8B6E21A5B7D875F97770BB9B32D849A07
D4F1D2FFA1D98DA57F5B94DCD83C4534EA8FA7B04069787A21654385837DBC28
79D37A77D2FA80C6B608CDF8F02F386740E985B3E89E6A9978A9B375BB87C499
781B2161802F2E59A850DB9196BB8858D8D542F09E2EB27D88CE83FC0BF0F3A4
EC26ED6581AFA8B6D5AD4F28DD5B022349F849568E5FF9D780685331C5C5999B
DA859B4B0AE15AB810AF1008DA1CED1DB4E893F226D1614587A67EF4D157B827
D8347A23A0934EC6968F4D058976E327BCE827A2AAC05F1D080B27497E31B68F
0136EFC964089AA7E91F7CB0E2294E223FF4CC82B12777F810EB84AF40BC014E
2B04EE35A17D289A3CF58E4D88B02FBF9CF31A8DF0FDDA4A18162B61A6BD81EF
70708D8A50514CFE2A9E1F4DAC1F598A5843D1CA5628705B2899D751FBF1DE32
B7CCA86B512AF7C438C2248D4CD57CD9EA7CB46B14EF2771F91D4558DBFFC5DD
51C644D37E60BB86133978BF192B654C3500737D61CB404B28022E9384EAC6E9
48582C561C66CF90285AA8EFEFCCDDF5C28A5FFCC5B2887EFB2EC7F3847C6AB8
9BE2D5084C409E1C05A990B2BE3EE655617DBC1EED700183CDE3441721F1C1B1
9AC7CB872740C93A3C6D20B40CDED1AADCA60A7E22E14EC367402E7CC9CB2090
624BB22393DDB90DF1D8545651EA776E017EB2EE5DAF403311F039C6218F4D28
82FA95447F812083DD1F83C537708BD4A40ED4D275A34754E7E3E85F3401E0FE
0F04C8DB3DC67DD1CF601C138DB83124FA6BD190210C259133883D006FF23543
B71074AFE9F75647663FACE9355D70628A8624A33CEF543881C84D6ED1AD5E69
F9067BA1E9393BB25A9FA9E4D6D69A4B8E308454D1C1B2EF5229648EF5951BA4
331D121FCB6C51D217CB42A6F44186B054A7749A350162C19B8FE06CF68EA430
84CCE18B1DFD8316A4935ED92E290D81BE763750E44E585F4C8DAC46EB615ADA
D672C6BE223DDDA48E95A221C8EAA647722D947272ECDD4FCACAEF0B0D408990
758FE7062526B4ACE85463A41FFE65DCCA47FBB3678C2B10AFEB577E8C478058
9F181912D9C1BF97695DC0B18FB63CE522F44BAE335E92FFB6BB563E9153C1BA
01D66E4994DEBCD114B83BD68B7F68E00CBC109AD22C8948BFBA93D0F7F7C0E2
C002A730F7CD5BB32465F922B1B0DF7CA76B80934F810AF4509F76ECB80FF92C
9CE701EE1D437CBCDC59232F918B7BBD45E02A53CA8066A69DF435F5E913A8F9
B0117C4DACDE09640FB0795FE95ACD29CC8C585F931055AF45BDE940DC7780D1
DBB776255132DE99F3F4B7530A72C49503FC4D5C837D74CD5D5FEAB7B6C6A1BD
4E6F8E61B2B8C26A1EFF7AEE71144E9FD272CE6A23BADEFC0FC80B646A2FC08C
8727F2153A1459F6287FE5D0DAF43043794EF59D717624259F2C1FB13503049E
D2D3A304BEFD88FAE91561E2AF1E1A2273434DF1CB39C879FDB88FDE0EE952F4
D3987DD1559C8E2F91E2C650873F11021A797CA40FE6643C953D99C428CDE0DF
513E4DAAD37EE11211151FC9C8CFBE8B910348A53A46353D291428AEA3416FE8
F4889648471B180B879553F45D743D268A3209817FBFD6EAD38E95145F61A7C3
377123DDD6C45542E40ECF9367C58C6E22717A453D7EE5A83B12510DE06443D9
ED54FF1E32407662DD37FA3F25D2BB12D461A6271605564685C7AD7566F1E70F
6A95B76270D4D6F376BE6E83446AE1566AA39741B2662A6E1E9145F6874077F5
A88D1E83D3844F7D571DFD760C3634E6DD8E39534A6B7772C885870774355D32
ADFB80799930EDBF8B451F126F5D7B52E4CF3C7E37B2DB789C214C8608360CB8
0F0E85619073C13E213CE2CD963FA2E33CB5661B02C76A1E62E9B4CD2688FF91
3D3F49FBF252D1EB4BD5A463DCC84E2ED7D3EAB46E6243AE858381674244F63F
8367906C7C4648EF33244ECEF4405FCCD288E51A1C7BB193338E681350915499
1A9E275DC36ACD2D30AC7A8BA8CD133F54699ED1BD67FAD8E79816864B9030BD
6BA0DC57CFC4398C50F4874F0F65DB3ECED50521797212EDC7371BCC692FF444
90D98CF67BB20DEE9A6686FA330317305D8D101674E1DB0716185D1CF6B58819
49B2FC8DAC59ED03C8CB8B794C905A529D5998281F0AFD46AD313806C47F2E2C
3078744393EB5F650AB5670F11178FC11463EA1E21FECFAF8D61D450398A9A7B
202917DFD3124D271676EF147602CC95590D97710E9A5EC6CB3E1BF344144EF1
ED14FF4D375E94D34E4A34D7A63A344090A129B5C90F71103FCE95989ED67F86
D52BCEE6FD52111BB478E514CD228FF78AB56839C9AF4C08290CF137A4BC7892
D27224FAB85807F3ECE7CBC8CC2B2286A785165660B685C1C0C69A789113F3ED
1F285E0FEC22B63F8D214124A76F957AC93780C19DA5E3D73F78E9ACEDE2BDC0
62A3948F241EAA8B976AC60F55EB1D4A233511B18D841E779402657817DC5EE5
F1CFB1D4C7B2AF45CB6AD91EF31BE416DFC6411516510B317FED1B703DFF9115
9326F4841F3D29A5760602DF9C5EA4AEEAD061377C9FA043709DF6AF379A0541
DC99DF6627F042B351486D2DCAC1916E71643862D82CB33D424BA3EE6E593261
07822259DDA43D30C33A5F91439450F121F0DEC0F06B38C966A0AB56FB40FD3A
8DD0EA3117ADA2CF91C6557EE2ED5B4CDFAB2976D79B28260A8BDEA29E004182
1CAAC5999C228E7E7F3F8DCDF6624524503DB75CFA310263EDD27D32D83A2162
41DDB99D39F8D5EBCDF09262E8550151CC2EE509E4E648F8392613AA146D6434
32F79AADFDE20FEED119AF2AB84C69A6D1703A10BC76CF03390D1DA68B97C14F
6B6DCB8C6DF5AE0F9DA654834A518744AD977AE7A9A3D7E417D8D191C83A4DC5
F6D509F32ED9C1389E86A5D3A7F283137817765A15B1B0ED936E7460AAE19723
79CA48644E43DEC39AAF064745FC069D681ACEBD0B22C7C9DA53DCB1096A1674
559A195EEEA383F084038A9E9D8B5838D23C5225B961235CA1DDC7BF0C579383
1B4A62F04607DC96A66E8520A4BAB58141A8AE9C4E28C18954424DEFED99CFC4
E44ED5ED05A828C54ACBE6E9B6B15905C682296EE177A97F5C507FFA331BCDE9
E61F72B0ADE5CA467BE05E264E9A6E3846DEF49E9469B367B938A321F72C0B9F
1F902F5A389C145C6FC4627A339516E558AD33D153937FC2142A45F6C8D1EA8C
40DD7F081BBB86CA3BAA03396864AD52FF3CFCE4A3453F228B30DF26FC381D8D
871D0D96566F0E4910D171235638AC4A0FE3595C5D7E2FE528C85539D2FB653A
A5BAEA9EB87520299E851534408F39443AA946A7630D1870C1EF29DA4E9CB32E
A91176D5C3A9225657944AD6F9391DB1E31651E34EF2AE07CBFC71882A9FCD65
10D7B6AA28B2E48DB0C5F96EAD5530BC8070635C2DE00E0A5E1A93008526782E
C22E39C667849215BC85403EA4029FF407C8A7E5FE9FB9A731580AB0B8AC54D9
3F05357FA56D5606072D7651C51F351B5957254598B0269F11B0337B5A321789
FC356EB4FB3374AA4AE646C362F3F5DF31358FB60ED8686C52BE23A6292DB9B3
9D851D7F2C33E70F0C12D293DF892BD34D888437B1F0FFAFCC339AB27889128F
8FB9976804C3831428AC2CF3E49A085A36712F7A46019BE820E13291132AEAC1
88A613685F38BD1613D45D37DBE273EBD4D52570D68F02E1DF1272F75C2009E4
75FCD3BD7A526CF6AA9260C25B356736F1618901DED541348F7FDB227081F91E
E362699E43A6A00C28925CEB825364719C40C4F0770BEFA33F4DE378602D3F3D
771DFAD959A80EA6683536FE3278ED0B452D47E62EFFA48124110D0EA2E9AEFE
250ACB23E2E00B52223CE71010B57AFF7090AE796EC5D1AEF42F4CA83BAB9C07
2EBC04D8D7BED2343858FB3A82653D5744FB6B37479D9917E1CF35537F41812A
143B802D3951B6D9026B5D97D33027BFD9A5FDE41016CE412CB410BD02E2D813
97D2E57FFC47844214D76CD3BE085A6BA45A0306BEEB1FF3B4ABA1B5941A7171
828A27B0969163EE972E9EC81971CEA327C77709344EDCC32133221A3090DEA6
DC133C97CDE0BAFDD1AE0335916B38F81E4724BFCEC3E71E20E6D9810939D79C
7FB19B72C3D7C59B116F62A64E9AE838A4F499026C17BAAD0E4DD90CCEB0CF15
7965D1FF93B37875744B6F73D3022F08C4C49AAFE6AB3DE20C9880104F1FF8E9
C5B9B7B20667D9872F0E637FC574D74FF9E024CCAE15FEA14686CC18FEBBA3A2
EE3678FA83E4694E0D4F2CA0D000F0DE8D75BD8003E2CD3917EFF066FCEC8D83
BCED6066FEA6394EBF29885A69D8D51B47E08C814B5A0C25055F20F40A4610AC
6A84BD327150E6AE971A7E893E368B84953B2C60D28A6887CEEE576D4111DBFD
CFE9B3458F272B433364AB7071016EEACAFAE4B8CD7B0221889D7C0FC37F6A80
DA3DAAAF99F74BC6807BC1A275D0F24B7C193B3D78E37EC8C7A686C1063A332A
E5C74A44525D31D0BDE8C2CC0FA94D943B00ADFBD6C8B03580F7CD622A856029
2E6AD294B809569E4A983E7705BA845158F3ACE0C7ABEE8CE43A5394F51C5FC6
AC8DABED051F28CEE15A5FF871704963F51A4AEF8D56EBBF19B300EE51FF0158
1DEAFC030CDC75847E2512218DB1FF4569A904F8D0BF075FB597ABCBF75889FC
C376421FBBB925620F46F0A57EFD51060D3CDFD024E34F71BAFB8819C25F7EBE
FE010A7840DF889B141EC6D2F54D80E348426805353EB1B946F402237FAE74B8
D924E48E0E12BB03F79352507F48984E986CF6D59D783FC4CB6358889EE7D637
114AE8A73FD555FBC4303EA680B038CD4C1ECAAD61CCEAE46F70DD47B81B5987
194388D3D86A471289E6C0CD460DC1080040F5D062D2C90B959AC3A19FA9D030
3DAC5BE0058B7AC46EFABCEEBD1260151184DB5FA0B27EFC7FA6A1A2D9BBC008
789FF0C5B4C8CB3AEC2DAB62A5C73F108779AD8BB6B6889A7AFD97F7B3D5FE56
4BD44AA9669258A8A6E7953B1BCEC32DB76E79CC1BF244166ECD50A04B6CE977
9C7917B93E6D1C06C09E5D8FA49552B8892F2DBA833118BC76987D9D6D51A76B
2D60E7A7ADD569BFEE73B920FA73C9778B12DE59269816B903B24A0D60D7F702
39DBC00FE15154D3646002E2F8CD0BEFD2A0C6F724859EF7523EC4ECC0C46084
B55CD26AA325C61EA876F4FEA72D99D85B5D05E714AC88BF14CB44C29E1CCFF6
026F76352BAD1229A10720B604BB4B975E7E0F39BED4DD04DC496240777657B8
EFA040AE19FBF9D81331ABCB53B2175EA9180BAE95B570FD9EB290556E20A72C
24342D68B5C8896E313F01330D556456193A0D75817DCB44F89EC0FF58A85E75
F656CAF198F1073B7BFE06EA127BA3B1EDF47C86F512587AFE2DD72FD72ECAF8
E2D734D2699B1B240AAD27AEFFCC62D46486ECFCB7CC095F5558B7FCC2653745
52F400FE4C971614FB1441D98A02F161186A30BF90AC9B1D5251B478347D57DF
1B10204CA276E4EB0C6234F3B2FB5A3191AF988F74C13F38BA269943A6AB3DE6
DDD92BBDC513548A14B418123568CF9C79B5A740C867F005A0F73A8E4B7400A1
A86FF0508D264479A7A13EE495DED1D7FAB1A7772829C23DAD1CD940D39DE9CD
B0CFE4C7D7AE5A8A898E81351151BE6304D081A6D985AAF86B02D9BF851B3666
CA36CEA368848AE438EB03B108EA3ACD646C1B9E0113A1C09295667F372F2176
DB8D2B99C246148C78733E56DC109D35E6B2D7C5684A2E025AAFD59E72C3B711
74192153787F33A65221802ACDF05CA3A04AF25F0A82F1114AC09880F80827DB
BE528FFA9DE070389672933EA7C28B31822AA9DC74A4F34B67CE9E29B918A1EB
0CD76DE2B8BBFB51155A49DA26B0C3307F56F335E160936E970C22F22E0D6879
8F6F00667C1C83C2AD08D039D7FB12250ACAC6332D27940F6961887DB7FFBFD2
3CA1689B7AD8BB1C8C0F96B64685FC818C3FDB11F772427924510FBD91B8FE2C
BE03B22254F6B7B0F77AD5BB55868CBDF7BB00248A86E8489003F84951DB854C
11DEA229D730BE63C63969A357A087196EAE41AF58B4FF2B8244D27A47CC6A8C
C3CF6A80ED652EFCE77FDE471ED342445B00A7DA71B57C23E074813C6C54DE2B
C456731FDF9611E0F04C38F4727D5FBC99E16F32E5B70D2836DFE33E782328A0
949A87B95A2F77EC3E049DDC9E6963327B732FD2DADCA55EB8954FD7A4AC4583
BF2FBD946817D3A29A143905CC542E52C0CFE26D5AA362A0DE44E4A1CF1732D0
7FD59FA023D1A57241C53B41E98740F90952ADABD07C83A94A125B819053AC1E
9485924B2368D75F5B194EB079DA24D13497EBE6330612F874FECEF9406C030B
E3732916C975F583FC660BED9C57F59DB81033F4F4AEA1BF99F8070976D75485
DC4C189C06B5D21D7E2DDE51A0EADDBBF0BCE98AE75735D98AEE66886B8E0315
F5236BE48B537F6DDE0C535B2292FBDBCD7E601A6BF46D57B576A3AB64998A45
B8254493155F6397053840C0109C325E5820D3C9EF826C2CABE922B1D968A336
2AD6A16743BFA5239A8637B2FD4D5C36EB1A12B97DA3233D0DEF0EFB5C0D91B2
E0D2B8482F66A87FC0F998B96AB3E3E182E29B819FD861E52B04E00EE2C2B25D
2C97192E8E1F0AE8D3882052CD47181C522FCAC2E50DA12BF2F08521A17641A2
F5541EC841951492EA03FF77CDEE3F0D6C30D4059BC9F9DD82CC123F00F9453B
0429655F8F25C89E65074A52CC6047885F4105D920108B252D3920883C966C6C
44E7FFC2E83ADA764F9D4E6B562FDAF5B71B02810FC3BC4404EFFB1A389A3421
449ED893820445881B900A6A289E954BF1E40330D6642AB876D05C12301556F5
6D22BFDB9912882ED7CBFDA6C52931E0D294C0106CFFBED9D2EE977BB30BCE49
F1BC1C92EB81FD61322F1FB69E5C5D1EA498A138CD5AED44CA01380D67190799
91D4BFFD5CFF4016400DC83E5BC03C1FCCA2818D6019FC1622A804C1238FB9A0
A8C6E3731753D3569A000A9E1495F42F9CB57968A619BC423F739B9F9FA75975
79F551F0450F18DF8EBE13214E89E024DB60C93E01992AE7F8D0C563A05EBDFF
06ED11E5CC523F71C5C574D3E200A018C78BE2A4A882844B43B812CD8C643ECC
60B63F8A5ED03560B727386F0B1120FE29C8220C0907D027E43CA869929AA628
B419685EB6E9FB214DA99077DFD9BCBE0F5AD483A1052881A2F3FE6D22E97567
8C98EC8A9069AEC8E237722DBA54F8E74960F79D54863F75475E92B0411D53BC
4FDD03A4AC6689DF0A09242519D5D2FA30D939C1B6852755041057B68A51B57F
996D0B21E898725480EA5E984840F47E07017D070A4B63356AD114F95837815C
40FB26759D17005CB02D84616CF21F43A048949E8D28DB93D6346120A79F2623
A93A91F27E6DD52E50170EED4C347C18E9052A1A75C73BA674C5C16793BA5C06
EFAEA631BEFEC6CBEE424C1F3ACD3D7E7D7C0FDB0D88D1B8A13DCF71FF3BB758
AAA1BDBF9BD3C25F029FE06E4C5E27DA107980212F13ADF85FA7B62AFD447495
C7D8075439786166B52D3B2DECBE6B7565B7E2B0DFC62EFB6FA0A9802B8B22DA
E7BC3650E52286E6F70F660C5BDFEA36924D015ADC134E03735263CA0862E5C4
ED5EB385F7A70A6C3D6D39AB0BDE4E8A048DE4026A9CAB640B74207F0434C959
9D055D786DC25523AF3CDCDA8ECDCE3AFD24E96BBCC2E1CCDF3FB7AEC7CB83CC
65B696ADBE51611E9F4AFB6A592517187DFD57CA0B663C217B2949A679D8B209
A2D6857D7C042B1F46A0FE7042B80B0E772F332A863DD328D3DD0C225937E164
EFC9B18C7002F76150B70E79387F8C338AA7C816ED441E61FC59ECE8FF86E506
8EB1C90211676F6588A9FD512A32BEBC5C892A004DFE16DD9CA9ADB963D51422
37FBF1B082396A17F0870204E2DD1FB9EBC9448B8C40F1E396EA1B598CDC2B45
9A81B19A090AA25E8D0033D6EF09078F78DACE5A54C0701E385140447CB39903
7B4DA4D011B22B86AE5DA40DB7DD8EFC3CA2B4A21EE5525EAFD5CDFE3940C0A3
B942DE041262F04E6FBFCB61D419FFACF320513D3154E07738A2E39D6AC9429F
1A3592C0D469895E465C1ABABD4CDC88310748221F5BDFDC2693181D902520B3
564A2BC6BAA3EF49264453597E2FC76861907DF625DA53070C2BBB4491A698DA
B9DD407C550D1C2664E26B7608C07A3B847EBEF1E3C0B3B25019A03941DD7813
2CFC1E32B2BEF83B1F16E838D62B1726DE278273795FF8EC6F39CC6FF1A1CA41
DD1A493A88B3E8BDB15D32C5B35103B8B797551AF195CF03E794D87502CD2BA6
3EAA5B1F928225A48968090FECE2D624A0A5EEF770D568BC981E2E67A16C94BE
0613A975DB7DAFB14A816605DB55AA543B17CF98170B83A11BCC3D18B1EE2AE1
66B7E7B571FCB90525A583A918D339C1DFB90CED5EB0FC05B94A2289DA9298D8
07D2ACA57AB52253DD323B75170FB57B1A9652F236732286C17218A1C3F5D124
7134B47DC120CE69E95FBC6E09E9A78487CBC560FBCC070B87B3B9B2A55BB840
B3BA11B3D0FBBE4CD63B7547489581135D98691D8FF89347552F0E50950DAD42
1E7453D0A84FF84BF5939D2A294567B73012B130536BDAC1CCBA0D791A5346DF
B3F228011DE3EC8DC24FDEB0B8D58276F5FF7CF3DF7B4C98F10ADDF7D5DA7F12
C071BE8B3F3930152349019E5FB8EFDDE4E0D65A015E836EF0C4246FD9535EEF
0550084F44FF6ED8BA3D8A6FD8E32F1B23DA673560427FBACB8F948D22695DC4
6F1FACB6ECB20DE3CF6992D1D2461EACFA28B60153B4C76162E4E2D5510B97CF
2A25C5A80193D64037DE5F27AF56018CC1E15450B847CC758684DE4FB8E3874C
6F0657FF9DF09171363F35CEC085B820AA3E8791429C2042BF55F8A61C29C122
9C4B47FE775B05379C262518BE40095F3E6042655CB0B0D68EC2372E34237431
A5D61B03B40FC3D3044138956FC9DD5AE49C5493F95AC6AF98A614071811733A
12696B15E7A3C3480095516F0D8388A708E719902225A0732B430F78D2763C4A
9C6CE0611606F98D6C91C95824E00E0D4DC79F1892AD2AB3528E7F851C7566BA
81164918688A7D35482AA279B06EBE1DB8826B9C0A9C6D69412B72CC02E04989
C7B133776508F4688432DD382E8BB5CBA22C5085156E458FCFDA46FC8956CB72
579A27B5C85A3000AD74D530CB4ECE04962014DEAB43950B82A52C8339EA0460
E087FEBEEBFE490D71EE13D70C98EB5E6B11E323327AAEBB9429A06755D04D6E
FED5DA17E87F34A33C9F0555D10FFA8F8A8ABA131916B03C28C3379223F24C6A
AD0C913A4277F2E69F6BD50503F90EC20FCF6D4AE23E173182D4D98D4C5EFA08
25D933E8F583470D1CA012094938952793C03F6195A204957D175AD7605AC626
ED3A0752A698D4275D81725E961D50F182C7B8BBCDEDCE5B0FE5ECF23DB04FE9
74772A2224FC3BC8965A3643944878C02328BD3084D840C8F731326A63BDB8FC
F7D8C9AFC97858ED2EB70DFFB02CF8990808C044C7E4B9872C8CA009ED9A2604
3ECB4D8216D136C4B20B96065574316F2EE82417F1DF4A4B52D60C60358C55E4
CC8ED09D1A6E684ED2FB168A9362F0697051380F9A6D7836225C4F8696495DFA
DF17EEE10D3A7C53AE9809500E8423737E06B6F6773568A2A6F728980ECFB1E9
99F4E0E329B15FE526F0C62D4561A5DED522DA2A5EDF409A3EEB5735617E77A7
A77F66CEA3711FC47CD0A0B1342AB1D8CD714C4A4D49D9756C375996917E4A01
6C5B0D77A277EE5A0BA86B250C99B85B7B8DAF584E040F89694E7E7977975282
962120BEE747AD5D2F3718A2590BD1D0A6D49E62478FF7256CEC4C4BA9682559
E4C206881B58EA640A934223A46C1815D346C32AAF8918DC5AF8A1FFD1E49142
6C7251902274DE08DB4D90FD4145E934F4F263CD7C1A67E0FC85ECA282B18411
E8B9CD0EE418F274BA87144994469B724EB8D2126F5C00862A548DE99D8304BB
E985CB6DC92F990CDB796AAB66E0D67A4323F17D9113DC778F3B736B6B2A7B4B
08FC77C4466FBDA9931449E713B79A2404E652AA1469B0C3DBE761858C221E3F
AB459F803E0DEDC32A21A2246FFBCE7FC532B71EFC7A74CA607524542174523F
01D834DD17F93033C6C7C189C8EAA659E2FAEB21551CCD7FCA4BF8CDF622E99C
186F2C8F6E30D7F7630D57E7566F50D169E240443B814DB88BB314E1DA5BC0F9
2937178A82224C4C53857B95B3056A36E97E399A7D57802BF67E9FDF6FF3A084
2C93510237B819027F631AAB356580F53F51C9B08071227756C4EF1AE31F8C52
ADBEA8AB7CBA04422CE1EE9BCED2F9ED18B8A26187F674B2704DEBB4C6F5538E
7F57DE66A98C22236F64E78BB8613ED07AA6F56EC07545AB05B3175433ECDF6F
8FDC1312926BE050B2B4B6AD53D22C67ED766CEC35E31B6418FEFD4816C590F7
841A4D94B15DDE33581917AE07640CC5BD72030277C651F931870F2A99727A46
67794CCECAA5994E06CF580742E50FD7AED054EEE87EDC10D9E3553DE260FFD5
90BEDC71CA9AD4AC12B0999E0F5C3CBA0BF4D8B3AFD0A002439727BAF844820C
8082772DA171A9E4B4743EE500C52DF54AFC2A0F9514EDAC361819FD25CD46EA
02685F72EEED5A50C4FD908EF3669B72A7553D32B68AEE779AE3F1D5E9DCAE29
CD2407FA461AEFD79AEA22B5136E0D7E10A6382D8E80102DBE4D101B85951CB5
B08CDAA8FC483BB31597E841C9FBECE72BCCDCEFB7EC37E53EA6A525B9BCF53C
64CB85FB1CE5F146193AE7AA7F7EDAEB65D1BDD7B56B485C2576912814545EB4
C9191CA240C9AB78198523AC76A1F343BB3E1061CF4DCFCFD87D706A30814A9F
7A62922FC625AE3CF4A4D2C34A38B9F346E5FBC1EA87FAA0E3C33421B8006C3C
D93617E6B0B1E0DFED71BA015BD9FB3F8086075CAFAA40CDA782878DCD1076B4
2B6B2470C9D0A6A9BFAA49F87CB36101837E0A70DB943CE306BEA041BED0244A
10C78ACA743DE7C6D2249D511EB83F6FC35164F4F5B73180745A2E1EE8BB1E27
17DDAB52753B36705655A85F37F501DAFD59EBCD8504F5FFF18884570CD80BB6
9D25C4006BE93963ACD7E7868CAAB8962A7833A346BDEA893376280A331EFADC
193702A97C3534C206B77FB9BCAA71DE4A1DB85360D56B2BD629478728BB0FDE
9646FB43EC0BB1B1B13D8AD0FB57C346C04FAE88B9973536BB9572ADEF166228
948D362EA2158BBE0BC90226FD7DCC2267359A6CC965F3BF81EA691173716511
923C07007FDCC189AEC07D3376606915CC8AD688480E0D52EE6614C4209035EB
AB19BC40AC36E27C2993F63B6A23D4106B341CE2F890851EB3E99946DCD9A40E
25DD883D396CBCE85B1DB4FF453E0A10379F29FDA2F3217D0EA0772AE181797F
629FA6B66BFC686A71E401C3D7EFA3F6906E47AC81D5EE21179FDFFF655E4CFD
AB7EBDF1D97E15102DF72D64499E6F41E0452EA291471F6AE12C9B18AE119D46
678D1699826FE8A7CA7FE321AA97994FA3666288A3A001668CDF3DB7D7DA528D
26A932BF124C2C8F4A14B6018A952BE760F64560F50B146EC0F3B3FFB1F9D7B0
CDE95E22D705D78BCD6EF09105E2DA61C83A8CE2EB3C0A56087A666AE1792E06
CA9C7DAFB5CA2C18ADA69B0E9B781801EED5F0D5A166C0D6545888308B44C75D
9E7807DF539E597DF1BB2FFFE276DB12DF81F103DAC3E37FFC05FD8FBEDD5EC8
91750D70F99C2645865C0356D3C0F15EDFA30ECD347E1717AA5D4CB03B26C4A3
4300BFE96DB0DD2C379542F7A9261EA15EEEFBD9C759E6CBA166DE83B93FADCB
635068816C561272059E04597577BFF7FA4F8A5EEBF43CA37A12B2E1CD2F18F2
D5563CFAC92D1E96F28A26C7D34160D4022FCAD9DAA18077DED5083E63DBD797
77C2A05B4D68FFA0108B8DECDDD0F001B1C081AD6A9717925F47C2DD2847C0CB
33BE59FE620068BB452DE9CDCF42546F422F2272A77C7B24EA082C8B28DC5CBD
9EFC4F8B8906C6A7E33CF0716850CA543604ED09ADF221993D48754421E6444B
A95515862E744155CBD37A97C8CA524C60CDBC3A9F86DFD02B5F0678DC86382C
9B6CC48999B19367801BA59E660FC5B2B1E296511FB5F0EA344E8EBFE13BAA70
CB43CE4A979D8225ED78423EEA4D3D21AF2D8FEFC29FE8E0F66056E496353E6D
3410AA7E05B1CC2212BBEDF5F5A11D419D5D9EDD035E877362B8262C6590CCD4
E31B19BA0AFF64E9C89BBABF49EEA8A49EDD465A0B1606AC8BB2B72748D0ED3F
BA42C836B1FFF0972C9836B983024EE9541B603122C94655B5AFA1C3744F5E96
716E56A1A20CB8F3D82BDA0E323AC159FDA3F55DDA6D10F12F7D242B1D2696B3
210D7958A6DCD6B26720A6061F746F9C9361F20AA1AA988ED6D317D469F4458B
0836872F95336FC074602E69D7B7BB22982FBF46FC91AE72F80F52E27B0D2A35
CA0EAA8A5FE2CD4FE65A4FB9CEA62AA27DA04D2DC9F3EB1838B3E3E37097799E
E97A4192D1193BD94E99C0CCF702D9EC100066E1490E46484CB67F2E1799CC7A
D881CD1277452731409EE7F66873B1269306D7692BFC29441731995E7EF52592
D65304CDCA03A517FA79302963911D09F570FC649B0EDDE106038EFFCDCC55D9
FF7B893CC31F7949ADAFA7FD22C8F9537DE297136B997B7696988A9F2B3AC897
A10789DA53D2DF6468F606BD4AFA8323B32617FE09DDABB4DA5C9565A5F9EF08
BD7E0BB5ABE6B5DE82FF252600C67408DE17270BE3BDAC62E25A8AA3F115026A
DA9C53020673B9AD4CC6CD5B0269959F55E4C6C1C1C3851FECAF5B1A04314221
E7D867B2D46666CCFAE58CE02E0B25ABDC9F82B6BE0D85FCE0CB6F56A0476B5B
0CF6361BE28DE2D87B5599FE14B018C5D76FFA490EDBEEC6628E58D8143F284A
02C2D5FCF7B5EFD92D20B0C0010E954A21F960F630060B4C8C1920F23322B5F5
B1AD9F638BA3D6566A225E00D4DA958B0C567EEC969A5224EF7C6B593F0FBA91
4DB057A3B8376AD2D8A3132BC437D1FB3A51B4422C5E45E5D0CD32FEDB386B93
3B546475BCFF91C512F4118D14B1C32C97334E9AF58A257E97A14969834FEE29
E5CDF49CCECF817426B8F7BCD93B3F75110F5FB3A408C5C56310155249D958E7
4599E1E6AF570C07A852ADA8E2A4EF3E11F3B4E45A3A7C9A9860B096DA037801
ECB5214290DCC5A7E09E9A2F5028AE5DA5139E8DBFBEBFF644019D08C6614924
3A2EFD61115E6780C7B2C82C06183272233E20965B81D75D4DF62C2B4FBD502F
1E27CD8B12730D24B8B46A23830880843E38350340A400301BD2C025E2870932
F6D281F0F9C45F9969A88E05652EA1297555D9BB7DA106788F2BDA3EE9978D16
1C03B7974C374B894016BCF4AB874291A8FDBEECE684A5509A6DC9B2AF9EFBBF
CE77154F6B77BB463992A775E1D468BB6EDE702D60DEA3E876774C304AE68381
B4DD8789E1D35D4AE06A051107EA4D95D996361AE04D572FB04D48E69939FDF4
8DF49CBE4C7F32CDF73BB1572F7875CC54AE4EDF1087D5254167A21B14DA39DD
517431692EE1FA1132ED0087D8EF5E30FD80ADED7A52F33F5224C40CD4580FF1
25D61EE0B245E0F9AFD05FEA4DECE4EA88FDA3670AA71ED77DFFD3BAB233FBBF
681AA3031BEAF016845F0AB0AD49789380E19128D2EE315DC641D6051E47EBE7
12EFC665D97DC2E35A75054F323AA0A83115E8AED878484FAD3448F4BBFCD65F
FDA0C644F052D90EA1C3CCD41E28F996E246EC0B362200AF0D712D8841563D64
AE0102622F67C2031D1E1CF627EF6125D1DAAF8E7E4BAAB9DE55C8366B785329
9DFF59BE6C9A5FC3455DB3B914A0C7743B56A92453EFD2A56C190898D6B55565
2AD4E14D4104669F132B4584E73C21F2CD255A129CA9E94130708A745EF54809
C085AC2D60FA311999AB94F4AB4F1298FFDD276633AE882A540B806AB439A3D1
0AC0EF7D9D809EDC6F279FEFA6B57EBDE29A53EA21145FF2515C0D4B2AF2D9C3
047E5DDC31CB8BEE4DB0088370534CA562A06A98ADFCAF9D29989D2306690A3C
521D56F322DF0BBEAA28E83B5C94175DFB9E11A2CFCAEBB26AC9EB6F7548E63D
6E83F77B0929D99246B2B2112315105BC07C60FE6498A9B0BE5F910BD6FB2632
9C8FE82B1046999CC8065ADB2FE030F6715EB6E2988835171C71AD38B836825E
D1A3B5B89F5B639E7D3B2254B857E872AA5C026FB60C0C9587D7AEF6B3D3E471
9497211C13D02F8FBC62F6554E4B19E01AF0301997B806D848588B36F16DFF5B
DFCD5F4AC9E9078F34BF2842E7C6E6AB56962C61587C9B2DCB453312073C7E0C
0C565E54A72F5E8006546A3995CAA55A6C07D3EA8AB14BF93C01A44F48043292
68F4440F088B2A5703242E2818BF94F3472B46917164DA5AC41C9FDAEC3A73C1
8E53F6B007BF9C6331A2AAF5925608991F0682726B987FB45D698F452B7BBF72
046547BF4519D1FF13FFE7ACE240AED6A5419A36CDE36ED173A1CDAD47578436
90A60539F61F720CE7F7788599AAF3FF46CE5AFDA10AFE818BA34A56AF169E5C
FBC94507E6D97A1CDD7F732C1EC10504D9C77E08FCF101D33E908A71B94B57A7
1E9BAD7BF99C34FA15687F78572C5BEBFDDD80971DE3920EA60FB15334D99DB7
27A758A924BE0D051BB73DEA2B8ED58BB5CC1AF7279DE37F1A0A5A6FDFD91316
4AD228F03DA8B984712368C4C2C7CBC32295E98D32C976F944839F2ECE4082C1
418C66C90D4AEB3FC1FC92FF7B00CE0E3605C8DD404ECE7B7EBABB8F83006014
76CD50E2FF8264CA36701D0C4F7211B5B5CC0A348F325F3E4553178171063A58
7AC9523706FAB55BDEF2D9A3B50D9F5293BDE23774BC691BB3406829CBC9375F
9935F53073E0D176E9D117CE6D9C2BC0DE6516B649A4DC292CA2AB1D782140DD
DF2830E4F2AC7BC9A0512C5598CD6A8558B8C486307DB2EC2010AF7E66F09F04
BB77457B2FF36195FAA544DD9DC65A9498FA646C4D49BD7FEB4B3150F5488A78
B644FA1D97110E3AD5BA3103CBF311C1BE34D08A8AA466B8C0B775FC1FA1CABA
526EE6E030C2AA05C8E7702C8712FA50514CABDA6D90DD12B0A386060985CEC6
E0C30A73E01C5CF828ACB0730F46F17A34B04C110AA8EB44BADD97E22194A490
DCFBAF39159FB3A63B24AA15B2D2BFA29663873429AC429977FAC1C877ACEB28
FC471CAE896AF0450370E650B2F47F171A0E27FE61579C2C592D648335442CED
DD4EAE1E5E9D914DDFDEFA36EDF8594C061F647968ED4CF408AD2EAB027B7795
2A40A24492FE4042B03E7F03EF36CE0390DB45EA1F0B6AA0630DCBC1A5E240F7
84C649F65CA60EBB2461AA63CB1F7A4969B579FEB563D1D646046174516991A1
96A915CE6918CEBCFBBA7F1C2D2652933D4F316B857DD80D0BF6EC0333FADBDA
E7F1A790336BFCE45F11C6719CB0204053F07893D5B32F1A8EDC9425767A51CA
D841BBB3EFA325A0C3AD8F622F4BB7691880EEDD6B992A7C74D36E68D12DA904
76714F26B16276F8BBAACF754776682DB8147DC7860064A4F2DD8A68E88EE24E
D42C3CE7AB806634B16EBDE16DA9FC6B5F8A7DF805A409AD9FA7B8A3A1989C12
4E0D2D4DA7072638C64B87391B48D38FA18DE5DDA433066C7165561ABC5CFAB2
851204091F209EF7C8CD398EF09D2BB3C6CB42AEC9B5474C326626AFF55AB83C
3F996ECAF4CDFCBB32218161DAE58A4B4ED14C613364DFD67FEF91AF947A6CBE
9B57FF542908165F6F87ADBF1AD9AA0457004201E997472F5CC6AF44B6DE04EA
C41E27E9EB7815FFD45808A559BE5CFB921C58CFE827CB83ED978948FDCB5E7F
9D9F6D462A9F28D5CF276D38046D704DD9A85778088C3E372DD5C4DC9880C01F
60CBB808540C553DFF754AFF2F306077EB559AC8043878F5E20508D39A9F09AF
151E90A5EED0AA43FB3436D2DE3D603CCFDB1C2FBA6891C229DA25D58F017271
C04DF2E5725B3163CE79D46B7B05E6DAFDCB4C7600330364F95599E22D57B99D
9E2DF1AF1804B045804AD45DC5099FEC6192E9D95D7229E3E8EC6466E774E50E
9BBC4503FEB0EE2FFD960DA4DE246AF48637BD987437A61378549CD94322123A
88C09AB4712AF0E24AF0951E654C81FF3E1C152FD1DD1A57285471BF31FE2739
929BE8B0CAC1DB948AD62460AECDAA2B70EA259CCFECA1E9A89320AE49D3FE7B
47F00E5125B6EF3F3C0F15EA86C191FA474CBCF630850A823E0D6FB24B21C8EA
8FAE5689C442E6BEFDADB673873645AD93B48B3EC761D0EFCF036C79A181B141
4F20D391685E8BE3F16369DC7D453F813638EFA5D43C066D5D6E4F287E66BD15
CA49700412CA4EE593ED60152108652C0B47486D8F557AAA8C70E2B208B426E1
A32DAE9FBB11669326D2FBA660BC59F7715FADD0750D80841FCF68484D0BBB2B
333CFA1D1C9E159909415292FC1A14EA9F926EE6305096DCFEAF0A5255C1E94F
1AD233C2F84F3458A2FD30BBD7E28A576E9DC739ACEAB464EFCD8E6D5766529B
A5A7C7BB42B0D74AB6C4F216796E342D09AE97C63F4B86A14320AEFCE013057D
068B8E4E69D3E5A20D5ADCB297A5444C8361D4E57585763581DADAC6A0664F29
C08358B4230F20B72E8B80A950DAB6948B862415D601D747A9138479C3059069
35963C994DDDCEB06586E5ED33667331B98B6E645E846C6F6C3EFC6A9AEDE334
BAAF7794E1A1F733AC416BC9567C7474B92A9413386080A8D2EFEADC950A2AD8
8614856807FCB2F05F05CA8E140309FF898FC4945E3BB1A4AD1A8F7D4A2972F4
73296BD22BBBAACEF670376048789BA9C033661DDA481345A4C79BB275AB4188
2A65DA3AE06F801E6C37115B81C74AA87A8C2D78D2D662D2235E3B458B116ECC
4E82D4CF8E6F26354B883489405C9D56D45E277547F66D789136E6C4DE7B5685
48C42F4015F3CD686824AA576E689F5D4743A0527420CE8FAC416AFF993D4076
7A210ECF8365C8D48D851C9629B978FAAA46FFC9F98319692AAB1F1447BFAD01
C2317FCFE6BAFA50F767A53A82F9D8896586EBC36E5907F7C11F5184949EB5A6
04FD7108165542256E33616D165BF75291EF6E7415C6F6E2866F73AC8D68739C
66C1782C8DABAED6EEBA8BA0734F7B4D4C4D8E48CCFA400D377DBBE9C6B30F5D
FBB48002662A4DB6B664F921158B170E611C492874C9981ED59A970E3D4BC935
5CD59870B860DFB9566F351875669BD268993F36F98189D0A2C46692FE217AE3
F87CA39AD778DC6A100F928D24E3BF83426183ED476E485A61CEAC5F632A4C66
5FE655567D3A8C9471C006622F2F6C1D9C137627D71504B08C29F4C9E2DF8152
EC5DD89072F6A67030218190C97FCE56224478FF564FA2E2BCC8B0E14BF26D94
304A0FF6B67A7CCBADD15F6518CC35B197AE8BEE70289311CC30A38B9DBB9C52
0876EC5BA79B849449A53B792E91A84575CEE9501C40E4855DD96BE3B11EA8A7
8C3A11FC2712B27C31E9EB16624A39FF92598964C933427B67FFDD23B782C88D
F4773DC0E711C50F458F1B36A9AF7D783761089135564BB1536D1EB639EA3B70
01255DFBE35FE807C0453067C1054DFC35855672675772CA4DE6BB6767A0342C
48DBBDF6EB2A5A72E24259E976587DE65A3FDCC9AC5C5F783D573AC91942E6F0
38AB1C2504D82AEE3487CF5E731DADF37D6D6BBB94B39D3D6FBD30BC5CCE9456
D138422B1FB649C387F06351610780A10A972ECBECF891FAB56CE8F8D1447278
BD29B851CB7DD2727B73A97E2038C60BEDE44517559686339482AA183785AE99
76C8FECB4C94A97B01156E3CA41AD17544FF097B020379CB994D8CB0B34C1484
84B34C224B542D4BB0575335BC6656AB8CFB0AA1C09FEB38D139E33203D3C5FD
C5FFCD2E07DACFB439C407BCE331A29027723AB87D3BC626A96B494EAACAED7F
8BB2DA2F891C8CF143EE88A6ABFD7D6D9D581AEBAF44B537B635D43538A2E6EB
D9BF34DD758E79C5FC4254661666684C07055F36C3426D8FF088A6175DE9D19B
781302C8032B0D788B222C9BDB4F08381FA096D2303842C303C712151D282221
EABAA593787DFD4BAA054D1619227A17913357BB43BF8F93AED0C201455E229C
987A128F91230225DB294A267BF8AB621698998C393910D9FBB4225C1B15F306
68DA6058BDB0F64BC8E6839C9E61F3CE9893F0F4599A0FE9DEFABD0DB4DB4CBD
EB5EC234B3349B93550A988167B6F299401FC5ADB09176CD65BFD9F684CEC177
7CC5D9B5BCD4E6582DA5B82CB5A93315BAD9A3335AC17772A4417C5FA33BF5ED
74076F822C83B6E232CA0CE56898462E326CD9247B8B11F91E918EC5819AD592
7C246350CF67BDD8E7BF02D99BC1E722D20D7AA537765D4F0572E9A43ACA053A
8F7528925B427F5A8368A2169AD26D1F8270C48778AA9FBE0531B1C2CBB35B44
A391B38A8112752F6F7263009E514E4CE7DF8C67EC7EE5BEC619DD75BF26797F
A80F81084291BAD2A3223FC25CE28276AC98EF0C0D6E018170B10614B04B497D
48C8C7F2686331E85CC4EA5368C9AB943363EB898F010421FB8D4457E5772E65
054282D820FE75AC6A7276D0FCA5CC911DE21010E3AAC8487C9A2527489C2A3A
DBEB19B305A32C87AA9A4A2C9C77D44B2D0C17274BAA14547586856F95B01D46
4D6B344A51BC89CB77C2E39A2105694ED22E9D2D164EC5CD15146950F5DB781D
81F0C629CCA58A380B58A265AD69B4DDF3690DE70FEB21C05787DC1D2BEBA14D
9C2CC62AC403D6910906F1689C0BB33BD33A7BB749E3BF50A9AA66ECB8370023
907791500ED4358E0F1244A885B758479E52DD59865A4BF0675D6E2F7FC853AA
86F0CB3B4AEE70C934C08F782BE440F60C2BEDF582A5B3E194E3B8C670B83FE1
2E3B0D2D1D926866DE7293A1F71D50CE4C70332F7E04F274466339DB948EC433
D49D514ECC1DC47E9440B588BB49B55328976E2FEBE0347EB5FD2B3699EF0063
F6CD6558CB4FB0DD0ECA07BC9F110F0902DB2BEA5DB8CD7B16A77DC47D5C4106
443DF39DD325FD4E4DCAA382D6F31272FF4618DA3020CFFDCAD27C470838FF1D
2E1A002B983CE26744F5879BCEF7700E3ABB3A5271247CE2C2F344729ADB4C26
25CCCD8B9186AA71F0C1ADF3032769946D2156B2878C91EF0A6C55BEAC80490C
9843FED4CCD2D249ECF4B2E9FB6784FE497C5EC347B9CC6DFCCFBF0DA4D5231B
44B458C2B6D2C555BDAFF593D3F0E6EE31B97BC5FC45997A6EFA4446A69257F6
3503C3417680ACA37850B30D1B00DD6D73BEFFBA574ECAB6FE98295D2C0F2ABC
7E4982881F7AFCCFDEC497EEF754409C84DBEAB7955710953F54BB5B3873656C
F8BA8BAB10C875035306C08459A93982F554500978103FBB4663DE44D9F090CD
A3E17141476974525A5105146910FA11CA49DEC88B3C418E7DCD73E331157865
6751EF039AF60B14847EC059D0358FF10CCEE6956ECF41FF9FA8770ABC13DDED
09EEE9D2C64232010F52ABF5F49DB5D8DC7934A5BE00E01EC48C31D268FC6D3E
8D37B80AD8D603F3518C5D65F4BF3AEE99EE0B6488D682341074DB71E36CCBB0
A0ADC27A6D8E2F9ADB4468C959B196C8F96F11CC5199B155E5AC720968A379F0
CBB44814A1853DE343CE4601EE37
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Sarina/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit)
@start /Fa 254[261 732{ enclmmathsy ReEncodeFont }2 885.568
/LMMathSymbols8-Regular rf /Fb 242[1594 13[{ enclmmathsy ReEncodeFont }
1 1594.02 /LMMathSymbols10-Regular rf /Fc 203[993 1[993
50[{}2 1328.35 /wasy10 rf /Fd 145[571 5[542 44[261 261
18[613 39[{ enclmmathit ReEncodeFont }5 885.568 /LMMathItalic8-Regular
rf /Fe 199[470 470 470 470 470 470 470 470 470 6[366
366 40[{ enclmrm ReEncodeFont }11 885.568 /LMRoman8-Regular
rf /Ff 168[1138 3[615 30[553 2[553 2[307 46[{ enclmec ReEncodeFont }5
1106.96 /LMRoman10-Regular rf /Fg 160[909 45[606 1[606
47[{ enclmec ReEncodeFont }3 1212.12 /LMRoman10-Regular
rf /Fh 140[1107 1[1107 113[{ enclmmathex ReEncodeFont }2
1106.96 /LMMathExtension10-Regular rf /Fi 214[1328 7[1328
7[1033 17[1033 1033 4[369 1033{ enclmmathsy ReEncodeFont }7
1328.35 /LMMathSymbols10-Regular rf /Fj 133[604 1[739
7[653 1[776 5[749 14[755 1079 12[1107 1[574 4[1080 1[988
975 2[1012 1[1012 361 19[852 11[739 4[783 8[675 13[{
 enclmmathit ReEncodeFont }19 1328.35 /LMMathItalic12-Regular
rf /Fk 162[361 1[361 29[1012 1[361 1[650 650 650 650
650 650 650 650 650 650 4[1012 1[506 506 2[1084 28[939
5[1012 2[{ enclmrm ReEncodeFont }20 1328.35 /LMRoman12-Regular
rf /Fl 650 2[723 5[650 17[650 13[1012 91[578 686 686
939 686 723 506 513 506 1[723 650 723 1084 361 686 397
361 723 650 397 578 723 578 723 650 3[361 1[361 795 2[1336
975 975 939 723 957 1[885 1012 975 1192 813 1011 668
469 975 1021 849 885 993 939 921 975 1[614 1[1012 1[361
361 650 650 650 650 650 650 650 650 650 650 650 361 434
361 2[506 506 2[1084 3[361 4[723 759 8[613 1[613 16[{
 enclmec ReEncodeFont }81 1328.35 /LMRoman12-Regular
rf /Fm 27[1046 13[1616 91[956 2[1554 1136 1196 837 849
879 1[1196 1076 1196 1793 598 1136 1[598 1196 1076 658
982 1196 956 1196 1046 6[1315 2[2223 1625 1[1497 1196
3[1616 1682 2041 1293 1685 1[801 1682 1[1353 1412 1[1554
1530 1625 7[1076 1076 1076 1076 1076 1076 1076 1076 1076
1076 1076 598 717 16[1196 28[{ enclmec ReEncodeFont }55
1912.83 /LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fm(WS)717
b(4.1)g(-)g(1)h(W)-179 b(ahl)716 b(-)h(O)-60 b(A)718
b(-)g(BIFIE)p 0 TeXcolorgray -741 4800 a Fl(1.)p 0 TeXcolorgray
651 w(Bei)402 b(einer)g(Befragung)g(v)-36 b(on)402 b(2,000)h
(zuf\344llig)h(ausgew)-36 b(\344hlten)402 b(w)-36 b(ahlb)36
b(erec)-36 b(h)g(tigten)401 b(P)-36 b(ersonen)921 6792
y(geb)36 b(en)307 b(14)217 b(\045)309 b(an,)f(dass)g(sie)g(b)36
b(ei)307 b(der)h(n\344c)-36 b(hsten)306 b(W)-108 b(ahl)308
b(f\374r)g(die)g(P)-36 b(artei)307 b(\022Alternativ)-36
b(es)309 b(Leb)36 b(en\020)921 8784 y(stimmen)378 b(w)-36
b(erden.)379 b(A)-36 b(ufgrund)377 b(dieses)i(Ergebnisses)g(gibt)f(ein)
h(Mein)-36 b(ungsforsc)g(h)g(ungsinsti-)921 10776 y(tut)433
b(an,)h(dass)f(die)h(P)-36 b(artei)433 b(mit)h(12)217
b(\045)434 b(bis)g(16)217 b(\045)433 b(der)h(Stimmen)e(rec)-36
b(hnen)433 b(kann.)921 15314 y(Mit)g(w)-36 b(elc)g(her)434
b(Sic)-36 b(herheit)433 b(kann)g(man)h(diese)f(Behauptung)g
(aufstellen?)p 1 0 0 TeXcolorrgb 921 19851 a(K)-36 b(on\034denzin)g
(terv)-72 b(all:)433 b Fk([)8 b(0)p Fj(;)p Fk(12;)221
b(0)p Fj(;)p Fk(16])921 22396 y Fj(\026)368 b Fk(=)h
Fj(n)296 b Fi(\001)f Fj(p)369 b Fk(=)f(2)221 b(000)297
b Fi(\001)e Fk(0)p Fj(;)p Fk(14)371 b(=)d(280)921 24942
y Fj(\033)417 b Fk(=)3458 23608 y Fh(q)p 4564 23608 7287
45 v 4564 24942 a Fj(n)296 b Fi(\001)f Fj(p)g Fi(\001)g
Fk(\(1)h Fi(\000)f Fj(p)p Fk(\))369 b(=)f(15)p Fj(;)p
Fk(5)921 27487 y(0)p Fj(;)p Fk(16)296 b Fi(\001)g Fk(2)221
b(000)370 b(=)f(320)888 30032 y(320)h(=)f(280)296 b(+)f
Fj(z)355 b Fi(\001)295 b Fk(15)p Fj(;)p Fk(5)370 b Fi(!)f
Fj(z)429 b Fk(=)368 b(2)p Fj(;)p Fk(58)j Fi(!)e Fk(\002\()p
Fj(z)59 b Fk(\))369 b(=)f(0)p Fj(;)p Fk(995)888 32578
y(2)296 b Fi(\001)f Fk(\002\()p Fj(z)59 b Fk(\))295 b
Fi(\000)g Fk(1)370 b(=)e(0)p Fj(;)p Fk(99)921 35123 y
Fl(Die)434 b(Behauptung)f(kann)g(mit)h(99)217 b(\045iger)434
b(Sic)-36 b(herheit)433 b(aufgestellt)i(w)-36 b(erden.)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
4800 a Fg(___/1)p 1 0 0 TeXcolorrgb 47905 6792 a Ff(WS)369
b(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 38857 54804 45 v -2331 44158 a Fm(WS)717 b(4.1)g(-)g(2)h(W)-60
b(\344hleran)g(teil)715 b(-)j(O)-60 b(A)718 b(-)f(BIFIE)p
0 TeXcolorgray -741 47466 a Fl(2.)p 0 TeXcolorgray 651
w(Bei)441 b(einer)g(Stic)-36 b(hprob)36 b(e)439 b(v)-36
b(on)441 b Fj(n)381 b Fk(=)g(500)442 b Fl(P)-36 b(ersonen)440
b(gab)36 b(en)441 b(120)g(P)-36 b(ersonen)440 b(an,)h(sie)g(w\374rden)
921 49457 y(die)433 b(P)-36 b(artei)434 b Fj(A)g Fl(w)-36
b(\344hlen.)921 53995 y(Gib)433 b(das)g(95-\045-K)-36
b(on\034denzin)g(terv)-72 b(all)433 b Fj(K)95 b(I)538
b Fl(f\374r)433 b(den)g(W)-36 b(\344hleran)g(teil)434
b(der)g(P)-36 b(artei)433 b Fj(A)h Fl(an.)921 58532 y
Fj(K)95 b(I)473 b Fk(=)p 4551 58532 15749 34 v 1 0 0
TeXcolorrgb 921 61077 a Fj(K)95 b(I)473 b Fk(=)369 b([)8
b(0)p Fj(;)p Fk(203;)221 b(0277])437 b Fl(bzw.)d Fj(K)95
b(I)473 b Fk(=)369 b(0)p Fj(;)p Fk(24)296 b Fi(\007)g
Fk(0)p Fj(;)p Fk(037)921 65615 y Fl(L\366sungsin)-36
b(terv)-72 b(all)434 b(f\374r)f(die)h(un)-36 b(tere)432
b(Grenze:)h Fk([)8 b(0)p Fj(;)p Fk(20;)221 b(0)p Fj(;)p
Fk(21])921 67607 y Fl(L\366sungsin)-36 b(terv)-72 b(all)434
b(f\374r)f(die)h(ob)36 b(ere)433 b(Grenze:)g Fk([)8 b(0)p
Fj(;)p Fk(27;)221 b(0)p Fj(;)p Fk(28])p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 47466 a Fg(___/1)p
1 0 0 TeXcolorrgb 47905 49457 a Ff(WS)369 b(4.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 71414
54804 45 v 0 TeXcolorgray 24746 81281 a Fl(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fm(WS)717 b(4.1)g(-)g(3)h(K)-60
b(on\034denzin)g(terv)-120 b(all)714 b(-)k(ZO)f(-)h(BIFIE)p
0 TeXcolorgray -741 4800 a Fl(3.)p 0 TeXcolorgray 651
w(V)-108 b(on)632 b(einer)g(Stic)-36 b(hprob)36 b(e)630
b(sind)i(jew)-36 b(eils)634 b(der)d(Stic)-36 b(hprob)36
b(en)-36 b(umfang)631 b Fj(n)h Fl(und)f(die)h(relativ)-36
b(e)921 6792 y(H\344u\034gk)g(eit)434 b Fj(h)f Fl(eines)h(b)36
b(eobac)-36 b(h)g(teten)432 b(Merkmals)j(gegeb)36 b(en.)921
11330 y(Ordne)358 b(jeder)h(Stic)-36 b(hprob)36 b(e)358
b(das)h(ric)-36 b(h)g(tige)359 b(K)-36 b(on\034denzin)g(terv)-72
b(all)359 b(f\374r)g(das)g(v)-36 b(orgegeb)36 b(ene)360
b(K)-36 b(on-)921 13322 y(\034denzniv)g(eau)433 b Fj(\015)505
b Fl(\(Sic)-36 b(herheitsniv)g(eau\))433 b(zu.)p 0 TeXcolorgray
0 TeXcolorgray 2683 15103 6545 45 v 9227 15103 4523 45
v 2683 22071 45 6969 v 3391 16884 a Fj(n)370 b Fk(=)e(1000)3391
18876 y Fj(h)h Fk(=)g(0)p Fj(;)p Fk(3)3391 20868 y Fj(\015)441
b Fk(=)369 b(0)p Fj(;)p Fk(60)p 9183 22071 V 0.9 TeXcolorgray
9227 22071 4478 6969 v 0 TeXcolorgray 1 0 0 TeXcolorrgb
10955 19044 a Fl(A)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 13705 22071 45 6969 v 2683 22115 6545
45 v 9227 22115 4523 45 v 2683 29084 45 6969 v 3391 23897
a Fj(n)h Fk(=)e(1000)3391 25889 y Fj(h)h Fk(=)g(0)p Fj(;)p
Fk(3)3391 27881 y Fj(\015)441 b Fk(=)369 b(0)p Fj(;)p
Fk(95)p 9183 29084 V 0.9 TeXcolorgray 9227 29084 4478
6969 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 11024 26057 a
Fl(E)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
13705 29084 45 6969 v 2683 29128 6545 45 v 9227 29128
4523 45 v 2683 36096 45 6969 v 3391 30909 a Fj(n)h Fk(=)e(500)3391
32901 y Fj(h)h Fk(=)g(0)p Fj(;)p Fk(3)3391 34893 y Fj(\015)441
b Fk(=)369 b(0)p Fj(;)p Fk(99)p 9183 36096 V 0.9 TeXcolorgray
9227 36096 4478 6969 v 0 TeXcolorgray 1 0 0 TeXcolorrgb
10969 33070 a Fl(D)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 13705 36096 45 6969 v 2683 36141 6545
45 v 9227 36141 4523 45 v 2683 43109 45 6969 v 3391 37922
a Fj(n)h Fk(=)e(1000)3391 39914 y Fj(h)h Fk(=)g(0)p Fj(;)p
Fk(4)3391 41906 y Fj(\015)441 b Fk(=)369 b(0)p Fj(;)p
Fk(50)p 9183 43109 V 0.9 TeXcolorgray 9227 43109 4478
6969 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 11042 40082 a
Fl(F)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
13705 43109 45 6969 v 2683 43153 6545 45 v 9227 43153
4523 45 v 0 TeXcolorgray 0 TeXcolorgray 14557 15103 4567
45 v 19123 15103 23537 45 v 14557 26066 45 10964 v 0.92
TeXcolorgray 14601 26066 4478 10964 v 0 TeXcolorgray
16328 21041 a(A)p 19079 26066 45 10964 v 19787 25121
a
 currentpoint currentpoint translate 0.5444 0.5444 scale neg exch neg
exch translate
 19787 25121 a 20221 25121 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 363.86497 a add def
/d 0.0 a add neg def /h 150.5648 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 20221 25121 a -119830 15221
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 1629.05225
 0 1265.18727  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 1265.18727  1629.05225  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -89.43584  def /maxTickline
61.12897  def /dT 6341265 abs 65536 div viceversa { neg } if def /DT
0.02 abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 4836.96849  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 4836.96849  mul cntTick add def x abs MinValue abs le { false {
x minTickline  moveto x maxTickline  lineto } { x tickstart STsize
mul  moveto x tickend STsize mul  lineto } ifelse } if } for } for
/dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 1629.05225 0.0 1265.18727 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial -120065 16567 a Fe(0)9639 b(0)p
Fd(:)p Fe(02)9040 b(0)p Fd(:)p Fe(04)g(0)p Fd(:)p Fe(06)g(0)p
Fd(:)p Fe(08)g(0)p Fd(:)p Fe(10)g(0)p Fd(:)p Fe(12)g(0)p
Fd(:)p Fe(14)g(0)p Fd(:)p Fe(16)g(0)p Fd(:)p Fe(18)g(0)p
Fd(:)p Fe(20)g(0)p Fd(:)p Fe(22)g(0)p Fd(:)p Fe(24)g(0)p
Fd(:)p Fe(26)g(0)p Fd(:)p Fe(28)f(0)p Fd(:)p Fe(30)h(0)p
Fd(:)p Fe(32)-172444 b(0)9639 b(0)p Fd(:)p Fe(02)9040
b(0)p Fd(:)p Fe(04)g(0)p Fd(:)p Fe(06)g(0)p Fd(:)p Fe(08)g(0)p
Fd(:)p Fe(10)g(0)p Fd(:)p Fe(12)g(0)p Fd(:)p Fe(14)g(0)p
Fd(:)p Fe(16)g(0)p Fd(:)p Fe(18)g(0)p Fd(:)p Fe(20)g(0)p
Fd(:)p Fe(22)g(0)p Fd(:)p Fe(24)g(0)p Fd(:)p Fe(26)-119830
15221 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 -119830 15221 a -119830 15221 a
tx@Dict begin { 1629.05225 61.12897 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 -119830 15221
a -119830 15221 a
tx@Dict begin { 5.0  0.0 0.0 0.0 140.  Uput UUput } PutCoor PutBegin
 end
 -119830 15221 a -119830 15221 a
tx@Dict begin  PutEnd  end
 -119830
15221 a -119830 15221 a
tx@Dict begin  PutEnd  end
 -119830 15221 a -119830 15221
a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 -119830 15221 a -119830 15221 a
tx@Dict begin { 0.0 0.0 pop 1629.05225 61.12897 exch pop } PutCoor
PutBegin  end
 -119830 15221 a -119830
15221 a
tx@Dict begin { 5.0  18.93042 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 -119830 15221 a -120878 15553 a Fl(f\(x\))-119830
15221 y
tx@Dict begin  PutEnd  end
 -119830 15221 a -119830 15221 a
tx@Dict begin  PutEnd  end
 -119830 15221
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1499.44841 -39.85538
1402.68839 -39.85538    /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1450.73627 -46.71503
1451.1053 0.0    /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial -119830 15221 a
tx@Dict begin { 1426.08498 -48.01749 } PutCoor PutBegin  end
 -119830 15221
a 0 0 1 TeXcolorrgb 922 x Fj(h)368 b Fk(=)h(0)p Fj(;)p
Fk(3)p 0 TeXcolorgray -119830 15221 a
tx@Dict begin  PutEnd  end
 -119830 15221 a
-119830 15221 a
tx@Dict begin { 1502.91731 -37.51096 } PutCoor PutBegin  end
 -119830 15221 a 0 0 1 TeXcolorrgb 836
x Fj(p)-119177 16256 y Fe(2)-118283 16057 y Fk(=)g(0)p
Fj(;)p Fk(31)p 0 TeXcolorgray -119830 15221 a
tx@Dict begin  PutEnd  end
 -119830
15221 a -119830 15221 a
tx@Dict begin { 1350.0645 -37.51096 } PutCoor PutBegin  end
 -119830 15221 a 0 0 1 TeXcolorrgb
836 x Fj(p)-119177 16256 y Fe(1)-118283 16057 y Fk(=)g(0)p
Fj(;)p Fk(29)p 0 TeXcolorgray -119830 15221 a
tx@Dict begin  PutEnd  end
 -119830
15221 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.49019 0.49019 1  setrgbcolor
 [ 1451.1053 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial 60499
25121 a
currentpoint initclip moveto
 60499 25121 a 19787 25121 a
 currentpoint currentpoint translate 1 0.5444 div 1 0.5444 div scale
neg exch neg exch translate
 19787 25121 a 42615
26066 45 10964 v 14557 26110 4567 45 v 19123 26110 23537
45 v 14557 34575 45 8466 v 0.92 TeXcolorgray 14601 34575
4478 8466 v 0 TeXcolorgray 16379 30800 a Fl(B)p 19079
34575 45 8466 v 19787 33631 a
 currentpoint currentpoint translate 0.47244 0.47244 scale neg exch
neg exch translate
 19787 33631 a 20221 33631
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 419.88394 a add def
/d 0.0 a add neg def /h 125.73116 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 20221 33631 a -146367 25105 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 1924.79402
 0 1456.56697  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 1456.56697  1924.79402  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -77.01901  def /maxTickline
48.71214  def /dT 6341265 abs 65536 div viceversa { neg } if def /DT
0.02 abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 4836.96849  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 4836.96849  mul cntTick add def x abs MinValue abs le { false {
x minTickline  moveto x maxTickline  lineto } { x tickstart STsize
mul  moveto x tickend STsize mul  lineto } ifelse } if } for } for
/dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 1924.79402 0.0 1456.56697 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial -146602
26450 a Fe(0)9640 b(0)p Fd(:)p Fe(02)9040 b(0)p Fd(:)p
Fe(04)g(0)p Fd(:)p Fe(06)g(0)p Fd(:)p Fe(08)g(0)p Fd(:)p
Fe(10)g(0)p Fd(:)p Fe(12)g(0)p Fd(:)p Fe(14)f(0)p Fd(:)p
Fe(16)h(0)p Fd(:)p Fe(18)g(0)p Fd(:)p Fe(20)g(0)p Fd(:)p
Fe(22)g(0)p Fd(:)p Fe(24)g(0)p Fd(:)p Fe(26)g(0)p Fd(:)p
Fe(28)g(0)p Fd(:)p Fe(30)g(0)p Fd(:)p Fe(32)g(0)p Fd(:)p
Fe(34)g(0)p Fd(:)p Fe(36)g(0)p Fd(:)p Fe(38)-204578 b(0)9640
b(0)p Fd(:)p Fe(02)9040 b(0)p Fd(:)p Fe(04)g(0)p Fd(:)p
Fe(06)g(0)p Fd(:)p Fe(08)g(0)p Fd(:)p Fe(10)g(0)p Fd(:)p
Fe(12)g(0)p Fd(:)p Fe(14)f(0)p Fd(:)p Fe(16)h(0)p Fd(:)p
Fe(18)g(0)p Fd(:)p Fe(20)g(0)p Fd(:)p Fe(22)g(0)p Fd(:)p
Fe(24)g(0)p Fd(:)p Fe(26)g(0)p Fd(:)p Fe(28)g(0)p Fd(:)p
Fe(30)-146367 25105 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 -146367 25105 a -146367 25105 a
tx@Dict begin { 1924.79402 48.71214 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end

-146367 25105 a -146367 25105 a
tx@Dict begin { 5.0  0.0 0.0 0.0 140.  Uput UUput } PutCoor PutBegin
 end
 -146367 25105 a -146367
25105 a
tx@Dict begin  PutEnd  end
 -146367 25105 a -146367 25105 a
tx@Dict begin  PutEnd  end
 -146367 25105
a -146367 25105 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 -146367 25105 a -146367 25105 a
tx@Dict begin { 0.0 0.0 pop 1924.79402 48.71214 exch pop } PutCoor
PutBegin  end
 -146367
25105 a -146367 25105 a
tx@Dict begin { 5.0  18.93042 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 -146367 25105 a -147415 25437
a Fl(f\(x\))-146367 25105 y
tx@Dict begin  PutEnd  end
 -146367 25105 a -146367 25105
a
tx@Dict begin  PutEnd  end
 -146367 25105 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1838.07164 -39.85538
1547.86534 -39.85538    /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1692.96849 -46.71503
1692.96849 0.0    /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial -146367 25105
a
tx@Dict begin { 1670.38376 -50.53558 } PutCoor PutBegin  end
 -146367 25105 a 0 0 1 TeXcolorrgb 922 x Fj(h)369 b
Fk(=)g(0)p Fj(;)p Fk(35)p 0 TeXcolorgray -146367 25105
a
tx@Dict begin  PutEnd  end
 -146367 25105 a -146367 25105 a
tx@Dict begin { 1813.1251 -50.10144 } PutCoor PutBegin  end
 -146367 25105 a 0 0 1
TeXcolorrgb 836 x Fj(p)-145714 26140 y Fe(2)-144819 25941
y Fk(=)f(0)p Fj(;)p Fk(38)p 0 TeXcolorgray -146367 25105
a
tx@Dict begin  PutEnd  end
 -146367 25105 a -146367 25105 a
tx@Dict begin { 1528.15906 -50.79608 } PutCoor PutBegin  end
 -146367 25105 a 0 0 1
TeXcolorrgb 836 x Fj(p)-145714 26140 y Fe(1)-144819 25941
y Fk(=)g(0)p Fj(;)p Fk(29)p 0 TeXcolorgray -146367 25105
a
tx@Dict begin  PutEnd  end
 -146367 25105 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.49019 0.49019 1  setrgbcolor
 [ 1692.96849 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
66700 33631 a
currentpoint initclip moveto
 66700 33631 a 19787 33631 a
 currentpoint currentpoint translate 1 0.47244 div 1 0.47244 div scale
neg exch neg exch translate
 19787 33631
a 42615 34575 45 8466 v 14557 34620 4567 45 v 19123 34620
23537 45 v 14557 41896 45 7276 v 0.92 TeXcolorgray 14601
41896 4478 7276 v 0 TeXcolorgray 16370 38715 a Fl(C)p
19079 41896 45 7276 v 19787 40951 a
 currentpoint currentpoint translate 0.38672 0.38672 scale neg exch
neg exch translate
 19787 40951 a 20221
40951 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 513.83934 a add def
/d 0.0 a add neg def /h 125.818 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 20221 40951 a -166612 32281 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 2201.64139
 0 1687.80205  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 1687.80205  2201.64139  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -78.32149  def /maxTickline
47.4965  def /dT 6341265 abs 65536 div viceversa { neg } if def /DT
0.02 abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 4836.96849  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 4836.96849  mul cntTick add def x abs MinValue abs le { false {
x minTickline  moveto x maxTickline  lineto } { x tickstart STsize
mul  moveto x tickend STsize mul  lineto } ifelse } if } for } for
/dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 2201.64139 0.0 1687.80205 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial -166847
33626 a Fe(0)9639 b(0)p Fd(:)p Fe(02)9040 b(0)p Fd(:)p
Fe(04)g(0)p Fd(:)p Fe(06)g(0)p Fd(:)p Fe(08)g(0)p Fd(:)p
Fe(10)g(0)p Fd(:)p Fe(12)g(0)p Fd(:)p Fe(14)g(0)p Fd(:)p
Fe(16)g(0)p Fd(:)p Fe(18)g(0)p Fd(:)p Fe(20)g(0)p Fd(:)p
Fe(22)g(0)p Fd(:)p Fe(24)g(0)p Fd(:)p Fe(26)g(0)p Fd(:)p
Fe(28)g(0)p Fd(:)p Fe(30)g(0)p Fd(:)p Fe(32)g(0)p Fd(:)p
Fe(34)g(0)p Fd(:)p Fe(36)f(0)p Fd(:)p Fe(38)h(0)p Fd(:)p
Fe(40)g(0)p Fd(:)p Fe(42)g(0)p Fd(:)p Fe(44)-236710 b(0)9639
b(0)p Fd(:)p Fe(02)9040 b(0)p Fd(:)p Fe(04)g(0)p Fd(:)p
Fe(06)g(0)p Fd(:)p Fe(08)g(0)p Fd(:)p Fe(10)g(0)p Fd(:)p
Fe(12)g(0)p Fd(:)p Fe(14)g(0)p Fd(:)p Fe(16)g(0)p Fd(:)p
Fe(18)g(0)p Fd(:)p Fe(20)g(0)p Fd(:)p Fe(22)g(0)p Fd(:)p
Fe(24)g(0)p Fd(:)p Fe(26)g(0)p Fd(:)p Fe(28)g(0)p Fd(:)p
Fe(30)g(0)p Fd(:)p Fe(32)g(0)p Fd(:)p Fe(34)-166612 32281
y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 -166612 32281 a -166612 32281 a
tx@Dict begin { 2201.64139 47.4965 pop 0.0 0.0 exch pop } PutCoor PutBegin
 end
 -166612 32281 a -166612
32281 a
tx@Dict begin { 5.0  0.0 0.0 0.0 140.  Uput UUput } PutCoor PutBegin
 end
 -166612 32281 a -166612 32281 a
tx@Dict begin  PutEnd  end
 -166612 32281
a -166612 32281 a
tx@Dict begin  PutEnd  end
 -166612 32281 a -166612 32281 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 -166612
32281 a -166612 32281 a
tx@Dict begin { 0.0 0.0 pop 2201.64139 47.4965 exch pop } PutCoor PutBegin
 end
 -166612 32281 a -166612 32281
a
tx@Dict begin { 5.0  18.93042 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 -166612 32281 a -167660 32613 a Fl(f\(x\))-166612 32281
y
tx@Dict begin  PutEnd  end
 -166612 32281 a -166612 32281 a
tx@Dict begin  PutEnd  end
 -166612 32281 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 2128.27794 -39.85538
1741.3116 -39.85538    /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1934.75787 -46.71503
1934.75787 0.0    /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
-166612 32281 a
tx@Dict begin { 1905.97342 -48.71214 } PutCoor PutBegin  end
 -166612 32281 a 0 0 1 TeXcolorrgb 922
x Fj(h)369 b Fk(=)f(0)p Fj(;)p Fk(40)p 0 TeXcolorgray
-166612 32281 a
tx@Dict begin  PutEnd  end
 -166612 32281 a -166612 32281 a
tx@Dict begin { 2098.75542 -48.8858 } PutCoor PutBegin  end
 -166612
32281 a 0 0 1 TeXcolorrgb 836 x Fj(p)-165959 33316 y
Fe(2)-165065 33117 y Fk(=)h(0)p Fj(;)p Fk(44)p 0 TeXcolorgray
-166612 32281 a
tx@Dict begin  PutEnd  end
 -166612 32281 a -166612 32281 a
tx@Dict begin { 1721.82674 -48.71214 } PutCoor PutBegin  end
 -166612
32281 a 0 0 1 TeXcolorrgb 836 x Fj(p)-165959 33316 y
Fe(1)-165065 33117 y Fk(=)g(0)p Fj(;)p Fk(36)p 0 TeXcolorgray
-166612 32281 a
tx@Dict begin  PutEnd  end
 -166612 32281 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.49019 0.49019 1  setrgbcolor
 [ 1934.75787 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 77101 40951 a
currentpoint initclip moveto
 77101 40951 a 19787 40951
a
 currentpoint currentpoint translate 1 0.38672 div 1 0.38672 div scale
neg exch neg exch translate
 19787 40951 a 42615 41896 45 7276 v 14557 41940 4567
45 v 19123 41940 23537 45 v 14557 48813 45 6874 v 0.92
TeXcolorgray 14601 48813 4478 6874 v 0 TeXcolorgray 16343
45834 a Fl(D)p 19079 48813 45 6874 v 19787 47868 a
 currentpoint currentpoint translate 0.35808 0.35808 scale neg exch
neg exch translate
 19787
47868 a 20221 47868 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 555.24466 a add def
/d 0.0 a add neg def /h 125.73116 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 20221 47868 a -109561 37834 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 1727.65744
 0 1172.41278  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 1172.41278  1727.65744  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -90.65147  def /maxTickline
35.07968  def /dT 6341265 abs 65536 div viceversa { neg } if def /DT
0.02 abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 4836.96849  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 4836.96849  mul cntTick add def x abs MinValue abs le { false {
x minTickline  moveto x maxTickline  lineto } { x tickstart STsize
mul  moveto x tickend STsize mul  lineto } ifelse } if } for } for
/dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 1727.65744 0.0 1172.41278 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
-109796 39179 a Fe(0)9640 b(0)p Fd(:)p Fe(02)9040 b(0)p
Fd(:)p Fe(04)g(0)p Fd(:)p Fe(06)g(0)p Fd(:)p Fe(08)g(0)p
Fd(:)p Fe(10)g(0)p Fd(:)p Fe(12)g(0)p Fd(:)p Fe(14)g(0)p
Fd(:)p Fe(16)g(0)p Fd(:)p Fe(18)f(0)p Fd(:)p Fe(20)h(0)p
Fd(:)p Fe(22)g(0)p Fd(:)p Fe(24)g(0)p Fd(:)p Fe(26)g(0)p
Fd(:)p Fe(28)g(0)p Fd(:)p Fe(30)g(0)p Fd(:)p Fe(32)g(0)p
Fd(:)p Fe(34)-183156 b(0)9640 b(0)p Fd(:)p Fe(02)9040
b(0)p Fd(:)p Fe(04)g(0)p Fd(:)p Fe(06)g(0)p Fd(:)p Fe(08)g(0)p
Fd(:)p Fe(10)g(0)p Fd(:)p Fe(12)g(0)p Fd(:)p Fe(14)g(0)p
Fd(:)p Fe(16)g(0)p Fd(:)p Fe(18)f(0)p Fd(:)p Fe(20)h(0)p
Fd(:)p Fe(22)g(0)p Fd(:)p Fe(24)-109561 37834 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 -109561
37834 a -109561 37834 a
tx@Dict begin { 1727.65744 35.07968 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 -109561 37834 a -109561 37834
a
tx@Dict begin { 5.0  0.0 0.0 0.0 140.  Uput UUput } PutCoor PutBegin
 end
 -109561 37834 a -109561 37834 a
tx@Dict begin  PutEnd  end
 -109561 37834 a -109561
37834 a
tx@Dict begin  PutEnd  end
 -109561 37834 a -109561 37834 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 -109561 37834
a -109561 37834 a
tx@Dict begin { 0.0 0.0 pop 1727.65744 35.07968 exch pop } PutCoor
PutBegin  end
 -109561 37834 a -109561 37834 a
tx@Dict begin { 5.0  18.93042 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 -109561
37834 a -110608 38166 a Fl(f\(x\))-109561 37834 y
tx@Dict begin  PutEnd  end
 -109561
37834 a -109561 37834 a
tx@Dict begin  PutEnd  end
 -109561 37834 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1692.96849 -39.85538
1209.24211 -39.85538    /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1451.1053 -46.71503 1451.1053
0.0    /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
-109561 37834 a
tx@Dict begin { 1421.80421 -48.36482 } PutCoor PutBegin  end
 -109561 37834 a 0 0 1 TeXcolorrgb 922
x Fj(h)369 b Fk(=)g(0)p Fj(;)p Fk(30)p 0 TeXcolorgray
-109561 37834 a
tx@Dict begin  PutEnd  end
 -109561 37834 a -109561 37834 a
tx@Dict begin { 1658.79617 -48.36482 } PutCoor PutBegin  end
 -109561
37834 a 0 0 1 TeXcolorrgb 836 x Fj(p)-108908 38869 y
Fe(2)-108013 38670 y Fk(=)g(0)p Fj(;)p Fk(35)p 0 TeXcolorgray
-109561 37834 a
tx@Dict begin  PutEnd  end
 -109561 37834 a -109561 37834 a
tx@Dict begin { 1179.7196 -48.36482 } PutCoor PutBegin  end
 -109561
37834 a 0 0 1 TeXcolorrgb 836 x Fj(p)-108908 38869 y
Fe(1)-108013 38670 y Fk(=)g(0)p Fj(;)p Fk(25)p 0 TeXcolorgray
-109561 37834 a
tx@Dict begin  PutEnd  end
 -109561 37834 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.49019 0.49019 1  setrgbcolor
 [ 1451.1053 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end


@endspecial 81684 47868 a
currentpoint initclip moveto
 81684 47868 a 19787 47868
a
 currentpoint currentpoint translate 1 0.35808 div 1 0.35808 div scale
neg exch neg exch translate
 19787 47868 a 42615 48813 45 6874 v 14557 48858 4567
45 v 19123 48858 23537 45 v 14557 56538 45 7681 v 0.92
TeXcolorgray 14601 56538 4478 7681 v 0 TeXcolorgray 16397
53155 a Fl(E)p 19079 56538 45 7681 v 19787 55593 a
 currentpoint currentpoint translate 0.41576 0.41576 scale neg exch
neg exch translate
 19787
55593 a 20221 55593 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 477.67426 a add def
/d 0.0 a add neg def /h 125.818 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 20221 55593 a -113972 45895 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 1689.94243
 0 1212.26817  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 1212.26817  1689.94243  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -87.6124  def /maxTickline
38.2056  def /dT 6341265 abs 65536 div viceversa { neg } if def /DT
0.02 abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 4836.96849  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 4836.96849  mul cntTick add def x abs MinValue abs le { false {
x minTickline  moveto x maxTickline  lineto } { x tickstart STsize
mul  moveto x tickend STsize mul  lineto } ifelse } if } for } for
/dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 1689.94243 0.0 1212.26817 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
-114207 47240 a Fe(0)9639 b(0)p Fd(:)p Fe(02)9040 b(0)p
Fd(:)p Fe(04)g(0)p Fd(:)p Fe(06)g(0)p Fd(:)p Fe(08)g(0)p
Fd(:)p Fe(10)g(0)p Fd(:)p Fe(12)g(0)p Fd(:)p Fe(14)g(0)p
Fd(:)p Fe(16)g(0)p Fd(:)p Fe(18)g(0)p Fd(:)p Fe(20)g(0)p
Fd(:)p Fe(22)g(0)p Fd(:)p Fe(24)f(0)p Fd(:)p Fe(26)h(0)p
Fd(:)p Fe(28)g(0)p Fd(:)p Fe(30)g(0)p Fd(:)p Fe(32)g(0)p
Fd(:)p Fe(34)-183155 b(0)9639 b(0)p Fd(:)p Fe(02)9040
b(0)p Fd(:)p Fe(04)g(0)p Fd(:)p Fe(06)g(0)p Fd(:)p Fe(08)g(0)p
Fd(:)p Fe(10)g(0)p Fd(:)p Fe(12)g(0)p Fd(:)p Fe(14)g(0)p
Fd(:)p Fe(16)g(0)p Fd(:)p Fe(18)g(0)p Fd(:)p Fe(20)g(0)p
Fd(:)p Fe(22)g(0)p Fd(:)p Fe(24)-113972 45895 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 -113972
45895 a -113972 45895 a
tx@Dict begin { 1689.94243 38.2056 pop 0.0 0.0 exch pop } PutCoor PutBegin
 end
 -113972 45895 a -113972 45895
a
tx@Dict begin { 5.0  0.0 0.0 0.0 140.  Uput UUput } PutCoor PutBegin
 end
 -113972 45895 a -113972 45895 a
tx@Dict begin  PutEnd  end
 -113972 45895 a -113972
45895 a
tx@Dict begin  PutEnd  end
 -113972 45895 a -113972 45895 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 -113972 45895
a -113972 45895 a
tx@Dict begin { 0.0 0.0 pop 1689.94243 38.2056 exch pop } PutCoor PutBegin
 end
 -113972 45895 a -113972 45895 a
tx@Dict begin { 5.0  18.93042 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 -113972
45895 a -115020 46227 a Fl(f\(x\))-113972 45895 y
tx@Dict begin  PutEnd  end
 -113972
45895 a -113972 45895 a
tx@Dict begin  PutEnd  end
 -113972 45895 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1596.20845 -39.85538
1306.00215 -39.85538    /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1451.1053 -46.71503 1451.1053
0.0    /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
-113972 45895 a
tx@Dict begin { 1421.80421 -48.36482 } PutCoor PutBegin  end
 -113972 45895 a 0 0 1 TeXcolorrgb 922
x Fj(h)368 b Fk(=)h(0)p Fj(;)p Fk(30)p 0 TeXcolorgray
-113972 45895 a
tx@Dict begin  PutEnd  end
 -113972 45895 a -113972 45895 a
tx@Dict begin { 1569.63818 -48.36482 } PutCoor PutBegin  end
 -113972
45895 a 0 0 1 TeXcolorrgb 836 x Fj(p)-113319 46930 y
Fe(2)-112425 46731 y Fk(=)g(0)p Fj(;)p Fk(33)p 0 TeXcolorgray
-113972 45895 a
tx@Dict begin  PutEnd  end
 -113972 45895 a -113972 45895 a
tx@Dict begin { 1274.63448 -48.36482 } PutCoor PutBegin  end
 -113972
45895 a 0 0 1 TeXcolorrgb 836 x Fj(p)-113319 46930 y
Fe(1)-112425 46731 y Fk(=)g(0)p Fj(;)p Fk(27)p 0 TeXcolorgray
-113972 45895 a
tx@Dict begin  PutEnd  end
 -113972 45895 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.49019 0.49019 1  setrgbcolor
 [ 1451.1053 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end


@endspecial 73097 55593 a
currentpoint initclip moveto
 73097 55593 a 19787 55593
a
 currentpoint currentpoint translate 1 0.41576 div 1 0.41576 div scale
neg exch neg exch translate
 19787 55593 a 42615 56538 45 7681 v 14557 56582 4567
45 v 19123 56582 23537 45 v 14557 64258 45 7677 v 0.92
TeXcolorgray 14601 64258 4478 7677 v 0 TeXcolorgray 16415
60877 a Fl(F)p 19079 64258 45 7677 v 19787 63313 a
 currentpoint currentpoint translate 0.41576 0.41576 scale neg exch
neg exch translate
 19787
63313 a 20221 63313 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 477.67426 a add def
/d 0.0 a add neg def /h 125.73116 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 20221 63313 a -167331 52798 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 2171.97125
 0 1694.297  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 1694.297  2171.97125  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -94.99301  def /maxTickline
30.73814  def /dT 6341265 abs 65536 div viceversa { neg } if def /DT
0.02 abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 4836.96849  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 4836.96849  mul cntTick add def x abs MinValue abs le { false {
x minTickline  moveto x maxTickline  lineto } { x tickstart STsize
mul  moveto x tickend STsize mul  lineto } ifelse } if } for } for
/dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 2171.97125 0.0 1694.297 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
-167566 54144 a Fe(0)9639 b(0)p Fd(:)p Fe(02)9040 b(0)p
Fd(:)p Fe(04)g(0)p Fd(:)p Fe(06)g(0)p Fd(:)p Fe(08)g(0)p
Fd(:)p Fe(10)g(0)p Fd(:)p Fe(12)g(0)p Fd(:)p Fe(14)g(0)p
Fd(:)p Fe(16)g(0)p Fd(:)p Fe(18)g(0)p Fd(:)p Fe(20)g(0)p
Fd(:)p Fe(22)g(0)p Fd(:)p Fe(24)g(0)p Fd(:)p Fe(26)g(0)p
Fd(:)p Fe(28)g(0)p Fd(:)p Fe(30)g(0)p Fd(:)p Fe(32)g(0)p
Fd(:)p Fe(34)g(0)p Fd(:)p Fe(36)g(0)p Fd(:)p Fe(38)f(0)p
Fd(:)p Fe(40)h(0)p Fd(:)p Fe(42)g(0)p Fd(:)p Fe(44)-236710
b(0)9639 b(0)p Fd(:)p Fe(02)9040 b(0)p Fd(:)p Fe(04)g(0)p
Fd(:)p Fe(06)g(0)p Fd(:)p Fe(08)g(0)p Fd(:)p Fe(10)g(0)p
Fd(:)p Fe(12)g(0)p Fd(:)p Fe(14)g(0)p Fd(:)p Fe(16)g(0)p
Fd(:)p Fe(18)g(0)p Fd(:)p Fe(20)g(0)p Fd(:)p Fe(22)g(0)p
Fd(:)p Fe(24)g(0)p Fd(:)p Fe(26)g(0)p Fd(:)p Fe(28)g(0)p
Fd(:)p Fe(30)g(0)p Fd(:)p Fe(32)g(0)p Fd(:)p Fe(34)-167331
52798 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 -167331 52798 a -167331 52798 a
tx@Dict begin { 2171.97125 30.73814 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 -167331 52798
a -167331 52798 a
tx@Dict begin { 5.0  0.0 0.0 0.0 140.  Uput UUput } PutCoor PutBegin
 end
 -167331 52798 a -167331 52798 a
tx@Dict begin  PutEnd  end
 -167331
52798 a -167331 52798 a
tx@Dict begin  PutEnd  end
 -167331 52798 a -167331 52798
a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 -167331 52798 a -167331 52798 a
tx@Dict begin { 0.0 0.0 pop 2171.97125 30.73814 exch pop } PutCoor
PutBegin  end
 -167331 52798 a -167331
52798 a
tx@Dict begin { 5.0  18.93042 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 -167331 52798 a -168379 53130 a Fl(f\(x\))-167331
52798 y
tx@Dict begin  PutEnd  end
 -167331 52798 a -167331 52798 a
tx@Dict begin  PutEnd  end
 -167331 52798
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1983.17479 -39.85538
1886.41475 -39.85538    /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1934.75787 -46.71503
1934.75787 0.0    /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial -167331 52798 a
tx@Dict begin { 1904.49728 -56.00594 } PutCoor PutBegin  end
 -167331 52798
a 0 0 1 TeXcolorrgb 923 x Fj(h)369 b Fk(=)f(0)p Fj(;)p
Fk(30)p 0 TeXcolorgray -167331 52798 a
tx@Dict begin  PutEnd  end
 -167331 52798
a -167331 52798 a
tx@Dict begin { 1961.77097 -48.36482 } PutCoor PutBegin  end
 -167331 52798 a 0 0 1 TeXcolorrgb 837
x Fj(p)-166678 53834 y Fe(2)-165784 53635 y Fk(=)h(0)p
Fj(;)p Fk(33)p 0 TeXcolorgray -167331 52798 a
tx@Dict begin  PutEnd  end
 -167331
52798 a -167331 52798 a
tx@Dict begin { 1846.48555 -48.36482 } PutCoor PutBegin  end
 -167331 52798 a 0 0 1 TeXcolorrgb
837 x Fj(p)-166678 53834 y Fe(1)-165784 53635 y Fk(=)g(0)p
Fj(;)p Fk(27)p 0 TeXcolorgray -167331 52798 a
tx@Dict begin  PutEnd  end
 -167331
52798 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.49019 0.49019 1  setrgbcolor
 [ 1934.75787 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 73097
63313 a
currentpoint initclip moveto
 73097 63313 a 19787 63313 a
 currentpoint currentpoint translate 1 0.41576 div 1 0.41576 div scale
neg exch neg exch translate
 19787 63313 a 42615
64258 45 7677 v 14557 64303 4567 45 v 19123 64303 23537
45 v 47992 4800 a Fg(___/1)p 1 0 0 TeXcolorrgb 47905
6792 a Ff(WS)g(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 70670 54804 45 v 0 TeXcolorgray
24746 81281 a Fl(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fm(WS)717 b(4.1)g(-)g(4)h(Linksh\344nder)c(-)
k(MC)g(-)f(BIFIE)p 0 TeXcolorgray -741 4800 a Fl(4.)p
0 TeXcolorgray 651 w(Bei)489 b(einer)f(Umfrage)i(in)e(einem)h(Bezirk)g
(w)-36 b(erden)488 b(500)i(P)-36 b(ersonen)488 b(b)36
b(efragt,)489 b(ob)g(sie)g(Links-)921 6792 y(h\344nder)753
b(sind.)j(Als)f(Ergebnis)f(der)g(Befragung)g(wird)h(das)f(95-\045-K)-36
b(on\034denzin)g(terv)-72 b(all)921 8784 y Fk([)8 b(0)p
Fj(;)p Fk(09;)221 b(0)p Fj(;)p Fk(15])526 b Fl(f\374r)c(den)g(An)-36
b(teil)522 b(der)g(Linksh\344nder)g(in)g(der)g(Bezirkszeitung)h(b)36
b(ekann)-36 b(tgege-)921 10776 y(b)36 b(en.)855 13322
y(W)-108 b(elc)-36 b(he)459 b(der)g(nac)-36 b(hstehenden)457
b(A)-36 b(ussagen)459 b(kannst)g(du)g(aufgrund)f(dieses)i(Ergebnisses)f
(t\344-)921 15314 y(tigen?)434 b(Kreuze)f(die)h(zutre\033ende\(n\))d(A)
-36 b(ussage\(n\))433 b(an.)p 1062 16354 44260 45 v 1062
19417 45 3064 v 1770 18214 a(Ungef\344hr)h(60)g(P)-36
b(ersonen)433 b(hab)36 b(en)433 b(angegeb)36 b(en,)434
b(Linksh\344nder)f(zu)g(sein.)p 42912 19417 V 1 0 0 TeXcolorrgb
43621 18218 a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 19417 V 1062 19461 44260 45 v 1062
24598 45 5137 v 1770 21403 a Fl(H\344tte)h(man)f(10.000)j(P)-36
b(ersonen)433 b(b)36 b(efragt,)434 b(w)-36 b(\344re)434
b(das)g(95-\045-K)-36 b(on\034denzin)g(terv)-72 b(all)1770
23394 y(sc)-36 b(hm\344ler)434 b(gew)-36 b(orden.)p 42912
24598 V 1 0 0 TeXcolorrgb 43621 22362 a Fc(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 24598
V 1062 24642 44260 45 v 1062 29697 45 5056 v 1770 26502
a Fl(Das)435 b(K)-36 b(on\034denzin)g(terv)-72 b(all)433
b(w)-36 b(\344re)434 b(breiter,)f(w)-36 b(enn)433 b(der)g(An)-36
b(teil)434 b(der)f(Linksh\344nder)1770 28494 y(in)h(der)f(Umfrage)h
(kleiner)h(gew)-36 b(esen)434 b(w)-36 b(\344re.)p 42912
29697 V 45277 29697 V 1062 29741 44260 45 v 1062 34612
45 4872 v 1770 31601 a(Der)346 b(An)-36 b(teil)346 b(der)f
(Linksh\344nder)f(im)i(gesam)-36 b(ten)346 b(Bezirk)g(liegt)g
(jedenfalls)h(zwisc)-36 b(hen)1770 33593 y(9\045)434
b(und)f(15\045.)p 42912 34612 V 45277 34612 V 1062 34657
44260 45 v 1062 39535 45 4878 v 1770 36598 a(Das)i(en)-36
b(tsprec)g(hende)431 b(99-\045-K)-36 b(on\034denzin)g(terv)-72
b(all)433 b(ist)h(breiter)f(als)h(das)g(95-\045-)1770
38590 y(K)-36 b(on\034denzin)g(terv)-72 b(all.)p 42912
39535 V 1 0 0 TeXcolorrgb 43621 37428 a Fc(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 39535
V 1062 39579 44260 45 v 47992 4800 a Fg(___/1)p 1 0 0
TeXcolorrgb 47905 6792 a Ff(WS)369 b(4.1)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 43607 54804 45
v 0 TeXcolorgray 24746 81281 a Fl(3)p 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fm(WS)717 b(4.1)g(-)g(5)h(Essgew)-60
b(ohnheiten)715 b(-)i(O)-60 b(A)718 b(-)g(BIFIE)p 0 TeXcolorgray
-741 4800 a Fl(5.)p 0 TeXcolorgray 651 w(Um)376 b(die)h(Essgew)-36
b(ohnheiten)376 b(v)-36 b(on)377 b(Jugendlic)-36 b(hen)375
b(zu)h(un)-36 b(tersuc)g(hen,)375 b(wurden)g(400)j(Jugend-)921
6792 y(lic)-36 b(he)434 b(eines)f(Bezirks)i(zuf\344llig)g(ausgew)-36
b(\344hlt)434 b(und)f(b)36 b(efragt.)921 9338 y(Dab)g(ei)434
b(gab)36 b(en)434 b(240)h(der)e(b)36 b(efragten)433 b(Jugendlic)-36
b(hen)433 b(an,)h(t\344glic)-36 b(h)434 b(zu)f(fr\374hst\374c)-36
b(k)g(en.)921 11883 y(Berec)g(hne)584 b(aufgrund)h(des)f(in)h(der)g
(Umfrage)h(erhob)36 b(enen)584 b(Stic)-36 b(hprob)36
b(energebnisses)583 b(ein)921 13875 y(99-\045-K)-36 b(on\034denzin)g
(terv)-72 b(all)648 b(f\374r)g(den)f(tats\344c)-36 b(hlic)g(hen)648
b(\(relativ)-36 b(en\))648 b(An)-36 b(teil)648 b Fj(p)g
Fl(derjenigen)887 15867 y(Jugendlic)-36 b(hen)433 b(dieses)h(Bezirks,)g
(die)g(t\344glic)-36 b(h)434 b(fr\374hst\374c)-36 b(k)g(en.)p
1 0 0 TeXcolorrgb 921 20404 a(Die)397 b(Zufallsv)-72
b(ariable)398 b Fj(X)501 b Fl(gibt)397 b(die)f(Anzahl)g(der)g
(Jugendlic)-36 b(hen,)396 b(die)g(t\344glic)-36 b(h)397
b(fr\374hst\374c)-36 b(k)g(en,)921 22396 y(an.)921 24388
y Fj(h)369 b Fk(=)3552 23865 y Fe(240)p 3552 24078 1412
45 v 3552 24846 a(400)5465 24388 y Fk(=)g(0)p Fj(;)p
Fk(6)888 26380 y(2)296 b Fi(\001)f Fk(\002\()p Fj(z)59
b Fk(\))295 b Fi(\000)g Fk(1)370 b(=)e Fj(D)36 b Fk(\()p
Fj(z)59 b Fk(\))369 b(=)g(0)p Fj(;)p Fk(99)h Fi(\))g
Fj(z)428 b Fi(\031)369 b Fk(2)p Fj(;)p Fk(58)921 28989
y Fj(p)1574 29188 y Fe(1)p Fd(;)p Fe(2)3200 28989 y Fk(=)g(0)p
Fj(;)p Fk(6)296 b Fi(\006)f Fk(2)p Fj(;)p Fk(58)i Fi(\001)11138
26911 y Fh(s)p 12245 26911 4549 45 v 12378 28091 a Fk(0)p
Fj(;)p Fk(6)f Fi(\001)f Fk(0)p Fj(;)p Fk(4)p 12378 28679
4284 45 v 13544 29901 a(400)17163 28989 y Fi(\))369 b
Fj(p)19513 29188 y Fe(1)20408 28989 y Fi(\031)g Fk(0)p
Fj(;)p Fk(536;)221 b Fj(p)26006 29188 y Fe(2)26903 28989
y Fi(\031)369 b Fk(0)p Fj(;)p Fk(664)921 31295 y Fl(99-\045-K)-36
b(on\034denzin)g(terv)-72 b(all:)433 b Fk([)8 b(0)p Fj(;)p
Fk(536;)221 b(0)p Fj(;)p Fk(664])438 b Fl(bzw.)c Fk(0)p
Fj(;)p Fk(6)296 b Fi(\006)f Fk(0)p Fj(;)p Fk(064)921
35832 y Fl(Ein)399 b(Punkt)f(ist)h(genau)g(dann)f(zu)h(geb)36
b(en,)399 b(w)-36 b(enn)398 b(das)h(K)-36 b(on\034denzin)g(terv)-72
b(all)399 b(ric)-36 b(h)g(tig)399 b(b)36 b(erec)-36 b(h-)921
37824 y(net)433 b(wurde.)874 39816 y(T)-108 b(oleranzin)-36
b(terv)-72 b(all)435 b(f\374r)e(die)h(un)-36 b(tere)432
b(Grenze:)h Fk([)8 b(0)p Fj(;)p Fk(53;)221 b(0)p Fj(;)p
Fk(54])874 41808 y Fl(T)-108 b(oleranzin)-36 b(terv)-72
b(all)435 b(f\374r)e(die)h(ob)36 b(ere)433 b(Grenze:)g
Fk([)8 b(0)p Fj(;)p Fk(66;)221 b(0)p Fj(;)p Fk(67])p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
4800 a Fg(___/1)p 1 0 0 TeXcolorrgb 47905 6792 a Ff(WS)369
b(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 45615 54804 45 v 0 TeXcolorgray 24746 81281 a Fl(4)p
0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fm(WS)671 b(4.1)g(-)h(6)g(V)-179
b(ergleic)-60 b(h)671 b(zw)-60 b(eier)672 b(K)-60 b(on\034denzin)g
(terv)-120 b(alle)668 b(-)k(L)-179 b(T)671 b(-)h(Ma-)-2331
4515 y(tura)717 b(2015/16)g(-)h(Haupttermin)p 0 TeXcolorgray
-741 7823 a Fl(6.)p 0 TeXcolorgray 651 w(A)-36 b(uf)516
b(der)f(Grundlage)g(einer)g(Zufallsstic)-36 b(hprob)36
b(e)516 b(der)f(Gr\366\377e)h Fj(n)32725 8022 y Fe(1)33767
7823 y Fl(gibt)f(ein)h(Mein)-36 b(ungsfor-)921 9815 y(sc)g(h)g
(ungsinstitut)655 b(f\374r)h(den)f(aktuellen)i(Stimmenan)-36
b(teil)656 b(einer)g(p)36 b(olitisc)-36 b(hen)657 b(P)-36
b(artei)656 b(das)921 11806 y(K)-36 b(on\034denzin)g(terv)-72
b(all)429 b([0,23;)j(0,29])f(an.)g(Das)f(zugeh\366rige)g(K)-36
b(on\034denzniv)g(eau)429 b(\(die)h(zugeh\366-)921 13798
y(rige)425 b(Sic)-36 b(herheit\))423 b(b)36 b(etr\344gt)425
b Fj(\015)15226 13997 y Fe(1)15751 13798 y Fl(.)g(Ein)f(anderes)g
(Institut)g(b)36 b(efragt)425 b Fj(n)33603 13997 y Fe(2)34553
13798 y Fl(zuf\344llig)i(ausgew)-36 b(\344hlte)855 15790
y(W)-108 b(ahlb)36 b(erec)-36 b(h)g(tigte)438 b(und)f(gibt)i(als)g(en)
-36 b(tsprec)g(hendes)436 b(K)-36 b(on\034denzin)g(terv)-72
b(all)439 b(mit)f(dem)g(K)-36 b(on\034-)921 17782 y(denzniv)g(eau)471
b(\(der)g(zugeh\366rigen)h(Sic)-36 b(herheit\))471 b
Fj(\015)24908 17981 y Fe(2)25905 17782 y Fl(das)h(In)-36
b(terv)-72 b(all)472 b Fk([)8 b(0)p Fj(;)p Fk(24;)695
b(0)p Fj(;)p Fk(28])473 b Fl(an.)f(Dab)36 b(ei)887 19774
y(v)-36 b(erw)g(enden)433 b(b)36 b(eide)433 b(Institute)g(dieselb)36
b(e)434 b(Berec)-36 b(hn)g(ungsmetho)36 b(de.)921 24311
y(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36 b(k)g(en)358
b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357 b(Ankreuzen)g(der)h(jew)-36
b(eils)360 b(ric)-36 b(h)g(tigen)921 26303 y(Satzteile)434
b(so,)g(dass)g(eine)f(mathematisc)-36 b(h)434 b(k)-36
b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36 b(tsteh)g(t!)921
29794 y(Un)g(ter)540 b(der)g(Annahme)f(v)-36 b(on)541
b Fj(n)16395 29993 y Fe(1)17472 29794 y Fk(=)551 b Fj(n)19811
29993 y Fe(2)20878 29794 y Fl(kann)540 b(man)h(aus)f(den)g(Angab)36
b(en)p 38003 29794 3150 45 v 41625 29746 a(1)41153 29794
y Fb(\015)p 42747 29794 V 921 31786 a Fl(folgern;)921
33777 y(un)-36 b(ter)573 b(der)h(Annahme)g(v)-36 b(on)575
b Fj(\015)16178 33976 y Fe(1)17312 33777 y Fk(=)609 b
Fj(\015)19608 33976 y Fe(2)20708 33777 y Fl(kann)574
b(man)h(aus)f(den)g(Angab)36 b(en)p 38003 33777 V 41625
33729 a(2)41153 33777 y Fb(\015)p 42747 33777 V 921 35769
a Fl(folgern.)p 0 TeXcolorgray 0 TeXcolorgray 12794 37142
8367 45 v 12794 40226 45 3085 v 16651 38923 a(1)16180
38971 y Fb(\015)p 21115 40226 V 12794 40270 8367 45 v
12794 43529 45 3260 v 13502 42326 a Fj(\015)14177 42525
y Fe(1)15071 42326 y Fj(<)369 b(\015)17127 42525 y Fe(2)p
18750 43529 V 19459 42232 a Fc(2)p 21115 43529 V 12794
43574 8367 45 v 12794 46833 45 3260 v 13502 45630 a Fj(\015)14177
45829 y Fe(1)15071 45630 y Fk(=)g Fj(\015)17127 45829
y Fe(2)p 18750 46833 V 19459 45535 a Fc(2)p 21115 46833
V 12794 46877 8367 45 v 12794 50136 45 3260 v 13502 48933
a Fj(\015)14177 49132 y Fe(1)15071 48933 y Fj(>)g(\015)17127
49132 y Fe(2)p 18750 50136 V 1 0 0 TeXcolorrgb 19459
48839 a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 21115 50136 V 12794 50181 8367 45 v 0 TeXcolorgray
0 TeXcolorgray 30427 37142 8137 45 v 30427 40226 45 3085
v 34170 38923 a Fl(2)33698 38971 y Fb(\015)p 38518 40226
V 30427 40270 8137 45 v 30427 43529 45 3260 v 31135 42326
a Fj(n)31911 42525 y Fe(1)32806 42326 y Fj(<)g(n)34963
42525 y Fe(2)p 36153 43529 V 1 0 0 TeXcolorrgb 36862
42232 a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 38518 43529 V 30427 43574 8137 45 v 30427
46833 45 3260 v 31135 45630 a Fj(n)31911 45829 y Fe(1)32806
45630 y Fk(=)g Fj(n)34963 45829 y Fe(2)p 36153 46833
V 36862 45535 a Fc(2)p 38518 46833 V 30427 46877 8137
45 v 30427 50136 45 3260 v 31135 48933 a Fj(n)31911 49132
y Fe(1)32806 48933 y Fj(>)g(n)34963 49132 y Fe(2)p 36153
50136 V 36862 48839 a Fc(2)p 38518 50136 V 30427 50181
8137 45 v 47992 7823 a Fg(___/1)p 1 0 0 TeXcolorrgb 47905
9815 a Ff(WS)g(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 54209 54804 45 v 0 TeXcolorgray
24746 81281 a Fl(5)p 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fm(WS)570 b(4.1)f(-)i(7)f(Mein)-60
b(ungsb)60 b(efragung)566 b(-)571 b(MC)g(-)f(BIFIE)h(-)f(K)-60
b(omp)60 b(etenz-)-2331 4515 y(c)-60 b(hec)g(k)718 b(2016)p
0 TeXcolorgray -741 7823 a Fl(7.)p 0 TeXcolorgray 651
w(Bei)493 b(einer)g(Mein)-36 b(ungsb)36 b(efragung)492
b(wurden)g(500)h(zuf\344llig)i(ausgew)-36 b(\344hlte)493
b(Bew)-36 b(ohnerInnen)921 9815 y(einer)389 b(Stadt)g(zu)h(ihrer)f
(Mein)-36 b(ung)389 b(b)36 b(ez\374glic)-36 b(h)389 b(der)h(Einric)-36
b(h)g(tung)388 b(einer)h(F)-108 b(u\377g\344ngerzone)390
b(im)921 11806 y(Stadtzen)-36 b(trum)441 b(b)36 b(efragt.)445
b(Es)e(sprac)-36 b(hen)443 b(sic)-36 b(h)443 b(60)217
b(\045)444 b(der)f(Befragten)h(f\374r)f(die)h(Einric)-36
b(h)g(tung)921 13798 y(einer)433 b(solc)-36 b(hen)434
b(F)-108 b(u\377g\344ngerzone)433 b(aus,)h(40)217 b(\045)434
b(sprac)-36 b(hen)433 b(sic)-36 b(h)433 b(dagegen)h(aus.)873
16344 y(Als)391 b(95-\045-K)-36 b(on\034denzin)g(terv)-72
b(all)390 b(f\374r)g(den)g(An)-36 b(teil)391 b(der)f(Bew)-36
b(ohnerInnen)390 b(dieser)g(Stadt,)g(die)921 18336 y(die)415
b(Einric)-36 b(h)g(tung)413 b(einer)i(F)-108 b(u\377g\344ngerzone)414
b(im)h(Stadtzen)-36 b(trum)413 b(b)36 b(ef\374rw)-36
b(orten,)415 b(erh\344lt)f(man)921 20328 y(mit)434 b(Normalappro)-36
b(ximation)435 b(das)e(In)-36 b(terv)-72 b(all)434 b
Fk([)8 b(55)p Fj(;)p Fk(7)221 b(\045;)g(64)p Fj(;)p Fk(3)g(\045])5
b Fl(.)921 24865 y(Kreuze)433 b(die)h(b)36 b(eiden)433
b(zutre\033enden)e(A)-36 b(ussagen)434 b(an.)p 1062 25832
44260 45 v 1062 32879 45 7047 v 1770 27692 a(Das)365
b(K)-36 b(on\034denzin)g(terv)-72 b(all)364 b(w)-36 b(\344re)365
b(breiter,)f(w)-36 b(enn)364 b(man)g(einen)g(gr\366\377eren)g(Stic)-36
b(hpro-)1770 29684 y(b)36 b(en)-36 b(umfang)433 b(gew)-36
b(\344hlt)434 b(h\344tte)e(und)g(der)g(relativ)-36 b(e)434
b(An)-36 b(teil)433 b(der)g(Bef\374rw)-36 b(orterInnen)1770
31675 y(gleic)g(h)435 b(gro\377)f(geblieb)36 b(en)434
b(w)-36 b(\344re.)p 42912 32879 V 45277 32879 V 1062
32923 44260 45 v 1062 38052 45 5129 v 1770 34783 a(Das)435
b(K)-36 b(on\034denzin)g(terv)-72 b(all)433 b(w)-36 b(\344re)434
b(breiter,)f(w)-36 b(enn)433 b(man)h(ein)f(h\366heres)g(K)-36
b(on\034denz-)1770 36775 y(niv)g(eau)434 b(\(eine)g(h\366here)f(Sic)-36
b(herheit\))432 b(gew)-36 b(\344hlt)435 b(h\344tte.)p
42912 38052 V 1 0 0 TeXcolorrgb 43621 35819 a Fc(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
38052 V 1062 38096 44260 45 v 1062 43151 45 5056 v 1770
39956 a Fl(Das)g(K)-36 b(on\034denzin)g(terv)-72 b(all)433
b(w)-36 b(\344re)434 b(breiter,)f(w)-36 b(enn)433 b(man)h(die)f
(Befragung)i(in)e(einer)1770 41948 y(gr\366\377eren)h(Stadt)f(durc)-36
b(hgef\374hrt)432 b(h\344tte.)p 42912 43151 V 45277 43151
V 1062 43195 44260 45 v 1062 48250 45 5056 v 1770 45055
a(Das)359 b(K)-36 b(on\034denzin)g(terv)-72 b(all)357
b(w)-36 b(\344re)358 b(breiter,)g(w)-36 b(enn)357 b(der)g(An)-36
b(teil)357 b(der)h(Bef\374rw)-36 b(orterIn-)1770 47047
y(nen)433 b(in)h(der)f(Stic)-36 b(hprob)36 b(e)432 b(gr\366\377er)i
(gew)-36 b(esen)434 b(w)-36 b(\344re.)p 42912 48250 V
45277 48250 V 1062 48295 44260 45 v 1062 55342 45 7047
v 1770 50155 a(Das)435 b(K)-36 b(on\034denzin)g(terv)-72
b(all)433 b(w)-36 b(\344re)434 b(breiter,)f(w)-36 b(enn)433
b(der)g(An)-36 b(teil)434 b(der)f(Bef\374rw)-36 b(orte-)1770
52146 y(rInnen)451 b(und)f(der)h(An)-36 b(teil)452 b(der)e(GegnerInnen)
g(in)i(der)f(Stic)-36 b(hprob)36 b(e)450 b(gleic)-36
b(h)452 b(gro\377)1770 54138 y(gew)-36 b(esen)434 b(w)-36
b(\344ren.)p 42912 55342 V 1 0 0 TeXcolorrgb 43621 52150
a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45277 55342 V 1062 55386 44260 45 v 47992 7823 a Fg(___/1)p
1 0 0 TeXcolorrgb 47905 9815 a Ff(WS)369 b(4.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 59414
54804 45 v 0 TeXcolorgray 24746 81281 a Fl(6)p 0 TeXcolorgray
eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1794 a Fm(WS)740 b(4.1)g(-)h(8)f(500-Euro-Sc)-60
b(heine)740 b(in)f(\326sterreic)-60 b(h)740 b(-)h(O)-60
b(A)741 b(-)g(Matura)-2385 4817 y(2015/16)718 b(-)f(Neb)60
b(en)-60 b(termin)716 b(1)p 0 TeXcolorgray -741 8124
a Fl(8.)p 0 TeXcolorgray 651 w(Bei)528 b(einer)g(repr\344sen)-36
b(tativ)g(en)527 b(Umfrage)h(in)g(\326sterreic)-36 b(h)527
b(geh)-36 b(t)527 b(es)h(um)f(die)h(in)f(Diskussion)921
10116 y(stehende)437 b(Absc)-36 b(ha\033ung)438 b(der)g(500-Euro-Sc)-36
b(heine.)438 b(Es)g(sprec)-36 b(hen)437 b(sic)-36 b(h)439
b(234)g(v)-36 b(on)439 b(1000)h(Be-)921 12108 y(fragten)434
b(f\374r)f(eine)h(Absc)-36 b(ha\033ung)432 b(aus.)921
16645 y(Geb)36 b(en)527 b(Sie)i(ein)f(symmetrisc)-36
b(hes)529 b(95-\045-K)-36 b(on\034denzin)g(terv)-72 b(all)527
b(f\374r)i(den)e(relativ)-36 b(en)529 b(An)-36 b(teil)921
18637 y(der)707 b(\326sterreic)-36 b(herinnen)706 b(und)h(\326sterreic)
-36 b(her,)708 b(die)g(eine)g(Absc)-36 b(ha\033ung)706
b(der)i(500-Euro-)921 20629 y(Sc)-36 b(heine)433 b(in)g(\326sterreic)
-36 b(h)433 b(b)36 b(ef\374rw)-36 b(orten,)433 b(an.)p
1 0 0 TeXcolorrgb 921 23174 a Fj(n)369 b Fk(=)g(1000)p
Fl(,)435 b Fj(h)369 b Fk(=)g(0)p Fj(;)p Fk(234)921 26343
y(0)p Fj(;)p Fk(234)297 b Fi(\006)e Fk(1)p Fj(;)p Fk(96)i
Fi(\001)8779 24185 y Fh(s)p 9886 24185 10436 45 v 10019
25445 a Fk(0)p Fj(;)p Fk(234)f Fi(\001)g Fk(\(1)f Fi(\000)g
Fk(0)p Fj(;)p Fk(234\))p 10019 26033 10171 45 v 13803
27254 a(1000)20691 26343 y Fi(\031)369 b Fk(0)p Fj(;)p
Fk(234)297 b Fi(\006)e Fk(0)p Fj(;)p Fk(026)370 b Fi(\))g
Fk([)8 b(0)p Fj(;)p Fk(208;)657 b(0)p Fj(;)p Fk(206])921
31033 y Fl(L\366sungssc)-36 b(hl\374ssel:)921 33579 y(Ein)368
b(Punkt)g(f\374r)g(ein)h(k)-36 b(orrektes)369 b(In)-36
b(terv)-72 b(all.)369 b(Andere)f(Sc)-36 b(hreib)g(w)g(eisen)367
b(des)i(Ergebnisses)f(\(als)921 35571 y(Bruc)-36 b(h)433
b(o)36 b(der)433 b(in)h(Prozen)-36 b(t\))432 b(sind)i(eb)36
b(enfalls)434 b(als)g(ric)-36 b(h)g(tig)434 b(zu)f(w)-36
b(erten.)874 38116 y(T)-108 b(oleranzin)-36 b(terv)-72
b(all)435 b(f\374r)e(den)g(un)-36 b(teren)432 b(W)-108
b(ert:)434 b Fk([)8 b(0)p Fj(;)p Fk(20;)656 b(0)p Fj(;)p
Fk(21])874 40661 y Fl(T)-108 b(oleranzin)-36 b(terv)-72
b(all)435 b(f\374r)e(den)g(ob)36 b(eren)433 b(W)-108
b(ert:)434 b Fk([)8 b(0)p Fj(;)p Fk(26;)656 b(0)p Fj(;)p
Fk(27])921 43207 y Fl(Die)608 b(A)-36 b(ufgab)36 b(e)608
b(ist)f(auc)-36 b(h)607 b(dann)g(als)h(ric)-36 b(h)g(tig)607
b(gel\366st)i(zu)e(w)-36 b(erten,)607 b(w)-36 b(enn)607
b(b)36 b(ei)608 b(k)-36 b(orrektem)873 45199 y(Ansatz)433
b(das)h(Ergebnis)f(aufgrund)g(eines)h(Rec)-36 b(henfehlers)433
b(nic)-36 b(h)g(t)433 b(ric)-36 b(h)g(tig)433 b(ist.)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
8124 a Fg(___/1)p 1 0 0 TeXcolorrgb 47905 10116 a Ff(WS)369
b(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 48932 54804 45 v 0 TeXcolorgray 24746 81281 a Fl(7)p
0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fm(WS)717 b(4.1)g(-)g(9)h(Blutgrupp)60
b(e)714 b(-)k(O)-60 b(A)717 b(-)h(Matura)f(NT)g(2)h(15/16)p
0 TeXcolorgray -741 4907 a Fl(9.)p 0 TeXcolorgray 651
w(In)345 b(Europa)f(b)36 b(etr\344gt)345 b(die)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit,)345 b(mit)g(Blutgrupp)36
b(e)344 b Fj(B)412 b Fl(geb)36 b(oren)345 b(zu)f(w)-36
b(erden,)921 6899 y(ca.)383 b(0,14.)g(F)-27 b(\374r)381
b(eine)h(Un)-36 b(tersuc)g(h)g(ung)379 b(wurden)i Fj(n)h
Fl(in)g(Europa)f(geb)36 b(orene)382 b(P)-36 b(ersonen)381
b(zuf\344llig)921 8891 y(ausgew)-36 b(\344hlt.)394 b(Die)g(Zufallsv)-72
b(ariable)395 b Fj(X)498 b Fl(b)36 b(esc)-36 b(hreibt)392
b(die)h(Anzahl)g(der)g(P)-36 b(ersonen)392 b(mit)h(Blut-)921
10882 y(grupp)36 b(e)326 b Fj(B)67 b Fl(.)327 b(Die)g(V)-108
b(erteilung)326 b(v)-36 b(on)327 b Fj(X)431 b Fl(kann)326
b(durc)-36 b(h)325 b(eine)i(Normalv)-36 b(erteilung)327
b(appro)-36 b(ximiert)874 12874 y(w)g(erden,)433 b(deren)g(Dic)-36
b(h)g(tefunktion)434 b(in)f(der)g(nac)-36 b(hstehenden)432
b(Abbildung)h(dargestellt)h(ist.)921 35947 y
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 369.87991 a add def
/d 0.0 a add neg def /h 182.10179 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921 35947
a -11047 33428 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 22.7497 T 14 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.4  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 574.12971 0.0 136.57104 0.0    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.4  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 22.7497 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 40 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.4  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 136.57104 304.84598 136.57104 0.0    /Lineto /lineto load
def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def
} if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.4  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 22.76184 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  136.57104 0.0 159.33289 0.0 0.5 14.22636
6.25963 6.25963 tx@CoilDict begin ZigZag end  /Lineto /lineto load
def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def
} if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 17637 w @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 318.66577  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 318.66577  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 159.3521  def /dT 1491720 abs 65536 div viceversa
{ neg } if def /DT 4. abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 5.69046  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 5.69046  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 318.66577
0.0 0.0 0.0    /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 6120
34774 a Fe(28)1579 b(32)h(36)g(40)f(44)h(48)g(52)f(56)h(60)f(64)h(68)g
(72)f(76)h(80)-11047 33428 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 -11047 33428 a -11047 33428
a
tx@Dict begin { 477.99866 159.3521 pop 159.33289 0.0 exch pop } PutCoor
PutBegin  end
 -11047 33428 a -11047 33428 a
tx@Dict begin { 5.0  6.67703 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 -11047 33428 a -11417
33714 a Fj(x)-11047 33428 y
tx@Dict begin  PutEnd  end
 -11047 33428 a -11047 33428
a
tx@Dict begin  PutEnd  end
 -11047 33428 a -11047 33428 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 -11047 33428 a -11047
33428 a
tx@Dict begin { 159.33289 0.0 pop 477.99866 159.3521 exch pop } PutCoor
PutBegin  end
 -11047 33428 a -11047 33428 a
tx@Dict begin { 5.0  0.0 0.0 0.0 -40.  Uput UUput } PutCoor PutBegin
 end
 -11047 33428 a
-11047 33428 a
tx@Dict begin  PutEnd  end
 -11047 33428 a -11047 33428 a
tx@Dict begin  PutEnd  end
 -11047 33428
a 15118 w @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 159.3521  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 159.3521  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 341.42761  def /dT 2984125 abs 65536 div viceversa
{ neg } if def /DT 0.02 abs viceversa { neg } if def /subTNo 2 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0
0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 2276.22046  mul cntTick add def x abs MaxValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet
exch def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add {
/dx exch def /x dx log OffSet add 2276.22046  mul cntTick add def x
abs MinValue abs le { false { x minTickline exch moveto x maxTickline
exch lineto } { x tickstart STsize mul exch moveto x tickend STsize
mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth SLW
subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 159.3521
0.0 0.0    /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2826 33714 a Fe(0)1623 28587
y(0)p Fd(;)q Fe(02)1623 23547 y(0)p Fd(;)q Fe(04)1623
18506 y(0)p Fd(;)q Fe(06)-11047 33428 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 -11047 33428
a -11047 33428 a
tx@Dict begin { 477.99866 159.3521 pop 136.57104 0.0 exch pop } PutCoor
PutBegin  end
 -11047 33428 a -11047 33428 a
tx@Dict begin { 5.0  0.0 0.0 0.0 140.  Uput UUput } PutCoor PutBegin
 end
 -11047
33428 a -11047 33428 a
tx@Dict begin  PutEnd  end
 -11047 33428 a -11047 33428 a
tx@Dict begin  PutEnd  end

-11047 33428 a -11047 33428 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 -11047 33428 a -11047 33428
a
tx@Dict begin { 136.57104 0.0 pop 477.99866 159.3521 exch pop } PutCoor
PutBegin  end
 -11047 33428 a -11047 33428 a
tx@Dict begin { 5.0  23.51282 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 -11047 33428 a -12349
33760 a Fj(')p Fk(\()p Fj(x)p Fk(\))-11047 33428 y
tx@Dict begin  PutEnd  end
 -11047
33428 a -11047 33428 a
tx@Dict begin  PutEnd  end
 -11047 33428 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x 28 def /x1 85 def /dx x1 x sub 199
div def /F@pstplot (EXP((-(x-56.0)^(2.0))/(7.0^(2.0)*2.0))/(abs(7.0)*sqrt(3.141592653589793*2.0)))
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 5.69046 mul F@pstplot
2276.22046 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x
x dx add def xy  dup 1.e30 2276.22046 mul gt { moveto } { dup -1.e30
2276.22046 mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit
} if repeat ps@Exit not { /x x1 def xy  dup 1.e30 2276.22046 mul gt
{ moveto } { dup -1.e30 2276.22046 mul lt { moveto } { L } ifelse }
ifelse  } if  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial -11047 33428 a
tx@Dict begin { 352.80853 102.42575 } PutCoor PutBegin  end
 -11047 33428 a -172 x Fd(')-11047
33428 y
tx@Dict begin  PutEnd  end
 -11047 33428 a 41865 35947 a
currentpoint initclip moveto
 41865 35947 a 921
38492 a Fl(Sc)-36 b(h\344tze)502 b(anhand)f(der)h(obigen)h(Abbildung)f
(den)f(Stic)-36 b(hprob)36 b(en)-36 b(umfang)502 b Fj(n)g
Fl(dieser)h(Un)-36 b(ter-)921 40484 y(suc)g(h)g(ung.)921
45021 y Fj(n)369 b Fi(\031)p 1 0 0 TeXcolorrgb 369 w
Fk(400)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
1 0 0 TeXcolorrgb 874 49559 a Fl(T)-108 b(oleranzin)-36
b(terv)-72 b(all:)435 b Fk([)8 b(385;)221 b(415])p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4907
a Fg(___/1)p 1 0 0 TeXcolorrgb 47905 6899 a Ff(WS)369
b(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 53366 54804 45 v 0 TeXcolorgray 24746 81281 a Fl(8)p
0 TeXcolorgray eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fm(WS)537 b(4.1)h(-)g(10)g(W)-179
b(ahlprognose)535 b(-)j(MC)g(-)h(Matura)e(2016/17)h(-)g(Haupt-)-2331
4622 y(termin)p 0 TeXcolorgray -1391 7929 a Fl(10.)p
0 TeXcolorgray 651 w(Um)487 b(den)f(Stimmenan)-36 b(teil)486
b(einer)g(b)36 b(estimm)-36 b(ten)486 b(P)-36 b(artei)487
b Fj(A)g Fl(in)f(der)h(Grundgesam)-36 b(theit)485 b(zu)921
9921 y(sc)-36 b(h\344tzen,)535 b(wird)h(eine)f(zuf\344llig)i(aus)f
(allen)g(W)-108 b(ahlb)36 b(erec)-36 b(h)g(tigten)534
b(ausgew)-36 b(\344hlte)537 b(P)-36 b(ersonen-)921 11913
y(grupp)36 b(e)433 b(b)36 b(efragt.)921 16450 y(Die)725
b(Umfrage)g(ergibt)f(f\374r)g(den)g(Stimmenan)-36 b(teil)723
b(ein)h(95-\045-K)-36 b(on\034denzin)g(terv)-72 b(all)724
b(v)-36 b(on)921 18442 y Fk([)8 b(9)p Fj(;)p Fk(8)221
b(\045;)g(12)p Fj(;)p Fk(2)g(\045])p Fl(.)855 22979 y(W)-108
b(elc)-36 b(he)553 b(der)g(folgenden)h(A)-36 b(ussagen)553
b(sind)g(in)h(diesem)f(Zusammenhang)g(auf)h(jeden)f(F)-108
b(all)921 24971 y(k)-36 b(orrekt?)434 b(Kreuze)g(die)f(b)36
b(eiden)433 b(zutre\033enden)f(A)-36 b(ussagen)433 b(an!)p
1062 27930 44260 45 v 1062 32985 45 5056 v 1770 29790
a(Die)i(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)434
b(dass)f(eine)h(zuf\344llig)h(ausgew)-36 b(\344hlte)434
b(w)-36 b(ahlb)36 b(erec)-36 b(h)g(tigte)1770 31782 y(P)g(erson)434
b(die)f(P)-36 b(artei)434 b Fj(A)g Fl(w)-36 b(\344hlt,)434
b(liegt)g(sic)-36 b(her)433 b(zwisc)-36 b(hen)434 b(9,8)217
b(\045)434 b(und)f(12,2)217 b(\045.)p 42912 32985 V 45277
32985 V 1062 33029 44260 45 v 1062 38165 45 5137 v 1770
34970 a(Ein)434 b(anhand)f(der)g(erhob)36 b(enen)432
b(Daten)i(ermitteltes)f(90-\045-K)-36 b(on\034denzin)g(terv)-72
b(all)1770 36962 y(h\344tte)434 b(eine)f(geringere)h(In)-36
b(terv)-72 b(allbreite.)p 42912 38165 V 1 0 0 TeXcolorrgb
43621 35929 a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 38165 V 1062 38210 44260 45 v 1062
45338 45 7129 v 1770 40151 a Fl(Un)-36 b(ter)393 b(der)g(V)-108
b(oraussetzung,)393 b(dass)g(der)g(An)-36 b(teil)394
b(der)f(P)-36 b(artei-)p Fj(A)p Fl(-W)g(\344hler/innen)392
b(in)1770 42143 y(der)367 b(Stic)-36 b(hprob)36 b(e)365
b(gleic)-36 b(h)367 b(bleibt,)g(w\374rde)f(eine)h(V)-108
b(ergr\366\377erung)367 b(der)f(Stic)-36 b(hprob)36 b(e)365
b(zu)1770 44135 y(einer)434 b(V)-108 b(erkleinerung)433
b(des)g(95-\045-K)-36 b(on\034denzin)g(terv)-72 b(alls)433
b(f\374hren.)p 42912 45338 V 1 0 0 TeXcolorrgb 43621
42106 a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45277 45338 V 1062 45382 44260 45 v 1062
50253 45 4872 v 1770 47242 a Fl(95)333 b(v)-36 b(on)332
b(100)g(P)-36 b(ersonen)331 b(geb)36 b(en)332 b(an,)g(die)f(P)-36
b(artei)332 b Fj(A)g Fl(mit)g(einer)f(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit)1770 49234 y(v)g(on)434 b(11)217
b(\045)434 b(zu)g(w)-36 b(\344hlen.)p 42912 50253 V 45277
50253 V 1062 50298 44260 45 v 1062 55353 45 5056 v 1770
52157 a(Die)333 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)333
b(dass)f(die)h(P)-36 b(artei)332 b Fj(A)g Fl(einen)g(Stimmenan)-36
b(teil)332 b(v)-36 b(on)333 b(mehr)1770 54149 y(als)435
b(12,2)217 b(\045)434 b(erh\344lt,)g(b)36 b(etr\344gt)434
b(5)217 b(\045.)p 42912 55353 V 45277 55353 V 1062 55397
44260 45 v 47992 7929 a Fg(___/1)p 1 0 0 TeXcolorrgb
47905 9921 a Ff(WS)369 b(4.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 59425 54804 45 v 0 TeXcolorgray
24746 81281 a Fl(9)p 0 TeXcolorgray eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a Fm(WS)678 b(4.1)h(-)g(11)g(K)-60
b(on\034denzin)g(terv)-120 b(all)676 b(-)j(O)-60 b(A)680
b(-)f(Matura)f(NT)h(1)g(16/17)p 0 TeXcolorgray -1391
4907 a Fl(11.)p 0 TeXcolorgray 651 w(F)-27 b(\374r)475
b(eine)g(W)-108 b(ahlprognose)476 b(wird)g(aus)g(allen)g(W)-108
b(ahlb)36 b(erec)-36 b(h)g(tigten)475 b(eine)g(Zufallsstic)-36
b(hprob)36 b(e)921 6899 y(ausgew)-36 b(\344hlt.)435 b(V)-108
b(on)433 b(400)h(b)36 b(efragten)434 b(P)-36 b(ersonen)433
b(geb)36 b(en)433 b(80)h(an,)g(die)g(P)-36 b(artei)434
b Fj(Y)722 b Fl(zu)433 b(w)-36 b(\344hlen.)921 9444 y(Gib)555
b(ein)g(symmetrisc)-36 b(hes)555 b Fk(95)378 b Fi(\000)h
Fk(\045)p Fi(\000)p Fl(K)-36 b(on\034denzin)g(terv)-72
b(all)554 b(f\374r)h(den)g(Stimmenan)-36 b(teil)555 b(der)921
11436 y(P)-36 b(artei)434 b Fj(Y)722 b Fl(in)433 b(der)g(Grundgesam)-36
b(theit)432 b(an!)p 1 0 0 TeXcolorrgb 921 13981 a Fj(n)369
b Fk(=)g(400)p Fl(,)435 b Fj(h)369 b Fk(=)f(0)p Fj(;)p
Fk(2)921 16527 y(0)p Fj(;)p Fk(2)296 b Fi(\006)f Fk(1)p
Fj(;)p Fk(96)i Fi(\001)7478 15112 y Fh(q)p 8585 15112
4866 45 v 8718 15907 a Fe(0)p Fd(;)p Fe(2)p Fa(\001)p
Fe(\(1)p Fa(\000)p Fe(0)p Fd(;)p Fe(2\))p 8718 16217
4601 45 v 10312 16985 a(400)13820 16527 y Fk(=)368 b(0)p
Fj(;)p Fk(2)297 b Fi(\006)e Fk(0)p Fj(;)p Fk(0392)371
b Fi(\))e Fk([)8 b(0)p Fj(;)p Fk(1608;)221 b(0)p Fj(;)p
Fk(2392])874 19072 y Fl(T)-108 b(oleranzin)-36 b(terv)-72
b(all)435 b(f\374r)e(den)g(un)-36 b(teren)432 b(W)-108
b(ert:)434 b Fk([)8 b(0)p Fj(;)p Fk(160;)221 b(0)p Fj(;)p
Fk(165])874 21618 y Fl(T)-108 b(oleranzin)-36 b(terv)-72
b(all)435 b(f\374r)e(den)g(un)-36 b(teren)432 b(W)-108
b(ert:)434 b Fk([)8 b(0)p Fj(;)p Fk(239;)221 b(0)p Fj(;)p
Fk(243])p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 4907 a Fg(___/1)p 1 0 0 TeXcolorrgb 47905 6899
a Ff(WS)369 b(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 25425 54804 45 v -2331 30726 a Fm(WS)706
b(4.1)g(-)h(12)g(-)g(MA)-179 b(T)706 b(-)h(Sic)-60 b(herheit)705
b(eines)h(K)-60 b(on\034denzin)g(terv)-120 b(alls)704
b(-)-2331 33749 y(O)-60 b(A)718 b(-)g(Matura)f(2016/17)g(2.)g(NT)p
0 TeXcolorgray -1391 37056 a Fl(12.)p 0 TeXcolorgray
651 w(Die)559 b(Abf\374llanlagen)h(eines)e(Betrieb)36
b(es)559 b(m)-36 b(\374ssen)557 b(in)i(b)36 b(estimm)-36
b(ten)557 b(Zeitabst\344nden)h(\374b)36 b(er-)921 39048
y(pr\374ft)433 b(und)f(ev)-36 b(en)g(tuell)434 b(neu)f(eingestellt)h(w)
-36 b(erden.)921 41593 y(Nac)g(h)443 b(der)g(Einstellung)h(einer)f
(Abf\374llanlage)i(sind)e(v)-36 b(on)443 b(1)217 b(000)445
b(\374b)36 b(erpr\374ften)442 b(P)-36 b(ac)g(kungen)888
43585 y(30)588 b(nic)-36 b(h)g(t)586 b(ordn)-36 b(ungsgem\344\377)586
b(b)36 b(ef\374llt.)588 b(F)-27 b(\374r)586 b(den)g(un)-36
b(b)36 b(ekann)-36 b(ten)585 b(relativ)-36 b(en)587 b(An)-36
b(teil)587 b Fj(p)g Fl(der)921 45577 y(nic)-36 b(h)g(t)451
b(ordn)-36 b(ungsgem\344\377)452 b(b)36 b(ef\374llten)451
b(P)-36 b(ac)g(kungen)452 b(wird)g(v)-36 b(om)452 b(Betrieb)g(das)f
(symmetrisc)-36 b(he)921 47569 y(K)g(on\034denzin)g(terv)-72
b(all)433 b Fk([)8 b(0)p Fj(;)p Fk(02;)221 b(0)p Fj(;)p
Fk(04])437 b Fl(angegeb)36 b(en.)921 50114 y(Ermittle)371
b(un)-36 b(ter)370 b(V)-108 b(erw)-36 b(endung)369 b(einer)i(die)g
(Binomialv)-36 b(erteilung)372 b(appro)-36 b(ximierenden)371
b(Nor-)921 52106 y(malv)-36 b(erteilung)434 b(die)g(Sic)-36
b(herheit)433 b(dieses)g(K)-36 b(on\034denzin)g(terv)-72
b(alls!)p 1 0 0 TeXcolorrgb 921 56644 a(M\366glic)-36
b(he)434 b(V)-108 b(orgehensw)-36 b(eise:)921 59189 y
Fj(n)369 b Fk(=)g(1)221 b(000)p Fl(,)436 b Fj(h)368 b
Fk(=)10245 58666 y Fe(30)p 9696 58879 2039 45 v 9696
59647 a(1)157 b(000)12236 59189 y Fk(=)369 b(0)p Fj(;)p
Fk(03)435 b Fl(In)-36 b(terv)-72 b(allbreite)433 b(des)h(K)-36
b(on\034denzin)g(terv)-72 b(alls)217 b(=)g(0,02)921 61734
y(aus)434 b Fj(z)354 b Fi(\001)4863 60320 y Fh(q)p 5970
60320 3546 45 v 6103 61114 a Fd(h)p Fa(\001)p Fe(\(1)p
Fa(\000)p Fd(h)p Fe(\))p 6103 61424 3280 45 v 7458 62192
a Fd(n)9885 61734 y Fk(=)368 b(0)p Fj(;)p Fk(01)435 b
Fl(folgt:)g Fj(z)429 b Fi(\031)369 b Fk(1)p Fj(;)p Fk(85)435
b Fl(mit)e Fk(\010\(1)p Fj(;)p Fk(85\))371 b Fi(\031)e
Fk(0)p Fj(;)p Fk(9678)921 64280 y Fi(\))g Fj(\015)441
b Fk(=)369 b(2)295 b Fi(\001)h Fk(\010\(1)p Fj(;)p Fk(85\))g
Fi(\000)f Fk(1)370 b Fi(\031)f Fk(0)p Fj(;)p Fk(9356)921
66825 y Fl(Somit)434 b(liegt)g(die)f(Sic)-36 b(herheit)433
b(dieses)h(K)-36 b(on\034denzin)g(terv)-72 b(alls)433
b(b)36 b(ei)434 b(ca.)g(93,56)217 b(\045.)874 69371 y(T)-108
b(oleranzin)-36 b(terv)-72 b(all:)435 b Fk([)8 b(93)221
b(\045;)444 b(94)221 b(\045])p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 37056 a Fg(___/1)p 1 0 0
TeXcolorrgb 47905 39048 a Ff(WS)369 b(4.1)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 73178 54804 45
v 0 TeXcolorgray 24421 81281 a Fl(10)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
