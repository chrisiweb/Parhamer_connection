%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS 2.1/WS 2.1 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:49:45 2017
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ LMMathSymbols10-Regular LMRoman10-Regular LMRoman8-Regular wasy10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS 2.1/WS 2.1 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0849
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE3B67D0FF6359D1B6C1C6DA4220428777EA791A503CDE266
386B24E0D7FC0C19F54D39D2B9223D466810564615CF6EBF5A75BEC8F6DDDF38
26F6A75F7C9A433ABB0C95B150D21DBB43878E3EF527976A3A2433047A05623D
54F22D062F633C08A3EBDF22FEFA476B92D1B05B8667CF563F5CFD60228D5707
0FA2674ECBFB8D84E1693A53C8FDF62D7AAA93C5E291B366328456055AB39744
62E418808C864862A624D51147593FA66F656DE32F0A6D14551909E87C1878BC
8C38F973CA6ED504AB95C5232A86199F0971D63BA2B6E42AACAD07309D3FA1B0
B4DC7B0B7A1E225A29E0BE605F7666CFA1FB2E33B45FCE46E65A3063D20C89F0
02A65A8F27269304B2FD29362CC34A55237A47E95A0FC3EEADB33D31ECD8E0AC
580CC771816F957927E478ADADF3F08F776212489AB8643021282F0E5E5D715A
0C7F6ABB859E71146FB6B54708441DE5A1A15CDC101649ED5241797978CAA625
ECA039378072D700B7ED1A88CDAF356316A3A5FD512011D852471A6B811313B6
72C91FB2409AA3AC801C9EC5E9937515BB1652912E47860D1872553D3ABD0750
A19ACDDBBCBA8F33F6876AE56C3971BBA5E041530530976F86E22BB5E1E9F6CF
61F84BA56F451D286D9CA6EA70B550C6C76AA6447DB823512BF8CE4BE803D98B
8AAC7194DC167B860D11F457D38051E42A02E93C36011EBEBFEC49395A0009DE
125A1369B96CCE8D7F8AEF58EC30E679D4CA61E0738653E48D7264221B1DD3BA
A02A8A699B484ABCE24CD1AF3A59675D4C9231D05CE544F28F0FBF03EE64F0B3
CDB0F637A780F171569B54FCDC5DBB024C300E3ACD4D750969A1E44933F3F30A
43FCCD4D479EA6F712D0D2E111798A4F5C2645B07604B2CFB184F144198AAC57
C153F81503F8F02F744CAA05DD8DB89F009E05634116F4986AB9BD7D57379858
89055D5D7E6A4122438A487E80FEA6A8CF43E12C6EBF197B14D8B11BECE9F886
CF61BBA2F2E1B4A528380FC7668DE35A0070A316F416282CAA2499BB35FD4B04
CB21E49C37910228354FD34C9E4832B6192C2D5E744C5816DA78088CBAE5B48B
0FE51403B036417BDCD56EF666E791909CC17C6686765DD257C6F3C2F1EB5862
E4EE5B8B37D0E953515452180148427D9220F79DD702CDADFBD7FE3798E48A66
2BF2C8329EA71AEF470D20F3E230773AF8E330E277589BFA87D113F088BAE624
2454B25635AA192D895E322B307CF4BBBCCDA4B28E42D98EF4B9DA966D0666F7
ED791775A73EA9C57D5B56F76C41C4A0F9F899ECE93275AC76D34FEEAE3EE8C5
2D8ACD21E53E316D376037AF8853507AE344F4170B80EB4F0E4042F6463FF4F6
7C471DD7FA8E5166BB9F379D8B1F6C4FDFDA54F6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /Box put
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890B0BBF10075D53739F7E84CEE95B40C3DB68D5
6E9847E37B7920412068C3DE2065A77281345980956AFAD312499818890B454F
5DD8C92695818BA4DAFEBCDD4D268763515CE077A64C5F3AB384A6DFD7DD9641
FCDA0A3344B3A14F82D478B4BE7BFC2822A4D67AD3FD07B11589B93842066528
1E51D954D7E6019F6921DB9B00ED303B4B8F557EAC7A0B0340A268B0DDB25B3E
BE0982129B0D3416CA5D07ADC689CAA181270B8141F9D0F60C60F156CB305E5B
E71D9A5D5FB3216BFB66284FCABF6D74564D1288EA99D3FCF6F29C3AA690A596
02C0AD2BB29A2D457C66031E5571A1454758212EB4D053F4C28FF629FA94DBF2
9677AC4B92C4DF5C7FFDE31A8F2D6F9477896C11CBA890DD464C9231B1C350E8
E8CEE17F2E0F5D10416F7D7FBC6085E9BE09E692951EA7B93A9F49CD458476E0
A380E1D122F275093ECFD398FCA6D714187CC12A2B16318F9E1D2B0E9EC134A2
C4D2674AA68D2E7EDBCCA383
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A31644BF123DA78DD615C4287ED7DD43B6
79CAF0EB2F9F428C431683A41C2C61A429E3DC0D87D76AB6294CF8CC9918A6A4
6873A1769ACCF25B59CB4365AC451FE1D956E1254970C706438805E25284C7CA
AE679F2B7C58BE9909CBFCD273EF5617183CFA64757627D2D567877FDDED97FD
7C9E73DE4D6D4ED370EFAAB4E52F30E55B902ACC35DE87E70DE8EDFE7D803CB9
B4F8D58998C2ED6B93CF62F8E991B754899CE46B900DC93C5A58EADB30BCFFA3
A71EF23D13FDAFE72642854A3340E64896CC6DEA0F7E3AF4C39EE4E68AA31889
A372F02266FE65ABCDAA308258FCDDD13DCBB18E462B56F956B94CE97E870122
A0A46CCFD6B4158BE06C768C73F0377CE3F21E030748189C553B9F62C83765B0
149330C96EC3496F9F2F9B289307D7E0C33BCB7023200FC3221F12B5FDE01011
87BBF9960E56CAA899438C90156BBF2B14596F131B71830D84172E7CD7C05B25
85A53C7CB0DA5729FD6CA218A1CB03FCB945FC24376A45F2DE0C21378769921A
72E46589CC08EA87EECFDF36B819B07306C448777163A723A9E71F504DA5D447
AFE8CFDBD88089FA4802F449B477BE528C3667F06EC5479B0824B87C47EEAF1A
0A23941B8257A2A5EC3F63FD62DD09890F4DF33AA1E70376A9CE8E4B6C4211CB
FCF9709AA29144F3A40001AB98BE816619AC543753969AC5B540ED39E51F5869
98342686761A7C070EA75140331D7A0DD5731F0E395A6CB0412028C2FABE2E9D
C3B57F412A5CC05FA7599948E6B8B50BCF16EF9825F6B20090E4D6280C528375
4EBCB42B38B7ED6634AFE0B2C249699E212509817638845B5604BB526053ACC5
C0FF6206B2953C9350E57657B374600DA75FB8D5B00DB7BA78FBFC5B95E167C6
CFB9A2275128DDCE62E56BBF35D257EAE99D627535F8E5ACB4A4D3E1E6D9D24F
9CDD9F80028D37C9CB4067A28D41E879AF98739929DDADA413EE35894A6A5B14
CBB136548C4B00E47FA77732DBEA89E10E98CAED50DEC8AB2536A447F7D46D4C
63A99114EFD23133E2FB8243221A2E8AB1CB892DE716CA34CE544502ABC9526D
F48B0762B57F8AAF2E120D5DCD70D140B498BA43863C45D94E6642DD04CBDC31
0087B2FC75CAD18883113AAADF162B023352069DD1BDEF229E16DE8D008A4CCC
BC317B47BE42354627EC77B91564A034FF2F3B60508154B08981B62A2E9974E0
E9A46A3AAC7F87B1FD8620A5A695852F2FF71CD16FA34635B526265F1A635254
75398013F04B49F67164F03610FAAC41229306EA37B9DF6E8DEB1C6C2BDEC9E6
EADDEF6E99BC482289181D89CF74F9995B40E5C55FBC81DC7686AE740022F764
C49FE9B49A108931E3CB077A9C53C764DBB47C789C795E97A537F013BC2BC786
BDA32DCD5A856714ACD5D2BB98B011650B2A5D8B881D6854DA373B002BA279C6
0649618BE2D9B1E10DECA9090F66F089E4D7C6D8087016FCB998B95F194BC9B6
E95BA14850E251A4EFF1C66B148E036AFB7FF007F18AAB4CAA2CEDB34F65F327
D58731A241E11468BBA16BA3494A4E80FF16410385FF17A1444B2D1596343B25
64124D648B1E0955CDCCE027BC9F127F79622FEB3A6781181EAD3F02101364EC
FB540C0B2473F20BF05A8315BBC31178398C4DF5CA482F899FBE7654F08D93E0
29994A566CDDC866CD6A1CF5DA076F94B31AE4EDE8237218A12D5E9DEEB9EB26
7CE99EEF40ED1A5A247FA60A89A2EF6AB95CAE1FB119500650FAD0C18B03564E
B61A0D261812A3EDE5BF402542BD215541E3A478F0933EB129EAE44484E084BD
DE7D2CEEF5E54E2CBE14A20F56A27B70B9C7DCBE9300AA2826EF2D6E38C9EE32
60EAFD1C1B7E9CAE9EE810B4C7934D08C44E8A3EDCADDF8FCD6E289C19A7056D
A716700F391FBA6480099E8276173D443884AC0600329C607B7521B1C1C0F575
F4A979FF04F1B3C17864FBC8B92B77DFD068E53CC9111E290624DC39FB79FEFA
C07D2DA7DEC9642694ACAD9C980FC6F26BBC4B98AA0F9624D8678DDD10596E3F
55CAF2F4419B78FF39B929627428C3A6736D8777332C017A9411BF924DE0E40A
24B0E1B797094DDD8EA17A7A281D007F1F6EE3CB17E0FDB167D05506A96F7296
047E208835176F3154E8757A1C21857556EE412F4434E8062A9F9101ADD125A3
2195B8CB98C9B19235FE35E0DB6F1FBF31ABF448C9261B75BF1EB61260DEF86E
BD69F26D77A20B25BE10094D4C196E26034F2577471EF7CDEFD087BAFFC6C93A
F8FE338E70387B4F1BA2119F24E0AC14D6C89D60DBE2E17850FEEDA72C8A882C
F268AA853D036C7633EF1DA737CF40C5F170EDDCB3B5518E28C971EBFB43D842
99D336736B15B05591122AE51D1486E1F2FA31E9C9379F2B3440AEB83539438B
B83563DD61FA39B66B4DDCE39F3E590823590CD7C75BBE8B58EDC2F2ECB1E684
00C6706D29DF0BCA1B5C649CF209DAFA7619F27D165264869A4D5EC574FFF640
76FD6BE210178957E86D8B7303BF3EBF660879783E563E5FD42AFA2E2C523957
8183B066D5A65BAE4AB038087E40257C1FE6F484941D7387A2F92A69CAD3FFA9
AE559D3043D7128482D9ED343F64C6CAC65D8218E75ECDA7292A0F2FBB4A60FC
7025B92E55DD5D5897F13EDBB3356F9E2B9DE1FE09288B3217E226202117CFBE
3DE2C6DBFB0BB25BB13A128CECEF9D4D51001EF6E00C9CBA158724AC4352EBBD
4085CC2897C588A09FDB14647F570BBEE55DC7F2AED102A1134FD48A8C8480D9
137F359E6287C5369650A06422FB0B3B29ACF32F3DDCB4DF8B5AC385B0E99329
08C1050CB6DB39BB10C1F4D149305E6D442E7D8B58020A01C8A417B670A41F2E
B01A30F2AE8C73D83360E849EC83AABD17E084BFD0A3606D42EFBDAD44BB98A7
440207EC9597D409FBD1E6B2429DCC30846293BF3060E9CAE54A81D21AAF3BFA
BAFE773F095BA4D5A0F9607E25DC3137296CE1D8E2B8FB0DF6B5FB6D5C415495
635BDFF798B08041C566CF1D783EC7B15B4330A37FC9C1BF23CE45EF19471FC7
2472E528053EC041E396333C90480C82F2B80E740D5ACBCB0882F35AE8A3E3B1
FE3903A941EA20902C10B0C3E73DF25106052700653849C02805E1C56026FA71
302E87A45A22ED99B04853D66E5A22B56F79FEF73918B7CBCC65CA7DB3E410DB
1AB7AAF9B483A4DB3B333B158517971542915D70737B3F22C6A831A9821624AD
61DC8A0DE77A1F4BA087E7E54F4602592AEB49D4AEA40B81B7B653D90E146B6A
AA318E165C8353C9CC1F0927D73E21ECE52D9C3EA6DE3CE70352D2ABEC8E3DD4
CCF226A6829DF67E37A242C5E0FDF6AFCEBB0621A8ADE7553CCA3725FB707ED9
526ED054C471B82AA52B6C090D4C6C776B5610954A6E5471F8D8344C07DB8E45
BE34098668A5FB9DB4D49F3FC041809ACDA455C62A76B51D730D8B124BC6B76D
049B17736CD9E28DA73506142B6AA54FDFAC9050332212CD062A6B96FB18552E
DB51B991870A6E579DC68B52DF7F950CE1BDB15548CAD879752198F3A2141F1B
77DCD2B7DC83E662C19DDE6A5207ACEA1E0C78CBAA7A47C5F3D0C745262B88DD
F05E7E3C1682E8E90674B781EF298DBA6CB1758D22EE8A7680B01DAC100D3748
CA1BC047117E5E9AFBA7839CAE44964C974F08DB4C947F074F5B3644BB3F93D7
F96770C73499AC0AFC3E20F0BBDFA01502C9A1C30E9DF357529D99BD156464C5
D64ED5C7BE1C1DB9852E09F62BB22A3A51BEC8BB98DE63D6763E8225E9ACAEE7
9D813C62B96A7CD2247A269F53AC59E3E886BC531628CD9FDA87188135B3D6CE
0F2CC637A8F2EEEA4C05990EB23142620576551DC347BCB2302D5D5FCBBB04D7
7DC4955E84168F9AC6EA2E25C8C38B8A36B337C6925E0CB5BD963CB791E28CB5
4B37655D9DC3BCF1F660E8262CD10AA45C67562303483314B5B71B07C7F8C598
D226227FA8C178C10D90A2F26A639CF016B843ACE6B352A0B859AAEB15A52403
FBD562D284EFBCAF3553CC5A757FA50D53E6AF18AF09A1B9C4792EEAB445547F
698E0DC00CC722B65CBD277C5DF3B4B1275090B71A4D4B3B7961171D67F8F6B2
6EBA8AB37B5C35DB16D8B776255132DE99F3F4B7530A72C49503FC4D5C84291E
0740415B51E89FC1E4887D1912C7FFB218D23A08172BC11116C8028E77D0FE5A
DDEF0931C9EFBA2B76B78F6A90C0E44F8236F55938C3CE5A9EEAA8379EE7D879
D13C3E2D204512584029A7E941946AB7D45710ED4396C6C9816137832A56C48F
C89066B9FF63B80A84B36F75AD6D455B580A4BBE440839A54B385C9E4571C466
AF1C084F04AF31AB83EAEDA618C70F735DF746994341A37D17E8AE636315CE9D
47B1A020296D23FD0A59D6AD28E34849187D767EDE855B520ADFA07DACBEC45B
BF0C25F00DD94C798C8CF098F26C8AF48B458803BB26487C1391BD9A5B51F33D
505FE3ED168109F1F39AC5C3357E48CB38906275AAE8D8CBE9ACD7740ECA4A47
A985E2E16051FA4178F6557DFC8FEF287CB787EFF59E86B4A72A199F16F2C24D
D5A6AD833A4BA6F96FE67FE603F3DE0BC536C9A2A04B73CB2E4EBCF70184C5E1
D9C9E3DF6D0AB7F44E679E8518074632F6BB0639E2AA1DBBF34708FDB8092FE9
343274DA68CD751A72052D4FD983EB8C149E081333B2F0E0A54134F91D7B4ACA
E954658CFEB3FF04F3F9F42C57124BF3FC0BA485E050DF883E4B2767E236BE21
9FEC94EF94D9F2096E76F1C558F40812444C6F0F4DA995C8C03162375AEF5BBD
6BC3B250625E4B5C2B2BF9879F853460339AEFAF4FCC58EA396431BD4F95BD5F
6DA31DDC13D860842BAEC5EB5C217FC685C06C5AE447C991137584534EFDDE0F
7BBB3FAEB89D737F9FDD69B4EDADB476A1E588A8C8499A8917CAB23F00BC124F
D93096D1B365B754E3D03ABC8B3DA3F4F6C2DB54682F72DFB7E665EF36DBD3B8
9455CA9BFE2FE8ED26203A2B353C3C9C7AFCAA09793C8A74DA25396CBC1484DB
565607911498AE56FF61F2AAB48F1B954211AF0A38D6CAB3BCD6697C7E56C29D
62A325714D3FE8C3DC019CC01E8738CCA2596AB05857E4B8F9D6695EF332BD3B
AA9EE551A4B142DDC13600318F45CBE1BB1A6E0CCF1CD79182D3B235B457CA9F
B713822F634A96C5D1923710DB4B98B063FA07A5FFE26234C70FF6EF6CA2A853
FE0F76AB1ED5B97A1060D13911F4AC44FA5358837F7CC6ED863F0FCCE5F79065
D7AF0839F444CFE8AC2F2FF46DB2B95247BD8261F39BA12AD5E50433EF517BD0
FD04C73FBF1058A8907ED43B4C144BDAA3C4E6BE9637FC8BD3E94D6257BE1B7B
FB179A4479EBA92EF2EE4E7B73DD295274E1D416F7AD7338FB3116A3CFEB9E33
8EF0D7B0FA721D7D11990750232AB90B60DEF84924B838AE79C6689275697225
1698C73A825EAF77F8C38CA8468E616771E6C9093D7E3479B0DF3F3160EA2059
B5F7BFD55E90340B4244BADD57DA5902E2C08D00E814009234E2A36EFBD854F8
68BC9301D33D0203F8D1F59EBCE526B06B610DB1B028D29F838A52AEC3BAA982
56BFC6A306ACDD86AEFA6F4F2AFCE55BF27AFC96D93AE476AB15324149043E71
3261671835DDF163EA8D3DA7CB1F0514DEECC225301813E4ECE6D689B0A04229
04F6D18F0C917584B33328194369F279C2BC0AB0DE3399077B7B70CC98D0A48C
C3094DF0B0684B67355C6EB30D38D487488A571F1CF7A9B7059A5EE86616FE30
23CDF8F2E3205A114D00FC4CF71B761ADD91A6BCF7C05A89281F249262CD6AF1
53137676F314A99D9AFBE313E2AA15FE976027B15E24EC8B8568C9A8EF54596F
8369028CCB95F05432204FE04146BB1305B99EDED39F538634EEF10C25C9B7E3
3B9A352EE96996D562365F3A29A6EFCBBFA10436C2670E973829FA620B9F3959
6012BD51E12300D2723BBACFE26853F0DF9F735BBE092E906E7424CC62AA9E61
A47258A0C9B8A990E3816F4E659F4CBCAC34142F4E33BA61DA1E50699E9F9DC0
CE656DF4B213F43E7E565C737532B16B0C2B1D11EE91D3DB86C76F5AE4C45D60
27A5512B2575F297A3642756D6993E0A44C2CE5D847E287F626833F09C276B27
6DDB0942D1DC868D5D8E175FE24522C85756DD642C71981CAFD81C1F42AFA8C2
997FA29BE0799496032ABD4C90337D159DCC4D25137E5D930E39116966310179
79602FDD434E2B372C62ED1D3675B796C51D9B63E42FC960795D58B121D827A7
9616273B7D5CFC97271C1CEEEB978E51957475B5717AC1BB4AEDD87AD40DD2A0
7140EB171E7A77F97F4E08C8EA82E98341B6BA6B08D0C858E8A717B266D35EEA
7CE9A86DF45930BE230E064E0F041BBE58F704B8CCE162736E6ED003B2B28CB7
AC9D65C96C0CF9FBE043EF7C2EE7F2A4AA9EF432736C21DD746948AD4434F8B4
1FD8FB187D24F232C6D89B727961E07A5E23628762E804EDDD045FA702F68652
A4BAE83E7521A0080D2E917EC3E48A45B3380636F06F3DF2CFAFEAFC185D96FB
5BAFD9B0819AB0E0CE1270A2FC838A0752230464AF01944BA2D55B6E014C8A06
8F6391E116B004BFFA6FF61693FAF103AAC05C4BE35E62AE2E8112544E98172F
185FC890116846F6EC00754B2523E1F4D80365A42A4BA653D5C26C224A560EE9
58725486FC8998530774A9C670A2833CC6DCE45D2E4898BBD96830A115057B28
6684443EA619FD6C53B2CFEF57A40DA8E0AD1268514C4D5B05FC33F83790ECFD
7641DF3FB94289E2A53F99BE0709F542F3EE5DFB1C1A0AB40E808537744BDEE5
A514A1991A1E999AF47447E6CCA2AF60BB09D4DB7B7AE82FEB500C2C5AF14271
97EE6637F539123745CA8C9C790D8BDC394D0A708366442076E3AFF67832F893
9A22B3C92ED58214B16128298249B942C3780BD59AF9047B918FC3EB793647EE
AB531A76DEDF92FCA9AF51CF0D7C637494E68E34391E2542903355658BD278E6
769617C80447775505F87BDCC02101AFF38BA1917A296C2BA20D729D08C8BA63
18DFD495A3A35CF506520D6F9C1CB39C155A4C76D86C83882ED85FFB721A5FCB
A3AC1C1F74451501E3735C1238FB68520A56BBDED554E575018D9D617695F2C2
29917B9785404865783BE784755194506853E5F91BA5DA79D7AB6BB91A0A6D6F
B96ED1A9AC8C2008E542C0DB0FF95359E700BE2DC30F248D1BEFA38DFC797226
2BC7A660A0E705AB881B6769D029A128DAAB2CE7CE111FF1EBC254C5ABE3BF84
FBFC0F2486C3B71F1385A51C41D1CE3A5A016BE702C59FF664AD52FF3CFCE4A3
43427908A426265F1A635254753900106289415FF0132F33733F3EC5C349D20D
4CB20FE200C72037F7B8FD8B789AEFE644F929E005007E343886CE610E61CF5F
7C8B1546B7A57002CB5631ACEA34EABE2912BE0F0FAB91E7C13E732A0D860018
6A7C0EFF97191FB81A8A756D9FEAB2BE6324E5BECB7546B03B3D79D8B53FFDFB
E812757E453A5CE29E71571B42A5315A276D8A838D9BB19483ABA2F30A278ECC
E7431D2565FF9CBE0556EBAA06F7663541F1F104231A20ED1C32F029AA4CF988
10DA3CEB40E498C201D4B151D532F29BCDCA2032A6A51764CF5E131CE693731B
0C499FCB8CD67A6A3EB64FF89954F5D0CB096CEFC35760E9F293085CB54AF3B8
0A0D81EE204F09E4ADBE5BB5BDE8D8B0F73B4A0A0EA963852F2DB69C1C1CE080
F69090CE23089253F14C053F9AE8D3DD9B34A60A1DF76873BD1D5812330D6A34
8186B1A73996DAEF61BAB889712EB1595CA37FF9328866423172E5AD2D05BC5D
32B277D4AD6A149F67857320F710B77B654FA8C6FAE137AB0AEA1045EA8FC0DE
95A0466B5958EBF63E296F9109677915EDEBA3654EAC3D7848CB8DB367464FCC
848329BCBE84245A4B5E96BA220B94F1BF6CE7C365D68A64D44FDF8C65B8FF34
6471992660F4551B450FC9D4F3131E5B9BF09E2EB27D88CE83FB50FCC21CC470
A32CFCF7AC318CDE98739B360390E9AF0C7C1E13C0E786DC790316B120FAB737
E69A5BF653BA575807D4F59D56FE6359BC8EA4C1DEF06FD366791061349DDA1F
D2D967EB9B7F6B389EE22D1C0802FACD28FE8BEE8AEB703BC7366ABEDC182575
0DBF07753E280C9F4EAA9428D8731ABCF5D2C83FAAC1AA920326C75F62F5B799
C0EAAF3DEE91374116092E029686E4AC0E2699E9B9DE4EB2796B5E04D757ACA1
DE7EA3B5931130B648EC3449E00DF185FA99BA638F1E44ADCD03F326227FAD7A
C9AE412B1870E9E7453C99E80FBC5ABFF0661E8255BC2EB365EADD6E0378A1F7
D1A254FAD9F125B2599B59AF4526CD9C4CB0C0C97CBCBFCC599720FC9CA0A2B4
4365480CB8F10668A8CCCC9DB2CF6CEEE7B2D6E24ADD3F8E45FE88C8AF7468EB
28FD5E0CBDF9E23D1FF320EBF1997C676486E4E0A6FC3A0C6CD24600D6CFD67F
9DA4FF13950E17F59CA9090C11E7FB967904D7E857CB98BD6EB94942FF99AC5E
8ECAE12389B1A302E16B7DB5970B85A6ECCE79319A7D90FA59C918AC3A932969
D3CDE2F42CF9492CF7F1B3230E5A39C9141E775C84F5F08DF11783361F35B604
56344BDB08C929F9453553452C97E016C26AA2086FF463473278D3831B545DB0
5487C88DB06E31E23A1FC747926594AD9E1914F07F659282255057A4BD485DDF
9C6BEDD2A467C58639DC0E0728CAFFE3C5B6A3B3F16798F433C7064934FB530B
35AD9155EF03D074AB5534DE16BA311C9236501F2717DDAB52753B36705655AD
46D57740E0685E046AE1B99F5177F66C4A4B2D5FA129B459E01ADB4950273861
00D41B4B76E83104F4BBDBC90D4F4DDB9649BD8A846E6BD3D374BEB6B9DBD5C1
0FF2C7C44BA4DC0AA1B54D55FA959DBDB3A3D59D187984CF01C8B0A73A8DD94D
43340B7E408EAD4E43B24137C66E7A5ED3278B573694ABD67F6FF81F6450D2E6
3358399444142A17F6F69DBFBF14DE59470962F632C45DE55DA79E7C24D048B1
ABE83933670E389D2A9C9BB8FB1B2B94208B85351DA764DB623D1E0A59B9FE47
D7D4D67C241B49C2242A65EC78BC20D377D68BED977CDF4E50C834624D6C682F
C8663358A8B205832879EEEBA63035395B7552D9B835FFD07328565672AFE4D2
60B3C5CBCDD213E7C8B3AFC2B36119FBFBA42B3D2BA631082B177CCE6F7935AC
17D410BC0C3E25D648B2423B108D159517D1805C697414FF9A71AA3A1506BB97
D6D835DCBA8054761907C99A1281DC5ED17653DFF7A81FC83C826A94C6EAF95C
37B5737391555A8A575E542EDEC2D027465D5064A6D9A755ACC1B24B03D13839
6F3619557849327871EA80F1D4DBAF2D5EDA062C703A602B82325F6EE7D2BE04
AC7E805C1D242C1D066E165BF330F4D3A0A807DA8C72ECC15CE8E9DFC0F91FD5
2CDEA7FAF96105243EDF44B4052D219932F1712CB1BC050DE2A0E17C4310523B
30CCA64711BF3DE13EEBA9C102C40045692EE3B52643A0DE3E672E7285E30966
A059B1636E4B1AEC751061030E9698C160EE6284AE128906F7C735DB24AB4F96
77F888E53B9817D9572D551087BC152E862D2BC14548B0937A1115DEFEA86665
7BAC3A58A4EEDF997EB49F8D967E148F381BEF9A68D4AAC414F307488A9B054F
B5B4D0A2B019B3CE6376B6DE6FF9635DD8C6FD508F211931143BA01D7D08E4A4
E6062C563D31E7FD87B97C86E430CDF1CF6FEF79DF004EA84D0117290BCC7C63
376175ECA2FC62EADAB378C57262724BC9A9A578B3BC9DB5CB1B44B1BD592D47
8BA8715B00D1495B99CBA96ABA9147ECEF29D69BD30D1E24B825216A78E7C80C
A7211010D2C00C5BFF35F8A41EE6480CFBD7570E6AB5CC9A07D4E0EFCE364DD0
022391AD4C0089676139B95B6170A1856367EE3FBBBB3212CEE9D64BED64FFDD
C683B50F16A3AACED2042AFB7CBDF565F04383FCC871AF08E7CDDA69390985D8
3828FEE83C12BC10B9D4931D81DC972CA5A76E6E9C93291AC0E6B29F29EB5449
0428B5A48080A0E95A00D0F166D1AA1D0D462DEE880A6518C3E585EA200884B0
51300C269B2532BF26BC139E5A805CB3D9FCB29E4B4EF4B4EE15553F44AC7159
BB74CE9AA7E2465DF8BB191187D14A7C115826E8696AEF56F99123DB82304BC6
62D8D46B342E5312112F268C69FA557DD87D25E83CA0AF91A866DC636191B5AE
209422879682A8D0D249CDBAB31345F45FCE24252D16B7373759BE4A62F1370F
EDE056CEE265838696FD998793397942ED0508663E38B7FF05556CDD7FAF7FDB
971B557E34D6F3B792A1257B9FF5EB18BB80A6425EBBCB8B72DE13BF53666948
ED6D06A26DA57159B87DF03FD9BA409D4B280567E8D5B9EA8E8AF21A352BEEFD
6F0D90ECA605BC8062E675FFB48A0D1AB9DDFE6A5A10F02B35D01826B4073189
B2B6D3EBAD9006DCAB7508430352F5B4A2993AB5D0F5A7DC3BE3B885999BF8DA
873352821210CF0B915E39263AA9F03B21C1F45C87C2CCB12B5F3B94EB562924
278CF8D650060CC2923372C0A870FCD5E5FC8B78B9B81878ACADC8AB6FAC4CF7
343CD6E7FE7D1CE6B9F5FDC218C305A5CF3A81942435388ADD4BDCA0197F108A
0C2CCBC094031C7139367941CA39AA6DDE207E09F38923A5E9452652D21216EB
3326C34D2A0E4E8CFF4F1AF8D80A714FA9764D1F94A025EF53C533AF3B267311
568D68DF1CCA64E069D10DE577C4E43F0E4BBC0417490233128BDB6370FA6152
2B51536AD69F860DA401B3CF49336D7CAFB9D8C0238645C253E713E1AABDD1C9
45906276AD0A5D2E23697DC5DFF896EC8C1916D52E31DC3325D0950129130314
21A3D10E9CBD5D4E8869D9B9ADF5D613E6370677F6D29A348BD94F16AABF817C
3995EBB3D5A86178956BF7940F2912421C4F3BC76FD991EF304212626F2BE133
9F28FEABCA020520722A4B1FDF77C3D6441FE2F5A3B451290BCA5D541320D8DE
8661038595E1AC14D6C89D60DBE2E17850FEEDA72C8A882CF26D96AD5E9A4E9A
5B2B808890A43D9E7F59104AADCF79714582BF9F2F82E1A8B2ECEE35641512CA
9C0ED68138F89D08E0F9214980C0563AA6CD917C6C771D1DE945308B77B55AAC
EF937632E8E38364F3FCC08853CDCB028B1CE37CA1B6498F5EDF6E0C13AA6839
8A6E28FEB3B0BAFB142094ADE159725480EAB33FDF27CC3291F8C0960840272B
4F8503DDB58EB2B929CE53EB5D706ADE5FA46BD28FAD9D861C5D5F0BC58BC526
CBED223A031BB54AC9678F502C21579BA36AC6ECDC5F4BF936EC6E3053A312FD
E56A9CEEC138A22AA5523B695DC529196A79F159CF0D043C16A3CFEB9E338EF0
D7B0FA721D7D11990750232C1F7CD5D02D5B14BC98B1900173514DED0F14C5CD
9EB6BEA35ECB115DF97CF787A7573C23EADD24CBAE9832EB5B92ECB4DD4B8C7D
BE9B8A3BD00614A35B7BD9E4187A61639608CCA03A3BB26BB18234A5285B5517
039417CF29A7A7EA3B97FDDBB02799805532216BB40CBA85C8FA2E0F3749DFF3
D8C391A5FDDF2318F6D505E8FA521F1ABCA21343E5403003C28CF53047A07DC8
A48FD12C2F3C802F3BB66A51D65D864AA64B5B352D305553A14C59576B6F5928
1B91BAB816434577E380D4407D0BE8775E19EE66E9F11717A630BB0422421290
360984C499D5C2F29D05F7F2B693302EB8A34D972A13ABA38387B2D6B713D97B
A69F270BE9F4B41D0555E6B3D969E12C4E871B24F614A6711C1164328D3D72B0
3A8D6902B2DC12DAC3EA760A60DA0196DD4B0E8AEB23739AF92B579720B119FF
80C4B4A973030A9F3040C921F3B82D67AE5E767C544F9B636737708255E19322
5BC60051CC6163A409D01F6268A5F3B6102F19D4C26C51B773151E91659F532E
4CFE9C334C3DD6C02669F517D7458EAA898572455534CD8FA54D592A9F5FB13E
ACEB54AA027C1B87380F9EEF9D557260791293D5BEC043B961C52F408C0C4DDE
1AA36C3648F930765D9FDBB769014EB777D03A2D20FD7ED73DBE116B95F80279
725720B9AD79FA4B7452B2C7D408B80574A7F25624CCB6531AEC9E3572FC29CC
7319733165F55238078B6D4120137695A8BE5DEC8383E556D1067F2BB1470927
993D1E3D64D048CE34560BBF01C461E2A4B946E035135D445153AFD3F9CADFF5
76D65850FC5E56539F80D585D80669DA11F81BF32F6FEE0C9B3B76B029D38F86
2BF18325E8505EC0D97934FC9C7639F8910D08634622931BF330814434F81A3E
B16EFAC41D22D1BF4B1851610A1DA0511605B28C540210C6A2007CA581759DB5
4792EFFBC27B3A08467E29D17E5932C4535B3AC49BB6E13C568776A96ACE6FCB
DD69667868EF371BF4BF97B49DDA9ED79D9EB46E2F96864FED2642FEF3038B30
5DE41226A5B4C20D441996D671C582A6F5E57840EBD77068C1AEE823B29DE32E
A6B940596E02251EEDA8600201A91CCD1E57276D48633DCDEB7F9D21B332CE49
82A6E069ABEAE51B0C1865FB6CC5B08C82819748A06CE285569C9E5D6C0736E6
2CD1CEB660425F040200EDAE2413F873EC6897373B2BD37B09BD7BE26B975CFB
5F1762444C53C4A36D6B6E5E4BA62B93B21B999853F22A141C4B6210E0B9359B
F24D2951ED1BC2195F11D414400F81FE0DBC73C4FFE3C7FCED238E4B22808263
B7D46ABD25306309068E2FEE876EC79521622318BB6960F7588E6392FC1E2642
EF241F866189CA8DC2EFE4A607C3EB4A6C06AD5C79452B6682C3FF51D628BE1D
BBD89A7AAB946AF7132EF888FA7599D096FC928471D2FE294C8173E82B508A72
60909FA02AF30D02B23DC346091B2CF9EF259737F27A0DE4D83D5A2230B46736
92A3A3E95A52591D79473418C956F4EF4A3C6D9969CC408705ED11B2CE62D3E9
40670C396617B3C75F93CD8D9565305EF1001F84DE922D6C7F37F67E16AC8F89
76E9DD1178ED7A8ED2A9A049F8D1E5D65A8E69F4E4E2C393803A98EED710D6CE
C48A28BFDA2C60DDF6CA62288E4E780F8614C7749C9406325C86B33CBAAD27AD
91C44C28F1D579989D8C3B5D6AD11641BCD431F172CB2FAA0C0BFDAD40BD3AE7
D647B0FFC92DC27F9E307933FDFB4E9E1B6DEFF59372DCC9947F32A40ADA05B4
5223A6504CA4D48826FAE6756223F2FF5B55BB893DA7CB1F0514DEECC2253018
13E4ECE6D689B0A72ACE4042849B0C4B472AF45ECAC8C709E28262C17C09C962
E4086836F54284D6DB46BA9856A16B74D2B54D31F6AEBC9645857AFC4009E803
348BD23C5B2FD805839AE2E2CB8CAF5B6C5EF38D62BDD9CF7072F2714E97474D
FA59B06B4BFC89854C6244F22A33BE2AB996C5E600D2C50D6AAC9E9CA9193C15
7D2489EF10958D9DDEEDECE4BC9503D67C1EB45580B80C4B1937469032C36588
D4CA1B5C00E06E6A16131CA22ABAF75E6672E59F8A4DD695E7535EABA02F6038
9E94F86AAAF2B7E9E315B157F8BE66CB13725A79EF90AD4FB0073FF142CFAF42
90F2BEFA619F7F1AF9F3739F063D8D05B59B2A9DF0298F4DDA3A462FE5DB0B26
5FDD57193B8E7F00C2162FB111DC4975DFE5DB602A670CA6E94C8BCCF83DB0AC
7B39632F0D42A777845FBDF9797E552D9371C3C780EC2DFD2F44F72C565C8D85
FE0396EBD46C873AE8550882F546655238E825E60A6402505729BEDFA52397A0
53B37ECC29D2E0AE5D110059AB6528318A5DC7648A46AFE9EAA17E79A2B7D8E7
6AFE62F4E10693029CE085ABDC77E8EBBBFC636194A39A5710951883B78DA708
C33340589D3651EDD7EB552302A63AC37031CAEE62F37E54EB76D9D9A73EF32D
DA31F78C17CB202849141A1F5FC0C086DF025BD411AEDF8DADE03A1883B216F1
DA8BD7F20B32D5A200D311A900BFEAA43FE53F100DE329F2992ED2DD8BE4396C
900E49FBC9B2A2F85ECF808E3F4F73415A620F8F1D9563FC3C614244037384B3
6372980DE4F1819DC2B4F825D7F1A4BF742436AC513D1A305823F46D95CE210E
A1EAAF30C9A9F83339A0A4E5F1AA194B2FC8593DE970B2C883F979D3048276AA
8C7A1EB9D7D6B7236413BAAFD8EB6636FC38FD9D65C06F84A291CBEAB880B16D
7DE7352BF4EB80F8512A32BEBC5C892A004DFE16DD9CA9ADB963D5174D481638
DCD31FB2283B5F192975AADB6E27FA797876A48CDB96F62E89B545CC8CE8B786
D388BFB00807370DA6328FF0DC4B537BE320021EC1102A196BE260790E2E6BBB
E0A70B1DBD9977A5F4C77183F4CF9B18D3648CE7BB8F77F789EB35A12862F0FD
4DA2F0B4662D450CF7019FE95DC80C6BFD57170F1DA7139D8696B56CD4E70C2C
1DF3554A064C537794568090C18DEFB980018F369F473498543F08886658507D
715A5B9B67A9395FD76257FFE3E90CB68510666968335DE2BEC50F225ABA2C96
965B0B13B24DC07C2F9B79EF66300B3F94722F0A1B4D56F6181F3B194CE8A149
EF9121880DA9C89FECEC969068C49F48FC558D01FBDEFF342863F4C0116BBA79
ED097433C16EAD56BB2B348C551767F4AA82DF1FBF64BEFE5CFFE13A631AF42F
AE660915711E6C2700B38FD7F4E03AD5CC3423246F420E2AC6581D9492566D1A
1B4C2B70956FE3233FA4C55FEC2B062491590FF01EF0F36E918D98C95EA27F13
B6B4E693A1D158ED9866DC5BCACA861674993D5658981A89D3EA8E8A31F4257A
299412A33AF840CC1982245635FA140CEF7FB92E22D07071D76B34DBB96EA9A2
85A80C440A6FDC9D19E8E4F78CD805598AD989846ADA1DDDF75353BF0CB3E744
4A286C3272C05FB96EEFA0FBCB6BFFF49506F54C9EA5C41B37AA1D7D57BD7C77
FDE66C98F92E3A81C8BE23BEE4B7EFC230F62253BC1DCA35EF77B27DF932D9AC
E5DB35BEA759F586AD85B58CFD71F6696F248F026AE03629275E879208F7C1CA
EE3BD2568BF989377808FAA8E35418AC833780EA85DD29EEC1EF9957104759BE
A0F7D0201F342B0E531BF23E9A7D1B83F2F97B757C512C8213DC07182269DCD2
01B947F47AC742393B2DE999D149EB7516B76C1330056206412AF79C472D05A5
A62E9F5905122865241F8B2E63D7E752DAF3345815B979BEABD9DD17F83A8658
63FF64AE30D976FC891E273C83E5968FE42D70A55C1B509D96756EDED39DF6AE
9882805CC6B96A3177A327C34AFFC18A62FAF64BA95B4F388237C144D16D313F
269B56FB852777756D2522BC0F946DC0425D8F374CC51FCB15600FF7A49A4104
BC29A7A5F1665721196CC9E9DE49E5BC7F4070BA732D56CE2A0C3759360CBA00
608A4B24045FB082AB4FFE58DDE52B3C7695F6B9368142FCB34668AF303A6455
B248FB866D74CBD24CEFEC85AD6FEE1DC312F6D9F3B9309B62AF4B98B6E94253
7CD9A3C06DA77812BB4EE9929C9CEE82C317D0F487598CE1C576AC85423EC679
AFDA95EF3F0F95A2964A9A35927640256B31120CF711DE24CAB53C624A206E57
D1460D9C3B07AEDF0C9286EC4D7E02795AFFD1B4DB520A27D96B1E7FD7868911
1BFA6B2D1015854A402EE8DE90B816AC700557576242C3771C9529F24EB9BB84
785314CE71EB6B2296682F1C9796565869F375D094917B3B06F1881AA13B177E
2901A0BF326D23FDCBF55CCD15366337D000007EF744EE23FEFA98E0CB042272
28EF7E98F739D55E1AB926E5F1230538D96AB2484EA11D7BBC9D613D96D86A1B
B481B92ECA008DCE33EE4B71C21DBBEECBD9D75C25B1DE870FB547D657B91139
CE999F2E8D53797B53E64D40555EC96E760C8245A1AD9F508C5E627ECADAF295
574EBED60685F10EAE1ED416C43461AC78FCCDF6A6A155F451AA39165591ACB0
5A205779232BD08C8A743C5A5BF33ED1E1A3310E3CD433D6E8DAB72E30970A50
9DB6A4A0FFACE38A60E2DCCAB7F5B7AD1B557EC5C1747D467FB498E88120CCCA
F6A701DAC4FE7AE6124C3B55C72742DBAD656CF6320CE66934AB31C293721ADF
EF5F67871FAD992447F76CF16F85D0A04140B68A8AB98C5C8DFBA2792D675DB5
74EB20E6CF526580D9797E809EAD7AAFC99AE3D4148B8FAD4D27665BF4CF6A62
05F5A26B783AFA95962E9438FC3B10239FC8BE780D3840DC67E7B0B3618E10EC
F17EE37A6267ADCB0646D5FA03AA6E60F1173DD50937EEA219B78822A55E3E68
45A4062EBFB8D8D035A9EAD4C689D1C554BC73218607863527A784D7657DC828
448814EB159950185ABE396DADC917753C4BB8B8E6121EEB51C5F469E6A082DF
B54CADECEB0B5DCE6F433F227718802B4160E0120A64C8290C8787638FBB6E3C
668B0368241F3610FDB36B7D2F75A0EFD33A0994B3067A699A58B5A6A5357A05
A637E435B72BE672E9C6115B344EA2D5D933D32558E8AF6DB4B3E71E62CE603A
87D2BC9A15811023EB8B0096F319EE08B6F9601E7EBE3B8254FC8B20BEF66BA7
AE0FD8755324C32808C36F09348083188D680E41F62060BCD025878AC44DB91F
33D815AC9DC3F442979405468D556E59FD44D5A10061680636D6B5FFB5302ED3
FD0E11F95F8ADEFF72173E9A5F2AB2F62C427E5BDC0F4855E2504DC6092E53F9
2783E0AF62957C5F79B80DA5C77C6F2E34212A72336D6DAAB732B3EC3376BD94
6A130EE4632E97CA65D1D2BE3644E84A35070D8E8B67E27B6AC4AB8254E49213
F3A65E698F73A56C086FD9F9CEC591DC8C5BB3FF454B2C31CB7BA76413412F70
46CE9105D78AB0114FFE3B3A960D601FF23C0F633E2B85300047E7660D2D7C09
2B45D9330265B56B5C8E29F71C9EF54F05F2CDA3F5E40246DE10DF2BF4DB56F9
758591EACAE95CE2BC2591A87D0CE5AEDA30DA4F11EEEA1031376185743DB163
60A1E8B82FFEAEBA6EDEC5FED81176BA98DA543F118E0F3FCD26977D99755C78
6C272911BE79350207B8546389C30A5438CFA2F9D327777EB7BD6598DBAB7F44
A41BF84B0A2C318AB1D867609BDB7F71098DFB74D3B810AA98F71D777B073248
9BE2D35C7EFEE23AEB757205AFB143A101187190F883F6826A2D1500102699D3
67E66C73D4E7A8ED8974351D769EDFF4E1671AA94913BD7DECDC3963097A6025
CCD2128ECB5518DF8CEE4B9E59CE2420515A0042EF7592DEE52B8FB407A3B343
C618E5D060218601080A9395F9FCF7B887A3C165A9ABB7228B1DB6D1FFAB59AC
26558DC3FDD0AC5DCBDD30F5BAB2D6F3B11B98A43210DDE46536EAEE3A6ADA20
C9BFB9FF931ECEEE556BCC9C4374EA6B2CCD2F8B17D2DDB83815E3868E2F4F86
F53BE69F3BBA3D086A8E6717B22B54C2F289AAC0EEA7F800BC86CA8D7261B666
3A11636472F5845AF507C8EBA6518215D7503414250BE7E27DEE035EF7522B4A
A4BE522FE66353CCF0721657455852341A2636E5F91048125A7170E748B5BE0C
0706E4027680F9CE1156EB4BF5E50FECAEA7FE970E50BBBE2CFC70432170E268
6EFC8E6DB6980D032F02ABD0B8EDBC8AD94AB806E96E4BE81DD662C6717E289B
AA748E152A11BAA2FE592ED088AF61FBE6210FC290D98263326589DF0A092425
19D5D2FA30D939C1B68527550413EAEF214394EB590AA8FC25CD27BD69A7BAD0
FE4EB73C1745174A99A2367CDFA06D801B1588A55CD8FBC5B1A683BC4E56C48D
CB22D8F0CA6C633BE68E5977EB3D88147A1B96E3A389F5AEE311E7B3B067EB43
7C6101AF5B4040EA079E42B7F676EBD85E5F21FA095C1BDD305F557DCB3E4017
6D66D31F4B4F23B1370C6929AEC2009D38F8A338CA85BA749C7CB1687ADFFB0B
83A7838452A6F183422C09A870AFB47F59F2E66F7E82EE851993F1B4BD16669C
E1570BA2AB068CCE168552299361D62A2BC2C0DA48FCCB892CD8541D4066FFB8
8BA2EE4ED4246CA0155DFB3DA0CFC82F068E794CB441B2B9A507D9AA37DA5DDA
6E21FBE4C835B057D5953BA549C0742D661C8D6BA1F78A6A6A7ADBD6EA7163DD
1362A8CE7A17C1064CB861BAB31D066CBCBA4B3FCF3BC8D6A3496230AAF12325
18D7DCA22A948E88B3B323E0DD7E5B229A8753CEACC461027E362577738F553F
81135829F9118F4BFE20CD51190A27598726330F83CC3AB14FB241388EA7D4BF
DA5D2D469B7507497AA5676C08828D7CF593CECFD951BF6DD218E148B08CEE0E
CA2F070C601E09DA0B9690C4E3D619F2E4EDBE77149F7CDDEFDF6AD4BC9BF80F
3188A55927B63FB6F7D5AD640A25BF742A74FF8C3B2C04138D6BEE4885F8F822
4C30B0E7AD46A088E256407A554EDE8CB0A6849122E7730C26A70C09FB28FF51
657B8A929CD02CE750FF10D3A249AD283F5387224270F8133FA299289B2603D8
F8FEE58727EFA4AB79C5D156F6A37F088B4D8AC9C3ABE00A3D3E50EE934563FF
9416FD0CE199660202304C11C8E86A5A846823D2E414174BD2A34A2CE340E6E1
AEBD8EF85DA7D3444E6BAADCBD795575590EE9F4D9EF0B00B947DB36E0A63222
6FC056E6378ED2F946608D454434B95B7AC40FFE8802336E38B6572992B6C7F6
E3A9C4768143FC961DF131B7BA764E5CC20F3FF194C0CAAB6A329D74455FF83D
EA9E8662C77024836D8865ABF6796B105DBDFFEA47AA88871AAAC76AF9209DF0
314DD6BBB3549CD557CF4DE95399C560D65DD1CD2ECB3FC35D8DE63DAAFD8961
77F1F70EADCF7E077FF92CEEE279D3AED87F7E9DB8862B0D4909282D49EAFCA9
76E2D25DC713FFE395E68FC891329882A2639575674B2A47C068A4A323C8B06B
4FDF37FC4C6C7ED97BD15B1763422CB0853BA8579165C6AD132C70D61574E96A
A1069043F4BD534504685156270A536E5DC0236DA24612993121152E7A3DEA03
C466940ED136F05CD2E3A0EB810C9CC36147EA185454C561A20205E725588F3C
BF187360F7F1D3AC695C51FE0D4018BAAB58219EF81E52244D9F56AAE7305BE4
AF113EBA32128FA1A21D5CAB82BD8C135A33AE227BF44D744C52CFE5BB9FB440
8296C8378C859009C0B466723152A70ABF8BC6BBA1B1812ED2F2CCF1DDC6FF15
3BACCEB5DBA4107593EDBBEFF3B140B7CF51BD51B099045F1DE1E8174A8495A5
73F01807A82D6A0C634658F1BCAF95794DB9EDB2ECD79A062243ADB3EB7A84E9
A79FE1F8FA4C4905C482B190C7FEB04E13FC963C0478D72B621E6031763B4BCB
3721B6370725CCF2BA061DE84855EC90E287BAB7D34EF99AD642B738312FC6F3
00093EBC7666B280E3700953D590A62AD8AF0F977CD9FC6A5B91EA812BF380E2
D981F02DE8123781C31E557D56A54FD3546B5ED5B3EC66EF1D37916398FB8CE9
55E12D8A89ADEB14C5A9F58665A2B2A2399C57BE1BA0D45CDD151E01EA0F50FC
FF44DE8B99D6205FECE23D72A9F61619E09C92987DAED87C47C937209B3DDB4F
2FC6DDE67D9ECDCAEB8D79BCCF6978EE0EB2CD7601BD40620205B40BCD461330
1A72CB029A6DB10FCE7B59925A3F5FB7DB35B3D7944A945314B7F41070DCF646
C5E9D3871CD89B161E015DD73C182E1A32153D5C6216D9C9385A18202E78D9E7
ABAE4145C70F9B59C3CDC8D90DAF45F9998AA0FF1D6E807A04D43453CC07AEC2
3F393D0F3A6193A08272AD735FAEF62B15E735265413B1CB62F544C3791E2FE6
2B0384FAF3DCD6BFAFA574C89BC62032F460C2ACADF218975751327CFD260042
AFB4E19A95C7D9B71C7D637420B70C1D8D9AC162A7229546436378570253F931
4AF146E6642A45F77CA381B2031371BA1FA319D8FDF0131FA793AE3551EA5CA6
AE6961E7DE6E547211BB0160372E4C019A99361293BC4C7EE0C09F389FF828AA
7585F9B7FAFA718959D9C8F70AA55662D112772F72C3690F0D2E596A55C54C75
00FB8A600F088414D8992ECDA0ACC39AB210921D0B092F66BF8B28CC148252E9
0F6E7536E42E562D803140EDB585F5EC343516991E7834FDA0F1AF41BCCD590B
AC7B0625A4E70B6860AA9ABE07CE203B29AD861D424036263E46D03CF4D270C2
C6037CC365F8B761A85276F19275DA39E1D47F152AF583CAE41F7F7FE0AA3F1F
7DDBF0AFD0E78C357CFE3565DAF031EE25D893676DE5025B169A56BA5DB7FCB6
081B9F3129D1B5EB155884C30E60329549A6A25A26E3DF4FBF136DFD7EF4BB6D
14D462C32667752F655D8C91CF08EB5B1222A0043B001FE5C89C3AE626CB9945
AA4F8F616FCC76E4B0D7BA8C76364CF6D4B419699E32348310D7DDCB0F249FF9
6E2C1310B087F300BDD82E4D6E2C479BC9C761571C27883C79BE00C41E77BDCD
4958E166EC99FE60AA5334CB63B98D4A88FEFDDB9C98773585EA5E4D316AEAC8
CB4182A887EF4B2D839D5E3D6FE3C16131FF2A0FE6279AD6383238F60ABF8685
AAB0FA6181716DAEF1BF8B103EF2EC117B7B970AB88FAC5CFCE312865B20C7D9
B0ACA5FC06EEB85412A76D59C1DE472490624397A1A8DCF4530A89DF33968A0C
D0CC152A769B76E0C0329C0FAB54D836A5923D3E6DA2EDC2FFB0BE9CADD113A1
DC51B11AF5BAA7AB8DE0B44A701744A6A5FA8A32C70F2B0FD9F9B61C3966A802
42104407DA9BEAA7E70B4C0C5CB3807EFABFDCF9F836D1418EAB4CB279D57D90
5123FC23D46286CDBD70C1E35DA20959D7FAE5D4A8967A0317329CFC4FDDAB74
14D018CDD671DB109D6A9587CD6B0C5BF54A30D4E3072F05FEA3EC21440FB66C
37AE95ADDD878BC2F894EA40682F08A8DE7F5530D2772F2E58A2BB78B981277A
D8FB61E2F17D2C87D95A094415358CA9BAFB89AFBEF2079EE97EAD7D86359946
F115492C8F03055C82927FFAFA6E43AB2420028B548C36DA35508230C17E595D
0E697FEC6C9A25B9D7A3D342F765C725ADD7B0D3769CA55C5BBF59EA72018DC9
C51E46955F30A76C6B243487AE5A649D850B6E2630055C3205DB72BB08EC68B2
FD291F98C0B5DDF3DD20B1C4F394CD7FA1132EEB0C7442A63B99930B70AF8F86
CBE31C4099C3807A01337FA4063B87047466804D6AADEA62F93032B68AEE779A
E3F1257DF466F591816455734C84B7E695147C082A5353765C789BE6E984EEB1
74173B7547D8218353614511C94D025DFD9425EEF795DD0E9AA31AB7A2A906A8
91187692144C02E84D49BA47846B1A866351E76E7DB866A2DB1B877D064467A0
0156D5199500BB5C18BF8300E8B9ED08ACE959392226C2D9AF996B8FD8C88367
330901C5836918C005010956C520A7F55F936FA78E2DC624B2C253F76778698B
D1510D5092473D730FC3D22EC26F9B2761469B0EDEE8BA22F029985814972B53
ADED366BD57798F0A499C68E97E7D0CCD7A2511D1D6C857F8F2867BB8860B336
478C35E61015488A6431D542F552F40503BD7F3E05B0DE897990729C0F49DB6A
E178D0E993DEE8EFE8245F07D0B0F3A166C3C3BC5143D103175D288DA1003B76
C9A185EE6A8152A31199DA6A0329667BDB2B79A6C97B54B8BFE82A1E6D7F3FE8
983BDACB7BB8E5682658AC6F300ABDB95B176FE854858FBBB993111FEF38733C
3527515538016F8BA6AD48DFE3A66FDD11570C076AE43A1421C97C1CFB66CB45
E6F66F077AE8A23C751014185DE9AFC917F2D783A0838DB21EC2067FA0E5D929
236579DAD5A6BC105B8E6211C3F26F04271BB84AC9AAC072FF6D5AFDC5A833E6
1CE4EDBA6D0DC8022933B5BBEC2150F5E35BA8BF9060CAC33E342975E01E9401
FF961C4A20C8F09061B1430C204D4E7BCE601FDB838B2EFB86A7EB3D9C1A8F97
264607F6FED9A3EDD6B7457368EEC9C3C172E6FE5357807A77F869A01FB48413
DF7821859BB191D53398A26D610D53AE6A1EA9881EC068A99627ADD833BCC4FC
1E1CA352F141B90627FFCD74B1477B93807D36B8C8B29B24B3EDEBB7657FAA64
9AC10C5BCB8A96755A83EBA119629EAE20D05D62E2F3111E7091BC9B91797D54
096FE0A06C301E431931F9828719CC0F3E2094B31AA1E693DE59D60E62907275
43507A36A01100B17076AE6C6FF5F775FDE4EECA7E622D460701760E7495135D
6EE1215286E7584A7441CC0B724110B2616D47D0EDF1478DDB4AC917D1D7E45F
B314649E1B48EDCB3ECE7A948F758BAFA69AF85AA924858251438F05B3EA1F68
6B35F0072DCABF52B08FB40A03D6A06ED9890104DA2A575EA45E16DA2E1FDD8A
45B9AE2ACFFB374247724A3901FD546D465B4A4941011516783E6083A9639E04
0D0976F90B757C56EA776CA388C0ACCEC903E9ABCB6ADFA4EB07AC36443DC19A
5F3B19565F1D434F1B0B6E1EE0AD2510D6B21D5E445748BF488E1D77C0C11DDA
2EC873CC2BD4C28604E044677A552757FFF7AF3CDADCE2FE6D5B7E562DBDCF13
F0603F488A2D938D3CD79461408ED21846E10838205287C2ED1D651D3DC30222
06061E0250B09A05CF198DF82D4F2A4EF636A64F79091E373D27C0B88AB5F039
A24FD0F31C58A593373DAC87127E1D17F804EC0C1C46B244BB13B3BA36E08989
58555F5218EBA03EE4F33D65E7E72867360CDC5978F6EAF2AA24715FF2DDB265
C44F18FAB825EE58286B7A8C8FC175DC6FD9A0DD7BD39016B7D3FA7B5917F9C6
00A6F211107A589D047118BF18C3723024E23EED8BF3D734E62C1E3E2E2BB873
147AE0CC255E05EB65219A6EE6BC32FE658EDF0883371DAAD3E660F09D520852
34B9E716D79199A4028F1AF8776256C0E934F6A011C4183BEFA5424D243AA8BC
7E87176773002363255E7495F8817712C7BDF4AC84CC380D71C1ED8263707E8A
DBB25144CA89750BE5BD6543BEB9C341427D0A4107DD5BF9860217FF65747517
4496299457BECACD36404D977AD9734580AB02B561FF49E6D9BC9858A3ED3CAA
1D77CDD18D5CEE544EA7E773049D63C65BD60F8EA4F783BAA5131BC332D6C13A
8A7B92514B6CD803081AD247BD97F90508559D552475FE671E64A008C89FF32E
4F2275FE21C66C1743E2EC204EA0883B4272A2E6FFFE12A187496F1D6BBE294F
ADE1BBF4EDFAC6E27801964CDFFFCBA64257AD60249D7EFDECC8DD734D9BFC4A
3D813CCF13D5DD6ED91B33CD5242B5037208B1CBC9EBF18103447074EC1F556D
79D5B248F2812B349367EBF83D7E1F335DD11832D31B828D9A9D731D50FAE5F3
22EADE40E7595551DB4A12C7F09BDD64FB6D29C60B05D141EC9EB0B23BA7FED2
501CCF5E9DD8D6D3A5DB1E28A4B5BEDCF9AF7F44058B11178311FA4DC6B27A1A
5982211AAABBA904798240F0144AEB43F32B384B76574A5099E41C1CD8D82F2E
F290FD06B99749317D83B5F861455D446B43F3A041C6A1EB14A508150835751C
717DAFF65D7FBB44B4956AFF8512D795E77ACBDE9908C3FD76AD588387E28622
CCBB3CC1853E3791C09476E6A12533F0349345E2CE5BDDA7CB599B4DCBE5BAA8
0366BDF9D40B17315A4540A35CF347DAD4613F91AEE64B11F62A03F3CFF61839
0F67BF16F9B4CB43B26AB9B8ECF42FA5581263917DC85604DB4B0AC6A2D31157
299A01895DDC8D25EEB4F8C90170E014FE8F31A5FD35CB74EF0FA13C6DAE156A
93AD2F241B5CA8B55BF28DBD16720BB1C42C9A9CBF78D8B47E300E3F5F6B8B75
060C761A63AC861E5E748035154924F4739C650A8EF8D238C73BD6689A0657D2
AFBDB6320CB7B552FFB89F11EA22D02AE6333848C96C6C4B7156FED518164901
F83DF3BAA6A0ED3E1145BF196619E3F51F5EF7039DD184011B7B7F6505A11E46
49FE1B92394A21568AA5756B2072DB14584DFAEC37FF325290DCD493848923E6
0F7C67FA6AA8062594F122A48C5DEDE10E3AA6696E337699AEB3705F20CFCD66
7AB094E9BEC4B83E7A2B47C10C95FFFF6F55524C8964CE1CA8AED3E08B7EF5CC
9B9D0B17C5A2FFBC6CC49221176A15EAB3EE2B11BAF18374DEE98D644FAEBEF3
22648F56EA195EA6C61D437BE1DDDCE4B5F3B3B3B71C388245D8BF68BB48DAFC
D55BBDBEEC2355065FAFFEE86C8BA72ED4E9CBEDA132F5662F97BDC23F7979F8
02D54822CCEF7FBA933C3D9E96E3E09612F99B100345D53EDC134D23DCA5B684
12F59FCECF6F9848B491C64BE4F4D111C5CA3DDB8733C788FA12D3CAF0134F9E
19DF8F5ABD86CB0F8CD705E6E8149222A29A3A4117DDEEF5925608991F06827D
0E74FB1A220AD14E1EAE70CEF7F489BEC25D3BF609541CE613D1695B4815384E
FE20C74BB62F8FBBF658F5D2F16112C503A95B3A733E367E50FAA92A5996F8CD
290E2CC612F86A496E7C77173A0CDA0BCC46683C239700C40076114C1C030030
0B9EF15A312AFFAE9B89C59659982A3EDE3CD408714E8E7C016ED719D6A4D045
FA24AD8BD6F278ED2A59D9EE46F33362634F9758827B199FD071E8B6E9E3B08F
88C9961E81373B96460077464C7DBE6C76B88F0AE2AD2EAEC84A3320B7ADF8AF
A0646A4031E62ECD345B44FC96D08126FA6EF4AB5CC7D6094DD71174DC542C21
E5BDD170408D11B95BB8DDBD96A7A874B7A19C68F4EB93729D362EF1C610E85F
BBFC6151D81BE22B15AA9EFBA8EAE43C63EB7DE0F5AAE4F89C7720B5870A76AC
56032E6B45D0B3327DECC621D9569274125077092505027833484674C9ED2EE4
4D10C0CE6B2EEAA9BD12319EE6086844117D223CC2C4B14C8E3E833E87535CC4
92B39140148E7AF8F1D14B07E1C7287C5346F0D5E3D4D99D9997BFF01FB5C81D
7206C438D8A4D6F7743A098847CB2050FBB44FF8C272FC1493F1A99DDB2E1FFE
7A682A6C029B0F91E4E7E8FCB04C4A950D0FCA179322EC3F5D0B7ABE5C9E7302
EBE72B7927487B8A16E97D3649197FB181E187DCEFF026052802E70BCB2C63BC
975934F76A9732F4F4AEEF704A5E8F6E9AD1631F9E304203D29D5CA36C73968C
2409AAC3DD643E0EFE1857807BFA0B995E5E7D09D9A6DEB8F502FFB286BFA301
9BD75E81CCE1EED39DFF60701F4F7C66B61198F8066DD493031D1A571F17D3CF
44630A285F751DAFEDC3E3D3D51F61AF2B1B68DEE20FD975C9221E3F45BC7A3B
02C70EB2241616511FC57DC14B9C95A8AE81D926DBB4C8746A26D81360123676
D10B7C0888F4FED7A176AD844E5B0B6D8EBFB873BA2A81FD75714AA80F54932B
BEB1A47259A5768CDDDC1341677381F6CFFDD593823AFE8AB86284D78644D4ED
A33AFA53A886E0E9D7D6332881670FB442FFFA7402893572F4025A8C3880ED03
E8F97BFFBCE71C6E4D3DE65D0874D43D8F505465C39E3CD6CFA1E6DD1471CEFA
DC7BFE832AD9A393CFBA82609D5BF05D3344675A508D23AEF647139128401A9F
70EE29B069A99BF49CCF3FF0E59FEAC71AE0F65B19486F2AD8F6700AB2737A6D
C6D266439974A288366AFA1DCAC2AC63DF4023E05D234D5FDE54CC051C207173
825B640EDA76BDD0FE4DE028A8861FBCE5D8381B58337B42DAB5D5623E4D4A15
1D0408C7D1B1202401E07B66C15A19BF0D26CF0BA813A9E379FAB88F15F43054
3427EA5DDEA122C9BFB447EEB407B9F3FA8A4111935C2EA28C3C11F487111401
1206A1FBEC332404EEFAD1AD8EADCFEE7E92A80F9EA682F5A4EC148C71FEA0E6
0DD28D71B8EF83E523F290C53D1948C4B6DE6BFB350FFC064E7805E61C11BA51
65760F9D37B4299E1D8F5718FBF607770034E8E2F719CA6F981EDC4517C092EF
C4EF5D325D054183D73D76578ACFAF422D9980ABC887ABE116B196862003C970
CB910878C2391D218A727C76F13855D1CF0E3963474C3157E2A951139C53E34B
46D15669DCAED5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE27995D78FD99C5784B2B7C7C509E9B93BCC29
35CD2714C50B246A7DC70C99B7DBFADA1E01B81749EE49A70853CD45FC323019
A45BCA3DE39C3E7618C6322D264556FD657D9270933D8B167D2575CF146336BB
1C76735F3B09470E40B0624E52F21809704749F6D81E3B829D163D9F61E070EE
D8CA803E56CF227F71EB8061B83E035C7138A7CFB6D6CBAFB766754C0E8934F9
AB738930EB75A2713CCBE333CC60A6A8F2BFDB043ADC0B94FA3370BBFBC61D7D
25524B08C70599D58E7521F58D26AFECE212309BD7BCF62735379ACF3309DDC5
C3F30DD7D3A37804BB23274D7B30DD69E1B2C3CA70F2F79FA29543F526BB808F
04609B43776382C4389362AEA7FE4E03637B4599D176F103143DC04D5B5E53D8
568E7911839EB05C8F4A9E9C911D746C4C8EBC0A4E6AC3CF08AC86548A8FD6D4
7450B1FD87B119E547047F43E9CCDE1C1F8645DA03EEB02B27E36BB6C87F39D0
505579B2D0FF4DA9D4AA971DB4C82693DEB59FAEB3A14C1547C6C46C24FF3513
EBC97357AA2F25BCDC92F98CFF9F3D5881095B96FBB30E8330499FB4803EAF74
920BAFB89889071729076D755021515BD8DE5177013854B10911605F872456B8
F504547AE968C323B85DCAD9AAD5FC33F29A921D427EEE0E098E8591EA7F2D7B
A5CD8A91C01AE80B672831C286C900AD20776B50D4D2004F7295D860A2974B73
A9E8B594BC8BCA8356DB43399E6A6918A887A64B2EEE98060E47C0F371681713
13F92A306D1A7DD5FCA29CE223138B98E6C6BE9F3B305E2E4ECE098AEC270F11
2CADA74CFF4BD78C5DEF4354211E3953CD7AD90239C1FFCA061A21652104F54D
4CE1C6B388B901F937A299F65C3217180D4BBDA87A96F4C31014265EFD9206DD
DDD45DD3F56823BF8236F0E6B94537D9CEF904EDEC7EBFB0E60995CF6457CF0B
1D76EFC8D22A8E991888FC44FF9ED2954B7A9DF5CF6F256C8A86C3D98CADF1E9
24E6C6725EDE1262199758B2B070504BD81147F35D8989D2CA44BEDE6B8BA09F
511388851B9D9865887D4EF8AA7AE6AB234B252A506EA2EB59B1AD40A04BA972
EC6DC7C9E4ADEB7E40045F10F38E0C8D50CD28D96A028BE7C67D1CD148404CE3
0DE9213AC26B82EB823194818E6DE249207343C37BE9B926EEDF21E1D52251D4
37D555CB1FEF227CD15A08CA2A245C3C6508DD3592E809E0C72380B92F4B946A
7BAF34835CAC375077A843F61978AB4876871FBF42DF8EB5F877033452F08D41
970883CD836D1668B85BD642F7F50AE117B3ACD1A1372D5D4D2555A2E8E23E29
D8C8C5F39807B5A01188DBAA07A27A116C80E837DC740E86068952F0A57E9027
C39A603A4886213EC782000DEABF71EAE1B8944E2EEF19E1F7FBF442840845EE
D13FA9B4C5CB1FDE6F0DE20AAD69160BFBDA23C2D29311C4F82514DCF27C6B94
A8E727522E182DAB2869CD2C2B0F39016EB778060F35A6FE085A1BDB04A65CBB
6605D4D72E11338D87D5B0283A4B81EC83D03F502E7DBF202BA558B4EB271C57
922F0CF3980A02A40CEB2FEE42B631C999B71EC234FED7B269E5D91564F0AC54
D70F8EFC63B94F73ACBB4CD279716F68783C493794BF12502E04FC52064E63D0
05F2034A1E7E4192D1193BD94E99C0CCF702D9EC100066E1490894F5ABC92A92
C3F42F4101AC88024884C018C7D0DF65F7CEBDD46FADABA26B5433D34C2AEB07
6031841EA02F1C9622E0B64CD190A4AF3020654123563C5D6ED62F112077A1E5
88A8C8499A8917CAB23F00BC124FD93096D2603BC6C1734124CA3176AB14F488
26ED2E56C67571DB18177A07E082CB873440C4648D3FFF06A1499A5C7EDBE172
1759C1BEA3DE43B426C5E175B059005BF2911E685D076FF12D01742E9AAFACF2
CFCAF0517858C28A24FFEB5A26E46BB5B788713FB8009CCFE62C17E001C96636
A8DC58B71D4BC720F615D2873CD11E06DDB3A7788888A8E713D0E82FC861C0D9
ED98E873821095C6BE6CA909BCEB6C9BB1B0730BCBCB20E22D06AD1AAE225D51
25AAA901A78E86386D29A7CCEFBAA8F35B4813CC9D289E5244483DFEC10FF237
E38BC8E19B81502A19E0BD113AFF02F4E365A4708189A7BDEAB2D32A6E464AAE
B3505AF669EC3FE5A7C9320D907438DB23A82D8CB9777BECA40890C137564EAC
CE768714D7430BE1825C90D88DF40E753607A06AFC0046335F97A2FF20EA44F7
94C1DFD6B105FDFC6EBC6D5745C10D2C3BD560C939B80707B471D13D7A910F23
91FA6B63F2E6A01890368EA8F0D42E7A93B343C664BBCEBDBC0C99138A50E5C0
F57977D929DC9CC159568FBF5523D79229E9BA352E4193A44EE745F76035DBC9
34588B2B8FF44C8368C9C69AD17E91BD78559AD4BE219C8B110472F95FD5CEE1
A7EC2A78941AFD0B102C6CEF9D5BCD4C4FB87316BC327ABA5D5F5FF14BFAABDF
9FC06879D91DADEAA25F850083BE6CC26AE7437664ABB66CCEEA19D0BDE898CF
328861C3CB4423FD2C0C1AFA95A6195FEF30511D5C87876C863364CE4B089A97
6F9C29A14A61785C42D2C746A98194782D9A504B2A0A92D4E4B5062855A33404
2E14145F4684AD22D461E740FA8DD232D18E559DAB50A977CF474EE1410D7097
785D120CA5C6E051D096CC40E931BEB074AA9E32BBFA361593C78D0D2EDCB1CD
D560A14E93017099D24663633B06BBE3C20A2718C044731B6DB8007749D1B605
F397413DF968722DC03BD138B0559D3E5887B7EA9C9C54F8335F55CC3F1B9135
C70CD0214CF04A4EC5AD120D492F25CD6E1E80CE87C5709112938ACF9BB2E011
87FC035CEA0FD5C1147D41630F1CC9B82B395BDCE1885A1D5F3441B03AC321C1
5CDE681DBB192993B553048C58C55F0E420DCEA46CD16B75173C5D37047E511D
C980EBD803E01C35504C4092D93AE476AB15324149043E713261671835DDF160
4B8DA000941FC5F85C754D5132402A0A94EA3D0E37D6B9890461CF1C65AB7C2E
E42288BD17DB983600580BB1513D30983C4FCDD1836FEDC80308316401D8B181
EE2A3B114F68DED3488EB9ABDBCE6E73EC5A0AD42D7735045D594C43A33EA29C
BE2AB98CD0305DD935D8F0F5EE3205A7576650887883B3C9AC23E217F48154FD
6CE1454F09486B47A5A18DE65034D0CC9F9F66DE2BE45C2D6F1AF8B10F578B9F
F66D78D738FA85FC454C23236FF4B665EA0E6210060F6439E9CCA612DC7ACE7A
D12F478F25D40CDF7D23E3E543B75A97A7BC960A7F742A2C89212832C36801A4
C384B89A91D53E0CD886C7BE0692CEB0CF29D9B4BD53E08D9FC1A863599BCF9A
717F4DC319B4B59AF009C11A91ACB087542F94750DC53232E62ACC3C660965F4
5849011BD76FF8489964A7848FC6F3CFA44B7F502649EAD20FD32FA1999CB88E
A646C764BD2088A3EF00A4F1862F2CAE2F8B6A8DB26A1287AB3DD941A92AC57C
EC6D4CFCE0ADFD99BDC3BE161F4C1FBA9B854899BDB7E9D09A1E25A95E9789BA
DC6967F96E550903DF9B81969E38FA3DE2A058EE2076C77C33A93F2FBAECA0A0
EA98FA4C3D1F8700B04CEAEA603A0833E91FB4A44AC83C4E86308B6E89C99A84
8AAAF1BD143560B559176CAF28B1D8B2C8370CBAD5873329B24AD4A743F2CFD1
8B26B1128AA48F72767FF2268BED8317FAFDB532191FA35C2984AE7C50481FF3
126BAE5309893814BA28263EB863D5E6F01C423E6C5D3289B152CE19FDB55A11
282FEEFFF3E262F26041CB1AF30804A3CC34C06C6FBA8AED582215711B0A17F4
1B505FA0B5F906C537EFCDEE4C69AFFEF89B74C5B83E2DEE7642AA85B1615F9C
BA1C3C3197223C98A1ACAA495A6B8B8F1919AC158DC63FF4600FDF993CE8D2E6
3DAB7E352BE200322BBAF6DDD2628694612A7790EA8E1836533738405E9B7AB6
9DC77FE9A283B3A8C6A3651DE8AF71499D39CE0567AEA286091BEA9D6A443A5C
D35747785C433D4E18A02ABA38F55742DC36E4FF07A656AFDC3D0A32CFC097B0
5F9D90CC4B614AE7F58F3BFAF22EE6821291164B14DA11FB16C0E671A6104082
94D05830E44ED3E9908B59DB3B3506C60D3F766ECE69AE23369AAC3B5951B557
D62C7728D6E3F13BE05939C2A6FAA336EFA57001DE299223DDBB333D71003681
B4A816B378AFE37543607554F1F1B427784EFB366CBFF1CD7CD5FE3CB61842EF
56F134AB25DCAD2BD08AE61E233FE6FA79017D1883C61EF0334681CCACC5D024
F39309DDAE717CDDEBF80C88974D717C4539732DAD1226FE504620FDEEEC6266
41060E55159270B4794F9C0945FEAC295D17B4E252D015910B847534A519CFC3
2D52169510940A9E9AD636AE141331BE35D1D5308C927BA3940B773F20E5B3C7
813663D33205454A1A4B2D9173D593615C4459845E1AEEEE1ABCE3E5328D3F81
11610DB32C86FF6F9DBA1B8D6BBA3C4AF64523F37F176F3256E298D22DC5F1CC
F1A67A355219E2EE13D5D6369F656836EE0A77206E8236649E81A1F0E02D8D3A
3C8FAAECF7839D20329CBC5ACB43482D3A3A1E9C3A426BC7FE406E89FF25FEB2
34CCD7F3FB3C608FF37988C7DE6A41FB1020DBBCC762F2BF24BF424BBB2D3207
9DD408226AEAA0C4DCB8DF16CC6767B0BC73EBA052FAA5311407ADDD4BDB1061
3A860B10D2C219E96E61050B98FB04425912F484F5B79B9C0735F92C1B4353B0
76358780D1547206329F302AF6853E5DCFBFE199A76734AEC487BBB103A8547A
0090F0342D48DFF9EA9821454CB759B3D82921AB4B9278E652C2F30A8A121781
8CFD111E32142FFB160DB6422A5884151A4671D631260FB1758BAC67E14234D2
5747F1E68E0C36FEFBD535FA5C64B046AA8835817140B76DC22B5453AE8F3F76
C69B9F10988BE7D061F539CC8711030D2483F752706E27D43E3102CEC57B8A58
6D3FF862999D20CD6BBDB23762249BA7031D4D97DE2280C10756DAC422F0B747
E427E5DB0B265FDD57193B8E7F00C2162FB111DC4972B51E59320793EC60AA3A
F4A3F68AA5E11F657F898F59F67E0D285167231B9F444D42F17CB182EE584117
FC81DDB5BEF8EB957F817C5699C7293E47DAA4EAD6D47F00FC6443EFCDCCACE4
627CFE80E82179579BFE305B9AA1770E8E8970E70524F9F7AE081E64AD1F71D6
CC6FF054661866B68CCC383E5403F0A734ECAD86937D32FACAB6B04F3F9ADD79
94C11CE94999A3F38C88115D6082DECDC2125A4643102DFD0AFCD8682BE5CA11
AABA54285DEB171209CC4CF8879A65088C7381B9029B67CE9029093EEBBAEDD4
403C382D29751340F63D14C45D0C8ACE829FC3034643F4B76AB7BF41CDB0A2CF
B2CFF7A3E022256D29AE0E789DBA81CB4DDE7D4A970A3162D903EDE2880C20DD
FCB205309DA145A55A2C6763E0D8BC8A0BF42461DCA1CB7E613647A93FAEC756
3535886E28292A422264BAEA373D5F1AD84FC79DE23E2BA52D8EE1B1D3F80318
8614D6ACD81856288366086F50154919E5C99CF62A7700E896F5B69456110B9A
8BBCDA8551C3C14F979F3CBB597AAE41210AA7A444428DD055DD35D91A1DD465
3800988005F542BD304D2D1798BABD827BC8A689C3C35078CC3502DEF40DE082
B544B4AF7127EA6D5B8FF5A0735257BE29E36A29B707A51A697A4D8A360D4017
19C5FDD791A1C640D47AF86948448DD00039DB41E9C5BE1A7E6BB48920932280
BC552ECD04E2C33B76A0F6172098AA76CD4660980EFA1C84D5348740B8A4885A
BE1FC79E81913524DB238155870C6B9819E5842664A4049499CAFA7351D3D3BF
FEB9A51236038D4452E44A34F25718B7158C40F12ACA152F1EE78072533F8900
CC3A1869BE48305DA62447B28A45D6F516078C72A4B155A2715B713EC359F680
FCF2663644C985191135F0156722F0BF1DFACDE42BEFD5278ACEC4A55F1A082D
537B3C1EE890A6FD2ECE0EF3999DB161EF7DB88DA4B0C592385D35F705BC2A9C
CD7351AE879DBB7FB52F25A5A5DFA45DB0FDF9B94F0AA69918932E563C8827CC
340AC4350DD2FF1A3EA9F8F3711A16CCE9A37170F0C02A9C7143D722CFC08677
6227901157114767FEC20D2DBA71C87061EE8BF523D591180D29A8F8E14A7959
731A74DC4B215D7EC095EBE86A3CB7C28C2EA7E6A19A68B64EAF236A3468C0F9
453189A1DFA55A9459D1C5B8CDC769D992269E6EC4631B1B75F7E6A511DBD978
F3032D2FC6BD54FD7664FAF472BBF13AC7F619FDC4AD5B38CE04E4C555757F69
C669C5EC403770F681C400FAEA98F62F02633E0F85A780A61DF255239F9BC3EA
AD652E6D5E754B9ADE46841E52DF90C3F0D7CE5DD684566DCF0B43A0B0F975DE
AE2F7601EB63C39D6EE8C54611D9D515EEBB7192C63D22D02BB2A5A27270225E
C95173C09068553725ABA9423F4B268C58072241D2DC5C080E7881848222220A
63605F00205C205B35DA93F4D000126B2CE72AC322B4D962537889CF225B3381
6EB449BF2C28599EB66F071FFCE3410C547A9B74D216032B72854A0B8A6ADE15
EBBFD5CD2BA9FAB7E75099FF1B68329B68A2CE587608555325EF062CFF465B6F
184FB4C37A50F08B2F1CF6E09E92D6215A5C9BE511CF326505FC5EF2B72DC40E
3350D5D5358B49CD7A1713DE7AD5B63F462A77B6268B7AFB245DE6EE02BF2A97
B0542A5CFD6CAF309B7E10ECA06B51C2717DB5BDE8E80D6F29B33E9FE12AC804
AA0C6670967F6C3C2A7310CCC64AB48219EF140A1D9A942543FDE90924C9DB3A
5D667E0AF18066F4318101305AED22847F855960CC952649426FBD46FBB5728A
CA73B436527795BAA59086831567FDD5B3BA6931468115577ABD8222985FAED7
B6A1CC891D07185666E6E74DE886BB13021AADC9950E2EF1FB69E5350B281CA8
F05E2830521A7BE2EF1D993F75619EAC1B3A7A437612AB0E8513DF8F0F44E933
75553EA81965C83F6CA655BBD1410B7E8F600CA820DF8B4BAFE515BCC974BCC2
8E06AC06B07BB7E08BFA5CA8C5EEF8386971DE077781A9E67359AD8E75DFF208
727DC428911CB820B9211D2A3C6BE6A3ED0A5A2C1C623A6D6615F24FED298A68
097564A8429CB235119311B9888D0BE96AC4BFD340BCABB8EE589A69F74DFC96
35A0F5DC489018CEAEB1857D6757F789BC058E42F9E7DEF39AADDD21245E0B80
921B883DF60990A47DA204E69A8A2ACE452DD79826FA99B797CE5714585F3FA6
6C8F36F2FA4550F81E41D6E57F80881B3CFE5D6BFD1F3E8D1F7B13351D44FB15
13CBB22AC8F22AF9ED28E469E2FF07E68F50C828BC2FBAE79527F0C704941983
A39CCB7E05896DE7069693EFC870CB86162612B04350A792BFB5004B54A8631F
85FF8DEF675A72FA6F1703B5114C5E507E856A931CCB05A58C30CF4B9105E42C
B4E3B370A6190039BD94F21DCD05FF887330D1BBD50855261706FE5DA56E84A1
947299D5B636ACE7B2E2E54D514C426F7D16A648D59D3B346732D4328E297D25
70C8EC671F9C4B189830EE8D14F60C0B87DDD481DA478EB8439CD426AF9CD9C3
5372E0A6B90A6A848CEE1E28367DA333B6BD3485EB7A78582FB9373716136C63
EADBAF7C9602F31151CE723849A7CCB72D68F7AEDC298DC4F36D78CBD08EA5AC
1920F4E395EB7A69DCE16AF779DB5B0B1A9AA02D13551FC49C934408289362F2
470B36B6DA4F131753819D477857A53E17D0FFAB7C8A91B883DF299E5EEB9361
85CED1820BC8C84AFE01CB0D62649724476612F057A79C695180E97F6337D3CF
24FEDE2EC799CF7497AC544402C80DC7D665E1DB96647C9654D20BC7BB6B607F
52F09F53B087A3E5284B1C41859808C27C7DF8F1BA9F18E5AA02000F39551C3D
CEFE8BA4312F68701496DA53695CE804B7463204E96F011EE6CA8DB225952CFE
1F34F9E75EC3CCADDFC18C036517987D3138F766C423C3ED87397E685A342075
0F7BAB0FE2A25DED422E0F8F23EC7B74F1E8A369DAAB3305C440A686E566386C
4E57F54BB7B3572D01FFFF3BAFA6428355378CA104CC824F2E571C437ACDBC56
D765E2C7F61226CFC5613463DE449E66980ABE0ACCEFBA3D2977040D8E3EB331
1872472E4CEDB3DD9AE5B2B077C4245513CE965D1C9B09EB63A187C0A357F2BE
BBB9042419A511CFB272AFD4ACCE358A2FB2FA8508290E2C6D80A6AE0478021E
111AC732FE5D804A6C25089ACB08A44D981673596D8A34E260B497E5A36B4E5B
040BF8FF666F7C1167CD675098B616D5A86C56F95714D15C261A3AEB187BA1DC
2BA013A2DD21570432822DF741724E8D187C522D898821B44C90F1159046EBFF
F998B96AB3E3E182E29B819FD861E52B04E008C86E9CE90611539EE7C418A9DA
70C894C59DB05CDC0BC78AA9F2EE39EDB8512BDE50D2DB535CA402BF91895CC8
2A8E3112888B1EEFA597E1623529F8734C0E096F1CF8A2F1CD0A5709AC8CFC3E
BA9A0C45B48925B43CD44B53F928F93C86FA9BF1093DE1422A1AF70F0235D303
D7F2692DE791D9F3B2BAC8FBED7AE0AA0A7DED469C64A0CF686E69E994902A4C
425BA976EABF2B11775929B12E50FAF9B77F9884F052D1DB422D245201FBD646
3F31D19B14350C351418EB5A898BA95D5857F0E6D8CA3BFA45DBFC6C63F79CB0
B5A99199A3AE536491032675C7663A45FF0767FCFB1BACE58B9B77225A134F85
2F6EC3B1A1748E75BB691459DCCCC211E44D10C0CE6B2EEAA9BD199DC0DDA646
CA1EEDC05579757B7F84CF308B047CD4389EFAFB3E574ED7CE8FBAAAEF5E9D12
3E16DB04DDC2F2EF4E5CF483942A38B7120E8EBE9417C4AF1E4E777C33BEDC84
71D498B5988E64D3F957588B2E07F07D84F8FB1D18363226E2140737C6C1745A
028752303923E6D954761EA45B0F04C1A064624C89D2B6ACFC55655633F02A21
C2DDA28F18BCCEAF2AD29C826602033327589A7E01A1E3EB414F26C049CC42A1
07DB8F52DC35DEB4063866DF059F2EB3B549BB128053BC57B5D0FCFEA1117400
874267758887D672CBCA219D2B5841538FE1B0FE8490E4C82DA8E5846FA9259C
25AAF35857B18A048DE4026A9ACDAA85DED842C2A0642F862E14B66919AFD491
F98D85C214DB28335BBB3DEFDB921C86FBEEB0F238F7A3840FD380641178AFDA
ADDBCB87A95E0EB45F47522BD93ADBEA35F1FD33C37C611AFCBF59B67AD80F8F
4D376E1B46A8A76FD2258F0314DA293F61D30028BB0FB43F50BFF95D7AB82BD7
577825454E01412CA3930B382663283EEED30AC5A04E5C5434D732318AE791ED
C71A47F2AB39A3F400EBD0D7AAE0F147D8D2FCB7DB9C8D91A19A2C08922FEC4B
BF2B0C0CCADB597E641054899B9DF267A46260B2E31A75FD38ADF1D15D6A0CC0
2BD9E2665DA9C303BE330D235AF50043582A0BB588897DA22D5C20F8A2C7CDA7
54D7F8AD8F8A00E390D5F6F47CE1FB3E1E056247EFDA02CB1FB6B146679A7100
39E6666835C2D79EC99FD9A2B562BE062ED1027C7D902A23E18DC9412FC4A752
0116DE3E3A0B788C4A729282F1DC31318DDF05BF42F1EF89FACD712EC46352ED
1B976706A6AE560AD6A82C3B0FF970F8A5DD27925ABE620A2430CC675ADF11C1
73EBE194E18562EB1F9C2ED760715F3F49B5B89CE4D14F9AD84983212728C19C
09232F7AE51D6624C8B15D84C4B7B0DA58C3149999D9417CC312E8D87F14AF3D
C280BA7B1C3FE7A3BDFC3AA8DF0F3D5886CB8AEED26D9949014AABF2312C9745
8AD7A361512E05D95A3737194E9447DF03D073DFD709C036188AF869E8D791FE
3DCFC3E1A07E4C32971A18CFBBB502CF3C1C33D64C241B9F161DCA2420CD2AC0
3E542912B987A9BFB8FFCFCAF350197789934182DA1309B66F009808B3E847A8
73C89176E748078A88E0CC7C62913054F9FABFDD9A08823E4FE32710DB207ECE
EE6BA1E22403433D97EF143C518E3BE33F0B75634B03DD8EC622C9E512A9B202
4A9C0EC0CF7753FE13B5B25ED180B9FDD07CC588F6956EA539F8D3D032A234F3
8D362220FD53A6555556089ADAB4DAF9B826BC53D97B466E552B920DC304A252
193F1D935ED5268A6AC194D216CD992E83A0D7A93F3AA16385F40896D4A047C1
4C559C9546D9845455F4F39629920D97C36F4AF1E5E72A5E744A9CE157FD3F31
92252514A465CA900C0A13EE814AF1520B31ED8235C81796D53D084C89410508
77519219B5AB9BD534F0FCDBC0CFA816443196F92EBAED840C491B354C07BFCE
A039DFB0F7E2C38F138EE0922FBDD3D7B9DF6E0C9984D8B63A12D9DC4BE10B98
D5CD9EF55CB212E5DBCA901F57E05BA8B4D829DF4684CB74785537AE1091DDE2
08B70A82F3812CB70902CCC8A0CED4EF40A73FFC266AD7AE02AA5AA6382253CB
2BA6EBCCFBC26B35BA3DF77FD3C2604EF52210F343C793DEDEFB0A2B19553DC3
E70E39A3CFAEDCDDC84FAFD1AB548A688C4F785961326589DF0A09242519D5D2
FA30D939C1B685275504110F23D15D0FFA4E22B5A0CB4FC82C4BB848D07EDE0C
17EAEAB4733D35471A43C4AC733BB92B64091D3187C8F98177AC08A9BC2BB778
3E87F35E9752D76D9E7A10EC504C5FBD990108D3846FE48A7B088541F51D307A
A464BEEB0720E6F45BD57DB169FD3568C8E044865DE7308E8CB5B74DC3402AA1
DE45FC978490BB69153DA6D6161F7FE53CE2C180BA49BBA59E918E4FA36BA2D0
47B3E52E699EE5082C0CA07D5E9A31F28B335C772B3FB6E71E7B82FD6BD50908
B89BA75466127A0DB5F4A5A1D91B228142F7C95C7F64567C9D80D1829D7FE5F4
5647ED6B99C6DF0773B204E643D52B1C06099A4518FD0BC54C4AF901912F9376
A84492BF9B8D010255944700567530AACDF077EB4AD5C54658E35E1A0E9807D3
60DC5F76FE4F4EEF7A02B807A0FA8E38ACEB99E18BD1B2662AB55A70BE52BC87
CB78ADBBD5E0735B99A6E94EC375C735028B31B845858465DF291829A64F790E
760888FE23E05C921096AD39D5F46A74AC94A09D60E190C548172D2E1D8F2129
5DB3EDCCB493A9E4A67EA6C5EC3072D8E15B0306CCC6EC4461A41721C04A609C
E77F624BF3C8CAF224558BD0C004D59938F495AC07199FA85267A621E6CEC165
897D8B6FB0C1C003F982B905BD7D67725C83EF7119C2C4ABAA69A5025AAD3ED6
BA7F318D51CE670573B51F64669225605730E7907062FB3BA362B2AF6C697F81
8EA103F173EC183996AEC4092C1B220F544989112CBD3BC34061698C3BD2B390
0A8A6A0B93FD79ED65110B0037C9B5E51337A2B33B073D9EDA2B181D5A6F8207
1BD5D814AA6BA13A9C73CBF0FD4C582927E6F48151E720E33CA846C5D3328E24
246EA73EF03626CC1C0ADEB130863434670C7484ED206FCFAEF68CA01BECA565
17AF0ACDFD9C0B72F9F9A16B4FDC1DA224656F15133D61C144DF45E747C961FA
32F09B4884979D611382D96BE1124E7ED7538635EF1262851AD5896ACA01B298
9993D432EE93A75860E50BAD4EB082040B22F37E8FEBD4E64C12F69C708B0954
CFBC174255165BF75291EF6E74899AB3A9D824CE570B07CDB6D968A3362AD6A1
6743BFA5239A8637B2FD4D5C379DD8B8347EDBE385E6E8DD109CB455A118F1A6
19D0F5DB14BE3E295284B1FF01C814878F0C177F552BDC9BB309C64C99315430
57FCA963E43D248FEA4C74D488566D48E19DF56331E837562DDFD2B9A20C6445
8327A48F32AD428B1FFD3230CB86CC47C8229176701890900230196C0249234E
B51EB6E52C6840365835E3C5F9582E3BD8DD9E79DB7D4148C1D90B37EF8E7962
E77FCB36CF08F6FEE633DAE0E07696962EED3A3A13C4041ADC5F5200588BF919
12DDF6CFDCB995609788A176928BEB2B6E6000CD045EBB8C18BE053CEE561076
BF062F476691EDAA1FF641FF982B41BDDD559D900C5BA1D89304BB7F34C338DE
DB79981672F5D7278419D03E92B51E62CE40C25D7801C69C3CA98C4433407C56
AD63401DD9A62024FE72ED631BFB1C157CA626EC056A68B66C652833CDCF0880
39A20DF669BD531EBD40F60C2966E53B67F590AD3EA1E41F68DC7EBCD9E9B6AA
F63DB3AFB9D9B87CC743CD6631965AE319D61413D43312587BD2D16F265FD71A
55FCA1A8CB1E6BD2C89800409EB1790485F53C020767B5AABB9C1AE108B826DE
9F26DF59B2995B000E5AE2CE32B6D8FE367BDDFC8B9FC564104A12E66ED0144D
9BC80EFF68437C4F5744027B50DF95864E0159B477B94FACFD9D615260783E80
6D7FEDDC4387DDB2E10EF3FA3985EDC86CD990E46DDB637486F5A5AE16B8B27E
8909626114A5A20F1516783E6083A9639E040D0976F90B757C56EA776FC6F0AE
AFC0B15FEA65ADA0703D3F8956FDC4CE39D27612EC65640810BD7C466F5F433E
C555E83C466B698F5BE76D6F4D553769823BE18EB58FAD298314B8B004B03DCF
D92444913BE1977A0496EECE4FF615602C603E1E1266199E356555DA1A22700A
87C2999DDE579B60444EAA9D6190CC61CEF424A54E62107D2ADA1C19405B9CB4
C44F3EF6A8AA79106C39A9F3738C63B39DD1BC2B47072BFE92B1D14DE9BB73AF
0AE80410C4FBC3A45FBE3BA447A0139F8856BB81184F4256994B5005D654E490
867BBF9FE2F2E7D41FAA5D19294AD7623E060977AB9233338E1B79D44D2220BD
4EF12017FACD410123C239F97E12B2AC52034CC11B637B8BA9BAA8D07CFB5C9A
4A7184FB2EA9C7E66069D56F6579693CB65053BF56062972DE5B51E3BD84E30A
1D0391179FD995E5020FB2B56B488D0D602B6F7B9E513973DF94CC2D37694850
ECE54C80D2CE7D0C3BEA2C2777329340EC29A5F40576CC6C8C42D4FEC6238728
F8BB1AE6F5715FDCC38757056512214E376792D93EBFF478890B8DE836F9B0B5
A6E798354E80D1F3E8CA6184230B776E9BA0BF1ED2545A0446FABDF17C6DE996
6520B2AC0BC79B34B48930980213FA0E2C36D1BC7AF03B4AFBE261F8D4529D93
F2CA8DBCF55453A1FA4D72DBFC97B554FBCB62F90A0A80260CCF63AAE519616F
25D6E5427FCFBDEEAAC67F14F71B450BC562A195E9F1CC98A44A60F7D0CE0CAD
7375E13E761D8D7E9DEBE27755E9076DA5585F9EF8D12FFF1130B63D78F0A56D
5902AB6A25FFE9F98963FC566AE808AE20CAAE74590B3DD20A1CE00D9443060D
79DC3EE65E742ABA451A2E501EAEE3E3812E24DAA8DBD8E81D9D7B6FBE67A34A
71235FF03BA7479A9EB4D699114A950D536C1C44746579957E6556B36EE89D1B
A848F9FDECC6604E7D488ECF152B6949383EE7C7C95D376D2C48FFEA0D825AA3
CE8FF2CDEAA927EEC19F99F67B642948FE960344AAAC1F7663DD34540F0CA316
20868D9032C34BE24CD59ADCD6CCF4D19716E82ED1601C7627DC1A93A9046F00
61D3564D2044E9B8D39239A2044B1C0EE6096E008AD67226A9ABBB491C413AA4
6FA5DED522DA2A5EDF409A3EEB5735617E77A7A77CD82CCEF049A97F439393AC
4BA9F2B4B8E959E8877C908EC152DF4A9BCEB4DE7DF3FB85FBA15A1D1070FEA8
7E135E5ABA5B3216B772316E03AFA5A27E6F5EE3F77F4CAF41FB7121155B13ED
556A5A5134B85CF61DE04C9E9FF566F2CD09BBEB1FA1FF7EF8999DBA1B10FD88
E772B3E0E13DAAFD896177F1F70EADCF7E077FF92CEEE279D01E357EBC88C3F3
6121DE0957AD1610C7FFED2F5728DEFF0F93D479FFD5CAF4D703926F1BA042CB
A121403FA01EDAB3E0E96C71479FE3A4A5CCD867E5357A9C218E26F2DDB61CEC
F668D3B57D6EF154E44DD2822D40E023A3EC59C5C9EB75F27704912DAE6443EA
E098DC77C52DC288A2E5F1A7A225BF26E2AEA0F352B9C950B47ADF650AC761D6
9E7127AC4128988F493604E1BC8DCE99225BC6C62F8545E290F3722C395B2F0B
03B4E05F14021486C02CFDC6D112762B8527CBE3381953B0908617A28D2D6A54
85119D2B31A94BF39948D4B3688E588AEAE48E2D6A27F302498AEB3445D8CF8C
EA7FDF03568AF44E2EE4D8479BD62B3CC9ECAD676580F43F0DDB4CF11B602B9F
49BD4D48F3B93043F3ED792CFCF5AC617DBF2FB8C7A3E2C704F08BA994239C97
16711F492F317C6BE4E3D2EB502EEA5A85EEFD4DB4B9B2E9C804FE27C8B6EB69
128E5B705F8B48DD49577EF2E015E8D9C0F64025C76E0550BAFB45D4EEBFFFE8
10F076D00710C302B4E5E8AD40D6C3D3F556A20710BE57D1D1F58DF8A97E7C41
1AB7B0BD173C6E4825822602693C071225D0A59742608FFD38593AAB31CFB25E
01E9F870CA8523DCDF93D57CE57C1759F393A5A71B51C2CA3E8D601A4121FAB4
199883C9873396EA151D9E4CB3E69641D3795AB67934B16BD1AB63701EDDFD72
72117BD060711010019A97B116AB929E54C97C3E7390AA7DAC6B285A4CB00576
89E72DE1D7D5770F0DAB5D15A88FAB1C999BD8C391F4F045EE1155E8E99331D4
573A194D84C7B6487A232F85E82EB2C9D5C2056F4B7422995A9C662760414C01
404043E413839CF8C96D5618AE9EFF1F396331208B8544B26995F07752052A37
B5A18AB3F44D40849F4021CA494EF6BCC76BE0D8A68799EAB8C3ED2FDB628486
8F20DE7559A629FC0F98AFCB0990E42A47A7EE273B8DEC1FD2273F6B91576B1E
2762E875B9AE76695B44F086392946A6E7EBC4B4A5F133E7F347118CE7C1039E
EE6A9CFA343F0C8B645BF1A448C06125B353A060BC0FF3F186334437078CA478
D918C39CE66D72D901000CB57B459A1FC7CC2DFB847418BFCB9DF51625B59ADA
1619B9898070C85B75E55D23FA19AA91EF2F930F5C88B9C1F8171EE9CD00EE63
3CBD0747DFEB54B2D13683A18DEE141F7811DB6B92BF533DCD9B045AF4FDF947
700A630BFD6A5784A1D98D00CEBF2730D812FDDDD016B803C38B8923866E5B3B
72048904BBD47D276D475E2FB51F74A8BE2E5D0322FE45A04F184800733B1344
0F514AF796BCDD8590E088ED9656B074B08F2CD31FC681245C724A8E754BD9B6
34D0978C073A1C110CCB0106DBF37D3D6257B109E9C5AB2FF276010D7AF73812
3415E277C62F8D923A4F242A838C6B52EF296F939F20BD4C4DE790CDDCB68CC6
70E9A440628F8FC7B19054CF4917BC54655EBA7CAAA856DCC1A076DB74BE5191
EEEF657F57B67B7A30F19998965BCC86E003A60E71436E0A85FDEB9A467F4426
2EEDB54A04F8D32D5A7179D025981DB0F1AA37EB7E091123B1B0F2158A098CD4
C026A95D677617CAEE4CA4B282C8E5F07EFAF7EDF2347DFCB070CF8E3093B06D
0B80CED64C48B1C4A67EEEBDA6F360770054987AD65FA54A1BD686CCBBCDE0AB
54DA1A6F332BBBD2160632D7AC1BC024802CAF0F8F45B3B08141DD5CDEB790D7
6C36E9CBCA5A92CEDAA0ADDFF4C3ECD7CC083D70252227836371FF8383892218
4260FB89D5A9EEAC9E6E45632E21D0C09F9B758D62D1E7D85A98CD8D71BA01CA
74D342A75088082B671B45811C58BD3A3C1B47EA135377F86ECC12B42AB03751
183AF4A23A6E5306072985B6B7FFD152AF9EB2A58F1195A17CCED52E42690F98
08BF40C0FF302E4E863FE2EA69BFB3CAD4DA410E69C542CAC64B65F6B829C08A
4F5569954B34C69C09F6B2A5FD58037D23055702D82792444F53D54E8B18DDA3
B40B97915100352778D3D36113E649746D0F1FEF45942CEA347D253E10733C2A
ADCCB48BB1603145A82BD558AACBE2337E87EEA5DC720C53EB7A960552E683E3
9F8464076AD8A441BFF7B95FF8DB779F59FD2EB7F18DDE8C00317AC6EEAAE634
6518C73303D484C6E9A830E9148B0D9987F1BF8FCA62A6C6F745E4560D07FB78
6ABB0F9A79907A37B4A5F808BDAA369907DA0B72243748F7A097529B9C4495A1
F67111358F429F9970E29CB88A14156A2604D9760555130E08402660630A44EC
BF6C10B51818BC6D3A10DF14058F90B9ADB7F3699554784159F96CFD9A9AC474
51F4136DBB0FCB738B7385A014DEF1F55824CD51E2BCE3ACD4CC88D214546E33
1BB6625228F3994FF6FA6127D330658B85F88B74E1F2D90437D6FBCA0AB3049F
E4C6EC386DD27A95288054BDA08619B1A119A7CFE84A9E9D84558388AB4F4C1B
C2AF4DF194765FA36CD2EC0CDB28866065801AD16AFFFA9897485FEE2F102F86
37C3BC9598A1164C54C878B02839FBDFB30634D3F005FA2C42E085C3F897F0D4
9D1161EACCC4DE5819A914EEFC4BE55ECC5BA2A7A3C5BB32EEF0CABB86087F28
FE268CE4F7F89B3BD508E371B2A78B89881D1E6F9ADFDABF944146B3B7D9CA45
2453C825B92E606247E509FE6891D32ACA3A0D44585E55AFD968135F6492A938
1FA561B551306236464E9E509282CD12A5D63166ADDB5CB5AEDC58B71D4BC720
F615D2873CD11E06DDB3A778888F737ADFB8EC24B0F3B41C828B96A9FEEC29F5
90EE857F3D266AB284767DAFF3330B7E95B2DDA1814B058ABCF2C2B3364CA33B
D7970142AE10B7C80C03876B0FD46A5DEA7DDC754E1BEE6C8EE443D62AE6A2C9
A48EFCB71AD5A6D8FA93BD49E7FDC803C2554A8CFE209D1497290B7587F825E8
B8D5663B9318AA67E31A74C8D2D91FA75B5BFCB712ECBD0EB1E07CC1B7FA1F4A
6906E62E5E1E24E755FDAAEE8D7B3B5B34ED4B145F7929825B940D9ACFDF5EF3
07F9F5C3D9E4ABD3A07553F18D86BF4B6DF04DBF7202F2081DB253B9A323629D
B9ABDE827E8737D8227D9B3048D8507E80D19F6C299BF0C52073450E19CA2940
1B2D22E3BD0A364F4AC9FE64C0836B09C674422379BE258F901A0B50141288B7
EACB5C756637C9164BDCA1969C40FD797CD026EC07C07C8D2AAAF8C726595AFC
76E4017237825DB5F7B38287124B1DF043B0FCB632C67DC99A1C4348C3109D06
71951505993DFCEFAA29D9774B68E866ECE5F073B6F1F63A12FA615998F2099D
8F2ECD88E78862CAE0352C4332593F1923A251B1E05021A8BB466F71C06B8E74
1D5CB332EF1594D4D88AF1A3D476406FF9670A513BCF04CEC4F4AA53F3E5E7F4
ECFE8C78E742650FA5D878A7BD6CAB59BF0A05A240072203661C62E8CB19072C
A76705E8170693E796F5B69456110B9A8BBCDA8551C3C14F979F3CBF997E7524
35B04A2885E1BF5F7660FCBD590ABBA7581E5626FC0C7682845F3E4266B7D327
312EFB770916FBAE73CF8F5DE4CBA318052DEFF17F648F76D3347EFE165E55DB
CA92E454187EEC90EF1042DA786C6234FB98DB85EEB29B46EF5DDF9B3D21432F
66E1F7774D9D4BDBBC9809468996306FF87344532D03124A873A277D0CE8C58D
7B1F9B851BFAF13327FEC0B3B6A78C90C52C41628B8E1772C8D6CB46D3A90481
0C8A2370F4DB0B95DE9F7CC1875442FE6B6B341FE71E4A756B1388139A898B65
1D7A5B6B3BB8F2E403EFEB2E3BD728621B9FDCFDE691BC8A235CC340643408B2
CDC39081E36984C6535A4650B52D527A15A3D0873CB6BC134147CDBB2844782C
B64127181E2A06CB4FA88AF922E0DCFDEF73874320ADD4AC1C12F5FE98DE2420
B3E3A28D735CDC6DAA8E1A598B5A151B6DDBD0D0A90C38BB1F69F69112D826A8
52C909AD51414E7E37BCBE5843DDA4C41AA4B42E0D249693900D34AA106FA314
D5231540F537EAE36C576BEE6254CD2349F3D69C7055A7F4CF873BD47EF5A468
61801AA70339B5D7A9B09C75A220568BE60264AA4469FD8D653F48B3A4D7DF92
9FFD88F15A1BAE76C6EEFC79C130434978A898EC8C4702F89F660AD38ABB9AE8
11E6C73E3DFEC91D824F9FD2C73F1D915C9CB74B1DB734A10BA4315C33D5F9BC
3EBCE5D8E8EB108CA188CE10DE7EA7B13487D4FCEDAA341B720F5AE7D24058DF
483C647F694320E78953DA5A08A8F7E99982084F1533B65ACE0E766EED25C22D
4B7752E461D1634D57CE39D8E1DB5CFB4C451D34B1102ED43AF5EE50405693B4
5BC96AF80597F94E68555735A8F1EB48AC809BE050BAD39813DCF287E7B822B0
94BAE3062E6E10D5505522338C8FACE403FC4F3019C58D8A927B6D15C0293B8F
417DA7D574D83165C98E4FCCE1832E6A7F47386A45E5EBC9E125A002A6E1670A
BBB4B3044898FFEE955E7C8A927D947E18E7DD9DCA76378C0AE4D2F2BEBE3923
9ADB477FBD2B0D86B7025004216EB28C7392B4D5B2921DDF3451A86AEB413411
A7976AE07F8E9575263C4C2DAE8E5FD3CCC8747BD12E63220BA3C3F3C7979128
EDD4F9537C4F0E870DE54D18F8E1B3574B7ED6CF34EFB8455C231D0F83DA849D
C65BBE3920ED48F2999DFFED7C736E945F8453ABBCA099EAE8CEA005E09429EA
602B0D2C1E4F78F0C3E0845F31B2A26D70E120019478654C8AACD179511A766B
32D2B9FB28B1B950626B8D61E25B73FD1A9E54BADE8F858094DF755F2C31BE81
7848C9EC8D98FD54FA95EF36B456B0FA852538DABD9B469582FAC2901B629CE4
137326A88F6E1DEC6634D08F44F23BEECB6E0DAB28979DCA9FF1E7B3A9E1899E
303B3E2CED446F5B5130189570147B9B69CC74247838C9262AF28647D31AC19E
694472A215D2F495D9F2B2AA46D219B56C6E4BC52515C87B5539303F30BA776B
0D6CA1613ED40825C75260C7BA8A5A0847661FEE0F6B879F59A1FBCC751A7D63
9E32C569B568F112736EC85AE935E17F24A0067A893DFFFD64DB0BCC9760C91E
86284AA1980B6492CB0ACF13DA5AB57954B914ECA637ED4A18ED0A942CB6CF32
C5C5A258F7DD5FBBAD95569477046CE9B948B1B6E4F2872DB1B19899E4BF8525
7C42A6ED10B280B75F29999C7A0E3AC55C7435402D28F2E84D2EE64475E8D307
8192F37463DF15E7FD87D172622D47714FCEE0E1A00A43D254FE64BE0E05DD15
7E37A6EB7BB45145DFB3A298C718416514400EB47B86E2FB3F8777BA26C5C1AA
E13E5092E2695EA58DD57A4EFA1A9B602A6820FC779E72A508E242A05D015A9A
32809DD51DF932DDED7E628AB108A61F2B9B09CDFE5866948199CA27C1838AD3
9A62587A2D7443368FD6795C2ABC2ED198C21C8B2AF6401FEEEF9BB535B3BB2D
F00419F59E7D9B9BA37245CDA57B8F04EC56FB163C13A65128994D74CAD21F2B
A384708FA64276D900EE843BD07D2209AA7B1D13D190FAC2418300AEB3921E11
93A47BEAF0D9AD677703A1ECE6E93E956E13A9C528A198B8EC8654AD69CCB5C2
09964A2CDC11928BA4BD9F1C63B57E0AAE912C86CB6CD5BBDF8080B5FC839CCE
9E2DBB0220DC5D37D70AA6564CC6C857CD4B446F2F5B45FF242DA4932B973139
F328E7E9282CFBF688A80AC3CB19AB4DFFF39AE4D2918F2F1BA6CCE594EC6E00
840C6D8B1E72BB83B1FA8BCF37ADD8ED5D742B7E9E32B069607E2DF3CBEF32A8
490B9FA9CDD72ACD262685F3282828E93178613843527E859F21169642948619
2E1AE5A5B5EC87675B021FE9D71441E352111EB6F2319AEA0AAF7AAED4A85C93
979445E8D1E5A9BDD3B7239BBA42428460AC283786C0E4C0F45DA2C8C78EE357
B6082591E896938B584450D9E008CDD0202DB1B3CEC87D278823FCBE7C4750D7
693E51E88F1AE53B00A20CE1588510B97F7BE3A270405594D3E06C17B47719E2
6788A1F42F12BAF2EA2AB937056D3B806BA7F408F14F24DC0B4E53EBB08AE39B
C8B715A541515BA68D3264DF633E597F837B8318DE7C223C704B2759BCB42720
5FD7F4C3DAB54FE5BC3367497C95A462341C8707177AF767B8385206F294CE1B
C740EC90A0764E9027D61CE5938B121B94D1D58A9BB32EF6AECEBE77D80BCA43
04C3DBD06FA56FC16AB67C7BB260937BC426C835D610D7A203D903D77382ABAA
89561C37924764E3A077EC5871F352CCEF1FC6534559D47C3240B0D4A30A382D
ED5AF585C938A807087B99058C8B8EFBA9F66BBECEA13733037B3072C48A4962
3C9D933255633A6EE98B2CE3B0D8C1A90D72D4690C56F4BE860A2B46225D1784
698203C4F0EBA2C58BA4334DB33FFFB35AD715BB0DCDBB2D35B51730CB8CC9D2
7B104C3F5A3DDB5381CFCC78F31123A59E84A773A3D8DF2CBE36B22710938B33
114D55099F0CA84BB201CF647BCDF3914AFC8AE0EDD3B2A799A6FA035D98B392
3483A529AE24F3FBBBD9947BC5A800F9DA6B7BAF861C673B44D091D207587E83
E22207DCAEE1D18C7A5A482C1EE719E312FF9BDEFD1CADCAE9F8CA8978788158
CA027DDCC50FDF012FF6DC6C558739DDEBBBFF6170BACE74C200413D60E849D3
E9908B59DB3B35C98107FEFD347B51C9B97E5CDB78E93975454F805D3A4D180A
4E5623033B767FAA365ABD7BD51CB456BEA6F429DE219119141D7B41CFD13554
E3090681726C4D377CA89ABD1BEE3C9BD84A05DD11CC849E903806F30AF37522
828FD5DE3EC220C719B63A96972F51B3AA708541C4671738A1E0CC16CC401640
5B0A28727AD31270BA29B2C656B41FAF259DA36A62656568B3C5039216762900
C1A624AACA506DCBF9AC0D226D72A8E4926D812092E92DA4D04D0895B07B66D5
344986A5E691140BED98C953283F17A3CBD6BA59A1AC2BACF1545A73CD88A995
C71A69F35BD0CA4542824B1F4329D051DA2F7EBA5400A1B90902EFE6792F2071
36E1E16B417F649CD01BAE3BB56977F0E8D21158CD18F6523CF7B630BD5F65E2
18E892C350FCADB5F66EB82D0813EF551EF4E2C313AC9569CE318E21C11AE858
AB0BD573C2E4B6855D1BEEEC95A7DC4044F60BD2A1149862434B7002E64A612F
31162344AFB0255A91FF7A44F6B705CA7C0B29FB8A98019B5DCE5BD7A774F8DA
FD20F05C37F2EB54F2D00C2ECE44873FF17704C4D368DDE2B930D4CFBEB9FD0A
08EB239AD76BEED158DB3BE2DC4BA1DC216B2D085F23A2AE8A5A339D8988EB92
A5349043DB7A3928EB7B19D3A6754CF4686BFBD66879769650099A6CF35C3636
F99C9DAB0CF27C1433A5B21C85C42294C5C5DA468B5307F0F1ABCABAD9EBC22A
55727BF40CAB44696D80CF4535A1AF1E38BE310283619DCD7B2DFDC9DCC81408
4EDBCA0E7C0A985CD093AC0BD5DFAC3AF0C425C270647B327C8AC1306F84CB56
870EA2BE9D0B1D1F3D34CEBAA0367ADECA2CB7C11DC4C275DB0A07C5E530F886
8C534D966D409A15DB5AFA78F7FBBFD71535FEB7049F203B46F9E30445A2896F
0C0CBAE61187AFEE73F1D369ED173F8C4EE8F7F869376ECB29BB35D08017FDB6
7ED9FD13987E816E560C69050ED2476275D5384CC384430A2282A489825D352E
91931AB233456796F2AB712966A45666F8153870E2DCA46536EA67FFF92B4BAD
5F8D20AF9AE73DA2EBF3E6FFDD06EC512E1E3DCA950F0BF9AB2EC9F5B7BB957C
D0B4CD1D31625B095EA8C29531809B80408BB9B61C2C2B257C3F3FB0FE3C6A0F
9989C65473998758CB8376824AAAE607ADAFE8D8460FC48FB39C8126488FA258
BA9735BDF4DBA7011E44B25280E0D55FB56FF4E234A7D47E666DDFDF80DB1BF5
E73B33A29B7B447820B08DFDE19B1144174995D179680584434D8A5C8A425545
6DEAD952FC21529034AA18227B4F8A4C88659CA617CA10B64B499E11E32638D3
50F86FA328363D1B4FE236DDDD5D327FB8D3D490CBF46A09BAE5AF2334D5F766
F52626B6321ED562806CE627529201F1A70ED484FE92F0C684F4A043742EF1E6
543DB5D8D094EBD746F00D4870ED44C4245243EDADBE1EB035C42C067B09C7EF
4FB3B136FE6D1814FEE7EC0864080FACFA56E1FDE940835580087C6032755759
2F512686F02CCC66343D83CA952DF1C68576FB4205465DE8171F1DBAA1D9E95D
DA35726C1297991B5D066EA5AD28B3B4E057EDEC637353C7D47BF41FBEC8804E
931EB46911D35870C88509B392E1B931F0E402CF17A2E42EBECA4634F060085F
E5EC3F1666585B4F1FA778D22E25FA33EA39EF3D2AFE93493193581479A70FAA
733BE555C8AEF37D9872B22CD19ABFFC0468B2D448A840F60D8F56D90B90C3F3
C665E41CBBD9BE223629132D9D73AF158765EBCD0BD1C62E95F659D68F0D69B8
5BA188CED5131C0EDE4B8C30E1F06EC82B82F60534847BA94964411B0FD9E306
2F4EBC4405EA4B88BB5F97F04924E8CAD66D15C5F45D0E78BF2EC3E236B95EF9
D81C6294337DBD8A164B0FCBD81E03089865561AA47E9ED72CE2DDC6013049EA
647640BFC81F859A1D342E694DDD42BE63D07E64ED172B485B8E112CB3B2F914
00BA184A8D68FB7CA00ACD890470AC300CF5741B7B055F44BF8DEDDFF05D4C29
6513355282B2ED4A891389ADBB5E2C2A35A0AE33581C3E03AB9EB0B44EA711E2
AAD16B3B24C608A5AD2E75440B4FAD19E6C057BE2F7EC3151F50BB9D5C0D6ACF
BAFA134AEF156D574560980EFA1C84D5348740B8A4885ABE1FC79E81944FE0D8
82621F41648BB24DFCC977715E91B28FB3DC5F4F236C5F077DE5916A5E457123
6CB05E25C0B681EE2CA69434CC34EF0D0885ABA3C73F1D78F811430E0A4B5FCF
9BB710BC75E0106F5F94BDCD5EC3826DA19468F818501083DC55B0758CC813E0
EDC810F88A4B4CC91386C23AC7C3C278BB858369D6D37C8814620146E27E3EB2
B923977BF14A36F7C6CD3036C8A458B0206B8ECADB543C32BA908D26B5CD1069
1FB92BC2FA54A04EB649B111648F07B798D11587B9747BC0EB49023DFC9947DE
3D2587C9B337A05F4A962CF1C22D83316A517000F1073FEBDA8601E0FE9CF57C
6AFB258F73816CC190CAF25D9965C9B19FA3486B2251BA5739F9B229E9C09CF9
428E7A63180EE22CD43B910C9CC062DE49266623AF9AB4BB367E9261A67C0021
B9D29C89BD121E69EDDEC575B281609ABA395F65E1A226D43021EFA91619589B
3D213DC74828CFBEEB5F034ECC85F78DC9DFEC342E27A763669EF26D6103B81D
4D4963B96902F3A84599D73EB3303D7B74883F763D1E88BEDF8B54AFD478D9E9
39D0D495684660541CC687AE75813B0EED37BBC077BA859B9D7D602DBC212C58
16109CAA85E7535243002B3C3264CF573DB6FB5CFB0DC275CCEE298E96A59755
370E746320CAAA9DCD5DCF3BF8469EF0B85800ADD0A308C5B83AEB4164DB120E
A81D5EF7E2981B87B73D560A8E6EE0BEE3408D38C8E6A0AF6DE926E72751B7B7
3886C1C0394F1A561EA185C516EBC01FFAFF2326B40E27E034DC75E7E797B53D
EB54976650258CB7D25BD0B8DB1CFBB22C420D71382C7E50485C3E8B62E7C32A
29313EAAB849169FE98FF9B3CFDF337CC0D15417762825775A80924429A4EAA3
6622D23162FEE4F82603E21287761A738634A25D56C898E1E40F8362643F7FA4
217D853967AF5E3659D9628533AE56E65DD6C4550E9C21BC719C0DCE89FBB23B
25B8BD6276ADA4ADBE45E44FCB6708F22014A1028F24E6CD6F9A07B36294755A
19FD0D47FA4B70AFBE58AF4F2695D49DC8865469CE182BA89C9BEFCD87DB55AA
5E0AD1D2C398A2780ED9C271EA7A458EB6620FCBB0A5872C27D7B74DB62AC7F8
8AD0BC08539BFEA00B80A262A1D45C835CB096F1FABDFF5C0CC653373F102E39
529212B65E7565AC5AF02977B58807A874392E443C9867046F4B020955E1D3C7
D3B4033DF59483088E0697E444F8698C55D537D25FB796938D64E51A1017DB91
9CEAB585B907BB47E6B700F7B1700FDA55453F0E5D6CE8450B21D3AE71B2C39C
A75F0EABDDE757F9E2781F25A1CC32F8D30D9DFD865FF57A9B302D37F16E8F25
6567CC438CE60F0E21E28BDFCF668E595C88EDF2D3BC8D252111E8DB45FF21B8
4D20BF831B0CBC2E9B04F956576C1727656A7B5562B9EE7E3C2D107E78AD3393
806B86F68A2B24998E20AE7ECB82DE000562A5E3D494682B8FF65D3F598F41F5
1F1DB90AD895AF22A3A9573F0ADFF57607D1EE51B084AE9319C95757EC43B202
279E15456C72C9D5D0A44F2547C832BA3D99156C2EF6C28E0385E17E680AD553
E283775875126F2960DBB653DF3C8BD16760A91B02D5E8D679C227DA8E320E4D
1C61CAD4FF35F5419CFB55B68972EB810AF897C0C2BCC17BB81FAE3E5EE64C8D
835CDEA64084E2039F6F6396A550734A6FA75DBB849279484E894C0165289333
73F49DD254165ADC4C980F349927924B24C1112097012F7D3A005133233547EE
DE16EAAC1024DFA2E161FB636CE1C244008F7B2B756528F96C21EE5D4D358A26
7105E3E1FFB7EE0DCDFAD9087B161E74E4B1F38E4E2B8E6B7000386CF5E6C128
A31DBF93F0566A59DF25AD24664C979BA1EE9DC972DDFE5750B9009F87410614
65C24DAFD8EC1487646AF7FA888F5689FB281BE5AB48A4628EC39C97169CFD29
C70C899E14087CCC98F595F2C64AC365C8AE047BCDDDC054CB3867AF0B7E340E
3981CC10BA076A73CE0A869DE9837D710A56F1A2149B53BEA91A5C1846050E80
646EFDA7DA8A66AB020E97AAFD73BC85B6D00B43218C148C2FC26E7F7C2F368D
C2FBB2303E5FC195A9292660BF89FE798B0A5928F7CE466BBDDA8186563C7015
6F85EA00525372BDE229F1BC277751454170B6DBC6304E5831517FF93411F08B
5F5A17C1E554F67E8941ABBB66FD2774B5E40EEEE9FFD35C163CCCDD970AC391
EC1A813C4E497D1E90E7A0F10941DE0F2AC2D901074A76E9CABB98816531D198
3A33A1BE7394B42FD72BF46E48825E7DD882ECEAE1721C799A9DBA12E901F630
BA506BFC89F465FE7C2844BF832E4D54880BAF264A4431884FB237D189289C42
A534F59650E8320C39376D90BA203902211FE6604E9706868E3BF3E6247DEC4D
4ED775D6ACE9F691D6FF2E3E78D108E4C7C8175C8237BCF5B4CDAC49123A23BF
69C4A71F63B6B2C61548F3CEE996CB26E3ADE9D4AC830A6844F1A55BBA01946C
CD21249BA513FCFE1B32DD6C73D8BAB008982E060B569083259B284E8E75ACE6
814BB2CEC38BBAE052F32E53421CE0513DD30E9E3232C1C000CA13E1A14F0D3D
00FF758AE9A8D9B24A19D4E71995EEF85AB528E8CDC20A1B0E03D4A51894ACF5
8358B539FC08A261CA9C097ADBB35E0F1641F68296E8EA10A86F626CDAE9231A
A6A51A3F2F0C7C8FD89787DD0DCC0C8961D72E55119A0FC4A9CD6696CC575D46
3964128BF1924AA44581019BA263D8B594DEEF63603913A2AD866D6929DD5CCA
877B30CCE56D7A21F8358D397F32453ED04862F0CF889F91EC8F9C6A0148D302
EE52337965F1F60FE57402689161DED89001873451BB8B353B7321402344207D
0BB5A35ACB718602CBA87A3E1C555C0B9F47DB9287A12F7718EBFFA684DEA9AF
ACDAE0923CB4CCC5D1D9404A1801A9A3F6A25DC77FC7C6B95BFFCF0A1DADBE97
7AC35AC687CBE49A88F238670B158CA1A131AE5E966D8E84C66B0C0000574E65
D5F8B35CE0CEAFE43F3081E3DE58B8915CB94FB68691B850C169AFD69C818410
378FB8AF94FCE22FEC58DE0C126F289ACDDB1DF965012667ACF4C1DBDA025E45
82309E51931E0A17E510857343037D373A2F9133C1DECB325DD34292879DFB03
5E41C8C36B1C8F220DF94122B06B2E5FDF507EC02CF3E103D775B42CA507DCDB
3B6EC075F7F050660F5E956F0F488DA2EA2199E71353F55D2630B595C164DADA
967CFA1591C96D648516AD0B714B5908E83FC5B0BCCD0E3381926F4159FCFC4D
10657D2B5072
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492847AE57C85675CF04BFD1410B56E616F
68C3927EA7267C0C4BBA87AA3EC7166170B80B7355E802532D38053D427DA3EC
5D297AB110438F9AA9CEDA887E63AD877E9208260AE6AF24100E2B365BF89C5B
679912C69C51E8D0541100E3DF71D501F4BFA0AE8260EA4119883BE0E2CCD156
1113CDC4983460A31A70C6614DA60CBEA3A564539DA028D46BD8A6C8E870451A
F92C3A3D555E94EA81503E0D53C0AE8AF190625DF8F48C433C5CA5E61B61960C
10E340864F2D181B835CC0F9C87C9CC0E95FB3F1824BF5ABE0DA3110FBD87806
4770B0F94B263E2C7A3D9DF14D9BE01BEF9882A1EC2C8DDA5931F895D02E4FF1
CAD0158061CC26D5256590E51541844B9AE3A861D6412B59941B7186BC31AAD8
9CC7F07EF9A36CF5C32F54ABEE8B83306227DF64A1F4E9B350DB04B85024FF0E
6FF4C8FDEECC5DF7106C24975E54928A3679928D4D84C98B3D33843CFCBD8AED
A1A74438EFDB0BD68AB2061EF46D65CA446C190A6BF6E0D8DEFA1E8EDDFB5541
473187ABC3D34172433CC652E9B2516AD0EEC9F452135D6AC8D97A90DD4C972B
69C05585BD438731D0DA714733FABC30765D6775BB68C69704D0BA5D6DE6BC5E
10342040FAE3CA1C359295C7D2967195AFD2D94BADCE1E95F17F0F95B5A683ED
8DA83806CBF2B803C94B5A135004A20823158454E29255E8846AB1AB9E444B82
AC000DE047EE32B5C7659AA3999D8CA1D3941D1FF042DCB7834420A2CB78723F
B40B625D7418A892CFEBFF58AE1CD0F128156868B917147969EF8319C216ED3D
620588A8D3D13C4737BB89F1FE17EA91AD0A119E1754916E4957C40F7642AD75
0E847F04D456B101A89F4E76E6BD785EB1F605D78CC0AB1425CEB017B47C1D40
BE68CE2BB94BFFF5120F91CB493BAD5966F870FFA6AE560AD6A82C3B0AF0C810
C12CA6C41677519886FD5CD163D6FB351E2918F4E5B5D5A27FB8E57A24EDF9D7
42EEFF2C7558A4479E25DBF75353BF0CB3E744B9009BFCB1D37E21EC06E4D7E0
2762A656C0E348FB75DA17FAFCFA53893D1ACEFD8C3EB97C9E7E5C3C5A303193
004DF6B0E2446527C65DDDF917C6C8B730247D89C817FB276D85EB671AD64DB3
4BB09368AB12D82CC4A183ED86D2841E499B785084AA21B81AF837A206A50773
FDDBF92515FD7870D5A35EA64BA957FB2F6990DCDDDF2859681D7B7D5566779F
26081CE1DCF8FCBF985B41005EA0771D928990C0BA6CB7E33875B819AEB1EFE3
7A3656C9B2060A89B3D1A0ED127FEDDC4387DDB2E10EF3FA3985EDC86947215D
585BABD246585FD44C7FFBD5B878504A44F08C38AB4A35ED5CC53EE38F810C49
4CDE233ED8AC7E692EDA8CE219D733D37296CEE1118362904F622FC22656FA58
65B5E26CAD7951FBF3D7B27121FF01DEA6F49C7A4498656B8A12ECA7752E0477
CC7F945AA8CA30ECC8B017D3365E4F2C4D6F555DAC9A6D17C263F63D55D6424C
58ACA31C6B17A617B342EC92A2FB13D4FDD77DC3A85B2508B70FEF36DD289991
A16B4097497EEB38F0274AAA1341AD3BB645B0D7F97ACB233FFA576119456D0E
E8D5F85BD47E3C79CDB4AD769ABB374D1B705D61C428B44B213057725969D808
B280BE2A969D2207BDDCAAB6AB26EFDBF7E27A57CE61292AAD6582B3A661F4D4
8AFE06644856C8C9DCCC07407A115D6D45B7DF6929B1C79277F3957EA1805B97
8529CE833B1EECAF947E67DBA704AF3F29618A894235D7DBFC1153A5F74EED26
102EEDB139492E743E82CB61CEFAC99D77B61F60FD9B0C1645E399B20090DBB6
8DFAAF4C6C1919FEFB6E3E8EBF926C2A91C5281153D5B28BEE5E71772C8921D6
9D11ACDDE095D43077D6D8E8EEF114F60F85935BDBDDA3362A11E0BF7854BF4B
BC52EAEB261E696CD413485DF93CADCED318B5FA421EF0BC594EFBA262EB2C41
4E43D8ACC9CB195D12F3B2ADBAA0D95A443F525372BDE229F13C485324C60FD1
D7DFE515B666ED51FB61F69E18AF955D6620C95021DF41F66204845581723BB6
B76B4C3C2E2E5B8584AD015374BE36AC1E08E1C53C079B8BEAA3E0F907086AA2
3BCD6FA9812375C8E8D4ADF7A319E9EAC6238093C798878E5D558B30ADAFC1AC
17B04381C6754327FA7C65AEAC1A2839A9FF799456B6E5B9BF421E82415746B3
63938E88CA325AE4BC6B36475154CACD25A07C74FEAA2928802611B4AAC8DA96
F7CA93B7288B2491380B2F4F87646F6BA42247F5B593A0787ACF533199348D11
730EFF7C25DD5ACD0221075ED47DD6FE8909C387D8F02A88FD24540AD71A0FED
2665CFCF412B99167152D35BC0E671E657EDD876C39BA0ED4E790A79D8AD6723
4A2C9360790E4981671E3F898A1157850F48A5E0F299DD9078866AC4AC771A7E
ECE3275C26835080FD2AC78DE88BF65298A8EB4181F1646B5867D0EA3446F4FA
176517141B75FA51F69D54478E279EC2855938CB532FC260FEF5CF3FE05F4F6B
1A6AC463C1D1A24E7B41EBAD57574D43E06E13690F831AC63F570D466C8DE97C
2E08CC01056475E95FB467E2F3B08917792C1DAFD35FDA10C0E14D125C730ADC
BACC2CBB9BCBB0BB982F75ACF33109F8AE7ADE4954D0B1E1802506DBDA73CFA3
DEC72E83650F240B54E88E51C065039ED16C5B958CF632FAC74FB900E04B0B13
B26BFA8A80D5663FAC4A5C3CC6895C0717E2271C6A3F722B2F6C2CCB04097EAF
EF211683EB8F6FF2306B741C9455B48094D2958B832B76458887F0FD9D971D2C
75AAA237EFCFBE0F14F797E71B0E19D074858D2BB30FEDEF6C34FAC40779F603
770BA127BD4B9E4F5EC52314B25837FD118062685FAF4391CC91AC0ABAE56089
30E599D101B7ECAFC159AC2335D6DFEDAAD93A074010C5626DD9470582E82C12
2DAC32220AEE7C75A5BAC24E9E43AD56BA6B5B915CA1A908C4180B7DDB99E3AF
5C45072D5FDE12DD81276D7304AFF3059366F293191CE257782F236FC2299F6C
60070DD031F172CB2FAA0C0BFDAD40BD3AE7D647B0FFC9298FF9481A19CA03EB
E2F1EEE59A3D6E3FC23B65AED24295DFD94966CBFB46E98286E8AB5BBCC5A8C4
31D8D7BB6D38C459ED7811962AD08A130D7781F378AEA20293910A7716341DA6
4093C33CE11E30603EAD00851CC85FB116890A7C58F795071033711947B65B0C
07BB7FE129E446F1A58F097CC13CA9BC695F782ADBE50737CE43B15AEE7EBCB9
0CE9D7EB1913D307114496116FF0087A48789461E310DE9062984F6951B5AA2E
BC98536501922114CBB2D9698493EEFA925E555E776D6916E68159716FC183FB
83834CA958EF2A4210A873E6F7DF8F113E86D87F7B364763BBA1AA81F9D7B871
D7EAAFDE0578B3E819F2D472E963C4FB539A61127D80FD783E271DBEDD8994F8
A2E9F96F4F81D178EDFD36B63A9E05D8F4BD13318C16396253CDCB9E1EE7A887
8F02E0B498DE9C1A5F110347B7B612146B59530538023BDA6569691729EA004A
3D96F0FBB300F40752DDCE278F26B5D50F9C8BBDC7B3D5D144869BE59F0BE9FB
57853D65DB474E4CEB98EAAAE80FEA3557FC29E982F4E43B182BD85FD6FF9604
20E3B5F8A1C120887EEDD7CEC677E95307847599B02E5AF54BE91F662979D0BE
A1CC2205A8493A22D252AEBA66664B2A0FA2AD5C2BFDC446E8217D3E5D67616F
A9C8D25588F1689221B896E4663DCB2823847EA18AEC15EB3464CD20830192E9
FA76A8D8C8454C7E9ABF6C0F725BC64477D228181C86BA782F4FE02493A70F60
73CE5AC25BF5C0579654DB07E4ACEA3666110AE5DED90584F99E14B24810C5DF
7394EE947676E459D57DCBB3829ECEFC74DC1A1B3482A99DC90EB52844D07B8D
4D86246B30916CF5B9EB30CF2688AD5470018A3F2D47875FBB75E16CFFEB450C
B8BC91FFBE6C83D561EA7819C508DE4AE8DFA21E23DB7E05FECB7CBC4A049B24
336687838F532359D6FBC18512610FC852B07E15D4B247573263395579F2B2D3
3E0A136C429A9D806C2CF8AB15954BFF59B4AE356D1DB3175DDC2A6AFD06EEE9
950911F36A10ADD8ABFBA9D53C42A690A48B179E6725265A12AB4D9865210714
AD7EF694588DD4594813371CF6DF55FC8BCE3B9F209F7A66F4CC713EC85C44E2
C692AAC42C9E5003AA9AC548FF0AC943ED9E898E52F2294B3AF6C494A1A62A0A
6F8E820E383A2F9A9BE2FFB3AFF49BBE499A6E4A6D986438CC0F8950392B6CE6
1423914058FCDDBE245DEBC2441DF1AA6A52716A7EF812A28813BA8D3D655ED2
66551C59852C1BCDFAEE9FCA1B8B7B45FBB5A049FC399C46C1426F4FF72A744B
8EED9375BA41440D24BE8D533BC804C1C8059928ABE24544F41569DAEB218F1A
90A339268479552A5D4F025C0446A986C64DFFC2C0C909AC2835EF3FAF19B53E
44F7EEB341005187115312A76DCABF4133E260320CB39E191970C0F0E81DBEF7
772D6C5F077DE5916A5E4571236CB05E25C0B681EE2902AF18783CA81177E26C
F828FED0D16B16987D62B6E83BF9B59F90EC4E790133AA578C8AF018B06D7B9F
5E162C7BC6381459BB3BD8E8BD8CDF61FEF2585E482EE3E3235E4B3C55CB96C5
D792E2DDFD91D5D62FEA685E885923620FAA16910AA9EB967D0B382CC9929D8D
11C794E55DEC8F51B5D7BC7DD0F437F1C1A89AFCBF166B5E882C1009A9DB4ED1
9128C657C8098ED5BB7691BBF8C1F6EBA75C1C9C1670B8A568F69091BF0FBC9A
D619AF7C314419A4FD057F51ADDF7DC9BEC731AD6040FD9B804FA147488D0E30
F8841589FE146D0525DF5FB31C974FC3B57F01E1D7A2A2E477EFB20457C17812
98694BCB0A51F6AAD0A5B019A8F4C210A4EF832E7D6DF3E913A142458A406870
B3A796EDAB7569B0D96F4665D013427D282B072CFF5FACF67B4ADA7A8FF35840
A4FE3D981216B1214415D55F0490CC2304501060CD4B29E20116F74FEB99A1CC
BD511DF8BC21284CBB01E5147CF95A00E8E775BB357487584644F975CC568F47
3DBDE6278D74ECB3172F5438402E9D77EACBBE3D271C3DD27C28F754521E715B
EF18A179D64952A6D39CFFDBA38C11C7238C738370C48C50E025B66055E56D4A
8FB3ECB4BE8FB8D21D943D3328065A91592BF5454FE871CF4302F1550F56B682
1344308331EBB7B2E684B3B6C374B061AC0CEDB050AFEBD734238E9DDC831883
C93110751B5F8637CF00C7C14D8D087E4AB1D815951E4BEA2690A552606F1EB8
A796E8FA21BB9E5CF8DBBD8D831A0B996FA2E67F9064EC921830EE707FFBD444
DF0A703A999B75EB8351EA2396AE35A6BA0B59619C35B4D329A8522B1EE90448
387DBB0912FED5852BA7AA362087601A47FF693A1CC34AC367036829996120FB
18D883F38EF4131EADDE2C756C2DF9F395FD83FAE697F3A69B0A0D171444B807
727C458C55F973274598E7624305A0F7EBBED6B1E29CDB9B8ED28CF387644D49
A2010C5158CE82BD52FE87C5035DFD9425EEF795DD0B09D4B1C7EA0C98434FAE
393859A98FC0B3EA3A0CAE001DFDA94760FF7862337BB4A2C3A8C8803E49B607
12658E7EDB16D9BEB4252D67C718C2A4595075C1818F6A1EE734956DBFDB57FE
6275D1873E08F3DE5886EACBFF2A132DE63FCE4B2955A9C7950E7043D7750667
94A2DA0D72B3D7E787DD83DBED95F86B97E1E9D80D9E991753E1723983D4DE05
CB5C6CE7C221A2038461896FF0EBC22B776FFC66AFB8F4EE72F16F4A83FD3B6F
7C02C8ED058B4AA23DB4E4F368D5CD221D0EA7E1022CA012CE9760152330C73A
4BCA1399C9CD243FA385624CD426256168309F04A2D2352DE559933C8B4E514D
B0410B1E140095EBEA1B13933221F95DE894A8F0FB390C4649872B940E5AB4EA
A493F99CE2D3DFF0982549271B429927D4775BEB5A12F660844638B9EC5214EB
8B4F3B900C34193E943A90C06ED8D9799646156E1491E5521FC8B9CD9158D756
8229D15D0FFA4E22B5A0CB4FC82C4BB848D07EDE0C11344EB69D0A6F329CF352
2C81BABB8C9BED90F772BF2077526A35E9F2844D17BBDC178AFFB0DEB4493D2B
EED930887D30C9C040B1498E7EAF30501BB2121A750312941839C81400086942
7242D783CF8D51DF73DDD9FE1950DABD3C95E57686BFE5C55E13AC8837A6492B
618815B78E78BA5F281755B0743FBB60F2952D9041F7F6EEDAD2563E236C584A
BD904D7018A00F6017ADF508BF63F64AC406DF45C6C9B90489846E9685287879
2D64A7BEA283E698CD7D8B2DF6A3B6681C63BCFC14135382469123169E3DAFF4
AFDBBBDF75C60D2808EBAD09A641D93EE38D274EBF132E2F1C61F31242729A9E
BE877B546996C6520013AB058EA55E58F59C374DC6AD4AA8B125F40114881ECF
0A7ABE0F5DFBB48002662AF720242D74012508F26D394925F71065BCB57954C4
CB5A9A42C6CF6EA0D80B6A99ACDA48E5ED3A2BA43BA9064D59C171AE87BB22E4
707510F8EF3AAB303ACA4121E9C92051578244155F5D47FDBC558AB5F9CB60A2
B2B7D3726D4D06CAA2CB08BE16E35F416B79718F7C53E34C5057880AB32CF159
42D3673538F51A2646DB93A34C60583DA3CCDBFF4F315D1FBEF4A12AAB726603
8BD7CF8F237D8E9B7D4AB72F83176580F0FE6CA17D515B26497148725E1E777D
1CD1E226062BDC08162D9718D28BF9E906D959137073313978F2D24B0C9C1070
D7CBAE9BBA72E82EF9914D3AED6D1A553A0F0E6F4621F4C29048731516E16076
F3482F71DC6698CDA2C5381575900CC6F06936C89A0CA3F1783DC42D770D47E8
344FAA94F2C41CF57C40DD96722D089DEC3F277A2C137B05A079E7C728D8AE74
62A5C4D2D09AC4B8DF8EC02D8381CF92C4CC1FEA9BCCDFB5A49EB6299F219933
08D925018F90C7891741E0A123FBBE99EC1C4688DAE073EEB636927885DF1D3A
FF4BF6EE7EEE7E3AFD0DC1CF828D0993C56493FBD38744296B82E0069A0EC9C5
7B38834DF8ADB373A5B5BDB1D57F414F3B9D156F5C00862A548DE99D8304BBE9
85CB6DC92F99088FBE04C0608395A9C2BA9A03945E029527E917F17E50218C52
188E0DB5CA45552F8867037B2180897707BFBF776C491C992B3061D71E2CA93C
19866DBD95E41C04BF1D5F31AF98893672C3DEF7A733E839622CCF9361593082
16AD612CEBA426EE4DDAF9A20FB32533CF4A100B0C058DE096398364675257F6
5B680EECF4703EE34ED505EB79461F710D221A457E0EF8D3A3C341FE8A617E67
5F8927BAE9F2DAB96ED0956CACC2F3A087F4BE21A90D1A7405E574652B2B650C
28196A0E97DA2C4FFDF5E5E0F97FC9B58B6A605314F854A16AC3011DA8D0944E
04DDEFD817355D4F877256023ADE33D6EE10BE2836DEBD01CE2E917A7BDA0F67
D62A81DC7F29506FBE9C4334E7227EC0C4F85CA74278CE1F76F4545C11F06142
E0A1DD461A4C66C31A6EE4CFA2D0594BB2CF6CEE942F60C508E799E71AEE8C11
5164BD9BF92B1A79C9C70903BE374A15E2A8A49F428AD81EE68C30F2490362FA
F9F402B29420A1979C1AE02943C136BD85269B02B10BCD48B098A23BECCE71AB
67639EBC8E9AE584A912787489177E0D00F05A5726E516E2BC07882391D09775
0AC8A9F96A1FB3A6B79CCC2CD8440BFCEBB85F434EEC721B168633D31B828D9A
9D731D50FAE5F322EADE40E7595551D0AADB662CC3F91C829E0F305D2D743752
2FDC407FF8B1BBE88C543A9C24A1CDD07958EE20842CD80161A57CC3AA74C74C
039D6C2D64ABED52F0A005B15A39141AAF72B241D02ACCBFEA0148283EAD2E62
1FD650A01D433804899780172780B141F2E169D2E94BD6E749162099864EE7C9
771B40D48806F82B4B5AA65A7A9B6E99FED552EB1948E0D2A3BB67D048395E96
F45F0AD0B7C512232E0CB2FCDAD6D831D091C08DC8AFA8FD5C40FB22842FE642
6843D99A6A452BDA7CE29D9E0AF72F0AAB66DFBB8C8B8B81BC9F7E9767A9F5DE
2E80DFB6AB433AB94FDAA26C185F878800CB1EECA4A9775F8C77E6CB71AD1D40
58AEC20BB48E2446E4AF11C73D52910F14BEF067F255C4426CB0FE0B28A607D5
242312EC254311435101EEE86C76E6BE2C4FAFCE3DD2B1B8A93D032C08521CCF
FEE1C289F6D6177CF5F25AAB7D45791021199BE22D89940BD35D7927F4F04182
2FB77ABAEB31C82A8073EE674510EF30F928C979F5CFB9371D3FF527C5B59A59
FE5C3360A0C9F668CEB74AAB78797EB9381948B2E1E9DAB2CE7AF67D62A7140A
B9DC46A3E01092F57C1CE1A5474A92C4CB86D9818D2F9A6B78E6AC615258E663
C9D255FBECA07BE41FE94FA1566B96E221864A45A24ADAEC63F61C9FD1819BA6
1C3B1966D0126713294E13325F3F59E228FA33051BB454DAF9B826BC53D97B41
646BB12B699A2FCA90DFB3DD730D96D100DC5B1BBB145D6ECDF0491AD6C66659
BAB715BAAAF85F128280E2DABCA39086B2FF0BBA147BFF00785663883D258292
F85DA226F4F33AF3E02DFAAFF16DBFCC1F93AFBEA0E6F2501E1EB9B1973A7DD9
5352BF1532EB87DC7346FD25DA563146034A401FF8DCAAA5BAF8E40F0C3E68A9
DC74A9D2945F39578183B066D5A65BAE4AB038087E40257C1FE41270E93990B2
B4866841DF01AAB608D7C0D6BB31A72A34DB466EAC17E200523B2AECD6C05A0A
8366D4EBC86AA467C0F26343FE0F315877A06C567634B34A12550E1152FB8879
3CFCFCA9DAE4E27C9A6A4EA27E3521C498D1031D57E66D4FDEDBF9258EF212E5
C281463B9D81A24A807CDD6FD037E0BE94EEEDE077C368A6E81A846E535F13B8
5E372FC69FE9FD47150A0CC019FB7BF22A3B979975C2C2EE65F3412825E15AB6
E3C75600D22E6C0CEDB62F9BB5C75BD053588563850206DAEFE33E4C6725EEDC
C0DC9A4D644584C7B4433471A5338D30C5415E1EAA291A40AD5E325197F08B2E
D6DAF07474FCDF67A10B68E22C848DFFC59E4382D77CA2CC650F27FD453BED95
74E0F7E0D47892830AC5E06EFC65D5751976B74A10D01646D4D8B164D359D7B3
020C65DB0A4BAE1D4C27FF32A5D29CF681745A7D2C3B8999507C609A2ED663E1
D24F9854D7724550DB8E763943AC6B7E96B5AD46DB008CFEFC57F9B9056BBD53
4984BD9B8D746C1800A4C8C647055A0DE676074BFF0EAD54D62A75A2E230F9A2
50F75CC7893E7A07C7F94604002D6AEBC8E4F8995AA5159E80FF68EFB461C32D
638BBDACC51CF22379D24C2A0780333AB3CAA8BC6972A427EF5C938B1C0A5838
F8827648013493735D1C1A80092C9ABE53C544DE02DABFDC209098477C21933D
4BADD5F8D34B7D484F76524300580E09E8799534B6398FF394D29CF05BBEEA60
483DA76133EA5CCA6994B21B2D45B2C2005DDD22E105A1F4AE4D2529C9B9A1C9
F5018096353108C24171429FA99A086B51ACE37A02D4B91A96E222B0F0964D1F
FF7A18A4EDD38ADCDD0BC65E179DB710BC75E0106F5F94BDCD5EC3826DA19468
F81C97F4629095B531FC4DBA01FA187DF959E597FD86C9DA77C69B786130D6CE
B0514F29AE697600849713EB0CFA8075F4E196336FB352BF532FBD0172B80822
39DC409E8C5E88BFE7F399175DE7D08904B7A508E489571C79B352ACB4EF904F
FEF935954AFB9BD2041241B1BC8519E983E502EDDDDD7AE2A28CF1A20F7B7391
1F39D6E41D40299CC4CEA7AFF4075A15327318F6A5962CB9AE8BA6D110A9F31B
A9169EB8426EDEFFB5554DEABB048EB8F3BCBB29DDC2402AD389465862718B61
86BB2CF4B290AF5D1DE6BB70E64EEDEF0CA24784A1DB7F945DA3C9310C902642
31C3CDF7BAC10F74AB6593296A0F0345D4D0841F212CBDD2EE3D2086B78FA98E
42F8F2FA7F61002EA274E772C570FFCCC8D6784D8BCDE41DB43A81C3A34FEB76
96EA6A4DE67E5CB086BF1993ABB48C4D725FCB8452DD3A744B93F10457EEC1BA
9D5B210A013642B16C7147B2788353D90DA82647B305ABCBD6C49ED9DEE46462
D60DC329C11116C8028E77D0FE5ADDEF0931C9EFBA2B76B6D7E4610C0904CD90
19197ED8ACFA6F3D493DCE5F8218E0183A8A01E1FA253D089243715F21EB9601
217D77EB18CDFBFFD76DF58E255556FF3CF3DC114009CDF5B0254893BD22DCB2
4CA9CFECAB9938F99A2394F2B5338FB7DD33D8FD589EC2438A167DD379997246
4CE75AAB769FB661F5AFDBCE03E88F208A05B41A2507A6E6908560B720C040FC
359510597C3ACDE5E2829FD745C84B9029AE48FE61BCCF0EB34CBB917A02D65D
8C449D9A1CCE52D3EBB9721D100516CB839EDAEB4DFE011D1947F0D4874F6E20
2F95FF403FD242FAC288C551A285214DBBCBD1906A3F52C2FB4B57406E692684
CD10FADF04B4DFCBAA03C59C352509A07F9623ACC0C022965EFEFCA56FDEA831
DC531FAC324403D3BCA11817C9D15012E0BE84E19441F58A170D6B547540264F
9CD0A9842A9410A0895DF7586D3D4BD8DF4C21DAD096ED5CFC7764EB38014D8A
FD7AD0823DDC80D805CFE4868E62C90C06533AE6C9A73E8346371188D3740805
E36112CA620BE1CB7D9071466AD8CBFB0602581EEEDD6C8F062E3E6783AD7624
82408DC0F7643D402293B12761ADD16130EE243D561F48BAE3AB06E8EFEA1595
4F01DB19D0B2217A275F139F173E2700DF4A7073936C6F0C5C2EE33F17D3A4E0
A77683212C88C376AFEB695F8C92EB33721DD3B41058551019C4E124A5EEB4A2
FF37B92CE6C953A91853B38E12AADEF8F3E162356ABCBC147491A0EB8BAE82C9
F14E9F3B744B51D94C3EF2D47D3BA57A060FB9C607C595D09538788D3BFEA76A
37B5B72740AC92CC2F0EFB3B37149FA050E83F519FE2F3DBA7F211C30A4DC08B
2473442AB00336285F6916AFD7EB479993795ECA68079BC73197CAF5B6E7C179
45FD2BFDF274D3B5576966137E9F90AA3CBF50D220A95F456FB0ADC67146942D
AFE5DD09CEF3383E35D0914DDB5B91673F44DA2E1E7D41DF6C55A6379CE74AD4
19B077F1AE8D169BC18FDFB2EB5D26110CA9A38264B4EF2F0AFA75DD8A68E88E
E24ED42F5E2F4402135498CE167FB5D289C5EBF31AE4BADFF86A359BAB76866C
8A62B4D0BBBEB154A4D9849A7CE08105C1D3B7A7E8EA484E2B9BC3B4936126CE
A5662629D66D6AF1A58E88F04C3B65660594E0C6B30B918A0DC8FB6A31FE8A04
EFF66FDDB2710B091AA85ECCBF7320050EDD2427B55A2857D30D257A6FC4EEA4
2D8E323BFA60B9483AD59BA6DBBC7DEE251F5A950D0F62F276A9161DC1D8ECBE
98B50682EB172AF785309A86BB40E157B7D8F244663ACB438AEF68DB0DF2F2FF
138364824C7D41C3B93D911DFFD1A36A573708C2EC010028C55D9D6688C530AC
54A6CAD10F821F886FB4496EB11CBD14B5555F3E688AD5D761C55F6D7C5ADF69
1D4C163883BB2994826A94CC961CD42609A279E8E3D4698F925E037E82E12B02
1B0E81F242DB2A31AAA7432D7D3B52A094140E4E4D4D486DE6010BD574848C85
BCB7F3D74FE0BAABA30A31E9D23E07A070671F12FC2A455157B1BF595EA3E149
29085DBBC95E5AA5F99198A39BE62AF7CFBAB277B8A66C8413AEAC96E91B0A97
2678A8E98315860D63EFE6178FD39A8BFE625C882CDB6A03A7921BB9F85B93AC
64F9C82C455BF5A10137CB99E97048161FDD3D79BB1648BD39E15558B3890461
CF1C65AB7C2EE42288BD17DB983600580BB4E01BBD7621152899F4B5FD24B0E8
D03EDE1D442961F4A9F5438365BC17C850FFE3F7E590C71D8976E1EFDA047E21
DE835260C8569B437B93FE55D79C954243E49E2B9E56026CCBDC51BE12825522
0DDDDB5AA80C637A695B8B86A8CBB0DCE6D06FCC2E3AD7BB240DE7DFBD1F17FA
D068B03490D061C2FDBFDA953408228EEF66661F70AAABE5DAB83C34AC97C66C
21F4CE4812FA0F007C12820EB7E587EB72F327E03E0A941BECC603AE7B388FE9
F86061AC96964C61BD933742996058691C47B09CEBE352FF40D9E7F49CA94439
534EE75D8B82DBC7BE9BFE27105D0C78694CF0A6805837D5B87A7ECC0F0B0FDD
F90E29B1523A0374D6D5F242F5ED8508E4528D4C744C96F6806D9816FFA07969
DD0CEA6C96698F32A2AC30DBEB733584203EFBBF997F0979A9764FFEE0A1A4C1
7AFD41A10B04A6B12B744AEB2A91C1D8993B45BF88131F91532162978DD1B835
840FEA2A1D89133346C2E8E75DED7E5034670F9B401A4E995B235DCB849F9F27
A576708AFEAB29E9A7CBE0BC90D0E45B0149324F506F3AC78F6A911EC2EB5598
4542B7CEC8CF6D19962FB9C32019A54DA73A385F9AF86EF6E3F5211BBE23CFA1
7964E268702079C5036C5C41344CC7081E8B778B0AAFA8E04E5F2161F6EC1BEA
FBCFDD9C8B335E025A19848C28CBFACDA03C46B2C8DDD315850235962879E04D
C0D62820DC06DEF1ED9F0A5C602752ED6D9958807993AB1C474025A0C21706A3
3CCB741E91304FA287688FF87FBAA39F267ED7BA6583A6C2EB5F2781310B9F71
EF1D05A87016ED48D22E71F0F57E906AE3F15F062CA4814BEFA3FACA77D39ABB
C2B58D97BFFDD887380109216561C53A73C5571BEA23FE2041BE9D41C128CE15
1FFF0B0DE1AAB5563E462687AE0F3B838C3B4527EA4929E4C6E6FE9D6079BC14
D3A0C5FB48201578146A0398875225D8B82A84B4A92DA4AA9C9A46A036505D0E
6D9CF486DEFFCBF434FB9C14D81F4D7F376C87F63045DBD1CAB9CCBCE4D0172B
A67397EDB859A9F9A257A366CF288A27F32BBBB40E11A2FE7A9C12DC6BE3FD98
C5EF082D5EE9FA5E6376E54A26BAD2F3B2AA7F491F169DB44B47FCFBA5C807D1
1641F7170E275E078D398034FBEE7994A7C0DA21C7F4B087B9D619AB57930B12
9FBB51DE57FF8BA2490CF25FB0C4714C0E38F5468E0912E32466DC940E436710
760356740907391F0BA0918D8B760ADAE4281F4905D99558FB92A7AA2A59743D
952128DF11DE31EDC616D17F4EE3104EDF6EC9FAF8857E6566DC0B6F109552FD
6C40EE29CED5447BE36825AB19D036EB60B17E504044014B09C17D1B5BBD9901
08D3846FE48A7B088541F51D307AA464BEEF59A8D0AC986594E4C39B51275186
AC69DD79D334CEC98AEDC1FED391C44610B58E575B16FCF9B80039230C7DEE6A
A0C5B1C16B75B8ECE50206C65E8EE9D98558F5035B657C9AF1D297208B936909
2FD167E489D91ABBC268137931C13A6340AA5B8F88F76645FDB8D2638FDA40EF
3B500ED05413809E1E1D36346A80C0226FBAEEB9D896CC63DA311DCB55095D6A
8EF4CB4A878B36126882CDABE19A6AB6185101221483456C1701DED95D77E0ED
B967FDF6C52082EBD9AE6776836B5F4D21E2FE2FC6280A6A0473D59C78084D50
FAF529DC47BCCEC2FA28D2D462C1C68CA7FD651AF167894B9743045EAF35E6A6
5CF9208B46CD4F6DD29CFE584CD2C3C1AB1AA8683266078819BA534E7565FD62
702E938ADDD6506D6683C5742E32CC75E3D5828B5331501E33FA63E04219F86B
437D878C19C4120337EF8FA73125CD463717AC40D7DBAFF0821C0470379CA3AC
88EFBFA8F553BA4B04DB949306FD28E67B1BF11D0E62473D4CE9A9B9ED4E2002
1D25EA64D2B3E8793289B005DBC77D1E602D4952D27592A616B58AB931A8E04B
EAC31BB38ABAC77C0D6443B3C47CE2FF03339A8636EF31BC3D37E1849863A3BB
66A4C647A303EB6B7B5987F4F75F005F18FD3A578AC0FF529828F1FE010D2AD9
4168B2D65458A75FB00EFA4C3A2C330AECAE862B8B3233270BAF03EAB96C74DB
95C7A80BDFFF8603A3DE1ECDA5775D463714183FBD8B8ECD1EBEACB12468AA3B
FB4A337A9872FB7101157A77A8F7501FE4B0621D1B037DA9BEA351E96D4C37F0
E4495481C1EFD8566BF349A2BCFC6AC0A69379A9B75CB352A2D0DC42EB7677F9
C17D70833B9C8DA055EA6AE1F2A06332C75924005FB06E0FFEB5C3A352315A84
483F82E9BFD5BEB269961615A96EA7C0E5D1BEEBB31A9054DB09D142E4D08360
EF4FF11F77482EE70B435BB42C0A1BACCAA619EF2ADDACC17CB6A528591EF580
A064FF73269923B996D528A1282DE089D09A4F0BCB17C23A040887858CE651C4
3CEC36E819C8770065F9BBEF1046A71D09C8490699174A6D108841D9A7C745B9
5910F4CE2A41689101E846E024D9240651879D3FD852C2C6523F0F5066520CFF
C7CFC4C3F761BD77159F27393835AF85B1374A5BD7EE5CC7341C73244E223EC8
82A81E4E6E8E04D87273E21E90049D5C07A4DA0A0B7C821C061CC001603A9D30
31D00A3E77EDD8D5F81F86E3EB3D4704FD99AD49E0778BEFBA8CF3F20F97CAE9
627F4F8AEAB2CA4A4F60D3232CD0868699E20655FA24AADC64D1841B2FE33F3D
F5262A92E98F7A5873F70B96A3BB5DD24513C2B16E59080C7D31ECBCD6563EB1
AD063976845B57315FCB3A86BFE57FB3BB8DFD19A7FB7D0657F38D644194CBD9
3EF00A3EA05547B340F8299CDA3E83B665E72C35D49D583755DCB890B3576D33
8EABD13427C84CDC0146427659179659EEC5CC246E736CF435D7097B1EDC7271
C8ADCB907980A751EF58EBF8A36280210515FD6F3FA97E29B21D2D1D7D0B67DD
A738134C56411D9ED3B54478F304A29732A7B165F5271B585DF3C9E9B95F1699
7B76642DD67B23104F976F0F01B6256F6A89E84ADDDCA59356DAD08036458030
20526E9DF41E8BA2F0EBFD94A9C2F032D621AAF8B06B9C1407F5A79A5759EE04
F68D0FBF8AE14D654CFE997685A1291C954736A5840B877204878FC2FBB210E1
2EE8EC8FB1A61C737DCF0E3001B0EF576CBFD1334D1C69A67196DC5694AA4980
CF09BD7808A5200B59D47135899A8A174E3F1988DDB04635A74707BC3F213DB3
5788AFC08ED7829B118F1135D2BAD1C56E5EA46AEF2BB39EED2AB2BC3BE196CF
1E2D84F5EE7AED05B76E1BA1F2B15DD97F036BD60D4E3216A284B63EA0CB7C97
86C3BE9F3808FC75BBF201A295903A435E0B312900526B412117FAE6072CB9FA
115A6CECCE8ECFE64E554F599FC6F5BA5353A4619CC75C6EC96678196E535C49
09615C82BE07AEBDEC182D656E241F51255A74C77B8FC488064E5ABE3288EEB2
2CC37E949493E80F683CE9D27E92707DB116CCC147FCD5A2853B49DB7760C77D
CC84189ADC215C06C56EDD3685220E235F24E568EDE6E5719BE0D3EFB3E2D59A
CD63A87269CD4BB9A90C5D62C5F931C108B0D10C77FC352C88733ABCA007BF65
2EB28BEE3E4B8D21803D2F89DE662EDB7F2B6CCB6EF0942FD46572BF002C0763
2B519042766CFB9D939CA9DD44D88E291969747968A7674048724DDBD470CFD8
3CE85563A9EBECBB29F581AB8AE3A683873E1184A9BA40E9189B24A5C22E7682
59473E000EA021DE6A05426E2CCAA7E8DA906E800856C5B411C6DCE6B292C55F
ED234E73CE92D6F0ECA5F95CA116437233C2BE3620FC1D33A5F78F9AC139ADD8
00F981DE8E515A5A9F5B7CF5BD64CAAFEEC917237DB9A4ABF0B8C77D41A9F39D
7746ADB2F4140A0A7DE0827982D9107A442D411B4410B5C06F3B33F386DB1A69
3E6AEEC7181A062A5B7B2261EA30B2D73AB19AF7A4ED8655D92CBF7C8D087846
F3CE67E46A1282E3C370A888B2D30EF58EE9AE7B863BA5DF637E52E422D4F675
922882F6B6E76C649AB8CD098A059DA242905E017B0EBEC28F765091F36AE757
264FB6593CBA62539B1E1CD93D3B4B7198820CF9E288FEA95A6139ED6F7046C3
09046F0DAC100ABD1FD458019080542DD3DB404019D0D7FE69965D7F2108BFBD
0425E1C1A554249461B3592F325691F2D2F42F6F1D7FAAE03EA53CB5D969E312
A2D5ADF6881FBD66D03721BA9C1B8016258CC480BED6A5EF82D27AC66A2F6F91
819A23E4A229EC8113ED0CB25F06130673D6B4E817512DC87E2E5710C6492957
0DDC16D249A4318BF08DB0164E7775FBBE9B0F0B7E0E378AD90DB891A3A260CC
C41A45E5F761D707A6F028F392CA42DB8E6161D7BAC4971A984376732C85BAD8
1CF9F63A45B1DA1215D4F6DEE808A3E53F03CB6493E639C0521473E31D2A814B
724630D678AA0B25B8E97C7B36C589ED5FC49201AEA91EA3BD6587BB06FC472E
F4113B0397D52763EB040EE3ADEA71DB140AE17DE96263A6B789C024363DA3BD
FCB865D4C61B4AD356846AFB35D4E3A329A6F09B614BAA13834572177FBF8788
354DAC03F0FE973F3E2BC478B9F12BF05591C1B98AF6E995C87AAE44F54CC173
5666F5B30F7ED73724D83BAFE0487B67985959E3FD95EB30F08ADDE47DC53CAC
C4CDEFB19FF45ABF06E9D47AE9061A43E956E4EA9BA198ECF9891ADB8677A8E5
CC81C025A11C64E552D366783663401D40CE24B7D328363919B140CD6DB9EC9E
24D766F9A39A339F99A0BE9FC3BA1E8A1F2D77289276CAB933114BE665185EDE
439CC4C8697A434AF6B5C0BA57CB6D2ABA2B804975217E7EE0359AFFF57E7A54
5B0A4099201040DC433219ECDC66335BE4177C4404626A3D3F653C40FBC197F1
1DEEC19901548CB78480EE06217FFB5819838ED0E45869B90C04D187A75A18AC
FAC5EC17CFED7AC15B9A3B0CAF7AF3F2CC4208FA18CCB93DDF3784D054AAF95D
C58EE4FE267834B6BC18A86723F8B65DA55510015611FCEA5601EEBC4D7610B9
12E38A9FE90DFC2E8E0CD6E56396DE0CD8398DD6AFCC63E46E21A713B0E6382D
8F9C6145DC621D98B415BBC5D6C2BBEDAE9C7ECB2F709D8F20ADC111A1541F18
F4ECFF284CFA9736757792BD38CB2F14B488457E60D5F2503E0963282F8F65EB
A56ABF2375369857148817D3B4516A4FE7B6DC392164156D33DD377A429044C6
37D0DFB0940765FE613A685FA73362D101A4676961DCEBA9BE72979E6F75C799
F437E74F0E185AD518B7E446C30415CDA0C48CF8C139AC83ACF355B3085EA6FA
584DB7D9CBA0FCD86FA5E3D7CC9B10A7086FBCB2583FB8572D2A7DBA239511D3
89E2D8BC1D5A211777F35CC83C427B815A6724AD47D12A0C94CEF2868ADAA077
F419A2EF450D50C812B4981107D1A0D1F0D60AAEB0B5F3DBB2EF71FA801F8884
40B82A91185394638BD1F41C7E73621F72414C40BCC38787FB1B9E4E274A6915
9AE7D5CC36B29723187596489A8894E0373BF6D0E1D56EA24BE8ED9FB93DBA15
DE22BAF340B62D5A420AF8A0AD1A571092A04FE5416FD9CD316430565004294D
4A0B97A229AD94BBEED098F75BB896BD0EA6128EA3FD3BF974114A9BA2C43B8A
717D9C5EA23382941314E2964AA42305A1B3E8420B11D08C9939B4E2990E47FF
82E4B17D0E0C4F1F27DA7E4AB36A4D325A1C73E78DA442EE92BF894018E6B622
443A1BE36AB2EB9FC0EABCECF6D1E6D060744267DFF89F2C05D699FEF50472DA
7F8C989960E082BCEFFDE776F3B1EF4D71378CB0E5D5F2CC99556EC6092CDBF3
3385490D8F621EE829823A52AABCBBCDB82211EF04C57518D96FA45EC1E0AB9A
55CED1D17734DB2A5EB4B9D2E9FE1EBBAA0FE39054A03B8CC0993A3FDEC3E849
0B7832550099F3AD3E7E8F61B19CB6C0D61EAEA88248E540F83E0BF24777EB91
7EF34C8ADEE8F3B66F934CA417F2D3FC49A1D0AAFDFB553D911C4BFF83655F70
CE05F4EB4C92673812FB457813E1D2F405DF78C8423853B23B42ADAD4A85EF41
70C90CD49823D077C9956AFF1A53982D8E22EF3565F061ED735C305210BA87C8
85AE66A19AF0A0DBD5145F0FA9B1B3E94C4CD160E676E300BCB6143951019E9F
254AADC6EB959192C6F2F6C635A2C17CBECEC40386F048879AB419A9A6CA6391
6126879D4B550B47B72EF158C0B8DAA608F05B44D958607F50C15E06E5D3466F
06A97802F4D783F5859EBCC621133C1563ED4846498D38C6223E79A4FC89CE8C
E7327A8EB4C223A9201383749D6BFA6DA9899DA7DB85CE077EC43D770F9481A0
062228C82A74065FE0D82E6BDA1AA5208B87A0FFF22A96F859980E8659A1BC48
5F1F5EF30C56C386DE0B824579E4DECB8BE890AC7318F0C37AD04DA1B11426B0
D63A166BDA4DC1EFF7AA5E6887463F834EDD2608EA2C03E0164D07F2F4BADEED
25B66055E56D4A8FB3ECB4BE8FB8D21D943D332FEA47AD24673D4A83705E9D91
A2FB646EFFAA76844C485B44F9348BF6A2A0CD572C8B5C80C03EB8E3F5782624
13984A3E1CA48E28F563232BE8CEA319145380CCF6474B34266C055BAAB8DB1D
031E6AAF9F8DFFA871C9A0DF0DC6DF38F253B3F13B4DDA5B6B8A3D40D71A723B
454FD471207AECEADA14272F5CAE2CA855BF9A131EB9A6A03E80DEE3F0D46F89
80496057DB8E3B0C01C6D753A22055CE425AB5856117FD3901B8B578B1186EF8
E140596751D9199E4C7E5E973C55CBAF71DB971AE216DDC4C836A570DA6CCB7C
8353C7AA520B8A4110AD07C911373252E1323C8FCC15531C5FB8BBAE7743809E
453767BF532B0B6B5A0AE4439D7FEAFD1776A6E5FDEE28D417FD6C89A89C3968
5672E5B5DD034373EC2116C543236B09C60B0F4B61291F7CEAB7B4888928DAB8
EB6C0EA812BC0FE5F16BF45EDEA6170772BD5F0BA6AF123D9D15E2A8DB3E7243
D8A3BB7E77D58F14401BDEDE18E82FC5BD41B484E99EFD64459BE53C713A09B2
D5D092CC3A09C404C32C45F96DAB39C9B4C0A7B76145C42C9D68936C6ED5A1D3
FB17812A2F4CB159F19A0013752268CF2A78934BABE23FF62E75FCA448417CB4
5F9246B3CFBF701460109B55327515A31DD59C7757EB8E9721EB7055EABD746E
4C904DC715F230D0D944435242FE615AD43FF2CC696C7C38580D4C496C3F1B94
F0E3DF16D4B0471659D53037256694E067EE75D9578235DB7F5D033A70BF7B75
872A0D167B047CEF4944D1FD4014A0E3F13E5927853CD0FBAA9D9998733CDE92
599B6DD8F3F3EA4E4804C07814F63A21C760BD0482D5E42B784224A438424BD2
6AC05551E38D3F714A487D970DE2C2E9668227D94F57FF0F88F1FFFBCA682A17
C57BACC689150C684F20653E5FA140BA1972FCCC9578232A0FD6DF45FD24726A
681E952A70F7A30C3FBDDEF8F83FDE55DD37209EC858B9FFC4752949DEB0759E
96D5784D36A997284B6844AD72A716B7E3C4EB4BD99366FC5EBF0B1C1C896FAD
2603C851F9676012430A7DFF154F3ACBFD50E7E1CEEC26CDBD8076A595FAA2CB
C85AEDC8D4A51546EABF9E6B0BE9CE62C41F051A6F959C0EF8627D59F412363C
42C4716ABB2E3D7E8BEA4F9422C7C7F3CE76CC1C7D1686FBFB70D9B0AC0722C6
468C218AB9F8A7D45E5FCFD9B7F340C8A71E60B4CEB9383ED0A8391D817BF930
03DE96442B575BE415F460780114F960115A6A8F1AB96E0FA29356594D38131F
B24A46C41E92F789F849355A759A85B7024DA686FD0F88E7DDEAA505FB1087CD
553A7F5E2383C272102DC8C75AEF1CE1978EDC6231BEB649DCAC865C07157F60
BE96AC2ABD72375CCD2DF199BF257BF01A3E14172D98DC5DDFA80D9452541A5A
B5B114CA693BEB196781C04C0A6EE75D274BE92D928A70E0F07705286911B646
600FBFCD96E60F8F802B5D5F195A0D61A2E5CFC76D816168B879E23DDA5F26C3
3C0F5C5724AE3C9E2B8CA4C389C7CE8AAE26FC93A96CA0F72CD410E0959D3CAD
DF1CC54C45BA2FEE00D7EDCD01444ACD693258A53F98DB0DF475C8D74928A381
F1EAF60C7ADED39431033CCEB5F4CC02D42B0C297B9E43177BA6662C347BE7C6
919C2BD80C3AF9157C1C26357C2F018A5B94786C040BBA99056B7680B815288B
C6B988DAE9ABFEBDE619043328923988B799711B1D9A5BB3325D84FCF0142C1C
E079C735A9CDAD7DA698AFA57154FD49C5B2430519EBA2C9A6933C88EAC7901B
8BEE581AB984FC189B5E171993035C07283661D1CDFBC34C588C960D438F2357
787298264D9C9D22F16E40184A3697C368E4E09A0E22028B5481007A88763A7F
0AF2DD83AC5BB0226FED40F45F38864F035E80929332F02794B2EBEF23D4275B
C34E9C37EA582ACD1121E112AD0CD18C44E4CFC75A90595FE9776DE4B07B9FC0
D49F406912AFEB4FD0186E305FD9FF52E8D521EEBD80089D0A6037AACECB9B5D
1E027F35AE9CB410107BBCBE4BD5BD341A2A7442879EDB3B0F66BF9CF830EE67
BC02C473F4B9DD1DB1BD047A6C8E0AF2C60A9B605AEBD4CA6F94A86D0215CC8D
A314C4543C0BE89665202C9B11A3DD8C1B53A21D1836565C4003B5B8677E9340
F8CB0BCE197317E5CCF84F7BBA8E93D7D9FA17508B578A33286512B4C60C854E
39535E7E0A4C9634B1B397FB09FB8901DE7617FAA781121A12EC9A60C9847C42
76218F24A3C475059B3741C30FD2E2582BC282C80A0F3BC72EAD149408C2EEDC
4D354647F23B1AD251C4B723BFE82A73731682249FC67711FD02CB2F7F484053
643923C62533F61D53D182CF9605E6B5A4A4BA66799A18E0B8548BF1F4513D9E
F5CECB4B988C0E9C7F12FC7DD364F728984B14D71392EAD7D9BAD3C575DBB373
EA2BA42A093C98A6D0F2F0115C45B38BA0BC36FC4AAA1F703B0E0919642758BC
03C5150F2353D1547EE77D37AC0620DEA937514625BCF15E0B98EC8DC275D4B4
02CE254817FC5204E20A42FBEB0E316AD709E0C834C97638C053F3483E6A2A46
99E4EAE54E5892C60878055AEC11D28C94EABA89EDA7AD5FE2D74A0BD780FAEA
3820875C20C3D197E35BB42F990281529A83D6A2E01C172C2B85F663745EA96E
404A74B3BACD875E429C79D7EAC7B94B8A0E70229F9C1E6E31133E2837287B43
E5C1A6E338FAA7955250F08E8F5DF7DE8F3A7F53DB8790493D8EC144A3C3B158
6B501DCDCB092DFEA68295A90FEA34059F842002D97A1D85375558EC5D9736CC
B4227621D3749D0FE3C8F2FD524A758B3762E125572445D6FB97B4EC412A097C
9A2F6D8C3AD9DAF722041536CC61DE93C28FC0F4AD34C4733E18087274FFC4E1
F85D344284D8082B149D8FAB010C37640446CADD524728619F44ABBE7BB826A0
208C376E71104202FB3F677DC4F398E82228CEB92CE0B5E0EFC90A98F103318B
37BD96C95C4D283DEE96726383A9812F1B987D4C99DB7CDDCC593966C72092E8
954973F3BD5745E29F8C8DC4FE76BF89FF4EECAF14247958B02A43215728A17E
9BC770914C516AF9A18F0EB4A28907182A3B01FED6B41058551019C4E12550D9
BDB0134E6D6083277D8ACF36FF0BDBE4146ED2D5A171366528A289F5FBA009CD
D65153FC20C3008C354462DFA7660E4F69EA4316474DC0830F2CBF5151FE0A7D
EEFC4B276373A1FF318D04E3E8898802F6CE7D8F4F73EB910CFFE5502D3E707E
6C3222123306449DE1F2304EDB4B855C9EDCDF87CA692EEB2A093EBA53B45EE0
8928CB8BF491119048F4C4CD320B25BC0D2A8A23CC9AD1A901D6705C0B8ED3F0
313696F1B71E644E1EDD9BB8619FA6C38D9D2730FF585D816DEC2CA279F2818A
59E52812B5C3FA7734698E7CB03ADB19E13AE7B74946B91F6C69F47BC3EBFF36
144126C43526FDB44CCD5F2AE07FB38C0FE3000ADE0893FD222774F546119950
AF9614B4136FCA87992C3AC9232EEB7C32FD0243B1C7B42D4AE17CC760C1F4B1
6612125A0889C1B7B2A9716A035555441D15C8278A1E28A8F765C426FBFDBD74
56B53B12D5C2A29D9017B06EF5B17B49E7BBC05167C2446CCACA82FDAEAE101B
E0AB87D0F1D021C2756D9A8C7E877AFE77CD3E7AFE2BCBBB182C571F3B782893
E1631735FC7FEF8384AEA8C227331FDCC453FBCA9132C26716B73584C049A786
679CFB58D888969B4128A52251DB3EBDFA8F59FFCA5E7FC82E24CE7454D24B67
2F4AE01822A9E0A89E34E2F500E56788C8D60BF3FE09037D981E9E7FFBBC3F89
6535D0DCF538EC41B72F90D8D8FA2CE5E0A6F404520555E8225778CE8089DEC5
9CCC70D18E3FC72E8AD0B3955144C2237E4AB2399B82133DE199F5038A598DFC
E92CB9915A1DAA56F5A2BB032E8702A8EEA8208E7ECBDF5E40EE0474E257D7A2
CB1F84C68F5BB5145B278E85169B4739743D0DF6AD40B53B917B57C5AB21B40B
FA02890EA139234523B8417B9E57739F722ABBCD4868AC2509057908575C8E29
D477972046CEDC75C766502D903E6BC06DF5F51E5E26A17C1B65A0F26CC6712C
A79D269C5E986898BF3F62049435BBF46FB56EF5E578EC302A5C63F547BC4619
E5041C903E5154353FB6673118F12D7665C52DFB2BCF103AC9539C28933EA2BB
42CE6AA5B6D92365D2BE77437EF45A0239BA627AE4FFB6769BD6D2FBC3EFA766
41F9E8E4F1FB5B1B299846010D3FAD2B02B8F46DFEA2E93A711F24CF724A7CF6
7CBB9492DF5B8B2C2C1AE07F2E156D41EB208EF8DE348359E570EE206034708F
52ADC083B3C8533624EA8841787FEC863F584F1FFABFAC008519FB92FB0E1942
DF5E433F46E944D7D6AF6A8E30CB80CE673D94DD4A12913ECF9F9DED12CA0A3B
389CE58549D71E4B83E26BD10F9906C113EB6E72DC3667F23D68ED4C4691AE91
B32551B340598A1C2E3CAF48FABCB7FA749FB654F1F5848CE2D3CF1428C329E7
D5F691D47642109D5886BF9CE95E98DFBC8FABB1D50119B2347ED0D201CFD78D
EE828BADC5A055DBEFEFB2E348375AC634737E416DD9A2628A0756FF4D294982
1305F52F428048F0AAB4D1B588D2612B06406D5F69FA82D22266532F87CC8DBE
F7EEBD525766E1B7209E705A7E0A796B3892A48FC9415E838D72FD3DB7FC2161
60532B48948C4B25D81FF6A99A3BBAD79D0B4069554DA06353DDFA9C87125E5C
9B69FE0A5923903204965AC10AF3EE307E159C82A4E76C543EBA4ACF3EEAB071
1CA2BC7BEE0C2D6870958365CF2688AD5470018A384F9722E024135E60AE0E07
D48E52DC1AF1EF67699EB0102ECC52FCA2EF56C1D019EC0936CDEFCB888CDDC8
10DF8D7A314A111FF4276FAD238B2FE8C34A14B3FD0BF00E3280FCC80B24CFE7
78005C3BE1B50EA0B4D41ECE5AB48F3CD883E408FA6521D74C42A34009043E38
2EBB315786E80AA463355BD413124FA95DCB059EB04D0FE79DD930033C7C2AC6
AC246E5EE27646210E8062A878270D2FBEE37AA230330D81EFC166DFD534E75F
B99410D0BB68B865F3E4BB7CF3CD00DA8E491D355B45718DC369D9C0F1A3DC52
48567195DA50C4BDB1ACEF26038579CEFDB790588725A20039A6566635F2328A
439986F51A671DB10D74D95084ACE3907DCC79E6B2C03AD7CC07D307DDBF52E2
7B75787AE81EA98B34D8DAE857C4CE5A5D7D2174EAF37344789A441B786CFE74
A43FB46A27D43F043D9F434FAE3938A55A93C4AC1597F0A5D32A1AB54544C35F
8ED1ACCBEB7A7E026DF528244AAFB423FBE1A207FDBF6F39801D1B68B562B45D
C7E2E8939D2E8F6F94956260F056A33388042397336EBD80653267FE000D8A33
86EB1E2AE642732D2A5A07070351CE3D94CCCC38CA05A3B8968D45BFBAC0D6B0
5C8C570A8F4BE71C6EAC82D9A687B8325558688B82C0FCA8921B0BF491B51F8E
013966502BACBEF4DBA7011E44B25280E0D55FB56FF4E234A7D47C8F03E71CFD
33CB08A071A6A7923A63E3B2BE941FAD596088781EC3E5FA22CA170B642734F9
A0DC2BBED4E3D84C354109EF9BB7623FF9BE5D7D19C56DCBCB1EB0C3FF89CD96
A07C561184CE3B5B5D081E76E53B402EBBF1E70D38D63FBF69E8C6E5AB526463
02878393BD24FBE28CA192EB4C8E75D88DEDAE45EBD0CFB264F7605D79EE67D7
22E5411817F15DFD4A0C527E141DC852DC523603C2847CD2338D0198940059CE
CBD63AEAADDFC1C3AC13AB1B33FD8AA817AFE0BE2C0FB1DD95BA1DAEF8AE8448
BBC999CF9E0907167BCF97DEEB1C47BACDEE77A4BDB36EF4B50E4ADB0C074064
AA534A2AF512C1F2BC5BEE9F21801514B94D752BE227E536BD4963C694553EF4
0D94491A86472A121BA6466382202DBF773818DF3A871A62CCE1BB231EDD0A1B
D87833160E6F30B9C336C0C6E0FB68F94CEBDBCBA213AE2C764E0B6B9844986F
F7DA7AAC2C00702B2DC6DBBBC179115743AC4574EDC1114601047E14FD9F2D6B
EE2E6584058265D53287B44AFF2B00A8E11013102112FEF907C77340E6EDD70B
291772B25D1E6F7285D5285D3C107B474ACE57162F9F96CE24FBFCC15874FD55
12FB1A20913DC0CAA708FC1999A1501BA3EF62B7BE57160F92183A4EF07499EF
373AD1D1FFF8F292D125540323301C441361A1C5623EB67E43E583D180C5BFEE
DDFE8A7E2F2BFB0F36C29AB14D19EDC2D37EA94239542DD31EE14548C357AAF6
DDB1421A4D7A6449D751884A21941D15E9994A3A44C42F59C2868D58294BCE48
3F01F06C304E6839ED7F7B3430C64EAC1AE70F37D328D036B54B4B770520E3A9
4D94CA7CB690728C60EDAF591A9D5C0AD292DE9C9C682D0E92F3456C27BF25FE
C28A38C6C66F8BD36DBA30975AE7693828B188B8B8509B9A7C7C948E6E6E104A
080C57E4817D10F44C4701C1737E7C857A5451FDE1CF325DC840EC4507779EA7
FDFC260D09C50CF4867762CD6004EE2EA4FB7FF9F85BAA41E7836466D54476D1
32FC620FC801B9A0375562B4369F8D42C2A174C3E0F92D268D63B559A404DCE7
60A621E8D5C45AC7D42782421D7028420F0A116296B88665C8C15AF39CBC57D2
683163FC6FFC1920EEF0051FC2A739989246A3833D50F1C7E4A8E5E5D0846017
DDF49208F7AD04E9E3B9029AA4C97ABD7C2068666ADC003C54D67EB1F48EC20E
101CA02835A2E519A1C45A14C3DABFC22387CF6CE66357C4904B79B704C799AE
090C2E12AA30B01C985EEA0521867422FD82022BEBE54D643F7C2D931A033905
6B4FBEB37998F13F0F82893A7AAE173954053C13C0CA57A43E7425065D6CBBC7
12B23944236E56C8C2B3B6E3656F1133D5AC86B8E622EC0CC46D04779F99CCE8
B374D91C89A203CCAEAAEA3E6C3C62604A087C12B1BDD382C731215CDCFEEE67
FBA8CB9F992467A6D8B38C4EDB656AEB5380337BBF552E80AE432B40D42BE37C
4F8F51A34D8ECD2F289C45C6B22C68FD70E972EE164F6BD2127F47880DC9D6FF
8199B32AA1355AD0AB8AB3CFD06E3F7400C45664E1A8998C16EF532E3FA9DAFB
46ECFECBBCA88445132FCDDCB59CB49FD18CF5F3324649A3E6EF625E61571209
62F6DE0153CEBC584843BB9A1C2B658D0CA08552B412B4E2977709EDBD3D3715
79F841998EE45E8C0C2FF2C2FF214BB7190E564B2A4A6BEA7EC25776BA4E5CB4
51DE33FF18B29622C1F4281B7C697D41B2D332A99A16A38ED43C956761169D92
1E1AE8A03792EA461238FFF8555519BC3EC3718DC70D4C89C636CE7BF94F6889
6E8F0D06EF236E02D4009793A1B5FF304F8C9F5BF0E169B645D82D668425B411
F7648F34BE6E0B01923BAFF142F6C1CBCA7E3CA6FAEAC01E83B18DE3C0BA5287
65BC693AA01D8B1DEA1102DBBDD088087D333F150BF2C71F0D8AE19B6AE2312D
34F17F0D4961316F641AF0D6C658867AE81EDCC163D3AAED1A533C8037530ABC
FD775CCEACD6F1165E874C959CE4972E71E88C21A72ED50D11E289B172AF9BFB
FEAB9212210AAAE8AE94F744C02BF2E34544BBB19D1B5F80EDD52A805747F3FE
900978937FF6E4AB2BC70376688DF40ED335093E4F893728D459BB5C8AEF41EA
9A52F7FDC01104809471B49FB266298FB7DAB7DDA8E9343CDD152F76FE7200AC
2984337F2EA913D7D96EC5C8734F435F098D34636020E8EC91121E804BB8EB3E
06D24703F7281CCD7408C5444D90C98DA2556F6222691067BEE4AC87B76C2CEC
45A9FF9346D703C77FA510E9189314BFC6A128924BFBCD1454CFAAED3C30CECE
4FD7CFA6E4BD0ED071182A2D8A9416FE9F85C938662C95D21E3C1AD3600CFE96
CE0D7386DBF4001BD0D721F7363FE51827BAF46970672FB4A728CC48F5A3040F
54D39757569F1C247B87D4F7AEBE956DB1B2C207A216BA5C8F62344E371AF8C3
D3C0039E554C2A06911A7FB36ED4463F51549022531CB423AA8F271B3BB1F824
E794AD04A83FC180CCE187BF05C00228BF324DDAB69C04BE9114A2D3A9D3976B
A027B724FF0F453D676BFB63735B05E0FA606348288CB8E60588D1B683385CA0
444C480FC2B7F3E50DEA1445D9E4CBC8A68AE6DC09DFE6D18BF866903D3C694E
B91AAA50A2EF6410925E4962B260CB91C49ED9E492C2B319806E47E9A700E83A
19651BAEF53640CBC63621BA1E399E4E59038A32006ED30D1531E99AF8728441
005B8E5CAE0B0ACFCBC6BD01C98E7A3BC28E2E7BF13ACA6B3BB54E58726C1DE8
3310FE40211D1F114AF6C6B54AD528D7AFAE4A2886F5EF2E063D3B8D6DDC59C6
DA3DB9B063A7C548C58576081CA9D98A0DE77A1F4BA087E7E54F4602592AEB49
D4AEA357508F0FDCC7AF4AD93658D416C86E3048847925F29DFC7F9CF9085205
4F76ADC3DBFFEFCB1AA486D1C3E378C54ABE0D9DBC91F7589B9E3734B8A40973
710EF558455601BFE949AC99CE45AB6473D85243607C222E6FA82A641E85FE1E
CFDD70607C4FFA2E57BF2F2F106361D12879D78AC644B93672EACD53C65967F7
5C91D0CFCEEE36D63F0A18B8DC1BF2276C2285A0086E7D6E8378D7D5EDFA3F63
66FB2D1FE124E935C4E17E8E153AB7F9848331CA5D5A0B613DB4F863EB2C0E88
E8A8554E0365188450FD82353A6F80141BA943A9A264898304A491450FD1452B
D1FE82427561EAC1CF4EC54D29A0B9DBBAF10B53AAAE60E39EA1C6CE5D16A2FA
826A806C0D781DB6A0FC125B78E051E616CBD344CE7D714BEAE2710FA343A595
982F08C84037BFC828D96A028BE7C67D93AD434BC7988A1320229A5562D5F1CA
653BFD8B98D2A2E1DCA6A049EF380CEBFFC5DD392166FBB1779524EB2CE7A308
E6EBE3A0177646DB2E56E5EFFB1B3DB7858FE5F0794A30853D90BE54207C5664
26E3893B70F739FE11760AF9FC1B8FABA99E363E5D1E7A7F731CE5D50D9891B4
B9953AA5BA828B93106757F8187822CB34DAD8BEBC692D09C89398344930B4AA
C76A132C32DCBECD227134E7F747AEFFA7464B8D06119C2D414E4812B24D0DEC
79FFE3B9D39C4B071C817E2A236E39FC08A3092A48328111BF49E52087019928
057CC5BD9D255C71D033E92A72CD8EE528457C14B635AF49AD96F4316349A0C9
B279358F2DA28C1651543DFEF356678A01249736ACEB152D73561500E9ADB8BE
5D338698293881FF237E9135E6C28B48E1C966330A3DA363331BDB4A21737805
D0C1CCAA18D39DBD4BE29E699D9E44B7A6E99ACE99DB14455CF122FE4736EBD5
471DE274B748ADC4DCF772141E9B1D4DC45A17B8B28E93E73BED699CA1D5246C
A870FA5C1E5112C9AA6153B74A19C13F7083DD9902E1F3BD235FD1F5601DABF2
EB19E03F9062B80F9C42F94BA3F33B1E20B7B1608A924A6E484AC61E814B57D7
C0E1BCDC9E92A6B919A1E5B5D747E709BD2DF40B78F712408B25709FA7CC2A65
E1ED6F78532CEE2D8976F7857130CA0932B2ACB83E6D910AEA1EF440352A877F
875BE5E12C3C6DF15659674937C92645652A2F953DD7B11AB21B81D99B7D768F
3783FDD9EDD53FCBC74FBC44D41BD71F80462A31B6BE9D16367A5FAB1D14D281
D3E8D09DC525FB60C127442729FE2439769D67DE4D630F91DD3F2976C813924D
97B27599D8C03DAEB2DEA8C2BFCA0316E8C210389429961AAB7FE1F5215520FD
CD2D935597B02864A31B86E831A1DB9B89067B8F7E7F7207275B5E1FADB35D9A
3FDEF856C43D283247162C392D23E5366B8F184A66D911FDA9633767CC89A787
F82D8BDC11448399CA16E2A8A49F428AD81E9B954DF245B2F59BCD67E05DA734
6381663EFC9F9A11114B4539E5C51B4EB1549745C6BC6A973D1C98EF98E4EA36
D07A87F9D46EB068B4E9A10758CF9F5CFB1BC1144284DBFF73994E0AB51FB55A
19DB72F247C5CE50AF6698DB7BED4D5614CDB727FC5EB3B51AA797687145CA42
7D5C25DB451DAC56B286F6007FB874686555FD0568497DFA41EB0180BF47E9A1
9B639DFC45AEE111E7516984D50842C5018F4EDEE2FF2151597C9E0F7CD996E8
4A32C5E331AAAFEA5C905FC0D12C6ECB60F72D16E6767498F1450BFE875A6D26
5BE53CB4F79A25DC42832C04D3EE380503A69F685F1F909AEB884E6A9FE06474
C586B295078BCD91B7286FC0916CB9B60019DC36A49668F3EF9DA493CD3ADC30
B5B3C31CBAE9775E4C96F183125F1EE19256CC5053025616EEEF28F24F95FEEA
A616F69FC8885EAD2CAB2644F1E25DF5F6EF5B5ED6DF31280DCCA71C9B002DD0
C777B5A90E3B75C7A15FBE9A036B6DA2CA24E020A0FDDCC0498D74594AE3ACB0
EF846A150AB8206D97E4C59DD6682ABF66B4DC1611DBE89B19257CE4B002E8B0
36374D5C37D66FD69C26DD0B3E6F36FBF1ECF823F0CB12B9B88810A06C84AA4D
B153A0865565A02ABDF2DFF31EFAA49A6A42CEA9A121D4DE1C5EF576541FDF95
84A35063986A42B543AE4537BEE41CFA13CA06EAD9BA13FE15B781EF82A76785
30DB8D3E5253808D085F082F84A35063986A42B543AE479488EB3E098A4AEAF3
CE1FC15922E4C38271928F0B30495391EF6C45BE6D1FB3F56C8F84A7A13CCCA4
C65D214B734D8F5C5A0906A7708DE6359942925FE084E77FB6C0E245CB336A48
445E64140F3096AC095EF9356CE3D124F359BB33327123B24688B757F4AD4411
072FF77A6186AC10868D2FC5921E730C933978FD31061251A9EB8ABC6DB7433B
1B871A62E60353F613EC6187DCBF78B0665D1C32197132E5B696C4875661730C
15BE7C487E0D44E3E8808D61754CAA63E526980A6F1295C15C74D966E27801F2
A7157FAA847DA5E22F00136F21273615D02CC61ACC497F4FE29CE4952D5E1937
410DB162D97C7ACE4C7E52490612113E271040275FC78ECB78F5C98A84880A34
C0C4B221BBBE80F25D75116BBDA3F87321C0F9B128B9B12D53E262E7B26B4849
55D1156F5BADE523B36A2AB5F41BAF1D6771576B4D367AA58DB6AF84A8CAF17E
9C396B60AC51431335F4E2219CD8F231828B735BB3EDB5C2D2E20C1F19A52F17
29C7BE64713C1CF917866E7F6A9E2A4C8057DC8128494D8B0E8DA8144C58E647
1FC04A2056D8772CD004491A119446F168986D489C95836E9615F436821F44BA
7ABC91F0C4AF32F3905F3427F1A27EDFB76B6385D00F27FD453BED9574E5F3AE
49A3A86DFFA20748F95FDD3BAA881CB3F4B5E4E4FCFEA38A4E0EC1712CE29172
EA710D5AD6DB600C7A4C61F3FE1E36EB7ACF15A1E166892EFD8EBD279511CC17
00DA348283522B5AEC490A066D109D7826D48F88F1605CEB7402F291711607AA
51CE0B606CC9F580136F3A2C060587C6798E098A1D4AEEFA5457E143E231826A
96B840649848D40574931AA278F716A93580A981BB3381FFFC6801FC793F24F1
75B4395881CCBAFA48C56CDA7608136DE5C61CE6C9C450AC04C1E3C27B717860
310AF13E583CCBE502213AE4F56397E3187A3B3D40A7C20A730E3FE37DA2C96B
7E19837FD227B352EBCE30B9FECB53054E1A5ECE20911CEB50A82798C49C77FE
383D961786F5C60267F0B8C05847FBA74EDB2C9DD7FA4CAE3FA04D362503CB25
28CAACBEEF25EECF73F5D60BD9C49515D7FB36DD905B5C91AFFE500C31379C67
A30D1A9748B4A8EB628EBF154177B46BFEC2D34C58CAF73A458FC790D933E277
3AE8F15744401DE8D361592FF745A7DEE5779BEC5BD53A8685CABB56F6E3575A
847FEA6259949977F5FD83A8D880950A7F82C3E9A1771E3098847940FDA4B8AB
754D580C3147B0E50B30FF9A5C386DC77D60F449F21D28FA89A0A2FC5B7D170A
AA23986A2C855C33FFD07328565672AF14060879A7135DABBEC8C579B98FBE58
DD69CB45F07E845EE0E3125AF9E18A2BB150D25BFB1F63085E095985880E6AE8
A4F4C614FDDB12ECB2499B65F93ABDD522B1ED262B9A1C76528225117AE24137
5DBC823E2FC9AA7A47C5F3D0C745262B88DDF05E7E3C1682E8EC910651BAA073
A1A81F8BCEA1B152FCAD7FAF84983CEC5782F942EEA3A07BF210C878F5954B74
B51E801985BF1EE4BB918B6A80C50DFB57F530694D0919AA89A92F078FB8F952
DAEC67ADB2BC7EBCADE1A3554A0BE5B900C01A0AF058614B77D0112527C92DF8
5C31BE5BB7224527BF2831E1530145D80BA78103E405DD21F19215BC8F6F7169
F2924E49D59702A6B3E394C790FB4FB698F2DE039C392F74D9A26F35F91D61E5
1829D31791F1D36CF69F05E791081DE21AF12C1240C57540E73362D1F9A09046
B8F2EE5E5EC8E91FA2E4FB940228C74017D2A82AB727AF0C15BDE6D5431809F1
75C7567728FBC797A6FE0A02EAE5245FE08E8641C30244BC43DBEEC6496DE182
F8FD6D14F0226CE25B73FD1A9E54BA5EE1442EB31112122DC2DA5F45B6C55A10
7F103D6AF139FB1628A53EF7B1ABA77064651EB6DF1DD36642B5A8BA107BAEA2
B7086DC2E485B345FD4C57C95F8F304E10ACEC91E65F8C929000F8C6F86D0C68
B301F3F440B7ACF7F73486DA4826CBD2C1CD12B99725E150E02FB2831359FD4A
7CB9116E459B7DB569CFDC3687D73391FF664A32B0F471D789518747C7BF0D56
3C70F88ABCACF5285E11BA34BC052F103C01C27935E0257A091F32EFC96987C9
4B032DBA0F9B5D7C90EEC6B06D7DB4B3BE25BF63F12B29D0F8A3B2AC6F0EC2D0
D72D0BB11AF8FF0AD03195484C9E8BB6EBB0684B510D0E9455915866D455C771
3636E8BF9340C1E244B3B8645A5760BC775AFDF5BDE5CEB89CDC77ABE0BFD016
F19EAFFDA2028CE1DDF5284B730B33CB7C582B4FEBC6C7C27E849DBD0F0F8AFD
3AE422EB8AF005C19777A42DEC6C361CEE77B9C6BF6159B2A302B801CBA03774
A69C6E7631B822FF44806450BD02A38006E7ED096CF8F88A7A654DAEF4707A8E
93846995B562A0351DA31CD4C2FA7C14D6C6A0C65E2D183367EC916BA32DA8BF
1B64783B4A2CB9347E2251CAF08F5D36DD56EEF77CEEE5B6903FB71AB68FAD4E
316BD62804CA36D4619D8885FA0DC8D4E3570C8DB66373ECF7F674D31A42DD3B
92178EB931289BEE5B1DA40C8E215A9C50F5128D4BB9ACFBFCA7EA73E1EEC678
37E2052A9E884984EC754AD5FFA2A1DAA2649DEA72785C6AFFF4C00C1E197DD4
10D5F1996E9BB66724E400EA8257076676FBC638F830426328CF13180FCF1527
4E90E079048596734F0904DF5280531C93F0F9BDFE60DFC934588B2B8FF44C83
68C9C69AD17E91BD78559AD2DFB99B40C8DEFCF6B67A066C20111CE6BBD48D1E
D260BA93AF508E02F31BEF48FDA5B80E527BA393AE37EE0993D38EEEAFAA5E84
6B6302B1D58E2DABB37541DF88049C1F1B0BD5CB3D7ABA56B8ED4E7AF0F4D874
0C71D0E6305207F03BB3140CECAD52A56F1BFD459667449FB7D3A09203A808A7
F70EFE840959AEF3E34287BE6E17CA0E265ADB2948EDFAC007352614C0B6C531
C06E1725F39215694893B2FFED786DC4D0E02F1AEFAA8A7B2B96971E35DE1AED
D97E607D232EA5942ACE88AE8582BA140101A62893AF9860AFDDCB917279624B
80FBDB9AA8F96596E6D3C83062A86CC6C0F7E5FEE545FF0E15A12C958EBBF606
7C48FB22D45222454C6A9CBBF205039D6D35C09A0CE284E7CDFCE15EF46B077F
00A027FF49E581739F38141B8B4DE5CA877589B206A1363B24D9F8E434FFEB50
7EA58F32783C60B819EED0051D631CC75E597DBAD011C44904497678B3CC1B5C
0A74B476430356CDC4BA97840AD76C968333DA95F37929EE55B032A5FBFE5991
BAC2556AE99FBC3A8C16112776678BB400C75DE3A3E70D68714FFD8F36AC76C6
AD105D966EF357424973E4CB70CAFF6125778DBE4B243FC3A0CAE847B3AD58CB
E7B8C5C86283EB4DB3006B3234484519287C20D811074449DC64461585BC9F3C
3334A8479BCAEB272DDD92972ED8E7789EF9899B5CABCF3C6BA6E9934C391131
6220EFE099455232455F7F614DBDF2EB65869969F265341938B2C7D6B979342F
08995CB7E6B114C105A187E4AD1243810D509D0EEF0F2A5B8B4D50F471B63B52
75D9AB3F020CFACACB5F15D022A8472A48F5AD1C0A4808F6F1115CA55BD608E3
D4045BFC3FFC6C34E14A28DC00D2EA1C275B411F9286E11085D68EBDEF84FAA3
951D7DBD228759702CF8594B7914713EB6EFE2E7C48768FA7D65F84C65C9C2EF
6DA5F89370958884EE2308DD3F8169747EA791A503CDE2661FDE659498EB28B1
93DA0E6D57AB8DBD03CEE229D9E332A5D27518EC1912CD037FFCCEAC871356DA
F0CB205917DFD1A8F1216EB436CB8A14C20005B39C19BC5F3362DF19FF27514A
43947957227894E405957E67C432D34DABD05059ACEEC8AED9F815958E99FEDC
664150D66C7614AAD9EA02AF731188ED2977E3328017107CA00D0752C1E9A19C
49904081F69047E7A0979048EDAAB75DCB29EE2874EBD426E37B2C142222ACF1
72BB56C524FEC5C355B0F9D420993E87AFC8CB2405AC1A0F8DB1E7FC019B17D8
87B13DC0FE2F17E6C5678B82745F42428332F2357E23D066595826FBC6EE6685
80DFA23999F7383E534EF6C936DF6ED77EFB07C3DA6F036CB2515F320357DB77
1BD7A674D75FB486A911840172E34B044F3F0B29ABD81E289B58C0B3D0FE267E
E0682D2EF5A9BA2F411B4410B5C06F3B4E3A0B2CF777529685867B52FD287BBD
3CBD188F380E53311BEE3EB789A64FA127A7347C4D891ECB9EA86E3626833012
07BC5711AF70340B16C45C5ADDF0821009F5680D1F1C3098C46744C92F496166
9DFAACBC294FAF36CD27DA3CB90F31E410A41FFF797EE8CB26F5F87D22BC1766
A64775817393B8A08BA061153A631D123B7D5B084706FA498D9871C471287023
DC8B1B39C5C1EF887040E86B3FC3079CF4A2B686FBC6D9FDB1AE8942DAD5C2A0
CBDC07A60CF282C523EA82DA9E1E2F11AC5D1CD7EA2DD4C6268A4F2AB2DD11FD
3728425F8FA806BE2210FFA5E4D49A75769705C3BF956AC38056DEBAE3819CA0
8A087D28C9FFD61DE9377F048355A8DCEFF5176BF7748E47F5FC0B6D5703402E
DBE3E895BA0169D6A650DCB776AECD93BD0BE45E862D6B662BEC4FB30A4CF29C
6CDE16A4138F10EF9D2FEA95470FC8ABFD342B69BBF418F65B63A8CCF416601F
0F65742C4694851F490E66DD6DE58E583116C8E49BEDD5FA2D152827AD275AC1
D1B33A74E853ADE69B38794E04207AA2787CD410FAE10C53316B70DE647A2BC1
A6CEFB3BED35802440547DCE26F728506FC8035F97393987225AAA5BAE6B71BE
584B2F4EA47D58F09A5AEC4FFBCC3C48F789F72914250DFF1A3AF09B31D976A2
1D7A58357E5028617F3565B4A26C6C28657538F08F6AFCD3E60A75CCDC2947F7
44A7F5EC803B1EBA0371B95F9246B3CFBF70148932A7BD46781D14F0AD6004E8
6F56E659FF1334C58ADE1B59CEA5BA8690A89CFCA6C52355A515079CC4F3EC10
ACB2D6F86DC0B746988798BAA717ED1096C9B1B50660D12CFA7C211D00CFB101
7645B990CEC01F55F3CAB10E468079587253834B34D832BC930C90EB1F07A143
358AF7FE93A238F9DE94BE53D2E6BB82F84E5477A884C6E03F80BAD4BEEB39C3
7F342C596872E3B295165A91151C5BE4BBA6904F1757C6C96A76AC84A668749D
35A37763492E30AED24A991EBC4AC5CA2268EC5E8F4C8501A5A942CE2133C05E
72DE1C5139C5E2C587447B5EA54F38E5630D94065A3FD6FB30FC1E1A8C19AEB0
A14256DD5230831A7B3E374CA6714C3B493350028443C6EA183654F7113519C8
758728860AFD705B4FECBE54E8E451AEAA6F5F08103DE1712429FD3E48D7EC75
165DEBAC3F6125CE2EEA37F9D9A38CA5FD440CF7EBD69C7CB30A38FA3CDC74E3
1697FE58682868F1A5C538DC4501718DAF271377FA7A0BBB34E8E54FEFD84B82
1C02D5687C92F21FA2C654B19787F12BEECE097A0C2FFF0AA1656DF4975E9486
9CDB54A7ABCB6D3BCED34EC382FD44EDF92CFBD8E658C0DA68726CB32FEC47D7
4B7259B2855981E2C5C0B828C442218E5F7EACA9985BCD5228CFF52D613D9FE8
ED6A11315A7926B9EBA902CCE1279ABC111D9490CCB5D5C3673B4AD3EC781A8D
30E262C82879C4931E70AA41D909EB8CAF882E97CDDF6B28864B38DDB4BB06EA
5D270F8E2BF34AA7EAA139F9AB43547AB462D21B6E040C4168C88152F6C38128
22EE91CA5F54DB0B5D3C120C27A12AB4E4DC3F4D9132BE8BEB80D87A7BC8A2E5
7A3076768C4CEF8A11B71F451D064AA2EBF442E248FBA14177A05DE07B3CFF9E
5EC1B4223245CFC20C03166AD1621161A5A4922280A764853667DD803DC4C3E0
08F446E2CB2119DC9B35C23652C12C122185692569A745EC11C61E9B81BEB99A
FD20F8F835F93786D1D094605C22E525B992B80F1F0D0EC7842921E7AEDFDC9D
7FF76E05A8A8AC5C0F322E7C703708086CC88F5373E8A1761FBCB71A69BBCA2D
B3A62D8383F9AE9CD383C39A1AE14CDDBEF7B5660C0A8AB2E4E5B7951E1B7A1D
336665E85530D39DF27B50D420E12EAD63CCF112B0C41DC5117BBEF687AF12A2
44CB1FAC0273397A2E4631E0FB01B022F566FD674FB3E616F4E65F84E35099D6
58F31AAEE1F2637C33C4BE95D117BDA81A0353622F4B83C1C7708AFB0E49EF55
47CD38F0C8DFC61D378F4F2E6ED675880FD3FE0594AC16BECC74443443705FDF
D53081DB5A7842B19E4EDBFE9E781862DCEA8CED89928C69B5DC4FB84955A24B
1F7AB9F5C045216EAE6D755D57B34EDD1D8C2F630987CE9BDDCCC58DAD6148CF
DE1121120E490E3CD9763461E866475E3D02DC2CADBB0275B0DF31DB48A00EF5
A8BDDA7C7F20694071B5DC1B4939696874FE264067358D7E456687534733E132
896072F86EF7CE148A39AAF354E80CE856A80E86ABAC4527D390AE898F74F048
D317210A67917ABE88C426E0935C83F1725D6AF337B5BA05A4C80B81778C9404
539CD429954BD2B4F9F57AF01D142CF1C06B05066BA3E923D39782B49128C194
C201001D3C1F66AFD10B520ABE2363046596442CE5B2C145774B625C89B2DCF5
46867641D8E57E9F586FCF7D9FF77158F79507103371198D49FACAC95898BB87
4BC29A67B344E07A72116ADB55B9C6494E5E3B14FA09426CC2E09A02FEBDB492
9B616F8561AD39536265103E72AF8374060CB45080549C5EB4C5438202F96F73
F38EDFF0B9642752A8FAF284A38A0F478AE6465FD33A6BD9E9F52522A7CA19E3
30D1FB4D17F99E0339271341890C01FE8FCC125AD673DA7DF8D4044BA74001C8
9B0D11AED012B39861285D89236AF540A2B44D9DE0B7A7AEA1F3FC33EB2DF093
B9EA590DF44AEE200D3593A7C87A28006553CF3EA5C90126907E194FF1744735
8C35863554BC5D866098939F0AEF7E64F69E805FFD40AD0BDC41FE1C58FA3D4C
2C2174B1A09188847B2188AE8A4E82FAEB6F7D51108A17CAD330E8713D9BCB52
ECE231371FDFB7ABB98A5D4359E63EE67F1648B0F6B0150EB4152DB0A9045561
1BEEB68DD2CD6F051212FE8E4E33A889BAA68FE252E2041EE21902415B2E8F13
BFE4F86EB9037BAFBC79F33E0706A957CDB456166124F04E0188216FE25A8304
F71C1FA2FDDE379DC72CB6462870578563755CDE0DAA9F9B17BB91BF6ED1D2D7
2D9F57A11C702764E5700132967B7D4D406C821704C0D99A1D7C1145A53CAAE0
681A771E7421871F8648C120250CAC660738692CB37693D0FAAEF02CC9A97452
DBF1FDA4CFADC0E9D88F83135D990AECA0B74E9BA88B7CD90A3288CAD5F5F2EE
338AD94E2F8F2607FEE115F4C8B4029CF4FA10D57CD44CA20BB1658D5CC43229
CC2BA47E36083F7EE48FF921DEBD639D2593B092668D8B421391BC4E0BDBEC5B
E62F285C669DDDD3E19FC560E2056E9B921AE83116CA0E4E26C5C8B5E8A54902
ED4EA820E5E03840FCF0DA4C5323F459196360F1173DD50937EE1D14EE194669
E778AE68D7FB2209200C4A73D42DDB16431642B0216F3FBF94D77788CC4D4372
6D01CFD9D97732FB4DC81C52B4C08CBEDF38E17B8C982B8395B11582C917DE36
07CCE60491A01E71A5E78DA735C05C4A9838E5897256EF93E5E0C44E6DB1226C
466B7F1903CCC85E31EF228197B64F49A65B3FD76716D40CEBFC1951BAB1E21D
2CF9A7F6A47CECCBC673756C69D4F7331CB5B1F254EA00D6AFCBADCA386D6680
B17EAFE04A825B8591383950EEC84F8F582710A23E3BD4ED96B76A38832678DF
15A9C41AD8FA8CE0DEBE8C4F7AEEAFE0BDDC4400A37D6EF97B90BD787CA07D7C
81276F967FA74D9E474BD450EA025C499E2799CE9E91831CC0C5EA500954924F
BF2C4C9EA07E30B1F9AF38374AD322782C57AA4DFE53979740D5E59B50FBCCA9
6880001E324EF68CB5BDFA85944150F9197758DED7E3EA3FBB86534BBE5E5DB7
07AF9B001BB0784A9B5BD7BB2BA80B2166A6075CD4784CB79986296B799CCDA0
9673D1D17E8E923C9F1D3BB615D049D402BE4400210AC6858462BA1DB0A7B4A8
DC7763F46E574173DAE1157975FE8363F15C566BF2F4D98C06966F1BCB0A2D40
666F36C9C9D27A3B4DDB17C91FC9BF46ED7F261B3DAC752EF803DEDDC71789BC
FE423EB0CEAE4EF9B4D49A25756E6C3DC707E128A76B2571636102F154967A23
0081896232B4A66A97D09F7D17580ADB33E96E726BBD463AF2B6ACC8583B1FB0
BC61C7683CA9BEFB054371DC2CB3491B245FC415B155097722917A7435ABFF22
01C597104373AE87606FD0BF17399101120385C21EBFB5C225E4937A6D8FF191
B0081810CAF3DA2B31D03F7BE1370A1AC7D85CC36C9A5C34503658DDCC870B2D
9BA33430AD44D70A15F6EE654589A23D229A541800040A1BD5B2869EFC7A1F9B
2DD1E6F9F65B916692C17962B6AD697CF575B38B548FDC1CA59FCF32A4DA63F9
3D74F3B108CB19C4F862B9311D7B50DF95864EBF8E57B56AAA0407D1B5AE1146
1DF0C2404E2F20138ADCAAEB07A0D7DD3D2932114CC12700C51B88112F5FFBDE
5E8C1B3F087BA39A395D484AD441A142BBDEDE559746232F7A307DA49ACF7ADB
4E3EF6D5CB80A274A4D77C33B08540786FB8D9437B30885856BBA23EFEA261C8
E9EBC4C959B0BD5911576E4A559B4B5D8DFA46EAE6ABE8C4BBF1B82A6F2F342B
BA2FEE43E0977377AE12D0DF0EC9F101954031F260B61FA9612DD39C767B66E8
DC7E1A848B505C85BEA981E1460B43F2BDE1B511A248A9B77394EAD12F1ED00C
F611B3D232DF732978643965DAC1FD74566DF69CC969B17FCEE858C04F7DD599
4C54255E2DDBDD98DF584A1D5E711208C531BCD56A090F5A01C7B35DC84FF0F1
17C7ADC6713F19A16C0E44DC767CC622033321105DAF43F61978AB487687A04B
0545F7411F87DCD3BCC99261D0074ED0B22D04E3678DD29BAAC11466DABC3068
434B345DA0D03160D5EF9D48F2ED750DABE6FDED51246896D923DE6A4819F378
11780FD3E5E2203F7BC8BED2C7896EB7BE5E950079D2171BAF725B98274C8B5B
5D82BF60FE720F5625787B5FAE33221DEA7AFCD1F95E80AE142A7C17126D5D28
D570BABCDD77A7043A882D7DC6C951D869B1117334A445246818D9293FD2FCF0
01A9262F82F69AE7EF10C897C20A526DD817E0196E666DF5F06A1098CFFB33B1
3055F58D3ADA3EBC279324151CE0DFC356394C1F05CF70EEF0BE9CCAFA45DB6D
1791033F7E6A0B3DC6A2967BC611E1A0551BF7D3537761BC07331293CC1D5798
0F56D21B84469479B449300D146732FE4ADAED9479CF91B6694923E4658B68C8
520687EFA32E6A24A091A75B5745DF4E4ADCD67C3D388529B82438DEEF221619
03ADADEEC573CDD9DB4BE41C9545506C7404F1EAF59C2E385B9E3B8EEE0A24F9
C5A88A3C9076B9301912DFA9B11804EECF209CD122EE1FB78238A0046CBB364C
9C10DE3600083DE9C18FABBABD24367702F4844A6CDF8AB44E00BD1EFF0B1279
2610107CB4317818C89C14C5E7B7F43999160F78A9BDE43ADEB8ED6D014D4640
A63D7DB3815D6B0C5929795057053F73BC16384C57FC6C5867652EA2120B60D5
259518DCABA1C667BDADEE68D5C2215753A9F8B2A0AE370B433E7FEDE26772D1
5376D8D8795EA370EC92642983BE3D2874FC6153892DD6775D011C48D77417E7
B98A347C12AE554E16DE599D29662F02899EB0B2B007C59FE3C56409F16B4921
F57901C1404DEB32C5294F3D86E7B17794097935DDE184D5D29D3274CA0C1ADA
8FB87EB077A23A67D8BB412248D0F11E0F7BF408257CD24E9B03C1A310143B0D
AFF2BE07E81463C5FA1BBDDDC668BAB7013E58A77BAA1F7471E81418CC4A40B3
6CE167BCC3DD0ACC97EBF2FC876F9556D586CECA9493F4231712E9C5227C8C36
4DF916828A33EE99944498A94181D8B604BB39DDFA0616A8A99CD920A363F69D
AB78E7E2851A035649A646DD75FB0D68E431EB425FA04D197810D3ED45F4B6DD
3A2932E419904147CFF7E05C1935C885519815287BB4B43C4C310D7FB746EE0A
0A2E8A96357CEA3428208FE0BD8925A8067970D22734B027971465D215196F4A
FF00FBBA5FD3D846FFE07EC2EC1C900C2180824BAFBDE4DC51D946CEE42A598A
CB53C1CF5F73887976F4BB766DCDBFD6DB86C508088AFC1DDD92FD4781BDCC4E
DE3CCA6DE988AB517BD3D064DBF121496E49108024C4D29927E4675C3FF8C372
28E4632025A4B77D92A7FCAFFF49D793D5CAB7ECBB7AF3B2986181E0A93510B1
0E01D876878F0AA191F10091D62E8D48AA942280A326B0C493D17718ED5673EC
ED35D65CD9DADA48B4A4E0B615621FC3D63F2D5A5AA82BF2D8E99B49FE81E708
FCF2AB0CCD592ABD7781B5D642546552466027C01580A2E71D9C2DBC66C59318
50F60239FA81018F82CC18545E0A2D6E014C73AB6ED9DA50323C8CE01BB478D3
F4AB3DC4B8FA2CC936E7A92EF2EE4E7B73DD89419AF8CE998C1D04E10C5343EB
79FA3A379664F34B11575F9D8239B2F025C16026FB315D432DAEC057853FD2BF
87310088F4B9A51E571370AC200D6A454D5E17F0AB23C481F649BA7BAA611428
CCB4CE02662246E2C1E145F834C58AA64C091F8817ACDF387768AEE1CF102294
02DA6AD3D09573E942228FE65ECBFAE4800674CB858434A0187AAB02F5D84658
0B9FA111C493BCDF49A2C9E137F2FB2DDA70130E1E8D39B774652AB7DB1F488F
F80753DC0F0ED9F7119BA6DB2AEFC677BBCBB9E364452A7AFD3A750B8D5E0968

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC88F86B07C1097F9C5C5673B88582CEA8CD622F9B0C79
E463DF7F2F4C6640FF3852BEB520F7B23D8A22E7E601EF9CC6D0A2E6E82E6840
65B82C6A3A6692811E2B4F57723AA3A6E27076A2F63D6CE1FBA7ACD844E732FA
02797B386F2EDCE9FF9F84EEAD17B366D678E61C6176FEC09C94B74DFC090CCC
40AE9DA65E5DA02E7A7E8A840B45B752AF11A279BA06F821525DD0F477831176
84C80B29D318260FBC314986223F9EC4DB5B0EF2EF5D424C6DA581B49C709E1E
98149FEAAB15DFE7F94977CD2041DEBCB1FC8F4F3B288515CE43713570027C3A
C603C44D8AEA1F9821E0124F9AE3E5A1EA6D1C6304DD03CD20842B335D7FA068
735311F96609901AE3F757E6936FB0AFC41E8504D553FFC1556A37F78DE79AA7
B72000C7B2DAFF6236CD773386E362EC7CBB1284132F1FC2EA71CC5D2E2A146A
92B5ED12F71C8EC58BB4C207F5E12E9A87FF6ED8E4AE72E7FB4BF0253679C8C3
675A673E6E6554D774D715491E2407E944CA4E7892D99644B225C06917CD8C63
2D443824A6D326CECF8B700CE9C0415271514ACFA19D2B9D2E2E13D9ACD7B363
AAEF5CA4DA0F8986EB1AED17F3C26F5273B8B17E13CCBC9CC1FDEA4350EF9A72
F38FEA8E6E18BAE295057EE59E3D2F372B87A9C9DEE25CBB8B9D3492FABBDDF1
E9B492DA597DB0392AD630F185A2FD7E4DF116E24E0B2C3DACF2BB4D4F11C5FE
4243E79965A5EA6F16C25D5FA4DC837AB6757769EF2650EA93189D99F221F216
0539A2A7A5A9E6FA0D8EB2C075E74FD0A4011808FF1EB140791D557DA31A46FD
5F2FEA4419F3E20418C7AA4D499D43A8B60D7A0DB9382806172736AF77CAD155
DDE3704D09DDB65428854C9F0D63EA909F25CA31C33A6A466CB9B777366802EF
226C2F6AC6057DB44F8D19FFC8EE3F5C80FD1B0DF907110F7589E02A623CED3E
D13F3BCCD59F2E1F3696D1CE5CC504C797B3EBED92678E9659F6B7FE5E0C68D5
B2CB4B0A01DF4506B53EC46935535196CA29FA216E7980665A358233C70F6C2C
CA2B89C25231EE8ADCA6BD69F689351CB7374F480CAF23B6937AAE30ABCB50FE
B3EC09AC9F96E456DB3FC238DA251D2503B3C5896DFC0BF415DC91E729A50ED4
B8AD36E5F0316F0FF5E50D42B0785580A71B60D6FBB4C3C2AB9B8AAB7B3B6BA9
5434EFA36EC37CD0015995F6FDA2022AFBE05C649F8DF7A1CB7B7BDAC1894935
DE722FC15FA4E12394D4185F43EC6D292CA12F620ACF2524A74B2ED0BE7AF556
93380159BFD79ED6B3F6516C6DB1DBD3EF9ED2CB3E1F15E91B07356BCF3B2BA4
C83B075F301146ABC1C94B59B1725F67CB580D2B95773F441CA3814176A88D58
E2EDD30493E40B66FB701125D5DE7DE359223DB3665A1DE0A6D3A691BB421438
A155B463C847675AC77A00CB08B5B1C44D4D7FAF54DEA17D04191960C36B3FFF
5A88FDD0D4204061D3744D5D9A1DA5F87C22514F71A05D1D20D572F4D5158D5C
351F54F84A8E3F6DFA9AA653CF30B40D957E3F57EC73614B41A8711DAF4EA3E8
9E44169A493132E6E8E8285C9296E0F9EDC4EED4E5A4D939616C038CD479EDFF
91E151C7052F5E0F2BA5860925DA2CE4D10D5F14E54A68059A354C2E7EA604EB
E7191B4F8BAC9DB76FB68CF8EA1E820BC18CF8AF2DBB1CB5504F2D006BEAEEDE
AB8F2042DF26E2AAECEA8480FCCA236733526CEBFA8681EAD23A43DD98F8AD98
64022FDABDDC793DD7D6F2940CB731C323760D143C99E8F41FFE9171AAAAC1A3
A8A5075D2F8CD7FAB005AD56D584FBD724905EA8D6DFA49D4A05FF864ACEA2BE
23A4E6F45783EF6F0D7FC4347FEE26FCF16A4EC7F860BE69A647781D488613C7
8D841665775D737B667E03D2086E4769438D80C8ADD6CDD104CED130F530AF9E
AFAAC904A9312C8CA54FC256F94E854352DA8F9DE2FAD1B1C263A681601738F3
7839B79653C3EEF442262E3932952683406B7D9C57CCDDBD8171BE9A6525EBC2
E5FF173D6A26719B29860AB817FF6C52469FFBB4FC0E0216D54B1F0D3416037D
7EB260D82CE66426C00EFE6AA4ED485F7ADCF88F8445190D2E98FFDD613E1E98
2256081A24FC32ACFAD654A128AEF5BA3DEFA72FDBB767B6E4AFD2A9B34BE4BB
D24C8E30B77C5C7BD676B90A4140F193D13AF4740E13FA4541CF138C1039FBD9
6B6A36FEB7FED414CEE08AD044880FAA495F7D9B9422761EEFA5136B6349101C
DF15C41587487036C5CA1D575068BEBC70956409F536F0EC4700A2E86FFE1127
2D2BE1D612BD6F0FDF1AB50EEC8AC087E559832FE25F9EB38BEDD1371F92A4DB
15E14ACA0941AC3643011AF6656329735D39342F599BBA5D8DCE6AA835C4D47D
A3DA0A9E853D7C2CB44EA438FEDD0E5528CF9F00D077B667DACA1FEC6C2F7034
151E33F45AA9B5B2E5CF3B1C55BD6A970CD125DF01F8158862BFF3DE605B1451
EEE682ED6BD230B55FD47CAF0A6745E2671B7AADEA14F31179593C3E7CD1DFA3
4469F43922CC46355BB96A6F5D3BE142F1C3C4ADE4EEDBD1118429AA0422D9CD
56F47B439C8B9A69A0C5E14A4F45CFE302489A294D01CD579BD6FBDDD325F470
472F4072B379EEE08844EEDBC3E1D2153B5AB71464E1881B87167065FFFACFA6
5BCEF376237E1930BDDA4E4571858DF127C5DE3C3D101613741F5B6EB0635274
5C515A3C659040C38937F4BFB861DFFAEE35A93B7E27A9BF8A161E6900E15CBA
C65F5C0A50A42069907957B7EB6393E8D16AFDC322CA3659BFF8A7D8EA9AC778
23129D034B6A77F976B57E9F7587EB8643DA0642CD52CA713BF84832CC8FCE87
E6EFF1F721883982789ADE4A983C0B508442DECBCCB4D8A2B6A80F655630EE6B
2E49D84ED393A34B5D786460ADF6576BCA2E803B229C8B1B29D3AB88084BBAB9
89EA15FA8C494AF5B4C785FC82363391E7714BBF304E5D090C7D7215088BA691
D86DBB980E611552A15C560E4E7C8837F1B4CB61B37C32A6DAE0A708142B2EB3
7FD7ACE1C4F0BE20E303627F6CBC1752B7232FA79BAA00EE751B091A9F0157C2
03F633634F27CE359859FB3F111D49A13F556F580D0D317F1E35B96BE6F69BD8
57B6BC96CF4D85B0DA629BE50E70C9071FD355ED2C8F5966687CC11CC0765BA9
6292142FB700A061AAB8A6F560F594192F71828E593DE381CD7F142295945785
CDFF7EAD872A5E05BF86E222E382378E48D21C8C98371E4650824A21558A30E8
8565EF9A6950B3AB052CE651CA2A953C4C0BD11E6C2BACD82821AFE967D6FB23
9685F5147C7E3CA5F243DF0081DEB530199354B2BC13FFC556BEE7938846DD4C
0385B0F3E55328196453051D37B87F73A9503478FD80676BA00799426DBD5F4E
E5E39CAD79DBF9BEE42B1EEE474E2CF3FA4FDAC26DF880646A830999C706C9C3
4479E562E3D8C65EF5B077974ADE657DA56499E760277739E9451D4BF1E60F2D
EFDC27493F28879B1033A0DF948CDB424CF4C75191F14CA3541451467CAE2F92
B373DB1EA8C494DC1C62E795E28622CCBB3CC1853E9B85080D0F88B6057C9193
070426AFBA1768D967EB16CFC1975F7AFD830F4AC47A822B8FC953631EF0DD9A
9F252D13465AB5662CE5B5CAFB0FE0C002A03A7016FF65FFF21559DB67BDB846
91903B09769F4F592D574AE3F3E04AB3FEB38650B20D0AB8DBD3AE6D5B37A4BD
ADE5A6A592AC8EEE134205AC3AA11737D82366F9B6F51A93B10D875C7E7C6B69
117D976A1709289F2BDCD027EFDFB0B05838A46A800EC54DE642A6F83DC84AAF
6F7B40FE5E28807AE3F29258C5BB5EA38CB8B30545008F444B6A042578E1FAE8
C9EC7CEE0656FDDF9B4087F309194D462CCE239DE3B41A1E127B65F32A539E5B
69070B522FC34769481D2B05E1E117EBBE09ACAD9EA07A165E05FB4E92A9CC34
0B8771CFFDEA94F3F144B481EF26701755F340E134DCA0667D341C6E1377DF8C
12F6DE0B673EB674E74D9B60D02C2728063F03DCB23295039BD3915897E22939
02D96D9A92D5E12802BEBF5203C6EB99737DCC0AC454DBB783DEBBF713CFA1D4
D0B949CAD5782655069F0C4A7F3ECEFAE59D9206DA6CF1B0257DE0FD2A72E991
C7302F30F87A5D18AA40E69C9C53855228020C87BC6DCA224BC620B1671188D1
C7B211A1699BF020671B28BB5B150CC0D905A9C4C678493D241AEC8AAB735B8C
7EF1CF3F0AF329C193BAC9D1FC83BB9E055C3AAC4BD17F843D48D63178925C40
7EEC4B6A98BB02F4A8B71B986CAC0E8045EFEEE9C9CD66F8B708E1B0C01B683C
0592E7203724D07741FF8AB4E779B54D2B04E22F0D80B021D4D115BAD9C3935A
7F13BA8C75959544D4071D83A54F186A5DB9541DA2A5D5B444AF3E5A2F345F15
84BDC7D183F0EA0B9C1CECEEAAC5C4B94C40F8EED5D5C05A768CE39D4989F7C6
D4805E4DF2601F699DF7D2F97EADC3F61617FFD6A8C0B874FFDC1A810905641F
0C14D193EB5892D68ACF0CB7C512DAE8091AC92EB448EED77289BE1B67D755E8
88B129E20195087E5D315795840099B807818DEF8854FD5D51FCBA375FDDE83B
2978971A85FA9B07DA71031E1E5ED984C337A468F47B93FC63E320E00400D2D4
F72093214E8DC48811EE4A92BBD5CC8F3C1B826E39B10309C28479F3F49DE3D0
E24330115B1FE52FCC2060FA9B10F48E1709FBF156
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD39C
FCD0E8A6224BFA03E8C6D73F4B8F480327701262285C527828E5E203F328AD95
5AB433987B229534C53061C3350047FB20E3887F514B5897FDF225685D18D679
9DC141B7F6830D6771F1A3CAE655CA173FA57D400530CA6FABDCCB4325478D0C
93AC7EAA9DF7605213DEAF94C7281D9AC68D884E15ACA3BA68034F897A2FFC1E
F76FA2A69CEE7F1E9543904F1773969F65553C3469FD85B2F2F89F0E547BFBFD
F62A3E47DAA4EAD6D47F0305CCDB297C320A48A3655FAFC810CEC6F6D68ADA4F
AB5DD7F61DB94072B0AB8F1ABF62A78E43E1578DEBD2D05109DEBBCEC64AC700
4C28C4F0A5E3A003423B9958C73D306B2B4A7C67A95F8B4E737992642BD3701D
39FFAD94524A7752560FE97B8E99A12AFCCC5044D989BCAEC863BD15CAB7CE63
0194962E4183C3838D9401260A743447DF953444B29D7CB004560D0685F73E87
72FDDAB87125F419F90D165EF1C2A06A9B7500C6AD185B4115777C6BF9C24D88
653589B431FB84E4DDB650C2F783594DE6123D3142FC5C99973AF211F2A2A05F
5A756073B85FEADA4823BC1467EF2FC0E98A2BB28E5933E2F6E50D3580C547C2
54FBBBDC95998DEF2EA825E3BB2AEEACC0F30841835121B7A7D7A973F2EF67F2
795E6DD8CF55B9823AB2B15ADC328CC3AC493DE8C2F022EBFA14A2976D8E3559
B5FEDADF4E23A07F6C0E1387DD54F5C8BD071C4E9A716737B6BA413F846A887B
D1B3B89EEF73565F3D0D2D1E40E4C2811D37C9029692DF8E94F6FE39474EE13A
EEE65EC0E77188C18435A2E7FFBA595F0C054E96CC44F56301F6CFD2A7A42C7C
33C1362D901AC2B0FB255262754024729BBB2824C33C2FB07B4AB0E5BC4EF204
E240345C69F37D577CA917AA50C3BC9004C8FC0A5A8E517D39211861EFE9920B
3939DD770974B1929E48E48EB82274BCFE2E9D5D484DC7068B77CD864557E702
E4EB0C301062DB793BF0C98D7468E7D2C9EC10C2B121966B68222EB067A7E3C6
F0549768364D1935345EF4D1D5F8C6AE3C09162E8A4FC6CD4741B38836CB599D
F98A2468DFC2198D16044BBA796678C9ED23D6194A5CE79410133D40E5604C95
80910F6742AC40A7CB3E08E73FA1E15DD6E1179C390BC240DA061C9D539B20F4
FCFB72DD0EF634FB4137D55F76088819802AC0ECDE469085BCC3A24122DFFA52
6840EF5367946F3DF67C10B47377A99EB96C13C332632CDCC750FE6081ABD0F6
4DC19BE13680CC29CF0EF52F885E21F4CDF14F8A5BE651118D4F2436599ACD41
A728EBA6AA858A62BA34015E2E2F851AF557C8CF9586F5A809952F25B26C6557
DD62C2B52388A1B7B84A5BDD57BA0C39ED94DCCA571CD82C6E0BBE3DE5134649
8CD7D6DAC8936854A0E9B5873E0C43A98002905B196F919D54550933FC4B7290
C8C71C097F48AB5C03B5D053459D7E0ED44D117E1C942F56B51E615267D9FFC1
91A694BEB12CBF4EB3DFDA6A81788A92B5AE75375C8E3BABA0D234C04500AA3E
2F28C4863E4C426DE4581143A54D0EAF501057E3A9FF7B3D1A0671ADF319AA50
F054379798BC3C38137A81D75D5BE7E359EA0012AA5588403126BDDF5FC2AF9A
36305E36C2A2DDC690256D2085B1D4CB4BB93B1E736992E995B8A4F38FF8E7B6
0DC1EC1B6C746B6AEEC9D5B0D1C9641E59CE041594E0396A0BE7DFE162363F66
C0DDD904FAF6AB01A82A5E230905B36A862A8E30DE59B50522C8AEFA5451F931
870F2A99727DEA6C228DEDA6C25A88C4897BB9BFCE16CDE9E5F075FE4516E1E9
02D53E24B71DD4F1CC13482C48FD1456BB3B6710C69F0ABD2C8E0CD7C3900863
69D35D3E5A083C3E86374A2EA8847CEAAD3690C5D7BF9EC7DEE3705643B5F064
C6A8ED4630A58A2C74FF212B0A35CAD73632F8EE978BC33C8CB05AC2BCFE82D3
29D3A95F82D98F5E335A3E0F3980CEA094E6903FF9BB24FF67FD9F8598AD4F75
1527050258CB8B3F35F8ECC07BBB7E68F4BCB0B429D4AA25A2EE0287CC9B31D5
DDCA74AEC3B0951BD68B348D9C3656853E002ABC509706C00E045DC552B2E5EA
058D326D17411EDED514F2420EB640B4AF9CB0844D53C5BF81667E78A1837931
98838A2416018B583A55803F83CDACC6647227DB9302337CD98D1FA385DA5005
A64EA3E34E0AE3F5B34DAE23DC67DFE7BFDA027A952ED903E7B54769B3C48544
FAE2FEE14143654B5371B4E2EBF9784F8835D49F4E72B78BB5DFEDDF9BA465BD
FA74F2FF3B6E50CEAD45ED2C0C24E1B13B03CBA0C37EC251BD452805722C04F1
9A3B3C950F5252385EA3E898611BA9C4C8A5E0A6AD4E40D06FDCD6EC46527591
BFB94442A0146D8F93A35D8AA216357D0F96B8C07983FFA8FEC41B589A018331
D25E5B0F594F5C418739003766FB193DD7B97DF0F9A11121F9383E9A4D7A4220
2DCE9AB3649C01936660D3CB62D4FB6261D9D30EB70B6B0E91590635EADD02BC
13F010CFFDA00810855BC4D8EFF39ABAA0D3138F5E51E6484AF6EECE850DFFC5
2F6B458208BEFDD79BD8C4C6E6394AE72B8A73A9D1D8F443AAE0A3F0C050249A
333A1F83E14DFB045589F3D6D1DEF71CD3173441F1C3E12B9F46F91C415D6C8D
7FD5678AE5C1B8ACC9DC66783428D06E458F96BD48CCF7CFA30A7E12255939EA
6CF81055E5330CC27A4CF7A4C462D94D7EE9B48626D5D425D400528D5160C7E9
F656D93EB214E1FA04F01B61B295058E0FB0EB3C625259C36BF9AD2EFB5C64A4
540E4207BFCEA039DFB0F7E2C38F138EE0922FBDD3D7BC6FE12F0550746CA3B2
1B026E261F8D920C2BA8F9DFCCB31B1A824175717E5AD6E1C381A4C882B3C87B
0D1E0807EC239961D451D10743B0521AE48DC71EF5FF7BC09FC5E091BED2FF36
1ECADB0F68B3324E63C2C65B6338056AC11ACDDB5CD7B1CBFAF76EE833E519C3
715CFF2AC385F9BEDDD9296863F46279D85E4AE2BFD687F8117DA1A2235FC498
CC9E2C9F57EF881D478600C807DDC7F0A468EB61D185E06F8741AE6FBB6DDA9C
8EBDE42F5C0EB3D3524DA157F0B3F4ADE8D0DC6B9E205C7C32C27241713021B7
91DB1A56767B0A22F335A7A5AD395D681A059A12585DB05D6BC44417E8CB8E24
72EF2624C23DF65B82AEA0A95347F2DB16D3390FBDEFE059EC4B154FAC3E5668
263E11D3AAE27591284292FB1BF22EA7654C2797659120CEF28087F4E387C70D
495388068F4741728D4C96EFB433E255DAD15F08252EDF5979C14C46A1ACCBBC
666E9BAAB3B2C8FDB9A87D88D52B68DA57097C8EDD95A5F29B98068F254ED1A9
1F7031FA0B828C89F0402B564A9D9409103DE0E095F7129DC64B4012AC9CE863
CE8B7119AED87F3FCEBF2730D812FDDDD016B803C38B89238227FDD612653E3C
E63C5F1C17D7739FEE56260D0D7AC77995554693CD027EB52EA2DC82F92564B8
09A3F2D592898ECB9B4E44FEFEEDCE7B6160978ED7FF4A5199B53C97023C9329
B221ACB437B465EB4CFC51C2F6AF138BFECFB31E0322545CFE3285AFEDD87CF4
6710EA0724F6555891218D3B32A636FB671E4EDD08ACB06E6C5B432D12D54368
14AB3ED796B8189A3F739C72975C388195E802ACDE6BDDDEE4231FA5F99FD382
E78F26D35C407837CC1CEE9FA13A8BE69643BB244C9BB935BC5E655B8B3F2C6F
88B1A5F5559692B7327B67D3691BEFD6FB43CD0C44EBE127FED3E0DAD612EBA1
FE7F38132B7E187B4F875CDC2D0810206BBE5A325FD8FB253E24FF4AA72AD911
7A726322FD0A2F50DA64EF2BAC19C9A5E1CDCD8281564806615E4AAB5EDB62C2
F49106B027A1E5D547A55BE0E8FD19AA6BD9207104404D9D85C6751EB1F9F31B
DD08499CEE7A9B2A3369417B580A83C684F7A17F8ED87A4177E1103949CD1271
5E4C12A4DEBE298B7883E0DA25554FC82FE4E94B900DFAB447F083422F93DB1A
210C6917BB6A04E89C45507BE1B5B82BBC1E2071131FFF47E4533DA66CD99164
0317676F0EDFE1E7BA8E5424C8D0A899F621CB490A6823BF8235C4F5CA76EA74
AD464CD041B7CBB8892F2DBA833118BB45B377CA6B15C104868DB82A285837E6
2986F81259FB7E37A3AE935126E72E876B043B371F75F8E4BC40BA7CF7014A07
3BD9C333C710AAABDD27CD9B2644983B1A5F84F17CA924ED3AD4456E3A67BFDB
4D9096EAB6583EAE32168C76CBC040E6B64CF1B5D624465CA3E544394563D24D
8CF309A212C5233C2A0B17A9F410CD7D061233667B370C93FDAFC11510B4437C
6332293F726D6090B596C9CCDDD789D38C97A0BD58FA59AEE4B633747BD17756
5DB8149016E6CDC41893478EEDACD50FA61FD2BB18812A646476EB57C65182B9
61927DE098C08A66D1E33FF54A29BD63FD92A8962DCCDBA5432CFA52050EF03C
0F93AFF4095F9A6BFAE54A5D3FD3AB69E247AC2F1758689851A9537DFBD4BB79
9E573A54E8C194DB4365A224C9813C036CED2450951FA9C6175486F899AB7865
91690FFEB4B0BE0C5817E8DC0876544B886DE6851A9084E4B8F79E73AB556344
DEE23CD2ECF4E48D9C7B6CC669411D14C90EB2DF3B03529C635EF4F0F627F510
F88B13609014E6BC5060AEB964443EB7D0F6C3883D195661CA3A1BBAEA7BCB4A
04EFF9EEC52118FECA4C326D9D8B30A01DDE65747AF9A60BCF712C0C0CBCCB4E
89492ADA71B9168C6AA9E4248327D48861BDF65F2F5EE2960A41D94C3C235735
1318A6EEA62C6EFB3A650362A7A748A63C6E807E2AE4B46F8EB3B207344F9CA5
2989AD8A876F13387B7CA053A38BDD33CB568EC4546F864B98B8FB2B09B7F5A6
B4E3D61836E7D79DE62BCBF08F883DC5E7C0AE5E2557DFFE8BC6D819708103BB
963F6F0BDA611B948CBEC8CE75848FC0CBAA6606E892B2E41A173AA590B6C92E
23EA935D0A9226ABDCDA689F202F60831F7B4783DBA1C7639DFAA4A7C55BA8AE
A0523C6D6733A719062A770E224D50A4FC0B6CB64557C4E1D8CAE8DF942AB2D6
8B5B75961FDDA498D72C45D8B8EABAA30CEDB329CA121109013769EC79E2F70C
1D13F66105F277E5B6745FF4A5CB0EE90FA42E1529460722D841F078106D54A3
3F97FFD30E36E69B3F43335236BE3F3C8B5968E5E82DE931CA6238DF599991D0
7DCF2F24B073004DC08552B28BB3769FC5A368C75E39517B266D624F6F7CAD42
42AE6C63D047AAC8EF82134EC41E817E49FA6204D5078361834AC6C0217AC498
87C1D629A285290893C0B359EA0DFDAF09E423761E70ACF40ABB2DFDC6D11276
2B8527CBE3381953B0908617A28D2D6DFEA958596D1ED1E381872EFDDF551E2B
35040B728225239C16169714AEA697245BC6BE6C302F0411B5ABF76573579455
69610079DF9E96CDE8D005FC25E59B029C016D4C1C365040B9654679EE7EBCAA
F81EF4540E579EAD11FC6108525A437F4391E79987A4CCDAD31438FDA626C251
ECF6832A4659B60CE2F2BDA759AEBB19B020FF7847EAAAD917FA419662D95A57
9ABE56667A9B1875C81B24313E2FA52F65CB925BDA5C98E98C7BA5E25EE152FE
77C81B3B924460D9FB6C2AC28C5BE853ABEF6FD03DEE66690DF3FC71E71DDFD7
EB126901EF35FB6F71300BBACD762C6BB5DBF0D3698FB728652F3A6571CEFAAA
7EE59DF8FB821CEDEFB4941ACB6488C1A608FA21A2EDC0D3DDAC6D550B6CE019
0281BA4CEBF16ACFA4FD94730CDA24A3CEAB6B77A4F4A47CB6269D49966E24FE
51C7D9588A368F2C21B7CBDECEDA8B484FD4DA121C010A40A2D5B66B04B0285C
7AC913CEC83CF9F300831FD25A9A7CC8B9BCA4D76D2BE36A796C72F84C716C2B
263C3C9F1B5086D11C140E76FBCC6C6AD664E159FE319894B6CBB34434A084E4
FBE6EDDFA3B58A343725C742A8ADB8E2490AC75CEB919C11032728BF872D2B0E
155A92A4F88A8132163D67DDA456E1B85458CBF0DDB3DA821FD33EE749DAFAFA
346EE621E1375BD57EEDA0239884B2F48FD7E2FD16C8272CA2C2EB39D37D7481
2CCC7C746B13C31ABE7A39F3D5D298539F5FF372801684D2C33542156E1B03FC
3F773B665ADFF013A97583D680123FC3A67A517E7F4D92C7AB7C81AA04600F1D
E13371A453BD5E03E0053CD116A828ABDDDFB3667D7887C9BDB503D538F6666A
3ED9C1AECFBC3AD200383477D05545B04A55AC284A49E4A05E2A67BC0B4901E9
BCFB5BDCE3DFEC196E304C6DA654AA4124D577D774A217D4897A2610171727BE
61F886966601C53826AE17074880519DE36B7F9E56B95F59DBDB9785489E1FA9
D96C57DC4B7603038D6D6333A798B6E803A0A99CABA87DA35B532BCA16C510BF
BBFB37CE6941F05ABB349E75AAE8B306CEE64EC490589B682C529DA22A5A9F0A
F66B44344F1DF681219626C8F3AAC1CB25B5CE6CF8F99399960F1808B44418CB
EF1B314FD668F20AC79B6145C924520DC0BDE78AFE39B3C877425EC39AD71A9D
E6DFCA062CCDA135B14F4F03D05C46C8D3DD9EB64CA74A51274134606E73A0D0
A9ADE7860C401C62DB2DDD223779B1E6F7503E0C8A30AA00FC9FC6B9EB9ECEA7
123064ADA03DB2711DB0E843C914E2572B506E890DBB1BD9B8AE10E2D6143D56
3819EB1ADD2251099DA5D63471EBF5739689B9658F75B4746F0788B7BD3FF06F
FD23F59E34B70AC5356A5385360A02C324545958E318551EBD9B8F4AA038DF79
588063FA5C12788A1C7B0EB0944693E0B9D18A14E9DDD500A588EC97AB524211
DF1B5C0087CED3DA9536E810B3EE1B9C698F353865B9C5DE48973B6DEA464144
39587BE5AE2347C835DC00E5A73E95668DD0484B4217FA885DAA68993A4094F4
90EF2DA767DA69B10DABADE722D70709254EEF9476C91C59EEEF6DDDC9E7C616
B94F1A49931E22563699D4270B089C6F91831CC4E37B0D477DDDFB220D402F3C
AFC7DD736BB0C4879624730445218D081F67125D3750E3B00171C322102F98DD
2B206DA785DE8B014AA6FE4866BB1FAB2FDF42E184BCC24B3BD93062C786EB15
A5F0DEC6366D20DFACC9A51E37B80B6D7CF0155E10B53A271F23B6292718FFA5
6E5DAE595F980852E4C88D716A014F38E32CB59218E671C95A9BB802EE00EA98
CAFC7491019D57B942B0CC3643860398BF7E6DAF07138F356959B8327FAA6CD7
1CE5EC69F979A3F5DEAB86E06EACF7F5DA3BC32030E4E23C5E0E7E82C6B3FD16
D44724C9167C7F909DCEC3005810B42BD9CBC098101A5A71706506E71315B27A
A869B9E2AEF564F27992ECFA42CAEE34B742B0526C1D6B872A1AD8F4364AD717
4F98AD750DD893E306CE5698A8FAD2D9BA1B570C6242678D1699826FE8A7CA7F
E321AA97994FA366628D92D749346C3079B29055B18C857995ABABB9715C4929
4B85969909838CD519B1F938CD8854B02920BE88F84B9D909995470C2ADA7DC6
6857AECBDE1D3BD3710A1EBBE764C2991D2EAF8F1F26C506DECA2CB27E92FED9
5B5B2BFA8BA8080801F9BC7611DCF9D6AA4A8651177CB851C3D53730EE75F1CE
4473166C04DF344F9F3A90FFBFA569A4507112C6D45939C9425C116B70C4970D
F70D98108A2B65251B4A2D0D33D3D98D9ED750A11AF32C0D836F56E32A6CC2A9
F68DDCF9D866B436F49E867990A56AFA5C2CB464D0EAF9C69AE053F23E8D6A69
643DA5DA936C099DBF7A5233853C39BA13D032A7A28FD0AEDDF8F56984510BD8
B239A8DDF7AB69F9D0B4117439FA69CDAC553059C7B5A51D29A3AF781F1551F2
3E2D70CD53E7237078AA972416121CF4F0EAA6DBE938CD88A43C54F3095D6A29
F115B3C55C7FBDB7F09EB38F7C8CA86C9C89D9BB893231FF258A67B5097FA04A
73913FB333132C65919A271FC2AF85CBA7D0FCFEE888CC7FFDEFCBD573725712
7CD4822540D36BB2C736225102573D21FD0B03969BA017706CF825DB774EFD3A
E4D7F6B695E7A7A4ED77EE16B363C68CB2FBD751726395EEC09F5AF3D6AFB7F9
65E92278259AD5538BD0836F18ED0DE7F01D9BD148F827976307598CE6CA39AB
81C63C2363FBE9127A3A472804062B83DBAA54FF0F25A13DAD43232F7EE4D840
B436217508BED68CCD643589E2F3A40A8B9AE0511D70A2FC838B38B71F354B6F
A642B5FDC187DA279FF7D54B40F954901F4DB1E7A8E709E36725A1250C5907B8
A7B5D6B23DA27D25821798E27E0F586CBF2D967E468B2E8E763415D4AF91316F
6A01DA7224B06AAD1687DBC419EFE2BDAA0E9BB76A36ECA3A2B2AD548B7E6BC1
1F3404DFB91962B723F71C5FEC5DD89072F6A6708A2EE664643888AC42C565D7
831A64AFD7C9D8F85A009814CA9068F00AFFEE9F3D98767FB1901DE7CE1A8A01
68690A2244E27C67003EFD25C5A7FFE787387CA91D863A9A8C9FA8CF7BBB5FEA
64345CC753581597B69E752603992965170D2945846D5434F3795D29F2EF6A27
75F327B365B077C744CB7FBBBEBEE19E62A2BC0C99138A50E5C0F57977D929DC
9CC33EFDA831ECA28E1110862C783931111D2A9DAC0C40AF2F9EBF781BD5C692
82459F75ADA02D7ED5D348F7CB926F4AF26E7A139EC8D793363A204193F78172
FF911C12A4D608408E2B8DBCA356F21F711BDF2D2514B0D6B96D36E16BD62C69
09B9FA2B48549448241EE25E1B5D8218102BB4374636F2E5DB8CF80B65E415BD
D44B433185E470BAB9CD4BDD4F35233B8E5A30A81849E456D085F3907BC8B495
9449BDD74166B19F03C8300E68162C687170251493BF0533EE75223739B2C40F
0B848E5F1C5CA9A0222A3E17C2BD09A1C184648EA8B562236B8C4F251292F496
37AC8E7F6FF258DFF2EBA9D5DEA90E75EBEBCAA20F9939F8D5EBCDF09262E855
0151CC2EE509E4E648FED499F85590F436635DBD68DDDE8996FA2403795AB214
38DB65980B5AA8FC9928E2BA5F7457691AD5BAB068DE17B5585663A32415FDAB
3631BCC8DB50AC1CC00F6CB94B5281FA6EDB08674679A39EC0A7F739BC533CF7
684FD017D6C244D36FB6F2A10673088AA9391CAD3D4BAC71320BA33474DEAC4A
DB7FF6B751D3816531ECDD6CF5BFF6AB2374BC8D310EF915D13119E5609F7B98
B8D14FB4C2CFB88C5C7E080127212E2FDEC1CCAC426117DDA7D45647E4C2747F
40513D3A7383D7F877F1B45D9AA70DDC522E27E0B32C249A45664F725B8465BD
C6263682315CF8607CFF3D6CBEE77CF13B4BE73E9CC292F791A053919AD9CBF4
029F6829A6B55DCA4DB5036675013A692E00A9FD19421FA0D6027EF8C615112A
29AD57AF9DCF94E151D3886721A29D973D1F8C896E30AE8A5DB5599E3A3661EB
72774923AC44C82D135453BD56678689754F0DF344DBFF489E44C5390BA39A0D
E57212027023944DD1FA941D5404E168882E7A8D19838D3B0D2E3FE7A0A34BEF
0D922DDEE91AF18427CA61F1FD7081F840EF2258540759C5CB59E973BB06E726
DBE53834FFFAC353D691D77AF3575259715B293A3D7E844764F84B88D997BA5C
7B78D11516AECAC39144DC9332AB0C22D462865A8315C986009F1EAC33605FFF
98C7D011DAF6ED1AE0ECE6A43A78451725AEF973E3F4E5F1A14EBF827DCA38CB
F9A44C7733811224409FDD3819C98C395DD7C3AD05DC5ED1B38F54977B17BDC3
4F34DA91337E5469B32C9ED1980C4CB1840D7250CFFAD98DD1C3AB3D525F6DA7
0A332C61623DC5C5C4277079D25627DCD5E40E3E202D71769340728631532D07
896534AD7BCA233A7D21FDCC48F92986F5141217E1BB3713F94D198424FF07A0
D1ED3B50A1FCD29F855736F629B7793C8FDACE927C8FBE090DFFAEFF60814811
265D1BDC9AD9DF4202E2704E2D855D46F32DE17EFF0AEBA7F76CD61AC53096FA
A3425090497B7676146E5D4D225AF63F50ED7799609AE871DAE4F8D0361EB39E
F300952F48F61E0B528F4873A53214B80D797AB7E392CFF61E78EBBC6C56A8E4
48153895A30B4A82AF5946FA1EE71FF64CBB5D6143C9E43AEC10B32417B39B9A
83E95B5F8EFFC4E2DFB76CAEF16CD3EC1B045ABD80A941E8D4C071EBFB43D842
99D336736B15B05591122AE51D1174B743AEDD72B66B8DFF757D05048CCF86D9
C2503E2ACF7BDA8F84B4089802A732F2AFC037D6B41BD233860AF8EDF5142F18
2D1D02504BED42472B74E8F6E1B541E44102B078FF19363D6C5888293EB8B7AC
7E9993541A3C27E52E2D85938BA3F031B6383E1D780A8128664A8F1143B60581
72DED8AB858A3708405E2A42E5C47B6FB43423528085A0849F14EB0E7D209E50
7D6D8C32671862B1BEFCD3B390599F630C25FEAA3359A90834F4A5C6383A1ECF
8301CA929433E1F250004CDCF12745359AE31AE039BD15341E42E6366E028170
82BE6FE0B04249A4840FACA5D7053A236404661DE55E772F5982E78CCADCFD0C
8A97A5372BD85578E1D63F8ECF3462CBAA35C3F6DA412DCDB19862BC10FECE43
21EAB5005525342C7441E2612B3E12E34090D278D7151D59D40D28184F00034A
F1BCE6EADB326C4323F499565020467A2F2E305D6C518ACCC962D69CEC2F7811
6EC8583ABEEB71D9592AFE1D648DE2091A8638431CE2A93113031EB40F0EACF9
0949369B2F026C152A214B85D77EA7DD6CE114837E29501C77CFE082E0C3057C
9007EE185EEC0DE8940EDE7A1DD87E205DAA4E88426DC433391AB62250D7C4C7
02A0D45D4312F7FF021EF6562F86B2E79436038BB2D1B4E72EDA1892720CB3AE
2E0B1F5CABE244D8F1F6D29DB3997620BB2B71E5A883D850F4F7E5F3A3B3D2F6
4D8C9A780CE75C1ECF3952C2AE0E9177DB0B86627B9DE43A7CAC25E8A1DDBC7F
234E41EA7F65D44137C8A4E66A1177A2269AE20E0B9A3D0CE34CB2B48DB39EAD
4D6A8939194DB0FB0DE379D855002931AB82AEDD0BDA2953ED797E7569F71565
AEC90CBBC62A28EA9AE7ACECFFFB3A226AE4E251F1F99AFC44E49D23BF85ABB2
031EC08E44F09A3B24E4E4CE050577096AC9FFF055B087C94886F0C838990E66
EFA96E06A975D2C77A9E4B76689F6FC544FDD4A65861C14C1434DDDB17F52681
C14DE689A8C6F2576DB779DA5064C30AB4820157A9D93B6B6511AB4FF1A435EF
8D03A4E296884FBB23B636DEC931E87F4BF5F39840266A3ECAF38D4F0B725F50
C0CC1C0B40C04D1680D51033154CDEFFCA6A4DD31E07BA3954B288CD9232F886
33A933830B45D6355CC753581597B69E752603992965170D2945846AC61B97A1
B020389DEB8841CB34E59B660CAF50371D69888A0E30F8841589FE146D0525DF
5FB31C974FC3B57969265C64C813191764C9BA8B47371D202C7DBEE606134662
722BAF78DE86A40ED5DBDE8B5E537B68A693ADD3BBFAAAB871ECDD9C87C2352A
B057C78C12B423635C670FE21ECF5CCA202965C0AB8D6671564F796B070A2B37
1AF9EFB65FECBDA4BB89EDFAE2D6A52C31C01B3AD72DDD8806BE4D1495247B1E
C6571E5D15825D479AF0E6EDE30F587EE5AE0B439EFC837C99B422FCEF96B5C7
F91CDE0E3BBD2C297D25B4BE338AE55A86F9BDDB2548C635779B8C60627E06B9
9C73D440591249C8468ADAF74761C1E281A9DD4D8B87CFB4AA3E3F00080AEC3F
0AA14FD25B61F3231D1EA86607CC7EE79F2BB60C5EF4AF15C3412630C9A18094
35FEF402FE317FAB705146DA13AADA0F26A14828C05A97EDEB2DE77939300D82
44CD675D0EFB66D16D46EB9A4C0D6B71E487A1252908F592B4B16C189BA435E8
0FF8DE2866307BD6A8119EF4839669C7D10AEE9EAE2BD1C09EE582144E4AF825
583734E803A7E943672A1CD5715F339292048488706533018AAF8C3DC4948F45
C5FEA6F70A400FF53C409C62687A6D6B8A12ECA7752E0477CC7F945AA8CA30EC
C8B012EDC390B3658EDC786857B905C7F1CB57AD26E5C5B013778BF2FF6A4C39
417962E0DE97861AD72DEF9AED159C0CA5CF8FD85221D5F92139BDF11DEC505B
1920E5B08A780D9E9DAEC1E9643545D179D97E7159C9710FD0AEACB8C8CD610F
1DB2D3873514092161A9C9F572701A3C8719B75161262BC8B0012694C3EF2645
2F9B772CD7C7A87CBA3C2D6F5E4A4B898478E82A3DD10055B80BAD84AF0EDB7B
A5F55A6C5E200BE98607721925F0BC60BF16E0616CB45A2972D906C53B7C1E0B
5F7006777AD11B35627F7C7F3AB7AA70C37462134CBA469EFF52B99E6C1F4B02
3C1376C47B399F2136B6E9A563BB6CF6EE049BC37E7157F0F8FBE4B0AC369070
B3EEC04549DCD60CB7B232D6389532C303C68553C91CE83431F239BE883C519B
643FBE23D096EE2A4B193612337A6D180D9FA91E94F8598BFD05FF7E29BBBA2C
52EE0385F33690BDADA2B0D53A4DC5AAC437310F1A7D586CC05048684AF27EF3
C09F75378CBBDAB5EE420B6D136FDC941CE819C6D2BD022A0E966A7DD5435CF6
99EFFC1E7C2FF53F19060E6B43DFB36D10E8DC0876544B886DE6851A9084E4B8
F79E73AB5384E45098AC5930545B63AA9E1FD26F26026BD1B23D7066FFD0D336
C9BDF01077572B7FB2D4365582E4B187B6B9DCD545AA99CF8EC08CF47C409055
FA93DCC55568391DA37F10FDE34C570D7BE76A496A58242F51E7321385395C06
F644205E11D810C3394BB359F98A79F25C60A550A241F77604ADE5CA870961C6
5D9EE861F61D0090350D62DF0A3FB68475E4BA09D03745578A4F9262AB6D7F00
55792D4986324EE54656DC3F630AC23B1ADC4A58165A3DD4DF0F9F4D2CF863BF
C518968C6DCCD4D937FD77EADB82F289FDB32B3EE2A0C7EA9691B229DB493BAF
40E2E405A9E5530B105D3BDE0E30DB5C4C80E0236EFE73491FC448D4D0A101C7
893925EF537A0ADEA372DE0BBAFE4B081E3474156460CA1A9EEC2C0939DA6FF7
A5AFB078652EA026A3B64E95D8CE6F8E51B953F07A0EED5E945E88B2E9567327
A2E43A4C4C566EDBC7AD53A4DC69B7AF731D19B47E7C2FE3E0434A84B8C55227
C52A0E3351148EC0AFE236BC89D8819A88F049A43AFC7744DFBA11EA4934EC99
6643FF4BC4D9E7003026BD9E800480EBDE1C49DAC6D220C941F231F7467CF7A4
55F9244D18DA3B308E2B065B304C74164BD2CEEF32001FBF3850C6FDF58B394C
8F85375CA2F7A2B45E45B2879EEF51C4EF98EE6D1368E839C98E762E070E8BC9
B2B50F719616A3C85DFF5CEDABEAAC7CAC906FF3F1A245372F291998E4DD89FB
868D379093C76CD9DBC4518306F16F8D4FFAE416ADDD1143EF22050DB418000C
C252B957DFC1A97D522C07B0F972DB969DB777EB7E49103F4C54A88EFD2D990D
557337D1C0C39E0840DF5FB69408198FF1F7182E0A7EC79B45E9DB0491853AC9
74690C7732B2CA5E71A052488B8DACBF8E700DB1AFD7ED18EAE80D413BCFA37C
CF66878E04968AFA1CF102107C85C3CB5672F20B99FD6F83B45CD36D031FC879
EECDC2CED41424E8EFC28DB4A11C31D8AB87A6675920DC0E24C94FAB5C7B0CBF
8D855864E94B62A82257C073E992D1E65C511E83237E1224F0D16B3A9F6892FE
5F95C12653AF8531DC81F3BAE16522B4AFF4D46E8B5719A2C58B25614068EE83
6036C4EA3C5E0C4B6D260BC1EBDEAAA33C053AA216D686707DF241906F841464
5F99D22B7AFBB2FC7A7732FC7D6B2373FC89222B33217517F5657A0602C5511E
13352F317B50DF5057022C20786E6B0EC2E3856CA912AF324E680BD00A85D5A1
8EA292FDC6CFBA819C67CD7979C9599068FC2F2A5F97D781CEA8D40BE1F8FFDF
222297564BD1A6610BFFFBDBB9E12D2B2E47023ACED35BFE3C70AC71BA5633D3
48EA0E3C8684D3EAF45463C7D3C164AA57C5E457106DCA11A67DC3394593C5B7
14D1688C17697420EC71BE8945703D73358AB1B35D44858110AA3EACC43B4C63
412B7944F53DAE8C69718C75E29E6F82FCF1D7F8AFD97CC1AECE6F48E2F5332A
349B88159F5E5E34FE66380AAEB23FE0FEEE0D11459D31DF11A16E8A5CB0630E
6B56484F80543DD84DEEABCD2EE72165E1C983128463FE6B363366A7CD8B7410
1554C7AC62C8B6895C6B10B5601D110F4EF4BA70C0A9518BEEE81EC1950C8A32
24BE13FA3E2221B91A6C0332C5D5EBC5CA8D1C94ED4824B5FADAD19E82539B93
9450467320C7D9F8A6CE236C2399BAA8B348608343CDD6FAC8EC8D25C8D12B63
DA8C9D3ED474119F0B564399E61AE552BDD5C1AEDD67126A46F5B62E05F65C78
3B58A4395B85480034CA30298A32E13751F231965BFFEE849F2830D568AA925D
094B9F19750E6C70999156D5FBEF6783AF55CBDD54273DF95AABEFEF3B2EC2F7
58CEF0D18EA7AF0B9B1E9FB943ABCC59454A6A96C931FC1FACF63AE95DF8A074
E77F8FFF641F37030A8C42675A171DCEDB5A8D65A8AD95D00D44FA93CB381F4A
6F19A533A2CFF9963C615AAD649127E8BA630090AFD344BB225F08F47868D6C4
D857CE55D836AD1087A1504A5BB67CB2C5BC34973C66955EF155E98BC6BF3F49
3156301A8EB727F685936325A363D048F36B87CBB727DA8C580672C44F4A1A57
C9D813D2557A0CC853A79611051BA686C22125A5B2D9070FF2B75E2E9338E118
204CD8ED3661760E9D876D40673F798479E1B04D0CFF3D47187DBD671489676F
430481F0589822DF5AE32F56BB1736C1A386CD3CE081714D635BFD119B464052
38159AC629C01E7218178C6D22D8054351A7343F305F92956836820BC95815D2
665774870D2279513C1516D11F9195FA1469DC3E2BAB9A2F3D1F3F53131FD4BE
8910C5D693757C3A5B86E2A334D035FBDD7DCFEF07F93366AF7F26F35ECF8D5A
A73B2F912ACA819B0A138DFD2DCC30CED8ED03698D3E043D2CCA6313443AFEED
F01B9C872F21C6E84FF78539E25EBABBA91E0F0DC5B787B860E944D1B68A3718
96A37A22A86DB24BA0C56FB4D455AAE8E5B9E1D66C409CAD00A8591A903E7E22
0958BAD2E39B5FBD6F986E5D3705FA8B65F0D11662237A7BF6DF216BB906506C
D257E64329504E9E4CD9A9039BB81420DE1D91BA2128FB44C04E1D97809F42A6
50A1988695A9C29ACEC322E43D4D4B7645F2977AD28559A6F11F48C06C0A4A58
EC030CE29BFF03DEDD3F9E2319AC2C00A80E442B18DEF50F97585EA7C46A4D16
2E2FD0B261F4B8331446B49556A17CE4318199616CF74DF218E49785E6C5DB28
4071D523682399403678D82C49CD545390B76B943671FAADFA8E5B55F0176013
61614B35CB6BA3BD4C12F614AA86929A1D4FDEFDFB67FC6730241A41A2AEB1DE
5FBA892DFACE7CBA940417FBA0D6EE20AEBA224E4A6BA0FE95811EF858DC7CB9
F01A0D5DCD70D140B498BA43863C45D94E6642DD04CF18575F8CE28E3035136C
15642D6C4CBE8F3AFF39B372ACC66238E98CF0C0B8703123FB21D3B23F06CD56
9706D1CD921D1E9CEE18D5028DF3CF87CEFDCE00BE3A5F583BB693D83383C82D
65C46A64833A843EFC5336B09493CACD3973A1EF1C598553B9892458452015B5
3936C7067FB25193794AC6D1A79EDF456B5CC7504937C5D1398F2E57822108D7
D4BD7C8AB963B5A7FF5834F896EC8C1916D52E301185560E9C740446C3D311F7
1C48ADE52E53620833497FF2567CAFD946F2F4E01311B8C2BCE3F1063E50BE9B
68AEBFC6867B4BAB0208DB3C5DD474D8829CFB026CD539B27120E8813F4F7EDD
A13852C326C1BBA3CA5206177CF93AEEED64FB1BCEBC595DCE5513F77A75B2D9
D588FBE3E687892A38CDCA9FF2CAADB63FA34A1E0FCA461520414E01C1004C67
5DFC227FED031BC61604FE07DAFC1581AFF1E0A4F9C9A2A3E39464596613F9E3
4EBD60C2C90386CBE00B8FBF46BC6415DC992B87F0B26FF88CDFE4F2549D6FA2
EFE069858086B838BD488E458FFC5DAE5FC5C01CE0ABDFC20B9EB24648928418
8894A56C3FF8E6B3F4AB7E65048996F3E3663B305FF97E0E67C3DC15C0E44E80
10F5D4D89D7CEC2E2259AC71DABEBCCB48DA53279A00B644BEF46FBD714CF55C
88A384578D427F6A7F96140C43040D8CDADE768FB65C4DEDEEA346D5B5D070CC
2B452B837DC5B1FF3249874BEA500C2C5AF14271976E969759F9FD2CAC330103
4AD0CADB82FF76900124EDF98A58510B2F9AE283707571B7075684925DDD09F8
E3CCB5F2CD8DDBE55BE3D58F42AAFF0CF78E53644C439AE61DE285234CC31682
6CC53FCED1C5B0097AC089851E9389F36CC6F5EB4F1E0F59DB71D6AD67DEA164
9F5445E875A48483E04D117BE1577B35111AC7B52C4C223702BC908D26B5CD10
691FB92BC2FA54A04EB649B1116665BC8EE7AEFA3FF5A0B87062F186CF0DFC9F
D8DDBE0440BEA623061C6A4784D911FB585269B20E630978C459FC7408AC29D1
F25C3EF360ECC5DE85C9F339E8DE7FEB097824A39CC9FAFD2392C817B8F78ED7
ADA9E7FB1E5800777FEA0E6C921FC69F386D2EB6555B471D6C536C54A0E25775
AD4A9339C6ADC7589A90C2439BEB50FBE60DE76FD1FF03F954A8497E73302290
89054501AB9D7B8E8D5D9870949EE29385E1A9BE819BD7651DD4F2A926434129
AFB3A6B9AF51521AA9FE4DBD0E2E9D7785F7D44E42AE55C6EAB2DF5BE8EADC7D
4EC9254A979ECD1E0B0E8552129CEF905D9EE861F61D00903456A1B7FB9314A3
F76B65763C33A2C9DFDAB86FED55D613B1E3BE26D589815ECCE64E398040640F
53AF14998F669A089152780C5BFE543A0FB2C3C4644354E5BD8A27057A1CEC9C
CFE7C60372C6923C2A0EA84766204F037A184AED37229471E3FBA0DB39CD0F9B
F66EE9DBEA033B04FD5A46391C6DD2EF36C0395B843973754F4FFC1B7B07D2B4
507731567B4FE26F468737E17BAD7E2C5BABBE60E7A2F5DC169BF13C56D9D088
60763C7F8834D1940F8B3BB3E8C7295B779748273C485A5F88DC1F96077AEE9E
D51D2A2202D7308D138F49B6D1247B02D297D5C76397076DDEAF4FB188394902
EAC1B91260167499525EDB3004C44AEAE92C7D6E49A68F23BC5D249C4E74A2E9
B6A34480102661BF79A0F1C27F54D9D00AEDB24EB05E61901AE90C61C7BB0BD6
0BAEB18A4E15591C0971E0BC2591A87D0CE5AEDA30DA4F11EEEA103137618621
8241404C817414D0579308612AD113219204CA439F606451962459E5DEFA0B5F
0BD018CE255720FD7AE5A5C3CE42C4DB7094ED2C21EC501CBFDA7DD1A82839AB
6F87AB44FA26F869E3420DAFDCE383BB7DB4B6A03B03181C7E508B3EF01F4E1F
A9035C4FE0F9BCA621C7352A1969A12C35F1984380EB6EBE9A73E81F16BD19E6
37C1F1BF3C714184CD7159F88FF54702D2F9D1A63A0CBFE58D8315D95C3F4E7B
7B2E1F2895057F1AECF690C24A43F2328C58DC3A2E2749987CD8D037DF90A94E
056877DB8B0387D8BD56253A7ADBDD5E5514567FEB068FCE9ED8689E0C75F5F4
AF235AF641ADE8BD148583DD50AF8EB47D1C717587A399C2CE44F032AF346910
76903E7AD04EA237118853572E484A7CA63EA32B7CD0266140C6008D25102C20
F1ACC34B1143D8B8C98D394AF051F8181FA2DA8EB2F615A396EE6F71E22D7C32
DD6A259FDE4BF178CBA8E399AC446899F673F4E7850873037BB85725C6751125
6BBF8B45C8EDFA2267535BB395ECF234C64522C6E7E1A98A9EABB2315D7B2B65
E7B2197D5E500E11D6DD1EA0EA5316242DE3219DEFA92BD3B995D7ED8459D711
2F211A05E7A98CF166D2F73595E98787D7F8BFC8A4E833606410FDAF92631B91
CA52CB6583FA4C6F64BD28EC6F839F95D74E2EFF7ABEF7310F51AE03A0F69BA3
A5A4B36E62F6AADF273A5386C46013A611C2B005EA68044E567C4939FED5F914
244F8D8E740264D3FD22033B9AC7AE4A6EF746B14855A21AE23F619E1029B9B3
15BD72A078524672C3F820630EF2D9A5D9EEC3EFFF03DC62738F01CA7266E1C6
3309CB81C3B39972CFC0690E82B3C80F8E0AE720B0FFA8535C05AD24645D030C
D02B35D74E637026FB952C3AB15FF6C85F8ABFB6CCA5C906F357915E59246A38
2A2EF44013126E97450301710818A5E61D068FFDC33C0B57B8121A5889DF3E83
DB6D7C5D8B42A932D90B0FE8934796AA4BE69C91697BD44CB3709780B5A1DE9D
B2ECE8695C05B65048C83077C5BA70CF01886C267D98FB4A9FF0FE5DB1611854
C251ABB7D007411C02FF9629DD328738ABE8686D2398C6351B129A6DE00366EE
D1F8DD43E4D83E0ED541BF6FBF7524AD76896C381AA1EBE4D3337FA760E4EC7F
854F0B4F8F282B8D46761EDF13FE556C37B8E216B9530A99EE3F2B14547FD60E
641285E721225419D6A736EB96121B5B91A95AB2613E7E6D7990010FE3B4CA95
FBC4F157DA60E0A3A4E38E4E0316CB43ADC197B596D458715CA7CCC6BD34A540
CC0B84B13CDFE0B80737B824C8AC23378EA0DF75BE56AF47FE7C8BC6EFE44474
80B542B229FECFCD917788FCB6F16C170AF570A4249E88B67A19036F9CA8F73D
54F2F5ECFD50FA65C70503828A0B8F207A9F3323CA99B24ED7FE5CE836D9AFBE
62ED84BB13F6D85DD6CAC27EBFF60C2A2B49B5D8BDA4C66A1D0C33C387867491
8120FF02B8CD97EAA72B7397045CABABFC159B79516CBDCD35E6B10CEFF01B9B
13488D736B2CDE5C9193226B45D7E418AE02983EF0FBB2E84DD009F55A48C448
8FFD2A8570054C243ADAB55F1BD0A2AC1D73029F6E0A9459B8B363DCCE028C20
789DCED5A5EAFCD6FC8B0F47F1CEA88061B82B6AC619A6EEC57885571CCAB4F8
E20725FE95092DA8D568538D7E6E4173551358C6A1D6899ED41346C31269CEC3
55F2428E3B21C7D1EF04B2BE605A2CE164FE2634052B4270ADBDC5FCEE3EB404
5489AC7DE3396BFD455EB5DB62967F147A3865A1E6C441329D99AF120C5EC034
D0B689E4226D105983DACBA53FD4EAAE2FC3CD3657A50A32EBB36A0793FD18E0
7A5D456A67E3F5E9DABB461A009DF7C2666F3E6AAFDE81F65C9BB3C11F8E1406
D0B11F7745CB403DAC81703D888B109526FF86F3C88ACBCE6129347CA197EA5B
BA56912F65547A80EB25CF00E0589EA471C2B9CFCA102B370083B21A6BDA657D
41885129986E62DFD63BA94A58E515535E20A49F7B7CFA95A632535C4EFBEEDF
136AB29E66A043486242E1C808CBA452A8DF883C90AFA0667CFFBA9DFBEC179B
30709683F735B2DC7F68F85B2593F29334606CC88C3538621C3612723E868D41
438A66AF1F24278E15BFE38325E8F5E0F5766A3AF785CFAB4D8DE4E7014E5DCF
53AACDEBEE8FA91F78252EEF3053A0E603DE43399E6A6918A88728ED8C1C30FE
503B32F005F9E9A365F209194AEA1E391B15CA4EF242DE87F86F34FA185DF45F
7F23FDBFAEF8D60835C7A026CD12A39C328B0C7177F8D2E66F47CAC0475CB31F
758C0B8E43DB51954EB8B347918C4920C7142A2AC68231DD2AF5723D715A4EFA
8616E5BB1DD3BAB615DCE159D6202519C825E7DDE8C96D836AABD89D461FC496
EAD60FD5D4CC18420A37FF1EE558D3B29E894AE044D2AC616228F52D8653C009
2F0410FB6F128127B8D9D82CCC7D4513672E2DD26890785A5C6D325E20EF0B36
87BF52614076A37EB854F763247051D8EC6EAC821F837228BFC29AE8C860D074
5A23D7A85C405DDFF3B81C8E062777F1F3AD585A525E209FE00A7F8F8DCA4ECF
039C0CD5FF75325417E333D2AF320316B8B9545D64CFE553FEDB888CD10BDC9A
CE12D76AD6E4F96C4702C23D8BF1E1BA1835A0A358BD0E9990D4871162E3D1AF
401E5441B02D336DEFAC73FBE12DFB9D84EDB11E86C86C3FFB00BC4BA7BB3094
9F3A35D1B2EC412E383395F9B9E7C66BCCA21889F035AB9E9FA09CB534581ABD
DF50D5941C63845E8C5B8218F536ECA9329513ECA625CC1C5FC3AFB291A6B75A
593FE1C91A9075D0F61488AD74097708FFE519245236002A7DB3833D06C49BF2
5310BF92FBF44F3E7A6266029253079C6389FFC1BE341999CB5B4E8D4EB36E6D
5ACDBD1319C7F382EA9151002C629CBA1E186E521384A6CD7A9F96FBBB898CD0
1FC5DBA7411C6028A259E0F8B71289891F00003B855EF8AA22A38EF4C07A08C2
5BF499367024A173CD37961C631483AD49961AD12F31C064A3C4B040480E9779
680FA938B0A66156942DECFA5106801DB3C02C5DBD674A6A9ED77E6192A57EA2
0C38D909543AA0D12992A278D0E85698CE94F0B8BE037E7E8831A9DCCCCECA20
6859C278E79066FE37672093146F99DD2B857AE3FFFBB204C6D59AACEE33AACC
E2947E4F61E7EC67CFF6E45024718C42294624C76D311D18E1AB49179578C4E7
6C7CE9DFADD4B088E8E408C4B8D327FFAFD2C1FEB0CB9B0DE51D19B475BAE873
C08B0058CF1D47EEDF8D484C0CCEE1864BBBA2FD41FCC65D38BBC588F9B0E752
712E1DE44C2EB2755E5910637806C51D4153C8D451EEEFD5C01936F03C32E26E
9752568586AF8F68C03E42CD9879E4C129CC139E86E1BDC3F13FAF7100C965D9
FB7B98241577CDBF8AA7BB7B1925AC2931C2D35985FB492EACB9F1C9CBB82AD5
C5134A39347787CA96E2E00A2BD1E12AF914DBE32DD3C1292D965AA7AEE47502
E92866FE4F0F627777BB77AACF3E1EC27CCEE5476B68B4309E2386D55DFE9859
51304701D12D3A66EE38027BF50407F32B289C3CAB6E2FC94DD92BD96A015B21
8CA7FACF38E8A3B33493706076D62F4C400F51798C34A82C72D6E6394CF6FB69
3BCCA0D94EF30F8908CBD20555E6D9FDAF60A2AD2BC2A12E537ED889A56958DE
6CBE72E5C0F6CAA13A0B7AF12BEE42FB000AD4A30E3D227A6BC77360ECF68A23
AB0205CC37786A223D6072E0AA844B996C9EC9203DF2ED2DF29C2AF195DBC923
73AB13BF4DAA942280A326B0C4356B774DAE57D209909B854DB6CC19D867ECB7
2ABC47C0CF0819A3E16636E7B1203F4950D905D6AFB4390B62A3173B522240F0
D3AB76912A18164803E18FB6CB61F2E6250150868450EF0D05108B3460339AEF
AF4FCC58EA396431BD4F95BD5F6DA4C0CCF9D662FC2E59673DEF563AECCABF72
4C09CEEB59FD3D19D6934F2F8E0A5CADD280D5BD782A22718D4EEA2A3A6B933B
546475BCFF91C512F4118D14B1C32C9731E7EA06A6EABC6CE4CFAED0E1A07845
153B6D4F7B38E6E41588884D5B37EDC8DEF2EACD9C3985BA9ACAC69EE195C0E7
4557BC27F73C857AA0BC3D5527C8A3FEE8D1DA33C41DADB5151507CAE41FE79A
3C4A77551CEED3B63BE01F83AD46C7FE256D4615B6069F44ABBE7BB826A02087
31544A0768AF6483293056805F5D584C42B434EAEDBF9B35556713594454C0C9
8194F52CDA96EB7F3DC73C5F2AF5DB65842C9E869D13653D90463B62B3300D33
7724B83B7C8F126D60E250EFD390230B4FA0A1E1664F7E048BA290B99E9B4570
1FE538A01FC23340D984AD9356402E391761E1DC4C45CE37AEBC396E347CA267
8B23A7EBCAF98097861710D733B5510790EB145A3677E9261C6E4CABBDE97CEB
9F2CD07EB064FA0A0D987A9A7B26BF3F435E6A6E914715220850BC7718D004B6
C9C0CD8127466297627726E6324C66A05C4A91D586F50E4D5713146695D43EE0
48F8D1B8687A148E7A9EDB09F70431C21ADDDD3929F07F2A94C43ED9EE20396F
7F52B7D55F13A326BDD2FDA8EAE43C63EB7DE075D54C52905F8AE4D8667C6BC6
F4FF7A2DFE22B2078FEE926489B01C9CA45C9AF2264976B4E608AF72F6214700
773B64AFA05A67845C005021D5C9A1C89E877948CA4CF92F1BB9E3825B748C86
5593BC555BF93AE1D7487E2406AD30A2E8B6A1A1DB86B1EA3457280A5F53D196
FB76D93C37CDD6BD8ABA9FE7F42F5ED277913E3561C72800157712E85E97349F
AC7329FEEEAC57BD6E6C845E2379D4B42D8D19FA6D540368BA9F7D13373E4219
E0EF172C72ADE99EA91ED60447A31981FB0488F5595248620EC344A980A8194E
C8957CF80035654FF7FC1662493942C21F78C831ADAF4E40611505FAEE800596
00E200BFCEADE1C3F126403EE4357A421575209AB28BB131F06294B45300705B
786BC0D0653933C65618B1A7B638AD6B9A54234FE345E1F0CE798DC546A500CF
649F28845A536EB340FEDCC1BDD57D885BC7418CEE60E28EDFF965C6BC894195
23301937AB8A80B7AF640075CBAB8D9725279536814044F459D7245D74E4784A
3F100D3EC7C11241AC397BFB047652E45A34664430B0D22058B102734FDBDE75
85CE444AF8AA92FD9BF87AE18933E026D37C3FF891132008AE2EA28F6657C76F
77B64D605695615950B45A65AFCB41D169D9A5443BD8E8BD8C2F8B9663428E4D
EFB0D6B3FFC6EBCCC59D9C7038383D77A5D1984D00A56E55F7D1542632CA6214
44124327D40786FF2D854B36BC158618BF04C375E90D3A41D87218C21F110ECD
864BED08172CD2FFCE0791549149A066060746C0A627E366A2FD240E5FE5C96C
CC5FA45C4DF64925215CC4DF3BC0DA1077DE75F932A39CAC503F90213BFF2DB6
59ADD1E9993E2508AD48902A8F83B255F557E7B7B72FFD2F1D3C3EE5A5451D2E
3B9918520BFFC4BA7A02A4163FF3616E9EF6F7F654BE49DDBFB7D454F39B9F3C
F351973CBCFDE0DB63A0448E5418E13294FDDB30ED84459CBC0F5C1F111B48BE
8183BE9D6D6DA61B84D00CBC9FAE5924F8209ED49D597B704D200C9DC2E2179D
79AED00A2DFDA9B22773F34FF95EC7C9A04CDB15B160C3E2B285BBCFE14C06C4
901851606E93ACAEB8F43BA217E6E3C8F19577F6E400F8E6B1CDF84B48628FF2
D0C8A9CBE157055A933CAA161CE585FC9B14DF8F5DA10E7729AEFF7D3CF49ADA
55F1F20E70A1F7BA4AB908E015D464E7A2D031ADE763C7CF348CB74221022ADD
E60AAD6DA4DED98468F0609ECB1825F768A855866A622BF786CEFE99F2F6B3FC
0438504A70E941EF0825049188B9D91BF79B1878A09F508D64F36DB5FAB29617
37F054342F72F4B53F0B6A39C53ADE85BF84A78080B91851B57EFD90798F41EF
F7ACBD7BC5D8211D029F7F2F3CAFC78BF4285C78867FD0AB3AD4B3E6ECDADD6A
9A4D759A12CE0F8278EBC04D6E9E697E2258FF6FCE025DFACBDFE1F5BE5D5463
0858764A2FA3E94A524B7416F1BA01932D48E03780803A4FF311D02450127FFE
601E8ED0AD98E9E8AAE92BBF0645F4CE75CB9326BB139B39BC8C210F536D5008
72FE961C629959DF9664FDB0D304F9ECE6A91142D95593EF9FD51E984C6D74DA
8D28B016CC1A385134D4894A8D24FEF1A5819DAD02F2EF65681D04D3C516C7C4
83E68DAEBAA790D4E1CA7C6C03A407D5FEF10EFF3E1E9AAA15B694FC70055363
7B777B16C0F388D47A1F1A328E138F1F254A77EA74EEB186C43A84E7028D48B2
1B559419F73C68949A0EF3072B7DA440DC4BDE1660350C8DD05A8741367BBC53
46CC6516A1D49AEE9A978F9D8C023B736B07B07998F83233ACEE78AA94A7AFEE
8248F4D7F06D2DA61BF04DE909DE2BA95B361CA1BB903EB1793EE392A6880B50
9A85198A9A911EFF5CEA5ACE58B45626A324C8217E924000A0F81F7D46720081
C49801814C663AA152A5C611A52AE12A46588DF13131F9DB8437576633F8132E
8C92B729F0F68C6EE117A1C4940A7282FCFDB6C6FE3EA019456ACEC1AFCAC1AD
0A2E75011FFF78A8A3BAC99C579FFE2500D5ED228B21B72AFEFBBE79CAA09987
9C36143840EC16F3DC73B1F1589DE405A8F821C2EEA5310936F6232750BCAFFC
3E6EEF7860C0DE22AD1776E2EBD213430B2C64FD37106A15A0AA14D4F4C2E1B0
5700D01ED767449870A7920137DAACC85B418E0D98C1FAA728C4A18A407BCDD6
E8CFE7DA6DEB238A87FDC41A647D79A3E56C4B5AB6B5E830AB21E97643C5FF32
96C63A572B75ABED136067A4289AB9C410CB04E5A931F0D876894372B84D03D1
BFA78942742D2EC98BF1E4ED4CDF8DDA7799FF2A8AAF43DE7D2E765F5755F019
E3F198F267A7C3B79F9A6C1DCC26B92DA0F3D2CAE3F2C028C5EF249DA376F0F2
299762C48FFF2247D8C7EBBE4E95D9CF6F8D4D204CC6D61EDFF5C62EFAEE3495
9A0FD994D2DEDE8EBF3F64D0959285F75CBC7621C7DE55DC385B2E2E3B2B5CC3
3DE5CE03DD310D0321EFCC75626861C86A9C0BA0E70C944B3B21C3713F0E2984
04F601199BD3D3486FA04EA2DEE42F8445CCD3B2899C5AA9A6D6CF9E33C0A40F
42BDB7322AD4C900B29DCAA2DDC008A37BF6038729B1E4731A9AF9D2F4373BDA
157D23881A89D1CB7CB8737F3554E2CA08535969A574B37C7F40E1EAC15A3C60
6D52E780840C0035C15845BA1249F0E0C55000B8B6B064F2DAB42033D6945E3F
1905C3D73BEA323E4006AF9419E402D072CA29C8F2462B1946F7361602A5C2BA
C80A944E5E064C4C24C67FD6E8EEE1E95B36F14EF8E8D87B447AE6C7E5FCB47A
1800BA18A9437C91EF10F19C2DCDEE1EDDB0B6F074ED4A5E7E0A4C9634B1B397
7B7B8F2D4BD2E412098F5CDC01F1DAB166058080D42F90499B415AD8AAFD99AF
9DEF84A98E79FE166C833E19549CBE53B0896667EC7C663A19D7C70BB34D043A
08D7C97D31A5E4A8B6259844D28CFF2DD2AE00A8D560F0B72CCC06C78B8ED282
8AE1647D1A5EAE246B07F6181B55CF4720F9B2E5D7D2A7DA8A0E2E6E4342EDD0
3696A026FA7A544A0A845841D729698CCA8E164C0B4F019F2DC10AEC6FD4E6F6
AA09793C8A74DA25396CBC1484DB56560791149CE019EA46E4BF0C3E801B7169
50F5177909393EFE5C9A552F8085FD30EE22B947DE83DF696AB2B5C89375CFDB
FB2133D1DF6708B2674CA576CBC5A2ACF14D47E1891485ADC7D9E4325FC6E215
18DF676C069F9A7C2BA296181318EDCE04F67B65747448224316BB300A2A40C2
C6A97D3C218C3560C8F5722743E02AC4D536DF8A6A8120413945FD120302CEFC
029100F93BC3909664852D66255D2A28B0EA534319E195268F9BAD9249BBB7D2
52F2854291E6187C1796B0B28917D4D328C98BC83BBE06422D1C075D8455E3D5
C3ADA2C37166141E95140BED98C953283F17A3CBD6BA59A1AC2BACF155007FAE
178DCA3133DBF682F6B0F87163888A053067CE458B5DCCC44269FD4E9F6F57FF
406FA5C05684760738D8E1FB2146ECB52DA43DAB8B9ED874697339B1BE26C79D
EA6873264F76A5963F0D97E0C4887DEFAF1A5E5011D9CDDF4C0C30C3901A7E30
F8B3B017B1A663CC9481C0345BA7F963EEB97C9509C9294C93A3DD3D08AF5F2B
733EE468BBF81851EEEE2A4BBA31795F1E4675230706FE8F49C30BECF6B88D1F
1B777F74ACFF2780BFA07D77178F10FC477E27C780AC02449D78B399DA6C5AE5
6D1DFF2174A3FA5068AE889B84F15AA7F802193B8E72415E9CFD2C39F71ECC65
F1300CC255A6DEBF3B5D1905BB1471ED9720D2D9B8D6FEBA86416D3A0BD15E6D
958A3B2600E96567543F89F50887837AC0A4490EE2F1C8DE42D41B7CE4A11A81
6466C949FCB88A21E889779169F0062BD7A3B047CF57992A19A5650C72BCB68E
1151905BB6D4DA2D9ABFF386E03D9C1C9BA3F119A8D3E1CA21561EF4B401489C
B78AE75236970181644F995A049EEEB89040BA9A6E169FEFC0A3D8978F497B02
5DB4E92463291A218737DDDA9649EF7521D2F58EE489629CD84921710489C783
75D596ED91571E01CFA85CD8E67A35FD162D2DB43C9CB32CDAFA0C2270679A62
DD349CB6F6A20E796E715D8B28F8BB1AE6F5715FDCC38757056512214E376791
239E2430549FE1ABE58BC6297B05FD52E99C741A3E0EFCD46DF3B254084F0077
45889B9F3983211CF964849E6D3A70499DA9BBE01D0385CCAA4076092B169861
541C8A91F161095D5433BB06F9A25DEA07FFDB2155DAE8F68533B49D0C265EC2
511211833F8C475D7BDC3959C33035D54C64ADE6A55284AD768E0D17EA1EF887
E36190EB8B513109C189915E0CE863C36799BA1D959BF559D2BA4B19B5F20B5D
4A4856E5013EBDE652B37E911AE0E16B1692E462EF5BD178D748C3134D3F2261
55BC9D1A36F6ED6CA75D22BC2F6FBA41D80517A50A13CDFD74F259CF3D5910AE
8FBAA3BA7832C07B62D35521EC38382AE1C0CDAE6ED037138B3294CD515DB323
465DEA95A929C6784A10FAA37F52B7E3E586EDD0CCD68CCBD3F0A6D550F3F834
6F67ADCABD02AD4126F724976A78C97BB968AC355CC62369484B1011EA7C2B87
226EE6A4C6526AE5DDD9EBF8F07FB5BA6C7412E47B00C8822094FC1EA5009692
BE5E372FC69FE9FD47150A0CC019FB7BF22A3B979D4BB0DCCE1ABBE956F29D19
1748FD5B5DCD6F8A539913727275D19883ADF9E16810EC414C8E742951132203
1F5F170F9E18ADD40887F9AD1CDFD668BCF9D9CA52DB6FEE539898715804BB18
F27BA5F35FF4360739DCFA181DD539CB0412053634A6C3F19DA92D2CBB229D22
5F1D15AD5AF11A5FC6B58FA4A388D48E279B57E7E5D223D544568AF2B322E187
B9ABBFC82C68A2D816A3DCD667B80FB1086D9C1BC732B97A00994F543BFDBC85
67FBE4A28EAFA97A5E2B8912260784322C59D5973CFCC8FAF70B64F7F2883EE9
966CB5F39D46556AB843AF42562A6E5212A2A2F4DD4542E6D53AE3D03F5C9672
AAE928778827329D9896B5AEC83F83B202EAC8DB0E948EE3979D2D9049B4A3B5
CEAB049517C3A95D471EAE9D83E664D7CEF78D51D422E92A5AFF403EB4326591
833D16762162FA67C6ABF86F8827005DEEF5E156FC923885D76F71A2776C6FBA
8AED58221574A57DC4E17F11916E951AC82C2D476ED88BE7999D64A58294CAB8
E1FEBC2FF6ECCABC763FF7C995738B082B32F147200B2C30952A4DD9221DE09A
77B967058F386431CC0C79458A5C88DA8147804B50CD957DE5C2AE9D179F6634
ADAB0927738C97BE7A624D783079049A962AB36369CEC6A306753C7C6E67538B
A28C743EBEF8C82DA027A5B5D895F5319B213778CE74065A5F5E31B386BA7D57
1121B94EB181D2943267C158AC94F834EB78FBA80799BD96AAEDEDF87704921C
CFA16F0DCD60F522EE900DAB2DA0D8AF72117A6F028D2F2BB9ACC2BAC6D0B89A
CA6A27ADDCC8B4958232C4886C0FE5B8644DCEBE684288E8A2782716270BBDCD
97679B93CC5620D4500F7D6E49783E9FC958D3954BB4737612EE41F83CE13E54
945B0A6BCB5633B1D580346D913BACDDB5D897B7E9BAD4CD2EEF04BA151F5AC3
57E3FBFC163DC649E42611B6A2DF1C1DAFF0E732C2CCD40CF07EA3AC247BF27F
9A18E0B8548BF1F4DB2CE7CE111FF1EBC2508F9167221875C14EA3366EB3E54D
34BC73F795F8C1C6457B77ACFF2E3AB8CE7FECFE010FD6A1BB5BE97FA92D9B05
C14D2A32F4B306A511E2A29489CF9A489233EDD7E4AAE9C1F263AE2BD8E0268E
609582DD3E6E7D8DAE03CB25E6664A35015FC9684B7899AB68AD560AE4DE1B9A
FE745FDD97A8AB335A47E3505ABAA85BFDE6C5742D4AC7AB941BB9B797E98B0B
DD9F99F7849466EE08D56AD4741F99ED5FA1982196402619D48016ADCADD70C8
C4850AE8DAF010FAC2791F4AEC2207446CC25C416AF8C5C5D1F58D60E519AAD9
DC63574D9980BD4F64C874B4E7EE3A8A30DB997012FE16D28F724FFC78A26FF5
7D1429AE67240FBC800AF56751FEEEB699048109E4D479130F8EDF79051836E6
6810A1779ADA929D2D4B20D9B83DD0B7A87B7A5AE8C2682A0101A6FBC1F58A2E
4554CCA4F97038266A4F21190000CEA2845E755D2427CD457991E4D6922ACD09
F2EE5497E8C0A748426DB849F4F85BE14AEF84057FAC50C2D77B59FB5724CDF6
82B5847F066986836F1E3B237184F33AB3F0CACFDB8E48E6D1C73261CA420943
F7F3276BCE104716347CBBB915B418578ADCC6AF76A0DF223531C12CDEC349D2
325D6FAAC3C79E3CB52698068476B55C10426C6B620BF1890A7406C369970CF0
045080F87A9B60494D9DF409F39494094E3FA59F45B30D89A9C4746392E8BEB4
2A4BC5D8CCBB281D87BC746A5B1D4AF52095EBD82229A14EAD28B99B7630E159
A681558677A7ADFFCA03CCF78564288A3818DFA227BEB2ACF8559569A120F9BA
B156215EA752F4C5C7CF2AA9D1DBAC25E723FF843C952911FE17FEC2FF13B695
7808BACE017184658A4E7A74EE6C22C2737A810763CA394053042FF745500489
9DFAF0BE19102E6F6111C5CB5DE864B09E919155997990277E415BCB9C0DF234
2B74D66BEB7BD842CD3B502C8190F3891D6F6F77972AA93D404AC1AC5E031554
7AEF626AE6DEFEAB546C39C1D1B0A1D662D1A8930926B130F0FABCC7CBE12408
C1187BB9E2A4F548F81D519BA07114F05B3B2450CAAA20500A09579E655AA899
C7F82D028D1969F2D93631944584C9F62C52334723979EB37F2D7C2F797079F8
CA8CF13C7714C1E79FE90A90550293265931B8691BB3406829CBC9C4AB1C28BD
9DCFAE6D12CF2299CC873B75EE39A8C98F808DC72569D55B9DEEE859A2E5B380
7A89A75015AF81B45F690AFD82865D0FE2D708B722500A04B7592D850174265A
477C0683181F567F7ACCA30D952F14ED40653C899AD3D26C369A7FCF5D251306
2F7DE54A8A162BD9BB26137253BA8B581941E759A7CA7AC6985E3203005A55E0
EC96BEF80AFCC65AF614080C54EA4CC1700E8AC2E1EE384B0F6907DA0232BF51
53AD639F9DF161095D5433BB06F9A25DEA07FFDB2155DAE8F7BA5444654068EE
836036C4EABC2FFFFD635262090F825E77074BFF0EAD54D62A75A2E230F9A250
F75CC7893A23991583124324CC491AA909ADDCD2D038C3174BB48E5F637F2CCB
70A7565FF6BAEA8C53ACA9C12FA2E9049664D1A2F9B4BE5A76DAF30053CE655A
7C984B6BB390F120452EC1976155C3A0DBEA41F63C710152DE098194D5F62341
DDAB32242279D33570B8524ABBE98AAAEDFABE5AF15781397E9BD4BA26E2B896
0CF88D9EB312118BF9A689902F9850B1E071372B6BCF391E58BF827DCBDC8D32
CC4BBD0BD352F1A909AAD94A4659A805B37563CEF895E5B374D8E609A581874C
5532FCE3845ED8FAF19EF2C30F37FF9462BE3D409D7DBD88E7D715BE5C52E83D
193242690CC595AEB08870DB22CB1DCA6A6BB9465E0753AE9F623B097ACB4038
38C3BBD036A434FAC6E77F6A0D089CEE8669ABC257E8C39641F93A108E31A1B9
13217CCB026AA899A70DC8848152E951C0C3F6AD7B57B980E424EEF51667A11F
7CD5CF8FD053E67223B64D740B7B569B81650A8610901321BAFE2BAF5CF065EA
8A940B85D4AE65D2D8F3A71464A4FDA8F96C2E130157F5D625228A46345356B4
4FF1625F8400B9041822D7257822D94CD561937A9FD2E324E8B75BAFA9673F5B
B3CC348AC52F4BD63D487C130D8C59F8E6BC0A3D6A21AA60543F3470BED04610
171CDC99FD86A83C0F3BE298373DA0C6F6DC9B170E3F76F9FE0B6D85C50D9B2C
4875701BA03B7B0429D823202993AC5C83038807C1CFF112498C74EFAD88913E
121C96159D6A3274BD6CDBA81D502F7EC095C31DC7C4F67EAD8E24E61EF1A442
5F9C03A67BF5EC27EA837EDAF9DBBF8E8B189AD8CBE8A19D0787F673A5D5F236
49E5128D7A3E54F783FE3E4B3197B02F2963B2D8A1776493BF6F3379A312867D
42E517D55EA5525EEFF140996A8F889FF4CA8EBEAFF3FCA1C73129BA8699C476
54423EC5DA4EABBFEBE2E86038BEFBC6E76708B9C2A71FF7582ECEFB1020DB96
4A5187A34FC5B15C527528518A0A69FDF26199CA013C954476F93CEB1637F07D
7350140768A454B1016A958E287C384FAFD139AE5B6CEB2B2A3C2AD01BC4E52D
5AEB917ABF650BB3D5BC35987EC5FCFCE10D53193530439E0709E8A48B63747F
4AD6765D32F2CBEE22C16D4CACA1B4361E2D00BB72D248D1B1EB1413F555C1A7
FDBA744D38D1E41E11AFFCB92F3FDFB1654B21E389E243915A9ADA64BA7E2881
A766469195353C289B1484FF5B4ED549298215942C639BA9DBB36E877A80CDB6
1CDFCB46BF058561595BFA4160CA78D58F778F4BE59066EB11D1B0CE003F3087
EB0700462B3D2DA09970365485EE85CDC6A79FA0CB16FB96D41F644421A3E607
AEFBB77F65031C7D4F88FA6E9D24B4F1DD917BF038895224A307D0FDFA4DF8B7
D079FF00A34BE6385EDED6B6C8B62B19753A9CA6983A74B0A8B7E1E2A3624FE3
B5454BDC57BADB9C4585F9C8DE424322D8950FE0FD86164D3AFF6B115F49EA23
555BD5B24E9AFE0E170A07F821BB9737EC3CE9B256E9E2078825E45211B668C1
54E69C554B27E5A8638BA16F74B67F2EE55BABE1C5C947E45AC6D353F40D7925
2A91D158FEE965E6CC8934C3F22276EC2AC0893B0CE768240F0E8C53B11C3F13
225D58AB6FA6BBD0959E04E8A70A9EC8B4FA9ACDAA0ADAD6945993EB1B077772
E285242FE2A2EC8161ECC7E1B777A0075FFD7806E34F4984E059B88F979F58F2
845BC0221CEE232538F0A90642B427E3039F765449471DE913D575CD52BFC0B4
0FBFCA76C69E2DC449961EF578BFB4E95E871B120D0D6F9192441A2774FE4BC7
DA1A9AB3C09DD3C1BD8BE09BFC4BF921E157FE788D22E3EE9C378ECA5A17750A
02CBC3B2C046D59F8B2D39F07F4FD14FEE409E9F3E5B1B3F8CD6F06B2C29A413
AACC6D9DEBD377C526974CF7CDEE5322EA18F3A56D3BF50ABCA4421DF71A7825
561060404CF522D188B5E6B4160405D59F36A6C45426702C139ACE57BA169AF8
6D3D2BE61F6EB7FCF974241211000784960FE6C0814EAE72FD429A00623E1193
BE3AAF0C8F1DB24610BE805A5EA19265939E4B1D6C95127719C5675C00DEABCE
86C6E00D31C812A6B14EF31D30C2D1FAC9520C9D74F869A8F9F887D03CEF1C43
12CF355B98930F34204AF667AD2A0CA06701D54034E4C8989B096BA28470C30F
7C7768A67B861DC373156E7BD05C474EA1791C48EEEE33D8DA1A5752B5222EDD
31FB29894BEEF37E847E77F3A45E3CDF10B4FF453E0A10379F930CE56B8013EF
922C0E5AE1DF625A33EBB5D11F34D0CF3E3E57052444394EE3A8D64F6C9D541A
793A685EE86D408FE8A97C98623BFCD6C751B18ECB48C9B3D0D29504AFC98E62
161FD41554A583A599C090EEE063BA991772ABC62DF5D4B5BADCB1D9C99459D6
72A5EBEDC3BC291010AFD45DC75819545C611732153D5C6216D9C9827FACA11A
D7313AF6498CC028C5DDD276A6E15A8A62236A6BFAFA2F12135B43C2CABC77EF
17A1DD276A3DD4EBA7F63E05333D47EF9997509EC53E3B37D07E571957035CB2
04444BACBA6E067DF349822D0EFFA32E8F39B93E5AECB9A0B0D0BCF427F375EB
C0971BBC495059BB65B7F07F702352D6126CE67363BFF92AA71AEE33A0A86B2B
07A71C350BE8C2EA22040B3C286E5AF22AE5AE52B46607F212493A3471A97B87
D15A348C05F68981FF89291B7865E92DD29F7C6AE7B994C9667137A76761CBA2
453898629FC94763ECD8EF3745793C8DCA5809F932128EE136FA638ABBAB3C98
F9B314A48BBAFF43D3F37E99127CE191B44BAFCDA93B1B59528592227696803D
40FDEB5242D5EF7D4191A215649058F3DB4CF2CB91D31AC6E066C8DE505B3569
51C13DA1E0A6ECA77EB7E78639AB37183300787532540C1333543693B08E585F
80C03608AFDAF2B5DF36E6B026142F3B3DEFAE35293AEA0CD3AA25E6BE3089A0
B79D39AD63CDFE6E29007A5B2C16A529B38A17C5123C9491DE35C9A17DC1C74A
979FCC9E729BAE516F1D5868263BAD2A7776D29F1D6E4B8F925E54EC7FE076C3
3DF2059A56136634163B5133CC130D62441C29AF0338C6685D134CDED1134230
650AD2146ED59A1DCF8DEEE107B671A09141594EBA55FD6CAF9EC766CDCE6176
3AD994D6D85902EC28761D164A984395FE3A4D1E6CBF3C15E23EEA43F2DB4169
BF062D5BC4848B79AFCE7CEC77934BE1574EAFEC90D0AE1BB2C9B327467AA818
E1CC3CC6AD44501CBCFA022D08BA44B97EBA8CA4E4954A6B28D4A498169329B6
C9F046EBD59363D70241D49BC1843053FB290966D8963BC8340265CD3ED9FA15
DC22501A877C67919EF3A14228CADA8D2EA686377A8D401B8BD6D6D62478078E
D168F70B3BE678D1DBE4BBD42EDE2AA10C922603037CA2CC22768262ADCEB6D7
4D99B8C92EAFDF5FBEC95DA1A67CE48AFDC59AA88B72D76124BC8E96A799A11F
E476748852EB6C5702B215F330D0CD46FDECE92D31DB96E1A16CB65AFCA7BA85
2888951ACDC9525AC24B118FCF4C4E5CE4CFE09069A8D083A1396D959709B3E7
D477B4413D14D78ACD76EBE331A1C109FE06984A08F4BA36665A8076FDBBCAF2
F278D892242E7B7C9D02D070FDB99E4BA85E8FE41E740FAA29FE791C8646B165
2540FE129CEFD61F219538D818504230DE67CD9151010153AFEFFADCAB0B3DB0
A22BB35B50C31F5DEDAA18522EC1CE7ED7217973D39FD33A7CDE1227B07D478C
E974ED1D07757BAD09E8BD819F8130BDD19156A7D779FF00A34BE6385ECED72A
FFE0F23D3CC03033A7E78308BF20A8BD360353A7E13321F7E4A2784AAE4E9942
9DB460419A690CCC5EF84A27AD2D9D15B7531AC67791D0E625078838B6ADB235
80142F1705192FC80DA44D30CE4E498AFDFEE90984EEFDD339491998DC0078DB
13B3616206C595D7C9DC53F5CD599B80EE9F3D1F3146BCF506FFE4C1623C2BE4
3EB80491E4D6162482115111A2ABFE104A794F27D9DD87ACF914C3409EFFEC58
2BCF933E7E116CE44A0EE1CCB5602FEE31E80FA58972F52A0AF20788F3FD13E6
4A75F0C886DC8B54891AE9FDB442371B2435F1496429A87D7AA707D5AE2D84C7
CF87A7B309C9CEED7C2E9A9B3EF6AB5BF80EE5093505757ECECE7AD7A991C4B2
9BB0566B5AB7042447DA8A0C6E1A66724592F5BA797961B743074762E2D3AC96
D545B042BEC168C409D6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrschein)
@start /Fa 242[1594 13[{ enclmmathsy ReEncodeFont }1
1594.02 /LMMathSymbols10-Regular rf /Fb 203[993 1[993
50[{}2 1328.35 /wasy10 rf /Fc 201[470 1[470 470 470 470
49[{ enclmrm ReEncodeFont }5 885.568 /LMRoman8-Regular
rf /Fd 168[1138 3[615 32[553 553 2[307 46[{ enclmec ReEncodeFont }5
1106.96 /LMRoman10-Regular rf /Fe 160[909 45[606 606
606 47[{ enclmec ReEncodeFont }4 1212.12 /LMRoman10-Regular
rf /Ff 152[664 664 60[1328 41[{ enclmmathsy ReEncodeFont }3
1328.35 /LMMathSymbols10-Regular rf /Fg 194[1012 1[361
17[506 506 40[{ enclmrm ReEncodeFont }4 1328.35 /LMRoman12-Regular
rf /Fh 133[604 634 739 5[586 10[623 4[553 7[890 2[1228
15[1026 1[963 9[361 59[{ enclmmathit ReEncodeFont }11
1328.35 /LMMathItalic12-Regular rf /Fi 650 2[723 5[650
17[650 105[578 1[686 939 686 723 506 513 506 1[723 650
723 1084 361 686 397 361 723 650 397 578 723 578 723
650 6[795 2[1336 1[975 939 723 957 1[885 1[975 1192 1[1011
668 469 975 1021 849 885 993 1[921 975 1[614 1[1012 1[361
361 650 650 650 650 650 650 650 650 650 650 1[361 434
361 2[506 506 6[361 3[723 723 759 5[650 2[613 1[613 16[{
 enclmec ReEncodeFont }73 1328.35 /LMRoman12-Regular
rf /Fj 3[1196 129[956 2[1554 1[1196 837 849 879 1[1196
1076 1196 1793 598 1136 1[598 1196 1076 658 982 1196
956 1196 1046 9[2223 2[1497 1196 1605 2[1616 1682 2041
1293 1685 1[801 2[1353 1412 1[1554 1530 1625 10[1076
1076 1076 1076 1076 1076 1076 1076 598 717 45[{ enclmec ReEncodeFont }
47 1912.83 /LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fj(WS)717
b(2.1)g(-)g(1)h(Ereignisse)e(-)h(O)-60 b(A)718 b(-)g(BIFIE)p
0 TeXcolorgray -741 4800 a Fi(1.)p 0 TeXcolorgray 651
w(In)433 b(einer)h(Sc)-36 b(hac)g(h)g(tel)432 b(b)36
b(e\034nden)432 b(sic)-36 b(h:)14184 6859 y(3)433 b(rote)h(Kugeln,)
14184 8851 y(20)g(gr\374ne)f(Kugeln)g(und)14184 10843
y(47)h(blaue)f(Kugeln.)921 13020 y(Die)403 b(Kugeln)f(sind)g(\025)g
(abgesehen)g(v)-36 b(on)402 b(ihrer)g(F)-108 b(arb)36
b(e)401 b(\025)i(nic)-36 b(h)g(t)401 b(un)-36 b(tersc)g(heidbar.)401
b(Es)h(w)-36 b(erden)921 15012 y(nac)g(heinander)486
b(3)i(Kugeln)g(nac)-36 b(h)487 b(dem)g(Zufallsprinzip)g(en)-36
b(tnommen,)487 b(w)-36 b(ob)36 b(ei)488 b(diese)g(nac)-36
b(h)921 17003 y(jedem)434 b(Zug)f(wieder)h(zur\374c)-36
b(kgelegt)434 b(w)-36 b(erden.)921 21541 y(Der)360 b(Grundraum)e
(dieses)h(Zufallsexp)36 b(erimen)-36 b(ts)361 b(ist)f(die)f(Menge)h
(aller)h(m\366glic)-36 b(hen)360 b(F)-108 b(arbtri-)921
23533 y(p)36 b(el)352 b(\()p Fh(x)p Fi(;)g Fh(y)48 b
Fi(;)352 b Fh(z)59 b Fi(\).)352 b Fh(x)p Fi(,)g Fh(y)400
b Fi(und)350 b Fh(z)411 b Fi(nehmen)351 b(dab)36 b(ei)351
b(die)h(Buc)-36 b(hstab)36 b(en)350 b Fh(r)36 b Fi(,)353
b Fh(g)399 b Fi(o)36 b(der)351 b Fh(b)h Fi(\025)g(en)-36
b(tsprec)g(hend)921 25525 y(der)393 b(F)-108 b(arb)36
b(e)392 b(der)h(Kugeln)g(\025)g(an.)h(F)-27 b(\374r)392
b(das)i(Ereignis)f Fh(E)471 b Fi(gilt:)394 b(Es)f(w)-36
b(erden)393 b(k)-36 b(eine)393 b(blauen)g(Ku-)921 27516
y(geln)434 b(gezogen.)g(Gib)f(alle)i(Elemen)-36 b(te)433
b(des)h(Ereignisses)g Fh(E)511 b Fi(an!)921 32054 y Fh(E)447
b Fg(=)368 b Ff(f)p 4375 32054 40857 45 v 40857 w(g)p
1 0 0 TeXcolorrgb 921 34599 a Fh(E)447 b Fg(=)368 b Ff(f)p
Fg(\()p Fh(r)-36 b(;)221 b(r)-36 b(;)221 b(r)36 b Fg(\);)221
b(\()p Fh(r)-36 b(;)221 b(r)-36 b(;)221 b(g)48 b Fg(\);)221
b(\()p Fh(r)-36 b(;)221 b(g)48 b(;)221 b(r)36 b Fg(\);)221
b(\()p Fh(g)48 b(;)221 b(r)-36 b(;)221 b(r)36 b Fg(\);)221
b(\()p Fh(g)48 b(;)221 b(g)48 b(;)221 b(r)36 b Fg(\);)221
b(\()p Fh(g)48 b(;)221 b(r)-36 b(;)221 b(g)48 b Fg(\);)221
b(\()p Fh(r)-36 b(;)221 b(g)48 b(;)221 b(g)48 b Fg(\);)221
b(\()p Fh(g)48 b(;)221 b(g)48 b(;)221 b(g)48 b Fg(\))p
Ff(g)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 4800 a Fe(___/1)p 1 0 0 TeXcolorrgb 47905 6792
a Fd(WS)369 b(2.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 38407 54804 45 v 0 TeXcolorgray
24746 81281 a Fi(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fj(WS)717 b(2.1)g(-)g(2)h(Sc)-60
b(h)g(\374lerinnen)g(b)60 b(efragung)712 b(-)718 b(MC)g(-)f(BIFIE)p
0 TeXcolorgray -741 4800 a Fi(2.)p 0 TeXcolorgray 651
w(In)441 b(einer)g(Sc)-36 b(h)g(ule)441 b(wird)g(un)-36
b(ter)440 b(den)h(M\344dc)-36 b(hen)440 b(eine)i(Umfrage)g(durc)-36
b(hgef\374hrt.)440 b(Dazu)i(w)-36 b(er-)921 6792 y(den)379
b(pro)h(Klasse)h(zw)-36 b(ei)381 b(Sc)-36 b(h)g(\374lerinnen)379
b(zuf\344llig)i(f\374r)f(ein)h(In)-36 b(terview)380 b(ausgew)-36
b(\344hlt.)382 b(Ev)-72 b(a)380 b(und)921 8784 y(Sonja)442
b(gehen)f(in)g(die)h(1A.)g(F)-27 b(\374r)441 b(das)g(Ereignis)h
Fh(E)25057 8983 y Fc(1)26024 8784 y Fi(gilt:)h(Ev)-72
b(a)442 b(und)e(Sonja)i(w)-36 b(erden)441 b(f\374r)g(das)921
10776 y(In)-36 b(terview)434 b(ausgew)-36 b(\344hlt.)855
15314 y(W)-108 b(elc)-36 b(he)397 b(der)h(nac)-36 b(hstehenden)396
b(A)-36 b(ussagen)397 b(b)36 b(esc)-36 b(hreibt)397 b(das)h
(Gegenereignis)g Fh(E)39483 15513 y Fc(2)40009 15314
y Fi(?)g(\(Das)g(Ge-)921 17305 y(genereignis)361 b Fh(E)8466
17504 y Fc(2)9352 17305 y Fi(en)-36 b(th\344lt)360 b(diejenigen)h
(Elemen)-36 b(te)360 b(des)g(Grundraums,)f(die)h(nic)-36
b(h)g(t)360 b(Elemen)-36 b(te)887 19297 y(v)g(on)434
b Fh(E)4307 19496 y Fc(1)5266 19297 y Fi(sind.\))f(Kreuze)h(die)f
(zutre\033ende)f(A)-36 b(ussage)434 b(an.)p 5516 20338
35352 45 v 5516 23401 45 3064 v 6225 22198 a(Nur)f(Ev)-72
b(a)434 b(wird)f(ausgew)-36 b(\344hlt.)p 38458 23401
V 40823 23401 V 5516 23445 35352 45 v 5516 26508 45 3064
v 6225 25305 a(Keines)433 b(der)g(b)36 b(eiden)433 b(M\344dc)-36
b(hen)433 b(wird)h(ausgew)-36 b(\344hlt.)p 38458 26508
V 40823 26508 V 5516 26553 35352 45 v 5516 29616 45 3064
v 6225 28413 a(Mindestens)432 b(eines)i(der)f(b)36 b(eiden)433
b(M\344dc)-36 b(hen)432 b(wird)i(ausgew)-36 b(\344hlt.)p
38458 29616 V 40823 29616 V 5516 29660 35352 45 v 5516
32723 45 3064 v 6225 31520 a(Nur)433 b(Sonja)g(wird)h(ausgew)-36
b(\344hlt.)p 38458 32723 V 40823 32723 V 5516 32767 35352
45 v 5516 35831 45 3064 v 6225 34627 a(H\366)36 b(c)-36
b(hstens)433 b(eines)g(der)g(b)36 b(eiden)433 b(M\344dc)-36
b(hen)433 b(wird)h(ausgew)-36 b(\344hlt.)p 38458 35831
V 1 0 0 TeXcolorrgb 39167 34631 a Fb(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 40823 35831 V 5516 35875
35352 45 v 5516 38938 45 3064 v 6225 37735 a Fi(Genau)432
b(eines)i(der)f(b)36 b(eiden)433 b(M\344dc)-36 b(hen)432
b(wird)i(ausgew)-36 b(\344hlt.)p 38458 38938 V 40823
38938 V 5516 38982 35352 45 v 47992 4800 a Fe(___/1)p
1 0 0 TeXcolorrgb 47905 6792 a Fd(WS)369 b(2.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 43010
54804 45 v 0 TeXcolorgray 24746 81281 a Fi(2)p 0 TeXcolorgray
eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fj(WS)942 b(2.1)g(-)h(3)f(Spielw\374rfel)e(-)
j(O)-60 b(A)942 b(-)h(BIFIE)g(-)g(K)-60 b(omp)60 b(etenzc)-60
b(hec)g(k)-2385 4515 y(2016)p 0 TeXcolorgray -741 7823
a Fi(3.)p 0 TeXcolorgray 651 w(Zw)-36 b(ei)428 b(un)-36
b(tersc)g(heidbare,)426 b(faire)i(Spielw\374rfel)g(mit)f(den)g(A)-36
b(ugenzahlen)427 b(1,2,3,4,5,6)k(w)-36 b(erden)921 9815
y(gew)g(orfen)444 b(und)f(die)g(A)-36 b(ugensumme)443
b(wird)g(ermittelt.)h(\(Ein)f(W)-36 b(\374rfel)444 b(ist)f
(\022fair\020,)i(w)-36 b(enn)443 b(die)855 11806 y(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit,)421 b(nac)-36 b(h)420
b(einem)h(W)-108 b(urf)420 b(nac)-36 b(h)420 b(ob)36
b(en)421 b(zu)f(zeigen,)i(f\374r)e(alle)i(sec)-36 b(hs)421
b(Seiten-)921 13798 y(\035\344c)-36 b(hen)433 b(gleic)-36
b(h)434 b(gro\377)g(ist.\))887 16344 y(Jemand)d(b)36
b(ehauptet,)431 b(dass)h(die)f(Ereignisse)h(\022A)-36
b(ugensumme)431 b(5\020)h(und)f(\022A)-36 b(ugensumme)431
b(9\020)921 18336 y(gleic)-36 b(h)g(w)g(ahrsc)g(heinlic)g(h)538
b(sind.)h(Gib)f(an,)g(ob)g(es)h(sic)-36 b(h)538 b(hierb)36
b(ei)538 b(um)g(eine)g(w)-36 b(ahre)538 b(o)36 b(der)538
b(eine)921 20328 y(falsc)-36 b(he)434 b(A)-36 b(ussage)434
b(handelt,)f(und)g(b)36 b(egr\374nde)432 b(deine)h(En)-36
b(tsc)g(heidung.)p 1 0 0 TeXcolorrgb 921 24865 a(Die)434
b(A)-36 b(ussage)434 b(ist)g(w)-36 b(ahr.)434 b(M\366glic)-36
b(he)434 b(Begr\374ndung:)873 26857 y(A)-36 b(ugensumme)432
b(5:)j(\(1;4\),\(2;3\),\(3;2\),\(4;1\))p Ff(\))i Fi(4)d(M\366glic)-36
b(hk)g(eiten)873 28849 y(A)g(ugensumme)432 b(9:)j
(\(3;6\),\(4;5\),\(5;4\),\(6;3\))p Ff(\))i Fi(4)d(M\366glic)-36
b(hk)g(eiten)921 30841 y(P\(\022A)g(ugensumme)433 b(5\020\)=)14102
30318 y Fc(4)p 13867 30531 941 45 v 13867 31299 a(36)921
32833 y Fi(P\(\022A)-36 b(ugensumme)433 b(9\020\)=)14102
32310 y Fc(4)p 13867 32523 V 13867 33291 a(36)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7823
a Fe(___/1)p 1 0 0 TeXcolorrgb 47905 9815 a Fd(WS)369
b(2.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 36766 54804 45 v 0 TeXcolorgray 24746 81281 a Fi(3)p
0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fj(WS)703 b(2.1)g(-)g(4)h(Rote)f(und)f(blaue)
g(Kugeln)g(-)h(L)-179 b(T)703 b(-)g(Matura)g(2014/15)-2617
4622 y(-)718 b(Neb)60 b(en)-60 b(termin)716 b(1)p 0 TeXcolorgray
-741 7929 a Fi(4.)p 0 TeXcolorgray 651 w(In)324 b(einem)g(Beh\344lter)h
(b)36 b(e\034nden)322 b(sic)-36 b(h)324 b(15)h(rote)f(Kugeln)h(und)e
(18)i(blaue)f(Kugeln.)h(Die)g(Kugeln)921 9921 y(sind)387
b(bis)g(auf)h(ihre)f(F)-108 b(arb)36 b(e)387 b(nic)-36
b(h)g(t)386 b(un)-36 b(tersc)g(heidbar.)386 b(Es)h(sollen)h(n)-36
b(un)386 b(in)h(einem)h(Zufallsexp)36 b(e-)921 11913
y(rimen)-36 b(t)497 b(zw)-36 b(ei)498 b(Kugeln)f(nac)-36
b(heinander)496 b(gezogen)i(w)-36 b(erden,)498 b(w)-36
b(ob)36 b(ei)498 b(die)f(erste)g(Kugel)h(nac)-36 b(h)921
13905 y(dem)621 b(Ziehen)f(nic)-36 b(h)g(t)621 b(zur\374c)-36
b(kgelegt)621 b(wird)h(und)e(es)h(auf)h(die)f(Reihenfolge)h(der)f(Zieh)
-36 b(ung)921 15897 y(ank)g(omm)g(t.)921 20434 y(Die)434
b(Buc)-36 b(hstab)36 b(en)433 b Fh(r)470 b Fi(und)432
b Fh(b)h Fi(hab)36 b(en)433 b(folgende)i(Bedeutung:)p
0 TeXcolorgray 342 23533 a Fh(r)470 b Fi(.)217 b(.)g(.)p
0 TeXcolorgray 867 w(das)434 b(Ziehen)f(einer)g(roten)h(Kugel)p
0 TeXcolorgray 411 26078 a Fh(b)g Fi(.)217 b(.)g(.)p
0 TeXcolorgray 867 w(das)434 b(Ziehen)f(einer)g(blauen)h(Kugel)921
29177 y(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36
b(k)g(en)358 b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357
b(Ankreuzen)g(der)h(jew)-36 b(eils)360 b(ric)-36 b(h)g(tigen)921
31169 y(Satzteile)434 b(so,)g(dass)g(eine)f(mathematisc)-36
b(h)434 b(k)-36 b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36
b(tsteh)g(t!)921 34659 y(Ein)705 b(Grundraum)e Fh(G)i
Fi(f\374r)f(dieses)h(Zufallsexp)36 b(erimen)-36 b(t)706
b(lautet)p 34064 34659 3150 45 v 37685 34611 a(1)37213
34659 y Fa(\015)p 38807 34659 V 3855 w Fi(,)f(und)p 921
36651 V 4542 36603 a(2)4071 36651 y Fa(\015)p 5665 36651
V 3583 w Fi(ist)433 b(ein)h(Ereignis)p 0 TeXcolorgray
0 TeXcolorgray 2484 38023 18226 45 v 2484 41108 45 3085
v 11272 39805 a(1)10800 39853 y Fa(\015)p 20666 41108
V 2484 41152 18226 45 v 2484 44485 45 3334 v 3193 43208
a Fh(G)369 b Fg(=)f Ff(f)p Fh(r)-36 b(;)221 b(b)p Ff(g)p
18301 44485 V 19009 43151 a Fb(2)p 20666 44485 V 2484
44529 18226 45 v 2484 47862 45 3334 v 3193 46585 a Fh(G)369
b Fg(=)f Ff(f)p Fg(\()p Fh(r)-36 b(;)221 b(r)36 b Fg(\))p
Fh(;)221 b Fg(\()p Fh(r)-36 b(;)221 b(b)p Fg(\))p Fh(;)g
Fg(\()p Fh(b;)g(b)p Fg(\))p Ff(g)p 18301 47862 V 19009
46528 a Fb(2)p 20666 47862 V 2484 47907 18226 45 v 2484
53028 45 5122 v 3193 49759 a Fh(G)12406 b Fg(=)3193 51751
y Ff(f)p Fg(\()p Fh(r)-36 b(;)221 b(r)36 b Fg(\))p Fh(;)221
b Fg(\()p Fh(r)-36 b(;)221 b(b)p Fg(\))p Fh(;)g Fg(\()p
Fh(b;)g(r)36 b Fg(\))p Fh(;)221 b Fg(\()p Fh(b;)g(b)p
Fg(\))p Ff(g)p 18301 53028 V 1 0 0 TeXcolorrgb 19009
50799 a Fb(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 20666 53028 V 2484 53072 18226 45 v 0 TeXcolorgray
0 TeXcolorgray 25207 38134 20330 45 v 25207 41218 45
3085 v 35047 39916 a Fi(2)34575 39964 y Fa(\015)p 45492
41218 V 25207 41263 20330 45 v 25207 48310 45 7047 v
25916 43123 a Fi(die)748 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)748
b(dass)25916 45115 y(genau)433 b(eine)h(blaue)f(Kugel)i(gezo-)25916
47106 y(gen)e(wird,)p 43127 48310 V 43835 45118 a Fb(2)p
45492 48310 V 25207 48354 20330 45 v 25207 53409 45 5056
v 25916 50214 a Fi(jede)h(T)-108 b(eilmenge)434 b(des)f(Grund-)25916
52206 y(raumes)p 43127 53409 V 1 0 0 TeXcolorrgb 43835
51214 a Fb(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45492 53409 V 25207 53453 20330 45 v 25207
56712 45 3260 v 25916 55509 a Fh(b)p 43127 56712 V 43835
55415 a Fb(2)p 45492 56712 V 25207 56757 20330 45 v 47992
7929 a Fe(___/1)p 1 0 0 TeXcolorrgb 47905 9921 a Fd(WS)369
b(2.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 60785 54804 45 v 0 TeXcolorgray 24746 81281 a Fi(4)p
0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fj(WS)717 b(2.1)g(-)g(5)h(M\374nzwurf)e(-)i
(O)-60 b(A)717 b(-)h(Matura)f(NT)g(2)h(15/16)p 0 TeXcolorgray
-741 4907 a Fi(5.)p 0 TeXcolorgray 651 w(Bei)400 b(einem)g(Zufallsv)-36
b(ersuc)g(h)401 b(wird)f(eine)g(M\374nze,)g(die)g(auf)g(einer)g(Seite)g
(eine)g(Zahl)g(und)f(auf)921 6899 y(der)433 b(anderen)g(Seite)g(ein)h
(W)-108 b(app)36 b(en)432 b(zeigt,)j(zw)-36 b(eimal)435
b(gew)-36 b(orfen.)921 11436 y(Gib)366 b(alle)h(m\366glic)-36
b(hen)366 b(A)-36 b(usf\344lle)367 b(\(A)-36 b(usg\344nge\))366
b(dieses)h(Zufallsv)-36 b(ersuc)g(hs)366 b(an!)h(W)-108
b(app)36 b(en)365 b(kann)921 13428 y(dab)36 b(ei)434
b(mit)f Fh(W)181 b Fi(,)434 b(Zahl)f(mit)h Fh(Z)529 b
Fi(abgek\374rzt)434 b(w)-36 b(erden.)p 1 0 0 TeXcolorrgb
921 17965 a(m\366glic)g(he)434 b(A)-36 b(usf\344lle)435
b(\(A)-36 b(usg\344nge\):)434 b Ff(f)p Fg(\()p Fh(W)-36
b(;)221 b(W)181 b Fg(\))p Fh(;)221 b Fg(\()p Fh(W)-36
b(;)221 b(Z)95 b Fg(\))p Fh(;)221 b Fg(\()p Fh(Z)23 b(;)221
b(W)181 b Fg(\))p Fh(;)221 b Fg(\()p Fh(Z)23 b(;)221
b(Z)95 b Fg(\))p Ff(g)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47901 4907 a Fe(___/0)p 1 0 0 TeXcolorrgb
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
21772 54804 45 v 0 TeXcolorgray 24746 81281 a Fi(5)p
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
