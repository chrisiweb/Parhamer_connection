%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS 3.3/WS 3.3 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:55:28 2017
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ wasy10 LMRoman10-Regular LMMathSymbols10-Regular
%%+ LMMathExtension10-Regular LMRoman8-Regular LMMathItalic8-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS 3.3/WS 3.3 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0855
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3D6F6BDD983146333DDA29DB81DA54F44DCF5364857E
A20DB59006F78BA077D29ABE7A537D2358B1DC13AE97ED90F7D1AE27A1CB55C2
F534E2B546BA5531AE88840CAA741A57ED1F4587A72E74AFA15F15C69046ADB1
B3B6C392AFD856716F96B850D6FF61144F6A9E51CC1B8A86A35087D4A3A37081
D7529F94493EB4739C267B8C54B3A1FC2146237C1D110D4A10112D496250647F
37A36F59299DD9529CD003AD4E0847689E519FBB2B7796420D8EEF6ECA04DF85
390E261B43A555BA97B9F30C1CDDF679DEDA691E30773C286B1BA80CF1950B4D
B1835826E276E14DD0C69117C6D60A211DA5728E51F1E2D512647277B9CE8FB1
6D00896BB88B0A87F1898C0405B118619CB1786D4976E95D7F665952CD09A9DB
9B12A5D759909821BB1FAA64201B5D9092328325E5EDAEB91BAF1279E7930E73
FDE400C7E7A7EDAA030063C3D390A2674066DBAD1A9C3C1FFEF085A0B5E1375A
90141467A712075A718616EB0105CA91B3F4BF9007CD86D2AA045ED8F5B22144
D82C90F5D0F6EF0542C7D93C5D9FD9416A2662FCCFEE48E79225D0DEB8C81315
39566D7BC863F004227E862427E6DBDDD7768DB2F8314DFFB54617007C1984D4
43CB98799B2FF97319F3EC1C7389F3C9A5D9E476DA325EF01591BD34C53EEDB7
645170A6A6B6C1A85D0058926158D48A88C4EE4945CBDCBE85A87534BE299D79
E572DCE45E3329049548D4BCE4CCABD0634905E500C4CC7F09180759C51623DF
C9BA78264070E726D001C2DB30313E8BFF9DAEA9D9B474626C70B16A053495F6
00A42948F1F3BB2DB772E57DEBE00CE4F99647DD3273CC64467F5514ACE043D4
B7711E976BC9C60C8E1ADD22D80F626020656D5E8EA1872BC169F92A89067B9B
D98A4B83A2FCCAFDCC869DD916C5CBF812D3F52152CE090D90C29776BF27FADE
D563AF292C8F30EC9F6E065826D34C38C598D8626BFED7CB672F132E065B9194
F80315901081B98FF3AC06F5C24B6A33DC92C72A47BDF624179D8827CA4664F9
6F7003D7D0BD146203ABF25F89455E6E32D6DDA5BB840CFE9AAEC1BF786018D6
946A358899374F4A876C701772FAF0BE6B04F3F6D10EF7284A186924F1D3FE67
2C2B44FE74155C02740D38A9B9FE58D191A41E8F41CFC413F5D1BCF359E179EB
5C6192E90B3AB1AD69284E3208628285C01C42977C70487461D63C461C8D84EF
4C57B54E41BB2F7881FDAB70328843A11925CEB017B47C1D40C2D98F33FF6717
83E443CC19FFDDBA30669F8630FB5570E5EF1696DAB38EB456922218AF65F724
5EB534F9910539863554BA629A72FB0EC572A226FF7F05049328655BD59EE848
51B7B7D32F243A4DCCABCD3C54C63FD1BAF03B5F27FC5A30D82BB8BBAF726D08
65D6B7B5AE0AABE3DBD2708E6A3F3E70D7D055CAA611919766257B9DE3E4D9B4
E6C02690A866CDF71E7118BF11B3083EA41540D17F5CDAA048273C91BBC29B62
664A90C0E8763FCD4F0AC8D092A88918F8CE37F2865AE52E014838597C34EAF6
0E8263A910B7606F7B56843025BAEF3E08E73FAE0D3BC10AB55EFBF4B3730E11
0AB77B9511CC05B1E02B8C0240E2611DC6628E281A055E641EC973D8C542B802
8C8900EDB6D78F340785011D27E89DA6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFBDC3E7DD12824E825DE2C3E4B7FE610A411B6B
51FAA564DA0F711CAC68655D96C6853F36C3384E76924D0A6D9876A2D3764694
E07F4B4D5809DA6EC46F04E5FFEACBC97E5C6BFEE05385D9D9B472E462A2D590
E24C9302959895287ECD381D534A63B80CAEACF1E3EA8C7A9EC5C3EBD310E2C9
A73FE77410A768936D3C7E5C5D26F96350C9B6F79B12C6005B9F8957032A6D45
BD084D6678957DF6391153F939FF466DAA91839D038ED7CBBE6993BB7455CB37
4C444AA89CC62667BD404A07E1BA0B051AD3EE2DEB715530D2772F2E58A2BB78
B981277AD8FB61E2F1732E7063BE124399D38B97B84AC32A989C4FC0D582F234
85DD79C77BD0256D6B5B7FCFA5E7F8BDC7A646A18104021E7720C1A97D522C07
B0F972DB969DB772F9ACF6167862A987D153AEFF6650578358B43FB42332CC00
A2B6089A597FDE4442B8D52EA04CF93C1273187006B2867C7E588D43E047676E
81744DE1D89FA28A6CC2089CF8F50B0E32C1A85E082F459BCDC70B85BE9B1428
BDF66FFC0D419508D28368D77C3D7439705BFDF99A709699A599568E012C094D
44A6D953333432C09A62F2A89E84964B2B68602D92E9EFF00404DFEFD0746272
18388B1327B6AF6AECFA67902D0150ED4C8A8CF6D526BDEE9E8866C5568DD10A
B87853A3972207591955B78C0CD5DECDD2FAF1925C3BE1C67CDEED86E4FB350E
EE8077AB14A3DDFA2F11A0D89DF6A78B42A5A3217EE0DAD89D3DFC2D420C6A12
D63EE1C3615959DF14405AD0EF2B7E4FB2E203561018F0CE774BB5B95E50C128
1EFFF3160CF44200277668750081601D8C2968A3E83FC00043F27F1E73B67016
A5054B2638B66C68DA69B1C281E248D4D9F8809DDD97C73BE8C85DA2A15CA473
EF99F82C6640486167706041DB02AB13D7E149FA176EE68606F0B35312506C02
F1A6DC6E7494F86F8C3939211D916712A414BB10FACF680D142BF88C8C80C42C
920F0A78A29D8B8920635C92BCC288FEFC0DEC4AB6F9E931F6AC379F1D0261DA
C9089C1328B900D04C4B99653EC00AF2D8AE8F680D68CCC2B96879AC6792E812
426A33CD78A844120B5B65B3F1AA329748EB929258416A34D1F24F412C71012C
AC896063C7418B4BCFC127A9AB30BC2073A5FBF9F5846C7E91E4D6922ACD09F2
EE5497E8C0A748426DBC8F804FE10153467FC0AFC951B645E30ECCABC655E1C0
DB381F84343DDB171D5983A2038DCF160C2BB20CC0E971875E956600DB7D9BC9
E806B2B0538F96B289D5284A86FC797DCC1F99EE10677B75E6F729E7E3BB5056
1C360675567594570C1D1E194D5602761EF93BBC6970DFB390317A8F1B0971C8
4FBB39F5FB23526B354EE97CCC237877477FD29AE816D48E175C71E270E859C7
E2B55BE2EB8B973B283C9FE104E141F00F84DE020721BF4377397E895783A4CA
85076E85A632B05673D416B3A6CEA55846C3FD406C74CE152AE8FD18177F8233
64608FDEC37438A55BD0F593DF24CA8DF33B900167C9F8E56A53FE2327EF9005
FBD4DB3D234D9B9E1DDF899EE8C2CD56668F756DC5B9CF1C87BB9F6E0B0ACCF1
CA0A25AB10E00E4D5A8D0C3299FD37779FF1648CDC1F1D78B25DC8D6C61A1079
A1FE96E5E8624DBDF2EB65869969F265341938B2C7D6B979342D9506B027A1E5
D547A55BE0E8FD19AA6BD92071044714CF0B915E39263AA9F03B21C1F45C87C2
CCB12B5E0C0680F1E0C94AB5509CD19279CE7A23C71963F36FEC02B2AE8F8925
9944B1272B1259D760D7B237396B07B0CF6381897896D2B93BE39D97811CFE6E
B8A94779F5759C71DB7CF2DE1362670ADE582BCF431A0D1410726F959C04D04E
C6CCC6D5C4515070E4EB6AD122BDB27C68931A0C4C0DDF292C1402A990D44D61
AC1A8AE54897E8B9F0A0E73300686A2EEA2E5002D7CC45218F41975F0CF5FE00
48F6752008074D6FBCC56FAB153FD948C3B94CB7CD358CABBC7761458D882F52
8A9AFBCAF5D526CBFEA960FF97CF1B59C7003CEA2AA8AFCEAEA2E477EFB20457
C18B596A7ABC182CB4A942179E9140E054811B3EA3F5D23B9220A659E44717F7
9E5375BB9687E17C209AD143B9F6F72F92B61A9158EEB5344077AFCCCD82CFC2
89D46552563B36DA5DA90125C2E0322AD914573DD12540F02C2D847365CB12CF
D734A287BC52FA90B551817128AC48A4BC9A1CF92080D82DE4420F29C0EC1F76
DA6C55089AF3D95E3FDF1544E38F98AAF6C37CB0DBE9499869CEF394B2894B2E
66800B98949BD58AC4700364A93844E9033253617CFF3D6CBEE77CF13B4BE73E
9CC292F791A05395D0C123BA1476C89AE2557822590FF52D27A6D375B3DDFA66
B001427BF5BE8D3F1C7C052B488381C7C824DACDAC6B7AC4296BCDC0A475363B
AE2998C2FD754EB49D60BC6A5FAE1F8F869D7AF5E4EF1989FD377E9C2B4EA3DB
BEAA7A63B0279661F69F181917D92AA63ED502B7599EC236692775A06F0ED1FA
7A4A3BAB2D925212784EF566497DF949AC722C37B8B4C641F60228C1EE2ECE26
1A420B8AEDFA916C7D86A4C254E91D1B59F65A54CE36C42B22AC76ECE7686E4E
8DEB9AFB578C391D52AECE76F5BBB786C196CCCAF13DD4617C949B478ED0DAFA
D0958C9C7A80E665F2C00F6E192B9171ABE401EDB52C881153E8228D33EFB93F
057E5969CA5CDE681DBB192993B553048C58C55F0E420DCEADAEABAD8BDF3E92
2245BAA2CF9289D68DEF6706FF966643BC8471D2E993F5295713F3B9EB652878
D2D7E2C105B5D3394AFC2E2FC73EC0D8693A9561AD2C3F90E2CE6E3396AB329C
FA81A3FD438C5C31BCF78C0D6C2613AF940DB371D59A05EE147D86770A80B4D8
2B8161C52648F8C9E46F213B789736BF2399BCA90DC4C8D4602380D4C2A4DA2E
E6FAE5816F72AE15C467502382E75C75F74359803685F804B0C6D4FD5A99B24E
51B84AA3D1884782404A3D96F0FBB300F40FE9A5F179F771E24ABDD919725531
00271EE66AD219A881799DEA617DF1DCE20C6EF4140E2744364834CE13CA9FEC
BA2DFBD2342F755A2F3209D4F9DFFB69F2296D9F724349DB43BE9062569853B2
DE7BF1763002356DAA4A2A0BEDB706E4B172BE416FEA0D359CBE04C83230BF3F
1AC0969FAABE3DB431A3146628D371C2D158A1BA65C8D2D47CEEC2BE8B1AD14D
60862AAB2F2AA9A9B7F03F530456D6A60AAEA281E4E34420D1FDC40E678BC42F
B3835475F09A823A30386ADBD8ADDD1496335FEC30F5E9E16AC846CF25DA9F9B
2E3719BE0D9630D6F1F89DC240E5DD1E46D4211D8C1C0355AD8F4D4EEC9C3577
250C89DF8C7471DB4BDAD79382F68E3993AD0B93A7C03D1020B9FE9F780D0657
0DE748D8715FB8582B4EE087B90ADAD7EDDAD3FCF94E0179B57D2AC8E9DDC61C
0E9BEE7AD5DD407E9C2383CB2CC29C5B7F2DDD6DD5104E04E810338E7B485BDA
3E64BD660253A72E63479DBFE0FB8041A873898332BB6D8DD89AB8A2F81D9A9D
3BAA712A0A56D9636B62813878BBA1BB7DF11D303554BA06AE21EE1677A753EF
0DD2FE9203D67C1EB45580B80C4B1937469032C36588D4CE55A36FD3A7F768D2
9951166E7842CC737495F33CA4157D49D596FA6A922B662575F23B53B7C6B245
AFE90258E25EB3C8A312666BBF8BBFBD24D39377A7E86AC4896D475943D27ED2
25F361BC0F8629F97EA3E4A864AC9AFAB7BCF6F1C133040301738DFFC5812525
0C5C9AFBB023621F1848133C2DD1CD525F4943E97917C37315BF6F9529B5E942
537CD9A3C06DA77812BB4EE9929C9CEE82C768AF26D5808F63FA1F4464E1DB49
23E44B129933E3FA013282FE98BEC0B52B6A1FB25A49DD8BA2F82A8A62897FDC
44ED486A1E7DF2DF921F2B1BE5FDB120D8B781C0D5CAA0AADEBEA9D1A4C30F51
E9B375D24D089EEF4FE7677F6514AEED350F45EB766C4ADF2EBF18F155CF5379
EB2527420F56A44CB2F2A844BD9E19A6ACA8DC227D0589E090E4A7C81FBAA0F5
1DC83ADF47D5DD8DA55B1E8E3D1CE32638D350F86FA328363D1B4FE236DDDD5D
32798518DB5882B72F81DB73914A1F2AF8786E14A6C63794E9B04C4BDA9AE6DB
8755B830F8D53490BFAF28A556C3B93B7D2E516520C721520580C863AEB9F26D
0EB299996B6BB036C8793C7AE960AC0175D62683C5C6FB8B9C88C520BF2A05C0
8668FCBB02FD86B02982BFBCD90A5B6691927D9E501D27DAD12D2932F016DCE0
3DB940B2714EC9F3125843C10F6B022695445B95A6A7487485A275D201586BF3
B46FD6A73D31AF122A7D4310010C92022EC71B19FEFA9CF7A9F685F2DF496AE2
39D43135E3E16080662C2AFDF226137440909566CB411F6EAD662D6BD1220B54
A327C00FF3133C11A51A67803C3BD94230C074F4F6966CDB2035BA06E80AA6BE
0A001415F381236D5875F9141141AFF247D80A42CEB4EC7A6BDE7A10B32CE40D
370CF8A166071BE79D45CFE4070F971EBE827C4A232E4B4AA5AB0E1FE82E76C8
512482444485E8AD4CE8585C321A380FECE3EA452620DD0BA89EFA4209A0D058
AA805BA6DC6C188D10A28BC48676E4777D65051CF351563BABA845EFBF339018
ABFE4B14AE88CF0CD0246E250D2917B88D3CC0FD2749372883A262140C4E6714
F5D76BB4926E57D3CB97E342F78AFDC691400DCA846F44FC45B14167E23D4C54
A325CDF9C7444F649C145CE13B21A2ACCA56BA383D0E1CAD73425414B54116E3
10D38F7CE7F7C3E6545BF465C1E966923DCD1D8AC4D0D2CC09E75AC28C0EE1A2
1FFBC5DE2429EC0989A3F2B6AE4290A005FBE23A55A0D070D6A1FD614572BAD5
7D43F3B1771EFA1B37A28BEEA68C46B8A633E82E5BEA048E3AAAC107F62A856B
029856DCDEE6F046C9253F3B443E5F62AF90BB90C05FEAB91FAFD236C47F453B
38DB0067907A28EB5E9ADE9FD1AD5C2468B3515B4E5C6A442F8D14ECD6D83B34
8DF242AEDE6EBD4067C5B549E83AF7B999BBAA32DCA141D75276BF2C4F9BE9BD
77A75D5A1E7BEC988F06F62D5E51D8B97288C1771381D3DAF5B148F098CEE2A1
576FAB4FD87199D2C34745DF2E81BBEFB063C3DAFA4241609EA36F0208694272
42D783CF0D5CA4661A6578FA0C8C064CD02895402298DC4DEA179E59880F9D72
4172A90156742DFC6FA41F7B4CAE3B0FEB1B59B66F44DE3FAA24933BC6955BE9
ED8D0F033FB488ECF0ADD93E7E4BF05DCA15B0C3E73DF25106052700653849C0
2805E1C56026F502AB1256EBEB0D9B5DAB1C7D96028198DFD7488D90799B2905
54B076E8575ACBF0888FAAAF03996D966AE659680FCAC8282CA19A33F4F18794
570C0036D413CD4310E0E73CC759AC64F3CB8EBF8B5EB56F41B247F3F19082D6
09A5323B8C050C2A38EEA022F492ACD8D6C6254ED580EB380DE2F1E100FE7121
DC203A89648C906439AD546E61387A2AAC32CF65FE36A4DC075DD4821E9C70F7
4A663FC9AA1D2E76F129264A99875D3CC1A3F0416B69A1306256A34012E907F5
7A5B907BF705812BC67B634AD60160C55FDEB881EF5212133C9FD7C7BBC8675C
E5772D74FE057FE48817E2A2F71DB6E33BD5AF7B51FD03EBCD4BD7FFDD6055C3
ED9E8BBF8FCCFE8CC04E0FDC543BD6BC7E38409DA085A2924AFA002FA83DD86D
63E9FF5210F2FD741603D1E0E18571D3DA62557A0376C2E71624D85534BFB49C
CE64613E5274D98E4F2B23DC47BC6EE91C5B8331F31E58AF3A560C46F0F9A0A0
E9FA210EE25DA7B317E37CBD332EB57640CA4878CF17E822E395763A50891471
5623D7456CF1545B894C6AD0B3578A8C830763AB5F4C73B8B78639682E6E7F04
09243C6256300F758BFB61BCCF0EB34CBB917A02D65D8C449D9A1CCE52D10D6B
2DE3DA6F20B5957F6F748928F9156100AF217308722883BAB18CEA58D596BDED
31A69CE0AE0177D2B99FDBAB99C30A5438CFA2F9D3270AD44DC4EB4988B9CDA0
A3D574E1FDBBD22BAC44ED6AA63FE9FCAB710D6DC08AD8BF99AC1C55B507A6B1
30EE52B355A1550F8ACC4BE3D014A48AD0D72F5E8A10EE7679FBD1612A97ECE6
36E565513C369946C3BAD318835D4707E90A0340BB7B6ABB2210535D285BE5DF
16A4104E3EB1D39DB285D7EE1A4EC9108C19CDE0D7F03EAF49BE166BA3DB1BF7
65EF0305C7A56A6AEFE5210979A18FAA96F35412E6FCF4F9AC698CB644515DD6
C338BF9ADD21A60C14BF696A8E3E169E79A8F4AB6498FDD8109322DF0CCE8FE0
405D523BD8065AFA52BE18F0CE103B2A5565A54C85367A7519E343CAC381E0CD
F053585739C74104E048EAFDB5645F4D2BA749C0F067454217CB82BA0F846091
839CA49D291957721D9520787DD65949AE1B082E3F5B20BF645BD2A7E6AFB747
AF94A4BB66F40FD286D9769861DFE1683E2CBBF9313714550395F5A21DBE11C8
9C293AD6CB2415433D3DA727CB415246288A003AB850F59ED62CC812B1A69012
425FD27361E68D79B52B6C9A96C1A40596F048A31C4ACF847CDDAE52D1D9781C
C6A9EA0E89FFF22F9EEC3DECAB8272D9586113BBDECEDB4192AE9991497A9229
07E6E389EE69CFA9549BB81C81882876B173FE9669F35AA8D2AACAA4F671E3A6
0CBB746D364C09DED261E309760F5EB281E30CD562DB316843A053F82CD8E6D7
EAD84B483F6AD66CAA90EFB30BF9837AD04D995C4F9165B1EF177C7E36894E21
A64F50AA7D53090F61EB25B9FD9BCCEF993E95308C247A99C14559D37FD917AD
0A3765437534F21194964E382E7C31F99F6B4CA368848AE438EB03B674C17FCD
8E02E18FE3DCF62463AD80181F8034395A1816B6C1946AE90F8F22F5353BBA2F
B1EB1795111596A7304A51CCA6B1E339DE260B1BBF233238D511140375419A3B
6ABF752EE368229466AA66BD23250F324FA5E2D027B4C6FE027E9D535F27D016
55AD662E24306DDAEDAA6CDA020721BF4377397E895783A4CA85076E85A632B6
0A9AC9E7DEAE85DC7A673BB1D8E2B410F5C5A738B3C959BE1C9E9A3EB75E3143
1F5620D96EEB8C55193AD8B0433E88820DBEBB45ED454DF0B009FEC9F8CA76F8
6849F08E0E61BB4F263BF9EF4C056B20BAE69307301C2EC84B99751A0D375757
D95AE364394FC25E6E0D02C68404DDD822777530D9B2B3A4310D182168ACDF7C
EF71ACE336D78C58ADE9F21BB47ED0B91E2B9F07C1D9511B1C95C58ABEBAC1F2
8D2011FC1FFE6726AE7DE624006CE68B3D182C6D351853990FD81536DBBEE2AD
CC6EA1599770A4876022AA04BC6B893BA13C1A07155EAB53871FBA3AD944E64F
0673FBCDF58BAD19C9CFA9D528D104702E4B899CE3DF11E5CC965A61D7320109
A4205CFD1917BB1BC8F81D079A1068F257FB2784CC8F66632695B5C8D5535596
50C42F6BF7A4521B21554098DCD8F7DA25492236CC142C9C04AE30EB43430F38
98F09FCAC9F334426B38138DBDF1F5449C2169315824D0A6BB0AD8D5662A85ED
B81715E83D18817B3CAD46646300ABC90A568A8D9E0E17040FAC9792851F1CC4
0481634C777018C2E5F8ECF56203F6875890DAF09D18C3EB567019261C42C5D4
291C5138FA3FD96375E2453943787C3368062D1F5A5E2346B0B0639219910900
DEF856C43D283247162C392D23E1FD6BE4D9D40638251FE20A5C8EFD39DA710A
4716E17A44B4F8CB85EB85B1FE1D7C558D596C7D0097FA31399D8D9771234506
BEF22737891913D14DB366F3BECEB347E0F2DEAB86E06EACF7F5DA3BC32030E4
E23C5E0E7E83F2AF4A64AE823BA1F14749B68E2B1CF93711A7442266BBAF7DAB
EAC83CF88F4569F10675B9C43FBE7FE5588F860C08DF7162CFEF07F93366AF7F
26F35ECF8D5AA73D8632429D3C7381D84E984110C5AFAE51D0A8CDD7778A136A
9154EA8C28BC52DFF62714BBB110A4121E1ED7FFD09AF5254F06E2E9CE1A5F6F
4E98AE34499DF8C812F0AA5D96A66B28CE5F7DEF368D95A466801A856D907745
572757FFF7AF3CDADCE2FE6D5B7E562DBDCF13F0603A4386BF794EA774CAD2EC
A4581BD58ADB6AB154DAE79621901DB5DCAC498506C4D010430E482FE86137C7
DE7328448685108FED42F6736BD633979FC177BF35A0C7CDDE55AFC7ECC4FF00
8A8123FAD0B30DFAF717211AC59BC709D696F94F94A574D4E7276F96E891EE4B
905F7287E0280BE3DF46B4494D36D844F53727F4B65D85450357032B28746BE1
64AFCBF8F5E8058815645D2180D8C19AE1E47442D9E34B3281BEC63A84CFFFA6
6D1C3CD57454425FF9254D9D06076EA7B210B1886BF564BDD888F39329609E87
50ACCD1A381F3FCE07B3ACFFB8F392F4F4735B41A0FE2301C72CDB2334AE6D26
7A009BD0A11514B37B9695035BBE5130AB3091BB069BD5B5D9350DA919E6E95B
4912E1DF953E18E8C8355D66B32DF73B6BA4CDDDF08C7A80FF3B4169AFE951EE
366495F4E6DED831F05A39189F58C78C3514CF2FB460C3623CA94748172F646F
771FB091FC3C879DDEB99535E5B09D38FC3AEC8750B2CAF33DB547E6AF5472D9
7785E6E0708B90450506739302816399B8C8357C1F0EEC29020116C7E099E2C2
7DE59DBA4615EBAE6C904330F11E59CE495C10373A3187E81EDCFCB0F6B6D89B
74A174C6AF59E146AFD5B53602750F77EE8B0EFDFE3B8C81C618B47F60FA4ABE
5032B7ABE1136C4AE8C1A6A346307E3BD497D7F1E2F51B557FEB6AA32E84F30E
DB2CDC65AC636325718AF7EA47946CFF07C2DC0FF668643B0EDB2BA4B97A09D1
EE0CB37A713AE355662EB1D21552981EC5E5A1861BE4DB32C5573D9F11323AB2
EF0C094178A03A3D1129C1204E95D0F19C0E9A42DF896D937385E30966A059B1
636E4B1AEC751061030E9698C0B256CAE7DDB2FE3DF3B0A54FA6F218627A66EC
82A85E88EE3D7FF335AD00BDF147756C177D2FFFAA8396C20099532ABB111653
2AD67AEFE0758C051241E301C7E13D1B6F839DA8011D6928A19FC811A283EBB5
CEDEA451FC0738D76973B67E1EDE40002AA5F65AFD81A00CA4343916B9DA16D9
6BEDA842C9B8078D60E5FA106E39801919EEE67C7A75ECD3E4BB1C50447C558F
D565E8C78B0395D652A7FC59B541513CD6FD08039CF40A1F5B90A8BD19CE101D
CDD8E9C0A421C180606587813B4F7C133E259D583401FA084FA32F9CF94CB93E
36ABBD6939CCD8052AA842DEEFEDFB47D236F1DF488EA9100D499A87C0AD17DB
2697DCEE72A404199E546857DBBB84B62F0E5DDFB98A52DBEE6D4A863D811387
95F521C6A95DEC14BBB3E339E23B5143B4D7C02512F2C206936D56176E3E2D24
DDE99938554A169249B307AD318F9745E6A9DB8D45F1EAF37B4E92BBB0A7298C
D32219A490BBEC86A7F781427C3FCBED843368A40C23317C6AD3EDF0ACBDE1C8
23F1EF98BFB6601794E5B4C81CF3F7384A29702F0BA28FB2F6FC59FDF8A6D3A5
42E3F222155B582999E5E2ED391D6863CF2997949E07B104540071442DEB0538
F7B02AAE4EFD5956160359E166BF88694D92194916965CA4B0D9F916FCE12242
E16E1E63B6E13345DA78BFA5AE30FA18DC205AC593686101542A0830ACA6918C
86EE5D21DBD34CDBEED2F7F6618C375D1EC39D0B866481D723779B3787FC39B5
F50DCAD816D501A60C51FB1F38771C27251A550BC214805AA562591C39697600
19C54EDE008DB2C2F8AB5AC4D5CB44A6DD2B195117096C46D1167CC3B84A260F
A401CB9F0590AB44141EAE0E171B748D0E32EFC300DF02C993D991D70B5EAAC7
A639213EC0F82A1D7750F11944BA82F0C7CD4AB7CCE0E107126203896A111B89
C55D53C011A58E41E6BFE2260B4A50B3B1331D717C541EB51089E9ECDE57FB0F
A418C674FED3C768549F666DE53223BCFFAA6DA004A90F53E78B51B4294E3DCE
916DF49FC1B4A83F47864D1624747054CC3E674581B8E889665668BD342E796F
F285F008E8815DC181F7BCB30C27750650F0F8FBE4B0AC369070B3EEC04549DC
D60CB7B2357C7EB451FBB44FF8C272FC1493F1A99DDB2E1FFE7A632627C5EB2D
08CF118382A92B6F946CCD210E57E5A1D85CFE0B8865CE249E002FD5D87E084D
F3880829969404A514033F33AF70C0D4612011CDDE53EE22DE1EFB9A8597E736
7556933433DE557922C20D8C1D4BC1F344CBEF3C3C4C346A8C02EB51E908376F
7B54992F9DFD820D9A0F00DD3716B714C94D0F9376E878ED733E90EF3EE6249C
AA7D7E9E578F849E100471974C6BB91EC150913C1F7024765E731255609B5094
06A7333A622251E57BAFE387C974EE30AE2C787714B977DF80B7FAEEBCCBA265
C77F9CE0AF8347DD1337681126BF8B89DB5528C7FEE1985E2EB83BF619817A00
CFE9FC5B0A0FDF982B147D22911CD1373D11EEA2A32700D13B25BC43FCCBC12A
D7B5C36A0F99E413617E745B66E31908E90AC92E1B0CC8FA70AA1402DBBDD088
087D333F150BF2C71F0D8AE19B6AE73B1ADA362429CFBAD19DF81D066A62F8B6
8E9063DE5BC373B09D5CD6919ADF2E9932C4295E25982DE1DC5A795D3B54190E
9D909671965AC8849B3B885B7DAA70ADDEB93AE4121441ED02D5DA83B1A7FEC5
FA6E23A2EB8934E65EB2A10AB693413B1AB7A35B65D857089968DD4A6855C998
AB1EBCE160ACB6D82AB81483F5A1915A280689D2814A8F02721C3E802E0AF989
FD869A2758EE44D5EBCAE70469468AD648DF75630D5E29912CD7E6362E528E02
6BE3E17CA208450468258082D6400021C593C24758BE0E422CCAEB6E1AA789B6
A3AD509757677D93ADE147ADDC12FAA296FFA024D08E5035473CFDA53A98C951
26D93D4950D905D6AFB4390B62A3173B522240F0D3AB70E459E227BAC4EF115A
B6116957DA97DDFA62CF9AC0CBDD3ECCD6BBCD792189A12FC9366BA7134EFD67
A22B4B88F68D40163340A17A117E25C5C463F511124CA3AB6656B799AD9D5387
1027450BAA1FC67517CD5B69EA89662E4EC8C1244D3A0E87459AB7094ECCD020
F2318C9F6B9B0C0BBE3DD62090B39FF69AC76C9F93C1EE153B96BD3D9BD284E6
B82BC7CDFE0189EDCA472BDD5A7B8E16D4AF67AD507F97671C9D7CE4126A0540
3331F8E710D103FB361DC46D7041C10BB06215A25BD1913C7954B5C60BAF299F
3A9ADCFCF2099128D1C3565C6F5FC2D898DF5DC093838AD55D44525B61A9471C
73F6DC14A50AD3B0289F0EB60A9ABEC6F1FF955C9F58B2EE9650552271020994
3BC9C69FF9B6EF2604A9F35B5DBFE2EAADFDE26D82A8EF569620CEB3F86995C2
81D44D9AF5AC601F550D8A240CC3567F94414FB8334C42FEAB58B02F67E9CBC1
873A16A9A21324819CE85AD51C124ECBB70A98762196B97A030992123A276F34
83AB90D7EB79A87E6467D40C4404687A747F42E1D545297779C6EF4E98BF1D58
88DAC1F25B5F8DD5FC1640FCB2723544574BE6FE1505687BC1D1F04D31E6E2A0
81E618F0BC2956BB1C3F176142CAF2E5A26C73968C2409AAC3DD643E0EFE1857
807BFA0B92F0DAE1FA2439F3AF1B989BD9CBB3BEF08265F3D767FA4673A275D7
3F3909D0834B170E2B62BEEDCCA27AFB41062AF39C3836A94AD89F1C51FBD589
F3CFD097B2F859E3268B5673C1B4B0F44B1F08930ACC46A54A7D53A67527E75F
039B09D77B795FAA9C987C3A1B4BC2D791D856338482CA44B3B19D36FF290B4B
D1B807749BBF6077BA6A90A7BC2B0D206B0B603771A27B121C5E833A8174028C
A004C7DEE0E44D408757AA03FD00D0167C762789D9647B095558FD029922164D
C90A3564CDD2050E48DBFBEE96019857F82B0DC22D4242A24C82181C70A2A97C
936E559E3BA9DCE374762E175DC3DB37DDC78AFD3662E3A9C0729C603E8DD15D
844ED28D820863E932F197A0A593A01705F42E8ADE5BDE0E951972EE5DAB534A
95B3EA9E88B93E2CF26F6DF07199C03BA5466FA3EFBD7F77E59747E245E7B58A
EDEE8CE96DB6DB9FABFFCDE8B4D3B4F32E9F38A2D283BF456D5D8BFEEBCB5B69
717F22A056E0DE28D5BF0F0F1E39055E86180C7D70697B73BFADEFD243AEE1BB
A437545C4776876111BE2F80F3F67EF2BCB5A1E85DEC43047BB3E45F751EE861
BAD6507AA0F6A35A0D8E883C2A3E8826B5A2A74206C0A2FD237CDA518A435FCD
14388C7164E96AF3E71BE046AC145BE61D1F75CEBB1EA14529BE16F9E7F147B0
E3379E2AB5195667C23794B68E228E6AC9E51AF57A7B2F22749A53E22583CB43
EF5458EE17551D5F34BBF7FBE754C780FB8F73146C5BC63FE2F29D25BC8614D6
C29F336C5E9F60656D2F7EA98303B8A070830EA0C3BC5E8DF9F395FD83FAE697
F2FD04854C9877E9E4121D68FB545124ABDD73C8F7319379063E1C81416DB353
A4EC3E8784399CE0C86BEE448CEE69BCD370455A98A239D58B788D47EF32CCEA
3A2705E62FEAF6D102545F537C8C10AA1BCDDC57296986480EC3B5E6E27D58BD
BDF02AA83FC9C8C5076876ABF67E6D7C33DF121F8F41E58435168EC78444117F
E734A95971C1C39474F3E847DF66512D014D5C7ED296C3441C951B8C4583682C
351FF9A5635B535146BE6FAABB489BF46B4061F2CF8E1D94B5435159884E743D
ECBED602BF78B1A896CA095C56B3D62783960780B31693596869FAF56CB609E1
D3230BB98D2190912BBD038F21047D0019EC24C3354F9D59607E74887779ED52
66E26B7059BBB61BCB24B15B3486D471A1D8C9330591D5D7F5E37C8646D08681
DB3F1C80A5CF302500D3F3428D883D166829B2239202F99324A6BE305080E8FC
9A14ED4D7FD2F08CEF39141CE336BA2DC0FDCBA1C570AB49AF137953153675A6
7571D3D91997A19D95E52890888F7002E25E625DC477211AC80DC3D3C5CD3B5E
0513A540D0C7575D56000265B04061F1EA13C297818BC0CF1A94F1D9A4D15985
96C6DA23F3733659F7942BD75F3D839477B4EFD118CAAF668EDC32190D6AB926
9E1FFD3D6432231D47B3729F7F9F8691B3A04DA6593C846B1FB75433B24AF1F6
CE1270429D87D385568423E145C6B2DD38630FF688B69F4881D91D8A7C8BF0DE
CC07116A05B5D6D42730459DD44EB86045DE5A676F2944DE6E6B639C37E8E49B
D4A6F0903E0C3472DF503E8981DB670CF5CBD09E176E265CF148A2009082C36A
1AA148C5E9680DC50E67D95B2D0C57BC179F1CD399246FBFDAB3ED718CC8AFFD
E2BAAB56D5937DAAC380B922F94DE028A8861FBCE564DCF89B36A5F1C621F01A
73EDF2CAA0892F95549FD91B3AE9ADC39A0CAF0B2CEF8E9741440E8423E5DFCD
5FF7BF21EE316AEDA07CC7386E94842B91A9AEBF21A6B5EB84E7D0850954AAFE
87F24DAD2DEC1B8ACF68A7E4A95223D31B5D2BD10C724BBFAD7C01A2B72C2207
B66C15430AD9390B592058557B191BDFBE9B4D20B0BE8BBE3C1A5459A27799E6
3F1368C6BE558AB5F9CB60A2B2B7D3726D4D06CAA2CB08BE10CC070044982540
AA5A754D1EA8407725FF461106D38A5DEE671DA58803170DB43BA10C7628A9A8
A5208EBECD5B70142E2E61CCC0992B66DA71D8BE22836E6DE06A546D75326439
58992778F2BC6CE209D3AD173924E6DC3C68A09444CA7C539201BEE064F7B85A
A2C769DA4EDD9AC9173509B134511BD8B13FFA80BF717833F0692E2DB5B63778
72C04F8876134E5B5D5D1D811F297520B630C6E43BB130D84AB9618A4CA77BC7
22FA601A6123A48DB5267E501B95E8BACB0B04A333B64118E5AA3D95BB4CA37A
9F903806F30AF37522828FD5DE3EC220C719B63A95EB02B60B1C15988847BCB5
B01B04F5C3A01B3BD24395C2BDFA018A0355BA8777786C48E71D0A4EC6220EE0
DCD42AE1057991478CD587D08576EF5B4A94B001F198E65F7B42F6F4FCD97CF3
756F137A237753DECF6B9C18251F7B897589C1F0806C014F8B9B511C2B3420A7
A62D990E1D6479DB81F669BC2ABB4462835ACEE028F14B6850C1FCD942F3293E
79CD0191AE8D31094AA4A74D6EAE3A6FD3C4834A5A1D1078DCC4444EE308B8A5
AAAEEF347D08E47967CCAEF050EC35C66EDBCD4842C053D712A3545E5336F629
B7793C8FDACE927C8FBE090DFFAEFF60864D09E624B24D44ED1E3D3F761928CD
2D8CA7A1B133A1AA8223CD1B5D2DED3C31AE91BE8E283EC2047174DCE0AC73B8
17793536F67C1588EDD14D6BCBAF4D8D22068A07D1E8B5EE021FEF16B633D789
B5AD9912A0DA55686F6301A694F7CB040FE694AB48F95A5EA2C53C567618FF31
047F876C1ED130F192EBD571DBDEF885B59E018386AEF2AD1ACC1A2DACB18A81
08B8CBCB5FDBD2B0B1971033D1C9BADA8760AD44E31416EE4EA8C182C1D45988
5BD64266D9ECB58F8095D33B8396AE9B26342CC1D2A285FCEB4CC47F1B456B57
CFA6C2679A5E0FBAB6C9EF7D7FB95D087B5A8B43DF3613AAAD505CCA785EE521
B5D53F78303068FA9D4ADB75BEA4DF343AD30344E6B4C7F8380B2C4B76D00EB2
7062F8C5DFC7AE8A3CBF623F5E2980FD72FAFDE14EE8DC4F4D6AA70536BD8E66
FEAAA8CE3D2DECBDEF7E850602B6815EBCF3E19A3AD3094F5C09CC29F82A9A85
F68CC26A4D25872FEB3A4764C7A0A62A6EFACA0B29D318260FBC314986223F9E
C4DB5B0EF2EF5E0687CD0EC8659948F84008F4624A4F41B8DDA112B42A1A0FAA
39D610AD4D7A1CC4D12AEA15B928B2F78DB6B611CC28BC11C69A884657E36271
363919B140CD6DB9EC91A3A8C339C5AAB51AB884232E9D200A40A68E4799E250
2AC069DC184B61E440D2CBB0B97445265D1A8ACA3638B8790D209F321D7FA341
72BFC50C04FC2A6D8B62831E5D51CBA7A97B8B09755D3D61875115365E93E489
6D76CE6647F5024D51CD78D79C802EEABBCA93CBF968192D7765443ECA040F54
A876DD343BF69D7B2F16E43F5C430D27E91EFB8B0C36B3B345AF36290A973BDA
75735A6769E89F528714AEC12609442CA23AE1966237C791B13A54ABBE60E7A2
F5DC169BF13C56D9D08860763C7F89E2FE0D7067FA57B561F745A1E86953865D
451F5B002D7A3A97A5688E0D0D7CD1CEFF5E355D691E098D1FB67877EA59A6FD
6254E9EB5D2927F8DD71C97EB8FD9C28D4E990484C6969F8759CDD1BF9EF8373
7833850E618ADE625865E2A540432B97CD7F69F767A67AF3BAE02C93A270798B
F61AB70AD1C6615B51881FB83E438FA71159232EB52187FBE2AABD9272349E4C
037061F44EFD734AE66D5B4A957261B5A8AA20446462CC5B70540619D87B4742
07562D560F713E39BC1555E82FEF5C3D35EDF9B5DF2683FB987B713930C957C6
32FC8F5816F21F6926B6C328A77901A44E7A65D278EFE0C676826DBFC268474E
A9037A5F3377789FDAFC843F9B3B635BC7871DBCF2B8BB3980CDDCAEADEDEAE8
FD8460B5BB21912F2881FA5136DA1D13937F62712B8A590ECC217E6BDCE13F09
BDF18E4BBADED4512B493D4CE9712BD8D0E82E5F05D1F96037D79F2C1BB52514
3CBC8BEF7F9831A0E0A137ECC98C6B86629608CCA03A3BB26BB18234A5285B55
17039417CF256E07B39F8C8409CD1231C1AA22459EAB183A52F330F0C03A8642
C108D34C4CED6F7DBE80F25D75116BBDA11A259B93C6D340C9839D58A3651956
47F6BCB28B5B1B581B52981EC5E5A1861BE4DB32C5573D9F11323AB2E964A81F
985CD3709694E5DAD604F15731A523D7CE100E3FD14A2D38625EE58E39BA27C9
B6DFA186E0352A985A5F9C0C47EEA6C17E4FDDF8AAE29EBAADEB9AF7DE859167
108E81068DBF528C83F702F2EDF4E45D0FEB7FD43DF90677096AC9FFF055B087
C94886F0C838990E66EFA8BFD96C3E637CC8580098961CD6EFEBC99973D55751
D40BE5082E90DBFE87968918000FCCC4BBB3D0F0A77E101B5DCE08D9A100CC42
29A4E33FA93A0FDB1AE200E2F7F539C78F6A911EC2EB55984542B7CEC8CF6D19
962FB818AF07746F3D79D070C1F2D0A021D02B02DB6D083254DD63150BECFCAB
9AC7528E3792B8C87BF92E6A39E5CB7C72979F3836E4771AF3DA8CB32BBF65A9
FDF67D4956D6A8E853016CBC6216396DB2FA2311A06BA71B710CDC78E05CD246
0FC8F8BA2C70E744D0C9ECB5CDFA5812BBA4D7AF28B2988B10841910B4843922
D37EE126411CDF6C524839AE3421349C49878E3945DE280110D3161CCDC815B1
6AC95599776889FDC6E22BDC1E924E1C6F28DA53313A6819F959EE20C356B257
165197946A19E5C7BACB3C64AD63E04E8EBAC26CE3FE8DDE8F6C30A2362BC009
9152E2B9229A62EF76D4422E27F4227102CF7D5684AC291769E060E6EB754F8E
89B075418D032D7BD972EA687F2D4D77F4B9576213835AE7E32A2B401C36C3D5
84F6066240484A3869FCBBD7D87CD089A4E7F9910DFAE65FD2A82578A00844E9
81B2B41210D530661670AD0B2FD19514D9E0E6E79F86DFBA81F68F8C745EE041
F16B158C13CBB61942B72B6C3358D293ACEFB6E1E6D586D249AB861CF7D067CA
7DE1A77CEF2637193BC60FB9D2AB71DEE364BD4F2D5163CADE45AAAE02FF57B1
628C6CC9AEE0B90194240BEB2B017C9C4F9E43D85CD32C949F3D91E33A596782
8D60CC8C0C1792CEF900D2AB0171C483292D8153797B53E64D40555EC96E760C
8245A1AD9F508C547EC9CB925A84ABECFC00B4212CDF4E88876C2DD4E79AF9E3
95E68FC891329882A2639575674B2A47C068A733A5C3E17FC27032E69A65588C
D61115FC966FCFE51E5091BF94FF43DDA214D11E1FAFF4607B74FA41F9558AA6
A09FBDB8D9EB3BA37CB97F6454E1E4F307C058B829405D75F3602396A1B7C3D1
906E2827AB2FD80B579D031A387234D59AB7D172BD52AC78D64457748E0DCA7F
BC94C7A859888B5DC6EDA08D241782F0B701960683AC1246B24C1B985F03669B
546C110680DBC9E1DDE716C4A59BE745721D0F6D8C3A1D8CDB3A7574A94AA015
7967DEB4248B5680E67E0CB7B9F6406285D7C05FDEBE556F5C14C45D82385C08
3D07AF133BB1BC941AFDD9F34D5E0FDF9A4CA158ECBAC9867D327BA0A2D69067
9A219E5E1157ABD71B1C6B509E566F224C1EA7BC6F94E3986C1F078D4A54CE9C
EB8E517F95A53659AA649A966ACF3A2EA7763CE44365D3319C2134B46322F7EB
16708D2BE2CA040F140F751129AF903A2071B3E1928C721690E46D1453C420AA
90EF72D6A2468AA85C63567B674F6EDA30949ED2EAD16D2EBCD7AD3050E68B2F
5B879433A41FCA23CD0F5AE17F406C22EC02CE64CE9F9DBE52947CAF49A78C15
1C3D50C16C7ADA4B3A932692615492C046257CAC1AD87262E7E0FE022796E62F
B435868B8E06FFADFC82A9C98018616703E6A2A1E2F8AD42029FFE31D7C09F9B
7580EAE422402E174C0FEF0F7CCB94004DA5B914E044578C8FF2FCB2E5B3FEA9
F83EB8265B381D7DBACBF1F0E1332FEA401C06D3D5E81C497121E89D67288860
5828A87BC083BDB2CAFF3EEE454AB8558EC865DEDF781D4A942B92BEB193AB11
8520A608A98709F1DBBB659C3C785463D5702CFD57C6F9760A27B09B21B01460
2D45B9DD06F94642E49DEDC7ACB9E0574E1DA3778C5BAD737B2A29C47263DDF3
174A09E363E92A1EAC874E4BF7544FC325FAA82F437E51AE3B60BDF1033C3AA1
2877E269C4D95913C2623C7F03BCBCD562759C12B4BFEB798B4578ED8962DE5E
46339FC63A949259C275415C6553AB462448575FD67FABE92C29B5F50028523C
734F57DBDF65731F1F393C953D2F10B5C472E88BAC0E18F09BE3AF195A23F1C3
BD790D209F321D7FA34172BFC50C04FC2A6D8B62826DB3132974C601B6FA2947
1DC34814FC81A1E1A5155DACF4D61D9E03581F22C0D366590BE5F0147D68C3AF
6F47AB187A8197CAFF1544C76C128632A537E9C871617FB1EFF1802B93E6208D
6555416F71253007B8C2A6733B8D6F820935161A714F070388531C5BB9B3676E
E853A39C75FC790A98BB8F77D161F6228107C92BBA32694018628A08215E8502
3D0B7359E0EBB5F06D010E6BF1D35F52A63F5D63F34360CEA089E994C36CACD2
E02DD5903A69C215283E72EC447BADD5BD58B053A11BD770399E32A7CFD52FF4
20A24B253F197A5AF0C7005F6503160BD8A5D939D903EABC5DCF39D8E6BB07F7
C4EA4F95DF71C5A0E72F270B4DCC63FEEB05642842B6B091CFD1131B1EF1A765
72FB853B28D6A6480B2AE0BCB01CE1DDAB150F43A3EA265792C67AA5AA776074
F1326375CE3C085F2A79B4C1A15160B1EEBF5BF4AAC41BEC6D23ADB16805CCBE
965C622D1A4B31B13003F4A14004C8D349798AF50CFA9EB9152D4ADD13D0F4BE
61970BF646FAE8443333CE5F285F32FC4E5468BE6447F7DAF2599EF2718C3BBE
737BD085229CD7C19A3875C377D3C5C7267BEFE151C52A60427176D702F3061D
DA33EE74DDADDEAB61616CC225C4B8F43907261BA1E9A9F961DBAA19CECE749A
9FF24B7AB8A5C5A2BB70FE475ECCC3A6CB7A5F2F60CA54F14A5FF3B3F2B3A0D7
7743DBB37DA767BAE007827695119229863CCCDBE52AEF7D6FF9A419F65532D5
DA71ADA3F8F0C009AA0874337A893C4D931CF57774E70909CBA2A8CCAA351D75
182F07130D8D0F224B875C05157CD351DC708D082D9A9FCBA5B573A3D4C222B2
F41A5B13195B662126CF97B8EB2D0267BB2A55F0027B42AA97E4C570951EB810
44DAF53A298C06EAD8E149AD5B28578E554F7DDB26D77984A9B3D80BA1FE2265
A1FF6BB0F2511C6947BCA4D4E4C32BF41F814A3EDA1EC5F9776FF9ABCE0B95CB
D3195CDDE844CC35F3795D29F2EF6A2775F327B365B077C744CB7FBD1176F38C
194C67DE0043104AF5E61366D0E9E9307B630AFBB921DB46042C720348F83ACE
FFA78929F4CFB5CCD5FD47F46CFA54D4184BA475B5D0F2361EAADB7574BF380E
613C32B0549273DC7789E792F012CC10486C74A61311A6C348A2EEF756679298
AAE244A925FD7DD45F419C4589C4EE9C0C48A72985276AE70079BAA0ABCC95DA
A5B40476F65EA74CB0A90A62A05E0E6853A89537F382B70822621DEACC953EB5
D4EE5C195C81DEFFBE1E3A1A0B08D3643461C090498AA7064CD84DC256855A3D
FCCFF0C9B6EAC3357E6ADF9AD8C35EEA05036D40CD73D128AE6D85D71C12C315
B11D6C2CA21A2363F3C690518D522C6B3D89D1BBF55ADE31001744BE8EA9C43A
03AAA9CCA558DE5E570A75835CAAD66B1E5664F16841BAA3C316823E2324AB85
4DDD7DC1FFFC204F39DDAA06862E0BFB5C0D788E57D2FAB457DAD3CF20BB94D0
1A2D221E3D64D048CE34560BBF01C461E2A4BB3EA29CD373E578CE394EFFA1CE
5FE99F96DA5B69786790771384136291D57736A4454923D4B4B28F24BC26C599
87EAC627EDADB51EC95DF8E053F2DBB854C4BF36A4B5A7F4D96FF84F3C5238A6
CCB4758E36CF9D10AFF24BFC3AB16F50DAA186DD0C099E81618AF2A19313E987
E775E2275C26835080FD2AC78DE88BF65298A8EB4181F668BFEDA5BF150E3735
26CF55A76CC97FA47FFDD7D89007689D73A187BDAE4A23B9DB4D1920D4846625
D4B99B6A5F98F2FF91CEC66A50A9349FB3B1C2A695930A19877D634DBC7192AB
3401CFE6A390C5E7694E88BE455014BB836383AEA24BEDA70A1ABEDC08AFAEFA
B484948D1FBF14D4564C28040B982EBF82D0914F7C33F549D3055F1849AD21BD
B5FD900A5C7E66942BE868212F8ECDF6B56EF16F74D8484B378AD48CDFB64582
54E0986E33E7CBF5974952ACD335B3830829C1C1DB5CFEDC684410AE49B8BF06
369EB4530437134B2417C7F450C1F6D3CA86A16B1FF2AD32694B82F8A21A0523
93E8AAC6C8FACD71600DAB5B28EF467A2D1E6F0D994622D539FCA139A3F059EB
7F90DCC91B072A7F25110B5DBB516672FDCC24EE7F3EF93DB577D2E225B5250B
8DC6721CEC853C13A1479EFBDCFDB925E45B3F17BE776D9289B0833460339AEF
AF4FCC58EA396431BD4F95BD5F6DA751722AEF587491B60E2834919F5224AAB1
3F1E17BB40452B5389C0CAC1CCAE761DAF98DFD702EDAD43518F2AAA47165779
866825EA89C3A02906ABC54E3B4FF2364DDED74A2E3CCF5D098F7D805E22FF81
7AFB2938A9F76E10723FAB7DAC397C6B87F9890C273FF8D268877C3A3CC9D278
BAE6679AA5D0433A8473690787DF01663308AF46832487F80F4DEE34DCE95E75
ABA3A85139790DAC9B83B6944146B3B7D9CA452453C825B92E606247E509FE6A
79EED109C2306A4A8DFC475F01E5A312BD9C984EE2805FE836D40CB5CB604F5B
0B806459C3140BAE0C32272578C63A4CE668212EFB2D988624EADC18A55422AA
225D330D67F8BEC315412BA9A18E9744CAC5F1C047BDAAFD5C43A46E499F7197
64BA6BF861040855EE306D3D81E9BA7094362DE47E085AAAECF10CD938EFB182
63789422BA7DC517F403076BC8897E6A8D5B3683C9BF396E82B7A2BC900971FE
A8BCF07341D7B3BDE931760FD3C19D4B7C08A12DDDA2501C6655411A4DF2DF65
8F42D355F0B81EF66105F277E5B6745FF4A5CB0EE90FA42E152942CAD1E08216
2D13926D3FBE136A04BC4FCA63B1271C79B7173E4A90F8699D221982DDB791FB
D3D0C08B8C7654902E2E055113753D000B13A98CC0339E144825766BC00B9E98
005391F9658C979B2B09CE5C3BBA4B56D34A981F1BC2DDAF4B4D0B38E05EDF1B
24923503750DEFE989EA4C6166E6FD6426222B62FB6C7C6C6DA1363A44B563B4
68AFAF87209B97B33200DF28221259874E97734C222E07E260A262274DF61709
D08FC9D7497ADCB5F0794FF7DF5BE2434118077B908451C4ED8341D289343255
31DAE2BB997196CD7EE878F929BB0ED1195074A724B2DF7B36E865797879DD5D
854A04EB3F5AF5E709F1BB244DFB53F6FC0A5BC9192DA91A270938270A0BA4B2
4F30F6A81D815ABB1F31A89E1F1F3F3712315F712F70E81360A6F118E90B180B
45D06B34D1A0C76B930E62B995357C377A9E8BC11DCD1581C6595B073C64D116
1E1963E3B251FD4CF4FD2543B7E6F394D3D262DDCE224ADE334615CCEA5FE4C0
CF761E921D7D2992EB24625547D17525882003FDC5DA687CFA43C0D1856C461F
97C7AED92EC5463CE5C32B054A731210DF35A32EB4B613956536DD5C21CFE17E
2DA671A7FA88213B596074FE4D777E0183D52D62C959A39542360C638A47B363
1DB34AB2DDB3F466809DF7154DE438CC9B047350D4E144978CB3DDB293E1537A
7E03BD98EE97FA23D768F48EA462E9C8ADE459F923C12C1BCD7239AD483C2338
3B1BF965219C66215C9E21563643E27DE92FBC4A239D237BE625AB95503B1055
69D62E21FB229C2226465DBD27291A7AAD14E9459CBDD7B737B63982514CE404
1249E3088A321630BC1B4AE4C2E3B80761EF5695001EC347713986999A6BF447
3DEE7CAAB72BFB900699E6CA7B672D208B1FD63B002A20D99B74A174C6AF59E1
46AFD5B53602750F77EE8B0AA73E5728AA57F99008E157FCDC9D79CC6D608816
93C318E4699A7F8FFFA8BCBD4D5D0731559C721052784D179CF16FC37B6FC3DD
D73B92534D457C93E40ADB929E03ED0446E118E97B1EDBE1ADBCE77243B1EB20
2AF53BA8C3B94D72186ABF14A12B8ABA67E37090F3A56D06FBC5A3D8FF4DD60F
4A12976872F59B63BFA4451E0260FEF707C452DBFAB7DF2A7921D5760304A7A9
3B5F3F1339F0BC4F4FD9446531BB59267665E3C402E0F143D45FB6949A4B7B4A
8719B672E94A8CFC5DF98D080BCB2992C23CD1B4D88DDD12BD8EFAD6DA0D9282
8612476C7782BF11CBFAEA39EB3C7C9EAEB3D47348C47D928BC883B8E7606996
3BF06D785EFFBBFEBE58A004C72EB674E5C394D0DDC22B4AECB69CCD0811185F
A0005893ADDD71F0378DCBC040BD3F1EEF1BB71DE6C221F4BC9E3F0AB438C06E
E4851C9AA669A78FDC06810D5E546CD334D3DA9FE95DA7F67320EF5F67871FAD
992447F76CF16F85D0A04140B5D21552981EC5E5A1861BE4DB32C5573D9F1132
3AB2EBC2A1E6017118C37AB2FE439C0785F4006CB6D67EA844EDECC674B6BE58
3E3134464F5E6D442E7D8B58020A06C012F970A05A27FFB38DD7CB03F9DD099E
6596290A1E768CED97D7896893276E071E1016C1E67003A22251C1F88E3796AF
ADEC8E98D78E01B81DE3A78F6FF1BF957F501F52C9221A8534A1618604CD2A31
7F0B1BB0722BBC45B862DF2B9C4020AF4F0245779D1A8D79C0582A7F2F9C85EB
3BC5D10BCAD79538BF753AADBD6ED7BE07C019DC131B15432E1514664240BA7C
78226D4E8ECC5B15E9BE0FE954F32340FC82E3A2ED3AD8E3DDD108A573F2D291
7790ABB168FF8DD6EC74957607DB3ED0285C3F4525E0426DCE772F4B24C9343E
42C3D897DE532796B42E8AB66D8446E62E36C18B53B5C7E530268B4D8550213E
19A6CE98C94B6D69CFF950270DC1AB3B2964A1A9472230FADCFE253C6D532D77
2D95F57D9DE63CF6F851C5E21DDAA588B8298A64627AFE82A90C703DEF0DDEC0
ED585CE910D51B1E22FC3B705E5CA614E2A5EAA282DF62042FDE92FEC633F4D7
53F6CC0F03177916551AC63C78F502422ACB1347610D835EFECA02E3020C4114
F3764154D76E0DA0551BB232692DFD2E9CC177779879FD04377526821E1FB99B
83BF35C8C3C0F03DD8E221098CBC3E05C523F1EE3FBB56EA0B1727F613AB4DC6
9658C53EFDA87B32764ECCF6A1D4CA22B9ABA26B04BD6B9F73EAB95C0D7F9B05
53670CFCE11E6829DCABA73D9CE75D74A63FE35C1F9C2DFE3DFB24004666BA84
35FE10EC622EBE16E271285C35FA0CAEAF0A927D5C7DDCE03DCCB229C4467A29
45522035B2875A44EF7DAFEEC6B06D7DB4B3BE25BF6110487B130E254DF39B4D
E5BAFA5B9682D05205EEC42B0E5980B63AC736D73305BE7C76A6D637A543047C
B7ADF7B892905C3FD4C715E5AB1B0AB52A559569A0122FC7E5D3D7EB4DFBCF0C
6BC99FDFB74F740579C8460FA05E71913E3561C72800157712E85E97349FAC73
29FEECC9AFB74EB358437D0CEBB9E03109C593BAC09CA99626E59E1615938B81
AFA5C99B02AB37CB7492A3032BC29A97F72C0DCA22B640D87E79D24C2B8F3843
8B6E4F142BC1A7AAF89F14D3B913E320F9F732DF9D07CDD357005F1D8B420A8C
664C6F732F6D1E62401C3DAB3E3D1F7E6224A03B9E9748CBE052AC7C80C0A725
3DA38F8096C2486719D09253A010AEDEACE01E30D3CB3FE2944C3A15D428B140
CC0C6940EE386D68EC1320F9B4B7A60D26292FA15543D0F9DAF13088E1BC5964
0E0336424602EA4A36DACC1485935FD3FA9DEB375F42C96269169A35F545E5EA
496420233E4952E6F77BDE60B62F6B6B4DFBF3D68CE72CEF7F9C9D4E4602EDEF
6492A8AB391237137B5A59D438BAAF1E6CF58F4100ABC87634EFEBA19BAB5C24
E91AC91736E18B657D33C2B9836FB5DB6A0D80E2FFF614C42377B037B0FBA022
555B0FCC1421A0B660B738180FA9A4D5CEB41EEB8E26B97BE0F428AC27BCF031
8D084A47F28AB4B56F00251395F767FB698F733380DDFF1174A45E1D26637BAA
E83A18E0D0FABB1B131913D29467B1B88AEF424F2082FAFDED49499FC805AFD1
8DF56F31B43286FB982E347B5A6E2F52106B887185FBECFB8364B9629796373C
C7E6BFB2E25C8E5EC1E76C9D065EAED9F815CD2CC3D01782E74D45DD4CCD6B47
CD7AB46DA299349D2180D960765CC29F3A81304A92BE0788C6B0C64D6CAD8321
246F0C2147B13D704C0067DE90B53D9163DE823AC78AD215048628CFB416C87C
C1894FCFB0B8DD21A7ED842396F320F28594A8B2F2AE9E0E10DF185D4262CD73
FDF7B13C13ABBFE8A52723FFC590C22A997075D4F193665D18D9505A1121B2C0
9C520E811EDED8DA4E014B8C375E5006B526AD5D4999C58A8A322A1480BDC6E0
0A033CEBCAAB6E2ACEEDF17D2D7FE4232862C16D1DED415BD4C0740478F55C4D
6DA862B50F90997989CE492D884AAFE259A6FD6254E9EB5D2927F8DD71C97EB8
FD9C28D70830DF4322929D8632C4BD136C89169D45718A88BAB8735D3048EFEE
32C3DF4BE75CF00DFCC413B504773D9A50FC58F9C71DCA9348746900FE665375
E9C805A494EAA7F980E7C40CD2A6D1A85E6A26AF21465C16D857EEEB28397ED0
0AF98514E4E9108CF2724F58E6BE85B4996E5FE5A64B2272ABA4EF8AE4AF6442
C6388024212A31772204F66BF48E8925C655C7B21A81B9FB4493377D6B93B475
5EA3761048D41BF8E781D1C617F53A74E2D3C6B5584776BE5E02D7DC4613C87A
BA83D059ED0635D5874CABFEA915590C8C5A147E34341E158CAA3AB1B6C5736E
AC2B0803D87B91B4892171B39C9410EEEBF42BA0BED187E01304827B5672A08F
7799B3929DB0B130E9F217EE45E4EDC9E2C1FF4F9E51156B1A36A5D0F0E0CAFC
BAF74C8B33D1B38B4B56A05BCF4D0E881031C10DE091BAB2E7EB47F9AD8CF450
5C45A38D08DB2EA29D2C00B939B4C96BBFB3CAD4DA410E69C542CAC64B65F6B8
29C08A4DE5709B81E33B3B31226325A27CA0AE745B8F5DE7B981CBDF4A9E5E60
E94377C590742750FBF7F00A6AE91F8EC2BB7CB00FF2E1F2AC14429AB8FA9A5F
A7139EC19CE2D314E85C035F58841A33137C07AB3D35A8A468C2C9ED0CC9861A
DD632F10FA1AC51B5B4094EBE61C15AA34217BC77B1E075A4BB99145EA55CFD1
D12CB464D19328D96F2191AEB4D4ED70395961900B71104E372C26574EFD751A
6B7C9AFE6196B3E2024B31F85CCFDD9E8A77F789EB35A12862F0FD4DA2F0B466
2D450CF7037E41B806D9C695EDEC4479DD86672800ABC7ED728A76F207624D39
3D39084762F438CC5490B29471B2C7A7A4AA58393A5BD57F140ECA79A75B620C
970F79650251CD94985C1144C7F8E92600D0BAA927ABC183A538251EE2D9BA4F
FA1EAC827EDBDDA678126D3AA061FB3614B78A55A1C4C763218915AA9952E0EC
B9642368AE093CF8098ADF97B19C6DB033B5C6294AA6F5B93DEACADC3D74931A
69E6465ADE09402C8FFBF26EB6FE3663ABFB7F6C88A26AEB79F0948B120920D7
F869F39E2B6F358DC65C19414C79E8F147BDDB1DC607885E12FBFA7343990A15
C20F1A557EE7668528DB216195143E8CF31C5D103CA1E5A7DDF2EECA199594CF
093FB8D49DAB28DA0EDB9463FECD20A4511334B5B84BDB265AC72621C0F90E60
731B8CC57BEEA1C710C9CCA91C3A0F3DDAAA9B45734348FF76B3E791DCF28E58
E376E2CF1810A7EDD21D89F33FF7E4EB4AE89A1923604C1C63D0F34546B5678C
C353E83E7E8F061333608D46B78A084192A8AFA2DD43C672552C6DC5686B890F
72473F24F37CDE6ED8050A9C99E9CEA179A7B1ECFE3ACCB88E5E52DDE2D9118A
1747917E6A9F273ACF2D559E0F0BA59CCCFB9D76F547735EE0F40D261D8B271E
827D0608A6B90E08CBF44A30669AF4E20CD5C539EC408AAAB31DEC78FDB04D36
F53B8FA747C6D9FF897098E3AD4A510C567F6535BDAEE470EF4CDBA6BB2FB1F4
044F8017BB4FF779B615A46518B256B2C43B27E28D7088E4874C1052D0EBF84B
62EA1AE3A900879B375DFC8C3950F4D99B48E8F29169E04E1631C16076ACF457
71422E8B5673C1B4B0F44B1F08930ACC46A54A7D53A671EED6FE557EA837042C
CC330766EA028CA0FD447F078CDF32F73FDB3AE7876D6AA879FC83AD23F0BE39
AE8EA1F31A2D45C0D27D21F892B9AE92E8480F5B8A2AB1B87D5952A3233EF3A8
A9BBEE9C86E16ABAAE149370EB2501FC55D641DEB7C69D3CE6245E93DAB5521C
D8317E37FECC26324BACB8D3437DDDFB220D402F3CAFC7DD736BB0C487962473
00053A69152D94C87A42A9148EB9D57B0EF0AB7B0E8698D19F61E329A3E67F23
EFA6DE495C7C9D966924F124629B81DDEDB64E0E969F9A0743F17CFCF60793A0
ECE5FC28B46A80A4105B168D570BF027C2CB454EE2281BDBB2215B11EBF823F0
CB12B9B888942681DFC2715F371A842A3C5D38373B81323A7E861EF6AB8AEB55
CEFDACC6B7A0EFBB918B6A80C50DFB57F530694D0919AA89A92F08BE36BC47B9
CF05DB388C0A6787B78A4967A5326577BDA3FA840BB82101C19895ADCD9C269A
D747CBE7CA39E2692EACEF703E923B07E0D413F01A4FE35D08322098FAB4B2E8
380F66A410FF23883099831871EC2B5353AB251A6A66DC7047970A8F7E032745
25324959B46661FA80DD2715B7F374D259C8221EF16504D11B5F35E83F0D23B0
E9A00CC3337A8FC5B541D8F2FA4654D530256D5C387411F5BFF946CE8D7834A3
410F5E6EC14CC8E4733785B055D1EB4BD5A463DCC84E2ED7D3EAB46E6243AE85
8EBE1767C7920FE0D18A619F3B355B53B61EC328513419E3E4CE6E3396AB329C
FA81A3FD438C5C31BCF78C0D6DD5DFC73355C84532F7A083D5DDD9A52A0E8E38
C8584904A4A9511094B7D2DB2C726B63EF3A983B84C7B062C2800D305B94ECFF
A4E01067425B964A58E1532DACF527F6D3A19A3E01CE3A2143E7A9A40EAFFD71
4720506ADA9DFD0C1866D6836F5557F484D9733BEA25BAD1C1C0D4C0A9AF6658
0344FDEDCDF9C693C5E7BC811BE21F547797341DC46D7041C10BB06215A25BD1
913C7954B5C60089E421F2D9971412E29FBE30049247EC92CD5E35949054099E
9EB25202A01894C458AB9007A524E4F3BEB89F1ECDCC0F4A8D211F8966D90D21
D1E7C7B592D605D743165826FA00A1ED4CF20363A4562F836EC514D418E4A13B
309F8D42C2A174C3E0F92D268D63B559A404DCE76ED2CACA3586D515B3B84D45
2B1B71CC988759AFEF42BF1B9AF64831A6B4924EB4F3D49A5986FAD9F7D46C06
C579AA96C0E033CE57E64863E0F1ED4725EE7312BEB40123C326639C7EFD3938
553AEAB604C6FD0C20B0E29BF556DEE0874E94EA4F222F7D3D1B877624D02C95
00FC582A7CCD2F5485DDE4B9D40F638A3A95DE5DDD14ADBE7B3BC67EE8A0BB36
8DBD6E533D154FA36FAB2CA195E39E4116F9C47FF33A7B5905412A633ACD4112
FA10A2F5357679859643D4FB4453C00E902FF3F13C0B27DD538E28E8BEC03AB7
FC544C6307B9E679635CBDFDEFA7F8098A0F3CB53B3FA4BCADE9943E4FB4DDB5
DD600AA0B0F7D7CC6F44A8AF9559A8276D035351C980009A8C95A561C0899804
1C9789CCA7D66F74212C2C1BB1021A2A331F86488749B35C4966B30360D1A206
8205FBD1E6B2429DCC3004CB26EBC757A678F5DEED34704F0C8801FDBD2C4890
3EB29EACDD9B20443F1642693CA577B1C5428597C188875D0DFDDFED4133D1F8
58196275BF26CC2C179B189782929D764661416BDE29F1F884188A9A42A59FB3
B2D4F385C9B587A00ACB8F046CC0AD35FC1D640AC3C99FBE4175301CDD719892
BDFA78AB0F62AFF7D8C13750F814DB309DDE9B173C0AE48258392DDFDD67C97C
6B50B0099F4142F6EF8815700EE058BD0B645ABF7A01BD97F34FD6BEFEACFB14
6D32A3A5C72907EC2EDABB465802473FCF8164652E7C1D0CD5CAB99CE4E2C211
F55A5D1F1CF11D4BE849A67ED3B03513A97A4675E1B97B39A7E9AFC26BF1564A
8C454450DC4C4CFA1B56678690AF59E3C42A87C085569498D6BD29C1CA59FCE1
E05BABCDD02E752E42BE145E88D703DA34D5290F8B495A4C8F9DA813454A1ED5
488C067D85E98A64FF9D0ED467347BCA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A229961ADB1D5023BD93644E4C23176BF787664F
CF245203C8C3E557669BDD382731E334C06F4B6EA145D5DF351211A0511605B2
8C540290A08A304CB1279FEB8FC14062F495A5EF2072B2957D98A1AB2E4B2A21
6F53829103F9CA4A8B6EB5766A44A7EAE4D5967EC3646F54568E9FAB28736D70
AE87CA7F3E445B1F49315332AC4AB47D5296FC1D3B96A166865C2FCBDEBAB3DB
6CDE74F5FF556BC9358EFD0B43F697D889D0331D1EBEC40C00DAE0BAC2DAD9ED
755E5FFAD0632FF3D5CE92C7E1D0DFA7642329EF410BECC288F0C4D1D0E6FBDB
1D2F7DC87DCFA3E12F6EDC2CA29FB19DE4183834020D1D5EF3C8297647447CEE
E330B23D8B1E1FF228FBFBE9C3CB8228AF6F5670423AE730740E6C8729B71F3D
32DAD5793A80FD1B6F3321CD3296C52F9330B735A0E65D7C343B1A03451B3A9A
19623C4B099EA0177F6CD6CB3BEB1F72FAC3A0D0989E1ED1A2EFA01D70A9C4C9
29F4BDC03FB1E4663874849B532BE5D89A4DCDC978BAE505BFA5D94B9F85270E
EA10883403D78F8ACC16D78A071DE8BC0EBFFDC300D331F427017089C77550E2
CF35E1093D08837A23AB0CA867D97DD34218260D2B6B9A4E247A71B41391B55C
0237DA0E25D4B4313CE372668A4B6BD7362B99A641E690E301E06C561BBE6ECB
41B1FD9922DFACBD3C45554A6F59E19BB0FA6BFBA035C07D0D10084CA3724040
1EE3312EAB85F8AAFB0991CB7B5831AFA6298E43DD37CFE29072A6C9BFAF41A2
FB4DC4F80E20BBB9C959B78F2599E4068E7E7F3F825C6C28562E37D841F7165C
7E17C8FB438AE8E402D11CB5AAEFFDAA439F668494BBAEBB53B2974E20BFC9C7
3C2D56B0AF69956685D2F7B9D7C0DB95FD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5020D74C7714FF08F5AE00F69DBED351708B1C760171CE5
5D0FE3BC5F6769FB19C7951CD5DCA774B841330A2C8CF59CF458230A1642F956
21D23843C4332F05F5AF14E70EF052F02F7E3F51D6E7D68A4FED8D2C4A733AA3
8973CF4CDF768C31E35C395C3BF67A79F8B1AC292F38AB2EF22A87A8ADBE2C55
747D7AF3101C5F1A2A1BF6C0E245AC583FE784CD69B918457FC63ACB5FA24E41
CAE39AA9386736476F5C0BD3D01ACFCABB35BD346B884B97EB5F467C93A2FC7F
82A0B3682C1D7B0CAE0165D6FE43CBD8FA5C85EDCD122FAC36F59FDA7CC4EFE6
1F9F8E88832737186037F9E5AB161B8A2090F5569529861FAEFDC91E823E0A0E
A92E7F1118BCF413BD355CD844D0F88C47B267EAFA1585B4ABAAAB9BF885D233
DE4656E4CCC1AC1A5762BE48F5FA88A0020AF17A438014B5902A55EE220152C9
0348CF590A07761415D2F53A866C95D4A6848E2BB7970D176670F90765843635
9C2461BEA57F9CC512BDC51EF25496B2C2253AE85AB38889B26761BA509C7F63
8C6CBC4BBDEA74FD3B43A178C86F9A97423815F5FA2C09BA590B8371D5B7758A
43F98F4DC4792308CDFE2779CA6F20ACEF23FD8FC11F483C0CDAFE837D984A76
1286C4DC5088F5DC4B8D59F781ED48736CDB2D0B9B51340F6218CDD622544552
9BAB6B88481D111091C2CAE5E19903BE5F2C90E79E2469EFE314329B4653D49A
0C4443075770A91D87663136EA17BB18715AA052BED594CE20910697A4DCD82C
553CBF42550ED97390766B1DF694CCC628695E1E6F0720F705FB727B15C6CAEE
EAC922B8F093E59FD1B1902FE450DAFAD952EA0A98B0686F3039CAF83588CC3C
30ECDDE05B7DA9A9E75D8DE747CFEE2E831CE2124CBC71B927051F7FB892BC42
936A1C53B8DB13075402BD4080216A226636DF2CAB859F67430D8CCE60A1EF18
205ED93EF4EB608B037B88D3CC7FFDC5252F691BF753FC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE27995D78FD99C5784B2B7C7C509E9B93BCC29
35CD2714C50B246A7DC70C99B7DBFADA1E01B81749EE49A70853CD45FC323019
A45BCA3DE39C3E7618C6322D264556FD657D9270933D8B167D2575CF146336BB
1C76735F3B09470E40B0624E52F21809704749F6D81E3B829D163D9F61E070EE
D8CA803E56CF227F71EB8061B83E035C7138A7CFB6D6CBAFB766754C0E8934F9
AB738930EB75A2713CCBE333CC60A6A8F2BFDB043ADC0B94FA3370BBFBC61D7D
25524B08C70599D58E7521F58D26AFECE212309BD7BCF62735379ACF3309DDC5
C3F30DD7D3A37804BB23274D7B30DD69E1B2C3CA70F2F79FA29543F526BB808F
04609B43776382C4389362AEA7FE4E03637B4599D176F103143DC04D5B5E53D8
568E7911839EB05C8F4A9E9C911D746C4C8EBC0A4E6AC3CF08AC86548A8FD6D4
7450B1FD87B119E547047F43E9CCDE1C1F8645DA03EEB02B27E36BB6C87F39D0
505579B2D0FF4DA9D4AA971DB4C82693DEB59FAEB3A14C1547C6C46C24FF3513
EBC97357AA2F25BCDC92F98CFF9F3D5881095B96FBB30E8330499FB4803EAF74
920BAFB89889071729076D755021515BD8DE5177013854B10911605F872456B8
F504547AE968C323B85DCAD9AAD5FC33F29A921D427EEE0E098E8591EA7F2D7B
A5CD8A91C01AE80B672831C286C900AD20776B50D4D2004F7295D860A2974B73
A9E8B594BC8BCA8356DB43399E6A6918A887A64B2EEE98060E47C0F371681713
13F92A306D1A7DD5FCA29CE223138B98E6C6BE9F3B305E2E4ECE098AEC270F11
2CADA74CFF4BD78C5DEF4354211E3953CD7AD90239C1FFCA061A21652104F54D
4CE1C6B388B901F937A299F65C3217180D4BBDA87A96F4C31014265EFD9206DD
DDD45DD3F56823BF8236F0E6B94537D9CEF904EDEC7EBFB0E60995CF6457CF0B
1D76EFC8D22A8E991888FC44FF9ED2954B7A9DF5CF6F256C8A86C3D98CADF1E9
24E6C6725EDE1262199758B2B070504BD81147F35D8989D2CA44BEDE6B8BA09F
511388851B9D9865887D4EF8AA7AE6AB234B252A506EA2EB59B1AD40A04BA972
EC6DC7C9E4ADEB7E40045F10F38E0C8D50CD28D96A028BE7C67D1CD148404CE3
0DE9213AC26B82EB823194818E6DE249207343C37BE9B926EEDF21E1D52251D4
37D555CB1FEF227CD15A08CA2A245C3C6508DD3592E809E0C72380B92F4B946A
7BAF34835CAC375077A843F61978AB4876871FBF42DF8EB5F877033452F08D41
970883CD836D1668B85BD642F7F50AE117B3ACD1A1372D5D4D2555A2E8E23E29
D8C8C5F39807B5A01188DBAA07A27A116C80E837DC740E86068952F0A57E9027
C39A603A4886213EC782000DEABF71EAE1B8944E2EEF19E1F7FBF442840845EE
D13FA9B4C5CB1FDE6F0DE20AAD69160BFBDA23C2D29311C4F82514DCF27C6B94
A8E727522E182DAB2869CD2C2B0F39016EB778060F35A6FE085A1BDB04A65CBB
6605D4D72E11338D87D5B0283A4B81EC83D03F502E7DBF202BA558B4EB271C57
922F0CF3980A02A40CEB2FEE42B631C999B71EC234FED7B269E5D91564F0AC54
D70F8EFC63B94F73ACBB4CD279716F68783C493794BF12502E04FC52064E63D0
05F2034A1E7E4192D1193BD94E99C0CCF702D9EC100066E1490894F5ABC92A92
C3F42F4101AC88024884C018C7D0DF65F7CEBDD46FADABA26B5433D34C2AEB07
6031841EA02F1C9622E0B64CD190A4AF3020654123563C5D6ED62F112077A1E5
88A8C8499A8917CAB23F00BC124FD93096D2603BC6C1734124CA3176AB14F488
26ED2E56C67571DB18177A07E082CB873440C4648D3FFF06A1499A5C7EDBE172
1759C1BEA3DE43B426C5E175B059005BF2911E685D076FF12D01742E9AAFACF2
CFCAF0517858C28A24FFEB5A26E46BB5B788713FB8009CCFE62C17E001C96636
A8DC58B71D4BC720F615D2873CD11E06DDB3A7788888A8E713D0E82FC861C0D9
ED98E873821095C6BE6CA909BCEB6C9BB1B0730BCBCB20E22D06AD1AAE225D51
25AAA901A78E86386D29A7CCEFBAA8F35B4813CC9D289E5244483DFEC10FF237
E38BC8E19B81502A19E0BD113AFF02F4E365A4708189A7BDEAB2D32A6E464AAE
B3505AF669EC3FE5A7C9320D907438DB23A82D8CB9777BECA40890C137564EAC
CE768714D7430BE1825C90D88DF40E753607A06AFC0046335F97A2FF20EA44F7
94C1DFD6B105FDFC6EBC6D5745C10D2C3BD560C939B80707B471D13D7A910F23
91FA6B63F2E6A01890368EA8F0D42E7A93B343C664BBCEBDBC0C99138A50E5C0
F57977D929DC9CC159568FBF5523D79229E9BA352E4193A44EE745F76035DBC9
34588B2B8FF44C8368C9C69AD17E91BD78559AD4BE219C8B110472F95FD5CEE1
A7EC2A78941AFD0B102C6CEF9D5BCD4C4FB87316BC327ABA5D5F5FF14BFAABDF
9FC06879D91DADEAA25F850083BE6CC26AE7437664ABB66CCEEA19D0BDE898CF
328861C3CB4423FD2C0C1AFA95A6195FEF30511D5C87876C863364CE4B089A97
6F9C29A14A61785C42D2C746A98194782D9A504B2A0A92D4E4B5062855A33404
2E14145F4684AD22D461E740FA8DD232D18E559DAB50A977CF474EE1410D7097
785D120CA5C6E051D096CC40E931BEB074AA9E32BBFA361593C78D0D2EDCB1CD
D560A14E93017099D24663633B06BBE3C20A2718C044731B6DB8007749D1B605
F397413DF968722DC03BD138B0559D3E5887B7EA9C9C54F8335F55CC3F1B9135
C70CD0214CF04A4EC5AD120D492F25CD6E1E80CE87C5709112938ACF9BB2E011
87FC035CEA0FD5C1147D41630F1CC9B82B395BDCE1885A1D5F3441B03AC321C1
5CDE681DBB192993B553048C58C55F0E420DCEA46CD16B75173C5D37047E511D
C980EBD803E01C35504C4092D93AE476AB15324149043E713261671835DDF160
4B8DA000941FC5F85C754D5132402A0A94EA3D0E37D6B9890461CF1C65AB7C2E
E42288BD17DB983600580BB1513D30983C4FCDD1836FEDC80308316401D8B181
EE2A3B114F68DED3488EB9ABDBCE6E73EC5A0AD42D7735045D594C43A33EA29C
BE2AB98CD0305DD935D8F0F5EE3205A7576650887883B3C9AC23E217F48154FD
6CE1454F09486B47A5A18DE65034D0CC9F9F66DE2BE45C2D6F1AF8B10F578B9F
F66D78D738FA85FC454C23236FF4B665EA0E6210060F6439E9CCA612DC7ACE7A
D12F478F25D40CDF7D23E3E543B75A97A7BC960A7F742A2C89212832C36801A4
C384B89A91D53E0CD886C7BE0692CEB0CF29D9B4BD53E08D9FC1A863599BCF9A
717F4DC319B4B59AF009C11A91ACB087542F94750DC53232E62ACC3C660965F4
5849011BD76FF8489964A7848FC6F3CFA44B7F502649EAD20FD32FA1999CB88E
A646C764BD2088A3EF00A4F1862F2CAE2F8B6A8DB26A1287AB3DD941A92AC57C
EC6D4CFCE0ADFD99BDC3BE161F4C1FBA9B854899BDB7E9D09A1E25A95E9789BA
DC6967F96E550903DF9B81969E38FA3DE2A058EE2076C77C33A93F2FBAECA0A0
EA98FA4C3D1F8700B04CEAEA603A0833E91FB4A44AC83C4E86308B6E89C99A84
8AAAF1BD143560B559176CAF28B1D8B2C8370CBAD5873329B24AD4A743F2CFD1
8B26B1128AA48F72767FF2268BED8317FAFDB532191FA35C2984AE7C50481FF3
126BAE5309893814BA28263EB863D5E6F01C423E6C5D3289B152CE19FDB55A11
282FEEFFF3E262F26041CB1AF30804A3CC34C06C6FBA8AED582215711B0A17F4
1B505FA0B5F906C537EFCDEE4C69AFFEF89B74C5B83E2DEE7642AA85B1615F9C
BA1C3C3197223C98A1ACAA495A6B8B8F1919AC158DC63FF4600FDF993CE8D2E6
3DAB7E352BE200322BBAF6DDD2628694612A7790EA8E1836533738405E9B7AB6
9DC77FE9A283B3A8C6A3651DE8AF71499D39CE0567AEA286091BEA9D6A443A5C
D35747785C433D4E18A02ABA38F55742DC36E4FF07A656AFDC3D0A32CFC097B0
5F9D90CC4B614AE7F58F3BFAF22EE6821291164B14DA11FB16C0E671A6104082
94D05830E44ED3E9908B59DB3B3506C60D3F766ECE69AE23369AAC3B5951B557
D62C7728D6E3F13BE05939C2A6FAA336EFA57001DE299223DDBB333D71003681
B4A816B378AFE37543607554F1F1B427784EFB366CBFF1CD7CD5FE3CB61842EF
56F134AB25DCAD2BD08AE61E233FE6FA79017D1883C61EF0334681CCACC5D024
F39309DDAE717CDDEBF80C88974D717C4539732DAD1226FE504620FDEEEC6266
41060E55159270B4794F9C0945FEAC295D17B4E252D015910B847534A519CFC3
2D52169510940A9E9AD636AE141331BE35D1D5308C927BA3940B773F20E5B3C7
813663D33205454A1A4B2D9173D593615C4459845E1AEEEE1ABCE3E5328D3F81
11610DB32C86FF6F9DBA1B8D6BBA3C4AF64523F37F176F3256E298D22DC5F1CC
F1A67A355219E2EE13D5D6369F656836EE0A77206E8236649E81A1F0E02D8D3A
3C8FAAECF7839D20329CBC5ACB43482D3A3A1E9C3A426BC7FE406E89FF25FEB2
34CCD7F3FB3C608FF37988C7DE6A41FB1020DBBCC762F2BF24BF424BBB2D3207
9DD408226AEAA0C4DCB8DF16CC6767B0BC73EBA052FAA5311407ADDD4BDB1061
3A860B10D2C219E96E61050B98FB04425912F484F5B79B9C0735F92C1B4353B0
76358780D1547206329F302AF6853E5DCFBFE199A76734AEC487BBB103A8547A
0090F0342D48DFF9EA9821454CB759B3D82921AB4B9278E652C2F30A8A121781
8CFD111E32142FFB160DB6422A5884151A4671D631260FB1758BAC67E14234D2
5747F1E68E0C36FEFBD535FA5C64B046AA8835817140B76DC22B5453AE8F3F76
C69B9F10988BE7D061F539CC8711030D2483F752706E27D43E3102CEC57B8A58
6D3FF862999D20CD6BBDB23762249BA7031D4D97DE2280C10756DAC422F0B747
E427E5DB0B265FDD57193B8E7F00C2162FB111DC4972B51E59320793EC60AA3A
F4A3F68AA5E11F657F898F59F67E0D285167231B9F444D42F17CB182EE584117
FC81DDB5BEF8EB957F817C5699C7293E47DAA4EAD6D47F00FC6443EFCDCCACE4
627CFE80E82179579BFE305B9AA1770E8E8970E70524F9F7AE081E64AD1F71D6
CC6FF054661866B68CCC383E5403F0A734ECAD86937D32FACAB6B04F3F9ADD79
94C11CE94999A3F38C88115D6082DECDC2125A4643102DFD0AFCD8682BE5CA11
AABA54285DEB171209CC4CF8879A65088C7381B9029B67CE9029093EEBBAEDD4
403C382D29751340F63D14C45D0C8ACE829FC3034643F4B76AB7BF41CDB0A2CF
B2CFF7A3E022256D29AE0E789DBA81CB4DDE7D4A970A3162D903EDE2880C20DD
FCB205309DA145A55A2C6763E0D8BC8A0BF42461DCA1CB7E613647A93FAEC756
3535886E28292A422264BAEA373D5F1AD84FC79DE23E2BA52D8EE1B1D3F80318
8614D6ACD81856288366086F50154919E5C99CF62A7700E896F5B69456110B9A
8BBCDA8551C3C14F979F3CBB597AAE41210AA7A444428DD055DD35D91A1DD465
3800988005F542BD304D2D1798BABD827BC8A689C3C35078CC3502DEF40DE082
B544B4AF7127EA6D5B8FF5A0735257BE29E36A29B707A51A697A4D8A360D4017
19C5FDD791A1C640D47AF86948448DD00039DB41E9C5BE1A7E6BB48920932280
BC552ECD04E2C33B76A0F6172098AA76CD4660980EFA1C84D5348740B8A4885A
BE1FC79E81913524DB238155870C6B9819E5842664A4049499CAFA7351D3D3BF
FEB9A51236038D4452E44A34F25718B7158C40F12ACA152F1EE78072533F8900
CC3A1869BE48305DA62447B28A45D6F516078C72A4B155A2715B713EC359F680
FCF2663644C985191135F0156722F0BF1DFACDE42BEFD5278ACEC4A55F1A082D
537B3C1EE890A6FD2ECE0EF3999DB161EF7DB88DA4B0C592385D35F705BC2A9C
CD7351AE879DBB7FB52F25A5A5DFA45DB0FDF9B94F0AA69918932E563C8827CC
340AC4350DD2FF1A3EA9F8F3711A16CCE9A37170F0C02A9C7143D722CFC08677
6227901157114767FEC20D2DBA71C87061EE8BF523D591180D29A8F8E14A7959
731A74DC4B215D7EC095EBE86A3CB7C28C2EA7E6A19A68B64EAF236A3468C0F9
453189A1DFA55A9459D1C5B8CDC769D992269E6EC4631B1B75F7E6A511DBD978
F3032D2FC6BD54FD7664FAF472BBF13AC7F619FDC4AD5B38CE04E4C555757F69
C669C5EC403770F681C400FAEA98F62F02633E0F85A780A61DF255239F9BC3EA
AD652E6D5E754B9ADE46841E52DF90C3F0D7CE5DD684566DCF0B43A0B0F975DE
AE2F7601EB63C39D6EE8C54611D9D515EEBB7192C63D22D02BB2A5A27270225E
C95173C09068553725ABA9423F4B268C58072241D2DC5C080E7881848222220A
63605F00205C205B35DA93F4D000126B2CE72AC322B4D962537889CF225B3381
6EB449BF2C28599EB66F071FFCE3410C547A9B74D216032B72854A0B8A6ADE15
EBBFD5CD2BA9FAB7E75099FF1B68329FABA01826377C35067A7C6785ECE0C669
C0392E1C02A9F69CB191E2F8FCFF6FE23A3ABC8D6EE13773BA099E9F33DE6B1D
442AF96EE9B4EA9012AD3D9EF3C67E4341383124196569481872D2637F7C4006
1417CF942117F2DD286236367D3FD6206DF1B2B7701C20E811C3B65FB8B29B70
C0831ADB61A92C2DB592CF08B3DE2FFE5C4AB1E7A8E709E36725A1250C5907B8
A7B5D6B23DA27838D078225DEF89BFE7329F2B420491CAF1794C18EA07230E40
7DC950C01E31D915C6626F6E421543DC7754F1AA11748EEA4132F47399C1241A
A3613DD291F5D1D046FD9EE8832D60E91796C916FAFE58F51818B80BBA556C14
38BBAD22C404896C6490EAFC75CBF6CADA6A6B7C7B6E01A7BCF422C9A4A46BCB
3A9089D8B41B2CB3007B8260783AC9A3A8A50D9E4040DC6ADF8979C2C77291AE
9C13D9DC197DBFA7ED11B3B415C97314D28889AEC6BEA809470BFCCFEF0C622C
FEAE7F4AE740D9D7E24185FAD3D7048EA67AB4E1DD05CDD42DA117D5956FFE71
11F3426ABA50B07E0C853EBD237F5F284CDBEE82439B418703036305A7184A00
FDD7F36FBE5932DF128FCF4C4E5CE4CFE0904353C10378E611ECE652B37E911A
E0E16EA81274C5AB5F77B2C4564899F5DF9BA49D9D26DC2FFC59181147EB065D
30A883FD14933F4B11CC112DE73301FD9118CFA0BD6F3615B632568E0EA67288
F7AF12B051C4E298AEE276B5FF364A289222E6D4251DF41E0518AB7B1BC7F70A
162DAFE55AD7817AA62773CE160F630FD00345C1DD91C796157A282D8BC6524B
578BCF2CA6C2E48058A8D65B74900DE1EA95B981FBBCE8D846DAE64D975C3746
50DA926F24CFC1AC7172514CF1F4CC942F4B9DD6FF29A0F681BB7C42AB16F3DC
305839233A6D79FF1C7CA9DEBA71EED8BD7ECF7829B310429383B5497FF39974
7A568AB4C2B2317D3C80B1A70B71AA537516A6AE9516D7DAA2DE6C0097EC1BC5
52EBE9B4BEDDDDF27B0F06F006AF07A0FDB7C9FBC784A1C9E0506142709DA997
1E950373E5B501F24B33988323DF970D0D828005E45C4A8C4BD625056509BC9B
DE9DEE1E8951142A28319378A3B3EFCE8C60473C239DBA7010D3C9B6F79B12C6
005B99E6F7F3A6713E67E7C08467C617E31DFA524A30DB6978E8EFEA63DE4D8A
AC6484D208FA185432C09B97FD98032422B18100BEE64228990E597E21FC63BB
E8685F31189067F87F494CC6B431BAF0804D83527ECE7ACACA59B8688F63822D
A479E4279465A6CBD43EB5B5DB8B72E96257500EA7D9EA5958819F5CE03BEF6B
59B669723240EDE1525C5C1331150CEE1B942E6A555049252B35E961494C96DE
DCC822B75C8DBB2F8F03639A13E6F3845521A3F14AF26B04B69FB1E640A4C091
91F2A840375C3B89738B614AADD69471CE6B07099AF0E0F7240A1B663AA364CA
7EB90D4C37C4E6C970F7D4EA4D8333C5B27CAEB1C046B8B5D24ED5D673E26A25
811D4BCA9D693EF8ABE786B61C7B7E2D7A8185EB91514A80F81FE7226F672089
0FD2941250CC5A3B60478C7CD7C2D18483F808522BEC54D877EF9C47598585ED
0C78B4D7E5B9422B3CE88E98C87926F208D2B653B93AF76866E38F6F5B4953BB
6790BF383CF2A56E4E746EE98B9667072874B21A5F98225AE4D547C925E8C00B
B3E642A64685456B6BAF629AB8085CEED1CDAC6B7AC4296BCDC0A475363BAE29
98C2FD754A65945A958D9250B329ED72DFFF1413E660A1ABCBB985D94ABEE7C5
95B123A580A6D198644049DED12F4BC6817CAFFCF66BD9DCB19A5853273485E7
2F65B9817B90D23D92B264D2A274CD739F6A9A8920C2DF579A8C1E5ABC2E74FF
ACCEC903E9ABCB6ADFA4EB07AC36443DC19A5BE5EC10A5E013BD7D621A9025FA
A444DBC3E4C66B4530CAAF0E79D1775A4271DB221ECCFA25639CFDADABB26CB2
5314E5FF7110BFC9D5E0419ADD2F5CC1C09AD68EB9A83F51EF690F901A50B844
41C4DB391255574BC6C5F36FA9DC30E799BEDE4F80E5CF50E44B9D8319141D0F
640C2FAB459AAFFBA750A16A4999D5A59AEB5FAE6FA51EA6EB68C744D6880714
44C6EBA6D73FAF4BEB8741396750BE8416A3F738EC0C9FC2350C3EF29619FFF3
F800B8ACF3E15E01BCDB6D4CD8D1F8188BBAA1A71A96F1A32525FB3485903C00
361D3E72B126ED17CC167AF71471686937FFEB7E81904730359D72FB1F64E3B0
41A69B2441AB076D0A741AC388F04B00DE2653B18C99512BDA1612DB547D75B1
47C85088703C68C018951631F2EA80DF2F50241D796DC4A59A6A3159A5DBF34A
90316A3FAC59C053364AE5CC71BA9B8CEA1FEBE62D888E525888557F6B064CBA
5D4C249535659573BC504F7BD9AD7ECACCDEC2CDCC7D47FFAD34A12895B6587C
EADCC469FF3B2A422DBF3A339BF3DA423C82A9EF28E83FDE0C3C995E7B4F9755
F6C52B2F1E9E66AD9E7C3C3C96F6FD1D2A69856DE1ADA86B4EE8FCB5924E01F7
3A956FCA977A5793953E2790EE733B4D4C76A47A1335CA1AD3C2B451361DC744
F4815256430F566A6DCF28A6675A0EB20A8A3263C17D6B79FFB92592316FB237
45EE6EE084196CDBAE8F16946D857CE704F4293D1D7D5BD0405A163AC9894C52
4D7ABA6326C39829DC8A2ABDFC584BBBC8AB8932CBFDFB9FBE0FF0161C8AF487
9CEAA37352D164013DA9C1D285F1589F4B98172F185FC890116846F6EC00754B
2523E1F4D80ACF16020091018865E23D6C0C9BA0696A6B6CCFE54B6B1DEB0F94
AEB1E311381ACC86D0856C90A91D904C918800DA6A271351A831E47B7741A1EE
4FF0706BCC02E25EC3124E538CB207A3D156167BA2B5BFF816F894ADD3727655
612374EC339DDFEF0101A9CAD4EFEA168F36C55A6E9F4F58E4908EFA20B7551C
67CB65DFB3A6A4F462BFFD7FA6F55790E477C71A2F7CAA6DF3E02D22CDDC8EB6
6EFD45A16A26F5B8E1ABE5009BD17D8A90C410881A96F9B40CCF15567797367A
96A03D3AC106E06F828E9615640596CC91711D12A4155E5D1DCFDE9F4ECD69FD
31EE19C5D98A6566CB91770EC7F8004DA518F5ADAFBC89A00C0681726C4D377C
A89ABD1BEE3C9BD84A05DD11CF10D6B777A6AFF563AA3CF9B4F1B0A3A5B0F48C
D2BF96F92CA5FB5B497F4632B1E1826CFE046796B89912BCD6B7BEE52FE335CA
9BC02E9932C4295E25982DE1DC5A7E47644E6175E9B3AF676603DD8C5F5B0370
22B38CB7D8F49636053E2BD0287A3C313E1F43F07D3DDDDE40C2AC635ED04731
C461CD14359427CE75FB0E2B46B3E57B2E14CFE2728FD062DED1FC4552C0B714
EEE9BF2B469ECF927A50E97BD02496F62FB0778169721B3F1714B1B627B79606
E15D1DFB6E3E5386A1D75068986D021414BCA08AFD84BAB090E3434034B8BF9C
336D7991B97D2C102D99F17118D9CAC94359426F03AE236B9B02B7EE66A54BAC
3867BE0389CA1678E09D9D2EBD374BD0E2F84C30594EFBC77AF9059895E49154
05709607F4B3FEDC85A3A7380BC80D15DBD5160922AAF2C11B32778159AE6E49
89B3E184DAD4004F875E8048DD691A98B1DE92D88DD77B8715D6A220A3B1458E
A90D68B2B13A5D4A79B827C93FC2322684F24F3418F9B6CC9AB5C8DFE79E4026
7EE1B15AC390E3A7C5FE2404D7748075F07DFD48CEF6189F13619637A90BFC57
B1A5CA1A11C56146853BEE469B08171BB5ABBB29858F65E937CDE31D67C84771
9779DE0B331E51AD8846A82AF91F44923F25BAC6773C8AD0A81075F9B4A3F72A
50F8C443BB34DE842F3EBDE357648BB47871A70137CB99E97048161FDD3D79BB
1648BD39E15558B38FDB6563CAE2C57548E0182F692E585713B5FD22FD41E4C8
22E7774D2E36B7DC679E91F344E2181C9631F0E3F0E9D10C6306693FE71BAD27
746BB08B22018E76272937A91A1CB9421DE1DD7BC5D109B52B7093D785F4380C
E7E2D15E9763A4AF799EB15520B2AAE41F05B4B317C454A0F5F54B21DD7097DC
BDB747D975077B37CF09EA6F16A1452EA51C9AB784C23CFDAF6F044A5C2AAA6C
CA36A436B73CE97C83E306D223CE7774FA5AF973D985C02A46E776365CDF9B6A
32D8427EDBDEF885B59E018386AFA462D3FC884E32841E6BE12817A12E65BA65
C7CE675E399D4AAD46370C76C3162444F3AA3672C66C81B3B00D9D4F0432AB3E
A1F5D8579CAAE0CBFD02AA25E4E522F1AF1AB4EAC6FB4A789EB88F31D5F2337E
AB4F70211EE6DD75D887C411A4C185B878B8003E1782E9A3484F8CF8B3DD20C7
3B220E9E8A694F5AB21C2E9BA2D96F527B19FE75037804AC7C59F192653317BA
26FFB09FD38C60C117C441E4160DDE659F85ACB1F058AB549FBEAEF52AA3B808
61CCA95504DD63423BF603B14459B7C691BF68F5854FBB70F3F5EFDA7CA047CE
71B49325EFE87D508AAD5DAA2F732B12BA10B7B6B0263B8B5CE6EE63CED9FF7C
620329667BDB2B79A6C97B54B8BFE82A1E6D7F3FEB2DA1454935E38C1FAA3A22
54B70BAA79EA27CDA4EE2247F7B8CFD1429C72E269A2B8FBA0D207B75B05774B
DF89381798A1A62A0A6F8E820ECB5FE4ACA6A493180E0B5E7FBCB90CE9D7EB19
13D307114496116FF0087A487D8130DA7AC5BD0F503D3ABE63C3D4530E353E52
70D5FCCCCB54E7F0C9CBC54BC4CD46657AE3FFFBB204C6D59B5DFCD3E19A4F5D
703731C17E595D0E697FEC6C9A25BA86E49E0C7247962F244E4B3EA74280B710
1D384B1B4FD9F3CC4C007DB73015E52332A3685589F3ADE54C2F30B0AE131698
FDF6B55E5B1B11C5AE8BD7FBDB7BA6E909226523E23AA93628A6B5887CA2263B
F3F5A696EE8686AEEDB31E73863967A4FF7FCCCD04CFD61476B4495F926D1F42
39B2702AAA0A8F27EC86192E30A5239A449B68FE52808798B648EF2E5A7F38F0
1298636F8E1A427D4AE6F0DEA8CE198ACD51B48CB8EEFD48E705F80B009AC980
3066E498C82811CDE551ECB3C8DCC93024F925D8D44389868B07F5431C973C89
C949FAD868DAD4334BAD9F343C0361D03B248E7E7501BC64297D3C8BAF3BC9C0
D33067D50AFE8646CCF705322EFC4802EBEDFDEA9EB53E3804510BA9F24361EA
4C88733185E2FC5BD3720DAF7999C66F6DA0468D5C98B4E9C99FE1B4DE04B482
145F3CB7EBA49C7009564214078E4A64A95F3973DFEFFFA71B3B2BE1D5167D0E
2E82D385830EAF3992E4D8C863BA7C9E05717986CC8A452AE463C1E004348320
6B2C87D3A3296D84F61FEF1A5C7C895EA1EDA6A750662B898F6533036D413777
7EDE774B4792EFAC0D84C06D3D1AC023AD13814FE8FAA4A4E29ED940E9AB5A98
1D904C44E2AAB473137ED9F52818FAC02AC17A1D5484A8ACAE902CE9F29800BC
B01465B2BC0429162BE040639F2EE9C0FA967C96E8E54A1BC5E7269F5317D031
A400EE8C4AD035FFAA196A95E598C9C34E74DDF7A657AF1327EA3EC00A555758
DD88848D48A7E98A78F95DEC58D847DC65E9CB0E30B28A72DEC59D297CC24DB8
9EC76930D071A679EDCE7F36826C7C0C0289A1BAA29D4467B2EDB0A303437071
0E83C814854602CFA5EAE2D3112D43FF22C4723429BCDC4268B1F9CF94C24746
C3FDA17F2C848A4711583826284AE6A9495B072911CC814C19D53B95DE0071E3
A439D65A75E6227FFC6637647F60685A0DAE8F715731AB8EAC7DC648C5C31523
B52641B2281242D1E8539722361272D9A50C5C4C7A725889284D623CD8E5DF6B
C4ADF8132D9F85C7C229F5140D0B98341339A5470B4C89E24C9D753811731297
11D3BA7C52C08E87AF023C833F2E36C2977602AEFC5579B8123C43E8AC022D2F
38D2C47100AFC4401601E1EE4498B7F8AEBF68A600694C245667C46D5213F053
C32E9EF3DE510D05F01B979454C6280A58F8BE30FB98DE2420B3E3A28D735CDC
6DAA8E1A598B5A1519F8F01D006ABF646D25C4A9B937FAD5CC305A0836C5C198
E51243E50DBE5DA38D700443A638FB7F35261F2A09032C9F3A272B7A987888C1
E9D50C054CE99B9F7530982C062593DF513D3154E07738A2E39D6AC9429F1A35
9113F89A45395CDC48DBB13D7618F4FD6A066A4DF35F8BF28C680E7C90DC710C
4909D50036BB8CEC5766421818C10E6B336804C9D88F0EEB0C993216CD336AEC
EC76C438F1859B7494E26582C63DA46ACFF5D5CA41BAF982AB046F43B2DA7552
C98FEA1ADBBB93C025B00E220389962060DD83522D571226623E88BBEA686CCA
DB88397DB2CEC4EB12C2BEA2C26F768EE4BDC1C612B31C7A4A924DA62AD153A5
15079CC4F3EC104592D3D38E10A40C93CA40F8C88F69F5F803FC20B59D8A94F5
9777FF203C063AE8D9EA873AC7B461E0FB63D7C1CE62B8FF34647199204C3406
C65BD371F2E48C48712ED6CF7509792BD183F6711A994C31A54DDC94C9A8E862
5557BFA0C123C0DBC628D7EB2B2787C65B147FB7AA49FD7B056D8E1B1611D4B0
2E05A0FC41A267943125A76D7886A4E6E5F674F6AAF028CFB851E1C22E111F6D
B9A7F8D9F240B8532A91268E9AD2571CA84F117D8558ACD6BA0098C6EBB1AD2C
0A04BA1E0069833A45342B060EF38B19B97882E8F13AB1EC270722A28D29245A
4AFD3AE32BAE8DFD59DD21624E295E5D05CFB53BF7212E2933DD050FB0820AFA
1B2AB99EFEC6D112762B8527CBE3381953B0908617A28D2D6A522B49382C0377
8F67FDECC3DB4BBF0897CA4B909C878C935A958D9250B329ED72DFFF1413E660
A1ABCBB983608D0F5AC9308B32343F2A9CC22EA7D87E512F1249123C12BB8964
D3312AFB91898526FC628BD2AA4BE6827C91AE15997127DFFA9ABFF8C858A51C
83CCCC572024A7D128D2D567877FDDED97FD7C9E73DE4D6D4ED370EFA66156E9
15C6FEE8103DA73B5D782BFFAD7F7C029E12E5D24D547E35CDF1465C249CAB87
0818FA5CC7B9DE515CE6BBCDE3633FD159C855C4CC46FA71B56A2DA46A21D10A
567852020BF0C27F175DE9AFC917F2D783A0838DB0BDC5DFFF8BCFDF1D312FC0
FC0162F47FB4D8D9034DC5D3CA48DB26F515B6576AE85A29BA65112121E1DEDF
8597ED4F734B0AF63F7CAE541F9D511E2DCE82C4C641402C6A9A97BED4C33668
C231EF31A4D5750105FEB6F0C532000809CBDB3C5DCCE929A32C7F0DCBA32F57
AE6C9BA2FD61BE07C5DCCE8CDBE1C6E174AD0D12926D48FA5F6E1D7AB4A025BC
216C928B09F06332844EA9D12718D41C771BE6B07E1C5BB164A3361765B4356C
4E2C8E6EDC84FC313F99904E29111C174A42B49151D18C1047F69B50F6742929
09EE79FE294598B8493F9991DE93CAFEC8A86650ECB240F696BCDDD1A9F0465C
B43B8244578528A86BDA20C9BFB9FF931ECEEE556BCC9C4374EA6B2CCEDF09E9
3A469326883DFB3EB9B157C4EEFE7B4C2CAE4E07F76321A5D3A5906E2108DF5E
38FCD9C55FF4147243FDDBFB594E0FCC622BB066A369CC2474D56EA9D08FC3FF
7CCEB0DA2442304FF353060D4326034A5CD9EC8F73E33DFD982D182E86B3CB63
C968430895741B98CC31540F0B62F18FF86AF9B2A5B3E2A8E7AD8930C9777AD0
ABC8D24F75CA3925E9D2221524462A1F98761B4E749C534262169923CEB18025
FF4554899EF60A69BA10A8E42255598A24FAEA2264AD9C7AB786BB30C4007538
6C8F15EBF8BDF8396177D83B6AE2475B45961043BD8C7908EE9AA670671F12FC
2A455157B1BF595EA3E14929085DBA19DD5D6F37D2BDE9E18C4A49EE7BBC8F82
D8EBA66BA2F0C51C4E4DCC86D3C62FE9E069A1725AEBCC5CB1F7A80951942419
C67A9EB8EB3D1F5B0524B381B6236164733DA8E7A8C1AF60D163801D296860FF
ED817B1F5B4DE32894AD125502A33F3E65A94AC101903963A84EBD442BDF3B49
515AB10DFBF0BC3B537C3B1E57934EC351A8FECB9C6A2D42E04AD651074A7FB8
EEAD846888F724105E9709365231D609DDDB0964A51388C81CDDFF4DA1926B65
7225002331798829B9D72775996ECD8788D9E72EBE4912456D1A78B7076ADE3F
E148F1E7466E6F151D914B01F3BE6B9E21D8B933BFB3BA4F733A59F736544D5C
9BCA08C7C512DE231F44EC16EEB206287FF5F52F63541E76948E91D70112F8AB
A949F5BEAC192A4F0AEA4103BD933B08D5E68858DFB59BB3ACCC436E7CA1DB4F
D788C12F342516093022E01D500E1249B3CBB49C339F430D83A82090B22556B9
04FAB0230F5FC603B307B32E6B502A124CAF3E921871EF6A3E598C971EA81D99
AEBF76F5A9F0B2784E050A11FE8B1B130B758010DF14536C1550920C90992636
2E4CCF5B8AA7EBB59A09821BD121F361A0BB39E02217B34E09C287152425C6E6
07C1EE5D38720004E4858B624AD50EF95F68AD5FF201329AC69D41775618AAD8
209A2A32E8F4AC7502B677A74AC48E341259FCDD1E8D932840FCA372775F1691
CA52CB6583FA4C6F64BD28EC6F839F95D74E2EFA7D25364396F37130C0E488CE
C4339C9309BBA8B4AD3C40F938AAF88CB18CFF74FC89AE9A0B32ECDFD0BF97D2
D2940D54DDFCF2DB627140ED8AD5DBF7D86C88CFEF46D9C126F05A3C85F4400A
796D49A47AF2111C9A3A61A7F07D84B51D8C3E4B86EFCFF1C0E19F4369AD260B
A77F520D10EE8C58E25A36BE601E06A1739387577D67DC35BBA3417520FB95FE
B69D59AA5BBFE3F1CBBEB778ED8BAAF227D57119A0D31F9156AF4D76E60EC293
11F260C358AFC4E6F63A24B5A2CDB4EF4032DCA5CC6D1E11BBA2AD0259A9ADBD
D053FFE120C493DFF9FD4972DAE07D1E9900A649B80FE0359DDB6BDCD292EE03
20B1B6AF535B0EB7624E0116CD08A59EF79E5D7A9AF1DD9809395B595954DB44
D5A187F806B5D7B12FE096BD13F4515A4C6E25DFB42C4810D2FE7BF278B215DB
9A61885A88D88E1BA6936151A76B2D60E7A7AD55991FE366E1D0CBAEAA9F136A
A5E7CF174EB3D74860697B255C72846F1570C72A22574C85B1EF68F2EAA7AF1A
87A4C89E096B415A14A4F9A3D5E9CE733060E9A912DDFC06BEAB5782F56BE5D0
EC84DC549418D190B1C581260C7A5203CB5C00D65653E95361250C0812522FC5
B9B91480D75B36CEF1F239378A1C3AC2B15DB2DC33012FCDDFC8ACF206EF6A61
665BA860242A4A4EEEC6955407F7993C2377B237D57817D51DB3743D39359867
8351E78A1EC2AD1A9046778ECC7BD32D6CB3F0B9E70D33C9A5AF8605160D2593
31FD5C9ABC5B55AB8B57D38DC282390E735CDB7DFD57D62B5131AF784357B8E3
E7B676414CF22CD112C8DD5A99D30EAE2D0B10EE7934C215451BC9D441EF8278
B9D00EA80BABB86CD3A85C53DC3E9A25C9DAB9C9167F560F297B6B9242F5343A
0CE0D06EB59CD75260255563C88D594B9568ED078529DE942340A40AB1CBBCCD
ACF0046027231052719821DF82B89E2DD0885CA956529EA49D7B91337A89772A
EDD4A948F8C10EDBEEAD8F91EB13E7BB5FDB2DB0BD409CC94D3224E75B5764B9
DFAA97EA454B7FA5E442606FFF53F447D44E968A8B29A84AA5CE3B1599710699
5F141A58CC2A46228F2F642101F5B23CE1ED3A79FDFF8C1B97E405C045C305C9
970551CE63E45D74F8B7590837D46BF9E112781D53309A054F063DFF43BD4DC9
671084061B6F44475375C49819775F2522B9208A27D9CC9710FFD2192CA82959
36A18B42F96BE5854A7003C280319223A8BE84A42B32247BB1741C133467E8C6
B76F7329FF1136E5C76F823D29D35078412923DBB3A32176EFC49EA6FFA0C2AE
BFAC9216FB646FACC2ACCF7936399A28F962921A8D17FA331966743BB807BC62
ECCE310D899D22813E9A8F6B24CC94A37ED7FE37D7D03026506C2F7A28616642
225A5AD8C4FBEB07FE262D75AA093A73EEEA99FC29FD565D68BF89BD37A2E4A0
B6BE71A47B686442F01F8EAC3A9319C5612F3D365D1C76077A53626EC2C38433
02600BC6A6F743E66DDE8A3A4B59E35C128E574F8EA188169C7511C7B6038D33
F5C864C45FDE300D4538A4A19676DCB963CC0CDD1F1D89DCAFFEE79149D8A24F
C46597956CCCE3EC6F585D9D69A4738D11C6AB5C7324154983AE067420B20806
8E4FE13857F9C838D08CE835765AB686D2EC1DCE1B89A21179F9BD147086881C
D9C9335856F5F195FCAFBC381356C3B94ACFB1FE71C614310AFB51163ECE573E
AB9DC733E8E751F91924855405F02213933F1C51AF2CA7A39AE6B118A725867D
8C47D291939025EE8A893CBCA72533236F1C0A26CA59DDA6D011F79FEF550DF5
2C435281D07E3B0CF4EDC6C3611ED38BD648301224DD7BF58E565C9B64FC3CE2
F571E3F3C9C616260C0CC2F30246CB9BDA7E5ABDF56FAC14CC191D57882855C3
939CB6FA9ADA4A6B8B08178CECA5DA7318457F729D1DB59642C4BD425E3CFA54
0BE401DF40F19DCB5B4539E43B2A8C896EB74142C62BD15AE3DC5D6A5D3A9783
8766FE358D17B2CF7B04A1707A89E39F1CCA7A7132BA0E80162BB1A9E2E99992
6D3B31247BC0D7A142B992F5C8790B3CDDDD49AEE50FD825E0E3569B6514C107
D7B3A614A650D5AF919E01757021B319D0FE32E4E03247DA02407E59921FAB9E
D7F964ED314D50CDC06341481153D90F48C7DB88C6D93DB82004DB8D9E8A2F16
1A38FEB95062E603DD36950A8F3D2E430290A40947B84A0D64CB893C4EC65332
5868F716DFD2933D5F0B14A0BB45AB5F7647D0A93B92F543A985027FD2715F41
82BAB1640F3919963CDE4268F5B7DE41DE1B4C2586B126B14238710305670839
93332E3013D3E482523B21A48EDC745CDEB78BCDA3C7B09D495A7E6CC4D66BC9
992C652E595D0E1650C555CE1292C4C58A506BACE306D07EF4328E10849820BE
6948B237FA5BC71B77173DE79A0DADBA7500ACFB3DD815224F7E256A4EA0AD52
5F30EC6D1B1ACC33E45D087963C8B579466D5A3237732F80C4ECF89E1C49A957
0C6CB87E4289332A867E6D4535F7635E337E367BE1A292DE76EBBDA80AC0E8C4
B87B1B8775256428028777102C6CB4EC40857946FD8AF62FBE99C8E9E6F3D32D
E03D64DC71629D041E4669A05B6754EE7CE90EE8C3B2AA9EE3ACC9258CA206AB
5A10743AADCF4829603BBDC23C9F41F24A479F827532A008C4373425A53658E3
D5CDF2825B23E8DC250FEA26AAA18C12EBEB518B524263D61E2FEAF705721361
1FA533723F7576FE07C10202637B079B049E4438354CC6B692896971F2851359
2B2818D64BF6F9E601EDE032D124162880AFD39EDEF8B54FE04C38FAC85F27BE
DECACFC93D5466237119A44710846BAA3C0E28CDCB4D31C8E5E6DB585C2DD28B
5C0305C968BA01168372D8D1ECA5A32CDF25E34A95065640E188384CB618A3C1
122D1D8A14A05A7CBCF9E5DBAF7FAEC6E45444E6A61B9F3B463DEE44CBA80C23
4D6D7E0D6A70DA9697A655299F5D047CAFDD08829CE775C1F5D2A21749E1289E
706CDE820EBDE531A007D8D7FBBC3C55D1075B6E852A43F87CA64CC2F7B1F429
8B24B4FC62AA06FDCC5D800DE0FE9CF57C6AFB258F73816CC190CAF25D9965C8
8F94C5833C98E7E802CC91B546F554A4B9785B4E057F011F3661B2D8DC640B8F
2494EC316A5C574393F754922011C0809474D611522E42438EACB09809CF4419
424CAE3F771C7F5ABFF5C667E681DE349EB88B977D15639432B31DF296E51991
008C03514B0F8F4C05D9FA435C61AFB687422C3CF3ADC3A1BF06F1E787DEF42A
610E75281447D1B20F0D8EDE5E0BEC400A624470B80644208DCE7391C7DE43E8
7335570FA82647AAAF3DDC1CB2A8C54398BA00BFD398B6F41DAA0D6861C66AA7
F5E3299C87A15CB357C2ABE940D44DB17131A820C6179A8F984CA14059B62F59
10268E28689F546805A26884C73258346B536931BE93C0DC2EE33F6F8D4F3AF4
B2C7D95E63DA3C2949D6149F60EBE5178026FDA78096A06C0BB879D45CE22606
7E71F8C21BA46E833E6C0DCF6556C1CC6A1C88EF8AB97D72AFDF3784DC26B85B
DDEE6500EE00260B500829D7DDDFCF2C960CC7D5E2182D31F96F99C09696A838
27FA6B0CF5C0E809C17938DFB01CBC782B05978D992E98804FD7D591A617EC74
03730DC7FDC3F6298C4728CE310104B6D8A1012797CBA8969611C3EC64543291
A495B9416E208F20774549A2D4DAF2AB5AC55D031A2A37B652ABE5F7552F82A6
C3CF2AE1EEF0F6378AD6C04DB0CAE2B540C9D6B45614ABFCF417F6FD17A704C4
668F6F80F90AB1507C765B5E26179F4EB2D5AFBEC53F03AB51FC8A49BFA49E73
E527E9A6488AB074BA7E1908A83110272C851191FC3D85580E60350C3A635A2B
883261095DED9C73630F0D42D0185E7FAF033AB7AEFFB9D6B061E38C41D5BF38
ECCF14EE2FF0443BF77799E457D5902471367E4FA2CBC269D90D21B62674F16A
C59608F55AF52A70D84B7ACC5DE6C22DF58627399F63ECFF4FE661FD5B546F1D
0D83A41379B0ECFF59CE398BBCF79F56450208CE849B2FFB6FF72A3429C7FA18
DF2FB726AECC1832A03C2287B65F6148263D3133C7200962174762F97B1EA411
C1B8981A6EA85C135F60246D47ECC90571044E7021EB41DD8C8A820D032D68A2
AAD8941FB7D8C5585C31DA3AB77AB0CD9E6DB66F4979A1C73E9CE4E8B2ED99EB
20D844D0320480F771183B302FF55667390AF2E314BC8E0AB736989DC06DEC3B
15060C553536AFA1AB550740F72AC56360C25E80658F0CD842A0503F8EF5442C
290FABA63B910F501A93455644ECF8414F66199ABA373DB1AEADA9FCF9B77F98
84F052D1DB422D245201FBD6463F31D421A29693C973462254BC1B1501FE2295
3A7743F8782BC8B2DBA7164BC3B644E9A352C72B094E60F2C49ECF4DBE55F1D9
72AFABF04478516C42AF46BBEBC7271938CE2D21625A631D4636B2687B403955
31AE88840CAA741E88F8BF6CE7C365D68A64D44FDF8C65B8FF34647199222AE0
EFB4DBC694919D4F41D01894C91D8E03F68DB551451583AE4A530FEAC44A63E2
B90731652CCDDBEEC5807B261A985F7377BEAA49275B5E62BC871BCFAE9AB641
783BD2E3D3B333444BEAF07554BCE0AD72E176552EE863E10B8CDCEE93DDCDF5
BDEFB5F08872C77BA070C12944DB44B28CCE75B08EC85DF704ED1096FAA03E32
EB7446EEB0E9E4470A70F8491873BE43639CDB2FF3B1DC5D4516A9D2E305965A
A02B8A67AEB04D915DADC1B84A55FBD86ED12309BFBBB820595FD3F8C6B22C87
D39591A07849F7BD81D1A1897D0D79E3058C84E75904A2D372069861B0601BD0
EE2AE975849408D3A7D043213910A9621B1CA0CA8E192532476CD8EA1F5AF507
CB853A32E8C79340838490E80AFCBB1340C523C7E247273704AF5EFE5BFA05FB
79F31A554D8BF98B8303CFD661ABF9A72CA619501FAC20B24CA1AA56B084704E
D9C833CD633680C4651B72D81CD058330680AAE27267A119885770C59DE7FA29
68D4647A526E7133745F72BFDF24F67EC83D687FCB4D1D87CC406BF76BDEAACA
47D04546EFFD1AC386043D6E178EC606C8B9D7D6BA0BDFB13866FDEF0C1BE93B
62AC49659B3B6867FE7E2AC972EBC0BF7AF09DB47C9634D586570D092AFBBF50
7E6262226CE73BEB52C2B8F5123551AE8EBBB2A9818EFA495DD7323AD188214E
C435BDEF282150CEB7A8F0DF69981E9492DEA2B5C5C11F9AE7F2F8CAB8A9524F
8E24ABDC6DF356C1DD844D9C65C3A5B0D92FD836D6D75C10FB83D7B0EB9DCE18
9314BFC6A128924AC8762D4CF64802A82227ED89B7E927DE87A8D4ABF3AC1E79
AD315CAA69F4DB314DC26ED5B60252DD152E0A13099560387BC6B7C2CCCAED34
7A6C741B8976945E19AFB35AE83098F89FF38B30D840A9079480F30EB64479F6
BEAD65DDA53F44B6905704CF35D7BF8C3CB2AFBE30974900CD24D7090BF490E9
977036461B66EAC5BB976C6CDA48C562A5BE309D5D926AE5C673625845E1981A
3317AF9E32156D67F7A6D7B5F711E2B3A8146BB249CF5A60FF387D2E516520C7
21520580C863AEB9F26D0EB2999F1D23C2A1D208C0429066EE18CB0870B0DC25
F2E3490F98D5B64DFD240A527264178991EBBB9338766F05519CEDD80DCFF585
F81454AC7D54F59C5D94588BB274601A084A49D5E120C8C3C96A3D38A88E5D4A
9559465191633CE38B7C706A15EA93F5FA7800171D760667E1336DDEA8CB227D
B52D3E7748E7BC0B19A3C64DB376D4861E861D493D49DBB6803FD753A9E42699
2ED6BC8BEFEEAD49201F5939C9A1AD845676304587BCD57E944930DC45B3A6DE
A766EBCF15CA68D755C30E02C012629BB5113F915EB1034808F6E4E32CEF72DF
AD9C60730CDB6C87A6D3985FA02BCFDFA7B2AEEB52D242448B756464160CC70D
2A8B16FE17A0A07AD7169CF5C854AEAA3FC89F4F032696728CD790989027AB90
43E20F807BC9C2A57259E7486479878FFEAF3702A7C45E4B09188CFB4AC98BD8
AEA47E49D5C54658E35E1A0E9807D360DC5F76FE4F4EEF7953730290DF568B81
8F514EA832662C580500C0575C9B3D97A8342333B1C402C5557E376495A1AF89
7DC7D31D93C6FA6BA49EA0881583D592358BD2E97DC820D7C917B3F33C12D7E0
B65E32A8EEA690C33C850A8BC6988EC285C91B3A101C9E6496AB07A84B35F034
8428B104B112BFDD85257EB6A2C747CF7113878FC1B0947296137880FD3FA76D
1FBCE0045C8F147537B7C2221103C664299A3E517523358DE4A06B547EB33806
C4F943CC8F1342FC9B8D75BB691459DCCCC211E44D10C0CE6B2EEAA9BD1DD661
97614EF00EAB92CBAC25AAB048F0EA0B18F47C1E9E569829577BF4A90C0A7A37
16E46F464A198EBEE6C791480ED863242A2203F226507612115330743692D0DB
C70707FB786ABB0F9A79907A37B4A5F808BDAA36990570A1FD4BE5ED75D83C81
74AB99A32FB1ADEB641E165133338B689AF6978D929610EB3B5B3F86179CB516
D7287C54E86320D7836FE742785B93336E939EB40A8E211CB5E4B0E9313749E4
36516518542AB92BC063CB94BEC63AD625D400528D5160C7E9F656D93EB214E1
FA04F01DC568F4E88D7C1F3AC239ABDCD32171C7377F7EBD25E19922011EF603
6096398D8D10ADD46B3FCFC12980C2E944AE9E2EC05BAB0E04758C7E6989E631
EEDAE0D53E90DFE6959011C9F6AA26EDA302B3191CECF5AE2FE329B0AAFDF00A
0A3C2A83A328B249EBF2C31AEA9D19FABD566C70AA8FF8597B279B8FD1B911FD
BB4D30735E62DDADF546DFC4B11F89A33FAA0EBEC92FEB04C3A6A0FE09FB8BC3
793DDF6D268B4C57CC51D4D02D3708076C63A492573963E36348F98BD220C176
86C03DCF62CE6FDFB4DA6EE4A4F8124CD521F9CCF02C0C514755632292854186
F14A6519488064018E5A6DC2AE4C627276365855F11CBBA6D747BFCF40BEAE35
5DC4DC23DCE672B0B37D0C8F4E9E27D5F96361BA1847D767D4558876E85ABB0B
8396FEE0C3327CFFE87733BC45355460BE4E0C5D87B5B3B91F8CD458C787BF1A
6298477272F3571958BB8A5A5588FED7F69020B67F532BDE5DADEC1223353192
A043D952F5CB93C8A1FDDC2DE18252CED93785F720E4DE92960A101294ECE75F
FDD0EFB23B07EE7D9EBB4B4121CE793F3E7941CCEBD1DBCA6DB086FC994070DF
CB8299304A5AB02D643D8B74E9D7A6776A594A9275834F2E56C9A5C9BD35B8B2
88FACA03564F2C662A9898569E109DAB60B870AD2E7DAC2D9EF897C7DE43E873
35570FA82647AAAF3DDC1CB2A8C542E79771FD1BE21B1AD5042B5AC5A138AC97
5E2059FE4BE5FAF5F1B4DE109C3E06915E3461C79E71BD7FE5E522400BBD7E58
F62CB64109E9856CFC5D2A62DA183B416ECEDE831960C3DD7B0774DDACAD3CE6
8D323BA915C109523A9DB78795CC31B01C879BB44632D8F9D8196B6AD25728E0
23C49ADD3BB95D63F623F56F201FF299364225E29BB235119311B9888D0BE96A
C4BFD340BCABB8EE5CDB039F52D3308C57734B39E016FDEDA848A63B7CAD7C0A
2F5871C03E1CC8E03D38E2DF046BD128D38054B6D0BAF61C28ED46A45A1DEB1C
93FB1AEE54042F3750D1F480040BEAD540967E39CFD1466F6E84C2E08AF87D35
0580C816D2DD6A791071EBC06CC24C5BAAFCBDF5B3F16C87E2E8174A8495A573
F01807A82D6A0C634658F1BCAEEA043D893C2BD21FB9293BD39BDB9385881913
1F3647E51B8F29EA26BC23A46914E13ABBD241984CF6E0EB61792EBB3A7349CE
7BAC7CD903D0AAFEEB0DD8B306E7AE7E80DF9BE7062DCA91768C2C9CB6EE2741
F28F26C0FE936EB5E26CAD7951FBF3D7B27121FF01DEA6F49C7A4DDCA41E75AD
0820BB68EDCC2143F284391BBA9910455537E53820815555A1051370EFCD4B05
86BD44046D11FFB7E04CC3409440737FCCF58A9899769EBE684B749A17A443B9
AE2ACFFB374247724A3901FD546D465B4A494E8105B9D13B930E62909CED0EB1
8DB2D17A7C0FEFD23E818C9577AB8678D40C3B58D8A7F65D9BA49E0247C27FD1
1908078F25132450F9540DF8438A07647427475D1BEBCA266753287FAA1AE38E
B626E9A41CDC6BE62BC7BC9D62D7F3EEEB60A6554A2CEE9C22560739C926926B
7A16A4418A1C3FA3F71244C924A486B70892B289F75F5777972A7F5A8E1ECA63
FC9A5ED285837271FAF6CC61167CC3D6024677A39CBEF701D77D05FCB64F261A
D82C47DA394592CEAAEE1849027B06123A1A004D39C1DD6D8086F7ECB0658FF0
99EE65B791C63EC6AF40656D93D61481FB63F546AA676CDA522409846E8C5235
8CF3EFBD549B2B38B435327779649370B565AF4AF38BEE8E5AA5E09325C6C95D
E1A7D7574828918BABA81A5F36CC8C1A9C5A9DC7ADF08C5EDE73C5486C3A0006
086B85593950165238FD9FEAA5AA98B091AECE8681999D7C8CE7081C6AAD644B
34DD12080D7BBABCC56B4CC24011214CB26E1441A1ABDC4C1D212BE976064F17
6A9CA3768590168A5A72E13F140863D5E14C5C8B11895AC0E79C0B211C49ECF5
311A6715C3AAB9D7A991233488B2D41B812A11DD5B13F2E8F21AB1CB20535674
6638CDD9FD68E308DDAD1FC23B917C6C2E033240C86703508D2380278FB9B8E1
24FCF0BA1AB7FCA5E3B9A0C63FADBAFA0F37397279F2AA0C35D2B3900A8A6A0B
93FD79ED65110B0037C9B5E51F9C778BF56A9F9CA83ED2AA40A257D5D2594D1B
D29C5695CA9B97CC29F189CECB3C8BE1C98DFC8855270D7C37776F70B8E51E12
F0AD378B8583FF1901B66615CC18E10CAFB985B78B6479035DA7CCEA54AE68B3
54F7978C76EA1140A78AFAEA913AE1C7576E2B10FB4EDC1C8E833686E124BE0A
5584281A2A331FDCB5970A75A2102905B8CCB2F61255AF45BDE940DC778D6F8B
2EF579A535CE2816498D130303EAC1F42151470F6C5673D7CEE75B91B36DB308
1871CDB3987169479C4D6825FFE9F98963FC566AE808AE20CAAE74590B3DD207
F1F254F78FF9D34A41EA24E7A2ACB665959298984C7776BDCC393738E3CEE817
0E3E5917902340AE06FF50AEBF8AEF424F2082FAFDED49499FC805AFD18DF56F
31BB926929225D3F1730662979FD709E8ED21757A638B2E76FB46FBEF11DC1F2
19E5F31DA8411BD601E70786FFEE4C4FD87018D4F17E60D3CEE00CC979AD410F
813119CA479E0C466DA9C531E1F1D1F093F794EA44C40A9D572FF1AE3E7D6EE6
3090EEC569D8FBEAF4E5CA52AF81F8F2FFDFB1AA787428233F8377E4E03E6CE9
471674E5EB30DFACC70B239D36D31E5808B877D069EDB2E2ADF1F8C6A9841A02
F0EE31E786B24EFF373C9DAC05DD3217C873861C7195B72AE08A0D398286B2FB
9050CA34766751BE83C8493F5CA6351ECB3F8570D5DE3EC220C719B63A99241D
6795BEDABC7C47532B4B80F77BF6EE43CFD08C9CD1F57FD3C2604EF52210F343
C793DEDEFB0A2B19553177632E74DA5ED29F290C37D03C0EFFE15D0917BB65C1
725BE19241996C2FE81439067979C5720508AAB6B59E6A742ED78CC0B5926498
262F41201EF43B925FA620025E4159FC4A6C89B54220134BD601C53369C5C54C
6379105192186BABC97E4C5C07911B3D5879328A68C16459A941EFDBFF08C8F7
92271EE9C90B85A9BD24D2510F29416FFCF7B4C92A8EA9C060291D0A00F104C8
75F42666FBF55506187EA7029300C9E7B5CCFAD4EDE9D07514C0DFE8924B639C
7E9D119A9E182646DB93A34C6058D7BFDF2C536FA78E50591F23802AF633800A
A35114F351AE56CAAC815DB850B08C1CF29C5F0DA0ADCD89F76167282477D4D9
1D9A68EB9C62616182A171EC01A441484B74E77A542ECC85D2B3BFA99F5E6438
A97F2F8FB45586935040E889C11DEB3E84C59C74559B378847C0DEEAAC9BCAB2
87FD70FCA5341948B40779FD7BF2C9579D2ADFA38E07BB733626913BEE60D66D
11F17D655B3524B3BE4CCA2120F5B010131BBD9138C551008B5D8CF5EEAD804B
9D084FAAD4A398EA1EF91BAB99F653A491ABA52B3E358AA1F7D066CCFCEE2464
5E5B7DADA2CA4E9EF1352A5C24C2862B9CE347649AF59281F5D884990D12A619
A30E746CB68E0FFFDF91A571119CC1E488627F48327E6424E3711707A61E177A
84043B79ECA4CB58D1A0084045083745CA0600B47434B13BBA570F0A4B9B2B9B
F0230B5D6AF941AF0D1C9D020A9026A98A890AA721B6EF5AB732D7BC7CD32499
DF1A8173B339F30E985154CA1DDB4E00B46D907460F0B1573DDA91557EE5BE4E
CB3CBC93A5D50D1FA412D9283C47DAC054EE6002D0453B026032F2AA0217FA1A
FBA7506FA70D8C18004EA974AAF3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890A7D49B0A6C7268E399C6C68B6ACC0D1E9F5B2
931BAF9EEEA6ED985835323E85D72C6A607A99212BA2DDD24D57809EDE36890C
F8121121306593CBADA65AD9EDED7740C9A2F402E3908B54CB4AED249AE575AF
E64C76BA802490ABB489275E5A3F2B926955B0D961A0B9B3AE205C074AA695C8
68FC2F6997531FC328B8FC65BB06C17B212C8C06D5127A14D7989D24912D1CA2
1FF37457E65829B6E1C65A09C1A101047DF20ABCD57E067A7298091C88C4B587
84409C67D00F7D95FFA0D125FB938B5762D912E1C0E116AA0593B1231FDF3BB1
498BA3D20DF13C7EC6D40091B789C9FB7CC872BB73E6B9D4ED8A555CA31581CA
0F057B10C7A8CE1D7CDD4FE2D5332FC533158B8CE6CD3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492847AE57C85675CF04BFD1410B56E616F
68C3927EA7267C0C4BBA87AA3EC7166170B80B7355E802532D38053D427DA3EC
5D297AB110438F9AA9CEDA887E63AD877E9208260AE6AF24100E2B365BF89C5B
679912C69C51E8D0541100E3DF71D501F4BFA0AE8260EA4119883BE0E2CCD156
1113CDC4983460A31A70C6614DA60CBEA3A564539DA028D46BD8A6C8E870451A
F92C3A3D555E94EA81503E0D53C0AE8AF190625DF8F48C433C5CA5E61B61960C
10E340864F2D181B835CC0F9C87C9CC0E95FB3F1824BF5ABE0DA3110FBD87806
4770B0F94B263E2C7A3D9DF14D9BE01BEF9882A1EC2C8DDA5931F895D02E4FF1
CAD0158061CC26D5256590E51541844B9AE3A861D6412B59941B7186BC31AAD8
9CC7F07EF9A36CF5C32F54ABEE8B83306227DF64A1F4E9B350DB04B85024FF0E
6FF4C8FDEECC5DF7106C24975E54928A3679928D4D84C98B3D33843CFCBD8AED
A1A74438EFDB0BD68AB2061EF46D65CA446C190A6BF6E0D8DEFA1E8EDDFB5541
473187ABC3D34172433CC652E9B2516AD0EEC9F452135D6AC8D97A90DD4C972B
69C05585BD438731D0DA714733FABC30765D6775BB68C69704D0BA5D6DE6BC5E
10342040FAE3CA1C359295C7D2967195AFD2D94BADCE1E95F17F0F95B5A683ED
8DA83806CBF2B803C94B5A135004A20823158454E29255E8846AB1AB9E444B82
AC000DE047EE32B5C7659AA3999D8CA1D3941D1FF042DCB7834420A2CB78723F
B40B625D7418A892CFEBFF58AE1CD0F128156868B917147969EF8319C216ED3D
620588A8D3D13C4737BB89F1FE17EA91AD0A119E1754916E4957C40F7642AD75
0E847F04D456B101A89F4E76E6BD785EB1F605D78CC0AB1425CEB017B47C1D40
BE68CE2BB94BFFF5120F91CB493BAD5966F870FFA6AE560AD6A82C3B0AF0C810
C12CA6C41677519886FD5CD163D6FB351E2918F4E5B5D5A27FB8E57A24EDF9D7
42EEFF2C7558A4479E25DBF75353BF0CB3E744B9009BFCB1D37E21EC06E4D7E0
2762A656C0E348FB75DA17FAFCFA53893D1ACEFD8C3EB97C9E7E5C3C5A303193
004DF6B0E2446527C65DDDF917C6C8B730247D89C817FB276D85EB671AD64DB3
4BB09368AB12D82CC4A183ED86D2841E499B785084AA21B81AF837A206A50773
FDDBF92515FD7870D5A35EA64BA957FB2F6990DCDDDF2859681D7B7D5566779F
26081CE1DCF8FCBF985B41005EA0771D928990C0BA6CB7E33875B819AEB1EFE3
7A3656C9B2060A89B3D1A0ED127FEDDC4387DDB2E10EF3FA3985EDC86947215D
585BABD246585FD44C7FFBD5B878504A44F08C38AB4A35ED5CC53EE38F810C49
4CDE233ED8AC7E692EDA8CE219D733D37296CEE1118362904F622FC22656FA58
65B5E26CAD7951FBF3D7B27121FF01DEA6F49C7A4498656B8A12ECA7752E0477
CC7F945AA8CA30ECC8B017D3365E4F2C4D6F555DAC9A6D17C263F63D55D6424C
58ACA31C6B17A617B342EC92A2FB13D4FDD77DC3A85B2508B70FEF36DD289991
A16B4097497EEB38F0274AAA1341AD3BB645B0D7F97ACB233FFA576119456D0E
E8D5F85BD47E3C79CDB4AD769ABB374D1B705D61C428B44B213057725969D808
B280BE2A969D2207BDDCAAB6AB26EFDBF7E27A57CE61292AAD6582B3A661F4D4
8AFE06644856C8C9DCCC07407A115D6D45B7DF6929B1C79277F3957EA1805B97
8529CE833B1EECAF947E67DBA704AF3F29618A894235D7DBFC1153A5F74EED26
102EEDB139492E743E82CB61CEFAC99D77B61F60FD9B0C1645E399B20090DBB6
8DFAAF4C6C1919FEFB6E3E8EBF926C2A91C5281153D5B28BEE5E71772C8921D6
9D11ACDDE095D43077D6D8E8EEF114F60F85935BDBDDA3362A11E0BF7854BF4B
BC52EAEB261E696CD413485DF93CADCED318B5FA421EF0BC594EFBA262EB2C41
4E43D8ACC9CB195D12F3B2ADBAA0D95A443F525372BDE229F13C485324C60FD1
D7DFE515B666ED51FB61F69E18AF955D6620C95021DF41F66204845581723BB6
B76B4C3C2E2E5B8584AD015374BE36AC1E08E1C53C079B8BEAA3E0F907086AA2
3BCD6FA9812375C8E8D4ADF7A319E9EAC6238093C798878E5D558B30ADAFC1AC
17B04381C6754327FA7C65AEAC1A2839A9FF799456B6E5B9BF421E82415746B3
63938E88CA325AE4BC6B36475154CACD25A07C74FEAA2928802611B4AAC8DA96
F7CA93B7288B2491380B2F4F87646F6BA42247F5B593A0787ACF533199348D11
730EFF7C25DD5ACD0221075ED47DD6FE8909C387D8F02A88FD24540AD71A0FED
2665CFCF412B99167152D35BC0E671E657EDD876C39BA0ED4E790A79D8AD6723
4A2C9360790E4981671E3F898A1157850F48A5E0F299DD9078866AC4AC771A7E
ECE3275C26835080FD2AC78DE88BF65298A8EB4181F1646B5867D0EA3446F4FA
176517141B75FA51F69D54478E279EC2855938CB532FC260FEF5CF3FE05F4F6B
1A6AC463C1D1A24E7B41EBAD57574D43E06E13690F831AC63F570D466C8DE97C
2E08CC01056475E95FB467E2F3B08917792C1DAFD35FDA10C0E14D125C730ADC
BACC2CBB9BCBB0BB982F75ACF33109F8AE7ADE4954D0B1E1802506DBDA73CFA3
DEC72E83650F240B54E88E51C065039ED16C5B958CF632FAC74FB900E04B0B13
B26BFA8A80D5663FAC4A5C3CC6895C0717E2271C6A3F722B2F6C2CCB04097EAF
EF211683EB8F6FF2306B741C9455B48094D2958B832B76458887F0FD9D971D2C
75AAA237EFCFBE0F14F797E71B0E19D074858D2BB30FEDEF6C34FAC40779F603
770BA127BD4B9E4F5EC52314B25837FD118062685FAF4391CC91AC0ABAE56089
30E599D101B7ECAFC159AC2335D6DFEDAAD93A074010C5626DD9470582E82C12
2DAC32220AEE7C75A5BAC24E9E43AD56BA6B5B915CA1A908C4180B7DDB99E3AF
5C45072D5FDE12DD81276D7304AFF3059366F293191CE257782F236FC2299F6C
60070DD031F172CB2FAA0C0BFDAD40BD3AE7D647B0FFC9298FF9481A19CA03EB
E2F1EEE59A3D6E3FC23B65AED24295DFD94966CBFB46E98286E8AB5BBCC5A8C4
31D8D7BB6D38C459ED7811962AD08A130D7781F378AEA20293910A7716341DA6
4093C33CE11E30603EAD00851CC85FB116890A7C58F795071033711947B65B0C
07BB7FE129E446F1A58F097CC13CA9BC695F782ADBE50737CE43B15AEE7EBCB9
0CE9D7EB1913D307114496116FF0087A48789461E310DE9062984F6951B5AA2E
BC98536501922114CBB2D9698493EEFA925E555E776D6916E68159716FC183FB
83834CA958EF2A4210A873E6F7DF8F113E86D87F7B364763BBA1AA81F9D7B871
D7EAAFDE0578B3E819F2D472E963C4FB539A61127D80FD783E271DBEDD8994F8
A2E9F96F4F81D178EDFD36B63A9E05D8F4BD13318C16396253CDCB9E1EE7A887
8F02E0B498DE9C1A5F110347B7B612146B59530538023BDA6569691729EA004A
3D96F0FBB300F40752DDCE278F26B5D50F9C8BBDC7B3D5D144869BE59F0BE9FB
57853D65DB474E4CEB98EAAAE80FEA3557FC29E982F4E43B182BD85FD6FF9604
20E3B5F8A1C120887EEDD7CEC677E95307847599B02E5AF54BE91F662979D0BE
A1CC2205A8493A22D252AEBA66664B2A0FA2AD5C2BFDC446E8217D3E5D67616F
A9C8D25588F1689221B896E4663DCB2823847EA18AEC15EB3464CD20830192E9
FA76A8D8C8454C7E9ABF6C0F725BC64477D228181C86BA782F4FE02493A70F60
73CE5AC25BF5C0579654DB07E4ACEA3666110AE5DED90584F99E14B24810C5DF
7394EE947676E459D57DCBB3829ECEFC74DC1A1B3482A99DC90EB52844D07B8D
4D86246B30916CF5B9EB30CF2688AD5470018A3F2D47875FBB75E16CFFEB450C
B8BC91FFBE6C83D561EA7819C508DE4AE8DFA21E23DB7E05FECB7CBC4A049B24
336687838F532359D6FBC18512610FC852B07E15D4B247573263395579F2B2D3
3E0A136C429A9D806C2CF8AB15954BFF59B4AE356D1DB3175DDC2A6AFD06EEE9
950911F36A10ADD8ABFBA9D53C42A690A48B179E6725265A12AB4D9865210714
AD7EF694588DD4594813371CF6DF55FC8BCE3B9F209F7A66F4CC713EC85C44E2
C692AAC42C9E5003AA9AC548FF0AC943ED9E898E52F2294B3AF6C494A1A62A0A
6F8E820E383A2F9A9BE2FFB3AFF49BBE499A6E4A6D986438CC0F8950392B6CE6
1423914058FCDDBE245DEBC2441DF1AA6A52716A7EF812A28813BA8D3D655ED2
66551C59852C1BCDFAEE9FCA1B8B7B45FBB5A049FC399C46C1426F4FF72A744B
8EED9375BA41440D24BE8D533BC804C1C8059928ABE24544F41569DAEB218F1A
90A339268479552A5D4F025C0446A986C64DFFC2C0C909AC2835EF3FAF19B53E
44F7EEB341005187115312A76DCABF4133E260320CB39E191970C0F0E81DBEF7
772D6C5F077DE5916A5E4571236CB05E25C0B681EE2902AF18783CA81177E26C
F828FED0D16B16987D62B6E83BF9B59F90EC4E790133AA578C8AF018B06D7B9F
5E162C7BC6381459BB3BD8E8BD8CDF61FEF2585E482EE3E3235E4B3C55CB96C5
D792E2DDFD91D5D62FEA685E885923620FAA16910AA9EB967D0B382CC9929D8D
11C794E55DEC8F51B5D7BC7DD0F437F1C1A89AFCBF166B5E882C1009A9DB4ED1
9128C657C8098ED5BB7691BBF8C1F6EBA75C1C9C1670B8A568F69091BF0FBC9A
D619AF7C314419A4FD057F51ADDF7DC9BEC731AD6040FD9B804FA147488D0E30
F8841589FE146D0525DF5FB31C974FC3B57F01E1D7A2A2E477EFB20457C17812
98694BCB0A51F6AAD0A5B019A8F4C210A4EF832E7D6DF3E913A142458A406870
B3A796EDAB7569B0D96F4665D013427D282B072CFF5FACF67B4ADA7A8FF35840
A4FE3D981216B1214415D55F0490CC2304501060CD4B29E20116F74FEB99A1CC
BD511DF8BC21284CBB01E5147CF95A00E8E775BB357487584644F975CC568F47
3DBDE6278D74ECB3172F5438402E9D77EACBBE3D271C3DD27C28F754521E715B
EF18A179D64952A6D39CFFDBA38C11C7238C738370C48C50E025B66055E56D4A
8FB3ECB4BE8FB8D21D943D3328065A91592BF5454FE871CF4302F1550F56B682
1344308331EBB7B2E684B3B6C374B061AC0CEDB050AFEBD734238E9DDC831883
C93110751B5F8637CF00C7C14D8D087E4AB1D815951E4BEA2690A552606F1EB8
A796E8FA21BB9E5CF8DBBD8D831A0B996FA2E67F9064EC921830EE707FFBD444
DF0A703A999B75EB8351EA2396AE35A6BA0B59619C35B4D329A8522B1EE90448
387DBB0912FED5852BA7AA362087601A47FF693A1CC34AC367036829996120FB
18D883F38EF4131EADDE2C756C2DF9F395FD83FAE697F3A69B0A0D171444B807
727C458C55F973274598E7624305A0F7EBBED6B1E29CDB9B8ED28CF387644D49
A2010C5158CE82BD52FE87C5035DFD9425EEF795DD0B09D4B1C7EA0C98434FAE
393859A98FC0B3EA3A0CAE001DFDA94760FF7862337BB4A2C3A8C8803E49B607
12658E7EDB16D9BEB4252D67C718C2A4595075C1818F6A1EE734956DBFDB57FE
6275D1873E08F3DE5886EACBFF2A132DE63FCE4B2955A9C7950E7043D7750667
94A2DA0D72B3D7E787DD83DBED95F86B97E1E9D80D9E991753E1723983D4DE05
CB5C6CE7C221A2038461896FF0EBC22B776FFC66AFB8F4EE72F16F4A83FD3B6F
7C02C8ED058B4AA23DB4E4F368D5CD221D0EA7E1022CA012CE9760152330C73A
4BCA1399C9CD243FA385624CD426256168309F04A2D2352DE559933C8B4E514D
B0410B1E140095EBEA1B13933221F95DE894A8F0FB390C4649872B940E5AB4EA
A493F99CE2D3DFF0982549271B429927D4775BEB5A12F660844638B9EC5214EB
8B4F3B900C34193E943A90C06ED8D9799646156E1491E5521FC8B9CD9158D756
8229D15D0FFA4E22B5A0CB4FC82C4BB848D07EDE0C11344EB69D0A6F329CF352
2C81BABB8C9BED90F772BF2077526A35E9F2844D17BBDC178AFFB0DEB4493D2B
EED930887D30C9C040B1498E7EAF30501BB2121A750312941839C81400086942
7242D783CF8D51DF73DDD9FE1950DABD3C95E57686BFE5C55E13AC8837A6492B
618815B78E78BA5F281755B0743FBB60F2952D9041F7F6EEDAD2563E236C584A
BD904D7018A00F6017ADF508BF63F64AC406DF45C6C9B90489846E9685287879
2D64A7BEA283E698CD7D8B2DF6A3B6681C63BCFC14135382469123169E3DAFF4
AFDBBBDF75C60D2808EBAD09A641D93EE38D274EBF132E2F1C61F31242729A9E
BE877B546996C6520013AB058EA55E58F59C374DC6AD4AA8B125F40114881ECF
0A7ABE0F5DFBB48002662AF720242D74012508F26D394925F71065BCB57954C4
CB5A9A42C6CF6EA0D80B6A99ACDA48E5ED3A2BA43BA9064D59C171AE87BB22E4
707510F8EF3AAB303ACA4121E9C92051578244155F5D47FDBC558AB5F9CB60A2
B2B7D3726D4D06CAA2CB08BE16E35F416B79718F7C53E34C5057880AB32CF159
42D3673538F51A2646DB93A34C60583DA3CCDBFF4F315D1FBEF4A12AAB726603
8BD7CF8F237D8E9B7D4AB72F83176580F0FE60F48D70FB98C3ED8305C7906E17
50DC71A816B0D510008080A1C3DEFB220D402F3CAFC75D5A1D09F5985687685D
0DEB29A821CB8D0CF788A0F4A87C061D56CE72CB67E59EAE0D87FE8400FACF1F
3E0B024C5FFE6777D6E374B40FC2ADE40888C5DC808B622836891157769C8BEA
7D15C98753C1756AD232C556098B581BBE5842E94DBE3F911FD8DCC3FDBC30EA
F5F569682BFD37A002015A3CA98EDB8D21E8DCCEEB631E12C5B4AE0BC89376D1
7FC6E1CB89FF20F37A9D63DB60BD05648FFECAF31DC72E407853D1AA87FB74FC
58F85457165718FD85433B176D766529787C9576401822E81FBC89D171F58F1E
998F6F6425EAF3DDC27C2DA43A8176620D91D69F2D697F3AC5ADE2961EFCBEB6
37D3149829E56DF297EB4CF762927CFCCCD8863441581E252BDCBB85F9DDC910
4B5B07A82692EA39B64335B1371DC4203744C86A1FE55F5369B12A0585133196
1D8337208BBBBE8FBCA23F602F13B2F4140A0A7DE0827FA8020AF17A438014B5
902A55EE220152C90348CF59095C72D038B3D9F60F63119EC9FA765E6E318CA3
DBEB209BAE4A346B1573B9F02724722B9B749AFD87E637298E20865B23E8DC25
0FEA26AAA18C12EBEB518B524263D2C9A297F3D2EA576DC9E9AB838A0D184D14
E1E112167E7E9A41383D1E637D810E78678F9166FC7E7F6EC4C44D1218401AF3
36B5C26808EED272D50566ACA940200C2A29C34AE6255BC79B73AE14B980A7C3
576AF66C40AD69A0B5EF27684A63D7FB96EA45D8959C5D6BC64273DB8EA36A61
BB73ADE94DFF249763950EC9D477EF37462098578BCD5050EB47A9F4313EDADA
4845CD6C7649564A05519BB0C8190FA1FA8C8A21B412B32B89A8724FCAEED38C
8B1BBC8666F4AB0353218B1EF2EF6FA0945D460346748DF6F2348D53974F36F0
573D00544F9FD5CD4B75CE8BC658734CB89DDB09053B640D5611AE18FD60FFCD
A7ADBF086EA835F99AE0AE421D0B583CE26F2B3E4341BFDD5DED06932D5C8B83
FF8F16ED7860E2AC635184580D8132CCA0AF6111583071A340C757238502B22A
BDA32D12B10ED201A9F192758B996B3B8750FCABE43134590D81873D531DF4FB
838434FC4B7205820501EA10F1F8FAC9AAB39662E6D137560A8363F8D0B481C1
616FBE5FCE6EDADB8A3512329E3473F6983DF6D128262C61AEFB08395942723F
B853550238DCB92FBB00A1B5B355199C17D9C926280C366E3242D2030B576F5B
7898ADD525D581ABB8022E13C0E2E4FB3051B3684E4A333DACB4F23F6BA62413
A6D32AE3655EE53594884ABCD94615C8C45631BF269CC8B89441B674EC0697CB
2FFCE8880D6E88FA8F5B9A516ACA5FB0217CEF8518BFCBA0E1F92B097AB9E1FE
029A8B85F8063CEC788CAAD96571272F2417961D71CC4D1A11BEF388D2B7B077
697FC8F45135A52671A60B1C9951D8A457A4F1CB344477D7A651613279A27B5F
A35C5E30A79F2EF46AF98FF43B1D23ED27CF383E1D949E2E806F56EE5F2956C6
60D58021CDA39295E49FEFFA417DE903CEA643F8ECBE4C52A10C03486C11590A
041A3D43118ED30D3D9000A6AA1F71D6CC6FF0552DE54FAD85C8563C2D5E37C2
92467A90463679A22F07BD45ABA49269C8F547DCD6E7B147D53DB0D8DB88F2B6
25672774B9DE40B505BBA69415BF46169186702A6828A3FB6014FE4EF5676585
5524D5E38F1D85396E7C5D3D5F65B030D96696E6B035E3D0FA6ED6AFAF2E7CD8
1AED5C8C156F496E90AAD8D12B27CD9A0FF9388DC5E45F3BB7BCEF7FB672D76A
531AF2304FF9DD076DDD17E49F3FD8A4278774EF42F36DB75065E8DFA797AEB6
B3D26C3BE81355AF112486CDF5154ECE9458FED3291E6FA8684619451A3D0928
F822846260B9E135F2D1F9DB9473701FB1941A761454F981D212A0F30B03983C
AC63F64DBB5F3770C602E6DDD5BEE6EA025A114951CE9D70C78EC698ADCF1394
7A866A8ACE63BB825551DE199400DB4E7D4AB056669452D995D8DD5BFBE8F5A6
FF5053D505D1698DB2175A63130FCDF172B811315B95F1620CFF75BDFD5B8B63
6585D62441FCD0648C2C588E1A02F0EE31E786B24EFF373C9DAC05DD3217C878
8EAFFCF4E6C0140240A0B3FF8730962B19E76A7776F3E220C994D8AA12E1FDF5
D6FF6726DD3D075DCD056F028BCCBDD5F0AAB6C7A4A26946E9BD79B50A9825D7
1AECDA52F1DE2CBBB2F3B2D3F3B7005E9F83E783452A7DD1F046B4F20C79A703
8E473F435DCC8DFED5B9071ACAB3D2F0D0D1FE3262696586A92E10FB3E8D7353
FBAFA30876ABAAF89F14D3B913E320F9F732DF9D07CDD357005BC7572B9FFDD5
4BDD8C7F84484031FFFC0AE8932A6453D4D1203F8C21D9CC04E187BE53F8FED4
F33633BA03A5B542D1BE7F78CDBCE9F4F539AB466232DD51BDE9E85544E74C71
15B5D8DF47C67E367D2376B73CE5E992441A5882030B5371C2FA2214F61F7C12
4EB9A5AAFB7FB94F98DE796F440720BE08EE3F855A597B65071E7946D81AAB3F
D06444FA5C990EF446A30009A7DEBE36A84A81896D791BE6B07E1C5BB164A336
1765B4356C4E2C8E6EDA26F384740B68AD9FEF4DDB7A1169F5A96C3FD32EB205
561CA8495C2305C7DA7391F7F20453206FC27D3F8F03556B04D3058151285328
89B531170C4B10ECD0C976C5C57C1A5E6D1FF41C00075B1FED387D98CF7EB113
74CF17ED94BDCD8A5E225D29D4532B042E06EF181E6DA2E87ACAA46B2ECFF8E4
01E4DE643F42A229ED49D981E5BB9CAEEB8D2DA4B491536CEF9D1E9F4FD8C000
3E6F232B9C29ED20A96E8F4430344988EB94048545A761892E4EC316366FD9AB
35CEFAE60FC97C6B9EF843CD60CE8C6829DB25B85BFD07F9BCA9D7C412F53575
5FFA6B31BCEC39D7771548F2DA3B490834E7B4CECD9293A5DD581A366F684DBD
F2EB65869969F265341938B2C7D6B979342B322DE808668DF5ABB0728C7DDE3A
5E9F665AF8A5A7AB27ACA281E4E34420D1FDC40E678BC42FB3835475F0982242
0233128BDB6370FA61522B51536AD69F860DA406BED287DE8A6A3C971A03327F
EC53F1F43913282D7DD34E26931ABF77E16D1B0387843CD39A2AF0EC9B516772
5E2685F1F06DBBFE0A4A8A49285594C95F7E8C5822996DB8AD4599C62078A6A0
650913BAAB932E8505934C93832E6DB283E949A747F2B0EBCB16B82465560BD2
55F425959088EDA3A1565DAD1C08E402BD6CF4EC99EC3CF15486218BBA826D08
81E6FB959DCBA34B5F5BEA5D456E4DDA33CC358BA38573B99A02ABE929131575
2D5A8AC1C4119B6475EFF13E12A8EDA3E0ACC243B1073280AAC1C1B2549CD557
CF4DE95399C560D65DD1CD2ECB3FC3588A500AE15B9882BDC14A6567C19ABE55
F8186365B30BEC82610797BDAFFE1E626FCD53EB2EB03400B20F87FAD8A94A35
ED5CC53EE38F810C494CDE233ED8AC7E692C73443AE9B7678F96A4B3894FEA6D
990549345DBD2BFA8C89C793DA7E638388619EBAB9C62CB51FA723C5F229AE2C
09974B99C3A0363AA5CAE125EF0F3B74E35560D0B231205AF784DA0937C74083
746CA9A8557DFC573A22824FB7F6C1FD5174F5EC78D1B2379918C8034B08588B
92D8C9B9D63AB7EEDDA82BEDB23912C45C282783F677E288680B06372211F15B
3ED73705851BBD2AD9D78C61E257ED1A79961C8A15842664D3F1345CD967A08A
9C892B1339C0C1ED728808427CE96611D1F832FA6DB2B87A9EA0936151A76B2D
60E7A7AD55991FE366E1D0CBAEAC7DC7463CE5C32B054A731210DF35A32EB4B6
13956533440D6F4166BE43785529DA66B4E92420257742777F60A996D34837B5
A08E55E6319BE14383542B9F6500CD2EB472035AAC02B40590A2A6EE2542B885
DDD5652727A71F930DD572CD605F5E64FCB19D176C24DBEDD2808DB3D1E8F514
2F182D1D02504BED42472B74E8F6E1B541E44105DBFCD5E9907E38EB02257D7F
32DDC1190AF61B7142FD2DCA1314503CFFFCE5CCF041A02877B76050B070FD54
163C94B93A4C903A65E8C8A0E10F842B11A789F73ADDE81B0A41EBD0CC6D71A2
E4B5528296D8827B8E9EAC20E5DA8ABA2868658526B74727FCB164F21405F989
CF11F66105F277E5B6745FF4A5CB0EE90FA42E1529406CDFFE24BBE088A6DF3E
E50851FEEA89C68E3509FF99EA8958F60B40D0CAF340B83A047FE949BF24C35C
73E756B55B81368A8E087D65343CA790BAF08FF13A5A6B687B37F0684DB47B80
5E2F60779FF767AF2CFFAAA7F2FB1C3EF9D85D052DC85A50080668D9F648ACE5
6F31BE505D1D753C4BB8B8E6121EEB51C5F469E6A082DFB54CAF48E691BA8E4F
C3E80AFDD7EEED87427C6DFBCF224D2DDAF51A2A83110DF63D5E2BD8706D032C
5C1D499A9EB93CA71FC9C0D3222E949E21E430D506C4D7F6CB65990B7D718F6A
16F933DDDC891E9BB3F41AD0561F50EAD7CB37952D1A0E9F744FBE8041D1C67B
5DF843E7DE0BBF8EF47E09F7E172C97AB5684F35F88141123483344E4BBE07BC
B511971D924EC2D0DC801240C409EEB53974A69D2FC7B2005207EE7676D8ABC7
2EDE87A09306545DAE42BAA134F0D1D50D98C4B17E28D55329F184C1F36006E4
DD60A05F12E3C18662C3C132C54B43C4932B82A848D79FA178B893E3FADC5383
5446557CB90E0346E0F7873BA3F30DE02C2F5F77E8E58AF5B70BC1EC2FB01B6A
5F8ADB04BA524DECE34673BD7636EF84285AA5A62886457112DC04A0EE3D603B
EA4173B7EA83F83AE2F256EB21595E795B727FD7B5FED0B59CCC637AF638AC7D
852B7B2250F6CFBB5669C9112FBF73546BB2A29DF222ADED151D6624378D9C44
4A193D5360D0EB94F2F5BBB81EB4609221DB705695E407C55AE38716D47334E2
543ECE021E45E6D60B1DD6F4C4423D10F8A2C8A89B4E66C8E5A03D5F1D98DE47
AB51DD77014C2925FF93F7AFDAD204076F8CCF230961BE8AB89D792D6901F0DE
3548EC4946749CDC981002C4414156DFE0D783456D64108F44975B7A94588215
878E6866C71C6FE5F3B46D9BBE04511252844A19555227513555CEDF10543414
03D63F4A900FE2081725F4AE20FF5356642D5BEFFB62B89023D94203EDFEB2A8
899B078698314F0898139734FBB037A7CF5B0F58B4C250F283D739C2D2D12DC6
CD0C22BF4219A75D70CC55783504075A5F0BFED5601BB39B7315B0C1AF942753
C52402014764CE7026803F091EBDF4861ABFDA775D909B05A0FB959AB1146098
A7CC2A67457AD6CB7D3DDEE35065C082B37FF060B6DB75AF203FCE65FE185C09
62BAB12D247676FDCE51B2C79A29F57C5124505A7590ADB3C6D261F6D0B58632
0E85CF476D0B162196F8F409DFF33F62508230EAE1281A7B86421446996DAB1B
DB91171DCCBA54503E5E8F6EBF7EC53CAC51BA379C35EC1A698AFBEE2418D653
11FC748E730543071E483CB942292F144313A16CEEE19A8176A3B9F67D361BF4
7CEFB8F2203590D105D3EE27FC276277140155EAAE420BEB437CE4A6886CC434
55C6C44E9FB7F55FD5649526F932C9B00226AAF44834DA5F3BCC3029DB39095E
006F4628D71C20145253BD827ADB43D157A1BDFCB3233B9397ED4ECDF0C8D278
4D9E8AA3E3A3438942BE3BF6DF3D26FFC17845211AFFC99BC0615FADB1F0876B
750657977FA8F1E3C0AA4E3FB3E64340399F7B2810D439A4CE8FF9761622BDD2
3BEDB1289D0B7B0C27123B55C2F4209D41008584D584E4E06BCFF708B6DC29E0
E0E03461C073EA8E43A22F4086534390215FED63A94EEA0C4887D955B77BA7C5
5EFB3B38138891E1078160934A07D13A3B9C6AE78CE43A7E74F4BBDCC8CB50A4
A1642F77D8C4203897CD46675836FFD27D21F892B9AE92E8480F5B8A2AB1B87E
18A5588E6A907AF195C31A7F80552A353CCE50E1E3D5B4912821E726BD4CBA7A
E8BF83E11DFBCBC20E2347733C68B1FA86240692633B1D061E66558B3A7AFBA7
2B4141D54BB3FBC97F1F26859BC5615820A12F398B914A5E27BD67244BCA4E87
5FE51A2A573933DDC0056BA480066CA39B4AAF1EF7B066D049822B405C667ED8
305E2C6105F85780C59378BAE88F6E3EAF3E903BAB38790E872C8ECAC8FA49F5
377E16806EDACCB60F0D8085FA97FE6A841F7AD545C10EC243BAE06197E7A600
CCB5DE4956F13B7E598C705A4C28040B982EBF8250E2EF13C18A1B86461FDBF8
ADA276CABF16FC5CE0C3087455BF74C79507530444C7C8AAC598A2B2288D64B9
D5384687A38F960A75AD6B029CE449BD451BD75C00203503CC0B80A8E8C9D7A5
F3E6876D8749057C28295C55FB536E654C5418E4E2A9FFC314E60ACD98922938
92F72997719E01266BE34482CFDE753B059EE1D54EF4760E6C257B963761A7B7
CB8920486C5AB09645E68649B3497239184D77BB0AF68D6593D359322C4D792D
B8BA66B57A82AF52A14DB5E7E4E7082C0CA07D5E9A31F28B335C772B3FB6E71E
7B82FE1A1FE96A25738A5FE7D15D283886D8B4550D5216AF5CE675A7E8121B70
EF238C02844A4745A9E0E780561D4D918ECC4F26556D7835FF8DA7C3558A76A8
D40F18478B950EFBDCCBD7C24BCD9D271970877809E8ECC0B546371F42D526F2
6185F9631A24B4C88F54F6E386B7565C46C8ABC422329F20B76083DB67C2F4F0
F154AE98EA8E666A53D857F4D5C130BA4356966FE14A7BFE04281D106AF47A36
9FD837A4EA20B8EA00867019998D53EE3E998750DB1D9CD8D754CAA18308192A
B2A3469F76B029A4604EECE3DAB2F3957195FBD15C97D2CF680F1DF7B6F08645
D0C7527A3940AC414BFDE87C8DDA445E22331B5C73D8B6749EC08D9B25CA461A
143FC89F25097BBA23C84E6F71E9149D8A01E17B8C73E6DACD1FD47CE9225F3E
B8E6437C1A8A9DDBB4557623019E6FB9B0BDBD8AFB145219A207C2F618970362
457E52FF3797CA7BA9FD690E5F3A1AD03483DA3CDA0F8FF9CED9E266452503D7
5612D7114A91B9BB0B9F12E4D0A3DE9A647439A026CA9E23E0CFF93AACEF633B
0A445AD231FDB19C2FBB45768A6C443C955FA44499C9ADCC9AAC07975670F955
90FACAE109E3164E9E59F9F5E775131DA3EC1AC67E359ACF2EB95779DC092A47
61372D68B5C888BB48C0EED0FBA856E64BDB002313122EA180EFB28362F331F2
53F572E170533B5FBDE0C72DB5AC6734F7548280A538D05486579DA3C8B562D1
3D7A3536C876C3B22654BAEF120FFD1761816B7FC406E472742AA1D43503934D
2AB44C6F6ED820D24C091A9DA3AA7FE26DEB52EB00E510931C7D781B157C14FD
CC3DBBCB25FA2BA24EF326D4EEB5374DFA480545EEECDCDF3B960E36DE0E0885
7B1AA54BB4B6E57803CDF332DE408840CF72D0EE804E6C19CEF4DDBCBAB9A902
D5B73D6605F46A7D59A0ADDA82101143E2EF716544F6AD56E266409711727FA2
0E471C746353B102B14565A533E6707B4F2ACD9A53A82A1C6CC7D2EAA301850D
7F00E3A0719B5B92A234B9255C8B6A72CC841AAE9D356894A30487EF70C04E9E
5663B793E342962287D2D8080820A84212F8792834B27FF167BA8E3814160E3A
E63E1EBFFF821BCE2C07FE6FEFBE27C374EB28DD3D18F3BD40BA8EA7BC433CA4
A65815CACF238B5E83630010DBEA1DE1CA8C382FA1DFC7CE4DEE14D18B91BE9B
750B8CE237001CD8660514FBFEB3FDC9F4FE2450619CD910C7776976F690AFFB
BB20F869EB8364C4FBAA1A4A31D4250FECECC9CDBB7FA23BE4662EE8C2C21A3F
3AB2A52ADDF6EF81193333F6CFB9EAAE7981DC78C5FC2923DD3B2F199E1AE1C6
D74E85AFF56B0F9630FF48D6569DC5C166ADC35B438148FD88CAC7D4E6243535
75617ECFD62D7F0BCF8810CEE73B43EC6A41E7A363041E6BFB6837010680AC5D
3433FB8B7E767EEDBE85216DF3587684BC96DB5E96A38D14AD2FA5FE4425A8F1
9A018CF899FF069AED23E504BC04FFC018CEBB67E2EDC2AF55DD26335A3F1EE1
B3A7747CD20BCB7ACA61F99BF4B51C28929BBD7E98239003E3F2E97C859D6375
940E1223A472411DD48291CC4AC4D8C5B818BD5558F69C9F18A6ED9A2EE8AD8C
967105ADA428F8668C6876E80725722EBB4E8BA948356B99199530957A1B94D8
6676E70CD28D0B2B29F75AD9CE2461B51B36D1C096585259881C59BA4E256B9A
6DFAF71E019677FEA134F256FBE5F9EDDDECBC36D9FBFEA7F7CD85A75CF1549B
FFEFDB4B3974C4C199518434D3EACB75DB20761F72B163DCC980818D76A39CBE
B2C0636BCBD41464F158A14D49099C44D3F1FEBC7445069B39923606FB141154
7A7A0703356F71CB381B7BD3569A90EF296B8463261734E1BA5607089C0D353A
F6D0325E404404B5B7433B73858600C7D9DC544694E25F259B039558DA3043B6
00EDB9268E0A8B9301F229A9ADBA4CBF779248E86098458D40AE087638149722
F3414F0FA23B54715729F6AC43A893B06D4C1B1A2ED7D867E63F2A5B62CB5D1A
3205734AF784144C4074409954E0806E82C4A3A7E14CD4A07C37714DD789295E
507D42BE4E78FF6BEBC314FEA53A27236A46AB24161097229105E4BE30D95B24
4778A3821F64D9F69D584E1F9C1C789D15800E87C13C8486D63DF3B43D74C9F0
DAEBB8D7EC7191426647FAC966F763726B4DC2F8A288DF6D92C713AEF090E37D
7A5C47E35AC362A6032DA5B0DB6DAD348E1D304A81D1F1241E39637EFDC805B2
66B494001747473ED6CF5A316F80CDE69FF36BB566D39FF10CAC9F0082158E1A
0517F838BD16F9FE33969FDEF1FD3DB14D307271D71C0F9570E2454CD0FA931C
CF6A09DF10C3552B8D09E8C0E4319B80B6F6FFACB0915BA0EEF183168F597E56
409ECCB9672C4385AB7DB5759EB9A8ABEB739F30796C00178D6D4A761EFE00E8
A4E33398805533F1C96F3270673E8D2C695C765C984F8A0763A9D322E798ED9E
B924450A6263805542515ADCE924A263EE9CE078B4F50B4E03D47E131F705ACE
1F1E4D1A351863F5182F49645523D2E739408E2E8771647EC1EC6A80A3B741C2
F742909E65CF8CB948D97017778A2197664DF2B6B25E90482160BA729B398266
85B01E9382B35EFF5E5E5A4BD25BF8BBFE8DAC74753A17735DEEBD9EE6BD04CB
D22523F652AE1608DF41A7F8D83BCD5114807B797E81D676F682A7E0B87BD7ED
F07641C6F915988A1F3FAC7BB1ABB2FC3662D7BDB1472024DABA02D3036E3C56
FDFD630C2E836FE1207E4025C3E4E34BBF2B0C0CCADB597E641054899B9DF267
A4626709F734983ACB1A35E9C925F08060154641171E004139D9B9353F0D0650
70FD4D4810458092E38C6CD918C1D0025429090C23E290BA927F2D9A8554B726
F53ABD16760FB494C4AE3C2F8179A759E738FEA4A81F5B01AE5C57FD7E07111B
5F117D03E20D6C49B014235DBA82B883C4ACAEE5D1A655A2B808BF6DF4AA8240
70330087009DE3AB4A436DB8AD3A5B48755368AEADAEA4682DB15E5CF5959194
AF77B0056448B526367202F9D361202F7729837A2C5E235B9EEB49B85CDF7597
E5361211E1B064A2B5E6832E5FCE4A6F5D318B60698F146051DF226D7574F33B
ACBE0B4455F25CB9E6F2E8D9F8B0AF66C334E5D66245DD758559850CD61902AF
8557B059CF6DB7CA86506F6D13D84990A503A9E59226DBB7B395228D86C24D5F
94B17E81EE67F905290B01CA30CFD5609F32CDDB1ADE053AACE3D2D175357361
23222EAD4516811E7846FF9477B1C2D24688BC7A7C26CB2DFB32C5C980618BE3
188A8EFD59F88F74A36899CC66DD9E136DA96C72329B34F6D0492707FF62A1C0
B372698442D8089C34B407A4D031722D878AFA22618DB80D3CB169D5BBA27885
C10F43885A2B49B3FCF1BA5CF679A006A33E10AD69FE8EBC96DB648E24F951B7
3C46B30B4356246D90F24C85320B47281E1E9322FD667072EB171910D2C7C3F3
539236915D37361E9AADD7B53C66541D515D3954B61624BF6A70EFC0FBF28CD5
69D4E789466852BDABAADD6B9E6E1B71655C46DE28FD9FE2B5F25E776623F737
A0D08EE122DA0A83B36C935EAEE6D3056D6B3F07019B87120B2714974F3F07A7
8FAB2EAB1813EEAE53B96DCCCF2858B06FE5B80722B88286947B7D2ECE41CAD2
F888A692EB2836741CC0B047090A1B10109B5AE0C16D868CC30CC4004DFF24E7
99B92CE789B29411267EF7D60DC3B8DEEA5012DF298028794EE44E22495880AF
A61CA6C0A332F4E9248FFD0C5870D0B0A7B51B7A7ACB4FB7F2FABC28F99E1829
25D5702B4B8B60C24B78321DA0E49E61D575195A086DA3B9B30368BC424AFAAA
E635EEFACB10EF92053C4E1985A7558700723D7138FBC0C771A0088A44CA6F9E
B5B8D10FA03C91EE88640364F06935BAB019A8A458D1E15C73C773049AA0B311
1E7F2882D36B5EA3B58B92F3B960F9AE9052415697B9DF01578D62B94E04E313
44C358799168243EB7B2F0ECFB3C93055DA550FA3221DB91D3B7D66000BADB65
E024E2A65C84E2F7DFD58D7C1D13335BFA551C7AA8FEBE5AAD23C399FC3DEC55
2C5AB80BF40359767B2BB083F594B08B06C79E414BFC06055E868BB4CD0AC54B
ADD8FB546DF24B9A2C8F9E8352D3C22E8907753C921FF0598AF7C64BC32C446F
3C93C53F423DEBC59926FA727348F9782D09D8241CAD9E7282132A9EBA5AD775
149B9388DF23CB03838434E71CA9C1F66A0CC5EBB57A825B1B3EEFFDA0665D3C
85DF3263EB6D6A7696EF87835E12E31208F9C7E9B37C2EB88D4DCEED328F3925
D37219EB34EBF6D5EE45A12A0560322DEDBF067B9FBE9819BA481C26E0A8D432
E21F2CFE9778E7C087046AC9C3C75DF61FC8EC07356C7560A1867D788F0E6B67
BFFBD2F53E9C8FE533C417990D5D7E6F0EA6F80300483024999D602EE157DB54
9708D62294FB55C0A5E16831BF336A0A85981848F520069A80AF31939404D223
2734DD9FB0F3A539F42358B542AD8CFDA1E282B289FA3DE389E77C6B91723B67
5C7D5EA4B1216019074CA9D3B0648AFF88BA90F07D46D23B71FF838640447E29
39E45BE6C0CEEEAA6911934240E7DFFB0E10BB51B9814F140C8AB8D726AA1A25
26505D702A56243FBCB83BAD6CCB12C9C455F16A9831E42DE0F3862D618B37AB
1705F42E8ADE5BDE0E951972EE5DAB534A95B3EC769045E2CE5BDDA7CB599B4D
CBE5BAA80366BDF9D4062F6A9A97BED4C33668C231EF31A4D5750105FEB6F0C5
315E7AAF67C49C09D66073588091AB5E19332753571254DD3A14A070B9DA4B36
79DA43022E19A609C7168214D861720468144F291D2991B719A3F8C3BACF3D60
6BFB2A3FC73EB83A3E7984743EA847F29E4967EB850C15DF919C2BF495A93196
F93BB0E3A2184CDA56922C0E02966CEA4ABD3D8AA021C94D4804179373D43755
02863D68E85EC99A826465F62C55275CCA332B58B295832B496336FF017993FC
C20F752A75DBC5C1F18BBC9FD02B8026C983EDF570C8EDF0185B123D619284BE
DF7FAE632E5AFB1C5BA2C367DDE0217905ED115F45A015D400E6395A712D0F82
A4DFCE1679A026F965A5D65931A13ABDF1F07CADFC0A02E247F0F8B1E679E83E
9660EB6118E052D9C87EB520025B2DBB462F7AE184B05095317DD21F156F2ACE
F66376449B1032429525206DA26B31D7F4B51F72CC927B9A30D0FCCE780BF37D
45470344CE40695055586AD4366A72B2414D0E74749AB9690AD6C3A67F35A3E3
3FCF0337F2A533E1B260491608664474B7827AACA6479FE810C0087393C0F758
165942CBC9098729C380461BD3BF4DAC53134D73C6DF4CD485523C6C30220854
78E47D593B59DE2C4C37608697713061643A1D5DBCA2450C0D651B49350954C9
5C447202C94B089B617438177926F89DA5ADB8F0EE8F6AE29549E641EF0AED2C
3DDC5E2304A558489D2DF4D57CCA1B79817ED700184AEA1CD34B84261A0424A2
BFED7B2BA32971EF5D48A34E9133219028146CB50F39774B5B329AB6BC0C06EB
579398EF2FA4684083431ABB0821EB70D4D9AD9ED2EFF81B7A5CF5A19E132A56
B4AFAAEE33E5D55AFE1205A4362BF8256BAB91F4638E2BE26D899288157E7E57
C04A292072576A26FACE3A2E707237A79F266F540642EBA7AFC8BB260F79189A
85CCBFD273E93DD91139FA44736247CBAA584DF9909E1E05EBCC133169295F3C
EE1F707762CA0290784331C4D9FC33697A94806E8FB783F6855EC5C5D4BEF9C3
CB7DB1B40EEC9ABCE32C3EDEA24141E47F4C7745F133106E2F150CA27BB31E48
19188EF7C7B94EE254C5C262752F8606D8B4DEFF0CED1582310E6BF4F054EA45
16C36407059B582F75D5CAB7B130C73F9D65FF2AC171DFF63D0408A89E38833E
6EE12662CC52DD74C781C275A64866050629241C6ADE1E4349ABE2CC0F7A2E21
7083F7B4BEDCB411F79304D800E495F773B236286E0934DE7B393AB34AAFEBB1
4A676DFD366D2040E383535ED654FF066474763370EECC9E1E60195986EB4C4B
CCE690A01B71A190E60C409D96FCFAC6083B4139C3491AC8990768F69A943132
056BA9FE6146DE290F1E65C5A2810C6D9292F7ED1BCEB367A81D0EE58F534072
71F664DF622E4324EC5DE23945C962D14B4C43DBD71C5E4AB4ABF47B20707F3D
200AAE179F063761F91C17B9F561BA8D3A3687BEC36BC942E91F03166C5A4163
C76383C6EBBFB2B61F60ADE4AC29BFA12B8A9C3BEDD33FE69D6558CE5429BD2A
C9BAA5019586E98B7205572FB8A8EB2CCE054AFC4D73FF52C97D18B05D9C2B34
4D6EAAB037E2748184055EE3DFB72E1FF6C849E4B26C142B2E1E8A68390F0A19
94B7689E5EC50C3200E1D944D4BE130095D4761953F3467F8D6C971DFD54453D
8AD22FECA5C61EF38C7A75891FD81F8809F03793DEFA98C0F432CCA62ACF4C76
CF97A6180492C2DD390F706B8BD97E6BEFC3CDA6FA093F40536323C868433372
D190EDA36E2F774070FD47DA6F696EF760C3A3BD6CF00B840A4EA3105EEE9257
AC0329E933C4CB22B633B70F38D563819330DD52912F3D169D285AF9B9433AF2
1E8D84C50F750434191ECF16684CA1E423CAA7FFE09897138C27770510D95D6D
99B372D231910F2910B7201642206044F47002F364CE5881164408DF642C1A95
971D64878F367DABFE76B79FBF230D443148723CFC98F9823A0B5335B42BF0A8
C8DECF673D1DC6FB6E26A70FC5378C893F6B7F72A1BABF6B2728EF7FC33415F8
1064E3E1A945440E06497382379FD2906899979098EE05B2F95CA178F10FAB20
DE50B3FA6B3E67BD0C2BDD2F1CE07AFB89B9FA1CBA7297A57A6C9A97BED4C336
68C231EF31A4D5750105FEB6F0C533316531420847FDECB667D6344DFC50A6DA
FCC37D63002801EDDD8E74C25BE31A296BD9F69A15FC31DECB331738CF0B1216
1BDA867582B43A79D83AC456B35BB1E859FA1E1CF7C076744C4DD85F312885D4
931036796A78CEA7258DC7379AB363330EC614B5B778F1DCCB1FA433A04806A2
ECCFB5577E0C7962A70A0ACD7D69C611D0982D14072F280EDBB0F50E5FC0A8CC
38911E16442FD5FAB52B018842C9950B8FE3F66CA4FC3BA33700B81E87582793
FE86C6A314494F43A166E2E533F1C050D35CE4AEE92C35EE391448CC917528A1
E4F90EBE4A58DE01CD82B0B8D1C269996F2178954A8E5AFBCFD91900B198ED2D
A21B2C73276768FB7AECA78F180E71BEE465641B08146226EEAC6E8CB6A368B2
834A6053634CC1F8685A0ADD83417619B3BCCBEEED02687387CCEAEDF39044F1
D4583FB4B6892928F003FE125F54871C38E40E81414AABA4FBE05FE2A99C256D
4DBBF6CE3F2324A13E91220E40F11CBA7B47A3B41A286B113076AA92CB607D87
24B6F346D97876FA935F4941403DFFA000BB488ECCC6956B4063995C1318192C
CC8CEA95421C3675D8980B36F1CE9AE92808BCC8BA7830ECF156234D6EB98713
AD32321CA9D8498ACF376149BEB8CF1D3BB79C7253303C9F237ADA30D3C0E249
0AA5F7DC376E24BD46D237D5AA01A8AE6F1F2371A38EDA9ECE9530141A3A1938
F11E860BE7279D12720954210172A66E010BAD444EF70D7E7EFBC45DF6639F3D
B514100E96AD60DCE692D72F54CB9D7CF20FC8D0E4986745C69BE0AA6B17EAED
9557E7A20BFAE0A59318D15455E91AFB2D5BD234B672949F3B360C7036B9D1F6
9326A8B8609055F3D674B9BEE9F6F7BEFCC5984B461C3744A1FCF9201D759D0D
DE72B9F10BF3926EF828D507AE6B6A8CBFA8EAB6B684111A59DD08EC02A3F2CE
3E012D655CC10D52193BC1FC110B2836178F3E40F96AA0F91C078FF9E3BEC5C0
0A022E9D9C0AF1ACC6A4DD5DFA9BBE2E5B7F3F88A251F14977546B1D3C5FCA9C
D6C0C86D9C66ED01B85534A1E39BD5C20DE216B335D1A9BEBDB65521D0010402
575DAFFF833C4D59C1941D60B49A30A57CD458DF6ED9F8FA06F539D0A3CF9938
4BD47F42552E186CB30CDAAE855E590106B6D2C522367C250D4B211F86781192
CD930AC34F8776E60A058804B01C80880B4290AFAC4906BF17AB82AF0864CF87
36972867B1C3BC9D434197FC6E23FF8368C85F9429BA905766ADB2EF24EA02CF
97B1D8E1021F51C9639C2CB947B30FA99C4C8C7BD3C6EED2B09242B220FC8F83
E2CF16A742889E3BA1942C187246EFE5863A3A147F3178E70D1A2BBFB2E64C69
C5334C16DF6B58384748B812FC0347021B994221DC64FA894AB2C3909B62AA4F
2FFEE018B4A1B86477CFEFB8533662A2E6CB82B7D0594BE5C1C51F60FC8DF07E
EEE87EAC1B5AAC868BDBF1EF9A2B346D99DDE6B293D7327127E42A5C1CAE56D8
364302E3F4E637D77FAF8D8F81772469AD3AB285F740B0E1017EC40A8F37312E
FAFE769CA95A8F9F2BEF30561FE2D2E82B111C038F4DD1882CE5715B259BF56D
48628F1C5A9DEFCCACC58A1FEA6E2612CE834FA05AA139D51156B0EF86100AA9
C7990E1CE38A8BA0578E48711390FA2878C9CD37249AE4447106B9094B830F0C
CA08D642BF228EFCA6AE1D7EA724DD64E4513D3E2AB5AD25F38FD32D04F66F0E
6D224EB660A7851CC09B237E10D377C9A5B93D6DBE0687B36BBE97D0368B208D
D2BD8A8F2522737FE116BCC867DEADD46E309E0E0E98014D8C960B3F7873A164
EC04A6E495D17BB30312558EC7ADB679FA96165B13AA85BBEF9186705AA4123C
1AD786A9F5B2CB45E6DA2798B52513BBC550C7E9DD13EAE9F0B590492CD7257B
3FB81D2D8E45A910AAE8EA5CF3DB3A56B2A547E8FB1543A24FE42200C0B3BE75
1BC2AF4DF194765FA36130A9D4D67FD60C7A551828813067EED8B44F8F9316EB
FEACF1E8957945A8BE6A43975C5A69197C7C3BD368E084DA03B7F86166C6E95B
3D63FF2D022DAFAF5278CB4BF180E1D535150A6AB248EC5920D02B5F0678DC86
3BB5D983E8BC5E61484084013A70742FD2F0515A62DB20DCC32746C788F10449
0DC1B3A97937AFE44F3CAC5974FDD259C66B2C3B5E16FDACB9A70AE95220FF76
D7109677C8605EF402F84DC2B9DF59573CAE645F604E199F286147AC6698AEA4
5000603F1B2001828F3F014DDD0B08DA753C397202E53ACC9297726DD18533C7
EBA836A58B084BEBDC6F6CD5EE3D2086B78FA98EA7D9161BBBC3960EF630FD74
961F154E123E48400F2E069BCF4617855BD378445360AE9F3B1971F0C7B24A6A
3C6A11EB729DECA517F01B453D919F34B2D26C09006681841A1CEBE9B8214992
F35029DF05E7298ADF77894331ED25BF6955E13DA0B4DFE7C8D13AEA4AD95996
69F4EACA96CB516D417B869F69A12AB245BA2F48160E257BEE600213B771627B
10F2E79599AF147A92A49817224095E15DF74122C77EDD96BDBAED83755B2D66
6575B2307FA58E662B58F4C9229C42387D6C12FBA1D511FEEE95B44A7ED3B00B
8895B983277706135B6A773B1E19920DF95F9EFBB4D9C31B610435FB22758D56
CD1A3E3D67162B9E6903F66A73B1D3587E029313665143C842566C031A2BB32B
3753CA82B54735DEBC58CDD279FA9515D92BCFC91CB6FB7B88F80C7C11DD39AC
DFBBDEDFFF9413345C3BEFD803B56F34F7138C62AC76EE87B3B240D7CAF0EA69
9530A92E509BD829137FADA6255E93D4CCB1EB23BB37AB2C3F07A2A21D43EBD2
18476F05FD5DB3815F144E1EFB2D400AD025F1AD729423D2B190EB31C4E7E46A
23CAB9AB9B961148274D9D758214E324C12AF90CDCD2C0A7D438C61F02393284
66F0E8DFA528C6A92646975A56E261E3C16937CEA1C949A88B19688E194E6130
736AA33A536F7130F3FADE59740BB5069A7699D3E78FE524DB3779672B3EC318
10C74505D0531E480FE0BB79A2DC3F72DCCA2A8F59A0CF417AEBBE2558A479B4
A21449B2F252B70C4E6A2E6A34DC95A1E8E34967B45D9924D8F14C06021B403C
11DCFCC7391CC6A146A80D0A31DA86BBFAFA1329687CD0D910A9985933B5267B
5D68CAB75AB4F968C43B681FDD750CAE1BCBAB5A7A9DBCDF39E0475339250980
8DA0613093C5402DDCCEA738246E52D7CE34BB21E7DECAA78389F85A89A8268D
382BA841728FFE676DDF5D4D608A4D162CEAA0046E168014177E27FCB164F214
05F98807771728F0E60F20CA1636023C3B45D99837E560B855749ADAE8402229
18FACD5EFEF326E367B7ECF5DFE2488FD298769ACE9F56B1616DF4B6EC47260A
1A82EDC3B4318D388A50FA32AAD7B87B3235EFCABD4B5009190D163D42C0491E
D4208F2A7E2311CD90DCDDDF2859681D7FBE0FDCA311A0ACA9380919BB7EFCF8
4433ECDC9821144630FD99AE1170DBDA9AC3B3B72801E011B0E9D84CD642D9D3
B801F1D8C20804D0BD5A355BD413124FA95DCB05963C2BDE837918E4FE0D1052
7629A7404C115023E82654C32A316A51625C243FBDED924DCBCBC01027D9D40D
9A5343EB5CF4DB8A9A71468871E38F7A3B6C1757B311BFB0ACD09887C7959EBC
05D0CAF0276529927C69575ACEB048DD2379BADCF091F7AC612899F38A999CDD
672AD5ABED614AA483E7DAB0ED016C2055BD2614468625F83C2732EA5C7722C1
3438459CB90FD85AB248BDAAA692642BD3701D39FFA953A3B357EBAB1A189F42
4831F6578541FB21A36E4C68747CFFA94B4E72EE284C44A9C294B2B18D9A2E50
D90F2C835C1B3331DFA06E332B681A450A2957916CC7BB080A447F177F25FD8E
586E60160565B9C5A80D00A2D7A11720CFC12DA8C07C97FDCE003E55E28472A5
21B59CB5386791FB17D4A0261DABFDA8A096FF6CD3D430938768D03DC91EC66C
FCC6ED8239419D24234F67C6E44EEECB46BAB3F72DB9B1C87983557118DA3D17
6C9E4FDE88E515444CB4102BFC9E1BD375E09426CF0AA157324CFF8B9D870AB8
6ACB0DAAF9E339A4D6914063C8E8810CCF5AFC45FBFD1604E7287731B70785C2
3DD9E87512FA8954C3ADE3EB403D4D4524925A70ED96BEB74704EE82629FC4BC
6EA3134BC516A584CF2DF2272546AF436E192EC038B81CDA308FB25765E69C47
0E3B013B540985FF029ED5820EA23FDC719311FAE89991C755359C53020673B9
AD4CC46611FD8050B3E290207065992B6DB076EF6288FC4FFB355A339A2C64A7
E38D4B0288BBC595AFBDE827BF74E5A9BBC58FED3B9041722F5B5F24A1B0F8AD
2FDFA0AFBD13686CEDB55DDBEFF4B5B4EC83A35F1581E47CD7DB9BE043115E01
049EA8A7323F271A66B3BA894FCF14CE325B57BF505F23985A965799307E21E5
A252C1D10C29F9478543BB7D2A1E7EA922602132D1D0E6C62B07EB0F4E6436B4
D6BBD6ED397BA13D63A2DF6044F4707F3F4239774EC5D2A531F6DD7875B4E4C8
6CF762C86B7913519AFBB9B91CB4227705E4EE9629B221ACB437B46552BCB338
55BA5E53378AFA9D707539A1B904E7060FEC57D7B4F5231C107155E35582A690
A285D4AEB9E589877780F65B1A681B6EC2E833A6F9755F436000E7C1894B337C
AD44686AFE62DF3244673D6230D5F2776ABE58CB9B13DB857C0A6824B06BBFEE
CA4D8D0EC8AB2AB23D24BF5E518D107035C605B4FB5B030E33812740C553083E
C6A4665662B962D7FAD1CB68F14F36D3DA7C71DE94E01F0B09C8FFAFC9D121D5
A39060F99EF5A917C5D81CB0F12CC3632AFDA9F714B623CC1EC1DC2C3B074934
3C4E2E438B6295E559C072A82229C38242A59220D7698B2C3313F305C8F72FD9
4E282F3A4F749C844204CC485B2C60CF64D4102FA9828E503D2F5760E144A976
F44BAB926270ED1604943296B481440A3B2AAFE8C80AF9C29CA328B65ACAFD4F
0C1AA45E18B679D51A9A73BCD29950FFDD0D0F365221DA3FEA8B17C410C44109
194B1B4814225B35423368238E996F16A769BB5F0967CA8CEDC9A374E2E2A206
FF4F75362111E463091E2AE2CAD281829D3C1B381FA9B54CC4195C597D6799CD
5B7F09C56ECCC061F2F9BAAF636F17EB88960EA70F1F0F037DDC974A1638DCD3
1FB2283B5F192975AADB6E27FA797875F992F929FF69A8CBD1565CF3B86A0455
B9121D1B79B7DCC23E5AAFA36ED9F7A8E5D9BECFBE4384E04B0D6FE9BD266496
D02DA951336995D2DE6BE506F7CADABDB3E62E1B3B485B551B90E4C1C49EF40D
FE1973DC8F7B8C1351BE33B3466930A61D40AE2FF90D4BCE846DD9FB0556A7BA
920A4DB91D8206296D827D9B40FA30BAA1D842D89158868B20C24640B2C42BCF
54F029791C48347722C8BA464B582892609419882C052C906FF6553C18C81E5F
EEEE46E50D5357E57CD8F0539375B0394B8BD9364298FEED3B9CB12EFD2936C1
B1370D77DFFADECEBC47C3061DF43407FCD46FCDD449112D6BB622F325C920DD
2C0B6383B1AEDC7C5FB04C6A56D61EE889BBA13F70BB835778B73D8BBF0EA6C4
44A8EEAC977D9DE8580A98D6E9ABCDD6CECECFA1650E47DB648AB544E8212BBB
0869808898E387E20EBD388A924170476196F6AD11D4185A4FC43D8B898426AF
4458839DD835586F7F7CD4C0399BE9C4785C357FCE801343F8AB2E1A7FDE227C
2EBB3E90188295130A44E89C39D24DD691E418A76C737CEDFA1E0D300D784E2F
F9E380BD153345DBCB83D4A91555F6FC29D55FDF2A95B2FD56AD9D268DA0A910
3F8FD90489EFA79E5C944F8FD9213B477A704BC4D83FE9678ACA19ABFFCD5B59
A380CC4084CF47BACDAE999A5E06940230DCD7ED970C8D7911DC00DC459B6DB2
45C01E5A3D9D68754782186E6795FB15934B8924E9080F0E241683DF61B319AA
E18D47D1DE09CA6713C6B563EF2EBFACEA215548BDD01B8FA36D5BCC8DD9C7DD
53434CAB772AB399B96A6577209E606453DD6A5CBCFD4C333B81CC0670D7E6AA
D719A820F2268059F83EDF20C6D1885E4F90462E267B4A543E3D60101E4EE4C7
D9A5C025245691AF05E3669B4F5A16ABFA37EDBFBF48842F1D5DCD2C824EA601
4FC0099D03A9B6B8CC0A1514209178866901235C66B0C50B6B4C54D472F3D619
72107FC47D6A460593D12A882106B14B1D8803F6F7D2A257D7648A83759A1294
9BE28DAEAB5086E9A5250F6F6E314A2C4966F09EAE999FADEA79F1B0E73FD3C2
544D30C23437CF9C3FF4D5A99859553D82942B1302FD3BADDE29F623EF50C9B1
2A3444B6513CE2E96E73CD01019E6441F1680FB08E092342BB52D68E9270B578
19B04175B61C1296050650FED50A009FBDD4F4382665EF8FE624EF50E7F23B3A
418812F50DEC9A990B727C6C70207BC35EE618C60A0720FD097129527BDABAD3
795EB5FA9CA60EC7A39227A2267924C25B990A304F592715955B3737132B4584
E73C21F2CC712BC6CE183F72C2571F46E81CE317A0B867554FC41DABDC9173F6
5836444E4A1438A01FA0938E85E6396153325D777801BB46D6F315033E0FA4E0
A4EF691E21A7F47DABC898893C2EAD0BD5AD97E5A013F2762B52A9BC18A60618
51070C5D04ABF4AE5ED897D9F75B9C21B16BF0A9AD86F205ADCFB2FE3F89D4B0
DFFDAB620C970F79650251CCE07D7164A60BC32326C2D36742C0D71D21C63AA4
DECC641D423E6C5D3289B152CE19FDB55A11282FEEFFF3E6B961E0E639B048A3
8D0D6B9C0C7CE81C66030F18331705D53BF595BFAA794784EFCE151A072B9B71
1F0F15929BDE7CCF14E0EA440A74DBD51ABBEE7629C98D586F516A8DB0100A9B
582F75D5CAB7B13AB1586C2879A167A1D27DD0F539B08726343774A2DD4B44EC
7ADD8537659311DD5FDF82462B376DF7FF2D9CDB9FBFB9CA6060CD685BF8F7D1
44E50E7E44723EB4242FF4A1CA583A9C24A1CDD07958930F1270F5FB18F73494
0FBB49A46C3065D8EAB6AD6CFDA72DE96507B87CAD1E6244EBF64FD9E123EEB1
4CD6B4782F69357D979B4D0CC707A0577DA629D93C16492645627E1FF938AC1A
373333B68E810458E2756AEDA6A18A441DEDEE59F33D9D246AE8F987AB4E62BE
EDC8BC989E49BA7DA121B8C73AFB37C39E428ED2A979E40C6674CCE9F62E2C9C
D6939A769AD585F1FAEE748964A621B91D0240F13D4574A4B58C83AD276DFE1C
12FF4026BE58FFF481C706C8AF4739A2E2EF9F27A0019AF30A4F75553ACBC43A
4C530DB3EA06EF9672983138D713933F67624656C26CFC6ED9D3947EC669D968
C9C87551D00D21B00AAC904E1CFCC53C77F66A8745CE6B6A2CCB5982BBD31B20
C740B3C7E7E9B234550B1B0CD507AB6A2D392A289B6A75FD681880B3CE799AE8
74A8524C9D53A3367BA3C28DB666E27ED734B52ECF7A9008981F6282C937DFB9
8E7074F0C9F489D26592E06F6BE81F54EA8A480A01BEBE31E1A99A68137F3BD4
ADD7D79A33AFD79FA238E76D28074A54E0785BD51DFFE90077736717DED0EB2A
A63C22B87433F828DE8110D5F970934029A29EADE5C1F1CA1D805D4108A8DEDF
498B671A1E4C0D03EB1AC4AD582401BFB791385E510CDAC287EF89C96F36E903
3E6406E6904C934DDF1025D0C7DC1253631A647968ED4CF408AD2EAB027B7795
2A40A24492FF73138A9174358613C7DA3A60E91836B09FC74F9B037A205A8A56
81829CC565A712B56E226745D82323FDC64FBA4CB5BB958F763828B23FFB6DAD
516D7133BAE9E3B86885B8D8235633FB7A71090207F4D2AB98F0F519E0EB53D2
1924B797101C84D114A4AAF05F6935DE131DE0E0551D5CA95D1BD6BA66D4AB80
CA9D0180D3A0ADEEBDAD503879FACA4B7E80B8BB8BF813CB9DB27C5CAB5042E0
5F09C98BD0A51DC7D01D7EBE42FC6D9560F3CA1504FC8AA66F3C65A2BFA315F8
DBBFC5D3E578645174CCD82C403CC3CB6DF5CDFAAF3113D089D7C85E5859F27B
8DC4C5D866551DFA3A427CD33ABDA7E803F7849AF976DACC37A11E793EF2CB8A
6686735C4328BB0B1DDA366C69B17DD25747AAC9D2D71FB7ED8D31A29D7F2D8F
574B6EF7690605C2B63BDF895123A258E8EFF35D7DB7DF4E519DF785FC7A5857
6F23CDE95DE412A373B65F97ADF3442EFC2E872A4D22BB4036F8BA543F484CB1
8F9C6A2C78B2081E91A0FF7A3010CCC1170E2F08D503C8683A15B591ADCB184E
6899895E3B48C80F2A6B223E0910BC6092E488A3488D54C024C9D1D083F58A64
F9811AD86690279FC8F5B0F91515F3FCAB2B92185E8A48B59D282622FA6C76F0
442C4C216B40FE2B64713F824840D21668DCE683D0918258CB1B3671399F414B
280C967BAF526EDCDDBF15EAF34C55A9DF7A5BBD2089CCFBBA79EB8B879CD72F
E2B5509F1CFF42FE6B4BCE064AD6E491C01211B9BBC1212013A533B501A088CC
A5D42CD92F6E1087A57378BC5CB9E34C0EA2AE82D3DEBA262B07D742C3BC581F
463B390F50E1D2DDF3FDD7B523EE766BDB7F06B86095774B74948C839BEED6D6
C3184EEAAAAC0AB3727E59F1642789A1765F02944B8E689FC81F28A92E58C07E
573EF02AAB8404217AD8E02E5425053BD908DA3FAA0BFF09234A845998206DCE
C55896D712931B619F8AC06EFAC41D22D1BF4B1A341360A772848CD279AFD9FA
3FFC6A1B269DF1B2469CD394A0ED4E790A79D8AD67234A2C9360790E49816719
359A088274216CBAB096E8804492D23773D92B41C7593728AE24F3FBBBD9947B
C5A800F9DA6B7BAF861C673A90BDDAE0C84509C5E1537974E0CAF7DAEC080E93
3814FF4B71538878B4522D1AEE2980FC421B2977AF4C08DCD1FD993C0CA73A63
7F4671122FA56BC4E308A38A8E64F8C5F4789F721389E641B2CAB476DD52D3B1
F1ED03DC65C2D0C0DCD172F3118E30CEA0F5B50CBF6AAA45285638D00BD50C2B
DA08AC7EB34404BF8A070D0122330F6BF3ECC9C1DF3A2971677A6FEE34A55084
0B3A69152D94C87A42A9148EB9D57B0EF0AB7B0E869981F82145151A94C7EFE9
FC9BF1625A2C942739DEB8C7E8744E926E779A09F2EE7F6697E406B507D64CFF
4549C5F0D56E2EBE0C3F8E456870FC6331BD98105B719F3EB25F3892F7C7C03F
1D5F4748B5DFC1F8D787F99305E0A0C86C53D90433C03F373B8956556A2AC81C
1A18951D026FB5BF4D15A945E047E5D444BA9F89D55B5133EFCB931440E9933D
1A469A390397432293D3349640BD48EC09DD5A8F5D15D1339193DA369A7559BE
855EDE27C68FC6AF31CF3CB5D0A73CCC6B41CE8296FF0C92CA794AF86F9EF9FF
A05F4894A78BC7DCE570A1080CEF1464DA4F90D2D019866C9D9C2659F1161D7D
5F3D63F614EDF3AA51D318C8A905243606EAA48C8BFCB4BA49331EDD90B90DA3
5A18C332D39E16F9F5AB7D81B729A3B6942AC29D7605F00B0BFC2C39A98B8813
5FEFC62A927FE88893E913B28C716B66015876DB9C4C190CD471AB8FC111AB41
88104DDB8E5E2728B929249CA3A4BB241EB490F6E68C3942231081A26969E75B
F026B7979FA08F4CBCF394C781FFEA710FFE48A5D4C6C5EB0367DDD96D1CA9BA
891E5BAE155A8D589A6D3613701665103EA684BFFDFB4EDE21AC560023DBD242
EFBE5FE4E2ECB891E9963B314D644C4F15E365A9E8945DF1B096D12915B7B1A1
79D149F2B43860E4166140A0A13E3C12530CE46B8806C8C3348BBD89ED671BAA
88D51C533A3EE33FD00255BBA271A4EF003AFF094650AE0168130630B7AF6043
F860D5D548B166C25921D8DDAD33982E89D20813F722DD86A572F602F36E083D
FC32E5B188A84E3A986D70C6D02EBA1FD4BF2EC6DCCB7B5F7ABCBA1B44AC4848
65626A8F6A5D715DB8F3F4E091D61A550A2E43B5ABD85FEFE3E8C02D9A5EB412
9AF9D1809E17EB8B1012A8E4651161958A6F06376EDFAD25E489DC7BC6208119
6441ACAAD66D6C28FBC0110724B2284CCD6B34454C4ACDFE8EADD4692AC17DF0
F552B9D679EC894720BCB2421668BB5BE6D8539720DE2BCC235867DF2E5B2829
57D63D9BD79623962FB0309E6DD6ADCD03E2E43BBB6020F93BFD70C9E9FA2CAA
1E08E979749C4611C202CA59F1645623AEC53E5DAC7A71A4716FF440DBCEC22C
601E11C691A369F897DD1CFDF8B882958AE0B30E2CFE5C19A8075DBE9388A0FC
C8A1B1A52FFA5B2D98704EC3326A827DE415BDD44B433185E03B6E46EBFFD925
675379569A1D038D271D8D4CDD08BEBEC98081F0A176ADB56799CC5586DD36F9
729D3A676CB13807520C8B4F0FC0E4E5F8F044428460AC283786C0141B0940D6
69FD93C8A6CDE9DC290F2DAA624E0CFE634AB1778AF8CE23374589940C6CF164
F3CE8C6EB2D3477B119746FB1460610AA4F0C9C1B8F6C6205DF96B6DBAF9AD03
0BC464BFFD6BB96221D7B3F4342FC87746730E278828CBF869D7E5E8AC6296D5
821F1DFC98C5FBDAA5926EA5679791D474BC0B7939D43C0AA387B8C19F1BCF5F
B93455A74C7E013AC550C78230F9DE2481B41058C51E508F87F1E216EC23FF9E
8AF60DD3CBADB44759E7B961822CD70E0674757DB73D89B69F850B2163150A01
EB5DFC9E470CBFCCFB150AE9088E7695DF12553DFABB7CD5B013F3D522E48DA2
8A4D2B22F8F3F7246668F14CA9CFE75AB6288B531DD76F5B112B0D2F53BAC7A1
FFE739911B5115C55F586AC878E93ACF9227400106D78FC6BE2133004BB7CCB2
A35D5C9B4D8E318D1623B7193C78C328DE953F3494CB99CB209FA97A20E05E02
791F0C4AEA42A1264B4F0075456282B6DCD262C4CA3DA17BF3DAD6D831D091C0
8DC8AFA8FD5C40FB22842FE646A291EDAA932018FBBE9BDFD1AA0B3DD516F460
1ABAF5B1E81B5329EE330D2CB6CF3F89DB2170F6DEA969386F22CA91725C551D
372AD585BB4189795DC7DADF2A16E3969F4CB5A405BDBC8C8E2F26349004AF3D
296585FC6AC72FECAF0AA5311FB05079878AD49127A054DD75488BD6D0C63F16
7039FB76BD776FFBE44AFE71E27AF00765A64FFD4559809032312625BBB60D63
869FB457A6226A95C63FD9ED89B8919A64A383B5C1C6313CF0CD29AC91D2D374
734280ADB1EC4B2BCF9B36E9BADA0CDF82AEFBBB9B7F88F5F712F452B52D261F
8D73F8DD93CA5D32E77DD68BF335F2562444FD3AE5D284A2DD3B3C247EBC526C
2F9FB690A1654F0371233BDC4DD1DF37D2637C247A5D14C6F9A4EDF045066237
0FDCCCF3FA295D07B6220F4A84B86D06BB8C7F9237C8CBC667F0052E895EC978
06EE420A305DBA215B350B3E210C849EBEDF69D57FF6AC50245E76734677D8FE
D72EA416F01183C3CF13CD2B18B0F3594FA089BAFFD2E73396ACDEE7682FAAD4
27A7803D669DD41726324EC6544971C32AF1029CBD6F3404A2A554A2E76F9919
B74CAF8C3E319E894B54BAD7A36057255A7DF6BD8BA147130E2A1A77170EE1A7
19E77E9ACF79E494464447C416FC35CA59D535567B2F77241546F9C1DF48EDF1
4479D008DEF3417C0BFF3A1C3DCD80EA3E84ACC12AF524AE4D5B67CDC7CE20C4
4C72AF75C1818F6A1B5B6354AD758A7C7BE59C3BAA712A0A56D9636B62813E13
822CE9CEEB9F0E180D18E9C1B12981937937B0E439A85759FC3D6D52D2220BE7
CFA351EA5D5B43FD74F3C8B8D38915100EF59438A73C41D92F04183451EFCAE6
D32B921DB569BB21CC18F997D4A44DA8C2AE04EB142AE9E5BC71224AA4D6C693
EB34F57338717FB2A9CC0B45C870297EB16DCA9B5A61D7CF57D496D0422295BF
211547456696FA4231D822021793F292636B3F8C7B2A0D353F370B35862C543E
0ED910DDB31E7B4B4B6529CF2EFACEC94B27EDE946261BB9611DB2291F2AD258
5BF559E6BDA1685A2EBBE87CAAB72BFB900699E6CA7B672D208B1FD63B002BD0
427E3200E0E79FF355914F445B8F63509B634A40D44F4D04DEF3A43B137D875D
BDD15F05B2612654089FB58FF079C1EF67CE435AD93677B705BC81144F2E4585
4DE0432648032D0FD251B7C5856581C1D555F91453686C0CD43733A6DF57FBC2
74FE9A12B667165B8292EAC86D7D6F01A00C49620DA84A7D1D2EE42BC5614F07
44B3D87E9DB103E77B80A9643541BFA570DFD8F4C41F743CA4FB159164D6F9F6
B7C3C24258D58F35232088B67BBE94F2B99FE882315994E7704F256531E5C82C
AECA85AD75084382A39CB410107BBCBE4B5F3F8CF3C20A8E023AEB019B4CD655
61E2E5608200B86DDC18C5C81A4E75F8E17A06660613071727F3BA34DD98CFE4
972844FBA6828120B5B8EBD67DD487340D1EA9E65A892A5AE88E593C70B3431D
5C05B3A04E3B3771207656A3DD2D3F93343D4FB2D542AD09E0921BE787A299CD
75EB953381F0EEFC560B692ACA1E819ABF8BA4F4B6F107F10F868F5484EA2189
8DC1DE852E6BD09DB3AEB57DE7D10EA7D651D2112D36C1AF4F2E921D2551C114
6CF12EEE75669151F9E2431D97A808C5F6CBF83D6BA62B382EE483E32C6F93DC
0D9732C3CF63E186503767C84D260E90F2C24F9A9A100E8E33A4936AEB09E1E2
1DCC694CDE1578E2E605F496330202EC2902D1E05836459369A9488EA007E5F2
A9026BF358549034AACE56121FEEDC70965D0128F959825866CD5CFD081AFB02
30692158DA78959469D854F868BC9301D3381DC8EB15A2B35FA5C74AAE3A3CC9
1A0C44995BC9AB5145FA833463F66153E6E2FF3D5C7D01AF232229CBF2016245
6175FE674FB7803EAF74920BAFB83A51DCAB2F5AF00329CD2CD11ACC0C205B6C
9B6FD6010AB644AFC52B5A8601B452171592ECF80CDD365650AEAA5E1D52D8F8
8DD498CBC366F17F6748B63B0C6D53B5874942C33114CCADB41C394D2BB66A28
7D2BA92A6C662858584EBFBA53E8DB77C572658629BBBDB962DF1466D8F8F18C
CE4B4CC9841B5714F9DAF6952B9991E2AF4723D1A6FF7677680B4C9521DF64CE
ECE625643F78D0241961E1DB609C6C8154838C8BF983C71D64E3E14AAD197F36
31F3E3CA9EB4C072D3196F99FA581A459942B6D22E4C45DCCB51687CED6E30AC
81F9D15803FE1AA66A5CED53E0EB42B43A494FC87ADC4D3AE3EE21440ED7C7F9
89E65D462BFF7E30C8E82B7FB18171EE39B996815A16E3217EC749F520C8AEA7
9C2D61038BA7A2B491D6737F3F7BED77FC223B3E7945603D6015EF45983A3E04
058AFDA711101DCE3F5B17D645EDBC0B373BF97CDA7C3750095C9B3870402407
2C5FE89BE9DCCE26E345425C23B338C87A9DACF56D583486E8DD0357E35E1805
174AE623849DA765FFDCAAD86026AE6BF312CDF423D6EDAD8698058DA1F21D32
BAEE70088C9E26969675F5F3B9C0958417A5EA2CC22B05B89ABA4488DE083733
295E9863F6A5BB18513C5A4C96DA055BACB2D34AC2C0849EE845568085B97644
291080AA8B87F7B0E297ACFE2BFE25B413DA5459627D2B60C7DD67D865BA6A8A
B91493E9E6924F5BFAEDD40AE0501D67F7EFE34081EF06DADA714D57889407E4
A7E057F7E955B4204FAD9B711D505D23D1D6F69607618C64E5901C461FED0119
A00DFF382CECE0BC39B531CB91E2870DA2AF034D50D17F2A29930A8FF9ED04D4
DE2E51F67442F6E8957945A8BE6A4336288974A9890C87B5C7D7B1131A110A08
AB95C5232A86199F67B0FA7F01A77D995111F44E7F63124C7CAF3C70B4732843
4B9F87D3A49B74D12C4895FD382B1426AC8F39C201215DE734D7916991675B69
FBA7B8706282EC21404DC860941627F7A643DC71AB41CFB51DF2684E80050CAA
7D2ABEC8B022B89433E2AF73C68C3E0D42D357AE2504CBD924C3B62071DD9168
671C59C0DF9F97BF45725BB136E95DCCBB1BC119583E8642A42EF7D9718BE412
79908E85B5C04B08F41815CC08C0B0F77E26E2FF738C37D7F483AB74BDC00784
5AFC82EE02C1242FB585F64E6E3D71811355B6B75305F344865435FB2F12E8DF
9C6E0C5835DD838E3136C747854DB85BD9948C568B36E195CFABB6840F7FFEAD
497EA545E26BD85C1384F062AFA17B37925CB0BC303A27980F2AC62604862326
1138E3BA9704DFE872048939537A4D07EBB3EEA6F21203CACC5067F3E50BDFCA
36191C077F59EB678F4228F1D7A07577C8EB4BCC88AC7649ADFD3D251535558E
1CE00E7DD21746C86306B506453699548992C65226EC47413BB1C5F7C969DF41
82F86D65E718E67D4AA8DE2BB19A4EACDFFB501C223F493DE690D48857706A0F
BFEECBC893B2A0BAF1E03F8C126B16061D6FCA58CDBC19026255071AC980B615
24827F3870E0AAB8AA693C14FCE630AFE453336FA67DCAB9EB38F101563D057A
57503C1C17462801DCAFE0D6C822BB22876119ED65BBE93F36086DF52B1A2C5F
E7143432AB8C2DC8EC96DAB46E85F3ADE093D6B0487B9E364591206EC88222CF
1C4DC905B3FDB73509CF52728BED12BEB125C43D75111A986CD4396A40C4A95A
A66BE989C203FEA558800AB12685CD64D6D4DDF2F455744ADE7D77ADF99228A8
B4D294FEDCF3AEB2B93B7142F36AE748CFAA85A2594FEDDA137E5D0310BE3F4F
6BD052B1A32D473E4590F3CA44FADA7919A859A5A5FEC8948DC1EF1630BB67D2
DFD2EAAAF6EEFB3B8E3E7B8BBEA33DED575B013E4F5BBBB25421B76C94004710
23C5E8F77906AAAAC8CB8B099BA96167E12DCBEDA94B53AD42B93BDB1D2D7787
7900CD88E569DF3194AD1A75136A6587D544399991624A9729675ACAC0983144
FF59A1CE81442EA6B53B4C467BC37592D91AB3A82FE19065B8AF8E27F03C5F03
683EEFC6F8AC74204B33563744C4F70F13DDA614AC12C74529298CB1A88C48DF
02249E1E8227D5A1D311901E97697C2EFE1B902377F00538CE813BAFBCC70841
E54B23F58B9A940403A3DA6150E7DF75A5CDCBBED5D7E68194AF865503CFEF1C
0E4CFCA984E87BB9F0709B480C69AC14916C11B1FCA17EA372F39EFE5A50A08B
A9323320C66A4E9CFC8504FBC049C267E99C20A96531D580469306DA01502498
A77653FF5AEFBF0B8A548189EE31018ADE771712573E0225937C0C33FA7FC278
2205B481FBABD8E51B3636754E0A629A1A6183D3F20AF7FF5CCE31B93EE150D3
82A9F3E7CD38273842EEDEB16287983EAEAB37CD22B4B9FB06E184655B544657
AFA8EE2B2407A73D6047AB8E8211E7153183866E7F47405A733680199DFFE8DA
3228370B7080DD915804F3F1EF81797C9B1351D551A08263332B0A3CF36AFD0B
51018C1FC6C2D7D59CD50B494C19AB76F7C88F3827F4185F62060D5BD92FC3F6
A4407F9FFDC9C32233317577E4C794BDC00FF92DCF9D6B089BC452F2DA361489
6CC59F1F98EFF89083BEA74D9754AC6971CAD639D177DD5B59603021206DBD0B
2F1CB74E63B827392625AFE1DFC630B10826AA7F8D15F50939780B4D6809FB56
24A5ED8A24FA402324F99BB7E9779EC7233E7E90A9CF6C18201315EE1DDF2C4D
A34BDD6A0CB878D9937EA6139412ED6166A9FB6864842A0057E34E80E4BB8126
87FF0AC0550AAA6E4514877E3EB619122DE721E0DB58AE80346F4618998043C7
5BD01983D9FB23DF7952233C3CF927F66AE147B32F5759D13462816BC1355CE7
409175350ACB2E302D57CB0BFB7F4621D1BD575FE57BAF08216966996A3CDFF1
80835D6E3B4E35CDB524D371F2D52BF745E1D1897D334F781F7927DDD77D87DE
62CF21679D88A2D1AA8C42F6AF44EB52152BB04BF5A32395B89D9EB15D21BF12
24011A152D01E9227096BE7C29F4943B0272AC32A329C4453D566ECB1BB63C42
AA8517BFE833F17210517B93F4C97E28E61D57D8A5C6728B023BEE6AA3D4A614
35033C5E5F86EBED0C4DD9608AA42A1678786D985C628D637AC45F73AF560AE3
5CD8FCE24E55290658313930431088D6A908A4D3725E0721F8A4218B1B13CA63
C4280F12830F1E1672132B3AFE4E28E7F1F4374EAC89447A2FC7F00870B7BB5F
9DFFF5073D46AA85C85D3E5A5EDB2D14C7B24D8D8EC9200420BC817F09C1E5D6
C92E68320A57EDC48D64411A41FB44D0D7351E26BD1FCD62746A80865E475D44
66D7232F07F13A18F62E726D49DC7282BD99ECF3C3D80C59799D2F42FD4487E6
5EBD3A45F3215BB4ADD96BA9E4571BC9DB560B2D9BA925861B4153C06124ADDB
2CD8EC4590DA78F22714FB9DE8A9812192ABDB88140D80D0BE1B24CCC47C98A3
8972ABD8096D86A278962BDA8079C0DE50F83618F2865AE564B18949881BA72A
097446FE8DEB5F6DC0182939591BDAF348482D94F15441EADCE54F69FB6BB517
B593AE02F2624264AC7EA7D9C0BE402718BFDE500C7CA7AF08919E836D486D27
E2709A1E51138EB92AB13DAF5AA91AA18530E1BCA6F088A37A021AF4A4A8CC48
A003D73F4DFBF1005290FDDE177D70D00D4EBB85282758B2035BA4CC7D3B7541
F8C53E102669355C2FB5F222EECE8505C30DF7687C8F26DBBD93B74A8A21E155
EEC59133FEC5CCC5495BFC3DA2F323E684B8B457A52C65D65546A0E50B1047BE
7095DEE2598E5DF00923E3700E60AA720619329AE2CD6D40EBC44BE29EE33484
AD263FB3F9E25BFA2D64694D5EE6ABE1C94999A54BC2C0354076C3CFAFDC116C
290C62789ADF1306E97951040B866539DDA062E9154DAB0A2990BE6404645750
B6C95FFEEE591EECBB4146DD7112BC3BCC0C763CDD362701B203A88250469A70
51BD3F56F8B0E0DACF989F699F9BAF4E52941A09AB5A195A8DFBF76F37DA9AC4
F3007FFE2B39F3A4EF4E46E7119621548AAB3DB4B6D1143172D65187B3DCC2C6
049929371BE06F21F21D2B57D330F7EE60A5CCBBBA0E9B6345352B56EEA8F05A
D3FFEE06456CC96B5013DBB5C50B7ACEE80BF4AB446D949125201DFD3F2D2236
C940669D20F45196BA2FD228D52B73F0BE6A6EB99D2420D37C40AB448810706A
F7F984C2B926C37BFD850FE1A8085EEEB0D95252F4E27F839983AB1404C57C47
100DBD67EE7CDFCA748B7B4AC1F3603B40CD1EB0CA2634F25507AB2F48FAC819
743B9C28AA5D728C897002239A992C336825B795574D66BFD632DEAE77D79E3A
45C62F92D7C3B884564A6E3F734381784356649B222AC1F175CB5398A8BF5456
93EAE75B5856A5C345A2160173E3B645805D1835F05F2A28196D117F1643A2F1
1FE22D9F3213C8DA0433D7D6A55477D2AA3EC462BFB55F2DB3895072CF7F9C0B
6D897E7BDA9C378FFB7A0D2D14EB271FEC8C63E2B6B249D9807B401752EA8698
28A63B09BF57D151650C64462005F1F3F5ED478D1D448D6A0D1F6B1566BA9BD5
4892D3C7DDC4B4D95B28C1F637175D2C05EEDB36ABF690B655D784A1A0E5061E
F2B500F65AE4A3B4CFB56B32C8784FF2DB72F9FE7D843C9423B40A7933DDCEDD
35E32496FAE5B0305BE3A7340C9C96322B2AD7488B36BB3E8F6553EBB44849D9
11328D73594E017F5DDFEBBAA654AFF731CA0DD126889DABB2D3A565F5B76218
FB517AED14FA0F2D75AD0191476A6C9A867E0F199B722DE6ED79DC5F9F4C01D4
73ABB584E8D4B72B54C57058A65105BB75811703857B9A2F9BA9A12D115740FB
C58DA0832A9CC3249C08977DB9DEC0BBD70CA5634759B527691023EFAD1AFC15
37BB14DCFA1DFE6CD0B6950A512E4ED2BD7BE46E2EE2591FCC8223DE3192711F
973F0DE9A1B1B69EEEA942BADAE2F8B1B932D3D61ECB9122C98E95FB1C975D53
E135B780F1E88F78279A54F8F5A821866E582881554C5081C17FC353A25E65B6
7029838BFC1BEF9735729A0BCB3C1A7E9C9B326924D15629529268F9875B88EE
CDCAE940FA06D9CFCD2B1AB4D214A50D14E68C0AEDC19053544389EFABB2E014
120EB500CA75F64B851D63B428A4255606A7657F31291411431ABF7B9A5854A0
987D632642EAD29416BDCD8286E9FA937A009312C4DCFC3D546985DE7ABF8549
59D9898B7C6192618D0AC36CFFE10487187564ABF179A8661EC9D4662647C564
5C07F01A0DA9BD9CBC1F322A3943EE3EE042D279302B1EEF3E45265A450CF007
1AE207235FC89FC77104401D8A362EE916B80A9E2E58487C2EE6C45CC9EBCF6B
2722512A79E4F9C56CE9CD713C2830C85D55195909B820B4319E2D2226ACC333
A59A3781E6CF5A380A782999B83D23D0030821CAF884616192D003985BAB6EA0
532B0D152846ECCDCE9A0883428FCFCB3E4C6A2E5B31F292A1D09CA48F76CA50
94D59E0AF77F35AC65313C19E54EFA4ECE11EF5E72F8071C58239EF8EB28C016
E5CA3877B57C5738E2D064AD6E9AF08A7C515050FE4FBE76CE28AE3DC8D7F027
39B640F3C42CE61C79AD5F67652D36D33402EA8426319517DEA7655F8785954B
68DDFBADDF3F4F38A5CF7FA86FEFA2BEEAB1CCC4E96722B365DEC3AE4ACD5EF4
4DF4087EDC21A5AD5697C98239A3961F18F73629AF16E682453E43B85404E536
6F67503211FECBB0C6AA415A5B2878674E8AAFBD0CD51F9351E5E4BF6AE54AB2
1FFDA7B1BD74EE503A1B53B1BA31C6DEEA665C807C373C789C81DAF51ED2E688
EE1D6A66CC0E9861E3D9E79448E2A2BEA2BCB5B227B245EB033BECA3A2B2AD54
8B7ECE84BF2887480CFCAD5F2EAC3AC987D9D6A413A4037159280497B72B6B9E
6E6762C79121D53D0FE026EAB0EBCFDEC33C5D3940FD353E438CCAEF749E7C3E
B4B243F5DF96B6DC1B119B3EFDABC01B7E5B9F872338E9CB2776C840BE4A6B6E
9E7109C03123F477A77EBF0857FB1C09CCC24F4651393061D2261DF5B792B6E1
BF42EF9BB2C5FB68F3DBCF4A257ACABBF3440AA3512F348114F01B4183087307
62536CDC73146AD6DEC13AE8B2BDCC9705D1EC3FF076DE60B2593D2FD455584E
F6866CC21DBBE3834BE07D1E42BBC81151E6730A8DE91A44B360F3CC70548CB5
4211C96DCBE0B522E8B96E4DD3C751E3FD6A080DB9B2B78D493ECCB0AF8D84D8
028FB9CD8AC1F7D725BCFE2C1DDBD6DF9650F1839A55807DB36534D01A63CE33
33F370C5363FC2A58946063B36DC658AFDCBE838D3B8E39CFDB4364F3AE8A96D
C3EB9BE181D57D18BA76972D9DA5B4BA36A76EA8AE73D1D4DCF81E8BB360328E
56E5CCEAAA8CA615FA98B023EBAE84D49B2B38AB40CFF1363A899BBC5037A475
A7ADAA137EBF93D90E0CB6C103F1F9DC389C4F936DED82F395971CB3A1618D85
55BB880312B88B38FEF4B4418E16B68650780B96FEFB2978554887E1818CDD9A
9852D055B10474716A6BF138FBFFEC91084D59D059DE76864C5FD5CAFA2DDD9A
31A49977A6B71B8B14E1478BB56C6AD886E0C1E2F536CA41E1A99741ED0F255B
307972D611964908A5837E5A2AF2B96CD3483222721C755E650BDBFAB8183C09
3EEFA067A6A30D3056ADA2163130FC1D9B1FFB3BFF3DC2305401DD62F26620A5
5D50322F807DB96E62C2FC5A08BAA91D8703391DAA49239E992AF76E802FDE6C
C5B1F3BB85D94B5C171A294A2A1AC5C4E39B25C2327BC46C6A535D3096D8BF82
C82B277D553E9EA3C7A30F6D052450AE37D3578BEC7322354EEBD504EB46CC2E
6DAEA0D376856B203663809C3C62996D0A593A188B4EB016AEDD054459F32A72
AD2EF8DBC323983FE3A560E1D5792E2971C092BC4C7B21C934514CAB61905EC5
170C74B28E2642DC91302535A7A7466E607BC22767A432E524145B7F60B369EB
E541BCBE8F6FE5C750A28D618397FADEF1EFFA54BF44AC022846BFC3BC70F255
F07993354A3D1B161C216E0EF03CBEF98214DBD2D8D3458F381625DE45FF6AD8
DCEB8A164AC92719FEDBF3E46EC8C1F2CBE5B71DAA86850B8659D3421C7601A1
6E5BFCA39339D35F050EA8BCF7EA17EE31E28B8A352684096F160CC2C1C4DD72
429CAB8D42293545F332E15123BEB3AC78077AA361C4B898EF7F5290B1B2D46B
DDD3CE1E2634782A34DA72EFE16EFEE464A4A4232A15727E136D8C47A7F7FE3F
61C71B196211D5939D7CA35B39296D48E85D7991096017C62AA1228CCC448971
814ADC8B022E02915006E216DCF2556325D0AA115E821995F511261252B61D83
AF76F0EB2AA02C42F5C7095895003517390085E45F995CC6784FB03A02D15D3D
BEAD45A4BB102FEF09C25D849DDD6DABF8A22A743D274350B9A9254847E4B733
FDA19D01C97CBAFBCF31D6282AC4D30E4DD0FED90BA8001220F174FFEED08580
6B7EB13B303A6D134F58250AF2F1EA350D0E4681E1703429281187F68326E6C5
9A9EE2FB035BCCC75AB541593CE0BF88577830BAF10E743DA6FBF34698D04B89
5AFAE28AAABC061B2CE131A1811DE04E72C6A042C2EF0CB93876C19C8D31C6D0
01C78624B2D8656C047501AB8144025804B579673DEE2C0A556DBE1F1B99F31E
E8B480CC1613875FBAE5ECD3698DAC7D7EF1DA113CDB557BB8063E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC88F86B07C1097F9C5C5673B88582CEA8CD622F9B0C79
E463DF7F2F4C6640FF3852BEB520F7B23D8A22E7E601EF9CC6D0A2E6E82E6840
65B82C6A3A6692811E2B4F57723AA3A6E27076A2F63D6CE1FBA7ACD844E732FA
02797B386F2EDCE9FF9F84EEAD17B366D678E61C6176FEC09C94B74DFC090CCC
40AE9DA65E5DA02E7A7E8A840B45B752AF11A279BA06F821525DD0F477831176
84C80B29D318260FBC314986223F9EC4DB5B0EF2EF5D424C6DA581B49C709E1E
98149FEAAB15DFE7F94977CD2041DEBCB1FC8F4F3B288515CE43713570027C3A
C603C44D8AEA1F9821E0124F9AE3E5A1EA6D1C6304DD03CD20842B335D7FA068
735311F96609901AE3F5EBF70A777E892F5B7B59DF5377CE8622F82EA3D4BD51
B1C7DDB9F2C31CAC3C31CBD886DA508F4F1B051D110607EFD0914F27AAB77D2A
42103B51739C7CBA24D989635B289E5EB0A087319F567E3C50F98DFC652FAE88
AB78C203C6D210C162942911B3230B8D462CB2090B417B18667B975BF873F4BE
A9022072655ECB439854EF36829B0DF494ADDD3500D4FFA3CCCFB7A33189094C
2047DEB00A172677774217ABBFEDC33DF60D1972BA6C37D351D4A88908E1E57D
683F7DF75A468CE43C0CA363E13729C17C71597FA2E546CF55536EA2BCE662CA
D3C02792CB44A20B258ED67194ABE9DB2D7A84E18855D22FA2B5478D80FCBB49
386EB93CB56A138CA53E21DA2320F008BD50F3A7176453B4B7F685727172F659
B9869D066EB184FD390E499DC9016C341759CD15B985BB2D00197AEE3C0F83A5
0E05A8E6A0FD858F7B6EE2FCA7825AF4865C8FBAF1AB0D4645AE258AF6B60D78
3D56905A5D7794904C0CB95E2AA83511CC50537F9643D44B6981772E8546A6D7
9EFC003894118E843CDB4AEAA456ACCF3FCCF4230796B9DF923B331A86073AC9
8E9090F9F2613814B1E78ECB7CBD63C9C596202158D637A4661A34CA47CA1A93
C19E99677C4A5A97860D9D1615587D68A4AC7A720443A27FE6D6832E5BEB7383
E249556A7D03753BA53A78093A449C6652666AADBC2F5FA54F47F8B20547A2A6
14F78B17C4CEA5EBC76C94D6DB8098AFEEDB9891A584F58E4FDD4CE2E2EB14C9
C997BE5651DE0F5DDFEB996414C995FEDFB910B63714A26641FB7192CCD3AD55
5E3D7AC12A384CF7979366AC3E6FF5F66E0F5B6EE064A9A7B27C42F407217E6B
3585B8A8A57F3540C76B2342DCDE1A2FCD26B3B7B92D17AF21A8B1550263E42C
29E332DD622EB1FA4CBB5D6143C9E43A6C3D671BB4148B2536107EB91AB001D1
08EF7CF0B527D14F008EFACEC63009592EC0E9BBF0D3928768D5325A143886B9
E76544245E822C7E6CD62686952860A1D0936A0734A9A1DE36F9E21A4311D129
35AB96A45802AAF969A87BD4101124BB0C2D370B81B528968DFBA710DACCFC69
23EB6ED8A40F1D0067F462F417FC15EE796B1F15209D17E1B78D7EA6856B0304
C42BB3F932E312600ED89B480EE1D4CF46CE8E9A8B2658F8A1AFEB728094915F
25F1101ABC726C7DFF12977CEC1BCCB57363A7DE73A42AC13A7513534DE9A5C9
37FC3BCBB14210373B26DB4C2F271A5545D0F22148D238C69D4E3DF8C9F8D947
CDA0E3D317785D759042BBFE8B579881129536ECC48A3DB468C874AD32A3780F
CAC462714E9B8213A62391A2495C56830676CBF921C7564630B75C97A4360105
27E1C015C1786950491441449B4B25B9CCD80E0B9F8A560DDCACBE6A3DF3143F
7C8A0BA15856CFA4BBE0E56C7BB28EFF8901CCC041A59C138FFA99E9CAEE4AC2
08D46C122E3B9DC153341DB22AE36B9518755C80D5E3F34D1D5E5BBD088AB458
BF03A279A5D30AD2CE0CC10633250CD08B953DBD578E30BFF151343D20B6E157
E11D29500AC8B580FE90ED1EA023DD2A2E46CA3DE8FD68A48BDFFB73E7575221
94300E807C0FE37530DC80FBE2DE266FCB32B2727AF6CB88A7B15254F31D23D9
FFE2925E844AD6451E508821D22E86F9A1CEC3AF74E58906DDA0CA16758BE240
D505112A0C64C8EC732B2A6394E00F2876EEC0B7E4BDB82C513ABAE7913B9C2F
110F1EE6306849446955349DE583999C80C73A5759B68131C6DCDB5636615674
009C6C0F16835E6010070029D08D98D0B7420F64936EBF4BD1F21D5A94DC3913
5DC0999B083BE36F6676E9C7969CB1CC81496EF7CE5047EDDD657C5BEA00B8CB
FF3A092FD6FCA64EBE2D8366AAB71F8DEA2CC3D2AF8FEC7C47430DDD4F574888
4265BDB904108FCFB9E5707B056A3A36EBF34048C18ADF027FCAB2320FFE007C
F90DE886797A9F2C77B5B60404CC5BB2293491AC165E4A9D8CDBAD6B6DEA5A3F
DB0B7AE2D39733CFF492667B9833B392781566C1F24A7C407255A5DB9541A3F7
3EF84D8B1C2C87B55425CED9D4438B032EE21240F8A7829ABE2D18CDDC634A24
80694C4CE939A92C9CB4967DFF5D1FBCFBA3770A4BD158997B920558D604AD28
52373F4753EED3F2024542EA84B8B13E8FC9B7F7E7F53F6724E89F80C81D3FB1
4E96E232C26C914F8DDF89F8BEDA7C98F387CC6292BC8AFDB05F3D0BC0DB85EB
2074D98F176CF67BB8C30516DCFC354F183C4F8686AF27881D0479BA8BFF5D60
A4E0815C47E52FF3CE802BF9027D042533AFA6EA94AB1330C335C4378FB42D10
50F3A06131B466EDD015F0CCD10162D9CA0DDDB3F82DACE284F4793131846A81
D6C116569F83CB9CACCC6D980EE13B0E6738C6399C0952D525E4BAC9A7FF6E90
8D7C73B072163FFC8873D899BEAD98E648D0D3DBD18A8487AC63F7F67803EF15
1FF50143546A4BF156DDAA4BB88C10E9EE6DEAFE94262BFC75F36143C6F0C460
D4189CAD3F9892B3C138D1193DEA425346898ECB4A21F45D06C529FCC6B31C8A
D739B3DF397E2D8ACAD60DCD458DE8C5DC6DF732D0017C0F20D8ADED8D6C9866
67B37E4D9C0A054B8A253751872F83CB4C164C427CD458733FB7DE627482CE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F8038539481ED65C37F76490
6D8CFC414FE3575F9FD4EA6464FD48C29A98580EC6BFB04614B18BD682234879
B240DB0040631420C685B774AD9BA3271E9A1CB21383E4B0AC252D20E5BE6A64
5C2653FED59A11C112528DD45935EAF72CFA9320EFCF0BD2E128C04A03205C43
49561CBC7B13139B67C8A3A8F2CA292A335C8ED316DAEE8B8083762771725A7E
2D8F902B48369986740FF81ECDE13FFD28200ADD0E14D0DB48FC5544B2F519FB
38556582EB823194818E6DE249207343C37BE9B926EED91B56F5F504AB332FC1
7EABD6E425CA19544514575B9F8930F46766E9766A8286FE92A63482FB1DFFC4
CAEFC15D5D7BA5444EB942582DB27E6C1A558A23202EDF2C3F52D34947E0964D
0E8E89F6043C0D2C9A5CB64D19B2D50C3CDB4E43E6D9185F37A0B20E82B30628
55A334042E14145F4684AD22D461E740FA8DD98C89BEDF58DAB6334F4800695B
15D7A73C7B544AC6853BA1445742A6C0884BF361B64D327E8645F448A5FAEAC0
1E83B18DE3C0BA528765BC693AA01D8B1A594B8ECE515BE82B5BE1AD90B13720
D2293012310A559902D75FF0EBAF919567B7A1CDA5E14FEDA66F62EAA5574EAC
934945ADEA6DB4E4DCB64BB074C6094FF04D814CDCAAC830DD6D2B2353019C8C
BCEF37982713B52CD8232E2BB8D40EE21FEC76772B068BE063365A7375C5140E
3851D25DAA0F28C26DF07D1C079E556D6066901ABE065899ABF96DAF189873BB
AD86DE9D811D1EFC1616B16091EDAC559A220F29084DD86CDFD8A9ED3B44B090
C731EBB8E4C903AC30059F046379C9BDEBD3DC879377A13C5DCB4A7FC08F8842
2514146654AD758A7C7BE59C3BAA712A0A56D9636B62813B8316FB934023F37D
AB1F5EA886D58A31ACE631E93E80DEC17CF4BD5B6DCC5F7E835C3CE7D4454AAB
910A339EAB5F1E7ED6C02676970C26D5AC77B37C814DBDF6BA82FE91053C9B15
3C00665F1C31F622A6C3734CEDB44A14DBD67299AE5B407C9019E38D619DB6E1
1B9F83269A99D550366912C362A56B696080FA9F6C289D3C21F2BAE3647176E3
C9B6190F3DA6ACCD6DC66492D76B2AFB5EE9C9F7F04CA9CFE75AB6288B531DD7
6F5B112B0D2F53BAC362B6C262E8C6E110D2829E58B3F2115557F9DAB68F2B7E
BBD5193878AF0D3EE755BD5958FD3632E670311026522F347A7E54C91D69A00C
E5CF3F5C7528E7A2E5CB8CAF5B6C5EF38D62BDD9CF7072F2714E97474B17099F
B5F3896887F0DB0C940BD5E10A5FE74E6494B1B6320CB7B552FFB89F11EA22D0
2AE6333848C96080414C6E4127AB9A549A1C2676121FFE37C74CE40C820D0E82
87EA387090CEA410275AEEC243C01B50D77336692AB13A9F2183C9B0A4536829
527A871675FC2F8824FA57C0BDA3244FE421DA72D24C3581F7F1ABA731CB447D
19FD60F946A660DACF72BA7154675669F24CAC53C721060702EE12C664179999
4DEBD48FC04EF01D2B6FFBD4E372B3B85E00C10EB6B5399326CF3CB13D7BB6A3
7006BB78A920C3BFD46F9AD39C9FC98B91B51B9E1F6A47F14E57CFAB1AED71FC
353DFC5B30A603FBADAC7E43B63A882BD619E559067BC2EBF502FA239B06FAC2
DE33D3B116CE088389B1BAC0B0F263ACEB7B598DCC3E3B37D07E57195732A611
2474235AE4FF590ECD97E1A3436BCDAA3DDE1E389CB8991590DC00FFC27F6AA5
2F79225868783A50546B12D63743F7744D0149327F0FFB5FC6CF9A1854A07D5D
382437237A777F33D08DDDDDA07EB0380EB95329B5EF8403BA987D661DB928E6
4897593A54A7B31AA8508517426AF818185B8F3636CCE0A293F905974A0B3703
AB3917128DE2205D27D2ED7271F16CE4826618615CF41258900212A5FC7F4DB2
40B62848EB6136462593C789125BC27FB4A991C45634B477D3BB3732E514A7CC
9AB0195C0B9D8AA2604D44E97BAC3B8BB13E562BC696FCF9D3E2FB4251593589
540033FFA39DB14BF943028DF1E2065090894BC8200DEF93B057C7F66A85C0AD
A4431436009135FFC380700782F7B3423A172C117BAB39735095A31BBF3C1D0D
021B9AFFDB32CBB380D34CEEF0FE8FEDE01A7AAD5D667300F07CB0251D7AD6CF
34EFB8455C231D0F83DA849DC65BBE3920ED4B0C26C9BDBFED4F5F0D7A56F0A6
E0F662104C8DA9A7FC23CA5A3BAD048442CC1F0FCC4305A72F95B92F59D02659
52CF508955B9042CCE1666D70382E47066EF32B55C0E6C112F1CD5A5700C88E8
8264CEC2BA2655C0B3BFEC85B8FA4718EA5B4FF501499BCF9017D11C9A278D6D
49C18F7B73ED08B091463405175AB4769D33FD660B1288E6DC87BAFFC6C93AF8
FEC1549D10DD25BA36D9134FFB899B2EF443B0A51E10221B4EF82DA93D876C17
26D8F62BD4EDB12D4341E3712A3ECD2F0AE54C0459012F2526E99ED07FD2550C
E2A96156EB5EE9F9A9A9955141D7D0D9287FA97D0495E28CB8E2FE2A4CC0B9DE
515E47AAFF10B7E5B883E4F758C6A6B04A4D2B3CFF2DA59037ADC23BF2E23A46
2019A6C8D0750307647DCD99E605497C7CD0CF1764834C8E19FC6FEE6D053776
1A7DE29873F9600A094DC3C4B0CB7DE48870D04E719EE47FC516D836AADAE565
46EB02DB21A73395BCA83FCE0390DEBA757BEA45FA3171095052B839F7A2A9E9
1B756C8DF7D51C4905B01ABC6B2D707F1BF8FE2E96295D5FCBBB04D77DC4955E
84168F9AC6EA2E25C8C9A2C7A7FD2C3C0020FC70BED6D04DB4820FDAC0024BC2
60B6DD4513C1F1A45F3CD7BA00458FA7A17EB945DFE97DF65B0612857F360BA1
F06AF09DE5CAFD23DC200C74DFB15B31C0EB8C910767C395ECB870DCD89BD73C
EAB9383AB433359862DCB30BA53A413B5E994E408CC62356886E9B27AFB1ABFE
628A6567768FD3AA9F1004852EF82E1E517A76B754D7D03E02278C3CDF14BF4F
E23DFDA51D40DD9BF5DDD3CB175F3E1E612139D79BED1AF6E4A25BCCF5004039
3237695B92C51B6E9D71DC13F231A3A822D4D2F206113B3C307DDB5FA243CC0A
5675418F3EF2EE092B3043182EA2E951674F836BE55BACB3C737A5C73C170B65
63DA6A0785DCC76313FDE2A91445EF7A5754713BEC6CFBE152CF0488CB9B4E44
FEFEEDCE7B6160978ED7FF4A5199B537A8C4A93ADE99FFDD00F27CFE05C79882
D6161597887B34E207FD3BEBEFF03973685DD97F036BD60D4E3F90E8F44E70FF
842306ACCF65C0AC9673859DB9C3A49A6A50BDA39792AFD17B52513AEF6ABD14
878C181A430EC26AB405E68746B94535F38840BEC013B783E6A8779CFB7EFC36
B16D14D500520213CC900BEE740B4A1080CAC2D8F52122B8BBB73BDC31C477A7
F1FC73B49906DFB7B30E7615BAB550A8E0F36D01E48058D763BFCEB4A1973F17
9C38790D3E80AE0EA0AE12F29D5D9425993FC10789AC6FA679026BDA2313432E
1514664240BA8F9E77D69AD3FC11C6CC68A1B7094108395E291F2FCB7AEA8756
FAA7AC4AF24209E29B9FBCF5077A9A06E017DAB387378C1022AC2358DF7ACC2F
DA244E6697F71D328B75C8A45ED115EFA716E85BEBAB99C42FF34179628E5C36
1F4CA0CB8ABD53C623F5E05385D9D9B472E496EF29625E0A430A7B3D3ABC525B
35930E9C59F96EBEFEB9A51236038D44AE6177A99CA752C609F15A113A541F9A
8628BD047DFA40B7457C36BF9A0846A0C5007E8D72ACF2D32D10C3597EE5FD19
96F8AAE791FF65FB53F78C6F639F53C2838A4F4DBE2FBDBB4E975D99697D88EC
5151E7249D4BD19286B1C00698760DAAFCCD32B85D6FE0AEF640CA1B5ED2C294
C3516F1EE4C13CAAC355E995A962D99275BB5A558C353E220C1970E98DF57796
C609FE7A9F107A437C5AEE55D7062DD9A9AF99461B1F89B3CCB0149CE75D92F1
66C33ADE345C6AB91921B93E22698328AB963EA506A2A5A6416617A6D6AFDF83
2B4DBBEE2065A7C30E8CE798A333D20D4CD01885C2AF1FA17CD5DC6C38DBE7E8
4628862870D89C85F9ED42D3F61FE849DACCBABF3775B734778EE5EB5C6F48E9
11D19253A39F993A39F71523062C363198B3186005E9D570E7A1E2EB5632AF3B
F48564786B8C6BD6AADD455B5748055DC43666FFA6D2F73950A7FCCE5DE1A7D7
5748289178A105BB111553789009FAF1D1CAEDF7D87829B24FCECB48DA6611E0
ED9D9B48B52AE051CA30F4779C13FF1AA26F18F32F22EE1367B8EE4BD495C024
94F1D1E7FD1C846460C4FDB6226920324F65179BB733CF9A481A458B82BAC40D
755723883E4B2767E236BE224B8E5BF41213AA578A8B93C30123BF16123CBF59
73FE18C603324E2127A46E9DB8EDBDEDD0897269186E9B9BDB90A1C44D616410
30BCD1A4A309FC756406669E34C6A08668808E0C31A589D0720CA339F1DFE977
5FBAA1495A572719400771332BF013ECAA98E955D662DC9AD78F82C29C3DDC08
B6A551B0C73387E37DFA97082369335AAA53A4D891DD3CA40653D35835ECC699
EB8815ABFD76B252DA958829F3C7D61F35DE8337C6F2DB6691434BCA2B4E559C
58D01E8E6D964A6E496FE804591317688C32F948B47DA046070E46E4B8BE1FAB
F9616E20B6B12B517C1E56B18A51C229D30915EB66EA1803EAC4AB9F7D674E70
89B4D57115306585F237596B5F08183595C8E603F6DD62558DBFE78E0CE89FC0
4867822AF1D7550E5E7E677064F1C1291F0B78C205A58F29DCB55C3052048B9E
3129847059CE0F6AC177556D17F337F31FC100C92E6405D7DD1C1CADCF7E712A
8D7EA7C770C3DDC13D65906CABB3F575923E8CFB4E377AC0EA0A6E5E7387092A
630EE4A30A61A4A906FE2791C388C83A4A2F5F8B75858AD3B5EE0CAE193EB0EC
4A31A706DD36950A8F3D2E430290A40947B84A0D64CB893B9B458385124758A2
CCBA6604E8F72BF2316D9271847F1EAB01CA1E0C4F2554BD6F1F4C69E46C9C22
0B8A6645E7267F9F8206F24A189E57A0B5C178B7326860AF2A36D631E338A0A9
D593462CF91C1DC3D228BCF7E99F93F9175A9D94B60FDA916CDAA9CE286BA678
7F495A14AC943D85F46743DEB35DA63A24D81C3E5A9804EA61472E099BB43474
D602FB6D02F57F18066ED53549CF9E7C3EF758A6ED752F5393470DD641BB173B
202FB9C5CFBABEDB71694A77C0D54F9300B1A5B26121FB2EF7C292EDB7025F06
943977D6C64C44F448E8B2F7AACEF26223D6A85D673ED061AAF6305450C4A820
C873267666ED00D26BBFC6568B8E12F0152214A3CE1D324BC00B16D7C4D77CA1
AE26ED82B2F9D5CB5D32B93F2CA8FA546DB1A5A2BF31667BD03BB92F68AF95AE
5C97D39E01B5B1351A739002FC8DF942EEA3A07BF210C878F5954B74B51E8019
85B961746824976B790F553FB24087CD6504E6961B63F20E5535735ABD099F2B
35842AF2A6CFB7EFD6B57700B1169A470920FE22687DB9CF10CD8890771F7CCC
7C9CE72905C75E3A018F3E59B68D0B055D631E377ADB2DD5A9F66C4F80833D0B
4A9D848F9C630F52EB49FE6699B576524218989167ACE0770AE23C143F775619
64F9882AE8694C53BEEBDD118D8E3B6A9DA70201985A28F77CCD695C0773BEE7
AF65C13D5A8BE52B960F67D6D533ECA263D30C85CD8FFA9A27C1BD1A67CC197C
6775A117B7B607BEAA7CF9812FDAB839AD7F7101DDCE5EE69C1F877ABB152C60
E40979EC3CB484E18505891086618044B4EE0F4C3D3AB7CC8FCC40A00588690A
B98E5D6E0EC1F49E0464F79D5158447477150E171DF8F5EAB5E059B2545EF6BE
61C442FAFC56D24590CB61CB54B870B7C9C0705374E0C8E16ECDAC57A86B65FC
2E3E2F572F339F48F22FBDB31B32E27C8600D2555777F048D317210A6791D432
094998B144BC6FC56A44F93F1FEED8109D87C3B4C7650A843A6DA366E2D225C6
25B9BE4C690CDA511A96571999D7A7C3348DEFB4C6F5538E7F57DEE639C85E84
5DF8AFD32E2C9FA9D76F9980D0B7EECA805A8ECC06C40FEBA300B5D5882F227F
5EFEADD582C932F59D55EE7020BB54E07D94B187D72A93518C1C686CAD65DDE0
C855753403BF73AD979877DCDA412F63573818F678B24384BE4FB52C492BD8F7
DA28DE71D625BC1480D494B8CE9C9A248C6B8DEA57B9EABBB715C74BD161B6D5
7BCA6C593CB8575A607D19E71AF5CD302837BA49E58F8E0BFE36BC8FDFF84EF1
B037F6E883A41645C1E4CF533954DBDABA0F25C44B4AE7D581455520DA75F0AA
2AD71C12C959D901F3110239048BE84817BC6C82C18B54D4DE7D6857D59D2EB4
51EFDFA251E9C4B888392C07F151CABAE24263BD660253A72E63479DBFE0FB80
41A873898332BB644AA400929ACC7E1FA027FF49E581739F38141B8B4B0BC588
6F5949790A7E4B850B6B8E31EC18B7321E63AC7C1CA4F5F3C628A3AFABC5D092
2D917CDB0ADD125F38AD34B60456344BDB08C929F9453553452C97E016C268CE
B186986DEA740D744963AE53A1B8DCD067A4C160563FC91484124644010F3AD4
B83046E8FB8D95467A2294BA3A0E2E7FFE9382A570237B4D891245EB3074E0D4
D0E1D731260FB1758BAC67E14234D25747F1E68E0C36FD39EFECB89C6B7E2213
C6BB5DA31DFB05876A64386E8504820AAE1F0B28330E00E9D210D7B972D494AF
A5BEA4B4F4B87DE5AC09FD05A1762B36FA02D42C15F455167DE009C99257A9A0
9A3BD8FE0C4D070656DA891F6B6C2DDADEC4833DB43341AA37BFE2058C59E120
3EBA3B15A48E078F120A45FDE2CCCD226811D375A23B26115CFA8C34C9211A48
AE998ACBF266FEB7DA27CFC0DF14AB47FCA3DB6C39A8267B043DD1A309A1F1C3
1BF683F9E33944BCD5B288366AD06FF8489964A7848FC6F3CFA44B7F50277362
FAFDBE73F8F6F99550EAB6973C075EA14B305F907D062423EEC29B326C19A068
4DBBCF44FEAF613BE77362E1D8E2B8FB0DF6B5FB6D5C415495635BDFF798B313
540F9E30B9B61C6C54309BE136E27A372AF4CE5A6512A033078529238342C32A
4B81788C31E62BA0614BA5D71148346D2C00518ABADDEA6ECD7A1713DE7AD5B6
3E995B8EF807519A5526F787B53096F832A3E9FEA9B220D5FC4D84D0893A31E4
1E4CFA0E9F124FD73991B3D28B5E9A7B468C11A86C1A517F86D2C6190AFE9B31
BC892A2BAE5E6887463F834EDD2608EA2C03E0164D07F2F4BD684A00EBEB709B
B571CBD6D51C00B349268DE077F06FF4174D1C97A638B4620E485A996CC84306
CDD2D6B4B547F57EF87FC74899D1667D16306506EE806011CFFE9F801463B160
54C2F450587BFBA838A12ABE23EAABF436DDA3857E065D555CB217F8857FE0DB
1F6F94DAF510498B7AD39ABBC2B58D97BFFDD887380109216561C53A75A26E04
D180892D9E1AD5D37BACDBCEE97B97156C9B61E3A2386B8884B6450BDD689A10
8065468A85CEF22E5B4FC49D4392DA442669E852483B7DDA5B70C799F437E74F
0E182E879208B17C23398FDB623FE84F8A8D458A6AC2EC88ED834405F4AC37E8
983FF2513A08FF2363085F052CEC01B7D39923AD6942A1B73FFF557617895F81
8286552046B463C2C86C378E8C16EACC723052C57A8D7CA479E41A705724AAF5
3671ED0D84110670483EFE13BCB89E89FF2EBFD57B97F5CD56CB80CC88111C9E
1CC5A95D86E6614FE8F15718DEA609CF8EE797BF0B781D00CDDD6F5590EFB7C3
ED6251A095434D81B1A68AFD88B506A966D125ED31E44365D3319C2134B46322
F7EB16708D2BE2CA035E0AA8E687DCEFF026052802E70BCB2C63BC975934FD05
E3FCB731F6D39DA40442E648D10AADA23516331D6DEE64F933EBD4AC4E972CE8
7CE82615F640E839B75FE959B55948BF6E9180221EDD0ACCA578928815D319AF
70006BB458A47AB5FDB14365B551D5489030C1FE927747561824EBE44199949A
F13E05EA2ECB274ECC3FCCA3E6C4AF43940E6F22569A9BD942A1480EEB3964D3
9FF46A79A6F5F84DCED3421BD4A0179BDDE6524E49B3BD50276F8595FC6E2DC9
7AE7BD985281BDF4F0B7DB6C7E7BA791518DFDFF3D66FAE91F5EFF67FFA5F6BE
C1CE41D4B25FA514BAB9F71497FB0B5F6FE0FB86C51FFB91A5306D2EBD3AA0CE
027E4703A2EF8A43EEAC604E5E5A04BB18F27BA5F35FF4360739DCFA181DD539
CB0183B2286A4364A8CE71574F2DEA72E061762B22C960279E88A4C24E1C53AF
1802803BAFDBF8ADB8C841FF0C51D65B2AC4AAA6EF2BA4E94A3367170627C47B
2830C78FEC4F546B31566D0877925919E944543C459ACBD95B86F89160CB448A
634EE819E47AE9E2B9BCE3ABE6EC68FFE98B8597A64808DBC2A169F8CBB6E313
016221878340DAA18AA6AEA3BBB832B8806D34BDE286AF78464D9FBF4D804332
43428BD9DB831B58CDCD3666FA965479B2A5F85AFA549BEE2DDB002231D7AF3F
B95A99A9211EFF34382498160E4B577A851CF4CA16EB943AF05A6D7B488CEC77
941EE8A8C565A2D342F765C725ADD7B0D3769CA55C5BBF59EA72041C98D018F6
50BE2BCC6663A97F9A494EF78A93B8E845186DC8ABBD3F4D0954D767BA87EE1C
BD3BF7B3620B1A214A978CA100066CDE17ED245D82EBD6D8A0E6E0543649C6D1
85DA8A80553F052F97988D4B276110BCA39FC7279C0075F512AC73798C9668E3
8E4B93D0746AFB81B32F6F7CF24DE7029566695B04E40439A30337C834EC6F21
B470966E7A753588E4F29B50067D22AC910AC15AC872571A14100918F605CFE5
6DA8B9A95E2F71E964DFE2530596B19CDEFC01A7C48DB7041AEA1D83C0F18DB4
794053F9851F31B92C54DD21C9DC3DFF06F3966DF7A5CF491EB54C7DCB8D7286
2D87AE87F9249B2FCF932EDFDB2F1A740BA3FFE21D9099979EBD752E36A8EA33
F54124B9B89392974E09C2413E9C5122A11A7013315C3951A5A09313E737FEF9
1B42E09200D95D57CD747F029DE975FE6BFD45A16A26F5B8E1ABE5009BD17D8A
90C410881C75518F0CD6F17EF1C500407F6D442E92EF2E00B8DE7D78F8100DBD
C9C4A58C2B81EC99E8E966AF3390E3FBCA5D2B7ED6396F2DC0C27737DA383EE3
10ED0B6E1698FE6BBD67F76E7EA97E2041E5D0F837F04614F0175F0EB366057D
4947F8501B061371500AC7FA2630BECCA031883F9B78E669300402E5DB75B168
3103305C5A43ED712BF792D7E9C281194A84A9ECEFEA5023317F88FB64830DB4
55A681558677A7ADFFCA03CCF78564288A3818DFA72CA64CB9B077010C1E685F
759A11A01D1A7524D80691C25A2AC398371E6A43F31B506CF77D9709173615FB
4CA786C824114BD6BC3CF75BB709C13660417212027023944DD1FB4DB0460B6D
7DB302E9AC30AE905C57EC475AF7D2100FB37D08948A4E98E17F6D7F98CA1208
A4B2AAC060163819C8EA58AB5E2D77FF400C7ABB3D0A565A6313C91B57365C9E
293CD84D7FCD0058380B4FE3B23DD4EB3E437DA8C0E186C1646CAFE072D9045F
AD5A9712EA6ECDA473786AD4A423EA8BF7AE912398B2788E22776519ABCB28AB
7779FACA1B96831C17BD9C1F9571F362A4BA881C2746ED44CC856FE7D20B0812
64A704F634ECA1A02C2BF0494B127D58D057C62A86A6D70BFE19421FA0D6027E
F8C615112A29AD57AF9DCF94E0AF2313AB4829EF58D62DF6C4CD5658D8DEE558
D56E146F5B141A58CC2A46228F2F642101F5B23CE1ED3A79F9AEC6121E11712C
9DB2DD051A85066E4C8A831785480C924857D8894876F46A2A4BAC73AD3C0FD8
04C49181CA97A2370AB3C99088BA3E5E9954C28F54CEDFC72A141196F00C4977
04AD5892D7F2E681EB1EA12AE2DC994A256E70540E9DDD953DFD01CAEBA561F0
28611754F949B9E9BD2F2684E7576F4EE17E9A792607580C03273289B6288BB5
021EE5AE710302645B9FF96749308B73EBF4DC5A06ADDE6F83BFB368388BF4BC
76D8B37F28A63D57E2C83111764719E420C919C62090106464090C441AB1D0BD
751575D0A364947AC3131CF1EE83FE0D5A9DDA5BAC7801BFFABDBDF0A982973C
F003F2D7A130D2E088EA3C8C4D4095D3732590B5E767CC184E9759AEBEA33FBF
EE4C7AA9A9D4DE33CD6D813D150A71DE3CF9D20F5FA45FB15F984C311625373F
F73925D862525CA5E696419DD104F328FF78DA98338CA7B9A3592DA380590D68
0C5E9BB5D5118C8C0DB701D2AC177534FE19FC87E7E26F3A50789CDD1E4F08E9
A6DB793C1B1F3B8F937AE7E4D06993CF594E9FDECA7817AE2B293114B07A7293
55B1CA091DDACD1249255D1F4329FE92C8C5247752B2945D2D70773633FF04FD
5C98BBE16C268695A9B163C2C65B633807DF48942C90D9FC0115D85BD7B8DDE2
71A0D13042DBFFA556A1B312AD723585048D44006BD7390AB0E3183927C9903D
BC1C0D31756164B01C3061C549A475AF4E7F53D9624619A4EE1A5CA99AD4D51F
F975CD8ADBE47F6AB4BFA30F88D50CB5BE5F12FBDBE6481D67434810D24D6312
B6B2AE2F2774E3AF8C5A15EE4F4CF26DD7BC4F4D1D65E613D62496D758AEBFBD
494623BB80B90C044713601E5C3DFA570C5289218D585E3957F8A5F1A9FFB71A
A63B96128220F5E734EA2DE6F8CD4225EB94D4436925DD050A44A82E58757D6E
68D2270B55C17323912234DA39E80ED5B20D8896713764599CABD316B5BC7684
724C64983BD82FF26906D52456D8D43114ECF0B4E3D6D9170D5934F399C22645
40350C9C4105F867E2AA3F10C3D706363F0B42C39D2AE574676AA0592F3F052E
71E8E353D5E54EA1D4B6294F2A0C317554A76DED2743FC862C057D544A418F55
82332AFAAD3A3B0832C2CCD40CF07EA3A8EFA007706B36EB97D9202C5763599B
3C05E1464BA144C4EE71B2803A6BF70C74D8EF4783865CE3532C2BFC659A66A0
51A3404D96334DAFF3A84B4AA0E78957C95F4C5D5C0346CD9F59A3E70196ED37
E6BE3262D1AFBA823956262EB397348C0743D0F234829B8A9C0B39ED96503F20
3735D16553DC9E0C7C69B2FCA88B893F926BC76BD35F7885E288F5699F7AA3F0
8A9A1E7F6032176750C08BFB5FF3FBB2E6D45D87AF79C754F223D3795482F7EF
54D856615F5C4576F6EF44CBFBC583BEABA6A577651BFB74C973F7D99BFB580F
4481CBC0E5EC84A3D9055FF80B0EDBA88ACE524159B4902DAD7B8E6ABB906231
0BE7754F01A5B18BD06CD658AB4AF27B1BDB96A42FA469C5D22A4661FDB2572E
1DD4EE78D24DACF418B6AC1E4520E300D4ED620E6066CE322A34927B8BCD0708
A1B45270B58CBB1042B26C31BF9E40F50E74F1D56C307F2F2A9FF95403A14279
7E0F0C40C15909BA02E8127B1D6467EEB26C12C415CCBED7AF47448C6F34C6A8
ED4630A58A2C7653A7F34B381DA932CBD3B1526FD5B73EF04EAD7F45958B456B
F6EAAD2163B2871DDB76497570C90861F3ECF9F1B1EB9B986154E767F4DD7373
D2E090CE356984C420CCFBFB3268047B4C03A37A680D1F806296BBF9424289AA
5A485C0819C85E12381B4DF22BCA0CD3745599B7A10BBE56B95AC6B30A15DD64
12430C80763C8BB4F51DF9A4E43DD949FFDBC1EB5419A9DD28A2554BEFDC96EA
87811555945C76CCA4F116849294DD8EA089FB3950BDA1DA75B8FA742EB1CA42
2822BB85689EA733B47EC4BEEC3A1B2ED4ED053A1AD9C8B08F37C8247738575E
BBA554E69403D6893CD2B43CA2E06AF86228F0099D542E9DC5F1A9C25C72216D
96C9CB51264A9DF525C7577F2777C25F86E3A099154059B4C3D3682E201087D5
254167A21F54C7741A0ED35AF47FF40F2DA0B75EA8C8FB72576306FAB48D3CC0
FD2749372883A262140C4E6714F5D76BB676CD8777C1DB8F5B0DCBFB9C8A9598
5A0571E67A52C44DC913738E35732216736F12E3E76D416DE431823060FDDB61
75AB87E1A511A61643A607CDD14F0BF896E4F2148FF4647D674AEEC41A3E496F
DEC2C0A1F90C1F4FF62DB2445069B059AED17AD34223300533FDA11730BD7A61
B9FC5DF8A50E6F0C48860C52FEEFAA70B5953345542B7D3E072320BC72B83906
5284ABDF150C4220A12DCD32FA980EFA491B29D5154B44B92380264962BB7653
508B5C29158018D91CA8EF5D527207AB1709E1A3FA4C182185DAE24CA627F360
25A4E08A62AD01EF1B7E9D687DFB5AE7DD7C1B142979D80DAF96A3F351793357
4B07E3AEA085A98E8C2289567906FE61337CAD44686AFE62D903D8F9D2AB32E9
A21F3938325477FB5F3A48DF5E0C796EA70E79D1775A4271DB221ECCFA25639C
FDADABB26CB3087532E0E981F879B79440CDBF6CC14F198DBA7A8C4FEDAF8837
F3B650A7FC244C1C70567056000A41BDDED2CA6DB4032EA0C0ECB7BBC044D8B0
C662A0B19CE443EB9961E1A4AA6C03AB56400180B75A10B31E330BE53DE322BF
5BC81552808E6C60013B38F49C5F4D443468222C88BC63BFD8062A3915AA5CB5
74BC60C16FEA1B452BFB212BD1C6BDB9FE7824823E37DE05592BCE6FD4F9FD1C
44912E16BF834DA5B13327538D51A4BAD1812A81179665976D71E22D7C32DD6A
251141C84EDDAF6793DADBF8F475D29464F7A66AC0787218F676D60FD5560B7E
80C2663D45CD4F6DD29CFE584C5204B59BAFEC5FB40AC5AA94972B8F4DFD4FCD
AA1BB09720C0DDDDF3EFAB051B0C636D70DD0EE5E56361CD2703264B69BD25A5
D100A07DA63BCC2FB48992BA917D5B91FCFC9CADE032280F7E7EA7C9F2D060F7
F5ABA1E3A2A814677584BAB2DA260EE0BCA5C8FAFE0A12E4E8DFE8EB63679D37
BF5429C6590AB33DE13EEBA9C102C40045692EE3B52643A0DE3E672F27E50AEC
FCE6876E4E770CD78BF0179451C84FE2CC514EC56750891C94A4B2B51C83CED9
FC4CD766291C7D57BADC9A68B2966D7BB767D71155AD4338BE2FD18650F59A90
2529AFCC3F1A325AA9776B33CEB0A96B243045943246515B1EE31660B76219EE
4C2F891E2EA012B331A828E27882B0D6E75FAF1F0EA49BF15B2B389339270467
8FD92C3919755C48B4F711372AE3B7BB1090E9EE6B3347216D97068483D77D25
9587A79B98AAD61952AC0ACB760B0FF8B65491EACE7DE5C8A2A8BAC827C61087
2005921EAEB8C5516B4205E2419B5EA3CBEFFCF06FE0F759E8EC0864080FACFA
56E1FDE940835580087C6032711E3ED540BE77E249546AEADFCFDE52F22BEF34
F7BB1F508690222810072C4F2437E7068DAD4F6EA76B85DE83318A61B710998E
5EAE433D8A82CFB15547B339AF3762CA4DED0223734E5A7F68B96A1184091D12
2ABB1E389396C82E483E112DAF52BD9C89C5509E0B8D13574FC2C0B704C9965C
87B89B8C1DB7526B19F7F0C20B11FDB0F73243B752AF11A279BA06F821525DD0
F47783117684CAF85866C48DD5BA0988D92C18178D980C95CCC8786F858952D7
2ABAA16537D2D880772F06DA0359EA459517CFFE993949DD3BF9F14F61C0D2C7
11322A8F87BF7A118F817990ACAF0143570E5FB223ED7EAF5BDC32AFD8FB372C
957CB9524FBB56170E9ADEF02464A57D0CC0A750855F2E69F9F59670F469C635
2D659FA6F3703FC79A130F111915D5205891AF008F869D7AF5E4EF1989FD377E
905F2E6E64F5C86707D726E8CB6510CB7C057C2D55F381E84601AEB2F6F85102
42AF91BEDB6D70B1A52B91FB3BBF290D38702EBC91E16115B046F8F40F33C536
66E35EB722789565B6D4AE9A5651A140D24002BA43D9321A394AE1626641060E
55159270B4794F9C0945FEAC295D11812B93EE138DE1C45A817B3FE39B1A8FA0
F3F3A77D3E33901005065A79F196279087A3105438B41F2A3488416484F3D077
266A39B34F4B3F800F4C6613C9390DD954A66E3B0BE5018CEEA86FBE5B2B3E46
711774FEC1F77611695F69FA82D22266532F87CC8DBEF7EEBD525766E08013FA
2602C71401F776BE0D9A35E67F69AD67944338F00BA06878E9B177DF9D1711C6
653A12A443D87E143F8946973976EF232F76C9D0C0793684D68FE95129C323D4
7DFCCEF9C018C3D8273DA993B9A1CF9577C010788EC881D0EF03A3EEA97D4374
1F54987AD65FA54A1BD687FB3A5E1C317DD3AF44E46800FED97CA40252808F6A
EB4992316D32F80BBC99957FC27C6F97018C057782853A80D866591D90A53CCF
3847B4B82383C4D9EEB415FBADF24B19365218791DA09A09C7AB12BE2E64A6DA
55B6D2E0C5A13BEDEA4D61E8036A67CDB7E5708599D51DBC75781E9AA4E4AE14
D2E1F5A9C868442C5DEC207A5BD9D2C00500F696EB582F5EAFD33A8B88C6D49F
1AAEFA49BF6A2D0722A28D29245A4AFD3AE32BAE8DFD59DD21624FD9C7AD7707
2FB9419F12077754BA3854A60A3676CE5D4DD2373122A4D63FA6DEF19465B3F1
F7D9F110CEE189C5F2469D399F3A9476BD22EA0588406A8AFB3B28FDF44B9435
20D145BE35C8758391594AFF7153A7B5D4448FF3CDC8F811AC5FF0A590473E99
DFA97D901589C53187E3506B221581344C344A2B9834F97C6EE56522D30CF191
985E3CEE76DF3204AEC1961F654E12385D1EC21D1F9FD052A15453B3D87E5BA3
83BBED896F36EEAB8E04F584290FA46031B8D11FEDD10EBF2FFEC29CD83DE07C
B285F56F708E3AC8167A29AFB37318ED3C46E96C974412F0EF7CAB38570490E0
7CC72DC667B7655B5AF313C622FC9A1944E0D8B3EB3AE74B1CE21F7C41C9A7FA
5FAE2F644F7FE5616B55B1147525E3147648B24544D4D0D28C970D93D479FFD5
CAF4D703926F1BA042CBA121403FA1CF074F53401701EEF17EAC1C7A901496F8
6B39EFC0A655D839B928EFDA00F21BDC87DD2D8DE1BBD7947B768940A11D4098
27FD133AC943DD1BEA4A303697EA12F26140F09CCAA883416C0A07D23B825825
29BEDC07EF7704477C634E68611C1C54AA66E6C6D3AA71499D39CE0567AED672
33B2C6771009FB867058429114DAFFE87447EAF45A2D4751150F0EDE3004C44A
EAE92C7D9C93FEE362A30B21A0866E56C003587F8F92F1928B97F03B95E29E6D
8F4AEAACEBDE3D65EA4F36C4CCD5E728CA78194068D9C3C3A4C9F519E7F583FC
B9815E16FF46354227F0F9C6D112762B8527CBE3381953B0908617A28D2D6B1A
BBDC9D691FF7AF4A2438EA64D80941119347496ADEDFAE95BE82CFAA6481E021
CB53EC320AAD6CECD064FCF482966C3D263538B5C97FBA29571000F99AA9868E
AB1A2166FE65ABCDAA308258FCDDD13DCBB18E462B56FCE4ED963BFB70CCA5ED
0FB14FFEC866A1B6351BF489C96AE2F7CC78C953A0B826E47018F8212C5594C6
97B288FEE4D9E60528611520249698A92CF23C5E8F45272A077355EBCF9374A4
F388507EB1C5911495DC5E665EDC03069739E4846FE4D215EACFCACD52145B08
C936B0E3C63AD7A6EF747AA4F26D56320069EB17CD3297D788550A5D18BB5FD0
9288C383CC499FB444B681100A7AABBF995BC0AF4296A237E570D6EB12BBBAE9
86D79303CA403DD3E9708A0F4C33015C8D417C0C33EB54B7A2B52527D63F3D84
CF6EB91BD761D60494E147C7D1FE0770F1CBC64744224618CB27405613AF6A08
21CF81AA3BD93F1BE7688AF465FE7C2844BF832E4D54880BAF264A44318843ED
6811B7F5F9B82BCB01902D82E4EB6BC1D263A3F79EC841EB67966E9B6F104FDD
FF62E82B16CBE3D401AAFF4A653BA5484CC6C201DF87F0F105C79882D6161597
85E08074F4602705B834E9B0391E126C95C045927A1799AA416453DE7C661ED5
D3477A95C24980073E63DD9C96F85B2EAF9A4052B1A382AA2E1E1DA244F00DDD
16CEB813650D4D2EF6A25A1927485211BF4530E0BB20C6CF5B730AA665E81EFA
14E50016CF96ECF148A8A1E8BB212F223AD9D6D92DDE4B0DA61C03BF4360FEA4
9064FDE9178FE0B615F6F492F8D3AA12B7E2928E87443D6FE069708A824F05B3
A04E3B3771207627976719AE233197E727DC45E92CBD63C02AFA682C65C41157
E873A64BCE8A5ADBDB21231898600730724983F06916458A903F4430DA25B43E
AE8F89C4B969FA5EB1330D6FF20DC6591D962D302278C13012413DB42D21C1BE
BC94DA037081B767710F7A8DF40F5CDC1494053983BFB5720987B708E819F183
41E49DB6BE2204032E70E6EFBDB84519511D0B5669FE90C385F31A9E3D4596DD
0E66EA213A39EEDDB3CD86586F334F3B57A062E54667C5582263C3E9CD7109F9
C4E62370AA9952A886E2C7F7CFD6A49ACA937DD86C3F579DAA7490C29C5399BD
B16EEA2A7AA82069755262B2649200FC5C77003D22C3A1E82B87DC2C2C53E131
0E28504BD6F48D79CBBAF2625C2E2E1CABD5189D6C9B737DE9741564C8066BC7
0608A3979F10975DF86F16B7CB321A224C178986B92FB27516D26B8EAEEFA7BF
D8CF5D1866CF80782417C5A9BF7E45963570F6133AEE42DAC3DDBE6F4EB842A0
E314206CA77839B0FEF74284359F74555EA37679127B8A205DCB5DE88172ED1E
B4CEA8FB1B9CF52078F8901DD35DC5E93F6244723AAD2B7D4B20145A46CD3D11
E9AE757E76C334637ADEAB7F5553BB9787D454203DA2B5572111AA741923B993
89D4E08347DEECD8DDD2EE9D3E5CBDF2BD0ACE10B99E19ACD04C7EABE511FFA4
8845C0A7FFAEE489717DE9DB04737654F432105202D88278622760AA202EDC96
3411B5707E2708675C974ABE6781F92B81035A40870505E960A8B816366CAA42
921D2C5CFAE31E21B25B2E3EC0A92EB3CBC8A867CDBA8D0F6E7E7242303C1E1C
613861C63F6A1A1671823675A273B736398A4812BDDF443FC3F099134E384952
9461CA36DEA75D98DB4EB423AB8ADEF4ACD61AD8F6A43E7535A6E6C81A0AC5D1
4B951574EF113F2D2176F388683EA838449C729EDFF6EFAAA5AEC7E2B447412F
3D2ED6806E4C91D3D7A6B5E603B2B655AB34D8543E941988B39C7AF01C54F147
C7537719D7D902D17B45AB0041A953BE215CC496A5AE2421B719C2595626C356
E26F506EA9259C2C335BD8B80E39C958D164BC9C9D8CB567AF721B8921EDDAF0
B11577A797D62C74E93D501B8E0D4582E8F0EE8716C3A3F09E2A3BEC6A2997AE
0752F4DF2AB031BA0BEE53802EF626325A6A356F2847D1019EBC24A2EC2CBC44
05E977B1CC18F37FEF0DFF399ECF0C1FBDAD213AE14C92E89618D8791580C5F1
3B0E74DC14CC75C3E4B05B7B63DCDED18D6B7DC554452DDD6EB3F62A4266E23A
13D97E3B0C17460917023369E1E2ECFC9BBA418872677AD3EC9C55BF8CBA9322
669C8DCF45299840113A36EB49EB8A953E4CDD3133FAF7F6C6EE46348A652716
F3C7C09ACFED343E809050A483244F3C2953921E6F8314361403152567E0D28E
2D5177C3A86D5A99D578723C416009A2FBC707235A45DF56D5E92C088A07C7AA
44B3B6AF3B03558911B1313D54C247C6B9AF77B760269449ECCBE1DAD0251AA8
D0F173B5707FF464CD57295728A950BBA5C97B6B8F4763D21E005D89FAEBBD7D
8B06F3FD668F7E2A999F4ADD8CB19C27CA6B1929BCF6F52BAD55DCBC0F6FBADD
8ABA2868658526B7C9E5AB67900DA732F22215ABB4506F75F9E55B9D206C8F50
55C286C2D19E4C56DCBE72684D92A93021957468C3B863DD1E67A700543F859A
9A7C415BB5D878E0727440C36B94535701FAB37FF248C2093F07D68728909352
C3FB8D1C559154F2A6CC6A55DA0D9B69CB46AA2DD4BA1701A083C3914ACCCDA9
58ABB0848FFD6854BF80AE46625A0D477A25B3999B13E79BFABB4B47DE6FC7BC
0A30ECC49F2B968E93EB892D34EFE7E11232CF0747B46B030C4F66D45F3DE9CC
6C200B393AFBF1EC125FC8E455CB93862633F80AA1938F0353103DB83CCF9143
F3A1A5ED703EB23CA32C70DDAF438047D95A810A34126BBD9952A9CFD4E8C578
07E8CA8CA02881DD89E7B0FB201E2281A24D7013BEF876B5F0A7CEA8C210906B
99C14EAD6367F7BD7642D4BEADDFD0A1DB4BF8733380437F15C616A23C25A642
CA26EB6D9C370354D2A73E55387B7D1F22F03D2496E53707CDF175E1097F968A
636F0E7323FE5B0478EAFBCAD0D9B5B0258F5785F7F3175A32A2E3C159D1622C
478F8FDA34A65DC7417C8876ED4DE8C689DC0BA465E4EF0BD3F1B4E671AB7254
FDA615B9BC6DFAEAC32C58A907B5F1EBE69EEBCE5649724CB2E39287A90D7E9C
0C18946A92FC1998EC32937A655EE6A7FEE224EDAD1B8F1EECA62712502CD8DB
49208EC36FA801E154EF781ABF5054C43131D9BC3765C49A03D339D285927714
6DDBC8B9964653CB2A4C40BA9FD5B28AB8931F1C91ECE806D03E46E357EABF76
D41513A3D393374B1C7F4712C94106CC175280FBE13452439FA35772557A6FB3
D15C0900F6487CB687830972BFB0D20CE2A288EB98831E9E76FD50538677F469
C6352D659FA6F3703FC79A130E6123692F2DB48DE81582F0FA47283879CA33F5
5006F72C30F3EB87054158283A21D1F47EF4986A1996D9E859323DFB1A159CDE
9F441E94F4BC286C3213FD07652C0FEBE76C5974B0ACD6723EC46164E2134CCB
D6BD84285F55999EBCD30EF27D9DF6F7EA49FD1796D800D0DEA6F2AE8B49D178
F454823DF89109046C06763570CA965E3BE045428D0DC08E941B1E7F573D8C09
64194509C21E85600DCB76F9C5BF825F9C769CD611F343C793DEDEFB0A2B1955
3C11867D6312F3E8F27DAA9C755B75CA93BE048CE142E84ED521154236DAF295
574EBED606F105B7DF0CED1152B8889892719E769E57E8E08ED3A91400371349
1D238E33566464231182710DFED63BF11759CE1155D9069306F3A0BDE1023646
12062FD58D881623556A5D9693E5FE7BC235BFF41615A07D23A006F1C46F239A
B1FE7C9220AB99902C898EEB273DA2981C5D94F7A713D11208769F7C0646CACC
CFF1782E477596904F8A77141F37E7B93A909E8F5B2AE08791F0A41379E955A3
91F2A5B56D7BE98C6EA105696E341E4F9092E43D4BB95CF70387C6270755A3BE
7042F6E114D7075BFF96F06EA28A98D40DFF9A4EB09326163E0BE25BAD4CA8A4
942074E5E6B2DE3B1299F0A1E6B43480FB5EEAD016D717AE899B9AF5487B7FEA
DFE2B7D651B09FA984B5D7E7192F119AF4464083CD0BD548B9027B92F08C6953
FF0F4FFA748613F165FAA6769E0610B1184B066B7DDF16495F9285C2AA6AA38D
05B9AEFA7E2B8A7B6BA6CFBC5A9C5CCBC2DD7A190C7F3C5D4B91B83DF627071F
ED48B9E890D083DA682593D393624F6DB0E64E9486CA603CB8CE81FA5DA60DE4
E928523C751354830444ACC1584CD6C80A8D3A743D5E41F8029FF3B87FDC6F26
F129B23CA3D345E26F3F7182BDDAA583178E86B3442888C9A7C62369E67BAEBC
7F43467AEE8F5BCDE5E43BBB6020F93BFDE57FE531E829847D1676D2EE7D3C38
8798FD878DB9AB32D771BA8F05C3924C94FEBF6366D65B3EBB14C6AD0EA3E709
A671C59E9DAE434754FA1D71EA88884CBB9510355042B45754B779043674C29A
6FC08290CE3436FC4B718DA2C9E71D5ECA1E5257E08DB8CBA95C116603E00710
019F9286E96CFC58FC114148EB15A992D6F5AEF9CAE1E2978B73F8B2C2A736BC
A945425450F8038E22A12EC8CF97B0D716F307BA7A1B52CA9AE938EAC6ACC8C3
A445D2423697BF11103A1570916E055C9067B7655B5AF313C623A6C95CDA68BD
8D35736FD2CCBB0EB602A8286D2268F920F26977640866DA11D6FCF7FD71E5FB
404D66884CD0AC76434764BBDCF55FABB0C7116130635123C194F5E7F07EA203
3C36A11B2A2BE7596A0302295E99643244B380820CBF2938DC4A70662E258AE9
10BB056BB850409AF75AA61BB68C9D83223CB267E5D985B3BDEBECF1470AFC13
1F731A07E2CF12E208B9C0B0A118F40ED14CD38A9C18114D2952D05A84180BD1
D23E7D4743E747BE4A91BA9BDFBFE3B71B65667AE5E27D9AC63400141A842909
144C30A00A6E010B4220EBFA66EF79E0BFA037A9A32A3E4DC1E0F3236A1106CD
1CF46CF2748A3D65CAD4FE6BA179E313C19ADFA5503C6E201C1C41542320A517
879176CD908547BAB0BF4E835461403B9C00A9851800D1FBB7D9F48A6A8C33CD
7CDBDCF53162554D7F543615F8EA6D8343FB703A7EF38F9C1FB32984E65649AE
F732EE0F69916485DD3EE828F1FA2269E8EF4CEE5F97FBD2FC9832F359AE5C0D
6EB8C2B40C14DA59820ED73888CA5967D8AEA97D6994D1771FE9D469CFB85DC8
65883076F3E5F50365A9E908140C10BB921B7ADC67DBC427A00F9EDC10F6AB72
8F8A9839363AB5F8A8DC8ABBA9ECB9EC41F3CC9AC613BCCB763A232599C0D7C4
3D019F687663ADA3764F11BBB2FEE232D419272644D8A718026FA6E3BFA81B90
3519E95194C31433443F66F98BCAF75EA67125C72A4EB21A7F60FF68B4BF5E77
410AC08EEF7F14064479DF93606DCBFB69951D16ADBFCA0F6AE2595E63587B8A
A0040271822D0B6812FEC0F439D991A020B6B9D282C802566A8B03EC2896872D
4D27D81916783E4BE1FC4A3D813CCF13D5DFC7EA39A5974177626618AA5E29B8
E8EC7CEA9151BB382FF4968D2279C49A48C6301E226CFE1D3E3239CADEC6F918
CFDE3192C650FCD7D1F86DB03C401E6EEBD0D4091A888C6A61B5894F0DA15979
25F72D7BCB97C0312C17826D9AFB95667A85ED3872AC21293F665E892B7CC501
B705EC70C2DB7E66FFD38EC2177506C20C252FB43D398E2747F21936C9EB4489
AE08D76E8D846839B99FFE00627CD8309098C34B577FF7E8F9D1AE27A1CB55C2
F53A0969100C46181A5ED2C711C4B314E62D79114A815FCAA80675E4085B26B9
FB6CDBADBF26DC4A3E8EE48D00D9CEF7B18AB493ECCE29660DB5A7B67E09AA7A
5DB2576A7D03F280F756F6298183476C1F7E2E98E51067CE54DDCC4CFF0E927B
56B25BEC491EB166F5E63ABF8FD86CC2E2A03A092A7D5B7274DB5EECCB73F554
31F902C010DCD2B820343C96F968FAA7B527217AE2B08EF5ADC765E59DC22D83
1094E3986C1F078A39CF03852AC184BAD23950B28CF4138DC3EEF96D8FAEB2F1
D540BB96EE85ECE45F8331EF58939D6FB0FFCA3EB78299751305D392B29F6CBB
DCFE84DDEADC603444C8782DD90C2642C476AC3B21A238D09089C657400E3285
EF982C009470E92FB07D62DBCBE189FCE55120FC72AF4402037FB124BA05B6D3
F660F960B88F99E30F59F5DCB9C018DF97090B2F6B5E9402A501C5BB001FF37B
292301F1244DBF5A2C79B9B55C74D08E56B987062BB57237BBB3056A36E97E39
9A7E051C0FDA75AE099AF1EAB365229892E796D977C7DC21A428888EB12A57C8
DE7699B368DE8429284D7B5C96DED24ACA2DF8971E6A680C6526F3B95D1ED259
10328FE0BCECD88B6C65E2667C6434736B462B1A338C6393C2CF244554BA0B3B
BF6B12561F9F57F5C5B00A5FBAF6CFE9C41CEDD256BC0131B3699C250CD13527
9D3C1193C59DB289A4188EEAED348D07AAF2D7F7A790A0F0998C80FAD9A265F8
4BFCB2359BF24D2951ED1BC2195F11D414400F81FE0DBD2D2ECFBB094848B0FB
BC592094E92386152750B09EB5160132C71605E77F7769C2278833C42EB26C67
052DC859852CCD0D68810E93934890025FF9509817B33E25D5E5DC3FE1E448FC
EFEB3336E7D3C8CFAA6EEAD229149ADAD9B97EAA7276F80A97FB792E91F4094E
97B74B0C556A60E0577BD8265CB4996D2451511A5CCAAD6C57B25A3E6D92C540
35FA035DCE5B14F6F5B8317A1CBCE1AD69AE3E77024F07D9F56C7B80ECADFE88
4FBAD00438400E0E78630F259B9F57F67F75AE0D9EF9DC3C74BD99BF19AF5669
259730AEF8E57676C2323BFDFC42B68DADE7C1805AF888D9B9D5B8685C3F5E2D
4BC92E8FF86C197BD47ADDD78510758D5686EC832DAB10AD6548D0F2F7145F0C
30F58A87186DE1B496C4495795C7BDE1D516D562573DB7C76027284D850D1C2D
A8760D6A36C7770F24B208BF8C54D672814F5EBB8F03F1D3E8BCB9F3D106DFFF
6C65DE6E05CA5A299D40C97CDD51E0FCC332A2E11FD0DEF1577D242520F2DAB3
612678BF24A2450F6E99DE896F7F3E438EC6C6CF0A0780E8B6ABDBB69583F453
B872F4D499F72C1AA8C32CCD68DFFC79AA2E8C633C9B04105788BA65B8960596
4FE7D68EBBF8AF6AE3C72C3D425AAC016A4BC9C0BE13ABE656B31E31B75EB133
C4F28A8B234F535E6FE61E02EA91162159D1342B225518911789F7767BD01E56
8E28699AFCFDF239C4EC85164189443C8B942BE735ACFA0B8EE3A69D94C97D5F
A77FC0B05A6545D82CB5AB248758DA79BE02A3EB57A0E03BA8ACB15BE84A7470
C38C63DB93B3906996619BB67A2811A571F16632BABBB33C4F3E16C783FD705F
E08048C7670BF6EBA00EBA51BF6EAD55B75E31AF8F5E16044A5448B72CF76FEB
33051536244FC1C48152CB31E6A8B9AF90B8D4563F32399BFA9F4DCA5FB49A95
FBA4CE01277396F2A8ABAF5387F1B063E6DDC9B177C2B760223463785606AF7A
54E306456598DBDB03B963F89CCC1C97E2FF4748190068837971E9ED1B5698BA
40F4D814D11567318ECB03F2BD47F24841A9A85FF7EC05C6E0D346853DA73021
0E9322B41833A4138FC9F568D8845A4B3142C9C3519F46B090035D038A09E02C
09BDCA688C537CC70C5AC41195EBBFCF5A3A2CB15BD85D8034B348BF7DFBC1A1
BBD304AEAE6D4F9FED281AB2852A5F8264E95E964B75D47EEB26095E05E46179
44537006F5A9C7161BC54D61D6DEF2B38D7BCDA82C6FECAC5AAAFCF75083F657
41B1017E96CC1BA4771D546F74364A8EAC427B2E82FB786FE8709499255C8B5F
E5D7BC788EABD2A7459B0FE262EDA172A99BDDCA469F057BA99AE776E482E332
FC6F4EBD5E2952106E49AECB9E85A6904AAFB352F840F8453B0B5FE4F6672103
636C18F6A4ABCA49F3BCA51F5A1481DFD6DF4CAA7259EE422D586DB8AC2DFDD9
252E03185CE931C8BFBAF475A53F81C5BE093C7BBDC0C9453E521D48919EEFEE
522D8C907F2064B0599F9763230DA4C890867AF4D773D3A33D3F4849E6CC9152
ACAE294CEE75450D40DCBF5356A3F0E348A510FF0CCA52705FCAE1C36DF0A81A
5D74DB98860E61B44AAA64D80F6B985BDF5CCD9DB915607210FAFF021A753E54
1F9A7DC3F653E89A2192FCE12EB187CB2992E122FC5472B14D829B4D8915F5B3
8391BA3CFF3C564472751894E15FDAFA7DF292A51D08793855522DD5415B8719
87F50CAEA285CE6F0552827DA031470233DA0E9FE912E0C2DA5025248C4E045C
96A87DB298B3E2B1F339FF2E6C44C46DB5B7992004CB50C95F27976C32B7F170
97AD1156DDF7291BA79A50AFEA329E03DCC7C86821486F5B4198394F50132FD2
F86254BE85240ABA985525866EE1A58786BF6AFE1E5A4F1E267E78F8AAE6EB29
CD4F50D01B09E2C1C32F54ABEE8B83306667C5FA37A28699D9C0F3EE94AA32E3
C58F8D7F803B59EC183963E8A9EF7165583B1AE09C3F12BAA82365202CFECAC1
58BB77EC34B98BD1099644E30CE5DDE591CB20B81C70B3F509A3EAA3441E82FF
724B53196EEB9D5A83ADCDC8FBCAF232FC4C567CFD7F82EE726DBE6FC611C0DD
940C42B6FF44225684B50FC56691BB3A1D226C2E079F96B27A350233112B0A33
9366B7373CE058456E0E13B296898C3D300CBCD9C7E58365FE5CD67A15F5759E
7BB180AA29AD38D19AE4BA30FAD21A72B2E5E5396D1A6ED68F68757CD32328FB
0DE87CD7A538431FD42ED8AF89C1EE0FF34E59865000C22FBC250671556AB012
012EA3FC68B99ABA20A8F61DE8919B9F5A5D33550EB9C3B7BFAEE46118DD594D
0F2456B8E3EEF532F2F31852F522C926374CB279DF7E365E0D5172EBE00016FB
BFA7782A4252FF9AAF1FF538B3098EE574BBA95BFE809F8E0333B2CEB2405DA8
3621374278DC4B61BAFFAF39249F47283B98265A7D918D26C871FA7B33F0B669
AFE85EB30D4982435C1C94439450F121F0DEC0F06B38C966A0AB56FB40FD3A88
EFE54A1BC5E7269F5317D031A400EE8C4AD035FFABC77740EA969285AD222A23
3EC61899AD22102AE68682190B120C3B6B1BE15CB055823E59A706B3E0260FFE
74DF4BBD6C35AE5C1107D773495C4743BCA601DA71B7AE3478CC65C774E52449
12470606D852A39CBBE5E4117517861B96630F615DD92A73EB8E89EE80310D61
F570C11A051333608D46B78A084192A8AFA2DD43C672552C6FA2651D8C2968A3
E83FC00043F27F1E73B67016A5054CE7672E0AC6E2DE0E5F9094E55F65DD77E8
263B967746960E5BA96B75992D4B60F1CFA989A08FD2A8CFAFB7D3993478A0CB
ACF68B846FEA8F760EBFCCF49C7D65C9D81EC00750AD5FA10FC0E6B5F36EB62D
69D698EEB767B5909D6FBA38F8BAB09E1C98BD1D25AE7E02C38A082ADCAC4752
4696A0FAE044D3C8ED6C393BADB09536AE22A4E6BD3EAB7D1EE6F3CCA5C368CB
407B7D69AE0E77E97B6CFB158905238F53B5565761668A6EA34CABAFA33A7E98
61EAB6DD611045BD9EBEC8F1DE25D3DE6D8B395AB68146134C8FA95C905B7C90
ECE1DBB30BDEB93F4A247213ACC2D6381581D13E00CA68620CA0DA917344DAAB
E67B207D0631397018D369CBBAA19DDDED2735EFAD841F0DDAC1AB953EB5782B
B8C948DB8FE7A03C5C6F7D94CC0E84F390E14D26B004B38C202F5E9EC0FC3925
4B30705FCC33E78CD5A97457F3F9211BF10B82E7809A61B42CD860A86183FAAA
A649966FCE97D72FDDA174C3E0F92D268D63B559A404DCE7633818C4E76ED59F
3EA547541714D6C5511CC846D0058DB81D57E7A108FE694A8C7A1FA5C03B6E07
436B6560B27C500C3DA98D5F395ABF21E83E25944BF6B17546BAC98ADBC5144A
85A9C6F9FD6818A4915EAF14592EFEDEEB2CA9D3F3F15E77B3FF03CA99C867D2
C9933AE39EC90D5A48547CB0F59386340C9F9ACF9B1510282836EE37AA7607C9
6396686444F42CCF062A9508DB8C7B18CCCAA25DE88708B14A9BC8D4343446B3
E9F7840AC69BABCA7D43D5AA709960E30F055ADBDCC7FDF641920A9FA279A9FA
B4914DB7477F4ACE3E01C310717FD8D10B05176B2F7B038CB234A10836AB3466
3A141DA69B46D41A04EDBDEDAA1BA87D1EB408C340D047061DBBDE1BF5AD5D03
8E610E4EAE9ED6732467BF89E8EA30C60BD0A8C527225F5AAF9BFEF7B4F6EE2E
B671F9083DA7106F3A81CEF667F07146A8007C530FE857FB2E1CCE93E262ED7C
8A2A88DB2867A9FC6F3B6DA1C529D9EAA2D7625392D30FF009B9A5AEA0A03EFA
747F832A6664745D6EBE915593F959BC7974E5E82A643E1A91BBBDB799E79678
B18A3E78297A77B92EB98AB479AD0A7293D1C9772451BB01CDD3C429BD4CC3F9
6584C065FAFEA3EEC98A119DD11FF78077E0118B0B9702ACED9DB6F1156B5FE3
89ED6C24DA45F0DA3A2D5C32B18BF4A99C62B6D732AE42FE156B9963E946A6DE
B4BA7A7F56AF947A1ABE737FABF9A2AB434C11F084CC55B222F6B30DDC107958
00EB11E0122966C51A18643283844344D4F9565817B9F0CDA81C077C58F78173
615C944931AA7944AB0472007D1FC5978132A8D4E9ECB3F9E5631EB9B65106E1
40A1492D6F08906900399BC707F7B2718EAB78A12EF8DBC323983FE3F86FAE58
6E46FD314228239FE6045465A2F467A56D1F334D6C1D3E814445450473B34E3B
73CF5EBBBB3FDC0E20B2B90D73833D66FAAD8EF6D6DD77674A3480CBFA627944
96BF3D0BD07EB5DF02284623F4FEB36379DD63F00985881E86D1C85A5D96C622
B04FCDDB40B675F081053377364DEB76D6B53FB0BF788FC6CCD3C8503663E537
B72974527FCF20EB069C2B6271FD736442AF38A52EB58A59D7A62A0708B2B6E4
00BEF294AD0BE52E0885AC6834AAB075BF8117683910372015A8CDA28AED5E9E
A2A1C3F63F676662A654630223E798E3433982905DFED0CE2D4EE7D0F2837325
EAF1C8FFC943E660CA3B26990A2F6A791EB0EE7B669F9D4C0F28A95A2FF8296F
54F4933D9C8166A1B237FA1512EC05233F49D7EB966E4D9DE90D81EE101ABA19
205C1D27A77F3A1AD2FFBDC882872FABD92339664FAF1E15D2819A9A7143BF0D
219106F38EA7BFC64D22DD191825D1B1D98DF0ACFCE3242E56DB50AD73F0AB66
85AD081113CF073E0CD57C7AE4831CCDC91DDBE59BCEA1B73797EBB86406357F
9C88B45034BDCF610A70B9355E1549DDFA2C1693F085D63D1FFF7111387F69DF
AEFD8FA77AD87AA1C81AD58DF9B01DA91D78553974111957D7B00FCF5F246C5A
FD97D7F7DAEBF80928F35CED49D25E979D8392C29DD56F11239C6BFAE4923BCC
11F801894CD5ABCDC48CEF6D6E47EC53AB7A3149CC2F0816321150CD2531CFF7
4E54141022276589886772C6BFD118722A55A15BD183BFCD2E24D7331FB56520
C1DA0D4FCC33636F7184EE39E375D7B24FCCADCD5F22D70F0E15F82E33085C3F
D26A529216A4D9E10866BEB5CAF4BC0734DF5795A50DCFFD4DCAD23AD24EC01E
29D43472147FD04D8B2F750ACD8A000A509F70BA72C2B623AE2F457668982CEE
4F8EAB7202C29564BF28DAF1B4629C1DCC78EB939323B6406646591B7D5C6AFF
F4C00C1E197DD410D5F1996E9BB66724E531CF88385900D08491DFB085E6A13E
E6C92B0797073C95786FFB9BD8BF8D23D9CF65C4D61CCEAF43758D9ED91E99D0
18D98EF632AD0BF5CA6F3E275A0B8400519F6AD44F076505C65F55D6C762DFEE
EAC814CDCA175898AD4DC1B7C5DFA1F90C1F4FF39EEF267B32AFC60CD11C891F
D36524C9DD9001F478290F2285F0826B7D1146CDD7B5AFDD968CA97B8EBF3802
149105D42EEEC04B801A017356123A5B2D5197E32521EC5DA626331508AE58FF
44D5C709E771AB92E0198C95B39140148E7AF8F1D14B07E1C7287C5346F0D5E3
DAF0E85FBC7E5D5A2A65C07D4FBCBB8FB94BE05DFF2B38DB119497CF36780916
C17E86D2B97BBBFE571A3C0D5DE029DBF1679DCB876202622263FC8D03B9E942
41A33495FE1AA54C887BD6424A4B3C207F0ED2FD18B021DBB5F15B5EA969F0A1
407C8FEDAB69BA3EEE3097D5B123C2EE611BB166A82EFE254436F63898712D63
BCE010820AD7B499DA6C5AE56D1DFF2174A3FA5068AE889B84F15AA454359FAA
DB4C33EEF1BB68989E41FD8401DE1CFF666C8723AC76A1F343BB3E1061CF4DCF
CFD87D706A3081483A9582F7A23284DADDA9B1AFBB80F5A0BD1C7A2F77507F26
2F2453EC0B88C4FEB2051C97B3B9520D9E664846E56524877706C8E44FC7B272
6527855A8666C864C0A6B89BFED476A9F9A0C868B6D0752ED2E819C551FF7711
5A6B9CC96FA5A7F9AB40F6BE36B2A56E12B535A131FB0289AD1DB8EB230A03E5
99D101B7ECAFC15E9666264CB688DCEFA36A3E21CEF8F23C4536F9ABEF8102B4
70461265755059B2C2DA87483AD1A66CE46440559C0198A9D5F2BB7765E1D5EA
4DB4642608AD851A31DEA415888A84B1E8D03CFC7223A383E635AAF65CC7D6FC
A717B21E74A216ECAAB6DAE2D8907671248569054F42FE967F0497F0F6CAF869
0596A92D6B28370196094CE7BD91CCF7FABDDB6C50DF2485AB8138E3D841A9D8
F9FAED0DFA5F7D6FC1E5AAE5C833E6B820F706BFB7420351738B49AF484C828D
7FF50D459FDBC048305637A50C397DD187A781734D5F091BEC7B3C368845874C
31B59C4A023BF6E2056851F342014382F21C586C9A8DCE6444A7951CD6690087
76A1720790B0B6722BE1CC6060C61572F6332A2BBE1F80C6238B4E1F92BC16E1
3B7D51AE3544DEB241F1FD9A5F4ED498BBF9B9558B7F3EC5395DC58D961E7749
7AF076C18B9C5EAE55F7BD435D5B55D21858E75CC0B35FBA156FE1494AFE21A1
960C19CDE113003BEB87559E5786B43C8D4740B2A49E4A177A0A4DE20D16F3A0
4E9794AF0BCE34B60B3C63E10ACB78E0CCD01361E9A081348CE271D7C735EE76
0C253E9AD40B287CFCF642B945A85944A78F0BF41CA70C6034C319BEB9D85084
AA21B81AF837A596B71C9A222C6861BDBCCBF5B17AA9F218A80D732FA5C425E2
AA49C4DE54A05AFB1AA6C7CCFBD9F72150DE24DAB9D404C73D283DDD92B0432B
ECAE3F51B3DCC1AF6A356E174261972FCBF94E503A6055548188A8360779E828
9F6F7514499706F303606BBADDE473259FCCF5FC815B9C57C85DE0838FB8478B
1B94A3F1AF5D53AC484C532231F3C9512D50FAA648A9822FEE5B4BB37010E988
DBEFE8FB20C5604C70DC9E98857AA358B5F754BC18087A26342C97755FE3A19C
BF0E048F01E399243FFB9B1DA2DFEC40BED8DC383C835A44CF4A426D2B539209
E9C6AEC0E477BB88449FD7A9AD35E5273F1CB620CACD3A22A7881910197E470E
7277AAFACE9184383B908D8923413B4763CB439B326A162FA0CE6D72C20D9343
03EDB1F5B0A37817AB41CD15536F59F3846BB3A01503D91737AAD98092CA7DD0
1C469F8E796ADAEA3A45FA1FB3715D6263107F9371E11AA5ED2A4F7C9B9F8008
3C9BC54F4581C3A7CE9488C855936EF155DC90A020CEA122A36D71C5F5DBB3B2
2BFF3FA494F5FBFA38486197A1CED5292DB32ABB712445052550944E73B03D45
C39AB7DFC251A786CEE7FE844DF96FD989CF9A31E6B8F55EC976386C425553E1
DF50FBB44FF8C272FC1493F1A99DDB2E1FFE7A66BA74D75C8A0D05AD493E6BAB
4100D265D42EBDD432F778FD6AF873FDD624ED688CC9A6DC06F4B0187CC87BF8
C3620596CC91711D12A4155E5D1DCFDE9F4ECD69FD3343B5249616263DAF8DE3
0E99B6CD54AD4C1F93701CEFD64E760E262351B93B0E6FD807A859AD9FCD5879
179823919994C683194BBF55A09AC9E8D88EF0CC441BB9D9FF2C830FA959D490
BD6B1BFE49DB41C7274CC5386AB7BBF5D40B414B09B3FC0C14FBCB70DDEFE32C
1097DE3618BC7E24168C1B2449CC5B70540619D87B45E6038E8970E70524F9F7
AE081E64AD1F71D6CC6FF0502F52CBDCAF4903835F153170BAD72480247EE13C
C02C6735D189289C42A534F59650E8320C39376D90BA2037A3816B0744A352FB
C02B408A62C5F4EDE17BF86E726D5C7B464AEAB154DFC2C08F8C1098BF71196B
775C4AB44CFD2A99CF91A25FF02E328BCEC164DD0E276A3EBD904FDAB4DD31BE
FA92A9DF8D76C474007D2313EA2BC7BFED5C75D352CE852DFDC79CA7DE95D81D
F8AB287F2CBFF470560C0AB39BFD238A0859BA570499CAAA419F511C0EE0F921
4980C0563AA6CD917C6C771D1DE94530899FA6288F20F47EA3BF4C901BEE4B08
759E95A8672CC8C5A2C4AA3EAA4D8EBB26E20BB00D228B4EAC4A163E0C36CE47
E6D295E4580B8086E6E274DA359F1EE65BA3644E6D8FB919EFEB0B16C2B2424F
664480018DAA9E22DBCFB4AEEC555BAC70FF538C735CAE09888AF012E33A2F4F
ABFE60F042CAD514CDBA742B97522A4AA6AA1F71D6CC6FF051D5D25FD13434A9
49BCF4CBEFE16B4C6C53AEBAB9AD1A6187AA00411D4359B3AC5E1A129D34E4E1
DB2ADED171958F0CFB275F5435F3DD911BE11DB381C01A9C0464501D3E1FED95
A43EF0C9C39205BD0A525316943C6E16AA7BF6B6F38C5BA43CCF6B0D2F195DE3
343E04A62B730544CE01444ACD693258A53F98DB0DF475C8D74928A383507936
3DDC63940F7AF6A1D65E91B5B0B31DA43B2AFA55BC865DB8A626912D0F367887
AB3DD941A92AC5794242A0FD6CF1BAC22B20AAF0F9C2771DB146D3D081BB4846
B978ACC96226775B037B920804532521E7EDE46DA415792C1DAFD35FDA10C0E1
4D125C730ADCBACC2CBD7B54E865AD4C65F169BAE1A8FFACAD630C5091F9D281
4BBA023ED0ECE7B75A73FFDA94E6C303816B7853299DFF59BE6C9F47AD5CAE8B
56AAB796E5C554F4EA2AE2FF56014210F21E371714455C1951CE56676BAE72E4
77265B81BE78E7AAE133E2A1C17F6B89FAC0D0D8829B994386AF7577B1F683F2
A858182EFCF99114F384B2D69C75A42B74790F39E669628898FAE6DAF369C507
81157E739C254AD1927DCFC7CF7E387414E4A017F9FAE43F47C36E5544A356F2
BB7CD5B013F3D522E48DA28A4D2B22F8F3F724666B1FC50C2372E576B0B39D57
36EB891101032D9E0E2325A2A23B5BED2F7FA8C39E699665FEC286A383CF680E
39BF1D8DD426A45B0953787457273EB5F137787D763FA7F52BF85C31BE5BB722
4527BC9CEB229D00C283DAF19CCF889018EA2F3EF429EC70991074E850A0814C
E53400CFB7E000AB3FAF8D34DA80009FB17EDC97C7C86CEDB986DCDD0B41C02C
33635ADD8E0504E1648717934572F9776522664F6DFB6EFF878D0A68604565D0
BF75FD8BE027333C860695E7FB11B0158CE5117D67C46876AC180B09DBA79EAC
28BBB26CCE1E7F62F61AD35A5A69F32289DA6566A50BB4E5B18753CB1E6E18FD
08BF00E01DB64970AF9A1D1B86B55D62ACB72C877AA2E3437B035F7E7ED2F566
50B28D53187801CC5CD18FADC44960D4BB283217C1261026572EF8D4CC2636C3
E0DCDC23B34634D1299349B58A8FCA861DA499CC2DD64BDF02191E204619E77C
87BFE6FE50DE547A4CD3C7D183BC21A0D62E447E551D1193D670F151AA96F678
ACEA7000337F545AD7808EFA961ACF185DC1E322EE3406C35EF72A7A4C34A122
25592CEA5B55AD65B8D966406A86A7FE81E2D5DB81CFEC33DD7CE3D15A87D1A6
367CAEA1CC29DD83C92A8AE6C6850B71E88A2B049A7DF39912C7815443A5726D
D226AB585C11A08A3E33D5F5D10E8177B9BDF88089A178A35A25883EDF8A78A8
612E5D3F617DB098BA7D01E0FB197A63850D6845242D99FA33CC4EBCC92A63E1
CE312ACFDE8CACD53D969020B1B90028C373D3448BE7BC805F80315BCBC1B4C0
737EBB623F79B3C763CEF1B079A08DD533DC0E8D85F9DAFC5FD842F417265427
E6AE1EF03C5ADB8E3B0C01C6D753D8F07331AD4D2251E1313392BF57DAF6DB6C
DBB967BEDB9E99C55A596B7D4F164FFDEEDD4D2CB53F1FA77EA74787017E92DD
E4CA70E9A40C4F0FA75FB8D5B00DB7BA78FBFC5B95E167C6CFB9A221B8BDF640
B9C9947F8323A5B324B4DA4F44A5E5FF08879165EC3D38876DF77E5FA9993A30
0C39813F788E1734E3AD8A4551A971DCF562769FC5E4767C4CE91F8896FF9E93
84E8BCED896D7FC83CD20EE8C4D5A59E02997BE85D4850D54F10504B85C03352
45D7D86EC86CEA1DBD6B4FC8D52AC91E30C06E10EB0E6EC70F7476C183F33474
A529FE149C3EE06D1BB6833EE4517BD765EE9BA2772D936623104BF1F2120197
E9029CCEC265896D7407CDFC068E0F1525CEB017B47C1D4042C85EEFEC49D94E
6CE6369243618A5A822B0BCDB03FDEA6BBF79910583873EE1C0365F433829903
FBF1D34D8D5CBE0D51F59AEAC5CA461675A53981A4A21C9272ADC72766C81D45
7739C3E3D1B577CDA4D894927DCB6C8492F020E67407CFC2FAB4FF756B615343
E78FBEB14AABC5515E4044F6B705CA7C0B29FB8D3A042EAA7B9B6AFD4DBB8096
2CD8A24C71FBCC910D31C787BEA7B397645463C29A3AEEFA48050A951CB5B08C
DAA8FC49EE44C8C517DF7821859BB191D5C0F0DEEADC00B68DD4D41EF88DF2E4
E5C1477088AC8C919CD36ED41872A1C253D156265047B3866D6317C9BD700703
DADB9EEC88B89E5D79A8425BBFA7B7B9AA763F56FFFFE98E8B960C5B94223849
1756A97D7A27B464BFDADA50B69463D3E7F8D73B1308789FCBE4F9DF3A174028
CBB2A2717C97FF0F700841CB1DCFE5AB3069ED10EB8C4212CEAFBC79B61186AA
832CA08D00AA6824BD46D237D5AA012269135E586D85A70DD81DC3628F9E83BD
B1BDA7D33486570449498552A5962429E72CA1757A9B630AAAD6F1CD463AA8E9
28FDC815553C54F9851F31B92C54DD21C9DC3DFF06F3966DF7A5CA4183237C33
38EDC66E14A05F7429969E4E7A93AA015A905DC340643408B2CDC39081E36984
C6535A4650B52CA5A4C6E13138BC84B181F1401416C33BD02A15FF37767340B7
52AF11A279BA06F821525DD0F47783117684C9CD1464AB2F20E7735CFD4B13C2
A8CBBE519A8F57C66D7DC09D40B176A4F5C0278B395CE3A2CB39AD3BCADC8CB3
3AC09AAF0FB4A3861C67A4552C610497D442E859E11C14A751D209C2306A4A8D
FC47E05C8EA8D73EAE60D2E68C51F1B832013A343661A0734F470192BF326C93
EB22FA5C039DC0E092573197CFB0B7FB990F7F393A62B7A15CF590C9B537A70F
9439B5E8059F7422FA8D8D9804DFE32179D4B5F35DA8946C57784F5EC4370F3F
71E5D4AD8DC46021F039173A98507B84A1ACF2699CAE72345CCA855909DF66C4
9523AB41242F1D916ED69D1B7FB6EB6A5E5F8C54E7B0AD52BB9A0470972BBC28
E3B140CA272EE8B62954843A34841FBFEB762EE097D8190E80B9F279D9BB7B63
CB86D6663189688C6E5B123733610842E29B19D39385A57F9383AA235717AF84
AFBF5D808D320169B41DFC41D36A56770F7E779108021E3AFE578357F133BA41
2452A1F976B7A481011C7FD0CFD23B1E1537E83850095C9B38704024072C5FE8
9BE9DCCE26E345425C2CF1A4AE92B580F02FF2494CFF98E6ED9A01DC44BF1552
7D20E9CFAC7708061FAC0F21B7DA4F78DD30D05385960BB03B64B057DD267210
69311544E9BEE4E2A4B2223BF5A4BA3949DFDE4BFF9AA2FBDBD6FA63083A4988
777B0BA56920D3DE736584C57D7E652AC33DE22E32CC8C9174480A3D0AF0B6A0
995FA69C12201010725F6C5B800AF66BE3B2673167877508DAEF312D8F532E48
803A7812D84CDFB47B5009E909AA836C2B4F5B04AAE49B0A64FB39C512E7F85E
CD76413F02E96A729ED024CC094337AC979D5556B71345AC51FE3547BA5B5FC0
800761A6A974598410A831080990C65F7C140803E419D5E53961C622A734A30D
86697F1857BAEBE381F4D02C7DC08F586D52896B48491454DB8645508A0D1A4E
CE91AA02B47A0091948A1DCC34CB7036973A50BE2403C1F1B08901EB67CD91A4
7959D3800E7FA6AA749D0F4409C61D9E52E3F6D4F869CEB2BC8B1437F6B31AD4
4C947D7C452753E2D50D1C98764EF3528532FDD871F8E2D34A7EC71B2AC602D4
8D230E2950594107F77A42D0C0C40170E014FE8F31A5442C7787682D9B91A4E7
1F8EC69B106FA066B9DB5E549172B67F797F9EB5B4B6168F2EA5D532EAFCEEBE
0012BF1A50510194F45B1482123EF3DCDF6161A0904A36F99E692A45A33945C5
CDA5A57884FE0F91DD60FF2A2CC5439CC546EADCC27474FD4E8AEC2A9E96463A
E53ED785428419DC74E534ED07044089CC0F88F30C7D3BF0D50D0444E8F185F6
D621E4860C361B431507E182009C5106140724AE388399D0A7A6E495AA7D0D01
C75662F97AEDF71BB561D4AA4FB571FA5AB9645EFDA02BAD824DBB5D571014E4
A1D7933F1362095910B656D3ACD713F66AAFA5628580513A5C1BAECF87DC6C78
ACE824A080187359ABD2081804DA85C836CA9D440461ED00DAFCE110629CCFD8
7AF533892C5CC448B833AFF64529127EF9420409889BBCE89934765977C3901B
2DF468A6C538DABD8D01E62C03157B9BAF83A542E754E388D94B7D1E715726F3
028A47929E576ACE73434E3357B27A7DB1E047FA500C96AE3F72024C6A7A5FEB
6D6F75314F7AB81F6784EA92265E1464F5A793603C6F9DC20155FE194315A612
318059A2531975E86ADD73E8EF466B153C102B3067FA7516925A5EF334AD832A
DB90315692D6BE2983CDE97E3C0610E8FD3C92D1A7491264F3D8D350A1108B1C
045CDEC71F874844067854B414060C6CF02B8F899C3DB07C3F6B870A0DBCD394
0A1DE34AB099C6ED2A90D5C0B5515504C97C509913F81A4B6C87D96C1C6BE6AC
9CF363AD1D77F0A57A2C5A2AEBE65638CA0A1AFC071B9F70A0BD023E3204C335
025D1E93216934FF05846BF25D1B7B246FEA7F75E4C9A23AD90D380CE8834810
EBE50C5F665BDEF9F49DF9B428185C90C90D988EFD0CB80C79BA2054EFCE7CEF
FFCB6CEB3B5C17E24897F97BA995292576D36ACC887F280ECC39ACF1A91C4A87
0843170EA771666502AC331670777AFC70F12D16AAD1A14FDD08FE6D620D81F9
79F11FB59B0CFDAEB0DA48A46B600D34E4A0A29E184B35B7AC69F3F14521771B
D9541EAFAE5F0FFA9A6A48C1B2E8A47A84E614026A46682D801A0BD68A7D3196
656D927FE75614E7F08E2176ABFDE1F344BD632053FA22D3831C1DFFA562C7A9
0315887FA1C826D4AB1BB441DB60894E74D0C5D12687A6A2A3ECC1A0792A0A48
5E62094810F76AA51DB8591EACF844A50AA2C376855704DB3EE8B86A92BCA630
F933C807DBBC2A938CCA8AD714F270D716A78EB80CD148AE181C7F0944360D37
018804B4B00C8D8CF11AB997CC213CEAD18FC66DEE42465D7C0DD3BB0AB14C21
6C8511090CF6A278455004E67B9D2D3BBCCAC51C2052091261DDDFAF46BC9EBF
17D8B218142DE3694496D174A3B4B5E911011806FBBB5DAB3BEB6344931E2256
3699D427B15816D45CF4C1746332759D3F7FEFECC4393FB6696D0DB70B6B0E91
590635542F5F423DA7D0348C3A2ADE2B6CAB6CFE5737A24D64117CF0740B705D
2C4AFD9AD944D046BEFE3619378A9AE174A22A58B0C55C61E09588E08315872B
E72F666D681A4FA8B2E6E3D85FEAE3908D1B3BF7E759F31D82348C0ABD6A27E9
A8054D3D6B6359CCCEE0844A8A2A9350B85CF9E229FF0845810BD5B736B066F2
F83B4EB5D4796E422FC3BBFF01B51C9A75337EE309AA96E8E8E13A32C4AC9EA1
5080D7C5A61E81F25A041447594422EE45CB2DFB1FB7629D72129105E700D986
A2BFEA1C7F7135A624DBC6280A9A7FF4F92947C768DFDE675D073F4152D47171
9D2271DB4026A6979DCEE01D3B72762C56B95C4AA91116E51F76018D9B00C2C5
6AA0A1132E79E1E5CE94A9FBC432485BB8225A2B8D974E0063A0E77220CED055
254F6126747E1CC0887E5CACD3781FD57299290139294B459EAA7DAC6B285A4C
B005B46FA31BD7B6CFF366127F04BA59E20650B8F1C1962E06AFCABE6B1C61E4
8D7739D2657C1150CF96BF1DFBE05D0B200575BBD262EB4DEA40B290BF51EC36
DD02236DF72F1933FD861B9AEF0EDF25E9856AB2BA9838882918CA18193171B0
35C44C53864468C1D41C1637DFEE3A860A2B308D0895DC0144F75EF1A3B0280B
62DFEA25C2B2DAD252F5B98AEE34068F2F1920C067A08D8EA89CF8E112853F74
C475FADEA6CBF9F7DED9012C7DE371DC9C19B3B62F1B2B6A994B2A07ED6A2570
E2B787642994BEDD507B05C723FC85E712C14FFF90B989665B844B1BE145E02A
6C4E76A6B2EAEDFE9E2B6354EBE699D1178F2A397715EF51EECEB440BB469079
1A22074CA678D4C4A28C9733BD804147620B49E0301C9311BBCE073B6556F972
4F10AD9A3DB8C8E3AE865412F2C319F2E3F04B960FD7C1D90A120056A3961A59
95F6F66E15E5E864F8A9302E461CA541402911FB9B0DD72D0BFAB40DEFFEFA77
809D8465A2B2A2399C57BEB3006C554BF6F0962D838DE46DF254339A804E5663
E31B2B4663019E31B116745E6296C36A51E68615A05D987120E43D04C9EEF133
21C231F995F5583B6CDD0C2CF5EADAF9BA9F9ADEAE2B74DAD8659EF708BF5A43
C48E4BCCAE43F4B781FEAF6266DC1A784C8089FB1F1D814C4518DB7D19847F58
333F416E275A4FE93755C89B0164E517BCACC4E1757AC3A04E4038973B873F19
DF3C89D646889D57BFADA417292B01349AEC013F642267ED2861D6DE8EEF0386
98B1F3280F90A2FA3A1551F5434D524B79BCC16A3A70CA5ED51639E89D7FAD4C
8D9F150EAB4440B6033BDA2A7CC21BA3492812D7E1AD8C631E554CEA1D5DD976
3220CB00DA2D55D65A53AC7D01804ABF9B47A987A809FF4AB937A63B22BF4283
9DE863E453EEAF9EB63BB44694E4446B38C58C7F70E95FDE43A30F39883F6536
C3E69B026EA6840DBC65670928820AD20001575465FB932FFE425224B1DC28B1
929657377A77BA68B10986745CC78BC722A14ADD56FAA5FB1B47D3F276A865B7
84E78957C950208741A6B363DC72A95CC8474EFA0BE0F5FBC02F439BEC41A132
5B15F4AAA91AA4B53917CC93035E5E18548A7E157C2887309BF84C167D8DBED0
24BB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrschein)
@start /Fa 143[474 112[{ enclmmathit ReEncodeFont }1
885.568 /LMMathItalic8-Regular rf /Fb 199[470 470 470
4[470 470 48[{ enclmrm ReEncodeFont }5 885.568 /LMRoman8-Regular
rf /Fc 238[661 661 16[{ enclmmathex ReEncodeFont }2 1106.96
/LMMathExtension10-Regular rf /Fd 255[1033{ enclmmathsy ReEncodeFont }1
1328.35 /LMMathSymbols10-Regular rf /Fe 168[1138 3[615
31[553 4[307 46[{ enclmec ReEncodeFont }4 1106.96 /LMRoman10-Regular
rf /Ff 160[909 45[606 1[606 47[{ enclmec ReEncodeFont }3
1212.12 /LMRoman10-Regular rf /Fg 203[993 52[{}1 1328.35
/wasy10 rf /Fh 162[361 1[361 29[1012 1[361 1[650 650
650 1[650 650 1[650 650 650 6[506 506 2[1084 37[{ enclmrm ReEncodeFont }
15 1328.35 /LMRoman12-Regular rf /Fi 143[653 1[776 21[1079
12[1107 15[361 59[{ enclmmathit ReEncodeFont }5 1328.35
/LMMathItalic12-Regular rf /Fj 650 2[723 5[650 17[650
7[975 97[578 686 1[939 686 723 506 513 506 1[723 650
723 1084 361 686 397 361 723 650 397 578 723 578 723
650 6[795 2[1336 975 975 939 723 957 1[885 1[975 1192
813 1011 668 469 975 1021 849 885 993 939 921 975 1[614
1[1012 2[361 650 650 650 650 650 650 650 650 650 650
650 361 434 361 2[506 506 2[1084 3[361 4[723 759 8[613
1[613 16[{ enclmec ReEncodeFont }76 1328.35 /LMRoman12-Regular
rf /Fk 35[1654 100[1554 1136 1196 837 849 879 2[1076
1196 1793 598 1136 1[598 1196 1076 658 982 1196 956 1196
1046 6[1315 2[2223 2[1497 1196 1605 2[1616 1682 2041
3[801 2[1353 1412 1[1554 1530 1625 9[1076 1076 1076 1076
1076 1076 1076 1076 1076 598 717 45[{ enclmec ReEncodeFont }46
1912.83 /LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fk(WS)717
b(3.3)g(-)g(1)h(A)-60 b(ufnahmetest)715 b(-)j(MC)f(-)h(BIFIE)p
0 TeXcolorgray -741 4800 a Fj(1.)p 0 TeXcolorgray 651
w(Eine)423 b(Univ)-36 b(ersit\344t)424 b(f\374hrt)f(einen)g(A)-36
b(ufnahmetest)423 b(durc)-36 b(h.)422 b(Dab)36 b(ei)424
b(w)-36 b(erden)423 b(zehn)g(Multiple-)921 6792 y(Choice-F)-108
b(ragen)597 b(gestellt,)i(w)-36 b(ob)36 b(ei)598 b(jede)g(F)-108
b(rage)598 b(vier)g(An)-36 b(t)g(w)g(ortm\366glic)g(hk)g(eiten)598
b(hat.)h(Nur)921 8784 y(eine)622 b(da)-36 b(v)g(on)622
b(ist)h(ric)-36 b(h)g(tig.)623 b(In)f(den)g(letzten)g(Jahren)g(wurden)f
(durc)-36 b(hsc)g(hnittlic)g(h)620 b(40)j(Be-)874 10776
y(w)-36 b(erb)36 b(er/innen)499 b(aufgenommen.)i(Dab)36
b(ei)500 b(traten)f(et)-36 b(w)g(a)500 b(95)217 b(\045)500
b(der)f(angemeldeten)h(Kandi-)921 12768 y(datinnen)486
b(und)g(Kandidaten)h(tats\344c)-36 b(hlic)g(h)487 b(zum)g(A)-36
b(ufnahmetest)486 b(an.)i(Heuer)f(treten)f(122)921 14760
y(Bew)-36 b(erb)36 b(er/innen)433 b(zu)g(diesem)h(A)-36
b(ufnahmetest)432 b(an.)921 19297 y(Nimm)i(an,)g(dass)f(Kandidat)h
Fi(K)528 b Fj(alle)435 b(An)-36 b(t)g(w)g(orten)432 b(v)-36
b(\366llig)436 b(zuf\344llig)f(ankreuzt.)921 23835 y(Kreuze)e(die)h
(zutre\033ende\(n\))d(A)-36 b(ussage\(n\))433 b(an.)p
1062 24875 44260 45 v 1062 31922 45 7047 v 1770 26735
a(Die)452 b(Anzahl)f(der)g(angemeldeten)g(Kandidatinnen)f(und)g
(Kandidaten,)h(die)g(tat-)1770 28727 y(s\344c)-36 b(hlic)g(h)401
b(zum)g(A)-36 b(ufnahmetest)399 b(ersc)-36 b(heinen,)401
b(ist)f(binomialv)-36 b(erteilt)402 b(mit)f Fi(n)369
b Fh(=)g(122)1770 30719 y Fj(und)433 b Fi(p)369 b Fh(=)f(0)p
Fi(;)p Fh(40)p Fj(.)p 42912 31922 V 45277 31922 V 1062
31966 44260 45 v 1062 37021 45 5056 v 1770 33826 a(Die)435
b(Anzahl)e(der)g(ric)-36 b(h)g(tig)434 b(b)36 b(ean)-36
b(t)g(w)g(orteten)432 b(F)-108 b(ragen)434 b(des)f(A)-36
b(ufnahmetests)433 b(des)1770 35818 y(Kandidaten)h Fi(K)528
b Fj(ist)434 b(binomialv)-36 b(erteilt)435 b(mit)e Fi(n)370
b Fh(=)e(10)434 b Fj(und)f Fi(p)369 b Fh(=)f(0)p Fi(;)p
Fh(25)p Fj(.)p 42912 37021 V 1 0 0 TeXcolorrgb 43621
34826 a Fg(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45277 37021 V 1062 37066 44260 45 v 1062
44113 45 7047 v 1770 38926 a Fj(Die)579 b(durc)-36 b(hsc)g(hnittlic)g
(he)576 b(Anzahl)j(der)e(ric)-36 b(h)g(tig)578 b(b)36
b(ean)-36 b(t)g(w)g(orteten)577 b(F)-108 b(ragen)578
b(aller)1770 40918 y(angetretenen)433 b(Kandidatinnen)g(und)f
(Kandidaten)h(ist)h(binomialv)-36 b(erteilt)435 b(mit)1770
42909 y Fi(n)370 b Fh(=)e(122)435 b Fj(und)d Fi(p)369
b Fh(=)g(0)p Fi(;)p Fh(40)p Fj(.)p 42912 44113 V 45277
44113 V 1062 44157 44260 45 v 1062 49212 45 5056 v 1770
46017 a(Die)465 b(Anzahl)f(der)f(zuf\344llig)j(ankreuzenden)d
(Kandidatinnen)f(und)h(Kandidaten,)1770 48009 y(die)406
b(aufgenommen)f(w)-36 b(erden,)405 b(ist)g(binomialv)-36
b(erteilt)407 b(mit)e Fi(n)369 b Fh(=)g(40)406 b Fj(und)e
Fi(p)369 b Fh(=)f(0)p Fi(;)p Fh(25)p Fj(.)p 42912 49212
V 45277 49212 V 1062 49256 44260 45 v 1062 54311 45 5056
v 1770 51116 a(Die)304 b(Anzahl)e(der)h(falsc)-36 b(h)303
b(b)36 b(ean)-36 b(t)g(w)g(orteten)302 b(F)-108 b(ragen)302
b(des)g(A)-36 b(ufnahmetests)302 b(des)g(Kan-)1770 53108
y(didaten)433 b Fi(K)529 b Fj(ist)434 b(binomialv)-36
b(erteilt)434 b(mit)g Fi(n)369 b Fh(=)g(10)434 b Fj(und)f
Fi(p)369 b Fh(=)f(0)p Fi(;)p Fh(75)p Fj(.)p 42912 54311
V 1 0 0 TeXcolorrgb 43621 52116 a Fg(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 54311 V 1062 54356
44260 45 v 47992 4800 a Ff(___/1)p 1 0 0 TeXcolorrgb
47905 6792 a Fe(WS)h(3.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 58384 54804 45 v 0 TeXcolorgray
24746 81281 a Fj(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fk(WS)717 b(3.3)g(-)g(2)h(Binomialv)-60
b(erteilung)714 b(-)k(MC)f(-)h(BIFIE)p 0 TeXcolorgray
-741 4800 a Fj(2.)p 0 TeXcolorgray 651 w(Einige)456 b(der)f(un)-36
b(ten)454 b(angef\374hrten)g(Situationen)h(k)-36 b(\366nnen)455
b(mit)h(einer)f(Binomialv)-36 b(erteilung)921 6792 y(mo)36
b(delliert)434 b(w)-36 b(erden.)921 11330 y(Kreuze)425
b(diejenige\(n\))g(Situation\(en\))f(an,)h(b)36 b(ei)425
b(der/denen)f(die)h(Zufallsv)-72 b(ariable)427 b Fi(X)530
b Fj(bino-)921 13322 y(mialv)-36 b(erteilt)435 b(ist.)p
1062 14030 44260 45 v 1062 21151 45 7121 v 1770 15890
a(A)-36 b(us)552 b(einer)h(Urne)e(mit)i(vier)g(blauen,)f(zw)-36
b(ei)553 b(gr\374nen)f(und)f(drei)h(w)-36 b(ei\377en)553
b(Kugeln)1770 17882 y(w)-36 b(erden)425 b(drei)f(Kugeln)h(mit)g
(Zur\374c)-36 b(klegen)425 b(gezogen.)h(\()p Fi(X)529
b Fj(=)425 b(Anzahl)g(der)f(gr\374nen)1770 19874 y(Kugeln\))p
42912 21151 V 1 0 0 TeXcolorrgb 43621 17923 a Fg(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
21151 V 1062 21195 44260 45 v 1062 26324 45 5129 v 1770
23055 a Fj(In)434 b(einer)f(Grupp)36 b(e)432 b(mit)i(25)g(Kindern)f
(sind)g(sieb)36 b(en)433 b(Linksh\344nder.)g(Es)h(w)-36
b(erden)1770 25047 y(drei)434 b(Kinder)f(zuf\344llig)i(ausgew)-36
b(\344hlt.)435 b(\()p Fi(X)538 b Fj(=)433 b(Anzahl)h(der)f
(Linksh\344nder\))p 42912 26324 V 45277 26324 V 1062
26368 44260 45 v 1062 33489 45 7121 v 1770 28228 a(In)444
b(einem)g(U-Bahn-W)-108 b(aggon)443 b(sitzen)g(35)i(P)-36
b(ersonen.)443 b(Vier)h(hab)36 b(en)443 b(k)-36 b(einen)443
b(F)-108 b(ahr-)1770 30220 y(sc)-36 b(hein.)418 b(Drei)h(w)-36
b(erden)417 b(k)-36 b(on)g(trolliert.)420 b(\()p Fi(X)522
b Fj(=)418 b(Anzahl)g(der)f(P)-36 b(ersonen)418 b(ohne)f(F)-108
b(ahr-)1770 32212 y(sc)-36 b(hein\))p 42912 33489 V 45277
33489 V 1062 33533 44260 45 v 1062 42646 45 9113 v 1770
35393 a(Bei)479 b(einem)f(Multiple-Choice-T)-108 b(est)478
b(sind)f(pro)h(A)-36 b(ufgab)36 b(e)479 b(drei)e(v)-36
b(on)479 b(f\374nf)f(W)-108 b(ahl-)1770 37385 y(m\366glic)-36
b(hk)g(eiten)524 b(ric)-36 b(h)g(tig.)523 b(Die)h(An)-36
b(t)g(w)g(orten)521 b(w)-36 b(erden)522 b(nac)-36 b(h)522
b(dem)g(Zufallsprinzip)1770 39377 y(angekreuzt.)435 b(Sieb)36
b(en)432 b(A)-36 b(ufgab)36 b(en)434 b(w)-36 b(erden)433
b(gestellt.)i(\()p Fi(X)538 b Fj(=)433 b(Anzahl)h(der)f(ric)-36
b(h)g(tig)1770 41369 y(gel\366sten)435 b(A)-36 b(ufgab)36
b(en\).)p 42912 42646 V 1 0 0 TeXcolorrgb 43621 38422
a Fg(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45277 42646 V 1062 42690 44260 45 v 1062 47900 45 5211
v 1770 44631 a Fj(Die)435 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)433
b(f\374r)h(die)f(Geburt)f(eines)i(M\344dc)-36 b(hens)432
b(liegt)j(b)36 b(ei)434 b(52)217 b(\045.)1770 46623 y(Eine)434
b(F)-108 b(amilie)434 b(hat)g(drei)f(Kinder.)g(\()p Fi(X)539
b Fj(=)433 b(Anzahl)g(der)g(M\344dc)-36 b(hen\))p 42912
47900 V 1 0 0 TeXcolorrgb 43621 45627 a Fg(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 47900
V 1062 47944 44260 45 v 47992 4800 a Ff(___/1)p 1 0 0
TeXcolorrgb 47905 6792 a Fe(WS)369 b(3.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 51973 54804 45
v 0 TeXcolorgray 24746 81281 a Fj(2)p 0 TeXcolorgray
eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fk(WS)957 b(3.3)g(-)g(3)h(Mo)60
b(dellierung)955 b(mit)i(Binomialv)-60 b(erteilung)954
b(-)k(MC)g(-)-2331 4515 y(BIFIE)p 0 TeXcolorgray -741
7823 a Fj(3.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)413
b(sind)h(f\374nf)g(Situationen,)g(b)36 b(ei)415 b(denen)e(nac)-36
b(h)413 b(einer)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)414
b(gefragt)874 9815 y(wird.)921 14352 y(Kreuze)354 b(diejenige\(n\))f
(Situation\(en\))g(an,)h(die)g(mithilfe)h(der)e(Binomialv)-36
b(erteilung)356 b(mo)36 b(del-)921 16344 y(liert)434
b(w)-36 b(erden)433 b(kann/k)-36 b(\366nnen.)p 1062 17384
44260 45 v 1062 28415 45 11031 v 1770 19244 a(In)482
b(der)g(Kan)-36 b(tine)481 b(eines)h(Betrieb)36 b(es)482
b(essen)g(80)h(P)-36 b(ersonen.)482 b(Am)g(Mon)-36 b(tag)482
b(w)-36 b(erden)1770 21236 y(ein)293 b(v)-36 b(egetarisc)g(hes)293
b(Geric)-36 b(h)g(t)292 b(und)f(drei)i(w)-36 b(eitere)293
b(Men)-36 b(\374s)291 b(angeb)36 b(oten.)294 b(Erfahrungs-)1770
23228 y(gem\344\377)443 b(w)-36 b(\344hlt)443 b(jede)f(vierte)g(P)-36
b(erson)442 b(das)f(v)-36 b(egetarisc)g(he)443 b(Geric)-36
b(h)g(t.)441 b(Es)h(w)-36 b(erden)441 b(20)1770 25220
y(v)-36 b(egetarisc)g(he)435 b(Geric)-36 b(h)g(te)432
b(v)-36 b(orb)36 b(ereitet.)1770 27212 y(Wie)435 b(gro\377)f(ist)g(die)
f(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)434 b(dass)g(diese)f(nic)-36
b(h)g(t)433 b(ausreic)-36 b(hen?)p 42912 28415 V 1 0 0
TeXcolorrgb 43621 23232 a Fg(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 45277 28415 V 1062 28459 44260
45 v 1062 35248 45 6789 v 1770 30319 a Fj(Bei)591 b(einer)f(Lieferung)g
(v)-36 b(on)591 b(20)f(Smartphones)f(sind)h(f\374nf)g(defekt.)i(Es)e(w)
-36 b(erden)1770 32311 y(nac)g(heinander)433 b(drei)g(Ger\344te)g(en)
-36 b(tnommen,)433 b(getestet)h(und)e(nic)-36 b(h)g(t)433
b(zur\374c)-36 b(kgelegt.)1770 34303 y(Mit)434 b(w)-36
b(elc)g(her)434 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)433
b(sind)g(mindestens)g(zw)-36 b(ei)434 b(da)-36 b(v)g(on)434
b(defekt?)p 42912 35248 V 45277 35248 V 1062 35292 44260
45 v 1062 48253 45 12961 v 1770 37348 a(In)463 b(einer)g(Klasse)g(m)-36
b(\374ssen)462 b(die)h(Sc)-36 b(h)g(\374ler/innen)461
b(b)36 b(ei)463 b(der)f(\334b)36 b(erpr\374fung)462 b(der)g(Bil-)1770
39340 y(dungsstandards)404 b(auf)i(einem)g(anon)-36 b(ymen)405
b(F)-108 b(rageb)36 b(ogen)406 b(ihr)f(Gesc)-36 b(hlec)g(h)g(t)404
b(\(m,)i(w\))1770 41332 y(ankreuzen.)357 b(In)f(der)g(Klasse)i(sind)e
(16)h(Sc)-36 b(h)g(\374lerinnen)354 b(und)h(12)i(Sc)-36
b(h)g(\374ler.)356 b(F)-27 b(\374nf)356 b(P)-36 b(er-)1770
43324 y(sonen)434 b(hab)36 b(en)433 b(auf)h(dem)f(F)-108
b(rageb)36 b(ogen)433 b(das)h(Gesc)-36 b(hlec)g(h)g(t)432
b(nic)-36 b(h)g(t)433 b(angekreuzt.)1770 45316 y(Mit)346
b(w)-36 b(elc)g(her)345 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)345
b(b)36 b(e\034nden)343 b(sic)-36 b(h)345 b(drei)g(Sc)-36
b(h)g(\374ler)344 b(un)-36 b(ter)344 b(den)g(f\374nf)1770
47308 y(P)-36 b(ersonen?)p 42912 48253 V 45277 48253
V 1062 48297 44260 45 v 1062 57336 45 9039 v 1770 50157
a(Ein)434 b(Gro\377h\344ndler)f(erh\344lt)g(eine)h(Lieferung)f(v)-36
b(on)434 b(2)g(000)h(Smartphones,)d(v)-36 b(on)434 b(de-)1770
52149 y(nen)f(erfahrungsgem\344\377)i(5)217 b(\045)433
b(defekt)h(sind.)1770 54141 y(Mit)501 b(w)-36 b(elc)g(her)500
b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)500 b(b)36
b(e\034nden)499 b(sic)-36 b(h)500 b(80)h(bis)f(90)h(defekte)g
(Ger\344te)1770 56133 y(in)434 b(der)f(Lieferung?)p 42912
57336 V 1 0 0 TeXcolorrgb 43621 53149 a Fg(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 57336
V 1062 57380 44260 45 v 1062 68411 45 11031 v 1770 59240
a Fj(In)295 b(einer)f(Klinik)i(w)-36 b(erden)293 b(500)j(krank)-36
b(e)295 b(P)-36 b(ersonen)293 b(mit)i(einem)f(b)36 b(estimm)-36
b(ten)294 b(Medi-)1770 61232 y(kamen)-36 b(t)459 b(b)36
b(ehandelt.)457 b(Die)i(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)458
b(dass)g(sc)-36 b(h)g(w)g(ere)458 b(Neb)36 b(en)-36 b(wirkun-)1770
63224 y(gen)434 b(auftreten,)f(b)36 b(etr\344gt)434 b(0,001.)1770
65216 y(Wie)567 b(gro\377)g(ist)f(die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit,)567 b(dass)f(b)36 b(ei)566 b(mehr)f(als)i(zw)-36
b(ei)567 b(P)-36 b(ersonen)1770 67208 y(sc)g(h)g(w)g(ere)434
b(Neb)36 b(en)-36 b(wirkungen)433 b(auftreten?)p 42912
68411 V 1 0 0 TeXcolorrgb 43621 63228 a Fg(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 68411
V 1062 68455 44260 45 v 47992 7823 a Ff(___/1)p 1 0 0
TeXcolorrgb 47905 9815 a Fe(WS)369 b(3.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 72483 54804 45
v 0 TeXcolorgray 24746 81281 a Fj(3)p 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1794 a Fk(WS)872 b(3.3)h(-)g(4)g(Sammelw)-60
b(ahrsc)g(heinlic)g(hk)g(eit)872 b(b)60 b(ei)872 b(\334b)60
b(errasc)-60 b(h)g(ungs-)-2331 4817 y(eiern)717 b(-)g(O)-60
b(A)718 b(-)g(Matura)f(2014/15)g(-)g(Neb)60 b(en)-60
b(termin)716 b(1)p 0 TeXcolorgray -741 8124 a Fj(4.)p
0 TeXcolorgray 651 w(Ein)660 b(italienisc)-36 b(her)660
b(S\374\377w)-36 b(arenhersteller)660 b(stellt)g(\334b)36
b(errasc)-36 b(h)g(ungseier)659 b(her.)i(Das)g(Ei)f(b)36
b(e-)921 10116 y(steh)-36 b(t)469 b(aus)h(Sc)-36 b(hok)g(olade.)472
b(Im)e(Inneren)f(des)h(Eies)h(b)36 b(e\034ndet)468 b(sic)-36
b(h)470 b(in)g(einer)g(gelb)36 b(en)471 b(Kapsel)921
12108 y(ein)607 b(Spielzeug)f(o)36 b(der)607 b(eine)g(Sammel\034gur.)h
(Der)f(Hersteller)g(wirbt)f(f\374r)h(die)g(Star-W)-108
b(ars-)921 14100 y(Sammel\034guren)433 b(mit)g(dem)h(Slogan)g(\022)-108
b(Wir)433 b(sind)h(jetzt)f(mit)h(dab)36 b(ei,)434 b(in)f(jedem)h(7.)g
(Ei!\020)-181 b(.)921 18637 y(P)-36 b(eter)439 b(kauft)h(in)f(einem)h
(Gesc)-36 b(h\344ft)439 b(zehn)g(\334b)36 b(errasc)-36
b(h)g(ungseier)438 b(aus)i(dieser)f(Serie.)g(Berec)-36
b(h-)921 20629 y(ne)551 b(die)g(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g
(eit,)552 b(dass)g(P)-36 b(eter)551 b(mindestens)f(eine)i(Star-W)-108
b(ars-Sammel\034gur)921 22621 y(erh\344lt.)p 1 0 0 TeXcolorrgb
856 25166 a Fh(1)295 b Fd(\000)3130 23882 y Fc(\020)3924
24643 y Fb(6)p 3924 24856 471 45 v 3924 25624 a(7)4527
23882 y Fc(\021)5188 24188 y Fb(10)921 29704 y Fj(L\366sungssc)-36
b(hl\374ssel:)921 31696 y(Ein)533 b(Punkt)f(f\374r)g(die)h(ric)-36
b(h)g(tige)533 b(L\366sung.)g(Andere)f(Sc)-36 b(hreib)g(w)g(eisen)532
b(des)g(Ergebnisses)h(\(als)921 33687 y(Dezimalzahl,)436
b(in)d(Prozen)-36 b(t\))433 b(sind)g(eb)36 b(enfalls)434
b(als)h(ric)-36 b(h)g(tig)433 b(zu)g(w)-36 b(erten.)874
35679 y(T)-108 b(oleranzin)-36 b(terv)-72 b(alle:)435
b Fh([)8 b(0)p Fi(;)p Fh(78;)221 b(0)p Fi(;)p Fh(79])437
b Fj(bzw.)d Fh([)8 b(78)221 b(\045;)g(79)g(\045])p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 8124
a Ff(___/1)p 1 0 0 TeXcolorrgb 47905 10116 a Fe(WS)369
b(3.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 39487 54804 45 v 0 TeXcolorgray 24746 81281 a Fj(4)p
0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fk(WS)549 b(3.3)g(-)h(5)f(Binomialv)-60
b(erteilte)547 b(Zufallsv)-120 b(ariable)547 b(-)j(MC)g(-)g(Matura)
-2385 4515 y(2013/14)718 b(1.)f(Neb)60 b(en)-60 b(termin)p
0 TeXcolorgray -741 7823 a Fj(5.)p 0 TeXcolorgray 651
w(In)493 b(einer)g(Urne)g(b)36 b(e\034nden)491 b(sic)-36
b(h)493 b(sieb)36 b(en)493 b(w)-36 b(ei\377e)495 b(und)d(drei)h(rote)g
(Kugeln,)h(die)f(gleic)-36 b(h)494 b(gro\377)921 9815
y(und)487 b(durc)-36 b(h)486 b(T)-108 b(asten)488 b(nic)-36
b(h)g(t)487 b(un)-36 b(tersc)g(heidbar)486 b(sind.)i(Jemand)f(nimm)-36
b(t,)488 b(ohne)f(hinzusehen,)921 11806 y(Kugeln)434
b(aus)f(der)g(Urne.)921 14352 y(In)339 b(w)-36 b(elc)g(hen)339
b(der)g(folgenden)h(F)-27 b(\344lle)340 b(ist)f(die)h(Zufallsv)-72
b(ariable)341 b Fi(X)444 b Fj(binomialv)-36 b(erteilt?)342
b(Kreuze)921 16344 y(die)433 b(b)36 b(eiden)433 b(zutre\033enden)f(A)
-36 b(ussagen)434 b(an!)p 1062 19302 44260 45 v 1062
24357 45 5056 v 1770 21162 a Fi(X)439 b Fj(b)36 b(esc)-36
b(hreibt)333 b(die)h(Anzahl)f(der)h(roten)f(Kugeln)h(b)36
b(ei)334 b(dreimaligem)h(Ziehen,)f(w)-36 b(enn)1770 23154
y(jede)434 b(en)-36 b(tnommene)433 b(Kugel)h(wieder)f(zur\374c)-36
b(kgelegt)434 b(wird.)p 42912 24357 V 1 0 0 TeXcolorrgb
43621 22162 a Fg(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 24357 V 1062 24402 44260 45 v 1062
29457 45 5056 v 1770 26262 a Fi(X)539 b Fj(b)36 b(esc)-36
b(hreibt)432 b(die)i(Anzahl)g(der)f(w)-36 b(ei\377en)434
b(Kugeln)f(b)36 b(ei)434 b(viermaligem)i(Ziehen,)1770
28254 y(w)-36 b(enn)434 b(die)f(en)-36 b(tnommenen)432
b(Kugeln)i(nic)-36 b(h)g(t)433 b(zur\374c)-36 b(kgelegt)434
b(w)-36 b(erden.)p 42912 29457 V 45277 29457 V 1062 29501
44260 45 v 1062 34556 45 5056 v 1770 31361 a Fi(X)539
b Fj(b)36 b(esc)-36 b(hreibt)432 b(die)i(Anzahl)g(der)f(w)-36
b(ei\377en)434 b(Kugeln)f(b)36 b(ei)434 b(f\374nfmaligem)h(Ziehen,)1770
33353 y(w)-36 b(enn)434 b(jede)f(en)-36 b(tnommene)433
b(Kugel)h(wieder)g(zur\374c)-36 b(kgelegt)434 b(wird.)p
42912 34556 V 1 0 0 TeXcolorrgb 43621 32361 a Fg(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
34556 V 1062 34600 44260 45 v 1062 39655 45 5056 v 1770
36460 a Fi(X)449 b Fj(b)36 b(esc)-36 b(hreibt)342 b(die)h(Anzahl)g(der)
g(Z\374ge,)g(bis)h(die)f(erste)g(rote)g(Kugel)h(gezogen)g(wird,)1770
38452 y(w)-36 b(enn)434 b(jede)f(en)-36 b(tnommene)433
b(Kugel)h(wieder)g(zur\374c)-36 b(kgelegt)434 b(wird.)p
42912 39655 V 45277 39655 V 1062 39700 44260 45 v 1062
44755 45 5056 v 1770 41560 a Fi(X)517 b Fj(b)36 b(esc)-36
b(hreibt)410 b(die)h(Anzahl)g(der)g(Z\374ge,)g(bis)g(alle)i(w)-36
b(ei\377en)411 b(Kugeln)h(gezogen)g(wur-)1770 43552 y(den,)434
b(w)-36 b(enn)433 b(die)g(en)-36 b(tnommenen)432 b(Kugeln)i(nic)-36
b(h)g(t)433 b(zur\374c)-36 b(kgelegt)434 b(w)-36 b(erden.)p
42912 44755 V 45277 44755 V 1062 44799 44260 45 v 47992
7823 a Ff(___/1)p 1 0 0 TeXcolorrgb 47905 9815 a Fe(WS)369
b(3.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 48827 54804 45 v -2331 54255 a Fk(WS)717 b(3.3)g(-)g(6)h(Reifen)e
(-)h(O)-60 b(A)718 b(-)g(Matura)f(NT)g(1)h(16/17)p 0
TeXcolorgray -741 57563 a Fj(6.)p 0 TeXcolorgray 651
w(Die)316 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)316
b(dass)f(ein)h(neuer)e(A)-36 b(utoreifen)316 b(einer)f(b)36
b(estimm)-36 b(ten)315 b(Mark)-36 b(e)316 b(inner-)921
59555 y(halb)477 b(der)g(ersten)g(10)217 b(000)479 b(Kilometer)f(F)-108
b(ahrt)477 b(durc)-36 b(h)476 b(einen)h(Materialfehler)i(defekt)f
(wird,)921 61547 y(liegt)434 b(b)36 b(ei)434 b Fi(p)221
b Fh(\045)p Fj(.)921 64092 y(Eine)433 b(Zufallsstic)-36
b(hprob)36 b(e)434 b(v)-36 b(on)434 b(80)g(neuen)f(Reifen)h(dieser)f
(Mark)-36 b(e)434 b(wird)g(getestet.)921 66637 y(Gib)467
b(einen)g(A)-36 b(usdruc)g(k)467 b(an,)g(mit)h(dem)f(man)g(die)h(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit,)468 b(dass)f(mindestens)921
68629 y(einer)641 b(dieser)g(Reifen)h(innerhalb)e(der)h(ersten)f(10)217
b(000)643 b(Kilometer)f(F)-108 b(ahrt)640 b(durc)-36
b(h)640 b(einen)921 70621 y(Materialfehler)435 b(defekt)f(wird,)g(b)36
b(erec)-36 b(hnen)432 b(kann!)p 1 0 0 TeXcolorrgb 856
73167 a Fh(1)295 b Fd(\000)h Fh(\(1)f Fd(\000)6511 72596
y Fa(p)p 6042 72857 1412 45 v 6042 73625 a Fb(100)7587
73167 y Fh(\))8093 72685 y Fb(80)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 57563 a Ff(___/1)p
1 0 0 TeXcolorrgb 47905 59555 a Fe(WS)369 b(3.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 77100
54804 45 v 0 TeXcolorgray 24746 81281 a Fj(5)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
