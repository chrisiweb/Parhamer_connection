%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS 2.2/WS 2.2 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:51:04 2017
%%Pages: 6
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular
%%+ LMMathSymbols10-Regular wasy10 LMRoman8-Regular LMRoman10-Regular
%%+ LMMathItalic12-Regular LMMathItalic8-Regular LMRoman6-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS 2.2/WS 2.2 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0850
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE637A46D470BB1239E64BDFB0C5E059913DDF7E2AFA021A6
B56EC9F33783F715048AA4EC1B1F89B3CCB0149CE74CCC7518C027E399132550
20FAA5D8352D4237219BC63DD74387A3D4C45B156302ADF2FF40BD407790793B
2B4A9E06AE094338F09076A091CA69B1ACA5AA995EDCA2CD0AC32539CC0EAD16
213FCF9E1B9514BCE0D709937B6C195D979E9E98C9A7924CE582EC2347A9D9D5
33A43F1525A4BBB12EA7ECA1A5A5AE9679354CDA6A3F9C1062927E36A2E4A6F3
4E754C8DD8EA2571C7C48BC29C175FBD01BF238B753D3E79BC34EE383C5A8AB1
6E3C947A011221956AE269FF01BC597924775DFE721577703E5588268DAA8654
78898C645295B338359944962E09541FBB7A00956D1ACA7D8C2355A7CEAB6B77
A4F4A47CB6269D49966E24FE51C7D95B148AC1B7A39CBBE3E75DA003115C7416
C29A27BE5F176495CDB33FB4366285011AFAEB151B1CF06B726D350362C6AC75
0D662C96893585E5910E342D8D4F4775E75159382FC657B06DED974A697CCFC0
9C7625C9B0711FA238F4631ABA1F02182C4DF8677DD7968A3D348169A0F0D186
6CA9CA94D87E1CACB6B0527EB39BC776BBE77AC6B5786107B9147FE1B052084E
6B3C489C8B63D931E340E4EAFBCD5432DAAC1F28BC96B2CAC41CFF9F74CE2A99
711ACC30B2092643230A546D64676831EE07B6C354CB657824641AE445465A06
72DF43F6F54C653D1A7A7D868B4F4ABA341AE16C1481E9E5221FFC70C3CFBD91
555D5CDCF1480C14206E36BA36387501F7322C70E18F1A82EC461C55A2D06156
C3F9B9287A5E4B5BA883AB3F09CD169493ACC8A61DF63B70ADBD9219271DA945
8729A78899AA5E4CE729D703BBB460A1214C930334B5F384536C88B9F2875A4F
429D55CA820132326515E69B36A76D8F2ABA31B012D1D864C9EC170C7E0A9376
1699D02683DD8842CED3F7878C689EBC84E4167AB6B7BF066F831499DE7AC073
A1581FF2B4BAAFE08B8A2549B2876FFA28E1028168D8558D257B568853D0B5EC
DCAE35D4A1339FC34B57764EEAEB260042AFB4E19A95C71189684A2571294FB4
DA6ECCDC5CBFE59C61C5CD4137311E5B9CF152130F0D4C29006109FF9BB91BC3
2C3B8138868EAA7A3E9E2D4E1CA40A032473734F21DE1763CF602ECF0F51EA4C
B121E9307E9A6C5BBC543BF607914AB787DDD28059F52C6C548D2D179AF242FB
B7F6AF3A711E2D08D928C27AC37383434D43C7AF75058E1460057260DD4EE278
815B039825FC9649C26CE0CE9C31AE6FCF30233D857653A16E84D60148FCE766
226D1134957DA29B897D982ED29CA25CA633D6F8AD7C4F17A5229375FB3D18D7
E837E814F62F0983F73B5B9694554B46876D6394F83EEFEF92A6D485FB21F5FC
94C068C813858BD4BDDB2A3276E7EE83AB75A6FAEC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492847AE57C85675CF04BFD1410B56E616F
68C3927EA7267C0C4BBA87AA3EC7166170B80B7355E802532D38053D427DA3EC
5D297AB110438F9AA9CEDA887E63AD877E9208260AE6AF24100E2B365BF89C5B
679912C69C51E8D0541100E3DF71D501F4BFA0AE8260EA4119883BE0E2CCD156
1113CDC4983460A31A70C6614DA60CBEA3A564539DA028D46BD8A6C8E870451A
F92C3A3D555E94EA81503E0D53C0AE8AF190625DF8F48C433C5CA5E61B61960C
10E340864F2D181B835CC0F9C87C9CC0E95FB3F1824BF5ABE0DA3110FBD87806
4770B0F94B263E2C7A3D9DF14D9BE01BEF9882A1EC2C8DDA5931F895D02E4FF1
CAD0158061CC26D5256590E51541844B9AE3A861D6412B59941B7186BC31AAD8
9CC7F07EF9A36CF5C32F54ABEE8B83306227DF64A1F4E9B350DB04B85024FF0E
6FF4C8FDEECC5DF7106C24975E54928A3679928D4D84C98B3D33843CFCBD8AED
A1A74438EFDB0BD68AB2061EF46D65CA446C190A6BF6E0D8DEFA1E8EDDFB5541
473187ABC3D34172433CC652E9B2516AD0EEC9F452135D6AC8D97A90DD4C972B
69C05585BD438731D0DA714733FABC30765D6775BB68C69704D0BA5D6DE6BC5E
10342040FAE3CA1C359295C7D2967195AFD2D94BADCE1E95F17F0F95B5A683ED
8DA83806CBF2B803C94B5A135004A20823158454E29255E8846AB1AB9E444B82
AC000DE047EE32B5C7659AA3999D8CA1D3941D1FF042DCB7834420A2CB78723F
B40B625D7418A892CFEBFF58AE1CD0F128156868B917147969EF8319C216ED3D
620588A8D3D13C4737BB89F1FE17EA91AD0A119E1754916E4957C40F7642AD75
0E847F04D456B101A89F4E76E6BD785EB1F605D78CC0AB1425CEB017B47C1D40
BE68CE2BB94BFFF5120F91CB493BAD5966F870FFA6AE560AD6A82C3B0AF0C810
C12CA6C41677519886FD5CD163D6FB351E2918F4E5B5D5A27FB8E57A24EDF9D7
42EEFF2C7558A4479E25DBF75353BF0CB3E744B9009BFCB1D37E21EC06E4D7E0
2762A656C0E348FB75DA17FAFCFA53893D1ACEFD8C3EB97C9E7E5C3C5A303193
004DF6B0E2446527C65DDDF917C6C8B730247D89C817FB276D85EB671AD64DB3
4BB09368AB12D82CC4A183ED86D2841E499B785084AA21B81AF837A206A50773
FDDBF92515FD7870D5A35EA64BA957FB2F6990DCDDDF2859681D7B7D5566779F
26081CE1DCF8FCBF985B41005EA0771D928990C0BA6CB7E33875B819AEB1EFE3
7A3656C9B2060A89B3D1A0ED127FEDDC4387DDB2E10EF3FA3985EDC86947215D
585BABD246585FD44C7FFBD5B878504A44F08C38AB4A35ED5CC53EE38F810C49
4CDE233ED8AC7E692EDA8CE219D733D37296CEE1118362904F622FC22656FA58
65B5E26CAD7951FBF3D7B27121FF01DEA6F49C7A4498656B8A12ECA7752E0477
CC7F945AA8CA30ECC8B017D3365E4F2C4D6F555DAC9A6D17C263F63D55D6424C
58ACA31C6B17A617B342EC92A2FB13D4FDD77DC3A85B2508B70FEF36DD289991
A16B4097497EEB38F0274AAA1341AD3BB645B0D7F97ACB233FFA576119456D0E
E8D5F85BD47E3C79CDB4AD769ABB374D1B705D61C428B44B213057725969D808
B280BE2A969D2207BDDCAAB6AB26EFDBF7E27A57CE61292AAD6582B3A661F4D4
8AFE06644856C8C9DCCC07407A115D6D45B7DF6929B1C79277F3957EA1805B97
8529CE833B1EECAF947E67DBA704AF3F29618A894235D7DBFC1153A5F74EED26
102EEDB139492E743E82CB61CEFAC99D77B61F60FD9B0C1645E399B20090DBB6
8DFAAF4C6C1919FEFB6E3E8EBF926C2A91C5281153D5B28BEE5E71772C8921D6
9D11ACDDE095D43077D6D8E8EEF114F60F85935BDBDDA3362A11E0BF7854BF4B
BC52EAEB261E696CD413485DF93CADCED318B5FA421EF0BC594EFBA262EB2C41
4E43D8ACC9CB195D12F3B2ADBAA0D95A443F525372BDE229F13C485324C60FD1
D7DFE515B666ED51FB61F69E18AF955D6620C95021DF41F66204845581723BB6
B76B4C3C2E2E5B8584AD015374BE36AC1E08E1C53C079B8BEAA3E0F907086AA2
3BCD6FA9812375C8E8D4ADF7A319E9EAC6238093C798878E5D558B30ADAFC1AC
17B04381C6754327FA7C65AEAC1A2839A9FF799456B6E5B9BF421E82415746B3
63938E88CA325AE4BC6B36475154CACD25A07C74FEAA2928802611B4AAC8DA96
F7CA93B7288B2491380B2F4F87646F6BA42247F5B593A0787ACF533199348D11
730EFF7C25DD5ACD0221075ED47DD6FE8909C387D8F02A88FD24540AD71A0FED
2665CFCF412B99167152D35BC0E671E657EDD876C39BA0ED4E790A79D8AD6723
4A2C9360790E4981671E3F898A1157850F48A5E0F299DD9078866AC4AC771A7E
ECE3275C26835080FD2AC78DE88BF65298A8EB4181F1646B5867D0EA3446F4FA
176517141B75FA51F69D54478E279EC2855938CB532FC260FEF5CF3FE05F4F6B
1A6AC463C1D1A24E7B41EBAD57574D43E06E13690F831AC63F570D466C8DE97C
2E08CC01056475E95FB467E2F3B08917792C1DAFD35FDA10C0E14D125C730ADC
BACC2CBB9BCBB0BB982F75ACF33109F8AE7ADE4954D0B1E1802506DBDA73CFA3
DEC72E83650F240B54E88E51C065039ED16C5B958CF632FAC74FB900E04B0B13
B26BFA8A80D5663FAC4A5C3CC6895C0717E2271C6A3F722B2F6C2CCB04097EAF
EF211683EB8F6FF2306B741C9455B48094D2958B832B76458887F0FD9D971D2C
75AAA237EFCFBE0F14F797E71B0E19D074858D2BB30FEDEF6C34FAC40779F603
770BA127BD4B9E4F5EC52314B25837FD118062685FAF4391CC91AC0ABAE56089
30E599D101B7ECAFC159AC2335D6DFEDAAD93A074010C5626DD9470582E82C12
2DAC32220AEE7C75A5BAC24E9E43AD56BA6B5B915CA1A908C4180B7DDB99E3AF
5C45072D5FDE12DD81276D7304AFF3059366F293191CE257782F236FC2299F6C
60070DD031F172CB2FAA0C0BFDAD40BD3AE7D647B0FFC9298FF9481A19CA03EB
E2F1EEE59A3D6E3FC23B65AED24295DFD94966CBFB46E98286E8AB5BBCC5A8C4
31D8D7BB6D38C459ED7811962AD08A130D7781F378AEA20293910A7716341DA6
4093C33CE11E30603EAD00851CC85FB116890A7C58F795071033711947B65B0C
07BB7FE129E446F1A58F097CC13CA9BC695F782ADBE50737CE43B15AEE7EBCB9
0CE9D7EB1913D307114496116FF0087A48789461E310DE9062984F6951B5AA2E
BC98536501922114CBB2D9698493EEFA925E555E776D6916E68159716FC183FB
83834CA958EF2A4210A873E6F7DF8F113E86D87F7B364763BBA1AA81F9D7B871
D7EAAFDE0578B3E819F2D472E963C4FB539A61127D80FD783E271DBEDD8994F8
A2E9F96F4F81D178EDFD36B63A9E05D8F4BD13318C16396253CDCB9E1EE7A887
8F02E0B498DE9C1A5F110347B7B612146B59530538023BDA6569691729EA004A
3D96F0FBB300F40752DDCE278F26B5D50F9C8BBDC7B3D5D144869BE59F0BE9FB
57853D65DB474E4CEB98EAAAE80FEA3557FC29E982F4E43B182BD85FD6FF9604
20E3B5F8A1C120887EEDD7CEC677E95307847599B02E5AF54BE91F662979D0BE
A1CC2205A8493A22D252AEBA66664B2A0FA2AD5C2BFDC446E8217D3E5D67616F
A9C8D25588F1689221B896E4663DCB2823847EA18AEC15EB3464CD20830192E9
FA76A8D8C8454C7E9ABF6C0F725BC64477D228181C86BA782F4FE02493A70F60
73CE5AC25BF5C0579654DB07E4ACEA3666110AE5DED90584F99E14B24810C5DF
7394EE947676E459D57DCBB3829ECEFC74DC1A1B3482A99DC90EB52844D07B8D
4D86246B30916CF5B9EB30CF2688AD5470018A3F2D47875FBB75E16CFFEB450C
B8BC91FFBE6C83D561EA7819C508DE4AE8DFA21E23DB7E05FECB7CBC4A049B24
336687838F532359D6FBC18512610FC852B07E15D4B247573263395579F2B2D3
3E0A136C429A9D806C2CF8AB15954BFF59B4AE356D1DB3175DDC2A6AFD06EEE9
950911F36A10ADD8ABFBA9D53C42A690A48B179E6725265A12AB4D9865210714
AD7EF694588DD4594813371CF6DF55FC8BCE3B9F209F7A66F4CC713EC85C44E2
C692AAC42C9E5003AA9AC548FF0AC943ED9E898E52F2294B3AF6C494A1A62A0A
6F8E820E383A2F9A9BE2FFB3AFF49BBE499A6E4A6D986438CC0F8950392B6CE6
1423914058FCDDBE245DEBC2441DF1AA6A52716A7EF812A28813BA8D3D655ED2
66551C59852C1BCDFAEE9FCA1B8B7B45FBB5A049FC399C46C1426F4FF72A744B
8EED9375BA41440D24BE8D533BC804C1C8059928ABE24544F41569DAEB218F1A
90A339268479552A5D4F025C0446A986C64DFFC2C0C909AC2835EF3FAF19B53E
44F7EEB341005187115312A76DCABF4133E260320CB39E191970C0F0E81DBEF7
772D6C5F077DE5916A5E4571236CB05E25C0B681EE2902AF18783CA81177E26C
F828FED0D16B16987D62B6E83BF9B59F90EC4E790133AA578C8AF018B06D7B9F
5E162C7BC6381459BB3BD8E8BD8CDF61FEF2585E482EE3E3235E4B3C55CB96C5
D792E2DDFD91D5D62FEA685E885923620FAA16910AA9EB967D0B382CC9929D8D
11C794E55DEC8F51B5D7BC7DD0F437F1C1A89AFCBF166B5E882C1009A9DB4ED1
9128C657C8098ED5BB7691BBF8C1F6EBA75C1C9C1670B8A568F69091BF0FBC9A
D619AF7C314419A4FD057F51ADDF7DC9BEC731AD6040FD9B804FA147488D0E30
F8841589FE146D0525DF5FB31C974FC3B57F01E1D7A2A2E477EFB20457C17812
98694BCB0A51F6AAD0A5B019A8F4C210A4EF832E7D6DF3E913A142458A406870
B3A796EDAB7569B0D96F4665D013427D282B072CFF5FACF67B4ADA7A8FF35840
A4FE3D981216B1214415D55F0490CC2304501060CD4B29E20116F74FEB99A1CC
BD511DF8BC21284CBB01E5147CF95A00E8E775BB357487584644F975CC568F47
3DBDE6278D74ECB3172F5438402E9D77EACBBE3D271C3DD27C28F754521E715B
EF18A179D64952A6D39CFFDBA38C11C7238C738370C48C50E025B66055E56D4A
8FB3ECB4BE8FB8D21D943D3328065A91592BF5454FE871CF4302F1550F56B682
1344308331EBB7B2E684B3B6C374B061AC0CEDB050AFEBD734238E9DDC831883
C93110751B5F8637CF00C7C14D8D087E4AB1D815951E4BEA2690A552606F1EB8
A796E8FA21BB9E5CF8DBBD8D831A0B996FA2E67F9064EC921830EE707FFBD444
DF0A703A999B75EB8351EA2396AE35A6BA0B59619C35B4D329A8522B1EE90448
387DBB0912FED5852BA7AA362087601A47FF693A1CC34AC367036829996120FB
18D883F38EF4131EADDE2C756C2DF9F395FD83FAE697F3A69B0A0D171444B807
727C458C55F973274598E7624305A0F7EBBED6B1E29CDB9B8ED28CF387644D49
A2010C5158CE82BD52FE87C5035DFD9425EEF795DD0B09D4B1C7EA0C98434FAE
393859A98FC0B3EA3A0CAE001DFDA94760FF7862337BB4A2C3A8C8803E49B607
12658E7EDB16D9BEB4252D67C718C2A4595075C1818F6A1EE734956DBFDB57FE
6275D1873E08F3DE5886EACBFF2A132DE63FCE4B2955A9C7950E7043D7750667
94A2DA0D72B3D7E787DD83DBED95F86B97E1E9D80D9E991753E1723983D4DE05
CB5C6CE7C221A2038461896FF0EBC22B776FFC66AFB8F4EE72F16F4A83FD3B6F
7C02C8ED058B4AA23DB4E4F368D5CD221D0EA7E1022CA012CE9760152330C73A
4BCA1399C9CD243FA385624CD426256168309F04A2D2352DE559933C8B4E514D
B0410B1E140095EBEA1B13933221F95DE894A8F0FB390C4649872B940E5AB4EA
A493F99CE2D3DFF0982549271B429927D4775BEB5A12F660844638B9EC5214EB
8B4F3B900C34193E943A90C06ED8D9799646156E1491E5521FC8B9CD9158D756
8229D15D0FFA4E22B5A0CB4FC82C4BB848D07EDE0C11344EB69D0A6F329CF352
2C81BABB8C9BED90F772BF2077526A35E9F2844D17BBDC178AFFB0DEB4493D2B
EED930887D30C9C040B1498E7EAF30501BB2121A750312941839C81400086942
7242D783CF8D51DF73DDD9FE1950DABD3C95E57686BFE5C55E13AC8837A6492B
618815B78E78BA5F281755B0743FBB60F2952D9041F7F6EEDAD2563E236C584A
BD904D7018A00F6017ADF508BF63F64AC406DF45C6C9B90489846E9685287879
2D64A7BEA283E698CD7D8B2DF6A3B6681C63BCFC14135382469123169E3DAFF4
AFDBBBDF75C60D2808EBAD09A641D93EE38D274EBF132E2F1C61F31242729A9E
BE877B546996C6520013AB058EA55E58F59C374DC6AD4AA8B125F40114881ECF
0A7ABE0F5DFBB48002662AF720242D74012508F26D394925F71065BCB57954C4
CB5A9A42C6CF6EA0D80B6A99ACDA48E5ED3A2BA43BA9064D59C171AE87BB22E4
707510F8EF3AAB303ACA4121E9C92051578244155F5D47FDBC558AB5F9CB60A2
B2B7D3726D4D06CAA2CB08BE16E35F416B79718F7C53E34C5057880AB32CF159
42D3673538F51A2646DB93A34C60583DA3CCDBFF4F315D1FBEF4A12AAB726603
8BD7CF8F237D8E9B7D4AB72F83176580F0FE60F48D70FB98C3ED8305C7906E17
50DC71A816B0D510008080A1C3DEFB220D402F3CAFC75D5A1D09F5985687685D
0DEB29A821CB8D0CF788A0F4A87C061D56CE72CB67E59EAE0D87FE8400FACF1F
3E0B024C5FFE6777D6E374B40FC2ADE40888C5DC808B622836891157769C8BEA
7D15C98753C1756AD232C556098B581BBE5842E94DBE3F911FD8DCC3FDBC30EA
F5F569682BFD37A002015A3CA98EDB8D21E8DCCEEB631E12C5B4AE0BCF689146
9EA758F720407B837A1A2EDC4B490B3B7670FD4809B69FF65DA0CED5D7215A18
18A20093B619E51942C0292D48C76344A84198F453880A8138EB66FB67C22587
FC14898051C4FDE207F01B839D2E33F96CD42386C234A9447B82BD519B639D87
A4B10B7D1EB275BC1AB6F8847D80E4BD474269F936D2A0AEBC1629720E21956A
2E0336865660580AD6FAA5A61D90198218E072C7DCBEBD4A57F54C4D5DC893C9
2249FEAD741994E0CECE14F76A594D3F32391C040298C4B93AD22B2BA52DC028
A438B9DFA0D9BF845CE38E33893E5ED842EADD7BB268421BAB8EDC241DC33608
44AD12B1F96C907CA473A1FD2E01CB1197990EDF8444CC83F1AF7893DDAC4B1D
DFD821E84706606D71CE21B35DC08F7C46745552C5322E029F22E1CE39A70EF2
A46B53BE1C1A8ADE9215994557109FAEC294C1580C3DD5D2E322CC095BC98810
F43B9866180F9D58D0497793CD785934A15FC937EDC90FC7F5D9C04BB5B655DB
AE33483B6BCCDE68A091232BBA1C539D46CBE0420DE457EE415FFDF1C7979128
EDD4F9537C4F0E870DE54D18F8E1B3524547EF3BC3AD6487B679963A4CB62633
A522F3617563587F19645E1468A2277FA7DE48DA99DF7F2F1460A76682A2C495
EA195FBA53766189335DECEA4B16D6EE1A01035939F71C4F0499935074B5B5A3
470CA5F34361AE50F4B417ED74243FE51E6BAD891BC2CCACF0C9E1BC50362961
7F52A3424F1B7995A97253C8F822C11204E340647CF92061A889240B2E196C34
50BBDA9D018F6210E7BF26EBC9D73F2C768710DA5E40DF238862E45E699A2208
5B77D5D1AE50A44DAD397382EB984802BF9BFFA8090066BA30024ECF9B9E27C2
A57C517DE53310C680BCC0C00A98B7E26BB1730B9E3B03982F0297A1FE852B94
5B168BF8A47E033D6EF4DDACE3569FAE662D19514D98A462C9224F3794A28699
B8E8E73CB2BF656EFE9D02470FA46D2AF33DE79BB830A2F69AAD4FEE1096A89B
45C068EC7BE9632E4A89ED435F4F843AEB0DE2D08746E18A701158BE9C0B8139
0C67B61C835FBA29F185C0181148D2DB13DEBF3E9BAB479A3F9DA76C318D6D07
98203FED7C022965365297FD4421CDF6F1AB2E63235155A2E98E992460EDB0EC
68A78F6911E36E12E02ECF7E9DDCC72C99BA4CFCC9B1EC9BE8C9C04FEB47FA5F
D640739E1F09D5C7B40320E6F45BD57DB169FD3568C8E044865DE7308E8B8A7C
8D7F27643D015A4423506A9A2A9E1CFFF120534F7A6182E8CAAEF1F93926CA45
7899A06AC3DD5F5124014013824B2832924F86F49214FEBB4B3AE05A12F0D231
86C441D6375466FA0272B67393DCBD86FE4CD039BB4277303664E935796233C8
C788C31A5CD411A5F5CB07C5A63C84CA36F6027A26FF421BFCE5DAB2D853767F
E8A0FC7101BE9E20CB160B6BC81ED4696D66169BDC648AA8721FAFB0A95A5445
B5800D0BE0378909AEC60F544C3F27A90C265DEAD8E0241A38E99336725151A7
A2C5282442DCF60A16F6936C9A0AC65E5DF109EE8ECA30D88785FD165B58549F
12163570DD73B013B7347FF6E9BE216CB5DE5D367EE01C808604D05EFD25E1B1
3B03CBA0C37EC251BD452805722C04F19A395EE0926255FD030246AC687884A3
547DA00438951DDEF0B61A4F82117B33ADAD9AA04C4B6A9E56344507DFC2C63F
EC9460ECC8D9181CE59015CF337A218A8FBCAF517766C653F933D6CEFD146C84
A94AA7AAE84A6D87A733DCAA6C761AEDE8AA97262EC0173560C8F5722743E02F
CEC8F2B0D464644727B8F99841EAEFF1D1139D8A35EB3630617FA7942D47411A
DA0246E296E2D20F02C44D6F63B3476F2EF2991878E11F38FF36D1F1D67E0A15
4F2A9E5FC7EAABE035F2A19ADAE898B7F06CE566B5620FD716979C71DD0FF877
00CE95F21C4C1C9C326172364A0E9FBE2ECA12783242342904893D044DA384E4
836D27E65DF41258900212A5FC7F4DB240B62848EB6136462595A8E6CB517109
806DD2CB6704EBB0D4389D1217080B745D7887691ED180DD93E65C3E4A2F3093
0C2AB7113EB95FA56D854E9A5B2B808890A43D9E7F59104AADCF79764BA4F70E
FE840959AEF3E34287BE6E17CA0E265ADB2D8042915FDA3D82FC347F0D24314D
FB378B7F001843D00AB73A00C331CD7A43C0A67E248D6097F3D94233FB027780
A92CBB0DA163D9689FEE614F9556097D62031C66AF172A46B866F4C7596B3D38
67CBE5B6409D4903CF36C6F045B93F5A05EA389DAA2721AC6E6BFF0015EA347F
3B8988AA8FA5A38A2A7BED7CE91AB3830B6820671814782826680D97565FE4D1
E216A9C768A454647DB379C59126BB3A7349CE7BAC7CD903D0AAFEEB0DD8B306
E7A53A5F1DF4C97A55174CE26087BCA16DA5C250762E982CFCC72B19317FDE76
5000BCE9A1A61A802EE8ECB4D53FACAF5242DEDA2CFC1099B1C95A296106DE15
CF1B4D70FA9B6E10A3F76B65763C33A249C23C8616B866CC56D972EA4325D3CD
448697ED68B3D96224B86821217A986A49AADE0C2BC5D68E6F05020580B5DED9
1030783F8CBC1E5B4FF3DAB0438C65E5A1EB77AFE9274CC14073847D09E5054E
364844F0BF03BE50426089EC7071143F5176B11E066945EF87E654F8A53B3C49
07DDB687A20A0BCAB7F03D0A62701D18826FEC47F867C4FC966D23A12CD1CAD9
5E4004694D39E05F5E2AEE30F76D51A3CF5FD030B696C0B83559BFF38F41627B
D8FB32E62B80EAC98890DA692C5D17804371F9AEBC100D7A6D1414C37CBD273E
F647C7B965D9AE82D16F0DDFA0306B260C5CD4D9A581ECA33582DAD4BDE5254C
4660274462334AF71A1E878EC03C67DEA7F016221CB34AA4EB20552294F3AEAF
6C9E98D531260FB1758BAC67E14234D25747F1E68E0C36FFABCB2118C48004CE
C93F33A41E97C719CD5A7576A3DEEAA7246FCCFB4C5CE5663CB4883A9220F39D
0144B18B851DF2AFDD734A558594466D19327F4BB5A9B8E0C473430E807A5117
A9461C92DE71A8B3E97803700E50900A60CA5C7F64567C9D80D1829D7FE5F456
47ED6B99C6D8B616596EC63ADCFC01DC4E23EE35DF9BDC8DA4DA92700D474374
9F272CA43BE6C9B5CD3E674BCF858A46BB2BB47AEBDBF96773D2F86DAF0FBDA9
D2E7F9AB662F5C58DA57C10AF3EE307E159C82A4E76C543EBA4ACF3EEAB6254D
BA53E11A43ECB11D072C68D2131BE1C7C43CB9D84F93C2F3E4EF7005FAA7AF98
AFDF7500359B651D48593238E802732D4B23AD08E64CD0EA508DB893617833CD
8AAC2C1045FD7E0F586CBF2D967E468B2E8E763415D4A217F9C188FF1D9C3BA7
3A8A85887A7B273A60D565A0CE0F6AAF566752654E81648CE01CAE6B824B0741
607254E05D377D3EC454B9E8E4E4B7897387234F730A1D2C99F24D336A889395
E771CEC29602496D2F4CC30058646D9FB1D14DE9BB73AF0AE80410C4FBC3A45F
BE3BA44183172E1B66D135E09A46B054E37922BFB709F40562D1324E07BE4DAB
A9BC0A35CC617B9E8BB69476EF2221C34C79D44377FA2A33C0EB41B10B64C142
5ADF4234D759B5DB13B8FB1B33A25F4BCC90B6ADFB4DC714D6D08322780BD128
94A5D3A331145DE6FB505CC19634E9A154891C83703DCFD1BFDEBCC3A12114CC
920D6060DB63D12D0AF2161F425FC7831B3FF7FF114C014E1DA800226FFE9444
301E5BDC0E125346571C3AC8F053A09AB6680039447524D0963C04EDD832CE36
96753BE91995CD7EB3BE90349F3C1A1D113CB87969B0370D0DDB829296DCB0F3
7A33B61AB96148B87232D14B426649F338383587CB14FCEB971CEFA4C610DBBD
02FF4F978B68EB6C23A2082F4F8DFDD753AECD1B53196B31F29C5AF625B78AAA
FB55CBCFFD65AB2CF6A54F79BDB9DB56F26CFB3E6591E5D45543776D0EB6C3A8
8D10A1DEF8E194E095090958F9C70357589F8A99057B450A38D203F15211DA39
F2E97C073A30819AF5EDC88C5B249C58CED5C6CBCF63B4FD224F4FA23EA90684
2C86B5147254A6EB06C3E874B88A2E49AEB426B8CE0C6940EE386D68ECE113BF
94AF3F46D282E2E704A3C6FC29D60D85375C56C2CAB0BF091E996245BF51EB48
6664D8A8F2350AB63F6E4545726A96EEBAFED19666A1DB4AF2E9B350DB04B850
24823654FD33D3C4D429D5DDD0DAAD0AC6745916FA18BB7F7D0DCCCF62D091D5
25F1F848BEF99438A2EF8990A519D704A287889135BA6CFBDEAF29347797F3FE
7F4D056A5EB03C786F5F980811DCE99044CCE1EB5FC3CB80149DE54B2FE9459A
F2DD2C4E3631FDA08D2A0093B1C31CBEA19AAE4FFC83A933D8DC9A49744D7F48
C9E39E6A99ADE7AE908D2D4339EF994D62DCD99398C16988D529AE144FD133B1
1DA950F2DD91143C7DBC88D99DA041CA7716779D3C541DC2C630A3E55DE31ADA
E0B467F3CDF0CDE12200B62FD553359823B6D2337D8261FDE80C9D0FDCFC10EC
F31B8DFB66FA81B5E96C98F92E3A81C8BE23BEE4B7EFC230F62253BC1C1C2AE0
F07606DA710885C3BEE0FCA40901142B171E1AE5A1439351E9B9EF85ED875422
A0A51F2333C9056CEA228898D13F2F465616F7949B5DF28EDD3FBA26D6EF2B37
E345DDA85E5DD5C024B24774975B422C912C9FB6118A52E3B470A5800B4FEDC4
A99823CAFF87E567B9657366CB9239790F6B0B3DD6FACF052D2E1C0EB34672AA
78A6574434BDDCBBD35418E9E9DAC3479D3309DE69137A64C6D18568C06D4DC7
9BE0B9754B8F88632FC3A74FA1F03921BD9737A22D4605E10BB31310B68ABD72
95F457E216417028F03D8138000691D077DE4BE964AB5C97C74EDAD55A0BC8AC
E6E7972CDD9318A247900C698EB3D6BEA526A634CD2D2206519D53EAB53E924A
60ED01FD4FF9C7E27058FA600C8EE798C5B24F5EC4370F3F71E5D731BDA3F72A
50F8C443BB34DE842F3EBDE357648BB47876AEEA79F1B0E73FD3C2544D30C234
37CF9C3FF4D5AB73FB1F5E6AFFAC00BD24FEFC0C19947A45ECC6B9F49E7AE369
841C42B4988F48BEE08EDEC618A6BD6E4674AF447397CCCF8852F22D77E46192
F7978878EF7D37A5A482E3A3EE02D5836DD04F03C7AFCE7E1BDC7457501B47F0
C401F6474014DCFDB71FA151BFD05B61C2C2B9F21270C9F73EE7957AA138B65B
F369F7716494BF36A317DAEDB0F7A0A75F4E0503D39165A5C3F0B0FF11B4BF94
BBB5DDE6632F0CE7C65074A99F90A454BA3CF445B08FAC37BF352FB4A942CC07
D024B75698D3E3923220E53C6287592E2E491B64A2755E669A0FC0785D493E16
FAA75186E7E463661F67414DF1A49EED1C05C11E494882452EDB6FE1780BBA9B
A05B63D75B83AF773EB02C980C4A2C3048043FF23BB1B8C34F99BEDACDD7E84A
CC429FD2D2BFB9BB504FCC2F01B128F18E106CA842BD069959F2FBD11709734C
657E2A90FBB1D642B230B9FA80D08E4430665EDCEC71DC39584BC7A6769BBEC4
DE8404F8ED72CF2BFCD6BF52FAABE5F2F227A02047FD9BE885E5476FA451BBD9
D72C49B6B7A529DA186DF18010BEEC97AB3161CEF742D92E6155A7ED352738AA
D6AE2DDBB3D49F4CE26294BF924C69B6CA2CFECE06BF0AEB22A64441FF6949A8
AE1753283BF2E9B0A86139A9F2963648EBAD21D5F92139BDF11DEC505B1920E5
B08A780CD06A7A6CF2401C8E0965B02D39CCDEE8A4F5B8BAAE1E229DD993D11E
519F94F7427E6E8B27F236199CB2E28922EE690EFC3058A33A87D0409B349250
87CD0918CC8ECD029984DEC1EE34F30E77F7C3174AEAA273A07BBCAEE77F2EC0
2FFCA16E51B80A519D24B1E2A278771C27556200DA33D13BBBD899E1113DB8E9
E10BBE2AAAF5F9D18B6063159C32943F0F6E73D8A0F7EF263E1949E1B4748A98
DD288428DC05CC52F59D616EF85F9DFBC28A22FB5C08CDDA1276F94706B29796
B547E69C7EADF37728417C3FDA153116C16392999A4B0DA8CE4E9968EF23C3D3
797775E6DD6BBD142EFACB49689C7341529542A43BB82E463F0A3498D66F11E4
DBA5584E6DB47E59AEF457EABB8461131E362DE1BF1EEBD4A056CAF106BFB1F7
C0722D0EA118EE10FE0E1B0489537331A9A1FB89DBC45C7F159E1DE840A4BA84
13BF122CF0B5A2823AA24D81D072D0D0D54CD2819F8EBDC593B3A403E7B91BD4
7B9C8E7D0BDC37D0DA3DCF276972B06FD749529EC1FB00BCDA61C2CAF198CEB4
91BAD552FD0CA912D7A12E6590B9E5082A4E2FED0E63F90B8DF65026707BD39B
489E544255427541F722439DD1C79F8A66F6AE2DE84E30A923826765E187C9F5
8D3588CB47B41BBDF904A4B9E445BF58E6D122E314D04B2CFD92903B00967B97
7EA3C4A6F0F519958B4AC5B7CC4EC913D47808120C4DE7083C23494DB92D5F05
DEFF883D3A1F422EFE214A411ECC2C74D095095D7B408B8602A4A00483F2CD91
711F26ECBFA365B90C64F0E99E8FD603F4DA0D1569B3B21F32CE268CEEC19EE6
BB7997D94474251B5533D3961C9E5C0BBBEE58C0791B999C9523D744966471E5
408C44554E774708F1B3DA27604A975C2DB6FC1854457C67C54DC08A217FABB3
642AF2BECF44A362DB8F924FC904DF84405E2E42BC53A1938D92556ED068571B
D71A257F7693355EA75E2C69DA3EC97243F898FB9BD01CD0A21180B808736159
E482394C2D7040A64F398F69D8B3A72A0BD3C026C4E487DBDC3F26A5186488F7
B969C35B97E51F4C2D1306BA390329D0B815A8F700D69CFBFD41B166D741C51B
F4B5F1F835C140AE89CA9B58AF45FDFB092D9DCE32D1DF2A76CA74B9B87A569A
0DCF97C4401C9679D1435E1738C089AC139F53E6A51C735774CBBFCC684E2F70
B23297F4BAA25B269ED65E33FD5121D3770B48BE7EA5BD7517C180CB85FD2D1D
50E34444F3BABD5198B326F87DFE5EDAC4B2FF4C68E7B9580CB0A80245B908FA
7E229C46EA33666CBC07A8A0870F067A4E84C783984C43818509084DCAFF5E5A
27F1D4ABF3AB431D0A8BAA3B356331EEF0A585CF6DC34BE62D26D554324D49EB
F17F3826AC5B81F1FF864EEF0688308D6605BFF5E0BCBD3A0434281DE549E5B4
E0FCDAE09DACC33D0DA814B4E4E7D349142735AD1272B493C93A7278999AC60F
F788DA9071C1DA15D8143CD7E5F710C6AD730564980A4CE1A52B8D8FDD678257
506A23A0952827D3C68DBDEC0D5D7A22D821F8410BC7E74F3FE437C479259B63
1844970E7C13157DB2EC9BB5386392BC01619AE8E8C83A7331E44EBE785FEE38
EC5A27004AFDC6845C2F01B600F40D406D892E76B4DFD30E90780B4736B2FD54
717832CF227776BEBC0EBE7C54673C529CB50ABA77F7A017031C8CAE7CCDF156
E1FECBD236C88805502047D679B48D3FE3BBD6B69C3055E9E509AED43356EE0E
92ECC0A8D72EE1ED40EB7AAA4AF69DA8863FF4CAD6D497CD9705E0A20DB9CCEE
1105B3A686B388473F5B1D718438C82E327C7A7C25B96D293CCC4386D600C636
F48E12442521464CF62A74FD4431B7DFC926AD1585B26E8171A2820119CC673B
84AC595B4E3A2CB972C70972577F941648A1EAB4225390F130D83BC8D134CE74
EB7D8A395F77A96A80E49C6995E25B11FC19718D5E2D73CD15DFC697EB3D835B
EF94E095C851A2DA8883676BB5716EE03ED29ACF856ECE9525612A7B24DA8FFD
E5F53C8C08C86CAC07A821BC444E244D98C12952FA7CE8A30AC5CC9D90D3ECC5
673C0AA6B08B984493A522108AAE91B9851F15FA39BBBF7D00D2BB1FB1340111
0DA43A18E6C336ACD1099101814AC920ECBD7C9793C9A4B115C2DE84CDFCB00B
7BEF6E47AC5E8B425F8F0936884FB1C6126BF95B950737B474C5644DA62316B9
FEDA05209FFD5F7FDA531DF32D7544F21B4F70AC12257B925741D6EA89E9B572
50832ED59A992F136EF1B06D79946F455FA78279E4168EC7C621480897E1D78C
FA868B7C8159E9F873DF134DBB26A3889A82B899D8F3B2DA05C5B9E06FCCA361
62901C3252851E7F9CFC5A7E870008758637647E25354ACD071BC1A4FBB8C630
707035A1B51DB54A5FEDEE61C6B6BA7F25EE21BF49549AB51626AE4F0B1744A4
98ADEFB005387CEFF271E440299172AC3A4A3FC07CA9D1D8F443AAE0A3F0C050
249A333A1F83E14DFB01CE4B3AB777841922FF9B20CFBF4C747504480505FF90
3B0E7850D9688949ACF263F40177965B456BA3814F55943FA677ABDEB172AE13
9047D65D7EF88FAAA144182DE85D11A0A038CEED18CCF2C542A2CCEBD969753E
2199C675237D101186281A96F0E55932F80D86953EAA7FC4D05C56683272F059
5B1DF1B3DFF93EC00D46AAFA10B21E5144B831725B16D8AC5C4641FE0E6EC759
F0791459EB45D9B2FC50CBF58F76351DFC069D18154D6E20C1326652AB5303CE
D655B5E834FD6E2EF3B0A4C8F409EB2AB90AFEE8E66872F0D03AC1AD45D28C61
2834F73FDB3AE7876D6AA879FC83AD23F0BE39AE8EA2A19F33BC20DF33A8ECDE
F6150166CF5B6EBDBBB5A3FB042A97615BBD66C905A9D10794C5CDC8B76121EE
29C55C1D5880BDBF4D7803B8196C4FE306972D4C79F825B187C8F4B51A4D0890
08D97BB9B6E6BAD2F7A6E16236F158450DE88129071243EBCAC812A496F6B045
A899E9533463E72CB0574D9665C9F4FC07341BCF2F51ABB8A045A81F5D52B5B0
6D9CF486DEFFCBF434F5F8E5B7BFF34796F1EDE6041ABAED92CA489DC69DCCCA
0AF8F4F86AC23F03802B0FE8160A338473DDC7A7818ECA39167593AE7B5EF549
89E9E9192858B91BED4C79572AE773A7516434B1B96DA90735718E8EAF1C0081
C35180673D6EE610FE21D92B535F7D0D744E575B0695FB19EFFB397B534227F9
C7210ADCD127984F78943EB31EDCBFD56A00CD8E59216230D701973EB76AF09E
1F39ADCA0971AD815486813ECC993BF5DB0C6DD66C6FDA6FAC4E699EF96F0059
512323A448A028C9C9DCBFE53223D096351D214B3DC904C32A79931D48109C2E
5D22864BC6AD983C2493CF1748613E73FD2E5C945C3D505078657351908E898F
30FB9588308CF90151A4307ED572BC910D908FFD87E961B66E0092A8CB8B0A98
F9E85988585B2355372EDBAB8EFDF324AEAF3409A169D784748529B5C70EFC3A
14EAB432FD123844051649E3654B83B0E9FFC0E20554679F43CDEF18A8EBE28A
2A55FFD60C313861ED0B198BA17E491CBBC10F8ABFD9591528AC1053022AEB5F
8948A83AAAA7203138A77EB310E1C8DC9701B1EA4BF00F43517487B3132D75B7
8F3CB0D6CFB87F730B28C987D29D491DAAD25CE8A407BBCF1F2F81A9B0ED908B
3FA08879DF18B970ACE7E0771C8454505213FBE30C2EEA8E9A48B707585D1D49
AAEE379E399FAF81A0A08EE9DB20F3186ACB4DE0DA369F752958C0ECB311D943
CC4F1C23FDE08653261F1E9178820ED50C1228DB9EB5A782CBA1743CBAEA4495
E845AF1B7D1D78FA672692EC92E68A02AF99E6D73A79D0BDE29C4CE7C8920D92
055BBAAFCFC8E2461F9212A484608951BE498D70CE2DDF953C6EC9791B4861F2
D6B218A1F6DFBE0C02B70E1F8F244E1E5D08604B8BC789EF8A05541DC92EFE1E
E0CDC821946C3716DB1DAE91D2C37B5653FFA5BFF0ABB602E480905D4F0376F4
6339E5FE9C442EC98D7EAA32D303EBD199B5623117E6FD52ABF556DC8FF78C2C
0EAE6F80F16EBC0417A1B2DBD6A6DBC32D57355CD017253940B1A07D06AA8587
C66C247CF10521AE6964C0905AE6F80F289533E1BFAAD2838E66D1D870CF3672
8B96660F6572393B8F51227D876CFA92E57CF66198F1F50E32F459C424572943
FB64EF33B2F7EF71BB0664571323D391E2CF464D6B316286573523CFD4E1DC9B
5062263C78F5CCC1C37AB8C3579C932BCAB56C2A1814BEA680D3AA29106B715C
0A17EC2CC9AD5E37F27F98AFD1CFB9EA49738C0CF8843C8C9A4FD9A302E1AC7D
DB6B220BA7BDB7B089056918C64F608FFA94372868CA3BA0065AE998198F77AB
14BB8A3DC48F5EDEB955A78C3AF36D2EE9B18BE29DECD2D914759E557505A136
6EEAC1142E6E43E7C50DD0AF3546869AF77E102637EB49E17B440AB5F5317BCD
14E66CF1A50D8ED4755226154B53BD16BDE45B4E8B707AFF83C3CC39DB2660D3
A0CE1A2205114AC74AF7CFD2A48321FDF0101E2BC2FD9A3BFDA34F5AD648DAC8
D91DEE04595ECD917A3D9DFB604CE69BA9FFC999CAF28D89D4CDF583B2B0135C
1CA104FD263ABEAB396D2162D4C8F335AC4DB7B67E15E89C7428FC3CA0C1BB2B
FEB1701CC72721564B8709C55F98E7C5F18E48575769402608613A6C5D5B1EE3
1660B762196EAD96A252A5E85D76669C8C1EF197060D14E7FE39D44A08E244B4
5CD325D52C62BA841C7BB766F846DB8AB13709EE79DF65BDBFCC226AF46832AF
D92E113C6C41CB9E0A23A0BA45DE49781CA5CB2ADA91348648D72A33FE5C3E1F
3DC888EAF6BF9DFA7095BE8E27BB86C67CAE31D0A39D9070F941E30A5D2EE095
EE02A118AE2FA63D608C3879CA50A48FBD03596F1B52369E25C620ADA260AD82
B01BB7EC2E32627F6E5C13B37165ABB0F84DB85F838C69BC82948BBA3DB6F85E
4FDF2F71D7D26A012C0CB3564890FE5E5D07CE73EDF0D2465C31FDEC88AC96C1
864FD173431EACBA26689FE20239352100BEF469C31F701534C897370DA53F8B
CA8CBC519DFB2F0318AABA00319CCBF41286896D46A029D536AC5FEC28233C25
8AD0F06DF5E1D01B7E63650F78183B7FBB95BEBC0B21C55D6ADE9249915FFA46
9012B8AB122E110CA1B2CC9CA21242EF88F70136E6A9E79A4F6DA922BC6027BD
C7E62AE8B922186FB24C24A950BBBCC572F597C8717445C7B07F1A318A8676B8
62A8A9E4B2BDB0B3CE84F94277CD2041DEBCB1FC8F4F3B288515CE437135700E
3A20D841F078106D54A33F97FFD30E36E69B3F4333555DFED7C4C4305B192D25
B4CCB9A9D05281EED29F7F7F0EB9D01762B34FD22BEA989E0E09EA83EC53CBF7
397E9C84939CF87536C897D5429D39BD7229B8971CD6430B86FD3592B134D0D5
CEB79F4A329736CE57F122233162FA9CA6B71825ADA840BB0AF6C994D37879BC
3D12CE6FAF4EC54E8A7D18082D7466BDCA8729F32AB9B809530BFD839765712B
FA4C73769D407F1F056CD2D01D9CE62CAA47AB13CD7338D7680C61190570B204
F24BA7D6B46FD3DAAF413DD3DC1787AB924A6028F1147DA54DB76DAAF30B3871
CA476BE8D70C2DA36F39574173F3C10850BD9FA01B70FE33C3C2792A42338D09
4E0480AC77F155DEC42D868EA0A71CAC9B8622F00C92243B3B32561B3C4BE964
1AA782E76D3BFFEBD41EA7C9E0D3B9567AD4DCFEC4B01622E10803AF337B772A
EC320A6E37D3F0FDAB3F216309088FE45AC607C129D255210D36A4821E9BE614
9932B615AC0A12252C55902CD7D14C1174E91EA7C9BB3AEBC348B042B77E2139
D7505C4BA5C2B8C70AE77F311DE3DAB5AC69CF83091DA15027BC5593C1475821
FAC26BC964E8F2D3E0C7017E9D2D1D1FB48B2392E1BDE4079A9874C7D1F6F0B2
F91A28F63108C583ACD099F9B7CB16C4FB681AF081CA4EA9762CC36A68A80987
9E1AF91212F8A1EFA4F4B5EFC8C81EA719C8F7EAE8502DAFB9802C50C48C374B
A974F6035F7193FC6B6F3CDFC44EDB0C98E475C977BAF86E087C6FAA0FB5F685
194413CB76E85A79A60B3E039CA2A6999118DD4C408A5F87C73DE2DC5D72CEE4
F669FDDA4B507654AC1C8AFB5AEA4459B0BF3C608FF65D53D508A4944C2D6D87
9F31A1405A90D311418118B0A34DF2E6B70DE213C4EE8824DC354D940922147F
06F2BB03AA29528A60E981DD1EBC19BA34FEDEFFB814E1A0E71FF12A34FB9469
E4CCCF24ED625237EAD55FA9C1CC2A0D44FBC39AFAE6A25F53AB0F25FC2BED7C
15265F18AABAFAC76630752A7494452D2C6BC8660EEE30EF38A0F99DF01B961B
962C48A0D82D3BD2BCCCCC87F1CCDAD18680E1F19431021D801AE5111E87CA74
CEBBAA5FBAFE1923A9D7C08D978844602F5CBA3F755C1B600E45ABB87097EA32
0BF3E60536D7D1148AC9EA95F3BDB71AFC054F72ED0CA0451EDD78727CCBFBCF
53816DFD1EDF29CC6D803F0D4E5CC871F988A7DA4D158A532FD45793BCE0D3A3
AB0E6E2E9E9816AEB4E598A034B1C600566C336AFAA4B4E62CAAC791FEAF8B4F
789B44FCB2749FCEDC52E5C926E2CB6AF7ACD21613127E9B252D8CD7B7A6CC20
3EC601F9A7E2A4395ABA34065474B9BE1CCC65FD966BDC27555760FA8684A587
80C16A991F7CD312022BD92858CB39594E67CDF59C705D427B863988C226F56F
411E44ACD720291FB09BAA3B69A72981D9A8530D35C2E4C4B4B8852E8E2813D2
1281132365BC45E083214FEFFAD83BAB5542E90A021382CFBF6F4E6850CC1709
E4D68BB6DFCA01319F86D9569BE0C9709DF0F438F4F0D0FBBDDB9C3795AEF0C2
118B3692BDF1AE1BD61F086F0907F288BB7EBBDEE00A9FCD41844E8320A1E3D2
0D2C777F6C3CE6D0157E5B0984881924B77C6C33A312B6C13341497505312D3A
75D2CBDB618003D500DAC027C7AAC514A42B421CAFA9501C749274A5CFC1B744
931091BC810DDDA138F864436D9F9939298B7A1AC542E0631B0974C7BF48E20C
CE0A4837ECC52ADABED865CC433FF9FE11A26C1052FC970D21DC955B70D1F514
9F0475A81EBA39A713F5A0DEED8124FF0B95FDEC22A130C7C77CFFC7412EB613
0515B00D74265773A5E86A17A4190D1B008C71804A8D2F25B580BFAB9F2D969C
ECE3555E3BC406796451A79F4041BAF2D3BE43FC7E8CE14C9FF065DD4100DE4F
C086BB21AB7251904355FDC5A27F934B5029462A476A1F590B805B34FF465AB2
A6DD504A9B6D7C6A90C26944439B59CDD0C32A0411F64D448641380CF43D970B
D2C42A98D7A5D999219FEB6E61D1FFCF627D33FD0529D7542820803344CB844C
CFF0B65999F5BFDCF727DE8F27E345DE6D4FB84B284627D1E97D581655194E03
B770C1ED806BB725A58932E739467D25B6F920B4F963BDF4DBD92156A5339880
91DAF1F9B5417F2DE71A91803BFA662ED5646596478CC3A88F937B202C77561A
93024B47A49F16FD3461436C346E754F51A21BDDE56F3C934CDBCC45184DD742
F39A7AA01C8B3074060D1A0C716B559A93FE6D679B8B11F1B3F3B1EF24974DD6
824A8E335AB7E674ED538D8735EC6EC9E847FE8D54CEE9CBC3B88AF70F6AFBCA
DA92ADBB0AD8836B98F8CF2E7B60D32A04C2495A9B93EC769DBE286D928078DF
5E9FA915133E28C63B1DD282A93449385149D1127C2EFE68AE9AA5B97C528E38
B54E8B3F2270A0A027BCE5D82B6DF4319AD6C1EF0232C45A3FB14D16BDDAC5AC
2FDDC2D02EF9F1EBD6BA428D4A67DF340FDEF0283629F8260F481F20B8FFF90A
CA505ECC2E3EFAD46CF7D833B7C07573FBA86B5E05A245EAFA73756FC8153F22
81F5B61AD24C34C6CE515BE354F74CDBFDF57C9D5472EF049F875D4980A57493
84F030D8329E1FC7D00ED6EC8BA589BD0BE583A8FEDEE8683CA3E4E093D4A67A
CDE35AA07C8B32F5EE4C3FE66EFFF2FD4FD6C43888E545EAABCCED359FF0CEFF
09370F0E1B8FBD9905DA08B0CB080777873096EECC0CF9E4DEA8AAF94E87A0A3
E79D3D6351C8A9A98A75193565A799CFE2FE0F437E8369816ED8B67429C72C66
3AFACB3D51460EB4DA9E7A94735AE14E81802889EB51A824C9E77DA34363844E
5EF2ACAE136FD2F2B9F663188CD00372D5F2A8754830B54665ED029C213CF3BB
4A518522A5EE6D687B583F6AAAEF26E3BAD7AA1032CF4F88DA9FA75F1606757C
2DA2A507C3D90E5C46BD99792150387257617E0517BB87275CA2FC6ED3F6BD9B
C85743FC95C90F34004DE7E180620008D2B87AA96C5D01E125F94032F96B62E7
BD3E6916E2857AFEC47E25004E5413B13B088A9324093379917DC337D433376E
DD4B43E21A01B4E24F835FCB8686EA2EF7E9C1106573674F378742A269AACC94
CC7F685CF1CDC5EA4ADD5AC02C41B36679B74ED58D16360EFD6EAA5F7856B774
9F6EFB91F742576391C513B683F895B6C0EF572CAC9732658186FE4FDC6BC6C4
2313415F9F5A22C324CE5D4D0B8C330FD7376108E6D41B21FDCC48F92986F512
BDEB7E1DAFDBFC032CCBB03D0964DF8D25F7BDCDE785D6FE80EDDA72A975945F
BB64810BA132812424A285B4CC6DB7288D80671823313428D2CF92B592BCF804
FC241AB5CDBE51AC9F1AD422578B70B4DDCF6AAD2F62009CE9B3FD1AB3FC41C9
238A2329C13E5945B320C05CC3B243010A646BB81B6985E26BD50A3E70DF6600
4FC8F67755EBA2F10A2D3E496FA3BC3B664ED288BCBBE3790BB490E0BB4C929F
A7E5AA3972367D14F5996927D8CE60E3FF4B6052856543B45BB6EE4F0D44B5B8
BC299A1084CA61B9EA366E55743A97B3DE80351949F0DE489021E7F169694307
3B279E07D8A68DD2A96EC8E135900A35CE575682E6A86792FF488AC73391041E
76B7BC14C0E3C03464CEFE78EFC1A19190B9D3FF20536ABDFFA429B820A82AEE
9A73D7DCF770B66B89AF854E94EA4F222F7D3D9B44E84F8020AF10108F02A16B
D8179E8B49E7D124A2E115CDEBD3F0AD8A58810B3100B130F8693071C05428EA
B823F183EC1024AFFFD1AED2F1797626D86DB23D25A25F67EA4D146DF5BE3385
54A28302DDB38BD43EDDF7277EE295201D55A5997618C77F6CED9F0A0385A83E
99026DF3EC3373BCC84C0BEE41D3AB812D091D3814483C0B5D997F991E8E03E3
0D026F1AB2470E5611C62D724C2FB0205BF0477104DCFE7BAA3D1DCD5CEF003A
BFA0B21AA960B3E201C1795C738529CC3069BE68899BAA8F4BE3BD6829B0EF25
EDA2814492016AE68E31049843AE3E51E8AC4F4349A44AADDF307E84F029B39F
D107DBAE0C3C9070F96241E324DBE45F66E1F2593276B50E840289BE05852F9C
004219582D45949B8C3A7907A725B7F46221C532DE74EC422D7CBAE78005C8BD
017B134DD641F458FB3F74257F0549BAA570F95B97AE0BC57BB2455D65E7E8D8
65AF0146DF74E024FC848A75914FA6CCFDFEB1F3D73903FA4C11F3B8B65F865F
63017E386DF16D1A9E18906464975E0AEC56359E95C9FFB7443337A9287D0FE4
3F2E4D8C552CC7E00DB7D03A3754304CF84B48AD99F385221AB216EDB843054B
714ADF743FFF9E27CA4514B94429288087F15238AFD015DF86411A44313EB4B4
95284AE90F66E67158D5979251B37ADDF3BA7567E6C2B1E197CC73839D1B434B
AFCD9A80E4571A706A9BCD086545619D8B52190FB9EC8360698A45EC064FF735
101C9B16BB705C5495DE6B1C067C7F67FD1FF0E9B41FA08A408829297C49E947
62B02BCCA55772AFC6B8EDA9A612A5302346D19FD134EE593A88DAE6EBE08B11
99592BEB115D2A36CB18F58FE620B5010A1E2D810BC2EA4502185A898DA9A280
AF8CB87282028A99932F70AD77359C8253CC1EC80ED452E4CD301F5FE888E503
E36A985999B648A29114BEB6794EF818060F4C05089C1F13848B913A68CA7A40
61A48ACB9B68EE8EC6BEDC7E4E9D5CBC37864B16E48226BD9FCA0A2004599199
D7AC338C57D26AA633C7957399D0831AB100D4D13BAFAD18FE249D76CEF89002
16141DCFEE8101AC4142F5A5639F220F0CA9E4C6EF5C572CCCF90AE55EC3826D
A19468F81A31619AC1D22FAB8AF8D51C4A902402B857A5992B7C4D16DDCE553F
BAB81F8FCB42A086E542D010515FBC89AA1D8F4ACF0469DBA829B34B95CC3E31
73D9ACEE2FC21702BF2454663A19886DE2863A858742E58F5E8F75B722664E6A
2F905C553DA080A7B1A7E688F8C4C154F21631B04F5CC1E0C6E328D7F6326ADC
AF7F81C1D6AAD4A849E20FDEE79F2475C88FCAF7D580B9FDD07CC588F6956EA5
39F8D3D032A234F38C0F39E9C864BF35AFFF004977E13B9EC65F0D6EC848B7D4
D750695EA35917AA672E6D9215D742F7206D3F2AB38FED348C863EDE31E97ADF
14D9F180343DA29EB6D4976A6A618B27E009330ABB76248AF385677FB2E15F1D
61C130DF109AB7631B321258281DAADA221C4D03BAA1CCD714D390CC9088C268
D21D1CFC3186DC7060235145CA9FA71F989C0E6719079991D4BFFD28DCBA8F57
9129BF6607B6E65B1D43FDA3EFEB35FD47B7D1B704B186B01C1A5B98A905F678
EA7B6F4B29A2895F8EFFB64BDF1613C523F35E6730BAE938ABB455E63B414F1D
587407C618CA8A547D948BB44E45343C8E92EA1B9E1956CD078E540EF29B512F
0084AD22D461E740FA89866458654C72FBCE10721C2B313BF29892309217E4AF
977FFF7EC3E81A5DC54529103ED8E5126740D42167666953C98D329FC716ADC6
10133ED70C3119180B78C2016085478C4B70F8BAC1FB7FC9191E173820EAB8A5
D47ED9512253C08645F0BE1E25404BF8131379A057266485F6350A84A5FFE1F4
E73AB0D97814C976112B9DE60C2FD5A430D7F1405B0467027EC1E27BBEC48D51
C674C81FAE6FC93E01992AE7F8D0C563A05EBDFF06ED11E5CC523009DC01C03C
67E65CC5F7A2E2AE9CCFB0D3FE5E8FC0CE69AF232AB3C960EA7E8991210CE02B
AB66CC205595A5DD873CC6B7A322BEC4C6065AC3A83BF4D975E35985FF91092D
C98BF816C9A2965ECC77C9B2C97597F84935CE611E7228CF763A6E4DDC6AE6CC
86E8B493367C1BAB3BC0C3405741CAD56A6F1B0B04884EB55F2EA19B8C272B6A
0DD805B9332C6A593EBAD23DA4DC7FC3B4C147A3CA6B939B4B19E81AB6773309
A230B2578118918F97C7BB8B62E532972120E377203442FA852F66E1E2044AEE
7A98C72AA0DF2D07B081A75DD63DAB617CA8B941DA69A928EBE46A46B2BF901F
CFF9A500AB95C5232A86199F414A894E3EF264AD4D2AA2B2DFDF9FA730B39F65
56AC9763D33DCFCB8D6108881B4E32D6BE016997F2213154D1B600989939F914
49B15BCEFC53C1756AD232C5560E84FB81DB470F56A44CB2F2A8443D1050EC4C
BD94B55E8BE50EDD9F36EDA40456E66615B3A9C1213E0458668D31AF2762C75C
1DD204BDDB9DD86C31C2247DE6EF11D25F1AC94782C8D608698A04F65E3BFB42
EEF66886F80532618647E6A6669428F89D6D755E04A4B42F39A4935E10F10BAA
BF5FAAAA47A65D35E029D8104AAC1D5FB8AEBC6481590D0CF2AD209914CAFA13
E899B9499390A08729B26091017292D71FBC1BC09F614B71A2935716713ACF38
69456A82408AC4144434A454615FF0340CB11389C30786EC5CFD6740248D8213
6EC71859283373327B0560358ADE351FD022E0D76FA2B773E5AC7B550A730E62
3DE63959A35B532BCA16C510B8E723ED5C68257D75A455702A4E56A3BE26B082
645338520CD667F839D0B1B9645A3C1FA83087019DB981EA1B8795D851074BA5
3F425482A3BAF79D2F736362F27A28F101BE0CAD9F5D28C546ED581ADCAECCE7
C7FA7C6EA84F44E072E2DBCAA30A41A99E5E09087A89E255BCB6B83201298C09
F84466D8B8F9041C564626D94B23D6B63755279D438C823FD5420A15DA6C85DF
863D18D37DAE4D6D3F46077A465978C8D2953EBEC71A531240709A4BFA781970
77B623B977F0F34E6BEA97F287A8BD6477CB4C5CAF245C611AD0B370E458E195
230A8AB648D1A34793E173D032F1680BCBBC597F2F9C959B69948674FA133F77
935F24E9B4E662CAD3C02792CB44A20B258ED67194ABE9DB2D7ECEEFBD1971E9
EFA7845A3A760AA01BCF1DD887BCB96E3DBCA7A61B5BEDD90634D12C51F3037B
D51EC096B773C08DE4B4CF603ACD93248E7F13DD420084962211827C61ABFA9D
DB04CC3A97A349ED6A68052CCC845170D1DD32FFAC02A91AD994EABE716523C6
7BD10AE64DBCCA541BC7E69DD5C47C9914EB09E5F39A73ACDC8B4A14C260D8D7
498A3EC63A074B3D4D4524925A70ED96BEB74704EE82629FC4BC6DFC793CCFE7
3E0B0F42BEB8396D03C6ABD18F70784AF942945E6EB58AE03B17825065A7D17F
4815CA118A1F4B7DB8101D5CF9C3E937B85CF8E1D4F8804C7EE832FEE7617621
A30DD12D6983FA9D95A67EE2C1C07595C0A0E03A7972F7DAB6811B1027FDA86C
F66E032F1B0D494612EBAA187A8197CAFF1544C76C128632A537E9C871617C2A
1B9CFE9F154411D1ECA40563B020A997586C6F60D0F15C00B1B5CA67D6AD3083
ACE64076E31E01DCA6EE9128F59B001B6733895BEB2AE097C9F6855074B517F9
8F588DB53B5EACF34DCFE1377DCB48E164FE6D361580D1D6053947DD453FE88C
13A3C1387E0398E95CE5FDF7ADB2965D6181D0094FAE8255E6451B0132BF416E
8F6CD8A749145FCB96B55F57A7D91CFE0CF870FB18E928A41704A097A564B50D
FCADE41E44C874A8C6388992DA355706AA81021313CAE1A7037E2C53088D8FAE
03AE631B7AA2484EAA8D49F8795307D016DF2EFB584A5F34C5599D2FB6805543
130061745DDF4FB175994163DF129149CE860F8FA13AB4B96D2EB051F8CAE6F3
3731447BF90C848ABB42AC08A968FBE813657B78B7EED0F976A65F2C08E02E87
7A0218F886A7E79940AE41F43EED701444D9CDCEB870D7B9925DDDB326A8FAD8
0912C50E64A9F024F85FF3D6C39C92A31963867671C53AE0016C76516A0D489C
2578D9990A2062A57BB100D7CC4B007EC9B5F8E0E2CDDCEE93246DC5D6C0E5F9
D7AE1AB621533F6A1938E812BA39E0756E167FB5AF51251D61CAC4E7227A2B57
BC1810807EB6266EF89C0E5151BE1E454D922C283683CC421E6FCC62FCC6CAB5
3ADC5B58C5FC21FD26D7A329D958113B45877388980DA220197858DE9A1CB0C9
3C144FD17EAB19669AD7C38A89CE464DF9732F9DFF750C0F66049542236F10A3
B411F8E744E9B39F6FB9B0A3271EC4D55162172F48A1BBFA3E1FF9624DF83A9C
7B47A1FA8FA13E04D067B5F5998ADBE911FF7DFFF17DFE80938E72B4B8A70DC3
35B648675A2036A4EF1596F8FC3D7DE53E216FD5EC7094A23722A4091C66DC7D
1BE18234BC3185A2B9793C0F5FF73F172932905A1F80D025B7A7656786106A60
F53B42F8087D987425B32FE6290E785E4344360FB3B67DC17DDEBE5E3BD2AFC3
167FA6C794227952D90C77E7BB19AC1F1D9C7C3E53EB9E4F1293730808FC95EE
0653382141E52322B25F345E5A426C7879BB4E3E76FA9AA84F8F9415F991DFDB
5930DB5CBBA6E6412BB2486F38CE44881BC3306ED7942C15A806A2AA54329BA3
1C4A640F89E85148945500B6B8C8177C69D5DB350F90B6EB0CC655B87B91CB54
0D475231DC720A083296D0573ECCCBB08273A87CBF61FCBD913E74C0E0815088
07EB9B1695C784D306B0B9FCA68BAF478CD41F5FAC31F8B4490A30FE639B7AFB
86360E4B169DA93627B0626B9219BC87F668804CDB793530EF5B16FA667198CC
DC3F4AFB3A42571D128FD0EAFF2C0DA7F7822959AB6D2C776A571139A70D5918
7A28C0904865678A495BB7746548C2EF8DD8F9735F2CC546327B4BC36E9569FD
3906C365080E5159E51E664E2BF18399EC680F3D103E13BF43A307179011BD17
16C68A44C23B6BE29E1FA4A56B98A808EA0BA1476297BC8480DEF148505F41AD
49B9F6536939A4968755684C0F83EBA26CE5F98AFEBC1391A91B100333554DB6
054321A98DD7FE25DDEB0B6743902EF573F7024809927AF3ADE81FE911EB8181
BD4767284E64EAC2D558D47FD0D0331085614FB069CA8D80059115F0E272CEEC
4CA652F989068D45ED87B4D7B85771D3938668FB9324A6BE305080E8FC9A14ED
4D7FD2F08CEF3916FA3E4BADEC089525CECD505DC3D62FB8EACE7F73966ECF55
63638E38A04DC4022EDC40FB76C703EAF468A96085AF8C553D837BCDDDB753D3
2DEDB1B8AC7F60E495DD29512E8183A4CA131B6EB15B477A754DEA2A79EC035D
DBA628E6B97FE1D0765885A92B940E3A4E4A70877DE050CF987A10DB6AB99257
48E27B0819FE207DA0E97867D2E5BE7B427DE1C42056390965A6B15FCA88A712
19C38597CACCD5FEEB9AD584935A58676976DDD2B6E118FD1D415C989A3BAB40
47E252ADB05C6BB87648C7A4EE7A3FD4F16E5D13BBEF95108334977E7FE842A2
159F2B9C85565BF926C12A409AF1057E6EF231EC7AC1950D41B8B1DC5C821E73
7ABB84A750A16A4999D5A59AEB5FAE6FA51B11DBECDF738D1F9717B0EA1B5CB8
055AFDA9FBB8AE85DEBDA1317B22EF127EE09D2CB2199CCDFC07BB3DD3F7DA91
DBA8231462381018B62E287416C735C88CAC4BCF4985CBABB4D0AE6285563D87
A7594C1DDEF0F19151DEB13BBEE85ADC89FCBF8281BA6DD1F36532195AB62EC6
045003029F774B69FD7126D6F9E20DA34669F228E2ACB44B2A3FD2E5EA477600
41970EDF5E61031D88DFFBC7787592DB1B5DEA54A92603EF47888C851EEDED58
AAD232350E3E65B053A2EAB9317A51A136F0C2C746A4E4A7FFB9409B4CEF7C11
095BD5C9AF09ED156D9A625916903EA2941EA2962F9F78AAA52642744580AB02
B561FF49E6D9BC9858A3ED3CAA1D77CC2DD07BD4C4E854BCDECF5DFC2CD7D09E
D923234FD2A02DFF5EF5F7024C75B312709B288BD7DC6DCD6FD5D40FFEA20135
4634F060085FE5EC3F1666585B4F1FA778D3D38782CA36A3BB347CDA0C2E3AAB
B4D0AE6285563D87A6ADADF843F63F8367906C7C46BB1D1421631DEE4C4A0F9B
DF4C73057D552F2B91EB9213688C23E3B46832498D90C780F5CE3DD660E44B2F
B270461EF7B40F0EACF909493699B477431B6F47A4F6907CFACB819F4A0D37E7
140E2BBA901740338B18C8CD9419E23B217CBA067458B12D69E16537961348D1
E06C23E287BD5BEF89C4830CF8E30214B2058172DED8AB858A3708405E2A42E5
C47B6FB4368590140F2E1E46EF79FDC5CF1D077901C63BFF7A95C3131158467D
D09CACFD4FE938ACE7A389D6FA4CD2E838B1AA39C5D8E79A37719070DB1E340F
B4FE2202318BADBD95D136728FDC1F3B174E3596DB828BB57730DFF28B38AE22
2BA566831F6F8FB8CAF2A302D6AEE81AF2CA0797097FB2E609697D9A35525940
3D6A7DE7074FEC7B7A204B6D79703CA2EA9E32B13EC5EA325EF6E6D70EE4928E
54DFEA06E49A5D6E9B04985F89A459C6EB24A9BD700BECF6B88D1F1B777F7602
DF00AE4AA5B339C187F52630B52309834F266D752BD6C2064EACAFE9339A0097
A03C1E031FD555C6160934D2F59409C4D31299A4D76DC1514ACD39D9A6D59139
6E455852C9B29CDE9B563C329CB71D690E0261FE987E28340AE04616F5F1B3D1
F087D2EBF1380AA0744D911B86DF0C8DB362171EE6945F7B3B383BD93111D715
1B62A2DF5866BEEE6BBD5A23F2357D99247AA85BBCE3190CA2D76D94BCE9E2F0
6F49A6F65CFF1A4F8BA05BFA829EC6052D73F356FD3F3C3F55166FC377E829EB
5FF1655F1C9C1670B8A568F69091BF0FBC9AD619AF7C3140C7401BDEBD443126
1733A76CB1E35602A2B047E55AA49ECFA4A3DA4B8C2C432FD267928AF6A5FED8
13B559A13EDA8D9C15BEDEDA2D086D8C9C3332645004BE521E7C994D1D49ECEC
8ACD83D9DC1A32DA0DB84CC22BEED71E9593D31072A4AA9719189186CDC274F2
BC51DAF7A4CC5C2D09539CD22DEF7FE01F6650249E85174888B132590E7B126D
C20CE26DCB6113D415C15609DEC0BBCE0055AF1446D3C9A163230C5D3A4A9445
5AE7057C624E818F1CF017F9E870570AD960D18E590FEBA37BE6D68C6152416A
FABA9BFD6D9A75098ED528BE00E0F366160E813F2C217744EA491DB21CFD6168
B74E2261A1B0F00C735904FCF2A36FFF8BF189F986661AF6BDBE2684AC74E86D
7343606FD6DBE81B52363620D76F75EAF78BD0448B59652DED8555858792C680
64F27BDB7F016968266828F221B1877C6951F86EBEAFE1C5725C894669FF44C8
BEFDA3A6F6A76C8EDAF0056455D81015EB9A02B08A41A4AA85769265C03C0A3C
BEE6240C0DE90646E7AB730E5A355F1FADB35D9A3FDEF856C43D283247162C39
2D23E53B6AC57B2F0CBD35C95A1C147437C1AE23EB9CBE9933FF42D3F4F01310
8405DF82E0D367A0200CEDC0AAE2E931203113ED93775BFEF4540A9941FF240F
C0DBD2A65BAB093FC132DB99C17A6E747D024BC3297C403B5E27067C6C264210
4D9BB6DABACC4AA136286FC74158421FBF644BBF0E3FA1B3BBBA9B8CA038F113
C57B5B2DFA65BB6CA89381F5E959095F3F1EB907D1413F647D905576F39D3F71
DC521A96105BE1A2257B047F86ED121BA888103840682CBEE690F79C89602DDB
4576069BE8B0C7E61D0083BA7C7062C743022BEBE54D643F7C2D9BAD5FFE7179
D2096AE48F387E2523C39EDAF5CD7F0C43A9E52C2A97EFB0D86DD9BF2F3AB34D
E24D16AF015F407EDA5D19BBE956F29D191748FD3F00A15843535B1A97B7A396
73422E2178624C669C40C33A19303F951A202C8D3320561BDF73D72F0D4A8104
2FCDF457528A846D2B182FE2035F15CEC41EFEF306A3CD23D53311C872F61356
DC7A01F1C381F0DB83929EA4479380473C72A970A5E3D3B371C0DA0E7C940F18
0CFE9D1090AF2313F591A7984B4DF8C4E3F3D8112A7E8F0177085DB87E6CD5AD
B2D1166F233855479B3579558FD4936B304F92D9198D26B03E53482509C35E69
77332CCC6DADF926C6E56BA3356F66D123C08884E9D27DC1FFFC2046FDBA49F5
AEEE14FACB8BE46D1A9DE46A8FA9ECE13186EEFE8684D472BD8D065D83698326
5DE8EC9081A4875CF6BD172958717963AFA5FCC1C753E473E21EB8BE0ED3C8C1
2B31833685258242CB84997044CB1395A056C386B988D090E66F112F49E63A16
8E854B3A3A6CB72CD3BDA84A8AC8E304185356FBA8B708B42F8F7199662F82C8
F6E0999AB3403091799103A992BDEECEC4D91D676F85A6A04F9C00C283DAF19C
CF88425F7DF9AC13B6782E5D32D7366E739E389C78E086CA048C9721C9BEF3FF
11D87CE5EE304DCA2BBA8F01DFC247EDB0EB1E29E44C07D03436CBDCAC20875B
6A9B8ED5E7C2DC5A4B6909BB83E7E2597DF635E0497FB853B860719FF104040C
685DF04825EA9464C8203C7331799E819409C72DFCDC635467FB768B2BDAD851
F235B81101DD7E91FEDE097E100AD2AC1ED26756132ABB51B1687DBBECF53CC8
75F86A646F1492734F99AC96929E53D5EC6265CB539839E4906B47FE93F069DC
C1E436DEAB517BFF954666906CB15500D2C510F82878579A9AF5F7BDE02DB9D0
A0517BE8B0C86174B40A9BFE6F27D49112CDB5C75F6AFF481405D2B4BC05B373
05EE26634496CB8B52DF7F950CE1BD31A6D068D7DF1F8A6113ED6E0ED5E3A03A
386ED9F4F92B6070697D0D5D7C3D570D637CFBD51E0BFF44D56F0B5A0AB3CD1F
01A0271DA668DEF29808CBDB6FD7720E2F4AF7DDD22F1873BDE4D10874770656
EA8E2A01FC1F322750D4A79D88786814127CF08762CE8C989CC922052C9196A1
C884FA0A2A98C9BA22BDFDE143E39A8E59A9490DA325146D32B4798A5B4A0B82
B1A6B865510896B0133C9D9C98E813E0B142027C8388B7B59DF89C12D696BA94
77D629F3A82D48CA829806B799D96938F3FDF31D90D499E39E83E4AD91AEFE53
75F268D9EB99B3CA1433C12D69528330250F9B6C1E2141320D3768F4E5FDC99A
AA25AD6822B22B9CC8A0E120F4339F302BDBA57DA671A26A6A2ABE9D3BB94C81
6950EDDEA3DD607576110F2C8DA0F6D99170978A037D2CA8D4E74633BC3D1097
47E0911C7859CEB157765BAF324859414B5AD73A5692DCD2E05FC5A271C835A6
70021349B22EC840BC4229505BE16175B8EC15D327A0077445CDB87B9AB7A621
CFB33D7C6D034EB8530AA184CA8A5E111CCC52C9E11857D69CEED6B67979C723
818FDE9363FC7DC6928A55B7605AB38637ED07E35BF8FA4A27354C1D5E7B91A7
880FDDF84F5A94E60CAAFB1282D2E80C0E2AA485E84A3DDAEEEA80A0696D641F
6C7946D24530A74997C29253F6D6ADFF67656984573A4A20BA741F9A9E0FDDD9
189DE5C3F2A05C77B9991F0A20DB46B6CDE4850FC533330DD354E6697425A173
353CD1D23D5C8E17CF1B43A482C44FE52E57AF48D043EB656623C3FD50186560
4B857BD23753F695D7FD6FCC0532D001A3D413C4AE46FF1D24A933282AA7B278
502054A852AC436FED25180F4035419D36BD6FBD2A6B1DEB7FCD05662DFE3B8E
1AB318B1FEE726E2368860145127C0194B886B806FFBB1A7AEFC25E0CBB61F8A
464DEB286987618DE9956F8A99CA4D93546A29395A5BE66101EC0A83496AF081
47B1F3E71EF6016684158051E5399AFCE0ED8B8F1CD78B4147CFF3A0E4F0C2EE
7386DD4EB7B77185936FC36D7F19B5FD773C8B9DD0042C5E51323CB81A8EDE31
3FD8FD04979549C7FCEE1F220DEF7CD6F56354DFE69300C910121CBC6F7985D7
A49C7EE9D03DA9A63E4D1E5DB2C42FA8EFDE94213E96465C09675BC358FFAD29
3D6F21F9497121887FC0D6D239B928EFDA00F21BDC87DD2D8DE1BBD7947B768A
70D4AD03379E20373C4AF6A699F4C319CE41F5FE9116CB96F8811BF4B3A4BDD2
0B796CC7DE1FBF2AD98445A91AEBFDA3598ADA081CCD1400BCDAF242BBB27141
53F2EF9E42D3C0A8DC3082D35617129EAD7C8B3AF8FCAAE68D1DEA12241B9B6F
9110AD2795310C7C50CE37B251A4E6C040B4B0ACECADD6090EB30ED8921DCF28
E0484DF92D8B8F5D9FD1D6EEBE16A00109FA04417DD871BA3DF8E102DB0E9E5F
3B72048904BBD47D276D475E2FB51F74A8BE2E5FE667C68CB2FBD751726395EE
C09F5AF3D6AFB7F965ED7F8708565B1F8768FB56B3F2C98AEFBBC8914D0B4823
B380784A4EE507A70844333C992103556ED89F984EB0882954E3EB26B3543338
D1FD9221E56DF4B1C7650635C92B37F6289B2C69832C060FDC409613E0BDA33F
CCC9207A26FE06BAD1D0C5C99C055A806FFF66EC1EB8714CEE10CE2ACD5A3A04
F82AC8714962D152DD762D066731CF85E8F98F0A8B4645AC96636979A8D75386
EF83D070119A5377F2CDB9E9B2009EB67D09231780EE80B36DF59863E4BA66F7
844A77BAEC87EF5053D888D6C101B6C9A8DF2081CC4C4860CBC1DC3427060C91
18E755156C01F7C68855BF64EC9BC75371A98095CB51BE7FF107E4C28F9422E4
6D3E61F8C996A63AA3D616B447B0D88B5332A56ACA17003E8130E33961FE5983
5F21DC12BA218780A4F3DD017ECAE805053934F6E9925B45CD4B58AF33AD2F57
2611CA37ECEEA4AAF6FCBE1752316A17005BEB0EADD217CE2040752BF94A9890
2E608264DED8C3241F09E9C66EAED3764694E07F4B4DD8CB81852F3379F1C701
DBCFC5180A41B9651968581D24F00612472210D9E9EB5A0B843C83A1F38683D6
190095747B41F1B825A6DCF1ECD63B575E124ABA8BC9EB8BC4457B5615C2BF46
D44EC8836B6DCE3B16DC4B13DBF505908EAEEA572E0E4CF695F3A20C8AAE505D
8A414957F08FEBEFE0B29F1D5E4C249535659573BCFDC024C4B7D0786BB63481
98704885DD2F4AB96053424E0E8D62BB0BAB4CC54D0BEBD60ADD0229A2B37F52
010BD013F53B09E4B3C43988F5B3550370DE8D809BE17E598E7BFC3B10239FC8
BE780FA8CD9599EB95F7C8D181F4C52F9E448F887510F3C75459A1725A3AD1E4
F88C02CC78C60E534D94B6C5AFCB201E7727BD93FB0D3D09F8B11EFBE0F0CF84
6CE587DFFD384D1EB26741F1C32CB8F4DAAD2CF7DD33D7C3843159FFEACB50F0
9C029DFD240DD11799F2F6B3FC0438504B26F14FD9DB84C53723CEDC5E428EA9
4CB939852EA9794D98E663E80ED169C3FBDE6CFEE50139621BD0FC52CB938E16
606096BD419642F9E1FD36D1E5C73D8992FE344BDA97D42C159AECD581978203
7EA6EFB0A793BFDCD08FBB40B11538D281908FAA63F7A90AC16BAD16D41CCFCB
9F98E7642CFB232D59A696F46412F078D28CE59FD7F22D489AF85A388557B462
B858A07CE3404398812B80C733A005B15A39141AAF768B5E9FE3110CEABF5CE6
9F5813A5220097640011752F9DD9727E406FC07C39CE6E1DC83F0927DD241E10
AD27C53CDCE776AC8AF5D3A9DE88C7D61C01B842371D586EC85542F9FD69A927
D3CAB630A9A2D3227FF0ADAE13A6BAABAF3616C49C07BEDA6A2349283F0AF627
04F47A93EB8D22E82DFAE6D7CBDB0C2F268BB8BFFF2897D51561069E1F319381
0F97E77202F1B53871F094CDAF1D7AAC84D3090D6BF51A1B4A554F38625BF710
34879B3CE85E012F3BBED55609DD2390263A01AE737ACE2E3209DE2FEE2D7CC7
0DFD584CA4BD4F83F5B0E31839238736E97DC4D54C426D3E520704DBFBB48BE1
56DF2F063F9C7E9E4BE2920B93D67583987E8BC80F68BE6FC6E3C8A9EA45F19F
BF1F281324DFFF7378046209D64F1EF2EF50693D538778D332017A5BDC3DFC9F
860DA457BC47FB369B4E133AEB14E5D7E540C59CEAEB0EB708FC2B2E03A4AAD8
68F1CB46DB5C7346B34AA85ADF6C910893F4864E2CF7A5F3BA9BF38479B1988B
CE5A73C1B4B0F44B1F0835980C55D02DB2AB244D9F65B163D7ADBECA929C6C07
851280B128E8FFDC32CB32C990EAAAFDB86CB99C8DCA0057E4133240C63BA28A
D264F635602CB98FE4CC1903F563C6F8477DB82DB7CA25BA7A902199D37C1BBE
6C856B6B77BAF6DACE8C0FC77A62D1C31FD08731E0A3A035E45EA356C2263CDF
F423789C7E8F9228BA6301BEAC1AA2C0808AADD0A38608A59F42C52BB795237A
75FC6BE6AB7BB8638EE95CCB0F17EFB8A8FEA8046F49EFF51454D927F4017860
9476BE91562EE87EDA9080EB8CFD85B7A55D068AC6F7C7FA747C6125ED3A0752
A698D427A1D946BCE9E664F33D55FFB870E149A1539D4CE7F036914573129064
F9FA7430633D257C3432A83538C377612E1E8A1F9B342544585727C12F16E867
5CD07536B18573F2D3B0EF60E3D8D9DE424373CD6FD81D2C45C88A6BB04C74F0
B2743E54948DA001227538F019836E455AB9858152E3FA12BA86469652E2BC4D
AFED83224AC926870DDEE8EB3195BBA880E4C3DEFEF088E30AD62EEEC6CD88F7
6928DEC612CE88527FAF5184DDFE7DB0076DD3F5A2B1621AC04A610998CE8767
D35B0C05E68E1C0CC9C51908EEF99945717C5A1DD75204A982BBC7B6441D00A1
E25535E2A2CFDF6C7AC002F93E344A72B7D7AB6CE1B3E41F64D7914B93109D28
A994A9479BDC02C00AA6C253CEBEC3115D761B1E0FAFF06FAFF42BC725D11E7E
FC181CA0042E22BF7F3A19D7A307C38720590E7911293055897966B08F32AF2C
70DDAF438047D97FEBF53FAB1B584FD32043060A03EEF410694C23CBA883C43F
D0F540C6C152C0D121E796E4E4E8A3249208CAB25B3E887147737F2004B8F498
EF1DDFE9B58ECB93398D57727079CAB2FB34D3E1730411494CF353F7656E408C
DD8A830D80AB06777D9573030ABA60AC92E36023DBD3DAB57C6F4FDCE4BA3885
8B7A0158991E76672D4E55A2CAA893D247B72DB44A4526164F3F5741E52894D4
C4343CB0F8C088F35F2C09D83DDFA116FEEDECAA369F1FD1FFE9E5D26C5F3707
C6A49BB8840F9F7CE2F58F73C1CFD34001615207570BB4DCFF5B2424F98BF113
6FCFF58E20EB9CC887AD093B649DA47389B2FEDCEC72C47E7CECF6563258F36F
9817A509ED3655463695614A6578D0D92109D43949E07AA4735357233ECA2E67
64414ABFBE8057CDDEEB06F86E2247557CC521A0C6C2D3404A3A7E0AEC385AE8
991806A9C20754C5F1EFC4ED7D7EB3742A4CED5EF0AF3ADAF9875E9F605660C8
D5DAD1304CC9E054554D2F9C13146620FDC1490E2B44BD08F8EFFCFC06230357
0D2C07F69953825A05CED88EEE990D8DEBBFA8A39AB0031316FCC2104DA63668
039BD4BD0311668377818276381BD9F414B3279E7CC0A17D1C40653C95BF058B
C7E1DCC2B08B8D098092C0C8DAC48A31269DE18D6D7D3E139014BEE9262BECF1
F88565DC760DF838B0EDA7AF615E91C12C711184A6E2BEFF3DCFCF84E39CE3B1
4128C43266348D309A5A0F18192B899A221DD761C76F38831ED2F42F170BEF81
586DB55FE3DF59F2172F5CBA9FFAE44D5411607C83F2797CFE2142F7799B4812
08B77ECD01AC343510BFAF987064BAF139E5F6E25F148DF0A060169E7F67B0E7
1B916C9CB0100C6016562DBB8C3AFED4B0EF2876B0D2AAAF2B6CBBEE668646D3
130D96706D2786475814E7D8D44D04D91CF9CFF8CB281ADFC6F39506C2E176BA
E3BB12F52251ABD66997BC15A4FF664840E3BD28E9A425F2541111C705EB7D4B
9984737E256DEDEC85013BF3406ADDB140CFBC0241F8E9DA6A6E95CC6080E90F
616275AE6C1B8BC58CD4A4CE9973027FB255F6AC727B8FAE2FF0F3898BFE2C91
069B2A2AA62813EB00B1A1B6309A46343143622D7711856B763454BD5FDECC6E
206935D442FD54D79101EA07A23C50C559C4BE52BBBE7AF9FE42FB3211E8B67D
C549322F4CBE9606C057DF56D3DFB9AABBA2CAD5BFC9A4A4D61A5D8E30C11CA4
A8460A92E636CA87FF987C6B6D42CEBFFAAAD7096E1F56D8759534908F289730
817F4A2931159F6C40CA572D73946788F0F3FDBD14B53D540809D77D9909AA44
0AEA847835E68F0791745A667B2A1D382997BE968B5B231DBCF4ABC9BF939D3D
8B27E1FD8F7DA9820F8D952B3D0E0EBA241C04C4D76646BA9C8CD5E86FBCC443
D85228EEB1260077C791446D0EBF1ED173F4FBA16DEE1D5F2CC464220EDB684A
9EEC49A32D4102B2263C94E6367F7874E39738CEA1A2DFB9124E9137DFFBEF83
8AF8D76D9CD75ED7118784BDAB220AB8CF4D800E6B043CDC2409BD11226DB4F4
58B8A7E6093B4F5BB9CEDAD9A5F03BC5D3C10882D018E01115B83F3B73C3DEBA
DED8073488C8AD37DFC614DE3F797C02EA8306788EBB86F2B6E61F9DF180201D
C7DD403D235ED495501262317F4FEFD507FDCED9AB01877B0E1F6D6A62329107
257BC7264C2076628CBFC93802BDE85EADD4D5BE8C0217A9AF5B337875EA4F60
E4F00BFF407DF8045B0EDDD8A901220A9747B182B5976D677D097BBBF3E85363
E924164DC523D5161DFAF08A68119DC6294FE01223DF58425724EDEC0CDA0009
83DF09B8B1BB2CBC4813402F0FA145DEC15BCF15ADAA90C3DFFE5FE054041F08
46736F0649DCA8FC60AD36FC32FC2EA1E01AF3B12187688259E8DD9A96DCCD5B
ABBD7E53F5C2A9672BDF53567466874FF495EDBF7128D30C391CDE203CC522E9
36BE6D5A5549D482127CA20F8D72E58935C217436EF52D71788F4E22713943D7
7A04363B44B91B48826675A096876141D007831F6F5984D3FF62B1FFA96E4712
40C14BF272B5E5698FC7DBAFF19BAF6B69B7237C8F5F91D6578E85FA3E10580A
E3610B2943C6191EAA41F12E0C083EC4AF077BC895F5E3721EF8DAF17D45D982
4F50BCB20643BA4A8F640998A261C71C24B7D0740A8A4986EEFB6D6D63B93E52
D510FEDB161007679F29A08244021273D107CA5321F91A0181155AAEF5C94A5A
9D9AEF23AD1D2396D1A4F8AE5EA503AF8F522EBE50AA44C469EADE29A252731C
F3EA372CC5023E99007F504BEA138F1C13952B41BDDD559D900CF9E9BB54545F
4734AC0DC753E16A2DFA9F75DEDFE306395425E5CF1112FFF25306B3D80266BD
DB3BE0243DE89C444D6B7AFDCD267A8FFB64CA76119AE6106306DE03826BB319
AC9B91CAFDA794D8D8404584055D1755884AE5D7ED9EADA808BE1A7ED37CAD90
91628FA9243FF6CF424CD75F211E30706FC670F46A80B53BDE3D739A08717827
13AECC3E80909E887CCCF09A03582AA63F321240E184AC650D2A7A1685C80DD1
BC6F02378AB91E83BC02AAAD17AD58546B3BC263484034C14F0DF1E242C0F247
67623B6595A8D16B2EF322BEF6307FD7802B17EDB4AE4ACF9C67EE3D4A4D0778
0DFF724EF3E1E02A8E0F27D23F7343035F2D85DB1374F017003A2ED35CA48160
9685B5471D6468E3577675E16CD92D3C07A519E1806F22A876F8AB97D3622446
E554F96B96CA03E351D249163B61E8BE4C00C722B00404D43FDF76EEB8B56D4C
54CCBEB07BE44BC79A2C62787F6CE7D7AFC0BD52E7ED352A58B11C1C5785C283
BCDAD22FBE2273DE8108E98D4E1661E074DEB0C0FC9ED8465892E02368ABDDBB
A3C08B88194802811D55E4D5EE0A685763D19F728DE1B42C31B21F9617ABE82C
5FF85E61FAC063CE5F00756D955407E54733FB3FBD69C55EB49363EFBDB9A4B3
339E3A4CD8359EBF2E69E804E2B2F89F8682E2C654403E819C413171860E21B6
67EDA69EFA6B59526A5FFEB2E589B687382B5C70D3CFFF86CD6D2009A7A63141
B1D4979FD109E7198A4F6E7BBAFA3B7D444232B06FFA76FC8973D6224CF8F282
226D6E8FFBD7DFAFB82BCF03E7FABF5C88EB0CE69916DACBEC61A15EC9330D00
DE90E5DA8FBE108CA410DF35D1AD977440B5E2321914A8427045A43AF72727F2
38ECCE7AEA0EAD64A63D002511E39646B287ACFECAD702FA11B262ECE33D4BB6
CCB2278962BFBAE0E728C8509A5D0560046A926681666441AEF996E72458EC88
13C0DEB08460AD45E7808E903027248185B25A8CCA2C2B3B23DC5D0C30EE24AF
78825760C484334B1C2FADDF2BFE3AAD6DB70C932427C2F4C0012263E3289376
12BBDBB0016ED7C1E05C2AFFBA8D9C18E6F4E851C2F2C98369B31369CC40A05D
4BCB91F8DEE91D42F829D26FF4427BB5876C52822C35BA42C2181DD77FC2854F
7C7B8F39FCC2E5E6EBCD1850519EF228219C5EFA6FA39B445DF5A69997CF360C
D254DABBBAFF1E9A09062C7A79D5A8EEE715AB1B39412969ADF144D5C0C50A09
871FEE37176B2CB6153B8B6ADC48B08FD7962DF15EDEDA080CE4FC023394128F
A131DF60522419752119B7E44E15AF6702D2561077220811B76F8F242150C644
A10ABB7CBC3AE958C24D2A9AABFC9752EFA3D909C6AF8DF35687827CC6732529
732DD743B89E656EB3E2F9235EC156D58D5B5F8666F6826A41F7F1107728BFB2
C78DFB52A88B11BDB256FC7375B5305B1CFC01E8274D3A64472C559ECD0C85BE
E16493C055A9689AEC3E37FC4FCE8F949222BAE83FBE85936CC1D90B498D66B9
1A2D560D772C14FED32ACAB8599F7BAAB4C55B79BA32531F692B287BF36D28FE
18DA92322CF5A7ED8EBD24D106382A82EFA03578E15EF2AB7F23DD6933F9E95A
0AC48F259B5046088D92EA4C3B2206C569706D5C24AE4A0BCB353756DDAD777D
3C6FC1B4AE842540AD127FEF172331BF327DD0EA2D34745E65DDB3E0432436DC
3060927963816B7C9AC9C2257EFE80256DD8D72F75E85221AE7F6C122DB2D114
764BB19B66E075ED3E3498ECCDCB076A6AC14326B65F9B96DA0A46169558C78A
E80A30365C5CB9D527C4AFF16EE906A95DDE4080B107367B0E9CF224B1221E7E
2A9DC5B14CE2CC35878DED11E59D700348A520B2E78AA9576BD91CDBCDB457B4
CDCC1E7C427B8ADF4635502C2819D62657F1A34EE6B4B2634B0299260F2F179D
C909DE2002D90FB06298FE5687233309C533AEBA8ADC3C992F2BA1A0B49536C7
E042F07B6072193EA274740F0E0E407F9C60052AF7228E231998E3998168183C
1C0C68FBE45F468E5E3146EAA7EA656FDDDA16E89CA7E69D8E9B808C429E2805
EAB5B6C036636B8AA1D4B4C3014634FD64761745B131802D6B57D3B0D70C6EA4
83FF999EFD062611876E92AD8C1CABF60BCEE8028BE4F1331E4DBE00CC11D993
E01EAFD3121D8577934FA9486A6E1748466B4174FBD34C88FB9CA850A0967F2B
7E3DB9BDE8B3DFBF2EEAD1A2BF166D1A8F4E2E39305FF97E0E67C3DC834AFB35
109313B3F41EB90C8F4744E9A926B606FF1E5C181AFD87FCE4258C1348894528
68616DE6C3087D976894EE716DE9845808A14525799FC270ED701904534E89D2
1D9A76BF62E04C1581421DE8664DD3CD9C4C1E3952DCA0F5F075C51D85FC3310
63D52E27B4E4E4E96622CB774B1F46069C72E799E6EC21E77D3827AEBC316C6A
D035D8B1F80E87378140A923100219B1CF3A1F9F32D157C296280C42D7A53A21
22600B6A459EF9E73F69306D660F96A07CD8ED2FEB67E716149C710663214477
F813EB18FDB8484F19993752C33E694D8193ADF362074689674FFC59F0CDCCD7
2FDDFB9F38E022824CFB2C1F3959CC14D7ACDC09AD923A47298412524B1C4CB1
9FA23072DF49F58A36A5F457722AD305064449370386A2256F0CF5CB1790BA2C
DF850F9E1ACB52151A24BB682BD537D5D65E32455703156920B7AD241AB7A604
A54688A7A5ED24D53477B87271F6C96CA29865620F387D996F421C900BEBAD38
5EE55AEC036790F7606096D10A8C03D71A1CDCED5AF82B2861712786971DA2F2
4265B2FD5BF2EC1CF33F02923EFEC8EE5657146C533A6F7EDBC4864BD70EBEE6
8E870C23BA904BEE0327481AFABC72E6B54F522933A163DF1EF1B1ACF7F0F7CE
6D27127C70FAAC411331B17BDBF6C2CC4F0B969B313B16157A29CDE03BC71ADD
4B71D073AE26914B83A3AEAC289B804B7A4DBF8DDE23038E59F9771E3D9AC4A7
32FDB6963F6F67995F47DDAAB74C31644B9710758549359AAE5C1F7180DDD0BD
B66C390EB54D87C97D4CE508A9C53ECF370F728B25D757C2306F311C1B235558
B704B0A2F668DCFB0AC3A80B1761FC3A87E6A79AE61929F6D41D7DD1DB2BF35B
B64B0E85B0FC58C81ABDB4AC434CE456D81AFD17B31B516D0B6B9C2E814B6F22
8B8838C2763159286DE9652DE52528FC88431CCEAE10836DC59CEAEB0EB708FC
2B0973C6F6B1A766BEA1EDF27B81E62A5B2D37F1E1553B81EDD73DF1691F0568
3A6BC74F1D2767BD0D84ACDC4AD03D1EB27F17FE13710521ECE0E7E684522787
8902E4543B9EC640C74CEF7E37DC4ADECAC68F6C7CEA6D58963736D6A6B7160C
7AEEBB16594C29D0A9548004FA135A234F59C944CFE2D66089E08B1EFDF083A5
E8E41494858ACFA52D3EDB3D25C459049A2221DBA01A364AAF6B6E4B38CF3D9B
8EE2DF749082E7F912ABB5BB8E353CB4875E1797D1F03E6977AAFF0876C9EF19
8A8D9572760FFA000548496CCD20A34E04B90D7612F8DE153DFD55BE4AF58446
45F48BDA6F67A5A31414B508183528780C75E3C803FB8CB1FA267164D608A54A
3397799176495348E8918A088C8DBADAA7119E80FAEEA047EFF19B936FCF6AC1
F3EAEFEEC7DEDFE30A63243E9F7DBE833F624902930CEEBC84BBED2305718B89
9C329F2B273F17779D1EF6ABFF470699A2284F06E2E9CE1A5F6F9103CEDF24E4
A033C705DA33C5F8F051EC6F4A554579CFF619A25B0BA6F1AE5FEA62508EE98B
F576EF31F382A9A7B562117A9A0C981162B8C40BCB3A7B1EDF0C1D734098D9F4
585EB7530664C79582CCDFDDA4B4E487A57D8207DD18420AF0A75C5534B47DC1
2F571F827CA7B93D28D1B195DACC47FE5FDC29EDD6C97DEF92E40FA9F957D6EC
2A2902F7C4D68E837E7D573068C55D4470801D8E2D6B5972D30B54C54E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A110651C32F7372F56D5E845643350BBF6D0A6EAAC
D2586F3D71442DBEB5B1B049B691CF910A78299B8A9C0B39ED96503D55AF7610
48D41BF8E781511338BAF3A2E79B98DB9E6748C1FE829C1E574F41ED7A56E8DA
4EA2023CFC69FBCDEA39CB00C8BC5AC4B184E13F3ABA4A18487B10878E9D800F
8064BC68223CA5F86E7A9AB9BAC72FFF9546B6BB94F4426E5D273581A6D28444
44D82093FB03482F71774ADEB638DB46DCCB0C6BD2192A98CC4896B52E643BDD
07F61D79F78746C5238C5504416B1E2F271280ABB91D54CC819680322EAB72E1
250A760531BD7F2AA1DE45FC978490BB69153DA6D6161F7AFD7BEC1ABD547CBD
B6BCC20BBBB289486F6C7E238C2A7AE02B2539F6DACD88AD99A2B686FBEC34A6
F9EE29616642225A5AD8C4FBEB07FE262D75AA093A73E9E0B89695B5862C96EA
1243561331C2D9EE7B65B8214E519D57A88C79B55D644CAB29554F2E31FD6843
FF7B259AD5538BD0836F18ED0DE7F01D9BD148F8279585467B15C17D2D0C33C8
24A507CB2FB6E384BA8BAC55FAF929178B7AACAE1D371228606B58787EBCCA93
4E4F469709A6476CBF11C97862C34607A7DC2871810B501018824C0E0CFD58F9
7A957FF98D5BDA3E3E034C52405A6C2908EBEBE3E29F7C6A759857EEF72F2EC4
3A8642C108D34C4CED6F7DBE80F25D75116BBDA7CB4BBB73A61F7C685A3A9A51
8734F9E4D7E801AC7DE2E73CC759AC64F3CB8EBF8B5EB56F41B247F3F19315EF
7C24C48C184E2BC4350D72B6956D0C2F54961B34FFB476B8B54F5F249AD4F434
87F61D3712FACEC07D010DD43EF4D36C3C6BFC310B412ABDC95F0615C5BC5180
C92F0640CE6A8AF3AE7EB181C2E4C11086C530DF109AB7631B321258281DAADA
221C4D03BAA1CB2A3368AB891AA0006AFDE458F28C88624B7CD1FEC6CB09AFE1
5B7C4C75C0C00F4549D250A8D8D0B82FBBF52438CCC1953B78E7D9D431A1B5A0
4A73AF4A83C1332449D33F89196645962942DEBDD82A0C4A86F0317F943CAF80
38C03C57418377255201AE91F48B7FC6E0BEA32C7762AC27D37041D63165EB3B
E7A22843BBBC2A76EEB0E1C3F1A5DED8CBC163A406C10DEEF8375D51CA265048
A748D61C4B7C040606D6661334764F75102442574818D8E2E330E2FE5102B7F4
DF3E4FF29268D62FDDDC616ADC7E9F13E6B8A5628C9C333261C279378974A281
B8F074456303CAE324705BE0751EA813402C3D640582C972655ECB16686869E6
DA64131BED44D2F499C69EA518C750370797B96D672132C82296E416D4F3B55B
FBF76FD52217FB7A494737C74DC1BEAE9A4370CBCC6A3B60E897A2A10ACC9590
B7D182BB0BCBDA4B8FD30EBFD8E947926A7AD4A39C3E3BCC457B16FD9FA2606C
C3C0740F437DF5F1B361E2AB0102CED6B56AB56737158CF03B694FC508079D3A
31ACCEAF23100219B1CF3A1F09D967E429545A65BB9BCC05055A705CC4D79163
209A2105EAC6577EA6EB40D70A6D3A73572D79A8CBE198C9F63FFD1470AEB473
2DA147B30FA99C4C8C7BD336D401F5DBFDE3DB313266068F252FBF712D4F6AA9
CA51714523FC48BFBA1E33E36A67FD71C4DCEDF3CFB6AA5BAFC7DCCAEAA40FAA
E6D4925126349DE06E101868BED82BB51E91185394F31E2C049463AE81F753E2
F863AAF5E286731902E47CC79D75EC3262338CD13F13C659D762DB6199452CC0
3F88EA12757D52C10FF38B44A09610AFDCC3E9E0EA6D89BB91F93DEA53A676EB
142FADDFD883DC4F0C38023BDA6569691729EA004A3D96F0FBB300F4030B6606
13071727F3BA34DD98CFE4972844FBA68280761E4D48476D645F86023FE852EB
25C98058B68C3F7DE5C9E739BEFBDA9EC9C8F800F862999D20CD6BB97FA50A40
B29FC17AA00DB566B2EC94DE5934CE2EF61401B1AC09C515B31676917D11D6AA
C4F958DB61B11DAC0032A4A9BD935683E85A26C1F42BEEAD417F837272445BF8
5B73660BC2B57C89B3CFF6C85E86E42A9550DA129DC0FDC4BE50D5A5CD8DAB41
09CD47BC05EC9E0CBF809328C5737D7917AABD0AD9A87F485E0843606F7BF8F2
C0F92CCA49C489AC56BB4FAEB441E713B499545814BC2B3B2ED508A5547C4B8B
182CBE2ABB754E07D88DD634787FE1DF52B38F3EED60778915269E71DB74E889
71C070FBAE2C25A7104589EF38806E811726E41351E349B6167CA5058EE84D12
58EFC050B428623FD1E621555BBCA26C986ACA69714EE285E4183ECA0F278461
1B128DDFD3B8061FEAB76A85459C6339FB76BD776FFBE44A0D870B50D5C08E42
C27D4F909B92A16E8AE2275E83777297529C5ED2573FDF8BD7D6DAC8936854A0
E9B5873E0C43A98002905B1F09DFBD253E4F8EBA8FA68830E6BD9979FD51C835
5A7EC5C1747D467FB498E88120CCCAF6A701DAC4FE774492035D2304EC4F9083
716CA7906B80486BB5C79930F2D085E30DEBE15A07B6A046946D1BAEC088EEF1
31BE9C77E57EFDAB7374603762EAAA72B0B40EAF746A43B2DA7552C98FEA1ADB
BB93C025B00E2203899B2C287724BBB8E65FE1141502C1218C55773CA3C6DAB9
681EA8787E7960CFCAF502B7A3066310BE7A115570201F827CF41845BE0BF8AF
AE8348F559D6AD28E96669BF76C5EE35D36E883E3362E8151A38AD6FA6AEADF5
82AD81A19F11688A44032481C0698FF9E0E60C0930F7AEC84C4D7EE11BFC90EA
C5CF755173A99C3D0BF412FD30352B46B6FB6D0B977BF34FB3EA2C40A1ADAA19
182C7E3FE4F4251B1887A2C605FE1895D3045D915E59246A382A2EF44013126E
974503017108146FCA11C477865B61FF0136346A52E994D5242B0EDBF68D120B
D216209890529FBB3D24651664E84B70E52B35750A4D746C647119A3C81D1CE9
54F4F359CEE99946657FE87EFB947F6EF31DCC61CDDFC39A27718813E2CDEE9B
EE0507016F7651418558D452E73137413161CDD6645A9C7DB42FDD905FF9EE5F
A98B2F04DD744B336C400DCE97D3384AFA5C0BCEF133DD294C2AA330081B6EA8
216653BA182F7FB05BFD80CDF441BB594FE01CF3180D3C3C1F0B13A98CC0339E
144825766BC7D4CA384FCD2E9256B4C11C354D3ADB93059FC37FDDAD6C78C8A7
FD6219FC44CD0E30CF5FE94C5F95054EB0CAB8CB0BFB75B710119768A161F8C2
76614552655D1037F82FE0218C4D4CD7BEBA74BED51AFB08EB16469390FB9807
1BFB9020766AFFE943870234F365EB6EF863A8103CA6089A8A29528E45C47F09
C56AD5389C3EE8DFE85E6127D09DBF020D89506CD1270C0B3EA235BDEFE3E247
B0C655D9FF7B893CC31F7949ADAFA7FD22C8F9537DE472B6C31FC9AABE7ECAA5
701B0D2575AF8A8596254E937C142B0AC9512BCF447499C2005348B848036DC6
131C1F05FE139D653820FB3EEA998267FB51CF42EEAD7BB3CF28571C437ACDBC
56D765E2C7F61226CFC5613463DCE571BF49F20E7ADF22AE9612796DEB913805
9A4C12D608FD1228018A6DF526D5C66A9F11AEC07A100C7CCF020413C69C51E8
D0541100E3DF71D501F4BFA0AE8260E23761F29F3EF6B7AAFFB00FD028B380A7
31A931CCA7A1CD78F9CEFB9B43D1AB67E0C1B90B74C62FF8FD0FCC210E26E80E
A2C146A040FB4729A47526A644743B53CF0CD6CE4EEBB414C741759F68C2C929
2B509FC3F79A0124BA95F9FBAEAAC3B3A5CC1C9744253567A78303623728AA44
9365090D58BB4E0B099DA528E5BB6426A755DD97B90D0DF4AEC960EE3BCDED36
FEC31EAABE44B4E65AC2358864B4567F289298A69F79F6981B190F26774B50E0
D246A2676F9821158D56882769E3AF7B6C0F8F856AB15E34B7AFAD9FBEDC388D
8DDEEF29E5BA5830B9E88A403649AD203CBCAB5465F18682746D4C6A28F9D30C
71556F7C9822962D39A30A3D5D4331979C914CDACD8E52AB927C4F57377C6E95
AC3B74863596FA34250C38904577CB39ADAFC1AC17B04381C6754327FA7C65AE
AC1A2839AF94903A7EB7450AA2BCC638BCB6D2318C6E6FB8AABF70FC0CEC089B
5B2A64DC911A05B7D0FBD3BC15657FCC9D561808E50151C166892AA2415303D2
ABD61EAD6A46E042F2988E6A31D07C0EFBD835CD0C526CDF34968DEA783AAB27
AD15B45820BA2C8942FB131136588242112EA1F17FD3C2604EF52210F343C793
DEDEFB0A2B195538D4B0C6FF837473C372E70836D4C5747C4EEB85DCCE969D9A
7F061B9FA20CF2EFB32200703EF58C425B9A7D27CE0BA78897210D30DA8F7CD8
5D47409E582BDD2EB2D8D505FF764C914B4C11AEA7B23988D184F29AAC5C274F
5694862641C8ED8ADC2A7166E893618F4E1CE1CEF3D26E28BDA32D12B10ED201
A9F192758B996B3B8750FCA90CACA049EEF3CF6CF84697FEEEF16F2290BF3094
539F0406AF0030ED0D0769FFA19112C97076BFF950438DC37E9700A7BCA663C4
328967C977B430B63CE6CDFE50A651EC13D52174ED5C933E8C8525F88E6CE482
66186158BE0A5592691CD1E265DB2F523B702D4D0DBA35BE10A4F542DBD3E173
15E1E0A224FADE62569408F6ED842CA727BF331033E4F074D29DF85080F06956
1019E04A19756A102E1A32153D5C6216D9C9385A18202E78D9E7ABA944D21851
498AD5DFBBDFD2AD3A45C0FC93D273C16FDC07C095C8183E89A7FA85A0C12A52
763634899F898B819309587CAE703571A817E2A7D1FE8496B76E5248A3CC57AE
914AC32F028980AA50C18C5C8C44EE90A42542106F909E4F59803685F804B0C6
A98E5D37F963A15B1C0B736ACA11C477865B61FF0136346A52E994D5242B0ED3
7AEB62353B9A1D56DABD05371F9479BFA4CAEC5CBAAC32E2DFF165186D73C527
5BC9638D8A733D3E5905EB634982BBDBE878E238A3AD7D54A0F8D49FFBBEEA2A
08DE64815E836B7C7D1B6B6FE2F8CE38A96655B073C606ECCD8C3F2C5FF185A7
2F8B21D6486CD41A80EC051E875EAA89D64FA5F2126CCA7E93636A7CCA2158B9
9A15CD40585926E5ECB3811D95422BE5D90F0E736BB7657CF2A0A5233E11D3AA
E27591284292FB1BF22EA7654C2797659EB876A0CC35E0BD79F4A14F56FE1C18
E6232BC798A227D8F8F92AFC1924FF85BF0BD5547FBF0ACD890470AA5CB2E0D6
1ACEF149B0A7B73F2EE0136A9C23EF64210422CEE9C62889C3FB5D8D1371EDB8
5EFAE402433ED36B610862F00EE394976F0A2F4870DB0C0FCBEB6D1699049BDE
AE9A5B364AC04F853C9612C58189EBF3334336824F029CF3315CDAC8483406A1
AC1DF70188977249C809CC821BC0B7A2F8AAF27E7E115BE85D71C3003914643D
2327692E464DE4CD3E76C93397F7998AFD5A64D6903F2EF571F9A24136315988
08E0F91DBA758A23E515E9F18329599819EDBDA44E136B801A216AAE5168BF1D
DF74179AE8478DFF4DB502DBCCDBD61CA5B5E20E1CFC04C7B74A171F41A35364
E573321A926C7C3DE13338F52F2C91531C92ABA181B7CF0FF955A8DA29F11753
6ED7582733A6C86215121DCF5B0716611CCEFD11F5C5F00FCEA5EE9D46AA63FF
7D4278CC27249B1329305788A6AFBF6CAE00AA6B9DA46C51F1EFB3D014219FFB
966E070D8BE5B5CD57458FB78C6ECB6460A281A80F502523BC02292E16AA3B9C
A089F7320D1B9BA214E43E83C1FCBECD57341217FA2783DCEA90AC383E444674
6FC85E9B1D817C988AE526DA4338FB27A18C3E1F59CD6063225001812694472F
7AE07866B1F040B42849BB161F8C5058DA20F5AA785DC0E77188C18435A2E7FF
BA595F0C054E96CC44F56932D8FD589EC2438A167DD3799972464CE75AAB769D
CB32014BC32FD730F22927CBA09B8CD2167352E6BA2E96F35F1E67BC40979F9B
86E0222012DCA626F8A2147F672557FC3E08A242B2514C24CD74D2A6056E9B89
886CCCCBAE6F51A33757FD8DCEA2488E7B130462CAC1C61DDD7BD36BFA9D85C9
CB0414FA7B15EC02E8C08C8A4F789EA1A232F44B216B0A7C6B898EEEEA2EAE31
DBAA343678B35948BF6E9180221EDD0ACCA578928815D319AF73A7E10B5F523A
8B2E7812E325EA858A25C26ABBC4C25E327DFCCEAC871356DAF0CB205917DFD1
A8F1216EB4301EA62211CCB8909E9C8DEC28A6FA8042B461FB6C3A5425419977
1B7A614E53D6E49EAF8E8C75650D5793750C61F2D28FD6296AE76BEC4B0044AC
2984337F2EA913D381318ECB6383C6EBBFB2B61FE04B0B13B26BFA8A80D62E48
64239BF65B841617AD96D9D7F89ED64975DC69CF20F88E081FBADA15B871D8EE
AC0EAB134DD682DCBC9C187AD9788F635D7C1D238E43779FC2850256D81DD960
1364534E0C331CAAD340B7375427190D9ED5D06C044AC61F885A346AD0BCB540
FF5D3D13C722603FD1A9BAB8481D5ED4B852061899B5682BD0A153C50E9529CC
B01112EE116B684BA5B21D162765BF1FDA0BC109AB896DE24B0A0D57D9F4CFDC
4C1FFEF87FD2B0CA2E1A287BED88AF473AECEE97ABE431A8D1B05BCBE69CF10E
B696F21934226B6174010EE3696D11291F2E3F06359FB2DF0AD948D5F373AAE4
A4752F9BDE24042B95B58726FCFA82AF11ABD26D2D81FB0531381F8800FC7ABC
5436137CB6ECF73403915F269B7B231F5D9B1F61DF7CB03421C5F46040744911
2BDFD986A3F7EE975F79735FBDBB333D136FD72B54BDA112352814FB6FAB9134
72DAB4547A50C2C293458B1D854EB79608E52F06734E2CE9B3962B4FBFB2CED0
CD7D1C12433ED9CE0AF54C73172253EFC739D7552C51C4BBEB0896586854605D
658D8C7681595D0492047E97CECDC3FAB63FC92DE5F64B6FA36C08DA3B7FC06C
7D40B03E7F03EF36CE0390DB45EA1F0B6AA0630DCBC43B1E3BE9B7BA5722421E
932D83657C904434F3CD7B4C5C7CDE111CDFEA91C7326AC7FFC2A65A633FD028
806459C9CE8EE40DBFB9338561B425E7FB8A486E8BBD8925F744645C55EE47DE
4AA52ABD988594A7EC882C32556517E396269C90FFA27C5A51513DF558A8B499
C7B6158DA671139A282357F5CFD4CEE0BB8C7C8ED352E0A1E6DF242BC75F285A
7C4D903A367CDCB74C56BF8356F94810910AB18CEE5DD843B5FE4096F520222A
20FE01B307960B1F1030F6CC9B504E1FFFCCA352431A0D5BFCFCFAD30F97D9F6
2493B0CB7FEAFC9BAF90B7025D2E35ECC22A152A63EC110EF4B8FFD3E82A1F2D
18F3F163F77EF399A73A1B5FED7935DEC964AEDB4721F177FC89A5AB13A06261
BD660253A72E63479DBFE0FB8041A873898332B8C24FA875D3E200A018C78BE2
E930457BC33AD2FE3614781E71AB4D0073D71DC38239BC688D3F5F61CB43AE2A
53FADAA5926EA5679791D474BC0B7939D43C0AA387BDC9184255A3335FD10380
3857B8046544BF2723FF4B4331E2BC38EE8787EFC7FAF8A4D10DF88C738EBDF0
4155D92D9EC67D91F7299AAC56823CD4BE926D0EE4E8CD015DD85E4004694D39
E05F5E2AEE30F76D51A3CF5FD0316410BAC452BD8BB544B57ACF2F9FE83E3E68
109B182044F27CA200B432D886A12EF6332152F0E30D38E2B0F2F1E30D973B04
68FD4F84E83950B76B1A05B4DC730087F385C524B689F96E3FEA51EF125D16E9
073543865055A37AFD20C49BF08EF65CBC703EF6ADD2DB56EAA02A6C8649E61D
7F5B5320DB4E6C7F70B76CB486438D247D0100689A73A26C5E0137C208DCF1A7
143359F8EE27AB1E0B8333DD55B109F616080F5BF29107A418F686DD27656D1E
EBDFFF78EBD97F40F1B3C7C78221B0081DCEE066E353DCCC2B78551535EE5DA5
2B7AF5030F8AE1482313610CBFB4CADB3DB95CE2C74DB09F6C18D083A389BF57
68AD942959FF0302B3225CC885CFFC8807635C4262456DD0C12D6542D9EBA6F1
12F55563444FC3D79F4B3A2E9432F8E1948F77146199CC80880EA23BF76211CD
865BF221AF4EC556835774B08B04CBF20D471B7C228958EF19C9A18ED7B135C3
300D4E6C8B686A49D427CCD0DA4E7B07C8D2140B854F2E7C3CCABAAE3D2A8083
7BF7F8C88D26D37C4A69365579571DE66F500A75420DCB24BFEBE3ADB38A6CA5
8290D557AFA6B2F76D3C2C0D7C2FEF36D9A72D75E95EC194042007DB1738809D
C388263F3562D6BAB6320CB7B552FFB89F11EA22D02AE6333848C966B1B1E30D
A2B09FB2012717AC3CCA0F72FD3DD6E6E24621FEC52CE047DAB64EBA1EEF23FD
D6D15A5E4B14C74D3856E17C875B7531CD1BC116AC4F21FDF43764C2E9BBC3FD
8F6C02E213E218294D1063180597B8C427C9B17202A03F53B88544455AA87281
0C7948B1EC866883E78C9C909A89DB039C9E9960E315CC0D5A741134B101D1B9
61CCDDA1D8C89CF7B69B3CAC447A2D2CBE22433B7494A12D6898FB52E8D60EB8
F100DC970A6F6FF1EC5403388B6EF347797DF580DA0E0A4F13FBF20B25DFF786
1AC70BF7F778DA38E54F972D6A17B932EFECCDDE3DE2B3521F190FD862092C5D
24CE3B8037AC8FDD3EA687834689DE2FE4B7759C944FF72ECE869A601FD89830
4C6EAEF3D52B31B6CBA3D9E7EA775BBA2EC97CC91D926CC76EB3300E9B6FA5B8
477E9788C5245492BAF032951F69E716001DE419883FF01BB562BF7A8CD1C6CD
40BBB35A5685BF03CA5AA04FEDEFDF24B58001909B7B03761FF2070A0FA2CEAF
23100219B1CF3A1F09D967E429545A65BB9DA9111A6D08A31D0797C7D0DF1D6D
88ADC4FF697C5CC0F670731EC605C2C85F79D5C6DD740FA2EAE0C2119F4AEDB9
BD5451F2BAC4AF89052666E690F8ACD132C6B29910190FD862092C5D24CE3B80
37AC8FDD3EA687834689D1ABC946C2E4E79D4F3AAE440A1F525EEC2713C0767B
327F5AE99A990B727C6C7020F14175225EFEA39202B10588CB9B4E44FEFEEDCE
7B6160978ED7FF4A5199B53C9F904FB174E3C63454AFB214A8944B2299D75F55
E0414E65AD6A19F8F0894C659A61F005C6FCE1A0E970036566CBD52B4A8B1AA2
57C2DEB9689E200925D85FA23439452A82E6421B44C297B1935A3A5DE94E8681
FC6842809C1CD755943368A9554B60AA09E892F91A4B3291F21C9C651669E0D2
71F30024C0488C71FB30791F330A89ADF521505BF7D84597813143C60D3D1A51
5D52CB8732BA9FB066CFFD1C50E9BCD1885D95B60048D2EFAC8D2CC435BC0F25
C44B4AE7D581455520DA75F0AA2AD71C12CA16B7AA13D89CEE02664EA934E077
7BD01EEC83BB5674DE327954754A34A9A04FE68A437B8306B8463247F1E54DFF
D17B997EFF71C0B00B951A7570A341DBF602CED898087B72FD370FCBF53C18F7
6B79AB072E704173D21582B641515FE91E1433A56A4B1C717A38CF9C88CB71E3
781E9DD1EFDE5652E31772561D5A448F9B520EA55BFA4FC1C8FA49F5377E1680
6EDACCB60F0D8085FA97FE6D2E960552337321D82B49DE32AE60EB35A8EB1742
21DE36BBA0146AB08A3DFE98951927F9C3A83202250796C33F156EAB4EE9BB26
12B1FD223DC6C8A48B36B81681FCADD2C6095F052CEC01B7D399D097BACCF6C9
E10E5C114D067892630923CD601E96E722DB1BE432987A61FC0FC6820AA22F96
7BCB97046EA3C4A9A3A97D7C031F9E8AA24C0A18B40E952E098614C2DB3FA57D
400530CA6FA97ECC263187BFD652DC36561D27A9335BBCA18349AEF42BB9A57F
831F6379060E3650CDB2C87FA552F5999A1B5575D6CAFCB00B7BEF6E47AC23B9
20F7B535193DB8FCC1FB0DA6E544394563D24D8C87FE0F2722FBAC78768C4A89
FB6E27C2FB99B97F2312B6455CB547B771F0F0E66A2A9A030A92CEC7F3F1B26F
F6E2D1797C38DF3097789861DA2382708D050BC6A2263B7F797BD4F9FD0EF0E4
68AE9691921512F7DE93337F31701157FF310056D421E594F949B0E4980653F0
1704F8963B8BF87DC9CA5CEDEBE5D0088AAD263602357ED1BE61FD58DFA0317F
A126A715D3C293274ED2C5CAD0C162EBF98632D63BC149DC1379327ACED1EA72
9FBBF3D9C2829B9FA5A211732448B8F3125AC8AB538565E06699AE5D68759A52
096B795F2DFD666A3ED9C1AECFBC3AD200383477D05545B04A54FEA1159BA81D
2F515C46229D50F7DB0820570898CE57EB2DC4F2D4F37A3B26398A1D5AD2F84F
0E1339008A3DFF0A65F140E43A7EA149580132082317DD4A19E976C084A28CCD
E5BBCAB3731366C3B74072044D3EF2EBC1CD905BDBE9C01C812B0C32F4F09AE5
4B9C67CDBCE3F58B2E4658532D7DA349A085E560FA3A13FFD612BE78D9014A90
8651C8C8391C12719AC3EB6A7652B3689830029B200A417E9CD3E5580A9B0D04
F36C41B2F672218763100EA3EE9ECDDE8DD5AB6A6510CF16E8CAA48D18DE6EE0
20AEF0B89AE754BF7F8203F0C857CFAE8A868BC658413CB9D65DFF018B979021
09935414D50E1375DC1FA058A26A17105A2469DC27876F4035544028390706CF
1ADBB96A74355655EB64342E5FB6E18F2149FCF4C0F743AA1A1A120843D3681F
9DCB79A8474270CE46F97DD10CF6C8941D49919570F2E5F06D721403053F2058
E88858EDEE096C4034B5A2C6FEA57D50A9ECF4529BF907C09445B3E47801F2A7
157FAA847DA5E22F00136F21273615D5288ABEBB427E01E60CCE30B0F2B691E3
A8C1DD510CAC176665F9F845E184CC0594188DC4771B8904EEEBCC26570D5C83
6D34EF4DEC34F23A4282E1448187B3AA4BB9002792269E14A11BA6A5BC7DECE2
0029034C88696775902DF6CDFAE2AB99ABA68FADE90898D7F48AED17DBE9CC3F
44BB85BC31F795942D5D77E3AD79EB3B6CF717E5CD434CE1C6B388B901F937A2
99F65C3217180D4BBDAAD2E96F91B4DBF12F6C352FA5F0492B73CCD90086FDAD
B941A35FC77F7364BB75AE2083C7C66E6C13CF17915C99F16A44ED8B88CB1B25
44153A1AA8D2DAAD95397883491CB46911D35870C88509B392E1B931F0E402CF
17A63993FEC0044612E8EB5CA65ED931CC5E0FE1F28D6565F3C195C8183E89A7
FA85A0C12A52763634899F898B83763908EC0A1C9AAD283809A935DE0356C702
F538EB0C2D835A9CD11BC6D7C87ADA05A734DEE08CB62CF82CFB0166F0F1C54F
38D882DDE8DEE28A07A9E0A42143E0FC979F53C42E821C769735FB865860424E
A7F5CD9AC21C7B10986B3D714BFD49F6DBF0306CED94DE945B5A67DDD8EC188F
7FDBE2A9AD81F7002A27F2EDE3459E49C27632009CFD9CFBB246A971A093D8E5
027D67A89EB217A0AD71E56421A3B1386C8878EBDFF132070DF8A4E24787A29C
5AC9DD10D3BB974C0C92B89BF728B6BD03C5A92A87A52243943EB3E77E6CC38D
EDBB2DB8BE7778936B71AE27A5FA67289DAAF80C0F5EA7D9E67929CF4142CD52
DC6214105CFC9E95B7334F9BB9C94C9D81ACD2DA6F0CD9653A11636472F5845A
F507C8EBA6518215D75034119AF139B07DA441ED1B5D45704665D5E85622B48B
EC700AF8F765FD970E1F82C2659A38F8F63251495D697C3E0E8E7CDEB23ECBA6
03CE654F0B4CB297E3AA3E9EF091E6F7D0D07D34102A25E12F04FC9F4B80562B
21C6D0B8BE94778C7E73746B4845C1ADD96ADA56EDD51EAE4683113F66F87650
90E7AAE59D8053AE0BA8DB3BCB2AC0442D6E7DA7789B74A83724CB18C0203180
8CECB597CFFE81423BC0B3D05BCF9C2F8EA64AC3C5F7CE2DD08FA2E5253C21BF
1C0C1DD432FB523701060720730E9F51B7626597A17CCED52E42690F9808BF40
C0FF302E4E863FE458E0DDE830AE5FF2FD1A26930E14FADD837552972E4375BC
3F6F857EF419616A0D2E3D646143431C318824FC3BC21E55EF5123584D5A3508
FE86CC6FD9A1DBD506B027308CF215ECA53E73C0C347A0C47DE886A1E1F78EE1
8F3B7924E56DE4D18CDC352314CAEBF065F610B00B529D079F2291FAA610FE8C
4CCD57A7A8C9F5071193E20C5358A7495DDE0FBC9B11349A03CB50C3C6E5F571
A5469121D122E16010687CCBA357EC5C1C77239733D652E40DC6F755919054DC
900685CE73A8D5738C2BC3A5CAAFD59260886FCA15CD098A1B0611374A7A0A02
E4EB602399853AA05DC6ECC02F16174606AB2770299A4EAE74166D0EC9965C87
B89B8C1DB7526B19F7F0C20B11FDB0F0656E7ECADAF295574EBED60685F10EAE
1ED416C4346753181147EB065D30A883FD14933F4B11CC112DE73301F7F888CB
67DF1D266655E2FF6B267ACD8E1FD4B60843C4A4DEB96E4C3F6F3D70BD587BE7
BAFA3EAC91AFD9FDD8AA23A57F745E383FF8BB6DC0C752C8AE387F1D4C15E4B3
D2C887A3C469F9DC2A96B15D33FE7C565961C2A7F1CD5D80B4B11525BD2B8C3F
6F760C8245A1AD9F508AF0EABE76207E935CF4233C2614BB02993C18F5228D99
AC686A7ADBD6EA7163DD1362A8CE7A17C1064CB861BFA9277E75B0A8C76AA6C9
98C9AD482CED7C243C9688305E326F5741E280311FB6537C611BA2451F461DD5
2B51651F15E9BE11CB03C9FDCFDE3700BDDAAED61CD52A7DBF4395E223ACFF1E
E359821663C771DF990F78D69355A8C1D072E20D0E000DBE4A0656BE7F021DB8
63F63DE07FBB104CAA97C01188ABA1F0AC094030E2F0216F900EEF6D6E69E994
902A4C425BA976EABF2B11775929B1296FF602F903C70BB29D852EFCF3751A5D
80A8849721E155F887EAF14699937EC5E60FFB3A13AC9FCE3CC664E6C09D19F7
D23F8A75F6D1464A7A8025262B1C95F281E0164473AE82AA9B11484D9D6F8B66
D150591E00FCA26EC8CFB1C926563979CAD433B91341797AC8D4E9842A26D6B3
3DE375C1AB93D839DC4F2D41639E03C463B9D53DF9D649C8017386EB0C9E4399
A7AFD8703D384864AF49F4EA3FE72CC66F826A3A692434D4D3BE6ED6DABA6016
F812E8D85184C463B9F9044091F80D435E1366EDBD597C5085B9AC04EDAE551C
BE68E84519D138C233FED4D6CD32DE3F8DDD32A240FD49AEE908C7972AB2A420
AA567E0BA6781213329980CFCFB18CF7CBE6C7FA3C27329FE9A10D03889EDCDD
324E112D5BEB28766C0B807B8FF1FB8B81D0B4103EBB92A3F801177BDE9BDD61
E288E9C68A020BB9427C07939EB5649DED6075ECFF58FBACC2E7AE26BB9A0546
118C9BB6E9CA78AFB3C7D87A1C043EA301C3006F857EF419616A0D2E3D646143
431C318824FB0C49362FF7408933501D25922724867F1084DDAF1D0BF513B767
87E4A2F56EEF9FB845A2F7E97795A15160D23DE3668AA3D7DA417C906CBA8079
93A9162700BC9A16725D6510F607A4139FF20EAA6FAD50724816D76FE683810E
63BA4E40BA8E5C0A6D51ED6EBCD11B5068CACB85ABF6D9FC648CD35B1E038274
11BA7AD177E43BD16802D27FC2972286F2B152BE1F52E47D6BDD0DCD828F689C
74CE0750AD5FA10FC0E6B5F36EB62D69D698EEB767B4E9FFE73FCDAF8BD20876
DF126296187D1364EB31556C2401B79B8A2E285ACE63FCB0B137685611FDDAB2
E8FD8784FAA7132BE44229304ADC8A686D6732B0207BF2EB32EF468462CCE9D0
CEB6AFFC1DB954D41CE677D750AB42C1067EDFC2807B3CE00CC05F6CA1D87A1C
83530D8ED64611BEEC2A214EED19C0949910584F7FE49B03F896E7FCFD087089
E5CCD4368BEF556A281D166D457F08E37D782E7467A552F704EBEAF9F9AF6A64
9DD0F7E5D01633F0D869255EB21B016AFD3655F66750D3FAD23810392FFC09EF
C2864447914DF3ED2C719753BB1EED9C4359774194896CAB73A2F2ACED52AF9D
066794BEAF0EB7F06C1D428B9D34331BFA9C9A08BD09FD5054C8388DA82C3566
624F6F7CAD4242AE6C63D047AAC8EF82134EC418EA69430C0CFA1EFB2B4F9BEC
48808524500F3A6571A6EA4D65079538C1F9087E6FC665136B7ABFFE8DBF1184
D3C3AA9575819DDF023FF06A5F3B1A51AE4850C6FDD082AAF6FBB07DFB6A6227
A73AA255113DF4821BC5FB991DC6B178B121D38CE79E3AD729E30028E43296A0
548A7C64326F696544F6B1F129A854A81ED65184618E121FCB80CD031A30A0F8
7D7BAF534E49D13772304484CE3BD2A9C4955C7691B72AD442BDDAD18F30DB19
0E4D004697B5BD861801D55698E3D6ECE62CE5CC9FE34A8AAB8E3CB9409F8206
F24A189E57A0B5C178B7326860AF2A334383A1C7028DB9A3509F974F409FA0B9
5E779F2E9093E016D90FE788F6D726A04A5D06B0C05E69A239F52F5EA889627F
19006CC52D9E451DC21450FD3DBB18715AF6BAA336E150E02FB2831359FDB957
92B2E6431DD24BFFF2DB62693EDC9C5A4FA4A71EA0848A9364BA6446D5BD93EE
9AFA29111A71BCFDDA20BCD6006B0309EF0926199A60E28CFF48B79840BCB88B
39475A7E1C6815544584C34DF0E22A5EB61F0C232B03C08B27866537A9CA5F4A
B3D997E3153548794D9232AA20C29B6CF38FC8562EEA94D43B47E1F7AE890D38
03E91CE2738FABBC214C731AD70893D5FAF5B4BBEC5416501276491B79153F8D
F73808CA8940A65E5F0D1CD06A704E946B53768B5F92C841F47646E5CF24EC08
A8FA2348D271D2A84CAFAB1A979AA7E43DAAFD896177F1F70EADCF7E077FF92C
EEE279D1CD8F9B064103EEDACBDC40EB2EF6C28E91A0A1B0D7A7B0ECECEB25B1
8BCBACFAF313AC51BA6360C4F0BC34696FFE3C105348362C617D60BA3678C821
5B9F542D81152BD47EB69563510C525D05E195960D0EAEFB771050039A2F1CEB
A3DB1E042443B665E915991D932209B3F4C86295911FACB51BDAD45965CB3E4C
D451B5A1D6149A66BA1CA971CDE9629C0B16424CF3609285DAEB0115E4A8A145
939599F77990E19358425614D41218CD20852B1969CE91DB3F7B7E87BD9D405F
2E29BF660674457A70FF888A59085E68EB262A88EC25462A4A9EAFE20A956D43
50D8C90F998103A821C35734F0153950E5F72FF6A8AA6940836AB19ECB89B9DA
9A93D028D28EFCB73500DFC2F30D6C47A485B062196657C6B0CA8422DC11C6CE
AAD52991D1A9E5969D76BDE4FC976074F2D623721D38E3F361A941457847C5EC
09C01622C089AB3CB216A5C27D634731F3CA55BE5D1F91FFBA4A232B68F80792
19AA89F699A8C22C30EA308E6A5C8EEB5921F493C8F5B7691CD5C39E936ABF65
80C629A7592A909A4F89FBE2E3EEFC8BB99DF3B9CCE8FA93A71128B87293E690
C242ECD53B604B30AE8D7172F3E47139FEF1D23D2F930AF1B361E2AB0F5B11BA
428CD87225C7FF28FDCD4FB898A052A0B1A3C494AAB27E0C853EBD237F5FDBB5
82FBE603D54C4AA4887AB453337003BE0392AF8359E416849A0B2DEBEF46E3AB
2B8DE7532BD19CFDD69285BF725FB229FAC5B04008CA381E09AB94F1A9224922
B4A5C23593F8765E8124AB49FBC57F1B0A7E8F6FB6C483282DE613E28E0AB1E0
441517818CFD111E32142FFB160DB6422A5884151A4054D6076EF2F506E3DB3D
67A2D10FA038561B4D714B08BEC08EAA7D1909D5833FAB8D6671564F796B070A
2B3717577FF24B2CB8D87BFCCC85B1F91277DF1E391ED325F8383B11D57D9AF5
0EBCF7152E3715510FBF60F16750CF58F347797DF580DA0E0A4F13FBF20B25DF
F7861AC15FDBA1372D5D4D2555A2E8E23E29D8C8C5F39807B5A46FC1B70A9ACD
B172BAB4BC144943B3D3FE06E95C6B69FB006A083E8592BC01483D8DE50B9A6A
C86F872ACFC9489546968514D49014716D5975AEC37D2CCA662CFC60637C65FA
FBE78109CAB35AC2730A761CAAED96AFDADFC1FAE977B6BE8BB8B73909AA1117
B78A5506192B150BFCA046A36DFDA767967A43B3D1F3FC4F591BFE0EA1D77EFF
0602581EEEDD6C8F062E3E6783AD762482408DC1A5E5C900A43B0115F76BDB75
E9FAF644E1879C37A1E08DB03EDBCDA51187777E14F63F0C62F40BC85D30FFDA
81640FC9C58E6C4A95E1027273D38482DCFC5F6F6E64E4D57EB716ECD75C6A6C
AF0F0FB5F6A73A47FFFB9D63648979AD6DFC8C619CE8FE1EEE3B9FE2203DC6C7
5B27035ECC31BF4368E12CED705A5823BF6AC2348B46BB50393DD2B0D8A303AD
186A5DDB0595138C0E3D757E8DB9B67D98219241C0DA67E5BEC040A958B14BB3
D782151402720D5B4C77D25AE31C4A75BD8C7EB02722DA8D89430EC74AF0B255
2C97BFBD1C6C0062488763FDB07939C52A5D0D17AB4CAD27D6776A05245E5663
DB78466EFF0F8E67FEBFA63628520A97B48285DA87CED8A9520D6679CBA61BAF
3ADE6EF9B4205BC43BA3CDA488E512ED42BD142526394C5103BA4718D58F167C
B6741E06D4CE5E269D3AFCBBF060F416C0B747EC5BA54AA743154084CCBF021C
EAFA448258460E39549BC1781B89BDB53A9752A519A9BBB3CC59D3FBE6A84F1F
9521B6E05D0A0B2E0FCEADD4932A5E64E2E417C6B64D84B19F7C2D7C143E287A
BDB12AA1761639E638CE9D89C4CF0AAE1B38A2837E19E5AD8A4551A971DCF562
769FC5E4767C4CE91F8896FD3FE37FA5F235AE1BA3C6F3547FF24606651E5887
FE8CD61F46FFEAFF4A66DCCA05B42F9B762FF8905BAA1B6D15269F38A2D283BF
456D5D8BFEEBCB5B69717F22A0503101F9953D8EA3833BE27127E1C489198821
227C1ACA75B845E5D0C0F7D8416730AF4BE4FC931E965594E03272CE6647F502
4D51CD78D79C802EEABBCA93CBF968187FFA00C2E8D8E14D1017DC8428791C90
0E377B78459F629FB32E5FF3872C95854381F1D0D070EE364ED35377E1DCF455
DFB59E53117FB961AD0BDD708C34E6B895AEF03EA76FE4BDD1BECB4F085845D3
9491FEB49ACAAB78D15ECF938729214C68FFEFCAC997EC286F30AD0245F229D3
687ADCBF4D6FA08D7289D923565955106A2FFAFA8C9F636D647F334B648E11C3
659BA4FA71AB8342608C30E42BA95277382833BB9C14C6EEF11BFCEAE9139B89
256D5E8FE9B80F6DB3179657983AF5CC8F3C7EAEE084A74558304627D0C03A01
2B6CB42DBC8EEF10FC8E83696D58F0CAFCCAFABB836E9C1C7887C42265DD4193
C8618501A7FFCE13919D15CF5F00684B37087F633AB4C7B25FF2D7D54B31D2D6
96DC1E52C828A7A1155E6471DA39E1D47F152AF583CAE41F7F7FE0AA3F1F7DD9
175A2945C257765C4801FB768C6188F02FF2328F7D5B493D274CFA840BDE34CA
C6B57A04D9EAE9B90595D133E0CA2A3AF2DD6D4E50A9FA8AF67CE3FE823A4E3F
9E367C4D358692A287F5074A8C01BA5518911789F7767BD01F00D086DF326D7C
A50C1EFBB3AD48F21DC7670F524682E7CE6FB4EF66525E8F15F63E8A9F64DB78
90533FDF90C51ACDDB5CD7B1CBFAF76EE833E519C3715CFF2AC7C25F0EB8FFEA
273601D1E82984B8AE31AE343F37D03920CFB83E2DEE7642AA85B1615F9CBA1C
3C3197223C9F0D4AC9F585ACD311E1BA537EE424CCE1F22EBA8031443AC094A0
7EE8CC94D559627274D5026EA0DFDE5F67ABF5E84CC6B6717E8B794AB2DBFDDF
3A89648C906439A91CFB1AA195D9F12E03463930D05A3D71E1E9830AC1A31C2E
35BA7B396815CECCA18146C96709CFF862E8552E4FDEB7767292AAD81E5B4186
180C7D70697B73BFADE926163A5780E71276C60EAB7E25C124964778296D06C9
02559B89DA648B919EB362176B83298EE2D8B405DC67F2F888ABC36137C2137D
E0D7EBBF2323C750C674154FC6CA853B13A2D88CB67CECA9A1D3498D569DE012
062C1B959357A2A5903A5BA40F8E6CA80916037DB040BCE705D91E61D6FBF089
4C659A61F005C6FCE1A0E9700362C58C9FABCC46D24DB46E33983DE9AAEAA7DA
FD44C991F74087597F21C39DB6A2CA7C80E5410BFF7EA073A18DC2F6999DB161
EF7DB88DA4B0C592385D35F705BC2A9B1075F1B1568CE34A4F7FC812BF766372
E6F0277D8604E72E2594DF545E359F2932DB2764780688C794121E4A50AA7CD6
479A34E1B75657B41FFDB8AF1C9E3D3CE95EB410E74A1A29DC16D7FC12AA69BB
C23F9C6C4B24E6F0331C3747E378ED0C634370C3BAFFA2F1F9A03CCD801C4E1C
6911750F761F9907A438DDF4506C6ADBAE868F8E3D97C83E366A89B60E01C8D8
AAABC217C07193F92A25135331AAC542A41BAA9D9B246CDCDE58236DC29CD0BD
4C7842713E95F5CBAF73AB6456DF36FF580B2F42E21C6902705307EB16D94092
A85D8BF6BD657788322EA6A7F874F53F5EC3D5A4DFBE35B5911AC6E218ED62EA
FE23AC78C1FD52C0591102D74D3C6FDD1935694B7002E61FC34AA828BDB14CF6
B81946BBAE9D2B044B3F72DD84699E5735D7A8A57091D3709FA9D5314AD7FEBF
0797C5693895A99F6E03BF0F19D8246951FA87CA9FE08235526B59964E529D71
4203D3849619EB4D842660AEDFC5430F81C552C6AEA6BB170154C777A63D6404
15B9729D98238DF0E36467F8AE46C4A0A633D4B3F8CFBD1194BA8E3B5F981868
3EA2F04EE0AFC3AE4DFA747A1706F7FB6FCB5378D992B8498043D00CFC47D2AC
1081F1A0B01B07A92A8282B3EC6B7AB485F98415
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3D6E5DB6BB578C37E25E1B5D821BB18F3C1B381FA9B5
4CC419D954855BA899EBB815EB783204A9E3BA4FD9478C1B6B4EF1F7729CDB19
741A0F22ABA1155968A3B9C77F202F955915BF52FD45320721BFE9B05AD98322
58B161A800FDFA80E6907300DED6A5D94668AC4B5ED7D2565B25CF9E0B7240BC
C29C59A4D84770FD34E97E0E6CE2C8B6B7D5F265BEBDCA4C58DF75153E603AF1
E5D0E387B877E37700D66FDDFC026516FDA258B0E7B327813E9A8F6B24CC94A3
7ED7FE37D7D03026506C2121D098A19CBA9A2B675BEDDAB6513BFA1F239FF6EC
D48E151DBE7DB966043D6E6527DA0FBC55BD73CB60B7AE1324819CE85AD51C9B
9A06A017755B76FB401BB4BCDDBB321E7FF8B2D956F46736031460515844E3F3
3E793820740E7082CD9517120AD87A6097B54CE744E9E9D2621E872E79136F62
A868C28057F9492280EDAAA9E3456AD60EAA4438C73E02B5065DDE064D64B07C
5041BDB97BAB801F8192C6F2F40E7A9265B6B00F4017E8BF6AC817E4F28423E9
69565CC59E621BF056C8EE46E34EE461515006818FAD66C17117BE1122847120
E7A07836D1839548BC09BCBCE399366AFB9494A0A2F6CE7DC133ACE8E1E4797B
F8BDE5D7CC3F8237395F6037F0180333B6DA217C688490F6CEB331FA03DA5E7C
9B6F7D4D91566106FFA457F1244C6B5E4238967370A588E43EA7817D91385012
AE5A91462AF79767E97FE4DB2686E90AD0AE1D1645E399B20090DBB60D0B3F5E
A1A13FB288AC5C3A4A20BA741F9A9E0FDDD9189DE5C3F2A05C77BFB8E86852EC
0BD581F6982995D8A72DAF160394A46122E66F10354BDAECB0ADC7DC3FA7B243
03B3C291BAB5B66304AFB27EADBB293B265B456B933967FA0191AFF200F4F287
D54E1FAFF4972920070A08B877CF048911C80480981B403AB8D4EF624941CFE3
B05FE61A64BF5E8BBAE1D9711F4E4088D6466B65753C25713CF4D6892E5D5C13
44B963C22330524564CF6C39C230A6A9FD57F5924CB1A96482C5BADB4B2261F8
6791B443AD9D00E63B161012FB2DCACE4D50CDC06341481153D90B768C016ABC
46D35381AD66CEBC7DCEE46CC68078DC1BD519282D472C414FAC37B307987274
A7A385044407AF81CFD6C7BE42C89875EB00A108FB0D4B0E5835726C936B0C24
8D56F247AA68F75BF8444CC1E1EF1C16C9D6C649D00B22385B47D1877CAC385B
EBD60D212645715D797FEC9C8A4F0EEF497ACDDEFCF6B67A066C20F6F3E491E8
148E53097817E41B0D34B1C162C462433906C4A7DB04C45FD6C43321E9AFEF36
B98DB6D4EF3853B42822FAC82C374CACBB06A41C5E47E6EE3B8131A8903CFFCA
451B2255F662EC577C9DAFF46C91D9BA8B2EC6DA7EEB8216F090BDCDEF065A68
808129E9307B0A76AF021E7B6A726E136B19CBAAF57D7F7D03093D622D483BD5
FFA311366C61B4EC1BD04F6A4BC713BD6238F43878F7D76E5B07C479D99CEDB7
8D737E9448FEFC890D278828CBF869D7E5273A5E5B458BAF0872FA4CD31A993F
942A3778BC965FA77E479EB4846C06D94A8770D53BAA18B70814AD419E100CA4
64FB091DBB2186BC54EE7E9108D14CE361A96F66CAA32EB92DE5268313F7B00A
9E9D189B3A4518B64253437F3D123BF69A2DE8999D2CF64A45454E401A339183
4CC87886847CA7E9E9F62A77E2ED9252C4E5ADDAC6A6D9D2568BD94EE1E082FD
0E75311AB2102808AF1D13F0C035376D514BF7447FD0E474598D9A9E0663D7D8
8B4AA2BCE51EAB7464632379AF40CA63A1CB91367584B15BE503A4D0FB68C2ED
D4913933DE0C90F6B20AAD700EBCB8D88FE3FE79D8D625DCE8C2D1C325A61F4B
3A05B16E85359FDCDC8ABA3C3335764CA51782A6311C4B341879FB1B7CDF5CAC
46947716943557E050B9FEDA55DBBCFF83A81BFB98AAF235FEC301DF83ACFDEE
2CB0F6D62E0F9643AC4B36A309A67612A000D6B4A66CBEB8DE091DB03D86F5EB
1D75308DC0677B25983E899F0EB0DDE3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4ADBEDE831CF53E69C05D38F018C69D14BCC93B20D730B4
3691648E5830EDD4F9CBDBFF106DA474B23CB8650C735ED33B2247144F40839F
73833141536EB05D19D244B8B40FFCA798D922C364410F36531672695DB1F6AA
8EC52EDE61B738CB32649C98597DDCDE8DDFBDD70EF02E745350785CED7E829F
5B18B621B99B494EBA7C4042809188AD43A6F26735142CF5043B84665099AA89
6C82F22ECCBDBDB5A63297B06E72C8929D5202D6A34AC897DEB86AB350C47262
FF768E35A35A8E10E1743C9BA08A087D28C9FFD6BC993137C87A7B3713976F09
BC62E0B00A93FCF87163199C3E19E8142BCBD60D7E8DA9E0EF30E5FD6C70D47D
31637BC0CD4D67F759DC33AB828E9D80023BAC482F8B93AD55F1D27FC09BC589
990656D0ECA75DFC764023564E8FF99754C8A9B76A56A327053E0F6D96D1C2B6
99867EB10078A6117747BF9CCB78F9F8A3F5D44459BF81997F9E78456FB40241
14DBC1D9BFAD07695C8F35E5896047EDDEA3DD607576110F2C8DA0F6D9917097
8A037D2CAE8BB10A9E09D504E360902F0680AC09575B8AD8AD46060F7074A91F
29A4CA724B988ED42D86C2E39ADDCE27BF753846581C70B60AA5E74FA09332E6
1C3DACF8B6C8A169AD322089BDAF1A7187995102E7581FC4FDB124B11B614F57
DF396B2470522A8AB97B83426FAC81E5336F5CDF1C4BC9EFA3BEE0D63E0DC4E6
F253A60B2B187AACD92D327932D9B3AF9DFAD4E9492EEED55C499106722B465B
0A2DBDEA1DD7A748FBDF3886107AF158F4FC534791CA6CAFD44529A22B1E1E1B
4FEB64AB09507206CAF450F44198BA633D8639980EA7B22089247B9C3CFF1A92
4BB9615DBB6786DF6522B4AFF4D46E8B517CF1D750A865295A80BC736AE3F08D
466D5A4EBF22C2801841BBA0575DA7E2CF96239622983CFA6490CC786A4A4A53
686DE93675EA03F6DAAB0A9B8B811B7A9219AABB3D7CC27EF20C6DAEB21F9291
D178EAB64B0A549C40B98C6533DE1404D27E7C43CB8451B54FD75A8423E145C6
B2DD38E3A1D2D5D051D4F52B1A49FE2396BCD853A8BAF39883AE26133D09CCCC
20849C073978474C2CC58444DF219AABA68CC575A72174963B02BF1B970927C4
991862C824C48D79A4D82317B8991017BDF2CABAD7BD05337DF626A1EAA6390D
7A1F58C1ACA21818DC493376BA0C816868D44B9C4B12464B814C0ECDA4B9ED01
217ED2EB3965FF925968DC08A5D5CE9901E52EF45DE30DC30AA34A61A5E31397
C875F8A453ED29613C7CEF91B59ECEEC38F012092B799274A5CFC1B7449379CE
BE6D5553FBF8AE31A2CC76EB163874D4324BF56A41C85687B278BD389DE2053C
540B8A9C0A2E711C49CE92E3BFC0469F8153A06BB48E0A71B7354AA1253604A2
5AAC856B2BA2E4B54CD28D5F5C9257ACE0EF901ECE60C2682A9267841B664690
A3A7DCEAE09A8D3DFE74FB7B7F4D485D1EB9C25C009A18CAFD884992BE0CA9BF
05FC8A6993D148D2F06E34F90E426C993BB21ABA5ACD59815547B39D4E698CD8
E4D44E024D8791116762936A511EDD7140EF0ED5745A74B9767A31C1D37D2379
624706BD98210E2E61442C8A4BBE3B76CFD1DB11E9F1DDF2DC0D1B7A8652B30A
C377F7452FDD38A7E550960FF54D71C105EA2AC1B7B56F428854BE0E7D24A2D2
E48EB117FEF9091C0B6978531B6090576A279CA8337D49A3ACC066A902ADA76D
3FFA2D9CB609FE29B2EA85CCE121CE7525C14540376C5AAD867096B23EEC5B2A
E0BF74D0FE3287A07C1A6D7218360AFABF0F11DD5AB92B7AF73079071512F74F
1D940A3119FBB08A16A6B05EA00E9241611DB7D2DA38C178947CAD5CC2723FF7
F32AD59E5839CCB992D7997A8E32E9664EA3916CDB7A5F91C726AE74C140A3B6
223C12324BC164B5FAE0E95941D3F5AA1614ACEEFE1F8E47E6756356713A70C0
561833FB009C621038EB4640358CD2B1FF7641258AB96239A779753E74719508
9F7EE2FC3621827A7D03FB012E642FBDBCDFCBC7B9F5F38A4A8E130B0DCA586B
2D2F84DDA81C6DAB7E08A4035ED8816B63FFCEC7394CD287290E155232AFAC9B
731C5F6514FFFB39F99828C1723CD6E0522A5F3FA57D2D3E50AC1DA599C60134
E77C9A292EFAA1DC830E10B7808FD6718105BB67D3874FB0C3CB2D0E96F7572B
E0358BA39E8918E4484E98E0CB6190EED033E552C0DE55B4DC837E7FA718309C
5F1938AC4CEC2B6855D6FBFBCC429E0CBDB067F077B5CAD9D8D826198383F2C1
237CC7638A3AC62FF612E7D729ECD5D4811B3B648E4A13112FE23ACE506353F9
13D55845453B85747DB452F0CC59FDF5220B5EDE973D34537180753DDF320DCE
92FB09449F685AF03D72F9964F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE27995D78FD99C5784B2B7C7C509E9B93BCC29
35CD2714C50B246A7DC70C99B7DBFADA1E01B81749EE49A70853CD45FC323019
A45BCA3DE39C3E7618C6322D264556FD657D9270933D8B167D2575CF146336BB
1C76735F3B09470E40B0624E52F21809704749F6D81E3B829D163D9F61E070EE
D8CA803E56CF227F71EB8061B83E035C7138A7CFB6D6CBAFB766754C0E8934F9
AB738930EB75A2713CCBE333CC60A6A8F2BFDB043ADC0B94FA3370BBFBC61D7D
25524B08C70599D58E7521F58D26AFECE212309BD7BCF62735379ACF3309DDC5
C3F30DD7D3A37804BB23274D7B30DD69E1B2C3CA70F2F79FA29543F526BB808F
04609B43776382C4389362AEA7FE4E03637B4599D176F103143DC04D5B5E53D8
568E7911839EB05C8F4A9E9C911D746C4C8EBC0A4E6AC3CF08AC86548A8FD6D4
7450B1FD87B119E547047F43E9CCDE1C1F8645DA03EEB02B27E36BB6C87F39D0
505579B2D0FF4DA9D4AA971DB4C82693DEB59FAEB3A14C1547C6C46C24FF3513
EBC97357AA2F25BCDC92F98CFF9F3D5881095B96FBB30E8330499FB4803EAF74
920BAFB89889071729076D755021515BD8DE5177013854B10911605F872456B8
F504547AE968C323B85DCAD9AAD5FC33F29A921D427EEE0E098E8591EA7F2D7B
A5CD8A91C01AE80B672831C286C900AD20776B50D4D2004F7295D860A2974B73
A9E8B594BC8BCA8356DB43399E6A6918A887A64B2EEE98060E47C0F371681713
13F92A306D1A7DD5FCA29CE223138B98E6C6BE9F3B305E2E4ECE098AEC270F11
2CADA74CFF4BD78C5DEF4354211E3953CD7AD90239C1FFCA061A21652104F54D
4CE1C6B388B901F937A299F65C3217180D4BBDA87A96F4C31014265EFD9206DD
DDD45DD3F56823BF8236F0E6B94537D9CEF904EDEC7EBFB0E60995CF6457CF0B
1D76EFC8D22A8E991888FC44FF9ED2954B7A9DF5CF6F256C8A86C3D98CADF1E9
24E6C6725EDE1262199758B2B070504BD81147F35D8989D2CA44BEDE6B8BA09F
511388851B9D9865887D4EF8AA7AE6AB234B252A506EA2EB59B1AD40A04BA972
EC6DC7C9E4ADEB7E40045F10F38E0C8D50CD28D96A028BE7C67D1CD148404CE3
0DE9213AC26B82EB823194818E6DE249207343C37BE9B926EEDF21E1D52251D4
37D555CB1FEF227CD15A08CA2A245C3C6508DD3592E809E0C72380B92F4B946A
7BAF34835CAC375077A843F61978AB4876871FBF42DF8EB5F877033452F08D41
970883CD836D1668B85BD642F7F50AE117B3ACD1A1372D5D4D2555A2E8E23E29
D8C8C5F39807B5A01188DBAA07A27A116C80E837DC740E86068952F0A57E9027
C39A603A4886213EC782000DEABF71EAE1B8944E2EEF19E1F7FBF442840845EE
D13FA9B4C5CB1FDE6F0DE20AAD69160BFBDA23C2D29311C4F82514DCF27C6B94
A8E727522E182DAB2869CD2C2B0F39016EB778060F35A6FE085A1BDB04A65CBB
6605D4D72E11338D87D5B0283A4B81EC83D03F502E7DBF202BA558B4EB271C57
922F0CF3980A02A40CEB2FEE42B631C999B71EC234FED7B269E5D91564F0AC54
D70F8EFC63B94F73ACBB4CD279716F68783C493794BF12502E04FC52064E63D0
05F2034A1E7E4192D1193BD94E99C0CCF702D9EC100066E1490894F5ABC92A92
C3F42F4101AC88024884C018C7D0DF65F7CEBDD46FADABA26B5433D34C2AEB07
6031841EA02F1C9622E0B64CD190A4AF3020654123563C5D6ED62F112077A1E5
88A8C8499A8917CAB23F00BC124FD93096D2603BC6C1734124CA3176AB14F488
26ED2E56C67571DB18177A07E082CB873440C4648D3FFF06A1499A5C7EDBE172
1759C1BEA3DE43B426C5E175B059005BF2911E685D076FF12D01742E9AAFACF2
CFCAF0517858C28A24FFEB5A26E46BB5B788713FB8009CCFE62C17E001C96636
A8DC58B71D4BC720F615D2873CD11E06DDB3A7788888A8E713D0E82FC861C0D9
ED98E873821095C6BE6CA909BCEB6C9BB1B0730BCBCB20E22D06AD1AAE225D51
25AAA901A78E86386D29A7CCEFBAA8F35B4813CC9D289E5244483DFEC10FF237
E38BC8E19B81502A19E0BD113AFF02F4E365A4708189A7BDEAB2D32A6E464AAE
B3505AF669EC3FE5A7C9320D907438DB23A82D8CB9777BECA40890C137564EAC
CE768714D7430BE1825C90D88DF40E753607A06AFC0046335F97A2FF20EA44F7
94C1DFD6B105FDFC6EBC6D5745C10D2C3BD560C939B80707B471D13D7A910F23
91FA6B63F2E6A01890368EA8F0D42E7A93B343C664BBCEBDBC0C99138A50E5C0
F57977D929DC9CC159568FBF5523D79229E9BA352E4193A44EE745F76035DBC9
34588B2B8FF44C8368C9C69AD17E91BD78559AD4BE219C8B110472F95FD5CEE1
A7EC2A78941AFD0B102C6CEF9D5BCD4C4FB87316BC327ABA5D5F5FF14BFAABDF
9FC06879D91DADEAA25F850083BE6CC26AE7437664ABB66CCEEA19D0BDE898CF
328861C3CB4423FD2C0C1AFA95A6195FEF30511D5C87876C863364CE4B089A97
6F9C29A14A61785C42D2C746A98194782D9A504B2A0A92D4E4B5062855A33404
2E14145F4684AD22D461E740FA8DD232D18E559DAB50A977CF474EE1410D7097
785D120CA5C6E051D096CC40E931BEB074AA9E32BBFA361593C78D0D2EDCB1CD
D560A14E93017099D24663633B06BBE3C20A2718C044731B6DB8007749D1B605
F397413DF968722DC03BD138B0559D3E5887B7EA9C9C54F8335F55CC3F1B9135
C70CD0214CF04A4EC5AD120D492F25CD6E1E80CE87C5709112938ACF9BB2E011
87FC035CEA0FD5C1147D41630F1CC9B82B395BDCE1885A1D5F3441B03AC321C1
5CDE681DBB192993B553048C58C55F0E420DCEA46CD16B75173C5D37047E511D
C980EBD803E01C35504C4092D93AE476AB15324149043E713261671835DDF160
4B8DA000941FC5F85C754D5132402A0A94EA3D0E37D6B9890461CF1C65AB7C2E
E42288BD17DB983600580BB1513D30983C4FCDD1836FEDC80308316401D8B181
EE2A3B114F68DED3488EB9ABDBCE6E73EC5A0AD42D7735045D594C43A33EA29C
BE2AB98CD0305DD935D8F0F5EE3205A7576650887883B3C9AC23E217F48154FD
6CE1454F09486B47A5A18DE65034D0CC9F9F66DE2BE45C2D6F1AF8B10F578B9F
F66D78D738FA85FC454C23236FF4B665EA0E6210060F6439E9CCA612DC7ACE7A
D12F478F25D40CDF7D23E3E543B75A97A7BC960A7F742A2C89212832C36801A4
C384B89A91D53E0CD886C7BE0692CEB0CF29D9B4BD53E08D9FC1A863599BCF9A
717F4DC319B4B59AF009C11A91ACB087542F94750DC53232E62ACC3C660965F4
5849011BD76FF8489964A7848FC6F3CFA44B7F502649EAD20FD32FA1999CB88E
A646C764BD2088A3EF00A4F1862F2CAE2F8B6A8DB26A1287AB3DD941A92AC57C
EC6D4CFCE0ADFD99BDC3BE161F4C1FBA9B854899BDB7E9D09A1E25A95E9789BA
DC6967F96E550903DF9B81969E38FA3DE2A058EE2076C77C33A93F2FBAECA0A0
EA98FA4C3D1F8700B04CEAEA603A0833E91FB4A44AC83C4E86308B6E89C99A84
8AAAF1BD143560B559176CAF28B1D8B2C8370CBAD5873329B24AD4A743F2CFD1
8B26B1128AA48F72767FF2268BED8317FAFDB532191FA35C2984AE7C50481FF3
126BAE5309893814BA28263EB863D5E6F01C423E6C5D3289B152CE19FDB55A11
282FEEFFF3E262F26041CB1AF30804A3CC34C06C6FBA8AED582215711B0A17F4
1B505FA0B5F906C537EFCDEE4C69AFFEF89B74C5B83E2DEE7642AA85B1615F9C
BA1C3C3197223C98A1ACAA495A6B8B8F1919AC158DC63FF4600FDF993CE8D2E6
3DAB7E352BE200322BBAF6DDD2628694612A7790EA8E1836533738405E9B7AB6
9DC77FE9A283B3A8C6A3651DE8AF71499D39CE0567AEA286091BEA9D6A443A5C
D35747785C433D4E18A02ABA38F55742DC36E4FF07A656AFDC3D0A32CFC097B0
5F9D90CC4B614AE7F58F3BFAF22EE6821291164B14DA11FB16C0E671A6104082
94D05830E44ED3E9908B59DB3B3506C60D3F766ECE69AE23369AAC3B5951B557
D62C7728D6E3F13BE05939C2A6FAA336EFA57001DE299223DDBB333D71003681
B4A816B378AFE37543607554F1F1B427784EFB366CBFF1CD7CD5FE3CB61842EF
56F134AB25DCAD2BD08AE61E233FE6FA79017D1883C61EF0334681CCACC5D024
F39309DDAE717CDDEBF80C88974D717C4539732DAD1226FE504620FDEEEC6266
41060E55159270B4794F9C0945FEAC295D17B4E252D015910B847534A519CFC3
2D52169510940A9E9AD636AE141331BE35D1D5308C927BA3940B773F20E5B3C7
813663D33205454A1A4B2D9173D593615C4459845E1AEEEE1ABCE3E5328D3F81
11610DB32C86FF6F9DBA1B8D6BBA3C4AF64523F37F176F3256E298D22DC5F1CC
F1A67A355219E2EE13D5D6369F656836EE0A77206E8236649E81A1F0E02D8D3A
3C8FAAECF7839D20329CBC5ACB43482D3A3A1E9C3A426BC7FE406E89FF25FEB2
34CCD7F3FB3C608FF37988C7DE6A41FB1020DBBCC762F2BF24BF424BBB2D3207
9DD408226AEAA0C4DCB8DF16CC6767B0BC73EBA052FAA5311407ADDD4BDB1061
3A860B10D2C219E96E61050B98FB04425912F484F5B79B9C0735F92C1B4353B0
76358780D1547206329F302AF6853E5DCFBFE199A76734AEC487BBB103A8547A
0090F0342D48DFF9EA9821454CB759B3D82921AB4B9278E652C2F30A8A121781
8CFD111E32142FFB160DB6422A5884151A4671D631260FB1758BAC67E14234D2
5747F1E68E0C36FEFBD535FA5C64B046AA8835817140B76DC22B5453AE8F3F76
C69B9F10988BE7D061F539CC8711030D2483F752706E27D43E3102CEC57B8A58
6D3FF862999D20CD6BBDB23762249BA7031D4D97DE2280C10756DAC422F0B747
E427E5DB0B265FDD57193B8E7F00C2162FB111DC4972B51E59320793EC60AA3A
F4A3F68AA5E11F657F898F59F67E0D285167231B9F444D42F17CB182EE584117
FC81DDB5BEF8EB957F817C5699C7293E47DAA4EAD6D47F00FC6443EFCDCCACE4
627CFE80E82179579BFE305B9AA1770E8E8970E70524F9F7AE081E64AD1F71D6
CC6FF054661866B68CCC383E5403F0A734ECAD86937D32FACAB6B04F3F9ADD79
94C11CE94999A3F38C88115D6082DECDC2125A4643102DFD0AFCD8682BE5CA11
AABA54285DEB171209CC4CF8879A65088C7381B9029B67CE9029093EEBBAEDD4
403C382D29751340F63D14C45D0C8ACE829FC3034643F4B76AB7BF41CDB0A2CF
B2CFF7A3E022256D29AE0E789DBA81CB4DDE7D4A970A3162D903EDE2880C20DD
FCB205309DA145A55A2C6763E0D8BC8A0BF42461DCA1CB7E613647A93FAEC756
3535886E28292A422264BAEA373D5F1AD84FC79DE23E2BA52D8EE1B1D3F80318
8614D6ACD81856288366086F50154919E5C99CF62A7700E896F5B69456110B9A
8BBCDA8551C3C14F979F3CBB597AAE41210AA7A444428DD055DD35D91A1DD465
3800988005F542BD304D2D1798BABD827BC8A689C3C35078CC3502DEF40DE082
B544B4AF7127EA6D5B8FF5A0735257BE29E36A29B707A51A697A4D8A360D4017
19C5FDD791A1C640D47AF86948448DD00039DB41E9C5BE1A7E6BB48920932280
BC552ECD04E2C33B76A0F6172098AA76CD4660980EFA1C84D5348740B8A4885A
BE1FC79E81913524DB238155870C6B9819E5842664A4049499CAFA7351D3D3BF
FEB9A51236038D4452E44A34F25718B7158C40F12ACA152F1EE78072533F8900
CC3A1869BE48305DA62447B28A45D6F516078C72A4B155A2715B713EC359F680
FCF2663644C985191135F0156722F0BF1DFACDE42BEFD5278ACEC4A55F1A082D
537B3C1EE890A6FD2ECE0EF3999DB161EF7DB88DA4B0C592385D35F705BC2A9C
CD7351AE879DBB7FB52F25A5A5DFA45DB0FDF9B94F0AA69918932E563C8827CC
340AC4350DD2FF1A3EA9F8F3711A16CCE9A37170F0C02A9C7143D722CFC08677
6227901157114767FEC20D2DBA71C87061EE8BF523D591180D29A8F8E14A7959
731A74DC4B215D7EC095EBE86A3CB7C28C2EA7E6A19A68B64EAF236A3468C0F9
453189A1DFA55A9459D1C5B8CDC769D992269E6EC4631B1B75F7E6A511DBD978
F3032D2FC6BD54FD7664FAF472BBF13AC7F619FDC4AD5B38CE04E4C555757F69
C669C5EC403770F681C400FAEA98F62F02633E0F85A780A61DF255239F9BC3EA
AD652E6D5E754B9ADE46841E52DF90C3F0D7CE5DD684566DCF0B43A0B0F975DE
AE2F7601EB63C39D6EE8C54611D9D515EEBB7192C63D22D02BB2A5A27270225E
C95173C09068553725ABA9423F4B268C58072241D2DC5C080E7881848222220A
63605F00205C205B35DA93F4D000126B2CE72AC322B4D962537889CF225B3381
6EB449BF2C28599EB66F071FFCE3410C547A9B74D216032B72854A0B8A6ADE15
EBBFD5CD2BA9FAB7E75099FF1B68329B68A2CE587608555325EF062CFF465B6F
184FB4C37A50F08B2F1CF6E09E92D6215A5C9BE511CF326505FC5EF2B72DC40E
3350D5D5358B49CD7A1713DE7AD5B63F462A77B6268B7AFB245DE6EE02BF2A97
B0542A5CFD6CAF309B7E10ECA06B51C2717DB5BDE8E80D6F29B33E9FE12AC804
AA0C6670967F6C3C2A7310CCC64AB48219EF140A1D9A942543FDE90924C9DB3A
5D667E0AF18066F4318101305AED22847F855960CC952649426FBD46FBB5728A
CA73B436527795BAA59086831567FDD5B3BA6931468115577ABD8222985FAED7
B6A1CC891D07185666E6E74DE886BB13021AADC9950E2EF1FB69E5350B281CA8
F05E2830521A7BE2EF1D993F75619EAC1B3A7A437612AB0E8513DF8F0F44E933
75553EA81965C83F6CA655BBD1410B7E8F600CA820DF8B4BAFE515BCC974BCC2
8E06AC06B07BB7E08BFA5CA8C5EEF8386971DE077781A9E67359AD8E75DFF208
727DC428911CB820B9211D2A3C6BE6A3ED0A5A2C1C623A6D6615F24FED298A68
097564A8429CB235119311B9888D0BE96AC4BFD340BCABB8EE589A69F74DFC96
35A0F5DC489018CEAEB1857D6757F789BC058E42F9E7DEF39AADDD21245E0B80
921B883DF60990A47DA204E69A8A2ACE452DD79826FA99B797CE5714585F3FA6
6C8F36F2FA4550F81E41D6E57F80881B3CFE5D6BFD1F3E8D1F7B13351D44FB15
13CBB22AC8F22AF9ED28E469E2FF07E68F50C828BC2FBAE79527F0C704941983
A39CCB7E05896DE7069693EFC870CB86162612B04350A792BFB5004B54A8631F
85FF8DEF675A72FA6F1703B5114C5E507E856A931CCB05A58C30CF4B9105E42C
B4E3B370A6190039BD94F21DCD05FF887330D1BBD50855261706FE5DA56E84A1
947299D5B636ACE7B2E2E54D514C426F7D16A648D59D3B346732D4328E297D25
70C8EC671F9C4B189830EE8D14F60C0B87DDD481DA478EB8439CD426AF9CD9C3
5372E0A6B90A6A848CEE1E28367DA333B6BD3485EB7A78582FB9373716136C63
EADBAF7C9602F31151CE723849A7CCB72D68F7AEDC298DC4F36D78CBD08EA5AC
1920F4E395EB7A69DCE16AF779DB5B0B1A9AA02D13551FC49C934408289362F2
470B36B6DA4F131753819D477857A53E17D0FFAB7C8A91B883DF299E5EEB9361
85CED1820BC8C84AFE01CB0D62649724476612F057A79C695180E97F6337D3CF
24FEDE2EC799CF7497AC544402C80DC7D665E1DB96647C9654D20BC7BB6B607F
52F09F53B087A3E5284B1C41859808C27C7DF8F1BA9F18E5AA02000F39551C3D
CEFE8BA4312F68701496DA53695CE804B7463204E96F011EE6CA8DB225952CFE
1F34F9E75EC3CCADDFC18C036517987D3138F766C423C3ED87397E685A342075
0F7BAB0FE2A25DED422E0F8F23EC7B74F1E8A369DAAB3305C440A686E566386C
4E57F54BB7B3572D01FFFF3BAFA6428355378CA104CC824F2E571C437ACDBC56
D765E2C7F61226CFC5613463DE449E66980ABE0ACCEFBA3D2977040D8E3EB331
1872472E4CEDB3DD9AE5B2B077C4245513CE965D1C9B09EB63A187C0A357F2BE
BBB9042419A511CFB272AFD4ACCE358A2FB2FA8508290E2C6D80A6AE0478021E
111AC732FE5D804A6C25089ACB08A44D981673596D8A34E260B497E5A36B4E5B
040BF8FF666F7C1167CD675098B616D5A86C56F95714D15C261A3AEB187BA1DC
2BA013A2DD21570432822DF741724E8D187C522D898821B44C90F1159046EBFF
F998B96AB3E3E182E29B819FD861E52B04E008C86E9CE90611539EE7C418A9DA
70C894C59DB05CDC0BC78AA9F2EE39EDB8512BDE50D2DB535CA402BF91895CC8
2A8E3112888B1EEFA597E1623529F8734C0E096F1CF8A2F1CD0A5709AC8CFC3E
BA9A0C45B48925B43CD44B53F928F93C86FA9BF1093DE1422A1AF70F0235D303
D7F2692DE791D9F3B2BAC8FBED7AE0AA0A7DED469C64A0CF686E69E994902A4C
425BA976EABF2B11775929B12E50FAF9B77F9884F052D1DB422D245201FBD646
3F31D19B14350C351418EB5A898BA95D5857F0E6D8CA3BFA45DBFC6C63F79CB0
B5A99199A3AE536491032675C7663A45FF0767FCFB1BACE58B9B77225A134F85
2F6EC3B1A1748E75BB691459DCCCC211E44D10C0CE6B2EEAA9BD199DC0DDA646
CA1EEDC05579757B7F84CF308B047CD4389EFAFB3E574ED7CE8FBAAAEF5E9D12
3E16DB04DDC2F2EF4E5CF483942A38B7120E8EBE9417C4AF1E4E777C33BEDC84
71D498B5988E64D3F957588B2E07F07D84F8FB1D18363226E2140737C6C1745A
028752303923E6D954761EA45B0F04C1A064624C89D2B6ACFC55655633F02A21
C2DDA28F18BCCEAF2AD29C826602033327589A7E01A1E3EB414F26C049CC42A1
07DB8F52DC35DEB4063866DF059F2EB3B549BB128053BC57B5D0FCFEA1117400
874267758887D672CBCA219D2B5841538FE1B0FE8490E4C82DA8E5846FA9259C
25AAF35857B18A048DE4026A9ACDAA85DED842C2A0642F862E14B66919AFD491
F98D85C214DB28335BBB3DEFDB921C86FBEEB0F238F7A3840FD380641178AFDA
ADDBCB87A95E0EB45F47522BD93ADBEA35F1FD33C37C611AFCBF59B67AD80F8F
4D376E1B46A8A76FD2258F0314DA293F61D30028BB0FB43F50BFF95D7AB82BD7
577825454E01412CA3930B382663283EEED30AC5A04E5C5434D732318AE791ED
C71A47F2AB39A3F400EBD0D7AAE0F147D8D2FCB7DB9C8D91A19A2C08922FEC4B
BF2B0C0CCADB597E641054899B9DF267A46260B2E31A75FD38ADF1D15D6A0CC0
2BD9E2665DA9C303BE330D235AF50043582A0BB588897DA22D5C20F8A2C7CDA7
54D7F8AD8F8A00E390D5F6F47CE1FB3E1E056247EFDA02CB1FB6B146679A7100
39E6666835C2D79EC99FD9A2B562BE062ED1027C7D902A23E18DC9412FC4A752
0116DE3E3A0B788C4A729282F1DC31318DDF05BF42F1EF89FACD712EC46352ED
1B976706A6AE560AD6A82C3B0FF970F8A5DD27925ABE620A2430CC675ADF11C1
73EBE194E18562EB1F9C2ED760715F3F49B5B89CE4D14F9AD84983212728C19C
09232F7AE51D6624C8B15D84C4B7B0DA58C3149999D9417CC312E8D87F14AF3D
C280BA7B1C3FE7A3BDFC3AA8DF0F3D5886CB8AEED26D9949014AABF2312C9745
8AD7A361512E05D95A3737194E9447DF03D073DFD709C036188AF869E8D791FE
3DCFC3E1A07E4C32971A18CFBBB502CF3C1C33D64C241B9F161DCA2420CD2AC0
3E542912B987A9BFB8FFCFCAF350197789934182DA1309B66F009808B3E847A8
73C89176E748078A88E0CC7C62913054F9FABFDD9A08823E4FE32710DB207ECE
EE6BA1E22403433D97EF143C518E3BE33F0B75634B03DD8EC622C9E512A9B202
4A9C0EC0CF7753FE13B5B25ED180B9FDD07CC588F6956EA539F8D3D032A234F3
8D362220FD53A6555556089ADAB4DAF9B826BC53D97B466E552B920DC304A252
193F1D935ED5268A6AC194D216CD992E83A0D7A93F3AA16385F40896D4A047C1
4C559C9546D9845455F4F39629920D97C36F4AF1E5E72A5E744A9CE157FD3F31
92252514A465CA900C0A13EE814AF1520B31ED8235C81796D53D084C89410508
77519219B5AB9BD534F0FCDBC0CFA816443196F92EBAED840C491B354C07BFCE
A039DFB0F7E2C38F138EE0922FBDD3D7B9DF6E0C9984D8B63A12D9DC4BE10B98
D5CD9EF55CB212E5DBCA901F57E05BA8B4D829DF4684CB74785537AE1091DDE2
08B70A82F3812CB70902CCC8A0CED4EF40A73FFC266AD7AE02AA5AA6382253CB
2BA6EBCCFBC26B35BA3DF77FD3C2604EF52210F343C793DEDEFB0A2B19553DC3
E70E39A3CFAEDCDDC84FAFD1AB548A688C4F785961326589DF0A09242519D5D2
FA30D939C1B685275504110F23D15D0FFA4E22B5A0CB4FC82C4BB848D07EDE0C
17EAEAB4733D35471A43C4AC733BB92B64091D3187C8F98177AC08A9BC2BB778
3E87F35E9752D76D9E7A10EC504C5FBD990108D3846FE48A7B088541F51D307A
A464BEEB0720E6F45BD57DB169FD3568C8E044865DE7308E8CB5B74DC3402AA1
DE45FC978490BB69153DA6D6161F7FE53CE2C180BA49BBA59E918E4FA36BA2D0
47B3E52E699EE5082C0CA07D5E9A31F28B335C772B3FB6E71E7B82FD6BD50908
B89BA75466127A0DB5F4A5A1D91B228142F7C95C7F64567C9D80D1829D7FE5F4
5647ED6B99C6DF0773B204E643D52B1C06099A4518FD0BC54C4AF901912F9376
A84492BF9B8D010255944700567530AACDF077EB4AD5C54658E35E1A0E9807D3
60DC5F76FE4F4EEF7A02B807A0FA8E38ACEB99E18BD1B2662AB55A70BE52BC87
CB78ADBBD5E0735B99A6E94EC375C735028B31B845858465DF291829A64F790E
760888FE23E05C921096AD39D5F46A74AC94A09D60E190C548172D2E1D8F2129
5DB3EDCCB493A9E4A67EA6C5EC3072D8E15B0306CCC6EC4461A41721C04A609C
E77F624BF3C8CAF224558BD0C004D59938F495AC07199FA85267A621E6CEC165
897D8B6FB0C1C003F982B905BD7D67725C83EF7119C2C4ABAA69A5025AAD3ED6
BA7F318D51CE670573B51F64669225605730E7907062FB3BA362B2AF6C697F81
8EA103F173EC183996AEC4092C1B220F544989112CBD3BC34061698C3BD2B390
0A8A6A0B93FD79ED65110B0037C9B5E51337A2B33B073D9EDA2B181D5A6F8207
1BD5D814AA6BA13A9C73CBF0FD4C582927E6F48151E720E33CA846C5D3328E24
246EA73EF03626CC1C0ADEB130863434670C7484ED206FCFAEF68CA01BECA565
17AF0ACDFD9C0B72F9F9A16B4FDC1DA224656F15133D61C144DF45E747C961FA
32F09B4884979D611382D96BE1124E7ED7538635EF1262851AD5896ACA01B298
9993D432EE93A75860E50BAD4EB082040B22F37E8FEBD4E64C12F69C708B0954
CFBC174255165BF75291EF6E74899AB3A9D824CE570B07CDB6D968A3362AD6A1
6743BFA5239A8637B2FD4D5C379DD8B8347EDBE385E6E8DD109CB455A118F1A6
19D0F5DB14BE3E295284B1FF01C814878F0C177F552BDC9BB309C64C99315430
57FCA963E43D248FEA4C74D488566D48E19DF56331E837562DDFD2B9A20C6445
8327A48F32AD428B1FFD3230CB86CC47C8229176701890900230196C0249234E
B51EB6E52C6840365835E3C5F9582E3BD8DD9E79DB7D4148C1D90B37EF8E7962
E77FCB36CF08F6FEE633DAE0E07696962EED3A3A13C4041ADC5F5200588BF919
12DDF6CFDCB995609788A176928BEB2B6E6000CD045EBB8C18BE053CEE561076
BF062F476691EDAA1FF641FF982B41BDDD559D900C5BA1D89304BB7F34C338DE
DB79981672F5D7278419D03E92B51E62CE40C25D7801C69C3CA98C4433407C56
AD63401DD9A62024FE72ED631BFB1C157CA626EC056A68B66C652833CDCF0880
39A20DF669BD531EBD40F60C2966E53B67F590AD3EA1E41F68DC7EBCD9E9B6AA
F63DB3AFB9D9B87CC743CD6631965AE319D61413D43312587BD2D16F265FD71A
55FCA1A8CB1E6BD2C89800409EB1790485F53C020767B5AABB9C1AE108B826DE
9F26DF59B2995B000E5AE2CE32B6D8FE367BDDFC8B9FC564104A12E66ED0144D
9BC80EFF68437C4F5744027B50DF95864E0159B477B94FACFD9D615260783E80
6D7FEDDC4387DDB2E10EF3FA3985EDC86CD990E46DDB637486F5A5AE16B8B27E
8909626114A5A20F1516783E6083A9639E040D0976F90B757C56EA776FC6F0AE
AFC0B15FEA65ADA0703D3F8956FDC4CE39D27612EC65640810BD7C466F5F433E
C555E83C466B698F5BE76D6F4D553769823BE18EB58FAD298314B8B004B03DCF
D92444913BE1977A0496EECE4FF615602C603E1E1266199E356555DA1A22700A
87C2999DDE579B60444EAA9D6190CC61CEF424A54E62107D2ADA1C19405B9CB4
C44F3EF6A8AA79106C39A9F3738C63B39DD1BC2B47072BFE92B1D14DE9BB73AF
0AE80410C4FBC3A45FBE3BA447A0139F8856BB81184F4256994B5005D654E490
867BBF9FE2F2E7D41FAA5D19294AD7623E060977AB9233338E1B79D44D2220BD
4EF12017FACD410123C239F97E12B2AC52034CC11B637B8BA9BAA8D07CFB5C9A
4A7184FB2EA9C7E66069D56F6579693CB65053BF56062972DE5B51E3BD84E30A
1D0391179FD995E5020FB2B56B488D0D602B6F7B9E513973DF94CC2D37694850
ECE54C80D2CE7D0C3BEA2C2777329340EC29A5F40576CC6C8C42D4FEC6238728
F8BB1AE6F5715FDCC38757056512214E376792D93EBFF478890B8DE836F9B0B5
A6E798354E80D1F3E8CA6184230B776E9BA0BF1ED2545A0446FABDF17C6DE996
6520B2AC0BC79B34B48930980213FA0E2C36D1BC7AF03B4AFBE261F8D4529D93
F2CA8DBCF55453A1FA4D72DBFC97B554FBCB62F90A0A80260CCF63AAE519616F
25D6E5427FCFBDEEAAC67F14F71B450BC562A195E9F1CC98A44A60F7D0CE0CAD
7375E13E761D8D7E9DEBE27755E9076DA5585F9EF8D12FFF1130B63D78F0A56D
5902AB6A25FFE9F98963FC566AE808AE20CAAE74590B3DD20A1CE00D9443060D
79DC3EE65E742ABA451A2E501EAEE3E3812E24DAA8DBD8E81D9D7B6FBE67A34A
71235FF03BA7479A9EB4D699114A950D536C1C44746579957E6556B36EE89D1B
A848F9FDECC6604E7D488ECF152B6949383EE7C7C95D376D2C48FFEA0D825AA3
CE8FF2CDEAA927EEC19F99F67B642948FE960344AAAC1F7663DD34540F0CA316
20868D9032C34BE24CD59ADCD6CCF4D19716E82ED1601C7627DC1A93A9046F00
61D3564D2044E9B8D39239A2044B1C0EE6096E008AD67226A9ABBB491C413AA4
6FA5DED522DA2A5EDF409A3EEB5735617E77A7A77CD82CCEF049A97F439393AC
4BA9F2B4B8E959E8877C908EC152DF4A9BCEB4DE7DF3FB85FBA15A1D1070FEA8
7E135E5ABA5B3216B772316E03AFA5A27E6F5EE3F77F4CAF41FB7121155B13ED
556A5A5134B85CF61DE04C9E9FF566F2CD09BBEB1FA1FF7EF8999DBA1B10FD88
E772B3E0E13DAAFD896177F1F70EADCF7E077FF92CEEE279D01E357EBC88C3F3
6121DE0957AD1610C7FFED2F5728DEFF0F93D479FFD5CAF4D703926F1BA042CB
A121403FA01EDAB3E0E96C71479FE3A4A5CCD867E5357A9C218E26F2DDB61CEC
F668D3B57D6EF154E44DD2822D40E023A3EC59C5C9EB75F27704912DAE6443EA
E098DC77C52DC288A2E5F1A7A225BF26E2AEA0F352B9C950B47ADF650AC761D6
9E7127AC4128988F493604E1BC8DCE99225BC6C62F8545E290F3722C395B2F0B
03B4E05F14021486C02CFDC6D112762B8527CBE3381953B0908617A28D2D6A54
85119D2B31A94BF39948D4B3688E588AEAE48E2D6A27F302498AEB3445D8CF8C
EA7FDF03568AF44E2EE4D8479BD62B3CC9ECAD676580F43F0DDB4CF11B602B9F
49BD4D48F3B93043F3ED792CFCF5AC617DBF2FB8C7A3E2C704F08BA994239C97
16711F492F317C6BE4E3D2EB502EEA5A85EEFD4DB4B9B2E9C804FE27C8B6EB69
128E5B705F8B48DD49577EF2E015E8D9C0F64025C76E0550BAFB45D4EEBFFFE8
10F076D00710C302B4E5E8AD40D6C3D3F556A20710BE57D1D1F58DF8A97E7C41
1AB7B0BD173C6E4825822602693C071225D0A59742608FFD38593AAB31CFB25E
01E9F870CA8523DCDF93D57CE57C1759F393A5A71B51C2CA3E8D601A4121FAB4
199883C9873396EA151D9E4CB3E69641D3795AB67934B16BD1AB63701EDDFD72
72117BD060711010019A97B116AB929E54C97C3E7390AA7DAC6B285A4CB00576
89E72DE1D7D5770F0DAB5D15A88FAB1C999BD8C391F4F045EE1155E8E99331D4
573A194D84C7B6487A232F85E82EB2C9D5C2056F4B7422995A9C662760414C01
404043E413839CF8C96D5618AE9EFF1F396331208B8544B26995F07752052A37
B5A18AB3F44D40849F4021CA494EF6BCC76BE0D8A68799EAB8C3ED2FDB628486
8F20DE7559A629FC0F98AFCB0990E42A47A7EE273B8DEC1FD2273F6B91576B1E
2762E875B9AE76695B44F086392946A6E7EBC4B4A5F133E7F347118CE7C1039E
EE6A9CFA343F0C8B645BF1A448C06125B353A060BC0FF3F186334437078CA478
D918C39CE66D72D901000CB57B459A1FC7CC2DFB847418BFCB9DF51625B59ADA
1619B9898070C85B75E55D23FA19AA91EF2F930F5C88B9C1F8171EE9CD00EE63
3CBD0747DFEB54B2D13683A18DEE141F7811DB6B92BF533DCD9B045AF4FDF947
700A630BFD6A5784A1D98D00CEBF2730D812FDDDD016B803C38B8923866E5B3B
72048904BBD47D276D475E2FB51F74A8BE2E5D0322FE45A04F184800733B1344
0F514AF796BCDD8590E088ED9656B074B08F2CD31FC681245C724A8E754BD9B6
34D0978C073A1C110CCB0106DBF37D3D6257B109E9C5AB2FF276010D7AF73812
3415E277C62F8D923A4F242A838C6B52EF296F939F20BD4C4DE790CDDCB68CC6
70E9A440628F8FC7B19054CF4917BC54655EBA7CAAA856DCC1A076DB74BE5191
EEEF657F57B67B7A30F19998965BCC86E003A60E71436E0A85FDEB9A467F4426
2EEDB54A04F8D32D5A7179D025981DB0F1AA37EB7E091123B1B0F2158A098CD4
C026A95D677617CAEE4CA4B282C8E5F07EFAF7EDF2347DFCB070CF8E3093B06D
0B80CED64C48B1C4A67EEEBDA6F360770054987AD65FA54A1BD686CCBBCDE0AB
54DA1A6F332BBBD2160632D7AC1BC024802CAF0F8F45B3B08141DD5CDEB790D7
6C36E9CBCA5A92CEDAA0ADDFF4C3ECD7CC083D70252227836371FF8383892218
4260FB89D5A9EEAC9E6E45632E21D0C09F9B758D62D1E7D85A98CD8D71BA01CA
74D342A75088082B671B45811C58BD3A3C1B47EA135377F86ECC12B42AB03751
183AF4A23A6E5306072985B6B7FFD152AF9EB2A58F1195A17CCED52E42690F98
08BF40C0FF302E4E863FE2EA69BFB3CAD4DA410E69C542CAC64B65F6B829C08A
4F5569954B34C69C09F6B2A5FD58037D23055702D82792444F53D54E8B18DDA3
B40B97915100352778D3D36113E649746D0F1FEF45942CEA347D253E10733C2A
ADCCB48BB1603145A82BD558AACBE2337E87EEA5DC720C53EB7A960552E683E3
9F8464076AD8A441BFF7B95FF8DB779F59FD2EB7F18DDE8C00317AC6EEAAE634
6518C73303D484C6E9A830E9148B0D9987F1BF8FCA62A6C6F745E4560D07FB78
6ABB0F9A79907A37B4A5F808BDAA369907DA0B72243748F7A097529B9C4495A1
F67111358F429F9970E29CB88A14156A2604D9760555130E08402660630A44EC
BF6C10B51818BC6D3A10DF14058F90B9ADB7F3699554784159F96CFD9A9AC474
51F4136DBB0FCB738B7385A014DEF1F55824CD51E2BCE3ACD4CC88D214546E33
1BB6625228F3994FF6FA6127D330658B85F88B74E1F2D90437D6FBCA0AB3049F
E4C6EC386DD27A95288054BDA08619B1A119A7CFE84A9E9D84558388AB4F4C1B
C2AF4DF194765FA36CD2EC0CDB28866065801AD16AFFFA9897485FEE2F102F86
37C3BC9598A1164C54C878B02839FBDFB30634D3F005FA2C42E085C3F897F0D4
9D1161EACCC4DE5819A914EEFC4BE55ECC5BA2A7A3C5BB32EEF0CABB86087F28
FE268CE4F7F89B3BD508E371B2A78B89881D1E6F9ADFDABF944146B3B7D9CA45
2453C825B92E606247E509FE6891D32ACA3A0D44585E55AFD968135F6492A938
1FA561B551306236464E9E509282CD12A5D63166ADDB5CB5AEDC58B71D4BC720
F615D2873CD11E06DDB3A778888F737ADFB8EC24B0F3B41C828B96A9FEEC29F5
90EE857F3D266AB284767DAFF3330B7E95B2DDA1814B058ABCF2C2B3364CA33B
D7970142AE10B7C80C03876B0FD46A5DEA7DDC754E1BEE6C8EE443D62AE6A2C9
A48EFCB71AD5A6D8FA93BD49E7FDC803C2554A8CFE209D1497290B7587F825E8
B8D5663B9318AA67E31A74C8D2D91FA75B5BFCB712ECBD0EB1E07CC1B7FA1F4A
6906E62E5E1E24E755FDAAEE8D7B3B5B34ED4B145F7929825B940D9ACFDF5EF3
07F9F5C3D9E4ABD3A07553F18D86BF4B6DF04DBF7202F2081DB253B9A323629D
B9ABDE827E8737D8227D9B3048D8507E80D19F6C299BF0C52073450E19CA2940
1B2D22E3BD0A364F4AC9FE64C0836B09C674422379BE258F901A0B50141288B7
EACB5C756637C9164BDCA1969C40FD797CD026EC07C07C8D2AAAF8C726595AFC
76E4017237825DB5F7B38287124B1DF043B0FCB632C67DC99A1C4348C3109D06
71951505993DFCEFAA29D9774B68E866ECE5F073B6F1F63A12FA615998F2099D
8F2ECD88E78862CAE0352C4332593F1923A251B1E05021A8BB466F71C06B8E74
1D5CB332EF1594D4D88AF1A3D476406FF9670A513BCF04CEC4F4AA53F3E5E7F4
ECFE8C78E742650FA5D878A7BD6CAB59BF0A05A240072203661C62E8CB19072C
A76705E8170693E796F5B69456110B9A8BBCDA8551C3C14F979F3CBF997E7524
35B04A2885E1BF5F7660FCBD590ABBA7581E5626FC0C7682845F3E4266B7D327
312EFB770916FBAE73CF8F5DE4CBA318052DEFF17F648F76D3347EFE165E55DB
CA92E454187EEC90EF1042DA786C6234FB98DB85EEB29B46EF5DDF9B3D21432F
66E1F7774D9D4BDBBC9809468996306FF87344532D03124A873A277D0CE8C58D
7B1F9B851BFAF13327FEC0B3B6A78C90C52C41628B8E1772C8D6CB46D3A90481
0C8A2370F4DB0B95DE9F7CC1875442FE6B6B341FE71E4A756B1388139A898B65
1D7A5B6B3BB8F2E403EFEB2E3BD728621B9FDCFDE691BC8A235CC340643408B2
CDC39081E36984C6535A4650B52D527A15A3D0873CB6BC134147CDBB2844782C
B64127181E2A06CB4FA88AF922E0DCFDEF73874320ADD4AC1C12F5FE98DE2420
B3E3A28D735CDC6DAA8E1A598B5A151B6DDBD0D0A90C38BB1F69F69112D826A8
52C909AD51414E7E37BCBE5843DDA4C41AA4B42E0D249693900D34AA106FA314
D5231540F537EAE36C576BEE6254CD2349F3D69C7055A7F4CF873BD47EF5A468
61801AA70339B5D7A9B09C75A220568BE60264AA4469FD8D653F48B3A4D7DF92
9FFD88F15A1BAE76C6EEFC79C130434978A898EC8C4702F89F660AD38ABB9AE8
11E6C73E3DFEC91D824F9FD2C73F1D915C9CB74B1DB734A10BA4315C33D5F9BC
3EBCE5D8E8EB108CA188CE10DE7EA7B13487D4FCEDAA341B720F5AE7D24058DF
483C647F694320E78953DA5A08A8F7E99982084F1533B65ACE0E766EED25C22D
4B7752E461D1634D57CE39D8E1DB5CFB4C451D34B1102ED43AF5EE50405693B4
5BC96AF80597F94E68555735A8F1EB48AC809BE050BAD39813DCF287E7B822B0
94BAE3062E6E10D5505522338C8FACE403FC4F3019C58D8A927B6D15C0293B8F
417DA7D574D83165C98E4FCCE1832E6A7F47386A45E5EBC9E125A002A6E1670A
BBB4B3044898FFEE955E7C8A927D947E18E7DD9DCA76378C0AE4D2F2BEBE3923
9ADB477FBD2B0D86B7025004216EB28C7392B4D5B2921DDF3451A86AEB413411
A7976AE07F8E9575263C4C2DAE8E5FD3CCC8747BD12E63220BA3C3F3C7979128
EDD4F9537C4F0E870DE54D18F8E1B3574B7ED6CF34EFB8455C231D0F83DA849D
C65BBE3920ED48F2999DFFED7C736E945F8453ABBCA099EAE8CEA005E09429EA
602B0D2C1E4F78F0C3E0845F31B2A26D70E120019478654C8AACD179511A766B
32D2B9FB28B1B950626B8D61E25B73FD1A9E54BADE8F858094DF755F2C31BE81
7848C9EC8D98FD54FA95EF36B456B0FA852538DABD9B469582FAC2901B629CE4
137326A88F6E1DEC6634D08F44F23BEECB6E0DAB28979DCA9FF1E7B3A9E1899E
303B3E2CED446F5B5130189570147B9B69CC74247838C9262AF28647D31AC19E
694472A215D2F495D9F2B2AA46D219B56C6E4BC52515C87B5539303F30BA776B
0D6CA1613ED40825C75260C7BA8A5A0847661FEE0F6B879F59A1FBCC751A7D63
9E32C569B568F112736EC85AE935E17F24A0067A893DFFFD64DB0BCC9760C91E
86284AA1980B6492CB0ACF13DA5AB57954B914ECA637ED4A18ED0A942CB6CF32
C5C5A258F7DD5FBBAD95569477046CE9B948B1B6E4F2872DB1B19899E4BF8525
7C42A6ED10B280B75F29999C7A0E3AC55C7435402D28F2E84D2EE64475E8D307
8192F37463DF15E7FD87D172622D47714FCEE0E1A00A43D254FE64BE0E05DD15
7E37A6EB7BB45145DFB3A298C718416514400EB47B86E2FB3F8777BA26C5C1AA
E13E5092E2695EA58DD57A4EFA1A9B602A6820FC779E72A508E242A05D015A9A
32809DD51DF932DDED7E628AB108A61F2B9B09CDFE5866948199CA27C1838AD3
9A62587A2D7443368FD6795C2ABC2ED198C21C8B2AF6401FEEEF9BB535B3BB2D
F00419F59E7D9B9BA37245CDA57B8F04EC56FB163C13A65128994D74CAD21F2B
A384708FA64276D900EE843BD07D2209AA7B1D13D190FAC2418300AEB3921E11
93A47BEAF0D9AD677703A1ECE6E93E956E13A9C528A198B8EC8654AD69CCB5C2
09964A2CDC11928BA4BD9F1C63B57E0AAE912C86CB6CD5BBDF8080B5FC839CCE
9E2DBB0220DC5D37D70AA6564CC6C857CD4B446F2F5B45FF242DA4932B973139
F328E7E9282CFBF688A80AC3CB19AB4DFFF39AE4D2918F2F1BA6CCE594EC6E00
840C6D8B1E72BB83B1FA8BCF37ADD8ED5D742B7E9E32B069607E2DF3CBEF32A8
490B9FA9CDD72ACD262685F3282828E93178613843527E859F21169642948619
2E1AE5A5B5EC87675B021FE9D71441E352111EB6F2319AEA0AAF7AAED4A85C93
979445E8D1E5A9BDD3B7239BBA42428460AC283786C0E4C0F45DA2C8C78EE357
B6082591E896938B584450D9E008CDD0202DB1B3CEC87D278823FCBE7C4750D7
693E51E88F1AE53B00A20CE1588510B97F7BE3A270405594D3E06C17B47719E2
6788A1F42F12BAF2EA2AB937056D3B806BA7F408F14F24DC0B4E53EBB08AE39B
C8B715A541515BA68D3264DF633E597F837B8318DE7C223C704B2759BCB42720
5FD7F4C3DAB54FE5BC3367497C95A462341C8707177AF767B8385206F294CE1B
C740EC90A0764E9027D61CE5938B121B94D1D58A9BB32EF6AECEBE77D80BCA43
04C3DBD06FA56FC16AB67C7BB260937BC426C835D610D7A203D903D77382ABAA
89561C37924764E3A077EC5871F352CCEF1FC6534559D47C3240B0D4A30A382D
ED5AF585C938A807087B99058C8B8EFBA9F66BBECEA13733037B3072C48A4962
3C9D933255633A6EE98B2CE3B0D8C1A90D72D4690C56F4BE860A2B46225D1784
698203C4F0EBA2C58BA4334DB33FFFB35AD715BB0DCDBB2D35B51730CB8CC9D2
7B104C3F5A3DDB5381CFCC78F31123A59E84A773A3D8DF2CBE36B22710938B33
114D55099F0CA84BB201CF647BCDF3914AFC8AE0EDD3B2A799A6FA035D98B392
3483A529AE24F3FBBBD9947BC5A800F9DA6B7BAF861C673B44D091D207587E83
E22207DCAEE1D18C7A5A482C1EE719E312FF9BDEFD1CADCAE9F8CA8978788158
CA027DDCC50FDF012FF6DC6C558739DDEBBBFF6170BACE74C200413D60E849D3
E9908B59DB3B35C98107FEFD347B51C9B97E5CDB78E93975454F805D3A4D180A
4E5623033B767FAA365ABD7BD51CB456BEA6F429DE219119141D7B41CFD13554
E3090681726C4D377CA89ABD1BEE3C9BD84A05DD11CC849E903806F30AF37522
828FD5DE3EC220C719B63A96972F51B3AA708541C4671738A1E0CC16CC401640
5B0A28727AD31270BA29B2C656B41FAF259DA36A62656568B3C5039216762900
C1A624AACA506DCBF9AC0D226D72A8E4926D812092E92DA4D04D0895B07B66D5
344986A5E691140BED98C953283F17A3CBD6BA59A1AC2BACF1545A73CD88A995
C71A69F35BD0CA4542824B1F4329D051DA2F7EBA5400A1B90902EFE6792F2071
36E1E16B417F649CD01BAE3BB56977F0E8D21158CD18F6523CF7B630BD5F65E2
18E892C350FCADB5F66EB82D0813EF551EF4E2C313AC9569CE318E21C11AE858
AB0BD573C2E4B6855D1BEEEC95A7DC4044F60BD2A1149862434B7002E64A612F
31162344AFB0255A91FF7A44F6B705CA7C0B29FB8A98019B5DCE5BD7A774F8DA
FD20F05C37F2EB54F2D00C2ECE44873FF17704C4D368DDE2B930D4CFBEB9FD0A
08EB239AD76BEED158DB3BE2DC4BA1DC216B2D085F23A2AE8A5A339D8988EB92
A5349043DB7A3928EB7B19D3A6754CF4686BFBD66879769650099A6CF35C3636
F99C9DAB0CF27C1433A5B21C85C42294C5C5DA468B5307F0F1ABCABAD9EBC22A
55727BF40CAB44696D80CF4535A1AF1E38BE310283619DCD7B2DFDC9DCC81408
4EDBCA0E7C0A985CD093AC0BD5DFAC3AF0C425C270647B327C8AC1306F84CB56
870EA2BE9D0B1D1F3D34CEBAA0367ADECA2CB7C11DC4C275DB0A07C5E530F886
8C534D966D409A15DB5AFA78F7FBBFD71535FEB7049F203B46F9E30445A2896F
0C0CBAE61187AFEE73F1D369ED173F8C4EE8F7F869376ECB29BB35D08017FDB6
7ED9FD13987E816E560C69050ED2476275D5384CC384430A2282A489825D352E
91931AB233456796F2AB712966A45666F8153870E2DCA46536EA67FFF92B4BAD
5F8D20AF9AE73DA2EBF3E6FFDD06EC512E1E3DCA950F0BF9AB2EC9F5B7BB957C
D0B4CD1D31625B095EA8C29531809B80408BB9B61C2C2B257C3F3FB0FE3C6A0F
9989C65473998758CB8376824AAAE607ADAFE8D8460FC48FB39C8126488FA258
BA9735BDF4DBA7011E44B25280E0D55FB56FF4E234A7D47E666DDFDF80DB1BF5
E73B33A29B7B447820B08DFDE19B1144174995D179680584434D8A5C8A425545
6DEAD952FC21529034AA18227B4F8A4C88659CA617CA10B64B499E11E32638D3
50F86FA328363D1B4FE236DDDD5D327FB8D3D490CBF46A09BAE5AF2334D5F766
F52626B6321ED562806CE627529201F1A70ED484FE92F0C684F4A043742EF1E6
543DB5D8D094EBD746F00D4870ED44C4245243EDADBE1EB035C42C067B09C7EF
4FB3B136FE6D1814FEE7EC0864080FACFA56E1FDE940835580087C6032755759
2F512686F02CCC66343D83CA952DF1C68576FB4205465DE8171F1DBAA1D9E95D
DA35726C1297991B5D066EA5AD28B3B4E057EDEC637353C7D47BF41FBEC8804E
931EB46911D35870C88509B392E1B931F0E402CF17A2E42EBECA4634F060085F
E5EC3F1666585B4F1FA778D22E25FA33EA39EF3D2AFE93493193581479A70FAA
733BE555C8AEF37D9872B22CD19ABFFC0468B2D448A840F60D8F56D90B90C3F3
C665E41CBBD9BE223629132D9D73AF158765EBCD0BD1C62E95F659D68F0D69B8
5BA188CED5131C0EDE4B8C30E1F06EC82B82F60534847BA94964411B0FD9E306
2F4EBC4405EA4B88BB5F97F04924E8CAD66D15C5F45D0E78BF2EC3E236B95EF9
D81C6294337DBD8A164B0FCBD81E03089865561AA47E9ED72CE2DDC6013049EA
647640BFC81F859A1D342E694DDD42BE63D07E64ED172B485B8E112CB3B2F914
00BA184A8D68FB7CA00ACD890470AC300CF5741B7B055F44BF8DEDDFF05D4C29
6513355282B2ED4A891389ADBB5E2C2A35A0AE33581C3E03AB9EB0B44EA711E2
AAD16B3B24C608A5AD2E75440B4FAD19E6C057BE2F7EC3151F50BB9D5C0D6ACF
BAFA134AEF156D574560980EFA1C84D5348740B8A4885ABE1FC79E81944FE0D8
82621F41648BB24DFCC977715E91B28FB3DC5F4F236C5F077DE5916A5E457123
6CB05E25C0B681EE2CA69434CC34EF0D0885ABA3C73F1D78F811430E0A4B5FCF
9BB710BC75E0106F5F94BDCD5EC3826DA19468F818501083DC55B0758CC813E0
EDC810F88A4B4CC91386C23AC7C3C278BB858369D6D37C8814620146E27E3EB2
B923977BF14A36F7C6CD3036C8A458B0206B8ECADB543C32BA908D26B5CD1069
1FB92BC2FA54A04EB649B111648F07B798D11587B9747BC0EB49023DFC9947DE
3D2587C9B337A05F4A962CF1C22D83316A517000F1073FEBDA8601E0FE9CF57C
6AFB258F73816CC190CAF25D9965C9B19FA3486B2251BA5739F9B229E9C09CF9
428E7A63180EE22CD43B910C9CC062DE49266623AF9AB4BB367E9261A67C0021
B9D29C89BD121E69EDDEC575B281609ABA395F65E1A226D43021EFA91619589B
3D213DC74828CFBEEB5F034ECC85F78DC9DFEC342E27A763669EF26D6103B81D
4D4963B96902F3A84599D73EB3303D7B74883F763D1E88BEDF8B54AFD478D9E9
39D0D495684660541CC687AE75813B0EED37BBC077BA859B9D7D602DBC212C58
16109CAA85E7535243002B3C3264CF573DB6FB5CFB0DC275CCEE298E96A59755
370E746320CAAA9DCD5DCF3BF8469EF0B85800ADD0A308C5B83AEB4164DB120E
A81D5EF7E2981B87B73D560A8E6EE0BEE3408D38C8E6A0AF6DE926E72751B7B7
3886C1C0394F1A561EA185C516EBC01FFAFF2326B40E27E034DC75E7E797B53D
EB54976650258CB7D25BD0B8DB1CFBB22C420D71382C7E50485C3E8B62E7C32A
29313EAAB849169FE98FF9B3CFDF337CC0D15417762825775A80924429A4EAA3
6622D23162FEE4F82603E21287761A738634A25D56C898E1E40F8362643F7FA4
217D853967AF5E3659D9628533AE56E65DD6C4550E9C21BC719C0DCE89FBB23B
25B8BD6276ADA4ADBE45E44FCB6708F22014A1028F24E6CD6F9A07B36294755A
19FD0D47FA4B70AFBE58AF4F2695D49DC8865469CE182BA89C9BEFCD87DB55AA
5E0AD1D2C398A2780ED9C271EA7A458EB6620FCBB0A5872C27D7B74DB62AC7F8
8AD0BC08539BFEA00B80A262A1D45C835CB096F1FABDFF5C0CC653373F102E39
529212B65E7565AC5AF02977B58807A874392E443C9867046F4B020955E1D3C7
D3B4033DF59483088E0697E444F8698C55D537D25FB796938D64E51A1017DB91
9CEAB585B907BB47E6B700F7B1700FDA55453F0E5D6CE8450B21D3AE71B2C39C
A75F0EABDDE757F9E2781F25A1CC32F8D30D9DFD865FF57A9B302D37F16E8F25
6567CC438CE60F0E21E28BDFCF668E595C88EDF2D3BC8D252111E8DB45FF21B8
4D20BF831B0CBC2E9B04F956576C1727656A7B5562B9EE7E3C2D107E78AD3393
806B86F68A2B24998E20AE7ECB82DE000562A5E3D494682B8FF65D3F598F41F5
1F1DB90AD895AF22A3A9573F0ADFF57607D1EE51B084AE9319C95757EC43B202
279E15456C72C9D5D0A44F2547C832BA3D99156C2EF6C28E0385E17E680AD553
E283775875126F2960DBB653DF3C8BD16760A91B02D5E8D679C227DA8E320E4D
1C61CAD4FF35F5419CFB55B68972EB810AF897C0C2BCC17BB81FAE3E5EE64C8D
835CDEA64084E2039F6F6396A550734A6FA75DBB849279484E894C0165289333
73F49DD254165ADC4C980F349927924B24C1112097012F7D3A005133233547EE
DE16EAAC1024DFA2E161FB636CE1C244008F7B2B756528F96C21EE5D4D358A26
7105E3E1FFB7EE0DCDFAD9087B161E74E4B1F38E4E2B8E6B7000386CF5E6C128
A31DBF93F0566A59DF25AD24664C979BA1EE9DC972DDFE5750B9009F87410614
65C24DAFD8EC1487646AF7FA888F5689FB281BE5AB48A4628EC39C97169CFD29
C70C899E14087CCC98F595F2C64AC365C8AE047BCDDDC054CB3867AF0B7E340E
3981CC10BA076A73CE0A869DE9837D710A56F1A2149B53BEA91A5C1846050E80
646EFDA7DA8A66AB020E97AAFD73BC85B6D00B43218C148C2FC26E7F7C2F368D
C2FBB2303E5FC195A9292660BF89FE798B0A5928F7CE466BBDDA8186563C7015
6F85EA00525372BDE229F1BC277751454170B6DBC6304E5831517FF93411F08B
5F5A17C1E554F67E8941ABBB66FD2774B5E40EEEE9FFD35C163CCCDD970AC391
EC1A813C4E497D1E90E7A0F10941DE0F2AC2D901074A76E9CABB98816531D198
3A33A1BE7394B42FD72BF46E48825E7DD882ECEAE1721C799A9DBA12E901F630
BA506BFC89F465FE7C2844BF832E4D54880BAF264A4431884FB237D189289C42
A534F59650E8320C39376D90BA203902211FE6604E9706868E3BF3E6247DEC4D
4ED775D6ACE9F691D6FF2E3E78D108E4C7C8175C8237BCF5B4CDAC49123A23BF
69C4A71F63B6B2C61548F3CEE996CB26E3ADE9D4AC830A6844F1A55BBA01946C
CD21249BA513FCFE1B32DD6C73D8BAB008982E060B569083259B284E8E75ACE6
814BB2CEC38BBAE052F32E53421CE0513DD30E9E3232C1C000CA13E1A14F0D3D
00FF758AE9A8D9B24A19D4E71995EEF85AB528E8CDC20A1B0E03D4A51894ACF5
8358B539FC08A261CA9C097ADBB35E0F1641F68296E8EA10A86F626CDAE9231A
A6A51A3F2F0C7C8FD89787DD0DCC0C8961D72E55119A0FC4A9CD6696CC575D46
3964128BF1924AA44581019BA263D8B594DEEF63603913A2AD866D6929DD5CCA
877B30CCE56D7A21F8358D397F32453ED04862F0CF889F91EC8F9C6A0148D302
EE52337965F1F60FE57402689161DED89001873451BB8B353B7321402344207D
0BB5A35ACB718602CBA87A3E1C555C0B9F47DB9287A12F7718EBFFA684DEA9AF
ACDAE0923CB4CCC5D1D9404A1801A9A3F6A25DC77FC7C6B95BFFCF0A1DADBE97
7AC35AC687CBE49A88F238670B158CA1A131AE5E966D8E84C66B0C0000574E65
D5F8B35CE0CEAFE43F3081E3DE58B8915CB94FB68691B850C169AFD69C818410
378FB8AF94FCE22FEC58DE0C126F289ACDDB1DF965012667ACF4C1DBDA025E45
82309E51931E0A17E510857343037D373A2F9133C1DECB325DD34292879DFB03
5E41C8C36B1C8F220DF94122B06B2E5FDF507EC02CF3E103D775B42CA507DCDB
3B6EC075F7F050660F5E956F0F488DA2EA2199E71353F55D2630B595C164DADA
967CFA1591C96D648516AD0B714B5908E83FC5B0BCCD0E3381926F4159FCFC4D
10657D2B5072
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A31644BF123DA78DD615C4287ED7DD43B6
79CAF0EB2F9F428C431683A41C2C61A429E3DC0D87D76AB6294CF8CC9918A6A4
6873A1769ACCF25B59CB4365AC451FE1D956E1254970C706438805E25284C7CA
AE679F2B7C58BE9909CBFCD273EF5617183CFA64757627D2D567877FDDED97FD
7C9E73DE4D6D4ED370EFAAB4E52F30E55B902ACC35DE87E70DE8EDFE7D803CB9
B4F8D58998C2ED6B93CF62F8E991B754899CE46B900DC93C5A58EADB30BCFFA3
A71EF23D13FDAFE72642854A3340E64896CC6DEA0F7E3AF4C39EE4E68AA31889
A372F02266FE65ABCDAA308258FCDDD13DCBB18E462B56F956B94CE97E870122
A0A46CCFD6B4158BE06C768C73F0377CE3F21E030748189C553B9F62C83765B0
149330C96EC3496F9F2F9B289307D7E0C33BCB7023200FC3221F12B5FDE01011
87BBF9960E56CAA899438C90156BBF2B14596F131B71830D84172E7CD7C05B25
85A53C7CB0DA5729FD6CA218A1CB03FCB945FC24376A45F2DE0C21378769921A
72E46589CC08EA87EECFDF36B819B07306C448777163A723A9E71F504DA5D447
AFE8CFDBD88089FA4802F449B477BE528C3667F06EC5479B0824B87C47EEAF1A
0A23941B8257A2A5EC3F63FD62DD09890F4DF33AA1E70376A9CE8E4B6C4211CB
FCF9709AA29144F3A40001AB98BE816619AC543753969AC5B540ED39E51F5869
98342686761A7C070EA75140331D7A0DD5731F0E395A6CB0412028C2FABE2E9D
C3B57F412A5CC05FA7599948E6B8B50BCF16EF9825F6B20090E4D6280C528375
4EBCB42B38B7ED6634AFE0B2C249699E212509817638845B5604BB526053ACC5
C0FF6206B2953C9350E57657B374600DA75B6B271326A2E7B313EB4598DD7FEA
4A5D95437CBA46D85A5EAD76FEA956126B3EEC337FF78D906699CB9CD7B4012C
474EB33D12DFABB3BF569214525DB9B2D4B34136FDF936F96FFC813FE16DA5F7
9B0F2B3110B1F8C90170E014FE8F31A5FD35CB74EF0FA13C6DA74D7264618562
DABD7DB8E7F480D0521581902848649AD3EBE39E618667C59EA499B7081A0844
B6DC10555D27819E6CAA1CE453A7A68EF1A3EB2178BBF9B9BEA9DEC679DC10D9
E3553DE260FFD590BEDC71CA9AD4AC12B09E86D933AF49B4CB901556E63BD639
1B3C3C3C80C46745E1CA7983B9E80168018E04A84AB47C854C73FC58A393974C
1AFF488EBB29B293905951355C4D4A4F65BF1A72956515750DED0B87A8D3282C
72C634347874775B6F29EB873134F6BCC2EBBD3703E9619F762D64128A18C957
22E6C0DA907A17868AACF3229C176FC26BFBE255AD62737D234986AFF04FF03C
1DB4D1F2D9F60CF2E4DC5DAF88EF3517A2D91CCCBBB8753F92B3E0CDA5D26523
B84CEE3A0429655F8F25C89E65074A52CC6047885F4105DD62F1FB8CC7A4CFE3
22EBEEE15E3395B062B933EB55FA589373CE26568F78981B480F688646A5C8C5
63B8FAAF19A1F6166685C3FDC27532C931AC8B86E81FB0223686074ED596FA6A
922B662575F23B53B7C6B245AFE90258E743F284E22E30D2B418CAE285AA38F9
FB436D39371781DF4FAAD1CFF3BFEAA81F5D11DD76BADDD8122A4AA44B9F863A
DF8127F1FC35DB9CD34EBC684818AB259FFC3C7CE34C9DAEE69D70D010C70540
3B359BDAA5B9ADD10F6F7F2C19136157C6D83B33313266F1BA8B9E065A0C831A
47D767D4558876E85ABB0B8396FEE0C3327CFFEE23D0D7C24466E5410DD289DF
78C335D2BE90B5C581D536596D97F1F463EDD0A9C0118790E5780C0AC27A05B6
4DB13A023A3E5225E0377ED38749AE1F7714AE5E1D649A3AFCBBF060F416C0B7
47EC5BA54AA743154084CCBBC2A47037DDA09D9601412F731039746C1224A29D
191D9E221C06A7EF3CAD09AD5ADE65A51B6A915CA708D66C3EA93A0BE63CDF0C
D9A4546C9325291D11D02F4C2284918795A5B6E6CAA4CDA0371D452F65EC9097
657F51E83FCC22A30D649B80CEFD9F6FDD51AD33D3DB732FF26650A90912822F
9E77D8AC13393AA1B04DEDDF6C37B2D1DE50258300B9BB455AA872810C7948B1
EC866883E78F23DC9DFF60701F4F7C66B61198F8066DD493031D1A5EF91231B4
470B5A034CBA00791EE592FB4DAB538C280A8047F6290E265C8A88331305E67B
EEEA9A03950593605886E125446E5CCB325BF943C3D7F32D49651F5744A27DCE
6004208003A95DA1371E2EE456CC692DF7B71EAEFA2ED09E82012484AF7649C3
FA87A3AE44D93FB7A0D1A7A08A419AFFF7DF7065992B084D567645EE4D2FC29A
888E5E51A42920248E4BF77A7876799B1FD856AAB0EA73DCCBF7FB5979EF5F01
2CAF413DABCB3290E29A0CEE18F02BF93ACF5E651F75F1C47F2699BD0DA86F7C
5E18E1895ACE4B125EF346F608ECCD4DCDCD47DD7717EBC78AE3DDEAB5333174
18A8E967F635ADA03D2EFF80D463A521EB069C2B6271FD736442AF38A52EB58A
59D7A62D97171B45D2A6AFFB7E617C9265B466295CF70CB228FB295850D653FC
3FA379FB4FA0AD9F83269A99D550366B880AF05F913C074EEAEBE390144ECA2E
ABD1ED2BB6C54FAA70C9BA6C6794E3AC06D503EE876C915252EA75E6FA113380
E4E2A0CEA310D96BDFD883642BDB55525358ADA70C5ED0923B060EA6EEA5B735
D0D62E41842C07B79C0E8DC56C55084EE590D2BD58FD9784BCDCC3D498B69CD1
D7C24466E5410DD289DF78C335D2BE90B5C581D53AAA27CB98A914D22E25B41F
E35179D5E020790534D6BA1670B6783FA8DBA0D35DABEB8E162D2EA2ABCB6CC8
DF8E44430383881E5ED0F7F184DBAA9A394D0E08138E5B80D224D4E8FD6F8BD3
255103D823B86B712CD58FC2FF2C9B963C235A59BC191B84B9B6A2D87B85F21F
39F33AD118513BBA722CA46E21F697AFBFEE1989A09F9F9F7F29C1E0C0F28E3C
C64BB4933D3AECC99FEC69C3B047482C0D6F22E851DFDF1315C0679C0906D77A
B2144E810FFE3A942963C9B2584CE14922AAA9E3456AD60EAA44317BAA8D81C7
33BA78C0DEB8D1A2C9BF7CFAF3F6C87EFC09B43D790D3E80AE0EA0AEE1984C59
0DB7EE142C2444A3F4DFAB0C651407A58102F825D9534F2C1768DE55DD354014
B4AD13F8F95AB9B462F7A5950046C9C4A8CFF3CC3738D894770AD27F2BAA1A8A
C49D55D311D7B27E77C664BA4DA424125D1735CDCF888572C3D4E2F0230BB1FD
DAD562E249FC2F1392F7F378BB1754A2E80DE0D9FB55FAFEE3CCC1C812E9FAC3
31FD70975E3A0C72D37207D8A6034994F5A338B85C4ADD0A28C7A8FB765C4A04
DDCD6E0E7854CB47132679FBABF1DF31D16F8FA295CB56D75A836ED366963BD5
7A5FDDECE89ACF7D2EAABC3C655C247E6AA58C7B3A65D90C4598DE6DF2AA81DF
1E7AD672C058BC13013E94942CDCF8E20DEC5CD4696759CC337B6514AEED350F
45EB766C4ADF2EBF18F155CF537A97C212FB23022E75D57D24147D284196D0A5
17320294E3C7A3A1A1BE80ED8FF0A9C509420006D2229CC525B2E21332AF97ED
907BC5FAFBAAE31FCE73C77BFD275F6CD038A6DB9EC1FB4AA5AF31A16FC07D58
F6AD35B345BFA1CF7B0E9545795A6E62188B643BE9FFFFF69BF0E7C694E07807
E04F51013AA2E2215C03ADCA175FED41854EBA64EA1BFCA7B9ADFF7F4ACC6DBE
671126FE078F52AB62DB59A9B9AD1018F245F33A42CF224F327CCEB361EF2E2B
DD7DB751EC8C146E17EAAFC942F80C2313118CD80744B1160919C81067D75442
072E34982759C289C8F929334930B4AAC76A132C32DCBECD227134E7F747AEFB
6809685156270A536E5DC0236DA24612993121152E7E72353B4E4A19BC80F638
158DDC1B6DDD5CFAA56386D2232E51B3AA708541C4671738A1E0CC16CC401640
5B0F10C340F24A30B1C3E6AD87C7D4424486F4D2504B044E802A8B30DF26FC38
1D8D871D0D96566F0E4910D17124056A1F0AD7E9C1807ADA0EE65BF63372B918
2E8CE99142953DBEE0C0104B1292A1F83517BC28709D3864CA389D6CD1041740
7AC6A0DDA1E77D37AC83F0991A4EB1258E47A4E04D0DC15BA4F0C1D12F27F5DE
5E37A07F94A89276B909954466C7032C6FD3DE6ADE20EBA3FA90A309230B93A5
B74FF64283F15EAA51DF4C74CBB662283EA2C98CCAA3F64D2E64AB21C48203C6
08CCC92CFF820CBFE005BB5D4B098F3CC567E9DA9952F5F95048B505DD5C1BAD
049517C3A95D471EAE9D83E664D7CEF78D51D427D2A9126B689964B87ECC23E8
3F19351612FB0B1E70D91934375C410CFB8AC6C99D8665CD7E1CF880F99229AF
C16232CEBA6D7B35526797A8C94EA0723B3062409182103B078B6D4120137695
A8BE5DEC8383E556D1067F2D10E43F158978ABC35805453F84CC5EEC991A5CDC
8C33DBF86934B5368C099B59A7114410C608C749D1B7D493E67EBD9DF99EED9A
ABA70EBC005B7E807A854FD70F27639BAF68211DD20AF3D34A3498F21B00999A
CC476DBE2C5E7F404E59340CA51DBFEADFF2D6856FA15A36EEA17FDFF093D02F
B419CDEAA8924DD923B74F252664C67CEF45743658D8D43AF001ACCC0284EE83
D6B900DDC00EEB5E881FFE9B414C45B06FBC491330279C671334298D0621D516
6AC107F3AA081661CB91E004CEE7220A24C71BBAC196A23123BB399318B4D2A8
36F88D24D6FE3898D6D1C76D8F8E2C75D7460CE135C4E1D0349033D576ACDFF8
68AD600D610E32BDC63998EFFBD8BB34D2423CC6282C145F3F0029A07BA8C929
7BF8B0B016EDCAF80B9043EB61A3BA3E78F64ECDDADF68975D97F94EA8A698A5
CA287EBBD5193878AF0D3EE755BD5958FD3632E670306CAC950F8A1F66D4720D
DBEDC0E0857B057D019BB4C3C1C751481ED7C692CF08BD1EA6C5B30BE280953F
B8FFF50082E28A8D951207D7C494A7B2784E050A11FE8B1CC619F387E700EED9
D0956AE651C28A61DEDA9859E01101F5604685676CFFF64C9F2630CABF2F83D1
37D226BD5EF6EE8EE1EDC4194F1012D8BB958B6940681AEA50C7C8964FB0F377
23C0C4BFA4DFE3FD4AE99F5A8595EA873728E2C8B6D05AA6861E3ABED84D6761
ACEDE777F2D3BBF85031E42B976BF76149CEE298FA46B57981087E31FA46D2C1
91A16ED86E07D8E45FB322FD0B3D25692D2A0E7C4DB93BAC55016AE065951347
39401B0D8ACDA770B340277CE3950462318057F893A50B1BE89222348D7F09A7
FB9144E9162A946DFAAD95EE0B346EBBB899F1F37A0F89D4DAC9B7B0F3348A1A
FAAE48BE88E0E16B8E376035D6D75C10FB83D7B0EB9DCE189314BFC6A128924F
34C083E289918FCC37040DD4771C1218921FD978D54413617494E68E34391E25
42903355658BD278E67696161CDE14626D101B4E117C63F2E7A60627DC40CB9A
B1634701AD9AEAF5D11607A783874D716DC73DB1CBA45D33E0076E992C7DACD8
026D7F4C5AC1E5D796C0E5A79C61B5BF586A0FFF6BD2983A840B68D656FC1584
2D694DFBC7D7800CBAA90F3BF0022E66A54BE1059BD5D224B674AB4D2AD930F7
F724A305C4DB7BBE9E3E9D166FE9AF6147A8BC97C6834B365C39F4F5C39DC16D
F38ED4E2751BA59C0E99173A4757421323238CD6EC545ACBB56D8F72415A1AB9
F0BDF5BF10AADB64E9DC21E5EFD3BEC41F18FB8C6D2B457E60950E1CEE746B8B
D1C38DCFEC33DD7CE3D15A7413BA7221C2A0183B7AF9C14AFB2666D0C76B2A40
4F1C741D14A7855891FE38AF4673CC7172645BFA492CDE638EBD00417A24C048
9BE85952A6776CA88C806DDA31F029D26AE7BBE53504F2B08A80874CF0D88928
1F4761B0DA0610459A383275F46B0E17949612B89374A91445818CCF84403DB8
37A6E6EB5B52549B010FB206FC42AD1B3BA2F939E3855A521224E6698290BC0D
0742A314497D1EE7B94205C9F5DD453B1D3838591BD4A0179BDDE6524E42EED7
7F004F7DC1CCC96ADE0D02904BF3E689B2B265E479FD23BC99D34FCB2E6586DE
317EE3BC34234AEDFE8C8810BCB5B93E04FAA62C2147ADCC67517C05D3140EA6
39BB37343980D51CDD3524F0B146BB99BAB1D6B99E13FC74FF67A48296D205C9
2BB06A4B0C18B1C5DFDCAE53E87AA0B079C664ACB65D4AE6108365BD70298F04
7D7DEB8854FDFCAFFAC77871BD7221E8402A173E563B312F24B88D66A61A47B1
A58998B2A1A17B6AA78EC05276600855DF7CF3CBDDFFFF470794606584B538A3
2295BC5FEF5DD3550010E0F50AFA773ED03BE4C5E64936A40A414248F478860C
841769777C502E4DD4354539587BE5AE2347C835DC00E5A73E95668DD0484B42
1E5FCFC898D707553AA90560AA32BFC1FB1353D8E28E0FFEE0C28522DAAFFFC8
4B3AF701CF1AB4DDF43928DA047C26DAA8165842A4DDD43FC3AB8DADBB4D53C5
BC75E92D9FFC4CF5D97E5C253EC6CBC95C776157B2644FBA911DB569BB21CC18
F997D4A44DA8C2AE04EB142AEC7BEF17A9C1AC42B75BFC767EECE17C65560A0E
E4086DEA06A2D2352DE559933C8B4E514DB0410B1E140095EBE6C361D8BC48CC
05727B71589342370F8A366E11B3623E494B8E802A47C2278F2BD50DE2A806B0
D7FAF7914123A44D9570FC82B6D231B37E2AB7C7143731A8483D8D0E8D865CB6
02D83CD2DC870E1AA53E3712C683F56B2ECF78FCCEF9C018C3D8273DA993B9A1
CF9577C0107889C2EBBBC688FC7FB98005BF250E91BF91F719E5568DA6B69A91
1D746C4C8EBC0A4E6AC3CF08AC86548A8FD6D6D253095D1CA40B9417A1DB1BC9
CFD7A726E5853FD3695D297EBA5400A1B90902EFE6792F207136E1E16B417B2C
21287771F728FDDCE8BB0876873C49ADF8152818A07E8372B9E6D6A900BA4404
6812884F2FEFBBD39715F12D929BE313B1A5F23EAF1A32ECA307C440566D8413
DBBEDE3F4E47F96B61BA0F88E99544E109918AB0BDCA926BA1162CF6F8D703C6
508CB2DC5D586678999DBFF6A39E853134F6BCC2EBBD3703E9619F762D64128A
18C95545E4C79B52D7003FB0F27D5FDA349D52907413D171FA2C0F43B7C69F2B
C1FA11191A2974874205A7DDA96A49166276E333BF24A5894AA474C9F08EDF66
B627B992C9E596047831B16841B250CD148557D72DD7E683BF122A0A267DFC37
AD7469C554F21DA9C2007FFA851430CBB5AF83475C093525EB5729D8AF505B26
F99EAC72A872C10BE7C60AA2C2AD169FF34266D8A72C91C24108FC0F3D955887
236884915F331A5CC5FF426B674CB4C72B22588999185585F81C9FE7F420372D
E86F10868948EE50880C3185549890A6937621E60049B6EF549F775AA2861FC7
EEEFCE2D6FFB37AE8D53E4AF5C970E67BC73C920CA64074B3649FE56AA0AE265
4BA7AE69654EEC38CA4CCB5F26D1C2D5C8005D2871DCD98C3A637137DC8441EA
7B8E6A353FE001C63AD0C72E1EB219C4864D18C4CD499B20534D33C822226FC1
99D26114C8B47D73304B66C6BA835EBDDFC19E88CF11D2E7FBC549CA5D86A25E
591E0531A442F63B6D86590198C5957155006779D9CE0C778599803EE49EBCAF
6C6E111EDC97C368223B86632842682BCD4EED2766A69EF6B97655A930494E6E
1A478D5C2A0D08CB39DA7D5F522A4ED633E8FE6D57A0821BFDF2DA7DF431DEFC
08A052F306F0BD86130C630B5690DB1906123D949ECFE82F7B51DC5267C06989
1DED23AF9D42E7E92E35F3CDB35836193EAAD4C88DBBDC9E20AE49D3FE7B47F0
B4C5BE36297E9DA5DB6AD90AC5A04E5C5434D732318AE791EDC71A47F2AB39A3
FE73AE47CF016E3B3AD1A5C090108D4964C7FD5E57B0D504F8030FC501B4758F
1C0CDF3A5FBB4A0CDD161BEF105C8697B33CC8C54E71E075F1693EFA5483DB7D
EBB1EC30D6A719EBB7B5AAF66866359A3E7724F400933CED59BD7219595A46DA
8FDDB20819F2337432A326ECCE7F6F636B38272829C49B77DA56D8C3459AEF93
56949ED415099A0B82D4C0E326AF1777FD532A369531C4F38A540CBD0E96C682
B067F1525DC438EA0076574A376BBA70183152AD7577C8EB4BCC88ACBC5A62EA
1F054D8C429F0F7FF80AF8B32B1A30C9F7923E3E12C1BFDDA721786D7D6000FD
0985C57E723DE55A2ABED9B40D7BE674118CFCDA53690FAF7F415B3CCDE7AADB
CF72697BCC9D1466D942AD5D2F3718A2590BD1D0A6D49E62478FF7256CE9396F
4491CBF50E1AAB4DB1875D107D8180396BA6046E8883A9FDDAC13FEAF57217EC
230CCA301F89A1016CD2DE577D0A8F874806B28DD649CB35D90E6345B12F46BA
3332097DDAE8237E4A34D9C413290538C5E297121D50C81741C15D5756CC52CA
9EDD64727BD3BE976D4963BDB9B0D1D1FD16155510EA7F6410E1511C924FA76B
3CAE4867CD22E3E4A8E70082F0C085AF03D89E764E467708D4185A1600EA8BF6
80C97212992BB2F5000FF23382B07D5B059D8D3F20870038B6EA3C5E41A3E6E6
EAE70E6200948A2B24D0AE624CB648EF0A2E816D6C1C3C83FC0BDB90052DDC7F
055DDF6A6EAB9E62CBD50ABE89F5DA45968A4FD41C738DF99235FC8AF7B0A7FC
07C2E6FB4A960BCDE8B36D06B51FDFD86A22BE594113A00F62F7A579FB409842
47FFAABFA9652CE7AF178B421B0DC4AC696FC634D09507BDF345201376AFE24E
D8E855C8EC0A4F10A8DCC2EAAE014C26BF75ADEA293858333FAD8A5DF5D5CE64
E34060F98FC38430DFD56AAFEA4135F59E74D46E9C0DE71D7EBF3D9A4DEFC8E6
7F6FC526DDEA73EB9B1EA95C15AF3E1BD133241D58DDCC67037061D453352531
380C21D21C82FCAB5E878414ED99200D945BCCD36E1BA17B2D4E2DD52B5848B2
20B04AABD14C5092F60F1C33E6A77A9E51EAD2D9A4C9C6B49ECBA54DD1C476AE
B59C2440A668262623D6A60F543D13185DBDC938B5A37FA2838C251BBA1D812A
10381D0456CC203C348DD73C1D3F3446A4E306C676DE7CB1ADC78A861EDB3837
55242F3E168A938FA99A616BBD1008CCD083D9C4180B08D5361C6A1952999FC3
37744781995E82918639186A928EF12BAE7FDCC5357E6ADF9AD8C35E6A43B682
3C4E3D2E01A271B4E229F6FAD115EB0ECE8AE791EDC71A47F2AB39A3FA3BDDAB
879CD224BD2B3BD4873BECC873A9C71796A6D13D182F1FD33DCC71554DA83716
98B3536CF6FC0B6134E4F3AFDC577DF8F4B125C0BAC2EA874D558B0F46BE4CD0
45739E04FD5DEA0FB07BCAA18723F901BF5F6B6A8A8AEF1CF8DB5AA29D60B224
C9B8872CD9E55B2E3AE2819BAF9BDC42C781963830BAFE4D6CD2356A3D2733F5
4A29072F126379A165479BE72057F0D6D0311BF204A4C6D04CAAD2542B807009
054090770432D63B1C903E5700D6940D54DDFCF2DB627140ED8AD5DBF7D86C88
CFE9A37CB06C4BE02A9FC63EB240C890DDA668C586795967B2B1D5ABD93033AA
D7057C0C7678850AB645FFFDD403F440028181B75AD590B3989A7F340FD59C3B
75CC4A85E5B3FA0541F2E746E3F5A7F0A84C2334C2D0E64590A2420765F24470
4AE2B065259EE821CAAD682B251DF56033F47B4CBF6DAA00B960B965E9C7F789
DD05BC094546CA4F9CA4E3B35C0BC7079A2CF2E2A1529550D55D4471991B7DE7
59C6BC99788940F8ECCB6AF7ACD216131278EA1107F3C016142C1A8B337A0907
F9192DB48AAB64B6AC9E0FF0F544CE8C5C086BEC650C87AC6908D0C344FA4F94
E91B0A972678A8E98315860D63EFE6178FD39A8CA2F4D538637FEE65804AD9F4
7FD5D09FE551F142955918424CB632ED0C2C1FB31D3A72F9889F590D1F350296
EC270CDAE87B801C0C536C101AA0D77A3B65651CDF72E001E8A3010266862CF3
9FBBA573AADD91993E707C3189EE45721D0F6D8C3A1D8CDB3A7574A94AA01579
67DF66E162668F8D8A3F36DCBB5352490FACD6E9EF0C86845248DC345FC8249F
699D5364BBA3E4FC59D1F7378FB61F7DD6CB7D3DDEE35065C082B37FF060B6DB
75AF203FCA2D6DBDEF48DCE63F3F4869DA9D77CAEB4DC19B208341194569F2F4
629141CF756FAC27DACC81D3B0B0BBDECE5D54AA8023B11FDD5D37C1B60D5582
E03F083CF716C8D2572DE33AA0A7E4A4F64A6E5C39382501F2377EC5E1BE06FE
FC81EA3A88B4024C64A79740384D09CD8FC8DEC08F3E43237D86822376F40EE3
FDB00E6D5249BFE627495DE99814AD4A0798392364FE0BEFFF89A5599AA1EA70
6B50613961F9E542A99E1E9EAB27BEF2BCF74FB40F2D01E2F2D09E731C6C2F9E
4493F6FF4574EEA2B17D2645AC7A467CB73043A75E693DFAA0BF9F9BA10DED03
E01737F4A4CD704E8EAFC757116FE3012E01AEBF584EBE5134087E17D7717C9E
B78CD3364BC4D5B263A7B255D0918EBF55EC09503BF1AFD89227A574BD8D6F62
83BA72533B7C3CAFA5F99ABE792B377B97E059D705A0D83ED2233BB7EC99ED28
D2B4A7B685B9B278C77FF850296C7B8CC91E377352CD4B970C802740F07F64C8
800959147D32AF178C2E2E968248D5B79889D9133B6ED6BD14AAD42F8DDD825D
7E8041DCDA231DFB8E6ABD97BCDCA958BEE59EBFF0D3BDE9B4FB0A540610BDB5
9FC4EFF8586BCF2DC5D496ECFD6D06B9A5AFC8C8C46BCFF335C364E086A66D84
1ADED0348EF0A843D0F05CE3F579148DC114120876F891DC1CBC2613C7770AFF
963ADCA396EB26D50902C8BDDBDDC8BAD0B87F3BA50D36D20926718FD370099B
6BE08F5766FA4F3557D0CCC9EDF31BF84531D664F70963D7B37ADE87C03A2DD1
CE4DCED3C6423C5CF357B67C00FB8A600F088414D8992ECDA0ACC39AB210921E
39DAB25974FAF91DC77B8AAB2239DEFDB964B9A39EB820B0594A04C8A90B658A
61B785B8AEFE9DBA015D717A3CEAF3A92E5909A8F0811FE2758B6161A8A96054
6C2385FEE3AA4828CB103799D5A8121BFD5C984F519BECDCB8EEEF18F331A58B
E4704E5130FB4984C3FE2474E6C95273532B64A356B32A047802C9BDEE75029E
991753E72D33BB3D28B42945DA4A9455103CC33474390660C14D704E6CA5597B
EAFE42535A8C88F9F1937BFB87FC8AF336B6E6B7268BCF2B4DDAA573EC35918A
52243149770D7A638140F9EF7A02B92E75A597785BBED4857290DC1576BACC8F
67701204263E971278EC573514392567A82BDEBB7E3AC567A69429EA3D1E7FCC
F0E3330146F527C77164649A42B061255C93ECD9B8DC0D2A73720893EA82A1EA
0AC894127775162D0438F882845B8A24DD727260B4B18E174328A4B90D93FA21
5065DF8C19C153EA76C60BCD0C0FF79B4E98495C38C459297F3E0DC1BCE6086B
DDEDF8F4E9B794586A9CD11C14D25342DE63682A24C569C99EA4E22AFDC4B35E
149F7EB05AC2BCFE82D329D6332B1E5F5EC98D713D700F4428E59C4D8FDA511B
CF63CA7B0EB34D1BEF48C8FC4FA189D8A962AE59456EC1E2FF796E37DD6D1B9D
E5FAB1CDA68C7673B94ACC38F874D92C1E2074B7116C3845EEA16B5282A7375B
3C445C622F7765443ECA040F54A876DD343BF69D7B2F16E43F5C41A8EE620EB7
E7F02C11C1B52C95B6B66A2DF1FBE1991751323DA2D16A5420B7A869207023FB
C27FE57345CE26EE4FA1566B96E221864A45A24ADAEC63F61C9FD186843B64A3
B8BA56C65FAA99BB540B469C141FF7FA87416303FA2EBAA4303C4F4992D05A21
F628B7901829DD810E10D9DD4D39C32F79AACD665ECA7277148AE89168C46840
BFA42B5EB6D2DC10C1B440B5B316FA8F6565B7C0596FD023D6BD1C2CA79CAD7F
0FE9BAF8F71089C3F94C1A9FE844D514E123FDBBD49FE36AA88DF9E59107C892
4E34E442E4A7B0DAE50CAD34EE9951CFBB3E23E96C7086E8D9E5015CBD6DC0AE
B49862AB0712464EEA52BAC576A4BA45363D3B7FDCC2F4A81E47370B18001316
F0FAF32880794EA774CAD2ECA4581BD58ADB6AB154DAE7900B7C4B60F6343B92
F1B67E0B8B99DCD7EBB4E08F06C3A4F52203654730006F3A39B43BFEE5D80FCB
0D3A83798F244EA38E7D327F0F4C117F34AB17610F5D7F76C202F7697ECB0E22
541651CD027D5B23BE4FC86005E73CF251B746D86FFB6D567AEF67B112126E2A
CF3642047B512AFFB892DECBE1E9CF7F118F554E5688D5246D21E1C4BEF63FF3
123E5BB8ACC107D8B722419A9C1F8EBE330B864E6D9CB09895FB773DB25F1A4F
BD03CEB58C7EDF1577444E6F9B5C63BE4DF55743E0DC918118BAEBFCC476F9F7
F52DC619649FAF3BC7D3F0867D1B8D78B9A9DE9DA1FA281D38D992F1779CE576
DBC43DA0B3D52D76D907DD2BA5FA67289DAAF80C0F5EA7D9E67929CF4142CD55
62FFCDA62B59D893A5959E924476E93CF7DCA4E9552E15B0C62E64A0059FD24E
9E54D410482DA1202736A20A2C8511C202DC92A263CCF305021C674FC70A8D1E
5B9FCE9EBE0709F542F3EE5DFB1C1A0AB40E808537744BD9F54562D7B4167C0A
622AFC28FD1A1F890D10DF396A72D110434C6DF848316629CA47FF9B07038337
966F12D57747A2957AF8F20D293F17F5521D3311F85DC40CDD28FDCE6ED8D979
9646156E1491E5521FC8B9CD9158D750D9AE1D1645E399B20090DBB60D0B3F5E
A1A13FB288A9C0D536A297936EBA8F80BF5B2ABD3536A2450AB577891F3BF378
698BB17CB6118EFDFA622B219121677E28A1CB84DB96F62E89B545CC8CE8B786
D388BFB00807370CFE577C1141A7903C924ABA53A4B5C7C390F436CB4C08BF45
547F698E0DC00CC722B65CBD277C5DF3B4B1275640937E5325EA8D2985AF7B9F
14EA2C7C51096681B774B9079F2DFD5420F6D2453D8A30572DD2A12550B2D61D
32D43CEA6CFFA363D804FAA42013AFFAD1401B54E1E86AFFF6D7E6A9E866BAE0
54F5EE51C829C26F9B88AC109A4388B2362A3AD1F83A14BA94D46350DC9C2286
F9A29749D657CC05714F170AC2B490A94F98BE39F5EBC58E442616A88E8FC019
4CE3B471CC2C4DCD7EE8DA67D9B82DAB5601A9125A3B90CE131D3B48612958B3
89F643AF4EF40437BB056519FF432CEA503118F0A2F57D33E98813E044F87B8B
46C868D6D2FAEF826C12ED0AC734005B3FC8E636D5951411C6F46CF31F03D351
7A96309E02D4153F7F64C21C8767DFAB7E5677415F55FF32E4308FE161C7315A
12FB600B92EEEC2CE2B6C918A7906736E895F3154BC4409B9A97CCAB9DA5C761
48888F30AE04C7EF468C8FC8AA1C0A2E529502832B329B1EBC55089A05E432F5
A19F77E45AB50CDF50B9F75F0A6338BA2148B76EAD501C9C1670B8A568F69091
BF0FBC9AD619AF7C31436CD5130B3B64C1EA82BD4445555CCC8D8C82839F55A4
6A84383A5CF1546572770BBA3CB09E41AB8CD211371A43A1F9F4354B5BF2FAED
4B00F36F2CE5F46491EE8650568A3C4E497D1E90E7A0F10941DE0F2AC2D90107
4A7BD43D4D5B05FA1A04F498C68D3A49078A7E2CB48A43238E9E64127BC951DB
04055489DBA72C24342D68B5C8896AFFF13F6C5D87F9C357CA8E2424585B9D34
982C57A36A52CC3D3CC3A173A7346B4A33C99BBA62EE86C30D0E93B2BCCD4A74
3DE63B7A8395F625BA36D9134FFB89994E5460C89EBDDDED2D74AE20D4B29604
D021B8CB1F3AD3CE5104318FE113C2FEE0BE9AFC4DDB110A7AFEC7A193835DAC
ED6F47059CEEBBB988E953AC22110E3366BB92A8B570377A356DEC6AF110FA0F
C9274961C7033B715C7038A7CEBFE998249291D97CD034935C3A0DF3CC39563B
4230C6A08BB4FB0CDEA7D44636102D47AB90B928C3FC68D277777AD2F477516B
6676A165AE58B26B9DEDEE02099393336984A0495B5AFDFA147835FE0BCFC558
AB6171CBF0AF8D53B79FF544A0C6F98C72AB9F84F3C402380D6677A1F2676225
A2299BC2E64FAD2F51D2218D29E57D8C2C8B7EB292D0E4ECEB60C79F9DF0F8E9
2B8FCC8CF0717532E4799F0DCF5D2FAB1DBBA602BEDD83581EE4119973AB763E
3B857A6D32903A4124E2264000233BA7E9B1E80979B7487BA2CB786018E20A5E
0355AA35B05E219F5E55187DF09674F324FAB81E61751AE62138DD04BE3F1DF3
1CD64AD21688B2FA3BDF5E36CFC585953C95FF27739E9099A4B58BB53E3827F4
65279870CA842A232C789B363F4B77BB6F513F2D1CF82BE364B0469E2E163414
EA231376981947B80419C6552BC98F10E252C17CC9CA5E9E71CAAF5A17D5598D
8E8BB772EF73E44C8F5C4B69EEB8584D6AC888FDFEDE4783A639A6DA91EF82C0
84C1C89C0B70F7654DB9EDF8305228BA8CC8209364811257891A08FAD24873CC
2C75DA3473DAB2832331C2F3DF3CD45EAC63D7202E2F23518545A75568CC03D9
528A3DA314C3781B6AD8A675B3985D96DD31C832B4812AD67FD873378141C0D5
E654274F0A884B4E81A58647CC0C2F66BF8B28CC148252E90F6E7536E42E562D
803338A8B8A330B36B22482CF96FD2696A48C832F41C5C234E5A477B14256AEA
DF217F5E4092D1D03ACD2FADCF1422BED5ABD93033AAD7057C0C7678850AB645
FFFDD4055C250801E1B884A635A73EC67F26C4A36894C4120C6C7FA052F8979C
7A5CA5D52FA1B48C90F140B934EB585E3DC75A23E9F871159B2F3CDA9654D2FC
FCA727506D00906AF8DD24262D80A1DDA1396947FBE8692B77E9A6F5B1286C5F
FA28489391031EF6DC2E9040E85D23934571B2C15D82EBEC804D15C0FEF51E81
E63603AB1E9281C2D8B798E7CDA3D88B9B026AB9A677D0A13C4AE52D001C95D0
C24AD339181124180169F3AC7E7A19D8565769126D2B830F708F56A8327BB7FA
5CC1E56949F31D5077D185A6A8C1C19267AD441581D7A43EC3324CFF3DAB7E16
2F0C63A0687F065CB219C926D4511E817E1D39B34D480522E9DC062394210332
CD9277A4CD1995D21351D824C0F8AB1AB137E7F6D35AD957835FE482F81CD228
FA2227DAF5336316139B1C3959321B8800DA2D2E66DBE5B33DDDA58222CDBB75
89CF09DA07C6EAC8D8FE03BC36A4649EB5F77E9930EE7D89C8DE35DF4911AAC9
B7C62D6F7CA19DA5777365A7DE0EA36661EEDD0D99F80734662C33FF30DB7BFA
31060D48507E4F90994CCCEB2B11C34946640CFDC74AA12724E13770A8817E1E
619793C85487C0571E75403D111C5EFE83AB5351D1812A8B8743AEA49E26DED6
E9861BAAD4020FFC9E1E36598BB8A970AC962596E5DA29211EE28BBBAD5C0771
8185F2E6A707C1CBCB5F7BD74B934EE2BC8350E3A8F4332D19994238F3B603EA
8489EF99E770EED78A968F1DC07FE09105B30F327FA3BE68C5416EEA99D327FC
24376C3213224CB700644CF44FC66D9118186CFA278E47EE2D0B419B93EBA193
7F83EEE9027F53A79111AC130AB4A246A18F1735A73665A2731B4B56297DCE76
B0044C5AD81F01E220370DC8099CA12BF2C5AD035AD6DB4B6128E36279CAB175
64F0F604C2CAC70727F24CB5F2B23E93A3CB703B62F86E41FBC6421EDB9FF682
9A42E3952FA29C49E2D9F885C42FCEF1BC56E92FDE53A26F9395671BD1653E8D
F6C5992563BCCE12B4EA70A67A6BBE9A02D18CA44689E5DC1DCB1767179A1B63
E40EAE3829BF4CE47841CC9958B70AF6D0D07D34102A25E12F04FC9F4B80562B
21C6D0BE5704A5B17E3209DF9F81567747542BD1857B6F5060D31C481C37D159
D01BFF4511CDC412A885258111779F31BBAE3304BF771CEDC1ECC1EEA9D34523
544C00B58BDB14CA1DC0694534AADB7CA1C907C3EAD979BA7BFDEC43C4901AD1
4202F6538F88EDDBC3407907C2BD2272BD90173B6B0DFCE2AA75146BF25D3508
95F22F5C898DFDE7899D04178D521C14ED2611ED7B7DC383E217670BD6494D82
E11917C0CEDBF68918F144785BC1011FD3862B69DAF75FF7498321DDA1ED16EA
F12746E7ECD0FF3CC3B761AC1B46CC8C57A7888E103C748DC913172BE5853B53
486FDCD74AD402F0FF7872F3867D77DEC97C808656F26CFB3E6591E5D503C2A6
D0AE50D7C66575EECFFE2E6925962EDF958E7197B1A26EB30141D2358C0C3F47
AFF734D51390E769C6D517D84E223D306718D250574E4602EC0964E1E28AF784
9030B807C46BCAD3D070403F49B5B89CE4D14F9AD970F33485DD79C77BD0256D
6B5B7FCFA5E7F8BDC7A6426E2A74D69A79225397FC863789537C701CD41798C7
60C6F539B07DA441ED1B5D45704665D5E85622B48BEC762BCE6C8196F901BF6D
9816FFA07969DD0CEA6C96698E00932E31829A69E2B42AED8B7C9729675F9DEF
3A78573638C5B6A95A1958EED1B1A35F21271D10FCE1045F56061366E217CC46
FE08016C3DC5161B74DE04DA7417CA7023A8FA6643FCD7F55E72948D2DC55AFC
5016FB2C4CEFFB29D33E4116A07568EADD071850FBB88222EBF0BB4A984F0333
43ED04ECCDF84588B7283413A413A9FFE523F0680C042CA59213DB93D00B61A1
7AAD92EF3CAF093084BFCFBF45A265EF7728BF1E9A648CFF974273D188BEFD37
C9AE0B707390C2CBC0C271B9B304F156053EA3DF7AAD83878518DFFB3EEA9982
67FB51CF42EEAD7BB7015C37E9B93E79D1D9B0E84535512013C74769E497F6A1
8B100E7419E54BDC64C410EBA4FD22C67D7C3AF711B3742A1DE9564A9D3E0710
6E7C3EBF116741C894BF38F5E738442A68778686E7CA0C313E15FE05C63C25AD
87670D0D578CBBC23C7B47CFE6CFD6EBAE3E24A85D002135E6974EB6F862421F
6F37283AFD0F95C4B889F3E301B88C83F192847E27B311C9F0CBEA812BDEDD2F
541779B68CADD0BB7C24825074C22EC6BEE99356D229231F672BF1C5620BB431
502DD43CDC3F3E523E93A55D49D6DE96D342935A65DACF1CC2BBDF23A9A72128
C27B3D4A09F5E907121305470160FFA5A9F9471856823C9811B3B5ED20AD2FE4
57E763F1E38A6EDD572326680D97565FE4D1E216A9C768A454647DB379C0ACD4
22BA2229C8B0D4A9DF0932F6AF67C63FB0EB6EF172BA4F1B494BD3185DE85223
A77EB43DD46D01E050A07155954EB8B347918C4920C7142A2AC68231DD2AF571
098D548148D7DCB55736A343D4F9EC8FCAFE2322B848C139FBF3E82B94D81A64
80467C07A7C017B8674D22344BCEC8F8C4FCBCE04F3C65EA91889541467D451A
5EAD04C583BDB2CAFF3EEE454AB8558EC865DEDF781D4A97BBA0591DB59BDAEC
C087BD360B3B50F5CAEA8BD4F3EACCE5A8878F02E0B498DE9C1A5F110347B7B6
12146B5E4362BFEEFB41A343AD66AA4D2FC6AE27B27A17C510EC43F9A6B4C111
BD7B2A4307A0C3F611DF40E7AABF085C3809142BF88C8C80C42C920F0A78A29D
8B8920635C97A7C153325868F716DFD2933D5F0B14A0BB45AB5F7647D20F0327
7014FE4EF56765855524A8DC2993B567495B0F6AA28F06AA2CCC9FCCCC2C4FBE
E56EB34405044ECEA8E10F6703206A0FBA3035DFC030277DB93F3AFEB4389C16
2235FD048F0C7CDFA8AB3811CD98E71BCAE53C8F132D263266C587805782FDA1
8363E24FD3E96F0E3D2B357B3B8111AF03D89E764E46770DD8538697B33CC8C5
4E71E075F1693EFA5483DB7DEBB47B8026AC74EE09527348E31E31545F0FBAE0
813944CDA0A1D5C90614F22E02626ABD343F3AC0A9698AE84CBE66263CD8C96E
AA02F137C2134A47241E3F15A881F6A501C6533C0356C7D6AB6BE4CCF1C2A978
C9A8DAA2BC563D321B8901E76B80E3B89A01CFB003D77233A407AEB5CA9DBA4C
2C3F91912C485C5DAC43C435E2F5527D647EFDC220213AEA97259581392B9BC1
71B1AE1279F582D839FF9C9C2F8385BA91BEAAD1A686B66DC30FBB57A489102E
3A5247CD38F0C8DFC61D9996A8FBF914209AE128DDEF1C4099C3807A01337FA4
063B87047466804D6AAC393AB9E45D02D0858DD87D990013D6A89CBFE02D3C63
4BE4DCF7A2359122F3E9F7099EF323D25D3F3E547AB7D85F1A14100918F605CF
E56DA8B9A95E2F71E964DFE6AD037532E0E981F879B79440CDBF6CC14F198DBA
7A893E6AD7406F2C075B87AEF6FE35C55601F999B512A8012B582E72E76448B6
CE2AAB25ADB6B6B2AFF57F0B2949B9B8718B426C20B5288AD0347968808E0C31
A589D075992562F5474685253B3F4D79F949F6C6468BBE43197E100DAD9EA1A7
CE89BCBA746C4D9789658488E28072CD0BCA544694E95E6AF67C7B558F90B31D
F454BD990120A864053544B3B19D36FF290B4BD1B807749BBF6077BF514DBCA9
20BCAD87F68AFC4596DA515B4EBE13E394473CE623CB9AD2C26CFB2671B72D15
270CD8CB1D59CA22EA631BB1B3E49E42E7B668D99299AAFC1A4965F05C16DF90
85CED287BAFFC6C93AF8FEC009CFAAF1928FF6060D8C3886703050614930BA41
0862DDEDC0C900D5198AE27851335925163320DB80F5EFC1932347564FC1C643
98D712347D08A572DEA0C23D6F7DE57D9852B9CA89927AEBBFBC5B6E30D586A2
DD28668DA7A60C446E6D4F86CBB53775A35F4C4F79078BE326D09EF99C25BBD3
74C2C7B2486D61BED35C2AE04107B03CE274EFE7CF5C3887793CA934F06A27C7
8C5122CD9EC73E29A912F30A47DBD6D715FB80371B38377D2252CF0A85C938A8
065D01417B18667B975BF873F4BEA9022072655ECB439F3031E03923EDA8E2FB
ACB8D3C58CCD07BFCAE08D822CC52BCBE12DA950703A90C352983D6F88861882
EF3B6E75A64CBF2A115403A2E98751715251D4CF99D8DB478A31BD3F8C714DD0
B43D864F549344B3D2D311C782B0D209FAB4DEBECD7F1DA1FE2A0EFAC740A45F
E966833B2BB7FFA220503E9EDC623DD02C323D7064944D89EB2E6FCB482F899F
BE7654F08D93E029994A566CDDC866CD6DA6EF376E57B6E45D2F375499F8118E
AF5C7F6607DAFB9C8EAC5E334D9D374A9C1B6C0368B6486A3D0662464414D6C3
7E66B6A3618EA101BDBE3E814C5FCB11C6D980578DC2352ADB9D6A8A6CCD84D5
704CD7687C20D023F4630958904F6065CC0ED5761A9AAB14BA563F1D31D0CC8C
C759A49426FC6F4CD868486008400A3BA5D6D7BDBA90DE0C9EFE0C9232665F5E
893D8500CB57D81CFED18FCC02BFD1C0F6FDF6FD995B22C0D3C520C592414DE4
8097F555915DD250546F22F9F42CD1A5AEAB3ED00E7DE847BFBAC0D6B05C8C57
0A8F4BE71C6EAC82D9A687BB43D8309085AAD4C782B78A35CE8DBE0A290BAD08
85D2A28A6BEE434017BD459FCF89FA30E0281A08AB3702603C8E699CB21CBF1E
702A43C212F7FDBB168337708E7D32E8862B74C090DB4AD61A73BC0C1D2A286E
8FA222D315EBB019C7207B0558CBEFB9CF25E8D97B854F2A2920A5991C800847
F92B7E4F5DC3A1AFD438EE08BFAD9BAEBC7DCAFD3C85932525DED92156181855
1B6F7D1EF658BD5DB39BD9EF06ECBCD35F10C42EA9DAF365763EC4B133583BA0
2619C2C67F6C2037E4E54B86594C9298A2CA2FEF18A89876F04B2C41C57EBDE8
2B9EC3E07E59695B17438E48D6264220B1B11153D253DB31361DADC038B645DA
1E7823371F1FF1E6352F2596EAA0C4DCB8DF16CC632E1A740BA3FFE21D909997
9EBD752E36A8EA33F54120611957B1224E2237CE0413A464973E2730E8D19B85
568B16AC0C6105BEA2372072096958431641E18570C84C47CB1B8AF7CC9A7435
EA85ED80D8DAA2ACAA5B048E4C85819D8D903ACE520E5C7CE18C5849E359D468
9386F8241FE6503D4DC2FCA7AE4C781A2AF6751AC2366302A37EDA689449C6D9
74A97D5AEA4652625C005977FC252B1377F4E7D247EAA5BF1BEC53DD019DFCBC
3099ABCB5101CC692702C7DA4FC76A3C64840ED949509C5BA8971BBB9E02434A
CE821D263606A374B64A01E25C9C7B71D0F49F29E91C20F24FCFF3B8645ECC3A
D0C5EA2C6E64951A170D8F94874DD922AAC1936BEC68BEE119F67756347B1C26
50F77845B4EB6B7378DFBF36AFE522359CCE22B6E3A5268BE5BB7602483A341A
59A1B95EA285C94FA6C4C8CE5866A2B146A9A3B873938F7874C50D3018716E75
5FD272E07AEAB1F2D0C9BFC8600FC97EEB77753976CDFBE158C5F5DFCA812225
42CE81F2CD52B47A8CDE68F4159258A9ADE8D72A64F336F904F18B00488D7316
A0E88821F713D83149911CCE2064C0AFB4D935B09F36A0F4D61211DE4271273C
F39110B40FEEF6B961452F14E4C14F3E713FF2C1B9B9B53E7C2AB98E9FAE78A7
029676ED063BED6E64D0BD1E9C51FE0264A18B16E899EAB7FC18DEF46A81723B
B6B76B4C3C2E2E5B8584AD015374B9C37FF104130515A28DBFE7F9A83A6854EE
28FD1B2F52BE6E88B5EBE3EBA0C7901A362981D05A5AA406400383B2CDFACAF5
8611D2FD16232973483E312CDAC16CA061AEE91A7741ABCB2AE2039CE16E1FE7
30C26702E68F7D5935BC45355460BE4E0C5D87B5B3B91F8CD458C787BF1DF1F6
000B8FE97DB7A9D8C8A11E9D34EDB183E4715B08362D38B92F3E77B55CE291AC
B8321BE53A2C7D274D73D21E6C85B2018E78352250261E141ADB4233C557602B
6334D7A15072E61E39663D742EE1B3ADEA80B1E8FD313693E1219B298DA01C6F
8EB2A860446C717D6BFCDEE0883E9ADD2BD5FC05D3BD77DA90A733DF8E98FBB1
19B18342A7283EF893A875CD8F019F124FD73991B3D28EEA63093F2F1386A15C
EBD69E49C8FC7AE15E6B525596290038D3E7419FD02E246015A49306DA63E60F
1E7309053453510645FF66168961B7D66288CF36C97474DF109303809188CA82
1FAB51B444154738A54B5493450991F8C59C3C1CD422C605740A8939487E26BB
9233D4CDE92F7ECCCA5D312E8E0B4078AC809300807CFE4BF7CAB2D6CB6F831A
69254A546B6DA8EECA492D56B2F9F55B3672AFE8503CE425C1502DC3E14A5993
ACB13E77341634E66286794A6B632063242034681657D298C1383EDD3EA36E26
43914BF569EA1F9CA8277788FADE52905B6912419779A842DACD9FCC7E91AC16
D52049FDC80E3F5947CFFB4E141E414CB9DECD58EB2544350BCE56376867A39C
F71BCBE74EEC946B4412B0398A980FF85A6100CA4BBA442A0DCAEFA2A20B54EE
054AE15F26A7304A9A97B0E7233FEBEB709BB571CBD6D51C00B349268DE077F0
6A8EED668F9B6380CAE5E75DF3B8B749E7052BFF9D02D5732377B16B4C393369
5839961674CE2B5AEF26AFE67D401B47A1E8E4DF661329FC2710FF62DDBCF951
C4868B0DBD87412982ED98260DB84337892A232A3A1E688B83F6031CDDF84F5A
94E60CAAFBE1D27F470EAD9A7C3C767303EF650F0038275688B9FA5A894C3037
38994C150DD55FA5A0DEDF7B0B982EBF82D0914F7C33F549D3055E6857FC86D3
28500A1BEA9D3128504CF2131FF06AC9AA00E30AAAA7D87D8EAC69E3C8B77D78
0EF389B8367EC52D3AE1E3C2855DC776AE87C783986BE301803D8541D5C882F6
EC43320D24867624620D636BD5D74B42B0388C0EF4BC337C53E57106BCFB1FCF
B2CB1DD837885F2EBCFB3BC8E3B4CAFE23E8BEF99C8D9B8645A54B519859A907
F2F4CF9579BE24A6A444D0F771DD144D3AB7979E531294832E44382734E6A4FC
602D809C8592021523C854A025BD4AA11B023E9503D3AC5C864148DF82C3AD47
722148D3203D088ED7A1FC7CC863AF414AC14AC2D75E5EE8E2C44B0A794D061C
547E8F1798A64F9917FF908D97D747A40F5DCBB866F3148AE22AC1F787677CDC
3C2F1C7DD927ECC9E3FD1923C32789B45410AEC18605C490A58867696454DD31
07E2BFDFA2EBC7A3E2A78C8927F24C0706BD5F29999C7A0E3AC55C7435402D28
F2E84D2EE64525DA85544C9A64BAE28239DA8BEB1A6A96E95B783B1FF5990240
926797C0FF3963633223EE144CF28896B00F6939C2D1A29D088F6F06857BBA75
2FD2A7D6BC309B30C160D66EE1CECD38BE03720F7A2937BAFFF8038910C0E7C3
B7C45426702C139ACE571B62E1A19B26F2E26EFA95F8D642F4B65616E2A22223
B0E9F7715EE1E8617FC868081FBF89A8CFE1BD96B21D6EAD9E432F761AE69415
435AA2C70191B24E20E699454570FB31850DAC38AE14BA8937907319AA5E3423
F9BC866B6FBB910B766B0D3B5B849FC57905F16D765BD449CAB4455252955542
B51FDEE30829D59D8CD75108CDD5C40A6F65086B80EA65DF1715D54BEE001D6A
439BCB4B3B7895ACB7AF7EC82DC1672D2FA869F347D7EE2A6148603C8B5BDAF9
AB2831B8F48698D0BEA2FCD4557D0D226934EECFDDC7D0B0B718CEA8F7D2F96B
B74F5E3F01C4FD8DDC8DEB238A2554A274F752B2759825CC4836DD015B037C08
031775B8A305B3248C4A133F7EE497B6EACE17516DCADD90525F5043AF0F540B
1A42B6D057F6EC11DC7BD2F47472592808C6A42FA2EF84CE95E719106E59C421
D7534E48C018EF86987486C5718D18D9E787C067EE858FC6A68B9B834877BABB
CC880E525A437F4391E79929A9C133BC9A0E600E4E4159874F8CACFE2CDAFBCA
4AEFAB885EE6746E6BCB698FF6DD5CB3E52F13482C48FD1456BB3DD971792EE1
B00CE037E54B6EBE4A725144D8941A96725CF46A44ED8B88CB1B2544153A1AA8
D2DAAD9539788780C6E8EEAB50A684882F5AFA6776BEB4765C6ED70B6E038C63
536C67F00F622D32DD9A0656EE7273EC391D39F1B0EB6B09E9A78487CBC56040
8D863B9D17F62B1EE6919968020D41EAA7F6C1A9B682B344B7DC94AAEDADFBB8
67E923B1E178D16C6D2C47975AC170824CA29486FA545BD8DE5177013854B109
11605F872456B8F504547C4F503F906E74846306E52E324E00D300A78B984ADD
86F5B2942225BD45F6FE01CB6C10015841B66CD6BF4C70AC935CE75D02039117
9FD995E5020FB2B56B488D0D628F058DC1B5EB22D5F83D6A295AB9E01BF45591
DFC3B9D53980C582EF3A79C9F067B1C1D5C9E915592F7FABF351B02E357A9FAF
092F7C3D4B36042FEFA70953AB89F663527AA83419708926B62570656C0D125A
A93BC857622A48D33AE8B2BDCC9705D1EC8848293ECD9599CAADB3CE77E62E61
01B51F0D07F66AADF8A594E4DFB2332F3791AAFF57C2FA041DBF351FD9F074C9
8C6D159862B0ADCD0496B65715DD63A14FE70BBF7EEA5114584A91048CD1AC98
BF029299CEA838209B392B22761F4B31AE2142A1C04E07EBBA6599DB6A9E6D15
7E7FB615FA653AF27B230D652116A3472CE2059E675557E53A7F82EE005220C5
D9C7368B0E9ECE176300D5B23326DB319B1509B69CA9477308EBC12D763FBD65
03011ABA247A0AF3051EEFA76D33FDA0C0AC392A2F772A9E3D9EC53026642726
4FC16F9E84979B100B84152CF6E0E17EBA2352DE294B8534DC59A96C113F239B
3FDDB442396970B2C343CA865C47F0497FCBB7C1220C5FE36799601CE72DF8F2
762BBF398C49AF0D61C808A2ED8A2E67D5E919C60C0CDED9471D5512C9B6D17D
206F7034D0EA4F1FB73476024F876A60C80B2B0BD44F9515593C1E7C135233EF
BDACB6C764688AC18704FB8322977A15C8ECDD04BE95BF3724E476476930E154
3C91903100B8AE9369DCEC61F491A3E6DBB68A218A398562E2E6E382E387E14D
829E48084A5F6F169C291BB7FDB904D149467FBA73927F2CC982DF1C2693E6B5
9A09821BD121F361A0BB39E02217B34E09C28ABE1640ED4AEF84057FAC50C227
D23DCA9572979472770D120BB685C2140498296402770DC7262C71EEBF9EE42C
7A111D5BC2A9EC89E2F19716811BA35FEA5AF65304CBA1325DC5A5B0D8ADB556
3588D38C1151A012779EA3A28A2065649C8934EDCA599ACC8C6C5122AAC38AAE
2183EBBF47DD2CBD2C857A323BFE20160848929A0D90C4720806141B9514BCE0
D709937674AE66657BAC3A58A4EEDF997EB49F8D967E148F3810C7FCB2838464
1C07C53CFF7417FA1F38C1AE3946453260D3BEC44FCE8730E450F3EFF5C5CAA7
2856C1E8748411A4EF4789F1350905881AD6417E215513F8A8224D0225677552
04C3D749FA3CE81431E83632E50C9504B72081432557689B9103528A7183858C
BEF8F5DB1F79860C4B8B64B68E84AB3FCC5AEF37DB709AF088DF3215909B48B2
6D9040AD0DB47314E9395370152136FEB80F752558E5290B983A7CFD19B9DB65
CB41D0CE65F05CC6ADEC4BA2AA4B92B0A965BEA31B1EC7035C2A626853C90F57
4F0753F1E002F576583BF8FF1FEE3ED0DB577DA27E4E341D6F2D32A270159C13
8B2409D3A79E946E5680042F31B70AEC09B7B7D697A6CC355BE29D6BD5706D9F
0A60638B5608A05FCC5A87AD774203738D9D144919E9832D93E1569693E3E2CD
CD508876E200F3B1C6FC0878C3689734D0977F61D836C0BB1FA3D448B363C36F
983002900693AF3512783242342904893D044DA384E4836D27ED3C5272F362FB
3B3C1B14242B4698C022109AFAEF6A836BCD3BFC8CE815CF8DC0CF6D4C15FC11
0A14C6B17D8BE6638B1745AD02A01894C458AB9007A524E4F3BEB89F1ECC3D64
576524BE0B1B9D79A76536DA7036198FE44403975E6EB58AE03B17825065A7D1
7F4815CA118A1F4544CD71BEEF45014EE987DEDDF0724CBAC3C084F337DB347D
7E909B751F4CDC6547F9D72805E61ABDFC1C57061DB609F9F27608073B580ECB
45053F0F2A618B6EF08C5FA3E85F241E3F8F815FCE7C8E07C2A4258E17D6582F
F715985459988C67DCCB845094983454A37FAC420C701C12BAC758B30905B56C
CEDE37F37167FBCFA2CC9AFF696A2DE791D9F3B2BAC8FBED7AE0AA0A7DED469C
64ABE4DFA9125787095ACA9E34C45BAED9D91FF93DA907953BF1D25E12AA256C
9519F4F823F3A4FBFB419579005CC1A23BCC2FB48992BA917D5B91FCFC9CADE0
32280F7537D1F123E6E96C71479FE3A4A549474E89A56D13CF6A99EB5D1AF2D6
1C7E16BD6625BB553B55795197C11C2065C639FCE1C3EE45D756CFCEEC3CACED
14896D6034D50A5444881CD32A24FE91D5FB42C42113C538E707C16EE24A3F37
5E7C5DFDD009A6E8E5F3879805D13FB270799FDB98850AC56AEFD124F359BB33
327123B24688B757F4AD4411072FF9EB94481D1B738D0627F2FBF79761569445
0C2484D2F2E64B909A11A824C2BA80DD28426CB762BA1573E6C3EBE16666020E
7CC501E807504FA9A2A4625E490C819622D8A8B5C3E352E7F66C743DEB4EC14A
3AE0EF469A2CD2FB00EA4915F40C24875AF382C1268ECD03EB4698A8F8DA9A24
8280280A4F1F935E552518270B6315EBCFBBD3592EDD7F3CAE82407719F13E81
9159309FAEFEE5BEE37EA0E3BA67931A5909052548D3A596A6C6C6AB77CA6775
BFE52C2A97EFB0D86DD9BF2F3AB34DE24D16AF01511A0944D87097839CBA65F0
FEE40BC80E05BFB45CDE854D700A2B0B8180E5389A54B85BC69FF37B8CE078CB
FF5F62D1E19C06F9E6851A64BEC3F7869EE3181CE8AA17B6970B9CFB51816062
5310AF4F5F81EAA90BC4FA26BEDDC52A21E60A61A01402B7ACCC86DB1731F1F1
240F77BC7A1368AE2954C28514D91A9D54BEB95915E160B6E3A98C3437ADBE66
A53BE748C4E76934D67AA367955FD8B1E95BFF59DA4D95BF116C42EE64640B64
893EA9BE9E667C38A6CF2CDE468AC65F90AEFB8FEA4160CA7AD42C31B640B072
A8E2493D867E17E8A5611A4583A323BB7EBB612E96A7A1B36AEFEBCDDE5AA2FF
060D88836D4695194090DAADB9A35ADE44D831A8E3D9D2C137FFC02929346A86
ECDA9D88987272938AE8C3B401D715DF2C4F8C1E62336490933BA9E1B0A271E5
D7D1E11BCB2E5323B4584D700B48491C5F4225A9A41B057F26D7B94F20FFB2A9
08AAD5FA31F7C7A872D8207B238B844CDBEE8CE346F6EF1B6F7773956D585694
3B1451527353048BF826EF600D6E69CA94CD5BA274FD97C1D91E0F9707C5A8C2
ED0961C7213C17F6145CC1F45F05A8E9A53153E122E9EC7CDBC5894D125F71CA
6010BD9D3A93BA861B49D20C998EA51168FDC22046B4494D36D84438C2CFF5DA
6ACF1DD99BB7CE0E59F7C7F521D68DBC2449C1B255D3904E7F8092986A66BD54
5CCECC2ECDC555041B208E48746DCC674AA211C838DAA42FA92D9FB2110E5E6D
3ED8F883BC163A248F9A2052CB35581F7BDAF02FD9F09C69B9C372CC3A960D70
CAC2D3F05C22EC45A906F68C4E4CFC5892A9E3393CC88846112AA61F2D7004AD
F8AD70565D687AAAEF87544254A6D42D2E6C03CB845598A1A1DFD34EE4E5D158
FFE94677E82FBAA16537D2D88077E416007EAD0C6BAE69DF1CE523F1902BAF38
E7AC5C55892EBD8F7405752B43DFF055D163DC385B24ABE3197795F2CE7FD0AF
DD5A194EF3B935E3D72B1F0E158FB6AAD98CE27E2C4AE26093682C1640E819CF
2D967A1DD3A3048BBFFA4AFF66D2967DA189C720EEA1C0685D6F4C87CB6B51E4
C2CB3C29C1080040FAABEB2FA46E36AACACEC2EBB10C488268316E3823E93B10
C8FB7BE41E0B9B15656D5DBA1CB3700EC9BECC90D43E2E922A741B7495D76B49
0981D4362D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /Box put
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890B0BBF10075D53739F7E84CEE95B40C3DB68D5
6E9847E37B7920412068C3DE2065A77281345980956AFAD312499818890B454F
5DD8C92695818BA4DAFEBCDD4D268763515CE077A64C5F3AB384A6DFD7DD9641
FCDA0A3344B3A14F82D478B4BE7BFC2822A4D67AD3FD07B11589B93842066528
1E51D954D7E6019F6921DB9B00ED303B4B8F557EAC7A0B0340A268B0DDB25B3E
BE0982129B0D3416CA5D07ADC689CAA181270B8141F9D0F60C60F156CB305E5B
E71D9A5D5FB3216BFB66284FCABF6D74564D1288EA99D3FCF6F29C3AA690A596
02C0AD2BB29A2D457C66031E5571A1454758212EB4D053F4C28FF629FA94DBF2
9677AC4B92C4DF5C7FFDE31A8F2D6F9477896C11CBA890DD464C9231B1C350E8
E8CEE17F2E0F5D10416F7D7FBC6085E9BE09E692951EA7B93A9F49CD458476E0
A380E1D122F275093ECFD398FCA6D714187CC12A2B16318F9E1D2B0E9EC134A2
C4D2674AA68D2E7EDBCCA383
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80381FF096BC19431A8B3B1
880A35C206720A4963693791456740F913B52648FD5D4B05AB450057E27BFA25
D698B2777C497318CDB711161E2DFC121AC9484517D7C558C8ECAC25FB9EE32F
0F94CC9DE7136AAF0B41FE083B062CCDDB620596CC91711D12A4155E5D1DCFDE
9F4ECD69FD31FE27E7B4CB920DE053CA8BF7D166CE3E0B04FCDA3B150A099993
B56AC7B3B56D0478ECBFB339E94C930D379A98504567A22ADB01AF1DCB0E8959
857A595C26DE3A10290AE7E3E01879B5DC8375014D057DC4E23576F354A66710
A4674F99EDFA00C51088440AE9D3C2238E0D3B595913A41E866DA6742CA27060
7CEFFEE6D54641B7E558F1E9C5DC4C9888AD0E77C0287AD45948B2225F0183BD
481A526F5680F6A5B1A5A9D78DAC108CA1FF9400A3DE2CCD2A72104CF80B0F7C
072B05B4A5CD9F0DE3EE7FE13BB25E2856FBAD156E5CE91FBD5F44F0E247D957
956045B1613117331061BA53184111DA5E9394DCEA8EA947CC9AC1257ACE00A1
9A3389B06DB5DF396F0783135AB26A74D382966B3EDE9EDF028C0019ECC8CAA5
E07458583101DF37369DD094770C1A1B8477244E8695B6DAF079BACED60DB2D6
9ABA96673E399338B988234E9E9616EF372577738F553F81135829F9118F4BFE
20CD51190E7D02670CAC5ADDE78A45B552D7C6C98468ACA69BD8EE5503E25738
CFEFBCF081E46C55D9E7AA3C194B3F514DA06353DDFA9C87125E5C9B69FE0A59
23903203E230A868D4872655A2BD4F485C7FBBFC1A88E17F1450615960AC334A
5E3CCB2F8DCA630494BBFED0BA2BEFA77D3E67E54011D9DCF8C70A6E4AF6B269
BAE0CDB19D93C41B6028FC2870E4E57BA1B4773094EA195459AD8FF6D402754F
0A59F7B466741F359B651D4858046E62753E97CE1C0B152D66E148E1C5883A9E
A152F67BEA64E08722DCE6A5762E55A5F91337B511777C4690F6B64AFF820F57
6404D526D66EF00BB3F49D3246261DE1DE2CADAEE76E15B3B7CF6D59301FFC30
0DE2E19A784B1D204DBA858C9AA085B3B5A87A04282C152610C6DF152CD384D0
4A294115CB01446379D93A84DA7DDE692830CEEA2E14524F98584ACA7958632C
ECDFE1ABA0F78067D00DF338FB71E7ABE6EFEB2A6172CBB0FB50132566DBD214
6CD88C3A2FAC47231E7B1033B4F51FBF490CC6277C9995C6F0BFEB3F5BC0FE45
B681C73C50BA9A434AAF78C09E13E90690A80DF614F24E9D390EF786681B0441
11D831971C4BA33E9FD206A7B97E69443C961E0B060D472889E553C988126096
DD343532E74B59C0AB38E1D71D781BD8282FD2969975CDB303737E0E286C5E86
F0126AB25A5CA2875B48C61CB8112A4CF9B8A7B534C0238CF65B3DD3986298DE
5016DE66B3DE6237E6FC9CE04E7AEA2C7E4A824F8054FE402799ED4DB5A5B214
C02A57BB9900E406B2FC13BE715ECE4B585AA5F99198A39BE62AF7CFBAB277B8
A66C8413AEA916F69FC8885EAD2CAB2644F1E25DF5F6EF5B5ED47CD8B47E300E
3F5F6B8B75060C761A63AC861E5E78D3780C7A70B5E6928526F8EA94A2EA40EB
14DDDBCEC549909020E717531A147C9ACDB6F5079C10E2B967CAE8E2646B86F3
F1CE756E4036C1A1BD27291A7AAD14E946491C639CE22CFB40A99FE068BEC315
186B6E7A6F5F190D9EAF4AC53F0C4598A5BB79E23DDA5F25039ADA8A80553F05
2F97988D4B276110BCA39FC05FB995912980707299900AE4F349771B17DBE1B7
FA91F2F7F3C15296DDB13A3D8F34A84DD42541141BEBB07219595A46DA8FDDB2
0819F2337432A326ECCE79B1CD12C56C7856D4B0ECD4E415CC9290C79FE24F1E
DAC12771C6D0E14A141A52D9465223B3ED9E26A5D9B0C31FBC84A663DBE4E3FE
D3696B649CFCC810261051FF67E1BDD3F5A6455087145759F387B2E8551B45CB
6F6CDFBEA8F56A2BCA48DBD42C11E120CBD1E6B9479E52D42C8B3806FA06180F
1EFF5CEA5ACE58B45624D6DA288C9EE68A76F7D836D0AE73FA5299A6343F5838
C23AE0E328D4FDC5C2E8652C59215D05298EF6304FC37E8EE4EF7F2450F67A96
D44A2CC71B3B327B16527BB2894802F6E0E5B3B0B42C4E29643EC14B422E5BD3
BB0208A83E16FD4236560DA1C968928FCD6484A476D9F0942E0AEBE6BD0EFD1F
37687B723EB4242BA8FAD974BFFABD8E22DB7EF8B5E3A28F83EF3C454918DD08
7768EC44A893A7EECB6D95C35BB87DA2B60A0AF369640C43F5923329E4C03C24
A07FFFB684DE7ED68996FA2403795AB210E4155A1F61F98EE74BC9078A559E15
331A0AD3B0182FF6033CFE1620E967062F19345B9C2F4A5F2891AB13FCB507AB
790F40C12BE5B2CA616D526C530E15DFAAC1A7F55790E477C71A2FF28C91C1A8
BF2C73424AB98FF24C1197A24B0FDD2FD1A3676A2E5FA086AAD262C1B358E0D5
2FFB821C17B58701F3DC3453281288884D5B37EDC8DEF2EACD9C3985BA9ACAC6
9EE37C201D3D31032AC8A1BB77DD481E807EF825F48411558E58AC00AA0CCD15
B2E395482539E49E919F3B177DC742585727C12F16E867F7B692C959CDB7A45A
996C806CE627529201F1A70ED484FE92F0C684F4A0437873EBAD6AFB646F54CE
C76AC98678B54E6E3A1034494CB67F2E1799CC7AD881CD1277452731409EE7F9
F5E396EA1B598CDC2B459A81B19A090AA25E8D003DC50C08476F761BDD8D791C
F23DE48A9C4071388376DA3372563DAB6D3481A92A83B4687F352DBA807E1632
E2C67A22346CF155930698C2E76B71C22AD65A76B04AC2C007C9D8FC83BCB2EA
05A9C4D09B9A6A983A0E2C816A464CB9910A2F9AFBC83648300C8C4E43B82EAB
441956C911829EDA98948B372809F295F67DCDFF37359A60E233CBD430618695
7AD9A2ED31221E1CB19EF42F8B7C7BB88C50C6B50764FAFF860CA83C46485F21
D4EBCD3EB0F2AB9D84E98621B64F4CCBE09A6338DBD1E11BCB2E5323B4D8E08C
2E56EC2B520F06515DB1DE6054E882EE083ACF0B95B9F10B0111760DB3DFA8CD
622F9B0C79E4635A10CFB39EE250AD0FEC90BAFCF313178E02D3BFFC709F92AC
B6CB2BA47A553BE38988F36222BBAE11B6FBA29AE0A974673C28691118B7A460
A2DE4498F25A81DEC9360CB9AD881524A036E6FDB83CCE8849508AB9653D3002
D39B43809AA4D40AFFA292D1BA24E033458D3727ED4B961BF04411C66C0FAD7D
FCB05E178555E2314470BD7E64EC7A6060DFB96D5030E787961D72D02C195C66
9E792C0DF7F89C1BC2EE98C878DD54F9923F72D6AC5BA847A7B941EDD03CEBED
F433870C0523C3C8A7F3AF5DE044750BFA6253ABEC6BC7453597A1F20DDDC346
E1C4E776557BADFE0AFFC57D97601280566D93EDB3776748198CE6A6F0267B4D
BBE06D3F05CA0DFF5AB14922D59D1D8AF6CD3C4389E300E221EC60CD244B4847
6D645F86023F1B1036F425C07D122D8233436A38D5E1CDB4055B5F865A7594E2
D8B7498C00AAAC52A30A8E0C5777FE3E4657BBBA231A053AB9E1E03DEB22A520
A2255010F286DF8660274911476393CF409286611D14F20EDC6ED439D6E7C35A
F7BF31F66AE16EF9347EB6CA2FF8E541262893F836791AD7050205F67C15DECB
BD1CF81913CF0CD0070B27D4919792C0C06B83A336B37A9DF77EF94AECE2622F
721CE6235A8F035FFA5B7481050ED9EF7A99E3FE103AB285CCFB4103E6A8E744
9093FDB99991507C71753EE604A02B5CA76EF9A534FC4F81CBC9BC691EDC41EC
90A5A709059DBF3165BB4DE936CC3A4BF19EA1C5D6C0D79F9DB3B7F7BF5E3101
82F66B217FD6CC9B23CD9DBB08CE4B28C74BC8E99461753A0961785426499900
9C8D902ACD8AE97B075D4005049C9BF95FF0FA981A8AF789E1DA1A7857A17F3A
F222687DB9CF10CD88109B0AA050F06A64F7524BF57FD63870B38E4100D67ACF
9EB4C072D3196F99FC3E580F6F6F786A20316B992F547DE9372FEEA0BE4053B0
70A9A853C1E216348AB87B18A4184C84556C0476BCFB950C407E5604911B96C5
87E65FD0058E0576018C74688065C50F7D0B536D797593F26AC40DA92E2D981B
85D1E0B1753C2E7442DB7B4B326CC54C4FFD651DE8FD08027E173E0B17248737
1429D7DBDF93556FA7685C611DDCD94A4896BFAA2C8A8C89D4BD96EDFFE84D09
E3AA7370C867BDF8F8C8588A21F3208ACFD8C6C575339DEE0779D8D019C3EC98
638F3A46551B6F97E0BE5EAC026A987F37A75CDED1A9D574718B9BB26953148D
70E661D2CC3C4CF52954650B22E773713E78199BF9EDD29FCD7F38CC43C354FB
4B76A2DF694BCFE203F3A7DBB81A81998359B60474AFB288A98C23814295B0BC
A19AAE8BD4A60E525A10C58FE79946A14640A2F755502212648EDF21B109D7DC
8DDB8C5E8EF4C79BC97C804325EC591B2986659E156E5951847483D532E8AC2D
BC4B412D5D905F953EB9E5979C3382ED5DE64FD8D6D9A2D5C337152A9644C07A
08BA4E56BCADAD9C3D977139AE859C41999FA96E8674AE77BF664F123B10A5BE
8359A2EE4ED4246CA0155A573220F1F29E6386062BE839C105041E52E6B5F61A
B5B28E406FD90A6A63A14CE47F166EE0323CA9B481A291D87A990E0CA3FF4CBF
0370E4BA0CD7D2227F5AF5D21133AEEA0BD95D56C03E7072927F790E4981671E
39DEB642914AD1214B8BFB43159501BAEAB263FAF925DDE9F0CCD7039E630D0A
7BB94ED4DD307A0797DFC4C677A972E2C284B9F6E0CAD92C3E68A715763FC442
E8A4915B40A13AC25D5FB37CD18C66727A37A358B1683FBD0A43A998B4D17E3B
952A14553AEDEE67197D07A9AAD980249ABFF386E03D9C1C9BA3F119A8D3E1CA
21561EF3814CC3489CC386B6D55EBC71C9F1675373F838D1696363126AD0A949
B71B69F6AEBEE7AAD22818150595DCD4EE1A955E840DF5A4C54B4F5849503EA4
EC512D72F934167C8FE6C56C2062C0AAB932CABE462536722E95FDBB2526680D
97565FE4D1E216A9C768A454647DB379C775892519425956BA861357256AE824
214183D73D794D9011431E629B6246DA4B173E61879C48F6B34D06B112C493E3
DD8CEC4918D7FE142F2FBC5F9332C1ACC7C1354F1679F1990BD3858B8FDF4445
719EF487B22532E8933BB246080518371912A25EB99250AD332CD8081E7136C9
B0F4A56DE196CDE1258B3797F51DE7D002AB3BFE0091EE051284534C1F36D962
ABF33DE5A6612AE12C9483BF15B5FFFC86409023DA0394E3CCA13502D03B122C
2703AAB8A77FDE27917F53B28B061373FD10CAC8DEA6F31B173B13FECAED39B9
2390F33FCE21AF7F3009025CDF1988A5CDDAA7D458C7011010B1FD1CEC578CA4
B18B4BE3185DF2B0E5907BFD26080675FC39DB9D4DE96F37F2B4AA42BD069959
F2FBD11709734C657E2A90FBB1D647BA45ABA49269C8F547DCD6E7B147D53DB0
D8DB88F2B44E001A553FF47AEB55E074E0A7EDCEF6F7111078FA69FDE026DA43
38FB27A18C3E1F59CD60632250018126944987A474546E37FD699818647DD355
44509FBBD85CE0BDEBEA3B2E572B4DF407490D64A414C6747CA646C13E88042B
9E7A25E45CB235B81E5CB85E3A2545D0BBC786CB84022BB8CA04321F8AA50650
11DCD3253EB51393B1D4C688B5A9D7DA55A1EC7BC558D542E44DDFF1FC9A74A4
0B2812488FC5BA79D292E3B0AFD624E645E212ADA620A07CA27E18E27F991BEF
F46C8AB67AEA245C01E285B42CAF3BC02A3969643AFDF49662442EFD59F05B96
1AF21DE2B17695FEF9B65A27BBBDC772E9DF961FB2F30DB9883C1E620582F237
CB3303A57193A074A75CD8BB734D2D090457DD21CF69239856F03E138D66F8F7
33E229271102112615130FD9C7BBA90E20CA49FD3906B7D32C787DE06908B28C
3D60EE977923FCA3E98419129D89B413FC97CC45EEDBA52C11B9D5B7A5DB78BD
0BD78C97949EAB8569BDA6F2A3276706EC7C748A40418CD85FD323D46131B928
48977FD8065AEAD9FB2A1398CD00985C51E6D3FB17FA016876DE71DDCF0E758B
4610EF33F894F4D2ADF2271BE070C5563D8B869B87AC3A8658953E55ED37B3CB
029ECB81D9062DEBFA016CF35B3294D1DCFA54ED2EF42A988D72A4FFE87447EA
F45A2D426B2EF726049E86265687368420C97F3A415D53BCD1CC18F5C21C1123
32EA26015383C8D43E634C5F8E12D8BAE4823157D3E1199474C14257E8E029B3
87278769BB6E25F804862E30C66C2A1F2B54050E3F5C7E6F5C409DD26894B96A
C5AF66FF278D296FB8094DF33E7E363122839817CE15B8E925B0A0217B02C96F
5BA40968213B2BC03B6C716BDE9F3379CE9878306CD4905832A6D7971824AA68
455AD79E24EF13D6591FED451A3871DE4536ED46937EF5AB63FC5F282FB23867
D928A14FC94468128D634FF57D84B51D8C3E4B86EFCFF1C0E19F4369AD260BA3
362874A4D2FBF20E45EBA5D846EF69573C5C757A1F1459765D4C7454D57F3670
A11457E550B1E5EB5E4E06836C691F75F9A9415D03C8D92BA72C28C2C148FF48
843F82FED4A9E36DE60819A02B3BB4F76F3EA659AB97D4959FB8F56CF48D70FB
98C3ED83F7C2ADB01C926F1F6CD33E96A256CFA517C30BB1E58C0AA00F038495
5B590C7CC016C2D80B2772B05DA60F3DC15A815A6BAFEDC399CF118A1163F1DC
4A62013C0F6DD8A3E8E1A6CC6E553743B339D677D7394877C88A417A449A8848
5A0EF2349E69FCD06895BD3EA938DE26B6844B3C83CC4049B8C28C819C18789C
CEA510AB3E173171554DE156E4428BA4CA6196EC0F407C2D4DA38EA432F0E7A6
D8221F23B7C33CFD97470C274A29EE2FC01C25913BC44D69B3AF2FE2CDB6B427
DCD561C67D2DDFB5451451F3C27E48B4CDD5F28D42C9ED9B496D6A2BFCF62D94
E9F6046C7E0E4EDC260E0ED4DB81CFEC33DD7CE3D15A87D1A6367CAEA1CC29D8
98DB297E6704C9659A6F1EE1891E92870DA7D8D14B2BF812C50AA3FECF8A05B0
94AF75E2869314AA2F33B0991AE0DA0CE8EA5563D046BD89903AB4E1810320C2
C0CF593A42498521F651C2B0F65CB3AB456D19D9769EAE8ED0BA054331141A70
530E56A16C6A92EDF6BD246ABA693D76BF6A92474A4611F06C446189BE6CE558
BCEAB2253672D95FDB5AE79057880B98885B9329DF559EE4F73496FDD2B58F8B
140D46A98C6662873464594EBF58A0B38A156331EEAA0D0BC5EF91C0EAAF3DEE
91374116092E029686E4AC0E2699E88F5E8502BF810480116C42EED0BE15D728
D7D835AD380F96AF8485F01346CB8E17CD12A285205B2D5D6FBC18ED1FF5D2FA
F05C9DCA343FC3CD577C8065C008159E3F19BA3AD710BCBFEE6A59B9B386BE9C
3B49C3C94D1FDA5A798DCFDB5ED2526C14D183F2D29DC9AC3DA919BD9E18DCB8
98D079614C1B7F05AC96A5BADCD03553A596539AD17C7F601B0E36197BFA4315
48DC233902D54DA503AB0C3C9070F96241E324DBE45F66E1F2593276B50E8356
E887A5CDD4145844ED7B2A9D46CB699AEA993B1A88595BD2C294C3516F1EE4C1
3CAAC355E995A962D992766BB423067C4F435F098D34636052ECB925E99BFB25
C5F3B334BCF5EE596AD5B76323DE26E99F3C361C97C925E515EB4D998B4B2300
FF7822D86F605825CF053506AC31B78043CE8365E2027EDC6E5AC069C96372E8
92B908E047BF014BBEAF3F3F386590CF7CB0EAC7DD77032774ED6DB52FD4718C
056EAB723941313444EA826ADD5FD8FA44B8F44BAA709A2E36051D710DAFB933
3E14C331C97421979485AFD7D4E3FB13343F286E505014A567733A950B86CC56
52C620B1E6D5B8288CA707E7FA2C69204A4608398E4623C9A937B9DBBC40F6BB
6BFBD9CD7021261D2C811053FEE9D4902C2219481F2E2E4718FCA2A1DAA2649D
EF7AF38D465247CC08127C60B94A181D75FB34147D958570D5FE557EA837042C
CC330766EA028CA0FD447F07894842D41EE2F48F13943C8B81DBFA5C3092E0E8
2F217CD7EA509AE4E6E51A2027EC08AC5CF101743490953E53FA4CF17127D584
4580135B616405F42758BDD2C8CC29D87AAA204BC6DFB07D15896E4C14D8A90A
3154A16BD5F360C7E705C772ACBC7A0A254B47EBAD50170FEE00A681326CE51B
03E622056FD6F12A603AA2DCEF3B792566996593C9C96C42A905ED43CF572883
143623DDAF5EE41814285EDEC18B272C7113B1118FD1A2803D42407A25FCEA46
8F8E5B9780310AE4D7EBA4461B4C8C45CA197B190B0C1083D696C0FA27B86904
477A22C097C6051B7060935838E474E21B30B609BEF513096500242108B21D9B
6D5A3669931BEFCC716F622A9652257FCB5E57C2E40848498C341054EB5B41BF
7BFD63FE6D413B698AD6FD7333852E7EEB380DF5047AEB4FE89FC3C441D0C9D7
94B99058D57BC2A6F9E32F91A6BAA38B9CC27499F821BC245CE3821E71F5A233
2D9A7C14479025FBC64489304F694C2045E3E9F4E403A22EA36E867F53739AA2
26E5184AC04064F5795C0DA5DB14593F57087E60E18B8233387B627CB7DFCC29
F4A3B54C712E006E1D6BD993668999C3ABE409CEF9340F82F0E079F1C7200DA0
E6977B036E69FAE169494F21066327922289B1F5BBFB2AFCD73E9755D15296F9
F8A854E4C5A61DBF3CCB017E5E35F756077542BB622AB021E1FE2A443AC56DAF
E0CA144AB9E02C217D781688441FA40A6B018F59C1DACCD2750021AA644B7ACF
EF4A584F9424F3AF64A6F0A9CE7AC4FB789C7531FB04B33EC5EA325EF6E6D70E
E4928E54DFEA06E49A5D6A40445DD53AFABBDAB026162A499787D099A660B676
6632F6E67008CADBF78A9B5362F30A10692689E5819F9FCFC3923FB543C420F7
ACBDE3E03F7063896D3B578B229493409BCAB867CF2D3F12E534405BCCB859F8
A683E36DBC0C5B4D1370DD12DEE8DFCEEA352A32E88742A2D421768D7EA6F88F
C4A0DC6D2A471A78F98EBDC2A98610274360CE8C45D4BE3CC38675F8174EB604
F72A3DCEB6B5AAB293A32F6702E0FF3BAFA6428355378CA104CC837EA84D6129
481257F780995ED7B53920D30D870F9CA2EF86D584E4E06BCFF708B6DC29E0E0
E03461C073EA88A90D232A65591D0EF3D501D9F1A88D8BB0EDE87EF9D987B4FE
C57D40E71090768F6529B0605F51D066280048C06A1699700B83CEBE19EAED24
C1F98F12A9E59DF18C613D4983D415861028AADD851711FBFACD0470F350D9D5
B1BB4B2C4FA45409B5EA00262602C9D87938B75EF25CB47DC325BEDF738EB6D5
50863099C9AE6A1D3DBB5D156B3D411630A27D7680B335819744CAC5F1C047BD
AE3F976FA557F6F211E57F18329A7824A3550E9659338637B7328A5436567D6A
A32DF46C7EF465E963B3FEEDA3784CD4EA4F2272ABA4EF8AE4AFEA505E53418F
905031038EB4CB4DAEC67459B715DD5462BA30DD4C5DCBAAAB3C94DEA662B734
2E0EBD9C835496B650874879889C41181A1A4393D141B780AD867FDE092F721A
A08C3622A7BC937DCFB2783AC7B997E60ADA11E5359E29C2A1D208C0429066EE
18CB0870B0DC25F2E3490A94907A3F00E21C72DC6C55F36DB35C15D5A480A1C9
B10942E3E872BD8F6DAD70F1143917DB990826700ED99EA462C96E44060C1D4C
B37236209050865DB7C42DF6268735DB5F3372B8F47C464DF19C69ACB3BC0566
E2F254777A6150B5655CCF81257BB2516467D0BC24C0033AE972DF735387938B
15A9B4D9AB149FE14A7427E3446600FA9AAAB3B2C8FDB9A87D88D52B68DA5709
7C8EDD95A6A1CE1A932EE564AC972810186782E79F47AE51B972A4FBDDB4C4E3
5656CC9F8DBC6622F6729EB829951D29100A54FC85D08E90341B411382A5986E
1F3DDF5AEA2370977FA443ACADEE13915C5CA44FF41CCC2BB9ABB47FDA189295
DD704764914593BB144BBB0F0AE0879CE48634B30FEB7005A526481C611D9AA7
AE34F17DC740742D3F071C54D7D271E9E629110F0E418EAA50B6C9AF6D6EAD9F
BF8FDE7770F5D6DE5B3203C9BCCA8EAAD9B6DCAD1A0CD99FC8B7B93CCD6D4F24
070097AD9B966A19934FC1B4D2E031AB34225D92A83374078E036FCFF098B6D2
5837BC0DED88F59B4A7B7F95E8004CE4A072439889894AF2C248C01D2E8FE34A
BCF54AFFDA7028EDFCD21FA3A26FAD48BF97B97292A187D01AAC0CAFB11012E0
240B19F6FB6C514D23A7A4F543E9ED93F4430AF3A4E3BDA695AC6822C4F42EBE
D74363F447EC5932E79727ACF464295E75CFC635036CF27FF9C769F04482C41C
B74EBB80E94653064E169344F16D64C2379F33E30EA714B955D213A1E7DFE51A
BED171CB2A2F96F7A269A1480B694F268CA7C9F788B1C2B92F34A32DAE67591C
F5565A0DCA782650D54B8ECC37EAF5F568B205BF10B71D8253E6F8FA7AC8DD1F
4DA7BB92EE841EA5A7EADA862B5FDAB718C82A641F16AE17384099CF4CDD682C
50A6E3D62384F9ECC1679B6514C107D7B3A611182FDC1BCC1BC10458CA6C4395
659B0DB6B612C151544AC29D179FEC22D258A9F7CF063183A0278A8DE53E7F5C
94243F7D9FD8D8EB4A878F25A58C920D0FFFD6FB61DC01A1FE6FA61A1B3F4468
7041F37ADD6989E85FCA231BF12CB0DF1FDE2D2E1EA7349E324829A88CD39230
CB799D5E8DD698B46FB83704ECCFD2A6E34496A866D0C83F059ECBBEABB9AB7A
E45221207CEEE97EF66017F71AD9A7FD057F51ADDF7DC9BEC731AD6040FD9B80
4FA1469A09D6AA571F570169FBE88604B96CB32927A36FF5B932C8CA84397F0C
ABC125351097FD8497D3BB8E9F045657D5C4518306F16F8D4FFAE416ADDD1143
EF22050DB3632F320B45EAA8E7D305ACCE79E0A80729DA7693BF3D10D2F6DF1D
B8ADD7E6A17351F41CCDDB48903150D0943D5859F14F692AB281984EE6A56410
101576B49CE7F02FCBD3A3A46F73CCE5E95F787EB8C221F564E3B93CE5C16D09
3C2A4F6B9F0BE52D4F1F2758EC48370EAB4E1A2B681AF29869CCAD648554A228
836C1290AE4EBFBC519397B63A76E9B25318716BD59861F51B561DCC11519351
DA80BDB4826950643DD1E0C7F8DA6C87DC26306136352190B89747B6BFA7EA05
7D586AF5A8410A54FC2AC7A38CDF5535F92D8DA29782A1875C6C8E74B0C86C0D
388782797D2BA1DBDDC0F652876682B811602EEC29317268608B46541EBD289A
ABD77322EA46F92EBEC5FD7A62A5A3FD057F51ADDF7DC9BEC731AD6040FD9B80
4FA1469890BD5FCF05778BAA1F71B2052CB92AA45721DF8F61EA0E57EAE0585F
0E658DE2D96CE4E32F2AD8BB9DAC4BA7CD29938FA16F33A24555973303D8CF20
2979524862737CA2DAAC24C39B323953447DD6F56354DFE69300CD6E60E6F118
FC3499F108BA1894F24E9568F4F1D5E43BFD09305D500BBE449DC1472CEC2735
D05AD41A422EB067E96C6D15C0815DEDA70A37F7C832BADE037A698BEC695D0E
254EE44384CDBF724CDF871B38813A714E15A869A760D44D5B355836833BD1FA
7CE41FBB920A546C3577E87ADE936A6A10BF199A9527D50C4FDD351B62952C6A
EC9BB506A5AFD9D9C202A4A34D52F7C2CB4489A057DB04B85024823654FD33D3
C4D429D2B43B44BA04A75CA357C3415525CA05E017F6EA82A483EA04B0AA7910
4E10420C3F67E491EA298A68097564A84472C985BA26DD7650B28A326F8B92F4
E100749B38E308914FB174E3C63454AFB214A8944B2299D75F55E0409C9F019F
C7C839A94A20636BBA90A3FBAB71B0420103D40D73B573CA453340C9E6BF8260
14AB76265A008428365437EC3D1EC098C144D60AC1FBCB365F6F507132D4D2D7
1DD900F951767AF33F88BA6963957F3DBE73F5B77F953E9D921679ADB9E1D6EA
11EAFDDEACCA99724FC44F05882DF30569D86C3FA13E9E9E4534AC2F079A5A8A
1D31E27646825F500B2E3F12AB4EED2A969E6BC5E6D42E77D75F43C6AAB7520F
D896CEAA4303C754CDB848EE36CB280C98EABA19973BB596EEB41C7FAAB53048
1B4FBC9B9274F484E5CF75E9DC900DA0BDFDDF66CDC5D474692CF5B849DB16DA
76D4B6E47CB8C03E730F739778BDA3897B15464E7DC2E8F4F4B83CFF8B1EA27C
F25FC1034673CAFF73E3C7106DE30A0BE3EFD47261CBE2F070C4F50663A53996
AFE9580C5338EC127B9D910ED59D59A806F2AAA493041F5EE288F248EC0484B3
A4671A4AF577EDD4F90F31D8FB2B0F91F6E4080B3C6D4A4A49F234777FD84267
B9B5FF1454AC7D54F59C5D94588BB274601E42992B2613CD296ABC2B3A537DBC
042E3BA32D6008BA7D64F7E78373DDFD3C560DC7FB06BB67D226D4263EECD18E
C136DC8767B74025EF5FAF470A272F57F548D73FAF59BD69B14EDE6AAFB6ABA0
A3EB05A9E2A6ACCDF4338448F891475C2652AB0EA213BA38DCFB2403CAA45CD5
01057ABF905A86E2C6C10C1694F3526F0BBE8E4F5D2E38BF4736F2B650DABB0E
06F4650378F0FB1E70FAEC4B36743F951A63AFB753A6A3C4DFF9BA53B2C6F346
50E78D9337AEC6875DC89259D8D7E28F6EBFAF8A510C59E39C7D1BB3EAC35A0F
9FEF8D15D24510A6AB4A2B8CE67CF755D4FA336D2EDB9B6D48AFD2AFC82E9539
03FCA10DB622D6DB1C2D4250D3FA4115EA205406C0316645AA685E5E0AB6D465
78E8E438FFC41BE6B509B844B73E58663DB0BB19B27498D264E5A199EC2ECD29
C06D1C6C4890B78059B8D7D1ED800D9835E6CBA7F3E2DB20C2D8530D137FDFD5
D1048DC87D9F8BBF3A28847AFE8A99CC319CC859B14C7F4FB795EC4D0857AA5D
6620C95021DF41F481CC02BFD1C0F6FDF6FD995B22C0D3C520C592414DE17368
422BCAE414F6A7AAF7B0B472230CDA008F37FBD25503D76A28F8E732D208E548
44EC9B612458EFC5CF4306B5B66DC8BDB8552BA01AEE38E1205B077C2F2C646D
06128D7284E514F58BFEF59AC638DAA66BDBAF071B0454EFDF277639390ACBCB
6F9C5C70E555DFA1D8EF22E5D31DD9D2611159DE0406A873EB320FD7C4459124
722804BDAC9272B3DEACA29ADB69140C90980A2147208D99DA24F1E59D922BA5
E4D5BA20DBDDBB8359030780CCE9A5B2BC7E59ED22D13CFDF599DD43370E6F28
DB5DE10FC98DD56A2AB3C4CE836E99DEF32A5250765A9D4B4946C9F52A84EF98
CF8FFC6A54709ACC186A9078502B3AE1BCDD7BBA57F79554AD8BDA842AB063B0
25F5E50D42E1A6E3E78D2F285EFE30BC461BFB2F0B4E61D62BF54A9AC0AD0AD7
ABE3064F74DE76B69F4B120AFB3B01762043A040583389847B65D114CAFF0FCF
67585A6BCBE22DA356E517942F71F70C30735423F6F13DC7F5015DA9043DC102
6C14A9B524F6026F3551AB2242E0BA2FA4BC0C1BDBFF51445F379E6E25C528C8
4EB94938BBFE8EF568496CA4A7191AE45D1106F2F63B7E9605F16FD2822C03FD
45753C3597C357ABD25D6B8DCB78E81FB5B8D5C70215C5AAE16DDCC8CCDEF283
1F90989292F025404669271107B20F8596FCDCD85BDAB9EDEE5A57CEEDF7D8FF
C0B0603ACEFCB8A59AE9FB7ECD21F133B000DA6224A2584C678AFDA4598941E7
DB8D7BD4120DB5282D4BE8EAEF47C64CEC5E5FE4C6E3956DFB2E008F22E37925
13C2AEC6CE2FC67EB193338E6813509120B092CD05F15786376BEB3B2802E09F
F8F579B59309F9142F9CEB88DC7864ADA0B1AC6D1C1C7CF6BEF0700968D7CF74
E2B3586C8CB4CB5159FFF6B335C54700A78C7C9605BFB0F0379CCDCC53802BF6
7E9FDF6FF3A0842C93510237B819027F6318333DFD93BA956EB6F385D209E678
032B4B61C682AFFCEBB6E58FB5AEB55BC09B1253748B61B4E00C448F263624E5
55EC61B46F490A77118A2D65E8A6B1CF63055304447D3106049D6C9FAA13FD40
6182B5F62D26C28668CF1884013C7CADDC2C3309492A3DB33F8E9EB23EEB04AB
96AF21394FF1F617FACCDFEEAB0A37F0052282AE1778E196406B887D83F8776E
76346699BD3BF24A57A8797A8D5E833072010FFE6F743B14204876579A1A5E93
702D6C3EA48259DC08D6ECE0EF01BCD9EEC871AFD57FD3D961D394B253DBBBD6
F55EA100ED3759D056E3F40CBD3272515C5C1331150CEE1B942E6A555049252B
35E9614EB0793CC9ABEADA0440A13599261073FC8F97CCFBF007B53372301E5F
59D0BA242F5FE84EA48A09618DEEDE0DEB366EADCFE52D2A9D0C4C94CB706120
B5F5641CDE1EE6B5407CA5DD56519A5BA8158EBCA302F04050CCF0A5D81963D6
327DD36287EC0226663360C910CBA51D8EF8EB0EE0FB197A63850D6845242D99
FA33CC4EBCC92A60544D6A6F28FF39B59D88927CFD0276CE94CF640488B3D7D5
9A1FA6A6591592422DBD99077B3FD9B3A0E8776894EFAB3493706076D62F4C40
7BE252B5F31039CFF52E7CB4D1A0ED127FEDDC4387DDB2E10EF3FA3985EDC86C
D3FABF332D5EB49BE21977146C8872ECAD4D82A933AA02B34B27F7370B134CDF
FF3FC74BB62F8FBBF658F5DE5C5FAFC1B0B0735977DEC9029164F27B0BE5FA07
03E5E1286AD62D05AFDCDCE4E33091132D471EDCAE38607E8A21B91FF0437ABA
BA9A0D0316F88245A78056FBBFACDB9649C73A5021D490B3C706DC93C67FA75D
32FE863E2F2DED5270A2E632D36C86B97D084A83A5A0AA4B9C120E6A85EA0052
5372BDE229F1BC277751454170B6DBCA0A0F93A43676F2786D00CD23C6C8A987
B9724E973A63203DCA38C565A40EA84BFCB92557F30779AB4F3DA8D49E9EF491
974C0FF0D79CC68FB1A5DE7EF8497F2B33F0B60D91684979154D98437D6BBE4C
8EEC74B6D9BB7D6BC2019071BF2F6C66C3BC6E9DF45A22A24877E4A44990F84C
96D836C5B460C4CF2B625A5E17848556F4C74B1772B22DD33B92A53D58C697C4
87E3C9F825B5BD086A6C8197E2489871AB157F0467ADC64D600AD4CB66D8C64B
8B36ED82FF3AD805AA74F65566957680618C923BABB56AEC3E81846A8D10F604
E10AD60B635D2F72CDB12CB3307DE87AF5CED09CF717D58E2A1C8B5E7A2AE4E2
8D2288DF4AFDD55B036800A98B5344E2979E49AD29281A239CFCB89311C8D330
F0AD6E39865395536828DA89CD97CEFA082F5EE5E4D9771C3B3FC801FCFA3B9E
7E135E65D5B15C766365742F808B8FE40033FA4B294C6AA42C40192634B360C4
D9BD88735ED4D83C15CC89BD16A82F64A29C7CE76B354A5CB2A662E847B43D93
CA0C0C3FA72C8A70DC76B5B36B2EEADDCE7423CF7B3D0643B40D79A627751364
0CC4E7992FC5B88E4E34132D9769C9CC6AA7EE629D85ABD5B7B3158D44150D24
9207BA65B8C8AF5B39EA303CDB728DFB83ECE29E29F8AF705163C613BA7BBF90
2A1912A066ABAEAAA44F81687FB4432B634B53B9CB0C6844A3B103F090158F1A
41624C7CE8AD0FD911F1D484563DD038529060B541F6E2706647D24D8C4734F7
B7C2DEF626285B82A143A76D58265190820E603A76223216CAC3FB7714AA8692
9A1D4FDEFDF48C59BE1398E815141B932ADEC46CABB6D498BC122FE854E53027
9E4DB9DDE98CE3D3D9D7F36EFD601220D7F513A5ED3DC91E5E50CE59BF04C72E
B674E5C394D0DFA41BC44612F4D39B6D5FC5E14BDBEBAB995DF855C081B4BEE7
ABC7BDB8E2830239F397B1662BD176230EE1372384905F6824592D05C21DB730
478CED9292843AEEA4F8645C3E746B597150AFB4994E8B0BE065C44076658288
57E709E8A6CDAE9F7EB8ADF8F303A1653E9FB661B931501D207553B790C815B7
A0FBC152B9BE768420D36E426EC8D807EBDEFBB74E9894BF0EC793699F0E6826
3EBAFE58F9C71DCA9348746900FE665375E9C805A494E9F29C835A459BC9E1BC
7F215B52370999331404958319B9C3C43BCE9B25CD64E26B57F1DE47D6F9DAD1
8BE66484EB5725DEE581FAFD1F33A85B6169D4794B1D73940984FB74F914003D
FAC638272F8363B436C5B0F17FCD990E9DAAB27E0C853EBD237F5FDBB582FBE6
03D54C4AA4887172F5E2852692398A09633D0B1104A5F95C1354C5E323A1209E
17F22E4F250B1AD234808045A2343483AA5D015C6715656229028ABC08FB2793
9D18FF48D7CA1B448B13AF44BA33ADFA95F2399617F4B1F45B06DE8C332FEDDD
3C0CB7E1F5DDB848258F98E145C94017BB172EF022EDD77D6F602CE31D1B8E36
7B76FD80505E5C20719C05FD2CAFC34607D65A3B6A200696758E954EBCEBE213
140984563FD3C7E8F557F39783AA808457E99E9C7AF649D36A1D34FBC243F0C9
72EB4ADBBEEC6B8B2C1D25D83E5067E1C9ABF06F5DEF12A293698D0222B1CA0B
1BC4119B875FF499FC7CA4D0F1FBB0C7F6B37C2FCA883E182FAAE9440B58A6AF
9BD80D5B989547B729DCE928552859ABDC5FCF07FB378B746C413A69AA0B8C54
58B7918EDF19EEF2B9F436134C748D3A40424B7FAFF325AE9F6DAE883B789EFE
7285152AFA6CF282A7E0018C56B9441C585CAECAFA2ACDCC25D51D4D1A4307E8
38276B1A3220FA139882375E750F269C9DBF61ED855CFE4B4169E162A7523053
AD9EAD4BEE10A4E88DAF19D47EEDB45B7318A422AE4A42C0D4D62CACD93CC58A
A0248C2B0B37BDB8C2F50C4E8BD600D9B126BC139E5A805CB3D9FCB29E4B4EF4
B4EE15553F4C3F60E8E89DF07C2A11C0E1F89B02D061B7C9EE627118424CE153
D1AF4ED82E1BF05612AE780BB304647756B983B0F536965A0EB9F654CAE19515
4629BF622EEA2DF19789F79CECF212BC108EABA42A661D6E9FF7ACE4BA839EC9
59D06D4B5D646D880BDED56A7E49F63B2E3E20F8BB5A845F3E97AD1FE48B17D0
70680BB79CCF16FA39F967AB6BB348E99608C4E4EFA2D6B8E951B787D5D3C82A
806EC1A608C3EB2CA6E948867BA0E7876487A80BC3F2546FA198123216BA5C7E
6F04552D2434FCE9756E536A5BDBD623A2A333C9C2DF3A89648C906439A86357
B2A011678C6FDF3A9C1A993D2C65200DD1FCE77A69E930B045DD9C6B580CBCCB
006F7EDAF628B2DC05CC4ECFF249F5D17D49C63ABD72AC75D3C2334B94DE99FC
960179AC08919CC0921B296274FD3B641AC26C4548F88946F8449B967BC67768
969B38BE61A320EC307229ED3CF600489043C07C81887D75C4968D12C847ABCA
7DEBF945C793074A735F48865EB44F5B5B6120D5E21BB16D1338205BF46E8353
090580C09D8E35848DDA4957DAE3723A27495865AB1CD0F3EDD3C5531E8D6FAA
B3345090B59D663C6F38E9B3703D0B86EC56728C3FE7350C103E94FA9B2763FC
09900BC32C6F283FCC83966DE371393E84B8E78610EC7603709FF637F5007C7B
73911EE48572A558552F06EEC9F38E5668EA721E0190113AFE15AD46D0354FEC
D3983B489D1B2FEBA38A3D9C866865923173B0FB99F65DD60EDC6E4F3D9301FE
6E118808EAE590BC31D4BEA31C2B029A8C36AAD4D874C54CC40FE617C5349CB3
6BD1009B461069A2A3C01080292B10C7276D768C4B1E508E0C2946389D17BA72
B32289BB130E261A82CBDAA2733B935A73D4050C116B8861EFD9D4AD6FA44E94
930FE769403B46E2C00680D46B3D7C73CE47115154B0CA8CF18657F4BCD257B2
67B2DA46592F45FAD6BBD228DB021DDB3A74AEDAAB2C58DD651BC30AA2AE598E
7761F9DD8A602F8E6B4E1DA9198FFC97A5C0646C1CDB5BABCF82500B013538D8
2BF0382437C07F5101DB33E4E5718676B0EDE3C6ACE7934F28D274EE56FA7D92
21D5D34BFC95A21F29E75D8915021BD4B1799B7F963DD9BEF59801CEBA586CBF
0914CA02B179FD0BA6603F79F8C113DA386BA760F863003BBEE29BBB9093FDB9
9991507C71753EE604A02EE1915F43FC0EAF8C7F57EBFAE58F6EF2147CC1E00A
D318972A7A86CBA15E5A7A95BCA716E33E45B06BC7D70043EABEEE71400D65EC
C965E763C2466E2867C0C578845032AF716A879B3D464B08AC92F4CFBFF1644B
E0A835F0248B42B2CDED83F82F757091EDDFABA9254453CB5658558B2C2B6D85
7A9BAA320F731E5C31E67D8623F076A00012FC82C5DB3A2C34D1210439B9FCA1
0E3854147D95B537E84208089600CA2744DD0000524590B632E61525E4D04EA5
ABB70536EF861BB311D3C006B13592E5ED3A138A80546DFA2ECF04097B89E267
3784EFC80CECBAA4AA8517754AB5FAAC0FFADA11E0F929A7B34189E5C5ABCFEC
D14E0E8D62BB0BAB4CC6703D5682A984A995C71A69F35BD04AA8C29AC8E0C23B
4B2D9D90A2AC3D25216B4FE1564F47E2EB6B7D5CD868AC06A170F58A1099816E
22DBCD5BC57195B962DDA52050FEACB2E90223A1DC9BA494B7F3BCCC439E4827
1458C85320EED013FDD874D3BB3CB2C8A24F5DFC3AF315BDD9241F448E35310C
E6FDF5C384A77FC63E8BE18DEA7EFDB386D61C3F9B636A3AAAEA3274474A45D4
A185CC3423EC950F683A6BFBD5AEFE28BD3D0CF2DCD29B50F2BAAD88124B1C3B
2374C0DEAC4A9EE50445585EC39482EFAC110E7760CF5588EFDBABCB502A1E76
2E83F600695294D2BD9E3CE5BC9C32F0199ED7791A65E83C0EA9012D60F8A9E1
80C8C18179DF266C241D4199EDF8D1DAE60BC895151FB357277116D7AD457E2B
F3DFC5C77078F917031507872CCC7350B3CFAB1ADE45FABED5C979A3C917821E
8F2E2D6D8C6AACB40A53197ACFED3C707D5A96B5DFC9A597910685A9BEE4CBA8
68D352ADC10A564A15D90FB5BF685331C5C5999B5AEC80E5C6524D9749854410
93EC8FE7F664C583B5BCEC28DE028DAE94644924107403F118754923AC44C82D
1354D3526B066860E87951DA8A609B1072D47BB37B08E09691F2278CF060543C
B4EDDBE5F43CC4D16E5850DD516DABFF4EAB3B5A70A80F0F5B9AD92BA92D2418
43438906F0B9C65DD8210240DCC0FBE5AC48421822BC8E17DE44227DC8AE6D5A
96FCECA19AD0E2FD68EC203B55AE462548B751FECA191D4B80212DED95DD32B8
06286039E75042D590F24D8FE9F50D35EC69C049C70C22568949E624D8FE780D
65910243575ACA21F2B13A00C331CD7A43C0A67E248D6097F3D94233FB04EF9A
7B15ADF48802EDFFAEA1B27E5FE55D27303D52C5DCC5BF7D0E1335F575E56A17
509DF85136A7803323930C3E0DE69857F75A2E7D93B93534FD6A868F7DDA031D
5460A2B43C3875EA130F3F6FC17039134071983B36B2F1644B0D94B1E8C6E841
187ECE8D3D98E5CD46312A5035F73F971F55A2538195FD5BEB18082F34D41839
321DAD3C44FE0581E7A81924ADDC9A0B087A4A68C68052E3FE54179D7812B27C
9C25371F3846629541FE118050C7BAE54E80438FFB1C680B7FD03EEF6C753F57
E34AECAB0CFEC7B07A150D7156EE99745FA8B720F2447A53D159DD9EC174D978
1C6E5D92E9B89311C8D330F0AD6E39865395536828DA89CD961D4A1D59B05C81
BE2AD99D3ED86668487ED31BD3A2854D2B502D7984CF9289DF78EE12F35ED8EE
56434EA6C31FDD83CD21C717F6ED89FE45822A91617D12EA95513E3C19033212
141075BD71974D8EC8276878380AF9B52C5D4D0FF0D7A78A6929A4DC0100CD9C
0F98D5C42A8FF448F456E38449A46DCD7EFD9D3CCDA27DC8158E497138CE2F90
49715238B61A4A3DA50A51A71E702BF8AC21A3F35697D77E7E81C97E2E611D59
9ABBADA3FDA1CFA73673CD4CAD7AD3EC8102414204B862918B4D6312D5AF265C
AEBBCEEAAEC0E540534EFD6223C8AEB07D547ECCC07D6EAEB6FDB2328590D775
2D89F48FE21F97AB84375BA1227C8D3E0963E74CC8673D6CF8F384B74E09CF15
AF48D85371D97947E5EC439E0F6CFDF4A297ACDCED99B3EDF163269BA786EE3A
F8AB4F379BAF4A45B24970EC6078E5A71957B788E528F0B8FD58B23F21FF9FA5
08C699D45901B9B901961C34DB599505D3A3EC96839904EAB292E67DE91D994F
E998985E08F174464F63F952998C3ED88624ED12759FD67200DFF251DB7C95C0
9E89EA1F66EADC30F6D4B92B4034FF601DB345CBB8B53BBFC71A1F0B037ED189
383C9FFBA7A0E2F2F1DACC12919B30F9E1018EE8AA6216BA18D082A9C252C435
2659CB5F20F3225B78E8C1EBF7F649732B9B276B1A7FB9E390F86ACA040D2692
DCD368D7D885388957D0F151F508F96D0539F7943DF1F613F2841B48765C47A2
7DAEE9E00C9846069222673B58A93C2CC94C871072325AA8D119E37A332157BC
545746A4DDCA7710ECC90571044E7021E83F41D71A0930218E6B25E840A59445
258EC54241705E495992A5190FC82C818493C76CF95F44AAEC42D679D1729363
929822871A5B9C24245071C2B87ED91F6B3B491EB3BDC193C6FCF6974C020F04
0273305BAB2B152D6D9A50F6DD71D5205A461E4EE504897BE6E062546DF960F0
050D1C6876F63D85367946B1B7AF692DF5000B70F5BF3F9A7749B103AB729577
BC07041B903BF1CFBF283B75010E5542A389EA2F787A4693E254921B8DEBED92
308EA9E707B012A05EDDED8C8CDD0415997105E9652F386BF7342CD03BC49A67
59C877321D70FBC7D6ADB855440F071138FC4DEFD4E596353E2A05960C9FB5E1
C132BE355EDAC9632EB2FB3B0007243F409731FFDB0078002E221E3878624A01
5FE75322A710B0E857532C7642CB73B31B54F16384D54058913521F90293851F
F89A494799ED038DF2FE9125249595B8A9419EE0A197290B9567D1F8C382F5F0
9EF53C2335648AEBCB9FCEB7C5584430821E10D3D048444AB7845E2C3A4AF769
89BA8D889427E34FF69B2B9F5779B2052B1B87900D82A71C15E40C76E8BFDF19
DE406D824AB413804EE6F03A9009D305A6B1BB2C98FD94F766BFC8F944E1BF22
7B99F06E7F738D4D32FC5528432BDF97F5BB698134037BCDDDC054CB3867AF0B
7E340E3981CC10BA0767EE67B6C4E19EE407FF50F4D224B1BB55E4436C6564C3
CE1792220C8CD6A2E4D13A42A5B48539DD180CFA11FB6B28C500E12B0F34BF65
F965E4025299011739F3E776FC3DB8B1C250223D7234D71ABEE42A2B6B87A698
38D0B0BBFDC8668BC8F02AE0FDA7BF45613C84F88CAD55B410454CE2490ACCA2
302BFE64E2B59878B872B48D8CF41DC6D30C3B8744042875AD434486947FD9E7
D27999974BE93A89999F153727432CFA9D0FEB17D44EA1A59DF06B021F85A111
019D507A3C8ACBD7FE39F3B0CF137F74BF2C4F9BE9BD77A7DD36130E5F6077EF
F760799D06AE491A35A268D97464A5F06B419E9781F9E31949E64E0D7965151F
B5D6748F5E0FD41FEE7C79E757E577D7985682AAFA152AA1345B11B9B16C8B50
5A7AD728B35D869CF7874BCE3FB6FBCF39C7B4AEBDA5D1CF7133F3F014B6C878
9270B5170BB49543F61CEFC4078BF40D71E885144E2D02DA8BD6B8F37319AA0E
6347BE8C85B5FF1EA2C7DB6EF082CD2BF2168BC2DF96ED81AF2C6F34C8FD730D
B4A597D2F5A29C929E5ADF1F41DA0439F6C03B1A740B5FD4D35DED9FC0E0AFCC
F6E06C41691F9E653F073BF76792A8B793223516852A0184FC1A299434634D77
2D2EE66CC0C4FAA7B31521A0C3E710A2A8A57A14B7F2A054DEC5D383C54B322D
1373F5CA631CAEDC3565A5F2602EB9D4070E65062BC4731082B3122D7F4EB976
279D557BD53D25B8A1C8962CEE8C242A31675CB0D44CB3F9140ECB5FCD9289C8
1E586F1ACACE338A286D616F1AED3669217094F6BB8689200681448B87094E61
C549A475AF4E7F55B6796FFD8C6E959C04D04EC6CCC6A11664B7CB1E16C265D9
BB71BC9662AA22092CC6FAB7AB594FA4E966C75620D85010960E667B8B1F4527
EF38EE1FF4863499EBD2DADF4C9CF2BE5FC9FDF78726DA32BA6B1B935EB5A8DE
5342EECE8FF93C401A21B106B8EAFC5836FDF78292B82086A7430C2F862D665C
27F585F618343F1BA6AF5C78B5BEFCC817D5DBC16B44D26E74688A14A7841260
B37F8ACDFF0D911BC5AAF759491346552A0C6C801AF3D07AD30F194542D5E5AB
8FDFAFF51787E424530F8CDBE3AEDF396362D296543CE9B78564323122554779
30C07E767EE85FA9A6828FD94140CAB8860A11EAFE39D002363168511C42EC66
8E1241661614DE474DF99A872AFD63D2CF21D618A11C8FE5D0CF3774B9A1C3C3
F7DB1333A4EB3C71559B12042700CB3FB2FE25AC5B72ABEE2BEABFF4C81F2E1A
962F1FEB9CFF4AD421DE1E4703804D1609EE7BB71E804B7C7150ED76EA33F7D1
6CC5535D0DE3E8907233CD1547051F501749BABC2D070A8F66BAE89443568A55
935CAEF6AFA78963695D31F2BF2B3CFB253E14439208E6829CF4E7C1C6B44B38
419CAF055623EB7D6A90860842964426D9E506537B3F8B418DD60739F5638F99
17A41081B83612B3EB27C2D8530BB32664C3DC2A325932A4EABB89DCEDFF4E02
8F3583A84F240D9F248A053D6CBC34EC86D2449B1007C3CD296F06CA47A52275
D13033F00CF12F52FCB2806F21B473676622A8E2B87584314162F833B4E745FB
5973C7BFB9E0C4F504D9FB687EDFAAF85185637F3726E11904E07CE988EA1144
2D5858F9FAA7A05F30FE906CB374DBFE0513547825BE41E1F89917F01C5AA46C
28A54EA6E94CF68DC85C76FD06BA4B0915B9EEBD5805198B890E1CC5E799B372
8AF8263D4F442DA01DDF0770613840FD67763391D26AB0F39477D45367A4A284
D39766A3532138AFAA017D6FF62BD92BAC087FCA9B4E647DB680A89E56C14603
7254B170AAA74098CF692B90DBA4D684992F3705E4563E0A92AA8ABD1FDBE17E
303D604E12851327EFA393E89F6095A0AC171CCE0A8C23A5A5C11735BD665EF4
2324D855485FE6A1ADDCCD05B73E5DB1BD51CAFA94E049B32A13B8CD4E1EC2A6
D009360DB2BBCFC274DDD32FF4BD7C970959E6AC2935DC6FD4D20D3C2F3472DA
36BAE42B05FB740374C4B163E4DD88F234ABF6FD1ABFECCE2D39FCBA660EE56A
033C53BD4B009A82B2D9222B2180A06713817A8600D242E653589C28565B08BC
779701D8BFC4750224A2C3FDFF2C4601725D49A54E269293EC9D8EBDA2F77C25
577DDA87FA99F967EBB4188683656BAB2E2CC448B010A02C40CC94C1564E2626
692F9CBD391C4195CC320F50750280EA8F3E6FC303A376D7D0F66B850704AB7A
49CD5EB3EA1518F5E515D391C1A9529C27AE57ED20C64BA2C3C0D369EB8C25D4
C869A8136B7ABFFE8DBF1185809214D8EA3C63A26C4BF383C9C38084A67971FE
9F227C0A4797D553DD7785B83FC7165974F5B23D920AA1E181C42735D893C4DC
2695B0208C89EB4F648ED00198D621F7D3C7E1A3EF9CD0BD4F499D54E0C9F973
B650EA47998D2D91085B4E047C7F92AF7461811CDA6D6215BE2DEC2E14524F98
584ACA7958632CECDFE1ABA0F78067D625F8DBCD165CFE99B5A0257F0D8ECDCE
60345886C9E46D60A50699F36B71BBA194E6A68ABCFDCDAA52ED75002CA193BD
FE2D7A9140F5161F5D92E478C566E6740BA6C5EE4B974BE52998FACEA9F2A539
2003568AF44E2EE4D846EA2FEF9A4D47AFBE2E6D1929EB98DEFD7FD581FCC14F
0DC2EF157A7BDDBFFAACBEC0F9883E2A05A625072F7ECFC364D3C317A50DD98F
8B914AD0AF79C177795839E86F95FEFA457088CA32767FA771A288C1AFCA6962
B3C59865D97152165A5DB40B08FD157BE6D2D265DFF4CC1469324541F1257415
A8D822CD8B8115CAE47162E1953536AB81B2E45EF4A212D3FA7A1F3D5558C743
6E20B6B0365C6F1C69AA30A236583567EF7E3BD1106BA58686C54268E19962B6
2E2588EB6581FD0F0738946223B6BDC853612A330747A58759815B768E0D7738
E0DB080A47F07E81764507E20FFDBF8DB53DFB40774014A24A8804637F5B119E
C6803BD53AF058E73E1E70F0710498D1B7AFD11AB54FF10FB4DD8573D79E5D70
3D2C0A0E7CE6A323E1A69AAE94CA2DB0A76CB92F4437AA8CAEA91D4A771875BA
11DC40AA7994C5B771673ABCE88B0355BFCCEF56AB2FB93189931C8F0D12DB13
8FCE7B85F76BBECD44160C75FB203DBA1EB7E4A0B6BE71A47B6867E85DAD5BC3
E6062E25A581FADB1BCC355018EC44242F1741DB09FB297F355B735B6DA58A04
D55B843EE16DEC2AA7E2EA1BE8CDC07E3FC7EFEC28ACD6C21CFAD079A05E56F5
404BABA72FFB9DD1C592D28E3B8441F85831761423CF91A9275E0BBE317E4604
AF60D5E05063DE4A8CFAAACCD96CEE36476C87118866B4926A817047095BDA9A
6DE28081BEA9E9FC810B9359D39ED8AFDA38686DB7669F53D734D4C5E7F7F05F
B213C0918B19E61933DD49093FD82CAEE09F3E7C4DC45BEDBE38A22CB2781E9D
03EC4D5277CEE13F1D97C7A53D88C875A3ECEAB53858021E4F7A64B77EA34F99
843C388AD5EF92932B87A6BC9056B27636A3AB7844D6308C174441730ED96A31
A8C86D4156B5092BB8F713AACCB55CA678F591B0BC8E47984DB26FD7837618BC
E16AA4C235EDB1DCC2D867FF1C2C9D85A779E543BF8C6CD4A27893E17F31A23B
52515BD11BAE4ED90966EEB16AC381F4F07039B6F9D7E61144BCDA664730F3DB
30CAF94F2975ADF1AC50E6BA5936D60846BD598BBC7282E57D84A037335D3369
D34FB3EE0A4EA4D370455A98A239D58B0C6ADE020F5A31FC3DE5B3F7177550E1
C23CBA7362008D112E0AD71B26C4634C8E6511590B923404E5BD725DAD930C5A
A1C07B60F3F6E5C91672C65F72A5E6684633AC5E65476ED43B4831E84A4FDAAC
A02BEF5EB66D79C82CEF1D61247137244823AF5104CBE95341C48676342C1C79
79A5E52DABED36B891BD2B35A366AAB2903D44D3E79C8D7596D6AE02AA5AA638
2253CB2BA6EBCCFBC26B35BBEB99E3AD4A510C567F6535BDAEE470EF4CDBA6BB
2FB35E4AC17246D24B219615F18E949566B2BD1AE555B21E63022DFB705C1CE3
323F2DD42175DC37C7ED828C886ECF74562B63DAC1B073442BE7A1A8C56462C7
AC76F1F3515D586C424DE65237FB22C8424FC12497D7A39ABAD0A18EA25C0FF5
F0D840032F95D39F257C5FFEFDF1E30DE8C82BE91C762DF8E6D8F1E3DECF77A7
03341F4D587DFA8A62796AA4E86A0917C4EEF9B96EC85F7F61CC55FB56C6687F
15C4C86957018D428DF6244A1FB6A99122BBBBFBEA9ECF43B02073C51A2E904A
BF09B3E6FAB30DA3B7FE5756B198949FE7C59B1F798BCB0576672A693BE5EF0F
587EE5AE0B439EFC837C99B422FCEF96B5C7F91D803C9DB4DA1F4C5BEF5A5898
47F4838D9CF294F1D0B0293DC3C8FC0F02054FD16DCE344E58BB43E206B70364
679FF1ACA563FBEE17AF462AA87272BF4BAF70FF7D710D92C523071CB85DE4AD
CD17E1B1862C6B6D8EF11064986DDA53A77FBE2EDD38E22689D398BDA40AB9EB
D541AA9FBFDDEF1F775BE0C411788B054AA90752B974EC0DED1BE9967C8ACC7E
0441C6CD4FEA8E19A7FC7271FDAF3771EC118B642044AB3A0883F32C4A335D2A
65EEC9E096D127ACD780D1B3F0DCEC6DF9F0CE63D52DD899FEEE84E2D9DA141F
E1F357EE8F848591A0C15DF4DACE2A6B1A6067A87128272B21F042B0A5D0541A
C711EC68B34D33AF10DC97D6000031341B9D79AA3FB4B92311C7BEFB0D0314A9
45971544A07EBA6AD5CAB55BA34DAC464010BFE1975AF9C25E92EAFD2D1DDE05
FA66660E03482CC063B751444608FF0B753618A374051DF4097191C6BBC815C3
DB9122194C8F01E5693BCBA645B07E11D8AC59AE55F0F7D6A8575F3FA66C8F36
F2FA4550F81E41D6E57F80881B3A099E546C927D62A6E61E1F705A0403E9A5D8
76942807C0543DF8D3666728FD0CDF7BF8C6BAFEFADFB285A85FAE104C89C522
B27B9A66BDA5717AEF7388F7F8E9784118BF4F4E0FE6344878D0FFDBE4C31485
F2D4DF74A8F0A7C65A5662DA978663984B2C0395E5756C0B3675F3C80D6E57A3
7B48585FB0D0EB6006F869E42FC542FAAF9C79D5076D3C0BFC32DD3D646945B7
7CD65C9473CD15249C3CB49CC139C7B4AEBDA5D1CF56E0858E55756931D29E6F
8D170936645B76B9C68BCC426C89DF139AE9DC6A466BD213EE159567F8D4D838
B8AA13233F31BCB8AAF960200B709D8194082748C9A7E05E0BFE9B8206056315
B3E0A09CC858785F2D7FA0BAB86CB37A5DAC995C084CF9EDC861C8B6559F06F3
AFBDD9A0F6C3E33B3F38C6DA0B39358F98B214195ECDA182D57C38778E531932
1708F42C0A77FA76BEECC82D90AC31DEBCDE02851919601F6B46FCD5A7EA43CE
BBCE7B9517B6AE2765B3A54BD370DB81A133E6B4D9FE76729B5357DDF12BD03B
73301F26B4FBF514C6B17D85CE67DEF80E119E5ACD18F9686858C7D5A66FA385
5239E6527A4407AA4ED42444D50648B956B1518B985FAA74C2280B0BE83DDEA4
DF2F63A1F3F733A57CEFDCAFBBF6F6B68F3B1F7AAFB5C0C1F75CDEBBD4BD8666
47D52BA254D2E4B701609BD652F5C1D8EF063ADA63F3351D5E8B2A5BCCD28448
09BDC6C786726D6158E2843ADED51609D064176ADC20CA65F6321FDC68CDD796
4228AD7A5AA908FB05F63FF80AC0F34D801972EB6C8B045A9CA99C30AD6D43E6
148CD198026FF7A2833636F8B33B0C661D370ABD76997B3C600B86A484994309
B755AA88E67A805AAD9877827820DEABE0597DE23708DFE7CF91246FC75DE3D8
AD6E2BBFF96C06B67A6135F138C1EBD88CC9D17543DA864710EFCD0C6E1D1FFE
3053925EFB1C1A29059487E7581FC8B0075FAA6FE3D21E5C1928F4167F45530C
20E87ADCB8CC3BACC9278E274CF403596BBB7897C2AF14A922DC0A90DF6F224C
09C601B586B3FCA30D6D41783F55F1E1039355DCC3863FB0127FA83A8ED0183B
E32AAE65DC84BC6CBBE19873ABA104A9DC3B36E2ADE80DA3F4EA849BD94E93D7
BBF7DF9FEDB9745D3C854E48BBE8B79D1D9769FCD76D4352ACF12F16A5BE9A05
8BE564A4D92498FE779AFE9D0DF302C80E6D85310F9E4C2150B5FB643A17C469
4C58359D73BEF3235F8DB466616CA9D2C6E78017DB5BC2625AB14F5CF73CFF58
9EDCD0457949F6193F49C9B47D6730F9DF726F57C7D356C3FAAC4243C73FF9AA
99FDE9B9358C7C78CE7B4EF40AE1A59F8803E5939BF23D50EC5BEE2FB90CBF42
C31CD65564134FCACDD080DC7A35527CE030A6BA7DF6666C2F825406197CD6F1
77F606A7A9C78E6B4AEBA7F60045C62D3DA938D09E50A3E30F674B712A72FA61
E4D7C41B245C81CE27535963ABE36CC2C0C7204BF83B4F7349ECC5BFEEBEE0F0
1DC33160B2617450B1B61F32572C4946A32BADCDAAD1FCF46E6E66B7EF67D7F0
78808296E9BAFB489748968AD95E519D5738F771E2139AE2AD1B9884C40C38B9
E78DCD8DCF25489CE0239049EDFE532151FBEE0C5C4FA36339FA06E8E43DDE10
3A57393A4C4F70FEA9D89B449A3FD25321F0F1A2C966922FF2A033F35248FFC5
EFA0D82298D32EC0337114B96818C70EF67437A3E0BE9140937BA6E979636C5A
B8422E77FE532265F8D32E5F3816D0F2869BBEDFD821636C2939A49127763637
10ED5C0E8B274F4D7AF4A46B1DB69885631656B4B5D7AE2567D9813DC79499BB
38F142765EE1BFA5A02D803749A8A0F7D3AEA0755BAC940D3BD58F5D44F0B16C
3C9AF80B53FFB6585AA1AF31142B94348D951EB92EDBB5115882613BBDECD897
75BF59EA8967571CE572600494F60D3490DBB561FC9C322336A2B09FF81FCFFF
0C08B845AB92F0C103F837CB3303A57193A074A75CD8BB734D2D090457DA9FF3
BAB41A286B113076AA924BE26082FC12F01A62B51EEB550569882EFEDDC7E756
7FED21134DF7CB0D1957571C90DBA2FC9BA367F88BEAC11B991C20D58E76CED1
0CA6CA751548BE122F618AADED0542C7D93C5D9FD9416A2662FCCFEE48E79225
D7B81B01B44361952D462620AFCD6FA4FD832E8EE8A3FE4FC05AB564B95152DF
F64F4417857714E98583EB76EF2BE464AED04649415085CD40969402AB30E0F9
C5691D9DD531BABE8865E8D3B7640F59B5C07D2CCA6C0BE27A2EB79312E42FB0
1F5D430BDEBAEE24F2EAC8C34CB8D436115F01BDFFB5EB6CF214440E4DCFF294
E01915AC343F5BB223BA6AB44C3DE99624DB1B364E6474BA2739675F2B6CB588
E62804DA4A39C1EA340E6E55C23FC8741B90549E59B06AC529DA1F868CC63ED9
6EF6CF5119D963CCC84FFBA306FC5E40690E464D46673BC84C902C08CA9DB689
B48CEFB85094854BA3BAFE46C8339FB858FA8273A5EA3B407C3A0ED107EA4882
4D9EAC0CB38E3BFF23E89315FCCA90D78E299DDD66A941CE305961546D04C3D8
4AF36B6E54543B4114855461C83881CDF494C2B746FC80E47BB6C8F2F209C4EF
07AA0F44BF3C68FB99A6F8503C5F0C1520B58281B1C9583A702946E764CE94DD
F65CC2D919ABB01240110A46109FCC2DF46F924BF61ECB66B66BA87C4B80AC0A
C6234E6E903B2CC4FDEEA58300014E2004C7D35C5D69AC2FDFF19FDF6DCFB88B
2EE808C1B9206CBBABDE8C4EA29CC239D907A56B678B2488AF062124C20164E1
137A158E88593B7A30FACEAA5076971A1F3AF36FC2F52FAC6A1B2C52AA6DA4D1
9DE63FED8D2BEC3A2B111D6B34523FF18F738D2A61D151009E79D906CCE3DD6D
2642911FB5137597F9697B34FCAD2BAE27AC8CBABF042A6A15F0CB3762DD4005
3E9183F5D091AD308DB487846D17E9C3E95E5842D5FB7A55AE176CCBBB5978D4
D7919969939A14CC93BFAD50E55FFDB7359DB6EBEF7C54EA07F6FDB1F13EC00E
4F840D406FEA4B01D9DF3D179D7DA3470668EEEE63E1D9F7F161B624944F6D6C
DB9148A3141A3981955A3FBC071726B5230D7FAEFAF02DC8E4C2826D76AECC97
4207FFA6E70A0088440F1D6E0E97B5AAA8A46AB2CC7F0DA253B39B7E232E6AE7
3EDB32EAA8F1961A87E9D00F788434BDB55048881AA95EE202C01F1CD4B68F5B
47C4B4000C44982D6C09E3C8A65E901BD1FE837D984A761286C08421EEE155F4
6A9E1B1A2B01CF15A5ACED377E685D981F6850440C34BC8D028F8A38CC4DA5FC
641642F3CE40F87221F9E2EB03F07F09F175C276D9AA56B6AA8C7DDCC341E0DD
06F394C35AFF997D5553135DBB27457FB4CAE16197347611DFE63DA3C7CB828F
03D9465E2180A40A1C23A9FBC0897F01D7B319FCC8A4C1AA4D03113B2FD8EB13
52F664B2BFE42F0A95B391E3FA7DC3EFAFEE0F00BBE72F7BC9DBF8350951EBBB
1E8AB623A143311EC892D1BB9554D34547816955434EAA5EA69AEE3175F2541B
3E4A4B1776A6E5FDEE28D414578BF229119A2752AA2AD62BA6AB975E71220D5E
3D24952845627E1FF938AC1A373333B68E810458E2756AEDA26FCFCC8E1D5988
003939B48CA8DF17373001D829E8615C70DF773D4787A965192CA620993AC7DA
C8D5E1D40806DD7BFAAB7C561079F3F1F000218A06620C5F4C396C50D2D5E426
D107C511E4DDD6861D1F3041B13A105DF8C41F14E954B6395B87FE5ADAA88C92
298D06EFEE8EEBD3FA6C2F84814D8429F4E954F0B7EA560346347B43A543D52D
3F0687A49751BD7307F86C6002F861824DA6959EE50C0761EB8411283ED1BF91
D6010F92F214E7682037BCC89F8851E21194F8CDD3BD7A526CF6AA92636B227B
77E95974D3B38271D03662ED4896BCD17274EFC1A7BF7268900465D114CAFF0F
CF67585A6BCBE22DA6ED5B9A677C996F8FD91BD40FA7E07F57E8BD5D23814373
46FBDB140741D2C8AA4AF19F22592587A05FF0A3211E6AB9A1F80A7662D4F231
FD969C7AD4DAACB1EC98EF2FD72117091EA58204F935EB454FC0099D03A9B6B8
CC0026C1425C9328C360FD1FFE12027F79F212F19C2A53CBC26AB67C7BB26093
7BC426C835D610D7A203D903D64C928FC6212DD2CE8D723DEAB785CF0E1806D7
B4826D43C2A85D7F90D278D7151D59D40D28184F00034AF1BE4CD58227C44AE1
83D00B3DE2DDCDF9DB098BC76CA1F69BE3635BE37E23FB873E2488086BA27275
3E307CC05614F6DF5240166D84A2C48EBA62A63C347D512DAD1E9EBCC8825A53
401701EEF17EAC1CDF64EC643C0BF3CBBD4C0B916FCD441A0FF2E2AB83B33440
AC59A085BF40E6E8E166DF914090E06AF0ADC0CD0A147F961D4A8271C97C04CB
50FED042C9F8E2B0B9FB06E184655B54E82FA19C6ECB9CF4F23FC74C8F762EC5
07A3BA71D96F18FC65FC73BC484C69497DDC01F059B81D0B81B6B95AF00DB190
817A74BFFE3E78B6B747BC6C90A3CD9FB434F4D12484E03E14C9CDDFC066DA54
35EFC15D5D7BA5444E39AD47069A54FB1A950B7B051982321091A2A4A65DC225
B10C6267D04FE3F7620ED0ECBE9814BD19184B2C0F3B04B2D3ADE2358C79D973
22B6D8D15EBFFC5673FBD1F0E09303F8F6B6639A00235AA8C72B021754E2FFBC
90A212D08F73B0278618AEE3A5D2F8DC6899DAC443B7A78D8CDC20C1D5F556B9
D3390CE5F16DE76F7DCB69B1ACA5AA995EDCA2CD0924704F50875D73AC81C68E
BC2B8D9E9906F4B5E57FE11319B82F7AEC5E73AE06CE6378F8094C99BD9921EE
5B80432288EC638C1C2111A67CA69C2546A8D6A599CC98316C94725A4322F691
B0A9B27B9B609BD451DE720661D0923123210D95231827D743E89BB609034EAF
37E97C820EBD80D4BFF0069858293901A0273116E89395A49AB5121BE883B3D5
ABD93033AAD7057C0C7678850AB645FFFDD40735E878D4C5714622E75955FF3E
78C4575D810E7E0500190A7318D7323F9B6752AD3F194F0C8ACCC73F7D8B3F7D
2B87CE2CEA9691547D4E09D9114BE59BC3567383F025262F2662B8F729A080B3
64B5F6A73A47FFFB9D6188B355440F071138FC4DEFD4E596353E2A05960C9FB7
4112CD3303017DCF56914874816B3D5FCFE77C698544199C7FEA9789840A5620
C8DD4F4FAEADDF737EBFAA0B98CE373DABED6EAC75FD753B158D0BCFE8A99722
07B0CDDD41C33F6E737CF39ACE4F488D5D766196C91C62C88CD8FF88F6FBEAC9
E499BF4794FA3293666AF2774FCABCE014D428E2A9FAD85863CEC1B6C58479A1
DDB40393AD8FB19EA616F9C30DF4DEEF6335403E9A23CCE21EFC903C8730DB22
FE446CB294E9511AA1C5BAFFD1B11E93F60FCF87D7D5F127D66CD2A2164C2915
67D081D4F769B5CD39EFDDBEC0BFA6459AEDB6C7A96847EF66B919660191C514
345F1E1A0480E9DFA13A54480898D17FBDF12A3CF27CAE720D8BDC394D0A7083
66442076E3AFF67832F8939E7E12A757007424641F740EC5307A40735A718B09
0647057B73EB481CF6BC41F06633E639B30764C819EC4EF02D73E6688536BFA8
9312E3BA394EB87E421A8087930EAA944F717DD65F6A274994CAE45EE6F85C65
5457DBD51637C51A5FF27FC1322BEF31FDB800BD9B73E650FFB71DEAFD8526EE
87B9D959731561966CC289D06AA5691C989881C209C097750BD208CF9B2D4726
E0F8DBF82E4360C9B4AD35EE9374C6ED59B1A99F316042736A73C196D8618F85
AB3F011E787205BAFD563EBF6182F157474D9CEE1F0AE5F1308A23BAEB21C0C4
00325431B9B500B8C97DE20329BB7A6575476D34B5D8CB7684702FB9522CF185
CD6F35DBA603E54AAC0085088FD1A10FD2041241B1BC8519EDDF56645F5A8D84
FB1C177AED502F9F054D68CB91DE60C3DC5442DD3E19B955F0154DA46F6640F1
B0930466DB5A530F997563E18B28804119292866F8B534249B0DCDB6495E9D02
97F0907AB25AC2C4F468CBAE6939D00EC9B3C16C33B4AA716C348026B4E78449
4517023CE9CEACD65BBFA7E3B2B839838BB87C04841CDBEE459B73A918ACE691
081DE21AF12C1240C57540E73362D1F9A09046BA52DE49D65F468A51513C6C0C
4E7C73BD8E43A845AE2728232D67C6A3A81D429067B66D09DA1784D216CF9F0F
D07C7CA74633545ACC6E1B0078A6D40CF7C7D8E43297A7D920CA5BDF2CC4DEF4
6FD4A183EB07660D60FE43514380258EF4843C39EDD64D59FD94E698D0A65005
A59B76FD2A10653843A05DCE23E926501B04EA207C0DF86FC5C6A447D3A55054
188A60E0B67BD99B0F4009A17BF5748732ABA591816E90A4E899E0B7AD32E22A
432EE212F87FFB6927A4FC47E0F66B1018EB89CA320F74C91902C560AF15008F
296B41CBDAC3A4FBE58E4A0A7139B77AA48E3A8BD885D64EFEFA51409FC4D512
C520EF5235E1EAD83E03D3673A778B833326CE8172363B1B4AEFDFEF2308AA72
419F816A5CCE657A26E927CAB2BFFBF4CC1A24AD44AD4F1F0035F01F710F91F1
E0E49E70FE25FE7FBB84DE3EBE93C0DC2EE33F6F8D4F3AF4B2C7D95E63DA3C28
84EA8EACB1D8A253BDAC2DA7BBE8EC827B9FA2A1C49BEC30B0B820176667500E
58782156ED7737345966991712C7C3C3F9B01526D9D71A74984522CAFBAF6CD2
75B302DA2BB7515A4CCE0A21281D315563895972BEE88BBA917A010655F93232
509E529407BC8EDB3FB5AAF2F788E3BB159B399A520927F68BB6E200FFCBC7C2
7C50FD4A7194CCAAE06DD0198B3FFC4C157F5B8C568B60F5FA854E6BCCEE501D
776F6311B01D2689585E1CF6660A76C929E56E23F03B8F70668E0E69CCF8F290
C5C29B35B3EE89D80A93CDBC49CA941A8051FC9E6710D9B394878F78F66B2E3E
6AD4A89445F4C152BD89F9DFBA0CB091D4A40FF3B10E638767E9AA53808ADB47
B78552ED7F49E33E354049B10CA674B3A52B5E428B1606985D511CBD9A9350C9
D9026B0583124740AE8534960E6DB936279AD263819CC69DACEB7F6C78620124
7FD5707EC06BC9FE94C5B89747B85F1D107E7FBEE52AD9CE801BC06936B979A3
C1B854317B64E8D558F15D8B89B163E59E603962D53EC890318A5A719277FAF7
4DEED1F28D5BF5053CFB253C24C65B5AA6221F458A151C340D0788865F6EE5C9
3AF3AEEEAADCF49E7EA788EE6EDCEB19D3F1F7013609DD1A67D6B5D1A4F0B309
01535E7612F8D84D2F6EF0D04B7EDF16EB8849CDBC2C26CD5282FA53B365EB10
6F365321CE68091E6386CC913D455473122BD95EF2022EA1DB12DE17BED15E61
80B4FD4920794EBC70CD5E15CB2104827B60B86EDFE9A595ED91541B4639E569
555B1CB68B11C0E04C822DC99243D5F8211C97EB382654AFC64543D4BC320843
A4BF30E82A78D0E0AB660921AF7D1CA940090DB58920B9219284D91DA3BD4CC5
E42E2062ED1D3675B796C5606483506C6E111EDC9380EB67E79217DC6AF37242
576CF1537DD9130F7F22D27700DED0277BD45BD3575A797E3FBD6E3F72660ABA
50943D953D2F10B5C472E88BAC0E18F09BE3AF195A23F3A5BA6F08D1FF28FF48
234265B4CA3FAE09D4AFD89A95E623FB78D4B4725A82DF8E380523218FBBA217
4F6F47DFB33C8F791B16AEDF904C7D4395BF211547456696FA467951AE879DBB
7FB52F25A5A5DFA45DB0FDF9B94F0F90C829CD1701D6B2E7D88E02A47DAEF3C7
21575FE10CD2D236DE56AE7E663E81752C1539A5613325DCF159B76E49CA1FB7
AC7E65D5A5D8C5FCFDB41707B035520A5FB3C88135AC83ACF355B3085E56A408
7ED0849BE7D623320F2A18B1EF60A4D042BB742B4C08754D9F00C2C9FB3941EA
0224D826BB690432609A67E306F6F7C2CD4CDAA3918B0DE788BB2AADDBB4DEAF
6141D460D1FE4D5BADD26421C532DE74EC422D7CBAE78005C8BD017B134DD4E0
F15B13B95DDBEFF4B5B4EC83CAED471CD1C482EB2A7ECECE864985BCD61BF407
237858F17B21E767024D6E34CF66D10E929960B5F0AD71B10F5B0C6A55F77F98
72FFEF1A8B9260462C41FBC667DF349E7A5B7341420E17CC550634AB6B32B500
3F5D1B139A02FA8D0B31E08031DB686D761ECA260722DEB82C1334350D473B75
2E18772F3C841F118FDAFEB0DFD0661D9FD2F995C89C3A63CBB33FC157518D34
E3D81C99A5874B6ABEB6C0485828F356EB59C877321D70FBC7D43B58F04ABA44
5FF958E4CA098C9D022FF49744F3F1D9008491B0AC082197A1D4DDC9884E140B
04A635B81D02DE983E961D9D741703E35DF0172349D6FE770FD2E54559FF3B8C
81C618B47F60FA4ABE5032B7ABE1136C4AEDC6A9022A4DBCCF7BA65CBB6605BF
5623415321D79CE0484FA622F25DADBF8317AE0F005536D75C95B34CBE42B32B
A131752A4AEC9D9B6FE2D3ED7E4B8C503EB0046402EA86418B207B4762445AB5
B1191A81363761D803A9451887B07A54E444B3AFB3FF24202C73982675085581
63B0F528BE501CAA12D2A43A9AE09853B63F9669DB2426E78D9DEA3C0DBCF7C3
91B564FE7A30248569517CCE844D2FDF5E9513A930D4CB939E0A327E1097110E
3AD5BA310372CA7BAFC585B1395DBDF881873517D27A14D73050EC1FF6515215
C47B8D91A36821A07644007049FFB135FA5FB511C5056BB8EB2F58AF0D5632BA
3909D3DF6F2BD2B738B20D500281F3D49DC814EEFFD60E99986FCB77ECB7D788
5DB89906CE97EAB73CCC91329D300D3A47CECB3F5BB87F30B80FD72334B5F262
62CC40FCB79026A44F67A603D724F714A289FAC56B303CD63E9E24C6DE2A20C9
90B5B70F1677E524906FB916A3E13042CA7848B4FF9C7E93835BA50D9FABE683
ABB71829130DF506D41C64E93F5BA713C8A2A0A4EE7F10FD04479236E6A01742
572437425C9E71F96FA1ABDBB09FED6372384F7F0648DE316F8C2D820164A2CF
7CBEA7E98294AA45A9B308EC6EAF3BF957C764103597240CCD7B8FD5C3640E0D
D6E71A3EC106A015A93C68C30AD52BE6302CC849165DE9FE2DCA079170D18592
CE3216822D61C461E26D2E39C22217D6DACA3F315AA5BD07D1918E4EF7763D92
3602A0D0CDE3DC4B27DA52B6EEB7EB424D03394C66F9B458D25A3D9C2E194B64
5FDFFE074ECDDDE27C2094F743CF8AC1ACB19A1B19435086588723F74214624A
C8EE611A632D8FA77BF1FEA147E2372B4552D66DEB09AA7EC5CCA37BBD601A94
B3A36ACD71DAD02B2E29D03182F865954DF160077B16CB82DF5A6C23D580A546
6A5F40E4763C7192033FD3C6CC635CF073324FE0B6EF54685FF3A921CC9D67A8
FBA82A0167A5D6B1FBD3F4C53AE42751E36ADEA2D4BE61105C86859BDB687B39
E2E05B20F0C9B86A331F44DF2A883E22DF906986A23C22DECB108F13F1C36EB8
23652DD2D68EC6563CA73B0B51AEC87B5CB085F33BB67F4F41D3863F0A26F92B
9949EDF0284D98931152DB453B51E8D147EC7B0A359769730C5C6048F67E5E7D
892AA2AD062880CE90879E1206F67904B159F29D78FE017A336956513664C5BC
6634C3B8C7ABDF2564ABCDC585B9F46CC2BCD6EF90CB0AF7D83508D75960A897
E9A12E36DFB7612C2F2C73406C6AF4BF88A5380C747A8E92BF57A4FBF9C5D261
A4EC615987B6A630F7D4471BA57AB9CD22ABE7FBA7C2D8011AEB5F6B9D468204
699636C6887001174BFFE4D9A3644083450EFA8576E1F9D4FCFA54BCD735926E
AC609438C5F59967242C249E08288F234413E2FD756E7B7E6BFAD95962EABE93
AFF026D2537D6FC1E5AAE5C8335831373F29F7EFA8B44A4E990D18E08540786F
B8E2DC67251CE0F284A366F61345D046731EF10FF1410CD4447023246A67E4B6
86E5EFBF0C3E801B716950A40AA13F332F1DAD53831BF8117C0E1F0F81EF3B55
03760EC6A69BD20484DD6D7D95E122EDC42041C389E5AC4EAFEF2FEFC9D45441
BEBB716D0C37A888E44D9970D25A69890F315D10BCF4DC68C12A60F21B7CD9A5
853514FAA0D810D6A1E016996453D5CE0A58B0726D75CB9D744C0F72A8342EF7
628502B56F35B8BD05DD52E2FD24B5B6DCFF304C4B06C4B374A078A69126BDC6
1A3889CBC27AD63AE2FE75B60524754321E19A36D26540792609B5B63CB92F68
AF95AE5C976FA050319AEEB016CC82D751881242980E582F1F333AD23EE7A9D8
AC9FBF383B3364B5B26A600FF19BDEBD024CB9873DF52B6F3A270A9AA3A43268
05EC51AA2954E3F32BC65BB4C167FAC514D73186B68A351A1864EBE8F6474F5F
5558AB9A563DFDA1F4B473F975E970D6E48DB3499A9591968F7AB2C515B489C3
851F5AFBA927E3BA6903B35139876094612AAB14269BACCA6EF4A984475125B5
2144E63844B2C7A227322CC6250C1B645F85F8642295C81FDCCA1E73B883BAA4
D4CBF158019B0D32919B3EFAB9552ABC4F146F3EAE77050AC53F619FEEA6F35E
3FB2BA5D18FCEADC9C3F929B0536AE7B9E898F6E89A428F0061BB529F3D57F35
DC2F21EF26B7768AFF1C80468551E8CFCCADFC33F1541D99FC1CFA1500B63800
BB140AF51784DA23C2D293B463F7362CF8BD96835E1994B92C425F5EC5C0895B
F338207739203CFCD3D9170C11677E7B7B1110033A2EC1525A0B5CA9D88F9EFF
4760CFC5A05DCD7D60AF734A7E0B9E6DAF2127F777B90423117C3D89DB62BA52
04206BADBC620D9D353CA72AB8EC4EF7DCF79718C2FA331D173A4A9C8F15C416
F36DC571593241DC07F64A09099C037DC751B030AFF791A5D72864886F3399E1
7FF66F75DE13E7E793609841F5970D8A19B949AFF044845F16B02CF4A09CE662
23E47185D49D3885E8228A699B6B2C80EC8232A87D029AC37BFE4CCB36A7FFB1
2F2C8EA35B1C3EEF38AE64C7F66DFE82274DD14AF5D9264ED3E1F628D739E85F
675F647AC198F23716276203AF0B56581777DD41440B005B4AF2D9DF46E1E5B3
ACC93F5EFFFDDE26578CE14CFA08A235925663563CC224734E0DA2BD1A95CF63
EB797EDA0F627B23515AE78D27629F432C4187D301FDA3AC9240BF40FAEB4E1D
1C5ECFA2D9E7E7F4E55B65D0E321E595EB171C0D689741D268DF4A83C70C66CD
781648A4AC9D6BDC391D37CAD04205DB5D7EC26F7B15CD11E87B7D3FD654E88F
AFC548522C61CA5DE3E1EC3C8F998F6395B6EBB017455681FA10A67EC1382813
5FE694E3A22BC91C1FFCA227294A0175420FF77321EAE9FEE14143654B53719F
32BE3B0C64DF068B39EB9AE425BC1B1EC9C52EAC03881F254D3F90B947B40240
70CAD0710EC30DADC38DFE51958E8F0268C190E4F6A9FCC5E5BAC6B75479DF10
660745688BD4CBF20090D4085F4B4F54B7F728980ECFB1E999F428BEE384B74B
983928F5944A5FF7D96F4144C37E7715A70ABD458507918C11DBB06A59099882
79C0D92F485704F6E35082520C3943C03F13AF0672532BD4FC91103071D67BD2
765B2D3E2804A6BA647900D8F28CCA596B3E9BA3657C28B1468906EE1B08DA20
8FE08B4C228D99DE7AB178B262826C4D49A4866A7AF98B308738CA5FBFA55ED7
E2E3FD565194C58CB41DC195A8E8E5AF26B76168C08181F7A1CB7B7BDAC1891C
BE9D279F00CF6E7F458383DE771660CDD56582DD79C77BD0256D6BE7F84FCAEF
D03164A91BEB1E4F5DBE906AB455E41208BBC2FC0C08AA4B3F8CD8524561C794
643A7808859624655F3247AC9330A516B9AAA304E7AD449213B6FEB65BEBCFF3
CB0656730B5B31B5E27C63042E780197E8BF8EE9166096765671337A00FBF316
73CED5FC0448F6DA8E88A071C91D3E7B6EDEBE7CA126873A9D833BB7B23659B5
366B3305EB0C55641D924056CD36EFB374AAC7AC6622078D241114A992D83A5C
56D43DA6D5C3ACD2C1407C928BB9A309EB1AF4A12428E1986BCC0A88CE23DA73
5CDC849A428AFEA6F6C04BB28A31331D763195CFDEC3E8ECA9360B5FF8ED0FDD
C63B6150726D1040D3D356D66543
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrschein)
@start /Fa 214[1328 15[1033 25[{ enclmmathsy ReEncodeFont }2
1328.35 /LMMathSymbols10-Regular rf /Fb 160[361 1[361
1[361 29[1012 1[361 1[650 650 650 650 650 650 650 650
650 650 4[1012 1[506 506 2[1084 37[{ enclmrm ReEncodeFont }19
1328.35 /LMRoman12-Regular rf /Fc 205[406 406 49[{
 enclmrm ReEncodeFont }2 664.176 /LMRoman6-Regular rf
/Fd 145[571 2[490 107[{ enclmmathit ReEncodeFont }2 885.568
/LMMathItalic8-Regular rf /Fe 143[653 4[676 44[1012 2[361
32[671 26[{ enclmmathit ReEncodeFont }5 1328.35 /LMMathItalic12-Regular
rf /Ff 168[1138 3[615 32[553 3[307 46[{ enclmec ReEncodeFont }4
1106.96 /LMRoman10-Regular rf /Fg 160[909 45[606 606
606 47[{ enclmec ReEncodeFont }4 1212.12 /LMRoman10-Regular
rf /Fh 200[470 470 470 470 470 470 470 470 48[{ enclmrm ReEncodeFont }8
885.568 /LMRoman8-Regular rf /Fi 203[993 1[993 50[{}2
1328.35 /wasy10 rf /Fj 242[1594 13[{ enclmmathsy ReEncodeFont }1
1594.02 /LMMathSymbols10-Regular rf /Fk 650 2[723 5[650
17[650 13[1012 91[578 1[686 939 686 723 506 513 506 1[723
650 723 1084 361 686 397 361 723 650 397 578 723 578
723 650 6[795 2[1336 975 975 939 723 957 1[885 1012 975
1192 813 1011 668 469 975 1021 849 885 993 1[921 975
1[614 4[361 650 650 650 650 650 650 650 650 650 650 1[361
434 361 2[506 506 6[361 4[723 759 8[613 1[613 16[{
 enclmec ReEncodeFont }73 1328.35 /LMRoman12-Regular
rf /Fl 1098 2[1196 23[1046 105[956 2[1554 1[1196 837
849 879 1[1196 1076 1196 1793 598 1136 1[598 1196 1076
658 982 1196 956 1196 1046 9[2223 2[1497 1196 1605 2[1616
1682 2041 1293 1685 1[801 1[1691 1353 1412 1[1554 1530
1625 8[1076 1076 1076 1076 1076 1076 1076 1076 1076 1076
598 717 45[{ enclmec ReEncodeFont }52 1912.83 /LMRoman12-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fl(WS)717
b(2.2)g(-)g(1)h(W)-60 b(\374rfelergebnisse)714 b(-)j(L)-179
b(T)717 b(-)g(BIFIE)p 0 TeXcolorgray -741 4800 a Fk(1.)p
0 TeXcolorgray 651 w(Zw)-36 b(ei)417 b(Spielw\374rfel)h(\(6)e(Seiten,)h
(b)36 b(esc)-36 b(hriftet)417 b(mit)f(1)i(bis)e(6)h(A)-36
b(ugen\))417 b(w)-36 b(erden)416 b(gew)-36 b(orfen)417
b(und)921 6792 y(die)433 b(A)-36 b(ugensumme)433 b(wird)h(ermittelt.)
921 9338 y(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36
b(k)g(en)358 b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357
b(Ankreuzen)g(der)h(jew)-36 b(eils)360 b(ric)-36 b(h)g(tigen)921
11330 y(Satzteile)434 b(so,)g(dass)g(eine)f(mathematisc)-36
b(h)434 b(k)-36 b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36
b(tsteh)g(t!)921 14820 y(Die)1111 b(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit,)1111 b(das)g(Ereignis)f(\022A)-36
b(ugensumme)1110 b(6\020)h(zu)f(w\374rfeln,)h(ist)p 921
16812 3150 45 v 4542 16764 a(1)4071 16812 y Fj(\015)p
5665 16812 V 3785 w Fk(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)636
b(das)f(Ereignis)h(\022A)-36 b(ugensumme)635 b(9\020)h(zu)g
(w\374rfeln,)874 18804 y(w)-36 b(eil)p 3728 18804 V 7350
18756 a(2)6878 18804 y Fj(\015)p 8472 18804 V 3583 w
Fk(.)p 0 TeXcolorgray 0 TeXcolorgray 921 20287 12064
45 v 921 23371 45 3085 v 6627 22068 a(1)6155 22116 y
Fj(\015)p 12940 23371 V 921 23415 12064 45 v 921 26675
45 3260 v 1629 25471 a Fk(gr\366\377er)435 b(als)f(die)p
10575 26675 V 1 0 0 TeXcolorrgb 11283 25377 a Fi(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 12940
26675 V 921 26719 12064 45 v 921 29978 45 3260 v 1629
28775 a Fk(kleiner)h(als)f(die)p 10575 29978 V 11283
28681 a Fi(2)p 12940 29978 V 921 30022 12064 45 v 921
33282 45 3260 v 1629 32078 a Fk(gleic)-36 b(h)435 b(der)p
10575 33282 V 11283 31984 a Fi(2)p 12940 33282 V 921
33326 12064 45 v 0 TeXcolorgray 0 TeXcolorgray 16663
20287 27170 45 v 16663 23371 45 3085 v 29922 22068 a
Fk(2)29450 22116 y Fj(\015)p 43788 23371 V 16663 23415
27170 45 v 16663 28470 45 5056 v 17371 25275 a Fk(6)f(kleiner)g(als)g
(9)g(ist)g(und)e(das)i(Ereignis)g(\022A)-36 b(u-)17371
27267 y(gensumme)433 b(6\020)h(somit)g(seltener)g(ein)-36
b(tritt)p 41422 28470 V 42131 26275 a Fi(2)p 43788 28470
V 16663 28515 27170 45 v 16663 33748 45 5234 v 17371
30553 a Fk(die)434 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)433
b(b)36 b(eide)433 b(Male)37545 30030 y Fh(5)p 37309 30243
941 45 v 37309 31011 a(36)17371 32545 y Fk(b)36 b(etr\344gt)p
41422 33748 45 5234 v 42131 31464 a Fi(2)p 43788 33748
V 16663 33793 27170 45 v 16663 40840 45 7047 v 17371
35653 a Fk(es)344 b(n)-36 b(ur)343 b(vier)i(M\366glic)-36
b(hk)g(eiten)345 b(gibt,)f(die)g(A)-36 b(ugen-)17371
37644 y(summe)332 b(\0229\020)h(zu)f(w\374rfeln,)g(ab)36
b(er)333 b(f\374nf)f(M\366glic)-36 b(h-)17371 39636 y(k)g(eiten,)434
b(die)g(A)-36 b(ugensumme)432 b(\0226\020)i(zu)g(w\374rfeln)p
41422 40840 V 1 0 0 TeXcolorrgb 42131 37648 a Fi(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 43788
40840 V 16663 40884 27170 45 v 47992 4800 a Fg(___/1)p
1 0 0 TeXcolorrgb 47905 6792 a Ff(WS)369 b(2.2)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 44912
54804 45 v 0 TeXcolorgray 24746 81281 a Fk(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fl(WS)717 b(2.2)g(-)g(2)h(Rei\377nagel)e(-)i
(O)-60 b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray -741 4800
a Fk(2.)p 0 TeXcolorgray 651 w(W)-108 b(enn)453 b(man)h(einen)f
(Rei\377nagel)j(fallen)f(l\344sst,)g(bleibt)e(dieser)h(auf)g(eine)g
(der)g(b)36 b(eiden)453 b(darge-)921 6792 y(stellten)434
b(Arten)e(liegen.)p 0 TeXcolorgray 0 TeXcolorgray 18911
13178 a
 currentpoint currentpoint translate 0.5215 0.5215 scale neg exch neg
exch translate
 18911 13178 a 19345 13178 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 151.90195 a add def
/d 0.0 a add neg def /h 69.71608 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 19345 13178 a 14120
2214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 -85.35823 56.90549 -85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 -56.90549 85.35823 -85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 183.79666 -43.50313 142.26372 -85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 185.49724 -86.01292 162.90645 -64.55528
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 36160 13178 a
currentpoint initclip moveto

36160 13178 a 18911 13178 a
 currentpoint currentpoint translate 1 0.5215 div 1 0.5215 div scale
neg exch neg exch translate
 18911 13178 a 921 17163 a
Fk(Besc)-36 b(hreib)36 b(e)492 b(eine)g(Metho)36 b(de,)492
b(wie)h(man)f(die)g(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)492
b(f\374r)g(die)g(b)36 b(eiden)492 b(F)-27 b(\344lle)921
19155 y(heraus\034nden)432 b(kann.)p 1 0 0 TeXcolorrgb
921 21700 a(Der)415 b(Rei\377nagel)h(wird)f(eine)g(b)36
b(estimm)-36 b(te)414 b(Anzahl)h(\(n-mal\))f(fallen)h(gelassen)h(und)d
(man)i(no-)921 23692 y(tiert,)463 b(wie)h(oft)g(er)f(auf)g(w)-36
b(elc)g(he)464 b(Art)f(zu)f(liegen)i(k)-36 b(omm)g(t.)464
b(W)-108 b(enn)462 b(er)h Fe(k)35118 23891 y Fh(1)36108
23692 y Fk(-mal)g(bzw.)h Fe(k)42841 23891 y Fh(2)43367
23692 y Fk(-mal)921 25684 y(auf)488 b(eine)g(b)36 b(estimm)-36
b(te)487 b(Art)g(zu)g(liegen)h(k)-36 b(omm)g(t,)488 b(dann)f(sind)g
(die)h(relativ)-36 b(en)488 b(H\344u\034gk)-36 b(eiten)1054
27153 y Fd(k)1544 27276 y Fc(1)p 1054 27366 952 45 v
1244 28134 a Fd(n)2590 27676 y Fk(und)5342 27153 y Fd(k)5832
27276 y Fc(2)p 5342 27366 V 5532 28134 a Fd(n)6878 27676
y Fk(N\344herungsw)g(erte)452 b(f\374r)f(die)h(gesuc)-36
b(h)g(ten)451 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eiten.)452
b(Je)g(\366fter)h(der)921 29668 y(Rei\377nagel)423 b(fallen)f(gelassen)
g(wird,)g(desto)f(zuv)-36 b(erl\344ssiger)423 b(ist)e(der)g(ermittelte)
h(N\344herungs-)874 31660 y(w)-36 b(ert.)921 36197 y(L\366sungssc)g
(hl\374ssel:)465 b(Die)i(A)-36 b(ufgab)36 b(e)466 b(gilt)g(b)36
b(ei)465 b(einer)h(sinngem\344\377)g(ric)-36 b(h)g(tigen)465
b(Erkl\344rung)h(als)921 38189 y(k)-36 b(orrekt)434 b(gel\366st.)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
4800 a Fg(___/1)p 1 0 0 TeXcolorrgb 47905 6792 a Ff(WS)369
b(2.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 41923 54804 45 v 0 TeXcolorgray 24746 81281 a Fk(2)p
0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fl(WS)717 b(2.2)g(-)g(3)h(A)-60
b(ugensumme)716 b(-)i(O)-60 b(A)717 b(-)h(BIFIE)p 0 TeXcolorgray
-741 4800 a Fk(3.)p 0 TeXcolorgray 651 w(Zw)-36 b(ei)445
b(herk)-36 b(\366mmlic)g(he)444 b(Spielw\374rfel)h(w)-36
b(erden)443 b(gew)-36 b(orfen)445 b(und)e(die)i(A)-36
b(ugensumme)443 b(wird)h(er-)921 6792 y(mittelt.)921
11330 y(Un)-36 b(tersuc)g(he,)677 b(w)-36 b(elc)g(hes)678
b(der)f(Ereignisse)h(\022A)-36 b(ugensumme)678 b(6\020)g(o)36
b(der)678 b(\022A)-36 b(ugensumme)677 b(9\020)874 13322
y(w)-36 b(ahrsc)g(heinlic)g(her)433 b(ist,)h(und)f(b)36
b(egr\374nden)432 b(deine)h(A)-36 b(ussage.)p 1 0 0 TeXcolorrgb
873 15867 a(A)g(ugensumme)432 b(6:)j Fb(\(1;)221 b(5\))p
Fe(;)g Fb(\(2;)g(4\))p Fe(;)g Fb(\(3;)g(3\))p Fe(;)g
Fb(\(4;)g(2\))p Fe(;)g Fb(\(5;)g(1\))376 b Fa(\))434
b Fk(5)g(M\366glic)-36 b(hk)g(eiten)873 18412 y(A)g(ugensumme)432
b(9:)j Fb(\(3;)221 b(6\))p Fe(;)g Fb(\(4;)g(5\))p Fe(;)g
Fb(\(5;)g(4\))p Fe(;)g Fb(\(6;)g(3\))375 b Fa(\))434
b Fk(4)f(M\366glic)-36 b(hk)g(eiten)675 20958 y(\022A)g(ugensumme)433
b(6\020)h(ist)g(w)-36 b(ahrsc)g(heinlic)g(her.)921 25495
y(o)36 b(der:)434 b Fe(p)p Fb(\()p Fk(A)-36 b(ugensumme)432
b(6)p Fb(\))369 b(=)16669 24972 y Fh(5)p 16434 25185
941 45 v 16434 25953 a(36)921 28040 y Fe(p)p Fb(\()p
Fk(A)-36 b(ugensumme)432 b(9)q Fb(\))368 b(=)13381 27517
y Fh(4)p 13146 27731 V 13146 28499 a(36)1289 30063 y(5)p
1054 30276 V 1054 31044 a(36)2497 30586 y Fe(>)4245 30063
y Fh(4)p 4010 30276 V 4010 31044 a(36)5453 30586 y Fa(\))434
b Fk(\022A)-36 b(ugensumme)432 b(6\020)i(ist)g(w)-36
b(ahrsc)g(heinlic)g(her.)921 35123 y(L\366sungssc)g(hl\374ssel:)617
b(Die)g(A)-36 b(ufgab)36 b(e)617 b(ist)f(k)-36 b(orrekt)617
b(gel\366st,)h(w)-36 b(enn)616 b(das)g(ric)-36 b(h)g(tige)617
b(Ergebnis)921 37115 y(angegeb)36 b(en)434 b(und)e(dieses)i(k)-36
b(orrekt)434 b(argumen)-36 b(tiert)433 b(wurde.)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4800
a Fg(___/1)p 1 0 0 TeXcolorrgb 47905 6792 a Ff(WS)369
b(2.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 40849 54804 45 v -2331 46277 a Fl(WS)687 b(2.2)g(-)g(4)g(Sc)-60
b(hie\377stand)686 b(-)h(O)-60 b(A)688 b(-)f(Matura)g(2014/15)g(-)h(K)
-60 b(omp)60 b(en-)-2331 49299 y(sationspr\374fung)p
0 TeXcolorgray -741 52606 a Fk(4.)p 0 TeXcolorgray 651
w(Ein)392 b(Sp)36 b(ortsc)-36 b(h)g(\374tze)390 b(sc)-36
b(hie\377t)392 b(innerhalb)f(einer)g(Min)-36 b(ute)391
b Fb(20)p Fk(-mal)i(auf)f(eine)g(Sc)-36 b(heib)36 b(e.)391
b(Dab)36 b(ei)921 54598 y(tri\033t)433 b(er)g(b)36 b(ei)434
b(den)f(ersten)g Fb(17)h Fk(Sc)-36 b(h)g(\374ssen)432
b Fb(4)p Fk(-mal)i(den)f(innersten)f(Ring)i(der)f(Zielsc)-36
b(heib)36 b(e.)921 57144 y(Bestimme)534 b(aufgrund)g(dieser)g(Daten)g
(einen)g(Sc)-36 b(h\344tzw)g(ert)533 b(f\374r)h(die)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit,)921 59136 y(dass)741
b(un)-36 b(ter)740 b(der)g(Annahme,)h(dass)g(sic)-36
b(h)741 b(die)h(V)-108 b(oraussetzungen)740 b(nic)-36
b(h)g(t)740 b(\344ndern,)h(der)921 61128 y(Sp)36 b(ortsc)-36
b(h)g(\374tze)432 b(b)36 b(eim)433 b(18.)i(Sc)-36 b(h)g(uss)432
b(wieder)i(den)f(innersten)f(Ring)i(der)f(Zielsc)-36
b(heib)36 b(e)434 b(tri\033t.)p 1 0 0 TeXcolorrgb 921
65665 a(Der)g(Sc)-36 b(h\344tzw)g(ert)433 b(f\374r)g(die)h(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit)433 b(b)36 b(etr\344gt)30254
65142 y Fh(4)p 30018 65355 941 45 v 30018 66123 a(17)31461
65665 y Fa(\031)369 b Fb(0)p Fe(;)p Fb(2353)i(=)e(23)p
Fe(;)p Fb(53)221 b(\045)874 67657 y Fk(T)-108 b(oleranzin)-36
b(terv)-72 b(all:)435 b Fb([)8 b(0)p Fe(;)p Fb(23;)221
b(0)p Fe(;)p Fb(24])437 b Fk(bzw.)d Fb([)8 b(23)221 b(\045;)g(24)g
(\045])p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 52606 a Fg(___/1)p 1 0 0 TeXcolorrgb 47905 54598
a Ff(WS)369 b(2.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 71464 54804 45 v 0 TeXcolorgray
24746 81281 a Fk(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fl(WS)951 b(2.2)h(-)h(5)f(W)-179
b(ahrsc)-60 b(heinlic)g(hk)g(eit)950 b(f\374r)h(eine)g(M\344dc)-60
b(hengeburt)951 b(-)-2331 4515 y(O)-60 b(A)718 b(-)g(Matura)f(2015/16)g
(-)g(Neb)60 b(en)-60 b(termin)716 b(1)p 0 TeXcolorgray
-741 7823 a Fk(5.)p 0 TeXcolorgray 651 w(Im)406 b(Jahr)f(2014)i(wurden)
d(in)h(\326sterreic)-36 b(h)405 b(42162)i(Bub)36 b(en)405
b(und)f(39560)j(M\344dc)-36 b(hen)404 b(geb)36 b(oren.)921
12360 y(Gib)474 b(anhand)f(dieser)i(Daten)f(einen)g(Sc)-36
b(h\344tzw)g(ert)474 b(f\374r)g(die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit)475 b(an,)f(dass)921 14352 y(ein)433
b(in)h(\326sterreic)-36 b(h)433 b(geb)36 b(orenes)433
b(Kind)h(ein)f(M\344dc)-36 b(hen)433 b(ist.)p 1 0 0 TeXcolorrgb
3591 16111 a Fb(39)221 b(560)p 1054 16700 8549 45 v 1054
17921 a(42)g(162)297 b(+)e(39)221 b(560)10104 17009 y
Fa(\031)369 b Fb(0)p Fe(;)p Fb(484)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7823 a Fg(___/1)p
1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 21498 54804 45 v -2331 26800 a Fl(WS)914
b(2.2)g(-)g(6)h(W)-179 b(eic)-60 b(he)913 b(und)g(harte)h(Eier)g(-)h(O)
-60 b(A)914 b(-)h(Matura)f(NT)g(2)-2439 29822 y(15/16)p
0 TeXcolorgray -741 33129 a Fk(6.)p 0 TeXcolorgray 651
w(Beim)524 b(F)-108 b(r\374hst\374c)-36 b(ksbu\033et)520
b(eines)k(Hotels)g(b)36 b(e\034nden)522 b(sic)-36 b(h)523
b(in)g(einem)h(K)-36 b(\366rb)36 b(c)-36 b(hen)522 b(zehn)h(\344u-)921
35121 y(\377erlic)-36 b(h)371 b(nic)-36 b(h)g(t)371 b(un)-36
b(tersc)g(heidbare)369 b(Eier.)j(Bei)f(der)g(V)-108 b(orb)36
b(ereitung)370 b(wurde)h(v)-36 b(ersehen)g(tlic)g(h)370
b(ein)921 37113 y(hart)433 b(gek)-36 b(o)36 b(c)-36 b(h)g(tes)434
b(Ei)g(zu)f(neun)g(w)-36 b(eic)g(h)433 b(gek)-36 b(o)36
b(c)-36 b(h)g(ten)434 b(Eiern)f(gelegt.)921 41650 y(Eine)601
b(Dame)h(en)-36 b(tnimm)g(t)601 b(aus)g(dem)g(no)36 b(c)-36
b(h)601 b(v)-36 b(ollen)602 b(K)-36 b(\366rb)36 b(c)-36
b(hen)601 b(ein)g(Ei,)h(das)g(sie)g(zuf\344llig)921 43642
y(ausw)-36 b(\344hlt.)550 b(Gib)e(die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit)549 b(an,)f(dass)h(der)f(n\344c)-36
b(hste)548 b(Gast)g(b)36 b(ei)548 b(zuf\344lliger)855
45634 y(W)-108 b(ahl)433 b(eines)h(Eies)g(das)f(harte)h(Ei)f(en)-36
b(tnimm)g(t.)p 1 0 0 TeXcolorrgb 921 48180 a(L\366sung:)6156
47657 y Fh(1)p 5920 47870 941 45 v 5920 48638 a(10)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47901
33129 a Fg(___/0)p 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 52113 54804 45
v 0 TeXcolorgray 24746 81281 a Fk(4)p 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fl(WS)699 b(2.2)h(-)g(7)f(Online-Gl\374c)-60
b(ksspiel)697 b(-)j(MC)h(-)f(Matura)f(NT)h(2)f(15/16)p
0 TeXcolorgray -741 4907 a Fk(7.)p 0 TeXcolorgray 651
w(Ein)717 b(Mann)g(spielt)h(\374b)36 b(er)717 b(einen)g(l\344ngeren)h
(Zeitraum)f(regelm\344\377ig)j(dasselb)36 b(e)717 b(Online-)921
6899 y(Gl\374c)-36 b(ksspiel)436 b(mit)h(k)-36 b(onstan)g(ter)436
b(Gewinn)-36 b(w)g(ahrsc)g(heinlic)g(hk)g(eit.)436 b(V)-108
b(on)435 b(768)j(Spielen)d(gewinn)-36 b(t)921 8891 y(er)433
b(162.)921 13428 y(Mit)400 b(w)-36 b(elc)g(her)400 b(ungef\344hren)f(W)
-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)400 b(wird)g(er)g(das)g(n\344c)
-36 b(hste)400 b(Spiel)f(gewinnen?)921 15973 y(Kreuze)433
b(den)g(zutre\033enden)f(Sc)-36 b(h\344tzw)g(ert)433
b(f\374r)g(diese)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)433
b(an.)p 19167 18674 8051 45 v 19167 21818 45 3145 v 19875
20615 a Fb(0)p Fe(;)p Fb(162)221 b(\045)p 24807 21818
V 27173 21818 V 19167 21862 8051 45 v 19167 25007 45
3145 v 19875 23803 a(4)p Fe(;)p Fb(74)g(\045)p 24807
25007 V 27173 25007 V 19167 25051 8051 45 v 19167 28195
45 3145 v 19875 26992 a(16)p Fe(;)p Fb(2)g(\045)p 24807
28195 V 27173 28195 V 19167 28239 8051 45 v 19167 31384
45 3145 v 19875 30181 a(21)p Fe(;)p Fb(1)g(\045)p 24807
31384 V 1 0 0 TeXcolorrgb 25516 30144 a Fi(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 27173 31384
V 19167 31428 8051 45 v 19167 34572 45 3145 v 19875 33369
a Fb(7)p Fe(;)p Fb(68)g(\045)p 24807 34572 V 27173 34572
V 19167 34617 8051 45 v 19167 37761 45 3145 v 19875 36558
a(76)p Fe(;)p Fb(6)g(\045)p 24807 37761 V 27173 37761
V 19167 37805 8051 45 v 47901 4907 a Fg(___/0)p 1 0 0
TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 41833 54804 45 v 0 TeXcolorgray 24746 81281 a Fk(5)p
0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fl(WS)811 b(2.2)h(-)g(8)f(Sc)-60
b(h\344tzw)g(ert)812 b(f\374r)f(eine)g(W)-179 b(ahrsc)-60
b(heinlic)g(hk)g(eit)809 b(-)j(O)-60 b(A)812 b(-)-2331
4515 y(Matura)717 b(NT)h(1)f(16/17)p 0 TeXcolorgray -741
7823 a Fk(8.)p 0 TeXcolorgray 651 w(In)290 b(einer)g(F)-108
b(abrik)291 b(wird)f(mithilfe)i(einer)e(Masc)-36 b(hine)290
b(ein)g(Pro)36 b(dukt)291 b(erzeugt,)f(v)-36 b(on)291
b(dem)f(jew)-36 b(eils)856 9815 y(100)434 b(St\374c)-36
b(k)433 b(in)h(eine)g(P)-36 b(ac)g(kung)433 b(k)-36 b(ommen.)921
12360 y(Im)518 b(Ansc)-36 b(hluss)518 b(an)g(eine)g(Neueinstellung)f
(der)h(Masc)-36 b(hine)518 b(w)-36 b(erden)517 b(drei)h(P)-36
b(ac)g(kungen)518 b(er-)921 14352 y(zeugt.)331 b(Diese)f(P)-36
b(ac)g(kungen)330 b(w)-36 b(erden)329 b(k)-36 b(on)g(trolliert)331
b(un)e(es)h(wird)g(die)g(jew)-36 b(eilige)332 b(Anzahl)e(darin)921
16344 y(en)-36 b(thaltener)481 b(defekter)h(St\374c)-36
b(k)g(e)481 b(ermittelt.)i(Die)f(Ergebnisse)g(dieser)g(K)-36
b(on)g(trollen)482 b(sind)f(in)921 18336 y(der)433 b(nac)-36
b(hstehenden)432 b(T)-108 b(ab)36 b(elle)434 b(zusammengefasst.)p
0 TeXcolorgray 0 TeXcolorgray 10751 20742 25317 45 v
10751 22733 45 1992 v 0.9 TeXcolorgray 10795 22733 14570
1992 v 0 TeXcolorgray 11459 22136 a(in)f(der)h(ersten)e(P)-36
b(ac)g(kung)p 25365 22733 45 1992 v 2197 w(6)434 b(defekte)g(St\374c)
-36 b(k)g(e)p 36022 22733 V 10751 22778 25317 45 v 10751
24770 45 1992 v 0.9 TeXcolorgray 10795 24770 14570 1992
v 0 TeXcolorgray 11459 24172 a(in)433 b(der)h(zw)-36
b(eiten)433 b(P)-36 b(ac)g(kung)p 25365 24770 45 1992
v 1373 w(3)434 b(defekte)g(St\374c)-36 b(k)g(e)p 36022
24770 V 10751 24814 25317 45 v 10751 26806 45 1992 v
0.9 TeXcolorgray 10795 26806 14570 1992 v 0 TeXcolorgray
11459 26208 a(in)433 b(der)h(dritten)e(P)-36 b(ac)g(kung)p
25365 26806 45 1992 v 1698 w(4)434 b(defekte)g(St\374c)-36
b(k)g(e)p 36022 26806 V 10751 26850 25317 45 v 921 29868
a(Die)384 b(F)-108 b(abriksleitung)384 b(b)36 b(en\366tigt)384
b(einen)f(auf)h(dem)f(v)-36 b(orliegenden)385 b(Datenmaterial)f(b)36
b(esieren-)921 31860 y(den)441 b(Sc)-36 b(h\344tzw)g(ert)441
b(f\374r)g(die)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)442
b Fe(\032)p Fk(,)f(dass)h(ein)g(v)-36 b(on)442 b(der)f(neu)g
(eingestellten)921 33852 y(Masc)-36 b(hine)433 b(erzeugte)h(St\374c)-36
b(k)433 b(fehlerhaft)h(ist.)921 36398 y(Gib)530 b(einen)h(m\366glic)-36
b(hst)531 b(zuv)-36 b(erl\344ssigen)532 b(Sc)-36 b(h\344tzw)g(ert)530
b(f\374r)h(die)f(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)531
b Fe(\032)g Fk(an,)921 38390 y(dass)434 b(ein)f(v)-36
b(on)434 b(der)f(neu)g(eingestellten)h(Masc)-36 b(hine)433
b(erzeugtes)g(St\374c)-36 b(k)433 b(fehlerhaft)h(ist!)921
40935 y Fe(\032)369 b Fb(=)p 1 0 0 TeXcolorrgb 433 w
Fe(\032)g Fb(=)6195 40412 y Fh(13)p 5959 40625 1412 45
v 5959 41393 a(300)7872 40935 y Fb(=)g(0)p Fe(;)p Fb(04)11709
40670 y(_)11564 40935 y(3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
874 43480 a Fk(T)-108 b(oleranzin)-36 b(terv)-72 b(all:)435
b Fb([)8 b(0)p Fe(;)p Fb(04;)221 b(0)p Fe(;)p Fb(05])437
b Fk(bzw.)d Fb([)8 b(4)221 b(\045;)g(5)g(\045])p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 7823 a Fg(___/1)p 1 0 0
TeXcolorrgb 47905 9815 a Ff(WS)369 b(2.2)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 47288 54804 45
v 0 TeXcolorgray 24746 81281 a Fk(6)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
